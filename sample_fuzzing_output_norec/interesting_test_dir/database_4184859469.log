-- Time: 2024/06/09 15:55:32
-- Database: database69
-- Database version: 3.40.0
-- seed value: 4184859469
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, detail=none); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 INT ); -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 TEXT ); -- 1ms;
PRAGMA legacy_file_format = false; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.05178366611133345 COLLATE NOCASE)<>((('897133789')||(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '542105941 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-167915982 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((json_array_length('542105941', ''))AND(((((x'b733')OR('<{')))AND(-208732541)))))AND((('\r') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 689927768 sz=689927768 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ ('Ez(阪j}H')))OR(('Bb)X窈' IN ()))))AND('542105941' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN x'8e98' THEN NULL WHEN 2135882776 THEN '2135882776' WHEN 'MW츲' THEN '-208732541' ELSE 0.4308050667984322 END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(NULLIF(DISTINCT 0.05178366611133345, 'MW츲')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1539081692'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-208732541 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (''))) BETWEEN ((6.89927768E8 IN (x''))) AND (((('!K')) NOT BETWEEN ((1506505779)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-95699196 sz=-627674194 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=700284791 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-95699196'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-627674194 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (((0.8378865835656925)) BETWEEN (('Ez(阪j}H')) AND ((0.05178366611133345))), (- (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-144057057 sz=80878291 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -259665258 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1467608190'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE ''  WHEN -627674194 THEN x'' END IN (((NULL) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '700284791 sz=542105941 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.15414634572922248; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1258872597 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2135882776 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2067951627 sz=1441311621 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 2 sz=-1626390276'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x''))=((0.9036118331188405)))))<((((NULL)<(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (-2.067951627E9))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('542105941')GLOB(x''))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT '775342909', ((((((((((((0.6043944815906692)AND(x'')))AND(0X7f4efc18)))OR(')T+muiQX')))OR(-259665258)))OR(NULL)))AND('542105941'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1001596820 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0xfffffffffc083859)OR('TRUE')))AND(x'')))>(((((x'')OR('(<G?dL')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1877226533 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT NULL))<=(((x'') NOT BETWEEN (x'') AND ('2V')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('1539081692' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1307535473 sz=-167915982 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-66570151 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1028545810 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-503791871 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.14306655131501322)IS('-144057057'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1372449514'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('vE6Ft 雵' COLLATE NOCASE)>=((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '897133789 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-971508025 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x63d08802)) BETWEEN (((NULL IN ()))) AND ((((0.05178366611133345)>('*?-w&-'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((((x'')OR(NULL)))AND(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-971508025 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'f5d8')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-917957196 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'da4a') NOT BETWEEN (0.8274694672878437) AND (x'8824')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=494681378'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1273370278 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '669979313 -1992609597 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 1041798698 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '61309802'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-124581057 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=380233636'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1422024013 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '301252145 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-9.71508025E8) BETWEEN ('-208732541') AND (0.5662738481635519)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE BINARY IN (CAST('1832524193' AS TEXT), '897133789')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1574626610 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2028361439 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.7481707571425747 COLLATE RTRIM AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -1676222797 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=1674610690 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'db58437f' IN (SQLITE_COMPILEOPTION_USED(')a8'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '542105941 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-548621199 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=534346363 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1230677716'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(DISTINCT NULL)) BETWEEN (CAST(x'' AS NUMERIC)) AND ((((0.20758681330756357, '1273370278', '1546035913')) BETWEEN ((NULL, NULL, x'87f4')) AND (('1568289273', x'3fe6', -1383667972))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=361015091 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')IS(((0.324186470654218)<('-1149083677')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1543981290 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN CASE WHEN -9.71508025E8 THEN '' END THEN CASE 7.75342909E8  WHEN NULL THEN NULL END WHEN ((((NULL)OR('-1543641028')))AND('-232743954')) THEN '-2112120568' WHEN (0.05178366611133345 IN ('-1422024013', '')) THEN CAST('' AS INTEGER) ELSE ((0.5662738481635519)>('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((0.14306655131501322)OR(0Xffffffffb10854a6)))OR('(]d')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-0.0)>>(x'b4b8')))==(((0.6813222682043801) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1353205240 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-124581057 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1098881360'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 sz=-426293596 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (+ ('882089258')), (~ ('(<G?dL'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1539081692 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) NOT BETWEEN ('-2130676059') AND ('&z')))OR((0Xffffffffd8328e8d IN ()))))OR(((211630164) IS FALSE))))AND(((0.25222528146190415)<=('')))))AND(CASE NULL  WHEN '0.5662738481635519' THEN x'8446' END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1422024013 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-894628883 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'3f5a') NOT BETWEEN (NULL) AND (0.6026968134088572)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1574137891 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, NULL, -66570151, NULL, '-426293596'))<=((NULL, '-1403664278', x'', x'', 'ꖊ1?jrO6'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1574626610'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS BLOB)  WHEN CASE WHEN 'W6#' THEN 0.9831542660659526 WHEN 0.27660729127209116 THEN 561929394 WHEN 0X2f6bf122 THEN x'3a40' END THEN ((0.03693153571298857)&('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1215149937'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((-1461486007 IN (6.69979313E8)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN NULL THEN NULL WHEN x'' THEN '1833714240' WHEN '\r彟\rf' THEN 'U	阪&%곮kd桱' ELSE '' END)OR(CASE WHEN 2071119544 THEN -1.383667972E9 WHEN 782837120 THEN x'' WHEN x'b0470363' THEN 'Fa.' ELSE '' END)))OR(x'4904' COLLATE BINARY)))OR(GLOB(0.324186470654218, '-1574626610'))))AND((('-1372449514') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=749134169 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-714047419 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0x5d938e84)OR(0.11677440435829145))  WHEN TYPEOF(DISTINCT '-2112120568') THEN LIKELIHOOD(0.625389499476826, 0.18178090795885427) WHEN COALESCE(x'', 1.041798698E9) THEN (NULL IN (NULL, NULL)) WHEN ((NULL) BETWEEN (-7.14047419E8) AND ('-88456422')) THEN TRIM('E.X]+}+N ', -1181999475) ELSE (('')%(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('?&[7')+(x'')))OR(UNICODE(NULL))))AND(CAST(0.35145990158180584 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TIME('-2003613840', '1436482879', 0.41802397772436173)) NOT BETWEEN (((1993336432)=(0.0868819059801158))) AND (((NULL)/('1539081692')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0xffffffff97531a03) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-2075975732 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((-1992609597)<('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.34714641163938487)) BETWEEN ((0.5589783682869096)) AND ((0.746964928203579))))/(json_object(NULL, x'9c61', NULL, '1562791611', NULL, '1833714240'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (0.1710625025468958)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN HEX(DISTINCT 0x60f41b09) THEN NULL WHEN CAST('fm)' AS NUMERIC) THEN (NULL IN (6.89927768E8, x'')) WHEN -627674194 THEN CASE NULL  WHEN x'82deabcf' THEN x'' WHEN NULL THEN '747775315' WHEN 0.6175156815416531 THEN 'w' WHEN '17424118' THEN '-971508025' WHEN 0.15323598976281572 THEN 0.35165171400982 END WHEN ((x'8aef')>(-259665258)) THEN ((x'b794') IS TRUE) WHEN 0.4836731086680478 COLLATE NOCASE THEN CASE 'h CsSV'  WHEN '' THEN 'mFF' ELSE '1568289273' END ELSE (NOT (0.2358290569381184)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8971382510225827)&('.z잹0s<ZS*')))OR((+ ('z-hNJ7~N6')))))AND(CASE WHEN 0.4171269628258545 THEN '' WHEN x'' THEN '' WHEN NULL THEN 0.6743392074210571 ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1230677716' AS INTEGER) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('>.N쁧4V*y')>('S䝰'))))<(((('(zB[霶t>')<<(0.35165171400982))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-714047419' THEN '-1676222797' END) NOT BETWEEN (((0.19290324079698318)IS NOT(-1.46760819E9))) AND (CASE NULL  WHEN 0X1d7c3d22 THEN NULL ELSE x'abc5' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1112633711 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-1858798238 AS REAL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1918358318'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'bfd8')OR(x''))  WHEN (0.0837645341834079 IN ()) THEN NULL WHEN (((((((('-1149083677')AND('0.8971382510225827')))OR(x'')))AND(NULL)))OR('775342909')) THEN ((x'') IS FALSE) WHEN (('1117308166')/(-1.877226533E9)) THEN ((('0.19290324079698318', x'4d9b', '&GwUeqG', x'', '-394684654'))=((x'fae4', 'Xi', '>픏p2⑉cm#', '-971508025', -1699375371))) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1275966101 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '615497893'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL))=((NULL))), (+ (x'')), 0.9797699157718891 COLLATE RTRIM))<=(((('700284791') NOT NULL), x'' COLLATE RTRIM, (((0.983025665071595, -1267840495, NULL)) BETWEEN (('0.20758681330756357', x'', 'G>4䋳')) AND ((0.8552079657526745, x'', x'')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((('-1122112339')AND('0.5589783682869096')))OR(1505639893)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)>>('Xi'))  WHEN '-1992609597' THEN 'smh5]*' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((')T+muiQX')) NOT BETWEEN ((((0.6606363112380645) BETWEEN ('-999464152') AND ('-2013190409')))) AND ((((0.6536080673026904)-(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '', 0xffffffffb4f720eb))<=(('㡔H\rI1', '-232743954', ''))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UNLIKELY(''))OR(LIKELY(DISTINCT NULL))))OR(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '917712514 307717632'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1447516790 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2112120568 sz=216302096 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (- (0xffffffffc3c07738)) THEN CASE WHEN x'3ac9' THEN '>픏P2⑉CM#' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=2063379622 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('OF<.4T/8', x'f9fb2a83', 0Xffffffffa9b266d9)) NOT BETWEEN (('1502295190', 0.6813222682043801, NULL)) AND ((x'', NULL, 0.729726940271162)))))<((((0xffffffffc55fb914)IS(0.44809231689670725))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1230677716'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.535341312234517 AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '994764181 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1375483473 sz=64635646 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1244488674 sz=-685046117 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1633138287 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR(x'9792')))AND(1826778590)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '322916753 700284791 sz=741141433'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-21655493'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1121205209 sz=-208732541'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1929804103'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT '?WuRv' COLLATE BINARY, x''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('-2144180562' AS REAL) THEN ('Osk/Y>}_딙' IN ()) WHEN COALESCE(DISTINCT '-661403068', x'') THEN x'' COLLATE BINARY WHEN ((NULL)IS('ꗪ땾5Z1')) THEN ((((((((0.23017862452970705)OR(x'')))AND('529928795')))AND(0.6169154925836392)))OR(NULL)) ELSE (NOT ('Zn&')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2090072827 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((0.8971382510225827 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=1569951364 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=766479967'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1265483833 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'') BETWEEN ('1546035913') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '782837120 sz=-593324587 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1130408986 sz=146202839'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN ('' COLLATE RTRIM) AND ((((x'3faa'))>=(('515618679'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-385333831 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-974630696'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1992609597 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffff9300eb4c)AND('^O')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-66181161 -780907997'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-426293596 0 sz=1131497674'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1303493090 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('') NOT BETWEEN (x'') AND (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TRIM(DISTINCT '-1028545810', NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE(x'', '\n)H4', 0.5589783682869096) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'' AS TEXT) THEN ((0.14564154451157652) ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1833714240 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1113643940 -929006995'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=2042242779 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE '-475910021'  WHEN x'74ec' THEN NULL WHEN -1.46760819E9 THEN 0.9748054967173327 WHEN 0Xffffffffe6dad71e THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-604080600 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1004312590 sz=-232743954 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (('-2112120568' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('374920628') BETWEEN (1826036634) AND ('338390644')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.25222528146190415 COLLATE NOCASE AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-124581057'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=708457575 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=943132666 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2133914737 -48210081 sz=-167915982 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1534325658'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=616785999 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=930939333 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2135882776 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-569063495'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=534346363 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1223519420 0 sz=-379742410 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((NULL)OR('2135882776')))OR('727442176')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1441311621 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=211630164 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1805349445 sz=-1098308058 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4171269628258545)*(0xfffffffff769dd1f COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>(-1e500)))LIKE(((NULL) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1670002509'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (-4.26293596E8)))>(((0.4341791645548888) BETWEEN (0.6743392074210571) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-169481011)OR(NULL)))OR(1e500)), CASE 0.2358290569381184  WHEN NULL THEN 1431696936 WHEN '61309802' THEN x'' WHEN '#Q2窈' THEN NULL END, CAST('-1479218967' AS BLOB)))>((CAST(NULL AS NUMERIC), CAST(0.9518988680557463 AS TEXT), ((0.8344416070021882)<<('{e>1'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('757867293' AS INTEGER) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1715674760 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1568289273 826106576 sz=485631929 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '144083853 sz=-1858798238'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1403664278 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=666060536 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1176338358 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-426293596')>=('-714047419')))+(((((((((x'')OR(x'')))AND(0.4132303495519921)))AND('-1137892443')))AND(0.4586722495908556)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1674610690 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((~ ('-116669429')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1258872597 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'v0GsZ論mP'''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.30247270606694654  WHEN x'bb74' THEN 1.112633711E9 END)AND((((('-1372449514')AND('0ukaE ')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT STRFTIME(78426730, x'491232cb', NULL, x'8f96', NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=9223372036854775807 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=502441529 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<=((x'aba8')))) NOT BETWEEN (((((x'0d8f')OR(NULL)))AND('-1992609597'))) AND (((NULL) BETWEEN (0xffffffff9f0f40fc) AND (0.5076856064928438)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1478989017 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1343502079 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((']ᬿlᦡj')) BETWEEN ((((((NULL)OR(x'd55f')))AND(0.35145990158180584)))) AND (((((x'')) BETWEEN ((0xffffffffc61fc334)) AND (('1017180072')))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=437171486 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('pIJ') IS TRUE)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-497859592'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '853218849 sz=824520608 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-163358381') NOT BETWEEN (NULL) AND (NULL)))LIKE((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=2135882776 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1653039790 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(json(-2.130676059E9) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=309870931'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1324854106 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 2071119544  WHEN '''NuRv' THEN 0.35145990158180584 WHEN NULL THEN x'6e13' WHEN 3.7707184857360687E-4 THEN 0.12097332068922251 WHEN 0.401964470770789 THEN 0.9833583932400292 WHEN x'' THEN '+ub' ELSE '-1992609597' END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-126830459 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (''))) BETWEEN ((('') ISNULL)) AND ((('0.25222528146190415') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1832524193 sz=1117308166 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=897133789 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS TEXT) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1273370278')AND(0.8166889027972838)))LIKE(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1977702849'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1098165486') BETWEEN ('-1877226533') AND ('1749602173')))AND(x'')))AND((NULL IN ('&Z')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0Xffffffffc92af1cf) NOTNULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1028545810 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-894628883')) BETWEEN ((((((x'53e3')OR('-1676222797')))AND(NULL)))) AND ((CAST(NULL AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote(((NULL) ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=793828310 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'332a') BETWEEN ('-1085082257') AND (x'')) AS INTEGER); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0xffffffff8b75bb34 THEN 0.7209859532944572 ELSE NULL END)OR(CAST(NULL AS NUMERIC))))AND(('0.30247270606694654' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=644839269 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=298823038 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1177151 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1467608190')!=(NULL))) NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1153713790 0 sz=823525335'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1626610441 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-539312025 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9059921404111807) BETWEEN (x'7f36') AND ('0.5662738481635519')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CAST(x'74e9' AS BLOB))) AND ((0.8729005537347821 COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '80878291 1766009953 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5774354488205985)LIKE('tb<穻㇤r')))AND(((x'') IS FALSE))))OR(((((x'')AND('-1406597167')))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1539081692 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1543005585)OR(1545871602)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1107299761 sz=783839244 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7991379281670806)>>(0.0868819059801158)) IN ((0.48888288803593327 IN (0.6000079767929983)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('GV' AS BLOB) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('') IS TRUE)  WHEN ((x'9a5b')|('514770143')) THEN ((NULL) BETWEEN ('0.6000079767929983') AND (0.08974375080580954)) ELSE CAST(x'3c79' AS BLOB) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1383667972'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1307535473 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2034130243 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.24270773553181424)) NOT BETWEEN ((0.3490720783802692)) AND ((x'afc7c46e'))))GLOB(UNLIKELY(0.7808823900775798))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF('s&+', NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2.672732247908094E-4 COLLATE RTRIM)AND(CAST(x'' AS REAL))))OR((('-2076341243')<<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2044093726 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1974821073 -1038040143'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1447516790 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)!=('a臓F''[P쬽''1'))  WHEN ((NULL) NOTNULL) THEN ((('1487870719'))>(('GV'))) ELSE CAST(NULL AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE NULL  WHEN '' THEN 0Xffffffffab6bec03 ELSE 0.5662738481635519 END THEN (+ (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-680134713 sz=380233636 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.27022995997387245) NOT BETWEEN (x'') AND (0.4328332169774983))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 -397423867 sz=374893288 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1299341107 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1562791611 sz=-999194345 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<(0.5724800270529103)))>((('1-500000') NOT BETWEEN ('R8a^->^.') AND (0.5646980284297751)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((0.6720169268347738) NOT BETWEEN (NULL) AND ('-1574626610')), ((((((((((((x'')OR(NULL)))OR('')))OR(x'')))OR(-860528347)))OR(NULL)))AND('-548621199'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=660227609 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 sz=-383691628 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=494681378'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-250105403 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-261822696 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(INSTR('', 0.8124296849157691)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=534346363 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1832524193 sz=-97784729 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1322555343 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2003613840 sz=-2003613840'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1117308166'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=303641084 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=834826821'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1555220626 0 sz=213202216 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-429849036 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, NULL, ''))<>((NULL, '-144057057', 'npR	y2]	+')))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-167915982 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('621298219' COLLATE NOCASE) NOT BETWEEN (0.9027054795897269) AND (((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((' <')) AND ((NULL)))) NOT BETWEEN (((NULL)<=(0.014262291574270058))) AND (((x'') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-714047419' COLLATE RTRIM  WHEN ((((((((0.04300845140292875)OR(-569063495)))AND(0Xffffffffdf4cb471)))AND(0.2977839676750138)))AND(x'')) THEN TYPEOF(DISTINCT x'') ELSE (x'' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1467608190 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(CAST(1829363931 AS REAL), (NOT ('1779063707'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-2003613840'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('7wc/|')AND('1552441175')))OR(NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=758366229'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((x'')||(0.6339547513212972)), ABS(0.7170793549397406)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE MIN(((NULL)>('-1977180575')), x''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1370799324 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -1791751275 0 sz=1206113032'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1578715667 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=321614223 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '681600765'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)!=(0.7307604847973518)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(NULL)) NOT BETWEEN (((0.1538416921474287)/('-292830887'))) AND (0.9986993282246008 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1211646708'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=464466042 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS REAL)  WHEN ((('0.6000079767929983')) BETWEEN (('766870126')) AND ((NULL))) THEN ((('pXktᦡ-')) BETWEEN ((x'')) AND (('藜f7iꮅܛAdq'))) WHEN (((1.546035913E9, '-2112120568', x'cd8e')) BETWEEN ((NULL, NULL, -1194350672)) AND (('-0.0', 'VcO煪5*?I|', '1975916353'))) THEN 0X3fefb963 WHEN ((7.95603234E8) IS FALSE) THEN (NULL IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1568289273'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=380233636 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1637923814 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1539081692'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 0 sz=-1751566594 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS BLOB)  WHEN 0.3207723284780477 THEN 0.9254650504279779 COLLATE BINARY ELSE ((((0.20145050776129947)OR(0.46038336022117987)))OR(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1728783999' AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 sz=-1088779102 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1998442170 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '361015091 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=2114176049'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1832524193 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-468723309 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1230677716') ISNULL)) BETWEEN ((((''))>=((x'')))) AND (((x'')/(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2068546936 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffad86e6fc COLLATE BINARY)=(((x'')<(x'b03e')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-484597737 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1993336432'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=534346363 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1253090812 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1403664278'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-167915982')*(0.6819147332183463)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((1213467744)AND('720093479')))OR(0X51176f16)))AND(x'')))OR(-1372449514)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-856731673 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1777000916 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 1626610441  WHEN '-1258872597' THEN NULL END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-569063495'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1855513365 -1858798238 sz=-1372449514 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL))==((0.7003121439816801))))OR((NULL IN ()))))OR(((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.37958071115900727)) BETWEEN ((((0xfffffffffdb79260) ISNULL))) AND ((((x'') BETWEEN (0.6743392074210571) AND (0x528874c4))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'' IN ()) THEN (('//z') IS TRUE) WHEN ((0.4787149185276339)%(x'')) THEN ((x'ae37')=(NULL)) WHEN (('0.23017862452970705') IS FALSE) THEN (('\rt') BETWEEN (NULL) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((1703961638) BETWEEN (0.6175156815416531) AND (NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=591434437 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('DI<忣f蠂\r~' AS NUMERIC) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1674610690 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=469080640 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=354388554 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1188853531'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2003613840'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=269172388 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1042790272'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '635575932 0 1362899472 sz=1128267686 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '|O'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-144057057 -1461486007 sz=-3664421'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=211630164'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '301252145'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1626610441 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=843695705 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')AND(NULL)))AND(NULL))) NOT BETWEEN (((0.056105388004535905)<=(NULL))) AND ((NOT (299998453)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY('1842278378'))||(UPPER('-1541130143'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=361015091 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-48210081'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7754206022540772, NULL, 0.4308050667984322)) BETWEEN (((((((((('[HF\n')OR('1739952151')))AND(0.39970234306488106)))AND(0.8170642058564863)))AND(x'c4ea')), ((x'') NOT BETWEEN (x'') AND (NULL)), (((0.20145050776129947, 0X2ca6e159, '0.3207723284780477')) NOT BETWEEN (('', '-1819601168', NULL)) AND ((NULL, 0x7600355a, -1.676222797E9))))) AND ((('201167375' IN (0.34714641163938487)), ((-7.14047419E8) BETWEEN ('-1635431224') AND (-1863233611)), HEX(DISTINCT '<HuIk9.')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-539312025 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3281977136628116; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1461953652 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-828213223 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.755779433097434)AND(NULL)))AND('Zq'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')!=('1506505779')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(0.29034967157270186))|(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1127362558'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1991686794'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.45462077100715426 COLLATE RTRIM) NOT BETWEEN (((NULL) NOT NULL)) AND ((((x'0cda')) BETWEEN ((x'')) AND ((x'a61c'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-897617396 2142550155 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=632140943 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-946016487 sz=-2037277742'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN '-1626390276' THEN NULL END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=494681378 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=108260648'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-124581057 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT IFNULL(NULL, '-48210081')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1992609597 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 704951883 sz=-627674194 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-2132447734 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((622917611)IS(x'd57eef82')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-651343060 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=361015091 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-73563666 COLLATE NOCASE IN (((x'')>=(0.8344416070021882)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=883405874'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1676222797 sz=-167915982 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2079626097 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1738582985 2 sz=-20957552 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.9833583932400292')GLOB(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC)) NOT BETWEEN (CASE WHEN 0X729c352b THEN 'x3^/HYZIQ' ELSE '/W㡙akr''' END) AND (((0xffffffffaf57ba08) NOT BETWEEN (0.11883441001213968) AND (0.1407619401713296)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1426327361'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1506505779'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-259665258 sz=1772432504'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '700284791 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1324854106 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0xffffffff84bd8ff5) ISNULL))AND(CAST(0.9549583410644349 AS REAL))))OR(CAST('80878291' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'6924') NOTNULL))*(CAST(8.82089258E8 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2127885595'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-712782901 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'a685' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1562791611'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-173129395 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 2 sz=1753956503 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2071119544 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)AND('576892991')))AND('Mvॡ')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-548621199 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=179991550 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1467608190 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '361015091 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=899129880 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.410731373293302 AS TEXT))&((NOT ('CH䛑/P(')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.43093901915841715, '-713279272')) NOT BETWEEN ((0.8017713969211925 COLLATE RTRIM, (~ (0X29bd7f77)), ((x'3257') NOT BETWEEN (x'0229') AND (0Xfffffffff157adff)))) AND (((((NULL))=(('c'))), ((x'') IS FALSE), (- (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((-920797044)OR(x'')))AND(x'')))AND(NULL)))AND(NULL)))AND((((-374269688)) NOT BETWEEN (('1948251630')) AND ((x''))))))AND((((NULL))<((NULL))))))OR(CASE WHEN 0xffffffffa3fde83c THEN x'' WHEN x'' THEN NULL WHEN '-1424266687' THEN -1.02854581E9 END)))AND(TYPEOF(DISTINCT x'23399b68d9a4'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=1910539925'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '897133789 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1310919824 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE('b	픊d0P!i*', NULL)) BETWEEN ('0.8166889027972838') AND (('-342169419' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '942532149 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN ((NOT (x''))) AND ((('-1959421398')>(x'353c')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=669979313 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1506505779 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-776701386 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1892074586 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('鯮K' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=80878291 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=558093107'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TRIM(NULL, x'') AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1518909114 sz=-2112120568 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 211630164 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=703759424 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((x'2292' IN ()))) AND ((UPPER(DISTINCT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(HEX(DISTINCT x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((((0Xd65a28e))!=((0xffffffff9f0f40fc)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN (((NULL) NOT BETWEEN (NULL) AND ('2028361439'))) AND (((NULL)<>(0.3207723284780477)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 0 sz=-1999277186 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-653054111 unordered'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1495236650 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1712087925'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('h cssv') NOTNULL))AND(0.2865440673295778)))OR(((((NULL)AND(0.5851566665923394)))AND(NULL)))))AND('-66719649' COLLATE BINARY)))AND(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(']ᬿlᦡj', x'')) BETWEEN ((((x'd237'))>(('1441831215')))) AND (((NULL)==(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1364651814'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-744925371 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'yu狫U('; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=980824485 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=11109715 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((2.071119544E9)OR('1041798698')))OR('-1403664278')) IN ((+ (NULL)), 863632042)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '135769795 sz=-1720206540 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9833583932400292 COLLATE BINARY)AND(x'')))AND(('' IN (-569063495)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('301252145' IN ()))<=(((x'') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1543981290'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (-6.67775347E8))) BETWEEN (LIKELIHOOD(DISTINCT '|Y', 0.19765533224516896)) AND (LIKELIHOOD(590598073, 0.14915228599889163))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-667775347 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(0.622521239156673))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1370847919'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR(NULL)))OR(NULL))) BETWEEN (((NULL)<<('669979313'))) AND (-1367565315 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5262617798173531; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1215149937 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3168078938704836 COLLATE RTRIM)>((('G\ny}gl1')-('1307535473')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=629793205 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1931613535') NOT BETWEEN (NULL) AND (NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=-2072883052 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME(('991649696' IN ('', x'dd92')), x'', CAST(NULL AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1626610441'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-718589027 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))OR(0.17665716199090675)))OR(((x'bc1b')<<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(x'')) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'1282') NOT NULL)  WHEN ((('882089258', x'', 0.5086743524894907))==((0.08550026667487287, '{8O', '''YS/\nk㽉O'))) THEN (((((((('UF7J')AND(0.36609439938523425)))OR(0.2191924092716322)))OR(x'5bf0b0b8')))AND(0.08669566550572205)) WHEN ((NULL) BETWEEN (0.5085225189024961) AND (0.0696721765919488)) THEN (('0.9833583932400292')LIKE('-714047419')) WHEN ((x'')=('1416501381')) THEN ((NULL) NOT BETWEEN (0.5991475114511259) AND (NULL)) ELSE (NOT ('gx躄zXbQ ')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-88456422 sz=-1269969925'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffe69746a4) IS TRUE) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1390038469 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=-162535348 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1574626610 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '610474585 -942412210 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN 'NaNPLFMJDv[r' THEN x'' WHEN '423673998' THEN '' WHEN 0Xffffffff893b30c3 THEN 'HX' END)OR(CASE WHEN x'f266' THEN x'' WHEN 0x3e666ece THEN 'Y6Z(' WHEN 0.41578833114819014 THEN NULL END)))OR(((0.23017862452970705)+(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKE('-232743954', x'') IN (x'' COLLATE BINARY, ((0.0976502513694344)IS(''',{}')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1974536778 sz=-1695771435 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=211630164 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1419154358 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=689927768 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '[A4n\rT%' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-543612758 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE NULL  WHEN 1 THEN '9#' ELSE 0.897781501078168 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS(DISTINCT NULL) AS TEXT); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '740884942 sz=380233636'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((380233636 COLLATE RTRIM) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 'O~V	%(i暰.' THEN NULL WHEN '' THEN 0.056105388004535905 WHEN x'1689' THEN -2.00361384E9 WHEN NULL THEN 0.11677440435829145 WHEN 0x3e18962a THEN 1 WHEN NULL THEN NULL WHEN 862428318 THEN 'mrU	l6' ELSE 'S7xv' END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-776082893 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ ('-208732541' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.2844169863452004)<<('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((('')) BETWEEN ((NULL)) AND (('-1258872597'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1042877401'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=356832174 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)-('wsDoEx>&i')))<(((x'') NOT BETWEEN (x'73f4') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.39245059946492755)IS NOT('' COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(('X>' IN ()) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1372449514'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(0.20246852813411187)))OR('1718716506')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1214560792 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-714047419'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-591432664'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=897133789 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=641844340 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')AND(0.021523970986496277)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(1533850343, ((NULL) IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-283614233 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-2053868916 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1706420952 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(x'55d0') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-917957196 sz=-1858798238'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1035709073 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '54414826 sz=1832524193 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'f29f')<(x'')))OR(CAST(NULL AS NUMERIC))))OR(((NULL)<>(0.18523879817082667)))))AND(CASE WHEN NULL THEN x'60c36184' WHEN '-324865600' THEN '-95699196' WHEN NULL THEN 0.6606363112380645 ELSE '-1858798238' END)))AND((('917341831') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1068084660 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1652334466 sz=-1049963876 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-35524406 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-71403093 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'd14b')AND(x'')))OR(0.6142776454733516)))||((NULL IN (669979313)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND(x'')))OR(0.7378716526974295)))OR(((NULL) ISNULL))))AND(CAST(0.9364710114349133 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 2.11630164E8  WHEN NULL THEN '' WHEN '61309802' THEN 0.05139244146484012 WHEN '1053865977' THEN x'' ELSE NULL END)OR(TOTAL_CHANGES())))OR((- (-2.08732541E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2130676059'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=534346363 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7712520024533326, 897133789, NULL)) BETWEEN (((~ (NULL)), ((x'')AND(NULL)), ((x'')IS(NULL)))) AND (((NOT (-2358283)), ((('yU', 0.579517462030013, x'7c58', NULL, '(zB[霶t>', 0.010727185697206099, NULL)) BETWEEN ((x'', 0x63d08802, NULL, '1436482879', NULL, '', 0.5281871854799162)) AND ((NULL, '356473635', 0Xfffffffffa4bbf04, '-88456422', 0.9950931011064622, '-95699196', NULL))), (NOT ('1562791611'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-2130676059 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-521326777 sz=1098165486'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-28726215 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-614887476 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (-52638972)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '704229250 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1407656050'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((NULL) NOT BETWEEN (NULL) AND (0.033565235793572956))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.795194876467128 AS BLOB) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1574241143'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 sz=469624926 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1098881360 0 sz=-1403286957 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-23074796 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=301252145 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1362566538 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.03693153571298857') BETWEEN (x'') AND (x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=392532610 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE '%|3e8'  WHEN NULL THEN NULL END)AND((('-714047419')IS NOT('1674610690')))))AND(((x'')*(0.9833583932400292)))))OR(((x'45cf')%('')))))AND(x'' COLLATE BINARY)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=695826649 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' COLLATE BINARY THEN '583443539' ELSE (((229680503, NULL, x'8273'))>=(('1777675872', x'd5dc3156', x''))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)+(1117308166)))IS NOT(((((-569063495)AND(x'')))OR(0xffffffffa796a40a)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1072295358 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-808422905 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c3, c0)=(x'', 0.7200158474743822, 0.6083149167200723); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2) VALUES (NULL, NULL), ('', NULL), ('1712373667', '~iPO(uj'), (0.7067025973661462, NULL), (0.6339547513212972, 7.00284791E8); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-630892160' WHERE rt0.c3; -- 0ms;
UPDATE vt0 SET (c0)=(0X72dd519f); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.26049977177498707, 0.461308095793323) WHERE (((- (vt0.c0)))GLOB((~ (vt0.c0)))); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.1383938463092077; -- 0ms;
UPDATE vt0 SET c0=8.97133789E8; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=NULL WHERE (((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)) IN ()); -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c1) VALUES ('霶Uz~', '361015091', 1964327454); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt1(c0, c3) VALUES (NULL, '|sdy㜘Z'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=-167915982 WHERE CAST((~ (vt0.c0)) AS NUMERIC); -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c3='2028361439'; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=3.01252145E8 WHERE vt0.c0; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'00de'; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0xc9d3854) WHERE ((((LOWER(vt0.c0))AND(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c0 COLLATE BINARY)); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=NULL WHERE ((((vt0.c0)|(vt0.c0))) NOT NULL); -- 1ms;
END; -- 0ms;
UPDATE vt0 SET c0='-1461486007' WHERE (((vt0.c0 IN ()))+(((vt0.c0)OR(vt0.c0)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.3715546665411573) NOT BETWEEN (x'') AND (NULL)))OR(json_patch('749134169', x''))))OR(((1809194829) NOT NULL))))AND(('-667775347' IN (0.4779735487852632)))))AND(NULL COLLATE BINARY)); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(0x50a4fce9); -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.03945750129129477; -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='{&ꙔO{V	g%', c0=x'df6a91c3'; -- 0ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt1 SET c0=x''; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c1, c0) VALUES ('137197732', '815493731', 0.7919244291860814); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c3) VALUES (NULL, '-1160354766', NULL), (x'', -2052768036, x''), ('M', x'', '584637248'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-366289795'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1833714240'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL); -- 0ms;
UPDATE OR FAIL rt1 SET c3=NULL, c1='' WHERE (((((~ (rt1.c2)))OR(((NULL)GLOB(rt1.c1)))))OR(CASE WHEN rt1.c2 THEN rt1.c2 END)); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(1.441311621E9, 'O3', NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
ANALYZE temp; -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL, c3=NULL, c2=0.05178366611133345 WHERE json_array_length(((rt0.c0) IS FALSE)); -- 0ms;
ANALYZE main; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ABS(rt0.c0) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)) ELSE ((vt0.c0)IS(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ABS(rt0.c0) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)) ELSE ((vt0.c0)IS(rt0.c3)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ABS(rt0.c0) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)) ELSE ((vt0.c0)IS(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ABS(rt0.c0) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)) ELSE ((vt0.c0)IS(rt0.c3)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ABS(rt0.c0) THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)) ELSE ((vt0.c0)IS(rt0.c3)) END);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (NULL) ORDER BY ((((NULL IN (rt0.c0))))<>((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((NULL IN (rt0.c0))))!=((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (NULL) ORDER BY ((((NULL IN (rt0.c0))))<>((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((NULL IN (rt0.c0))))!=((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (NULL) ORDER BY ((((NULL IN (rt0.c0))))<>((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)))))  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2)OR(((-1.461486007E9)AND(rt0.c2)))))AND(0.980905251659903)) WHERE ((((vt1.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2)OR(((-1.461486007E9)AND(rt0.c2)))))AND(0.980905251659903)));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2)OR(((-1.461486007E9)AND(rt0.c2)))))AND(0.980905251659903)) WHERE ((((vt1.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2)OR(((-1.461486007E9)AND(rt0.c2)))))AND(0.980905251659903)));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c2)OR(((-1.461486007E9)AND(rt0.c2)))))AND(0.980905251659903)) WHERE ((((vt1.c0 IN ())) IS FALSE));
SELECT ALL * FROM rt1, vt1, vt0 WHERE ((((vt0.c0)=(rt1.c2)) IN ())) ORDER BY ((rt1.c3) IS FALSE), (((ABS(rt1.c1), CAST(vt0.c0 AS NUMERIC), rt1.c2 COLLATE BINARY))==((((((NULL)AND(rt1.c0)))AND(rt1.c2)), ((vt0.c0)<=(rt1.c0)), (((vt1.c0))<>((vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)=(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((rt1.c3) IS FALSE), (((ABS(rt1.c1), CAST(vt0.c0 AS NUMERIC), rt1.c2 COLLATE BINARY))=((((((NULL)AND(rt1.c0)))AND(rt1.c2)), ((vt0.c0)<=(rt1.c0)), (((vt1.c0))!=((vt0.c0)))))) ASC);
SELECT ALL * FROM rt1, vt1, vt0 WHERE ((((vt0.c0)=(rt1.c2)) IN ())) ORDER BY ((rt1.c3) IS FALSE), (((ABS(rt1.c1), CAST(vt0.c0 AS NUMERIC), rt1.c2 COLLATE BINARY))==((((((NULL)AND(rt1.c0)))AND(rt1.c2)), ((vt0.c0)<=(rt1.c0)), (((vt1.c0))<>((vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)=(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((rt1.c3) IS FALSE), (((ABS(rt1.c1), CAST(vt0.c0 AS NUMERIC), rt1.c2 COLLATE BINARY))=((((((NULL)AND(rt1.c0)))AND(rt1.c2)), ((vt0.c0)<=(rt1.c0)), (((vt1.c0))!=((vt0.c0)))))) ASC);
SELECT ALL * FROM rt1, vt1, vt0 WHERE ((((vt0.c0)=(rt1.c2)) IN ())) ORDER BY ((rt1.c3) IS FALSE), (((ABS(rt1.c1), CAST(vt0.c0 AS NUMERIC), rt1.c2 COLLATE BINARY))==((((((NULL)AND(rt1.c0)))AND(rt1.c2)), ((vt0.c0)<=(rt1.c0)), (((vt1.c0))<>((vt0.c0)))))) ASC;
SELECT COUNT(*) FROM vt0, vt1, rt0, rt1 WHERE (((rt1.c0)&(((rt1.c0)<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)&(((rt1.c0)<(rt0.c3))))) IS TRUE)  as count FROM vt0, vt1, rt0, rt1);
SELECT COUNT(*) FROM vt0, vt1, rt0, rt1 WHERE (((rt1.c0)&(((rt1.c0)<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)&(((rt1.c0)<(rt0.c3))))) IS TRUE)  as count FROM vt0, vt1, rt0, rt1);
SELECT COUNT(*) FROM vt0, vt1, rt0, rt1 WHERE (((rt1.c0)&(((rt1.c0)<(rt0.c3)))));
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((vt0.c0)>=(rt0.c2)) IN (((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))))) ORDER BY (((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN (((- (NULL)), ((rt0.c2)|(vt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c1)<>(rt0.c2)), (~ (rt0.c3)), (((rt0.c2, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>=(rt0.c2)) IN (((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN (((- (NULL)), ((rt0.c2)|(vt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c1)<>(rt0.c2)), (~ (rt0.c3)), (((rt0.c2, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3)))))) DESC);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((vt0.c0)>=(rt0.c2)) IN (((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))))) ORDER BY (((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN (((- (NULL)), ((rt0.c2)|(vt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c1)<>(rt0.c2)), (~ (rt0.c3)), (((rt0.c2, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>=(rt0.c2)) IN (((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN (((- (NULL)), ((rt0.c2)|(vt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c1)<>(rt0.c2)), (~ (rt0.c3)), (((rt0.c2, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3)))))) DESC);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((vt0.c0)>=(rt0.c2)) IN (((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))))) ORDER BY (((rt0.c3, rt0.c3, rt0.c2)) NOT BETWEEN (((- (NULL)), ((rt0.c2)|(vt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c1)<>(rt0.c2)), (~ (rt0.c3)), (((rt0.c2, rt0.c2, NULL)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3)))))) DESC;
SELECT COUNT(*) FROM vt0, vt1, rt1, rt0 WHERE ((((((rt0.c0))<((vt1.c0)))) NOT BETWEEN ((+ (vt0.c0))) AND (CAST(rt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<((vt1.c0)))) NOT BETWEEN ((+ (vt0.c0))) AND (CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, rt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt1, rt0 WHERE ((((((rt0.c0))<((vt1.c0)))) NOT BETWEEN ((+ (vt0.c0))) AND (CAST(rt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<((vt1.c0)))) NOT BETWEEN ((+ (vt0.c0))) AND (CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, rt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt1, rt0 WHERE ((((((rt0.c0))<((vt1.c0)))) NOT BETWEEN ((+ (vt0.c0))) AND (CAST(rt1.c1 AS NUMERIC))));
SELECT * FROM rt1, vt1 WHERE (((((((rt1.c1) IS FALSE))AND(((rt1.c1)>(vt1.c0)))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt1.c0)))))) ORDER BY ((rt1.c2 IN ()) IN ()) DESC, rt1.c0 COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) IS FALSE))AND(((rt1.c1)>(vt1.c0)))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((rt1.c2 IN ()) IN ()) DESC, rt1.c0 COLLATE BINARY COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE (((((((rt1.c1) IS FALSE))AND(((rt1.c1)>(vt1.c0)))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt1.c0)))))) ORDER BY ((rt1.c2 IN ()) IN ()) DESC, rt1.c0 COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) IS FALSE))AND(((rt1.c1)>(vt1.c0)))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((rt1.c2 IN ()) IN ()) DESC, rt1.c0 COLLATE BINARY COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE (((((((rt1.c1) IS FALSE))AND(((rt1.c1)>(vt1.c0)))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt1.c0)))))) ORDER BY ((rt1.c2 IN ()) IN ()) DESC, rt1.c0 COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, vt1, vt0 WHERE ((((rt1.c0))<((((((vt0.c0)AND(vt0.c0)))AND(rt1.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<((((((vt0.c0)AND(vt0.c0)))AND(rt1.c3)))))) IS TRUE)  as count FROM rt1, rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1, vt0 WHERE ((((rt1.c0))<((((((vt0.c0)AND(vt0.c0)))AND(rt1.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<((((((vt0.c0)AND(vt0.c0)))AND(rt1.c3)))))) IS TRUE)  as count FROM rt1, rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1, vt0 WHERE ((((rt1.c0))<((((((vt0.c0)AND(vt0.c0)))AND(rt1.c3))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(rt0.c0))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c3)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c0))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c3)>>(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(rt0.c0))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c3)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c0))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c3)>>(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)*(rt0.c0))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c3)>>(rt0.c0)))));
SELECT * FROM rt0, rt1 WHERE ((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c2)))OR(rt0.c2))))<(('-581687985')))) ORDER BY CAST(((rt0.c1)==(rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c2)))OR(rt0.c2))))<(('-581687985')))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((rt0.c1)=(rt0.c1)) AS BLOB) ASC);
SELECT * FROM rt0, rt1 WHERE ((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c2)))OR(rt0.c2))))<(('-581687985')))) ORDER BY CAST(((rt0.c1)==(rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c2)))OR(rt0.c2))))<(('-581687985')))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((rt0.c1)=(rt0.c1)) AS BLOB) ASC);
SELECT * FROM rt0, rt1 WHERE ((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c2)))OR(rt0.c2))))<(('-581687985')))) ORDER BY CAST(((rt0.c1)==(rt0.c1)) AS BLOB) ASC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) BETWEEN (rt1.c0) AND ((vt0.c0 IN (rt1.c0)))) CROSS JOIN rt1 ON ((0.45730121971351856) BETWEEN (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c1 END) AND (SQLITE_VERSION())) INNER JOIN vt1 ON CASE WHEN CAST(rt1.c0 AS BLOB) THEN CASE rt0.c0  WHEN x'e2a5' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN x'' END WHEN UPPER(DISTINCT 0x72ac9c40) THEN ((0.2424984230079067) ISNULL) WHEN (- (rt0.c3)) THEN rt0.c0 END WHERE (x'68fe');
SELECT SUM(count) FROM (SELECT ((x'68fe') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) BETWEEN (rt1.c0) AND ((vt0.c0 IN (rt1.c0)))) CROSS JOIN rt1 ON ((0.45730121971351856) BETWEEN (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c1 END) AND (SQLITE_VERSION())) INNER JOIN vt1 ON CASE WHEN CAST(rt1.c0 AS BLOB) THEN CASE rt0.c0  WHEN x'e2a5' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN x'' END WHEN UPPER(DISTINCT 0X72ac9c40) THEN ((0.2424984230079067) ISNULL) WHEN (- (rt0.c3)) THEN rt0.c0 END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) BETWEEN (rt1.c0) AND ((vt0.c0 IN (rt1.c0)))) CROSS JOIN rt1 ON ((0.45730121971351856) BETWEEN (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c1 END) AND (SQLITE_VERSION())) INNER JOIN vt1 ON CASE WHEN CAST(rt1.c0 AS BLOB) THEN CASE rt0.c0  WHEN x'e2a5' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN x'' END WHEN UPPER(DISTINCT 0x72ac9c40) THEN ((0.2424984230079067) ISNULL) WHEN (- (rt0.c3)) THEN rt0.c0 END WHERE (x'68fe');
SELECT SUM(count) FROM (SELECT ((x'68fe') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) BETWEEN (rt1.c0) AND ((vt0.c0 IN (rt1.c0)))) CROSS JOIN rt1 ON ((0.45730121971351856) BETWEEN (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c1 END) AND (SQLITE_VERSION())) INNER JOIN vt1 ON CASE WHEN CAST(rt1.c0 AS BLOB) THEN CASE rt0.c0  WHEN x'e2a5' THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN x'' END WHEN UPPER(DISTINCT 0X72ac9c40) THEN ((0.2424984230079067) ISNULL) WHEN (- (rt0.c3)) THEN rt0.c0 END);
SELECT ALL * FROM vt1, rt0, rt1, vt0 WHERE (((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c2)))>=((NOT (rt1.c2))))) ORDER BY rt1.c0 COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c2)))>=((NOT (rt1.c2))))) IS TRUE)  as count FROM vt1, rt0, rt1, vt0 ORDER BY rt1.c0 COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, rt1, vt0 WHERE (((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c2)))>=((NOT (rt1.c2))))) ORDER BY rt1.c0 COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c2)))>=((NOT (rt1.c2))))) IS TRUE)  as count FROM vt1, rt0, rt1, vt0 ORDER BY rt1.c0 COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, rt1, vt0 WHERE (((((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c2)))>=((NOT (rt1.c2))))) ORDER BY rt1.c0 COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM rt1 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt1.c3)-(rt1.c3)) THEN rt1.c1 COLLATE NOCASE END WHERE (((((rt1.c0) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt1.c3)-(rt1.c3)) THEN rt1.c1 COLLATE NOCASE END);
SELECT * FROM rt1 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt1.c3)-(rt1.c3)) THEN rt1.c1 COLLATE NOCASE END WHERE (((((rt1.c0) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt1.c3)-(rt1.c3)) THEN rt1.c1 COLLATE NOCASE END);
SELECT * FROM rt1 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt1.c3)-(rt1.c3)) THEN rt1.c1 COLLATE NOCASE END WHERE (((((rt1.c0) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0, vt1, rt1 WHERE (CAST(((rt1.c0) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT ALL * FROM vt0, vt1, rt1 WHERE (CAST(((rt1.c0) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT ALL * FROM vt0, vt1, rt1 WHERE (CAST(((rt1.c0) ISNULL) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1, vt0 WHERE (((rt0.c2) IS TRUE)) ORDER BY ((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL) DESC, ((((rt0.c2) NOT BETWEEN (494681378) AND (rt0.c1))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((rt0.c3)-(rt0.c0)))) ASC, CAST(((rt0.c1) NOTNULL) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL) DESC, ((((rt0.c2) NOT BETWEEN (494681378) AND (rt0.c1))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((rt0.c3)-(rt0.c0)))) ASC, CAST(((rt0.c1) NOTNULL) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1, vt0 WHERE (((rt0.c2) IS TRUE)) ORDER BY ((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL) DESC, ((((rt0.c2) NOT BETWEEN (494681378) AND (rt0.c1))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((rt0.c3)-(rt0.c0)))) ASC, CAST(((rt0.c1) NOTNULL) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL) DESC, ((((rt0.c2) NOT BETWEEN (494681378) AND (rt0.c1))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((rt0.c3)-(rt0.c0)))) ASC, CAST(((rt0.c1) NOTNULL) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1, vt0 WHERE (((rt0.c2) IS TRUE)) ORDER BY ((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL) DESC, ((((rt0.c2) NOT BETWEEN (494681378) AND (rt0.c1))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((rt0.c3)-(rt0.c0)))) ASC, CAST(((rt0.c1) NOTNULL) AS INTEGER) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7351169105539409 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7351169105539409 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7351169105539409 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7351169105539409 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7351169105539409 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ('L0' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('L0' COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ('L0' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('L0' COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ('L0' COLLATE BINARY);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt1);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt1);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt1 WHERE (vt0.c0);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN (rt0.c1, rt0.c3)) IN ((((rt0.c2))>=((NULL))), ((rt0.c0) IS FALSE))) WHERE ((CAST(rt0.c2 AS BLOB) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END, ((('1436482879', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0)))))) ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2))))) AND ((rt0.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS BLOB) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END, ((('1436482879', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN (rt0.c1, rt0.c3)) IN ((((rt0.c2))>=((NULL))), ((rt0.c0) IS FALSE))) ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2))))) AND ((rt0.c3))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN (rt0.c1, rt0.c3)) IN ((((rt0.c2))>=((NULL))), ((rt0.c0) IS FALSE))) WHERE ((CAST(rt0.c2 AS BLOB) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END, ((('1436482879', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0)))))) ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2))))) AND ((rt0.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS BLOB) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END, ((('1436482879', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN (rt0.c1, rt0.c3)) IN ((((rt0.c2))>=((NULL))), ((rt0.c0) IS FALSE))) ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2))))) AND ((rt0.c3))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN (rt0.c1, rt0.c3)) IN ((((rt0.c2))>=((NULL))), ((rt0.c0) IS FALSE))) WHERE ((CAST(rt0.c2 AS BLOB) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END, ((('1436482879', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c0)))))) ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c0, rt0.c2))))) AND ((rt0.c3))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((ABS(rt0.c3)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c3)OR(rt0.c2)))AND(rt0.c3))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c3)+(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c3)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c3)OR(rt0.c2)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c3)+(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((ABS(rt0.c3)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c3)OR(rt0.c2)))AND(rt0.c3))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c3)+(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c3)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c3)OR(rt0.c2)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c3)+(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((ABS(rt0.c3)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c3)OR(rt0.c2)))AND(rt0.c3))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c3)+(rt0.c1))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULL WHERE (((((((vt0.c0)OR('587816454')))AND(vt0.c0))) BETWEEN (((vt1.c0)-(vt1.c0))) AND (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR('587816454')))AND(vt0.c0))) BETWEEN (((vt1.c0)-(vt1.c0))) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON NULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULL WHERE (((((((vt0.c0)OR('587816454')))AND(vt0.c0))) BETWEEN (((vt1.c0)-(vt1.c0))) AND (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR('587816454')))AND(vt0.c0))) BETWEEN (((vt1.c0)-(vt1.c0))) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON NULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULL WHERE (((((((vt0.c0)OR('587816454')))AND(vt0.c0))) BETWEEN (((vt1.c0)-(vt1.c0))) AND (((vt1.c0) IS TRUE))));
SELECT * FROM vt1, rt1, vt0 WHERE (((((((rt1.c0) NOT NULL))OR(CASE rt1.c1  WHEN vt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c2 END)))OR(((rt1.c3) IS TRUE)))) ORDER BY ((vt1.c0)OR(CAST(0.9339691744568397 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0) NOT NULL))OR(CASE rt1.c1  WHEN vt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c2 END)))OR(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY ((vt1.c0)OR(CAST(0.9339691744568397 AS TEXT))) ASC);
SELECT * FROM vt1, rt1, vt0 WHERE (((((((rt1.c0) NOT NULL))OR(CASE rt1.c1  WHEN vt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c2 END)))OR(((rt1.c3) IS TRUE)))) ORDER BY ((vt1.c0)OR(CAST(0.9339691744568397 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0) NOT NULL))OR(CASE rt1.c1  WHEN vt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c2 END)))OR(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY ((vt1.c0)OR(CAST(0.9339691744568397 AS TEXT))) ASC);
SELECT * FROM vt1, rt1, vt0 WHERE (((((((rt1.c0) NOT NULL))OR(CASE rt1.c1  WHEN vt1.c0 THEN vt0.c0 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c2 END)))OR(((rt1.c3) IS TRUE)))) ORDER BY ((vt1.c0)OR(CAST(0.9339691744568397 AS TEXT))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))-(rtreenode(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0)))-(rtreenode(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))-(rtreenode(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0)))-(rtreenode(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))-(rtreenode(vt0.c0, vt0.c0))));
SELECT * FROM rt1, vt0, vt1, rt0 WHERE (CAST(0.12541584827790675 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(0.12541584827790675 AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT * FROM rt1, vt0, vt1, rt0 WHERE (CAST(0.12541584827790675 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(0.12541584827790675 AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, vt1, rt0);
SELECT * FROM rt1, vt0, vt1, rt0 WHERE (CAST(0.12541584827790675 AS INTEGER));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((CAST(rt0.c3 AS NUMERIC))>(rt0.c2))) ORDER BY ((((rt0.c2)>>(rt0.c3))) NOT BETWEEN ((((rt0.c1, vt0.c0, rt0.c3, rt0.c2, 0.06374986053851328))<(('', vt0.c0, rt0.c1, vt0.c0, rt0.c3)))) AND (((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC))>(rt0.c2))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c2)>>(rt0.c3))) NOT BETWEEN ((((rt0.c1, vt0.c0, rt0.c3, rt0.c2, 0.06374986053851328))<(('', vt0.c0, rt0.c1, vt0.c0, rt0.c3)))) AND (((rt0.c2) IS FALSE))));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((CAST(rt0.c3 AS NUMERIC))>(rt0.c2))) ORDER BY ((((rt0.c2)>>(rt0.c3))) NOT BETWEEN ((((rt0.c1, vt0.c0, rt0.c3, rt0.c2, 0.06374986053851328))<(('', vt0.c0, rt0.c1, vt0.c0, rt0.c3)))) AND (((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC))>(rt0.c2))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c2)>>(rt0.c3))) NOT BETWEEN ((((rt0.c1, vt0.c0, rt0.c3, rt0.c2, 0.06374986053851328))<(('', vt0.c0, rt0.c1, vt0.c0, rt0.c3)))) AND (((rt0.c2) IS FALSE))));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((CAST(rt0.c3 AS NUMERIC))>(rt0.c2))) ORDER BY ((((rt0.c2)>>(rt0.c3))) NOT BETWEEN ((((rt0.c1, vt0.c0, rt0.c3, rt0.c2, 0.06374986053851328))<(('', vt0.c0, rt0.c1, vt0.c0, rt0.c3)))) AND (((rt0.c2) IS FALSE)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON (((0.992417499315473, vt0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (rt0.c0 IN ()), (x'' IN (rt0.c3, vt0.c0)))) AND ((CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c1 END, CAST(rt0.c1 AS TEXT), CAST(rt1.c2 AS TEXT)))) CROSS JOIN vt0 ON ((((((rt1.c0)AND(rt0.c0)))OR(vt0.c0))) NOT BETWEEN ('-426293596') AND (((rt1.c0)/(rt0.c2)))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c1) ISNULL) END WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON (((0.992417499315473, vt0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (rt0.c0 IN ()), (x'' IN (rt0.c3, vt0.c0)))) AND ((CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c1 END, CAST(rt0.c1 AS TEXT), CAST(rt1.c2 AS TEXT)))) CROSS JOIN vt0 ON ((((((rt1.c0)AND(rt0.c0)))OR(vt0.c0))) NOT BETWEEN ('-426293596') AND (((rt1.c0)/(rt0.c2)))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c1) ISNULL) END);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON (((0.992417499315473, vt0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (rt0.c0 IN ()), (x'' IN (rt0.c3, vt0.c0)))) AND ((CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c1 END, CAST(rt0.c1 AS TEXT), CAST(rt1.c2 AS TEXT)))) CROSS JOIN vt0 ON ((((((rt1.c0)AND(rt0.c0)))OR(vt0.c0))) NOT BETWEEN ('-426293596') AND (((rt1.c0)/(rt0.c2)))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c1) ISNULL) END WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON (((0.992417499315473, vt0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (rt0.c0 IN ()), (x'' IN (rt0.c3, vt0.c0)))) AND ((CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c1 END, CAST(rt0.c1 AS TEXT), CAST(rt1.c2 AS TEXT)))) CROSS JOIN vt0 ON ((((((rt1.c0)AND(rt0.c0)))OR(vt0.c0))) NOT BETWEEN ('-426293596') AND (((rt1.c0)/(rt0.c2)))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c1) ISNULL) END);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((rt1.c3) BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY) ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN (+ (rt0.c0)) THEN ((rt1.c1)<<(vt0.c0)) END, rt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN (+ (rt0.c0)) THEN ((rt1.c1)<<(vt0.c0)) END, rt1.c0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((rt1.c3) BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY) ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN (+ (rt0.c0)) THEN ((rt1.c1)<<(vt0.c0)) END, rt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN (+ (rt0.c0)) THEN ((rt1.c1)<<(vt0.c0)) END, rt1.c0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((rt1.c3) BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY) ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN (+ (rt0.c0)) THEN ((rt1.c1)<<(vt0.c0)) END, rt1.c0;
SELECT * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ()));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY x'' ASC;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CAST(LOWER(vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(vt0.c0) AS REAL)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CAST(LOWER(vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(vt0.c0) AS REAL)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CAST(LOWER(vt0.c0) AS REAL));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((NOT ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c2 IN ())))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((NOT ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c2 IN ())))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((NOT ((rt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END) NOTNULL));
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 END) AND ((+ (vt1.c0)))) WHERE (CAST(CASE x'a538'  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER)) ORDER BY ((rt0.c2) IS FALSE) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE x'a538'  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 END) AND ((+ (vt1.c0)))) ORDER BY ((rt0.c2) IS FALSE) COLLATE RTRIM);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 END) AND ((+ (vt1.c0)))) WHERE (CAST(CASE x'a538'  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER)) ORDER BY ((rt0.c2) IS FALSE) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE x'a538'  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 END) AND ((+ (vt1.c0)))) ORDER BY ((rt0.c2) IS FALSE) COLLATE RTRIM);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 END) AND ((+ (vt1.c0)))) WHERE (CAST(CASE x'a538'  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END AS INTEGER)) ORDER BY ((rt0.c2) IS FALSE) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt1, vt0, rt0 WHERE ((((rt1.c0) IS TRUE) IN ())) ORDER BY (((rt1.c3)) BETWEEN ((((rt0.c3)OR(vt1.c0)))) AND ((((('', vt1.c0, rt1.c0))==((x'', rt1.c0, rt0.c2)))))), CAST(CASE WHEN vt1.c0 THEN 0.44809231689670725 ELSE rt0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1, rt1, vt0, rt0 ORDER BY (((rt1.c3)) BETWEEN ((((rt0.c3)OR(vt1.c0)))) AND ((((('', vt1.c0, rt1.c0))==((x'', rt1.c0, rt0.c2)))))), CAST(CASE WHEN vt1.c0 THEN 0.44809231689670725 ELSE rt0.c0 END AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt1, vt0, rt0 WHERE ((((rt1.c0) IS TRUE) IN ())) ORDER BY (((rt1.c3)) BETWEEN ((((rt0.c3)OR(vt1.c0)))) AND ((((('', vt1.c0, rt1.c0))==((x'', rt1.c0, rt0.c2)))))), CAST(CASE WHEN vt1.c0 THEN 0.44809231689670725 ELSE rt0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1, rt1, vt0, rt0 ORDER BY (((rt1.c3)) BETWEEN ((((rt0.c3)OR(vt1.c0)))) AND ((((('', vt1.c0, rt1.c0))==((x'', rt1.c0, rt0.c2)))))), CAST(CASE WHEN vt1.c0 THEN 0.44809231689670725 ELSE rt0.c0 END AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt1, vt0, rt0 WHERE ((((rt1.c0) IS TRUE) IN ())) ORDER BY (((rt1.c3)) BETWEEN ((((rt0.c3)OR(vt1.c0)))) AND ((((('', vt1.c0, rt1.c0))==((x'', rt1.c0, rt0.c2)))))), CAST(CASE WHEN vt1.c0 THEN 0.44809231689670725 ELSE rt0.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM vt0, rt1, rt0, vt1 WHERE ((((((rt0.c3, rt1.c3, vt0.c0)) BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c3, rt1.c1, rt1.c3))))/(((((vt0.c0)AND(rt1.c0)))AND(rt0.c0))))) ORDER BY 'e+', ((((((rt1.c2)<('tb<穻㇤r')))AND(NULLIF(DISTINCT rt0.c2, rt1.c3))))AND(STRFTIME(rt1.c3, rt1.c2, vt0.c0))), CAST(((((vt1.c0)OR(rt1.c2)))AND(rt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt1.c3, vt0.c0)) BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c3, rt1.c1, rt1.c3))))/(((((vt0.c0)AND(rt1.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY 'e+', ((((((rt1.c2)<('tb<穻㇤r')))AND(NULLIF(DISTINCT rt0.c2, rt1.c3))))AND(STRFTIME(rt1.c3, rt1.c2, vt0.c0))), CAST(((((vt1.c0)OR(rt1.c2)))AND(rt1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0, rt1, rt0, vt1 WHERE ((((((rt0.c3, rt1.c3, vt0.c0)) BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c3, rt1.c1, rt1.c3))))/(((((vt0.c0)AND(rt1.c0)))AND(rt0.c0))))) ORDER BY 'e+', ((((((rt1.c2)<('tb<穻㇤r')))AND(NULLIF(DISTINCT rt0.c2, rt1.c3))))AND(STRFTIME(rt1.c3, rt1.c2, vt0.c0))), CAST(((((vt1.c0)OR(rt1.c2)))AND(rt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt1.c3, vt0.c0)) BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c3, rt1.c1, rt1.c3))))/(((((vt0.c0)AND(rt1.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY 'e+', ((((((rt1.c2)<('tb<穻㇤r')))AND(NULLIF(DISTINCT rt0.c2, rt1.c3))))AND(STRFTIME(rt1.c3, rt1.c2, vt0.c0))), CAST(((((vt1.c0)OR(rt1.c2)))AND(rt1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0, rt1, rt0, vt1 WHERE ((((((rt0.c3, rt1.c3, vt0.c0)) BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c3, rt1.c1, rt1.c3))))/(((((vt0.c0)AND(rt1.c0)))AND(rt0.c0))))) ORDER BY 'e+', ((((((rt1.c2)<('tb<穻㇤r')))AND(NULLIF(DISTINCT rt0.c2, rt1.c3))))AND(STRFTIME(rt1.c3, rt1.c2, vt0.c0))), CAST(((((vt1.c0)OR(rt1.c2)))AND(rt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((0.014262291574270058, ((vt0.c0)|(vt0.c0)), vt0.c0))<(((+ (vt0.c0)), x'' COLLATE RTRIM, CAST(vt0.c0 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((0.014262291574270058, ((vt0.c0)|(vt0.c0)), vt0.c0))<(((+ (vt0.c0)), x'' COLLATE RTRIM, CAST(vt0.c0 AS REAL)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((0.014262291574270058, ((vt0.c0)|(vt0.c0)), vt0.c0))<(((+ (vt0.c0)), x'' COLLATE RTRIM, CAST(vt0.c0 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((0.014262291574270058, ((vt0.c0)|(vt0.c0)), vt0.c0))<(((+ (vt0.c0)), x'' COLLATE RTRIM, CAST(vt0.c0 AS REAL)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((0.014262291574270058, ((vt0.c0)|(vt0.c0)), vt0.c0))<(((+ (vt0.c0)), x'' COLLATE RTRIM, CAST(vt0.c0 AS REAL)))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON 0.010538189405189802 WHERE (((((((x'')OR(vt1.c0)))OR(rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((x'')OR(vt1.c0)))OR(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON 0.010538189405189802);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON 0.010538189405189802 WHERE (((((((x'')OR(vt1.c0)))OR(rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((x'')OR(vt1.c0)))OR(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON 0.010538189405189802);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON 0.010538189405189802 WHERE (((((((x'')OR(vt1.c0)))OR(rt0.c3))) IS FALSE));
SELECT * FROM vt0, rt1, rt0 WHERE ((PRINTF(rt0.c2, rt1.c2, rt1.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((PRINTF(rt0.c2, rt1.c2, rt1.c2) IN ())) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE ((PRINTF(rt0.c2, rt1.c2, rt1.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((PRINTF(rt0.c2, rt1.c2, rt1.c2) IN ())) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE ((PRINTF(rt0.c2, rt1.c2, rt1.c2) IN ()));
SELECT COUNT(*) FROM rt0, vt0, vt1, rt1 WHERE ((- (LIKELIHOOD(')KZ0pt', 0.7487604678146895))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(')KZ0pt', 0.7487604678146895)))) IS TRUE)  as count FROM rt0, vt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt0, vt1, rt1 WHERE ((- (LIKELIHOOD(')KZ0pt', 0.7487604678146895))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(')KZ0pt', 0.7487604678146895)))) IS TRUE)  as count FROM rt0, vt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt0, vt1, rt1 WHERE ((- (LIKELIHOOD(')KZ0pt', 0.7487604678146895))));
SELECT * FROM rt1, vt1, rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ()));
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)) ELSE (NOT (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)) ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)) ELSE (NOT (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)) ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3) NOTNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)) ELSE (NOT (rt0.c2)) END);
SELECT * FROM rt0, rt1 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (CAST(0xffffffffecf508b4 AS INTEGER)) AND ((rt0.c2 IN ())))) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE) BETWEEN (CAST(0Xffffffffecf508b4 AS INTEGER)) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c3);
SELECT * FROM rt0, rt1 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (CAST(0xffffffffecf508b4 AS INTEGER)) AND ((rt0.c2 IN ())))) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE) BETWEEN (CAST(0Xffffffffecf508b4 AS INTEGER)) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c3);
SELECT * FROM rt0, rt1 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (CAST(0xffffffffecf508b4 AS INTEGER)) AND ((rt0.c2 IN ())))) ORDER BY rt1.c3;
SELECT ALL COUNT(*) FROM vt1, rt1 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((+ (vt1.c0))) AND (rt0.c1 COLLATE RTRIM)) FULL OUTER JOIN vt0 ON CASE rt1.c1  WHEN CAST(NULL AS NUMERIC) THEN (+ (rt1.c1)) ELSE rt0.c0 END WHERE (((- (vt1.c0)) IN (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt1 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((+ (vt1.c0))) AND (rt0.c1 COLLATE RTRIM)) FULL OUTER JOIN vt0 ON CASE rt1.c1  WHEN CAST(NULL AS NUMERIC) THEN (+ (rt1.c1)) ELSE rt0.c0 END);
SELECT ALL COUNT(*) FROM vt1, rt1 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((+ (vt1.c0))) AND (rt0.c1 COLLATE RTRIM)) FULL OUTER JOIN vt0 ON CASE rt1.c1  WHEN CAST(NULL AS NUMERIC) THEN (+ (rt1.c1)) ELSE rt0.c0 END WHERE (((- (vt1.c0)) IN (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt1 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((+ (vt1.c0))) AND (rt0.c1 COLLATE RTRIM)) FULL OUTER JOIN vt0 ON CASE rt1.c1  WHEN CAST(NULL AS NUMERIC) THEN (+ (rt1.c1)) ELSE rt0.c0 END);
SELECT ALL COUNT(*) FROM vt1, rt1 FULL OUTER JOIN rt0 ON (((rt0.c0 IN ())) NOT BETWEEN ((+ (vt1.c0))) AND (rt0.c1 COLLATE RTRIM)) FULL OUTER JOIN vt0 ON CASE rt1.c1  WHEN CAST(NULL AS NUMERIC) THEN (+ (rt1.c1)) ELSE rt0.c0 END WHERE (((- (vt1.c0)) IN (rt1.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (((((GLOB(vt0.c0, vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(0.8056040879293093))) ORDER BY (((vt0.c0)) BETWEEN ((CASE 0.735107693666455  WHEN vt0.c0 THEN vt0.c0 END)) AND ((RTRIM(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((GLOB(vt0.c0, vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(0.8056040879293093))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE 0.735107693666455  WHEN vt0.c0 THEN vt0.c0 END)) AND ((RTRIM(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((GLOB(vt0.c0, vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(0.8056040879293093))) ORDER BY (((vt0.c0)) BETWEEN ((CASE 0.735107693666455  WHEN vt0.c0 THEN vt0.c0 END)) AND ((RTRIM(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((GLOB(vt0.c0, vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(0.8056040879293093))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE 0.735107693666455  WHEN vt0.c0 THEN vt0.c0 END)) AND ((RTRIM(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((GLOB(vt0.c0, vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(0.8056040879293093))) ORDER BY (((vt0.c0)) BETWEEN ((CASE 0.735107693666455  WHEN vt0.c0 THEN vt0.c0 END)) AND ((RTRIM(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt1, vt1, rt0 WHERE (TYPEOF(((rt1.c1)<=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt1.c1)<=(rt0.c2)))) IS TRUE)  as count FROM vt0, rt1, vt1, rt0);
SELECT ALL * FROM vt0, rt1, vt1, rt0 WHERE (TYPEOF(((rt1.c1)<=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt1.c1)<=(rt0.c2)))) IS TRUE)  as count FROM vt0, rt1, vt1, rt0);
SELECT ALL * FROM vt0, rt1, vt1, rt0 WHERE (TYPEOF(((rt1.c1)<=(rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((CASE WHEN rt0.c0 THEN rt0.c3 END)OR(CAST(rt0.c0 AS REAL))))AND((rt0.c1 IN (rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN 0.04420322749289085 THEN rt0.c3 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 0.6913468883336062 WHEN rt0.c0 THEN 0.6635934287874868 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c0 THEN rt0.c3 END)OR(CAST(rt0.c0 AS REAL))))AND((rt0.c1 IN (rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN 0.04420322749289085 THEN rt0.c3 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 0.6913468883336062 WHEN rt0.c0 THEN 0.6635934287874868 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE NULL END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((CASE WHEN rt0.c0 THEN rt0.c3 END)OR(CAST(rt0.c0 AS REAL))))AND((rt0.c1 IN (rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN 0.04420322749289085 THEN rt0.c3 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 0.6913468883336062 WHEN rt0.c0 THEN 0.6635934287874868 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c0 THEN rt0.c3 END)OR(CAST(rt0.c0 AS REAL))))AND((rt0.c1 IN (rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN 0.04420322749289085 THEN rt0.c3 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 0.6913468883336062 WHEN rt0.c0 THEN 0.6635934287874868 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE NULL END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((CASE WHEN rt0.c0 THEN rt0.c3 END)OR(CAST(rt0.c0 AS REAL))))AND((rt0.c1 IN (rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN 0.04420322749289085 THEN rt0.c3 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 0.6913468883336062 WHEN rt0.c0 THEN 0.6635934287874868 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE NULL END)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((rt0.c0, vt0.c0, rt1.c0))>((rt1.c0, rt0.c3, rt1.c0))))-((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))+((((vt0.c0, rt0.c3, rt0.c2))>=((rt1.c3, rt1.c2, rt1.c3))))) WHERE (((rt0.c3)>(((rt1.c3)||(rt1.c1))))) ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN vt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c3))) END ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>(((rt1.c3)||(rt1.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((rt0.c0, vt0.c0, rt1.c0))>((rt1.c0, rt0.c3, rt1.c0))))-((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))+((((vt0.c0, rt0.c3, rt0.c2))>=((rt1.c3, rt1.c2, rt1.c3))))) ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN vt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c3))) END ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((rt0.c0, vt0.c0, rt1.c0))>((rt1.c0, rt0.c3, rt1.c0))))-((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))+((((vt0.c0, rt0.c3, rt0.c2))>=((rt1.c3, rt1.c2, rt1.c3))))) WHERE (((rt0.c3)>(((rt1.c3)||(rt1.c1))))) ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN vt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c3))) END ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>(((rt1.c3)||(rt1.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((rt0.c0, vt0.c0, rt1.c0))>((rt1.c0, rt0.c3, rt1.c0))))-((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))+((((vt0.c0, rt0.c3, rt0.c2))>=((rt1.c3, rt1.c2, rt1.c3))))) ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN vt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c3))) END ASC);
SELECT ALL * FROM vt1, vt0, rt1 WHERE ((- (INSTR(rt1.c0, rt1.c3)))) ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))  WHEN CASE 2071119544  WHEN vt0.c0 THEN rt1.c2 END THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) END, (((vt1.c0 IN ())) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS TEXT)))  NULLS LAST, ((CASE vt1.c0  WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 END) AND (((NULL) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((- (INSTR(rt1.c0, rt1.c3)))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))  WHEN CASE 2071119544  WHEN vt0.c0 THEN rt1.c2 END THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) END, (((vt1.c0 IN ())) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS TEXT)))  NULLS LAST, ((CASE vt1.c0  WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 END) AND (((NULL) IS TRUE))));
SELECT ALL * FROM vt1, vt0, rt1 WHERE ((- (INSTR(rt1.c0, rt1.c3)))) ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))  WHEN CASE 2071119544  WHEN vt0.c0 THEN rt1.c2 END THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) END, (((vt1.c0 IN ())) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS TEXT)))  NULLS LAST, ((CASE vt1.c0  WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 END) AND (((NULL) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((- (INSTR(rt1.c0, rt1.c3)))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))  WHEN CASE 2071119544  WHEN vt0.c0 THEN rt1.c2 END THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) END, (((vt1.c0 IN ())) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS TEXT)))  NULLS LAST, ((CASE vt1.c0  WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 END) AND (((NULL) IS TRUE))));
SELECT ALL * FROM vt1, vt0, rt1 WHERE ((- (INSTR(rt1.c0, rt1.c3)))) ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))  WHEN CASE 2071119544  WHEN vt0.c0 THEN rt1.c2 END THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) END, (((vt1.c0 IN ())) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS TEXT)))  NULLS LAST, ((CASE vt1.c0  WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 END) AND (((NULL) IS TRUE)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0) NOTNULL)))) ORDER BY NULL DESC, CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c0) ISNULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY NULL DESC, CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c0) ISNULL) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0) NOTNULL)))) ORDER BY NULL DESC, CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c0) ISNULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY NULL DESC, CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c0) ISNULL) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 IN (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0) NOTNULL)))) ORDER BY NULL DESC, CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c0) ISNULL) END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)) COLLATE BINARY);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c3)) NOT BETWEEN ((CAST('0.056105388004535905' AS NUMERIC))) AND (((rt1.c2 IN ())))) WHERE (((((rt1.c3)||(rt1.c3)))GLOB(((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)||(rt1.c3)))GLOB(((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c3)) NOT BETWEEN ((CAST('0.056105388004535905' AS NUMERIC))) AND (((rt1.c2 IN ())))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c3)) NOT BETWEEN ((CAST('0.056105388004535905' AS NUMERIC))) AND (((rt1.c2 IN ())))) WHERE (((((rt1.c3)||(rt1.c3)))GLOB(((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)||(rt1.c3)))GLOB(((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c3)) NOT BETWEEN ((CAST('0.056105388004535905' AS NUMERIC))) AND (((rt1.c2 IN ())))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c3)) NOT BETWEEN ((CAST('0.056105388004535905' AS NUMERIC))) AND (((rt1.c2 IN ())))) WHERE (((((rt1.c3)||(rt1.c3)))GLOB(((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((vt1.c0)))) AND (rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((vt1.c0)))) AND (rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((vt1.c0)))) AND (rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((vt1.c0)))) AND (rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((vt1.c0)))) AND (rt1.c3 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE ((((((('-1699375371') NOTNULL))OR(((rt0.c2)&(rt0.c1)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((('-1699375371') NOTNULL))OR(((rt0.c2)&(rt0.c1)))))OR(NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((('-1699375371') NOTNULL))OR(((rt0.c2)&(rt0.c1)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((('-1699375371') NOTNULL))OR(((rt0.c2)&(rt0.c1)))))OR(NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((('-1699375371') NOTNULL))OR(((rt0.c2)&(rt0.c1)))))OR(NULL)));
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c0))>((vt0.c0))))*((~ ('656740980'))))) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c0)LIKE(rt0.c0)))) AND ((rt0.c3 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((vt0.c0))))*((~ ('656740980'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c0)LIKE(rt0.c0)))) AND ((rt0.c3 COLLATE NOCASE))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c0))>((vt0.c0))))*((~ ('656740980'))))) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c0)LIKE(rt0.c0)))) AND ((rt0.c3 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((vt0.c0))))*((~ ('656740980'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c0)LIKE(rt0.c0)))) AND ((rt0.c3 COLLATE NOCASE))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((vt0.c0))>((vt0.c0))))*((~ ('656740980'))))) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c0)LIKE(rt0.c0)))) AND ((rt0.c3 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (SQLITE_VERSION()) ORDER BY ((((((rt0.c3)AND(vt0.c0)))OR(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (((0.7481707571425747)<<(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c3)AND(vt0.c0)))OR(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (((0.7481707571425747)<<(rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (SQLITE_VERSION()) ORDER BY ((((((rt0.c3)AND(vt0.c0)))OR(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (((0.7481707571425747)<<(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c3)AND(vt0.c0)))OR(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (((0.7481707571425747)<<(rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (SQLITE_VERSION()) ORDER BY ((((((rt0.c3)AND(vt0.c0)))OR(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (((0.7481707571425747)<<(rt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) ORDER BY (((- (vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((- (vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) ORDER BY (((- (vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((- (vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) ORDER BY (((- (vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((NOT (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(CAST(vt0.c0 AS REAL))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(CAST(vt0.c0 AS REAL))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(CAST(vt0.c0 AS REAL))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(CAST(vt0.c0 AS REAL))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(CAST(vt0.c0 AS REAL))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))  NULLS LAST;
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(((rt0.c1)&(vt1.c0)))))AND(CAST(rt1.c3 AS REAL))))AND(((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0)))))AND((((rt1.c3))<((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0 COLLATE NOCASE)OR(((rt0.c1)&(vt1.c0)))))AND(CAST(rt1.c3 AS REAL))))AND(((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0)))))AND((((rt1.c3))<((rt0.c3)))))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(((rt0.c1)&(vt1.c0)))))AND(CAST(rt1.c3 AS REAL))))AND(((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0)))))AND((((rt1.c3))<((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0 COLLATE NOCASE)OR(((rt0.c1)&(vt1.c0)))))AND(CAST(rt1.c3 AS REAL))))AND(((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0)))))AND((((rt1.c3))<((rt0.c3)))))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)OR(((rt0.c1)&(vt1.c0)))))AND(CAST(rt1.c3 AS REAL))))AND(((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0)))))AND((((rt1.c3))<((rt0.c3))))));
SELECT * FROM vt1, rt1 WHERE (((('826612819' IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((('826612819' IN ())) NOTNULL)) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (((('826612819' IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((('826612819' IN ())) NOTNULL)) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (((('826612819' IN ())) NOTNULL));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3)+(rt0.c1))))) ORDER BY CAST((((rt0.c1))!=((rt0.c2))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3)+(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c1))!=((rt0.c2))) AS INTEGER) ASC);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3)+(rt0.c1))))) ORDER BY CAST((((rt0.c1))!=((rt0.c2))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3)+(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c1))!=((rt0.c2))) AS INTEGER) ASC);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3)+(rt0.c1))))) ORDER BY CAST((((rt0.c1))!=((rt0.c2))) AS INTEGER) ASC;
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0) ISNULL) AS BLOB) WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0) ISNULL) AS BLOB));
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0) ISNULL) AS BLOB) WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0) ISNULL) AS BLOB));
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0) ISNULL) AS BLOB) WHERE (CAST(NULL AS REAL));
SELECT ALL * FROM rt1, rt0, vt1, vt0 WHERE ((((vt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((((0.3256573280841678) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt1.c2  WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c3 END, COALESCE(rt0.c2, rt1.c1))) AND ((rtreenode(rt0.c1, rt1.c2), rt0.c0, (NOT (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((((0.3256573280841678) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt1.c2  WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c3 END, COALESCE(rt0.c2, rt1.c1))) AND ((rtreenode(rt0.c1, rt1.c2), rt0.c0, (NOT (rt0.c3)))))) IS TRUE)  as count FROM rt1, rt0, vt1, vt0);
SELECT ALL * FROM rt1, rt0, vt1, vt0 WHERE ((((vt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((((0.3256573280841678) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt1.c2  WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c3 END, COALESCE(rt0.c2, rt1.c1))) AND ((rtreenode(rt0.c1, rt1.c2), rt0.c0, (NOT (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((((0.3256573280841678) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt1.c2  WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c3 END, COALESCE(rt0.c2, rt1.c1))) AND ((rtreenode(rt0.c1, rt1.c2), rt0.c0, (NOT (rt0.c3)))))) IS TRUE)  as count FROM rt1, rt0, vt1, vt0);
SELECT ALL * FROM rt1, rt0, vt1, vt0 WHERE ((((vt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((((0.3256573280841678) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt1.c2  WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c3 END, COALESCE(rt0.c2, rt1.c1))) AND ((rtreenode(rt0.c1, rt1.c2), rt0.c0, (NOT (rt0.c3))))));
SELECT ALL * FROM rt1, rt0, vt1, vt0 WHERE (((((json_array_length(rt0.c0, rt1.c3))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) ISNULL)))) ORDER BY (((rt1.c2 COLLATE NOCASE))>=((HEX(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(rt0.c0, rt1.c3))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1, rt0, vt1, vt0 ORDER BY (((rt1.c2 COLLATE NOCASE))>=((HEX(DISTINCT rt1.c1)))));
SELECT ALL * FROM rt1, rt0, vt1, vt0 WHERE (((((json_array_length(rt0.c0, rt1.c3))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) ISNULL)))) ORDER BY (((rt1.c2 COLLATE NOCASE))>=((HEX(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(rt0.c0, rt1.c3))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1, rt0, vt1, vt0 ORDER BY (((rt1.c2 COLLATE NOCASE))>=((HEX(DISTINCT rt1.c1)))));
SELECT ALL * FROM rt1, rt0, vt1, vt0 WHERE (((((json_array_length(rt0.c0, rt1.c3))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) ISNULL)))) ORDER BY (((rt1.c2 COLLATE NOCASE))>=((HEX(DISTINCT rt1.c1))));
SELECT * FROM rt0, rt1 NATURAL JOIN vt1 WHERE (((((((((((((((rt1.c1)OR(rt0.c1)))OR(vt1.c0)))OR(rt1.c3)))OR(rt0.c2)))OR(rt0.c3)))AND(rt1.c3)))GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c1)OR(rt0.c1)))OR(vt1.c0)))OR(rt1.c3)))OR(rt0.c2)))OR(rt0.c3)))AND(rt1.c3)))GLOB(vt1.c0))) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN vt1);
SELECT * FROM rt0, rt1 NATURAL JOIN vt1 WHERE (((((((((((((((rt1.c1)OR(rt0.c1)))OR(vt1.c0)))OR(rt1.c3)))OR(rt0.c2)))OR(rt0.c3)))AND(rt1.c3)))GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c1)OR(rt0.c1)))OR(vt1.c0)))OR(rt1.c3)))OR(rt0.c2)))OR(rt0.c3)))AND(rt1.c3)))GLOB(vt1.c0))) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN vt1);
SELECT * FROM rt0, rt1 NATURAL JOIN vt1 WHERE (((((((((((((((rt1.c1)OR(rt0.c1)))OR(vt1.c0)))OR(rt1.c3)))OR(rt0.c2)))OR(rt0.c3)))AND(rt1.c3)))GLOB(vt1.c0)));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((NOT (((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((NOT (((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((NOT (((rt1.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)<<(((rt0.c0)&(vt0.c0)))) RIGHT OUTER JOIN vt0 ON json_patch(((vt1.c0)|(rt0.c3)), (((rt0.c1))=((rt0.c2)))) WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (rt0.c3 IN ()) ELSE (- (rt0.c1)) END) ORDER BY CAST(CASE rt0.c0  WHEN rt0.c2 THEN '984908453' ELSE rt0.c3 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (rt0.c3 IN ()) ELSE (- (rt0.c1)) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)<<(((rt0.c0)&(vt0.c0)))) RIGHT OUTER JOIN vt0 ON json_patch(((vt1.c0)|(rt0.c3)), (((rt0.c1))==((rt0.c2)))) ORDER BY CAST(CASE rt0.c0  WHEN rt0.c2 THEN '984908453' ELSE rt0.c3 END AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)<<(((rt0.c0)&(vt0.c0)))) RIGHT OUTER JOIN vt0 ON json_patch(((vt1.c0)|(rt0.c3)), (((rt0.c1))=((rt0.c2)))) WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (rt0.c3 IN ()) ELSE (- (rt0.c1)) END) ORDER BY CAST(CASE rt0.c0  WHEN rt0.c2 THEN '984908453' ELSE rt0.c3 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (rt0.c3 IN ()) ELSE (- (rt0.c1)) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)<<(((rt0.c0)&(vt0.c0)))) RIGHT OUTER JOIN vt0 ON json_patch(((vt1.c0)|(rt0.c3)), (((rt0.c1))==((rt0.c2)))) ORDER BY CAST(CASE rt0.c0  WHEN rt0.c2 THEN '984908453' ELSE rt0.c3 END AS NUMERIC));
SELECT * FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('!&Ob')))))OR((vt1.c0 IN (vt1.c0))))) ORDER BY ((((vt1.c0)/(vt1.c0)))IS(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC, (NOT (((vt1.c0)>>(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('!&Ob')))))OR((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)/(vt1.c0)))IS(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC, (NOT (((vt1.c0)>>(vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('!&Ob')))))OR((vt1.c0 IN (vt1.c0))))) ORDER BY ((((vt1.c0)/(vt1.c0)))IS(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC, (NOT (((vt1.c0)>>(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('!&Ob')))))OR((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)/(vt1.c0)))IS(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC, (NOT (((vt1.c0)>>(vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('!&Ob')))))OR((vt1.c0 IN (vt1.c0))))) ORDER BY ((((vt1.c0)/(vt1.c0)))IS(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC, (NOT (((vt1.c0)>>(vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ('-969295134') ORDER BY (((('?H2A(!qꜳ') IS TRUE)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-969295134') IS TRUE)  as count FROM rt0 ORDER BY (((('?H2A(!qꜳ') IS TRUE)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-969295134') ORDER BY (((('?H2A(!qꜳ') IS TRUE)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-969295134') IS TRUE)  as count FROM rt0 ORDER BY (((('?H2A(!qꜳ') IS TRUE)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-969295134') ORDER BY (((('?H2A(!qꜳ') IS TRUE)) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON NULL WHERE (vt0.c0) ORDER BY ((IFNULL(DISTINCT 0.15789903902243263, vt0.c0))<=('-1e500'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON NULL ORDER BY ((IFNULL(DISTINCT 0.15789903902243263, vt0.c0))<=('-1e500'))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON NULL WHERE (vt0.c0) ORDER BY ((IFNULL(DISTINCT 0.15789903902243263, vt0.c0))<=('-1e500'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON NULL ORDER BY ((IFNULL(DISTINCT 0.15789903902243263, vt0.c0))<=('-1e500'))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON NULL WHERE (vt0.c0) ORDER BY ((IFNULL(DISTINCT 0.15789903902243263, vt0.c0))<=('-1e500'))  NULLS LAST;
SELECT * FROM vt1, rt1 WHERE (((((((rt1.c1)<(vt1.c0)))OR(((rt1.c3)>=(rt1.c0)))))AND((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)<(vt1.c0)))OR(((rt1.c3)>=(rt1.c0)))))AND((- (rt1.c1))))) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (((((((rt1.c1)<(vt1.c0)))OR(((rt1.c3)>=(rt1.c0)))))AND((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)<(vt1.c0)))OR(((rt1.c3)>=(rt1.c0)))))AND((- (rt1.c1))))) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (((((((rt1.c1)<(vt1.c0)))OR(((rt1.c3)>=(rt1.c0)))))AND((- (rt1.c1)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL)) BETWEEN (rt0.c2) AND (CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) BETWEEN (rt0.c2) AND (CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL)) BETWEEN (rt0.c2) AND (CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) BETWEEN (rt0.c2) AND (CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL)) BETWEEN (rt0.c2) AND (CAST(NULL AS BLOB))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (CASE x''  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1V\nK' ELSE vt1.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CASE x''  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1V\nK' ELSE vt1.c0 END IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (CASE x''  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1V\nK' ELSE vt1.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CASE x''  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1V\nK' ELSE vt1.c0 END IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (CASE x''  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1V\nK' ELSE vt1.c0 END IN ())  NULLS FIRST;
SELECT * FROM rt0 WHERE ((+ (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (rt0.c3)));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c3 AS BLOB)  WHEN ((rt0.c1)<(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END) ORDER BY (((rt0.c0 IN (NULL))) IS TRUE) ASC, ((rt0.c3) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c3 AS BLOB)  WHEN ((rt0.c1)<(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (NULL))) IS TRUE) ASC, ((rt0.c3) IS TRUE));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c3 AS BLOB)  WHEN ((rt0.c1)<(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END) ORDER BY (((rt0.c0 IN (NULL))) IS TRUE) ASC, ((rt0.c3) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c3 AS BLOB)  WHEN ((rt0.c1)<(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (NULL))) IS TRUE) ASC, ((rt0.c3) IS TRUE));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c3 AS BLOB)  WHEN ((rt0.c1)<(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END) ORDER BY (((rt0.c0 IN (NULL))) IS TRUE) ASC, ((rt0.c3) IS TRUE);
SELECT * FROM rt1 WHERE (((((rt1.c1) IS FALSE)) NOT NULL)) ORDER BY (((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3))))<(((((rt1.c0))<=((NULL)))))), (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3))))<(((((rt1.c0))<=((NULL)))))), (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c1) IS FALSE)) NOT NULL)) ORDER BY (((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3))))<(((((rt1.c0))<=((NULL)))))), (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3))))<(((((rt1.c0))<=((NULL)))))), (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c1) IS FALSE)) NOT NULL)) ORDER BY (((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3))))<(((((rt1.c0))<=((NULL)))))), (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)GLOB(vt0.c0)) COLLATE RTRIM WHERE (CASE ((rt0.c0) IS TRUE)  WHEN vt1.c0 THEN ((rt0.c3)AND(rt0.c0)) END) ORDER BY ((rt0.c3)GLOB((+ (0xffffffffd5708045)))), ((((rt0.c2) NOTNULL)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS TRUE)  WHEN vt1.c0 THEN ((rt0.c3)AND(rt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)GLOB(vt0.c0)) COLLATE RTRIM ORDER BY ((rt0.c3)GLOB((+ (0xffffffffd5708045)))), ((((rt0.c2) NOTNULL)) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)GLOB(vt0.c0)) COLLATE RTRIM WHERE (CASE ((rt0.c0) IS TRUE)  WHEN vt1.c0 THEN ((rt0.c3)AND(rt0.c0)) END) ORDER BY ((rt0.c3)GLOB((+ (0xffffffffd5708045)))), ((((rt0.c2) NOTNULL)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS TRUE)  WHEN vt1.c0 THEN ((rt0.c3)AND(rt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)GLOB(vt0.c0)) COLLATE RTRIM ORDER BY ((rt0.c3)GLOB((+ (0xffffffffd5708045)))), ((((rt0.c2) NOTNULL)) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)GLOB(vt0.c0)) COLLATE RTRIM WHERE (CASE ((rt0.c0) IS TRUE)  WHEN vt1.c0 THEN ((rt0.c3)AND(rt0.c0)) END) ORDER BY ((rt0.c3)GLOB((+ (0xffffffffd5708045)))), ((((rt0.c2) NOTNULL)) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0, vt1 WHERE ((rt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((rt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((rt0.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM vt1, rt0, rt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)<<(rt1.c2))) AND (LTRIM(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)<<(rt1.c2))) AND (LTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0, rt1, vt0);
SELECT ALL * FROM vt1, rt0, rt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)<<(rt1.c2))) AND (LTRIM(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)<<(rt1.c2))) AND (LTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0, rt1, vt0);
SELECT ALL * FROM vt1, rt0, rt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)<<(rt1.c2))) AND (LTRIM(vt1.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS REAL)) IS TRUE) WHERE (x'5e4d');
SELECT SUM(count) FROM (SELECT ALL ((x'5e4d') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS REAL)) IS TRUE));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS REAL)) IS TRUE) WHERE (x'5e4d');
SELECT SUM(count) FROM (SELECT ALL ((x'5e4d') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS REAL)) IS TRUE));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS REAL)) IS TRUE) WHERE (x'5e4d');
SELECT * FROM vt1, rt1, vt0 NATURAL JOIN rt0 WHERE (((((vt0.c0))!=((vt1.c0))) IN ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))!=((vt1.c0))) IN ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1, rt1, vt0 NATURAL JOIN rt0);
SELECT * FROM vt1, rt1, vt0 NATURAL JOIN rt0 WHERE (((((vt0.c0))!=((vt1.c0))) IN ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))!=((vt1.c0))) IN ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1, rt1, vt0 NATURAL JOIN rt0);
SELECT * FROM vt1, rt1, vt0 NATURAL JOIN rt0 WHERE (((((vt0.c0))!=((vt1.c0))) IN ((rt0.c0 IN ()))));
SELECT * FROM rt1 WHERE ((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c3))))<=((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c3))))<=((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c3))))<=((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c3))))<=((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c3))))<=((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))));
SELECT COUNT(*) FROM vt0, rt0, vt1, rt1 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, vt1, rt1);
SELECT COUNT(*) FROM vt0, rt0, vt1, rt1 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, vt1, rt1);
SELECT COUNT(*) FROM vt0, rt0, vt1, rt1 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC));
SELECT * FROM rt0, vt0, vt1, rt1 WHERE (CAST((((0.28511548518010554, vt0.c0, rt1.c0, x'0636', rt1.c1)) NOT BETWEEN ((rt1.c1, vt0.c0, rt0.c0, vt1.c0, rt1.c1)) AND ((rt0.c2, rt1.c1, NULL, '#Q2窈', '-1447516790'))) AS REAL)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.28511548518010554, vt0.c0, rt1.c0, x'0636', rt1.c1)) NOT BETWEEN ((rt1.c1, vt0.c0, rt0.c0, vt1.c0, rt1.c1)) AND ((rt0.c2, rt1.c1, NULL, '#Q2窈', '-1447516790'))) AS REAL)) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, vt1, rt1 ORDER BY NULL);
SELECT * FROM rt0, vt0, vt1, rt1 WHERE (CAST((((0.28511548518010554, vt0.c0, rt1.c0, x'0636', rt1.c1)) NOT BETWEEN ((rt1.c1, vt0.c0, rt0.c0, vt1.c0, rt1.c1)) AND ((rt0.c2, rt1.c1, NULL, '#Q2窈', '-1447516790'))) AS REAL)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.28511548518010554, vt0.c0, rt1.c0, x'0636', rt1.c1)) NOT BETWEEN ((rt1.c1, vt0.c0, rt0.c0, vt1.c0, rt1.c1)) AND ((rt0.c2, rt1.c1, NULL, '#Q2窈', '-1447516790'))) AS REAL)) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, vt1, rt1 ORDER BY NULL);
SELECT * FROM rt0, vt0, vt1, rt1 WHERE (CAST((((0.28511548518010554, vt0.c0, rt1.c0, x'0636', rt1.c1)) NOT BETWEEN ((rt1.c1, vt0.c0, rt0.c0, vt1.c0, rt1.c1)) AND ((rt0.c2, rt1.c1, NULL, '#Q2窈', '-1447516790'))) AS REAL)) ORDER BY NULL;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((((~ (rt0.c0)))AND((+ (rt0.c2)))))OR(((rt0.c1)&('c\nm쁧 ')))) FULL OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN 0.5026327784658224 END))) WHERE (((((rt0.c3 COLLATE RTRIM)AND(((rt0.c0)=(NULL)))))OR(((rt0.c1)IS NOT(vt1.c0))))) ORDER BY UNLIKELY(vt1.c0) DESC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 COLLATE RTRIM)AND(((rt0.c0)==(NULL)))))OR(((rt0.c1)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((~ (rt0.c0)))AND((+ (rt0.c2)))))OR(((rt0.c1)&('c\nm쁧 ')))) FULL OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN 0.5026327784658224 END))) ORDER BY UNLIKELY(vt1.c0) DESC, NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((((~ (rt0.c0)))AND((+ (rt0.c2)))))OR(((rt0.c1)&('c\nm쁧 ')))) FULL OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN 0.5026327784658224 END))) WHERE (((((rt0.c3 COLLATE RTRIM)AND(((rt0.c0)=(NULL)))))OR(((rt0.c1)IS NOT(vt1.c0))))) ORDER BY UNLIKELY(vt1.c0) DESC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 COLLATE RTRIM)AND(((rt0.c0)==(NULL)))))OR(((rt0.c1)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((~ (rt0.c0)))AND((+ (rt0.c2)))))OR(((rt0.c1)&('c\nm쁧 ')))) FULL OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN 0.5026327784658224 END))) ORDER BY UNLIKELY(vt1.c0) DESC, NULL  NULLS LAST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((('')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOTNULL)) ORDER BY (vt1.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((('')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (vt1.c0 IN ()) DESC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((('')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOTNULL)) ORDER BY (vt1.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((('')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (vt1.c0 IN ()) DESC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((('')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOTNULL)) ORDER BY (vt1.c0 IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, rt1 INNER JOIN vt1 ON ((((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c2)))=(((rt1.c3)/(vt1.c0)))) WHERE ((('1043045509') BETWEEN (0.14982035661312376) AND (((vt0.c0) IS TRUE)))) ORDER BY (((rt1.c3 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT (((('1043045509') BETWEEN (0.14982035661312376) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN vt1 ON ((((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c2)))=(((rt1.c3)/(vt1.c0)))) ORDER BY (((rt1.c3 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt1 INNER JOIN vt1 ON ((((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c2)))=(((rt1.c3)/(vt1.c0)))) WHERE ((('1043045509') BETWEEN (0.14982035661312376) AND (((vt0.c0) IS TRUE)))) ORDER BY (((rt1.c3 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT (((('1043045509') BETWEEN (0.14982035661312376) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN vt1 ON ((((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c2)))=(((rt1.c3)/(vt1.c0)))) ORDER BY (((rt1.c3 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt1 INNER JOIN vt1 ON ((((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c2)))=(((rt1.c3)/(vt1.c0)))) WHERE ((('1043045509') BETWEEN (0.14982035661312376) AND (((vt0.c0) IS TRUE)))) ORDER BY (((rt1.c3 IN ())) IS TRUE);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt1 ON (0x52ba87dc IN (((rt0.c1) IS TRUE), ((((rt1.c2)AND(vt1.c0)))OR(x'527fb761')))) RIGHT OUTER JOIN rt0 ON (~ (CAST(rt0.c1 AS REAL))) WHERE (CAST(NULL AS BLOB)) ORDER BY (((NOT (x'')))IS NOT(0.7602738796149113)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt1 ON (0X52ba87dc IN (((rt0.c1) IS TRUE), ((((rt1.c2)AND(vt1.c0)))OR(x'527fb761')))) RIGHT OUTER JOIN rt0 ON (~ (CAST(rt0.c1 AS REAL))) ORDER BY (((NOT (x'')))IS NOT(0.7602738796149113)) DESC);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt1 ON (0x52ba87dc IN (((rt0.c1) IS TRUE), ((((rt1.c2)AND(vt1.c0)))OR(x'527fb761')))) RIGHT OUTER JOIN rt0 ON (~ (CAST(rt0.c1 AS REAL))) WHERE (CAST(NULL AS BLOB)) ORDER BY (((NOT (x'')))IS NOT(0.7602738796149113)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt1 ON (0X52ba87dc IN (((rt0.c1) IS TRUE), ((((rt1.c2)AND(vt1.c0)))OR(x'527fb761')))) RIGHT OUTER JOIN rt0 ON (~ (CAST(rt0.c1 AS REAL))) ORDER BY (((NOT (x'')))IS NOT(0.7602738796149113)) DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((ABS(rt0.c3))||(0.5570089930174483)) WHERE (CAST(((rt0.c0)IS NOT(rt0.c1)) AS REAL)) ORDER BY ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))|(((rt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)IS NOT(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((ABS(rt0.c3))||(0.5570089930174483)) ORDER BY ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))|(((rt0.c1) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((ABS(rt0.c3))||(0.5570089930174483)) WHERE (CAST(((rt0.c0)IS NOT(rt0.c1)) AS REAL)) ORDER BY ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))|(((rt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)IS NOT(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((ABS(rt0.c3))||(0.5570089930174483)) ORDER BY ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))|(((rt0.c1) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((ABS(rt0.c3))||(0.5570089930174483)) WHERE (CAST(((rt0.c0)IS NOT(rt0.c1)) AS REAL)) ORDER BY ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))|(((rt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>(((vt0.c0) IS FALSE)))) ORDER BY CASE ((vt0.c0)!=(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))>(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)<>(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>(((vt0.c0) IS FALSE)))) ORDER BY CASE ((vt0.c0)!=(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))>(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)<>(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>(((vt0.c0) IS FALSE)))) ORDER BY CASE ((vt0.c0)!=(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS LAST;
SELECT * FROM rt1, vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt1.c0)<(vt1.c0)) COLLATE RTRIM WHERE ((((rt1.c0) NOTNULL) IN ())) ORDER BY ((((((((((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))OR((('80878291')&(rt1.c1)))))OR(x'')))OR(IFNULL(DISTINCT vt1.c0, rt1.c2))))OR(CAST(rt1.c3 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt1.c0)<(vt1.c0)) COLLATE RTRIM ORDER BY ((((((((((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))OR((('80878291')&(rt1.c1)))))OR(x'')))OR(IFNULL(DISTINCT vt1.c0, rt1.c2))))OR(CAST(rt1.c3 AS TEXT))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt1.c0)<(vt1.c0)) COLLATE RTRIM WHERE ((((rt1.c0) NOTNULL) IN ())) ORDER BY ((((((((((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))OR((('80878291')&(rt1.c1)))))OR(x'')))OR(IFNULL(DISTINCT vt1.c0, rt1.c2))))OR(CAST(rt1.c3 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt1.c0)<(vt1.c0)) COLLATE RTRIM ORDER BY ((((((((((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))OR((('80878291')&(rt1.c1)))))OR(x'')))OR(IFNULL(DISTINCT vt1.c0, rt1.c2))))OR(CAST(rt1.c3 AS TEXT))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt1.c0)<(vt1.c0)) COLLATE RTRIM WHERE ((((rt1.c0) NOTNULL) IN ())) ORDER BY ((((((((((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))OR((('80878291')&(rt1.c1)))))OR(x'')))OR(IFNULL(DISTINCT vt1.c0, rt1.c2))))OR(CAST(rt1.c3 AS TEXT))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c2)!=(rt1.c3))) BETWEEN (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3))) AND (rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<>(rt1.c3))) BETWEEN (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3))) AND (rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c2)!=(rt1.c3))) BETWEEN (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3))) AND (rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<>(rt1.c3))) BETWEEN (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3))) AND (rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c2)!=(rt1.c3))) BETWEEN (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3))) AND (rt1.c1 COLLATE NOCASE)));
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c0) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c0))) AND (((rt1.c0) IS FALSE))) CROSS JOIN vt0 ON '1091502383' WHERE (0.04300845140292875);
SELECT SUM(count) FROM (SELECT ((0.04300845140292875) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c0) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c0))) AND (((rt1.c0) IS FALSE))) CROSS JOIN vt0 ON '1091502383');
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c0) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c0))) AND (((rt1.c0) IS FALSE))) CROSS JOIN vt0 ON '1091502383' WHERE (0.04300845140292875);
SELECT SUM(count) FROM (SELECT ((0.04300845140292875) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c0) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c0))) AND (((rt1.c0) IS FALSE))) CROSS JOIN vt0 ON '1091502383');
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c0) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c0))) AND (((rt1.c0) IS FALSE))) CROSS JOIN vt0 ON '1091502383' WHERE (0.04300845140292875);
SELECT * FROM rt1 WHERE (((((rt1.c3) ISNULL))OR(json_array_length(rt1.c3)))) ORDER BY (((x'd503343c'))>((CASE WHEN rt1.c2 THEN 0Xffffffffa3fde83c ELSE rt1.c1 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) ISNULL))OR(json_array_length(rt1.c3)))) IS TRUE)  as count FROM rt1 ORDER BY (((x'd503343c'))>((CASE WHEN rt1.c2 THEN 0xffffffffa3fde83c ELSE rt1.c1 END)))  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((rt1.c3) ISNULL))OR(json_array_length(rt1.c3)))) ORDER BY (((x'd503343c'))>((CASE WHEN rt1.c2 THEN 0Xffffffffa3fde83c ELSE rt1.c1 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) ISNULL))OR(json_array_length(rt1.c3)))) IS TRUE)  as count FROM rt1 ORDER BY (((x'd503343c'))>((CASE WHEN rt1.c2 THEN 0xffffffffa3fde83c ELSE rt1.c1 END)))  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((rt1.c3) ISNULL))OR(json_array_length(rt1.c3)))) ORDER BY (((x'd503343c'))>((CASE WHEN rt1.c2 THEN 0Xffffffffa3fde83c ELSE rt1.c1 END)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) DESC;
SELECT ALL * FROM rt0, vt1, rt1 WHERE ((((((rt0.c2, rt0.c1, 0.6213773845757053)) BETWEEN ((rt0.c1, rt1.c0, rt1.c3)) AND ((rt0.c2, rt0.c0, rt0.c3))))<<(rt0.c1 COLLATE BINARY))) ORDER BY (LIKELY(DISTINCT 0.8432128406131286) IN (UNLIKELY(rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c1, 0.6213773845757053)) BETWEEN ((rt0.c1, rt1.c0, rt1.c3)) AND ((rt0.c2, rt0.c0, rt0.c3))))<<(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (LIKELY(DISTINCT 0.8432128406131286) IN (UNLIKELY(rt1.c3))) ASC);
SELECT ALL * FROM rt0, vt1, rt1 WHERE ((((((rt0.c2, rt0.c1, 0.6213773845757053)) BETWEEN ((rt0.c1, rt1.c0, rt1.c3)) AND ((rt0.c2, rt0.c0, rt0.c3))))<<(rt0.c1 COLLATE BINARY))) ORDER BY (LIKELY(DISTINCT 0.8432128406131286) IN (UNLIKELY(rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c1, 0.6213773845757053)) BETWEEN ((rt0.c1, rt1.c0, rt1.c3)) AND ((rt0.c2, rt0.c0, rt0.c3))))<<(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (LIKELY(DISTINCT 0.8432128406131286) IN (UNLIKELY(rt1.c3))) ASC);
SELECT ALL * FROM rt0, vt1, rt1 WHERE ((((((rt0.c2, rt0.c1, 0.6213773845757053)) BETWEEN ((rt0.c1, rt1.c0, rt1.c3)) AND ((rt0.c2, rt0.c0, rt0.c3))))<<(rt0.c1 COLLATE BINARY))) ORDER BY (LIKELY(DISTINCT 0.8432128406131286) IN (UNLIKELY(rt1.c3))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))<(((vt1.c0)+(vt1.c0))))) ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))<(((vt1.c0)+(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))<(((vt1.c0)+(vt1.c0))))) ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))<(((vt1.c0)+(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))<(((vt1.c0)+(vt1.c0))))) ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT NULL) DESC;
SELECT * FROM vt1, vt0, rt0, rt1 WHERE (((((CAST(rt0.c3 AS TEXT))AND(((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c0)))))AND(',>7*b\rH#a')));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c3 AS TEXT))AND(((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c0)))))AND(',>7*b\rH#a'))) IS TRUE)  as count FROM vt1, vt0, rt0, rt1);
SELECT * FROM vt1, vt0, rt0, rt1 WHERE (((((CAST(rt0.c3 AS TEXT))AND(((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c0)))))AND(',>7*b\rH#a')));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c3 AS TEXT))AND(((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c0)))))AND(',>7*b\rH#a'))) IS TRUE)  as count FROM vt1, vt0, rt0, rt1);
SELECT * FROM vt1, vt0, rt0, rt1 WHERE (((((CAST(rt0.c3 AS TEXT))AND(((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c0)))))AND(',>7*b\rH#a')));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((+ (rt0.c3))) BETWEEN (((rt1.c1)&(rt0.c0))) AND (((rt0.c0)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3))) BETWEEN (((rt1.c1)&(rt0.c0))) AND (((rt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((+ (rt0.c3))) BETWEEN (((rt1.c1)&(rt0.c0))) AND (((rt0.c0)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3))) BETWEEN (((rt1.c1)&(rt0.c0))) AND (((rt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((+ (rt0.c3))) BETWEEN (((rt1.c1)&(rt0.c0))) AND (((rt0.c0)AND(rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE ((HEX(DISTINCT vt0.c0) IN (((x'')%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((HEX(DISTINCT vt0.c0) IN (((x'')%(vt1.c0))))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE ((HEX(DISTINCT vt0.c0) IN (((x'')%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((HEX(DISTINCT vt0.c0) IN (((x'')%(vt1.c0))))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE ((HEX(DISTINCT vt0.c0) IN (((x'')%(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON (((+ (rt1.c2))) BETWEEN ((+ (rt1.c0))) AND (((vt1.c0)||(x'')))) WHERE ((((rt1.c0)/(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)/(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON (((+ (rt1.c2))) BETWEEN ((+ (rt1.c0))) AND (((vt1.c0)||(x'')))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON (((+ (rt1.c2))) BETWEEN ((+ (rt1.c0))) AND (((vt1.c0)||(x'')))) WHERE ((((rt1.c0)/(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)/(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON (((+ (rt1.c2))) BETWEEN ((+ (rt1.c0))) AND (((vt1.c0)||(x'')))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON (((+ (rt1.c2))) BETWEEN ((+ (rt1.c0))) AND (((vt1.c0)||(x'')))) WHERE ((((rt1.c0)/(rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(x'' COLLATE RTRIM AS NUMERIC) CROSS JOIN rt1 ON ((CAST(vt0.c0 AS TEXT))%(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c1 END)) WHERE (((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt1.c0 END)*(((rt1.c0)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt1.c0 END)*(((rt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(x'' COLLATE RTRIM AS NUMERIC) CROSS JOIN rt1 ON ((CAST(vt0.c0 AS TEXT))%(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c1 END)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(x'' COLLATE RTRIM AS NUMERIC) CROSS JOIN rt1 ON ((CAST(vt0.c0 AS TEXT))%(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c1 END)) WHERE (((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt1.c0 END)*(((rt1.c0)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt1.c0 END)*(((rt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(x'' COLLATE RTRIM AS NUMERIC) CROSS JOIN rt1 ON ((CAST(vt0.c0 AS TEXT))%(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c1 END)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(x'' COLLATE RTRIM AS NUMERIC) CROSS JOIN rt1 ON ((CAST(vt0.c0 AS TEXT))%(CASE vt1.c0  WHEN rt1.c2 THEN rt1.c1 END)) WHERE (((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt1.c0 END)*(((rt1.c0)AND(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((vt1.c0)LIKE(363359861)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((vt1.c0)LIKE(363359861))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((vt1.c0)LIKE(363359861)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((vt1.c0)LIKE(363359861))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((vt1.c0)LIKE(363359861)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM rt1, rt0, vt0, vt1 WHERE ((((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c1)), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)), CASE WHEN '뜖閵So' THEN rt0.c0 END))>=((vt1.c0, ((rt0.c0)|(rt0.c0)), vt1.c0)))) ORDER BY (('0.6043944815906692') BETWEEN ((- (rt1.c0))) AND (0.47078368038879004));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c1)), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)), CASE WHEN '뜖閵So' THEN rt0.c0 END))>=((vt1.c0, ((rt0.c0)|(rt0.c0)), vt1.c0)))) IS TRUE)  as count FROM rt1, rt0, vt0, vt1 ORDER BY (('0.6043944815906692') BETWEEN ((- (rt1.c0))) AND (0.47078368038879004)));
SELECT * FROM rt1, rt0, vt0, vt1 WHERE ((((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c1)), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)), CASE WHEN '뜖閵So' THEN rt0.c0 END))>=((vt1.c0, ((rt0.c0)|(rt0.c0)), vt1.c0)))) ORDER BY (('0.6043944815906692') BETWEEN ((- (rt1.c0))) AND (0.47078368038879004));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c1)), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)), CASE WHEN '뜖閵So' THEN rt0.c0 END))>=((vt1.c0, ((rt0.c0)|(rt0.c0)), vt1.c0)))) IS TRUE)  as count FROM rt1, rt0, vt0, vt1 ORDER BY (('0.6043944815906692') BETWEEN ((- (rt1.c0))) AND (0.47078368038879004)));
SELECT * FROM rt1, rt0, vt0, vt1 WHERE ((((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c1)), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)), CASE WHEN '뜖閵So' THEN rt0.c0 END))>=((vt1.c0, ((rt0.c0)|(rt0.c0)), vt1.c0)))) ORDER BY (('0.6043944815906692') BETWEEN ((- (rt1.c0))) AND (0.47078368038879004));
SELECT * FROM vt1, rt1 WHERE (LOWER(DISTINCT (((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND ((1778561684))))) ORDER BY ((vt1.c0 COLLATE BINARY)IS NOT(CAST(rt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND ((1778561684))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((vt1.c0 COLLATE BINARY)IS NOT(CAST(rt1.c0 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt1, rt1 WHERE (LOWER(DISTINCT (((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND ((1778561684))))) ORDER BY ((vt1.c0 COLLATE BINARY)IS NOT(CAST(rt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND ((1778561684))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((vt1.c0 COLLATE BINARY)IS NOT(CAST(rt1.c0 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt1, rt1 WHERE (LOWER(DISTINCT (((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND ((1778561684))))) ORDER BY ((vt1.c0 COLLATE BINARY)IS NOT(CAST(rt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c3)) COLLATE BINARY) ORDER BY ((SQLITE_SOURCE_ID())IS NOT(((NULL) IS FALSE))) DESC  NULLS LAST, ((((((((((-517335015)AND(NULL)))AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c1))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((SQLITE_SOURCE_ID())IS NOT(((NULL) IS FALSE))) DESC  NULLS LAST, ((((((((((-517335015)AND(NULL)))AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c1))) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c3)) COLLATE BINARY) ORDER BY ((SQLITE_SOURCE_ID())IS NOT(((NULL) IS FALSE))) DESC  NULLS LAST, ((((((((((-517335015)AND(NULL)))AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c1))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((SQLITE_SOURCE_ID())IS NOT(((NULL) IS FALSE))) DESC  NULLS LAST, ((((((((((-517335015)AND(NULL)))AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c1))) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c3)) COLLATE BINARY) ORDER BY ((SQLITE_SOURCE_ID())IS NOT(((NULL) IS FALSE))) DESC  NULLS LAST, ((((((((((-517335015)AND(NULL)))AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c1))) NOT NULL) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))LIKE(CASE rt1.c2  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c2 END)) WHERE (((((TYPEOF(rt1.c0))AND(rt1.c3 COLLATE NOCASE)))OR(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END))) ORDER BY (NOT (x'')) ASC  NULLS FIRST, CASE HEX(DISTINCT rt1.c2)  WHEN rt1.c2 THEN ((rt1.c3) NOT NULL) WHEN 0.2913731419815775 THEN (+ (rt1.c3)) WHEN rt1.c3 COLLATE BINARY THEN (+ (rt1.c2)) ELSE rt1.c2 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((TYPEOF(rt1.c0))AND(rt1.c3 COLLATE NOCASE)))OR(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))LIKE(CASE rt1.c2  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c2 END)) ORDER BY (NOT (x'')) ASC  NULLS FIRST, CASE HEX(DISTINCT rt1.c2)  WHEN rt1.c2 THEN ((rt1.c3) NOT NULL) WHEN 0.2913731419815775 THEN (+ (rt1.c3)) WHEN rt1.c3 COLLATE BINARY THEN (+ (rt1.c2)) ELSE rt1.c2 COLLATE NOCASE END ASC);
SELECT * FROM vt0, vt1 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))LIKE(CASE rt1.c2  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c2 END)) WHERE (((((TYPEOF(rt1.c0))AND(rt1.c3 COLLATE NOCASE)))OR(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END))) ORDER BY (NOT (x'')) ASC  NULLS FIRST, CASE HEX(DISTINCT rt1.c2)  WHEN rt1.c2 THEN ((rt1.c3) NOT NULL) WHEN 0.2913731419815775 THEN (+ (rt1.c3)) WHEN rt1.c3 COLLATE BINARY THEN (+ (rt1.c2)) ELSE rt1.c2 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((TYPEOF(rt1.c0))AND(rt1.c3 COLLATE NOCASE)))OR(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))LIKE(CASE rt1.c2  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c2 END)) ORDER BY (NOT (x'')) ASC  NULLS FIRST, CASE HEX(DISTINCT rt1.c2)  WHEN rt1.c2 THEN ((rt1.c3) NOT NULL) WHEN 0.2913731419815775 THEN (+ (rt1.c3)) WHEN rt1.c3 COLLATE BINARY THEN (+ (rt1.c2)) ELSE rt1.c2 COLLATE NOCASE END ASC);
SELECT * FROM vt0, vt1 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))LIKE(CASE rt1.c2  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c2 END)) WHERE (((((TYPEOF(rt1.c0))AND(rt1.c3 COLLATE NOCASE)))OR(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END))) ORDER BY (NOT (x'')) ASC  NULLS FIRST, CASE HEX(DISTINCT rt1.c2)  WHEN rt1.c2 THEN ((rt1.c3) NOT NULL) WHEN 0.2913731419815775 THEN (+ (rt1.c3)) WHEN rt1.c3 COLLATE BINARY THEN (+ (rt1.c2)) ELSE rt1.c2 COLLATE NOCASE END ASC;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)<((('1400883789') BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY NULL COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)<((('1400883789') BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULL COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)<((('1400883789') BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY NULL COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)<((('1400883789') BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULL COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)<((('1400883789') BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY NULL COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((+ (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((+ (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((+ (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c3)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((NULL)OR(IFNULL(rt1.c1, rt0.c0))))AND((rt0.c3 IN (rt1.c3))))) ORDER BY CASE ((rt0.c1)%(rt1.c0))  WHEN ((rt1.c2) NOTNULL) THEN NULL WHEN ((rt0.c2)*(0.24270773553181424)) THEN rt0.c0 WHEN (+ (rt1.c2)) THEN ((rt0.c3) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(IFNULL(rt1.c1, rt0.c0))))AND((rt0.c3 IN (rt1.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE ((rt0.c1)%(rt1.c0))  WHEN ((rt1.c2) NOTNULL) THEN NULL WHEN ((rt0.c2)*(0.24270773553181424)) THEN rt0.c0 WHEN (+ (rt1.c2)) THEN ((rt0.c3) NOT NULL) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((NULL)OR(IFNULL(rt1.c1, rt0.c0))))AND((rt0.c3 IN (rt1.c3))))) ORDER BY CASE ((rt0.c1)%(rt1.c0))  WHEN ((rt1.c2) NOTNULL) THEN NULL WHEN ((rt0.c2)*(0.24270773553181424)) THEN rt0.c0 WHEN (+ (rt1.c2)) THEN ((rt0.c3) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(IFNULL(rt1.c1, rt0.c0))))AND((rt0.c3 IN (rt1.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE ((rt0.c1)%(rt1.c0))  WHEN ((rt1.c2) NOTNULL) THEN NULL WHEN ((rt0.c2)*(0.24270773553181424)) THEN rt0.c0 WHEN (+ (rt1.c2)) THEN ((rt0.c3) NOT NULL) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((NULL)OR(IFNULL(rt1.c1, rt0.c0))))AND((rt0.c3 IN (rt1.c3))))) ORDER BY CASE ((rt0.c1)%(rt1.c0))  WHEN ((rt1.c2) NOTNULL) THEN NULL WHEN ((rt0.c2)*(0.24270773553181424)) THEN rt0.c0 WHEN (+ (rt1.c2)) THEN ((rt0.c3) NOT NULL) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((NULL)LIKE(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((NULL)LIKE(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((NULL)LIKE(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((NULL)LIKE(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((NULL)LIKE(vt0.c0))) IS FALSE));
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON ((-1403664278)+(((rt1.c0)+(vt1.c0)))) CROSS JOIN vt0 ON rtreenode((rt1.c3 IN ()), CAST(0.3177250201944922 AS REAL)) WHERE ((((((((rt1.c0))=((rt1.c2))))OR(((vt1.c0) NOT BETWEEN (rt1.c1) AND (0.6026968134088572)))))AND(CAST(rt1.c2 AS REAL)))) ORDER BY vt0.c0 ASC, (((((((rt1.c3))<((rt1.c3))))OR(CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END)))OR(((vt0.c0)>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c0))=((rt1.c2))))OR(((vt1.c0) NOT BETWEEN (rt1.c1) AND (0.6026968134088572)))))AND(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON ((-1403664278)+(((rt1.c0)+(vt1.c0)))) CROSS JOIN vt0 ON rtreenode((rt1.c3 IN ()), CAST(0.3177250201944922 AS REAL)) ORDER BY vt0.c0 ASC, (((((((rt1.c3))<((rt1.c3))))OR(CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END)))OR(((vt0.c0)>(vt0.c0)))) DESC);
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON ((-1403664278)+(((rt1.c0)+(vt1.c0)))) CROSS JOIN vt0 ON rtreenode((rt1.c3 IN ()), CAST(0.3177250201944922 AS REAL)) WHERE ((((((((rt1.c0))=((rt1.c2))))OR(((vt1.c0) NOT BETWEEN (rt1.c1) AND (0.6026968134088572)))))AND(CAST(rt1.c2 AS REAL)))) ORDER BY vt0.c0 ASC, (((((((rt1.c3))<((rt1.c3))))OR(CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END)))OR(((vt0.c0)>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c0))=((rt1.c2))))OR(((vt1.c0) NOT BETWEEN (rt1.c1) AND (0.6026968134088572)))))AND(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON ((-1403664278)+(((rt1.c0)+(vt1.c0)))) CROSS JOIN vt0 ON rtreenode((rt1.c3 IN ()), CAST(0.3177250201944922 AS REAL)) ORDER BY vt0.c0 ASC, (((((((rt1.c3))<((rt1.c3))))OR(CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END)))OR(((vt0.c0)>(vt0.c0)))) DESC);
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON ((-1403664278)+(((rt1.c0)+(vt1.c0)))) CROSS JOIN vt0 ON rtreenode((rt1.c3 IN ()), CAST(0.3177250201944922 AS REAL)) WHERE ((((((((rt1.c0))=((rt1.c2))))OR(((vt1.c0) NOT BETWEEN (rt1.c1) AND (0.6026968134088572)))))AND(CAST(rt1.c2 AS REAL)))) ORDER BY vt0.c0 ASC, (((((((rt1.c3))<((rt1.c3))))OR(CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END)))OR(((vt0.c0)>(vt0.c0)))) DESC;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (NOT ((((rt1.c0, rt1.c1, rt1.c3))>((rt1.c1, rt1.c0, rt1.c1))))) WHERE (CAST((((rt1.c1))==((rt1.c3))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1))==((rt1.c3))) AS REAL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (NOT ((((rt1.c0, rt1.c1, rt1.c3))>((rt1.c1, rt1.c0, rt1.c1))))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (NOT ((((rt1.c0, rt1.c1, rt1.c3))>((rt1.c1, rt1.c0, rt1.c1))))) WHERE (CAST((((rt1.c1))==((rt1.c3))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1))==((rt1.c3))) AS REAL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (NOT ((((rt1.c0, rt1.c1, rt1.c3))>((rt1.c1, rt1.c0, rt1.c1))))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (NOT ((((rt1.c0, rt1.c1, rt1.c3))>((rt1.c1, rt1.c0, rt1.c1))))) WHERE (CAST((((rt1.c1))==((rt1.c3))) AS REAL));
SELECT * FROM rt0 INNER JOIN rt1 ON rt1.c2 INNER JOIN vt1 ON (((((x'263f'))>((0.3166592424145678)))) BETWEEN (((rt0.c2)|('start of year'))) AND ((~ (rt0.c2)))) LEFT OUTER JOIN vt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(CAST(rt0.c0 AS BLOB))))OR(rt1.c2)) WHERE ((((+ (vt0.c0)))&((- (rt0.c2))))) ORDER BY ((((rt0.c2)OR(vt0.c0)))AND(LIKE(vt1.c0, rt1.c1, '0'))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))&((- (rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON rt1.c2 INNER JOIN vt1 ON (((((x'263f'))>((0.3166592424145678)))) BETWEEN (((rt0.c2)|('start of year'))) AND ((~ (rt0.c2)))) LEFT OUTER JOIN vt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(CAST(rt0.c0 AS BLOB))))OR(rt1.c2)) ORDER BY ((((rt0.c2)OR(vt0.c0)))AND(LIKE(vt1.c0, rt1.c1, '0'))) ASC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN rt1 ON rt1.c2 INNER JOIN vt1 ON (((((x'263f'))>((0.3166592424145678)))) BETWEEN (((rt0.c2)|('start of year'))) AND ((~ (rt0.c2)))) LEFT OUTER JOIN vt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(CAST(rt0.c0 AS BLOB))))OR(rt1.c2)) WHERE ((((+ (vt0.c0)))&((- (rt0.c2))))) ORDER BY ((((rt0.c2)OR(vt0.c0)))AND(LIKE(vt1.c0, rt1.c1, '0'))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))&((- (rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON rt1.c2 INNER JOIN vt1 ON (((((x'263f'))>((0.3166592424145678)))) BETWEEN (((rt0.c2)|('start of year'))) AND ((~ (rt0.c2)))) LEFT OUTER JOIN vt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(CAST(rt0.c0 AS BLOB))))OR(rt1.c2)) ORDER BY ((((rt0.c2)OR(vt0.c0)))AND(LIKE(vt1.c0, rt1.c1, '0'))) ASC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN rt1 ON rt1.c2 INNER JOIN vt1 ON (((((x'263f'))>((0.3166592424145678)))) BETWEEN (((rt0.c2)|('start of year'))) AND ((~ (rt0.c2)))) LEFT OUTER JOIN vt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(CAST(rt0.c0 AS BLOB))))OR(rt1.c2)) WHERE ((((+ (vt0.c0)))&((- (rt0.c2))))) ORDER BY ((((rt0.c2)OR(vt0.c0)))AND(LIKE(vt1.c0, rt1.c1, '0'))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((CAST(vt0.c0 AS BLOB)) IS TRUE) WHERE (((((((rt1.c3)AND(rt1.c1)))AND(vt0.c0)))IS(((rt1.c1)IS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)AND(rt1.c1)))AND(vt0.c0)))IS(((rt1.c1)IS(rt1.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((CAST(vt0.c0 AS BLOB)) IS TRUE));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((CAST(vt0.c0 AS BLOB)) IS TRUE) WHERE (((((((rt1.c3)AND(rt1.c1)))AND(vt0.c0)))IS(((rt1.c1)IS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)AND(rt1.c1)))AND(vt0.c0)))IS(((rt1.c1)IS(rt1.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((CAST(vt0.c0 AS BLOB)) IS TRUE));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((CAST(vt0.c0 AS BLOB)) IS TRUE) WHERE (((((((rt1.c3)AND(rt1.c1)))AND(vt0.c0)))IS(((rt1.c1)IS(rt1.c2)))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((~ (CASE WHEN rt0.c0 THEN 1112633711 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN 1112633711 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((~ (CASE WHEN rt0.c0 THEN 1112633711 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN 1112633711 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((~ (CASE WHEN rt0.c0 THEN 1112633711 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(json_array_length(vt0.c0)))) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(json_array_length(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(json_array_length(vt0.c0)))) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(json_array_length(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(json_array_length(vt0.c0)))) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)LIKE(((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END)LIKE(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)LIKE(((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END)LIKE(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)LIKE(((vt0.c0)OR(vt0.c0)))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0) IS FALSE) IN (((rt1.c2) IS TRUE), CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c3 END)) FULL OUTER JOIN vt0 ON (NOT (LIKE(rt1.c2, NULL, '.'))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0) IS FALSE) IN (((rt1.c2) IS TRUE), CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c3 END)) FULL OUTER JOIN vt0 ON (NOT (LIKE(rt1.c2, NULL, '.'))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0) IS FALSE) IN (((rt1.c2) IS TRUE), CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c3 END)) FULL OUTER JOIN vt0 ON (NOT (LIKE(rt1.c2, NULL, '.'))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0) IS FALSE) IN (((rt1.c2) IS TRUE), CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c3 END)) FULL OUTER JOIN vt0 ON (NOT (LIKE(rt1.c2, NULL, '.'))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0) IS FALSE) IN (((rt1.c2) IS TRUE), CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c3 END)) FULL OUTER JOIN vt0 ON (NOT (LIKE(rt1.c2, NULL, '.'))) WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(((rt0.c1)|(rt0.c0)))) ORDER BY (rt0.c3 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c1)|(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(((rt0.c1)|(rt0.c0)))) ORDER BY (rt0.c3 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c1)|(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (UPPER(((rt0.c1)|(rt0.c0)))) ORDER BY (rt0.c3 IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c0) IS FALSE)) ORDER BY LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.2810419578637905), CASE (rt0.c2 IN ())  WHEN rt0.c3 THEN rt0.c1 ELSE LIKELY(rt0.c1) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.2810419578637905), CASE (rt0.c2 IN ())  WHEN rt0.c3 THEN rt0.c1 ELSE LIKELY(rt0.c1) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c0) IS FALSE)) ORDER BY LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.2810419578637905), CASE (rt0.c2 IN ())  WHEN rt0.c3 THEN rt0.c1 ELSE LIKELY(rt0.c1) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.2810419578637905), CASE (rt0.c2 IN ())  WHEN rt0.c3 THEN rt0.c1 ELSE LIKELY(rt0.c1) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c0) IS FALSE)) ORDER BY LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.2810419578637905), CASE (rt0.c2 IN ())  WHEN rt0.c3 THEN rt0.c1 ELSE LIKELY(rt0.c1) END ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((x'' IN ()), ((rt0.c0) NOTNULL), (NOT (rt0.c0)))) AND (((- (rt0.c3)), (rt0.c3 IN (rt0.c3, rt0.c0)), (NOT (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((x'' IN ()), ((rt0.c0) NOTNULL), (NOT (rt0.c0)))) AND (((- (rt0.c3)), (rt0.c3 IN (rt0.c3, rt0.c0)), (NOT (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((x'' IN ()), ((rt0.c0) NOTNULL), (NOT (rt0.c0)))) AND (((- (rt0.c3)), (rt0.c3 IN (rt0.c3, rt0.c0)), (NOT (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((x'' IN ()), ((rt0.c0) NOTNULL), (NOT (rt0.c0)))) AND (((- (rt0.c3)), (rt0.c3 IN (rt0.c3, rt0.c0)), (NOT (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((x'' IN ()), ((rt0.c0) NOTNULL), (NOT (rt0.c0)))) AND (((- (rt0.c3)), (rt0.c3 IN (rt0.c3, rt0.c0)), (NOT (rt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (~ ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))) WHERE (CASE WHEN NULLIF(rt0.c3, rt0.c1) THEN CAST(rt0.c2 AS INTEGER) WHEN TRIM(rt0.c3, rt0.c3) THEN CASE WHEN vt0.c0 THEN rt0.c0 END WHEN CASE rt0.c3  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE vt1.c0 END THEN TRIM(DISTINCT rt0.c1, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(rt0.c3, rt0.c1) THEN CAST(rt0.c2 AS INTEGER) WHEN TRIM(rt0.c3, rt0.c3) THEN CASE WHEN vt0.c0 THEN rt0.c0 END WHEN CASE rt0.c3  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE vt1.c0 END THEN TRIM(DISTINCT rt0.c1, rt0.c2) END) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (~ ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (~ ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))) WHERE (CASE WHEN NULLIF(rt0.c3, rt0.c1) THEN CAST(rt0.c2 AS INTEGER) WHEN TRIM(rt0.c3, rt0.c3) THEN CASE WHEN vt0.c0 THEN rt0.c0 END WHEN CASE rt0.c3  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE vt1.c0 END THEN TRIM(DISTINCT rt0.c1, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(rt0.c3, rt0.c1) THEN CAST(rt0.c2 AS INTEGER) WHEN TRIM(rt0.c3, rt0.c3) THEN CASE WHEN vt0.c0 THEN rt0.c0 END WHEN CASE rt0.c3  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE vt1.c0 END THEN TRIM(DISTINCT rt0.c1, rt0.c2) END) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (~ ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (~ ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))) WHERE (CASE WHEN NULLIF(rt0.c3, rt0.c1) THEN CAST(rt0.c2 AS INTEGER) WHEN TRIM(rt0.c3, rt0.c3) THEN CASE WHEN vt0.c0 THEN rt0.c0 END WHEN CASE rt0.c3  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE vt1.c0 END THEN TRIM(DISTINCT rt0.c1, rt0.c2) END);
SELECT ALL * FROM rt1, vt1, vt0, rt0 WHERE ((NOT (((rt1.c0) IS TRUE)))) ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN (rt0.c2 IN ()) WHEN ((rt1.c2)==(rt0.c3)) THEN rt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((-1467608190)) AND ((rt1.c0))) THEN NULLIF(rt1.c2, rt1.c1) ELSE (((vt1.c0))==((rt0.c2))) END;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, vt1, vt0, rt0 ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN (rt0.c2 IN ()) WHEN ((rt1.c2)=(rt0.c3)) THEN rt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((-1467608190)) AND ((rt1.c0))) THEN NULLIF(rt1.c2, rt1.c1) ELSE (((vt1.c0))=((rt0.c2))) END);
SELECT ALL * FROM rt1, vt1, vt0, rt0 WHERE ((NOT (((rt1.c0) IS TRUE)))) ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN (rt0.c2 IN ()) WHEN ((rt1.c2)==(rt0.c3)) THEN rt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((-1467608190)) AND ((rt1.c0))) THEN NULLIF(rt1.c2, rt1.c1) ELSE (((vt1.c0))==((rt0.c2))) END;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, vt1, vt0, rt0 ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN (rt0.c2 IN ()) WHEN ((rt1.c2)=(rt0.c3)) THEN rt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((-1467608190)) AND ((rt1.c0))) THEN NULLIF(rt1.c2, rt1.c1) ELSE (((vt1.c0))=((rt0.c2))) END);
SELECT ALL * FROM rt1, vt1, vt0, rt0 WHERE ((NOT (((rt1.c0) IS TRUE)))) ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN (rt0.c2 IN ()) WHEN ((rt1.c2)==(rt0.c3)) THEN rt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((-1467608190)) AND ((rt1.c0))) THEN NULLIF(rt1.c2, rt1.c1) ELSE (((vt1.c0))==((rt0.c2))) END;
SELECT ALL * FROM rt0, rt1 WHERE (((((NULL)AND((((rt0.c0)) NOT BETWEEN (('')) AND ((rt0.c1))))))AND(((0.46391645485788724) NOT BETWEEN (rt0.c3) AND (rt1.c1))))) ORDER BY 0.9860162970901423 DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND((((rt0.c0)) NOT BETWEEN (('')) AND ((rt0.c1))))))AND(((0.46391645485788724) NOT BETWEEN (rt0.c3) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.9860162970901423 DESC  NULLS FIRST, NULL);
SELECT ALL * FROM rt0, rt1 WHERE (((((NULL)AND((((rt0.c0)) NOT BETWEEN (('')) AND ((rt0.c1))))))AND(((0.46391645485788724) NOT BETWEEN (rt0.c3) AND (rt1.c1))))) ORDER BY 0.9860162970901423 DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND((((rt0.c0)) NOT BETWEEN (('')) AND ((rt0.c1))))))AND(((0.46391645485788724) NOT BETWEEN (rt0.c3) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.9860162970901423 DESC  NULLS FIRST, NULL);
SELECT ALL * FROM rt0, rt1 WHERE (((((NULL)AND((((rt0.c0)) NOT BETWEEN (('')) AND ((rt0.c1))))))AND(((0.46391645485788724) NOT BETWEEN (rt0.c3) AND (rt1.c1))))) ORDER BY 0.9860162970901423 DESC  NULLS FIRST, NULL;
SELECT ALL COUNT(*) FROM rt1 WHERE (((TYPEOF(DISTINCT rt1.c3)) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY LENGTH(((rt1.c2) BETWEEN (rt1.c0) AND (''))) DESC  NULLS FIRST, ((rt1.c1) NOTNULL) COLLATE BINARY  NULLS LAST, (((('6>J[I(') NOTNULL))<=(((rt1.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt1.c3)) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY LENGTH(((rt1.c2) BETWEEN (rt1.c0) AND (''))) DESC  NULLS FIRST, ((rt1.c1) NOTNULL) COLLATE BINARY  NULLS LAST, (((('6>J[I(') NOTNULL))<=(((rt1.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((TYPEOF(DISTINCT rt1.c3)) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY LENGTH(((rt1.c2) BETWEEN (rt1.c0) AND (''))) DESC  NULLS FIRST, ((rt1.c1) NOTNULL) COLLATE BINARY  NULLS LAST, (((('6>J[I(') NOTNULL))<=(((rt1.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt1.c3)) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY LENGTH(((rt1.c2) BETWEEN (rt1.c0) AND (''))) DESC  NULLS FIRST, ((rt1.c1) NOTNULL) COLLATE BINARY  NULLS LAST, (((('6>J[I(') NOTNULL))<=(((rt1.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((TYPEOF(DISTINCT rt1.c3)) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY LENGTH(((rt1.c2) BETWEEN (rt1.c0) AND (''))) DESC  NULLS FIRST, ((rt1.c1) NOTNULL) COLLATE BINARY  NULLS LAST, (((('6>J[I(') NOTNULL))<=(((rt1.c0) ISNULL)))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE (NOT (rt1.c1))  WHEN ((rt1.c0) ISNULL) THEN CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN '542105941' THEN rt1.c2 WHEN vt0.c0 THEN x'' ELSE rt0.c0 END END FULL OUTER JOIN rt1 ON ((CASE rt0.c3  WHEN rt0.c1 THEN rt1.c3 END) NOT BETWEEN ('0.7170793549397406') AND (rt1.c0)) WHERE ((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((CAST(rt1.c2 AS NUMERIC))))) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))AND((NOT (rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c3 END)) ASC, (CAST(rt1.c2 AS NUMERIC) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE (NOT (rt1.c1))  WHEN ((rt1.c0) ISNULL) THEN CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN '542105941' THEN rt1.c2 WHEN vt0.c0 THEN x'' ELSE rt0.c0 END END FULL OUTER JOIN rt1 ON ((CASE rt0.c3  WHEN rt0.c1 THEN rt1.c3 END) NOT BETWEEN ('0.7170793549397406') AND (rt1.c0)) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))AND((NOT (rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c3 END)) ASC, (CAST(rt1.c2 AS NUMERIC) IN ()) ASC);
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE (NOT (rt1.c1))  WHEN ((rt1.c0) ISNULL) THEN CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN '542105941' THEN rt1.c2 WHEN vt0.c0 THEN x'' ELSE rt0.c0 END END FULL OUTER JOIN rt1 ON ((CASE rt0.c3  WHEN rt0.c1 THEN rt1.c3 END) NOT BETWEEN ('0.7170793549397406') AND (rt1.c0)) WHERE ((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((CAST(rt1.c2 AS NUMERIC))))) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))AND((NOT (rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c3 END)) ASC, (CAST(rt1.c2 AS NUMERIC) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CASE (NOT (rt1.c1))  WHEN ((rt1.c0) ISNULL) THEN CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN '542105941' THEN rt1.c2 WHEN vt0.c0 THEN x'' ELSE rt0.c0 END END FULL OUTER JOIN rt1 ON ((CASE rt0.c3  WHEN rt0.c1 THEN rt1.c3 END) NOT BETWEEN ('0.7170793549397406') AND (rt1.c0)) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))AND((NOT (rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c3 END)) ASC, (CAST(rt1.c2 AS NUMERIC) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)<=(vt0.c0))  WHEN LIKELY(DISTINCT vt0.c0) THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<=(vt0.c0))  WHEN LIKELY(DISTINCT vt0.c0) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)<=(vt0.c0))  WHEN LIKELY(DISTINCT vt0.c0) THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<=(vt0.c0))  WHEN LIKELY(DISTINCT vt0.c0) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)<=(vt0.c0))  WHEN LIKELY(DISTINCT vt0.c0) THEN CAST(vt0.c0 AS REAL) END);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN rt1 WHERE ((CAST(rt1.c3 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c3 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN rt1 WHERE ((CAST(rt1.c3 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c3 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN rt1 WHERE ((CAST(rt1.c3 AS NUMERIC) IN ()));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))IS NOT((((vt0.c0))==((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0)))IS NOT((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))IS NOT((((vt0.c0))==((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0)))IS NOT((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))IS NOT((((vt0.c0))==((vt0.c0))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3, rt0.c2, vt0.c0, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, vt0.c0, rt0.c0, NULL))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c2, vt0.c0, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, vt0.c0, rt0.c0, NULL))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3, rt0.c2, vt0.c0, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, vt0.c0, rt0.c0, NULL))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c2, vt0.c0, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, vt0.c0, rt0.c0, NULL))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3, rt0.c2, vt0.c0, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, vt0.c0, rt0.c0, NULL))) COLLATE NOCASE);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB('')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)GLOB(''))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB('')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)GLOB(''))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB('')));
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, rt0 WHERE (x'') ORDER BY ((((((rt1.c0)OR(0.7380786399539365)))OR(vt1.c0)))%(rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt1, vt0, rt0 ORDER BY ((((((rt1.c0)OR(0.7380786399539365)))OR(vt1.c0)))%(rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, rt0 WHERE (x'') ORDER BY ((((((rt1.c0)OR(0.7380786399539365)))OR(vt1.c0)))%(rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt1, vt0, rt0 ORDER BY ((((((rt1.c0)OR(0.7380786399539365)))OR(vt1.c0)))%(rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, rt0 WHERE (x'') ORDER BY ((((((rt1.c0)OR(0.7380786399539365)))OR(vt1.c0)))%(rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, vt1 WHERE ((((rt0.c1)) BETWEEN ((SUBSTR(rt1.c2, rt1.c1))) AND ((CASE rt1.c0  WHEN rt0.c3 THEN rt1.c0 END)))) ORDER BY ((((rt1.c1 COLLATE NOCASE)AND((((rt0.c0))>((vt1.c0))))))AND(NULLIF(rt1.c1, vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((SUBSTR(rt1.c2, rt1.c1))) AND ((CASE rt1.c0  WHEN rt0.c3 THEN rt1.c0 END)))) IS TRUE)  as count FROM rt1, rt0, vt0, vt1 ORDER BY ((((rt1.c1 COLLATE NOCASE)AND((((rt0.c0))>((vt1.c0))))))AND(NULLIF(rt1.c1, vt1.c0))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, vt1 WHERE ((((rt0.c1)) BETWEEN ((SUBSTR(rt1.c2, rt1.c1))) AND ((CASE rt1.c0  WHEN rt0.c3 THEN rt1.c0 END)))) ORDER BY ((((rt1.c1 COLLATE NOCASE)AND((((rt0.c0))>((vt1.c0))))))AND(NULLIF(rt1.c1, vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((SUBSTR(rt1.c2, rt1.c1))) AND ((CASE rt1.c0  WHEN rt0.c3 THEN rt1.c0 END)))) IS TRUE)  as count FROM rt1, rt0, vt0, vt1 ORDER BY ((((rt1.c1 COLLATE NOCASE)AND((((rt0.c0))>((vt1.c0))))))AND(NULLIF(rt1.c1, vt1.c0))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, vt1 WHERE ((((rt0.c1)) BETWEEN ((SUBSTR(rt1.c2, rt1.c1))) AND ((CASE rt1.c0  WHEN rt0.c3 THEN rt1.c0 END)))) ORDER BY ((((rt1.c1 COLLATE NOCASE)AND((((rt0.c0))>((vt1.c0))))))AND(NULLIF(rt1.c1, vt1.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)<(0.014262291574270058))))>((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<(0.014262291574270058))))>((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)<(0.014262291574270058))))>((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<(0.014262291574270058))))>((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)<(0.014262291574270058))))>((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT COUNT(*) FROM rt0, vt1, rt1, vt0 WHERE ((((rt0.c3 IN ()))!=(((((((((vt1.c0)OR(rt1.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))!=(((((((((vt1.c0)OR(rt1.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt1, rt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, rt1, vt0 WHERE ((((rt0.c3 IN ()))!=(((((((((vt1.c0)OR(rt1.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))!=(((((((((vt1.c0)OR(rt1.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt1, rt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, rt1, vt0 WHERE ((((rt0.c3 IN ()))!=(((((((((vt1.c0)OR(rt1.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST(((x'db34bec7')IS(rt0.c0)) AS BLOB)) ORDER BY CASE WHEN CASE rt1.c0  WHEN rt1.c2 THEN NULL END THEN (((rt0.c1))>=((rt1.c3))) WHEN (rt0.c2 IN ()) THEN CAST(0.983025665071595 AS TEXT) WHEN CAST(rt1.c1 AS NUMERIC) THEN (~ (rt0.c0)) ELSE ((rt0.c0)AND(rt1.c0)) END  NULLS FIRST, CAST((((rt1.c0))<((rt0.c1))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'db34bec7')IS(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CASE WHEN CASE rt1.c0  WHEN rt1.c2 THEN NULL END THEN (((rt0.c1))>=((rt1.c3))) WHEN (rt0.c2 IN ()) THEN CAST(0.983025665071595 AS TEXT) WHEN CAST(rt1.c1 AS NUMERIC) THEN (~ (rt0.c0)) ELSE ((rt0.c0)AND(rt1.c0)) END  NULLS FIRST, CAST((((rt1.c0))<((rt0.c1))) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST(((x'db34bec7')IS(rt0.c0)) AS BLOB)) ORDER BY CASE WHEN CASE rt1.c0  WHEN rt1.c2 THEN NULL END THEN (((rt0.c1))>=((rt1.c3))) WHEN (rt0.c2 IN ()) THEN CAST(0.983025665071595 AS TEXT) WHEN CAST(rt1.c1 AS NUMERIC) THEN (~ (rt0.c0)) ELSE ((rt0.c0)AND(rt1.c0)) END  NULLS FIRST, CAST((((rt1.c0))<((rt0.c1))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'db34bec7')IS(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CASE WHEN CASE rt1.c0  WHEN rt1.c2 THEN NULL END THEN (((rt0.c1))>=((rt1.c3))) WHEN (rt0.c2 IN ()) THEN CAST(0.983025665071595 AS TEXT) WHEN CAST(rt1.c1 AS NUMERIC) THEN (~ (rt0.c0)) ELSE ((rt0.c0)AND(rt1.c0)) END  NULLS FIRST, CAST((((rt1.c0))<((rt0.c1))) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST(((x'db34bec7')IS(rt0.c0)) AS BLOB)) ORDER BY CASE WHEN CASE rt1.c0  WHEN rt1.c2 THEN NULL END THEN (((rt0.c1))>=((rt1.c3))) WHEN (rt0.c2 IN ()) THEN CAST(0.983025665071595 AS TEXT) WHEN CAST(rt1.c1 AS NUMERIC) THEN (~ (rt0.c0)) ELSE ((rt0.c0)AND(rt1.c0)) END  NULLS FIRST, CAST((((rt1.c0))<((rt0.c1))) AS BLOB);
SELECT COUNT(*) FROM rt1 WHERE (CASE CASE WHEN rt1.c1 THEN rt1.c0 END  WHEN json_array_length(rt1.c1, rt1.c0) THEN x'' WHEN ((rt1.c2)+(rt1.c2)) THEN ((rt1.c2)+(rt1.c0)) WHEN ((rt1.c2) IS TRUE) THEN LIKELIHOOD(rt1.c2, 0.18869251503011364) END) ORDER BY NULL ASC, ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))<(IFNULL(DISTINCT rt1.c3, NULL))) ASC, ((((NULL)AND(ABS(rt1.c2))))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt1.c1 THEN rt1.c0 END  WHEN json_array_length(rt1.c1, rt1.c0) THEN x'' WHEN ((rt1.c2)+(rt1.c2)) THEN ((rt1.c2)+(rt1.c0)) WHEN ((rt1.c2) IS TRUE) THEN LIKELIHOOD(rt1.c2, 0.18869251503011364) END) IS TRUE)  as count FROM rt1 ORDER BY NULL ASC, ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))<(IFNULL(DISTINCT rt1.c3, NULL))) ASC, ((((NULL)AND(ABS(rt1.c2))))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (CASE CASE WHEN rt1.c1 THEN rt1.c0 END  WHEN json_array_length(rt1.c1, rt1.c0) THEN x'' WHEN ((rt1.c2)+(rt1.c2)) THEN ((rt1.c2)+(rt1.c0)) WHEN ((rt1.c2) IS TRUE) THEN LIKELIHOOD(rt1.c2, 0.18869251503011364) END) ORDER BY NULL ASC, ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))<(IFNULL(DISTINCT rt1.c3, NULL))) ASC, ((((NULL)AND(ABS(rt1.c2))))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt1.c1 THEN rt1.c0 END  WHEN json_array_length(rt1.c1, rt1.c0) THEN x'' WHEN ((rt1.c2)+(rt1.c2)) THEN ((rt1.c2)+(rt1.c0)) WHEN ((rt1.c2) IS TRUE) THEN LIKELIHOOD(rt1.c2, 0.18869251503011364) END) IS TRUE)  as count FROM rt1 ORDER BY NULL ASC, ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))<(IFNULL(DISTINCT rt1.c3, NULL))) ASC, ((((NULL)AND(ABS(rt1.c2))))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) DESC);
SELECT ALL * FROM rt1 WHERE (rt1.c3) ORDER BY CAST(NULL AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY CAST(NULL AS INTEGER)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c3) ORDER BY CAST(NULL AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY CAST(NULL AS INTEGER)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c3) ORDER BY CAST(NULL AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((((((((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(rt0.c3)))!=((rt0.c1 IN ()))) DESC, (NOT (((rt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((((((((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(rt0.c3)))<>((rt0.c1 IN ()))) DESC, (NOT (((rt1.c0) IS FALSE))));
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((((((((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(rt0.c3)))!=((rt0.c1 IN ()))) DESC, (NOT (((rt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((((((((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(rt0.c3)))<>((rt0.c1 IN ()))) DESC, (NOT (((rt1.c0) IS FALSE))));
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((((((((((vt0.c0)AND(rt1.c1)))AND(vt0.c0)))OR(rt1.c1)))AND(rt0.c3)))!=((rt0.c1 IN ()))) DESC, (NOT (((rt1.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, vt1 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, vt1 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, vt1 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 END) ISNULL)) ORDER BY (+ (rt1.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 END) ISNULL)) IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY (+ (rt1.c3 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 END) ISNULL)) ORDER BY (+ (rt1.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 END) ISNULL)) IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY (+ (rt1.c3 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 END) ISNULL)) ORDER BY (+ (rt1.c3 COLLATE NOCASE));
SELECT * FROM rt0, rt1, vt0, vt1 WHERE ((((rt1.c3)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((rt0.c1)))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1);
SELECT * FROM rt0, rt1, vt0, vt1 WHERE ((((rt1.c3)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((rt0.c1)))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1);
SELECT * FROM rt0, rt1, vt0, vt1 WHERE ((((rt1.c3)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB)) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB)) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB)) ORDER BY vt1.c0 ASC;
SELECT ALL * FROM vt1, rt1 WHERE (((CAST(rt1.c3 AS REAL))>(('1117308166' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS REAL))>(('1117308166' IN ())))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (((CAST(rt1.c3 AS REAL))>(('1117308166' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS REAL))>(('1117308166' IN ())))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (((CAST(rt1.c3 AS REAL))>(('1117308166' IN ()))));
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON UPPER(DISTINCT (- (vt1.c0))) RIGHT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN rt1.c3 THEN vt1.c0 ELSE rt0.c1 END) BETWEEN (((vt1.c0)-(rt0.c2))) AND (TRIM(vt0.c0))) FULL OUTER JOIN rt0 ON '775342909' WHERE (DATETIME(((((((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)), (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))), rt1.c3)) ORDER BY (((rt1.c0, vt1.c0, 0.7991379281670806)) NOT BETWEEN ((((rt1.c1) IS TRUE), CAST(rt0.c3 AS BLOB), ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))) AND (((((rt1.c0))==((rt0.c1))), ((rt1.c3) ISNULL), (((rt1.c1))>=((rt1.c3))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATETIME(((((((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)), (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))), rt1.c3)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON UPPER(DISTINCT (- (vt1.c0))) RIGHT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN rt1.c3 THEN vt1.c0 ELSE rt0.c1 END) BETWEEN (((vt1.c0)-(rt0.c2))) AND (TRIM(vt0.c0))) FULL OUTER JOIN rt0 ON '775342909' ORDER BY (((rt1.c0, vt1.c0, 0.7991379281670806)) NOT BETWEEN ((((rt1.c1) IS TRUE), CAST(rt0.c3 AS BLOB), ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))) AND (((((rt1.c0))=((rt0.c1))), ((rt1.c3) ISNULL), (((rt1.c1))>=((rt1.c3))))))  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON UPPER(DISTINCT (- (vt1.c0))) RIGHT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN rt1.c3 THEN vt1.c0 ELSE rt0.c1 END) BETWEEN (((vt1.c0)-(rt0.c2))) AND (TRIM(vt0.c0))) FULL OUTER JOIN rt0 ON '775342909' WHERE (DATETIME(((((((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)), (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))), rt1.c3)) ORDER BY (((rt1.c0, vt1.c0, 0.7991379281670806)) NOT BETWEEN ((((rt1.c1) IS TRUE), CAST(rt0.c3 AS BLOB), ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))) AND (((((rt1.c0))==((rt0.c1))), ((rt1.c3) ISNULL), (((rt1.c1))>=((rt1.c3))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATETIME(((((((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)), (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))), rt1.c3)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON UPPER(DISTINCT (- (vt1.c0))) RIGHT OUTER JOIN vt1 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN rt1.c3 THEN vt1.c0 ELSE rt0.c1 END) BETWEEN (((vt1.c0)-(rt0.c2))) AND (TRIM(vt0.c0))) FULL OUTER JOIN rt0 ON '775342909' ORDER BY (((rt1.c0, vt1.c0, 0.7991379281670806)) NOT BETWEEN ((((rt1.c1) IS TRUE), CAST(rt0.c3 AS BLOB), ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))) AND (((((rt1.c0))=((rt0.c1))), ((rt1.c3) ISNULL), (((rt1.c1))>=((rt1.c3))))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('-1543981290');
SELECT SUM(count) FROM (SELECT (('-1543981290') IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('-1543981290');
SELECT SUM(count) FROM (SELECT (('-1543981290') IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('-1543981290');
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0 IN (rt0.c1, rt0.c1)))OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c3) NOT NULL))) WHERE (((((x''))>((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((x''))>((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0 IN (rt0.c1, rt0.c1)))OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c3) NOT NULL))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0 IN (rt0.c1, rt0.c1)))OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c3) NOT NULL))) WHERE (((((x''))>((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((x''))>((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0 IN (rt0.c1, rt0.c1)))OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c3) NOT NULL))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0 IN (rt0.c1, rt0.c1)))OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c3) NOT NULL))) WHERE (((((x''))>((rt0.c2))) IN ()));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((rt1.c0)AND(rt1.c3)) IN ()) INNER JOIN vt1 ON rt0.c3 WHERE ((((((rt1.c1)<=(rt1.c2))))<>((NULLIF(rt0.c1, rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)<=(rt1.c2))))!=((NULLIF(rt0.c1, rt1.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((rt1.c0)AND(rt1.c3)) IN ()) INNER JOIN vt1 ON rt0.c3);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((rt1.c0)AND(rt1.c3)) IN ()) INNER JOIN vt1 ON rt0.c3 WHERE ((((((rt1.c1)<=(rt1.c2))))<>((NULLIF(rt0.c1, rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)<=(rt1.c2))))!=((NULLIF(rt0.c1, rt1.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((rt1.c0)AND(rt1.c3)) IN ()) INNER JOIN vt1 ON rt0.c3);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((rt1.c0)AND(rt1.c3)) IN ()) INNER JOIN vt1 ON rt0.c3 WHERE ((((((rt1.c1)<=(rt1.c2))))<>((NULLIF(rt0.c1, rt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE (((((((0.5043788707275063)AND('ꖊ1?jrO6')))OR(rt1.c0)))>=(x''))) ORDER BY ((x'')||(rt1.c1)) COLLATE NOCASE ASC  NULLS LAST, '' DESC;
SELECT SUM(count) FROM (SELECT ((((((((0.5043788707275063)AND('ꖊ1?jrO6')))OR(rt1.c0)))>=(x''))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY ((x'')||(rt1.c1)) COLLATE NOCASE ASC  NULLS LAST, '' DESC);
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE (((((((0.5043788707275063)AND('ꖊ1?jrO6')))OR(rt1.c0)))>=(x''))) ORDER BY ((x'')||(rt1.c1)) COLLATE NOCASE ASC  NULLS LAST, '' DESC;
SELECT SUM(count) FROM (SELECT ((((((((0.5043788707275063)AND('ꖊ1?jrO6')))OR(rt1.c0)))>=(x''))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY ((x'')||(rt1.c1)) COLLATE NOCASE ASC  NULLS LAST, '' DESC);
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE (((((((0.5043788707275063)AND('ꖊ1?jrO6')))OR(rt1.c0)))>=(x''))) ORDER BY ((x'')||(rt1.c1)) COLLATE NOCASE ASC  NULLS LAST, '' DESC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON CAST(((((0.14193660518513596)AND(vt0.c0)))OR(rt1.c3)) AS TEXT) FULL OUTER JOIN vt1 ON rt1.c1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CAST(((((0.14193660518513596)AND(vt0.c0)))OR(rt1.c3)) AS TEXT) FULL OUTER JOIN vt1 ON rt1.c1);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON CAST(((((0.14193660518513596)AND(vt0.c0)))OR(rt1.c3)) AS TEXT) FULL OUTER JOIN vt1 ON rt1.c1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CAST(((((0.14193660518513596)AND(vt0.c0)))OR(rt1.c3)) AS TEXT) FULL OUTER JOIN vt1 ON rt1.c1);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON CAST(((((0.14193660518513596)AND(vt0.c0)))OR(rt1.c3)) AS TEXT) FULL OUTER JOIN vt1 ON rt1.c1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (UPPER(rt1.c0)) ORDER BY (((NULL))==((((((((((rt1.c3)AND(x'132e')))AND(rt1.c3)))OR(rt0.c3)))AND(rt1.c3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt1.c0)) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (((NULL))==((((((((((rt1.c3)AND(x'132e')))AND(rt1.c3)))OR(rt0.c3)))AND(rt1.c3))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (UPPER(rt1.c0)) ORDER BY (((NULL))==((((((((((rt1.c3)AND(x'132e')))AND(rt1.c3)))OR(rt0.c3)))AND(rt1.c3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt1.c0)) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (((NULL))==((((((((((rt1.c3)AND(x'132e')))AND(rt1.c3)))OR(rt0.c3)))AND(rt1.c3))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (UPPER(rt1.c0)) ORDER BY (((NULL))==((((((((((rt1.c3)AND(x'132e')))AND(rt1.c3)))OR(rt0.c3)))AND(rt1.c3))))) ASC  NULLS FIRST;
SELECT * FROM rt1, vt0 CROSS JOIN vt1 ON 361015091 RIGHT OUTER JOIN rt0 ON (- (((vt1.c0)GLOB(rt1.c2)))) WHERE (((((vt0.c0)AND(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN vt1 ON 361015091 RIGHT OUTER JOIN rt0 ON (- (((vt1.c0)GLOB(rt1.c2)))));
SELECT * FROM rt1, vt0 CROSS JOIN vt1 ON 361015091 RIGHT OUTER JOIN rt0 ON (- (((vt1.c0)GLOB(rt1.c2)))) WHERE (((((vt0.c0)AND(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN vt1 ON 361015091 RIGHT OUTER JOIN rt0 ON (- (((vt1.c0)GLOB(rt1.c2)))));
SELECT * FROM rt1, vt0 CROSS JOIN vt1 ON 361015091 RIGHT OUTER JOIN rt0 ON (- (((vt1.c0)GLOB(rt1.c2)))) WHERE (((((vt0.c0)AND(((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(rt0.c3 COLLATE BINARY)));
SELECT * FROM rt0 WHERE (CASE WHEN ((((((((NULL)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c1) NOTNULL) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END) ORDER BY (NOT ((- (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((NULL)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c1) NOTNULL) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((- (rt0.c3))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((((((((NULL)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c1) NOTNULL) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END) ORDER BY (NOT ((- (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((NULL)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c1) NOTNULL) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((- (rt0.c3))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((((((((NULL)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c1) NOTNULL) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END) ORDER BY (NOT ((- (rt0.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0, rt0, vt1 WHERE ((((rt0.c0 IN (NULL, rt0.c2))) ISNULL)) ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN rt1.c3 ELSE (~ ('')) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (NULL, rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt1, vt0, rt0, vt1 ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN rt1.c3 ELSE (~ ('')) END);
SELECT COUNT(*) FROM rt1, vt0, rt0, vt1 WHERE ((((rt0.c0 IN (NULL, rt0.c2))) ISNULL)) ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN rt1.c3 ELSE (~ ('')) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (NULL, rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt1, vt0, rt0, vt1 ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN rt1.c3 ELSE (~ ('')) END);
SELECT COUNT(*) FROM rt1, vt0, rt0, vt1 WHERE ((((rt0.c0 IN (NULL, rt0.c2))) ISNULL)) ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN rt1.c3 ELSE (~ ('')) END;
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN rt1 WHERE (((NULL)>=(-2.075975732E9)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(-2.075975732E9))) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN rt1 WHERE (((NULL)>=(-2.075975732E9)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(-2.075975732E9))) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN rt1 WHERE (((NULL)>=(-2.075975732E9)));
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((~ (CAST(rt1.c1 AS BLOB)))) ORDER BY CAST(rt1.c1 AS INTEGER)  NULLS FIRST, CASE rt1.c0  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CAST(rt1.c1 AS INTEGER)  NULLS FIRST, CASE rt1.c0  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM DESC);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((~ (CAST(rt1.c1 AS BLOB)))) ORDER BY CAST(rt1.c1 AS INTEGER)  NULLS FIRST, CASE rt1.c0  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CAST(rt1.c1 AS INTEGER)  NULLS FIRST, CASE rt1.c0  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM DESC);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((~ (CAST(rt1.c1 AS BLOB)))) ORDER BY CAST(rt1.c1 AS INTEGER)  NULLS FIRST, CASE rt1.c0  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt0, rt1, rt0, vt1 WHERE (((((rt0.c0)IS NOT(rt1.c1))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (rt1.c3 COLLATE NOCASE))) ORDER BY rt0.c0  NULLS LAST, ((((((((rt1.c3 COLLATE RTRIM)OR(rt1.c0)))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(((rt0.c0) ISNULL))))OR((((rt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt1.c1))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY rt0.c0  NULLS LAST, ((((((((rt1.c3 COLLATE RTRIM)OR(rt1.c0)))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(((rt0.c0) ISNULL))))OR((((rt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, rt0, vt1 WHERE (((((rt0.c0)IS NOT(rt1.c1))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (rt1.c3 COLLATE NOCASE))) ORDER BY rt0.c0  NULLS LAST, ((((((((rt1.c3 COLLATE RTRIM)OR(rt1.c0)))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(((rt0.c0) ISNULL))))OR((((rt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt1.c1))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY rt0.c0  NULLS LAST, ((((((((rt1.c3 COLLATE RTRIM)OR(rt1.c0)))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(((rt0.c0) ISNULL))))OR((((rt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, rt0, vt1 WHERE (((((rt0.c0)IS NOT(rt1.c1))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (rt1.c3 COLLATE NOCASE))) ORDER BY rt0.c0  NULLS LAST, ((((((((rt1.c3 COLLATE RTRIM)OR(rt1.c0)))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(((rt0.c0) ISNULL))))OR((((rt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((NULL IN ())) BETWEEN (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c2))) AND (CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ())) BETWEEN (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c2))) AND (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((NULL IN ())) BETWEEN (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c2))) AND (CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ())) BETWEEN (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c2))) AND (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((NULL IN ())) BETWEEN (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c2))) AND (CAST(rt1.c0 AS INTEGER))));
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS BLOB));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT ((+ (vt0.c0))))) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT ((+ (vt0.c0))))) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT ((+ (vt0.c0))))) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS BLOB) ASC;
SELECT * FROM vt1, rt1, rt0 WHERE (CASE (- (rt0.c1))  WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)) WHEN (rt0.c0 IN (rt0.c3, x'')) THEN (rt1.c1 IN (rt0.c1)) WHEN ((rt0.c2) ISNULL) THEN (1098165486 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c1))  WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)) WHEN (rt0.c0 IN (rt0.c3, x'')) THEN (rt1.c1 IN (rt0.c1)) WHEN ((rt0.c2) ISNULL) THEN (1098165486 IN ()) END) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT * FROM vt1, rt1, rt0 WHERE (CASE (- (rt0.c1))  WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)) WHEN (rt0.c0 IN (rt0.c3, x'')) THEN (rt1.c1 IN (rt0.c1)) WHEN ((rt0.c2) ISNULL) THEN (1098165486 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c1))  WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)) WHEN (rt0.c0 IN (rt0.c3, x'')) THEN (rt1.c1 IN (rt0.c1)) WHEN ((rt0.c2) ISNULL) THEN (1098165486 IN ()) END) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT * FROM vt1, rt1, rt0 WHERE (CASE (- (rt0.c1))  WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)) WHEN (rt0.c0 IN (rt0.c3, x'')) THEN (rt1.c1 IN (rt0.c1)) WHEN ((rt0.c2) ISNULL) THEN (1098165486 IN ()) END);
SELECT ALL * FROM vt1 WHERE (((((0.5646980284297751)GLOB(vt1.c0)))&(CAST(vt1.c0 AS INTEGER)))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT NULL), '', ((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.5646980284297751)GLOB(vt1.c0)))&(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT NULL), '', ((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((0.5646980284297751)GLOB(vt1.c0)))&(CAST(vt1.c0 AS INTEGER)))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT NULL), '', ((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.5646980284297751)GLOB(vt1.c0)))&(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT NULL), '', ((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((0.5646980284297751)GLOB(vt1.c0)))&(CAST(vt1.c0 AS INTEGER)))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT NULL), '', ((vt1.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (x'') ORDER BY (+ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY (+ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (x'') ORDER BY (+ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY (+ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (x'') ORDER BY (+ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((('') IS TRUE)) ORDER BY ((((vt0.c0)AND(vt0.c0)))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('') IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('') IS TRUE)) ORDER BY ((((vt0.c0)AND(vt0.c0)))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('') IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('') IS TRUE)) ORDER BY ((((vt0.c0)AND(vt0.c0)))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (('1098165486') NOT BETWEEN ('') AND (((rt1.c0)LIKE(rt1.c1)))) WHERE ((((rt1.c1, rt1.c3, rt0.c2)) BETWEEN ((CASE WHEN 0.1405824078849447 THEN rt0.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END, 0.5721904696359765, ((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0)))) AND ((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN rt1.c1 THEN rt0.c3 END, CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END, TIME(rt1.c3, rt0.c2, rt0.c0))))) ORDER BY CASE rt0.c3  WHEN rt1.c0 THEN UPPER(rt1.c3) WHEN vt0.c0 THEN TYPEOF(DISTINCT rt1.c3) WHEN '' THEN ((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)) END DESC, ((rt1.c1)/(NULL)), 1092046260 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, rt1.c3, rt0.c2)) BETWEEN ((CASE WHEN 0.1405824078849447 THEN rt0.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END, 0.5721904696359765, ((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0)))) AND ((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN rt1.c1 THEN rt0.c3 END, CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END, TIME(rt1.c3, rt0.c2, rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (('1098165486') NOT BETWEEN ('') AND (((rt1.c0)LIKE(rt1.c1)))) ORDER BY CASE rt0.c3  WHEN rt1.c0 THEN UPPER(rt1.c3) WHEN vt0.c0 THEN TYPEOF(DISTINCT rt1.c3) WHEN '' THEN ((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)) END DESC, ((rt1.c1)/(NULL)), 1092046260 DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (('1098165486') NOT BETWEEN ('') AND (((rt1.c0)LIKE(rt1.c1)))) WHERE ((((rt1.c1, rt1.c3, rt0.c2)) BETWEEN ((CASE WHEN 0.1405824078849447 THEN rt0.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END, 0.5721904696359765, ((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0)))) AND ((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN rt1.c1 THEN rt0.c3 END, CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END, TIME(rt1.c3, rt0.c2, rt0.c0))))) ORDER BY CASE rt0.c3  WHEN rt1.c0 THEN UPPER(rt1.c3) WHEN vt0.c0 THEN TYPEOF(DISTINCT rt1.c3) WHEN '' THEN ((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)) END DESC, ((rt1.c1)/(NULL)), 1092046260 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, rt1.c3, rt0.c2)) BETWEEN ((CASE WHEN 0.1405824078849447 THEN rt0.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END, 0.5721904696359765, ((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0)))) AND ((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN rt1.c1 THEN rt0.c3 END, CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END, TIME(rt1.c3, rt0.c2, rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (('1098165486') NOT BETWEEN ('') AND (((rt1.c0)LIKE(rt1.c1)))) ORDER BY CASE rt0.c3  WHEN rt1.c0 THEN UPPER(rt1.c3) WHEN vt0.c0 THEN TYPEOF(DISTINCT rt1.c3) WHEN '' THEN ((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)) END DESC, ((rt1.c1)/(NULL)), 1092046260 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON json_array_length(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END, ((rt0.c3)OR(rt0.c3))) CROSS JOIN vt1 ON (((rt0.c1 IN ())) ISNULL) WHERE (((((rt0.c2)<(rt0.c0)))>=(((vt1.c0)>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<(rt0.c0)))>=(((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON json_array_length(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END, ((rt0.c3)OR(rt0.c3))) CROSS JOIN vt1 ON (((rt0.c1 IN ())) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON json_array_length(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END, ((rt0.c3)OR(rt0.c3))) CROSS JOIN vt1 ON (((rt0.c1 IN ())) ISNULL) WHERE (((((rt0.c2)<(rt0.c0)))>=(((vt1.c0)>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<(rt0.c0)))>=(((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON json_array_length(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END, ((rt0.c3)OR(rt0.c3))) CROSS JOIN vt1 ON (((rt0.c1 IN ())) ISNULL));
SELECT ALL * FROM vt1, rt1 WHERE (vt1.c0) ORDER BY ((rt1.c2)==(rt1.c3)) COLLATE RTRIM  NULLS LAST, ((UNLIKELY(rt1.c1)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((rt1.c2)==(rt1.c3)) COLLATE RTRIM  NULLS LAST, ((UNLIKELY(rt1.c1)) NOTNULL) DESC);
SELECT ALL * FROM vt1, rt1 WHERE (vt1.c0) ORDER BY ((rt1.c2)==(rt1.c3)) COLLATE RTRIM  NULLS LAST, ((UNLIKELY(rt1.c1)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((rt1.c2)==(rt1.c3)) COLLATE RTRIM  NULLS LAST, ((UNLIKELY(rt1.c1)) NOTNULL) DESC);
SELECT ALL * FROM vt1, rt1 WHERE (vt1.c0) ORDER BY ((rt1.c2)==(rt1.c3)) COLLATE RTRIM  NULLS LAST, ((UNLIKELY(rt1.c1)) NOTNULL) DESC;
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CASE (((rt0.c0))<((rt0.c1)))  WHEN (rt0.c2 IN ()) THEN (rt1.c3 IN (rt0.c3)) WHEN (rt1.c1 IN (rt1.c1)) THEN ((rt0.c2)>(rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END THEN (- (vt1.c0)) ELSE ((((((((rt1.c0)OR(rt1.c1)))OR(vt1.c0)))AND(rt1.c3)))OR(rt0.c3)) END) ORDER BY (((rt1.c1, rt0.c0, rt1.c2)) BETWEEN ((((rt0.c1)AND(rt0.c3)), ((0.13420255075960352) NOT BETWEEN (rt0.c3) AND (rt1.c2)), ((rt0.c0) ISNULL))) AND ((rt0.c0 COLLATE NOCASE, (((rt1.c2)) BETWEEN ((rt0.c3)) AND ((rt1.c3))), CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c1 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0))<((rt0.c1)))  WHEN (rt0.c2 IN ()) THEN (rt1.c3 IN (rt0.c3)) WHEN (rt1.c1 IN (rt1.c1)) THEN ((rt0.c2)>(rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END THEN (- (vt1.c0)) ELSE ((((((((rt1.c0)OR(rt1.c1)))OR(vt1.c0)))AND(rt1.c3)))OR(rt0.c3)) END) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (((rt1.c1, rt0.c0, rt1.c2)) BETWEEN ((((rt0.c1)AND(rt0.c3)), ((0.13420255075960352) NOT BETWEEN (rt0.c3) AND (rt1.c2)), ((rt0.c0) ISNULL))) AND ((rt0.c0 COLLATE NOCASE, (((rt1.c2)) BETWEEN ((rt0.c3)) AND ((rt1.c3))), CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c1 END))) DESC);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CASE (((rt0.c0))<((rt0.c1)))  WHEN (rt0.c2 IN ()) THEN (rt1.c3 IN (rt0.c3)) WHEN (rt1.c1 IN (rt1.c1)) THEN ((rt0.c2)>(rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END THEN (- (vt1.c0)) ELSE ((((((((rt1.c0)OR(rt1.c1)))OR(vt1.c0)))AND(rt1.c3)))OR(rt0.c3)) END) ORDER BY (((rt1.c1, rt0.c0, rt1.c2)) BETWEEN ((((rt0.c1)AND(rt0.c3)), ((0.13420255075960352) NOT BETWEEN (rt0.c3) AND (rt1.c2)), ((rt0.c0) ISNULL))) AND ((rt0.c0 COLLATE NOCASE, (((rt1.c2)) BETWEEN ((rt0.c3)) AND ((rt1.c3))), CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c1 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0))<((rt0.c1)))  WHEN (rt0.c2 IN ()) THEN (rt1.c3 IN (rt0.c3)) WHEN (rt1.c1 IN (rt1.c1)) THEN ((rt0.c2)>(rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END THEN (- (vt1.c0)) ELSE ((((((((rt1.c0)OR(rt1.c1)))OR(vt1.c0)))AND(rt1.c3)))OR(rt0.c3)) END) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (((rt1.c1, rt0.c0, rt1.c2)) BETWEEN ((((rt0.c1)AND(rt0.c3)), ((0.13420255075960352) NOT BETWEEN (rt0.c3) AND (rt1.c2)), ((rt0.c0) ISNULL))) AND ((rt0.c0 COLLATE NOCASE, (((rt1.c2)) BETWEEN ((rt0.c3)) AND ((rt1.c3))), CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c1 END))) DESC);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CASE (((rt0.c0))<((rt0.c1)))  WHEN (rt0.c2 IN ()) THEN (rt1.c3 IN (rt0.c3)) WHEN (rt1.c1 IN (rt1.c1)) THEN ((rt0.c2)>(rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END THEN (- (vt1.c0)) ELSE ((((((((rt1.c0)OR(rt1.c1)))OR(vt1.c0)))AND(rt1.c3)))OR(rt0.c3)) END) ORDER BY (((rt1.c1, rt0.c0, rt1.c2)) BETWEEN ((((rt0.c1)AND(rt0.c3)), ((0.13420255075960352) NOT BETWEEN (rt0.c3) AND (rt1.c2)), ((rt0.c0) ISNULL))) AND ((rt0.c0 COLLATE NOCASE, (((rt1.c2)) BETWEEN ((rt0.c3)) AND ((rt1.c3))), CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c1 END))) DESC;
SELECT * FROM rt1, vt0, rt0 WHERE (UNLIKELY((~ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((~ (rt1.c2)))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (UNLIKELY((~ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((~ (rt1.c2)))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (UNLIKELY((~ (rt1.c2))));
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (((((vt1.c0)OR(vt1.c0)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (((((vt1.c0)OR(vt1.c0)))AND(x''))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (((((vt1.c0)OR(vt1.c0)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (((((vt1.c0)OR(vt1.c0)))AND(x''))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (((((vt1.c0)OR(vt1.c0)))AND(x'')))));
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0)==(rt0.c2)) IN ()) WHERE ((rt0.c1 IN (((vt1.c0) NOTNULL), ((((rt0.c3)OR(rt0.c0)))AND(vt0.c0))))) ORDER BY '-2112120568' COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (((vt1.c0) NOTNULL), ((((rt0.c3)OR(rt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0)==(rt0.c2)) IN ()) ORDER BY '-2112120568' COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0)==(rt0.c2)) IN ()) WHERE ((rt0.c1 IN (((vt1.c0) NOTNULL), ((((rt0.c3)OR(rt0.c0)))AND(vt0.c0))))) ORDER BY '-2112120568' COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (((vt1.c0) NOTNULL), ((((rt0.c3)OR(rt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0)==(rt0.c2)) IN ()) ORDER BY '-2112120568' COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0)==(rt0.c2)) IN ()) WHERE ((rt0.c1 IN (((vt1.c0) NOTNULL), ((((rt0.c3)OR(rt0.c0)))AND(vt0.c0))))) ORDER BY '-2112120568' COLLATE BINARY DESC;
SELECT * FROM rt0, rt1, vt1, vt0 WHERE ((((((rt1.c1)AND(rt0.c2)))OR(vt0.c0)) IN ())) ORDER BY ((0.5825996838988717 COLLATE BINARY)AND(((rt1.c2)IS NOT(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)AND(rt0.c2)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt1, vt0 ORDER BY ((0.5825996838988717 COLLATE BINARY)AND(((rt1.c2)IS NOT(vt1.c0)))));
SELECT * FROM rt0, rt1, vt1, vt0 WHERE ((((((rt1.c1)AND(rt0.c2)))OR(vt0.c0)) IN ())) ORDER BY ((0.5825996838988717 COLLATE BINARY)AND(((rt1.c2)IS NOT(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)AND(rt0.c2)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt1, vt0 ORDER BY ((0.5825996838988717 COLLATE BINARY)AND(((rt1.c2)IS NOT(vt1.c0)))));
SELECT * FROM rt0, rt1, vt1, vt0 WHERE ((((((rt1.c1)AND(rt0.c2)))OR(vt0.c0)) IN ())) ORDER BY ((0.5825996838988717 COLLATE BINARY)AND(((rt1.c2)IS NOT(vt1.c0))));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((rt0.c0, rt0.c1, 1.7424118E7))==((((rt0.c2)>=(rt0.c2)), (rt0.c3 IN (NULL)), ((rt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, 1.7424118E7))=((((rt0.c2)>=(rt0.c2)), (rt0.c3 IN (NULL)), ((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((rt0.c0, rt0.c1, 1.7424118E7))==((((rt0.c2)>=(rt0.c2)), (rt0.c3 IN (NULL)), ((rt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, 1.7424118E7))=((((rt0.c2)>=(rt0.c2)), (rt0.c3 IN (NULL)), ((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ((((rt0.c0, rt0.c1, 1.7424118E7))==((((rt0.c2)>=(rt0.c2)), (rt0.c3 IN (NULL)), ((rt0.c0) IS FALSE)))));
SELECT ALL * FROM vt0, vt1 WHERE (INSTR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt1.c0)) ORDER BY (~ (((NULL)<<(vt0.c0)))), ((((vt0.c0) NOTNULL))>((~ (0.35640163891693777)))), (((x'')) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)>=(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((INSTR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt1.c0)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (((NULL)<<(vt0.c0)))), ((((vt0.c0) NOTNULL))>((~ (0.35640163891693777)))), (((x'')) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)>=(vt1.c0))))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (INSTR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt1.c0)) ORDER BY (~ (((NULL)<<(vt0.c0)))), ((((vt0.c0) NOTNULL))>((~ (0.35640163891693777)))), (((x'')) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)>=(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((INSTR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt1.c0)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (((NULL)<<(vt0.c0)))), ((((vt0.c0) NOTNULL))>((~ (0.35640163891693777)))), (((x'')) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)>=(vt1.c0))))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (INSTR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt1.c0)) ORDER BY (~ (((NULL)<<(vt0.c0)))), ((((vt0.c0) NOTNULL))>((~ (0.35640163891693777)))), (((x'')) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)>=(vt1.c0))))) DESC;
SELECT COUNT(*) FROM vt1, rt0, rt1, vt0 WHERE (CAST(((rt0.c0)%(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)%(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0, rt1, vt0);
SELECT COUNT(*) FROM vt1, rt0, rt1, vt0 WHERE (CAST(((rt0.c0)%(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)%(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0, rt1, vt0);
SELECT COUNT(*) FROM vt1, rt0, rt1, vt0 WHERE (CAST(((rt0.c0)%(rt0.c2)) AS NUMERIC));
SELECT * FROM rt0, rt1 WHERE ((+ (((rt1.c3) ISNULL)))) ORDER BY ((((rt1.c1) NOT NULL)) NOT BETWEEN ('-88456422') AND (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c3 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c3) ISNULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c1) NOT NULL)) NOT BETWEEN ('-88456422') AND (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c3 ELSE rt0.c3 END)));
SELECT * FROM rt0, rt1 WHERE ((+ (((rt1.c3) ISNULL)))) ORDER BY ((((rt1.c1) NOT NULL)) NOT BETWEEN ('-88456422') AND (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c3 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c3) ISNULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c1) NOT NULL)) NOT BETWEEN ('-88456422') AND (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c3 ELSE rt0.c3 END)));
SELECT * FROM rt0, rt1 WHERE ((+ (((rt1.c3) ISNULL)))) ORDER BY ((((rt1.c1) NOT NULL)) NOT BETWEEN ('-88456422') AND (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c3 ELSE rt0.c3 END));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((CASE rt1.c3  WHEN rt0.c2 THEN rt1.c3 END IN (CASE rt0.c3  WHEN '헾M' THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c3  WHEN rt0.c2 THEN rt1.c3 END IN (CASE rt0.c3  WHEN '헾M' THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((CASE rt1.c3  WHEN rt0.c2 THEN rt1.c3 END IN (CASE rt0.c3  WHEN '헾M' THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c3  WHEN rt0.c2 THEN rt1.c3 END IN (CASE rt0.c3  WHEN '헾M' THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((CASE rt1.c3  WHEN rt0.c2 THEN rt1.c3 END IN (CASE rt0.c3  WHEN '헾M' THEN rt0.c2 ELSE rt0.c1 END)));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((NULL)%(vt1.c0)) AS TEXT) WHERE (((vt0.c0)+(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((NULL)%(vt1.c0)) AS TEXT));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((NULL)%(vt1.c0)) AS TEXT) WHERE (((vt0.c0)+(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((NULL)%(vt1.c0)) AS TEXT));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((NULL)%(vt1.c0)) AS TEXT) WHERE (((vt0.c0)+(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt1, vt0, rt1 WHERE (((('r7bX5Udr' IN (rt0.c3)))<(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ORDER BY ((rt1.c3) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('r7bX5Udr' IN (rt0.c3)))<(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, vt1, vt0, rt1 ORDER BY ((rt1.c3) ISNULL) ASC);
SELECT COUNT(*) FROM rt0, vt1, vt0, rt1 WHERE (((('r7bX5Udr' IN (rt0.c3)))<(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ORDER BY ((rt1.c3) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('r7bX5Udr' IN (rt0.c3)))<(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, vt1, vt0, rt1 ORDER BY ((rt1.c3) ISNULL) ASC);
SELECT COUNT(*) FROM rt0, vt1, vt0, rt1 WHERE (((('r7bX5Udr' IN (rt0.c3)))<(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ORDER BY ((rt1.c3) ISNULL) ASC;
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((~ (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((~ (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((~ (vt1.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED NATURAL JOIN rt1 WHERE (((((((rt1.c0)AND('')))AND(x''))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c3))) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND('')))AND(x''))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c3))) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED NATURAL JOIN rt1 WHERE (((((((rt1.c0)AND('')))AND(x''))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c3))) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND('')))AND(x''))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c3))) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED NATURAL JOIN rt1 WHERE (((((((rt1.c0)AND('')))AND(x''))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c3))) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT COUNT(*) FROM rt1 WHERE (((0xffffffffd2d08857)<>(ABS(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffd2d08857)!=(ABS(DISTINCT rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((0xffffffffd2d08857)<>(ABS(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffd2d08857)!=(ABS(DISTINCT rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((0xffffffffd2d08857)<>(ABS(DISTINCT rt1.c1))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON ((((((vt1.c0)OR(vt1.c0)))OR(rt1.c3))) ISNULL) WHERE ((((rt1.c3))<((vt1.c0))) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3))<((vt1.c0))) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON ((((((vt1.c0)OR(vt1.c0)))OR(rt1.c3))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON ((((((vt1.c0)OR(vt1.c0)))OR(rt1.c3))) ISNULL) WHERE ((((rt1.c3))<((vt1.c0))) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3))<((vt1.c0))) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON ((((((vt1.c0)OR(vt1.c0)))OR(rt1.c3))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt1 ON ((((((vt1.c0)OR(vt1.c0)))OR(rt1.c3))) ISNULL) WHERE ((((rt1.c3))<((vt1.c0))) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM rt1, vt1, vt0 WHERE (x'') ORDER BY LOWER(rt1.c3) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY LOWER(rt1.c3) DESC);
SELECT * FROM rt1, vt1, vt0 WHERE (x'') ORDER BY LOWER(rt1.c3) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY LOWER(rt1.c3) DESC);
SELECT * FROM rt1, vt1, vt0 WHERE (x'') ORDER BY LOWER(rt1.c3) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((NULL, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, vt0.c0, rt0.c1)))) NOT BETWEEN (((vt0.c0)&(rt0.c1))) AND (((((rt0.c3)OR(-1.918358318E9)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((NULL, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, vt0.c0, rt0.c1)))) NOT BETWEEN (((vt0.c0)&(rt0.c1))) AND (((((rt0.c3)OR(-1.918358318E9)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((NULL, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, vt0.c0, rt0.c1)))) NOT BETWEEN (((vt0.c0)&(rt0.c1))) AND (((((rt0.c3)OR(-1.918358318E9)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((NULL, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, vt0.c0, rt0.c1)))) NOT BETWEEN (((vt0.c0)&(rt0.c1))) AND (((((rt0.c3)OR(-1.918358318E9)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((NULL, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, vt0.c0, rt0.c1)))) NOT BETWEEN (((vt0.c0)&(rt0.c1))) AND (((((rt0.c3)OR(-1.918358318E9)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt1 WHERE ((rt1.c1 IN ())) ORDER BY CASE WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c3 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY CASE WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c3 END COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt1 WHERE ((rt1.c1 IN ())) ORDER BY CASE WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c3 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY CASE WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c3 END COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt1 WHERE ((rt1.c1 IN ())) ORDER BY CASE WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c3 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((rt0.c3) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOTNULL)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((rt0.c3) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOTNULL)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((rt0.c3) NOTNULL));
SELECT ALL * FROM rt0, vt1, rt1, vt0 WHERE ((((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c1))))<>((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt0.c1)))AND(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c1))))!=((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt0.c1)))AND(rt1.c3)))))) IS TRUE)  as count FROM rt0, vt1, rt1, vt0);
SELECT ALL * FROM rt0, vt1, rt1, vt0 WHERE ((((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c1))))<>((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt0.c1)))AND(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c1))))!=((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt0.c1)))AND(rt1.c3)))))) IS TRUE)  as count FROM rt0, vt1, rt1, vt0);
SELECT ALL * FROM rt0, vt1, rt1, vt0 WHERE ((((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c1))))<>((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt0.c1)))AND(rt1.c3))))));
SELECT ALL * FROM rt1, vt1, rt0 WHERE (NULL) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY rt1.c3 DESC);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (NULL) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY rt1.c3 DESC);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (NULL) ORDER BY rt1.c3 DESC;
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((+ (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((+ (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((+ (rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))OR(rt0.c2)))OR(rt1.c3)))!=(((((rt1.c2)OR(rt0.c0)))OR(rt0.c1))))) ORDER BY (((rt0.c3) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))OR(rt0.c2)))OR(rt1.c3)))!=(((((rt1.c2)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c3) NOT NULL) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))OR(rt0.c2)))OR(rt1.c3)))!=(((((rt1.c2)OR(rt0.c0)))OR(rt0.c1))))) ORDER BY (((rt0.c3) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))OR(rt0.c2)))OR(rt1.c3)))!=(((((rt1.c2)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c3) NOT NULL) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c0)))OR(rt0.c2)))OR(rt1.c3)))!=(((((rt1.c2)OR(rt0.c0)))OR(rt0.c1))))) ORDER BY (((rt0.c3) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON rt1.c2 WHERE (('䰫\n' IN (vt0.c0, ((NULL)|(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((('䰫\n' IN (vt0.c0, ((NULL)|(rt1.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON rt1.c2);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON rt1.c2 WHERE (('䰫\n' IN (vt0.c0, ((NULL)|(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((('䰫\n' IN (vt0.c0, ((NULL)|(rt1.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON rt1.c2);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON rt1.c2 WHERE (('䰫\n' IN (vt0.c0, ((NULL)|(rt1.c2)))));
SELECT * FROM rt0, rt1, vt0 WHERE ('ld') ORDER BY CASE ((rt0.c3) IS FALSE)  WHEN NULLIF(rt1.c2, rt0.c2) THEN LIKELY(rt1.c1) ELSE rt0.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL (('ld') IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CASE ((rt0.c3) IS FALSE)  WHEN NULLIF(rt1.c2, rt0.c2) THEN LIKELY(rt1.c1) ELSE rt0.c1 COLLATE RTRIM END);
SELECT * FROM rt0, rt1, vt0 WHERE ('ld') ORDER BY CASE ((rt0.c3) IS FALSE)  WHEN NULLIF(rt1.c2, rt0.c2) THEN LIKELY(rt1.c1) ELSE rt0.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL (('ld') IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CASE ((rt0.c3) IS FALSE)  WHEN NULLIF(rt1.c2, rt0.c2) THEN LIKELY(rt1.c1) ELSE rt0.c1 COLLATE RTRIM END);
SELECT * FROM rt0, rt1, vt0 WHERE ('ld') ORDER BY CASE ((rt0.c3) IS FALSE)  WHEN NULLIF(rt1.c2, rt0.c2) THEN LIKELY(rt1.c1) ELSE rt0.c1 COLLATE RTRIM END;
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((((0.9150584037148386)OR(TYPEOF(rt1.c1))))AND(((rt1.c1)-(rt1.c0))))) ORDER BY CASE WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c3 END COLLATE RTRIM ASC, (+ (((rt1.c3) BETWEEN (rt1.c2) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.9150584037148386)OR(TYPEOF(rt1.c1))))AND(((rt1.c1)-(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CASE WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c3 END COLLATE RTRIM ASC, (+ (((rt1.c3) BETWEEN (rt1.c2) AND (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((((0.9150584037148386)OR(TYPEOF(rt1.c1))))AND(((rt1.c1)-(rt1.c0))))) ORDER BY CASE WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c3 END COLLATE RTRIM ASC, (+ (((rt1.c3) BETWEEN (rt1.c2) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.9150584037148386)OR(TYPEOF(rt1.c1))))AND(((rt1.c1)-(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CASE WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c3 END COLLATE RTRIM ASC, (+ (((rt1.c3) BETWEEN (rt1.c2) AND (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((((0.9150584037148386)OR(TYPEOF(rt1.c1))))AND(((rt1.c1)-(rt1.c0))))) ORDER BY CASE WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c3 END COLLATE RTRIM ASC, (+ (((rt1.c3) BETWEEN (rt1.c2) AND (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, rt0, rt1 WHERE (CASE WHEN (- (rt1.c3)) THEN CAST(vt1.c0 AS INTEGER) ELSE ((((rt0.c3)OR(rt0.c2)))OR(0.8274694672878437)) END) ORDER BY rt1.c1  NULLS LAST, ((((rt0.c3)/(rt0.c2)))%((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c3)) THEN CAST(vt1.c0 AS INTEGER) ELSE ((((rt0.c3)OR(rt0.c2)))OR(0.8274694672878437)) END) IS TRUE)  as count FROM vt1, vt0, rt0, rt1 ORDER BY rt1.c1  NULLS LAST, ((((rt0.c3)/(rt0.c2)))%((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))));
SELECT ALL * FROM vt1, vt0, rt0, rt1 WHERE (CASE WHEN (- (rt1.c3)) THEN CAST(vt1.c0 AS INTEGER) ELSE ((((rt0.c3)OR(rt0.c2)))OR(0.8274694672878437)) END) ORDER BY rt1.c1  NULLS LAST, ((((rt0.c3)/(rt0.c2)))%((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c3)) THEN CAST(vt1.c0 AS INTEGER) ELSE ((((rt0.c3)OR(rt0.c2)))OR(0.8274694672878437)) END) IS TRUE)  as count FROM vt1, vt0, rt0, rt1 ORDER BY rt1.c1  NULLS LAST, ((((rt0.c3)/(rt0.c2)))%((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))));
SELECT ALL * FROM vt1, vt0, rt0, rt1 WHERE (CASE WHEN (- (rt1.c3)) THEN CAST(vt1.c0 AS INTEGER) ELSE ((((rt0.c3)OR(rt0.c2)))OR(0.8274694672878437)) END) ORDER BY rt1.c1  NULLS LAST, ((((rt0.c3)/(rt0.c2)))%((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT * FROM vt1 WHERE ((((((0.9595125288328634)-(vt1.c0))))>((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((0.9595125288328634)-(vt1.c0))))>((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((0.9595125288328634)-(vt1.c0))))>((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((0.9595125288328634)-(vt1.c0))))>((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((0.9595125288328634)-(vt1.c0))))>((vt1.c0))));
SELECT * FROM rt1, vt0, rt0 WHERE ((+ ((- (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((+ ((- (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((+ ((- (rt1.c3)))));
SELECT * FROM vt0, vt1, rt1 FULL OUTER JOIN rt0 ON ((((NULL)OR((((vt0.c0, vt0.c0, rt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, vt1.c0)) AND ((rt0.c1, rt0.c3, rt0.c1))))))OR(((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)))) WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((rt0.c3) ISNULL)) AND (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((rt0.c3) ISNULL)) AND (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM vt0, vt1, rt1 FULL OUTER JOIN rt0 ON ((((NULL)OR((((vt0.c0, vt0.c0, rt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, vt1.c0)) AND ((rt0.c1, rt0.c3, rt0.c1))))))OR(((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)))));
SELECT * FROM vt0, vt1, rt1 FULL OUTER JOIN rt0 ON ((((NULL)OR((((vt0.c0, vt0.c0, rt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, vt1.c0)) AND ((rt0.c1, rt0.c3, rt0.c1))))))OR(((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)))) WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((rt0.c3) ISNULL)) AND (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((rt0.c3) ISNULL)) AND (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM vt0, vt1, rt1 FULL OUTER JOIN rt0 ON ((((NULL)OR((((vt0.c0, vt0.c0, rt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, vt1.c0)) AND ((rt0.c1, rt0.c3, rt0.c1))))))OR(((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)))));
SELECT * FROM vt0, vt1, rt1 FULL OUTER JOIN rt0 ON ((((NULL)OR((((vt0.c0, vt0.c0, rt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, vt1.c0)) AND ((rt0.c1, rt0.c3, rt0.c1))))))OR(((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)))) WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((rt0.c3) ISNULL)) AND (SQLITE_SOURCE_ID())));
SELECT COUNT(*) FROM rt1 WHERE (LIKELY(DISTINCT CAST(rt1.c3 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CAST(rt1.c3 AS INTEGER))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LIKELY(DISTINCT CAST(rt1.c3 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CAST(rt1.c3 AS INTEGER))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LIKELY(DISTINCT CAST(rt1.c3 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 END) BETWEEN (x'' COLLATE NOCASE) AND (vt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON ((((vt0.c0)IS(vt0.c0)))-(rt0.c0)) CROSS JOIN vt0 ON CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM WHERE (x'') ORDER BY (((- (rt0.c3))) ISNULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 END) BETWEEN (x'' COLLATE NOCASE) AND (vt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON ((((vt0.c0)IS(vt0.c0)))-(rt0.c0)) CROSS JOIN vt0 ON CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM ORDER BY (((- (rt0.c3))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 END) BETWEEN (x'' COLLATE NOCASE) AND (vt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON ((((vt0.c0)IS(vt0.c0)))-(rt0.c0)) CROSS JOIN vt0 ON CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM WHERE (x'') ORDER BY (((- (rt0.c3))) ISNULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 END) BETWEEN (x'' COLLATE NOCASE) AND (vt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON ((((vt0.c0)IS(vt0.c0)))-(rt0.c0)) CROSS JOIN vt0 ON CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM ORDER BY (((- (rt0.c3))) ISNULL));
SELECT ALL * FROM vt0, rt0, vt1, rt1 WHERE (CAST(rt1.c3 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c3 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1, rt1);
SELECT ALL * FROM vt0, rt0, vt1, rt1 WHERE (CAST(rt1.c3 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c3 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1, rt1);
SELECT ALL * FROM vt0, rt0, vt1, rt1 WHERE (CAST(rt1.c3 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((LENGTH(NULL)) NOT BETWEEN (((vt0.c0)IS NOT('-1324854106'))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((- (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((vt0.c0 IN ()))&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((x'')AND(LIKE(vt0.c0, vt0.c0, 's'))))OR(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(NULL)) NOT BETWEEN (((vt0.c0)IS NOT('-1324854106'))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((- (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((vt0.c0 IN ()))&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((x'')AND(LIKE(vt0.c0, vt0.c0, 's'))))OR(vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((LENGTH(NULL)) NOT BETWEEN (((vt0.c0)IS NOT('-1324854106'))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((- (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((vt0.c0 IN ()))&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((x'')AND(LIKE(vt0.c0, vt0.c0, 's'))))OR(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(NULL)) NOT BETWEEN (((vt0.c0)IS NOT('-1324854106'))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((- (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((vt0.c0 IN ()))&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((x'')AND(LIKE(vt0.c0, vt0.c0, 's'))))OR(vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((LENGTH(NULL)) NOT BETWEEN (((vt0.c0)IS NOT('-1324854106'))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((- (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((vt0.c0 IN ()))&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((x'')AND(LIKE(vt0.c0, vt0.c0, 's'))))OR(vt0.c0))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC)) ISNULL)) ORDER BY ((0X4fd527bf) BETWEEN ('O?MO') AND ((('﵀a') NOT BETWEEN (0Xf50a7b0) AND (rt1.c2)))) DESC  NULLS FIRST, NULLIF(((rt1.c0)>(rt1.c1)), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3))), CASE rt1.c0  WHEN -8.8456422E7 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((0X4fd527bf) BETWEEN ('O?MO') AND ((('﵀a') NOT BETWEEN (0xf50a7b0) AND (rt1.c2)))) DESC  NULLS FIRST, NULLIF(((rt1.c0)>(rt1.c1)), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3))), CASE rt1.c0  WHEN -8.8456422E7 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC)) ISNULL)) ORDER BY ((0X4fd527bf) BETWEEN ('O?MO') AND ((('﵀a') NOT BETWEEN (0Xf50a7b0) AND (rt1.c2)))) DESC  NULLS FIRST, NULLIF(((rt1.c0)>(rt1.c1)), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3))), CASE rt1.c0  WHEN -8.8456422E7 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((0X4fd527bf) BETWEEN ('O?MO') AND ((('﵀a') NOT BETWEEN (0xf50a7b0) AND (rt1.c2)))) DESC  NULLS FIRST, NULLIF(((rt1.c0)>(rt1.c1)), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3))), CASE rt1.c0  WHEN -8.8456422E7 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC)) ISNULL)) ORDER BY ((0X4fd527bf) BETWEEN ('O?MO') AND ((('﵀a') NOT BETWEEN (0Xf50a7b0) AND (rt1.c2)))) DESC  NULLS FIRST, NULLIF(((rt1.c0)>(rt1.c1)), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3))), CASE rt1.c0  WHEN -8.8456422E7 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN vt1 ON (((rt0.c0)||('-1')) IN ()) LEFT OUTER JOIN vt0 ON ((x'e197')<((((rt1.c1))<>((vt1.c0))))) WHERE (rt1.c0) ORDER BY (NOT (((0xffffffff837541f6) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN vt1 ON (((rt0.c0)||('-1')) IN ()) LEFT OUTER JOIN vt0 ON ((x'e197')<((((rt1.c1))<>((vt1.c0))))) ORDER BY (NOT (((0xffffffff837541f6) IS FALSE))) ASC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN vt1 ON (((rt0.c0)||('-1')) IN ()) LEFT OUTER JOIN vt0 ON ((x'e197')<((((rt1.c1))<>((vt1.c0))))) WHERE (rt1.c0) ORDER BY (NOT (((0xffffffff837541f6) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN vt1 ON (((rt0.c0)||('-1')) IN ()) LEFT OUTER JOIN vt0 ON ((x'e197')<((((rt1.c1))<>((vt1.c0))))) ORDER BY (NOT (((0xffffffff837541f6) IS FALSE))) ASC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN vt1 ON (((rt0.c0)||('-1')) IN ()) LEFT OUTER JOIN vt0 ON ((x'e197')<((((rt1.c1))<>((vt1.c0))))) WHERE (rt1.c0) ORDER BY (NOT (((0xffffffff837541f6) IS FALSE))) ASC;
SELECT ALL * FROM vt1, rt1 WHERE (CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((rt1.c1)IS NOT(rt1.c1)) WHEN ((rt1.c3) IS TRUE) THEN LIKE(rt1.c2, rt1.c2, 'm') WHEN ((((vt1.c0)OR(rt1.c2)))AND(rt1.c1)) THEN CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END ELSE ((rt1.c0)>('')) END) ORDER BY TRIM(DISTINCT CASE rt1.c3  WHEN vt1.c0 THEN rt1.c1 END, ((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((rt1.c1)IS NOT(rt1.c1)) WHEN ((rt1.c3) IS TRUE) THEN LIKE(rt1.c2, rt1.c2, 'm') WHEN ((((vt1.c0)OR(rt1.c2)))AND(rt1.c1)) THEN CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END ELSE ((rt1.c0)>('')) END) IS TRUE)  as count FROM vt1, rt1 ORDER BY TRIM(DISTINCT CASE rt1.c3  WHEN vt1.c0 THEN rt1.c1 END, ((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c1))) DESC);
SELECT ALL * FROM vt1, rt1 WHERE (CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((rt1.c1)IS NOT(rt1.c1)) WHEN ((rt1.c3) IS TRUE) THEN LIKE(rt1.c2, rt1.c2, 'm') WHEN ((((vt1.c0)OR(rt1.c2)))AND(rt1.c1)) THEN CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END ELSE ((rt1.c0)>('')) END) ORDER BY TRIM(DISTINCT CASE rt1.c3  WHEN vt1.c0 THEN rt1.c1 END, ((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((rt1.c1)IS NOT(rt1.c1)) WHEN ((rt1.c3) IS TRUE) THEN LIKE(rt1.c2, rt1.c2, 'm') WHEN ((((vt1.c0)OR(rt1.c2)))AND(rt1.c1)) THEN CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END ELSE ((rt1.c0)>('')) END) IS TRUE)  as count FROM vt1, rt1 ORDER BY TRIM(DISTINCT CASE rt1.c3  WHEN vt1.c0 THEN rt1.c1 END, ((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c1))) DESC);
SELECT ALL * FROM vt1, rt1 WHERE (CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((rt1.c1)IS NOT(rt1.c1)) WHEN ((rt1.c3) IS TRUE) THEN LIKE(rt1.c2, rt1.c2, 'm') WHEN ((((vt1.c0)OR(rt1.c2)))AND(rt1.c1)) THEN CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END ELSE ((rt1.c0)>('')) END) ORDER BY TRIM(DISTINCT CASE rt1.c3  WHEN vt1.c0 THEN rt1.c1 END, ((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c1))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((SQLITE_VERSION())) AND ((json_extract(rt1.c3, '-1952836678', rt1.c3, rt1.c0))))) ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)) THEN ((rt1.c0) NOT NULL) WHEN x'' THEN CASE WHEN rt1.c2 THEN rt1.c3 END WHEN (- (rt1.c1)) THEN NULL ELSE CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((SQLITE_VERSION())) AND ((json_extract(rt1.c3, '-1952836678', rt1.c3, rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)) THEN ((rt1.c0) NOT NULL) WHEN x'' THEN CASE WHEN rt1.c2 THEN rt1.c3 END WHEN (- (rt1.c1)) THEN NULL ELSE CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((SQLITE_VERSION())) AND ((json_extract(rt1.c3, '-1952836678', rt1.c3, rt1.c0))))) ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)) THEN ((rt1.c0) NOT NULL) WHEN x'' THEN CASE WHEN rt1.c2 THEN rt1.c3 END WHEN (- (rt1.c1)) THEN NULL ELSE CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((SQLITE_VERSION())) AND ((json_extract(rt1.c3, '-1952836678', rt1.c3, rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)) THEN ((rt1.c0) NOT NULL) WHEN x'' THEN CASE WHEN rt1.c2 THEN rt1.c3 END WHEN (- (rt1.c1)) THEN NULL ELSE CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((SQLITE_VERSION())) AND ((json_extract(rt1.c3, '-1952836678', rt1.c3, rt1.c0))))) ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)) THEN ((rt1.c0) NOT NULL) WHEN x'' THEN CASE WHEN rt1.c2 THEN rt1.c3 END WHEN (- (rt1.c1)) THEN NULL ELSE CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((+ (rt0.c3))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (NULLIF(rt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (NULLIF(rt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((+ (rt0.c3))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (NULLIF(rt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (NULLIF(rt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((+ (rt0.c3))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (NULLIF(rt0.c0, vt0.c0))));
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))=(((vt1.c0)LIKE(vt1.c0))))) ORDER BY ((((vt1.c0)%(vt1.c0)))AND(((vt1.c0)>>(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))==(((vt1.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)%(vt1.c0)))AND(((vt1.c0)>>(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))=(((vt1.c0)LIKE(vt1.c0))))) ORDER BY ((((vt1.c0)%(vt1.c0)))AND(((vt1.c0)>>(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))==(((vt1.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)%(vt1.c0)))AND(((vt1.c0)>>(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))=(((vt1.c0)LIKE(vt1.c0))))) ORDER BY ((((vt1.c0)%(vt1.c0)))AND(((vt1.c0)>>(vt1.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(TYPEOF(rt1.c1) AS NUMERIC) FULL OUTER JOIN rt1 ON CASE ((rt1.c2) ISNULL)  WHEN 'VC' THEN (NOT (rt0.c1)) END INNER JOIN vt1 ON CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)) END WHERE ('639365038');
SELECT SUM(count) FROM (SELECT (('639365038') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(TYPEOF(rt1.c1) AS NUMERIC) FULL OUTER JOIN rt1 ON CASE ((rt1.c2) ISNULL)  WHEN 'VC' THEN (NOT (rt0.c1)) END INNER JOIN vt1 ON CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)) END);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(TYPEOF(rt1.c1) AS NUMERIC) FULL OUTER JOIN rt1 ON CASE ((rt1.c2) ISNULL)  WHEN 'VC' THEN (NOT (rt0.c1)) END INNER JOIN vt1 ON CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)) END WHERE ('639365038');
SELECT SUM(count) FROM (SELECT (('639365038') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(TYPEOF(rt1.c1) AS NUMERIC) FULL OUTER JOIN rt1 ON CASE ((rt1.c2) ISNULL)  WHEN 'VC' THEN (NOT (rt0.c1)) END INNER JOIN vt1 ON CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)) END);
SELECT ALL * FROM vt1, rt1 WHERE ((((vt1.c0 IN ())) BETWEEN ((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0)))) AND ((+ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN ((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0)))) AND ((+ (rt1.c3))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((((vt1.c0 IN ())) BETWEEN ((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0)))) AND ((+ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN ((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0)))) AND ((+ (rt1.c3))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((((vt1.c0 IN ())) BETWEEN ((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0)))) AND ((+ (rt1.c3)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT (+ (vt0.c0)), ((vt0.c0)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (+ (vt0.c0)), ((vt0.c0)>(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT (+ (vt0.c0)), ((vt0.c0)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (+ (vt0.c0)), ((vt0.c0)>(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT (+ (vt0.c0)), ((vt0.c0)>(vt0.c0))));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c3 END IN ()) CROSS JOIN vt0 ON rt0.c3 FULL OUTER JOIN vt1 ON 'P' WHERE (((UPPER(rt0.c0)) BETWEEN (((((rt0.c0)OR(NULL)))AND(rt0.c2))) AND (((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UPPER(rt0.c0)) BETWEEN (((((rt0.c0)OR(NULL)))AND(rt0.c2))) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c3 END IN ()) CROSS JOIN vt0 ON rt0.c3 FULL OUTER JOIN vt1 ON 'P');
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c3 END IN ()) CROSS JOIN vt0 ON rt0.c3 FULL OUTER JOIN vt1 ON 'P' WHERE (((UPPER(rt0.c0)) BETWEEN (((((rt0.c0)OR(NULL)))AND(rt0.c2))) AND (((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UPPER(rt0.c0)) BETWEEN (((((rt0.c0)OR(NULL)))AND(rt0.c2))) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c3 END IN ()) CROSS JOIN vt0 ON rt0.c3 FULL OUTER JOIN vt1 ON 'P');
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c3 END IN ()) CROSS JOIN vt0 ON rt0.c3 FULL OUTER JOIN vt1 ON 'P' WHERE (((UPPER(rt0.c0)) BETWEEN (((((rt0.c0)OR(NULL)))AND(rt0.c2))) AND (((vt0.c0)IS(vt0.c0)))));
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c3)), (rt1.c3 IN ()), ((rt0.c0)=(rt0.c0)))) AND ((((rt1.c1)>>(rt0.c2)), ((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)), (((rt0.c2))<>((rt1.c1)))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c3)), (rt1.c3 IN ()), ((rt0.c0)=(rt0.c0)))) AND ((((rt1.c1)>>(rt0.c2)), ((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)), (((rt0.c2))!=((rt1.c1))))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c3)), (rt1.c3 IN ()), ((rt0.c0)=(rt0.c0)))) AND ((((rt1.c1)>>(rt0.c2)), ((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)), (((rt0.c2))<>((rt1.c1)))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c3)), (rt1.c3 IN ()), ((rt0.c0)=(rt0.c0)))) AND ((((rt1.c1)>>(rt0.c2)), ((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)), (((rt0.c2))!=((rt1.c1))))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c3)), (rt1.c3 IN ()), ((rt0.c0)=(rt0.c0)))) AND ((((rt1.c1)>>(rt0.c2)), ((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)), (((rt0.c2))<>((rt1.c1)))))));
SELECT ALL * FROM vt1, rt1 INNER JOIN rt0 ON (+ (0.3855651445525916)) WHERE (((rt0.c2 IN ()) IN (((-1353205240) NOT BETWEEN (rt1.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN (((-1353205240) NOT BETWEEN (rt1.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt1 INNER JOIN rt0 ON (+ (0.3855651445525916)));
SELECT ALL * FROM vt1, rt1 INNER JOIN rt0 ON (+ (0.3855651445525916)) WHERE (((rt0.c2 IN ()) IN (((-1353205240) NOT BETWEEN (rt1.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN (((-1353205240) NOT BETWEEN (rt1.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt1 INNER JOIN rt0 ON (+ (0.3855651445525916)));
SELECT ALL * FROM vt1, rt1 INNER JOIN rt0 ON (+ (0.3855651445525916)) WHERE (((rt0.c2 IN ()) IN (((-1353205240) NOT BETWEEN (rt1.c1) AND (rt0.c2)))));
SELECT ALL * FROM vt1, vt0, rt0, rt1 WHERE ((NULL IN ())) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1, vt0, rt0, rt1 ORDER BY ''  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0, rt1 WHERE ((NULL IN ())) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1, vt0, rt0, rt1 ORDER BY ''  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0, rt1 WHERE ((NULL IN ())) ORDER BY ''  NULLS FIRST;
SELECT ALL * FROM vt1, rt0, vt0 NOT INDEXED, rt1 WHERE ((((rt0.c0, rt1.c2, rt0.c3)) NOT BETWEEN (((((rt1.c3, rt1.c1, '-539312025')) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c3, rt0.c0))), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt1.c0)), rt0.c3 COLLATE RTRIM)) AND ((((((((((rt1.c2)OR('')))AND(rt0.c0)))OR('0N')))OR(vt0.c0)), LIKELY(DISTINCT rt1.c2), (+ (rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt1.c2, rt0.c3)) NOT BETWEEN (((((rt1.c3, rt1.c1, '-539312025')) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c3, rt0.c0))), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt1.c0)), rt0.c3 COLLATE RTRIM)) AND ((((((((((rt1.c2)OR('')))AND(rt0.c0)))OR('0N')))OR(vt0.c0)), LIKELY(DISTINCT rt1.c2), (+ (rt1.c1)))))) IS TRUE)  as count FROM vt1, rt0, vt0, rt1);
SELECT ALL * FROM vt1, rt0, vt0 NOT INDEXED, rt1 WHERE ((((rt0.c0, rt1.c2, rt0.c3)) NOT BETWEEN (((((rt1.c3, rt1.c1, '-539312025')) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c3, rt0.c0))), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt1.c0)), rt0.c3 COLLATE RTRIM)) AND ((((((((((rt1.c2)OR('')))AND(rt0.c0)))OR('0N')))OR(vt0.c0)), LIKELY(DISTINCT rt1.c2), (+ (rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt1.c2, rt0.c3)) NOT BETWEEN (((((rt1.c3, rt1.c1, '-539312025')) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c3, rt0.c0))), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt1.c0)), rt0.c3 COLLATE RTRIM)) AND ((((((((((rt1.c2)OR('')))AND(rt0.c0)))OR('0N')))OR(vt0.c0)), LIKELY(DISTINCT rt1.c2), (+ (rt1.c1)))))) IS TRUE)  as count FROM vt1, rt0, vt0, rt1);
SELECT ALL * FROM vt1, rt0, vt0 NOT INDEXED, rt1 WHERE ((((rt0.c0, rt1.c2, rt0.c3)) NOT BETWEEN (((((rt1.c3, rt1.c1, '-539312025')) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c3, rt0.c0))), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt1.c0)), rt0.c3 COLLATE RTRIM)) AND ((((((((((rt1.c2)OR('')))AND(rt0.c0)))OR('0N')))OR(vt0.c0)), LIKELY(DISTINCT rt1.c2), (+ (rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 INNER JOIN vt0 ON CASE (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((NULL)))  WHEN ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3)) THEN rt1.c0 ELSE (~ (vt1.c0)) END WHERE (CASE WHEN (vt1.c0 IN (rt1.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN (+ (rt0.c2)) THEN (((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN NULL COLLATE RTRIM THEN CASE rt0.c1  WHEN NULL THEN rt1.c1 ELSE rt1.c0 END WHEN ((rt0.c0)OR(rt1.c0)) THEN ((rt0.c3)<<(rt1.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE ELSE CAST(rt1.c3 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (rt1.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN (+ (rt0.c2)) THEN (((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN NULL COLLATE RTRIM THEN CASE rt0.c1  WHEN NULL THEN rt1.c1 ELSE rt1.c0 END WHEN ((rt0.c0)OR(rt1.c0)) THEN ((rt0.c3)<<(rt1.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE ELSE CAST(rt1.c3 AS NUMERIC) END) IS TRUE)  as count FROM rt1, rt0, vt1 INNER JOIN vt0 ON CASE (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((NULL)))  WHEN ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3)) THEN rt1.c0 ELSE (~ (vt1.c0)) END);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 INNER JOIN vt0 ON CASE (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((NULL)))  WHEN ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3)) THEN rt1.c0 ELSE (~ (vt1.c0)) END WHERE (CASE WHEN (vt1.c0 IN (rt1.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN (+ (rt0.c2)) THEN (((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN NULL COLLATE RTRIM THEN CASE rt0.c1  WHEN NULL THEN rt1.c1 ELSE rt1.c0 END WHEN ((rt0.c0)OR(rt1.c0)) THEN ((rt0.c3)<<(rt1.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE ELSE CAST(rt1.c3 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (rt1.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN (+ (rt0.c2)) THEN (((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN NULL COLLATE RTRIM THEN CASE rt0.c1  WHEN NULL THEN rt1.c1 ELSE rt1.c0 END WHEN ((rt0.c0)OR(rt1.c0)) THEN ((rt0.c3)<<(rt1.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE ELSE CAST(rt1.c3 AS NUMERIC) END) IS TRUE)  as count FROM rt1, rt0, vt1 INNER JOIN vt0 ON CASE (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((NULL)))  WHEN ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3)) THEN rt1.c0 ELSE (~ (vt1.c0)) END);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 INNER JOIN vt0 ON CASE (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((NULL)))  WHEN ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3)) THEN rt1.c0 ELSE (~ (vt1.c0)) END WHERE (CASE WHEN (vt1.c0 IN (rt1.c2)) THEN CAST(rt0.c2 AS TEXT) WHEN (+ (rt0.c2)) THEN (((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN NULL COLLATE RTRIM THEN CASE rt0.c1  WHEN NULL THEN rt1.c1 ELSE rt1.c0 END WHEN ((rt0.c0)OR(rt1.c0)) THEN ((rt0.c3)<<(rt1.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE ELSE CAST(rt1.c3 AS NUMERIC) END);
SELECT ALL * FROM rt1, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (x'');
SELECT * FROM vt0, rt1, rt0, vt1 WHERE ((((x'') ISNULL) IN ())) ORDER BY '80878291';
SELECT SUM(count) FROM (SELECT ALL (((((x'') ISNULL) IN ())) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY '80878291');
SELECT * FROM vt0, rt1, rt0, vt1 WHERE ((((x'') ISNULL) IN ())) ORDER BY '80878291';
SELECT SUM(count) FROM (SELECT ALL (((((x'') ISNULL) IN ())) IS TRUE)  as count FROM vt0, rt1, rt0, vt1 ORDER BY '80878291');
SELECT * FROM vt0, rt1, rt0, vt1 WHERE ((((x'') ISNULL) IN ())) ORDER BY '80878291';
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((((((vt1.c0)OR(rt1.c2)))OR(rt1.c3))) IS TRUE)) ORDER BY CAST(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(rt1.c2)))OR(rt1.c3))) IS TRUE)) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((((((vt1.c0)OR(rt1.c2)))OR(rt1.c3))) IS TRUE)) ORDER BY CAST(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(rt1.c2)))OR(rt1.c3))) IS TRUE)) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((((((vt1.c0)OR(rt1.c2)))OR(rt1.c3))) IS TRUE)) ORDER BY CAST(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (json_valid(((vt1.c0)||(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_valid(((vt1.c0)||(vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1 WHERE (json_valid(((vt1.c0)||(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_valid(((vt1.c0)||(vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1 WHERE (json_valid(((vt1.c0)||(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, 0xffffffffccee5ede)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((vt0.c0)==((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, 0Xffffffffccee5ede)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)==((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, 0xffffffffccee5ede)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((vt0.c0)==((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, 0Xffffffffccee5ede)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)==((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, 0xffffffffccee5ede)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((vt0.c0)==((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)*(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)*(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)*(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((x'') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((x'') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((x'') IS TRUE));
SELECT * FROM vt1, vt0, rt0 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((CAST(rt0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((CAST(rt0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((CAST(rt0.c2 AS BLOB)))));
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((CAST(rt1.c0 AS TEXT))IS NOT(((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS TEXT))IS NOT(((NULL) IS FALSE)))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((CAST(rt1.c0 AS TEXT))IS NOT(((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS TEXT))IS NOT(((NULL) IS FALSE)))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((CAST(rt1.c0 AS TEXT))IS NOT(((NULL) IS FALSE))));
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (0.33015249101072075) ORDER BY (((((rt0.c3 IN ()))OR((~ (rt0.c3)))))AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.33015249101072075) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((((rt0.c3 IN ()))OR((~ (rt0.c3)))))AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c0)))));
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (0.33015249101072075) ORDER BY (((((rt0.c3 IN ()))OR((~ (rt0.c3)))))AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.33015249101072075) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((((rt0.c3 IN ()))OR((~ (rt0.c3)))))AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c0)))));
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (0.33015249101072075) ORDER BY (((((rt0.c3 IN ()))OR((~ (rt0.c3)))))AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c0))));
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((((('-1992609597')IS(rt1.c1)))%((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1992609597')IS(rt1.c1)))%((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((((('-1992609597')IS(rt1.c1)))%((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1992609597')IS(rt1.c1)))%((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((((('-1992609597')IS(rt1.c1)))%((NOT (rt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(('0.4341791645548888' IN ())))) ORDER BY CASE WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(0.8124296849157691)))OR(x'')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST, (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, ((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(('0.4341791645548888' IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(0.8124296849157691)))OR(x'')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST, (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, ((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(('0.4341791645548888' IN ())))) ORDER BY CASE WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(0.8124296849157691)))OR(x'')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST, (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, ((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(('0.4341791645548888' IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(0.8124296849157691)))OR(x'')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST, (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, ((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(('0.4341791645548888' IN ())))) ORDER BY CASE WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(0.8124296849157691)))OR(x'')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST, (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, ((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<=(vt0.c0))));
SELECT * FROM vt1 WHERE (json_remove(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)AND(0Xc9d3854)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_remove(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)AND(0xc9d3854)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (json_remove(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)AND(0Xc9d3854)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_remove(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)AND(0xc9d3854)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (json_remove(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)AND(0Xc9d3854)))AND(vt1.c0))));
SELECT * FROM rt0, rt1, vt1, vt0 WHERE ((((x'') IS TRUE) IN ())) ORDER BY (+ (CAST(rt1.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'') IS TRUE) IN ())) IS TRUE)  as count FROM rt0, rt1, vt1, vt0 ORDER BY (+ (CAST(rt1.c0 AS REAL)))  NULLS LAST);
SELECT * FROM rt0, rt1, vt1, vt0 WHERE ((((x'') IS TRUE) IN ())) ORDER BY (+ (CAST(rt1.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'') IS TRUE) IN ())) IS TRUE)  as count FROM rt0, rt1, vt1, vt0 ORDER BY (+ (CAST(rt1.c0 AS REAL)))  NULLS LAST);
SELECT * FROM rt0, rt1, vt1, vt0 WHERE ((((x'') IS TRUE) IN ())) ORDER BY (+ (CAST(rt1.c0 AS REAL)))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) ORDER BY CASE WHEN (rt1.c0 IN (rt0.c1)) THEN rt1.c0 COLLATE NOCASE ELSE (rt1.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CASE WHEN (rt1.c0 IN (rt0.c1)) THEN rt1.c0 COLLATE NOCASE ELSE (rt1.c0 IN ()) END);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) ORDER BY CASE WHEN (rt1.c0 IN (rt0.c1)) THEN rt1.c0 COLLATE NOCASE ELSE (rt1.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CASE WHEN (rt1.c0 IN (rt0.c1)) THEN rt1.c0 COLLATE NOCASE ELSE (rt1.c0 IN ()) END);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) ORDER BY CASE WHEN (rt1.c0 IN (rt0.c1)) THEN rt1.c0 COLLATE NOCASE ELSE (rt1.c0 IN ()) END;
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2, rt1.c2, rt1.c3)) BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((vt0.c0, rt1.c0, vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2, rt1.c2, rt1.c3)) BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((vt0.c0, rt1.c0, vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2, rt1.c2, rt1.c3)) BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((vt0.c0, rt1.c0, vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2, rt1.c2, rt1.c3)) BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((vt0.c0, rt1.c0, vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2, rt1.c2, rt1.c3)) BETWEEN ((rt1.c2, rt1.c1, rt1.c1)) AND ((vt0.c0, rt1.c0, vt0.c0))) IN ()));
SELECT * FROM vt1, rt0 CROSS JOIN vt0 ON (((('' IN ())))<>((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))))) RIGHT OUTER JOIN rt1 ON ((((CASE WHEN rt1.c3 THEN rt1.c0 END)AND(((rt0.c0)AND(rt0.c2)))))AND(((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))OR(rt1.c1)))) WHERE ((((- (vt1.c0)))IS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))IS(vt0.c0))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON (((('' IN ())))!=((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))))) RIGHT OUTER JOIN rt1 ON ((((CASE WHEN rt1.c3 THEN rt1.c0 END)AND(((rt0.c0)AND(rt0.c2)))))AND(((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))OR(rt1.c1)))));
SELECT * FROM vt1, rt0 CROSS JOIN vt0 ON (((('' IN ())))<>((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))))) RIGHT OUTER JOIN rt1 ON ((((CASE WHEN rt1.c3 THEN rt1.c0 END)AND(((rt0.c0)AND(rt0.c2)))))AND(((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))OR(rt1.c1)))) WHERE ((((- (vt1.c0)))IS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))IS(vt0.c0))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON (((('' IN ())))!=((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))))) RIGHT OUTER JOIN rt1 ON ((((CASE WHEN rt1.c3 THEN rt1.c0 END)AND(((rt0.c0)AND(rt0.c2)))))AND(((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))OR(rt1.c1)))));
SELECT * FROM vt1, rt0 CROSS JOIN vt0 ON (((('' IN ())))<>((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))))) RIGHT OUTER JOIN rt1 ON ((((CASE WHEN rt1.c3 THEN rt1.c0 END)AND(((rt0.c0)AND(rt0.c2)))))AND(((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))OR(rt1.c1)))) WHERE ((((- (vt1.c0)))IS(vt0.c0)));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON '378633692' LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT NULL)) ISNULL) WHERE (DATETIME((rt1.c0 IN ()), ((((rt1.c3)OR(rt1.c0)))OR(rt0.c1)), (((rt0.c3, rt1.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c0, rt0.c0)) AND ((rt0.c3, rt1.c0, vt0.c0))))) ORDER BY ((((rt1.c3)<>(0x6a460899)))/(((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME((rt1.c0 IN ()), ((((rt1.c3)OR(rt1.c0)))OR(rt0.c1)), (((rt0.c3, rt1.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c0, rt0.c0)) AND ((rt0.c3, rt1.c0, vt0.c0))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON '378633692' LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT NULL)) ISNULL) ORDER BY ((((rt1.c3)!=(0X6a460899)))/(((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON '378633692' LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT NULL)) ISNULL) WHERE (DATETIME((rt1.c0 IN ()), ((((rt1.c3)OR(rt1.c0)))OR(rt0.c1)), (((rt0.c3, rt1.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c0, rt0.c0)) AND ((rt0.c3, rt1.c0, vt0.c0))))) ORDER BY ((((rt1.c3)<>(0x6a460899)))/(((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME((rt1.c0 IN ()), ((((rt1.c3)OR(rt1.c0)))OR(rt0.c1)), (((rt0.c3, rt1.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c0, rt0.c0)) AND ((rt0.c3, rt1.c0, vt0.c0))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON '378633692' LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT NULL)) ISNULL) ORDER BY ((((rt1.c3)!=(0X6a460899)))/(((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON '378633692' LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT NULL)) ISNULL) WHERE (DATETIME((rt1.c0 IN ()), ((((rt1.c3)OR(rt1.c0)))OR(rt0.c1)), (((rt0.c3, rt1.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c0, rt0.c0)) AND ((rt0.c3, rt1.c0, vt0.c0))))) ORDER BY ((((rt1.c3)<>(0x6a460899)))/(((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c0))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt0.c3)))) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND (((0.6256236471486276) NOTNULL))) LEFT OUTER JOIN rt1 ON ((rt0.c0) BETWEEN ((0.6364111141654538 IN ())) AND (((rt0.c0)GLOB(rt0.c0)))) WHERE (0Xffffffffadb1f8c5) ORDER BY (((NOT (rt1.c1)))%(((rt0.c3) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffadb1f8c5) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt0.c3)))) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND (((0.6256236471486276) NOTNULL))) LEFT OUTER JOIN rt1 ON ((rt0.c0) BETWEEN ((0.6364111141654538 IN ())) AND (((rt0.c0)GLOB(rt0.c0)))) ORDER BY (((NOT (rt1.c1)))%(((rt0.c3) ISNULL)))  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt0.c3)))) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND (((0.6256236471486276) NOTNULL))) LEFT OUTER JOIN rt1 ON ((rt0.c0) BETWEEN ((0.6364111141654538 IN ())) AND (((rt0.c0)GLOB(rt0.c0)))) WHERE (0Xffffffffadb1f8c5) ORDER BY (((NOT (rt1.c1)))%(((rt0.c3) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffadb1f8c5) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt0.c3)))) NOT BETWEEN ((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND (((0.6256236471486276) NOTNULL))) LEFT OUTER JOIN rt1 ON ((rt0.c0) BETWEEN ((0.6364111141654538 IN ())) AND (((rt0.c0)GLOB(rt0.c0)))) ORDER BY (((NOT (rt1.c1)))%(((rt0.c3) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON '0.7170793549397406' WHERE (((CASE NULL  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN 'W7' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN '-232743954' THEN rt0.c2 ELSE vt0.c0 END) IS FALSE)) ORDER BY (((rt0.c2)OR(rt0.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN 'W7' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN '-232743954' THEN rt0.c2 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON '0.7170793549397406' ORDER BY (((rt0.c2)OR(rt0.c2)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON '0.7170793549397406' WHERE (((CASE NULL  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN 'W7' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN '-232743954' THEN rt0.c2 ELSE vt0.c0 END) IS FALSE)) ORDER BY (((rt0.c2)OR(rt0.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN 'W7' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN '-232743954' THEN rt0.c2 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON '0.7170793549397406' ORDER BY (((rt0.c2)OR(rt0.c2)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON '0.7170793549397406' WHERE (((CASE NULL  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN 'W7' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN '-232743954' THEN rt0.c2 ELSE vt0.c0 END) IS FALSE)) ORDER BY (((rt0.c2)OR(rt0.c2)) IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1)) BETWEEN (((~ (rt0.c3)))) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) COLLATE RTRIM DESC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)*(0x61afadee)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((~ (rt0.c3)))) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) COLLATE RTRIM DESC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)*(0x61afadee)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1)) BETWEEN (((~ (rt0.c3)))) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) COLLATE RTRIM DESC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)*(0x61afadee)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((~ (rt0.c3)))) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) COLLATE RTRIM DESC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)*(0x61afadee)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1)) BETWEEN (((~ (rt0.c3)))) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) COLLATE RTRIM DESC  NULLS FIRST, ((rt0.c0 COLLATE RTRIM)*(0x61afadee)) DESC;
SELECT * FROM vt0 INNER JOIN rt1 ON ((((((((((rt1.c0)*(rt1.c2)))OR(rt1.c0)))AND(((rt1.c1)||(vt0.c0)))))OR(rt1.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(rt1.c2)))) WHERE (TRIM(DISTINCT (((rt1.c0, rt1.c3, rt1.c2))=((rt1.c2, vt0.c0, vt0.c0))), ((rt1.c2) IS FALSE))) ORDER BY ((0.8542455251063104)>>(((((x'')OR(rt1.c0)))OR(rt1.c3)))) ASC, (- (CAST(rt1.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((rt1.c0, rt1.c3, rt1.c2))==((rt1.c2, vt0.c0, vt0.c0))), ((rt1.c2) IS FALSE))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((((((rt1.c0)*(rt1.c2)))OR(rt1.c0)))AND(((rt1.c1)||(vt0.c0)))))OR(rt1.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(rt1.c2)))) ORDER BY ((0.8542455251063104)>>(((((x'')OR(rt1.c0)))OR(rt1.c3)))) ASC, (- (CAST(rt1.c1 AS INTEGER))) DESC);
SELECT * FROM vt0 INNER JOIN rt1 ON ((((((((((rt1.c0)*(rt1.c2)))OR(rt1.c0)))AND(((rt1.c1)||(vt0.c0)))))OR(rt1.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(rt1.c2)))) WHERE (TRIM(DISTINCT (((rt1.c0, rt1.c3, rt1.c2))=((rt1.c2, vt0.c0, vt0.c0))), ((rt1.c2) IS FALSE))) ORDER BY ((0.8542455251063104)>>(((((x'')OR(rt1.c0)))OR(rt1.c3)))) ASC, (- (CAST(rt1.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((rt1.c0, rt1.c3, rt1.c2))==((rt1.c2, vt0.c0, vt0.c0))), ((rt1.c2) IS FALSE))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((((((rt1.c0)*(rt1.c2)))OR(rt1.c0)))AND(((rt1.c1)||(vt0.c0)))))OR(rt1.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(rt1.c2)))) ORDER BY ((0.8542455251063104)>>(((((x'')OR(rt1.c0)))OR(rt1.c3)))) ASC, (- (CAST(rt1.c1 AS INTEGER))) DESC);
SELECT * FROM vt0 INNER JOIN rt1 ON ((((((((((rt1.c0)*(rt1.c2)))OR(rt1.c0)))AND(((rt1.c1)||(vt0.c0)))))OR(rt1.c0)))OR(((((vt0.c0)AND(vt0.c0)))AND(rt1.c2)))) WHERE (TRIM(DISTINCT (((rt1.c0, rt1.c3, rt1.c2))=((rt1.c2, vt0.c0, vt0.c0))), ((rt1.c2) IS FALSE))) ORDER BY ((0.8542455251063104)>>(((((x'')OR(rt1.c0)))OR(rt1.c3)))) ASC, (- (CAST(rt1.c1 AS INTEGER))) DESC;
SELECT * FROM vt0, rt1 WHERE (COALESCE(DISTINCT '-167915982', UNLIKELY(DISTINCT rt1.c3)));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT '-167915982', UNLIKELY(DISTINCT rt1.c3))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (COALESCE(DISTINCT '-167915982', UNLIKELY(DISTINCT rt1.c3)));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT '-167915982', UNLIKELY(DISTINCT rt1.c3))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (COALESCE(DISTINCT '-167915982', UNLIKELY(DISTINCT rt1.c3)));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)<=('775342909'))) ORDER BY ((((rt0.c1 COLLATE BINARY)AND(((rt0.c1)>=(rt0.c3)))))OR(((rt0.c3)>(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)<=('775342909'))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)AND(((rt0.c1)>=(rt0.c3)))))OR(((rt0.c3)>(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)<=('775342909'))) ORDER BY ((((rt0.c1 COLLATE BINARY)AND(((rt0.c1)>=(rt0.c3)))))OR(((rt0.c3)>(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)<=('775342909'))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)AND(((rt0.c1)>=(rt0.c3)))))OR(((rt0.c3)>(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)<=('775342909'))) ORDER BY ((((rt0.c1 COLLATE BINARY)AND(((rt0.c1)>=(rt0.c3)))))OR(((rt0.c3)>(rt0.c0)))) ASC  NULLS LAST;
SELECT * FROM rt0 INNER JOIN rt1 ON (((((rt1.c0, rt0.c0, '-1461486007'))=((rt1.c1, rt0.c1, rt1.c1))))=(((0.37161754651121337)LIKE(rt1.c3)))) WHERE (CAST(UPPER(DISTINCT rt1.c0) AS REAL)) ORDER BY (rt0.c0 IN (((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))), CAST((- (rt0.c0)) AS TEXT)  NULLS LAST, rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(DISTINCT rt1.c0) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((rt1.c0, rt0.c0, '-1461486007'))==((rt1.c1, rt0.c1, rt1.c1))))=(((0.37161754651121337)LIKE(rt1.c3)))) ORDER BY (rt0.c0 IN (((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))), CAST((- (rt0.c0)) AS TEXT)  NULLS LAST, rt1.c2  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN rt1 ON (((((rt1.c0, rt0.c0, '-1461486007'))=((rt1.c1, rt0.c1, rt1.c1))))=(((0.37161754651121337)LIKE(rt1.c3)))) WHERE (CAST(UPPER(DISTINCT rt1.c0) AS REAL)) ORDER BY (rt0.c0 IN (((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))), CAST((- (rt0.c0)) AS TEXT)  NULLS LAST, rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(DISTINCT rt1.c0) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((rt1.c0, rt0.c0, '-1461486007'))==((rt1.c1, rt0.c1, rt1.c1))))=(((0.37161754651121337)LIKE(rt1.c3)))) ORDER BY (rt0.c0 IN (((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))), CAST((- (rt0.c0)) AS TEXT)  NULLS LAST, rt1.c2  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN rt1 ON (((((rt1.c0, rt0.c0, '-1461486007'))=((rt1.c1, rt0.c1, rt1.c1))))=(((0.37161754651121337)LIKE(rt1.c3)))) WHERE (CAST(UPPER(DISTINCT rt1.c0) AS REAL)) ORDER BY (rt0.c0 IN (((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))), CAST((- (rt0.c0)) AS TEXT)  NULLS LAST, rt1.c2  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT ALL * FROM vt1, vt0, rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0, rt0, rt1);
SELECT ALL * FROM vt1, vt0, rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0, rt0, rt1);
SELECT ALL * FROM vt1, vt0, rt0, rt1 WHERE ('');
SELECT ALL * FROM rt1, vt1, rt0 WHERE (json_quote(CAST(NULL AS TEXT))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(CAST(NULL AS TEXT))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (json_quote(CAST(NULL AS TEXT))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(CAST(NULL AS TEXT))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (json_quote(CAST(NULL AS TEXT))) ORDER BY NULL  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE ((((~ (rt1.c2)))==((rt1.c1 IN (rt1.c1))))) ORDER BY CASE CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN 0.05196532555757216 THEN rt1.c0 ELSE vt0.c0 END  WHEN (((rt1.c0))!=((vt0.c0))) THEN (((rt1.c2, vt0.c0, 0.5762824126069848)) BETWEEN ((vt0.c0, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c0))) WHEN vt0.c0 THEN ((vt0.c0)+(vt0.c0)) WHEN json_object(rt1.c2, rt1.c0) THEN LIKE(rt1.c1, rt1.c0, '-') ELSE LENGTH('-667668050') END;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c2)))==((rt1.c1 IN (rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN 0.05196532555757216 THEN rt1.c0 ELSE vt0.c0 END  WHEN (((rt1.c0))!=((vt0.c0))) THEN (((rt1.c2, vt0.c0, 0.5762824126069848)) BETWEEN ((vt0.c0, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c0))) WHEN vt0.c0 THEN ((vt0.c0)+(vt0.c0)) WHEN json_object(rt1.c2, rt1.c0) THEN LIKE(rt1.c1, rt1.c0, '-') ELSE LENGTH('-667668050') END);
SELECT * FROM vt0, rt1 WHERE ((((~ (rt1.c2)))==((rt1.c1 IN (rt1.c1))))) ORDER BY CASE CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN 0.05196532555757216 THEN rt1.c0 ELSE vt0.c0 END  WHEN (((rt1.c0))!=((vt0.c0))) THEN (((rt1.c2, vt0.c0, 0.5762824126069848)) BETWEEN ((vt0.c0, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c0))) WHEN vt0.c0 THEN ((vt0.c0)+(vt0.c0)) WHEN json_object(rt1.c2, rt1.c0) THEN LIKE(rt1.c1, rt1.c0, '-') ELSE LENGTH('-667668050') END;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c2)))==((rt1.c1 IN (rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN 0.05196532555757216 THEN rt1.c0 ELSE vt0.c0 END  WHEN (((rt1.c0))!=((vt0.c0))) THEN (((rt1.c2, vt0.c0, 0.5762824126069848)) BETWEEN ((vt0.c0, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c0))) WHEN vt0.c0 THEN ((vt0.c0)+(vt0.c0)) WHEN json_object(rt1.c2, rt1.c0) THEN LIKE(rt1.c1, rt1.c0, '-') ELSE LENGTH('-667668050') END);
SELECT * FROM vt1 INNER JOIN rt1 ON x'' INNER JOIN vt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC) CROSS JOIN rt0 ON ((((rt0.c0)OR(rt0.c0 COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)) WHERE ((CASE WHEN '' THEN '398116890' END IN ())) ORDER BY (((rt0.c3 IN (rt0.c3))) NOT BETWEEN (NULL) AND (0.24270773553181424)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN '' THEN '398116890' END IN ())) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON x'' INNER JOIN vt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC) CROSS JOIN rt0 ON ((((rt0.c0)OR(rt0.c0 COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)) ORDER BY (((rt0.c3 IN (rt0.c3))) NOT BETWEEN (NULL) AND (0.24270773553181424)) DESC  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN rt1 ON x'' INNER JOIN vt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC) CROSS JOIN rt0 ON ((((rt0.c0)OR(rt0.c0 COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)) WHERE ((CASE WHEN '' THEN '398116890' END IN ())) ORDER BY (((rt0.c3 IN (rt0.c3))) NOT BETWEEN (NULL) AND (0.24270773553181424)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN '' THEN '398116890' END IN ())) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON x'' INNER JOIN vt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC) CROSS JOIN rt0 ON ((((rt0.c0)OR(rt0.c0 COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)) ORDER BY (((rt0.c3 IN (rt0.c3))) NOT BETWEEN (NULL) AND (0.24270773553181424)) DESC  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN rt1 ON x'' INNER JOIN vt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC) CROSS JOIN rt0 ON ((((rt0.c0)OR(rt0.c0 COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)) WHERE ((CASE WHEN '' THEN '398116890' END IN ())) ORDER BY (((rt0.c3 IN (rt0.c3))) NOT BETWEEN (NULL) AND (0.24270773553181424)) DESC  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE (CASE (rt0.c0 IN ())  WHEN '-627674194' THEN CASE WHEN rt0.c2 THEN NULL ELSE rt1.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN ())  WHEN '-627674194' THEN CASE WHEN rt0.c2 THEN NULL ELSE rt1.c1 END END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE (rt0.c0 IN ())  WHEN '-627674194' THEN CASE WHEN rt0.c2 THEN NULL ELSE rt1.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN ())  WHEN '-627674194' THEN CASE WHEN rt0.c2 THEN NULL ELSE rt1.c1 END END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE (rt0.c0 IN ())  WHEN '-627674194' THEN CASE WHEN rt0.c2 THEN NULL ELSE rt1.c1 END END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)IS NOT(vt0.c0)), (+ (vt0.c0)), ((vt0.c0)>(vt0.c0)))) AND ((x'', (vt0.c0 IN ()), CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)IS NOT(vt0.c0)), (+ (vt0.c0)), ((vt0.c0)>(vt0.c0)))) AND ((x'', (vt0.c0 IN ()), CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)IS NOT(vt0.c0)), (+ (vt0.c0)), ((vt0.c0)>(vt0.c0)))) AND ((x'', (vt0.c0 IN ()), CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)IS NOT(vt0.c0)), (+ (vt0.c0)), ((vt0.c0)>(vt0.c0)))) AND ((x'', (vt0.c0 IN ()), CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)IS NOT(vt0.c0)), (+ (vt0.c0)), ((vt0.c0)>(vt0.c0)))) AND ((x'', (vt0.c0 IN ()), CAST(vt0.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 INNER JOIN rt1 ON ((vt0.c0)+((~ (0.8124296849157691)))) WHERE (((((rt1.c0)GLOB(vt0.c0)))!=(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)GLOB(vt0.c0)))<>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0, vt1 INNER JOIN rt1 ON ((vt0.c0)+((~ (0.8124296849157691)))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 INNER JOIN rt1 ON ((vt0.c0)+((~ (0.8124296849157691)))) WHERE (((((rt1.c0)GLOB(vt0.c0)))!=(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)GLOB(vt0.c0)))<>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0, vt1 INNER JOIN rt1 ON ((vt0.c0)+((~ (0.8124296849157691)))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 INNER JOIN rt1 ON ((vt0.c0)+((~ (0.8124296849157691)))) WHERE (((((rt1.c0)GLOB(vt0.c0)))!=(((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON ((0xfffffffff8e7af5c) NOT BETWEEN (vt1.c0) AND (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c2 THEN rt1.c0 END)) CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)OR(CASE WHEN rt0.c2 THEN rt1.c3 END)) RIGHT OUTER JOIN vt0 ON json_extract('61309802', rt1.c2) COLLATE BINARY WHERE (((rt1.c1) IS TRUE) COLLATE NOCASE) ORDER BY ((((rt0.c3) IS TRUE)) BETWEEN (SQLITE_SOURCE_ID()) AND ((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((0Xfffffffff8e7af5c) NOT BETWEEN (vt1.c0) AND (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c2 THEN rt1.c0 END)) CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)OR(CASE WHEN rt0.c2 THEN rt1.c3 END)) RIGHT OUTER JOIN vt0 ON json_extract('61309802', rt1.c2) COLLATE BINARY ORDER BY ((((rt0.c3) IS TRUE)) BETWEEN (SQLITE_SOURCE_ID()) AND ((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON ((0xfffffffff8e7af5c) NOT BETWEEN (vt1.c0) AND (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c2 THEN rt1.c0 END)) CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)OR(CASE WHEN rt0.c2 THEN rt1.c3 END)) RIGHT OUTER JOIN vt0 ON json_extract('61309802', rt1.c2) COLLATE BINARY WHERE (((rt1.c1) IS TRUE) COLLATE NOCASE) ORDER BY ((((rt0.c3) IS TRUE)) BETWEEN (SQLITE_SOURCE_ID()) AND ((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((0Xfffffffff8e7af5c) NOT BETWEEN (vt1.c0) AND (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c2 THEN rt1.c0 END)) CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)OR(CASE WHEN rt0.c2 THEN rt1.c3 END)) RIGHT OUTER JOIN vt0 ON json_extract('61309802', rt1.c2) COLLATE BINARY ORDER BY ((((rt0.c3) IS TRUE)) BETWEEN (SQLITE_SOURCE_ID()) AND ((rt0.c0 IN ()))) ASC);
SELECT ALL * FROM vt1 WHERE ((((((((((- (vt1.c0)))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((- (vt1.c0)))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((- (vt1.c0)))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((- (vt1.c0)))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((- (vt1.c0)))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((~ ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((~ ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((~ ((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON (rt0.c2 IN ()) RIGHT OUTER JOIN vt1 ON rt0.c3 WHERE ((((+ (rt1.c0))) NOT BETWEEN (NULL) AND (((((((((((((((((vt1.c0)OR(rt1.c1)))OR(rt1.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))OR(rt1.c0)))AND(1680913913)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c0))) NOT BETWEEN (NULL) AND (((((((((((((((((vt1.c0)OR(rt1.c1)))OR(rt1.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))OR(rt1.c0)))AND(1680913913))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON (rt0.c2 IN ()) RIGHT OUTER JOIN vt1 ON rt0.c3);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON (rt0.c2 IN ()) RIGHT OUTER JOIN vt1 ON rt0.c3 WHERE ((((+ (rt1.c0))) NOT BETWEEN (NULL) AND (((((((((((((((((vt1.c0)OR(rt1.c1)))OR(rt1.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))OR(rt1.c0)))AND(1680913913)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c0))) NOT BETWEEN (NULL) AND (((((((((((((((((vt1.c0)OR(rt1.c1)))OR(rt1.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))OR(rt1.c0)))AND(1680913913))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON (rt0.c2 IN ()) RIGHT OUTER JOIN vt1 ON rt0.c3);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON (rt0.c2 IN ()) RIGHT OUTER JOIN vt1 ON rt0.c3 WHERE ((((+ (rt1.c0))) NOT BETWEEN (NULL) AND (((((((((((((((((vt1.c0)OR(rt1.c1)))OR(rt1.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))OR(rt1.c0)))AND(1680913913)))));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (CAST((~ (rt1.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt1.c2)) AS BLOB)) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (CAST((~ (rt1.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt1.c2)) AS BLOB)) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (CAST((~ (rt1.c2)) AS BLOB));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN vt1 ON (rt0.c2 COLLATE BINARY IN ()) INNER JOIN rt1 ON ((- (NULL)) IN ((((rt0.c2, rt1.c3, rt1.c3))!=((rt1.c1, rt1.c1, rt0.c2))), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 ELSE x'' END)) WHERE ((((((rt0.c0)>=(rt1.c1))))<=((((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)>=(rt1.c1))))<=((((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c3)))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON (rt0.c2 COLLATE BINARY IN ()) INNER JOIN rt1 ON ((- (NULL)) IN ((((rt0.c2, rt1.c3, rt1.c3))!=((rt1.c1, rt1.c1, rt0.c2))), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 ELSE x'' END)));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN vt1 ON (rt0.c2 COLLATE BINARY IN ()) INNER JOIN rt1 ON ((- (NULL)) IN ((((rt0.c2, rt1.c3, rt1.c3))!=((rt1.c1, rt1.c1, rt0.c2))), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 ELSE x'' END)) WHERE ((((((rt0.c0)>=(rt1.c1))))<=((((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)>=(rt1.c1))))<=((((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c3)))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON (rt0.c2 COLLATE BINARY IN ()) INNER JOIN rt1 ON ((- (NULL)) IN ((((rt0.c2, rt1.c3, rt1.c3))!=((rt1.c1, rt1.c1, rt0.c2))), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 ELSE x'' END)));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN vt1 ON (rt0.c2 COLLATE BINARY IN ()) INNER JOIN rt1 ON ((- (NULL)) IN ((((rt0.c2, rt1.c3, rt1.c3))!=((rt1.c1, rt1.c1, rt0.c2))), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 ELSE x'' END)) WHERE ((((((rt0.c0)>=(rt1.c1))))<=((((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c3))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, vt1 WHERE (CASE (- (vt1.c0))  WHEN 0x8291e7b THEN ((vt0.c0)>>(rt0.c3)) WHEN '0.25222528146190415' THEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((vt1.c0)>(rt0.c0)) THEN ((rt0.c3) NOT NULL) END) ORDER BY (((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((0.5254928530032037, vt1.c0, rt0.c2)) AND ((rt0.c0, rt1.c1, rt0.c1))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (vt1.c0))  WHEN 0x8291e7b THEN ((vt0.c0)>>(rt0.c3)) WHEN '0.25222528146190415' THEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((vt1.c0)>(rt0.c0)) THEN ((rt0.c3) NOT NULL) END) IS TRUE)  as count FROM vt0, rt0, rt1, vt1 ORDER BY (((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((0.5254928530032037, vt1.c0, rt0.c2)) AND ((rt0.c0, rt1.c1, rt0.c1))) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, vt1 WHERE (CASE (- (vt1.c0))  WHEN 0x8291e7b THEN ((vt0.c0)>>(rt0.c3)) WHEN '0.25222528146190415' THEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((vt1.c0)>(rt0.c0)) THEN ((rt0.c3) NOT NULL) END) ORDER BY (((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((0.5254928530032037, vt1.c0, rt0.c2)) AND ((rt0.c0, rt1.c1, rt0.c1))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (vt1.c0))  WHEN 0x8291e7b THEN ((vt0.c0)>>(rt0.c3)) WHEN '0.25222528146190415' THEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((vt1.c0)>(rt0.c0)) THEN ((rt0.c3) NOT NULL) END) IS TRUE)  as count FROM vt0, rt0, rt1, vt1 ORDER BY (((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((0.5254928530032037, vt1.c0, rt0.c2)) AND ((rt0.c0, rt1.c1, rt0.c1))) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, vt1 WHERE (CASE (- (vt1.c0))  WHEN 0x8291e7b THEN ((vt0.c0)>>(rt0.c3)) WHEN '0.25222528146190415' THEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) WHEN ((vt1.c0)>(rt0.c0)) THEN ((rt0.c3) NOT NULL) END) ORDER BY (((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((0.5254928530032037, vt1.c0, rt0.c2)) AND ((rt0.c0, rt1.c1, rt0.c1))) COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0, vt0 NOT INDEXED WHERE ((- ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 NOT INDEXED WHERE ((- ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 NOT INDEXED WHERE ((- ((+ (rt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0, rt1 CROSS JOIN vt1 ON ((rt0.c2)+(rt1.c1)) COLLATE NOCASE WHERE ((rt0.c2 IN (((((rt1.c2)AND(rt0.c0)))AND(0.3820825902883488)), LIKELIHOOD(rt0.c3, 0.14469965856950306)))) ORDER BY ((NULLIF(vt0.c0, rt1.c1))+((NOT (vt1.c0)))) ASC  NULLS LAST, (((vt1.c0 IN (rt0.c0))) NOT BETWEEN (((rt1.c2)|(rt1.c3))) AND (rt1.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (((((rt1.c2)AND(rt0.c0)))AND(0.3820825902883488)), LIKELIHOOD(rt0.c3, 0.14469965856950306)))) IS TRUE)  as count FROM vt0, rt0, rt1 CROSS JOIN vt1 ON ((rt0.c2)+(rt1.c1)) COLLATE NOCASE ORDER BY ((NULLIF(vt0.c0, rt1.c1))+((NOT (vt1.c0)))) ASC  NULLS LAST, (((vt1.c0 IN (rt0.c0))) NOT BETWEEN (((rt1.c2)|(rt1.c3))) AND (rt1.c1)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, rt1 CROSS JOIN vt1 ON ((rt0.c2)+(rt1.c1)) COLLATE NOCASE WHERE ((rt0.c2 IN (((((rt1.c2)AND(rt0.c0)))AND(0.3820825902883488)), LIKELIHOOD(rt0.c3, 0.14469965856950306)))) ORDER BY ((NULLIF(vt0.c0, rt1.c1))+((NOT (vt1.c0)))) ASC  NULLS LAST, (((vt1.c0 IN (rt0.c0))) NOT BETWEEN (((rt1.c2)|(rt1.c3))) AND (rt1.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (((((rt1.c2)AND(rt0.c0)))AND(0.3820825902883488)), LIKELIHOOD(rt0.c3, 0.14469965856950306)))) IS TRUE)  as count FROM vt0, rt0, rt1 CROSS JOIN vt1 ON ((rt0.c2)+(rt1.c1)) COLLATE NOCASE ORDER BY ((NULLIF(vt0.c0, rt1.c1))+((NOT (vt1.c0)))) ASC  NULLS LAST, (((vt1.c0 IN (rt0.c0))) NOT BETWEEN (((rt1.c2)|(rt1.c3))) AND (rt1.c1)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, rt1 CROSS JOIN vt1 ON ((rt0.c2)+(rt1.c1)) COLLATE NOCASE WHERE ((rt0.c2 IN (((((rt1.c2)AND(rt0.c0)))AND(0.3820825902883488)), LIKELIHOOD(rt0.c3, 0.14469965856950306)))) ORDER BY ((NULLIF(vt0.c0, rt1.c1))+((NOT (vt1.c0)))) ASC  NULLS LAST, (((vt1.c0 IN (rt0.c0))) NOT BETWEEN (((rt1.c2)|(rt1.c3))) AND (rt1.c1)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON ((rt0.c0)>(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END)) CROSS JOIN vt1 ON ((((NULL IN ())))>((json_array_length(rt0.c0, rt1.c0)))) WHERE (load_extension(((rt0.c0) NOT NULL))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))%((- (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(((rt0.c0) NOT NULL))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((rt0.c0)>(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END)) CROSS JOIN vt1 ON ((((NULL IN ())))>((json_array_length(rt0.c0, rt1.c0)))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))%((- (rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON ((rt0.c0)>(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END)) CROSS JOIN vt1 ON ((((NULL IN ())))>((json_array_length(rt0.c0, rt1.c0)))) WHERE (load_extension(((rt0.c0) NOT NULL))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))%((- (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(((rt0.c0) NOT NULL))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((rt0.c0)>(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END)) CROSS JOIN vt1 ON ((((NULL IN ())))>((json_array_length(rt0.c0, rt1.c0)))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))%((- (rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON QUOTE(((vt0.c0)%(rt0.c3))) WHERE ((((NOT (rt0.c3))) NOT BETWEEN (json_extract(rt0.c1, rt0.c0)) AND (rt0.c1))) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c2 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c3))) NOT BETWEEN (json_extract(rt0.c1, rt0.c0)) AND (rt0.c1))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON QUOTE(((vt0.c0)%(rt0.c3))) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c2 END IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON QUOTE(((vt0.c0)%(rt0.c3))) WHERE ((((NOT (rt0.c3))) NOT BETWEEN (json_extract(rt0.c1, rt0.c0)) AND (rt0.c1))) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c2 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c3))) NOT BETWEEN (json_extract(rt0.c1, rt0.c0)) AND (rt0.c1))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON QUOTE(((vt0.c0)%(rt0.c3))) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c2 END IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (TRIM(DISTINCT rt0.c2, rt0.c0) IN ((~ (rt0.c3)))) INNER JOIN vt0 ON (NOT ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((vt0.c0, rt0.c1, rt0.c2))))) WHERE ((rt0.c1 IN (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (TRIM(DISTINCT rt0.c2, rt0.c0) IN ((~ (rt0.c3)))) INNER JOIN vt0 ON (NOT ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((vt0.c0, rt0.c1, rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (TRIM(DISTINCT rt0.c2, rt0.c0) IN ((~ (rt0.c3)))) INNER JOIN vt0 ON (NOT ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((vt0.c0, rt0.c1, rt0.c2))))) WHERE ((rt0.c1 IN (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (TRIM(DISTINCT rt0.c2, rt0.c0) IN ((~ (rt0.c3)))) INNER JOIN vt0 ON (NOT ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((vt0.c0, rt0.c1, rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (TRIM(DISTINCT rt0.c2, rt0.c0) IN ((~ (rt0.c3)))) INNER JOIN vt0 ON (NOT ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((vt0.c0, rt0.c1, rt0.c2))))) WHERE ((rt0.c1 IN (rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)))-((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0)))-((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)))-((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0)))-((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)))-((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))|(vt0.c0))) ORDER BY (+ ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))|(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))|(vt0.c0))) ORDER BY (+ ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))|(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))|(vt0.c0))) ORDER BY (+ ((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0) IS TRUE) IN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) ORDER BY CASE (((0.055936890155844576))=((rt0.c2)))  WHEN rt0.c1 THEN ((((rt0.c3)OR(0.6226577382849859)))AND(rt0.c1)) WHEN (vt1.c0 IN (rt0.c2, rt0.c3)) THEN ((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)) WHEN load_extension(rt0.c1, '747775315') THEN (((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS TRUE) IN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE (((0.055936890155844576))=((rt0.c2)))  WHEN rt0.c1 THEN ((((rt0.c3)OR(0.6226577382849859)))AND(rt0.c1)) WHEN (vt1.c0 IN (rt0.c2, rt0.c3)) THEN ((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)) WHEN load_extension(rt0.c1, '747775315') THEN (((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0) IS TRUE) IN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) ORDER BY CASE (((0.055936890155844576))=((rt0.c2)))  WHEN rt0.c1 THEN ((((rt0.c3)OR(0.6226577382849859)))AND(rt0.c1)) WHEN (vt1.c0 IN (rt0.c2, rt0.c3)) THEN ((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)) WHEN load_extension(rt0.c1, '747775315') THEN (((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS TRUE) IN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE (((0.055936890155844576))=((rt0.c2)))  WHEN rt0.c1 THEN ((((rt0.c3)OR(0.6226577382849859)))AND(rt0.c1)) WHEN (vt1.c0 IN (rt0.c2, rt0.c3)) THEN ((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)) WHEN load_extension(rt0.c1, '747775315') THEN (((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0) IS TRUE) IN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))))) ORDER BY CASE (((0.055936890155844576))=((rt0.c2)))  WHEN rt0.c1 THEN ((((rt0.c3)OR(0.6226577382849859)))AND(rt0.c1)) WHEN (vt1.c0 IN (rt0.c2, rt0.c3)) THEN ((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)) WHEN load_extension(rt0.c1, '747775315') THEN (((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL)) BETWEEN (((rt0.c1)-(rt0.c0))) AND (((rt0.c2)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) BETWEEN (((rt0.c1)-(rt0.c0))) AND (((rt0.c2)IS(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL)) BETWEEN (((rt0.c1)-(rt0.c0))) AND (((rt0.c2)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) BETWEEN (((rt0.c1)-(rt0.c0))) AND (((rt0.c2)IS(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL)) BETWEEN (((rt0.c1)-(rt0.c0))) AND (((rt0.c2)IS(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN rt1 ON CASE IFNULL(DISTINCT rt1.c1, NULL)  WHEN ((2007078914) NOTNULL) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN '' THEN ((rt1.c1)%(rt1.c1)) WHEN TIME(vt0.c0, vt0.c0, rt1.c3) THEN rt1.c2 WHEN -2.08732541E8 THEN ((rt1.c2)%(rt1.c1)) WHEN ((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)) THEN ((((rt1.c3)AND(rt1.c1)))AND(rt1.c0)) END WHERE (TYPEOF((+ (0.096551913271263)))) ORDER BY ((CAST(rt1.c3 AS INTEGER))GLOB(CAST(vt1.c0 AS INTEGER))) ASC, (0X5d7a31f9 IN ());
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((+ (0.096551913271263)))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt1 ON CASE IFNULL(DISTINCT rt1.c1, NULL)  WHEN ((2007078914) NOTNULL) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN '' THEN ((rt1.c1)%(rt1.c1)) WHEN TIME(vt0.c0, vt0.c0, rt1.c3) THEN rt1.c2 WHEN -2.08732541E8 THEN ((rt1.c2)%(rt1.c1)) WHEN ((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)) THEN ((((rt1.c3)AND(rt1.c1)))AND(rt1.c0)) END ORDER BY ((CAST(rt1.c3 AS INTEGER))GLOB(CAST(vt1.c0 AS INTEGER))) ASC, (0X5d7a31f9 IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN rt1 ON CASE IFNULL(DISTINCT rt1.c1, NULL)  WHEN ((2007078914) NOTNULL) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN '' THEN ((rt1.c1)%(rt1.c1)) WHEN TIME(vt0.c0, vt0.c0, rt1.c3) THEN rt1.c2 WHEN -2.08732541E8 THEN ((rt1.c2)%(rt1.c1)) WHEN ((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)) THEN ((((rt1.c3)AND(rt1.c1)))AND(rt1.c0)) END WHERE (TYPEOF((+ (0.096551913271263)))) ORDER BY ((CAST(rt1.c3 AS INTEGER))GLOB(CAST(vt1.c0 AS INTEGER))) ASC, (0X5d7a31f9 IN ());
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((+ (0.096551913271263)))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt1 ON CASE IFNULL(DISTINCT rt1.c1, NULL)  WHEN ((2007078914) NOTNULL) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN '' THEN ((rt1.c1)%(rt1.c1)) WHEN TIME(vt0.c0, vt0.c0, rt1.c3) THEN rt1.c2 WHEN -2.08732541E8 THEN ((rt1.c2)%(rt1.c1)) WHEN ((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)) THEN ((((rt1.c3)AND(rt1.c1)))AND(rt1.c0)) END ORDER BY ((CAST(rt1.c3 AS INTEGER))GLOB(CAST(vt1.c0 AS INTEGER))) ASC, (0X5d7a31f9 IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN rt1 ON CASE IFNULL(DISTINCT rt1.c1, NULL)  WHEN ((2007078914) NOTNULL) THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN '' THEN ((rt1.c1)%(rt1.c1)) WHEN TIME(vt0.c0, vt0.c0, rt1.c3) THEN rt1.c2 WHEN -2.08732541E8 THEN ((rt1.c2)%(rt1.c1)) WHEN ((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)) THEN ((((rt1.c3)AND(rt1.c1)))AND(rt1.c0)) END WHERE (TYPEOF((+ (0.096551913271263)))) ORDER BY ((CAST(rt1.c3 AS INTEGER))GLOB(CAST(vt1.c0 AS INTEGER))) ASC, (0X5d7a31f9 IN ());
SELECT COUNT(*) FROM rt1, rt0, vt1, vt0 WHERE (((vt1.c0) BETWEEN ((rt1.c0 IN ())) AND ((rt1.c3 IN ())))) ORDER BY (((- (rt0.c1))) NOTNULL) ASC, ((CASE WHEN '-208732541' THEN rt1.c3 END) BETWEEN ((((x''))==((rt0.c3)))) AND (((((-65672443)AND(vt1.c0)))OR(rt0.c0))))  NULLS LAST, CAST((rt0.c1 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN ((rt1.c0 IN ())) AND ((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1, rt0, vt1, vt0 ORDER BY (((- (rt0.c1))) NOTNULL) ASC, ((CASE WHEN '-208732541' THEN rt1.c3 END) BETWEEN ((((x''))==((rt0.c3)))) AND (((((-65672443)AND(vt1.c0)))OR(rt0.c0))))  NULLS LAST, CAST((rt0.c1 IN ()) AS BLOB));
SELECT COUNT(*) FROM rt1, rt0, vt1, vt0 WHERE (((vt1.c0) BETWEEN ((rt1.c0 IN ())) AND ((rt1.c3 IN ())))) ORDER BY (((- (rt0.c1))) NOTNULL) ASC, ((CASE WHEN '-208732541' THEN rt1.c3 END) BETWEEN ((((x''))==((rt0.c3)))) AND (((((-65672443)AND(vt1.c0)))OR(rt0.c0))))  NULLS LAST, CAST((rt0.c1 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN ((rt1.c0 IN ())) AND ((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1, rt0, vt1, vt0 ORDER BY (((- (rt0.c1))) NOTNULL) ASC, ((CASE WHEN '-208732541' THEN rt1.c3 END) BETWEEN ((((x''))==((rt0.c3)))) AND (((((-65672443)AND(vt1.c0)))OR(rt0.c0))))  NULLS LAST, CAST((rt0.c1 IN ()) AS BLOB));
SELECT COUNT(*) FROM rt1, rt0, vt1, vt0 WHERE (((vt1.c0) BETWEEN ((rt1.c0 IN ())) AND ((rt1.c3 IN ())))) ORDER BY (((- (rt0.c1))) NOTNULL) ASC, ((CASE WHEN '-208732541' THEN rt1.c3 END) BETWEEN ((((x''))==((rt0.c3)))) AND (((((-65672443)AND(vt1.c0)))OR(rt0.c0))))  NULLS LAST, CAST((rt0.c1 IN ()) AS BLOB);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(NULL)))>>((+ (vt1.c0)))), ((0.9811295387530156) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS TRUE)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(NULL)))>>((+ (vt1.c0)))), ((0.9811295387530156) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(NULL)))>>((+ (vt1.c0)))), ((0.9811295387530156) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS TRUE)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(NULL)))>>((+ (vt1.c0)))), ((0.9811295387530156) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(NULL)))>>((+ (vt1.c0)))), ((0.9811295387530156) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC;
SELECT ALL * FROM rt1, vt1 INNER JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt0.c3 WHEN vt1.c0 THEN '-576553854' ELSE rt0.c2 END IN ()) WHERE (CAST(rt1.c1 COLLATE RTRIM AS REAL)) ORDER BY (((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) BETWEEN ((((rt0.c0))=(('-2067951627')))) AND ((NOT (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1 INNER JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt0.c3 WHEN vt1.c0 THEN '-576553854' ELSE rt0.c2 END IN ()) ORDER BY (((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) BETWEEN ((((rt0.c0))=(('-2067951627')))) AND ((NOT (rt1.c2)))));
SELECT ALL * FROM rt1, vt1 INNER JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt0.c3 WHEN vt1.c0 THEN '-576553854' ELSE rt0.c2 END IN ()) WHERE (CAST(rt1.c1 COLLATE RTRIM AS REAL)) ORDER BY (((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) BETWEEN ((((rt0.c0))=(('-2067951627')))) AND ((NOT (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1 INNER JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt0.c3 WHEN vt1.c0 THEN '-576553854' ELSE rt0.c2 END IN ()) ORDER BY (((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) BETWEEN ((((rt0.c0))=(('-2067951627')))) AND ((NOT (rt1.c2)))));
SELECT ALL * FROM rt1, vt1 INNER JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt0.c3 WHEN vt1.c0 THEN '-576553854' ELSE rt0.c2 END IN ()) WHERE (CAST(rt1.c1 COLLATE RTRIM AS REAL)) ORDER BY (((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) BETWEEN ((((rt0.c0))=(('-2067951627')))) AND ((NOT (rt1.c2))));
SELECT ALL * FROM rt1 WHERE (json_quote(((((rt1.c1)AND(rt1.c3)))OR(rt1.c0)))) ORDER BY CASE WHEN (((rt1.c0))>=((rt1.c1))) THEN ((rt1.c1)==(rt1.c0)) WHEN TRIM(DISTINCT rt1.c3, rt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)>>(rt1.c2)) THEN CASE WHEN rt1.c1 THEN rt1.c1 END ELSE LIKELIHOOD(rt1.c2, 0.28060096650097155) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_quote(((((rt1.c1)AND(rt1.c3)))OR(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (((rt1.c0))>=((rt1.c1))) THEN ((rt1.c1)==(rt1.c0)) WHEN TRIM(DISTINCT rt1.c3, rt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)>>(rt1.c2)) THEN CASE WHEN rt1.c1 THEN rt1.c1 END ELSE LIKELIHOOD(rt1.c2, 0.28060096650097155) END ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (json_quote(((((rt1.c1)AND(rt1.c3)))OR(rt1.c0)))) ORDER BY CASE WHEN (((rt1.c0))>=((rt1.c1))) THEN ((rt1.c1)==(rt1.c0)) WHEN TRIM(DISTINCT rt1.c3, rt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)>>(rt1.c2)) THEN CASE WHEN rt1.c1 THEN rt1.c1 END ELSE LIKELIHOOD(rt1.c2, 0.28060096650097155) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_quote(((((rt1.c1)AND(rt1.c3)))OR(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (((rt1.c0))>=((rt1.c1))) THEN ((rt1.c1)==(rt1.c0)) WHEN TRIM(DISTINCT rt1.c3, rt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)>>(rt1.c2)) THEN CASE WHEN rt1.c1 THEN rt1.c1 END ELSE LIKELIHOOD(rt1.c2, 0.28060096650097155) END ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (json_quote(((((rt1.c1)AND(rt1.c3)))OR(rt1.c0)))) ORDER BY CASE WHEN (((rt1.c0))>=((rt1.c1))) THEN ((rt1.c1)==(rt1.c0)) WHEN TRIM(DISTINCT rt1.c3, rt1.c2) THEN (rt1.c2 IN ()) WHEN ((rt1.c1)>>(rt1.c2)) THEN CASE WHEN rt1.c1 THEN rt1.c1 END ELSE LIKELIHOOD(rt1.c2, 0.28060096650097155) END ASC  NULLS LAST;
SELECT * FROM vt1, vt0, rt1 WHERE ((((- (rt1.c2))) NOT NULL)) ORDER BY (((vt1.c0)) BETWEEN ((((rt1.c2)IS NOT(0.5145895700137408)))) AND ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY (((vt1.c0)) BETWEEN ((((rt1.c2)IS NOT(0.5145895700137408)))) AND ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END)))  NULLS FIRST);
SELECT * FROM vt1, vt0, rt1 WHERE ((((- (rt1.c2))) NOT NULL)) ORDER BY (((vt1.c0)) BETWEEN ((((rt1.c2)IS NOT(0.5145895700137408)))) AND ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY (((vt1.c0)) BETWEEN ((((rt1.c2)IS NOT(0.5145895700137408)))) AND ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END)))  NULLS FIRST);
SELECT * FROM vt1, vt0, rt1 WHERE ((((- (rt1.c2))) NOT NULL)) ORDER BY (((vt1.c0)) BETWEEN ((((rt1.c2)IS NOT(0.5145895700137408)))) AND ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) IS TRUE)) ORDER BY ((((JULIANDAY(rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c2) BETWEEN (0xffffffff8da82cd2) AND (rt0.c3)))))OR((rt0.c2 IN (NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((JULIANDAY(rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c2) BETWEEN (0xffffffff8da82cd2) AND (rt0.c3)))))OR((rt0.c2 IN (NULL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) IS TRUE)) ORDER BY ((((JULIANDAY(rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c2) BETWEEN (0xffffffff8da82cd2) AND (rt0.c3)))))OR((rt0.c2 IN (NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((JULIANDAY(rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c2) BETWEEN (0xffffffff8da82cd2) AND (rt0.c3)))))OR((rt0.c2 IN (NULL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) IS TRUE)) ORDER BY ((((JULIANDAY(rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c2) BETWEEN (0xffffffff8da82cd2) AND (rt0.c3)))))OR((rt0.c2 IN (NULL)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, rt1, rt0 WHERE ((CASE WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c0 END IN (vt1.c0))) ORDER BY ((((CAST('1643995704' AS BLOB))OR((rt1.c1 IN ()))))OR(rt1.c3 COLLATE BINARY)), x'' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c0 END IN (vt1.c0))) IS TRUE)  as count FROM vt0, vt1, rt1, rt0 ORDER BY ((((CAST('1643995704' AS BLOB))OR((rt1.c1 IN ()))))OR(rt1.c3 COLLATE BINARY)), x'' COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0, vt1, rt1, rt0 WHERE ((CASE WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c0 END IN (vt1.c0))) ORDER BY ((((CAST('1643995704' AS BLOB))OR((rt1.c1 IN ()))))OR(rt1.c3 COLLATE BINARY)), x'' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c0 END IN (vt1.c0))) IS TRUE)  as count FROM vt0, vt1, rt1, rt0 ORDER BY ((((CAST('1643995704' AS BLOB))OR((rt1.c1 IN ()))))OR(rt1.c3 COLLATE BINARY)), x'' COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0, vt1, rt1, rt0 WHERE ((CASE WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c0 END IN (vt1.c0))) ORDER BY ((((CAST('1643995704' AS BLOB))OR((rt1.c1 IN ()))))OR(rt1.c3 COLLATE BINARY)), x'' COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN (-1531215520 IN ()) THEN CAST(rt1.c3 AS BLOB) ELSE CAST(rt1.c1 AS INTEGER) END) ORDER BY ((CAST(rt1.c3 AS BLOB)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (-1531215520 IN ()) THEN CAST(rt1.c3 AS BLOB) ELSE CAST(rt1.c1 AS INTEGER) END) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((CAST(rt1.c3 AS BLOB)) IS FALSE));
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN (-1531215520 IN ()) THEN CAST(rt1.c3 AS BLOB) ELSE CAST(rt1.c1 AS INTEGER) END) ORDER BY ((CAST(rt1.c3 AS BLOB)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (-1531215520 IN ()) THEN CAST(rt1.c3 AS BLOB) ELSE CAST(rt1.c1 AS INTEGER) END) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((CAST(rt1.c3 AS BLOB)) IS FALSE));
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN (-1531215520 IN ()) THEN CAST(rt1.c3 AS BLOB) ELSE CAST(rt1.c1 AS INTEGER) END) ORDER BY ((CAST(rt1.c3 AS BLOB)) IS FALSE);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(vt1.c0)))OR((((vt1.c0))>=((vt1.c0))))))OR((vt1.c0 IN ()))))OR(LIKELIHOOD(vt1.c0, 0.00886550126290242))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(vt1.c0)))OR((((vt1.c0))>=((vt1.c0))))))OR((vt1.c0 IN ()))))OR(LIKELIHOOD(vt1.c0, 0.00886550126290242)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(vt1.c0)))OR((((vt1.c0))>=((vt1.c0))))))OR((vt1.c0 IN ()))))OR(LIKELIHOOD(vt1.c0, 0.00886550126290242))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(vt1.c0)))OR((((vt1.c0))>=((vt1.c0))))))OR((vt1.c0 IN ()))))OR(LIKELIHOOD(vt1.c0, 0.00886550126290242)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(vt1.c0)))OR((((vt1.c0))>=((vt1.c0))))))OR((vt1.c0 IN ()))))OR(LIKELIHOOD(vt1.c0, 0.00886550126290242))));
SELECT * FROM rt0 WHERE (SUBSTR((NOT (rt0.c0)), ((rt0.c1)&(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((SUBSTR((NOT (rt0.c0)), ((rt0.c1)&(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (SUBSTR((NOT (rt0.c0)), ((rt0.c1)&(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((SUBSTR((NOT (rt0.c0)), ((rt0.c1)&(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (SUBSTR((NOT (rt0.c0)), ((rt0.c1)&(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c0 IN ()))))AND(((((rt0.c3)AND(rt0.c2)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c0 IN ()))))AND(((((rt0.c3)AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c0 IN ()))))AND(((((rt0.c3)AND(rt0.c2)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c0 IN ()))))AND(((((rt0.c3)AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR((rt0.c0 IN ()))))AND(((((rt0.c3)AND(rt0.c2)))AND(rt0.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON 'ꜝ7{zT+R' RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) ISNULL) WHERE (((vt1.c0)>>((rt0.c1 IN ())))) ORDER BY ((((rt0.c0)LIKE(vt1.c0)))||(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>>((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON 'ꜝ7{zT+R' RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) ISNULL) ORDER BY ((((rt0.c0)LIKE(vt1.c0)))||(vt1.c0)) DESC);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON 'ꜝ7{zT+R' RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) ISNULL) WHERE (((vt1.c0)>>((rt0.c1 IN ())))) ORDER BY ((((rt0.c0)LIKE(vt1.c0)))||(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>>((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON 'ꜝ7{zT+R' RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) ISNULL) ORDER BY ((((rt0.c0)LIKE(vt1.c0)))||(vt1.c0)) DESC);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON 'ꜝ7{zT+R' RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) ISNULL) WHERE (((vt1.c0)>>((rt0.c1 IN ())))) ORDER BY ((((rt0.c0)LIKE(vt1.c0)))||(vt1.c0)) DESC;
SELECT * FROM vt1, rt1 WHERE (LOWER(CAST(rt1.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(rt1.c1 AS INTEGER))) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (LOWER(CAST(rt1.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(rt1.c1 AS INTEGER))) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (LOWER(CAST(rt1.c1 AS INTEGER)));
SELECT * FROM rt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) AND ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))))) ORDER BY '*᯹Ku4t'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) AND ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY '*᯹Ku4t'  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) AND ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))))) ORDER BY '*᯹Ku4t'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) AND ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY '*᯹Ku4t'  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) AND ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))))) ORDER BY '*᯹Ku4t'  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM rt1, rt0, vt1 RIGHT OUTER JOIN vt0 ON (rt1.c1 IN ()) COLLATE NOCASE WHERE (((((((vt0.c0) IS TRUE))AND((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))))))AND(UNICODE(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS TRUE))AND((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))))))AND(UNICODE(rt0.c2)))) IS TRUE)  as count FROM rt1, rt0, vt1 RIGHT OUTER JOIN vt0 ON (rt1.c1 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, rt0, vt1 RIGHT OUTER JOIN vt0 ON (rt1.c1 IN ()) COLLATE NOCASE WHERE (((((((vt0.c0) IS TRUE))AND((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))))))AND(UNICODE(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS TRUE))AND((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))))))AND(UNICODE(rt0.c2)))) IS TRUE)  as count FROM rt1, rt0, vt1 RIGHT OUTER JOIN vt0 ON (rt1.c1 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, rt0, vt1 RIGHT OUTER JOIN vt0 ON (rt1.c1 IN ()) COLLATE NOCASE WHERE (((((((vt0.c0) IS TRUE))AND((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))))))AND(UNICODE(rt0.c2))));
SELECT COUNT(*) FROM rt1, vt1 WHERE ((NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 END))) ORDER BY CAST((rt1.c2 IN ()) AS REAL)  NULLS FIRST, rt1.c1, CASE ((vt1.c0)IS(rt1.c1))  WHEN (rt1.c3 IN ()) THEN ((rt1.c1)/(rt1.c1)) WHEN rt1.c3 COLLATE RTRIM THEN NULLIF(DISTINCT rt1.c1, vt1.c0) WHEN CAST(rt1.c3 AS INTEGER) THEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)) END DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST((rt1.c2 IN ()) AS REAL)  NULLS FIRST, rt1.c1, CASE ((vt1.c0)IS(rt1.c1))  WHEN (rt1.c3 IN ()) THEN ((rt1.c1)/(rt1.c1)) WHEN rt1.c3 COLLATE RTRIM THEN NULLIF(DISTINCT rt1.c1, vt1.c0) WHEN CAST(rt1.c3 AS INTEGER) THEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)) END DESC);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 END))) ORDER BY CAST((rt1.c2 IN ()) AS REAL)  NULLS FIRST, rt1.c1, CASE ((vt1.c0)IS(rt1.c1))  WHEN (rt1.c3 IN ()) THEN ((rt1.c1)/(rt1.c1)) WHEN rt1.c3 COLLATE RTRIM THEN NULLIF(DISTINCT rt1.c1, vt1.c0) WHEN CAST(rt1.c3 AS INTEGER) THEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)) END DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST((rt1.c2 IN ()) AS REAL)  NULLS FIRST, rt1.c1, CASE ((vt1.c0)IS(rt1.c1))  WHEN (rt1.c3 IN ()) THEN ((rt1.c1)/(rt1.c1)) WHEN rt1.c3 COLLATE RTRIM THEN NULLIF(DISTINCT rt1.c1, vt1.c0) WHEN CAST(rt1.c3 AS INTEGER) THEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)) END DESC);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 END))) ORDER BY CAST((rt1.c2 IN ()) AS REAL)  NULLS FIRST, rt1.c1, CASE ((vt1.c0)IS(rt1.c1))  WHEN (rt1.c3 IN ()) THEN ((rt1.c1)/(rt1.c1)) WHEN rt1.c3 COLLATE RTRIM THEN NULLIF(DISTINCT rt1.c1, vt1.c0) WHEN CAST(rt1.c3 AS INTEGER) THEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)) END DESC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((((rt0.c0) IS TRUE))AND(vt1.c0)))AND(1035679365)) WHERE ((0xffffffffb0ce78ce IN (rt0.c3, ((rt0.c1)OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((0Xffffffffb0ce78ce IN (rt0.c3, ((rt0.c1)OR(rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((((rt0.c0) IS TRUE))AND(vt1.c0)))AND(1035679365)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((((rt0.c0) IS TRUE))AND(vt1.c0)))AND(1035679365)) WHERE ((0xffffffffb0ce78ce IN (rt0.c3, ((rt0.c1)OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((0Xffffffffb0ce78ce IN (rt0.c3, ((rt0.c1)OR(rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((((rt0.c0) IS TRUE))AND(vt1.c0)))AND(1035679365)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((((rt0.c0) IS TRUE))AND(vt1.c0)))AND(1035679365)) WHERE ((0xffffffffb0ce78ce IN (rt0.c3, ((rt0.c1)OR(rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOTNULL)) ORDER BY (((rt0.c1 COLLATE NOCASE))<>((CAST(rt0.c1 AS NUMERIC)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 COLLATE NOCASE))!=((CAST(rt0.c1 AS NUMERIC)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOTNULL)) ORDER BY (((rt0.c1 COLLATE NOCASE))<>((CAST(rt0.c1 AS NUMERIC)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 COLLATE NOCASE))!=((CAST(rt0.c1 AS NUMERIC)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOTNULL)) ORDER BY (((rt0.c1 COLLATE NOCASE))<>((CAST(rt0.c1 AS NUMERIC)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, vt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL * FROM rt1, vt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL * FROM rt1, vt1, vt0 WHERE (rt1.c2);
SELECT ALL * FROM vt1, rt1 NATURAL JOIN rt0 WHERE (((((rt0.c1)>=(NULL)))LIKE(rt1.c1))) ORDER BY -971508025 ASC, CAST((~ (rt0.c1)) AS BLOB), CAST(JULIANDAY(rt0.c2, rt1.c0, rt1.c1) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>=(NULL)))LIKE(rt1.c1))) IS TRUE)  as count FROM vt1, rt1 NATURAL JOIN rt0 ORDER BY -971508025 ASC, CAST((~ (rt0.c1)) AS BLOB), CAST(JULIANDAY(rt0.c2, rt1.c0, rt1.c1) AS INTEGER) DESC);
SELECT ALL * FROM vt1, rt1 NATURAL JOIN rt0 WHERE (((((rt0.c1)>=(NULL)))LIKE(rt1.c1))) ORDER BY -971508025 ASC, CAST((~ (rt0.c1)) AS BLOB), CAST(JULIANDAY(rt0.c2, rt1.c0, rt1.c1) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>=(NULL)))LIKE(rt1.c1))) IS TRUE)  as count FROM vt1, rt1 NATURAL JOIN rt0 ORDER BY -971508025 ASC, CAST((~ (rt0.c1)) AS BLOB), CAST(JULIANDAY(rt0.c2, rt1.c0, rt1.c1) AS INTEGER) DESC);
SELECT * FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON CAST((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))) AS BLOB) LEFT OUTER JOIN vt0 ON ((((((((rt1.c3 COLLATE BINARY)OR(JULIANDAY(0.9204594477993997, rt1.c2, rt0.c1))))OR(((rt0.c0)AND(rt0.c3)))))AND(((((rt1.c0)AND(rt0.c0)))OR(rt0.c1)))))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) WHERE (((0.729726940271162) NOT BETWEEN (NULL) AND ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c3)))))) ORDER BY ((((((((CAST(rt1.c0 AS REAL))OR(UNLIKELY(DISTINCT rt0.c3))))OR(json_object(rt1.c2, rt0.c2))))AND('')))OR(CAST(rt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.729726940271162) NOT BETWEEN (NULL) AND ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c3)))))) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON CAST((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))) AS BLOB) LEFT OUTER JOIN vt0 ON ((((((((rt1.c3 COLLATE BINARY)OR(JULIANDAY(0.9204594477993997, rt1.c2, rt0.c1))))OR(((rt0.c0)AND(rt0.c3)))))AND(((((rt1.c0)AND(rt0.c0)))OR(rt0.c1)))))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) ORDER BY ((((((((CAST(rt1.c0 AS REAL))OR(UNLIKELY(DISTINCT rt0.c3))))OR(json_object(rt1.c2, rt0.c2))))AND('')))OR(CAST(rt0.c0 AS TEXT)))  NULLS LAST);
SELECT * FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON CAST((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))) AS BLOB) LEFT OUTER JOIN vt0 ON ((((((((rt1.c3 COLLATE BINARY)OR(JULIANDAY(0.9204594477993997, rt1.c2, rt0.c1))))OR(((rt0.c0)AND(rt0.c3)))))AND(((((rt1.c0)AND(rt0.c0)))OR(rt0.c1)))))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) WHERE (((0.729726940271162) NOT BETWEEN (NULL) AND ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c3)))))) ORDER BY ((((((((CAST(rt1.c0 AS REAL))OR(UNLIKELY(DISTINCT rt0.c3))))OR(json_object(rt1.c2, rt0.c2))))AND('')))OR(CAST(rt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.729726940271162) NOT BETWEEN (NULL) AND ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c3)))))) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON CAST((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))) AS BLOB) LEFT OUTER JOIN vt0 ON ((((((((rt1.c3 COLLATE BINARY)OR(JULIANDAY(0.9204594477993997, rt1.c2, rt0.c1))))OR(((rt0.c0)AND(rt0.c3)))))AND(((((rt1.c0)AND(rt0.c0)))OR(rt0.c1)))))AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) ORDER BY ((((((((CAST(rt1.c0 AS REAL))OR(UNLIKELY(DISTINCT rt0.c3))))OR(json_object(rt1.c2, rt0.c2))))AND('')))OR(CAST(rt0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON ((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END)OR(((('1833714240')) BETWEEN ((rt1.c2)) AND ((vt1.c0))))))OR(((rt1.c1) NOT NULL))))OR((- (vt1.c0)))))OR(((rt1.c3)%(rt0.c0)))) FULL OUTER JOIN rt0 ON (((rt0.c0 IN ()))IS NOT(((rt0.c3)*(rt0.c3)))) WHERE ((((rt1.c0, rt1.c1, vt1.c0, rt1.c0, '^	')) NOT BETWEEN ((((rt1.c2)OR(rt0.c1)), CAST(rt1.c2 AS BLOB), (~ (rt0.c1)), ((x'')>(rt1.c0)), UNICODE(rt1.c3))) AND ((rt1.c3 COLLATE RTRIM, CASE 0X227bcb04  WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c2 END, ((rt0.c1)<<(rt0.c3)), CASE rt1.c3  WHEN rt0.c1 THEN NULL ELSE rt1.c2 END, rt0.c0)))) ORDER BY LOWER(TRIM(rt1.c1, rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt1.c1, vt1.c0, rt1.c0, '^	')) NOT BETWEEN ((((rt1.c2)OR(rt0.c1)), CAST(rt1.c2 AS BLOB), (~ (rt0.c1)), ((x'')>(rt1.c0)), UNICODE(rt1.c3))) AND ((rt1.c3 COLLATE RTRIM, CASE 0x227bcb04  WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c2 END, ((rt0.c1)<<(rt0.c3)), CASE rt1.c3  WHEN rt0.c1 THEN NULL ELSE rt1.c2 END, rt0.c0)))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END)OR(((('1833714240')) BETWEEN ((rt1.c2)) AND ((vt1.c0))))))OR(((rt1.c1) NOT NULL))))OR((- (vt1.c0)))))OR(((rt1.c3)%(rt0.c0)))) FULL OUTER JOIN rt0 ON (((rt0.c0 IN ()))IS NOT(((rt0.c3)*(rt0.c3)))) ORDER BY LOWER(TRIM(rt1.c1, rt1.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON ((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END)OR(((('1833714240')) BETWEEN ((rt1.c2)) AND ((vt1.c0))))))OR(((rt1.c1) NOT NULL))))OR((- (vt1.c0)))))OR(((rt1.c3)%(rt0.c0)))) FULL OUTER JOIN rt0 ON (((rt0.c0 IN ()))IS NOT(((rt0.c3)*(rt0.c3)))) WHERE ((((rt1.c0, rt1.c1, vt1.c0, rt1.c0, '^	')) NOT BETWEEN ((((rt1.c2)OR(rt0.c1)), CAST(rt1.c2 AS BLOB), (~ (rt0.c1)), ((x'')>(rt1.c0)), UNICODE(rt1.c3))) AND ((rt1.c3 COLLATE RTRIM, CASE 0X227bcb04  WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c2 END, ((rt0.c1)<<(rt0.c3)), CASE rt1.c3  WHEN rt0.c1 THEN NULL ELSE rt1.c2 END, rt0.c0)))) ORDER BY LOWER(TRIM(rt1.c1, rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt1.c1, vt1.c0, rt1.c0, '^	')) NOT BETWEEN ((((rt1.c2)OR(rt0.c1)), CAST(rt1.c2 AS BLOB), (~ (rt0.c1)), ((x'')>(rt1.c0)), UNICODE(rt1.c3))) AND ((rt1.c3 COLLATE RTRIM, CASE 0x227bcb04  WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c2 END, ((rt0.c1)<<(rt0.c3)), CASE rt1.c3  WHEN rt0.c1 THEN NULL ELSE rt1.c2 END, rt0.c0)))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END)OR(((('1833714240')) BETWEEN ((rt1.c2)) AND ((vt1.c0))))))OR(((rt1.c1) NOT NULL))))OR((- (vt1.c0)))))OR(((rt1.c3)%(rt0.c0)))) FULL OUTER JOIN rt0 ON (((rt0.c0 IN ()))IS NOT(((rt0.c3)*(rt0.c3)))) ORDER BY LOWER(TRIM(rt1.c1, rt1.c1))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt1 CROSS JOIN rt0 ON (NULL IN ()) WHERE (COALESCE((rt0.c3 IN ()), rt1.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((rt0.c3 IN ()), rt1.c3 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, vt0, rt1 CROSS JOIN rt0 ON (NULL IN ()));
SELECT ALL * FROM vt1, vt0, rt1 CROSS JOIN rt0 ON (NULL IN ()) WHERE (COALESCE((rt0.c3 IN ()), rt1.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((rt0.c3 IN ()), rt1.c3 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, vt0, rt1 CROSS JOIN rt0 ON (NULL IN ()));
SELECT ALL * FROM vt1, vt0, rt1 CROSS JOIN rt0 ON (NULL IN ()) WHERE (COALESCE((rt0.c3 IN ()), rt1.c3 COLLATE NOCASE));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT * FROM rt0, vt0, vt1 WHERE ((((('-917957196') NOT BETWEEN (vt1.c0) AND (vt1.c0)))>=(CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END))) ORDER BY rt0.c2, (+ ((vt1.c0 IN ()))) ASC, CAST((rt0.c2 IN ()) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('-917957196') NOT BETWEEN (vt1.c0) AND (vt1.c0)))>=(CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY rt0.c2, (+ ((vt1.c0 IN ()))) ASC, CAST((rt0.c2 IN ()) AS NUMERIC)  NULLS LAST);
SELECT * FROM rt0, vt0, vt1 WHERE ((((('-917957196') NOT BETWEEN (vt1.c0) AND (vt1.c0)))>=(CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END))) ORDER BY rt0.c2, (+ ((vt1.c0 IN ()))) ASC, CAST((rt0.c2 IN ()) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('-917957196') NOT BETWEEN (vt1.c0) AND (vt1.c0)))>=(CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY rt0.c2, (+ ((vt1.c0 IN ()))) ASC, CAST((rt0.c2 IN ()) AS NUMERIC)  NULLS LAST);
SELECT * FROM rt0, vt0, vt1 WHERE ((((('-917957196') NOT BETWEEN (vt1.c0) AND (vt1.c0)))>=(CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END))) ORDER BY rt0.c2, (+ ((vt1.c0 IN ()))) ASC, CAST((rt0.c2 IN ()) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) AS INTEGER)) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) AS INTEGER)) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) AS INTEGER)) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c0 AS NUMERIC))<(CAST(rt1.c2 AS NUMERIC)))) ORDER BY ((((rt1.c2)%(rt1.c3))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS NUMERIC))<(CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2)%(rt1.c3))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c0 AS NUMERIC))<(CAST(rt1.c2 AS NUMERIC)))) ORDER BY ((((rt1.c2)%(rt1.c3))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS NUMERIC))<(CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2)%(rt1.c3))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c0 AS NUMERIC))<(CAST(rt1.c2 AS NUMERIC)))) ORDER BY ((((rt1.c2)%(rt1.c3))) ISNULL) ASC;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE (CAST(rt0.c2 AS TEXT) COLLATE RTRIM) ORDER BY ((NULL)GLOB((NOT (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 ORDER BY ((NULL)GLOB((NOT (rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE (CAST(rt0.c2 AS TEXT) COLLATE RTRIM) ORDER BY ((NULL)GLOB((NOT (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 ORDER BY ((NULL)GLOB((NOT (rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE (CAST(rt0.c2 AS TEXT) COLLATE RTRIM) ORDER BY ((NULL)GLOB((NOT (rt0.c1)))) DESC;
SELECT * FROM rt1 CROSS JOIN vt1 ON ((LAST_INSERT_ROWID()) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((((rt1.c3)OR(rt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN vt0 ON (((rt0.c0) NOT NULL) IN ()) INNER JOIN rt0 ON rt0.c2 WHERE (NULL) ORDER BY (((rt1.c0)GLOB(rt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 NOT INDEXED CROSS JOIN vt1 ON ((LAST_INSERT_ROWID()) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((((rt1.c3)OR(rt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN vt0 ON (((rt0.c0) NOT NULL) IN ()) INNER JOIN rt0 ON rt0.c2 ORDER BY (((rt1.c0)GLOB(rt0.c1)) IN ())  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN vt1 ON ((LAST_INSERT_ROWID()) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((((rt1.c3)OR(rt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN vt0 ON (((rt0.c0) NOT NULL) IN ()) INNER JOIN rt0 ON rt0.c2 WHERE (NULL) ORDER BY (((rt1.c0)GLOB(rt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 NOT INDEXED CROSS JOIN vt1 ON ((LAST_INSERT_ROWID()) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((((rt1.c3)OR(rt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN vt0 ON (((rt0.c0) NOT NULL) IN ()) INNER JOIN rt0 ON rt0.c2 ORDER BY (((rt1.c0)GLOB(rt0.c1)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON rt1.c0 INNER JOIN rt1 ON (((- (rt1.c1))) ISNULL) WHERE (((CASE WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END)+((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END)+((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON rt1.c0 INNER JOIN rt1 ON (((- (rt1.c1))) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON rt1.c0 INNER JOIN rt1 ON (((- (rt1.c1))) ISNULL) WHERE (((CASE WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END)+((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END)+((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON rt1.c0 INNER JOIN rt1 ON (((- (rt1.c1))) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON rt1.c0 INNER JOIN rt1 ON (((- (rt1.c1))) ISNULL) WHERE (((CASE WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c3 WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END)+((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON ((rt1.c2)OR(rt0.c1)) COLLATE BINARY FULL OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c1)))==(((rt0.c0) NOTNULL))) CROSS JOIN vt0 ON CAST(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1)) AS TEXT) WHERE ((((NULLIF(DISTINCT rt0.c0, rt1.c3), 0.5268546676916026, 0.40738874113060375))>=(((~ (rt0.c3)), CAST(rt1.c1 AS REAL), ((rt0.c1)AND(rt1.c2)))))) ORDER BY CAST(((vt1.c0) ISNULL) AS TEXT)  NULLS FIRST, CAST(rt0.c2 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULLIF(DISTINCT rt0.c0, rt1.c3), 0.5268546676916026, 0.40738874113060375))>=(((~ (rt0.c3)), CAST(rt1.c1 AS REAL), ((rt0.c1)AND(rt1.c2)))))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((rt1.c2)OR(rt0.c1)) COLLATE BINARY FULL OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c1)))=(((rt0.c0) NOTNULL))) CROSS JOIN vt0 ON CAST(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1)) AS TEXT) ORDER BY CAST(((vt1.c0) ISNULL) AS TEXT)  NULLS FIRST, CAST(rt0.c2 AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON ((rt1.c2)OR(rt0.c1)) COLLATE BINARY FULL OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c1)))==(((rt0.c0) NOTNULL))) CROSS JOIN vt0 ON CAST(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1)) AS TEXT) WHERE ((((NULLIF(DISTINCT rt0.c0, rt1.c3), 0.5268546676916026, 0.40738874113060375))>=(((~ (rt0.c3)), CAST(rt1.c1 AS REAL), ((rt0.c1)AND(rt1.c2)))))) ORDER BY CAST(((vt1.c0) ISNULL) AS TEXT)  NULLS FIRST, CAST(rt0.c2 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULLIF(DISTINCT rt0.c0, rt1.c3), 0.5268546676916026, 0.40738874113060375))>=(((~ (rt0.c3)), CAST(rt1.c1 AS REAL), ((rt0.c1)AND(rt1.c2)))))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((rt1.c2)OR(rt0.c1)) COLLATE BINARY FULL OUTER JOIN rt0 ON ((((rt0.c2)IS NOT(rt0.c1)))=(((rt0.c0) NOTNULL))) CROSS JOIN vt0 ON CAST(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1)) AS TEXT) ORDER BY CAST(((vt1.c0) ISNULL) AS TEXT)  NULLS FIRST, CAST(rt0.c2 AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((((rt0.c1)AND(NULL)))OR(rt0.c3)) IN (CASE rt0.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END, (~ (rt1.c0)))) FULL OUTER JOIN vt1 ON ((json_array_length(rt1.c0))<>(rt1.c1)) WHERE (x'210f') ORDER BY CAST(((rt0.c0) ISNULL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((x'210f') IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((((rt0.c1)AND(NULL)))OR(rt0.c3)) IN (CASE rt0.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END, (~ (rt1.c0)))) FULL OUTER JOIN vt1 ON ((json_array_length(rt1.c0))!=(rt1.c1)) ORDER BY CAST(((rt0.c0) ISNULL) AS REAL) DESC);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((((rt0.c1)AND(NULL)))OR(rt0.c3)) IN (CASE rt0.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END, (~ (rt1.c0)))) FULL OUTER JOIN vt1 ON ((json_array_length(rt1.c0))<>(rt1.c1)) WHERE (x'210f') ORDER BY CAST(((rt0.c0) ISNULL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((x'210f') IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((((rt0.c1)AND(NULL)))OR(rt0.c3)) IN (CASE rt0.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END, (~ (rt1.c0)))) FULL OUTER JOIN vt1 ON ((json_array_length(rt1.c0))!=(rt1.c1)) ORDER BY CAST(((rt0.c0) ISNULL) AS REAL) DESC);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((((rt0.c1)AND(NULL)))OR(rt0.c3)) IN (CASE rt0.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END, (~ (rt1.c0)))) FULL OUTER JOIN vt1 ON ((json_array_length(rt1.c0))<>(rt1.c1)) WHERE (x'210f') ORDER BY CAST(((rt0.c0) ISNULL) AS REAL) DESC;
SELECT ALL * FROM vt0, vt1, rt1 WHERE ((~ ((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT ALL * FROM vt0, vt1, rt1 WHERE ((~ ((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT ALL * FROM vt0, vt1, rt1 WHERE ((~ ((rt1.c0 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((((+ (rt0.c3)), ((rt0.c0) ISNULL), ((((rt0.c1)AND(NULL)))AND(rt0.c1))))<>((rt0.c2 COLLATE BINARY, ((rt0.c1) ISNULL), ((((((((rt0.c0)OR(rt0.c3)))OR(0.06116812368403057)))AND(rt0.c0)))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((+ (rt0.c3)), ((rt0.c0) ISNULL), ((((rt0.c1)AND(NULL)))AND(rt0.c1))))!=((rt0.c2 COLLATE BINARY, ((rt0.c1) ISNULL), ((((((((rt0.c0)OR(rt0.c3)))OR(0.06116812368403057)))AND(rt0.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((+ (rt0.c3)), ((rt0.c0) ISNULL), ((((rt0.c1)AND(NULL)))AND(rt0.c1))))<>((rt0.c2 COLLATE BINARY, ((rt0.c1) ISNULL), ((((((((rt0.c0)OR(rt0.c3)))OR(0.06116812368403057)))AND(rt0.c0)))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((+ (rt0.c3)), ((rt0.c0) ISNULL), ((((rt0.c1)AND(NULL)))AND(rt0.c1))))!=((rt0.c2 COLLATE BINARY, ((rt0.c1) ISNULL), ((((((((rt0.c0)OR(rt0.c3)))OR(0.06116812368403057)))AND(rt0.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((+ (rt0.c3)), ((rt0.c0) ISNULL), ((((rt0.c1)AND(NULL)))AND(rt0.c1))))<>((rt0.c2 COLLATE BINARY, ((rt0.c1) ISNULL), ((((((((rt0.c0)OR(rt0.c3)))OR(0.06116812368403057)))AND(rt0.c0)))AND(rt0.c2))))));
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((((vt1.c0)>(rt0.c3))) NOT BETWEEN (((rt0.c0)=(rt0.c1))) AND ((((rt0.c2))=((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(rt0.c3))) NOT BETWEEN (((rt0.c0)==(rt0.c1))) AND ((((rt0.c2))==((rt1.c0)))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((((vt1.c0)>(rt0.c3))) NOT BETWEEN (((rt0.c0)=(rt0.c1))) AND ((((rt0.c2))=((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(rt0.c3))) NOT BETWEEN (((rt0.c0)==(rt0.c1))) AND ((((rt0.c2))==((rt1.c0)))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((((vt1.c0)>(rt0.c3))) NOT BETWEEN (((rt0.c0)=(rt0.c1))) AND ((((rt0.c2))=((rt1.c0))))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (0xfffffffffc1341a5) ORDER BY (~ (rt1.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xfffffffffc1341a5) IS TRUE)  as count FROM rt1, rt0 ORDER BY (~ (rt1.c1 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (0xfffffffffc1341a5) ORDER BY (~ (rt1.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xfffffffffc1341a5) IS TRUE)  as count FROM rt1, rt0 ORDER BY (~ (rt1.c1 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (0xfffffffffc1341a5) ORDER BY (~ (rt1.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0)IS NOT(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)IS NOT(NULL)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)IS NOT(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)IS NOT(NULL)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)IS NOT(NULL)) IN ()));
SELECT * FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c1)OR(rt1.c2)) THEN x'' ELSE ((rt1.c0) ISNULL) END) ORDER BY TYPEOF(DISTINCT (((rt1.c2))<((rt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1)OR(rt1.c2)) THEN x'' ELSE ((rt1.c0) ISNULL) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY TYPEOF(DISTINCT (((rt1.c2))<((rt1.c0)))));
SELECT * FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c1)OR(rt1.c2)) THEN x'' ELSE ((rt1.c0) ISNULL) END) ORDER BY TYPEOF(DISTINCT (((rt1.c2))<((rt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1)OR(rt1.c2)) THEN x'' ELSE ((rt1.c0) ISNULL) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY TYPEOF(DISTINCT (((rt1.c2))<((rt1.c0)))));
SELECT * FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c1)OR(rt1.c2)) THEN x'' ELSE ((rt1.c0) ISNULL) END) ORDER BY TYPEOF(DISTINCT (((rt1.c2))<((rt1.c0))));
SELECT COUNT(*) FROM rt1, rt0, vt0, vt1 WHERE ((~ (rt1.c3 COLLATE RTRIM))) ORDER BY ((rt0.c1 COLLATE NOCASE)|((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0, vt0, vt1 ORDER BY ((rt0.c1 COLLATE NOCASE)|((rt0.c3 IN ()))));
SELECT COUNT(*) FROM rt1, rt0, vt0, vt1 WHERE ((~ (rt1.c3 COLLATE RTRIM))) ORDER BY ((rt0.c1 COLLATE NOCASE)|((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0, vt0, vt1 ORDER BY ((rt0.c1 COLLATE NOCASE)|((rt0.c3 IN ()))));
SELECT COUNT(*) FROM rt1, rt0, vt0, vt1 WHERE ((~ (rt1.c3 COLLATE RTRIM))) ORDER BY ((rt0.c1 COLLATE NOCASE)|((rt0.c3 IN ())));
SELECT * FROM rt1, vt1, vt0, rt0 WHERE (((((((rt0.c1) IS FALSE))AND((vt0.c0 IN ()))))AND(TRIM(rt1.c1, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS FALSE))AND((vt0.c0 IN ()))))AND(TRIM(rt1.c1, rt0.c2)))) IS TRUE)  as count FROM rt1, vt1, vt0, rt0);
SELECT * FROM rt1, vt1, vt0, rt0 WHERE (((((((rt0.c1) IS FALSE))AND((vt0.c0 IN ()))))AND(TRIM(rt1.c1, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS FALSE))AND((vt0.c0 IN ()))))AND(TRIM(rt1.c1, rt0.c2)))) IS TRUE)  as count FROM rt1, vt1, vt0, rt0);
SELECT * FROM rt1, vt1, vt0, rt0 WHERE (((((((rt0.c1) IS FALSE))AND((vt0.c0 IN ()))))AND(TRIM(rt1.c1, rt0.c2))));
SELECT ALL * FROM rt0 WHERE ((((-617158529)) BETWEEN (('543851526')) AND ((CAST(rt0.c1 AS TEXT))))) ORDER BY ((((rt0.c1)&(rt0.c3)))+(((rt0.c0) IS TRUE))) DESC  NULLS FIRST, ABS(DISTINCT rt0.c3) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((-617158529)) BETWEEN (('543851526')) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)&(rt0.c3)))+(((rt0.c0) IS TRUE))) DESC  NULLS FIRST, ABS(DISTINCT rt0.c3) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((-617158529)) BETWEEN (('543851526')) AND ((CAST(rt0.c1 AS TEXT))))) ORDER BY ((((rt0.c1)&(rt0.c3)))+(((rt0.c0) IS TRUE))) DESC  NULLS FIRST, ABS(DISTINCT rt0.c3) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((-617158529)) BETWEEN (('543851526')) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)&(rt0.c3)))+(((rt0.c0) IS TRUE))) DESC  NULLS FIRST, ABS(DISTINCT rt0.c3) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((-617158529)) BETWEEN (('543851526')) AND ((CAST(rt0.c1 AS TEXT))))) ORDER BY ((((rt0.c1)&(rt0.c3)))+(((rt0.c0) IS TRUE))) DESC  NULLS FIRST, ABS(DISTINCT rt0.c3) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, vt0, rt1 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, vt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, vt0, rt1 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, vt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, vt0, rt1 WHERE (x'' COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE ((((x''))>=((rt0.c2))) COLLATE RTRIM) ORDER BY CAST((((rt0.c0, rt0.c3, rt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))) AS BLOB), ((((((rt0.c0)LIKE(rt0.c0)))OR(CAST(rt0.c0 AS REAL))))OR((- (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x''))>=((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c0, rt0.c3, rt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))) AS BLOB), ((((((rt0.c0)LIKE(rt0.c0)))OR(CAST(rt0.c0 AS REAL))))OR((- (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((x''))>=((rt0.c2))) COLLATE RTRIM) ORDER BY CAST((((rt0.c0, rt0.c3, rt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))) AS BLOB), ((((((rt0.c0)LIKE(rt0.c0)))OR(CAST(rt0.c0 AS REAL))))OR((- (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x''))>=((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c0, rt0.c3, rt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))) AS BLOB), ((((((rt0.c0)LIKE(rt0.c0)))OR(CAST(rt0.c0 AS REAL))))OR((- (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((x''))>=((rt0.c2))) COLLATE RTRIM) ORDER BY CAST((((rt0.c0, rt0.c3, rt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))) AS BLOB), ((((((rt0.c0)LIKE(rt0.c0)))OR(CAST(rt0.c0 AS REAL))))OR((- (rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2) IS TRUE))=(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))==(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2) IS TRUE))=(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))==(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2) IS TRUE))=(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CASE WHEN rt1.c1 THEN rt1.c3 END) WHERE (((rt1.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT NULL)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CASE WHEN rt1.c1 THEN rt1.c3 END));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CASE WHEN rt1.c1 THEN rt1.c3 END) WHERE (((rt1.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT NULL)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CASE WHEN rt1.c1 THEN rt1.c3 END));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CASE WHEN rt1.c1 THEN rt1.c3 END) WHERE (((rt1.c1) NOT NULL));
SELECT ALL * FROM vt1 WHERE (0.16571239400493387) ORDER BY CASE ((vt1.c0) ISNULL)  WHEN (((vt1.c0))<((vt1.c0))) THEN vt1.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.16571239400493387) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) ISNULL)  WHEN (((vt1.c0))<((vt1.c0))) THEN vt1.c0 END DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (0.16571239400493387) ORDER BY CASE ((vt1.c0) ISNULL)  WHEN (((vt1.c0))<((vt1.c0))) THEN vt1.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.16571239400493387) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) ISNULL)  WHEN (((vt1.c0))<((vt1.c0))) THEN vt1.c0 END DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (0.16571239400493387) ORDER BY CASE ((vt1.c0) ISNULL)  WHEN (((vt1.c0))<((vt1.c0))) THEN vt1.c0 END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE ((~ (((vt0.c0)<<(rt1.c0))))) ORDER BY LTRIM(x'', 'C-#Ms74') DESC  NULLS FIRST, (((+ (rt1.c1)))-((((rt1.c0, rt1.c2, rt1.c2))=((vt0.c0, rt1.c3, rt1.c2))))), rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)<<(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY LTRIM(x'', 'C-#Ms74') DESC  NULLS FIRST, (((+ (rt1.c1)))-((((rt1.c0, rt1.c2, rt1.c2))=((vt0.c0, rt1.c3, rt1.c2))))), rt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE ((~ (((vt0.c0)<<(rt1.c0))))) ORDER BY LTRIM(x'', 'C-#Ms74') DESC  NULLS FIRST, (((+ (rt1.c1)))-((((rt1.c0, rt1.c2, rt1.c2))=((vt0.c0, rt1.c3, rt1.c2))))), rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)<<(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY LTRIM(x'', 'C-#Ms74') DESC  NULLS FIRST, (((+ (rt1.c1)))-((((rt1.c0, rt1.c2, rt1.c2))=((vt0.c0, rt1.c3, rt1.c2))))), rt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE ((~ (((vt0.c0)<<(rt1.c0))))) ORDER BY LTRIM(x'', 'C-#Ms74') DESC  NULLS FIRST, (((+ (rt1.c1)))-((((rt1.c0, rt1.c2, rt1.c2))=((vt0.c0, rt1.c3, rt1.c2))))), rt1.c0 DESC;
SELECT * FROM vt0 CROSS JOIN rt1 ON COALESCE(((rt1.c1) NOT NULL), ((vt0.c0)>>(rt0.c3)), CASE WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) NOT BETWEEN ('') AND (rt1.c2))) LEFT OUTER JOIN rt0 ON UNLIKELY(((rt0.c1) NOT NULL)) WHERE (rt0.c3) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON COALESCE(((rt1.c1) NOT NULL), ((vt0.c0)>>(rt0.c3)), CASE WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) NOT BETWEEN ('') AND (rt1.c2))) LEFT OUTER JOIN rt0 ON UNLIKELY(((rt0.c1) NOT NULL)) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC);
SELECT * FROM vt0 CROSS JOIN rt1 ON COALESCE(((rt1.c1) NOT NULL), ((vt0.c0)>>(rt0.c3)), CASE WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) NOT BETWEEN ('') AND (rt1.c2))) LEFT OUTER JOIN rt0 ON UNLIKELY(((rt0.c1) NOT NULL)) WHERE (rt0.c3) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON COALESCE(((rt1.c1) NOT NULL), ((vt0.c0)>>(rt0.c3)), CASE WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) NOT BETWEEN ('') AND (rt1.c2))) LEFT OUTER JOIN rt0 ON UNLIKELY(((rt0.c1) NOT NULL)) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC);
SELECT * FROM vt0 CROSS JOIN rt1 ON COALESCE(((rt1.c1) NOT NULL), ((vt0.c0)>>(rt0.c3)), CASE WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) NOT BETWEEN ('') AND (rt1.c2))) LEFT OUTER JOIN rt0 ON UNLIKELY(((rt0.c1) NOT NULL)) WHERE (rt0.c3) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON 0.8060100787044006 INNER JOIN rt1 ON vt0.c0 WHERE (CASE ('EM' IN ())  WHEN rt0.c1 THEN (+ (rt0.c3)) ELSE vt0.c0 END) ORDER BY ((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))*(LIKE(NULL, rt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ('EM' IN ())  WHEN rt0.c1 THEN (+ (rt0.c3)) ELSE vt0.c0 END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 0.8060100787044006 INNER JOIN rt1 ON vt0.c0 ORDER BY ((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))*(LIKE(NULL, rt1.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON 0.8060100787044006 INNER JOIN rt1 ON vt0.c0 WHERE (CASE ('EM' IN ())  WHEN rt0.c1 THEN (+ (rt0.c3)) ELSE vt0.c0 END) ORDER BY ((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))*(LIKE(NULL, rt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ('EM' IN ())  WHEN rt0.c1 THEN (+ (rt0.c3)) ELSE vt0.c0 END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 0.8060100787044006 INNER JOIN rt1 ON vt0.c0 ORDER BY ((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))*(LIKE(NULL, rt1.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON 0.8060100787044006 INNER JOIN rt1 ON vt0.c0 WHERE (CASE ('EM' IN ())  WHEN rt0.c1 THEN (+ (rt0.c3)) ELSE vt0.c0 END) ORDER BY ((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))*(LIKE(NULL, rt1.c1))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN (((vt1.c0))<((rt0.c3))) THEN rt0.c3 WHEN rt0.c2 COLLATE NOCASE THEN CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN ((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(0.8541317815024677)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)) THEN (((rt0.c1, rt0.c3, rt0.c3, rt0.c1, rt0.c1))==((rt0.c0, rt0.c0, rt0.c0, vt1.c0, rt0.c2))) WHEN (+ ('1760582781')) THEN ('0.4787149185276339' IN ()) ELSE LIKELIHOOD(rt0.c0, 0.7985833852238766) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS REAL)  WHEN (((vt1.c0))<((rt0.c3))) THEN rt0.c3 WHEN rt0.c2 COLLATE NOCASE THEN CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN ((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(0.8541317815024677)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)) THEN (((rt0.c1, rt0.c3, rt0.c3, rt0.c1, rt0.c1))=((rt0.c0, rt0.c0, rt0.c0, vt1.c0, rt0.c2))) WHEN (+ ('1760582781')) THEN ('0.4787149185276339' IN ()) ELSE LIKELIHOOD(rt0.c0, 0.7985833852238766) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN (((vt1.c0))<((rt0.c3))) THEN rt0.c3 WHEN rt0.c2 COLLATE NOCASE THEN CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN ((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(0.8541317815024677)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)) THEN (((rt0.c1, rt0.c3, rt0.c3, rt0.c1, rt0.c1))==((rt0.c0, rt0.c0, rt0.c0, vt1.c0, rt0.c2))) WHEN (+ ('1760582781')) THEN ('0.4787149185276339' IN ()) ELSE LIKELIHOOD(rt0.c0, 0.7985833852238766) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS REAL)  WHEN (((vt1.c0))<((rt0.c3))) THEN rt0.c3 WHEN rt0.c2 COLLATE NOCASE THEN CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN ((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(0.8541317815024677)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)) THEN (((rt0.c1, rt0.c3, rt0.c3, rt0.c1, rt0.c1))=((rt0.c0, rt0.c0, rt0.c0, vt1.c0, rt0.c2))) WHEN (+ ('1760582781')) THEN ('0.4787149185276339' IN ()) ELSE LIKELIHOOD(rt0.c0, 0.7985833852238766) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN (((vt1.c0))<((rt0.c3))) THEN rt0.c3 WHEN rt0.c2 COLLATE NOCASE THEN CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END WHEN ((rt0.c0) ISNULL) THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN ((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(0.8541317815024677)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)) THEN (((rt0.c1, rt0.c3, rt0.c3, rt0.c1, rt0.c1))==((rt0.c0, rt0.c0, rt0.c0, vt1.c0, rt0.c2))) WHEN (+ ('1760582781')) THEN ('0.4787149185276339' IN ()) ELSE LIKELIHOOD(rt0.c0, 0.7985833852238766) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (+ (vt1.c0)) END) ORDER BY (vt1.c0 COLLATE NOCASE IN ((((vt1.c0))==((vt1.c0))))) ASC, UNLIKELY(LOWER(1.307535473E9))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt1.c0))  WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE NOCASE IN ((((vt1.c0))==((vt1.c0))))) ASC, UNLIKELY(LOWER(1.307535473E9))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (+ (vt1.c0)) END) ORDER BY (vt1.c0 COLLATE NOCASE IN ((((vt1.c0))==((vt1.c0))))) ASC, UNLIKELY(LOWER(1.307535473E9))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt1.c0))  WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE NOCASE IN ((((vt1.c0))==((vt1.c0))))) ASC, UNLIKELY(LOWER(1.307535473E9))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (+ (vt1.c0)) END) ORDER BY (vt1.c0 COLLATE NOCASE IN ((((vt1.c0))==((vt1.c0))))) ASC, UNLIKELY(LOWER(1.307535473E9))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN (((x'f971')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN '' WHEN vt1.c0 THEN ((661580450)IS(rt1.c2)) END WHERE ((((CAST(rt1.c2 AS BLOB), ((((rt0.c3)AND('r/')))OR(vt0.c0)), vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, ((((rt0.c3)AND(rt1.c0)))AND(rt1.c1))))>=((LIKELY(rt1.c3), CAST('1776295107' AS BLOB), (((rt1.c1))<>((rt0.c1))), ((((((((rt1.c3)OR(x'744dc557')))AND(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)), rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c2 AS BLOB), ((((rt0.c3)AND('r/')))OR(vt0.c0)), vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, ((((rt0.c3)AND(rt1.c0)))AND(rt1.c1))))>=((LIKELY(rt1.c3), CAST('1776295107' AS BLOB), (((rt1.c1))<>((rt0.c1))), ((((((((rt1.c3)OR(x'744dc557')))AND(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)), rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN (((x'f971')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN '' WHEN vt1.c0 THEN ((661580450)IS(rt1.c2)) END);
SELECT COUNT(*) FROM rt0, vt0, rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN (((x'f971')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN '' WHEN vt1.c0 THEN ((661580450)IS(rt1.c2)) END WHERE ((((CAST(rt1.c2 AS BLOB), ((((rt0.c3)AND('r/')))OR(vt0.c0)), vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, ((((rt0.c3)AND(rt1.c0)))AND(rt1.c1))))>=((LIKELY(rt1.c3), CAST('1776295107' AS BLOB), (((rt1.c1))<>((rt0.c1))), ((((((((rt1.c3)OR(x'744dc557')))AND(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)), rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c2 AS BLOB), ((((rt0.c3)AND('r/')))OR(vt0.c0)), vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, ((((rt0.c3)AND(rt1.c0)))AND(rt1.c1))))>=((LIKELY(rt1.c3), CAST('1776295107' AS BLOB), (((rt1.c1))<>((rt0.c1))), ((((((((rt1.c3)OR(x'744dc557')))AND(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)), rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN (((x'f971')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN '' WHEN vt1.c0 THEN ((661580450)IS(rt1.c2)) END);
SELECT COUNT(*) FROM rt0, vt0, rt1 RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt1.c2) NOTNULL) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN (((x'f971')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN '' WHEN vt1.c0 THEN ((661580450)IS(rt1.c2)) END WHERE ((((CAST(rt1.c2 AS BLOB), ((((rt0.c3)AND('r/')))OR(vt0.c0)), vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, ((((rt0.c3)AND(rt1.c0)))AND(rt1.c1))))>=((LIKELY(rt1.c3), CAST('1776295107' AS BLOB), (((rt1.c1))<>((rt0.c1))), ((((((((rt1.c3)OR(x'744dc557')))AND(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)), rt0.c1))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON LIKE(((rt0.c2) NOTNULL), CASE WHEN rt0.c3 THEN '' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) WHERE (((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)) COLLATE BINARY) ORDER BY json_patch(CAST(rt0.c1 AS NUMERIC), ((rt0.c3)<=(rt0.c3))) ASC  NULLS LAST, (((NOT (rt0.c2)))<=(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON LIKE(((rt0.c2) NOTNULL), CASE WHEN rt0.c3 THEN '' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ORDER BY json_patch(CAST(rt0.c1 AS NUMERIC), ((rt0.c3)<=(rt0.c3))) ASC  NULLS LAST, (((NOT (rt0.c2)))<=(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON LIKE(((rt0.c2) NOTNULL), CASE WHEN rt0.c3 THEN '' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) WHERE (((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)) COLLATE BINARY) ORDER BY json_patch(CAST(rt0.c1 AS NUMERIC), ((rt0.c3)<=(rt0.c3))) ASC  NULLS LAST, (((NOT (rt0.c2)))<=(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON LIKE(((rt0.c2) NOTNULL), CASE WHEN rt0.c3 THEN '' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ORDER BY json_patch(CAST(rt0.c1 AS NUMERIC), ((rt0.c3)<=(rt0.c3))) ASC  NULLS LAST, (((NOT (rt0.c2)))<=(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON LIKE(((rt0.c2) NOTNULL), CASE WHEN rt0.c3 THEN '' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) WHERE (((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)) COLLATE BINARY) ORDER BY json_patch(CAST(rt0.c1 AS NUMERIC), ((rt0.c3)<=(rt0.c3))) ASC  NULLS LAST, (((NOT (rt0.c2)))<=(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0)));
SELECT * FROM vt1 FULL OUTER JOIN rt1 ON json_array_length(rt1.c0 COLLATE NOCASE, ((rt1.c0)=(rt1.c0))) WHERE (((~ (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt1.c1)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON json_array_length(rt1.c0 COLLATE NOCASE, ((rt1.c0)=(rt1.c0))));
SELECT * FROM vt1 FULL OUTER JOIN rt1 ON json_array_length(rt1.c0 COLLATE NOCASE, ((rt1.c0)=(rt1.c0))) WHERE (((~ (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt1.c1)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON json_array_length(rt1.c0 COLLATE NOCASE, ((rt1.c0)=(rt1.c0))));
SELECT * FROM vt1 FULL OUTER JOIN rt1 ON json_array_length(rt1.c0 COLLATE NOCASE, ((rt1.c0)=(rt1.c0))) WHERE (((~ (rt1.c1)) IN ()));
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE ((((rt1.c3) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOTNULL) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE ((((rt1.c3) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOTNULL) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE ((((rt1.c3) NOTNULL) IN ()));
SELECT * FROM vt1, rt1, rt0 WHERE (CASE WHEN COALESCE(rt1.c1, rt0.c3) THEN x'' ELSE LIKELY(rt1.c0) END) ORDER BY (((rt1.c3, rt1.c3, rt1.c0)) BETWEEN ((((rt0.c1)*(rt0.c0)), UNLIKELY(DISTINCT vt1.c0), vt1.c0 COLLATE BINARY)) AND ((rt0.c2 COLLATE RTRIM, ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)), (((rt1.c2, rt1.c3, rt1.c2, x'fb6e', rt1.c1))!=((rt1.c0, rt1.c0, x'', rt0.c0, 0.1812483865352129))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(rt1.c1, rt0.c3) THEN x'' ELSE LIKELY(rt1.c0) END) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (((rt1.c3, rt1.c3, rt1.c0)) BETWEEN ((((rt0.c1)*(rt0.c0)), UNLIKELY(DISTINCT vt1.c0), vt1.c0 COLLATE BINARY)) AND ((rt0.c2 COLLATE RTRIM, ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)), (((rt1.c2, rt1.c3, rt1.c2, x'fb6e', rt1.c1))!=((rt1.c0, rt1.c0, x'', rt0.c0, 0.1812483865352129))))))  NULLS LAST);
SELECT * FROM vt1, rt1, rt0 WHERE (CASE WHEN COALESCE(rt1.c1, rt0.c3) THEN x'' ELSE LIKELY(rt1.c0) END) ORDER BY (((rt1.c3, rt1.c3, rt1.c0)) BETWEEN ((((rt0.c1)*(rt0.c0)), UNLIKELY(DISTINCT vt1.c0), vt1.c0 COLLATE BINARY)) AND ((rt0.c2 COLLATE RTRIM, ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)), (((rt1.c2, rt1.c3, rt1.c2, x'fb6e', rt1.c1))!=((rt1.c0, rt1.c0, x'', rt0.c0, 0.1812483865352129))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(rt1.c1, rt0.c3) THEN x'' ELSE LIKELY(rt1.c0) END) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (((rt1.c3, rt1.c3, rt1.c0)) BETWEEN ((((rt0.c1)*(rt0.c0)), UNLIKELY(DISTINCT vt1.c0), vt1.c0 COLLATE BINARY)) AND ((rt0.c2 COLLATE RTRIM, ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)), (((rt1.c2, rt1.c3, rt1.c2, x'fb6e', rt1.c1))!=((rt1.c0, rt1.c0, x'', rt0.c0, 0.1812483865352129))))))  NULLS LAST);
SELECT * FROM vt1, rt1, rt0 WHERE (CASE WHEN COALESCE(rt1.c1, rt0.c3) THEN x'' ELSE LIKELY(rt1.c0) END) ORDER BY (((rt1.c3, rt1.c3, rt1.c0)) BETWEEN ((((rt0.c1)*(rt0.c0)), UNLIKELY(DISTINCT vt1.c0), vt1.c0 COLLATE BINARY)) AND ((rt0.c2 COLLATE RTRIM, ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)), (((rt1.c2, rt1.c3, rt1.c2, x'fb6e', rt1.c1))!=((rt1.c0, rt1.c0, x'', rt0.c0, 0.1812483865352129))))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY CAST(((((rt0.c0)AND(rt0.c2)))OR(x'')) AS TEXT) DESC  NULLS LAST, '962867689' ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c0)AND(rt0.c2)))OR(x'')) AS TEXT) DESC  NULLS LAST, '962867689' ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY CAST(((((rt0.c0)AND(rt0.c2)))OR(x'')) AS TEXT) DESC  NULLS LAST, '962867689' ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c0)AND(rt0.c2)))OR(x'')) AS TEXT) DESC  NULLS LAST, '962867689' ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY CAST(((((rt0.c0)AND(rt0.c2)))OR(x'')) AS TEXT) DESC  NULLS LAST, '962867689' ASC;
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((((vt0.c0) BETWEEN (rt1.c2) AND (0xffffffffde14c7b9))) BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (rt1.c2) AND (0Xffffffffde14c7b9))) BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((((vt0.c0) BETWEEN (rt1.c2) AND (0xffffffffde14c7b9))) BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (rt1.c2) AND (0Xffffffffde14c7b9))) BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((((vt0.c0) BETWEEN (rt1.c2) AND (0xffffffffde14c7b9))) BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT * FROM vt0 INNER JOIN vt1 ON (('0.03693153571298857')|((rt0.c1 IN ()))) FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((((((((((vt1.c0) BETWEEN (rt0.c1) AND (0Xffffffffc617f6c7)))AND((((vt1.c0, x'', rt0.c0)) BETWEEN ((rt0.c3, vt1.c0, vt0.c0)) AND ((rt0.c3, rt0.c2, vt0.c0))))))AND(rt0.c1 COLLATE RTRIM)))OR((rt0.c1 IN ()))))OR(rt0.c2))) ORDER BY CASE (rt0.c1 IN (rt0.c0))  WHEN ((rt0.c2)&(vt1.c0)) THEN ((x'')>(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) BETWEEN (rt0.c1) AND (0xffffffffc617f6c7)))AND((((vt1.c0, x'', rt0.c0)) BETWEEN ((rt0.c3, vt1.c0, vt0.c0)) AND ((rt0.c3, rt0.c2, vt0.c0))))))AND(rt0.c1 COLLATE RTRIM)))OR((rt0.c1 IN ()))))OR(rt0.c2))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (('0.03693153571298857')|((rt0.c1 IN ()))) FULL OUTER JOIN rt0 ON vt0.c0 ORDER BY CASE (rt0.c1 IN (rt0.c0))  WHEN ((rt0.c2)&(vt1.c0)) THEN ((x'')>(vt0.c0)) END DESC);
SELECT * FROM vt0 INNER JOIN vt1 ON (('0.03693153571298857')|((rt0.c1 IN ()))) FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((((((((((vt1.c0) BETWEEN (rt0.c1) AND (0Xffffffffc617f6c7)))AND((((vt1.c0, x'', rt0.c0)) BETWEEN ((rt0.c3, vt1.c0, vt0.c0)) AND ((rt0.c3, rt0.c2, vt0.c0))))))AND(rt0.c1 COLLATE RTRIM)))OR((rt0.c1 IN ()))))OR(rt0.c2))) ORDER BY CASE (rt0.c1 IN (rt0.c0))  WHEN ((rt0.c2)&(vt1.c0)) THEN ((x'')>(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) BETWEEN (rt0.c1) AND (0xffffffffc617f6c7)))AND((((vt1.c0, x'', rt0.c0)) BETWEEN ((rt0.c3, vt1.c0, vt0.c0)) AND ((rt0.c3, rt0.c2, vt0.c0))))))AND(rt0.c1 COLLATE RTRIM)))OR((rt0.c1 IN ()))))OR(rt0.c2))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (('0.03693153571298857')|((rt0.c1 IN ()))) FULL OUTER JOIN rt0 ON vt0.c0 ORDER BY CASE (rt0.c1 IN (rt0.c0))  WHEN ((rt0.c2)&(vt1.c0)) THEN ((x'')>(vt0.c0)) END DESC);
SELECT * FROM vt0 INNER JOIN vt1 ON (('0.03693153571298857')|((rt0.c1 IN ()))) FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((((((((((vt1.c0) BETWEEN (rt0.c1) AND (0Xffffffffc617f6c7)))AND((((vt1.c0, x'', rt0.c0)) BETWEEN ((rt0.c3, vt1.c0, vt0.c0)) AND ((rt0.c3, rt0.c2, vt0.c0))))))AND(rt0.c1 COLLATE RTRIM)))OR((rt0.c1 IN ()))))OR(rt0.c2))) ORDER BY CASE (rt0.c1 IN (rt0.c0))  WHEN ((rt0.c2)&(vt1.c0)) THEN ((x'')>(vt0.c0)) END DESC;
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1))>=((rt1.c3))))&((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))%(rt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1))>=((rt1.c3))))&((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))%(rt1.c0)));
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1))>=((rt1.c3))))&((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))%(rt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1))>=((rt1.c3))))&((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))%(rt1.c0)));
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1))>=((rt1.c3))))&((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))%(rt1.c0));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON rt1.c3 WHERE (((((vt0.c0)IS(rt1.c3)))>=(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1))))) ORDER BY ((((((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c3)))OR(((rt1.c2)==(rt1.c3)))))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND((rt1.c1 IN ()))))OR(((rt1.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(rt1.c3)))>=(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1 NOT INDEXED CROSS JOIN vt0 ON rt1.c3 ORDER BY ((((((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c3)))OR(((rt1.c2)==(rt1.c3)))))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND((rt1.c1 IN ()))))OR(((rt1.c1) NOTNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON rt1.c3 WHERE (((((vt0.c0)IS(rt1.c3)))>=(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1))))) ORDER BY ((((((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c3)))OR(((rt1.c2)==(rt1.c3)))))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND((rt1.c1 IN ()))))OR(((rt1.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(rt1.c3)))>=(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1 NOT INDEXED CROSS JOIN vt0 ON rt1.c3 ORDER BY ((((((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c3)))OR(((rt1.c2)==(rt1.c3)))))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND((rt1.c1 IN ()))))OR(((rt1.c1) NOTNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON rt1.c3 WHERE (((((vt0.c0)IS(rt1.c3)))>=(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1))))) ORDER BY ((((((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c3)))OR(((rt1.c2)==(rt1.c3)))))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND((rt1.c1 IN ()))))OR(((rt1.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, vt1, vt0 WHERE (((((rt1.c3)=(rt1.c3)))>=((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)==(rt1.c3)))>=((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1, vt1, vt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0, rt1, vt1, vt0 WHERE (((((rt1.c3)=(rt1.c3)))>=((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)==(rt1.c3)))>=((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1, vt1, vt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0, rt1, vt1, vt0 WHERE (((((rt1.c3)=(rt1.c3)))>=((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))))));
SELECT * FROM rt1, vt1, rt0, vt0 WHERE (((- (rt0.c0)) IN ())) ORDER BY (((((- (rt0.c0)))AND(rt0.c1)))AND(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0, vt0 ORDER BY (((((- (rt0.c0)))AND(rt0.c1)))AND(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))))  NULLS FIRST);
SELECT * FROM rt1, vt1, rt0, vt0 WHERE (((- (rt0.c0)) IN ())) ORDER BY (((((- (rt0.c0)))AND(rt0.c1)))AND(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0, vt0 ORDER BY (((((- (rt0.c0)))AND(rt0.c1)))AND(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))))  NULLS FIRST);
SELECT * FROM rt1, vt1, rt0, vt0 WHERE (((- (rt0.c0)) IN ())) ORDER BY (((((- (rt0.c0)))AND(rt0.c1)))AND(((((vt1.c0)OR(rt0.c2)))OR(vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((((NULL)OR((+ (vt1.c0)))))OR(CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR((+ (vt1.c0)))))OR(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((((NULL)OR((+ (vt1.c0)))))OR(CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR((+ (vt1.c0)))))OR(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((((NULL)OR((+ (vt1.c0)))))OR(CAST(NULL AS BLOB))));
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((CAST('&GwUeqG' AS NUMERIC)) BETWEEN ((((rt0.c3))<>((-1676222797)))) AND (((rt1.c1) IS TRUE)))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('&GwUeqG' AS NUMERIC)) BETWEEN ((((rt0.c3))!=((-1676222797)))) AND (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY '' DESC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((CAST('&GwUeqG' AS NUMERIC)) BETWEEN ((((rt0.c3))<>((-1676222797)))) AND (((rt1.c1) IS TRUE)))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('&GwUeqG' AS NUMERIC)) BETWEEN ((((rt0.c3))!=((-1676222797)))) AND (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY '' DESC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((CAST('&GwUeqG' AS NUMERIC)) BETWEEN ((((rt0.c3))<>((-1676222797)))) AND (((rt1.c1) IS TRUE)))) ORDER BY '' DESC;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON (((((x'', rt1.c1, rt0.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt0.c1)) AND ((rt1.c2, rt0.c3, rt0.c2)))) BETWEEN (((rt1.c1)+(526202673))) AND (CAST(rt0.c1 AS INTEGER))) INNER JOIN rt0 ON (((((rt0.c1))<=((rt1.c1)))) NOTNULL) RIGHT OUTER JOIN vt0 ON CASE (- (vt1.c0))  WHEN (((rt0.c1))>=((rt1.c1))) THEN (~ (rt0.c2)) ELSE ((rt1.c2)-(rt1.c3)) END WHERE (LIKELIHOOD('g', 0.28785927826997393));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('g', 0.28785927826997393)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON (((((x'', rt1.c1, rt0.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt0.c1)) AND ((rt1.c2, rt0.c3, rt0.c2)))) BETWEEN (((rt1.c1)+(526202673))) AND (CAST(rt0.c1 AS INTEGER))) INNER JOIN rt0 ON (((((rt0.c1))<=((rt1.c1)))) NOTNULL) RIGHT OUTER JOIN vt0 ON CASE (- (vt1.c0))  WHEN (((rt0.c1))>=((rt1.c1))) THEN (~ (rt0.c2)) ELSE ((rt1.c2)-(rt1.c3)) END);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON (((((x'', rt1.c1, rt0.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt0.c1)) AND ((rt1.c2, rt0.c3, rt0.c2)))) BETWEEN (((rt1.c1)+(526202673))) AND (CAST(rt0.c1 AS INTEGER))) INNER JOIN rt0 ON (((((rt0.c1))<=((rt1.c1)))) NOTNULL) RIGHT OUTER JOIN vt0 ON CASE (- (vt1.c0))  WHEN (((rt0.c1))>=((rt1.c1))) THEN (~ (rt0.c2)) ELSE ((rt1.c2)-(rt1.c3)) END WHERE (LIKELIHOOD('g', 0.28785927826997393));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('g', 0.28785927826997393)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON (((((x'', rt1.c1, rt0.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt0.c1)) AND ((rt1.c2, rt0.c3, rt0.c2)))) BETWEEN (((rt1.c1)+(526202673))) AND (CAST(rt0.c1 AS INTEGER))) INNER JOIN rt0 ON (((((rt0.c1))<=((rt1.c1)))) NOTNULL) RIGHT OUTER JOIN vt0 ON CASE (- (vt1.c0))  WHEN (((rt0.c1))>=((rt1.c1))) THEN (~ (rt0.c2)) ELSE ((rt1.c2)-(rt1.c3)) END);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON CASE ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))  WHEN (((rt0.c3))<=((vt0.c0))) THEN CAST(rt0.c1 AS NUMERIC) END RIGHT OUTER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN vt0 ON 'Eq' WHERE (CASE WHEN NULL THEN ((rt0.c1)IS NOT(vt0.c0)) ELSE (((rt0.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((rt0.c1)IS NOT(vt0.c0)) ELSE (((rt0.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) END) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))  WHEN (((rt0.c3))<=((vt0.c0))) THEN CAST(rt0.c1 AS NUMERIC) END RIGHT OUTER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN vt0 ON 'Eq');
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON CASE ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))  WHEN (((rt0.c3))<=((vt0.c0))) THEN CAST(rt0.c1 AS NUMERIC) END RIGHT OUTER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN vt0 ON 'Eq' WHERE (CASE WHEN NULL THEN ((rt0.c1)IS NOT(vt0.c0)) ELSE (((rt0.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((rt0.c1)IS NOT(vt0.c0)) ELSE (((rt0.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) END) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))  WHEN (((rt0.c3))<=((vt0.c0))) THEN CAST(rt0.c1 AS NUMERIC) END RIGHT OUTER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN vt0 ON 'Eq');
SELECT ALL * FROM vt1, rt1, vt0, rt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB)) ORDER BY ((((((rt1.c1)OR(rt1.c1)))OR('8|'))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt1, rt1, vt0, rt0 ORDER BY ((((((rt1.c1)OR(rt1.c1)))OR('8|'))) IS FALSE) DESC);
SELECT ALL * FROM vt1, rt1, vt0, rt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB)) ORDER BY ((((((rt1.c1)OR(rt1.c1)))OR('8|'))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt1, rt1, vt0, rt0 ORDER BY ((((((rt1.c1)OR(rt1.c1)))OR('8|'))) IS FALSE) DESC);
SELECT ALL * FROM vt1, rt1, vt0, rt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB)) ORDER BY ((((((rt1.c1)OR(rt1.c1)))OR('8|'))) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS BLOB)) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)%(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS BLOB)) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)%(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS BLOB)) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((LTRIM(vt1.c0) IN (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((LTRIM(vt1.c0) IN (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((LTRIM(vt1.c0) IN (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((LTRIM(vt1.c0) IN (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((LTRIM(vt1.c0) IN (vt1.c0 COLLATE RTRIM)));
SELECT * FROM rt1, vt0 INNER JOIN rt0 ON (NOT (rt1.c3)) COLLATE BINARY INNER JOIN vt1 ON CAST((+ (rt1.c3)) AS TEXT) WHERE (((CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END)<>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END)!=((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1, vt0 INNER JOIN rt0 ON (NOT (rt1.c3)) COLLATE BINARY INNER JOIN vt1 ON CAST((+ (rt1.c3)) AS TEXT));
SELECT * FROM rt1, vt0 INNER JOIN rt0 ON (NOT (rt1.c3)) COLLATE BINARY INNER JOIN vt1 ON CAST((+ (rt1.c3)) AS TEXT) WHERE (((CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END)<>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END)!=((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1, vt0 INNER JOIN rt0 ON (NOT (rt1.c3)) COLLATE BINARY INNER JOIN vt1 ON CAST((+ (rt1.c3)) AS TEXT));
SELECT * FROM rt1, vt0 INNER JOIN rt0 ON (NOT (rt1.c3)) COLLATE BINARY INNER JOIN vt1 ON CAST((+ (rt1.c3)) AS TEXT) WHERE (((CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END)<>((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON rt0.c2 COLLATE NOCASE FULL OUTER JOIN vt1 ON CASE rt1.c2  WHEN '34736433' THEN rt0.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN 0Xffffffff8da82cd2 END COLLATE RTRIM FULL OUTER JOIN vt0 ON NULLIF(((((((((vt0.c0)OR(rt1.c1)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)), ('' IN ())) WHERE ((~ (x'dedd'))) ORDER BY (((rt1.c0 IN (rt0.c3))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (x'dedd'))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON rt0.c2 COLLATE NOCASE FULL OUTER JOIN vt1 ON CASE rt1.c2  WHEN '34736433' THEN rt0.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN 0xffffffff8da82cd2 END COLLATE RTRIM FULL OUTER JOIN vt0 ON NULLIF(((((((((vt0.c0)OR(rt1.c1)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)), ('' IN ())) ORDER BY (((rt1.c0 IN (rt0.c3))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON rt0.c2 COLLATE NOCASE FULL OUTER JOIN vt1 ON CASE rt1.c2  WHEN '34736433' THEN rt0.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN 0Xffffffff8da82cd2 END COLLATE RTRIM FULL OUTER JOIN vt0 ON NULLIF(((((((((vt0.c0)OR(rt1.c1)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)), ('' IN ())) WHERE ((~ (x'dedd'))) ORDER BY (((rt1.c0 IN (rt0.c3))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (x'dedd'))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON rt0.c2 COLLATE NOCASE FULL OUTER JOIN vt1 ON CASE rt1.c2  WHEN '34736433' THEN rt0.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN 0xffffffff8da82cd2 END COLLATE RTRIM FULL OUTER JOIN vt0 ON NULLIF(((((((((vt0.c0)OR(rt1.c1)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)), ('' IN ())) ORDER BY (((rt1.c0 IN (rt0.c3))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON rt0.c2 COLLATE NOCASE FULL OUTER JOIN vt1 ON CASE rt1.c2  WHEN '34736433' THEN rt0.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN 0Xffffffff8da82cd2 END COLLATE RTRIM FULL OUTER JOIN vt0 ON NULLIF(((((((((vt0.c0)OR(rt1.c1)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)), ('' IN ())) WHERE ((~ (x'dedd'))) ORDER BY (((rt1.c0 IN (rt0.c3))) NOTNULL)  NULLS FIRST;
SELECT * FROM rt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, vt1, rt1, rt0 WHERE (((((vt1.c0)=(x'')))>>(((rt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)=(x'')))>>(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt1, rt0 WHERE (((((vt1.c0)=(x'')))>>(((rt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)=(x'')))>>(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt1, rt0 WHERE (((((vt1.c0)=(x'')))>>(((rt1.c1) NOTNULL))));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (CASE (7.75342909E8 IN (rt1.c0))  WHEN vt0.c0 COLLATE BINARY THEN (((0.4436355924132791)) BETWEEN ((vt0.c0)) AND ((NULL))) ELSE TRIM(DISTINCT rt0.c0, vt0.c0) END) ORDER BY (((((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt0.c0))))<>((((((rt0.c2)AND(rt0.c2)))OR(-1104274239)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (7.75342909E8 IN (rt1.c0))  WHEN vt0.c0 COLLATE BINARY THEN (((0.4436355924132791)) BETWEEN ((vt0.c0)) AND ((NULL))) ELSE TRIM(DISTINCT rt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt0.c0))))!=((((((rt0.c2)AND(rt0.c2)))OR(-1104274239)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (CASE (7.75342909E8 IN (rt1.c0))  WHEN vt0.c0 COLLATE BINARY THEN (((0.4436355924132791)) BETWEEN ((vt0.c0)) AND ((NULL))) ELSE TRIM(DISTINCT rt0.c0, vt0.c0) END) ORDER BY (((((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt0.c0))))<>((((((rt0.c2)AND(rt0.c2)))OR(-1104274239)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (7.75342909E8 IN (rt1.c0))  WHEN vt0.c0 COLLATE BINARY THEN (((0.4436355924132791)) BETWEEN ((vt0.c0)) AND ((NULL))) ELSE TRIM(DISTINCT rt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt0.c0))))!=((((((rt0.c2)AND(rt0.c2)))OR(-1104274239)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (CASE (7.75342909E8 IN (rt1.c0))  WHEN vt0.c0 COLLATE BINARY THEN (((0.4436355924132791)) BETWEEN ((vt0.c0)) AND ((NULL))) ELSE TRIM(DISTINCT rt0.c0, vt0.c0) END) ORDER BY (((((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt0.c0))))<>((((((rt0.c2)AND(rt0.c2)))OR(-1104274239)))))  NULLS FIRST;
SELECT * FROM rt0, vt0, rt1 NOT INDEXED, vt1 WHERE (((((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c2))) BETWEEN ((((('3?8咦')AND(rt0.c1)))OR(rt0.c0))) AND (((rt1.c1) ISNULL)))) ORDER BY (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN (CASE WHEN rt1.c1 THEN x'' END) AND ((NULL IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c2))) BETWEEN ((((('3?8咦')AND(rt0.c1)))OR(rt0.c0))) AND (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM rt0, vt0, rt1, vt1 ORDER BY (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN (CASE WHEN rt1.c1 THEN x'' END) AND ((NULL IN ()))));
SELECT * FROM rt0, vt0, rt1 NOT INDEXED, vt1 WHERE (((((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c2))) BETWEEN ((((('3?8咦')AND(rt0.c1)))OR(rt0.c0))) AND (((rt1.c1) ISNULL)))) ORDER BY (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN (CASE WHEN rt1.c1 THEN x'' END) AND ((NULL IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c2))) BETWEEN ((((('3?8咦')AND(rt0.c1)))OR(rt0.c0))) AND (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM rt0, vt0, rt1, vt1 ORDER BY (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN (CASE WHEN rt1.c1 THEN x'' END) AND ((NULL IN ()))));
SELECT * FROM rt0, vt0, rt1 NOT INDEXED, vt1 WHERE (((((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c2))) BETWEEN ((((('3?8咦')AND(rt0.c1)))OR(rt0.c0))) AND (((rt1.c1) ISNULL)))) ORDER BY (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN (CASE WHEN rt1.c1 THEN x'' END) AND ((NULL IN ())));
SELECT * FROM rt0, vt1, rt1 NATURAL JOIN vt0 WHERE (1.441311621E9);
SELECT SUM(count) FROM (SELECT ((1.441311621E9) IS TRUE)  as count FROM rt0, vt1, rt1 NATURAL JOIN vt0);
SELECT * FROM rt0, vt1, rt1 NATURAL JOIN vt0 WHERE (1.441311621E9);
SELECT SUM(count) FROM (SELECT ((1.441311621E9) IS TRUE)  as count FROM rt0, vt1, rt1 NATURAL JOIN vt0);
SELECT * FROM rt0, vt1, rt1 NATURAL JOIN vt0 WHERE (1.441311621E9);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c3)) IN ())) ORDER BY (TRIM(rt0.c1) IN ())  NULLS LAST, (((+ (rt1.c3)))AND(0.9142813459099903 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c3)) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY (TRIM(rt0.c1) IN ())  NULLS LAST, (((+ (rt1.c3)))AND(0.9142813459099903 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c3)) IN ())) ORDER BY (TRIM(rt0.c1) IN ())  NULLS LAST, (((+ (rt1.c3)))AND(0.9142813459099903 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c3)) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY (TRIM(rt0.c1) IN ())  NULLS LAST, (((+ (rt1.c3)))AND(0.9142813459099903 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c3)) IN ())) ORDER BY (TRIM(rt0.c1) IN ())  NULLS LAST, (((+ (rt1.c3)))AND(0.9142813459099903 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED, vt0, vt1 WHERE (((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN 'YCZ(' ELSE rt0.c1 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) AND (((((((((rt0.c3)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN 'YCZ(' ELSE rt0.c1 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) AND (((((((((rt0.c3)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, vt1 WHERE (((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN 'YCZ(' ELSE rt0.c1 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) AND (((((((((rt0.c3)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN 'YCZ(' ELSE rt0.c1 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) AND (((((((((rt0.c3)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, vt1 WHERE (((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN 'YCZ(' ELSE rt0.c1 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) AND (((((((((rt0.c3)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)))));
SELECT ALL * FROM rt1 WHERE (CHAR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), rt1.c1, CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), rt1.c1, CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CHAR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), rt1.c1, CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), rt1.c1, CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CHAR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), rt1.c1, CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0))) ORDER BY (NOT (json_array_length(vt0.c0, vt0.c0))) ASC  NULLS LAST, ((((vt0.c0)AND(vt0.c0))) ISNULL) DESC, (((vt0.c0) NOTNULL) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (json_array_length(vt0.c0, vt0.c0))) ASC  NULLS LAST, ((((vt0.c0)AND(vt0.c0))) ISNULL) DESC, (((vt0.c0) NOTNULL) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0))) ORDER BY (NOT (json_array_length(vt0.c0, vt0.c0))) ASC  NULLS LAST, ((((vt0.c0)AND(vt0.c0))) ISNULL) DESC, (((vt0.c0) NOTNULL) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (json_array_length(vt0.c0, vt0.c0))) ASC  NULLS LAST, ((((vt0.c0)AND(vt0.c0))) ISNULL) DESC, (((vt0.c0) NOTNULL) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0))) ORDER BY (NOT (json_array_length(vt0.c0, vt0.c0))) ASC  NULLS LAST, ((((vt0.c0)AND(vt0.c0))) ISNULL) DESC, (((vt0.c0) NOTNULL) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL));
SELECT * FROM rt1 CROSS JOIN vt0 ON (((rt0.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)) IN ()) FULL OUTER JOIN rt0 ON ((((((((((NULL) NOT NULL))AND(rt0.c0)))AND(CAST(rt1.c0 AS NUMERIC))))OR((vt0.c0 IN ()))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN 0.37958071115900727 ELSE rt1.c1 END)) CROSS JOIN vt1 ON CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)%(0.9981989674469736)) END WHERE (CHAR(((((rt1.c3)OR(rt1.c3)))OR(NULL)))) ORDER BY (((((((rt1.c2, rt1.c0, vt0.c0))>((rt1.c2, vt0.c0, rt1.c3))))OR(UNLIKELY(rt1.c2))))AND(TYPEOF(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((CHAR(((((rt1.c3)OR(rt1.c3)))OR(NULL)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (((rt0.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)) IN ()) FULL OUTER JOIN rt0 ON ((((((((((NULL) NOT NULL))AND(rt0.c0)))AND(CAST(rt1.c0 AS NUMERIC))))OR((vt0.c0 IN ()))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN 0.37958071115900727 ELSE rt1.c1 END)) CROSS JOIN vt1 ON CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)%(0.9981989674469736)) END ORDER BY (((((((rt1.c2, rt1.c0, vt0.c0))>((rt1.c2, vt0.c0, rt1.c3))))OR(UNLIKELY(rt1.c2))))AND(TYPEOF(vt1.c0))));
SELECT * FROM rt1 CROSS JOIN vt0 ON (((rt0.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)) IN ()) FULL OUTER JOIN rt0 ON ((((((((((NULL) NOT NULL))AND(rt0.c0)))AND(CAST(rt1.c0 AS NUMERIC))))OR((vt0.c0 IN ()))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN 0.37958071115900727 ELSE rt1.c1 END)) CROSS JOIN vt1 ON CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)%(0.9981989674469736)) END WHERE (CHAR(((((rt1.c3)OR(rt1.c3)))OR(NULL)))) ORDER BY (((((((rt1.c2, rt1.c0, vt0.c0))>((rt1.c2, vt0.c0, rt1.c3))))OR(UNLIKELY(rt1.c2))))AND(TYPEOF(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((CHAR(((((rt1.c3)OR(rt1.c3)))OR(NULL)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (((rt0.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)) IN ()) FULL OUTER JOIN rt0 ON ((((((((((NULL) NOT NULL))AND(rt0.c0)))AND(CAST(rt1.c0 AS NUMERIC))))OR((vt0.c0 IN ()))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN 0.37958071115900727 ELSE rt1.c1 END)) CROSS JOIN vt1 ON CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)%(0.9981989674469736)) END ORDER BY (((((((rt1.c2, rt1.c0, vt0.c0))>((rt1.c2, vt0.c0, rt1.c3))))OR(UNLIKELY(rt1.c2))))AND(TYPEOF(vt1.c0))));
SELECT * FROM rt1 CROSS JOIN vt0 ON (((rt0.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)) IN ()) FULL OUTER JOIN rt0 ON ((((((((((NULL) NOT NULL))AND(rt0.c0)))AND(CAST(rt1.c0 AS NUMERIC))))OR((vt0.c0 IN ()))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN 0.37958071115900727 ELSE rt1.c1 END)) CROSS JOIN vt1 ON CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0)%(0.9981989674469736)) END WHERE (CHAR(((((rt1.c3)OR(rt1.c3)))OR(NULL)))) ORDER BY (((((((rt1.c2, rt1.c0, vt0.c0))>((rt1.c2, vt0.c0, rt1.c3))))OR(UNLIKELY(rt1.c2))))AND(TYPEOF(vt1.c0)));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c3);
SELECT ALL * FROM vt0, rt1 WHERE ((((((vt0.c0)OR(rt1.c2))))==((rt1.c2)))) ORDER BY (+ (rt1.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(rt1.c2))))==((rt1.c2)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (+ (rt1.c3)) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt1 WHERE ((((((vt0.c0)OR(rt1.c2))))==((rt1.c2)))) ORDER BY (+ (rt1.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(rt1.c2))))==((rt1.c2)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (+ (rt1.c3)) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt1 WHERE ((((((vt0.c0)OR(rt1.c2))))==((rt1.c2)))) ORDER BY (+ (rt1.c3)) COLLATE NOCASE;
SELECT ALL * FROM rt1, vt1, vt0 WHERE (CAST((- (rt1.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt1.c3)) AS REAL)) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL * FROM rt1, vt1, vt0 WHERE (CAST((- (rt1.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt1.c3)) AS REAL)) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL * FROM rt1, vt1, vt0 WHERE (CAST((- (rt1.c3)) AS REAL));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON '-121252516' WHERE (CASE WHEN (+ (rt0.c1)) THEN (~ (rt0.c3)) WHEN (((vt0.c0, 0x54de210f, vt0.c0))<=((vt0.c0, '', rt0.c0))) THEN CAST(rt0.c1 AS INTEGER) WHEN CAST(rt0.c3 AS BLOB) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c1)) THEN (~ (rt0.c3)) WHEN (((vt0.c0, 0x54de210f, vt0.c0))<=((vt0.c0, '', rt0.c0))) THEN CAST(rt0.c1 AS INTEGER) WHEN CAST(rt0.c3 AS BLOB) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON '-121252516');
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON '-121252516' WHERE (CASE WHEN (+ (rt0.c1)) THEN (~ (rt0.c3)) WHEN (((vt0.c0, 0x54de210f, vt0.c0))<=((vt0.c0, '', rt0.c0))) THEN CAST(rt0.c1 AS INTEGER) WHEN CAST(rt0.c3 AS BLOB) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c1)) THEN (~ (rt0.c3)) WHEN (((vt0.c0, 0x54de210f, vt0.c0))<=((vt0.c0, '', rt0.c0))) THEN CAST(rt0.c1 AS INTEGER) WHEN CAST(rt0.c3 AS BLOB) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON '-121252516');
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON '-121252516' WHERE (CASE WHEN (+ (rt0.c1)) THEN (~ (rt0.c3)) WHEN (((vt0.c0, 0x54de210f, vt0.c0))<=((vt0.c0, '', rt0.c0))) THEN CAST(rt0.c1 AS INTEGER) WHEN CAST(rt0.c3 AS BLOB) THEN (vt0.c0 IN ()) END);
SELECT ALL * FROM rt0, vt1 WHERE (((((((vt1.c0)OR('983671156')))OR(rt0.c3)))<=((vt1.c0 IN ())))) ORDER BY ((((rt0.c2)>>(vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR('983671156')))OR(rt0.c3)))<=((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2)>>(vt1.c0))) ISNULL));
SELECT ALL * FROM rt0, vt1 WHERE (((((((vt1.c0)OR('983671156')))OR(rt0.c3)))<=((vt1.c0 IN ())))) ORDER BY ((((rt0.c2)>>(vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR('983671156')))OR(rt0.c3)))<=((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2)>>(vt1.c0))) ISNULL));
SELECT ALL * FROM rt0, vt1 WHERE (((((((vt1.c0)OR('983671156')))OR(rt0.c3)))<=((vt1.c0 IN ())))) ORDER BY ((((rt0.c2)>>(vt1.c0))) ISNULL);
SELECT ALL * FROM rt1, vt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))|((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))|((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT ALL * FROM rt1, vt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))|((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))|((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT ALL * FROM rt1, vt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))|((((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 IN ()) IN ()) WHERE (((DATE(rt0.c1, rt0.c0, rt0.c1))=(0xfffffffff085d296)));
SELECT SUM(count) FROM (SELECT ALL ((((DATE(rt0.c1, rt0.c0, rt0.c1))==(0xfffffffff085d296))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 IN ()) IN ()));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 IN ()) IN ()) WHERE (((DATE(rt0.c1, rt0.c0, rt0.c1))=(0xfffffffff085d296)));
SELECT SUM(count) FROM (SELECT ALL ((((DATE(rt0.c1, rt0.c0, rt0.c1))==(0xfffffffff085d296))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 IN ()) IN ()));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1 IN ()) IN ()) WHERE (((DATE(rt0.c1, rt0.c0, rt0.c1))=(0xfffffffff085d296)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT NULL))LIKE(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))LIKE(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT NULL))LIKE(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))LIKE(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT NULL))LIKE(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))));
SELECT ALL * FROM rt1 WHERE ((((('XP	*')OR(rt1.c2)))OR((rt1.c2 IN ())))) ORDER BY (((((((rt1.c0))<>((rt1.c3))))OR('954024791')))OR((rt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((('XP	*')OR(rt1.c2)))OR((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((((((rt1.c0))!=((rt1.c3))))OR('954024791')))OR((rt1.c2 IN ()))) DESC);
SELECT ALL * FROM rt1 WHERE ((((('XP	*')OR(rt1.c2)))OR((rt1.c2 IN ())))) ORDER BY (((((((rt1.c0))<>((rt1.c3))))OR('954024791')))OR((rt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((('XP	*')OR(rt1.c2)))OR((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((((((rt1.c0))!=((rt1.c3))))OR('954024791')))OR((rt1.c2 IN ()))) DESC);
SELECT ALL * FROM rt1 WHERE ((((('XP	*')OR(rt1.c2)))OR((rt1.c2 IN ())))) ORDER BY (((((((rt1.c0))<>((rt1.c3))))OR('954024791')))OR((rt1.c2 IN ()))) DESC;
SELECT * FROM rt1, vt0, vt1 WHERE (((+ (rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c3)) IN ())) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT * FROM rt1, vt0, vt1 WHERE (((+ (rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c3)) IN ())) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT * FROM rt1, vt0, vt1 WHERE (((+ (rt1.c3)) IN ()));
SELECT * FROM vt0 WHERE (((CAST(NULL AS BLOB))>(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))>(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS BLOB))>(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))>(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(NULL AS BLOB))>(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))>(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS BLOB))>(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))>(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(NULL AS BLOB))>(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))>(vt0.c0))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c0 END)AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c0 END)AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c0 END)AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c0 END)AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c0 END)AND(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(CAST(rt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0, vt0 WHERE (((((0.7727943360337316) ISNULL)) IS TRUE)) ORDER BY (~ (NULLIF('', rt0.c0))) ASC, (((((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c1)), CAST(rt0.c1 AS TEXT), ((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))<(((rt0.c2 IN ()), (('-1399599366') NOT NULL), ((vt1.c0) BETWEEN ('0.44809231689670725') AND (x'0184'))))), CAST((((rt0.c2))=((rt1.c1))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.7727943360337316) ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt1, vt1, rt0, vt0 ORDER BY (~ (NULLIF('', rt0.c0))) ASC, (((((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c1)), CAST(rt0.c1 AS TEXT), ((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))<(((rt0.c2 IN ()), (('-1399599366') NOT NULL), ((vt1.c0) BETWEEN ('0.44809231689670725') AND (x'0184'))))), CAST((((rt0.c2))==((rt1.c1))) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0, vt0 WHERE (((((0.7727943360337316) ISNULL)) IS TRUE)) ORDER BY (~ (NULLIF('', rt0.c0))) ASC, (((((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c1)), CAST(rt0.c1 AS TEXT), ((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))<(((rt0.c2 IN ()), (('-1399599366') NOT NULL), ((vt1.c0) BETWEEN ('0.44809231689670725') AND (x'0184'))))), CAST((((rt0.c2))=((rt1.c1))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.7727943360337316) ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt1, vt1, rt0, vt0 ORDER BY (~ (NULLIF('', rt0.c0))) ASC, (((((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c1)), CAST(rt0.c1 AS TEXT), ((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))<(((rt0.c2 IN ()), (('-1399599366') NOT NULL), ((vt1.c0) BETWEEN ('0.44809231689670725') AND (x'0184'))))), CAST((((rt0.c2))==((rt1.c1))) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0, vt0 WHERE (((((0.7727943360337316) ISNULL)) IS TRUE)) ORDER BY (~ (NULLIF('', rt0.c0))) ASC, (((((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c1)), CAST(rt0.c1 AS TEXT), ((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))<(((rt0.c2 IN ()), (('-1399599366') NOT NULL), ((vt1.c0) BETWEEN ('0.44809231689670725') AND (x'0184'))))), CAST((((rt0.c2))=((rt1.c1))) AS BLOB) DESC;
SELECT * FROM rt0, rt1 WHERE ('494681378') ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('494681378') IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ('494681378') ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('494681378') IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ('494681378') ORDER BY rt0.c0  NULLS LAST;
SELECT * FROM rt1, vt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt1.c1 WHEN 0.5904745947181955 THEN rt0.c3 ELSE rt1.c3 END) BETWEEN (CASE WHEN NULL THEN rt0.c0 END) AND (((rt0.c1) IS TRUE)))) ORDER BY ((((((((((rt1.c3) IS TRUE))OR(json_array_length(0.9059921404111807, x''))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))))OR((rt0.c2 IN (NULL)))))OR(rt1.c3)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt1.c1 WHEN 0.5904745947181955 THEN rt0.c3 ELSE rt1.c3 END) BETWEEN (CASE WHEN NULL THEN rt0.c0 END) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((((((((((rt1.c3) IS TRUE))OR(json_array_length(0.9059921404111807, x''))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))))OR((rt0.c2 IN (NULL)))))OR(rt1.c3)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt1.c1 WHEN 0.5904745947181955 THEN rt0.c3 ELSE rt1.c3 END) BETWEEN (CASE WHEN NULL THEN rt0.c0 END) AND (((rt0.c1) IS TRUE)))) ORDER BY ((((((((((rt1.c3) IS TRUE))OR(json_array_length(0.9059921404111807, x''))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))))OR((rt0.c2 IN (NULL)))))OR(rt1.c3)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c3 THEN rt1.c1 WHEN 0.5904745947181955 THEN rt0.c3 ELSE rt1.c3 END) BETWEEN (CASE WHEN NULL THEN rt0.c0 END) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((((((((((rt1.c3) IS TRUE))OR(json_array_length(0.9059921404111807, x''))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))))OR((rt0.c2 IN (NULL)))))OR(rt1.c3)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0)==(TRIM(vt0.c0)))) ORDER BY '1117308166' COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)==(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY '1117308166' COLLATE BINARY DESC);
SELECT * FROM vt0 WHERE (((vt0.c0)==(TRIM(vt0.c0)))) ORDER BY '1117308166' COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)==(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY '1117308166' COLLATE BINARY DESC);
SELECT * FROM vt0 WHERE (((vt0.c0)==(TRIM(vt0.c0)))) ORDER BY '1117308166' COLLATE BINARY DESC;
SELECT * FROM rt0 WHERE ((- ((rt0.c0 IN (rt0.c2, rt0.c0))))) ORDER BY 0.8628735339645422  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c0 IN (rt0.c2, rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY 0.8628735339645422  NULLS LAST);
SELECT * FROM rt0 WHERE ((- ((rt0.c0 IN (rt0.c2, rt0.c0))))) ORDER BY 0.8628735339645422  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c0 IN (rt0.c2, rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY 0.8628735339645422  NULLS LAST);
SELECT * FROM rt0 WHERE ((- ((rt0.c0 IN (rt0.c2, rt0.c0))))) ORDER BY 0.8628735339645422  NULLS LAST;
SELECT ALL * FROM vt1, rt0, rt1 WHERE ((((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((rt0.c3, ((((((((rt0.c2)AND(rt1.c2)))OR(vt1.c0)))OR(rt0.c3)))AND(rt1.c1)), (~ (rt1.c0)))) AND ((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN NULL THEN rt0.c1 WHEN rt1.c1 THEN vt1.c0 END, (rt0.c0 IN ()), (NOT (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((rt0.c3, ((((((((rt0.c2)AND(rt1.c2)))OR(vt1.c0)))OR(rt0.c3)))AND(rt1.c1)), (~ (rt1.c0)))) AND ((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN NULL THEN rt0.c1 WHEN rt1.c1 THEN vt1.c0 END, (rt0.c0 IN ()), (NOT (vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE ((((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((rt0.c3, ((((((((rt0.c2)AND(rt1.c2)))OR(vt1.c0)))OR(rt0.c3)))AND(rt1.c1)), (~ (rt1.c0)))) AND ((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN NULL THEN rt0.c1 WHEN rt1.c1 THEN vt1.c0 END, (rt0.c0 IN ()), (NOT (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((rt0.c3, ((((((((rt0.c2)AND(rt1.c2)))OR(vt1.c0)))OR(rt0.c3)))AND(rt1.c1)), (~ (rt1.c0)))) AND ((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN NULL THEN rt0.c1 WHEN rt1.c1 THEN vt1.c0 END, (rt0.c0 IN ()), (NOT (vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE ((((rt1.c3, rt1.c3, rt1.c1)) NOT BETWEEN ((rt0.c3, ((((((((rt0.c2)AND(rt1.c2)))OR(vt1.c0)))OR(rt0.c3)))AND(rt1.c1)), (~ (rt1.c0)))) AND ((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN NULL THEN rt0.c1 WHEN rt1.c1 THEN vt1.c0 END, (rt0.c0 IN ()), (NOT (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN CAST(vt0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN CAST(vt0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN CAST(vt0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN CAST(vt0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN CAST(vt0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) END);
SELECT ALL * FROM rt0, rt1 WHERE ((- (CAST(rt0.c1 AS NUMERIC)))) ORDER BY CAST((~ (0.5815422567089862)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST((~ (0.5815422567089862)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE ((- (CAST(rt0.c1 AS NUMERIC)))) ORDER BY CAST((~ (0.5815422567089862)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST((~ (0.5815422567089862)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE ((- (CAST(rt0.c1 AS NUMERIC)))) ORDER BY CAST((~ (0.5815422567089862)) AS BLOB) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3 COLLATE BINARY)OR((rt1.c0 IN ('R^5Z蠂䢏ꜳ7', rt1.c3)))))OR((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3 COLLATE BINARY)OR((rt1.c0 IN ('R^5Z蠂䢏ꜳ7', rt1.c3)))))OR((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3 COLLATE BINARY)OR((rt1.c0 IN ('R^5Z蠂䢏ꜳ7', rt1.c3)))))OR((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3 COLLATE BINARY)OR((rt1.c0 IN ('R^5Z蠂䢏ꜳ7', rt1.c3)))))OR((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3 COLLATE BINARY)OR((rt1.c0 IN ('R^5Z蠂䢏ꜳ7', rt1.c3)))))OR((rt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1, rt1, vt0 INNER JOIN rt0 ON (((0.0 IN ()))=(((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1, rt1, vt0 INNER JOIN rt0 ON (((0.0 IN ()))==(((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1, rt1, vt0 INNER JOIN rt0 ON (((0.0 IN ()))=(((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1, rt1, vt0 INNER JOIN rt0 ON (((0.0 IN ()))==(((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1, rt1, vt0 INNER JOIN rt0 ON (((0.0 IN ()))=(((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END) NOTNULL));
SELECT * FROM vt0, rt1, vt1 WHERE (((rt1.c3 COLLATE BINARY)<<((((rt1.c1))<((rt1.c1)))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))>=((- (vt0.c0)))) ASC, ((((NULL) BETWEEN (rt1.c0) AND (vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE BINARY)<<((((rt1.c1))<((rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))>=((- (vt0.c0)))) ASC, ((((NULL) BETWEEN (rt1.c0) AND (vt0.c0))) ISNULL));
SELECT * FROM vt0, rt1, vt1 WHERE (((rt1.c3 COLLATE BINARY)<<((((rt1.c1))<((rt1.c1)))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))>=((- (vt0.c0)))) ASC, ((((NULL) BETWEEN (rt1.c0) AND (vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE BINARY)<<((((rt1.c1))<((rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))>=((- (vt0.c0)))) ASC, ((((NULL) BETWEEN (rt1.c0) AND (vt0.c0))) ISNULL));
SELECT * FROM vt0, rt1, vt1 WHERE (((rt1.c3 COLLATE BINARY)<<((((rt1.c1))<((rt1.c1)))))) ORDER BY ((CAST(vt1.c0 AS INTEGER))>=((- (vt0.c0)))) ASC, ((((NULL) BETWEEN (rt1.c0) AND (vt0.c0))) ISNULL);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1, vt0, rt1 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CHAR(0.3225827829617167)) AND (json_type(rt1.c2)))) ORDER BY (vt1.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CHAR(0.3225827829617167)) AND (json_type(rt1.c2)))) IS TRUE)  as count FROM rt0, vt1, vt0, rt1 ORDER BY (vt1.c0 IN ()) ASC);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1, vt0, rt1 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CHAR(0.3225827829617167)) AND (json_type(rt1.c2)))) ORDER BY (vt1.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CHAR(0.3225827829617167)) AND (json_type(rt1.c2)))) IS TRUE)  as count FROM rt0, vt1, vt0, rt1 ORDER BY (vt1.c0 IN ()) ASC);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1, vt0, rt1 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CHAR(0.3225827829617167)) AND (json_type(rt1.c2)))) ORDER BY (vt1.c0 IN ()) ASC;
SELECT * FROM vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((LTRIM(vt1.c0, vt1.c0)))) ASC, x'' ASC, ((json_patch(vt1.c0, '-2075975732'))>((vt1.c0 IN (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((LTRIM(vt1.c0, vt1.c0)))) ASC, x'' ASC, ((json_patch(vt1.c0, '-2075975732'))>((vt1.c0 IN (vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((LTRIM(vt1.c0, vt1.c0)))) ASC, x'' ASC, ((json_patch(vt1.c0, '-2075975732'))>((vt1.c0 IN (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((LTRIM(vt1.c0, vt1.c0)))) ASC, x'' ASC, ((json_patch(vt1.c0, '-2075975732'))>((vt1.c0 IN (vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE NOCASE) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((LTRIM(vt1.c0, vt1.c0)))) ASC, x'' ASC, ((json_patch(vt1.c0, '-2075975732'))>((vt1.c0 IN (vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM rt1, vt1, vt0 WHERE (x'') ORDER BY ((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)))OR(rt1.c0)))-(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)))OR(rt1.c0)))-(vt0.c0))  NULLS FIRST);
SELECT * FROM rt1, vt1, vt0 WHERE (x'') ORDER BY ((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)))OR(rt1.c0)))-(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)))OR(rt1.c0)))-(vt0.c0))  NULLS FIRST);
SELECT * FROM rt1, vt1, vt0 WHERE (x'') ORDER BY ((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)))OR(rt1.c0)))-(vt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(((((((((vt0.c0)AND(0x4298c506)))OR(rt1.c1)))OR(rt0.c3)))AND(rt1.c1))) LEFT OUTER JOIN rt1 ON (((rt0.c2 IN ()))/(((rt1.c1)!=(vt1.c0)))) WHERE (((CAST(rt1.c0 AS INTEGER)) BETWEEN ((((rt0.c0))<=((rt1.c1)))) AND (rt0.c0))) ORDER BY CASE ((((((((((((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(vt0.c0)))AND(rt1.c3)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c1))  WHEN (rt1.c2 IN (rt1.c3)) THEN rt0.c3 WHEN NULLIF(DISTINCT rt0.c2, rt0.c2) THEN (((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) WHEN 0.006409963110076022 THEN ((((rt1.c2)AND(0.36299233837015965)))AND(rt0.c3)) ELSE ((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c0)) END DESC  NULLS FIRST, (((rt1.c1)+(rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS INTEGER)) BETWEEN ((((rt0.c0))<=((rt1.c1)))) AND (rt0.c0))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(((((((((vt0.c0)AND(0x4298c506)))OR(rt1.c1)))OR(rt0.c3)))AND(rt1.c1))) LEFT OUTER JOIN rt1 ON (((rt0.c2 IN ()))/(((rt1.c1)!=(vt1.c0)))) ORDER BY CASE ((((((((((((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(vt0.c0)))AND(rt1.c3)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c1))  WHEN (rt1.c2 IN (rt1.c3)) THEN rt0.c3 WHEN NULLIF(DISTINCT rt0.c2, rt0.c2) THEN (((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) WHEN 0.006409963110076022 THEN ((((rt1.c2)AND(0.36299233837015965)))AND(rt0.c3)) ELSE ((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c0)) END DESC  NULLS FIRST, (((rt1.c1)+(rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c3 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(((((((((vt0.c0)AND(0x4298c506)))OR(rt1.c1)))OR(rt0.c3)))AND(rt1.c1))) LEFT OUTER JOIN rt1 ON (((rt0.c2 IN ()))/(((rt1.c1)!=(vt1.c0)))) WHERE (((CAST(rt1.c0 AS INTEGER)) BETWEEN ((((rt0.c0))<=((rt1.c1)))) AND (rt0.c0))) ORDER BY CASE ((((((((((((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(vt0.c0)))AND(rt1.c3)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c1))  WHEN (rt1.c2 IN (rt1.c3)) THEN rt0.c3 WHEN NULLIF(DISTINCT rt0.c2, rt0.c2) THEN (((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) WHEN 0.006409963110076022 THEN ((((rt1.c2)AND(0.36299233837015965)))AND(rt0.c3)) ELSE ((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c0)) END DESC  NULLS FIRST, (((rt1.c1)+(rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS INTEGER)) BETWEEN ((((rt0.c0))<=((rt1.c1)))) AND (rt0.c0))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(((((((((vt0.c0)AND(0x4298c506)))OR(rt1.c1)))OR(rt0.c3)))AND(rt1.c1))) LEFT OUTER JOIN rt1 ON (((rt0.c2 IN ()))/(((rt1.c1)!=(vt1.c0)))) ORDER BY CASE ((((((((((((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(vt0.c0)))AND(rt1.c3)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c1))  WHEN (rt1.c2 IN (rt1.c3)) THEN rt0.c3 WHEN NULLIF(DISTINCT rt0.c2, rt0.c2) THEN (((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) WHEN 0.006409963110076022 THEN ((((rt1.c2)AND(0.36299233837015965)))AND(rt0.c3)) ELSE ((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c0)) END DESC  NULLS FIRST, (((rt1.c1)+(rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c3 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED NATURAL JOIN rt1 WHERE (IFNULL((vt1.c0 IN (NULL)), ABS(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((IFNULL((vt1.c0 IN (NULL)), ABS(rt1.c2))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED NATURAL JOIN rt1 WHERE (IFNULL((vt1.c0 IN (NULL)), ABS(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((IFNULL((vt1.c0 IN (NULL)), ABS(rt1.c2))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED NATURAL JOIN rt1 WHERE (IFNULL((vt1.c0 IN (NULL)), ABS(rt1.c2)));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((('^')OR(rt1.c0)))OR(vt1.c0)))OR(rt0.c0)))OR(vt0.c0)) IN ()) INNER JOIN vt1 ON ((((((((rt1.c2)AND(rt0.c3)))OR(rt1.c3)))OR(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM COLLATE RTRIM CROSS JOIN rt1 ON '8' WHERE (((((rt0.c0)IS(x''))) BETWEEN (rt0.c3 COLLATE BINARY) AND (((rt1.c3)<<(rt1.c3))))) ORDER BY CASE (NOT (rt1.c2))  WHEN ((NULL)==(NULL)) THEN DATE(vt1.c0, rt0.c2, rt1.c0) WHEN (('-429023116') ISNULL) THEN ((rt1.c3) IS FALSE) WHEN (rt0.c1 IN ()) THEN DATE(-50444968, rt1.c0, rt1.c3) ELSE ((rt1.c0) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS(x''))) BETWEEN (rt0.c3 COLLATE BINARY) AND (((rt1.c3)<<(rt1.c3))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((('^')OR(rt1.c0)))OR(vt1.c0)))OR(rt0.c0)))OR(vt0.c0)) IN ()) INNER JOIN vt1 ON ((((((((rt1.c2)AND(rt0.c3)))OR(rt1.c3)))OR(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM COLLATE RTRIM CROSS JOIN rt1 ON '8' ORDER BY CASE (NOT (rt1.c2))  WHEN ((NULL)==(NULL)) THEN DATE(vt1.c0, rt0.c2, rt1.c0) WHEN (('-429023116') ISNULL) THEN ((rt1.c3) IS FALSE) WHEN (rt0.c1 IN ()) THEN DATE(-50444968, rt1.c0, rt1.c3) ELSE ((rt1.c0) NOT NULL) END ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((('^')OR(rt1.c0)))OR(vt1.c0)))OR(rt0.c0)))OR(vt0.c0)) IN ()) INNER JOIN vt1 ON ((((((((rt1.c2)AND(rt0.c3)))OR(rt1.c3)))OR(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM COLLATE RTRIM CROSS JOIN rt1 ON '8' WHERE (((((rt0.c0)IS(x''))) BETWEEN (rt0.c3 COLLATE BINARY) AND (((rt1.c3)<<(rt1.c3))))) ORDER BY CASE (NOT (rt1.c2))  WHEN ((NULL)==(NULL)) THEN DATE(vt1.c0, rt0.c2, rt1.c0) WHEN (('-429023116') ISNULL) THEN ((rt1.c3) IS FALSE) WHEN (rt0.c1 IN ()) THEN DATE(-50444968, rt1.c0, rt1.c3) ELSE ((rt1.c0) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS(x''))) BETWEEN (rt0.c3 COLLATE BINARY) AND (((rt1.c3)<<(rt1.c3))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((('^')OR(rt1.c0)))OR(vt1.c0)))OR(rt0.c0)))OR(vt0.c0)) IN ()) INNER JOIN vt1 ON ((((((((rt1.c2)AND(rt0.c3)))OR(rt1.c3)))OR(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM COLLATE RTRIM CROSS JOIN rt1 ON '8' ORDER BY CASE (NOT (rt1.c2))  WHEN ((NULL)==(NULL)) THEN DATE(vt1.c0, rt0.c2, rt1.c0) WHEN (('-429023116') ISNULL) THEN ((rt1.c3) IS FALSE) WHEN (rt0.c1 IN ()) THEN DATE(-50444968, rt1.c0, rt1.c3) ELSE ((rt1.c0) NOT NULL) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((vt0.c0) ISNULL) AS TEXT));
SELECT ALL * FROM rt1 WHERE (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END COLLATE RTRIM) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END COLLATE RTRIM) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END COLLATE RTRIM) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON (NOT (CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c0 ELSE rt0.c2 END)) INNER JOIN vt1 ON ((((LOWER(rt1.c0))OR(((rt1.c3)&(rt0.c3)))))AND(((((rt1.c3)OR(rt1.c1)))OR(vt1.c0)))) FULL OUTER JOIN rt0 ON 'T9ygm![' COLLATE NOCASE WHERE ((((IFNULL(DISTINCT vt1.c0, rt1.c1), (((rt1.c0, rt0.c3, vt1.c0, rt0.c1, rt1.c1))<=((rt1.c0, rt1.c1, rt1.c2, rt0.c3, x''))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0))))>=((rt0.c2 COLLATE RTRIM, ((((((((rt1.c0)OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)))AND('yv')), CASE rt0.c0  WHEN rt1.c3 THEN vt0.c0 WHEN NULL THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 END)))) ORDER BY (('-222626042')OR(((rt0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(DISTINCT vt1.c0, rt1.c1), (((rt1.c0, rt0.c3, vt1.c0, rt0.c1, rt1.c1))<=((rt1.c0, rt1.c1, rt1.c2, rt0.c3, x''))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0))))>=((rt0.c2 COLLATE RTRIM, ((((((((rt1.c0)OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)))AND('yv')), CASE rt0.c0  WHEN rt1.c3 THEN vt0.c0 WHEN NULL THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (NOT (CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c0 ELSE rt0.c2 END)) INNER JOIN vt1 ON ((((LOWER(rt1.c0))OR(((rt1.c3)&(rt0.c3)))))AND(((((rt1.c3)OR(rt1.c1)))OR(vt1.c0)))) FULL OUTER JOIN rt0 ON 'T9ygm![' COLLATE NOCASE ORDER BY (('-222626042')OR(((rt0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c0)))) ASC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON (NOT (CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c0 ELSE rt0.c2 END)) INNER JOIN vt1 ON ((((LOWER(rt1.c0))OR(((rt1.c3)&(rt0.c3)))))AND(((((rt1.c3)OR(rt1.c1)))OR(vt1.c0)))) FULL OUTER JOIN rt0 ON 'T9ygm![' COLLATE NOCASE WHERE ((((IFNULL(DISTINCT vt1.c0, rt1.c1), (((rt1.c0, rt0.c3, vt1.c0, rt0.c1, rt1.c1))<=((rt1.c0, rt1.c1, rt1.c2, rt0.c3, x''))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0))))>=((rt0.c2 COLLATE RTRIM, ((((((((rt1.c0)OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)))AND('yv')), CASE rt0.c0  WHEN rt1.c3 THEN vt0.c0 WHEN NULL THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 END)))) ORDER BY (('-222626042')OR(((rt0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(DISTINCT vt1.c0, rt1.c1), (((rt1.c0, rt0.c3, vt1.c0, rt0.c1, rt1.c1))<=((rt1.c0, rt1.c1, rt1.c2, rt0.c3, x''))), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0))))>=((rt0.c2 COLLATE RTRIM, ((((((((rt1.c0)OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)))AND('yv')), CASE rt0.c0  WHEN rt1.c3 THEN vt0.c0 WHEN NULL THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (NOT (CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c0 ELSE rt0.c2 END)) INNER JOIN vt1 ON ((((LOWER(rt1.c0))OR(((rt1.c3)&(rt0.c3)))))AND(((((rt1.c3)OR(rt1.c1)))OR(vt1.c0)))) FULL OUTER JOIN rt0 ON 'T9ygm![' COLLATE NOCASE ORDER BY (('-222626042')OR(((rt0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))<=((rt0.c2 COLLATE RTRIM)))) ORDER BY ((((rt0.c1 IN (rt0.c2, rt0.c1)), ((rt0.c2) NOTNULL), ((rt0.c2)=(rt0.c3))))>=((HEX(DISTINCT rt0.c1), (rt0.c2 IN ()), rt0.c2))), 0x7de33f4f;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<=((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 IN (rt0.c2, rt0.c1)), ((rt0.c2) NOTNULL), ((rt0.c2)=(rt0.c3))))>=((HEX(DISTINCT rt0.c1), (rt0.c2 IN ()), rt0.c2))), 0x7de33f4f);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))<=((rt0.c2 COLLATE RTRIM)))) ORDER BY ((((rt0.c1 IN (rt0.c2, rt0.c1)), ((rt0.c2) NOTNULL), ((rt0.c2)=(rt0.c3))))>=((HEX(DISTINCT rt0.c1), (rt0.c2 IN ()), rt0.c2))), 0x7de33f4f;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<=((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 IN (rt0.c2, rt0.c1)), ((rt0.c2) NOTNULL), ((rt0.c2)=(rt0.c3))))>=((HEX(DISTINCT rt0.c1), (rt0.c2 IN ()), rt0.c2))), 0x7de33f4f);
SELECT * FROM rt0, rt1, vt0, vt1 WHERE (LOWER(DISTINCT ((rt0.c1) NOT NULL))) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(CASE rt0.c3  WHEN rt0.c3 THEN rt1.c1 END)))OR(((rt1.c3)<=(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(CASE rt0.c3  WHEN rt0.c3 THEN rt1.c1 END)))OR(((rt1.c3)<=(rt1.c1)))) ASC);
SELECT * FROM rt0, rt1, vt0, vt1 WHERE (LOWER(DISTINCT ((rt0.c1) NOT NULL))) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(CASE rt0.c3  WHEN rt0.c3 THEN rt1.c1 END)))OR(((rt1.c3)<=(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(CASE rt0.c3  WHEN rt0.c3 THEN rt1.c1 END)))OR(((rt1.c3)<=(rt1.c1)))) ASC);
SELECT * FROM rt0, rt1, vt0, vt1 WHERE (LOWER(DISTINCT ((rt0.c1) NOT NULL))) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(CASE rt0.c3  WHEN rt0.c3 THEN rt1.c1 END)))OR(((rt1.c3)<=(rt1.c1)))) ASC;
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0)==(vt0.c0)) THEN ((rt0.c3)<=(rt0.c3)) END) ORDER BY ((rt0.c1)-(rt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)=(vt0.c0)) THEN ((rt0.c3)<=(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1)-(rt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0)==(vt0.c0)) THEN ((rt0.c3)<=(rt0.c3)) END) ORDER BY ((rt0.c1)-(rt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)=(vt0.c0)) THEN ((rt0.c3)<=(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1)-(rt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0)==(vt0.c0)) THEN ((rt0.c3)<=(rt0.c3)) END) ORDER BY ((rt0.c1)-(rt0.c0)) COLLATE NOCASE ASC;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)||('')) THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)||('')) THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)||('')) THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)||('')) THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)||('')) THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1)>(rt1.c3))  WHEN ((rt1.c1) IS FALSE) THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)>(rt1.c3))  WHEN ((rt1.c1) IS FALSE) THEN rt1.c2 END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1)>(rt1.c3))  WHEN ((rt1.c1) IS FALSE) THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)>(rt1.c3))  WHEN ((rt1.c1) IS FALSE) THEN rt1.c2 END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1)>(rt1.c3))  WHEN ((rt1.c1) IS FALSE) THEN rt1.c2 END);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))GLOB(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))GLOB(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))GLOB(vt1.c0)));
SELECT ALL * FROM vt1, rt1, rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL)) ORDER BY COALESCE(INSTR(rt0.c1, vt0.c0), ((((((((x'')AND(rt0.c3)))AND(rt1.c1)))OR('-1738845478')))AND(rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1, rt1, rt0, vt0 ORDER BY COALESCE(INSTR(rt0.c1, vt0.c0), ((((((((x'')AND(rt0.c3)))AND(rt1.c1)))OR('-1738845478')))AND(rt0.c1)))  NULLS LAST);
SELECT ALL * FROM vt1, rt1, rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL)) ORDER BY COALESCE(INSTR(rt0.c1, vt0.c0), ((((((((x'')AND(rt0.c3)))AND(rt1.c1)))OR('-1738845478')))AND(rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1, rt1, rt0, vt0 ORDER BY COALESCE(INSTR(rt0.c1, vt0.c0), ((((((((x'')AND(rt0.c3)))AND(rt1.c1)))OR('-1738845478')))AND(rt0.c1)))  NULLS LAST);
SELECT ALL * FROM vt1, rt1, rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL)) ORDER BY COALESCE(INSTR(rt0.c1, vt0.c0), ((((((((x'')AND(rt0.c3)))AND(rt1.c1)))OR('-1738845478')))AND(rt0.c1)))  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CHANGES());
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON (((load_extension(vt1.c0)))=((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1))))) WHERE ('g1Rt0St');
SELECT SUM(count) FROM (SELECT ALL (('g1Rt0St') IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON (((load_extension(vt1.c0)))=((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1))))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON (((load_extension(vt1.c0)))=((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1))))) WHERE ('g1Rt0St');
SELECT SUM(count) FROM (SELECT ALL (('g1Rt0St') IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON (((load_extension(vt1.c0)))=((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1))))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON (((load_extension(vt1.c0)))=((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1))))) WHERE ('g1Rt0St');
SELECT COUNT(*) FROM rt0, vt0, rt1, vt1 WHERE (ABS(DISTINCT (NOT (rt1.c3)))) ORDER BY (((CASE rt1.c1  WHEN vt1.c0 THEN rt0.c2 END))>((rt0.c3 COLLATE RTRIM))) ASC  NULLS LAST, (((0.8674189496275896))==((CAST(rt0.c1 AS TEXT))))  NULLS LAST, (((rt1.c1)+(0.9325979231667124)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (NOT (rt1.c3)))) IS TRUE)  as count FROM rt0, vt0, rt1, vt1 ORDER BY (((CASE rt1.c1  WHEN vt1.c0 THEN rt0.c2 END))>((rt0.c3 COLLATE RTRIM))) ASC  NULLS LAST, (((0.8674189496275896))==((CAST(rt0.c1 AS TEXT))))  NULLS LAST, (((rt1.c1)+(0.9325979231667124)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, rt1, vt1 WHERE (ABS(DISTINCT (NOT (rt1.c3)))) ORDER BY (((CASE rt1.c1  WHEN vt1.c0 THEN rt0.c2 END))>((rt0.c3 COLLATE RTRIM))) ASC  NULLS LAST, (((0.8674189496275896))==((CAST(rt0.c1 AS TEXT))))  NULLS LAST, (((rt1.c1)+(0.9325979231667124)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (NOT (rt1.c3)))) IS TRUE)  as count FROM rt0, vt0, rt1, vt1 ORDER BY (((CASE rt1.c1  WHEN vt1.c0 THEN rt0.c2 END))>((rt0.c3 COLLATE RTRIM))) ASC  NULLS LAST, (((0.8674189496275896))==((CAST(rt0.c1 AS TEXT))))  NULLS LAST, (((rt1.c1)+(0.9325979231667124)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, rt1, vt1 WHERE (ABS(DISTINCT (NOT (rt1.c3)))) ORDER BY (((CASE rt1.c1  WHEN vt1.c0 THEN rt0.c2 END))>((rt0.c3 COLLATE RTRIM))) ASC  NULLS LAST, (((0.8674189496275896))==((CAST(rt0.c1 AS TEXT))))  NULLS LAST, (((rt1.c1)+(0.9325979231667124)) IN ())  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT NULL))|(rt0.c1 COLLATE RTRIM))) ORDER BY (+ (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL))|(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT NULL))|(rt0.c1 COLLATE RTRIM))) ORDER BY (+ (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL))|(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT NULL))|(rt0.c1 COLLATE RTRIM))) ORDER BY (+ (rt0.c1))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((json_quote('747775315'))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((json_quote('747775315'))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((json_quote('747775315'))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((json_quote('747775315'))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((json_quote('747775315'))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(rt0.c0 COLLATE BINARY)))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE RTRIM)AND(rt0.c0 COLLATE BINARY)))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(rt0.c0 COLLATE BINARY)))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE RTRIM)AND(rt0.c0 COLLATE BINARY)))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(rt0.c0 COLLATE BINARY)))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM vt1, rt1, rt0 NATURAL JOIN vt0 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY COLLATE BINARY) ORDER BY CAST(vt0.c0 AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1, rt0 NATURAL JOIN vt0 ORDER BY CAST(vt0.c0 AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1, rt0 NATURAL JOIN vt0 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY COLLATE BINARY) ORDER BY CAST(vt0.c0 AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1, rt0 NATURAL JOIN vt0 ORDER BY CAST(vt0.c0 AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1, rt0 NATURAL JOIN vt0 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY COLLATE BINARY) ORDER BY CAST(vt0.c0 AS BLOB) ASC  NULLS FIRST;
SELECT * FROM vt1 CROSS JOIN vt0 ON (((rt1.c1 IN ())) BETWEEN (rt0.c3) AND ((+ (rt1.c0)))) CROSS JOIN rt1 ON CAST((+ (rt0.c2)) AS NUMERIC) FULL OUTER JOIN rt0 ON '' WHERE ((((rt0.c1 IN (rt1.c1))) NOT BETWEEN ('_8\r') AND (((vt0.c0) NOTNULL)))) ORDER BY highlight(((rt1.c0)AND('-1888074410')), (vt1.c0 IN ()), vt0.c0, CASE rt1.c2  WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt1.c1))) NOT BETWEEN ('_8\r') AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((rt1.c1 IN ())) BETWEEN (rt0.c3) AND ((+ (rt1.c0)))) CROSS JOIN rt1 ON CAST((+ (rt0.c2)) AS NUMERIC) FULL OUTER JOIN rt0 ON '' ORDER BY highlight(((rt1.c0)AND('-1888074410')), (vt1.c0 IN ()), vt0.c0, CASE rt1.c2  WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END) DESC  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN vt0 ON (((rt1.c1 IN ())) BETWEEN (rt0.c3) AND ((+ (rt1.c0)))) CROSS JOIN rt1 ON CAST((+ (rt0.c2)) AS NUMERIC) FULL OUTER JOIN rt0 ON '' WHERE ((((rt0.c1 IN (rt1.c1))) NOT BETWEEN ('_8\r') AND (((vt0.c0) NOTNULL)))) ORDER BY highlight(((rt1.c0)AND('-1888074410')), (vt1.c0 IN ()), vt0.c0, CASE rt1.c2  WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt1.c1))) NOT BETWEEN ('_8\r') AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((rt1.c1 IN ())) BETWEEN (rt0.c3) AND ((+ (rt1.c0)))) CROSS JOIN rt1 ON CAST((+ (rt0.c2)) AS NUMERIC) FULL OUTER JOIN rt0 ON '' ORDER BY highlight(((rt1.c0)AND('-1888074410')), (vt1.c0 IN ()), vt0.c0, CASE rt1.c2  WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END) DESC  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE ((- (CASE WHEN rt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE ((- (CASE WHEN rt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE ((- (CASE WHEN rt1.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND ('1441311621')))))OR('-379742410')));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND ('1441311621')))))OR('-379742410'))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1);
SELECT COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND ('1441311621')))))OR('-379742410')));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND ('1441311621')))))OR('-379742410'))) IS TRUE)  as count FROM rt0, rt1, vt0, vt1);
SELECT COUNT(*) FROM rt0, rt1, vt0, vt1 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND ('1441311621')))))OR('-379742410')));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (0.7353987121761609) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.7353987121761609) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (0.7353987121761609) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.7353987121761609) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (0.7353987121761609) ORDER BY CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((((((0.06518199875144248)OR(rt1.c1)))AND(rt1.c3))))<((x''))));
SELECT SUM(count) FROM (SELECT (((((((((0.06518199875144248)OR(rt1.c1)))AND(rt1.c3))))<((x'')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((0.06518199875144248)OR(rt1.c1)))AND(rt1.c3))))<((x''))));
SELECT SUM(count) FROM (SELECT (((((((((0.06518199875144248)OR(rt1.c1)))AND(rt1.c3))))<((x'')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((0.06518199875144248)OR(rt1.c1)))AND(rt1.c3))))<((x''))));
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))||(((rt0.c0)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))||(((rt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))||(((rt0.c0)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))||(((rt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))||(((rt0.c0)AND(rt0.c2)))));
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((((vt1.c0)=(rt1.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)=(rt1.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, rt1);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((((vt1.c0)=(rt1.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)=(rt1.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, rt1);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((((vt1.c0)=(rt1.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(vt1.c0)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB));
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((rt0.c1) BETWEEN ('') AND (rt0.c0))) BETWEEN (((rt1.c2)<>(rt0.c2))) AND (PRINTF(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN ('') AND (rt0.c0))) BETWEEN (((rt1.c2)<>(rt0.c2))) AND (PRINTF(rt1.c2)))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((rt0.c1) BETWEEN ('') AND (rt0.c0))) BETWEEN (((rt1.c2)<>(rt0.c2))) AND (PRINTF(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN ('') AND (rt0.c0))) BETWEEN (((rt1.c2)<>(rt0.c2))) AND (PRINTF(rt1.c2)))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((rt0.c1) BETWEEN ('') AND (rt0.c0))) BETWEEN (((rt1.c2)<>(rt0.c2))) AND (PRINTF(rt1.c2))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY '~wS*4i0' DESC;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY '~wS*4i0' DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY '~wS*4i0' DESC;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY '~wS*4i0' DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY '~wS*4i0' DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 LEFT OUTER JOIN rt0 ON SQLITE_VERSION() WHERE (((CAST(rt1.c3 AS TEXT)) NOT BETWEEN ((((rt1.c3, vt1.c0, rt1.c3, rt1.c2, rt1.c3))<=((rt0.c1, rt0.c3, rt0.c1, rt0.c0, rt1.c2)))) AND (((vt1.c0)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS TEXT)) NOT BETWEEN ((((rt1.c3, vt1.c0, rt1.c3, rt1.c2, rt1.c3))<=((rt0.c1, rt0.c3, rt0.c1, rt0.c0, rt1.c2)))) AND (((vt1.c0)%(rt0.c1))))) IS TRUE)  as count FROM vt1, vt0, rt1 LEFT OUTER JOIN rt0 ON SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 LEFT OUTER JOIN rt0 ON SQLITE_VERSION() WHERE (((CAST(rt1.c3 AS TEXT)) NOT BETWEEN ((((rt1.c3, vt1.c0, rt1.c3, rt1.c2, rt1.c3))<=((rt0.c1, rt0.c3, rt0.c1, rt0.c0, rt1.c2)))) AND (((vt1.c0)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS TEXT)) NOT BETWEEN ((((rt1.c3, vt1.c0, rt1.c3, rt1.c2, rt1.c3))<=((rt0.c1, rt0.c3, rt0.c1, rt0.c0, rt1.c2)))) AND (((vt1.c0)%(rt0.c1))))) IS TRUE)  as count FROM vt1, vt0, rt1 LEFT OUTER JOIN rt0 ON SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 LEFT OUTER JOIN rt0 ON SQLITE_VERSION() WHERE (((CAST(rt1.c3 AS TEXT)) NOT BETWEEN ((((rt1.c3, vt1.c0, rt1.c3, rt1.c2, rt1.c3))<=((rt0.c1, rt0.c3, rt0.c1, rt0.c0, rt1.c2)))) AND (((vt1.c0)%(rt0.c1)))));
SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY '2028361439'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY '2028361439'  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY '2028361439'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY '2028361439'  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY '2028361439'  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (json_valid(IFNULL(rt1.c3, rt1.c0)));
SELECT SUM(count) FROM (SELECT ((json_valid(IFNULL(rt1.c3, rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (json_valid(IFNULL(rt1.c3, rt1.c0)));
SELECT SUM(count) FROM (SELECT ((json_valid(IFNULL(rt1.c3, rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (json_valid(IFNULL(rt1.c3, rt1.c0)));
SELECT COUNT(*) FROM vt1, vt0, rt0 NATURAL JOIN rt1 WHERE (((((rt0.c0)+(rt0.c1)))!=(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)+(rt0.c1)))<>(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) IS TRUE)  as count FROM vt1, vt0, rt0 NOT INDEXED NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt1, vt0, rt0 NATURAL JOIN rt1 WHERE (((((rt0.c0)+(rt0.c1)))!=(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)+(rt0.c1)))<>(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) IS TRUE)  as count FROM vt1, vt0, rt0 NOT INDEXED NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt1, vt0, rt0 NATURAL JOIN rt1 WHERE (((((rt0.c0)+(rt0.c1)))!=(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2)))));
SELECT * FROM rt1, vt0 WHERE (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 END COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1, rt1, vt0 WHERE ((((rt1.c2 COLLATE NOCASE, (((rt1.c0))<((rt0.c3))), rt0.c2 COLLATE NOCASE))>(((((rt1.c0)) NOT BETWEEN ((rt0.c3)) AND (('c﷒3Yv'))), (((rt1.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE NOCASE, (((rt1.c0))<((rt0.c3))), rt0.c2 COLLATE NOCASE))>(((((rt1.c0)) NOT BETWEEN ((rt0.c3)) AND (('c﷒3Yv'))), (((rt1.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), NULL)))) IS TRUE)  as count FROM rt0, vt1, rt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, rt1, vt0 WHERE ((((rt1.c2 COLLATE NOCASE, (((rt1.c0))<((rt0.c3))), rt0.c2 COLLATE NOCASE))>(((((rt1.c0)) NOT BETWEEN ((rt0.c3)) AND (('c﷒3Yv'))), (((rt1.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 COLLATE NOCASE, (((rt1.c0))<((rt0.c3))), rt0.c2 COLLATE NOCASE))>(((((rt1.c0)) NOT BETWEEN ((rt0.c3)) AND (('c﷒3Yv'))), (((rt1.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), NULL)))) IS TRUE)  as count FROM rt0, vt1, rt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, rt1, vt0 WHERE ((((rt1.c2 COLLATE NOCASE, (((rt1.c0))<((rt0.c3))), rt0.c2 COLLATE NOCASE))>(((((rt1.c0)) NOT BETWEEN ((rt0.c3)) AND (('c﷒3Yv'))), (((rt1.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), NULL))));
SELECT * FROM vt1, vt0, rt0 WHERE (CASE WHEN (((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c2))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c2))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (CASE WHEN (((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c2))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c2))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (CASE WHEN (((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c2))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END  WHEN ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt1.c1 COLLATE NOCASE ELSE 0.12169688482927532 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END  WHEN ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt1.c1 COLLATE NOCASE ELSE 0.12169688482927532 END) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END  WHEN ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt1.c1 COLLATE NOCASE ELSE 0.12169688482927532 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END  WHEN ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt1.c1 COLLATE NOCASE ELSE 0.12169688482927532 END) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END  WHEN ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt1.c1 COLLATE NOCASE ELSE 0.12169688482927532 END);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 AS REAL) COLLATE BINARY) ORDER BY (+ ((rt0.c1 IN ()))) ASC  NULLS LAST, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) NOTNULL), (~ (CAST(-2.32743954E8 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (+ ((rt0.c1 IN ()))) ASC  NULLS LAST, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) NOTNULL), (~ (CAST(-2.32743954E8 AS TEXT))));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 AS REAL) COLLATE BINARY) ORDER BY (+ ((rt0.c1 IN ()))) ASC  NULLS LAST, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) NOTNULL), (~ (CAST(-2.32743954E8 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (+ ((rt0.c1 IN ()))) ASC  NULLS LAST, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) NOTNULL), (~ (CAST(-2.32743954E8 AS TEXT))));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 AS REAL) COLLATE BINARY) ORDER BY (+ ((rt0.c1 IN ()))) ASC  NULLS LAST, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1))) NOTNULL), (~ (CAST(-2.32743954E8 AS TEXT)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((((((((((rt1.c2))==((rt1.c0))))OR(((rt1.c2) IS TRUE))))OR(rt1.c3)))AND(((rt1.c2) IS FALSE))))OR('0.1710625025468958'))) ORDER BY CASE WHEN ((rt1.c3) BETWEEN (vt1.c0) AND (rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE rt1.c2 END DESC;
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c2))==((rt1.c0))))OR(((rt1.c2) IS TRUE))))OR(rt1.c3)))AND(((rt1.c2) IS FALSE))))OR('0.1710625025468958'))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CASE WHEN ((rt1.c3) BETWEEN (vt1.c0) AND (rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE rt1.c2 END DESC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((((((((((rt1.c2))==((rt1.c0))))OR(((rt1.c2) IS TRUE))))OR(rt1.c3)))AND(((rt1.c2) IS FALSE))))OR('0.1710625025468958'))) ORDER BY CASE WHEN ((rt1.c3) BETWEEN (vt1.c0) AND (rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE rt1.c2 END DESC;
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c2))==((rt1.c0))))OR(((rt1.c2) IS TRUE))))OR(rt1.c3)))AND(((rt1.c2) IS FALSE))))OR('0.1710625025468958'))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CASE WHEN ((rt1.c3) BETWEEN (vt1.c0) AND (rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE rt1.c2 END DESC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((((((((((rt1.c2))==((rt1.c0))))OR(((rt1.c2) IS TRUE))))OR(rt1.c3)))AND(((rt1.c2) IS FALSE))))OR('0.1710625025468958'))) ORDER BY CASE WHEN ((rt1.c3) BETWEEN (vt1.c0) AND (rt1.c2)) THEN CAST(rt1.c1 AS REAL) ELSE rt1.c2 END DESC;
SELECT COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN vt1 ON ((rt1.c2) NOT BETWEEN ((((rt0.c0, rt1.c0, rt0.c2))=((vt0.c0, rt1.c2, x'')))) AND (LIKELY(rt1.c2))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN rt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN vt1 ON ((rt1.c2) NOT BETWEEN ((((rt0.c0, rt1.c0, rt0.c2))=((vt0.c0, rt1.c2, x'')))) AND (LIKELY(rt1.c2))));
SELECT COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN vt1 ON ((rt1.c2) NOT BETWEEN ((((rt0.c0, rt1.c0, rt0.c2))=((vt0.c0, rt1.c2, x'')))) AND (LIKELY(rt1.c2))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN rt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN vt1 ON ((rt1.c2) NOT BETWEEN ((((rt0.c0, rt1.c0, rt0.c2))=((vt0.c0, rt1.c2, x'')))) AND (LIKELY(rt1.c2))));
SELECT COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON (rt0.c1 IN ()) RIGHT OUTER JOIN vt1 ON ((rt1.c2) NOT BETWEEN ((((rt0.c0, rt1.c0, rt0.c2))=((vt0.c0, rt1.c2, x'')))) AND (LIKELY(rt1.c2))) WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((rt1.c0)||(NULL)) IN ()) WHERE (((((rt1.c1) BETWEEN ('1400484388') AND (rt1.c1)))*(CAST(rt1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN ('1400484388') AND (rt1.c1)))*(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((rt1.c0)||(NULL)) IN ()));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((rt1.c0)||(NULL)) IN ()) WHERE (((((rt1.c1) BETWEEN ('1400484388') AND (rt1.c1)))*(CAST(rt1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN ('1400484388') AND (rt1.c1)))*(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((rt1.c0)||(NULL)) IN ()));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((rt1.c0)||(NULL)) IN ()) WHERE (((((rt1.c1) BETWEEN ('1400484388') AND (rt1.c1)))*(CAST(rt1.c2 AS TEXT))));
SELECT * FROM rt0 WHERE (((((((x'4d78')LIKE(rt0.c1)))AND((rt0.c1 IN ()))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((x'4d78')LIKE(rt0.c1)))AND((rt0.c1 IN ()))))OR(x''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((x'4d78')LIKE(rt0.c1)))AND((rt0.c1 IN ()))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((x'4d78')LIKE(rt0.c1)))AND((rt0.c1 IN ()))))OR(x''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((x'4d78')LIKE(rt0.c1)))AND((rt0.c1 IN ()))))OR(x'')));
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0)) WHERE (((CAST(rt0.c1 AS NUMERIC)) IS FALSE)) ORDER BY ((((rt0.c1) NOT BETWEEN ('494681378') AND (rt0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0)) ORDER BY ((((rt0.c1) NOT BETWEEN ('494681378') AND (rt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0)) WHERE (((CAST(rt0.c1 AS NUMERIC)) IS FALSE)) ORDER BY ((((rt0.c1) NOT BETWEEN ('494681378') AND (rt0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0)) ORDER BY ((((rt0.c1) NOT BETWEEN ('494681378') AND (rt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0)) WHERE (((CAST(rt0.c1 AS NUMERIC)) IS FALSE)) ORDER BY ((((rt0.c1) NOT BETWEEN ('494681378') AND (rt0.c1))) ISNULL);
SELECT COUNT(*) FROM vt1, rt1 WHERE (rt1.c3) ORDER BY CASE WHEN ((((x'e3fa')OR(rt1.c0)))AND(rt1.c0)) THEN TRIM(DISTINCT rt1.c1) WHEN ((rt1.c1)==(NULL)) THEN (((rt1.c2)) BETWEEN (('-1028545810')) AND ((rt1.c0))) WHEN rt1.c1 THEN x'' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt1, rt1 ORDER BY CASE WHEN ((((x'e3fa')OR(rt1.c0)))AND(rt1.c0)) THEN TRIM(DISTINCT rt1.c1) WHEN ((rt1.c1)=(NULL)) THEN (((rt1.c2)) BETWEEN (('-1028545810')) AND ((rt1.c0))) WHEN rt1.c1 THEN x'' END  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (rt1.c3) ORDER BY CASE WHEN ((((x'e3fa')OR(rt1.c0)))AND(rt1.c0)) THEN TRIM(DISTINCT rt1.c1) WHEN ((rt1.c1)==(NULL)) THEN (((rt1.c2)) BETWEEN (('-1028545810')) AND ((rt1.c0))) WHEN rt1.c1 THEN x'' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt1, rt1 ORDER BY CASE WHEN ((((x'e3fa')OR(rt1.c0)))AND(rt1.c0)) THEN TRIM(DISTINCT rt1.c1) WHEN ((rt1.c1)=(NULL)) THEN (((rt1.c2)) BETWEEN (('-1028545810')) AND ((rt1.c0))) WHEN rt1.c1 THEN x'' END  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (rt1.c3) ORDER BY CASE WHEN ((((x'e3fa')OR(rt1.c0)))AND(rt1.c0)) THEN TRIM(DISTINCT rt1.c1) WHEN ((rt1.c1)==(NULL)) THEN (((rt1.c2)) BETWEEN (('-1028545810')) AND ((rt1.c0))) WHEN rt1.c1 THEN x'' END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (((rt0.c3)>>(rt0.c0))))) ORDER BY CASE ((rt0.c1)=(rt1.c3))  WHEN (~ (rt0.c1)) THEN rt1.c1 COLLATE NOCASE ELSE ((rt1.c3) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3)>>(rt0.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CASE ((rt0.c1)==(rt1.c3))  WHEN (~ (rt0.c1)) THEN rt1.c1 COLLATE NOCASE ELSE ((rt1.c3) IS FALSE) END DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (((rt0.c3)>>(rt0.c0))))) ORDER BY CASE ((rt0.c1)=(rt1.c3))  WHEN (~ (rt0.c1)) THEN rt1.c1 COLLATE NOCASE ELSE ((rt1.c3) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3)>>(rt0.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CASE ((rt0.c1)==(rt1.c3))  WHEN (~ (rt0.c1)) THEN rt1.c1 COLLATE NOCASE ELSE ((rt1.c3) IS FALSE) END DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (((rt0.c3)>>(rt0.c0))))) ORDER BY CASE ((rt0.c1)=(rt1.c3))  WHEN (~ (rt0.c1)) THEN rt1.c1 COLLATE NOCASE ELSE ((rt1.c3) IS FALSE) END DESC;
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE ((((rt1.c0, vt0.c0, rt1.c3)) BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((x'1d2e8d4f'))), ((((vt1.c0)AND(rt1.c0)))OR(rt1.c1)), ((((((((rt1.c3)OR(vt0.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c0)))) AND ((((rt1.c2)*(rt1.c1)), CAST(rt1.c0 AS BLOB), 0.7802697523838348)))) ORDER BY CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 END AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, vt0.c0, rt1.c3)) BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((x'1d2e8d4f'))), ((((vt1.c0)AND(rt1.c0)))OR(rt1.c1)), ((((((((rt1.c3)OR(vt0.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c0)))) AND ((((rt1.c2)*(rt1.c1)), CAST(rt1.c0 AS BLOB), 0.7802697523838348)))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 END AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE ((((rt1.c0, vt0.c0, rt1.c3)) BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((x'1d2e8d4f'))), ((((vt1.c0)AND(rt1.c0)))OR(rt1.c1)), ((((((((rt1.c3)OR(vt0.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c0)))) AND ((((rt1.c2)*(rt1.c1)), CAST(rt1.c0 AS BLOB), 0.7802697523838348)))) ORDER BY CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 END AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, vt0.c0, rt1.c3)) BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((x'1d2e8d4f'))), ((((vt1.c0)AND(rt1.c0)))OR(rt1.c1)), ((((((((rt1.c3)OR(vt0.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c0)))) AND ((((rt1.c2)*(rt1.c1)), CAST(rt1.c0 AS BLOB), 0.7802697523838348)))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 END AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE ((((rt1.c0, vt0.c0, rt1.c3)) BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((x'1d2e8d4f'))), ((((vt1.c0)AND(rt1.c0)))OR(rt1.c1)), ((((((((rt1.c3)OR(vt0.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c0)))) AND ((((rt1.c2)*(rt1.c1)), CAST(rt1.c0 AS BLOB), 0.7802697523838348)))) ORDER BY CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 END AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((((((rt0.c3)AND(rt0.c0)))AND(rt1.c0))) BETWEEN (((rt1.c0)-(rt1.c3))) AND ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)AND(rt0.c0)))AND(rt1.c0))) BETWEEN (((rt1.c0)-(rt1.c3))) AND ((x'' IN ())))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((((((rt0.c3)AND(rt0.c0)))AND(rt1.c0))) BETWEEN (((rt1.c0)-(rt1.c3))) AND ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)AND(rt0.c0)))AND(rt1.c0))) BETWEEN (((rt1.c0)-(rt1.c3))) AND ((x'' IN ())))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((((((rt0.c3)AND(rt0.c0)))AND(rt1.c0))) BETWEEN (((rt1.c0)-(rt1.c3))) AND ((x'' IN ()))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE ((+ ((rt1.c0 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c0 IN (rt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE ((+ ((rt1.c0 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c0 IN (rt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE ((+ ((rt1.c0 IN (rt1.c0)))));
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (LOWER(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c3)))) ORDER BY ((CASE rt1.c2  WHEN rt0.c2 THEN rt0.c3 END)*(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c3)))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY ((CASE rt1.c2  WHEN rt0.c2 THEN rt0.c3 END)*(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (LOWER(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c3)))) ORDER BY ((CASE rt1.c2  WHEN rt0.c2 THEN rt0.c3 END)*(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c3)))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY ((CASE rt1.c2  WHEN rt0.c2 THEN rt0.c3 END)*(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (LOWER(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c3)))) ORDER BY ((CASE rt1.c2  WHEN rt0.c2 THEN rt0.c3 END)*(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST((- ('822367098')) AS INTEGER) CROSS JOIN rt0 ON ((((rt1.c0)LIKE(rt1.c2))) NOT BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(rt1.c3))) AND ((-2094299076 IN ()))) CROSS JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM WHERE (((((rt0.c2)<=(0.8578229929995573))) NOTNULL)) ORDER BY ((-1.918358318E9) NOT BETWEEN (LAST_INSERT_ROWID()) AND ((- (rt0.c3)))) ASC  NULLS FIRST, CASE rt1.c0 COLLATE NOCASE  WHEN ((vt1.c0)AND(rt0.c3)) THEN ((rt1.c1) IS TRUE) ELSE CAST(rt1.c2 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(0.8578229929995573))) NOTNULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST((- ('822367098')) AS INTEGER) CROSS JOIN rt0 ON ((((rt1.c0)LIKE(rt1.c2))) NOT BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(rt1.c3))) AND ((-2094299076 IN ()))) CROSS JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM ORDER BY ((-1.918358318E9) NOT BETWEEN (LAST_INSERT_ROWID()) AND ((- (rt0.c3)))) ASC  NULLS FIRST, CASE rt1.c0 COLLATE NOCASE  WHEN ((vt1.c0)AND(rt0.c3)) THEN ((rt1.c1) IS TRUE) ELSE CAST(rt1.c2 AS BLOB) END);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST((- ('822367098')) AS INTEGER) CROSS JOIN rt0 ON ((((rt1.c0)LIKE(rt1.c2))) NOT BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(rt1.c3))) AND ((-2094299076 IN ()))) CROSS JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM WHERE (((((rt0.c2)<=(0.8578229929995573))) NOTNULL)) ORDER BY ((-1.918358318E9) NOT BETWEEN (LAST_INSERT_ROWID()) AND ((- (rt0.c3)))) ASC  NULLS FIRST, CASE rt1.c0 COLLATE NOCASE  WHEN ((vt1.c0)AND(rt0.c3)) THEN ((rt1.c1) IS TRUE) ELSE CAST(rt1.c2 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(0.8578229929995573))) NOTNULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST((- ('822367098')) AS INTEGER) CROSS JOIN rt0 ON ((((rt1.c0)LIKE(rt1.c2))) NOT BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(rt1.c3))) AND ((-2094299076 IN ()))) CROSS JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM ORDER BY ((-1.918358318E9) NOT BETWEEN (LAST_INSERT_ROWID()) AND ((- (rt0.c3)))) ASC  NULLS FIRST, CASE rt1.c0 COLLATE NOCASE  WHEN ((vt1.c0)AND(rt0.c3)) THEN ((rt1.c1) IS TRUE) ELSE CAST(rt1.c2 AS BLOB) END);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST((- ('822367098')) AS INTEGER) CROSS JOIN rt0 ON ((((rt1.c0)LIKE(rt1.c2))) NOT BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(rt1.c3))) AND ((-2094299076 IN ()))) CROSS JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM WHERE (((((rt0.c2)<=(0.8578229929995573))) NOTNULL)) ORDER BY ((-1.918358318E9) NOT BETWEEN (LAST_INSERT_ROWID()) AND ((- (rt0.c3)))) ASC  NULLS FIRST, CASE rt1.c0 COLLATE NOCASE  WHEN ((vt1.c0)AND(rt0.c3)) THEN ((rt1.c1) IS TRUE) ELSE CAST(rt1.c2 AS BLOB) END;
SELECT * FROM vt1, vt0, rt0, rt1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c0) AND ('-2056991549'))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (rt1.c0) AND ('-2056991549'))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, rt0, rt1);
SELECT * FROM vt1, vt0, rt0, rt1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c0) AND ('-2056991549'))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (rt1.c0) AND ('-2056991549'))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, rt0, rt1);
SELECT * FROM vt1, vt0, rt0, rt1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c0) AND ('-2056991549'))) ISNULL));
SELECT ALL * FROM rt1, vt0, rt0, vt1 WHERE ((-1783658579 IN (CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END, (- (rt0.c3))))) ORDER BY CASE WHEN json_quote(rt1.c1) THEN ((((rt1.c3)AND(rt0.c3)))AND(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((-1783658579 IN (CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END, (- (rt0.c3))))) IS TRUE)  as count FROM rt1, vt0, rt0, vt1 ORDER BY CASE WHEN json_quote(rt1.c1) THEN ((((rt1.c3)AND(rt0.c3)))AND(vt1.c0)) END);
SELECT ALL * FROM rt1, vt0, rt0, vt1 WHERE ((-1783658579 IN (CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END, (- (rt0.c3))))) ORDER BY CASE WHEN json_quote(rt1.c1) THEN ((((rt1.c3)AND(rt0.c3)))AND(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((-1783658579 IN (CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END, (- (rt0.c3))))) IS TRUE)  as count FROM rt1, vt0, rt0, vt1 ORDER BY CASE WHEN json_quote(rt1.c1) THEN ((((rt1.c3)AND(rt0.c3)))AND(vt1.c0)) END);
SELECT ALL * FROM rt1, vt0, rt0, vt1 WHERE ((-1783658579 IN (CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END, (- (rt0.c3))))) ORDER BY CASE WHEN json_quote(rt1.c1) THEN ((((rt1.c3)AND(rt0.c3)))AND(vt1.c0)) END;
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL)) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL)) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) ISNULL)) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c3) ORDER BY (((rt1.c1 IN (rt1.c2, rt0.c2))) NOT BETWEEN ((rt1.c1 IN ())) AND (((rt1.c3)<=(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (((rt1.c1 IN (rt1.c2, rt0.c2))) NOT BETWEEN ((rt1.c1 IN ())) AND (((rt1.c3)<=(rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c3) ORDER BY (((rt1.c1 IN (rt1.c2, rt0.c2))) NOT BETWEEN ((rt1.c1 IN ())) AND (((rt1.c3)<=(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (((rt1.c1 IN (rt1.c2, rt0.c2))) NOT BETWEEN ((rt1.c1 IN ())) AND (((rt1.c3)<=(rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c3) ORDER BY (((rt1.c1 IN (rt1.c2, rt0.c2))) NOT BETWEEN ((rt1.c1 IN ())) AND (((rt1.c3)<=(rt0.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt0.c0)|(rt0.c2))))>=((x'51ff')))) ORDER BY (((rt0.c0 IN ()))>((((vt1.c0))==((rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)|(rt0.c2))))>=((x'51ff')))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((rt0.c0 IN ()))>((((vt1.c0))==((rt0.c3))))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt0.c0)|(rt0.c2))))>=((x'51ff')))) ORDER BY (((rt0.c0 IN ()))>((((vt1.c0))==((rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)|(rt0.c2))))>=((x'51ff')))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((rt0.c0 IN ()))>((((vt1.c0))==((rt0.c3))))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt0.c0)|(rt0.c2))))>=((x'51ff')))) ORDER BY (((rt0.c0 IN ()))>((((vt1.c0))==((rt0.c3)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)/(vt1.c0)))<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)/(vt1.c0)))<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)/(vt1.c0)))<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)/(vt1.c0)))<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)/(vt1.c0)))<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON CAST((+ (rt0.c0)) AS NUMERIC) WHERE (CASE ((rt0.c1)AND(rt0.c3))  WHEN (((vt1.c0))>=((rt0.c1))) THEN rt0.c3 COLLATE RTRIM ELSE NULL END) ORDER BY CASE CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END  WHEN vt1.c0 THEN (((rt0.c0, rt0.c2, rt0.c3))!=((rt0.c0, vt1.c0, rt0.c3))) WHEN (rt0.c1 IN ()) THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END WHEN ((rt0.c2)/(rt0.c1)) THEN (rt0.c0 IN ()) ELSE '' END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)AND(rt0.c3))  WHEN (((vt1.c0))>=((rt0.c1))) THEN rt0.c3 COLLATE RTRIM ELSE NULL END) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST((+ (rt0.c0)) AS NUMERIC) ORDER BY CASE CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END  WHEN vt1.c0 THEN (((rt0.c0, rt0.c2, rt0.c3))!=((rt0.c0, vt1.c0, rt0.c3))) WHEN (rt0.c1 IN ()) THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END WHEN ((rt0.c2)/(rt0.c1)) THEN (rt0.c0 IN ()) ELSE '' END ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON CAST((+ (rt0.c0)) AS NUMERIC) WHERE (CASE ((rt0.c1)AND(rt0.c3))  WHEN (((vt1.c0))>=((rt0.c1))) THEN rt0.c3 COLLATE RTRIM ELSE NULL END) ORDER BY CASE CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END  WHEN vt1.c0 THEN (((rt0.c0, rt0.c2, rt0.c3))!=((rt0.c0, vt1.c0, rt0.c3))) WHEN (rt0.c1 IN ()) THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END WHEN ((rt0.c2)/(rt0.c1)) THEN (rt0.c0 IN ()) ELSE '' END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)AND(rt0.c3))  WHEN (((vt1.c0))>=((rt0.c1))) THEN rt0.c3 COLLATE RTRIM ELSE NULL END) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST((+ (rt0.c0)) AS NUMERIC) ORDER BY CASE CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END  WHEN vt1.c0 THEN (((rt0.c0, rt0.c2, rt0.c3))!=((rt0.c0, vt1.c0, rt0.c3))) WHEN (rt0.c1 IN ()) THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END WHEN ((rt0.c2)/(rt0.c1)) THEN (rt0.c0 IN ()) ELSE '' END ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON CAST((+ (rt0.c0)) AS NUMERIC) WHERE (CASE ((rt0.c1)AND(rt0.c3))  WHEN (((vt1.c0))>=((rt0.c1))) THEN rt0.c3 COLLATE RTRIM ELSE NULL END) ORDER BY CASE CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END  WHEN vt1.c0 THEN (((rt0.c0, rt0.c2, rt0.c3))!=((rt0.c0, vt1.c0, rt0.c3))) WHEN (rt0.c1 IN ()) THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END WHEN ((rt0.c2)/(rt0.c1)) THEN (rt0.c0 IN ()) ELSE '' END ASC;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN -1436921817 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'qf4%p[lQ' END)&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((vt0.c0 COLLATE BINARY)<>((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN -1436921817 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'qf4%p[lQ' END)&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)<>((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN -1436921817 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'qf4%p[lQ' END)&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((vt0.c0 COLLATE BINARY)<>((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN -1436921817 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'qf4%p[lQ' END)&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)<>((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN -1436921817 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 'qf4%p[lQ' END)&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((vt0.c0 COLLATE BINARY)<>((vt0.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE (CASE ((rt0.c3)>>(rt0.c0))  WHEN rt1.c3 COLLATE NOCASE THEN DATETIME(rt1.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0) END) ORDER BY '-1799537412' DESC  NULLS LAST, LIKE((((rt1.c3)) NOT BETWEEN (('')) AND ((rt0.c0))), ((rt0.c2)>=(rt1.c3)), '0')  NULLS FIRST, CASE WHEN ((((x'')OR(rt0.c0)))AND(rt1.c3)) THEN json_valid(rt1.c2) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3)>>(rt0.c0))  WHEN rt1.c3 COLLATE NOCASE THEN DATETIME(rt1.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0) END) IS TRUE)  as count FROM rt1, vt0, vt1, rt0 ORDER BY '-1799537412' DESC  NULLS LAST, LIKE((((rt1.c3)) NOT BETWEEN (('')) AND ((rt0.c0))), ((rt0.c2)>=(rt1.c3)), '0')  NULLS FIRST, CASE WHEN ((((x'')OR(rt0.c0)))AND(rt1.c3)) THEN json_valid(rt1.c2) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE (CASE ((rt0.c3)>>(rt0.c0))  WHEN rt1.c3 COLLATE NOCASE THEN DATETIME(rt1.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0) END) ORDER BY '-1799537412' DESC  NULLS LAST, LIKE((((rt1.c3)) NOT BETWEEN (('')) AND ((rt0.c0))), ((rt0.c2)>=(rt1.c3)), '0')  NULLS FIRST, CASE WHEN ((((x'')OR(rt0.c0)))AND(rt1.c3)) THEN json_valid(rt1.c2) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3)>>(rt0.c0))  WHEN rt1.c3 COLLATE NOCASE THEN DATETIME(rt1.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0) END) IS TRUE)  as count FROM rt1, vt0, vt1, rt0 ORDER BY '-1799537412' DESC  NULLS LAST, LIKE((((rt1.c3)) NOT BETWEEN (('')) AND ((rt0.c0))), ((rt0.c2)>=(rt1.c3)), '0')  NULLS FIRST, CASE WHEN ((((x'')OR(rt0.c0)))AND(rt1.c3)) THEN json_valid(rt1.c2) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, rt0 WHERE (CASE ((rt0.c3)>>(rt0.c0))  WHEN rt1.c3 COLLATE NOCASE THEN DATETIME(rt1.c1, rt0.c2, vt1.c0, rt0.c3, vt0.c0) END) ORDER BY '-1799537412' DESC  NULLS LAST, LIKE((((rt1.c3)) NOT BETWEEN (('')) AND ((rt0.c0))), ((rt0.c2)>=(rt1.c3)), '0')  NULLS FIRST, CASE WHEN ((((x'')OR(rt0.c0)))AND(rt1.c3)) THEN json_valid(rt1.c2) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON IFNULL(DISTINCT rt0.c3, vt0.c0) COLLATE RTRIM INNER JOIN vt0 ON vt0.c0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON IFNULL(DISTINCT rt0.c3, vt0.c0) COLLATE RTRIM INNER JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON IFNULL(DISTINCT rt0.c3, vt0.c0) COLLATE RTRIM INNER JOIN vt0 ON vt0.c0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON IFNULL(DISTINCT rt0.c3, vt0.c0) COLLATE RTRIM INNER JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON IFNULL(DISTINCT rt0.c3, vt0.c0) COLLATE RTRIM INNER JOIN vt0 ON vt0.c0 WHERE (rt0.c1);
SELECT * FROM vt0, rt0, rt1, vt1 WHERE (0.4474728914929258) ORDER BY HEX(((x'1969')OR('jQ爾s{F(螻'))) ASC;
SELECT SUM(count) FROM (SELECT ((0.4474728914929258) IS TRUE)  as count FROM vt0, rt0, rt1, vt1 ORDER BY HEX(((x'1969')OR('jQ爾s{F(螻'))) ASC);
SELECT * FROM vt0, rt0, rt1, vt1 WHERE (0.4474728914929258) ORDER BY HEX(((x'1969')OR('jQ爾s{F(螻'))) ASC;
SELECT SUM(count) FROM (SELECT ((0.4474728914929258) IS TRUE)  as count FROM vt0, rt0, rt1, vt1 ORDER BY HEX(((x'1969')OR('jQ爾s{F(螻'))) ASC);
SELECT * FROM vt0, rt0, rt1, vt1 WHERE (0.4474728914929258) ORDER BY HEX(((x'1969')OR('jQ爾s{F(螻'))) ASC;
SELECT ALL * FROM vt0, vt1, rt1 WHERE (vt0.c0) ORDER BY ((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY ((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0, vt1, rt1 WHERE (vt0.c0) ORDER BY ((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY ((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0, vt1, rt1 WHERE (vt0.c0) ORDER BY ((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE RTRIM ASC;
SELECT * FROM rt0, rt1 WHERE (rt1.c2) ORDER BY 1810455302 DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, rt1 ORDER BY 1810455302 DESC);
SELECT * FROM rt0, rt1 WHERE (rt1.c2) ORDER BY 1810455302 DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, rt1 ORDER BY 1810455302 DESC);
SELECT * FROM rt0, rt1 WHERE ((((((rt0.c3)IS NOT(rt0.c3))))>=((rt0.c2)))) ORDER BY (((((((((((rt0.c0))<=((rt0.c3))))AND(((rt1.c2) IS FALSE))))AND(SQLITE_COMPILEOPTION_USED(rt1.c3))))OR(((rt0.c0)>(rt0.c3)))))OR(LOWER(rt0.c1))), ((((((x'b285', rt0.c1, rt1.c3)) BETWEEN ((x'', rt0.c3, rt0.c2)) AND ((rt1.c0, rt0.c0, rt1.c0))), UPPER(DISTINCT rt1.c2), (NOT (rt1.c2))))<>((UPPER(DISTINCT rt1.c2), ((rt0.c0)=(rt1.c1)), (rt1.c1 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)IS NOT(rt0.c3))))>=((rt0.c2)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((((((((rt0.c0))<=((rt0.c3))))AND(((rt1.c2) IS FALSE))))AND(SQLITE_COMPILEOPTION_USED(rt1.c3))))OR(((rt0.c0)>(rt0.c3)))))OR(LOWER(rt0.c1))), ((((((x'b285', rt0.c1, rt1.c3)) BETWEEN ((x'', rt0.c3, rt0.c2)) AND ((rt1.c0, rt0.c0, rt1.c0))), UPPER(DISTINCT rt1.c2), (NOT (rt1.c2))))<>((UPPER(DISTINCT rt1.c2), ((rt0.c0)==(rt1.c1)), (rt1.c1 IN ())))) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((((rt0.c3)IS NOT(rt0.c3))))>=((rt0.c2)))) ORDER BY (((((((((((rt0.c0))<=((rt0.c3))))AND(((rt1.c2) IS FALSE))))AND(SQLITE_COMPILEOPTION_USED(rt1.c3))))OR(((rt0.c0)>(rt0.c3)))))OR(LOWER(rt0.c1))), ((((((x'b285', rt0.c1, rt1.c3)) BETWEEN ((x'', rt0.c3, rt0.c2)) AND ((rt1.c0, rt0.c0, rt1.c0))), UPPER(DISTINCT rt1.c2), (NOT (rt1.c2))))<>((UPPER(DISTINCT rt1.c2), ((rt0.c0)=(rt1.c1)), (rt1.c1 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)IS NOT(rt0.c3))))>=((rt0.c2)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((((((((rt0.c0))<=((rt0.c3))))AND(((rt1.c2) IS FALSE))))AND(SQLITE_COMPILEOPTION_USED(rt1.c3))))OR(((rt0.c0)>(rt0.c3)))))OR(LOWER(rt0.c1))), ((((((x'b285', rt0.c1, rt1.c3)) BETWEEN ((x'', rt0.c3, rt0.c2)) AND ((rt1.c0, rt0.c0, rt1.c0))), UPPER(DISTINCT rt1.c2), (NOT (rt1.c2))))<>((UPPER(DISTINCT rt1.c2), ((rt0.c0)==(rt1.c1)), (rt1.c1 IN ())))) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((((rt0.c3)IS NOT(rt0.c3))))>=((rt0.c2)))) ORDER BY (((((((((((rt0.c0))<=((rt0.c3))))AND(((rt1.c2) IS FALSE))))AND(SQLITE_COMPILEOPTION_USED(rt1.c3))))OR(((rt0.c0)>(rt0.c3)))))OR(LOWER(rt0.c1))), ((((((x'b285', rt0.c1, rt1.c3)) BETWEEN ((x'', rt0.c3, rt0.c2)) AND ((rt1.c0, rt0.c0, rt1.c0))), UPPER(DISTINCT rt1.c2), (NOT (rt1.c2))))<>((UPPER(DISTINCT rt1.c2), ((rt0.c0)=(rt1.c1)), (rt1.c1 IN ())))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1, vt1, rt0 WHERE (NULL) ORDER BY x'a135' DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt1, vt1, rt0 ORDER BY x'a135' DESC);
SELECT ALL * FROM vt0, rt1, vt1, rt0 WHERE (NULL) ORDER BY x'a135' DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt1, vt1, rt0 ORDER BY x'a135' DESC);
SELECT ALL * FROM vt0, rt1, vt1, rt0 WHERE (NULL) ORDER BY x'a135' DESC;
SELECT * FROM rt0, vt0, rt1 WHERE (((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c1)))GLOB(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c1)))GLOB(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c1)))GLOB(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c1)))GLOB(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (((((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c1)))GLOB(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((-2119872165)/(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((-2119872165)/(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((-2119872165)/(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((-2119872165)/(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((-2119872165)/(rt0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))<((rt0.c2, rt0.c0, rt0.c2)))) BETWEEN ((((rt0.c3, rt0.c2, rt0.c3))<=((rt0.c3, rt0.c2, rt0.c0)))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, rt0.c2))<((rt0.c2, rt0.c0, rt0.c2)))) BETWEEN ((((rt0.c3, rt0.c2, rt0.c3))<=((rt0.c3, rt0.c2, rt0.c0)))) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))<((rt0.c2, rt0.c0, rt0.c2)))) BETWEEN ((((rt0.c3, rt0.c2, rt0.c3))<=((rt0.c3, rt0.c2, rt0.c0)))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, rt0.c2))<((rt0.c2, rt0.c0, rt0.c2)))) BETWEEN ((((rt0.c3, rt0.c2, rt0.c3))<=((rt0.c3, rt0.c2, rt0.c0)))) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))<((rt0.c2, rt0.c0, rt0.c2)))) BETWEEN ((((rt0.c3, rt0.c2, rt0.c3))<=((rt0.c3, rt0.c2, rt0.c0)))) AND (rt0.c0)));
SELECT * FROM rt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (x'');
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 END COLLATE NOCASE WHERE ((((((rt0.c1 IN ()))AND(CAST(rt0.c2 AS TEXT))))OR(((x'')LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(CAST(rt0.c2 AS TEXT))))OR(((x'')LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 END COLLATE NOCASE WHERE ((((((rt0.c1 IN ()))AND(CAST(rt0.c2 AS TEXT))))OR(((x'')LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(CAST(rt0.c2 AS TEXT))))OR(((x'')LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 END COLLATE NOCASE WHERE ((((((rt0.c1 IN ()))AND(CAST(rt0.c2 AS TEXT))))OR(((x'')LIKE(rt0.c1)))));
SELECT ALL * FROM vt0, vt1 WHERE ((~ (vt0.c0))) ORDER BY ((vt1.c0 COLLATE RTRIM) IS FALSE) DESC, ((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) IS FALSE) DESC, ((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((+ (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (vt0.c0))) ORDER BY ((vt1.c0 COLLATE RTRIM) IS FALSE) DESC, ((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) IS FALSE) DESC, ((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((+ (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (vt0.c0))) ORDER BY ((vt1.c0 COLLATE RTRIM) IS FALSE) DESC, ((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((+ (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0, UNICODE(vt0.c0), json_remove(vt0.c0, vt0.c0)))!=(((- (vt0.c0)), ((vt1.c0)LIKE(vt0.c0)), 0.058162607399657174))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, UNICODE(vt0.c0), json_remove(vt0.c0, vt0.c0)))!=(((- (vt0.c0)), ((vt1.c0)LIKE(vt0.c0)), 0.058162607399657174)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0, UNICODE(vt0.c0), json_remove(vt0.c0, vt0.c0)))!=(((- (vt0.c0)), ((vt1.c0)LIKE(vt0.c0)), 0.058162607399657174))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, UNICODE(vt0.c0), json_remove(vt0.c0, vt0.c0)))!=(((- (vt0.c0)), ((vt1.c0)LIKE(vt0.c0)), 0.058162607399657174)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0, UNICODE(vt0.c0), json_remove(vt0.c0, vt0.c0)))!=(((- (vt0.c0)), ((vt1.c0)LIKE(vt0.c0)), 0.058162607399657174))));
SELECT ALL * FROM rt1, vt0 WHERE (HEX(((rt1.c3)>=(rt1.c2)))) ORDER BY ((((rt1.c1) NOT NULL)) NOT NULL) DESC, ((((((((CAST(rt1.c2 AS REAL))OR(((rt1.c2) ISNULL))))AND(rt1.c0 COLLATE NOCASE)))AND((((rt1.c1))<((rt1.c3))))))AND((- (rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt1.c3)>=(rt1.c2)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c1) NOT NULL)) NOT NULL) DESC, ((((((((CAST(rt1.c2 AS REAL))OR(((rt1.c2) ISNULL))))AND(rt1.c0 COLLATE NOCASE)))AND((((rt1.c1))<((rt1.c3))))))AND((- (rt1.c3)))) DESC);
SELECT ALL * FROM rt1, vt0 WHERE (HEX(((rt1.c3)>=(rt1.c2)))) ORDER BY ((((rt1.c1) NOT NULL)) NOT NULL) DESC, ((((((((CAST(rt1.c2 AS REAL))OR(((rt1.c2) ISNULL))))AND(rt1.c0 COLLATE NOCASE)))AND((((rt1.c1))<((rt1.c3))))))AND((- (rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt1.c3)>=(rt1.c2)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c1) NOT NULL)) NOT NULL) DESC, ((((((((CAST(rt1.c2 AS REAL))OR(((rt1.c2) ISNULL))))AND(rt1.c0 COLLATE NOCASE)))AND((((rt1.c1))<((rt1.c3))))))AND((- (rt1.c3)))) DESC);
SELECT ALL * FROM rt1, vt0 WHERE (HEX(((rt1.c3)>=(rt1.c2)))) ORDER BY ((((rt1.c1) NOT NULL)) NOT NULL) DESC, ((((((((CAST(rt1.c2 AS REAL))OR(((rt1.c2) ISNULL))))AND(rt1.c0 COLLATE NOCASE)))AND((((rt1.c1))<((rt1.c3))))))AND((- (rt1.c3)))) DESC;
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c1) NOTNULL) IN ('0.8552079657526745', ((NULL)OR(rt1.c0))))) ORDER BY CAST(CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE vt0.c0 END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOTNULL) IN ('0.8552079657526745', ((NULL)OR(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE vt0.c0 END AS INTEGER) DESC);
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c1) NOTNULL) IN ('0.8552079657526745', ((NULL)OR(rt1.c0))))) ORDER BY CAST(CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE vt0.c0 END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOTNULL) IN ('0.8552079657526745', ((NULL)OR(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE vt0.c0 END AS INTEGER) DESC);
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c1) NOTNULL) IN ('0.8552079657526745', ((NULL)OR(rt1.c0))))) ORDER BY CAST(CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE vt0.c0 END AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((+ (NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((+ (NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((+ (NULL)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)<<(NULLIF(rt0.c3, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<<(NULLIF(rt0.c3, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)<<(NULLIF(rt0.c3, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<<(NULLIF(rt0.c3, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)<<(NULLIF(rt0.c3, rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((rt0.c1 IN (rt0.c0)) AS TEXT)) ORDER BY (((((((rt0.c2, rt0.c0, rt0.c3))<=((vt0.c0, rt0.c0, vt0.c0))))AND(((rt0.c1)/(rt0.c3)))))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((rt0.c2, rt0.c0, rt0.c3))<=((vt0.c0, rt0.c0, vt0.c0))))AND(((rt0.c1)/(rt0.c3)))))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((rt0.c1 IN (rt0.c0)) AS TEXT)) ORDER BY (((((((rt0.c2, rt0.c0, rt0.c3))<=((vt0.c0, rt0.c0, vt0.c0))))AND(((rt0.c1)/(rt0.c3)))))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((rt0.c2, rt0.c0, rt0.c3))<=((vt0.c0, rt0.c0, vt0.c0))))AND(((rt0.c1)/(rt0.c3)))))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((rt0.c1 IN (rt0.c0)) AS TEXT)) ORDER BY (((((((rt0.c2, rt0.c0, rt0.c3))<=((vt0.c0, rt0.c0, vt0.c0))))AND(((rt0.c1)/(rt0.c3)))))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) ASC;
SELECT ALL * FROM rt1, rt0 WHERE (TIME(rt0.c2, ((rt1.c2)<>(rt0.c1)), ((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TIME(rt0.c2, ((rt1.c2)<>(rt0.c1)), ((rt0.c0) ISNULL))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (TIME(rt0.c2, ((rt1.c2)<>(rt0.c1)), ((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TIME(rt0.c2, ((rt1.c2)<>(rt0.c1)), ((rt0.c0) ISNULL))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (TIME(rt0.c2, ((rt1.c2)<>(rt0.c1)), ((rt0.c0) ISNULL)));
SELECT * FROM vt1, rt0 WHERE (CASE WHEN vt1.c0 THEN ((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)) WHEN (NOT (rt0.c2)) THEN (rt0.c3 IN ()) WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN LTRIM(vt1.c0) ELSE ((vt1.c0)-(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN ((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)) WHEN (NOT (rt0.c2)) THEN (rt0.c3 IN ()) WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN LTRIM(vt1.c0) ELSE ((vt1.c0)-(rt0.c3)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN vt1.c0 THEN ((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)) WHEN (NOT (rt0.c2)) THEN (rt0.c3 IN ()) WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN LTRIM(vt1.c0) ELSE ((vt1.c0)-(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN ((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)) WHEN (NOT (rt0.c2)) THEN (rt0.c3 IN ()) WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN LTRIM(vt1.c0) ELSE ((vt1.c0)-(rt0.c3)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN vt1.c0 THEN ((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)) WHEN (NOT (rt0.c2)) THEN (rt0.c3 IN ()) WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN LTRIM(vt1.c0) ELSE ((vt1.c0)-(rt0.c3)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY -1.992609597E9  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY -1.992609597E9  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY -1.992609597E9  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY -1.992609597E9  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY -1.992609597E9  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 NATURAL JOIN vt0 WHERE (((json_patch(vt0.c0, rt1.c0))LIKE((NOT (rt1.c3))))) ORDER BY ((CAST(rt1.c0 AS TEXT))||(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_patch(vt0.c0, rt1.c0))LIKE((NOT (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1, vt1 NATURAL JOIN vt0 ORDER BY ((CAST(rt1.c0 AS TEXT))||(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 NATURAL JOIN vt0 WHERE (((json_patch(vt0.c0, rt1.c0))LIKE((NOT (rt1.c3))))) ORDER BY ((CAST(rt1.c0 AS TEXT))||(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_patch(vt0.c0, rt1.c0))LIKE((NOT (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1, vt1 NATURAL JOIN vt0 ORDER BY ((CAST(rt1.c0 AS TEXT))||(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 NATURAL JOIN vt0 WHERE (((json_patch(vt0.c0, rt1.c0))LIKE((NOT (rt1.c3))))) ORDER BY ((CAST(rt1.c0 AS TEXT))||(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT * FROM rt1, rt0, vt1 WHERE ((((~ (NULL)))>(vt1.c0 COLLATE NOCASE))) ORDER BY 0.12561172330621462  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (NULL)))>(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY 0.12561172330621462  NULLS FIRST);
SELECT * FROM rt1, rt0, vt1 WHERE ((((~ (NULL)))>(vt1.c0 COLLATE NOCASE))) ORDER BY 0.12561172330621462  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (NULL)))>(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY 0.12561172330621462  NULLS FIRST);
SELECT * FROM rt1, rt0, vt1 WHERE ((((~ (NULL)))>(vt1.c0 COLLATE NOCASE))) ORDER BY 0.12561172330621462  NULLS FIRST;
SELECT * FROM rt0, vt1 FULL OUTER JOIN vt0 ON (((((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))))AND(((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)))))AND((+ (rt1.c1)))) CROSS JOIN rt1 ON CAST((NOT (rt0.c1)) AS TEXT) WHERE (((((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(((-1566117107)LIKE(rt1.c1))))) ORDER BY IFNULL(DISTINCT rt0.c1, (rt0.c1 IN (rt1.c3))) DESC  NULLS LAST, ((SQLITE_COMPILEOPTION_GET(rt1.c0)) NOT BETWEEN ((((rt1.c3))!=((vt0.c0)))) AND (rt0.c1));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(((-1566117107)LIKE(rt1.c1))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON (((((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))))AND(((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)))))AND((+ (rt1.c1)))) CROSS JOIN rt1 ON CAST((NOT (rt0.c1)) AS TEXT) ORDER BY IFNULL(DISTINCT rt0.c1, (rt0.c1 IN (rt1.c3))) DESC  NULLS LAST, ((SQLITE_COMPILEOPTION_GET(rt1.c0)) NOT BETWEEN ((((rt1.c3))!=((vt0.c0)))) AND (rt0.c1)));
SELECT * FROM rt0, vt1 FULL OUTER JOIN vt0 ON (((((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))))AND(((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)))))AND((+ (rt1.c1)))) CROSS JOIN rt1 ON CAST((NOT (rt0.c1)) AS TEXT) WHERE (((((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(((-1566117107)LIKE(rt1.c1))))) ORDER BY IFNULL(DISTINCT rt0.c1, (rt0.c1 IN (rt1.c3))) DESC  NULLS LAST, ((SQLITE_COMPILEOPTION_GET(rt1.c0)) NOT BETWEEN ((((rt1.c3))!=((vt0.c0)))) AND (rt0.c1));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(((-1566117107)LIKE(rt1.c1))))) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON (((((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))))AND(((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)))))AND((+ (rt1.c1)))) CROSS JOIN rt1 ON CAST((NOT (rt0.c1)) AS TEXT) ORDER BY IFNULL(DISTINCT rt0.c1, (rt0.c1 IN (rt1.c3))) DESC  NULLS LAST, ((SQLITE_COMPILEOPTION_GET(rt1.c0)) NOT BETWEEN ((((rt1.c3))!=((vt0.c0)))) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE) INNER JOIN rt1 ON CASE (((rt1.c1))>=((rt0.c2)))  WHEN ((rt1.c2) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0)/(rt0.c0)) ELSE LTRIM(rt0.c1, NULL) END WHERE ((((rt1.c3 IN ())) BETWEEN (CASE WHEN rt1.c0 THEN rt0.c1 END) AND (vt0.c0))) ORDER BY ((rt0.c3 COLLATE RTRIM)OR((rt1.c0 IN ()))) ASC, ((((rt1.c2 IN ())))<=((((rt1.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN ())) BETWEEN (CASE WHEN rt1.c0 THEN rt0.c1 END) AND (vt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE) INNER JOIN rt1 ON CASE (((rt1.c1))>=((rt0.c2)))  WHEN ((rt1.c2) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0)/(rt0.c0)) ELSE LTRIM(rt0.c1, NULL) END ORDER BY ((rt0.c3 COLLATE RTRIM)OR((rt1.c0 IN ()))) ASC, ((((rt1.c2 IN ())))<=((((rt1.c3) NOT NULL)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE) INNER JOIN rt1 ON CASE (((rt1.c1))>=((rt0.c2)))  WHEN ((rt1.c2) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0)/(rt0.c0)) ELSE LTRIM(rt0.c1, NULL) END WHERE ((((rt1.c3 IN ())) BETWEEN (CASE WHEN rt1.c0 THEN rt0.c1 END) AND (vt0.c0))) ORDER BY ((rt0.c3 COLLATE RTRIM)OR((rt1.c0 IN ()))) ASC, ((((rt1.c2 IN ())))<=((((rt1.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN ())) BETWEEN (CASE WHEN rt1.c0 THEN rt0.c1 END) AND (vt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE) INNER JOIN rt1 ON CASE (((rt1.c1))>=((rt0.c2)))  WHEN ((rt1.c2) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0)/(rt0.c0)) ELSE LTRIM(rt0.c1, NULL) END ORDER BY ((rt0.c3 COLLATE RTRIM)OR((rt1.c0 IN ()))) ASC, ((((rt1.c2 IN ())))<=((((rt1.c3) NOT NULL)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) IS TRUE) INNER JOIN rt1 ON CASE (((rt1.c1))>=((rt0.c2)))  WHEN ((rt1.c2) BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0)/(rt0.c0)) ELSE LTRIM(rt0.c1, NULL) END WHERE ((((rt1.c3 IN ())) BETWEEN (CASE WHEN rt1.c0 THEN rt0.c1 END) AND (vt0.c0))) ORDER BY ((rt0.c3 COLLATE RTRIM)OR((rt1.c0 IN ()))) ASC, ((((rt1.c2 IN ())))<=((((rt1.c3) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1, rt1, rt0, vt0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY CAST(NULL AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1, rt0, vt0 ORDER BY CAST(NULL AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0, vt0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY CAST(NULL AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1, rt0, vt0 ORDER BY CAST(NULL AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0, vt0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY CAST(NULL AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (COALESCE(NULL, ((vt1.c0) IS FALSE))) ORDER BY rt0.c3 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(NULL, ((vt1.c0) IS FALSE))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c3 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (COALESCE(NULL, ((vt1.c0) IS FALSE))) ORDER BY rt0.c3 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(NULL, ((vt1.c0) IS FALSE))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c3 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (COALESCE(NULL, ((vt1.c0) IS FALSE))) ORDER BY rt0.c3 COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt1, rt0, vt0, rt1 WHERE (((rt1.c1) BETWEEN (((rt0.c1)%(rt1.c1))) AND (TYPEOF(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) BETWEEN (((rt0.c1)%(rt1.c1))) AND (TYPEOF(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, rt0, vt0, rt1);
SELECT ALL * FROM vt1, rt0, vt0, rt1 WHERE (((rt1.c1) BETWEEN (((rt0.c1)%(rt1.c1))) AND (TYPEOF(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) BETWEEN (((rt0.c1)%(rt1.c1))) AND (TYPEOF(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, rt0, vt0, rt1);
SELECT ALL * FROM vt1, rt0, vt0, rt1 WHERE (((rt1.c1) BETWEEN (((rt0.c1)%(rt1.c1))) AND (TYPEOF(DISTINCT vt1.c0))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (0Xffffffffe802f5e5);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffe802f5e5) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (0Xffffffffe802f5e5);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffe802f5e5) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (0Xffffffffe802f5e5);
SELECT COUNT(*) FROM vt0, rt0, rt1, vt1 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((GLOB(rt0.c3, rt1.c1))>((((vt0.c0)) NOT BETWEEN (('2067262532')) AND ((rt1.c1)))))  NULLS FIRST, ((CAST(rt1.c1 AS TEXT)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, rt1, vt1 ORDER BY ((GLOB(rt0.c3, rt1.c1))>((((vt0.c0)) NOT BETWEEN (('2067262532')) AND ((rt1.c1)))))  NULLS FIRST, ((CAST(rt1.c1 AS TEXT)) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0, rt0, rt1, vt1 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((GLOB(rt0.c3, rt1.c1))>((((vt0.c0)) NOT BETWEEN (('2067262532')) AND ((rt1.c1)))))  NULLS FIRST, ((CAST(rt1.c1 AS TEXT)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, rt1, vt1 ORDER BY ((GLOB(rt0.c3, rt1.c1))>((((vt0.c0)) NOT BETWEEN (('2067262532')) AND ((rt1.c1)))))  NULLS FIRST, ((CAST(rt1.c1 AS TEXT)) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0, rt0, rt1, vt1 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((GLOB(rt0.c3, rt1.c1))>((((vt0.c0)) NOT BETWEEN (('2067262532')) AND ((rt1.c1)))))  NULLS FIRST, ((CAST(rt1.c1 AS TEXT)) IS FALSE) DESC;
SELECT ALL * FROM rt1, rt0, vt1 WHERE ((('-254261399')LIKE(HEX(DISTINCT vt1.c0)))) ORDER BY CAST((rt0.c3 IN ()) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-254261399')LIKE(HEX(DISTINCT vt1.c0)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY CAST((rt0.c3 IN ()) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt1, rt0, vt1 WHERE ((('-254261399')LIKE(HEX(DISTINCT vt1.c0)))) ORDER BY CAST((rt0.c3 IN ()) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-254261399')LIKE(HEX(DISTINCT vt1.c0)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY CAST((rt0.c3 IN ()) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt1, rt0, vt1 WHERE ((('-254261399')LIKE(HEX(DISTINCT vt1.c0)))) ORDER BY CAST((rt0.c3 IN ()) AS NUMERIC)  NULLS LAST;
SELECT * FROM rt0, vt0, rt1 WHERE (CAST(8.82089258E8 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(8.82089258E8 AS REAL)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (CAST(8.82089258E8 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(8.82089258E8 AS REAL)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (CAST(8.82089258E8 AS REAL));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (~ (vt0.c0)) WHERE (UNLIKELY(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (~ (vt0.c0)));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (~ (vt0.c0)) WHERE (UNLIKELY(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (~ (vt0.c0)));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (~ (vt0.c0)) WHERE (UNLIKELY(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))));
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c3)OR(rt0.c2)))OR(rt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((+ (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((+ (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((+ (CASE vt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END)));
SELECT * FROM rt1, vt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (rt1.c3);
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (vt0.c0) ORDER BY ((CAST(NULL AS TEXT)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY ((CAST(NULL AS TEXT)) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (vt0.c0) ORDER BY ((CAST(NULL AS TEXT)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY ((CAST(NULL AS TEXT)) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (vt0.c0) ORDER BY ((CAST(NULL AS TEXT)) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((LOWER(DISTINCT rt0.c2), ((vt0.c0) IS TRUE), ((rt0.c3)|(rt0.c2))))<((((rt0.c2) IS FALSE), (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c0 AS INTEGER)))) WHERE (((rt0.c3)LIKE(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)LIKE(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((LOWER(DISTINCT rt0.c2), ((vt0.c0) IS TRUE), ((rt0.c3)|(rt0.c2))))<((((rt0.c2) IS FALSE), (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c0 AS INTEGER)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((LOWER(DISTINCT rt0.c2), ((vt0.c0) IS TRUE), ((rt0.c3)|(rt0.c2))))<((((rt0.c2) IS FALSE), (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c0 AS INTEGER)))) WHERE (((rt0.c3)LIKE(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)LIKE(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((LOWER(DISTINCT rt0.c2), ((vt0.c0) IS TRUE), ((rt0.c3)|(rt0.c2))))<((((rt0.c2) IS FALSE), (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c0 AS INTEGER)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((LOWER(DISTINCT rt0.c2), ((vt0.c0) IS TRUE), ((rt0.c3)|(rt0.c2))))<((((rt0.c2) IS FALSE), (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c0 AS INTEGER)))) WHERE (((rt0.c3)LIKE(rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c1)<(vt1.c0)))) WHERE (((((NULL IN ())))<>((CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY CAST(((vt1.c0)IS(rt0.c3)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL IN ())))<>((CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c1)<(vt1.c0)))) ORDER BY CAST(((vt1.c0)IS(rt0.c3)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c1)<(vt1.c0)))) WHERE (((((NULL IN ())))<>((CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY CAST(((vt1.c0)IS(rt0.c3)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL IN ())))<>((CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c1)<(vt1.c0)))) ORDER BY CAST(((vt1.c0)IS(rt0.c3)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c1)<(vt1.c0)))) WHERE (((((NULL IN ())))<>((CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 END)))) ORDER BY CAST(((vt1.c0)IS(rt0.c3)) AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 FULL OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN (((NOT (x'')))) AND (((rt0.c1 IN ())))) WHERE (((((((((((rt1.c1)AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c1)))AND(rt1.c0)))/(CAST(rt1.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c1)))AND(rt1.c0)))/(CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, vt1 FULL OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN (((NOT (x'')))) AND (((rt0.c1 IN ())))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 FULL OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN (((NOT (x'')))) AND (((rt0.c1 IN ())))) WHERE (((((((((((rt1.c1)AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c1)))AND(rt1.c0)))/(CAST(rt1.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c1)))AND(rt1.c0)))/(CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, vt1 FULL OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN (((NOT (x'')))) AND (((rt0.c1 IN ())))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 FULL OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN (((NOT (x'')))) AND (((rt0.c1 IN ())))) WHERE (((((((((((rt1.c1)AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c1)))AND(rt1.c0)))/(CAST(rt1.c3 AS INTEGER))));
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT vt0.c0, rt0.c2) COLLATE BINARY INNER JOIN vt0 ON (((~ (0.39139897498077825)))AND(CAST(rt0.c2 AS BLOB))) WHERE (NULL COLLATE BINARY) ORDER BY (((NOT (rt1.c3))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT vt0.c0, rt0.c2) COLLATE BINARY INNER JOIN vt0 ON (((~ (0.39139897498077825)))AND(CAST(rt0.c2 AS BLOB))) ORDER BY (((NOT (rt1.c3))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT vt0.c0, rt0.c2) COLLATE BINARY INNER JOIN vt0 ON (((~ (0.39139897498077825)))AND(CAST(rt0.c2 AS BLOB))) WHERE (NULL COLLATE BINARY) ORDER BY (((NOT (rt1.c3))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT vt0.c0, rt0.c2) COLLATE BINARY INNER JOIN vt0 ON (((~ (0.39139897498077825)))AND(CAST(rt0.c2 AS BLOB))) ORDER BY (((NOT (rt1.c3))) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT * FROM rt1, vt0 WHERE (((rt1.c0) ISNULL) COLLATE NOCASE) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c1 ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((rt1.c0) ISNULL) COLLATE NOCASE) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c1 ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((rt1.c0) ISNULL) COLLATE NOCASE) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT ALL * FROM rt1, rt0, vt0 INNER JOIN vt1 ON (- (CAST(rt1.c2 AS NUMERIC))) WHERE (CASE WHEN CASE 0.11842892841164332  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt1.c0 THEN rt0.c0 END THEN ((rt1.c3) NOT BETWEEN (-9.17957196E8) AND (rt0.c2)) END) ORDER BY ((rt1.c2 COLLATE NOCASE)AND(rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE 0.11842892841164332  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt1.c0 THEN rt0.c0 END THEN ((rt1.c3) NOT BETWEEN (-9.17957196E8) AND (rt0.c2)) END) IS TRUE)  as count FROM rt1, rt0, vt0 INNER JOIN vt1 ON (- (CAST(rt1.c2 AS NUMERIC))) ORDER BY ((rt1.c2 COLLATE NOCASE)AND(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt1, rt0, vt0 INNER JOIN vt1 ON (- (CAST(rt1.c2 AS NUMERIC))) WHERE (CASE WHEN CASE 0.11842892841164332  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt1.c0 THEN rt0.c0 END THEN ((rt1.c3) NOT BETWEEN (-9.17957196E8) AND (rt0.c2)) END) ORDER BY ((rt1.c2 COLLATE NOCASE)AND(rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE 0.11842892841164332  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt1.c0 THEN rt0.c0 END THEN ((rt1.c3) NOT BETWEEN (-9.17957196E8) AND (rt0.c2)) END) IS TRUE)  as count FROM rt1, rt0, vt0 INNER JOIN vt1 ON (- (CAST(rt1.c2 AS NUMERIC))) ORDER BY ((rt1.c2 COLLATE NOCASE)AND(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt1, rt0, vt0 INNER JOIN vt1 ON (- (CAST(rt1.c2 AS NUMERIC))) WHERE (CASE WHEN CASE 0.11842892841164332  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt1.c0 THEN rt0.c0 END THEN ((rt1.c3) NOT BETWEEN (-9.17957196E8) AND (rt0.c2)) END) ORDER BY ((rt1.c2 COLLATE NOCASE)AND(rt0.c0 COLLATE BINARY));
SELECT COUNT(*) FROM rt0, vt1, vt0 INNER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt0.c0) AND (0.9602711913585317)))) AND ((CAST(rt0.c1 AS INTEGER)))) WHERE (COALESCE(NULL, CASE rt0.c3  WHEN rt0.c0 THEN 0.7280519045603042 END, (('[\r!ꊳAXW')<<(rt0.c1)), rt1.c0));
SELECT SUM(count) FROM (SELECT ((COALESCE(NULL, CASE rt0.c3  WHEN rt0.c0 THEN 0.7280519045603042 END, (('[\r!ꊳAXW')<<(rt0.c1)), rt1.c0)) IS TRUE)  as count FROM rt0, vt1, vt0 INNER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt0.c0) AND (0.9602711913585317)))) AND ((CAST(rt0.c1 AS INTEGER)))));
SELECT COUNT(*) FROM rt0, vt1, vt0 INNER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt0.c0) AND (0.9602711913585317)))) AND ((CAST(rt0.c1 AS INTEGER)))) WHERE (COALESCE(NULL, CASE rt0.c3  WHEN rt0.c0 THEN 0.7280519045603042 END, (('[\r!ꊳAXW')<<(rt0.c1)), rt1.c0));
SELECT SUM(count) FROM (SELECT ((COALESCE(NULL, CASE rt0.c3  WHEN rt0.c0 THEN 0.7280519045603042 END, (('[\r!ꊳAXW')<<(rt0.c1)), rt1.c0)) IS TRUE)  as count FROM rt0, vt1, vt0 INNER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt0.c0) AND (0.9602711913585317)))) AND ((CAST(rt0.c1 AS INTEGER)))));
SELECT COUNT(*) FROM rt0, vt1, vt0 INNER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt0.c0) AND (0.9602711913585317)))) AND ((CAST(rt0.c1 AS INTEGER)))) WHERE (COALESCE(NULL, CASE rt0.c3  WHEN rt0.c0 THEN 0.7280519045603042 END, (('[\r!ꊳAXW')<<(rt0.c1)), rt1.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '211630164' DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0)/(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY '211630164' DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0)/(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '211630164' DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0)/(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY '211630164' DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0)/(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '211630164' DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0)/(vt0.c0))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN ()))+(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1))))) ORDER BY (((rt1.c3 COLLATE RTRIM, (((rt1.c2))>=((x'd111a711'))), ((0Xffffffff8e20804a) NOT BETWEEN ('0.04300845140292875') AND (rt1.c2))))>((CASE WHEN rt1.c1 THEN NULL ELSE rt1.c1 END, ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)), (rt1.c3 IN ())))) DESC  NULLS FIRST, (((((((0.810707339038381))=((rt1.c3))))AND(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))))AND(rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))+(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3 COLLATE RTRIM, (((rt1.c2))>=((x'd111a711'))), ((0xffffffff8e20804a) NOT BETWEEN ('0.04300845140292875') AND (rt1.c2))))>((CASE WHEN rt1.c1 THEN NULL ELSE rt1.c1 END, ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)), (rt1.c3 IN ())))) DESC  NULLS FIRST, (((((((0.810707339038381))=((rt1.c3))))AND(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))))AND(rt1.c2)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN ()))+(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1))))) ORDER BY (((rt1.c3 COLLATE RTRIM, (((rt1.c2))>=((x'd111a711'))), ((0Xffffffff8e20804a) NOT BETWEEN ('0.04300845140292875') AND (rt1.c2))))>((CASE WHEN rt1.c1 THEN NULL ELSE rt1.c1 END, ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)), (rt1.c3 IN ())))) DESC  NULLS FIRST, (((((((0.810707339038381))=((rt1.c3))))AND(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))))AND(rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))+(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3 COLLATE RTRIM, (((rt1.c2))>=((x'd111a711'))), ((0xffffffff8e20804a) NOT BETWEEN ('0.04300845140292875') AND (rt1.c2))))>((CASE WHEN rt1.c1 THEN NULL ELSE rt1.c1 END, ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)), (rt1.c3 IN ())))) DESC  NULLS FIRST, (((((((0.810707339038381))=((rt1.c3))))AND(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))))AND(rt1.c2)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN ()))+(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1))))) ORDER BY (((rt1.c3 COLLATE RTRIM, (((rt1.c2))>=((x'd111a711'))), ((0Xffffffff8e20804a) NOT BETWEEN ('0.04300845140292875') AND (rt1.c2))))>((CASE WHEN rt1.c1 THEN NULL ELSE rt1.c1 END, ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)), (rt1.c3 IN ())))) DESC  NULLS FIRST, (((((((0.810707339038381))=((rt1.c3))))AND(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))))AND(rt1.c2)) DESC  NULLS LAST;
SELECT ALL * FROM vt1, rt1 WHERE ((((((rt1.c2 IN (rt1.c3)))AND((rt1.c1 IN ()))))AND(NULLIF(rt1.c0, rt1.c2)))) ORDER BY CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2 IN (rt1.c3)))AND((rt1.c1 IN ()))))AND(NULLIF(rt1.c0, rt1.c2)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CHANGES()  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 WHERE ((((((rt1.c2 IN (rt1.c3)))AND((rt1.c1 IN ()))))AND(NULLIF(rt1.c0, rt1.c2)))) ORDER BY CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2 IN (rt1.c3)))AND((rt1.c1 IN ()))))AND(NULLIF(rt1.c0, rt1.c2)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CHANGES()  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 WHERE ((((((rt1.c2 IN (rt1.c3)))AND((rt1.c1 IN ()))))AND(NULLIF(rt1.c0, rt1.c2)))) ORDER BY CHANGES()  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0) IS TRUE)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0) IS TRUE)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0) IS TRUE)))) ORDER BY vt1.c0;
SELECT * FROM rt1 CROSS JOIN rt0 ON rt1.c2 INNER JOIN vt0 ON rt0.c3 LEFT OUTER JOIN vt1 ON (((((rt1.c3)AND(vt0.c0)))AND(rt0.c0)) IN ()) WHERE ((((CASE rt0.c0  WHEN NULL THEN vt0.c0 ELSE rt0.c0 END))=((((rt1.c1)&(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c0  WHEN NULL THEN vt0.c0 ELSE rt0.c0 END))=((((rt1.c1)&(rt0.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON rt1.c2 INNER JOIN vt0 ON rt0.c3 LEFT OUTER JOIN vt1 ON (((((rt1.c3)AND(vt0.c0)))AND(rt0.c0)) IN ()));
SELECT * FROM rt1 CROSS JOIN rt0 ON rt1.c2 INNER JOIN vt0 ON rt0.c3 LEFT OUTER JOIN vt1 ON (((((rt1.c3)AND(vt0.c0)))AND(rt0.c0)) IN ()) WHERE ((((CASE rt0.c0  WHEN NULL THEN vt0.c0 ELSE rt0.c0 END))=((((rt1.c1)&(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c0  WHEN NULL THEN vt0.c0 ELSE rt0.c0 END))=((((rt1.c1)&(rt0.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON rt1.c2 INNER JOIN vt0 ON rt0.c3 LEFT OUTER JOIN vt1 ON (((((rt1.c3)AND(vt0.c0)))AND(rt0.c0)) IN ()));
SELECT * FROM rt1 CROSS JOIN rt0 ON rt1.c2 INNER JOIN vt0 ON rt0.c3 LEFT OUTER JOIN vt1 ON (((((rt1.c3)AND(vt0.c0)))AND(rt0.c0)) IN ()) WHERE ((((CASE rt0.c0  WHEN NULL THEN vt0.c0 ELSE rt0.c0 END))=((((rt1.c1)&(rt0.c0))))));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN '-1467608190' ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN '-1467608190' ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN '-1467608190' ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN '-1467608190' ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (vt1.c0 IN ()) THEN '-1467608190' ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END);
SELECT * FROM rt0, rt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT * FROM rt0, vt0, rt1 WHERE (((- (rt0.c2)) IN ())) ORDER BY CASE WHEN (((rt1.c3, rt0.c1, rt1.c0, 1117308166, rt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, rt1.c1, rt1.c0, rt0.c0)) AND ((rt1.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c2))) THEN (~ (rt1.c3)) ELSE ((rt0.c3)+(rt1.c3)) END ASC;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CASE WHEN (((rt1.c3, rt0.c1, rt1.c0, 1117308166, rt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, rt1.c1, rt1.c0, rt0.c0)) AND ((rt1.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c2))) THEN (~ (rt1.c3)) ELSE ((rt0.c3)+(rt1.c3)) END ASC);
SELECT * FROM rt0, vt0, rt1 WHERE (((- (rt0.c2)) IN ())) ORDER BY CASE WHEN (((rt1.c3, rt0.c1, rt1.c0, 1117308166, rt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, rt1.c1, rt1.c0, rt0.c0)) AND ((rt1.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c2))) THEN (~ (rt1.c3)) ELSE ((rt0.c3)+(rt1.c3)) END ASC;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CASE WHEN (((rt1.c3, rt0.c1, rt1.c0, 1117308166, rt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, rt1.c1, rt1.c0, rt0.c0)) AND ((rt1.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c2))) THEN (~ (rt1.c3)) ELSE ((rt0.c3)+(rt1.c3)) END ASC);
SELECT * FROM rt0, vt0, rt1 WHERE (((- (rt0.c2)) IN ())) ORDER BY CASE WHEN (((rt1.c3, rt0.c1, rt1.c0, 1117308166, rt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, rt1.c1, rt1.c0, rt0.c0)) AND ((rt1.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c2))) THEN (~ (rt1.c3)) ELSE ((rt0.c3)+(rt1.c3)) END ASC;
SELECT * FROM rt0 WHERE ((((NOT (rt0.c3)))=(((rt0.c1) NOT NULL)))) ORDER BY (((rt0.c3 IN ())) BETWEEN ((+ (rt0.c3))) AND (rt0.c3)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3)))==(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ())) BETWEEN ((+ (rt0.c3))) AND (rt0.c3)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c3)))=(((rt0.c1) NOT NULL)))) ORDER BY (((rt0.c3 IN ())) BETWEEN ((+ (rt0.c3))) AND (rt0.c3)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3)))==(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ())) BETWEEN ((+ (rt0.c3))) AND (rt0.c3)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c3)))=(((rt0.c1) NOT NULL)))) ORDER BY (((rt0.c3 IN ())) BETWEEN ((+ (rt0.c3))) AND (rt0.c3)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)==(vt0.c0)))AND(UNICODE(x''))))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)==(vt0.c0)))AND(UNICODE(x''))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)==(vt0.c0)))AND(UNICODE(x''))))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)==(vt0.c0)))AND(UNICODE(x''))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)==(vt0.c0)))AND(UNICODE(x''))))OR((- (vt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((- ('')))IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- ('')))IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((- ('')))IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- ('')))IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((- ('')))IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON ((CASE rt1.c0  WHEN '-2065583694' THEN vt1.c0 END)>=(vt1.c0)) WHERE (COALESCE((rt1.c3 IN ()), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((rt1.c3 IN ()), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON ((CASE rt1.c0  WHEN '-2065583694' THEN vt1.c0 END)>=(vt1.c0)));
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON ((CASE rt1.c0  WHEN '-2065583694' THEN vt1.c0 END)>=(vt1.c0)) WHERE (COALESCE((rt1.c3 IN ()), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((rt1.c3 IN ()), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON ((CASE rt1.c0  WHEN '-2065583694' THEN vt1.c0 END)>=(vt1.c0)));
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON ((CASE rt1.c0  WHEN '-2065583694' THEN vt1.c0 END)>=(vt1.c0)) WHERE (COALESCE((rt1.c3 IN ()), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0))));
SELECT * FROM rt1 INNER JOIN vt0 ON ((((rt1.c0)||(rt1.c3))) BETWEEN (((((rt1.c2)OR(vt0.c0)))OR(rt1.c0))) AND (vt0.c0 COLLATE NOCASE)) INNER JOIN vt1 ON ((CAST(rt1.c1 AS NUMERIC))&(((rt1.c3)*(rt1.c3)))) WHERE ((((x'')) NOT BETWEEN (((- (vt0.c0)))) AND ((((rt1.c0)<(vt1.c0)))))) ORDER BY (((rt1.c1)) NOT BETWEEN (((+ (rt1.c0)))) AND ((vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN (((- (vt0.c0)))) AND ((((rt1.c0)<(vt1.c0)))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((rt1.c0)||(rt1.c3))) BETWEEN (((((rt1.c2)OR(vt0.c0)))OR(rt1.c0))) AND (vt0.c0 COLLATE NOCASE)) INNER JOIN vt1 ON ((CAST(rt1.c1 AS NUMERIC))&(((rt1.c3)*(rt1.c3)))) ORDER BY (((rt1.c1)) NOT BETWEEN (((+ (rt1.c0)))) AND ((vt0.c0))));
SELECT * FROM rt1 INNER JOIN vt0 ON ((((rt1.c0)||(rt1.c3))) BETWEEN (((((rt1.c2)OR(vt0.c0)))OR(rt1.c0))) AND (vt0.c0 COLLATE NOCASE)) INNER JOIN vt1 ON ((CAST(rt1.c1 AS NUMERIC))&(((rt1.c3)*(rt1.c3)))) WHERE ((((x'')) NOT BETWEEN (((- (vt0.c0)))) AND ((((rt1.c0)<(vt1.c0)))))) ORDER BY (((rt1.c1)) NOT BETWEEN (((+ (rt1.c0)))) AND ((vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN (((- (vt0.c0)))) AND ((((rt1.c0)<(vt1.c0)))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((rt1.c0)||(rt1.c3))) BETWEEN (((((rt1.c2)OR(vt0.c0)))OR(rt1.c0))) AND (vt0.c0 COLLATE NOCASE)) INNER JOIN vt1 ON ((CAST(rt1.c1 AS NUMERIC))&(((rt1.c3)*(rt1.c3)))) ORDER BY (((rt1.c1)) NOT BETWEEN (((+ (rt1.c0)))) AND ((vt0.c0))));
SELECT * FROM rt1 INNER JOIN vt0 ON ((((rt1.c0)||(rt1.c3))) BETWEEN (((((rt1.c2)OR(vt0.c0)))OR(rt1.c0))) AND (vt0.c0 COLLATE NOCASE)) INNER JOIN vt1 ON ((CAST(rt1.c1 AS NUMERIC))&(((rt1.c3)*(rt1.c3)))) WHERE ((((x'')) NOT BETWEEN (((- (vt0.c0)))) AND ((((rt1.c0)<(vt1.c0)))))) ORDER BY (((rt1.c1)) NOT BETWEEN (((+ (rt1.c0)))) AND ((vt0.c0)));
SELECT * FROM rt1, rt0, vt1 WHERE ((('hz') IS FALSE)) ORDER BY CAST(UPPER(rt0.c3) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('hz') IS FALSE)) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY CAST(UPPER(rt0.c3) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt1, rt0, vt1 WHERE ((('hz') IS FALSE)) ORDER BY CAST(UPPER(rt0.c3) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('hz') IS FALSE)) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY CAST(UPPER(rt0.c3) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt1, rt0, vt1 WHERE ((('hz') IS FALSE)) ORDER BY CAST(UPPER(rt0.c3) AS NUMERIC)  NULLS FIRST;
SELECT * FROM vt1, rt1, vt0, rt0 WHERE (CASE WHEN (((rt1.c3))<>((rt1.c3))) THEN (rt1.c1 IN ()) END) ORDER BY (((0.5319360309106265)IS NOT(rt1.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c3))<>((rt1.c3))) THEN (rt1.c1 IN ()) END) IS TRUE)  as count FROM vt1, rt1, vt0, rt0 ORDER BY (((0.5319360309106265)IS NOT(rt1.c2)) IN ())  NULLS FIRST);
SELECT * FROM vt1, rt1, vt0, rt0 WHERE (CASE WHEN (((rt1.c3))<>((rt1.c3))) THEN (rt1.c1 IN ()) END) ORDER BY (((0.5319360309106265)IS NOT(rt1.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c3))<>((rt1.c3))) THEN (rt1.c1 IN ()) END) IS TRUE)  as count FROM vt1, rt1, vt0, rt0 ORDER BY (((0.5319360309106265)IS NOT(rt1.c2)) IN ())  NULLS FIRST);
SELECT * FROM vt1, rt1, vt0, rt0 WHERE (CASE WHEN (((rt1.c3))<>((rt1.c3))) THEN (rt1.c1 IN ()) END) ORDER BY (((0.5319360309106265)IS NOT(rt1.c2)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON NULL FULL OUTER JOIN rt1 ON ((NULL) IS FALSE) WHERE (CASE ((rt1.c3) BETWEEN (rt1.c3) AND ('-1543641028'))  WHEN x'' THEN (0.12097332068922251 IN ()) WHEN ((((rt1.c1)AND(rt1.c3)))AND(x'0ce0')) THEN (((rt1.c3, rt0.c2, rt1.c3))<>((rt0.c1, rt0.c1, rt0.c3))) WHEN ((rt1.c2)<<(rt0.c0)) THEN (x'' IN ()) ELSE (rt0.c3 IN (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c3) BETWEEN (rt1.c3) AND ('-1543641028'))  WHEN x'' THEN (0.12097332068922251 IN ()) WHEN ((((rt1.c1)AND(rt1.c3)))AND(x'0ce0')) THEN (((rt1.c3, rt0.c2, rt1.c3))<>((rt0.c1, rt0.c1, rt0.c3))) WHEN ((rt1.c2)<<(rt0.c0)) THEN (x'' IN ()) ELSE (rt0.c3 IN (vt1.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON NULL FULL OUTER JOIN rt1 ON ((NULL) IS FALSE));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON NULL FULL OUTER JOIN rt1 ON ((NULL) IS FALSE) WHERE (CASE ((rt1.c3) BETWEEN (rt1.c3) AND ('-1543641028'))  WHEN x'' THEN (0.12097332068922251 IN ()) WHEN ((((rt1.c1)AND(rt1.c3)))AND(x'0ce0')) THEN (((rt1.c3, rt0.c2, rt1.c3))<>((rt0.c1, rt0.c1, rt0.c3))) WHEN ((rt1.c2)<<(rt0.c0)) THEN (x'' IN ()) ELSE (rt0.c3 IN (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c3) BETWEEN (rt1.c3) AND ('-1543641028'))  WHEN x'' THEN (0.12097332068922251 IN ()) WHEN ((((rt1.c1)AND(rt1.c3)))AND(x'0ce0')) THEN (((rt1.c3, rt0.c2, rt1.c3))<>((rt0.c1, rt0.c1, rt0.c3))) WHEN ((rt1.c2)<<(rt0.c0)) THEN (x'' IN ()) ELSE (rt0.c3 IN (vt1.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON NULL FULL OUTER JOIN rt1 ON ((NULL) IS FALSE));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON NULL FULL OUTER JOIN rt1 ON ((NULL) IS FALSE) WHERE (CASE ((rt1.c3) BETWEEN (rt1.c3) AND ('-1543641028'))  WHEN x'' THEN (0.12097332068922251 IN ()) WHEN ((((rt1.c1)AND(rt1.c3)))AND(x'0ce0')) THEN (((rt1.c3, rt0.c2, rt1.c3))<>((rt0.c1, rt0.c1, rt0.c3))) WHEN ((rt1.c2)<<(rt0.c0)) THEN (x'' IN ()) ELSE (rt0.c3 IN (vt1.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN vt0.c0 THEN LTRIM(x'0c35', vt0.c0) ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN vt0.c0 THEN LTRIM(x'0c35', vt0.c0) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN vt0.c0 THEN LTRIM(x'0c35', vt0.c0) ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN vt0.c0 THEN LTRIM(x'0c35', vt0.c0) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE (NOT (vt0.c0))  WHEN vt0.c0 THEN LTRIM(x'0c35', vt0.c0) ELSE (~ (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c0)IS NOT(rt0.c2)) WHEN TIME(rt0.c3, rt0.c1, rt0.c2) THEN ((((((((rt0.c2)OR(NULL)))OR(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)) WHEN ((rt0.c2) NOT NULL) THEN vt0.c0 ELSE rt0.c0 COLLATE BINARY END WHERE ((~ (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c0)IS NOT(rt0.c2)) WHEN TIME(rt0.c3, rt0.c1, rt0.c2) THEN ((((((((rt0.c2)OR(NULL)))OR(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)) WHEN ((rt0.c2) NOT NULL) THEN vt0.c0 ELSE rt0.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c0)IS NOT(rt0.c2)) WHEN TIME(rt0.c3, rt0.c1, rt0.c2) THEN ((((((((rt0.c2)OR(NULL)))OR(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)) WHEN ((rt0.c2) NOT NULL) THEN vt0.c0 ELSE rt0.c0 COLLATE BINARY END WHERE ((~ (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c0)IS NOT(rt0.c2)) WHEN TIME(rt0.c3, rt0.c1, rt0.c2) THEN ((((((((rt0.c2)OR(NULL)))OR(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)) WHEN ((rt0.c2) NOT NULL) THEN vt0.c0 ELSE rt0.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((rt0.c0)IS NOT(rt0.c2)) WHEN TIME(rt0.c3, rt0.c1, rt0.c2) THEN ((((((((rt0.c2)OR(NULL)))OR(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)) WHEN ((rt0.c2) NOT NULL) THEN vt0.c0 ELSE rt0.c0 COLLATE BINARY END WHERE ((~ (CAST(rt0.c2 AS NUMERIC))));
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((rt0.c2)<<(rt1.c0)) COLLATE NOCASE WHERE (((CASE WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (rt0.c1) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (rt0.c1) AND (rt1.c3))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((rt0.c2)<<(rt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((rt0.c2)<<(rt1.c0)) COLLATE NOCASE WHERE (((CASE WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (rt0.c1) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (rt0.c1) AND (rt1.c3))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((rt0.c2)<<(rt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((rt0.c2)<<(rt1.c0)) COLLATE NOCASE WHERE (((CASE WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (rt0.c1) AND (rt1.c3)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2)<(rt1.c3))) BETWEEN (((vt0.c0)=(rt1.c2))) AND (rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<(rt1.c3))) BETWEEN (((vt0.c0)=(rt1.c2))) AND (rt1.c0))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2)<(rt1.c3))) BETWEEN (((vt0.c0)=(rt1.c2))) AND (rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<(rt1.c3))) BETWEEN (((vt0.c0)=(rt1.c2))) AND (rt1.c0))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2)<(rt1.c3))) BETWEEN (((vt0.c0)=(rt1.c2))) AND (rt1.c0)));
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN ('447488358') AND (1088152713))) ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt1.c3 END)AND((- (vt0.c0)))))OR(rt0.c3)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN ('447488358') AND (1088152713))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt1.c3 END)AND((- (vt0.c0)))))OR(rt0.c3)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN ('447488358') AND (1088152713))) ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt1.c3 END)AND((- (vt0.c0)))))OR(rt0.c3)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN ('447488358') AND (1088152713))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt1.c3 END)AND((- (vt0.c0)))))OR(rt0.c3)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN ('447488358') AND (1088152713))) ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt1.c3 END)AND((- (vt0.c0)))))OR(rt0.c3)) DESC  NULLS LAST;
SELECT * FROM rt1 LEFT OUTER JOIN vt1 ON ((rt1.c0 COLLATE RTRIM)%(((rt1.c2) ISNULL))) INNER JOIN vt0 ON CASE x''  WHEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN ((rt0.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)) WHEN TOTAL_CHANGES() THEN -2.112120568E9 WHEN (rt1.c0 IN ()) THEN CAST(rt1.c2 AS NUMERIC) END LEFT OUTER JOIN rt0 ON ((((vt0.c0)<(rt0.c3)))||(((rt0.c3)-(vt1.c0)))) WHERE ((((0x7b72c6b8, x'', rt0.c1)) BETWEEN ((rt0.c3 COLLATE RTRIM, CASE WHEN rt1.c0 THEN 0xffffffff85f00db1 END, LOWER(vt1.c0))) AND ((rtreenode(vt1.c0, ']4'), ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)), ('1731353878' IN ()))))) ORDER BY ((('-1258872597')) BETWEEN ((((((rt1.c2)AND(rt0.c0)))OR(rt1.c2)))) AND (((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((0X7b72c6b8, x'', rt0.c1)) BETWEEN ((rt0.c3 COLLATE RTRIM, CASE WHEN rt1.c0 THEN 0xffffffff85f00db1 END, LOWER(vt1.c0))) AND ((rtreenode(vt1.c0, ']4'), ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)), ('1731353878' IN ()))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON ((rt1.c0 COLLATE RTRIM)%(((rt1.c2) ISNULL))) INNER JOIN vt0 ON CASE x''  WHEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN ((rt0.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)) WHEN TOTAL_CHANGES() THEN -2.112120568E9 WHEN (rt1.c0 IN ()) THEN CAST(rt1.c2 AS NUMERIC) END LEFT OUTER JOIN rt0 ON ((((vt0.c0)<(rt0.c3)))||(((rt0.c3)-(vt1.c0)))) ORDER BY ((('-1258872597')) BETWEEN ((((((rt1.c2)AND(rt0.c0)))OR(rt1.c2)))) AND (((rt0.c1 IN ())))));
SELECT * FROM rt1 LEFT OUTER JOIN vt1 ON ((rt1.c0 COLLATE RTRIM)%(((rt1.c2) ISNULL))) INNER JOIN vt0 ON CASE x''  WHEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN ((rt0.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)) WHEN TOTAL_CHANGES() THEN -2.112120568E9 WHEN (rt1.c0 IN ()) THEN CAST(rt1.c2 AS NUMERIC) END LEFT OUTER JOIN rt0 ON ((((vt0.c0)<(rt0.c3)))||(((rt0.c3)-(vt1.c0)))) WHERE ((((0x7b72c6b8, x'', rt0.c1)) BETWEEN ((rt0.c3 COLLATE RTRIM, CASE WHEN rt1.c0 THEN 0xffffffff85f00db1 END, LOWER(vt1.c0))) AND ((rtreenode(vt1.c0, ']4'), ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)), ('1731353878' IN ()))))) ORDER BY ((('-1258872597')) BETWEEN ((((((rt1.c2)AND(rt0.c0)))OR(rt1.c2)))) AND (((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((0X7b72c6b8, x'', rt0.c1)) BETWEEN ((rt0.c3 COLLATE RTRIM, CASE WHEN rt1.c0 THEN 0xffffffff85f00db1 END, LOWER(vt1.c0))) AND ((rtreenode(vt1.c0, ']4'), ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)), ('1731353878' IN ()))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON ((rt1.c0 COLLATE RTRIM)%(((rt1.c2) ISNULL))) INNER JOIN vt0 ON CASE x''  WHEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN ((rt0.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)) WHEN TOTAL_CHANGES() THEN -2.112120568E9 WHEN (rt1.c0 IN ()) THEN CAST(rt1.c2 AS NUMERIC) END LEFT OUTER JOIN rt0 ON ((((vt0.c0)<(rt0.c3)))||(((rt0.c3)-(vt1.c0)))) ORDER BY ((('-1258872597')) BETWEEN ((((((rt1.c2)AND(rt0.c0)))OR(rt1.c2)))) AND (((rt0.c1 IN ())))));
SELECT * FROM rt1 LEFT OUTER JOIN vt1 ON ((rt1.c0 COLLATE RTRIM)%(((rt1.c2) ISNULL))) INNER JOIN vt0 ON CASE x''  WHEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN ((rt0.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)) WHEN TOTAL_CHANGES() THEN -2.112120568E9 WHEN (rt1.c0 IN ()) THEN CAST(rt1.c2 AS NUMERIC) END LEFT OUTER JOIN rt0 ON ((((vt0.c0)<(rt0.c3)))||(((rt0.c3)-(vt1.c0)))) WHERE ((((0x7b72c6b8, x'', rt0.c1)) BETWEEN ((rt0.c3 COLLATE RTRIM, CASE WHEN rt1.c0 THEN 0xffffffff85f00db1 END, LOWER(vt1.c0))) AND ((rtreenode(vt1.c0, ']4'), ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)), ('1731353878' IN ()))))) ORDER BY ((('-1258872597')) BETWEEN ((((((rt1.c2)AND(rt0.c0)))OR(rt1.c2)))) AND (((rt0.c1 IN ()))));
SELECT * FROM vt0, rt0 WHERE ((((- (0.4328332169774983))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (0.4328332169774983))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((- (0.4328332169774983))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (0.4328332169774983))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((- (0.4328332169774983))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)) WHEN vt1.c0 THEN ((rt0.c0)+(rt0.c3)) WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c2)!=(rt0.c2)) END INNER JOIN vt1 ON (((rt0.c0 COLLATE BINARY, (('-1230677716') IS FALSE), CAST(rt0.c1 AS TEXT)))<((((0X59cb7433)GLOB(rt0.c3)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), SQLITE_SOURCE_ID()))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)) WHEN vt1.c0 THEN ((rt0.c0)+(rt0.c3)) WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c2)!=(rt0.c2)) END INNER JOIN vt1 ON (((rt0.c0 COLLATE BINARY, (('-1230677716') IS FALSE), CAST(rt0.c1 AS TEXT)))<((((0X59cb7433)GLOB(rt0.c3)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), SQLITE_SOURCE_ID()))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)) WHEN vt1.c0 THEN ((rt0.c0)+(rt0.c3)) WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c2)!=(rt0.c2)) END INNER JOIN vt1 ON (((rt0.c0 COLLATE BINARY, (('-1230677716') IS FALSE), CAST(rt0.c1 AS TEXT)))<((((0X59cb7433)GLOB(rt0.c3)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), SQLITE_SOURCE_ID()))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)) WHEN vt1.c0 THEN ((rt0.c0)+(rt0.c3)) WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c2)!=(rt0.c2)) END INNER JOIN vt1 ON (((rt0.c0 COLLATE BINARY, (('-1230677716') IS FALSE), CAST(rt0.c1 AS TEXT)))<((((0X59cb7433)GLOB(rt0.c3)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), SQLITE_SOURCE_ID()))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((~ (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((~ (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((~ (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM vt0, rt1 INNER JOIN rt0 ON CASE WHEN ((vt0.c0)/('')) THEN rt1.c1 ELSE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c3 THEN NULL END END INNER JOIN vt1 ON (+ (-2077106587)) WHERE (((CAST(vt1.c0 AS TEXT))+(((rt0.c1) ISNULL)))) ORDER BY CAST((((rt0.c2))<((rt0.c3))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))+(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN rt0 ON CASE WHEN ((vt0.c0)/('')) THEN rt1.c1 ELSE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c3 THEN NULL END END INNER JOIN vt1 ON (+ (-2077106587)) ORDER BY CAST((((rt0.c2))<((rt0.c3))) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 INNER JOIN rt0 ON CASE WHEN ((vt0.c0)/('')) THEN rt1.c1 ELSE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c3 THEN NULL END END INNER JOIN vt1 ON (+ (-2077106587)) WHERE (((CAST(vt1.c0 AS TEXT))+(((rt0.c1) ISNULL)))) ORDER BY CAST((((rt0.c2))<((rt0.c3))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))+(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN rt0 ON CASE WHEN ((vt0.c0)/('')) THEN rt1.c1 ELSE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c3 THEN NULL END END INNER JOIN vt1 ON (+ (-2077106587)) ORDER BY CAST((((rt0.c2))<((rt0.c3))) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 INNER JOIN rt0 ON CASE WHEN ((vt0.c0)/('')) THEN rt1.c1 ELSE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c3 THEN NULL END END INNER JOIN vt1 ON (+ (-2077106587)) WHERE (((CAST(vt1.c0 AS TEXT))+(((rt0.c1) ISNULL)))) ORDER BY CAST((((rt0.c2))<((rt0.c3))) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (CAST(CAST(rt1.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (CAST(CAST(rt1.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (CAST(CAST(rt1.c0 AS TEXT) AS REAL));
SELECT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY vt1.c0  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)) ORDER BY CAST(((NULL) IS TRUE) AS REAL);
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((NULL) IS TRUE) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)) ORDER BY CAST(((NULL) IS TRUE) AS REAL);
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((NULL) IS TRUE) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)) ORDER BY CAST(((NULL) IS TRUE) AS REAL);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, rt0 WHERE (((((rt1.c3)IS(rt1.c2))) BETWEEN (UNLIKELY(vt0.c0)) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)IS(rt1.c2))) BETWEEN (UNLIKELY(vt0.c0)) AND (rt1.c3))) IS TRUE)  as count FROM vt1, rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, rt0 WHERE (((((rt1.c3)IS(rt1.c2))) BETWEEN (UNLIKELY(vt0.c0)) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)IS(rt1.c2))) BETWEEN (UNLIKELY(vt0.c0)) AND (rt1.c3))) IS TRUE)  as count FROM vt1, rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, rt0 WHERE (((((rt1.c3)IS(rt1.c2))) BETWEEN (UNLIKELY(vt0.c0)) AND (rt1.c3)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOTNULL))LIKE((~ (rt1.c0))))) ORDER BY CAST(CAST(rt1.c2 AS REAL) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOTNULL))LIKE((~ (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(rt1.c2 AS REAL) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOTNULL))LIKE((~ (rt1.c0))))) ORDER BY CAST(CAST(rt1.c2 AS REAL) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOTNULL))LIKE((~ (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(rt1.c2 AS REAL) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOTNULL))LIKE((~ (rt1.c0))))) ORDER BY CAST(CAST(rt1.c2 AS REAL) AS TEXT) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))<((((vt0.c0)LIKE(NULL)))))) ORDER BY (x'' IN (COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC, CASE ((vt0.c0)>(vt0.c0))  WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0))>((vt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))<((((vt0.c0)LIKE(NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN (COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC, CASE ((vt0.c0)>(vt0.c0))  WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0))>((vt0.c0))) END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))<((((vt0.c0)LIKE(NULL)))))) ORDER BY (x'' IN (COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC, CASE ((vt0.c0)>(vt0.c0))  WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0))>((vt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))<((((vt0.c0)LIKE(NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN (COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC, CASE ((vt0.c0)>(vt0.c0))  WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0))>((vt0.c0))) END ASC);
SELECT * FROM vt1, rt1, vt0 WHERE (CAST(((rt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT * FROM vt1, rt1, vt0 WHERE (CAST(((rt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT * FROM vt1, rt1, vt0 WHERE (CAST(((rt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2)AND(rt0.c3))) NOT BETWEEN (((x'81999a52')<>(rt0.c3))) AND (CASE vt1.c0  WHEN rt0.c0 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c3))) NOT BETWEEN (((x'81999a52')<>(rt0.c3))) AND (CASE vt1.c0  WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2)AND(rt0.c3))) NOT BETWEEN (((x'81999a52')<>(rt0.c3))) AND (CASE vt1.c0  WHEN rt0.c0 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c3))) NOT BETWEEN (((x'81999a52')<>(rt0.c3))) AND (CASE vt1.c0  WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2)AND(rt0.c3))) NOT BETWEEN (((x'81999a52')<>(rt0.c3))) AND (CASE vt1.c0  WHEN rt0.c0 THEN rt0.c3 END)));
