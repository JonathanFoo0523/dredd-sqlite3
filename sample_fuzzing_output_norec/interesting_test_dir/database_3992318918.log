-- Time: 2024/06/10 06:02:52
-- Database: database18
-- Database version: 3.40.0
-- seed value: 3992318918
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 2123479809);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '5159'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42367'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 286035109); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 159071747);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '45020'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE vt0; -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c0)=('h', 'H') WHERE (vt0.c0 IN ()); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
VACUUM temp; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63505'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-854136011,11');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1174036503); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
VACUUM temp; -- 1ms;
INSERT OR FAIL INTO rt1(c0, c2, c1) VALUES ('159071747', 'h', NULL); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INTEGER ); -- 0ms;
ALTER TABLE t0 ADD COLUMN c67 INTEGER; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31572'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1080276252,14');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2075718627); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i21 ON t0((+ (((c0)>=(c67)))) COLLATE NOCASE,COALESCE(((0.12654822653636744) NOT BETWEEN (c67) AND (c67)), ((c0) NOT BETWEEN (c0) AND (c67))) COLLATE BINARY); -- 0ms;
ANALYZE vt1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c72 INT; -- 0ms;
DROP TABLE IF EXISTS t0; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '25249'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  rt1; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64258'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1696861746,10');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO rt1(c1, c2) VALUES (NULL, -1.696861746E9), ('490076433', '0.12654822653636744'), (NULL, NULL); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (x'f051'); -- 1ms;
PRAGMA temp.short_column_names; -- 0ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
REINDEX; -- 1ms;
ANALYZE temp; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=260285318,9');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31402'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29892'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=50458908,10');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=904105094,7');\n; -- 0ms;
UPDATE vt1 SET c0=0.10017615377266309; -- 1ms;
CREATE VIEW v0(c0) AS SELECT CASE WHEN ((((((((0.8492418798974535)OR(vt0.c0)))OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c0)) THEN TOTAL(rt1.c2) END FROM vt0, vt1, rt1 ORDER BY CASE CASE rt1.c2  WHEN vt1.c0 THEN vt0.c0 END  WHEN ((0.48185909755348244)IS(rt1.c0)) THEN -8.54136011E8 ELSE rt1.c1 END ASC  NULLS FIRST; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(NULL); -- 0ms;
END; -- 0ms;
END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON json_quote(((0.12654822653636744) IS TRUE)) FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON ((vt1.c0)=(NULL)) WHERE (CASE WHEN ((vt0.c0)+(vt0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN v0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN 50458908 END WHEN ((((((((rt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('kA')))OR(rt1.c0)) THEN ((vt1.c0)IS(rt1.c1)) WHEN (((rt1.c0))>=((rt1.c2))) THEN (~ (vt1.c0)) ELSE ((rt1.c1) ISNULL) END) ORDER BY CASE ((((((((0.8258269553061934)AND('')))OR(rt1.c1)))OR(vt0.c0)))AND(rt1.c1))  WHEN CASE WHEN rt1.c2 THEN v0.c0 ELSE rt1.c2 END THEN UPPER(v0.c0) ELSE (((rt1.c2))<>((rt1.c1))) END ASC, (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) IN (((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)+(vt0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN v0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN 50458908 END WHEN ((((((((rt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('kA')))OR(rt1.c0)) THEN ((vt1.c0)IS(rt1.c1)) WHEN (((rt1.c0))>=((rt1.c2))) THEN (~ (vt1.c0)) ELSE ((rt1.c1) ISNULL) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON json_quote(((0.12654822653636744) IS TRUE)) FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON ((vt1.c0)=(NULL)) ORDER BY CASE ((((((((0.8258269553061934)AND('')))OR(rt1.c1)))OR(vt0.c0)))AND(rt1.c1))  WHEN CASE WHEN rt1.c2 THEN v0.c0 ELSE rt1.c2 END THEN UPPER(v0.c0) ELSE (((rt1.c2))<>((rt1.c1))) END ASC, (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) IN (((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON json_quote(((0.12654822653636744) IS TRUE)) FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON ((vt1.c0)=(NULL)) WHERE (CASE WHEN ((vt0.c0)+(vt0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN v0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN 50458908 END WHEN ((((((((rt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('kA')))OR(rt1.c0)) THEN ((vt1.c0)IS(rt1.c1)) WHEN (((rt1.c0))>=((rt1.c2))) THEN (~ (vt1.c0)) ELSE ((rt1.c1) ISNULL) END) ORDER BY CASE ((((((((0.8258269553061934)AND('')))OR(rt1.c1)))OR(vt0.c0)))AND(rt1.c1))  WHEN CASE WHEN rt1.c2 THEN v0.c0 ELSE rt1.c2 END THEN UPPER(v0.c0) ELSE (((rt1.c2))<>((rt1.c1))) END ASC, (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) IN (((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)+(vt0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN v0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN 50458908 END WHEN ((((((((rt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('kA')))OR(rt1.c0)) THEN ((vt1.c0)IS(rt1.c1)) WHEN (((rt1.c0))>=((rt1.c2))) THEN (~ (vt1.c0)) ELSE ((rt1.c1) ISNULL) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON json_quote(((0.12654822653636744) IS TRUE)) FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON ((vt1.c0)=(NULL)) ORDER BY CASE ((((((((0.8258269553061934)AND('')))OR(rt1.c1)))OR(vt0.c0)))AND(rt1.c1))  WHEN CASE WHEN rt1.c2 THEN v0.c0 ELSE rt1.c2 END THEN UPPER(v0.c0) ELSE (((rt1.c2))<>((rt1.c1))) END ASC, (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) IN (((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON json_quote(((0.12654822653636744) IS TRUE)) FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON ((vt1.c0)=(NULL)) WHERE (CASE WHEN ((vt0.c0)+(vt0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN v0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN 50458908 END WHEN ((((((((rt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('kA')))OR(rt1.c0)) THEN ((vt1.c0)IS(rt1.c1)) WHEN (((rt1.c0))>=((rt1.c2))) THEN (~ (vt1.c0)) ELSE ((rt1.c1) ISNULL) END) ORDER BY CASE ((((((((0.8258269553061934)AND('')))OR(rt1.c1)))OR(vt0.c0)))AND(rt1.c1))  WHEN CASE WHEN rt1.c2 THEN v0.c0 ELSE rt1.c2 END THEN UPPER(v0.c0) ELSE (((rt1.c2))<>((rt1.c1))) END ASC, (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) IN (((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt1, vt1 CROSS JOIN vt0 ON CASE vt0.c0 COLLATE BINARY  WHEN 0X3fd01b46 THEN (vt0.c0 IN ()) END FULL OUTER JOIN v0 ON LIKE(TRIM(v0.c0, rt1.c0), (+ (rt1.c0))) WHERE ((((vt0.c0)+(rt1.c1)) IN ())) ORDER BY (((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)+(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, vt1 CROSS JOIN vt0 ON CASE vt0.c0 COLLATE BINARY  WHEN 0X3fd01b46 THEN (vt0.c0 IN ()) END FULL OUTER JOIN v0 ON LIKE(TRIM(v0.c0, rt1.c0), (+ (rt1.c0))) ORDER BY (((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt1, vt1 CROSS JOIN vt0 ON CASE vt0.c0 COLLATE BINARY  WHEN 0X3fd01b46 THEN (vt0.c0 IN ()) END FULL OUTER JOIN v0 ON LIKE(TRIM(v0.c0, rt1.c0), (+ (rt1.c0))) WHERE ((((vt0.c0)+(rt1.c1)) IN ())) ORDER BY (((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)+(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, vt1 CROSS JOIN vt0 ON CASE vt0.c0 COLLATE BINARY  WHEN 0X3fd01b46 THEN (vt0.c0 IN ()) END FULL OUTER JOIN v0 ON LIKE(TRIM(v0.c0, rt1.c0), (+ (rt1.c0))) ORDER BY (((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt1, vt1 CROSS JOIN vt0 ON CASE vt0.c0 COLLATE BINARY  WHEN 0X3fd01b46 THEN (vt0.c0 IN ()) END FULL OUTER JOIN v0 ON LIKE(TRIM(v0.c0, rt1.c0), (+ (rt1.c0))) WHERE ((((vt0.c0)+(rt1.c1)) IN ())) ORDER BY (((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM rt1, v0 WHERE (CAST('1090458800' AS REAL)) ORDER BY (((x'337b500f' IN ())) ISNULL)  NULLS LAST, (CASE rt1.c1  WHEN v0.c0 THEN v0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('1090458800' AS REAL)) IS TRUE)  as count FROM rt1, v0 ORDER BY (((x'337b500f' IN ())) ISNULL)  NULLS LAST, (CASE rt1.c1  WHEN v0.c0 THEN v0.c0 END IN ())  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE (CAST('1090458800' AS REAL)) ORDER BY (((x'337b500f' IN ())) ISNULL)  NULLS LAST, (CASE rt1.c1  WHEN v0.c0 THEN v0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('1090458800' AS REAL)) IS TRUE)  as count FROM rt1, v0 ORDER BY (((x'337b500f' IN ())) ISNULL)  NULLS LAST, (CASE rt1.c1  WHEN v0.c0 THEN v0.c0 END IN ())  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE (CAST('1090458800' AS REAL)) ORDER BY (((x'337b500f' IN ())) ISNULL)  NULLS LAST, (CASE rt1.c1  WHEN v0.c0 THEN v0.c0 END IN ())  NULLS LAST;
SELECT * FROM vt0, rt1, vt1 CROSS JOIN v0 ON (((rt1.c1 IN ())) NOTNULL) WHERE (CASE WHEN 467627211 THEN ((rt1.c0) ISNULL) END) ORDER BY (ABS(NULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 467627211 THEN ((rt1.c0) ISNULL) END) IS TRUE)  as count FROM vt0, rt1, vt1 CROSS JOIN v0 ON (((rt1.c1 IN ())) NOTNULL) ORDER BY (ABS(NULL) IN ())  NULLS LAST);
SELECT * FROM vt0, rt1, vt1 CROSS JOIN v0 ON (((rt1.c1 IN ())) NOTNULL) WHERE (CASE WHEN 467627211 THEN ((rt1.c0) ISNULL) END) ORDER BY (ABS(NULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 467627211 THEN ((rt1.c0) ISNULL) END) IS TRUE)  as count FROM vt0, rt1, vt1 CROSS JOIN v0 ON (((rt1.c1 IN ())) NOTNULL) ORDER BY (ABS(NULL) IN ())  NULLS LAST);
SELECT * FROM vt0, rt1, vt1 CROSS JOIN v0 ON (((rt1.c1 IN ())) NOTNULL) WHERE (CASE WHEN 467627211 THEN ((rt1.c0) ISNULL) END) ORDER BY (ABS(NULL) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE (COALESCE(LENGTH(rt1.c2), (- ('50458908')), ((rt1.c1) NOTNULL), (NOT (v0.c0)), vt1.c0, NULL));
SELECT SUM(count) FROM (SELECT ((COALESCE(LENGTH(rt1.c2), (- ('50458908')), ((rt1.c1) NOTNULL), (NOT (v0.c0)), vt1.c0, NULL)) IS TRUE)  as count FROM rt1, vt1, v0);
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE (COALESCE(LENGTH(rt1.c2), (- ('50458908')), ((rt1.c1) NOTNULL), (NOT (v0.c0)), vt1.c0, NULL));
SELECT SUM(count) FROM (SELECT ((COALESCE(LENGTH(rt1.c2), (- ('50458908')), ((rt1.c1) NOTNULL), (NOT (v0.c0)), vt1.c0, NULL)) IS TRUE)  as count FROM rt1, vt1, v0);
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE (COALESCE(LENGTH(rt1.c2), (- ('50458908')), ((rt1.c1) NOTNULL), (NOT (v0.c0)), vt1.c0, NULL));
SELECT ALL * FROM rt1, v0, vt0, vt1 WHERE ((((vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((CAST(rt1.c1 AS REAL), (- (vt1.c0)), ABS(DISTINCT v0.c0))) AND ((ABS(v0.c0), vt1.c0, (- (rt1.c2)))))) ORDER BY (((((((((rt1.c2 IN ()))AND(rt1.c1)))OR((((rt1.c2, v0.c0, rt1.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, rt1.c1, vt1.c0))))))AND(((rt1.c1) IS FALSE))))AND(((((rt1.c0)AND(rt1.c2)))AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((CAST(rt1.c1 AS REAL), (- (vt1.c0)), ABS(DISTINCT v0.c0))) AND ((ABS(v0.c0), vt1.c0, (- (rt1.c2)))))) IS TRUE)  as count FROM rt1, v0, vt0, vt1 ORDER BY (((((((((rt1.c2 IN ()))AND(rt1.c1)))OR((((rt1.c2, v0.c0, rt1.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, rt1.c1, vt1.c0))))))AND(((rt1.c1) IS FALSE))))AND(((((rt1.c0)AND(rt1.c2)))AND(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0, vt0, vt1 WHERE ((((vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((CAST(rt1.c1 AS REAL), (- (vt1.c0)), ABS(DISTINCT v0.c0))) AND ((ABS(v0.c0), vt1.c0, (- (rt1.c2)))))) ORDER BY (((((((((rt1.c2 IN ()))AND(rt1.c1)))OR((((rt1.c2, v0.c0, rt1.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, rt1.c1, vt1.c0))))))AND(((rt1.c1) IS FALSE))))AND(((((rt1.c0)AND(rt1.c2)))AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((CAST(rt1.c1 AS REAL), (- (vt1.c0)), ABS(DISTINCT v0.c0))) AND ((ABS(v0.c0), vt1.c0, (- (rt1.c2)))))) IS TRUE)  as count FROM rt1, v0, vt0, vt1 ORDER BY (((((((((rt1.c2 IN ()))AND(rt1.c1)))OR((((rt1.c2, v0.c0, rt1.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, rt1.c1, vt1.c0))))))AND(((rt1.c1) IS FALSE))))AND(((((rt1.c0)AND(rt1.c2)))AND(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0, vt0, vt1 WHERE ((((vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((CAST(rt1.c1 AS REAL), (- (vt1.c0)), ABS(DISTINCT v0.c0))) AND ((ABS(v0.c0), vt1.c0, (- (rt1.c2)))))) ORDER BY (((((((((rt1.c2 IN ()))AND(rt1.c1)))OR((((rt1.c2, v0.c0, rt1.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, rt1.c1, vt1.c0))))))AND(((rt1.c1) IS FALSE))))AND(((((rt1.c0)AND(rt1.c2)))AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)>(v0.c0)))AND(NULL))) ORDER BY CASE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END  WHEN ((v0.c0)AND(v0.c0)) THEN (((x'', v0.c0, v0.c0))>=((vt0.c0, vt0.c0, v0.c0))) ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE NULL END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>(v0.c0)))AND(NULL))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END  WHEN ((v0.c0)AND(v0.c0)) THEN (((x'', v0.c0, v0.c0))>=((vt0.c0, vt0.c0, v0.c0))) ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE NULL END END DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)>(v0.c0)))AND(NULL))) ORDER BY CASE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END  WHEN ((v0.c0)AND(v0.c0)) THEN (((x'', v0.c0, v0.c0))>=((vt0.c0, vt0.c0, v0.c0))) ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE NULL END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>(v0.c0)))AND(NULL))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END  WHEN ((v0.c0)AND(v0.c0)) THEN (((x'', v0.c0, v0.c0))>=((vt0.c0, vt0.c0, v0.c0))) ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE NULL END END DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)>(v0.c0)))AND(NULL))) ORDER BY CASE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END  WHEN ((v0.c0)AND(v0.c0)) THEN (((x'', v0.c0, v0.c0))>=((vt0.c0, vt0.c0, v0.c0))) ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE NULL END END DESC;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)&(vt1.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (-287607644))) ORDER BY 50458908 DESC  NULLS LAST, '1090458800' DESC  NULLS FIRST, ((((CASE WHEN vt1.c0 THEN vt0.c0 END)AND((~ (vt0.c0)))))AND(((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt1.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (-287607644))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 50458908 DESC  NULLS LAST, '1090458800' DESC  NULLS FIRST, ((((CASE WHEN vt1.c0 THEN vt0.c0 END)AND((~ (vt0.c0)))))AND(((vt0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)&(vt1.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (-287607644))) ORDER BY 50458908 DESC  NULLS LAST, '1090458800' DESC  NULLS FIRST, ((((CASE WHEN vt1.c0 THEN vt0.c0 END)AND((~ (vt0.c0)))))AND(((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt1.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (-287607644))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 50458908 DESC  NULLS LAST, '1090458800' DESC  NULLS FIRST, ((((CASE WHEN vt1.c0 THEN vt0.c0 END)AND((~ (vt0.c0)))))AND(((vt0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c2)<>(v0.c0)))==((rt1.c1 IN ()))) WHERE (((((((rt1.c0)>>(rt1.c1)))OR(((rt1.c1) ISNULL))))OR(UPPER(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)>>(rt1.c1)))OR(((rt1.c1) ISNULL))))OR(UPPER(rt1.c1)))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((rt1.c2)<>(v0.c0)))==((rt1.c1 IN ()))));
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c2)<>(v0.c0)))==((rt1.c1 IN ()))) WHERE (((((((rt1.c0)>>(rt1.c1)))OR(((rt1.c1) ISNULL))))OR(UPPER(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)>>(rt1.c1)))OR(((rt1.c1) ISNULL))))OR(UPPER(rt1.c1)))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((rt1.c2)<>(v0.c0)))==((rt1.c1 IN ()))));
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c2)<>(v0.c0)))==((rt1.c1 IN ()))) WHERE (((((((rt1.c0)>>(rt1.c1)))OR(((rt1.c1) ISNULL))))OR(UPPER(rt1.c1))));
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT))&(((((rt1.c2)AND(rt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT))&(((((rt1.c2)AND(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT))&(((((rt1.c2)AND(rt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT))&(((((rt1.c2)AND(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT))&(((((rt1.c2)AND(rt1.c0)))OR(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (NULL);
SELECT ALL * FROM v0, vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((- (vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, rt1, v0, vt0 WHERE (((vt0.c0 COLLATE BINARY)||(((rt1.c1) IS FALSE)))) ORDER BY ((((vt0.c0)>>(rt1.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)||(((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt1, rt1, v0, vt0 ORDER BY ((((vt0.c0)>>(rt1.c2))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1, v0, vt0 WHERE (((vt0.c0 COLLATE BINARY)||(((rt1.c1) IS FALSE)))) ORDER BY ((((vt0.c0)>>(rt1.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)||(((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt1, rt1, v0, vt0 ORDER BY ((((vt0.c0)>>(rt1.c2))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1, v0, vt0 WHERE (((vt0.c0 COLLATE BINARY)||(((rt1.c1) IS FALSE)))) ORDER BY ((((vt0.c0)>>(rt1.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (((TRIM(x'', rt1.c1))OR(CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN 0.768476325078334 WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY CASE (NOT (rt1.c1))  WHEN ((v0.c0) NOTNULL) THEN (('-858772734')==(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(x'', rt1.c1))OR(CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN 0.768476325078334 WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY CASE (NOT (rt1.c1))  WHEN ((v0.c0) NOTNULL) THEN (('-858772734')==(v0.c0)) END ASC);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (((TRIM(x'', rt1.c1))OR(CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN 0.768476325078334 WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY CASE (NOT (rt1.c1))  WHEN ((v0.c0) NOTNULL) THEN (('-858772734')==(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(x'', rt1.c1))OR(CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN 0.768476325078334 WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY CASE (NOT (rt1.c1))  WHEN ((v0.c0) NOTNULL) THEN (('-858772734')==(v0.c0)) END ASC);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (((TRIM(x'', rt1.c1))OR(CASE v0.c0  WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN 0.768476325078334 WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY CASE (NOT (rt1.c1))  WHEN ((v0.c0) NOTNULL) THEN (('-858772734')==(v0.c0)) END ASC;
SELECT ALL * FROM vt0, rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c1 END)AND(CAST(rt1.c1 AS TEXT))))OR(((vt0.c0)*(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c2 THEN rt1.c1 END)AND(CAST(rt1.c1 AS TEXT))))OR(((vt0.c0)*(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c1 END)AND(CAST(rt1.c1 AS TEXT))))OR(((vt0.c0)*(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c2 THEN rt1.c1 END)AND(CAST(rt1.c1 AS TEXT))))OR(((vt0.c0)*(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c1 END)AND(CAST(rt1.c1 AS TEXT))))OR(((vt0.c0)*(rt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt1 ON NULL WHERE ((((rt1.c0)IS(vt1.c0)) IN ((((rt1.c1))<=((vt1.c0)))))) ORDER BY (((((rt1.c2)<(rt1.c1))))<=((rt1.c0)));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)IS(vt1.c0)) IN ((((rt1.c1))<=((vt1.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON NULL ORDER BY (((((rt1.c2)<(rt1.c1))))<=((rt1.c0))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt1 ON NULL WHERE ((((rt1.c0)IS(vt1.c0)) IN ((((rt1.c1))<=((vt1.c0)))))) ORDER BY (((((rt1.c2)<(rt1.c1))))<=((rt1.c0)));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)IS(vt1.c0)) IN ((((rt1.c1))<=((vt1.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON NULL ORDER BY (((((rt1.c2)<(rt1.c1))))<=((rt1.c0))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt1 ON NULL WHERE ((((rt1.c0)IS(vt1.c0)) IN ((((rt1.c1))<=((vt1.c0)))))) ORDER BY (((((rt1.c2)<(rt1.c1))))<=((rt1.c0)));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN (v0.c0))))==((json(v0.c0))))) ORDER BY ((((('dc', v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))))<(CAST(v0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN (v0.c0))))=((json(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((('dc', v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))))<(CAST(v0.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN (v0.c0))))==((json(v0.c0))))) ORDER BY ((((('dc', v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))))<(CAST(v0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN (v0.c0))))=((json(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((('dc', v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))))<(CAST(v0.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN (v0.c0))))==((json(v0.c0))))) ORDER BY ((((('dc', v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))))<(CAST(v0.c0 AS INTEGER))) ASC;
SELECT ALL * FROM v0, vt0, rt1 WHERE (v0.c0 COLLATE BINARY) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY x'' ASC);
SELECT ALL * FROM v0, vt0, rt1 WHERE (v0.c0 COLLATE BINARY) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY x'' ASC);
SELECT ALL * FROM v0, vt0, rt1 WHERE (v0.c0 COLLATE BINARY) ORDER BY x'' ASC;
SELECT ALL COUNT(*) FROM rt1, v0, vt1, vt0 WHERE ('260285318') ORDER BY ((CASE WHEN rt1.c2 THEN vt1.c0 ELSE rt1.c1 END) BETWEEN ((((rt1.c1))>=((vt1.c0)))) AND (CASE rt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('260285318') IS TRUE)  as count FROM rt1, v0, vt1, vt0 ORDER BY ((CASE WHEN rt1.c2 THEN vt1.c0 ELSE rt1.c1 END) BETWEEN ((((rt1.c1))>=((vt1.c0)))) AND (CASE rt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, vt1, vt0 WHERE ('260285318') ORDER BY ((CASE WHEN rt1.c2 THEN vt1.c0 ELSE rt1.c1 END) BETWEEN ((((rt1.c1))>=((vt1.c0)))) AND (CASE rt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('260285318') IS TRUE)  as count FROM rt1, v0, vt1, vt0 ORDER BY ((CASE WHEN rt1.c2 THEN vt1.c0 ELSE rt1.c1 END) BETWEEN ((((rt1.c1))>=((vt1.c0)))) AND (CASE rt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, vt1, vt0 WHERE ('260285318') ORDER BY ((CASE WHEN rt1.c2 THEN vt1.c0 ELSE rt1.c1 END) BETWEEN ((((rt1.c1))>=((vt1.c0)))) AND (CASE rt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END)) ASC  NULLS LAST;
SELECT * FROM vt0, vt1, rt1, v0 WHERE (((rt1.c1) BETWEEN (v0.c0) AND (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) BETWEEN (v0.c0) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, rt1, v0);
SELECT * FROM vt0, vt1, rt1, v0 WHERE (((rt1.c1) BETWEEN (v0.c0) AND (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) BETWEEN (v0.c0) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, rt1, v0);
SELECT * FROM vt0, vt1, rt1, v0 WHERE (((rt1.c1) BETWEEN (v0.c0) AND (vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, vt1, v0, vt0 WHERE (CAST(('ᭆ%⬂96{璤.' IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(('ᭆ%⬂96{璤.' IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, v0, vt0 WHERE (CAST(('ᭆ%⬂96{璤.' IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(('ᭆ%⬂96{璤.' IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, v0, vt0 WHERE (CAST(('ᭆ%⬂96{璤.' IN ()) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, rt1, vt1, vt0 WHERE (CASE WHEN CAST(vt1.c0 AS TEXT) THEN CAST(rt1.c2 AS BLOB) ELSE rt1.c2 COLLATE NOCASE END) ORDER BY json_extract(vt1.c0, vt1.c0, (rt1.c0 IN ()), rt1.c0 COLLATE BINARY) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS TEXT) THEN CAST(rt1.c2 AS BLOB) ELSE rt1.c2 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt1, vt1, vt0 ORDER BY json_extract(vt1.c0, vt1.c0, (rt1.c0 IN ()), rt1.c0 COLLATE BINARY) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1, vt1, vt0 WHERE (CASE WHEN CAST(vt1.c0 AS TEXT) THEN CAST(rt1.c2 AS BLOB) ELSE rt1.c2 COLLATE NOCASE END) ORDER BY json_extract(vt1.c0, vt1.c0, (rt1.c0 IN ()), rt1.c0 COLLATE BINARY) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS TEXT) THEN CAST(rt1.c2 AS BLOB) ELSE rt1.c2 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt1, vt1, vt0 ORDER BY json_extract(vt1.c0, vt1.c0, (rt1.c0 IN ()), rt1.c0 COLLATE BINARY) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1, vt1, vt0 WHERE (CASE WHEN CAST(vt1.c0 AS TEXT) THEN CAST(rt1.c2 AS BLOB) ELSE rt1.c2 COLLATE NOCASE END) ORDER BY json_extract(vt1.c0, vt1.c0, (rt1.c0 IN ()), rt1.c0 COLLATE BINARY) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((('1090458800') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('1090458800') IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('1090458800') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('1090458800') IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('1090458800') IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0)>>(rt1.c2))))>((((rt1.c2)IS NOT(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)>>(rt1.c2))))>((((rt1.c2)IS NOT(rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0)>>(rt1.c2))))>((((rt1.c2)IS NOT(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)>>(rt1.c2))))>((((rt1.c2)IS NOT(rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0)>>(rt1.c2))))>((((rt1.c2)IS NOT(rt1.c2))))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt1 WHERE ((- ((((vt1.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, rt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY ((((rt1.c2) NOT NULL))IS(((vt0.c0) NOT NULL)))  NULLS FIRST, ((CAST(vt0.c0 AS REAL))>=((vt0.c0 IN (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt1.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, rt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY ((((rt1.c2) NOT NULL))IS(((vt0.c0) NOT NULL)))  NULLS FIRST, ((CAST(vt0.c0 AS REAL))>=((vt0.c0 IN (vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt1 WHERE ((- ((((vt1.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, rt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY ((((rt1.c2) NOT NULL))IS(((vt0.c0) NOT NULL)))  NULLS FIRST, ((CAST(vt0.c0 AS REAL))>=((vt0.c0 IN (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt1.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, rt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY ((((rt1.c2) NOT NULL))IS(((vt0.c0) NOT NULL)))  NULLS FIRST, ((CAST(vt0.c0 AS REAL))>=((vt0.c0 IN (vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt1 WHERE ((- ((((vt1.c0, rt1.c2, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, rt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY ((((rt1.c2) NOT NULL))IS(((vt0.c0) NOT NULL)))  NULLS FIRST, ((CAST(vt0.c0 AS REAL))>=((vt0.c0 IN (vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN rt1 ON (((v0.c0 IN ('-287607644'))) NOTNULL) WHERE ((((+ (rt1.c1)))-(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1)))-(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt1 INNER JOIN rt1 ON (((v0.c0 IN ('-287607644'))) NOTNULL));
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN rt1 ON (((v0.c0 IN ('-287607644'))) NOTNULL) WHERE ((((+ (rt1.c1)))-(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1)))-(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt1 INNER JOIN rt1 ON (((v0.c0 IN ('-287607644'))) NOTNULL));
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN rt1 ON (((v0.c0 IN ('-287607644'))) NOTNULL) WHERE ((((+ (rt1.c1)))-(((vt1.c0) NOT NULL))));
SELECT * FROM vt0, vt1 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND('{	'))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))) ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt1.c0 WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt0.c0  WHEN -2055770880 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) NOT NULL) ELSE vt0.c0 COLLATE RTRIM END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND('{	'))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt1.c0 WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt0.c0  WHEN -2055770880 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) NOT NULL) ELSE vt0.c0 COLLATE RTRIM END DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND('{	'))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))) ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt1.c0 WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt0.c0  WHEN -2055770880 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) NOT NULL) ELSE vt0.c0 COLLATE RTRIM END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND('{	'))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt1.c0 WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt0.c0  WHEN -2055770880 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) NOT NULL) ELSE vt0.c0 COLLATE RTRIM END DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND('{	'))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))>=((vt0.c0)))))) ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN vt1.c0 WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt0.c0  WHEN -2055770880 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) NOT NULL) ELSE vt0.c0 COLLATE RTRIM END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 CROSS JOIN v0 ON 'pG.+' RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((rt1.c0)=(vt1.c0)) ELSE ((vt0.c0) NOTNULL) END WHERE (((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END) IS TRUE)) ORDER BY (((NOT (rt1.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN v0 ON 'pG.+' RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((rt1.c0)=(vt1.c0)) ELSE ((vt0.c0) NOTNULL) END ORDER BY (((NOT (rt1.c0))) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 CROSS JOIN v0 ON 'pG.+' RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((rt1.c0)=(vt1.c0)) ELSE ((vt0.c0) NOTNULL) END WHERE (((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END) IS TRUE)) ORDER BY (((NOT (rt1.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN v0 ON 'pG.+' RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((rt1.c0)=(vt1.c0)) ELSE ((vt0.c0) NOTNULL) END ORDER BY (((NOT (rt1.c0))) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 CROSS JOIN v0 ON 'pG.+' RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((rt1.c0)=(vt1.c0)) ELSE ((vt0.c0) NOTNULL) END WHERE (((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END) IS TRUE)) ORDER BY (((NOT (rt1.c0))) IS FALSE) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS REAL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS REAL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS REAL)) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0)))IS(((vt1.c0)GLOB(vt1.c0))))) ORDER BY CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS INTEGER) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE CAST(vt1.c0 AS NUMERIC) END ASC, (((vt1.c0) IS TRUE) IN (vt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>>(vt1.c0)))IS(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS INTEGER) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE CAST(vt1.c0 AS NUMERIC) END ASC, (((vt1.c0) IS TRUE) IN (vt1.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0)))IS(((vt1.c0)GLOB(vt1.c0))))) ORDER BY CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS INTEGER) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE CAST(vt1.c0 AS NUMERIC) END ASC, (((vt1.c0) IS TRUE) IN (vt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>>(vt1.c0)))IS(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS INTEGER) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE CAST(vt1.c0 AS NUMERIC) END ASC, (((vt1.c0) IS TRUE) IN (vt1.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0)))IS(((vt1.c0)GLOB(vt1.c0))))) ORDER BY CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN CAST(vt1.c0 AS INTEGER) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE CAST(vt1.c0 AS NUMERIC) END ASC, (((vt1.c0) IS TRUE) IN (vt1.c0 COLLATE RTRIM)) ASC;
SELECT * FROM rt1, vt0, vt1 WHERE (((((rt1.c2) IS TRUE))LIKE(json_patch(rt1.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE))LIKE(json_patch(rt1.c0, rt1.c1)))) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT * FROM rt1, vt0, vt1 WHERE (((((rt1.c2) IS TRUE))LIKE(json_patch(rt1.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE))LIKE(json_patch(rt1.c0, rt1.c1)))) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT * FROM rt1, vt0, vt1 WHERE (((((rt1.c2) IS TRUE))LIKE(json_patch(rt1.c0, rt1.c1))));
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((0x1ef852de)<<((rt1.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((0x1ef852de)<<((rt1.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((0x1ef852de)<<((rt1.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((0x1ef852de)<<((rt1.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((0x1ef852de)<<((rt1.c0 IN ()))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((('-858772734') BETWEEN (-2.05577088E9) AND (vt0.c0)))GLOB('519590622'))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('-858772734') BETWEEN (-2.05577088E9) AND (vt0.c0)))GLOB('519590622'))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((('-858772734') BETWEEN (-2.05577088E9) AND (vt0.c0)))GLOB('519590622'))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('-858772734') BETWEEN (-2.05577088E9) AND (vt0.c0)))GLOB('519590622'))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((('-858772734') BETWEEN (-2.05577088E9) AND (vt0.c0)))GLOB('519590622'))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c2 END)AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN rt1.c2 END)AND(NULL))) IS TRUE)  as count FROM vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c2 END)AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN rt1.c2 END)AND(NULL))) IS TRUE)  as count FROM vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c2 END)AND(NULL)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (((((0.031101804515238807, rt1.c0, 0.79744802941969))>((vt0.c0, 0.12654822653636744, vt0.c0))))|(rt1.c0)) FULL OUTER JOIN vt1 ON NULL FULL OUTER JOIN vt0 ON (((((v0.c0)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))=(((vt0.c0)|(vt0.c0)))) WHERE ((((vt0.c0 IN (rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt1.c0))) ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (((((0.031101804515238807, rt1.c0, 0.79744802941969))>((vt0.c0, 0.12654822653636744, vt0.c0))))|(rt1.c0)) FULL OUTER JOIN vt1 ON NULL FULL OUTER JOIN vt0 ON (((((v0.c0)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))==(((vt0.c0)|(vt0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (((((0.031101804515238807, rt1.c0, 0.79744802941969))>((vt0.c0, 0.12654822653636744, vt0.c0))))|(rt1.c0)) FULL OUTER JOIN vt1 ON NULL FULL OUTER JOIN vt0 ON (((((v0.c0)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))=(((vt0.c0)|(vt0.c0)))) WHERE ((((vt0.c0 IN (rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt1.c0))) ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (((((0.031101804515238807, rt1.c0, 0.79744802941969))>((vt0.c0, 0.12654822653636744, vt0.c0))))|(rt1.c0)) FULL OUTER JOIN vt1 ON NULL FULL OUTER JOIN vt0 ON (((((v0.c0)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))==(((vt0.c0)|(vt0.c0)))));
SELECT ALL * FROM vt0, vt1, v0, rt1 WHERE ((+ (((rt1.c1) ISNULL)))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, v0, rt1 ORDER BY ''  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, v0, rt1 WHERE ((+ (((rt1.c1) ISNULL)))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, v0, rt1 ORDER BY ''  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, v0, rt1 WHERE ((+ (((rt1.c1) ISNULL)))) ORDER BY ''  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((NOT (NULL)))|(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (NULL)))|(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (NULL)))|(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (NULL)))|(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (NULL)))|(((vt0.c0)/(vt0.c0)))));
SELECT COUNT(*) FROM rt1, v0 WHERE ((+ ((rt1.c2 IN ('R*A]5T~'))))) ORDER BY ((((((v0.c0)OR(rt1.c2)))AND(rt1.c0)))/(rt1.c1));
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c2 IN ('R*A]5T~'))))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((((v0.c0)OR(rt1.c2)))AND(rt1.c0)))/(rt1.c1)));
SELECT COUNT(*) FROM rt1, v0 WHERE ((+ ((rt1.c2 IN ('R*A]5T~'))))) ORDER BY ((((((v0.c0)OR(rt1.c2)))AND(rt1.c0)))/(rt1.c1));
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c2 IN ('R*A]5T~'))))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((((v0.c0)OR(rt1.c2)))AND(rt1.c0)))/(rt1.c1)));
SELECT COUNT(*) FROM rt1, v0 WHERE ((+ ((rt1.c2 IN ('R*A]5T~'))))) ORDER BY ((((((v0.c0)OR(rt1.c2)))AND(rt1.c0)))/(rt1.c1));
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE (((((x'5742')AND((rt1.c1 IN ()))))OR(((rt1.c1)-('k]')))));
SELECT SUM(count) FROM (SELECT ((((((x'5742')AND((rt1.c1 IN ()))))OR(((rt1.c1)-('k]'))))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE (((((x'5742')AND((rt1.c1 IN ()))))OR(((rt1.c1)-('k]')))));
SELECT SUM(count) FROM (SELECT ((((((x'5742')AND((rt1.c1 IN ()))))OR(((rt1.c1)-('k]'))))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE (((((x'5742')AND((rt1.c1 IN ()))))OR(((rt1.c1)-('k]')))));
SELECT ALL * FROM v0 WHERE (MIN((~ (v0.c0)), (~ (v0.c0)), ((v0.c0)&(v0.c0)), (v0.c0 IN (v0.c0)))) ORDER BY ((v0.c0) NOTNULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((MIN((~ (v0.c0)), (~ (v0.c0)), ((v0.c0)&(v0.c0)), (v0.c0 IN (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOTNULL) COLLATE RTRIM ASC);
SELECT ALL * FROM v0 WHERE (MIN((~ (v0.c0)), (~ (v0.c0)), ((v0.c0)&(v0.c0)), (v0.c0 IN (v0.c0)))) ORDER BY ((v0.c0) NOTNULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((MIN((~ (v0.c0)), (~ (v0.c0)), ((v0.c0)&(v0.c0)), (v0.c0 IN (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOTNULL) COLLATE RTRIM ASC);
SELECT ALL * FROM v0 WHERE (MIN((~ (v0.c0)), (~ (v0.c0)), ((v0.c0)&(v0.c0)), (v0.c0 IN (v0.c0)))) ORDER BY ((v0.c0) NOTNULL) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt1, v0, vt0, rt1 NOT INDEXED WHERE ((~ (x'0bea4f88')));
SELECT SUM(count) FROM (SELECT ALL (((~ (x'0bea4f88'))) IS TRUE)  as count FROM vt1, v0, vt0 NOT INDEXED, rt1);
SELECT COUNT(*) FROM vt1, v0, vt0, rt1 NOT INDEXED WHERE ((~ (x'0bea4f88')));
SELECT SUM(count) FROM (SELECT ALL (((~ (x'0bea4f88'))) IS TRUE)  as count FROM vt1, v0, vt0 NOT INDEXED, rt1);
SELECT COUNT(*) FROM vt1, v0, vt0, rt1 NOT INDEXED WHERE ((~ (x'0bea4f88')));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c0)IS NOT(rt1.c2))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)IS NOT(rt1.c2))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c0)IS NOT(rt1.c2))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)IS NOT(rt1.c2))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c0)IS NOT(rt1.c2))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB)) BETWEEN (CAST(rt1.c2 AS BLOB)) AND ((rt1.c2 IN (rt1.c2, rt1.c0))))) ORDER BY (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS BLOB)) BETWEEN (CAST(rt1.c2 AS BLOB)) AND ((rt1.c2 IN (rt1.c2, rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB)) BETWEEN (CAST(rt1.c2 AS BLOB)) AND ((rt1.c2 IN (rt1.c2, rt1.c0))))) ORDER BY (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS BLOB)) BETWEEN (CAST(rt1.c2 AS BLOB)) AND ((rt1.c2 IN (rt1.c2, rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB)) BETWEEN (CAST(rt1.c2 AS BLOB)) AND ((rt1.c2 IN (rt1.c2, rt1.c0))))) ORDER BY (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END IN ())  NULLS LAST;
SELECT * FROM v0, vt1 WHERE ((((CAST(v0.c0 AS REAL)))<((NULL)))) ORDER BY ((NULL) NOT BETWEEN (((((((((vt1.c0)OR(x'')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(v0.c0 AS REAL)))  NULLS LAST, CAST(((vt1.c0) NOTNULL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS REAL)))<((NULL)))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((NULL) NOT BETWEEN (((((((((vt1.c0)OR(x'')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(v0.c0 AS REAL)))  NULLS LAST, CAST(((vt1.c0) NOTNULL) AS NUMERIC)  NULLS LAST);
SELECT * FROM v0, vt1 WHERE ((((CAST(v0.c0 AS REAL)))<((NULL)))) ORDER BY ((NULL) NOT BETWEEN (((((((((vt1.c0)OR(x'')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(v0.c0 AS REAL)))  NULLS LAST, CAST(((vt1.c0) NOTNULL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS REAL)))<((NULL)))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((NULL) NOT BETWEEN (((((((((vt1.c0)OR(x'')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(v0.c0 AS REAL)))  NULLS LAST, CAST(((vt1.c0) NOTNULL) AS NUMERIC)  NULLS LAST);
SELECT * FROM v0, vt1 WHERE ((((CAST(v0.c0 AS REAL)))<((NULL)))) ORDER BY ((NULL) NOT BETWEEN (((((((((vt1.c0)OR(x'')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) AND (CAST(v0.c0 AS REAL)))  NULLS LAST, CAST(((vt1.c0) NOTNULL) AS NUMERIC)  NULLS LAST;
SELECT * FROM rt1, vt1, vt0, v0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt1, vt0, v0);
SELECT * FROM rt1, vt1, vt0, v0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt1, vt0, v0);
SELECT * FROM rt1, vt1, vt0, v0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT * FROM vt1, v0 WHERE (TRIM((((vt1.c0))>((vt1.c0))))) ORDER BY CASE WHEN load_extension(vt1.c0, 0.7928931965543076) THEN ((vt1.c0)IS(v0.c0)) ELSE (((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) END  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))=(((vt1.c0) NOT BETWEEN ('BQ') AND (vt1.c0)))), ((((vt1.c0 COLLATE NOCASE)AND(v0.c0)))AND(((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((vt1.c0))>((vt1.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY CASE WHEN load_extension(vt1.c0, 0.7928931965543076) THEN ((vt1.c0)IS(v0.c0)) ELSE (((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) END  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))=(((vt1.c0) NOT BETWEEN ('BQ') AND (vt1.c0)))), ((((vt1.c0 COLLATE NOCASE)AND(v0.c0)))AND(((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM vt1, v0 WHERE (TRIM((((vt1.c0))>((vt1.c0))))) ORDER BY CASE WHEN load_extension(vt1.c0, 0.7928931965543076) THEN ((vt1.c0)IS(v0.c0)) ELSE (((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) END  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))=(((vt1.c0) NOT BETWEEN ('BQ') AND (vt1.c0)))), ((((vt1.c0 COLLATE NOCASE)AND(v0.c0)))AND(((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((vt1.c0))>((vt1.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY CASE WHEN load_extension(vt1.c0, 0.7928931965543076) THEN ((vt1.c0)IS(v0.c0)) ELSE (((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) END  NULLS FIRST, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))=(((vt1.c0) NOT BETWEEN ('BQ') AND (vt1.c0)))), ((((vt1.c0 COLLATE NOCASE)AND(v0.c0)))AND(((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE ((NOT (CAST(-430161900 AS REAL))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(-430161900 AS REAL)))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE ((NOT (CAST(-430161900 AS REAL))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(-430161900 AS REAL)))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE ((NOT (CAST(-430161900 AS REAL))));
SELECT COUNT(*) FROM v0, vt0, rt1 NATURAL JOIN vt1 WHERE ('0.10017615377266309');
SELECT SUM(count) FROM (SELECT (('0.10017615377266309') IS TRUE)  as count FROM v0, vt0, rt1 NATURAL JOIN vt1);
SELECT COUNT(*) FROM v0, vt0, rt1 NATURAL JOIN vt1 WHERE ('0.10017615377266309');
SELECT SUM(count) FROM (SELECT (('0.10017615377266309') IS TRUE)  as count FROM v0, vt0, rt1 NATURAL JOIN vt1);
SELECT COUNT(*) FROM v0, vt0, rt1 NATURAL JOIN vt1 WHERE ('0.10017615377266309');
SELECT * FROM vt0 WHERE (5.19590622E8) ORDER BY CASE x''  WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((5.19590622E8) IS TRUE)  as count FROM vt0 ORDER BY CASE x''  WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (5.19590622E8) ORDER BY CASE x''  WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((5.19590622E8) IS TRUE)  as count FROM vt0 ORDER BY CASE x''  WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (5.19590622E8) ORDER BY CASE x''  WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST;
SELECT * FROM v0, vt0, vt1, rt1 WHERE (((((1.0904588E9)OR(IFNULL(DISTINCT vt0.c0, vt1.c0))))AND(((((rt1.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY ((((((rt1.c1)>=(rt1.c0)))AND((~ (rt1.c1)))))OR(((rt1.c2) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((1.0904588E9)OR(IFNULL(DISTINCT vt0.c0, vt1.c0))))AND(((((rt1.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1, rt1 ORDER BY ((((((rt1.c1)>=(rt1.c0)))AND((~ (rt1.c1)))))OR(((rt1.c2) ISNULL)))  NULLS FIRST);
SELECT * FROM v0, vt0, vt1, rt1 WHERE (((((1.0904588E9)OR(IFNULL(DISTINCT vt0.c0, vt1.c0))))AND(((((rt1.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY ((((((rt1.c1)>=(rt1.c0)))AND((~ (rt1.c1)))))OR(((rt1.c2) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((1.0904588E9)OR(IFNULL(DISTINCT vt0.c0, vt1.c0))))AND(((((rt1.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1, rt1 ORDER BY ((((((rt1.c1)>=(rt1.c0)))AND((~ (rt1.c1)))))OR(((rt1.c2) ISNULL)))  NULLS FIRST);
SELECT * FROM v0, vt0, vt1, rt1 WHERE (((((1.0904588E9)OR(IFNULL(DISTINCT vt0.c0, vt1.c0))))AND(((((rt1.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY ((((((rt1.c1)>=(rt1.c0)))AND((~ (rt1.c1)))))OR(((rt1.c2) ISNULL)))  NULLS FIRST;
SELECT * FROM vt1 NATURAL JOIN rt1 WHERE (UPPER(((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((UPPER(((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT * FROM vt1 NATURAL JOIN rt1 WHERE (UPPER(((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((UPPER(((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT * FROM vt1 NATURAL JOIN rt1 WHERE (UPPER(((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))));
SELECT * FROM rt1, vt1, v0, vt0 WHERE (((((rt1.c0 COLLATE NOCASE)AND(HEX(rt1.c1))))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 COLLATE NOCASE)AND(HEX(rt1.c1))))AND(rt1.c1))) IS TRUE)  as count FROM rt1, vt1, v0, vt0);
SELECT * FROM rt1, vt1, v0, vt0 WHERE (((((rt1.c0 COLLATE NOCASE)AND(HEX(rt1.c1))))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 COLLATE NOCASE)AND(HEX(rt1.c1))))AND(rt1.c1))) IS TRUE)  as count FROM rt1, vt1, v0, vt0);
SELECT * FROM rt1, vt1, v0, vt0 WHERE (((((rt1.c0 COLLATE NOCASE)AND(HEX(rt1.c1))))AND(rt1.c1)));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(NULL)))AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(NULL)))AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(NULL)))AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(NULL)))AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(NULL)))AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) ORDER BY CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.8798793302799508 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.8798793302799508 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) ORDER BY CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.8798793302799508 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.8798793302799508 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) ORDER BY CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.8798793302799508 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT * FROM rt1 WHERE (CASE ((rt1.c1)AND(rt1.c0))  WHEN (rt1.c2 IN (rt1.c2)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 COLLATE BINARY END) ORDER BY ((CAST('' AS INTEGER))<>(rt1.c1 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)AND(rt1.c0))  WHEN (rt1.c2 IN (rt1.c2)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt1 ORDER BY ((CAST('' AS INTEGER))<>(rt1.c1 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CASE ((rt1.c1)AND(rt1.c0))  WHEN (rt1.c2 IN (rt1.c2)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 COLLATE BINARY END) ORDER BY ((CAST('' AS INTEGER))<>(rt1.c1 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1)AND(rt1.c0))  WHEN (rt1.c2 IN (rt1.c2)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt1 ORDER BY ((CAST('' AS INTEGER))<>(rt1.c1 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CASE ((rt1.c1)AND(rt1.c0))  WHEN (rt1.c2 IN (rt1.c2)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 COLLATE BINARY END) ORDER BY ((CAST('' AS INTEGER))<>(rt1.c1 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON (((('50458908') BETWEEN (vt0.c0) AND (rt1.c0)))GLOB((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((NULL))))) WHERE ((((x'')AND(vt0.c0)) IN (rt1.c1 COLLATE RTRIM, (((vt0.c0))>=((rt1.c0))), ((rt1.c1)!=('64'))))) ORDER BY CAST(((rt1.c1)<<(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'')AND(vt0.c0)) IN (rt1.c1 COLLATE RTRIM, (((vt0.c0))>=((rt1.c0))), ((rt1.c1)<>('64'))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (((('50458908') BETWEEN (vt0.c0) AND (rt1.c0)))GLOB((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((NULL))))) ORDER BY CAST(((rt1.c1)<<(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON (((('50458908') BETWEEN (vt0.c0) AND (rt1.c0)))GLOB((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((NULL))))) WHERE ((((x'')AND(vt0.c0)) IN (rt1.c1 COLLATE RTRIM, (((vt0.c0))>=((rt1.c0))), ((rt1.c1)!=('64'))))) ORDER BY CAST(((rt1.c1)<<(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'')AND(vt0.c0)) IN (rt1.c1 COLLATE RTRIM, (((vt0.c0))>=((rt1.c0))), ((rt1.c1)<>('64'))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (((('50458908') BETWEEN (vt0.c0) AND (rt1.c0)))GLOB((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((NULL))))) ORDER BY CAST(((rt1.c1)<<(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON (((('50458908') BETWEEN (vt0.c0) AND (rt1.c0)))GLOB((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((NULL))))) WHERE ((((x'')AND(vt0.c0)) IN (rt1.c1 COLLATE RTRIM, (((vt0.c0))>=((rt1.c0))), ((rt1.c1)!=('64'))))) ORDER BY CAST(((rt1.c1)<<(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((CAST(rt1.c0 AS INTEGER)))>=(((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c0 AS INTEGER)))>=(((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((CAST(rt1.c0 AS INTEGER)))>=(((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c0 AS INTEGER)))>=(((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((CAST(rt1.c0 AS INTEGER)))>=(((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))));
SELECT ALL * FROM v0, vt1 WHERE (CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0)))  WHEN ((v0.c0) ISNULL) THEN ((v0.c0)LIKE(vt1.c0)) END) ORDER BY ((666357681) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC, TRIM(vt1.c0 COLLATE NOCASE), ((vt1.c0)=(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0)))  WHEN ((v0.c0) ISNULL) THEN ((v0.c0)LIKE(vt1.c0)) END) IS TRUE)  as count FROM v0, vt1 ORDER BY ((666357681) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC, TRIM(vt1.c0 COLLATE NOCASE), ((vt1.c0)=(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0, vt1 WHERE (CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0)))  WHEN ((v0.c0) ISNULL) THEN ((v0.c0)LIKE(vt1.c0)) END) ORDER BY ((666357681) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC, TRIM(vt1.c0 COLLATE NOCASE), ((vt1.c0)=(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0)))  WHEN ((v0.c0) ISNULL) THEN ((v0.c0)LIKE(vt1.c0)) END) IS TRUE)  as count FROM v0, vt1 ORDER BY ((666357681) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC, TRIM(vt1.c0 COLLATE NOCASE), ((vt1.c0)=(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0, vt1 WHERE (CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0)))  WHEN ((v0.c0) ISNULL) THEN ((v0.c0)LIKE(vt1.c0)) END) ORDER BY ((666357681) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC, TRIM(vt1.c0 COLLATE NOCASE), ((vt1.c0)=(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE ('0.031101804515238807') ORDER BY LOWER(DISTINCT ((rt1.c1)LIKE(rt1.c2)))  NULLS LAST, CASE WHEN ((rt1.c1)>>(vt0.c0)) THEN ((0.684563653858827)<=(vt1.c0)) ELSE RTRIM(v0.c0) END DESC  NULLS LAST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (('0.031101804515238807') IS TRUE)  as count FROM rt1, vt0, vt1, v0 ORDER BY LOWER(DISTINCT ((rt1.c1)LIKE(rt1.c2)))  NULLS LAST, CASE WHEN ((rt1.c1)>>(vt0.c0)) THEN ((0.684563653858827)<=(vt1.c0)) ELSE RTRIM(v0.c0) END DESC  NULLS LAST, vt1.c0 DESC);
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE ('0.031101804515238807') ORDER BY LOWER(DISTINCT ((rt1.c1)LIKE(rt1.c2)))  NULLS LAST, CASE WHEN ((rt1.c1)>>(vt0.c0)) THEN ((0.684563653858827)<=(vt1.c0)) ELSE RTRIM(v0.c0) END DESC  NULLS LAST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (('0.031101804515238807') IS TRUE)  as count FROM rt1, vt0, vt1, v0 ORDER BY LOWER(DISTINCT ((rt1.c1)LIKE(rt1.c2)))  NULLS LAST, CASE WHEN ((rt1.c1)>>(vt0.c0)) THEN ((0.684563653858827)<=(vt1.c0)) ELSE RTRIM(v0.c0) END DESC  NULLS LAST, vt1.c0 DESC);
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE ('0.031101804515238807') ORDER BY LOWER(DISTINCT ((rt1.c1)LIKE(rt1.c2)))  NULLS LAST, CASE WHEN ((rt1.c1)>>(vt0.c0)) THEN ((0.684563653858827)<=(vt1.c0)) ELSE RTRIM(v0.c0) END DESC  NULLS LAST, vt1.c0 DESC;
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE (((x'') ISNULL)) ORDER BY ((((rt1.c2 COLLATE RTRIM)AND(((rt1.c2) NOT NULL))))OR(LAST_INSERT_ROWID()));
SELECT SUM(count) FROM (SELECT ALL ((((x'') ISNULL)) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0, vt1, v0 ORDER BY ((((rt1.c2 COLLATE RTRIM)AND(((rt1.c2) NOT NULL))))OR(LAST_INSERT_ROWID())));
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE (((x'') ISNULL)) ORDER BY ((((rt1.c2 COLLATE RTRIM)AND(((rt1.c2) NOT NULL))))OR(LAST_INSERT_ROWID()));
SELECT SUM(count) FROM (SELECT ALL ((((x'') ISNULL)) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0, vt1, v0 ORDER BY ((((rt1.c2 COLLATE RTRIM)AND(((rt1.c2) NOT NULL))))OR(LAST_INSERT_ROWID())));
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE (((x'') ISNULL)) ORDER BY ((((rt1.c2 COLLATE RTRIM)AND(((rt1.c2) NOT NULL))))OR(LAST_INSERT_ROWID()));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0) NOT NULL)) AND (INSTR(v0.c0, v0.c0)))) ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0) AND ((NULL IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0) NOT NULL)) AND (INSTR(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0) AND ((NULL IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0) NOT NULL)) AND (INSTR(v0.c0, v0.c0)))) ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0) AND ((NULL IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0) NOT NULL)) AND (INSTR(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0) AND ((NULL IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((v0.c0) NOT NULL)) AND (INSTR(v0.c0, v0.c0)))) ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0) AND ((NULL IN ())));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))), ((rt1.c2) BETWEEN (v0.c0) AND (rt1.c0)), (~ (vt1.c0)), rt1.c0 COLLATE NOCASE, (((rt1.c2, rt1.c2, rt1.c1))>=((vt1.c0, rt1.c0, rt1.c0)))))<=((rt1.c2, v0.c0 COLLATE RTRIM, x'', NULL, json_array_length(v0.c0)))) CROSS JOIN vt1 ON (((vt1.c0))<>((CASE WHEN v0.c0 THEN vt1.c0 END))) WHERE ((- (load_extension(rt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (load_extension(rt1.c0, vt1.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))), ((rt1.c2) BETWEEN (v0.c0) AND (rt1.c0)), (~ (vt1.c0)), rt1.c0 COLLATE NOCASE, (((rt1.c2, rt1.c2, rt1.c1))>=((vt1.c0, rt1.c0, rt1.c0)))))<=((rt1.c2, v0.c0 COLLATE RTRIM, x'', NULL, json_array_length(v0.c0)))) CROSS JOIN vt1 ON (((vt1.c0))!=((CASE WHEN v0.c0 THEN vt1.c0 END))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))), ((rt1.c2) BETWEEN (v0.c0) AND (rt1.c0)), (~ (vt1.c0)), rt1.c0 COLLATE NOCASE, (((rt1.c2, rt1.c2, rt1.c1))>=((vt1.c0, rt1.c0, rt1.c0)))))<=((rt1.c2, v0.c0 COLLATE RTRIM, x'', NULL, json_array_length(v0.c0)))) CROSS JOIN vt1 ON (((vt1.c0))<>((CASE WHEN v0.c0 THEN vt1.c0 END))) WHERE ((- (load_extension(rt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (load_extension(rt1.c0, vt1.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))), ((rt1.c2) BETWEEN (v0.c0) AND (rt1.c0)), (~ (vt1.c0)), rt1.c0 COLLATE NOCASE, (((rt1.c2, rt1.c2, rt1.c1))>=((vt1.c0, rt1.c0, rt1.c0)))))<=((rt1.c2, v0.c0 COLLATE RTRIM, x'', NULL, json_array_length(v0.c0)))) CROSS JOIN vt1 ON (((vt1.c0))!=((CASE WHEN v0.c0 THEN vt1.c0 END))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ('.J') ORDER BY CAST(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('.J') IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('.J') ORDER BY CAST(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('.J') IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('.J') ORDER BY CAST(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM v0, vt1, vt0 WHERE (UPPER(CASE WHEN v0.c0 THEN x'' ELSE vt0.c0 END)) ORDER BY ((0.8417814006209486)<>(v0.c0)) COLLATE BINARY  NULLS LAST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(CASE WHEN v0.c0 THEN x'' ELSE vt0.c0 END)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((0.8417814006209486)<>(v0.c0)) COLLATE BINARY  NULLS LAST, vt1.c0 DESC);
SELECT ALL * FROM v0, vt1, vt0 WHERE (UPPER(CASE WHEN v0.c0 THEN x'' ELSE vt0.c0 END)) ORDER BY ((0.8417814006209486)<>(v0.c0)) COLLATE BINARY  NULLS LAST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(CASE WHEN v0.c0 THEN x'' ELSE vt0.c0 END)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((0.8417814006209486)<>(v0.c0)) COLLATE BINARY  NULLS LAST, vt1.c0 DESC);
SELECT ALL * FROM v0, vt1, vt0 WHERE (UPPER(CASE WHEN v0.c0 THEN x'' ELSE vt0.c0 END)) ORDER BY ((0.8417814006209486)<>(v0.c0)) COLLATE BINARY  NULLS LAST, vt1.c0 DESC;
SELECT ALL * FROM rt1, v0, vt1 WHERE (((((LIKE(vt1.c0, v0.c0, 'x'))OR(UNLIKELY('pJ'))))AND((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c2)))))) ORDER BY (((rt1.c2 IN ()))AND(((rt1.c2)*(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((LIKE(vt1.c0, v0.c0, 'x'))OR(UNLIKELY('pJ'))))AND((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 NOT INDEXED, v0, vt1 ORDER BY (((rt1.c2 IN ()))AND(((rt1.c2)*(vt1.c0)))) DESC);
SELECT ALL * FROM rt1, v0, vt1 WHERE (((((LIKE(vt1.c0, v0.c0, 'x'))OR(UNLIKELY('pJ'))))AND((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c2)))))) ORDER BY (((rt1.c2 IN ()))AND(((rt1.c2)*(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((LIKE(vt1.c0, v0.c0, 'x'))OR(UNLIKELY('pJ'))))AND((((rt1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 NOT INDEXED, v0, vt1 ORDER BY (((rt1.c2 IN ()))AND(((rt1.c2)*(vt1.c0)))) DESC);
SELECT * FROM vt1 WHERE (((vt1.c0)*(vt1.c0)) COLLATE RTRIM) ORDER BY -9223372036854775808, x'7bef';
SELECT SUM(count) FROM (SELECT ((((vt1.c0)*(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY -9223372036854775808, x'7bef');
SELECT * FROM vt1 WHERE (((vt1.c0)*(vt1.c0)) COLLATE RTRIM) ORDER BY -9223372036854775808, x'7bef';
SELECT SUM(count) FROM (SELECT ((((vt1.c0)*(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY -9223372036854775808, x'7bef');
SELECT * FROM vt1 WHERE (((vt1.c0)*(vt1.c0)) COLLATE RTRIM) ORDER BY -9223372036854775808, x'7bef';
SELECT * FROM vt1, v0, rt1 WHERE ((((rt1.c2 IN ())) NOTNULL)) ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (260285318) AND ('319130913')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (260285318) AND ('319130913')) ASC  NULLS FIRST);
SELECT * FROM vt1, v0, rt1 WHERE ((((rt1.c2 IN ())) NOTNULL)) ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (260285318) AND ('319130913')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (260285318) AND ('319130913')) ASC  NULLS FIRST);
SELECT * FROM vt1, v0, rt1 WHERE ((((rt1.c2 IN ())) NOTNULL)) ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (260285318) AND ('319130913')) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -430161900 THEN 0.44784629536260767 END  WHEN ABS(DISTINCT v0.c0) THEN ((v0.c0)>=(v0.c0)) WHEN DATETIME(v0.c0, v0.c0, v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN MIN(v0.c0, v0.c0) THEN v0.c0 COLLATE BINARY END) ORDER BY ((v0.c0) NOT BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -430161900 THEN 0.44784629536260767 END  WHEN ABS(DISTINCT v0.c0) THEN ((v0.c0)>=(v0.c0)) WHEN DATETIME(v0.c0, v0.c0, v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN MIN(v0.c0, v0.c0) THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 WHERE (CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -430161900 THEN 0.44784629536260767 END  WHEN ABS(DISTINCT v0.c0) THEN ((v0.c0)>=(v0.c0)) WHEN DATETIME(v0.c0, v0.c0, v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN MIN(v0.c0, v0.c0) THEN v0.c0 COLLATE BINARY END) ORDER BY ((v0.c0) NOT BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -430161900 THEN 0.44784629536260767 END  WHEN ABS(DISTINCT v0.c0) THEN ((v0.c0)>=(v0.c0)) WHEN DATETIME(v0.c0, v0.c0, v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN MIN(v0.c0, v0.c0) THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 WHERE (CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN -430161900 THEN 0.44784629536260767 END  WHEN ABS(DISTINCT v0.c0) THEN ((v0.c0)>=(v0.c0)) WHEN DATETIME(v0.c0, v0.c0, v0.c0) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN MIN(v0.c0, v0.c0) THEN v0.c0 COLLATE BINARY END) ORDER BY ((v0.c0) NOT BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1 IN (rt1.c1))))<((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY 0.2755303425437329  NULLS FIRST, (((rt1.c1 IN ()))>>(rt1.c0)) DESC  NULLS FIRST, LIKELY(DISTINCT (NOT (rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 IN (rt1.c1))))<((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY 0.2755303425437329  NULLS FIRST, (((rt1.c1 IN ()))>>(rt1.c0)) DESC  NULLS FIRST, LIKELY(DISTINCT (NOT (rt1.c1))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1 IN (rt1.c1))))<((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY 0.2755303425437329  NULLS FIRST, (((rt1.c1 IN ()))>>(rt1.c0)) DESC  NULLS FIRST, LIKELY(DISTINCT (NOT (rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 IN (rt1.c1))))<((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY 0.2755303425437329  NULLS FIRST, (((rt1.c1 IN ()))>>(rt1.c0)) DESC  NULLS FIRST, LIKELY(DISTINCT (NOT (rt1.c1))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1 IN (rt1.c1))))<((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY 0.2755303425437329  NULLS FIRST, (((rt1.c1 IN ()))>>(rt1.c0)) DESC  NULLS FIRST, LIKELY(DISTINCT (NOT (rt1.c1))) DESC;
SELECT ALL COUNT(*) FROM v0, vt0, rt1, vt1 WHERE ((((('')IS NOT(rt1.c0))) BETWEEN (((vt1.c0)&(rt1.c2))) AND ((((v0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((('')IS NOT(rt1.c0))) BETWEEN (((vt1.c0)&(rt1.c2))) AND ((((v0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) IS TRUE)  as count FROM v0, vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, rt1, vt1 WHERE ((((('')IS NOT(rt1.c0))) BETWEEN (((vt1.c0)&(rt1.c2))) AND ((((v0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((('')IS NOT(rt1.c0))) BETWEEN (((vt1.c0)&(rt1.c2))) AND ((((v0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) IS TRUE)  as count FROM v0, vt0, rt1, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, rt1, vt1 WHERE ((((('')IS NOT(rt1.c0))) BETWEEN (((vt1.c0)&(rt1.c2))) AND ((((v0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))));
SELECT * FROM vt1, v0 CROSS JOIN rt1 ON CAST(((rt1.c1) IS FALSE) AS BLOB) CROSS JOIN vt0 ON ((ABS(DISTINCT x'')) NOT BETWEEN (((v0.c0) IS TRUE)) AND (rt1.c0 COLLATE RTRIM)) WHERE (((((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1)))AND(rt1.c0)))OR(vt0.c0))) ORDER BY 0.37974152439115494  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1)))AND(rt1.c0)))OR(vt0.c0))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN rt1 ON CAST(((rt1.c1) IS FALSE) AS BLOB) CROSS JOIN vt0 ON ((ABS(DISTINCT x'')) NOT BETWEEN (((v0.c0) IS TRUE)) AND (rt1.c0 COLLATE RTRIM)) ORDER BY 0.37974152439115494  NULLS FIRST);
SELECT * FROM vt1, v0 CROSS JOIN rt1 ON CAST(((rt1.c1) IS FALSE) AS BLOB) CROSS JOIN vt0 ON ((ABS(DISTINCT x'')) NOT BETWEEN (((v0.c0) IS TRUE)) AND (rt1.c0 COLLATE RTRIM)) WHERE (((((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1)))AND(rt1.c0)))OR(vt0.c0))) ORDER BY 0.37974152439115494  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1)))AND(rt1.c0)))OR(vt0.c0))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN rt1 ON CAST(((rt1.c1) IS FALSE) AS BLOB) CROSS JOIN vt0 ON ((ABS(DISTINCT x'')) NOT BETWEEN (((v0.c0) IS TRUE)) AND (rt1.c0 COLLATE RTRIM)) ORDER BY 0.37974152439115494  NULLS FIRST);
SELECT * FROM vt1, v0 CROSS JOIN rt1 ON CAST(((rt1.c1) IS FALSE) AS BLOB) CROSS JOIN vt0 ON ((ABS(DISTINCT x'')) NOT BETWEEN (((v0.c0) IS TRUE)) AND (rt1.c0 COLLATE RTRIM)) WHERE (((((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1)))AND(rt1.c0)))OR(vt0.c0))) ORDER BY 0.37974152439115494  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((vt1.c0, vt1.c0, -4.301619E8))<=((vt1.c0, vt1.c0, vt1.c0))))OR(-287607644)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)))OR((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt1.c0, vt1.c0, -4.301619E8))<=((vt1.c0, vt1.c0, vt1.c0))))OR(-287607644)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)))OR((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((vt1.c0, vt1.c0, -4.301619E8))<=((vt1.c0, vt1.c0, vt1.c0))))OR(-287607644)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)))OR((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt1.c0, vt1.c0, -4.301619E8))<=((vt1.c0, vt1.c0, vt1.c0))))OR(-287607644)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)))OR((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((vt1.c0, vt1.c0, -4.301619E8))<=((vt1.c0, vt1.c0, vt1.c0))))OR(-287607644)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE BINARY)))OR((vt1.c0 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE (NULL);
SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN vt0 ON (((((rt1.c0, vt1.c0, rt1.c0))<=((rt1.c2, vt0.c0, v0.c0))))IS NOT(((((v0.c0)AND(rt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN v0 ON ((((vt1.c0)/(rt1.c1)))<<(((((rt1.c0)OR(vt0.c0)))AND(rt1.c1)))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN vt0 ON (((((rt1.c0, vt1.c0, rt1.c0))<=((rt1.c2, vt0.c0, v0.c0))))IS NOT(((((v0.c0)AND(rt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN v0 ON ((((vt1.c0)/(rt1.c1)))<<(((((rt1.c0)OR(vt0.c0)))AND(rt1.c1)))));
SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN vt0 ON (((((rt1.c0, vt1.c0, rt1.c0))<=((rt1.c2, vt0.c0, v0.c0))))IS NOT(((((v0.c0)AND(rt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN v0 ON ((((vt1.c0)/(rt1.c1)))<<(((((rt1.c0)OR(vt0.c0)))AND(rt1.c1)))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN vt0 ON (((((rt1.c0, vt1.c0, rt1.c0))<=((rt1.c2, vt0.c0, v0.c0))))IS NOT(((((v0.c0)AND(rt1.c0)))AND(vt1.c0)))) FULL OUTER JOIN v0 ON ((((vt1.c0)/(rt1.c1)))<<(((((rt1.c0)OR(vt0.c0)))AND(rt1.c1)))));
SELECT ALL * FROM rt1, vt1 WHERE (((vt1.c0) BETWEEN (rt1.c0) AND (x'f5be')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (rt1.c0) AND (x'f5be')) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (((vt1.c0) BETWEEN (rt1.c0) AND (x'f5be')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (rt1.c0) AND (x'f5be')) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (((vt1.c0) BETWEEN (rt1.c0) AND (x'f5be')) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('n+>u{*1H') NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0.8778631417584777) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('n+>u{*1H') NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0.8778631417584777) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('n+>u{*1H') NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0.8778631417584777) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('n+>u{*1H') NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0.8778631417584777) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('n+>u{*1H') NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0.8778631417584777) DESC  NULLS FIRST;
SELECT * FROM rt1, vt0, vt1 NATURAL JOIN v0 WHERE (((((((vt0.c0)AND(x'6cec6dbf')))OR(vt0.c0))) NOT BETWEEN ((~ (rt1.c2))) AND ((rt1.c1 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(x'6cec6dbf')))OR(vt0.c0))) NOT BETWEEN ((~ (rt1.c2))) AND ((rt1.c1 IN (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, vt1 NATURAL JOIN v0);
SELECT * FROM rt1, vt0, vt1 NATURAL JOIN v0 WHERE (((((((vt0.c0)AND(x'6cec6dbf')))OR(vt0.c0))) NOT BETWEEN ((~ (rt1.c2))) AND ((rt1.c1 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(x'6cec6dbf')))OR(vt0.c0))) NOT BETWEEN ((~ (rt1.c2))) AND ((rt1.c1 IN (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, vt1 NATURAL JOIN v0);
SELECT * FROM rt1, vt0, vt1 NATURAL JOIN v0 WHERE (((((((vt0.c0)AND(x'6cec6dbf')))OR(vt0.c0))) NOT BETWEEN ((~ (rt1.c2))) AND ((rt1.c1 IN (rt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)<<(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)<<(vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)<<(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)<<(vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)<<(vt1.c0))))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<((((vt0.c0))>=((0.2776084621353384))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<((((vt0.c0))>=((0.2776084621353384)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<((((vt0.c0))>=((0.2776084621353384))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<((((vt0.c0))>=((0.2776084621353384)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<((((vt0.c0))>=((0.2776084621353384))))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((CAST(vt1.c0 AS INTEGER))=(((vt0.c0)>=(vt0.c0)))) DESC, CASE (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))  WHEN ((((NULL)AND(vt0.c0)))OR(vt1.c0)) THEN vt1.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('159071747')) WHEN ABS(vt0.c0) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))==(((vt0.c0)>=(vt0.c0)))) DESC, CASE (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))  WHEN ((((NULL)AND(vt0.c0)))OR(vt1.c0)) THEN vt1.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('159071747')) WHEN ABS(vt0.c0) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((CAST(vt1.c0 AS INTEGER))=(((vt0.c0)>=(vt0.c0)))) DESC, CASE (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))  WHEN ((((NULL)AND(vt0.c0)))OR(vt1.c0)) THEN vt1.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('159071747')) WHEN ABS(vt0.c0) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))==(((vt0.c0)>=(vt0.c0)))) DESC, CASE (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))  WHEN ((((NULL)AND(vt0.c0)))OR(vt1.c0)) THEN vt1.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('159071747')) WHEN ABS(vt0.c0) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((CAST(vt1.c0 AS INTEGER))=(((vt0.c0)>=(vt0.c0)))) DESC, CASE (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))  WHEN ((((NULL)AND(vt0.c0)))OR(vt1.c0)) THEN vt1.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('159071747')) WHEN ABS(vt0.c0) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END DESC  NULLS LAST;
SELECT * FROM vt0, vt1, rt1, v0 WHERE (((x'a465') IS TRUE)) ORDER BY (~ (((vt0.c0)*(rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'a465') IS TRUE)) IS TRUE)  as count FROM vt0, vt1, rt1, v0 ORDER BY (~ (((vt0.c0)*(rt1.c2))))  NULLS LAST);
SELECT * FROM vt0, vt1, rt1, v0 WHERE (((x'a465') IS TRUE)) ORDER BY (~ (((vt0.c0)*(rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'a465') IS TRUE)) IS TRUE)  as count FROM vt0, vt1, rt1, v0 ORDER BY (~ (((vt0.c0)*(rt1.c2))))  NULLS LAST);
SELECT * FROM vt0, vt1, rt1, v0 WHERE (((x'a465') IS TRUE)) ORDER BY (~ (((vt0.c0)*(rt1.c2))))  NULLS LAST;
SELECT * FROM rt1 WHERE ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)), ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)), CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN '-287607644' THEN rt1.c0 ELSE rt1.c1 END))>((rt1.c0, ((rt1.c1) ISNULL), ((((rt1.c1)OR(rt1.c0)))AND(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)), ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)), CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN '-287607644' THEN rt1.c0 ELSE rt1.c1 END))>((rt1.c0, ((rt1.c1) ISNULL), ((((rt1.c1)OR(rt1.c0)))AND(x'')))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)), ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)), CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN '-287607644' THEN rt1.c0 ELSE rt1.c1 END))>((rt1.c0, ((rt1.c1) ISNULL), ((((rt1.c1)OR(rt1.c0)))AND(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)), ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)), CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN '-287607644' THEN rt1.c0 ELSE rt1.c1 END))>((rt1.c0, ((rt1.c1) ISNULL), ((((rt1.c1)OR(rt1.c0)))AND(x'')))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)), ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)), CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN '-287607644' THEN rt1.c0 ELSE rt1.c1 END))>((rt1.c0, ((rt1.c1) ISNULL), ((((rt1.c1)OR(rt1.c0)))AND(x''))))));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN ()))<=(('?WP\r''AH}]' IN ())))) ORDER BY ((vt1.c0 COLLATE BINARY)<=((- (vt1.c0))))  NULLS LAST, CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) WHEN (((vt1.c0)) BETWEEN ((0X166f6340)) AND ((vt1.c0))) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN CAST(vt0.c0 AS REAL) THEN CASE '3M3?'  WHEN vt1.c0 THEN vt1.c0 END ELSE (+ (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<=(('?WP\r''AH}]' IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY)<=((- (vt1.c0))))  NULLS LAST, CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) WHEN (((vt1.c0)) BETWEEN ((0X166f6340)) AND ((vt1.c0))) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN CAST(vt0.c0 AS REAL) THEN CASE '3M3?'  WHEN vt1.c0 THEN vt1.c0 END ELSE (+ (vt1.c0)) END);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN ()))<=(('?WP\r''AH}]' IN ())))) ORDER BY ((vt1.c0 COLLATE BINARY)<=((- (vt1.c0))))  NULLS LAST, CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) WHEN (((vt1.c0)) BETWEEN ((0X166f6340)) AND ((vt1.c0))) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN CAST(vt0.c0 AS REAL) THEN CASE '3M3?'  WHEN vt1.c0 THEN vt1.c0 END ELSE (+ (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<=(('?WP\r''AH}]' IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY)<=((- (vt1.c0))))  NULLS LAST, CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) WHEN (((vt1.c0)) BETWEEN ((0X166f6340)) AND ((vt1.c0))) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN CAST(vt0.c0 AS REAL) THEN CASE '3M3?'  WHEN vt1.c0 THEN vt1.c0 END ELSE (+ (vt1.c0)) END);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN ()))<=(('?WP\r''AH}]' IN ())))) ORDER BY ((vt1.c0 COLLATE BINARY)<=((- (vt1.c0))))  NULLS LAST, CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) WHEN (((vt1.c0)) BETWEEN ((0X166f6340)) AND ((vt1.c0))) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN CAST(vt0.c0 AS REAL) THEN CASE '3M3?'  WHEN vt1.c0 THEN vt1.c0 END ELSE (+ (vt1.c0)) END;
SELECT ALL COUNT(*) FROM vt1, v0, vt0, rt1 WHERE (CASE ((((v0.c0)OR(vt1.c0)))OR(rt1.c2))  WHEN CAST(rt1.c1 AS INTEGER) THEN ((NULL)>=(rt1.c2)) END) ORDER BY (((((v0.c0, vt1.c0, rt1.c2)) BETWEEN ((rt1.c2, rt1.c1, NULL)) AND ((rt1.c0, rt1.c0, rt1.c1))))>>(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)OR(vt1.c0)))OR(rt1.c2))  WHEN CAST(rt1.c1 AS INTEGER) THEN ((NULL)>=(rt1.c2)) END) IS TRUE)  as count FROM vt1, v0, vt0, rt1 ORDER BY (((((v0.c0, vt1.c0, rt1.c2)) BETWEEN ((rt1.c2, rt1.c1, NULL)) AND ((rt1.c0, rt1.c0, rt1.c1))))>>(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, rt1 WHERE (CASE ((((v0.c0)OR(vt1.c0)))OR(rt1.c2))  WHEN CAST(rt1.c1 AS INTEGER) THEN ((NULL)>=(rt1.c2)) END) ORDER BY (((((v0.c0, vt1.c0, rt1.c2)) BETWEEN ((rt1.c2, rt1.c1, NULL)) AND ((rt1.c0, rt1.c0, rt1.c1))))>>(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)OR(vt1.c0)))OR(rt1.c2))  WHEN CAST(rt1.c1 AS INTEGER) THEN ((NULL)>=(rt1.c2)) END) IS TRUE)  as count FROM vt1, v0, vt0, rt1 ORDER BY (((((v0.c0, vt1.c0, rt1.c2)) BETWEEN ((rt1.c2, rt1.c1, NULL)) AND ((rt1.c0, rt1.c0, rt1.c1))))>>(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, rt1 WHERE (CASE ((((v0.c0)OR(vt1.c0)))OR(rt1.c2))  WHEN CAST(rt1.c1 AS INTEGER) THEN ((NULL)>=(rt1.c2)) END) ORDER BY (((((v0.c0, vt1.c0, rt1.c2)) BETWEEN ((rt1.c2, rt1.c1, NULL)) AND ((rt1.c0, rt1.c0, rt1.c1))))>>(vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE ((((+ (vt0.c0)))OR(TRIM(rt1.c1)))) ORDER BY ((((+ (rt1.c1))))>=((((rt1.c0)/(rt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))OR(TRIM(rt1.c1)))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY ((((+ (rt1.c1))))>=((((rt1.c0)/(rt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE ((((+ (vt0.c0)))OR(TRIM(rt1.c1)))) ORDER BY ((((+ (rt1.c1))))>=((((rt1.c0)/(rt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))OR(TRIM(rt1.c1)))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY ((((+ (rt1.c1))))>=((((rt1.c0)/(rt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE ((((+ (vt0.c0)))OR(TRIM(rt1.c1)))) ORDER BY ((((+ (rt1.c1))))>=((((rt1.c0)/(rt1.c0)))))  NULLS FIRST;
SELECT * FROM vt1, rt1, v0, vt0 WHERE (CAST(rt1.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1, rt1, v0, vt0);
SELECT * FROM vt1, rt1, v0, vt0 WHERE (CAST(rt1.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1, rt1, v0, vt0);
SELECT * FROM vt1, rt1, v0, vt0 WHERE (CAST(rt1.c0 COLLATE NOCASE AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOTNULL)  WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOTNULL)  WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN CAST(vt0.c0 AS REAL) END);
SELECT ALL COUNT(*) FROM vt1, v0, rt1, vt0 WHERE (((((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))AND(rt1.c1 COLLATE NOCASE)))AND(UPPER(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))AND(rt1.c1 COLLATE NOCASE)))AND(UPPER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, v0, rt1, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt1, vt0 WHERE (((((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))AND(rt1.c1 COLLATE NOCASE)))AND(UPPER(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))AND(rt1.c1 COLLATE NOCASE)))AND(UPPER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, v0, rt1, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt1, vt0 WHERE (((((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))AND(rt1.c1 COLLATE NOCASE)))AND(UPPER(DISTINCT vt1.c0))));
SELECT * FROM rt1, vt0, v0, vt1 WHERE (((v0.c0)>(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, v0, vt1);
SELECT * FROM rt1, vt0, v0, vt1 WHERE (((v0.c0)>(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, v0, vt1);
SELECT * FROM rt1, vt0, v0, vt1 WHERE (((v0.c0)>(v0.c0)) COLLATE BINARY);
SELECT ALL * FROM v0, vt0, vt1 WHERE (LIKELY(DISTINCT ((((v0.c0)OR(vt1.c0)))OR(vt1.c0)))) ORDER BY (((((v0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((v0.c0)OR(vt1.c0)))OR(vt1.c0)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((((v0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (vt0.c0)) DESC);
SELECT ALL * FROM v0, vt0, vt1 WHERE (LIKELY(DISTINCT ((((v0.c0)OR(vt1.c0)))OR(vt1.c0)))) ORDER BY (((((v0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((v0.c0)OR(vt1.c0)))OR(vt1.c0)))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((((v0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (vt0.c0)) DESC);
SELECT ALL * FROM v0, vt0, vt1 WHERE (LIKELY(DISTINCT ((((v0.c0)OR(vt1.c0)))OR(vt1.c0)))) ORDER BY (((((v0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (vt0.c0)) DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((CASE NULL  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))>(('')))) ORDER BY (((- ('-120636048')))/(((vt0.c0)||(vt0.c0))))  NULLS LAST, ((((v0.c0)IS(vt0.c0)))>=(((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE NULL  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))>(('')))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((- ('-120636048')))/(((vt0.c0)||(vt0.c0))))  NULLS LAST, ((((v0.c0)IS(vt0.c0)))>=(((vt0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((CASE NULL  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))>(('')))) ORDER BY (((- ('-120636048')))/(((vt0.c0)||(vt0.c0))))  NULLS LAST, ((((v0.c0)IS(vt0.c0)))>=(((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE NULL  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))>(('')))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((- ('-120636048')))/(((vt0.c0)||(vt0.c0))))  NULLS LAST, ((((v0.c0)IS(vt0.c0)))>=(((vt0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((CASE NULL  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))>(('')))) ORDER BY (((- ('-120636048')))/(((vt0.c0)||(vt0.c0))))  NULLS LAST, ((((v0.c0)IS(vt0.c0)))>=(((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c0 END) IS FALSE) RIGHT OUTER JOIN rt1 ON (((vt0.c0, vt0.c0, rt1.c1)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c0)), v0.c0, ((rt1.c0) IS FALSE))) AND (((- (rt1.c1)), ((rt1.c1) NOT NULL), (((rt1.c1, rt1.c0, rt1.c2))<((vt1.c0, vt0.c0, vt0.c0)))))) INNER JOIN vt1 ON CASE WHEN (((rt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((x'84ad', vt0.c0, v0.c0))) THEN rt1.c0 WHEN ((((((((vt1.c0)OR(vt0.c0)))AND(rt1.c1)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<>(rt1.c2)) WHEN json_array_length(vt1.c0) THEN '401068354' END WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c0 END) IS FALSE) RIGHT OUTER JOIN rt1 ON (((vt0.c0, vt0.c0, rt1.c1)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c0)), v0.c0, ((rt1.c0) IS FALSE))) AND (((- (rt1.c1)), ((rt1.c1) NOT NULL), (((rt1.c1, rt1.c0, rt1.c2))<((vt1.c0, vt0.c0, vt0.c0)))))) INNER JOIN vt1 ON CASE WHEN (((rt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((x'84ad', vt0.c0, v0.c0))) THEN rt1.c0 WHEN ((((((((vt1.c0)OR(vt0.c0)))AND(rt1.c1)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<>(rt1.c2)) WHEN json_array_length(vt1.c0) THEN '401068354' END);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c0 END) IS FALSE) RIGHT OUTER JOIN rt1 ON (((vt0.c0, vt0.c0, rt1.c1)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c0)), v0.c0, ((rt1.c0) IS FALSE))) AND (((- (rt1.c1)), ((rt1.c1) NOT NULL), (((rt1.c1, rt1.c0, rt1.c2))<((vt1.c0, vt0.c0, vt0.c0)))))) INNER JOIN vt1 ON CASE WHEN (((rt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((x'84ad', vt0.c0, v0.c0))) THEN rt1.c0 WHEN ((((((((vt1.c0)OR(vt0.c0)))AND(rt1.c1)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<>(rt1.c2)) WHEN json_array_length(vt1.c0) THEN '401068354' END WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c0 END) IS FALSE) RIGHT OUTER JOIN rt1 ON (((vt0.c0, vt0.c0, rt1.c1)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt1.c0)), v0.c0, ((rt1.c0) IS FALSE))) AND (((- (rt1.c1)), ((rt1.c1) NOT NULL), (((rt1.c1, rt1.c0, rt1.c2))<((vt1.c0, vt0.c0, vt0.c0)))))) INNER JOIN vt1 ON CASE WHEN (((rt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((x'84ad', vt0.c0, v0.c0))) THEN rt1.c0 WHEN ((((((((vt1.c0)OR(vt0.c0)))AND(rt1.c1)))OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)<>(rt1.c2)) WHEN json_array_length(vt1.c0) THEN '401068354' END);
SELECT * FROM v0, rt1 WHERE ((('376398656') BETWEEN (((rt1.c0) NOTNULL)) AND ((('忳忳2') BETWEEN (v0.c0) AND (rt1.c0))))) ORDER BY ((CAST(v0.c0 AS INTEGER))>>(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('376398656') BETWEEN (((rt1.c0) NOTNULL)) AND ((('忳忳2') BETWEEN (v0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((CAST(v0.c0 AS INTEGER))>>(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM v0, rt1 WHERE ((('376398656') BETWEEN (((rt1.c0) NOTNULL)) AND ((('忳忳2') BETWEEN (v0.c0) AND (rt1.c0))))) ORDER BY ((CAST(v0.c0 AS INTEGER))>>(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('376398656') BETWEEN (((rt1.c0) NOTNULL)) AND ((('忳忳2') BETWEEN (v0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((CAST(v0.c0 AS INTEGER))>>(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM v0, rt1 WHERE ((('376398656') BETWEEN (((rt1.c0) NOTNULL)) AND ((('忳忳2') BETWEEN (v0.c0) AND (rt1.c0))))) ORDER BY ((CAST(v0.c0 AS INTEGER))>>(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)-(rt1.c0))) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)-(rt1.c0))) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)-(rt1.c0))) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)-(rt1.c0))) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)-(rt1.c0))) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c0 COLLATE BINARY)));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2 COLLATE NOCASE)AND((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))))AND((rt1.c0 IN (rt1.c1, rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE NOCASE)AND((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))))AND((rt1.c0 IN (rt1.c1, rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2 COLLATE NOCASE)AND((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))))AND((rt1.c0 IN (rt1.c1, rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE NOCASE)AND((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))))AND((rt1.c0 IN (rt1.c1, rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2 COLLATE NOCASE)AND((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))))))AND((rt1.c0 IN (rt1.c1, rt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN (((rt1.c1) ISNULL)) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) BETWEEN (((rt1.c1) ISNULL)) AND (rt1.c2))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN (((rt1.c1) ISNULL)) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) BETWEEN (((rt1.c1) ISNULL)) AND (rt1.c2))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN (((rt1.c1) ISNULL)) AND (rt1.c2)));
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (UPPER(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))) ORDER BY CAST(CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END AS REAL), ((((+ (v0.c0))))=((((rt1.c0)GLOB('-602467358')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY CAST(CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END AS REAL), ((((+ (v0.c0))))==((((rt1.c0)GLOB('-602467358')))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (UPPER(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))) ORDER BY CAST(CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END AS REAL), ((((+ (v0.c0))))=((((rt1.c0)GLOB('-602467358')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY CAST(CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END AS REAL), ((((+ (v0.c0))))==((((rt1.c0)GLOB('-602467358')))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, rt1 WHERE (UPPER(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))) ORDER BY CAST(CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END AS REAL), ((((+ (v0.c0))))=((((rt1.c0)GLOB('-602467358')))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<<(((vt0.c0)+(vt0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<<(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<<(((vt0.c0)+(vt0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<<(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<<(((vt0.c0)+(vt0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC;
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0)<=(rt1.c2)))<((NOT (rt1.c2)))) WHERE (rt1.c1) ORDER BY CASE ((rt1.c1)<<(rt1.c1))  WHEN ((((rt1.c1)AND(0.6156490475704414)))OR(vt0.c0)) THEN rt1.c1 WHEN (rt1.c2 IN (rt1.c1)) THEN PRINTF(rt1.c0, rt1.c1, vt0.c0, rt1.c1, rt1.c2) WHEN ((vt0.c0)&(rt1.c1)) THEN '-430161900' WHEN vt0.c0 THEN CAST(vt0.c0 AS TEXT) WHEN ((rt1.c1)&(rt1.c0)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c2) BETWEEN (0.13709663950633266) AND (rt1.c1)) END ASC  NULLS FIRST, (((376398656)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((((rt1.c1)AND(rt1.c0)))AND(x''))))) DESC  NULLS LAST, (((- (rt1.c1)))LIKE(((rt1.c0)IS NOT(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0)<=(rt1.c2)))<((NOT (rt1.c2)))) ORDER BY CASE ((rt1.c1)<<(rt1.c1))  WHEN ((((rt1.c1)AND(0.6156490475704414)))OR(vt0.c0)) THEN rt1.c1 WHEN (rt1.c2 IN (rt1.c1)) THEN PRINTF(rt1.c0, rt1.c1, vt0.c0, rt1.c1, rt1.c2) WHEN ((vt0.c0)&(rt1.c1)) THEN '-430161900' WHEN vt0.c0 THEN CAST(vt0.c0 AS TEXT) WHEN ((rt1.c1)&(rt1.c0)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c2) BETWEEN (0.13709663950633266) AND (rt1.c1)) END ASC  NULLS FIRST, (((376398656)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((((rt1.c1)AND(rt1.c0)))AND(x''))))) DESC  NULLS LAST, (((- (rt1.c1)))LIKE(((rt1.c0)IS NOT(vt0.c0)))));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0)<=(rt1.c2)))<((NOT (rt1.c2)))) WHERE (rt1.c1) ORDER BY CASE ((rt1.c1)<<(rt1.c1))  WHEN ((((rt1.c1)AND(0.6156490475704414)))OR(vt0.c0)) THEN rt1.c1 WHEN (rt1.c2 IN (rt1.c1)) THEN PRINTF(rt1.c0, rt1.c1, vt0.c0, rt1.c1, rt1.c2) WHEN ((vt0.c0)&(rt1.c1)) THEN '-430161900' WHEN vt0.c0 THEN CAST(vt0.c0 AS TEXT) WHEN ((rt1.c1)&(rt1.c0)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c2) BETWEEN (0.13709663950633266) AND (rt1.c1)) END ASC  NULLS FIRST, (((376398656)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((((rt1.c1)AND(rt1.c0)))AND(x''))))) DESC  NULLS LAST, (((- (rt1.c1)))LIKE(((rt1.c0)IS NOT(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0)<=(rt1.c2)))<((NOT (rt1.c2)))) ORDER BY CASE ((rt1.c1)<<(rt1.c1))  WHEN ((((rt1.c1)AND(0.6156490475704414)))OR(vt0.c0)) THEN rt1.c1 WHEN (rt1.c2 IN (rt1.c1)) THEN PRINTF(rt1.c0, rt1.c1, vt0.c0, rt1.c1, rt1.c2) WHEN ((vt0.c0)&(rt1.c1)) THEN '-430161900' WHEN vt0.c0 THEN CAST(vt0.c0 AS TEXT) WHEN ((rt1.c1)&(rt1.c0)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c2) BETWEEN (0.13709663950633266) AND (rt1.c1)) END ASC  NULLS FIRST, (((376398656)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((((rt1.c1)AND(rt1.c0)))AND(x''))))) DESC  NULLS LAST, (((- (rt1.c1)))LIKE(((rt1.c0)IS NOT(vt0.c0)))));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0)<=(rt1.c2)))<((NOT (rt1.c2)))) WHERE (rt1.c1) ORDER BY CASE ((rt1.c1)<<(rt1.c1))  WHEN ((((rt1.c1)AND(0.6156490475704414)))OR(vt0.c0)) THEN rt1.c1 WHEN (rt1.c2 IN (rt1.c1)) THEN PRINTF(rt1.c0, rt1.c1, vt0.c0, rt1.c1, rt1.c2) WHEN ((vt0.c0)&(rt1.c1)) THEN '-430161900' WHEN vt0.c0 THEN CAST(vt0.c0 AS TEXT) WHEN ((rt1.c1)&(rt1.c0)) THEN rt1.c1 COLLATE RTRIM ELSE ((rt1.c2) BETWEEN (0.13709663950633266) AND (rt1.c1)) END ASC  NULLS FIRST, (((376398656)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((((rt1.c1)AND(rt1.c0)))AND(x''))))) DESC  NULLS LAST, (((- (rt1.c1)))LIKE(((rt1.c0)IS NOT(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT x'')) IS FALSE)) ORDER BY x'' COLLATE RTRIM COLLATE BINARY, CAST((NOT (vt0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT x'')) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY x'' COLLATE RTRIM COLLATE BINARY, CAST((NOT (vt0.c0)) AS INTEGER) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT x'')) IS FALSE)) ORDER BY x'' COLLATE RTRIM COLLATE BINARY, CAST((NOT (vt0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT x'')) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY x'' COLLATE RTRIM COLLATE BINARY, CAST((NOT (vt0.c0)) AS INTEGER) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT x'')) IS FALSE)) ORDER BY x'' COLLATE RTRIM COLLATE BINARY, CAST((NOT (vt0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt1 WHERE (NULLIF(DISTINCT (rt1.c0 IN ()), ((((rt1.c2)AND(vt1.c0)))AND(vt1.c0)))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (rt1.c0 IN ()), ((((rt1.c2)AND(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY rt1.c1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (NULLIF(DISTINCT (rt1.c0 IN ()), ((((rt1.c2)AND(vt1.c0)))AND(vt1.c0)))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (rt1.c0 IN ()), ((((rt1.c2)AND(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY rt1.c1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (NULLIF(DISTINCT (rt1.c0 IN ()), ((((rt1.c2)AND(vt1.c0)))AND(vt1.c0)))) ORDER BY rt1.c1;
SELECT * FROM rt1, v0, vt1 WHERE ((('pg.+')AND((~ (vt1.c0))))) ORDER BY ((((((rt1.c1) IS FALSE))OR(((rt1.c0) BETWEEN (rt1.c1) AND (v0.c0)))))AND(((vt1.c0)%(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('pg.+')AND((~ (vt1.c0))))) IS TRUE)  as count FROM rt1, v0, vt1 ORDER BY ((((((rt1.c1) IS FALSE))OR(((rt1.c0) BETWEEN (rt1.c1) AND (v0.c0)))))AND(((vt1.c0)%(vt1.c0))))  NULLS LAST);
SELECT * FROM rt1, v0, vt1 WHERE ((('pg.+')AND((~ (vt1.c0))))) ORDER BY ((((((rt1.c1) IS FALSE))OR(((rt1.c0) BETWEEN (rt1.c1) AND (v0.c0)))))AND(((vt1.c0)%(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('pg.+')AND((~ (vt1.c0))))) IS TRUE)  as count FROM rt1, v0, vt1 ORDER BY ((((((rt1.c1) IS FALSE))OR(((rt1.c0) BETWEEN (rt1.c1) AND (v0.c0)))))AND(((vt1.c0)%(vt1.c0))))  NULLS LAST);
SELECT * FROM rt1, v0, vt1 WHERE ((('pg.+')AND((~ (vt1.c0))))) ORDER BY ((((((rt1.c1) IS FALSE))OR(((rt1.c0) BETWEEN (rt1.c1) AND (v0.c0)))))AND(((vt1.c0)%(vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0, rt1);
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0, rt1);
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE (x'');
SELECT COUNT(*) FROM v0, vt0, vt1, rt1 WHERE (((0.09625158299985903 COLLATE NOCASE) NOT NULL)) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((0.09625158299985903 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, vt0, vt1, rt1 ORDER BY vt1.c0 ASC);
SELECT COUNT(*) FROM v0, vt0, vt1, rt1 WHERE (((0.09625158299985903 COLLATE NOCASE) NOT NULL)) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((0.09625158299985903 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, vt0, vt1, rt1 ORDER BY vt1.c0 ASC);
SELECT COUNT(*) FROM v0, vt0, vt1, rt1 WHERE (((0.09625158299985903 COLLATE NOCASE) NOT NULL)) ORDER BY vt1.c0 ASC;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE v0.c0  WHEN vt1.c0 THEN ((((v0.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN vt1.c0 THEN ((((v0.c0)AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE v0.c0  WHEN vt1.c0 THEN ((((v0.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN vt1.c0 THEN ((((v0.c0)AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE v0.c0  WHEN vt1.c0 THEN ((((v0.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((((NULL)<=(rt1.c1)) IN (CAST(rt1.c1 AS TEXT), vt0.c0))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((NULL)<=(rt1.c1)) IN (CAST(rt1.c1 AS TEXT), vt0.c0))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY rt1.c2 ASC);
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((((NULL)<=(rt1.c1)) IN (CAST(rt1.c1 AS TEXT), vt0.c0))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((NULL)<=(rt1.c1)) IN (CAST(rt1.c1 AS TEXT), vt0.c0))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY rt1.c2 ASC);
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((((NULL)<=(rt1.c1)) IN (CAST(rt1.c1 AS TEXT), vt0.c0))) ORDER BY rt1.c2 ASC;
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((CAST(vt0.c0 AS BLOB))>>(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY ((((((vt0.c0, rt1.c1, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c2, x'cc40')) AND ((0Xffffffffcd16eb35, rt1.c1, rt1.c2)))))>((((((rt1.c1)OR(vt0.c0)))OR(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))>>(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((((((vt0.c0, rt1.c1, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c2, x'cc40')) AND ((0Xffffffffcd16eb35, rt1.c1, rt1.c2)))))>((((((rt1.c1)OR(vt0.c0)))OR(vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((CAST(vt0.c0 AS BLOB))>>(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY ((((((vt0.c0, rt1.c1, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c2, x'cc40')) AND ((0Xffffffffcd16eb35, rt1.c1, rt1.c2)))))>((((((rt1.c1)OR(vt0.c0)))OR(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))>>(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((((((vt0.c0, rt1.c1, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c2, x'cc40')) AND ((0Xffffffffcd16eb35, rt1.c1, rt1.c2)))))>((((((rt1.c1)OR(vt0.c0)))OR(vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE (((CAST(vt0.c0 AS BLOB))>>(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY ((((((vt0.c0, rt1.c1, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c2, x'cc40')) AND ((0Xffffffffcd16eb35, rt1.c1, rt1.c2)))))>((((((rt1.c1)OR(vt0.c0)))OR(vt0.c0))))) DESC;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND (((((vt1.c0))<((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND (((((vt1.c0))<((vt1.c0))))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND (((((vt1.c0))<((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND (((((vt1.c0))<((vt1.c0))))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND (((((vt1.c0))<((vt1.c0)))))));
SELECT COUNT(*) FROM vt0, vt1, rt1, v0 WHERE (((CAST(vt0.c0 AS REAL))AND(((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))AND(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1, rt1, v0);
SELECT COUNT(*) FROM vt0, vt1, rt1, v0 WHERE (((CAST(vt0.c0 AS REAL))AND(((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))AND(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1, rt1, v0);
SELECT COUNT(*) FROM vt0, vt1, rt1, v0 WHERE (((CAST(vt0.c0 AS REAL))AND(((rt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM rt1, v0, vt0, vt1 WHERE (((((((((load_extension(vt0.c0, vt0.c0))AND(CASE WHEN rt1.c2 THEN rt1.c0 ELSE vt1.c0 END)))OR(((rt1.c1)AND(vt1.c0)))))OR(((rt1.c2) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((load_extension(vt0.c0, vt0.c0))AND(CASE WHEN rt1.c2 THEN rt1.c0 ELSE vt1.c0 END)))OR(((rt1.c1)AND(vt1.c0)))))OR(((rt1.c2) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, v0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt1, v0, vt0, vt1 WHERE (((((((((load_extension(vt0.c0, vt0.c0))AND(CASE WHEN rt1.c2 THEN rt1.c0 ELSE vt1.c0 END)))OR(((rt1.c1)AND(vt1.c0)))))OR(((rt1.c2) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((load_extension(vt0.c0, vt0.c0))AND(CASE WHEN rt1.c2 THEN rt1.c0 ELSE vt1.c0 END)))OR(((rt1.c1)AND(vt1.c0)))))OR(((rt1.c2) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, v0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt1, v0, vt0, vt1 WHERE (((((((((load_extension(vt0.c0, vt0.c0))AND(CASE WHEN rt1.c2 THEN rt1.c0 ELSE vt1.c0 END)))OR(((rt1.c1)AND(vt1.c0)))))OR(((rt1.c2) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON rt1.c2 FULL OUTER JOIN v0 ON v0.c0 WHERE (((NULL)<=(v0.c0)) COLLATE RTRIM) ORDER BY (QUOTE(vt1.c0) IN (x'941c')), (+ (376398656 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL)<=(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON rt1.c2 FULL OUTER JOIN v0 ON v0.c0 ORDER BY (QUOTE(vt1.c0) IN (x'941c')), (+ (376398656 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON rt1.c2 FULL OUTER JOIN v0 ON v0.c0 WHERE (((NULL)<=(v0.c0)) COLLATE RTRIM) ORDER BY (QUOTE(vt1.c0) IN (x'941c')), (+ (376398656 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL)<=(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON rt1.c2 FULL OUTER JOIN v0 ON v0.c0 ORDER BY (QUOTE(vt1.c0) IN (x'941c')), (+ (376398656 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON rt1.c2 FULL OUTER JOIN v0 ON v0.c0 WHERE (((NULL)<=(v0.c0)) COLLATE RTRIM) ORDER BY (QUOTE(vt1.c0) IN (x'941c')), (+ (376398656 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM rt1, v0, vt1 WHERE (((((rt1.c2)GLOB(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)GLOB(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, v0, vt1);
SELECT COUNT(*) FROM rt1, v0, vt1 WHERE (((((rt1.c2)GLOB(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)GLOB(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, v0, vt1);
SELECT COUNT(*) FROM rt1, v0, vt1 WHERE (((((rt1.c2)GLOB(vt1.c0))) IS TRUE));
SELECT ALL * FROM vt1, v0, vt0 NATURAL JOIN rt1 WHERE (CAST(((rt1.c2)||(rt1.c0)) AS BLOB)) ORDER BY (((~ (rt1.c2)))/((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)||(rt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, v0, vt0 NATURAL JOIN rt1 ORDER BY (((~ (rt1.c2)))/((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, v0, vt0 NATURAL JOIN rt1 WHERE (CAST(((rt1.c2)||(rt1.c0)) AS BLOB)) ORDER BY (((~ (rt1.c2)))/((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)||(rt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, v0, vt0 NATURAL JOIN rt1 ORDER BY (((~ (rt1.c2)))/((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, v0, vt0 NATURAL JOIN rt1 WHERE (CAST(((rt1.c2)||(rt1.c0)) AS BLOB)) ORDER BY (((~ (rt1.c2)))/((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, v0, rt1, vt0 WHERE ((NOT (ABS(DISTINCT rt1.c0)))) ORDER BY (+ (vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (ABS(DISTINCT rt1.c0)))) IS TRUE)  as count FROM vt1, v0, rt1, vt0 ORDER BY (+ (vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, v0, rt1, vt0 WHERE ((NOT (ABS(DISTINCT rt1.c0)))) ORDER BY (+ (vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (ABS(DISTINCT rt1.c0)))) IS TRUE)  as count FROM vt1, v0, rt1, vt0 ORDER BY (+ (vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, v0, rt1, vt0 WHERE ((NOT (ABS(DISTINCT rt1.c0)))) ORDER BY (+ (vt0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LTRIM(vt0.c0, UPPER(vt0.c0))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))||(((((v0.c0)AND(vt0.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(vt0.c0, UPPER(vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))||(((((v0.c0)AND(vt0.c0)))AND(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LTRIM(vt0.c0, UPPER(vt0.c0))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))||(((((v0.c0)AND(vt0.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(vt0.c0, UPPER(vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))||(((((v0.c0)AND(vt0.c0)))AND(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LTRIM(vt0.c0, UPPER(vt0.c0))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))||(((((v0.c0)AND(vt0.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY TRIM((v0.c0 IN ()), v0.c0)  NULLS FIRST, ((v0.c0)&(v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY TRIM((v0.c0 IN ()), v0.c0)  NULLS FIRST, ((v0.c0)&(v0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY TRIM((v0.c0 IN ()), v0.c0)  NULLS FIRST, ((v0.c0)&(v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY TRIM((v0.c0 IN ()), v0.c0)  NULLS FIRST, ((v0.c0)&(v0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY TRIM((v0.c0 IN ()), v0.c0)  NULLS FIRST, ((v0.c0)&(v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (CAST((((rt1.c2))<=((rt1.c2))) AS REAL)) ORDER BY ((((rt1.c1)-(rt1.c1))) BETWEEN (CAST(rt1.c0 AS REAL)) AND ((NOT (rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c2))<=((rt1.c2))) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)-(rt1.c1))) BETWEEN (CAST(rt1.c0 AS REAL)) AND ((NOT (rt1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CAST((((rt1.c2))<=((rt1.c2))) AS REAL)) ORDER BY ((((rt1.c1)-(rt1.c1))) BETWEEN (CAST(rt1.c0 AS REAL)) AND ((NOT (rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c2))<=((rt1.c2))) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)-(rt1.c1))) BETWEEN (CAST(rt1.c0 AS REAL)) AND ((NOT (rt1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CAST((((rt1.c2))<=((rt1.c2))) AS REAL)) ORDER BY ((((rt1.c1)-(rt1.c1))) BETWEEN (CAST(rt1.c0 AS REAL)) AND ((NOT (rt1.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY ((((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))OR(x'')))OR((vt1.c0 IN ()))))OR(NULL)))OR(CASE WHEN '\rC' THEN '[O]>' END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))OR(x'')))OR((vt1.c0 IN ()))))OR(NULL)))OR(CASE WHEN '\rC' THEN '[O]>' END)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY ((((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))OR(x'')))OR((vt1.c0 IN ()))))OR(NULL)))OR(CASE WHEN '\rC' THEN '[O]>' END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))OR(x'')))OR((vt1.c0 IN ()))))OR(NULL)))OR(CASE WHEN '\rC' THEN '[O]>' END)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY ((((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))OR(x'')))OR((vt1.c0 IN ()))))OR(NULL)))OR(CASE WHEN '\rC' THEN '[O]>' END)) ASC;
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c1 IN (rt1.c1)))<>((~ (rt1.c2))))) ORDER BY ((((vt1.c0)/(rt1.c0)))LIKE((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN (rt1.c1)))<>((~ (rt1.c2))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((vt1.c0)/(rt1.c0)))LIKE((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c1 IN (rt1.c1)))<>((~ (rt1.c2))))) ORDER BY ((((vt1.c0)/(rt1.c0)))LIKE((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN (rt1.c1)))<>((~ (rt1.c2))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((vt1.c0)/(rt1.c0)))LIKE((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c1 IN (rt1.c1)))<>((~ (rt1.c2))))) ORDER BY ((((vt1.c0)/(rt1.c0)))LIKE((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0))))) DESC;
SELECT * FROM vt1, vt0 WHERE ((+ (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((+ (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((+ (((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<(0Xffffffffab926f5e)) COLLATE RTRIM WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c0 COLLATE RTRIM THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c0 COLLATE RTRIM THEN v0.c0 END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<(0Xffffffffab926f5e)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<(0Xffffffffab926f5e)) COLLATE RTRIM WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c0 COLLATE RTRIM THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c0 COLLATE RTRIM THEN v0.c0 END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<(0Xffffffffab926f5e)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<(0Xffffffffab926f5e)) COLLATE RTRIM WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c0 COLLATE RTRIM THEN v0.c0 END);
SELECT COUNT(*) FROM vt0, v0, vt1, rt1 WHERE (rt1.c0) ORDER BY (((vt1.c0)) NOT BETWEEN ((RTRIM(vt1.c0))) AND ((TRIM(rt1.c2))))  NULLS LAST, rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((RTRIM(vt1.c0))) AND ((TRIM(rt1.c2))))  NULLS LAST, rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, vt1, rt1 WHERE (rt1.c0) ORDER BY (((vt1.c0)) NOT BETWEEN ((RTRIM(vt1.c0))) AND ((TRIM(rt1.c2))))  NULLS LAST, rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((RTRIM(vt1.c0))) AND ((TRIM(rt1.c2))))  NULLS LAST, rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, vt1, rt1 WHERE (rt1.c0) ORDER BY (((vt1.c0)) NOT BETWEEN ((RTRIM(vt1.c0))) AND ((TRIM(rt1.c2))))  NULLS LAST, rt1.c1  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, v0, rt1 WHERE (rt1.c0) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, vt1, v0, rt1 ORDER BY rt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, v0, rt1 WHERE (rt1.c0) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, vt1, v0, rt1 ORDER BY rt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, v0, rt1 WHERE (rt1.c0) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0, rt1 INNER JOIN vt1 ON x'' WHERE (IFNULL(((rt1.c2)%(v0.c0)), ((rt1.c0)LIKE(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt1.c2)%(v0.c0)), ((rt1.c0)LIKE(rt1.c2)))) IS TRUE)  as count FROM v0, vt0, rt1 INNER JOIN vt1 ON x'');
SELECT ALL * FROM v0, vt0, rt1 INNER JOIN vt1 ON x'' WHERE (IFNULL(((rt1.c2)%(v0.c0)), ((rt1.c0)LIKE(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt1.c2)%(v0.c0)), ((rt1.c0)LIKE(rt1.c2)))) IS TRUE)  as count FROM v0, vt0, rt1 INNER JOIN vt1 ON x'');
SELECT ALL * FROM v0, vt0, rt1 INNER JOIN vt1 ON x'' WHERE (IFNULL(((rt1.c2)%(v0.c0)), ((rt1.c0)LIKE(rt1.c2))));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (0X7a592b31);
SELECT SUM(count) FROM (SELECT ((0x7a592b31) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (0X7a592b31);
SELECT SUM(count) FROM (SELECT ((0x7a592b31) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (0X7a592b31);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL * FROM rt1 WHERE ((((((((((((('-1532554060')AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))OR((+ (rt1.c0)))))AND((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((((('-1532554060')AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))OR((+ (rt1.c0)))))AND((+ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((((((('-1532554060')AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))OR((+ (rt1.c0)))))AND((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((((('-1532554060')AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))OR((+ (rt1.c0)))))AND((+ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((((((('-1532554060')AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))OR((+ (rt1.c0)))))AND((+ (rt1.c1)))));
SELECT * FROM vt1, rt1, v0 WHERE ((((rt1.c2 IN ()))&(((((((((v0.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ()))&(((((((((v0.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, v0);
SELECT * FROM vt1, rt1, v0 WHERE ((((rt1.c2 IN ()))&(((((((((v0.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ()))&(((((((((v0.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, v0);
SELECT * FROM vt1, rt1, v0 WHERE ((((rt1.c2 IN ()))&(((((((((v0.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c0)))));
SELECT ALL * FROM v0, vt1, vt0, rt1 WHERE (((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2))) BETWEEN (TRIM(rt1.c2)) AND (CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN v0.c0 THEN rt1.c1 END))) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2))) BETWEEN (TRIM(rt1.c2)) AND (CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN v0.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM v0, vt1, vt0, rt1 ORDER BY rt1.c1 ASC);
SELECT ALL * FROM v0, vt1, vt0, rt1 WHERE (((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2))) BETWEEN (TRIM(rt1.c2)) AND (CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN v0.c0 THEN rt1.c1 END))) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2))) BETWEEN (TRIM(rt1.c2)) AND (CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN v0.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM v0, vt1, vt0, rt1 ORDER BY rt1.c1 ASC);
SELECT ALL * FROM v0, vt1, vt0, rt1 WHERE (((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2))) BETWEEN (TRIM(rt1.c2)) AND (CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN v0.c0 THEN rt1.c1 END))) ORDER BY rt1.c1 ASC;
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0 IN ()), (((vt0.c0))>=((vt1.c0))), ROUND(vt1.c0, vt1.c0), ((vt0.c0) NOT NULL), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.523432977369448))))<=((vt1.c0, ABS(vt0.c0), ((vt1.c0)%(vt1.c0)), ((vt0.c0)AND(vt1.c0)), vt1.c0 COLLATE BINARY))) WHERE (((((ROUND(vt1.c0, vt0.c0))AND(CAST(vt0.c0 AS TEXT))))AND(vt1.c0))) ORDER BY vt1.c0, (((TOTAL_CHANGES()))<>((LOWER(DISTINCT vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((ROUND(vt1.c0, vt0.c0))AND(CAST(vt0.c0 AS TEXT))))AND(vt1.c0))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt1.c0 IN ()), (((vt0.c0))>=((vt1.c0))), ROUND(vt1.c0, vt1.c0), ((vt0.c0) NOT NULL), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.523432977369448))))<=((vt1.c0, ABS(vt0.c0), ((vt1.c0)%(vt1.c0)), ((vt0.c0)AND(vt1.c0)), vt1.c0 COLLATE BINARY))) ORDER BY vt1.c0, (((TOTAL_CHANGES()))!=((LOWER(DISTINCT vt1.c0)))) DESC);
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0 IN ()), (((vt0.c0))>=((vt1.c0))), ROUND(vt1.c0, vt1.c0), ((vt0.c0) NOT NULL), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.523432977369448))))<=((vt1.c0, ABS(vt0.c0), ((vt1.c0)%(vt1.c0)), ((vt0.c0)AND(vt1.c0)), vt1.c0 COLLATE BINARY))) WHERE (((((ROUND(vt1.c0, vt0.c0))AND(CAST(vt0.c0 AS TEXT))))AND(vt1.c0))) ORDER BY vt1.c0, (((TOTAL_CHANGES()))<>((LOWER(DISTINCT vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((ROUND(vt1.c0, vt0.c0))AND(CAST(vt0.c0 AS TEXT))))AND(vt1.c0))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt1.c0 IN ()), (((vt0.c0))>=((vt1.c0))), ROUND(vt1.c0, vt1.c0), ((vt0.c0) NOT NULL), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.523432977369448))))<=((vt1.c0, ABS(vt0.c0), ((vt1.c0)%(vt1.c0)), ((vt0.c0)AND(vt1.c0)), vt1.c0 COLLATE BINARY))) ORDER BY vt1.c0, (((TOTAL_CHANGES()))!=((LOWER(DISTINCT vt1.c0)))) DESC);
SELECT * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0 IN ()), (((vt0.c0))>=((vt1.c0))), ROUND(vt1.c0, vt1.c0), ((vt0.c0) NOT NULL), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.523432977369448))))<=((vt1.c0, ABS(vt0.c0), ((vt1.c0)%(vt1.c0)), ((vt0.c0)AND(vt1.c0)), vt1.c0 COLLATE BINARY))) WHERE (((((ROUND(vt1.c0, vt0.c0))AND(CAST(vt0.c0 AS TEXT))))AND(vt1.c0))) ORDER BY vt1.c0, (((TOTAL_CHANGES()))<>((LOWER(DISTINCT vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)>(vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(x''))))) ORDER BY CAST(((vt0.c0)||(vt0.c0)) AS TEXT), ((x'')LIKE(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)>(vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(x''))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)||(vt0.c0)) AS TEXT), ((x'')LIKE(CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)>(vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(x''))))) ORDER BY CAST(((vt0.c0)||(vt0.c0)) AS TEXT), ((x'')LIKE(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)>(vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(x''))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)||(vt0.c0)) AS TEXT), ((x'')LIKE(CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)>(vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(x''))))) ORDER BY CAST(((vt0.c0)||(vt0.c0)) AS TEXT), ((x'')LIKE(CAST(vt0.c0 AS BLOB)));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1)|(vt0.c0))) NOT BETWEEN (((vt0.c0)-(rt1.c2))) AND (CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)|(vt0.c0))) NOT BETWEEN (((vt0.c0)-(rt1.c2))) AND (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1)|(vt0.c0))) NOT BETWEEN (((vt0.c0)-(rt1.c2))) AND (CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)|(vt0.c0))) NOT BETWEEN (((vt0.c0)-(rt1.c2))) AND (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1)|(vt0.c0))) NOT BETWEEN (((vt0.c0)-(rt1.c2))) AND (CAST(rt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0) IS TRUE))<(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))<(rt1.c0))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0) IS TRUE))<(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))<(rt1.c0))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0) IS TRUE))<(rt1.c0)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (CASE WHEN vt1.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (CASE WHEN vt1.c0 THEN NULL END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (CASE WHEN vt1.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (CASE WHEN vt1.c0 THEN NULL END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (CASE WHEN vt1.c0 THEN NULL END)));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 NATURAL JOIN v0 WHERE ((~ ((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, vt1 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 NATURAL JOIN v0 WHERE ((~ ((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, vt1 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 NATURAL JOIN v0 WHERE ((~ ((~ (rt1.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CAST(LAST_INSERT_ROWID() AS NUMERIC)) ORDER BY CASE WHEN CASE v0.c0  WHEN 0.8093372167533369 THEN v0.c0 END THEN x'' WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN ((v0.c0)AND(v0.c0)) THEN (((v0.c0))<=((v0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(LAST_INSERT_ROWID() AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CASE v0.c0  WHEN 0.8093372167533369 THEN v0.c0 END THEN x'' WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN ((v0.c0)AND(v0.c0)) THEN (((v0.c0))<=((v0.c0))) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(LAST_INSERT_ROWID() AS NUMERIC)) ORDER BY CASE WHEN CASE v0.c0  WHEN 0.8093372167533369 THEN v0.c0 END THEN x'' WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN ((v0.c0)AND(v0.c0)) THEN (((v0.c0))<=((v0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(LAST_INSERT_ROWID() AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CASE v0.c0  WHEN 0.8093372167533369 THEN v0.c0 END THEN x'' WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN ((v0.c0)AND(v0.c0)) THEN (((v0.c0))<=((v0.c0))) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(LAST_INSERT_ROWID() AS NUMERIC)) ORDER BY CASE WHEN CASE v0.c0  WHEN 0.8093372167533369 THEN v0.c0 END THEN x'' WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN ((v0.c0)AND(v0.c0)) THEN (((v0.c0))<=((v0.c0))) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ('-693832052') ORDER BY (((((rt1.c0, rt1.c2, rt1.c1))>=((rt1.c2, rt1.c2, rt1.c2)))) BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0))) AND (rt1.c0));
SELECT SUM(count) FROM (SELECT ALL (('-693832052') IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0, rt1.c2, rt1.c1))>=((rt1.c2, rt1.c2, rt1.c2)))) BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0))) AND (rt1.c0)));
SELECT ALL COUNT(*) FROM rt1 WHERE ('-693832052') ORDER BY (((((rt1.c0, rt1.c2, rt1.c1))>=((rt1.c2, rt1.c2, rt1.c2)))) BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0))) AND (rt1.c0));
SELECT SUM(count) FROM (SELECT ALL (('-693832052') IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0, rt1.c2, rt1.c1))>=((rt1.c2, rt1.c2, rt1.c2)))) BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0))) AND (rt1.c0)));
SELECT ALL COUNT(*) FROM rt1 WHERE ('-693832052') ORDER BY (((((rt1.c0, rt1.c2, rt1.c1))>=((rt1.c2, rt1.c2, rt1.c2)))) BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0))) AND (rt1.c0));
SELECT ALL * FROM v0 INNER JOIN rt1 ON ((((CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)AND(rt1.c2 COLLATE BINARY)))OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) WHERE (LIKELY(CAST(rt1.c2 AS NUMERIC))) ORDER BY CAST((rt1.c1 IN (v0.c0)) AS TEXT) DESC  NULLS LAST, ((((((v0.c0)AND(rt1.c2)))OR(rt1.c2)))%(rt1.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((((CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)AND(rt1.c2 COLLATE BINARY)))OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) ORDER BY CAST((rt1.c1 IN (v0.c0)) AS TEXT) DESC  NULLS LAST, ((((((v0.c0)AND(rt1.c2)))OR(rt1.c2)))%(rt1.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN rt1 ON ((((CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)AND(rt1.c2 COLLATE BINARY)))OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) WHERE (LIKELY(CAST(rt1.c2 AS NUMERIC))) ORDER BY CAST((rt1.c1 IN (v0.c0)) AS TEXT) DESC  NULLS LAST, ((((((v0.c0)AND(rt1.c2)))OR(rt1.c2)))%(rt1.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((((CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)AND(rt1.c2 COLLATE BINARY)))OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) ORDER BY CAST((rt1.c1 IN (v0.c0)) AS TEXT) DESC  NULLS LAST, ((((((v0.c0)AND(rt1.c2)))OR(rt1.c2)))%(rt1.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN rt1 ON ((((CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)AND(rt1.c2 COLLATE BINARY)))OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) WHERE (LIKELY(CAST(rt1.c2 AS NUMERIC))) ORDER BY CAST((rt1.c1 IN (v0.c0)) AS TEXT) DESC  NULLS LAST, ((((((v0.c0)AND(rt1.c2)))OR(rt1.c2)))%(rt1.c1 COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((- (((vt1.c0)LIKE(vt1.c0))))) ORDER BY json_insert(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), 0.3585736009798146, json_array(vt0.c0, vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_insert(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), 0.3585736009798146, json_array(vt0.c0, vt0.c0))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((- (((vt1.c0)LIKE(vt1.c0))))) ORDER BY json_insert(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), 0.3585736009798146, json_array(vt0.c0, vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_insert(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), 0.3585736009798146, json_array(vt0.c0, vt0.c0))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((- (((vt1.c0)LIKE(vt1.c0))))) ORDER BY json_insert(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), 0.3585736009798146, json_array(vt0.c0, vt0.c0))  NULLS LAST;
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) ORDER BY CAST(((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0)) AS REAL) DESC  NULLS FIRST, ((((rt1.c1)<(vt0.c0)))<=(rt1.c2 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY CAST(((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0)) AS REAL) DESC  NULLS FIRST, ((((rt1.c1)<(vt0.c0)))<=(rt1.c2 COLLATE BINARY))  NULLS LAST);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) ORDER BY CAST(((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0)) AS REAL) DESC  NULLS FIRST, ((((rt1.c1)<(vt0.c0)))<=(rt1.c2 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY CAST(((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0)) AS REAL) DESC  NULLS FIRST, ((((rt1.c1)<(vt0.c0)))<=(rt1.c2 COLLATE BINARY))  NULLS LAST);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) ORDER BY CAST(((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0)) AS REAL) DESC  NULLS FIRST, ((((rt1.c1)<(vt0.c0)))<=(rt1.c2 COLLATE BINARY))  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0, rt1 WHERE (CASE WHEN ((rt1.c0)>=(vt1.c0)) THEN ((v0.c0)%(rt1.c0)) WHEN (((v0.c0))>((x'c4f9'))) THEN rt1.c0 WHEN (+ (rt1.c1)) THEN NULL END) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)>=(vt1.c0)) THEN ((v0.c0)%(rt1.c0)) WHEN (((v0.c0))>((x'c4f9'))) THEN rt1.c0 WHEN (+ (rt1.c1)) THEN NULL END) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY NULL ASC);
SELECT COUNT(*) FROM vt1, v0, rt1 WHERE (CASE WHEN ((rt1.c0)>=(vt1.c0)) THEN ((v0.c0)%(rt1.c0)) WHEN (((v0.c0))>((x'c4f9'))) THEN rt1.c0 WHEN (+ (rt1.c1)) THEN NULL END) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)>=(vt1.c0)) THEN ((v0.c0)%(rt1.c0)) WHEN (((v0.c0))>((x'c4f9'))) THEN rt1.c0 WHEN (+ (rt1.c1)) THEN NULL END) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY NULL ASC);
SELECT COUNT(*) FROM vt1, v0, rt1 WHERE (CASE WHEN ((rt1.c0)>=(vt1.c0)) THEN ((v0.c0)%(rt1.c0)) WHEN (((v0.c0))>((x'c4f9'))) THEN rt1.c0 WHEN (+ (rt1.c1)) THEN NULL END) ORDER BY NULL ASC;
SELECT COUNT(*) FROM v0, vt1 RIGHT OUTER JOIN vt0 ON ((((0.633017731289864)OR(((rt1.c2) IS FALSE))))AND(rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON CAST(CASE rt1.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END AS REAL) WHERE ((v0.c0 IN ())) ORDER BY x'' ASC, CASE WHEN ((0.5011194616036763) IS FALSE) THEN ((vt0.c0)IS(vt1.c0)) ELSE v0.c0 END;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN vt0 ON ((((0.633017731289864)OR(((rt1.c2) IS FALSE))))AND(rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON CAST(CASE rt1.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END AS REAL) ORDER BY x'' ASC, CASE WHEN ((0.5011194616036763) IS FALSE) THEN ((vt0.c0)IS(vt1.c0)) ELSE v0.c0 END);
SELECT COUNT(*) FROM v0, vt1 RIGHT OUTER JOIN vt0 ON ((((0.633017731289864)OR(((rt1.c2) IS FALSE))))AND(rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON CAST(CASE rt1.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END AS REAL) WHERE ((v0.c0 IN ())) ORDER BY x'' ASC, CASE WHEN ((0.5011194616036763) IS FALSE) THEN ((vt0.c0)IS(vt1.c0)) ELSE v0.c0 END;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN vt0 ON ((((0.633017731289864)OR(((rt1.c2) IS FALSE))))AND(rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON CAST(CASE rt1.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END AS REAL) ORDER BY x'' ASC, CASE WHEN ((0.5011194616036763) IS FALSE) THEN ((vt0.c0)IS(vt1.c0)) ELSE v0.c0 END);
SELECT * FROM vt1, vt0, rt1 INNER JOIN v0 ON ((~ ('-730308621')) IN (COALESCE(rt1.c2, v0.c0))) WHERE ((('' COLLATE RTRIM)>=((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) ORDER BY vt1.c0 ASC, '389136776' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('' COLLATE RTRIM)>=((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt1 INNER JOIN v0 ON ((~ ('-730308621')) IN (COALESCE(rt1.c2, v0.c0))) ORDER BY vt1.c0 ASC, '389136776' COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt1, vt0, rt1 INNER JOIN v0 ON ((~ ('-730308621')) IN (COALESCE(rt1.c2, v0.c0))) WHERE ((('' COLLATE RTRIM)>=((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) ORDER BY vt1.c0 ASC, '389136776' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('' COLLATE RTRIM)>=((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt1 INNER JOIN v0 ON ((~ ('-730308621')) IN (COALESCE(rt1.c2, v0.c0))) ORDER BY vt1.c0 ASC, '389136776' COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt1, vt0, rt1 INNER JOIN v0 ON ((~ ('-730308621')) IN (COALESCE(rt1.c2, v0.c0))) WHERE ((('' COLLATE RTRIM)>=((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))))) ORDER BY vt1.c0 ASC, '389136776' COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0)))+(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0)))+(rt1.c1))) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0)))+(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0)))+(rt1.c1))) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0)))+(rt1.c1)));
SELECT * FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (1714250752) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (1714250752) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (1714250752) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (1714250752) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) NOT BETWEEN (1714250752) AND ((vt1.c0 IN ()))));
SELECT * FROM v0, rt1, vt0 WHERE ((((((((((rt1.c1 IN (vt0.c0)))OR(rt1.c2)))OR(LOWER(v0.c0))))OR(CAST('ᭆ%⬂96{璤.' AS BLOB))))OR((vt0.c0 IN (vt0.c0))))) ORDER BY 0.4160023549399977  NULLS LAST, CAST(IFNULL(DISTINCT rt1.c0, rt1.c2) AS BLOB), NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c1 IN (vt0.c0)))OR(rt1.c2)))OR(LOWER(v0.c0))))OR(CAST('ᭆ%⬂96{璤.' AS BLOB))))OR((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY 0.4160023549399977  NULLS LAST, CAST(IFNULL(DISTINCT rt1.c0, rt1.c2) AS BLOB), NULL  NULLS FIRST);
SELECT * FROM v0, rt1, vt0 WHERE ((((((((((rt1.c1 IN (vt0.c0)))OR(rt1.c2)))OR(LOWER(v0.c0))))OR(CAST('ᭆ%⬂96{璤.' AS BLOB))))OR((vt0.c0 IN (vt0.c0))))) ORDER BY 0.4160023549399977  NULLS LAST, CAST(IFNULL(DISTINCT rt1.c0, rt1.c2) AS BLOB), NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c1 IN (vt0.c0)))OR(rt1.c2)))OR(LOWER(v0.c0))))OR(CAST('ᭆ%⬂96{璤.' AS BLOB))))OR((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY 0.4160023549399977  NULLS LAST, CAST(IFNULL(DISTINCT rt1.c0, rt1.c2) AS BLOB), NULL  NULLS FIRST);
SELECT * FROM v0, rt1, vt0 WHERE ((((((((((rt1.c1 IN (vt0.c0)))OR(rt1.c2)))OR(LOWER(v0.c0))))OR(CAST('ᭆ%⬂96{璤.' AS BLOB))))OR((vt0.c0 IN (vt0.c0))))) ORDER BY 0.4160023549399977  NULLS LAST, CAST(IFNULL(DISTINCT rt1.c0, rt1.c2) AS BLOB), NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1, vt0, vt1 WHERE ((rt1.c2 IN (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, rt1, vt0, vt1 WHERE ((rt1.c2 IN (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, rt1, vt0, vt1 WHERE ((rt1.c2 IN (vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE ((((rt1.c2)*('401068354')) IN ())) ORDER BY ((((vt0.c0)AND(v0.c0)))IS NOT(rt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)*('401068354')) IN ())) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((((vt0.c0)AND(v0.c0)))IS NOT(rt1.c0)));
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE ((((rt1.c2)*('401068354')) IN ())) ORDER BY ((((vt0.c0)AND(v0.c0)))IS NOT(rt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)*('401068354')) IN ())) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((((vt0.c0)AND(v0.c0)))IS NOT(rt1.c0)));
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE ((((rt1.c2)*('401068354')) IN ())) ORDER BY ((((vt0.c0)AND(v0.c0)))IS NOT(rt1.c0));
SELECT * FROM vt0, rt1, v0 WHERE ((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0, rt1, v0 WHERE ((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0, rt1, v0 WHERE ((- (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM vt1, vt0, rt1, v0 WHERE (CAST(COALESCE(rt1.c2, rt1.c2, vt1.c0, '') AS NUMERIC)) ORDER BY (((v0.c0, rt1.c0, rt1.c0)) BETWEEN ((((0X1f13df46) NOTNULL), (~ (rt1.c1)), ((rt1.c0)IS(vt1.c0)))) AND (((rt1.c2 IN ()), ((rt1.c1)||(v0.c0)), ((((((((rt1.c1)AND(rt1.c2)))AND(x'')))OR(rt1.c1)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(rt1.c2, rt1.c2, vt1.c0, '') AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, rt1, v0 ORDER BY (((v0.c0, rt1.c0, rt1.c0)) BETWEEN ((((0x1f13df46) NOTNULL), (~ (rt1.c1)), ((rt1.c0)IS(vt1.c0)))) AND (((rt1.c2 IN ()), ((rt1.c1)||(v0.c0)), ((((((((rt1.c1)AND(rt1.c2)))AND(x'')))OR(rt1.c1)))OR(vt0.c0))))) ASC);
SELECT ALL * FROM vt1, vt0, rt1, v0 WHERE (CAST(COALESCE(rt1.c2, rt1.c2, vt1.c0, '') AS NUMERIC)) ORDER BY (((v0.c0, rt1.c0, rt1.c0)) BETWEEN ((((0X1f13df46) NOTNULL), (~ (rt1.c1)), ((rt1.c0)IS(vt1.c0)))) AND (((rt1.c2 IN ()), ((rt1.c1)||(v0.c0)), ((((((((rt1.c1)AND(rt1.c2)))AND(x'')))OR(rt1.c1)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(rt1.c2, rt1.c2, vt1.c0, '') AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, rt1, v0 ORDER BY (((v0.c0, rt1.c0, rt1.c0)) BETWEEN ((((0x1f13df46) NOTNULL), (~ (rt1.c1)), ((rt1.c0)IS(vt1.c0)))) AND (((rt1.c2 IN ()), ((rt1.c1)||(v0.c0)), ((((((((rt1.c1)AND(rt1.c2)))AND(x'')))OR(rt1.c1)))OR(vt0.c0))))) ASC);
SELECT ALL * FROM vt1, vt0, rt1, v0 WHERE (CAST(COALESCE(rt1.c2, rt1.c2, vt1.c0, '') AS NUMERIC)) ORDER BY (((v0.c0, rt1.c0, rt1.c0)) BETWEEN ((((0X1f13df46) NOTNULL), (~ (rt1.c1)), ((rt1.c0)IS(vt1.c0)))) AND (((rt1.c2 IN ()), ((rt1.c1)||(v0.c0)), ((((((((rt1.c1)AND(rt1.c2)))AND(x'')))OR(rt1.c1)))OR(vt0.c0))))) ASC;
SELECT ALL * FROM rt1, v0, vt1 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.8833983479609097)))) ORDER BY ((((0.1549775299721421)&(vt1.c0)))LIKE(LIKELY(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.8833983479609097)))) IS TRUE)  as count FROM rt1, v0, vt1 ORDER BY ((((0.1549775299721421)&(vt1.c0)))LIKE(LIKELY(DISTINCT vt1.c0))));
SELECT ALL * FROM rt1, v0, vt1 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.8833983479609097)))) ORDER BY ((((0.1549775299721421)&(vt1.c0)))LIKE(LIKELY(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.8833983479609097)))) IS TRUE)  as count FROM rt1, v0, vt1 ORDER BY ((((0.1549775299721421)&(vt1.c0)))LIKE(LIKELY(DISTINCT vt1.c0))));
SELECT ALL * FROM rt1, v0, vt1 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.8833983479609097)))) ORDER BY ((((0.1549775299721421)&(vt1.c0)))LIKE(LIKELY(DISTINCT vt1.c0)));
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, v0, rt1, vt0 WHERE (-2.87607644E8);
SELECT SUM(count) FROM (SELECT ALL ((-2.87607644E8) IS TRUE)  as count FROM vt1, v0, rt1, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt1, vt0 WHERE (-2.87607644E8);
SELECT SUM(count) FROM (SELECT ALL ((-2.87607644E8) IS TRUE)  as count FROM vt1, v0, rt1, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt1, vt0 WHERE (-2.87607644E8);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((((rt1.c2) NOT NULL)) IS TRUE) WHERE (((vt1.c0)/(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)/(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((((rt1.c2) NOT NULL)) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((((rt1.c2) NOT NULL)) IS TRUE) WHERE (((vt1.c0)/(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)/(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((((rt1.c2) NOT NULL)) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((((rt1.c2) NOT NULL)) IS TRUE) WHERE (((vt1.c0)/(vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt0.c0), ((vt0.c0)>(vt0.c0)), (((vt0.c0))==(('482587130'))))) AND ((RTRIM(vt0.c0), vt0.c0 COLLATE BINARY, x'b5c2')))) ORDER BY (((vt0.c0 COLLATE NOCASE))==(((vt0.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt0.c0), ((vt0.c0)>(vt0.c0)), (((vt0.c0))==(('482587130'))))) AND ((RTRIM(vt0.c0), vt0.c0 COLLATE BINARY, x'b5c2')))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE NOCASE))==(((vt0.c0 IN ()))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt0.c0), ((vt0.c0)>(vt0.c0)), (((vt0.c0))==(('482587130'))))) AND ((RTRIM(vt0.c0), vt0.c0 COLLATE BINARY, x'b5c2')))) ORDER BY (((vt0.c0 COLLATE NOCASE))==(((vt0.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt0.c0), ((vt0.c0)>(vt0.c0)), (((vt0.c0))==(('482587130'))))) AND ((RTRIM(vt0.c0), vt0.c0 COLLATE BINARY, x'b5c2')))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE NOCASE))==(((vt0.c0 IN ()))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt0.c0), ((vt0.c0)>(vt0.c0)), (((vt0.c0))==(('482587130'))))) AND ((RTRIM(vt0.c0), vt0.c0 COLLATE BINARY, x'b5c2')))) ORDER BY (((vt0.c0 COLLATE NOCASE))==(((vt0.c0 IN ()))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE (((LIKELY(DISTINCT vt1.c0))IS(vt0.c0))) ORDER BY ((((((NULL)AND(rt1.c2)))AND(rt1.c2 COLLATE BINARY)))OR(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt1.c0))IS(vt0.c0))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY ((((((NULL)AND(rt1.c2)))AND(rt1.c2 COLLATE BINARY)))OR(CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE (((LIKELY(DISTINCT vt1.c0))IS(vt0.c0))) ORDER BY ((((((NULL)AND(rt1.c2)))AND(rt1.c2 COLLATE BINARY)))OR(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt1.c0))IS(vt0.c0))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY ((((((NULL)AND(rt1.c2)))AND(rt1.c2 COLLATE BINARY)))OR(CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE (((LIKELY(DISTINCT vt1.c0))IS(vt0.c0))) ORDER BY ((((((NULL)AND(rt1.c2)))AND(rt1.c2 COLLATE BINARY)))OR(CAST(vt1.c0 AS REAL)));
SELECT * FROM vt0 WHERE (((((0x454ac2f7)&(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((0X454ac2f7)&(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0x454ac2f7)&(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((0X454ac2f7)&(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0x454ac2f7)&(vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((IFNULL(vt0.c0, vt0.c0))|(vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS REAL))AND(CASE vt0.c0  WHEN '' THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c0, vt0.c0))|(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))AND(CASE vt0.c0  WHEN '' THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (((IFNULL(vt0.c0, vt0.c0))|(vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS REAL))AND(CASE vt0.c0  WHEN '' THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c0, vt0.c0))|(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))AND(CASE vt0.c0  WHEN '' THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (((IFNULL(vt0.c0, vt0.c0))|(vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS REAL))AND(CASE vt0.c0  WHEN '' THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM rt1, v0, vt1 WHERE (CAST(((v0.c0)%(rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)%(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0, vt1);
SELECT ALL COUNT(*) FROM rt1, v0, vt1 WHERE (CAST(((v0.c0)%(rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)%(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0, vt1);
SELECT ALL COUNT(*) FROM rt1, v0, vt1 WHERE (CAST(((v0.c0)%(rt1.c2)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON x'' INNER JOIN vt1 ON (~ (((vt1.c0)|(vt1.c0)))) WHERE (CAST(((v0.c0)IS(v0.c0)) AS TEXT)) ORDER BY NULL ASC, LIKELY(DISTINCT (NOT (vt0.c0)))  NULLS LAST, ((((x'a733')>=(vt1.c0)))AND((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)IS(v0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON x'' INNER JOIN vt1 ON (~ (((vt1.c0)|(vt1.c0)))) ORDER BY NULL ASC, LIKELY(DISTINCT (NOT (vt0.c0)))  NULLS LAST, ((((x'a733')>=(vt1.c0)))AND((v0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON x'' INNER JOIN vt1 ON (~ (((vt1.c0)|(vt1.c0)))) WHERE (CAST(((v0.c0)IS(v0.c0)) AS TEXT)) ORDER BY NULL ASC, LIKELY(DISTINCT (NOT (vt0.c0)))  NULLS LAST, ((((x'a733')>=(vt1.c0)))AND((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)IS(v0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON x'' INNER JOIN vt1 ON (~ (((vt1.c0)|(vt1.c0)))) ORDER BY NULL ASC, LIKELY(DISTINCT (NOT (vt0.c0)))  NULLS LAST, ((((x'a733')>=(vt1.c0)))AND((v0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c0)>=(NULL))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)>=(NULL))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c0)>=(NULL))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)>=(NULL))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c0)>=(NULL))))) ORDER BY v0.c0 ASC;
SELECT COUNT(*) FROM v0 WHERE ((GLOB(v0.c0, v0.c0) IN ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((GLOB(v0.c0, v0.c0) IN ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((GLOB(v0.c0, v0.c0) IN ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((GLOB(v0.c0, v0.c0) IN ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((GLOB(v0.c0, v0.c0) IN ((v0.c0 IN ()))));
SELECT * FROM rt1, vt1 WHERE (((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))))<=((NULL)))) ORDER BY ((((((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)AND((~ (rt1.c0)))))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END)))AND(((((((((((((rt1.c2)AND(rt1.c2)))OR(vt1.c0)))AND(rt1.c1)))OR(NULL)))AND(rt1.c0)))OR(rt1.c0)))))AND(x'b1fd341b')) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))))<=((NULL)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)AND((~ (rt1.c0)))))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END)))AND(((((((((((((rt1.c2)AND(rt1.c2)))OR(vt1.c0)))AND(rt1.c1)))OR(NULL)))AND(rt1.c0)))OR(rt1.c0)))))AND(x'b1fd341b')) DESC);
SELECT * FROM rt1, vt1 WHERE (((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))))<=((NULL)))) ORDER BY ((((((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)AND((~ (rt1.c0)))))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END)))AND(((((((((((((rt1.c2)AND(rt1.c2)))OR(vt1.c0)))AND(rt1.c1)))OR(NULL)))AND(rt1.c0)))OR(rt1.c0)))))AND(x'b1fd341b')) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))))<=((NULL)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)AND((~ (rt1.c0)))))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END)))AND(((((((((((((rt1.c2)AND(rt1.c2)))OR(vt1.c0)))AND(rt1.c1)))OR(NULL)))AND(rt1.c0)))OR(rt1.c0)))))AND(x'b1fd341b')) DESC);
SELECT * FROM rt1, vt1 WHERE (((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))))<=((NULL)))) ORDER BY ((((((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)AND((~ (rt1.c0)))))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END)))AND(((((((((((((rt1.c2)AND(rt1.c2)))OR(vt1.c0)))AND(rt1.c1)))OR(NULL)))AND(rt1.c0)))OR(rt1.c0)))))AND(x'b1fd341b')) DESC;
SELECT * FROM vt1, v0, rt1, vt0 WHERE (x'') ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0, rt1, vt0 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1, v0, rt1, vt0 WHERE (x'') ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0, rt1, vt0 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1, v0, rt1, vt0 WHERE (x'') ORDER BY vt1.c0 ASC;
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c1))) NOT BETWEEN ('-724838766' COLLATE NOCASE) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN (rt1.c1))) NOT BETWEEN ('-724838766' COLLATE NOCASE) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c1))) NOT BETWEEN ('-724838766' COLLATE NOCASE) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN (rt1.c1))) NOT BETWEEN ('-724838766' COLLATE NOCASE) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c1))) NOT BETWEEN ('-724838766' COLLATE NOCASE) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN rt1 ON 'LF' RIGHT OUTER JOIN vt0 ON (((rt1.c2)) NOT BETWEEN ((0.9183854655826565)) AND ((((v0.c0)LIKE(x'a85f'))))) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (x'787c942c'))) BETWEEN (((((rt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND ((NOT (rt1.c1))))) ORDER BY ((rt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM, (- ((rt1.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (x'787c942c'))) BETWEEN (((((rt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND ((NOT (rt1.c1))))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN rt1 ON 'LF' RIGHT OUTER JOIN vt0 ON (((rt1.c2)) NOT BETWEEN ((0.9183854655826565)) AND ((((v0.c0)LIKE(x'a85f'))))) ORDER BY ((rt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM, (- ((rt1.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN rt1 ON 'LF' RIGHT OUTER JOIN vt0 ON (((rt1.c2)) NOT BETWEEN ((0.9183854655826565)) AND ((((v0.c0)LIKE(x'a85f'))))) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (x'787c942c'))) BETWEEN (((((rt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND ((NOT (rt1.c1))))) ORDER BY ((rt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM, (- ((rt1.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (x'787c942c'))) BETWEEN (((((rt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND ((NOT (rt1.c1))))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN rt1 ON 'LF' RIGHT OUTER JOIN vt0 ON (((rt1.c2)) NOT BETWEEN ((0.9183854655826565)) AND ((((v0.c0)LIKE(x'a85f'))))) ORDER BY ((rt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM, (- ((rt1.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN rt1 ON 'LF' RIGHT OUTER JOIN vt0 ON (((rt1.c2)) NOT BETWEEN ((0.9183854655826565)) AND ((((v0.c0)LIKE(x'a85f'))))) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (x'787c942c'))) BETWEEN (((((rt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND ((NOT (rt1.c1))))) ORDER BY ((rt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM, (- ((rt1.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, v0 WHERE ((- (TIME(rt1.c0, rt1.c2, -1416466594, vt0.c0, vt1.c0)))) ORDER BY CASE WHEN IFNULL(rt1.c2, rt1.c1) THEN (~ (rt1.c2)) END DESC, ((((((rt1.c1)<<(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(rt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((- (TIME(rt1.c0, rt1.c2, -1416466594, vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt0, rt1, vt1, v0 ORDER BY CASE WHEN IFNULL(rt1.c2, rt1.c1) THEN (~ (rt1.c2)) END DESC, ((((((rt1.c1)<<(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(rt1.c0)));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, v0 WHERE ((- (TIME(rt1.c0, rt1.c2, -1416466594, vt0.c0, vt1.c0)))) ORDER BY CASE WHEN IFNULL(rt1.c2, rt1.c1) THEN (~ (rt1.c2)) END DESC, ((((((rt1.c1)<<(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(rt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((- (TIME(rt1.c0, rt1.c2, -1416466594, vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt0, rt1, vt1, v0 ORDER BY CASE WHEN IFNULL(rt1.c2, rt1.c1) THEN (~ (rt1.c2)) END DESC, ((((((rt1.c1)<<(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(rt1.c0)));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, v0 WHERE ((- (TIME(rt1.c0, rt1.c2, -1416466594, vt0.c0, vt1.c0)))) ORDER BY CASE WHEN IFNULL(rt1.c2, rt1.c1) THEN (~ (rt1.c2)) END DESC, ((((((rt1.c1)<<(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(rt1.c0));
SELECT COUNT(*) FROM vt1, v0, vt0, rt1 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) ORDER BY ((COALESCE(DISTINCT rt1.c1, '')) BETWEEN (((v0.c0) NOTNULL)) AND ((x'' IN ()))) ASC, ((((((((v0.c0 COLLATE BINARY)OR(((rt1.c0)IS NOT(rt1.c2)))))OR(((rt1.c2) ISNULL))))AND(((rt1.c0) IS FALSE))))OR(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, v0, vt0, rt1 ORDER BY ((COALESCE(DISTINCT rt1.c1, '')) BETWEEN (((v0.c0) NOTNULL)) AND ((x'' IN ()))) ASC, ((((((((v0.c0 COLLATE BINARY)OR(((rt1.c0)IS NOT(rt1.c2)))))OR(((rt1.c2) ISNULL))))AND(((rt1.c0) IS FALSE))))OR(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, vt0, rt1 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) ORDER BY ((COALESCE(DISTINCT rt1.c1, '')) BETWEEN (((v0.c0) NOTNULL)) AND ((x'' IN ()))) ASC, ((((((((v0.c0 COLLATE BINARY)OR(((rt1.c0)IS NOT(rt1.c2)))))OR(((rt1.c2) ISNULL))))AND(((rt1.c0) IS FALSE))))OR(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, v0, vt0, rt1 ORDER BY ((COALESCE(DISTINCT rt1.c1, '')) BETWEEN (((v0.c0) NOTNULL)) AND ((x'' IN ()))) ASC, ((((((((v0.c0 COLLATE BINARY)OR(((rt1.c0)IS NOT(rt1.c2)))))OR(((rt1.c2) ISNULL))))AND(((rt1.c0) IS FALSE))))OR(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, vt0, rt1 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) ORDER BY ((COALESCE(DISTINCT rt1.c1, '')) BETWEEN (((v0.c0) NOTNULL)) AND ((x'' IN ()))) ASC, ((((((((v0.c0 COLLATE BINARY)OR(((rt1.c0)IS NOT(rt1.c2)))))OR(((rt1.c2) ISNULL))))AND(((rt1.c0) IS FALSE))))OR(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))<=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))) WHERE ((+ (((((vt1.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY (((('?')AND((vt1.c0 IN ()))))OR((((vt1.c0))<=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt1.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))<=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))) ORDER BY (((('?')AND((vt1.c0 IN ()))))OR((((vt1.c0))<=((vt1.c0))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))<=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))) WHERE ((+ (((((vt1.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY (((('?')AND((vt1.c0 IN ()))))OR((((vt1.c0))<=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt1.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))<=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))) ORDER BY (((('?')AND((vt1.c0 IN ()))))OR((((vt1.c0))<=((vt1.c0))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))<=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))) WHERE ((+ (((((vt1.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY (((('?')AND((vt1.c0 IN ()))))OR((((vt1.c0))<=((vt1.c0)))));
SELECT * FROM vt1 CROSS JOIN rt1 ON NULL WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((rt1.c1) IS TRUE) THEN LIKE(rt1.c1, rt1.c2) END) ORDER BY ((((((((rt1.c2)AND(vt1.c0)))OR(rt1.c2)))OR(vt1.c0)))AND(rt1.c0)) COLLATE RTRIM, CASE WHEN ((rt1.c0)-(rt1.c0)) THEN ((rt1.c1)<(rt1.c1)) ELSE ((('j^V w橗tdb'))!=((rt1.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS INTEGER)  WHEN ((rt1.c1) IS TRUE) THEN LIKE(rt1.c1, rt1.c2) END) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON NULL ORDER BY ((((((((rt1.c2)AND(vt1.c0)))OR(rt1.c2)))OR(vt1.c0)))AND(rt1.c0)) COLLATE RTRIM, CASE WHEN ((rt1.c0)-(rt1.c0)) THEN ((rt1.c1)<(rt1.c1)) ELSE ((('j^V w橗tdb'))<>((rt1.c0))) END ASC);
SELECT * FROM vt1 CROSS JOIN rt1 ON NULL WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((rt1.c1) IS TRUE) THEN LIKE(rt1.c1, rt1.c2) END) ORDER BY ((((((((rt1.c2)AND(vt1.c0)))OR(rt1.c2)))OR(vt1.c0)))AND(rt1.c0)) COLLATE RTRIM, CASE WHEN ((rt1.c0)-(rt1.c0)) THEN ((rt1.c1)<(rt1.c1)) ELSE ((('j^V w橗tdb'))!=((rt1.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS INTEGER)  WHEN ((rt1.c1) IS TRUE) THEN LIKE(rt1.c1, rt1.c2) END) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON NULL ORDER BY ((((((((rt1.c2)AND(vt1.c0)))OR(rt1.c2)))OR(vt1.c0)))AND(rt1.c0)) COLLATE RTRIM, CASE WHEN ((rt1.c0)-(rt1.c0)) THEN ((rt1.c1)<(rt1.c1)) ELSE ((('j^V w橗tdb'))<>((rt1.c0))) END ASC);
SELECT * FROM vt1 CROSS JOIN rt1 ON NULL WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((rt1.c1) IS TRUE) THEN LIKE(rt1.c1, rt1.c2) END) ORDER BY ((((((((rt1.c2)AND(vt1.c0)))OR(rt1.c2)))OR(vt1.c0)))AND(rt1.c0)) COLLATE RTRIM, CASE WHEN ((rt1.c0)-(rt1.c0)) THEN ((rt1.c1)<(rt1.c1)) ELSE ((('j^V w橗tdb'))!=((rt1.c0))) END ASC;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c0))<=((vt0.c0))))<=((- (vt0.c0))))) ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffffe2d1f09c))))<>(((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<=((vt0.c0))))<=((- (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffffe2d1f09c))))!=(((vt0.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c0))<=((vt0.c0))))<=((- (vt0.c0))))) ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffffe2d1f09c))))<>(((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<=((vt0.c0))))<=((- (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffffe2d1f09c))))!=(((vt0.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c0))<=((vt0.c0))))<=((- (vt0.c0))))) ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0Xffffffffe2d1f09c))))<>(((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT * FROM v0, vt0 NATURAL JOIN vt1 WHERE (x'd6ef');
SELECT SUM(count) FROM (SELECT ((x'd6ef') IS TRUE)  as count FROM v0, vt0 NATURAL JOIN vt1);
SELECT * FROM v0, vt0 NATURAL JOIN vt1 WHERE (x'd6ef');
SELECT SUM(count) FROM (SELECT ((x'd6ef') IS TRUE)  as count FROM v0, vt0 NATURAL JOIN vt1);
SELECT * FROM v0, vt0 NATURAL JOIN vt1 WHERE (x'd6ef');
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((CASE WHEN 0xffffffffa9a394ae THEN v0.c0 ELSE v0.c0 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN 0Xffffffffa9a394ae THEN v0.c0 ELSE v0.c0 END) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((CASE WHEN 0xffffffffa9a394ae THEN v0.c0 ELSE v0.c0 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN 0Xffffffffa9a394ae THEN v0.c0 ELSE v0.c0 END) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((CASE WHEN 0xffffffffa9a394ae THEN v0.c0 ELSE v0.c0 END) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)LIKE(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2))))) ORDER BY 0.8013951421512487 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)LIKE(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY 0.8013951421512487 ASC);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)LIKE(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2))))) ORDER BY 0.8013951421512487 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)LIKE(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY 0.8013951421512487 ASC);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)LIKE(((((rt1.c0)AND(rt1.c2)))OR(rt1.c2))))) ORDER BY 0.8013951421512487 ASC;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST((vt0.c0 IN (vt0.c0)) AS TEXT) WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) NOTNULL)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST((vt0.c0 IN (vt0.c0)) AS TEXT) ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST((vt0.c0 IN (vt0.c0)) AS TEXT) WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) NOTNULL)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST((vt0.c0 IN (vt0.c0)) AS TEXT) ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST((vt0.c0 IN (vt0.c0)) AS TEXT) WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) NOTNULL)) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (NULL);
SELECT * FROM vt1, vt0 WHERE (0.017272342758266168) ORDER BY (((json_quote(vt1.c0)))=((((vt0.c0)+(vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.017272342758266168) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((json_quote(vt1.c0)))==((((vt0.c0)+(vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (0.017272342758266168) ORDER BY (((json_quote(vt1.c0)))=((((vt0.c0)+(vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.017272342758266168) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((json_quote(vt1.c0)))==((((vt0.c0)+(vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (0.017272342758266168) ORDER BY (((json_quote(vt1.c0)))=((((vt0.c0)+(vt1.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN rt1 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))>=((((vt0.c0, rt1.c1, rt1.c0))<>((v0.c0, rt1.c0, rt1.c0))))) CROSS JOIN vt0 ON ((((rt1.c0)/(vt0.c0))) BETWEEN ((NOT (rt1.c0))) AND (((rt1.c0)<>(rt1.c1)))) WHERE (((x'') IS TRUE));
SELECT SUM(count) FROM (SELECT ((((x'') IS TRUE)) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN rt1 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))>=((((vt0.c0, rt1.c1, rt1.c0))!=((v0.c0, rt1.c0, rt1.c0))))) CROSS JOIN vt0 ON ((((rt1.c0)/(vt0.c0))) BETWEEN ((NOT (rt1.c0))) AND (((rt1.c0)!=(rt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN rt1 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))>=((((vt0.c0, rt1.c1, rt1.c0))<>((v0.c0, rt1.c0, rt1.c0))))) CROSS JOIN vt0 ON ((((rt1.c0)/(vt0.c0))) BETWEEN ((NOT (rt1.c0))) AND (((rt1.c0)<>(rt1.c1)))) WHERE (((x'') IS TRUE));
SELECT SUM(count) FROM (SELECT ((((x'') IS TRUE)) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN rt1 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))>=((((vt0.c0, rt1.c1, rt1.c0))!=((v0.c0, rt1.c0, rt1.c0))))) CROSS JOIN vt0 ON ((((rt1.c0)/(vt0.c0))) BETWEEN ((NOT (rt1.c0))) AND (((rt1.c0)!=(rt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))AND(x'684d')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))AND(x'684d')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))AND(x'684d')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))AND(x'684d')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))AND(x'684d')) COLLATE NOCASE);
SELECT * FROM rt1 WHERE (CAST(CAST(x'084a' AS REAL) AS INTEGER)) ORDER BY (CAST(NULL AS TEXT) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(x'084a' AS REAL) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (CAST(NULL AS TEXT) IN ()));
SELECT * FROM rt1 WHERE (CAST(CAST(x'084a' AS REAL) AS INTEGER)) ORDER BY (CAST(NULL AS TEXT) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(x'084a' AS REAL) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (CAST(NULL AS TEXT) IN ()));
SELECT * FROM rt1 WHERE (CAST(CAST(x'084a' AS REAL) AS INTEGER)) ORDER BY (CAST(NULL AS TEXT) IN ());
SELECT ALL COUNT(*) FROM rt1, v0, vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, v0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt1, v0, vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, v0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt1, v0, vt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c1);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (rt1.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt1.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (rt1.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt1.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (rt1.c1 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED LEFT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN v0.c0 END) ISNULL) FULL OUTER JOIN v0 ON (((((vt1.c0)) BETWEEN ((0.39489800163948696)) AND ((vt1.c0))))&(((('-1448897362'))<((v0.c0))))) WHERE (((LENGTH(vt0.c0))IS NOT(((((vt0.c0)OR(v0.c0)))OR(0.40111183045406773)))));
SELECT SUM(count) FROM (SELECT ((((LENGTH(vt0.c0))IS NOT(((((vt0.c0)OR(v0.c0)))OR(0.40111183045406773))))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN v0.c0 END) ISNULL) FULL OUTER JOIN v0 ON (((((vt1.c0)) BETWEEN ((0.39489800163948696)) AND ((vt1.c0))))&(((('-1448897362'))<((v0.c0))))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED LEFT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN v0.c0 END) ISNULL) FULL OUTER JOIN v0 ON (((((vt1.c0)) BETWEEN ((0.39489800163948696)) AND ((vt1.c0))))&(((('-1448897362'))<((v0.c0))))) WHERE (((LENGTH(vt0.c0))IS NOT(((((vt0.c0)OR(v0.c0)))OR(0.40111183045406773)))));
SELECT SUM(count) FROM (SELECT ((((LENGTH(vt0.c0))IS NOT(((((vt0.c0)OR(v0.c0)))OR(0.40111183045406773))))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN v0.c0 END) ISNULL) FULL OUTER JOIN v0 ON (((((vt1.c0)) BETWEEN ((0.39489800163948696)) AND ((vt1.c0))))&(((('-1448897362'))<((v0.c0))))));
SELECT ALL * FROM v0 CROSS JOIN rt1 ON ((((x'' IN ())))>((((rt1.c1)=(vt1.c0))))) FULL OUTER JOIN vt0 ON ABS(((NULL) NOTNULL)) FULL OUTER JOIN vt1 ON (((rt1.c0, vt0.c0, v0.c0)) BETWEEN (((+ (666357681)), LOWER(rt1.c1), NULL)) AND ((CASE WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) NOTNULL), CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 END))) WHERE ((((vt0.c0 IN ())) BETWEEN (GLOB(vt1.c0, vt0.c0)) AND (((vt1.c0)!=(vt0.c0))))) ORDER BY CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (GLOB(vt1.c0, vt0.c0)) AND (((vt1.c0)<>(vt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON ((((x'' IN ())))>((((rt1.c1)==(vt1.c0))))) FULL OUTER JOIN vt0 ON ABS(((NULL) NOTNULL)) FULL OUTER JOIN vt1 ON (((rt1.c0, vt0.c0, v0.c0)) BETWEEN (((+ (666357681)), LOWER(rt1.c1), NULL)) AND ((CASE WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) NOTNULL), CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN rt1 ON ((((x'' IN ())))>((((rt1.c1)=(vt1.c0))))) FULL OUTER JOIN vt0 ON ABS(((NULL) NOTNULL)) FULL OUTER JOIN vt1 ON (((rt1.c0, vt0.c0, v0.c0)) BETWEEN (((+ (666357681)), LOWER(rt1.c1), NULL)) AND ((CASE WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) NOTNULL), CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 END))) WHERE ((((vt0.c0 IN ())) BETWEEN (GLOB(vt1.c0, vt0.c0)) AND (((vt1.c0)!=(vt0.c0))))) ORDER BY CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (GLOB(vt1.c0, vt0.c0)) AND (((vt1.c0)<>(vt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON ((((x'' IN ())))>((((rt1.c1)==(vt1.c0))))) FULL OUTER JOIN vt0 ON ABS(((NULL) NOTNULL)) FULL OUTER JOIN vt1 ON (((rt1.c0, vt0.c0, v0.c0)) BETWEEN (((+ (666357681)), LOWER(rt1.c1), NULL)) AND ((CASE WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) NOTNULL), CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN ('' IN (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((vt0.c0)<<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.c0))  WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN ('' IN (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((vt0.c0)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN ('' IN (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((vt0.c0)<<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.c0))  WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN ('' IN (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((vt0.c0)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN ('' IN (vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((vt0.c0)<<(vt0.c0)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (NULL)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON ((0.8327864440912471)*(((vt1.c0)<(vt1.c0)))) INNER JOIN vt1 ON load_extension(LIKELY(rt1.c2)) FULL OUTER JOIN vt0 ON rt1.c2 WHERE (((((CAST(rt1.c2 AS TEXT))AND(((0.4202650323681104)<>(rt1.c2)))))AND(CASE WHEN v0.c0 THEN rt1.c2 WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c2 AS TEXT))AND(((0.4202650323681104)<>(rt1.c2)))))AND(CASE WHEN v0.c0 THEN rt1.c2 WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((0.8327864440912471)*(((vt1.c0)<(vt1.c0)))) INNER JOIN vt1 ON load_extension(LIKELY(rt1.c2)) FULL OUTER JOIN vt0 ON rt1.c2);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON ((0.8327864440912471)*(((vt1.c0)<(vt1.c0)))) INNER JOIN vt1 ON load_extension(LIKELY(rt1.c2)) FULL OUTER JOIN vt0 ON rt1.c2 WHERE (((((CAST(rt1.c2 AS TEXT))AND(((0.4202650323681104)<>(rt1.c2)))))AND(CASE WHEN v0.c0 THEN rt1.c2 WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c2 AS TEXT))AND(((0.4202650323681104)<>(rt1.c2)))))AND(CASE WHEN v0.c0 THEN rt1.c2 WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((0.8327864440912471)*(((vt1.c0)<(vt1.c0)))) INNER JOIN vt1 ON load_extension(LIKELY(rt1.c2)) FULL OUTER JOIN vt0 ON rt1.c2);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (+ (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE (TRIM(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (+ (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (+ (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE (TRIM(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (+ (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (+ (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE (TRIM(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))));
SELECT * FROM vt1, v0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (x'');
SELECT ALL * FROM rt1, vt1, vt0, v0 WHERE ((((vt0.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2 COLLATE NOCASE, x'', LIKELY('-978398475'))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c2 END, vt0.c0 COLLATE BINARY, (- (rt1.c0)))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2 COLLATE NOCASE, x'', LIKELY('-978398475'))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c2 END, vt0.c0 COLLATE BINARY, (- (rt1.c0)))))) IS TRUE)  as count FROM rt1, vt1, vt0, v0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt1, vt1, vt0, v0 WHERE ((((vt0.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2 COLLATE NOCASE, x'', LIKELY('-978398475'))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c2 END, vt0.c0 COLLATE BINARY, (- (rt1.c0)))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2 COLLATE NOCASE, x'', LIKELY('-978398475'))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c2 END, vt0.c0 COLLATE BINARY, (- (rt1.c0)))))) IS TRUE)  as count FROM rt1, vt1, vt0, v0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt1, vt1, vt0, v0 WHERE ((((vt0.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2 COLLATE NOCASE, x'', LIKELY('-978398475'))) AND ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c2 END, vt0.c0 COLLATE BINARY, (- (rt1.c0)))))) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (0.39489800163948696);
SELECT SUM(count) FROM (SELECT ALL ((0.39489800163948696) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.39489800163948696);
SELECT SUM(count) FROM (SELECT ALL ((0.39489800163948696) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.39489800163948696);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1, v0 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0))))LIKE((((vt0.c0))>=((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0))))LIKE((((vt0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt1, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1, v0 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0))))LIKE((((vt0.c0))>=((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0))))LIKE((((vt0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt1, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1, v0 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0))))LIKE((((vt0.c0))>=((v0.c0))))));
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt1 WHERE (CASE ((vt1.c0)LIKE(rt1.c0))  WHEN TRIM(DISTINCT rt1.c2) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c1 IN (rt1.c0)) WHEN ((rt1.c2)AND(vt1.c0)) THEN ((rt1.c2)LIKE(vt1.c0)) ELSE ((rt1.c2) NOT NULL) END) ORDER BY (~ (((rt1.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)LIKE(rt1.c0))  WHEN TRIM(DISTINCT rt1.c2) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c1 IN (rt1.c0)) WHEN ((rt1.c2)AND(vt1.c0)) THEN ((rt1.c2)LIKE(vt1.c0)) ELSE ((rt1.c2) NOT NULL) END) IS TRUE)  as count FROM vt1, rt1 ORDER BY (~ (((rt1.c0) IS TRUE))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt1 WHERE (CASE ((vt1.c0)LIKE(rt1.c0))  WHEN TRIM(DISTINCT rt1.c2) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c1 IN (rt1.c0)) WHEN ((rt1.c2)AND(vt1.c0)) THEN ((rt1.c2)LIKE(vt1.c0)) ELSE ((rt1.c2) NOT NULL) END) ORDER BY (~ (((rt1.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)LIKE(rt1.c0))  WHEN TRIM(DISTINCT rt1.c2) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c1 IN (rt1.c0)) WHEN ((rt1.c2)AND(vt1.c0)) THEN ((rt1.c2)LIKE(vt1.c0)) ELSE ((rt1.c2) NOT NULL) END) IS TRUE)  as count FROM vt1, rt1 ORDER BY (~ (((rt1.c0) IS TRUE))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt1 WHERE (CASE ((vt1.c0)LIKE(rt1.c0))  WHEN TRIM(DISTINCT rt1.c2) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN CAST(rt1.c1 AS REAL) THEN (rt1.c1 IN (rt1.c0)) WHEN ((rt1.c2)AND(vt1.c0)) THEN ((rt1.c2)LIKE(vt1.c0)) ELSE ((rt1.c2) NOT NULL) END) ORDER BY (~ (((rt1.c0) IS TRUE))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((((rt1.c1)OR(rt1.c0)))AND(vt1.c0))) AND (((rt1.c1)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((((rt1.c1)OR(rt1.c0)))AND(vt1.c0))) AND (((rt1.c1)%(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0, rt1);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((((rt1.c1)OR(rt1.c0)))AND(vt1.c0))) AND (((rt1.c1)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((((rt1.c1)OR(rt1.c0)))AND(vt1.c0))) AND (((rt1.c1)%(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0, rt1);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((((rt1.c1)OR(rt1.c0)))AND(vt1.c0))) AND (((rt1.c1)%(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE ((((rt1.c1) IS FALSE) IN ())) ORDER BY '-2031188180' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY '-2031188180' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE ((((rt1.c1) IS FALSE) IN ())) ORDER BY '-2031188180' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY '-2031188180' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE ((((rt1.c1) IS FALSE) IN ())) ORDER BY '-2031188180' ASC  NULLS LAST;
SELECT ALL * FROM v0, vt1, vt0 WHERE ('J9' COLLATE RTRIM) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('J9' COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM v0, vt1, vt0 WHERE ('J9' COLLATE RTRIM) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('J9' COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM v0, vt1, vt0 WHERE ('J9' COLLATE RTRIM) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)>>(vt0.c0)));
SELECT COUNT(*) FROM vt1, rt1, v0, vt0 WHERE (((v0.c0) BETWEEN (((((vt0.c0)OR(rt1.c1)))AND(rt1.c2))) AND (((v0.c0)<(rt1.c2))))) ORDER BY CASE WHEN ((rt1.c2) BETWEEN (v0.c0) AND (rt1.c0)) THEN (('-2103437472') NOT BETWEEN (rt1.c1) AND (rt1.c0)) WHEN (((v0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN ((-978398475)>=(NULL)) WHEN CAST(rt1.c2 AS BLOB) THEN (((vt1.c0))<>((rt1.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (((((vt0.c0)OR(rt1.c1)))AND(rt1.c2))) AND (((v0.c0)<(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1, v0, vt0 ORDER BY CASE WHEN ((rt1.c2) BETWEEN (v0.c0) AND (rt1.c0)) THEN (('-2103437472') NOT BETWEEN (rt1.c1) AND (rt1.c0)) WHEN (((v0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN ((-978398475)>=(NULL)) WHEN CAST(rt1.c2 AS BLOB) THEN (((vt1.c0))<>((rt1.c0))) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, v0, vt0 WHERE (((v0.c0) BETWEEN (((((vt0.c0)OR(rt1.c1)))AND(rt1.c2))) AND (((v0.c0)<(rt1.c2))))) ORDER BY CASE WHEN ((rt1.c2) BETWEEN (v0.c0) AND (rt1.c0)) THEN (('-2103437472') NOT BETWEEN (rt1.c1) AND (rt1.c0)) WHEN (((v0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN ((-978398475)>=(NULL)) WHEN CAST(rt1.c2 AS BLOB) THEN (((vt1.c0))<>((rt1.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (((((vt0.c0)OR(rt1.c1)))AND(rt1.c2))) AND (((v0.c0)<(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1, v0, vt0 ORDER BY CASE WHEN ((rt1.c2) BETWEEN (v0.c0) AND (rt1.c0)) THEN (('-2103437472') NOT BETWEEN (rt1.c1) AND (rt1.c0)) WHEN (((v0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN ((-978398475)>=(NULL)) WHEN CAST(rt1.c2 AS BLOB) THEN (((vt1.c0))<>((rt1.c0))) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, v0, vt0 WHERE (((v0.c0) BETWEEN (((((vt0.c0)OR(rt1.c1)))AND(rt1.c2))) AND (((v0.c0)<(rt1.c2))))) ORDER BY CASE WHEN ((rt1.c2) BETWEEN (v0.c0) AND (rt1.c0)) THEN (('-2103437472') NOT BETWEEN (rt1.c1) AND (rt1.c0)) WHEN (((v0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN ((-978398475)>=(NULL)) WHEN CAST(rt1.c2 AS BLOB) THEN (((vt1.c0))<>((rt1.c0))) END ASC  NULLS LAST;
SELECT ALL * FROM v0, rt1, vt1 FULL OUTER JOIN vt0 ON HEX(DISTINCT (((0.8096035198855367))=((rt1.c1)))) WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN LIKELY(DISTINCT v0.c0) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS INTEGER) THEN LIKELY(DISTINCT v0.c0) ELSE vt1.c0 END) IS TRUE)  as count FROM v0, rt1, vt1 FULL OUTER JOIN vt0 ON HEX(DISTINCT (((0.8096035198855367))==((rt1.c1)))));
SELECT ALL * FROM v0, rt1, vt1 FULL OUTER JOIN vt0 ON HEX(DISTINCT (((0.8096035198855367))=((rt1.c1)))) WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN LIKELY(DISTINCT v0.c0) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS INTEGER) THEN LIKELY(DISTINCT v0.c0) ELSE vt1.c0 END) IS TRUE)  as count FROM v0, rt1, vt1 FULL OUTER JOIN vt0 ON HEX(DISTINCT (((0.8096035198855367))==((rt1.c1)))));
SELECT ALL * FROM v0, rt1, vt1 FULL OUTER JOIN vt0 ON HEX(DISTINCT (((0.8096035198855367))=((rt1.c1)))) WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN LIKELY(DISTINCT v0.c0) ELSE vt1.c0 END);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((v0.c0)IS((+ (vt0.c0)))) CROSS JOIN v0 ON ((((v0.c0)OR(vt1.c0))) NOT BETWEEN (((x'')%('-489557860'))) AND (v0.c0)) WHERE (CASE ((vt0.c0) NOT NULL)  WHEN v0.c0 COLLATE RTRIM THEN ((((((((((((vt1.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)) END) ORDER BY '(aYw' ASC  NULLS FIRST, (((((- (vt1.c0)))OR(CAST(v0.c0 AS INTEGER))))OR(UPPER(vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT NULL)  WHEN v0.c0 COLLATE RTRIM THEN ((((((((((((vt1.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((v0.c0)IS((+ (vt0.c0)))) CROSS JOIN v0 ON ((((v0.c0)OR(vt1.c0))) NOT BETWEEN (((x'')%('-489557860'))) AND (v0.c0)) ORDER BY '(aYw' ASC  NULLS FIRST, (((((- (vt1.c0)))OR(CAST(v0.c0 AS INTEGER))))OR(UPPER(vt1.c0))) ASC  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((v0.c0)IS((+ (vt0.c0)))) CROSS JOIN v0 ON ((((v0.c0)OR(vt1.c0))) NOT BETWEEN (((x'')%('-489557860'))) AND (v0.c0)) WHERE (CASE ((vt0.c0) NOT NULL)  WHEN v0.c0 COLLATE RTRIM THEN ((((((((((((vt1.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)) END) ORDER BY '(aYw' ASC  NULLS FIRST, (((((- (vt1.c0)))OR(CAST(v0.c0 AS INTEGER))))OR(UPPER(vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT NULL)  WHEN v0.c0 COLLATE RTRIM THEN ((((((((((((vt1.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((v0.c0)IS((+ (vt0.c0)))) CROSS JOIN v0 ON ((((v0.c0)OR(vt1.c0))) NOT BETWEEN (((x'')%('-489557860'))) AND (v0.c0)) ORDER BY '(aYw' ASC  NULLS FIRST, (((((- (vt1.c0)))OR(CAST(v0.c0 AS INTEGER))))OR(UPPER(vt1.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c1 CROSS JOIN vt1 ON CAST(((((v0.c0)AND(vt1.c0)))OR(v0.c0)) AS TEXT) LEFT OUTER JOIN vt0 ON ((((rt1.c2)GLOB(rt1.c1)))<=(rt1.c1)) WHERE ((((vt0.c0))<((vt1.c0))) COLLATE NOCASE) ORDER BY ((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c1 CROSS JOIN vt1 ON CAST(((((v0.c0)AND(vt1.c0)))OR(v0.c0)) AS TEXT) LEFT OUTER JOIN vt0 ON ((((rt1.c2)GLOB(rt1.c1)))<=(rt1.c1)) ORDER BY ((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c1 CROSS JOIN vt1 ON CAST(((((v0.c0)AND(vt1.c0)))OR(v0.c0)) AS TEXT) LEFT OUTER JOIN vt0 ON ((((rt1.c2)GLOB(rt1.c1)))<=(rt1.c1)) WHERE ((((vt0.c0))<((vt1.c0))) COLLATE NOCASE) ORDER BY ((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c1 CROSS JOIN vt1 ON CAST(((((v0.c0)AND(vt1.c0)))OR(v0.c0)) AS TEXT) LEFT OUTER JOIN vt0 ON ((((rt1.c2)GLOB(rt1.c1)))<=(rt1.c1)) ORDER BY ((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON rt1.c1 CROSS JOIN vt1 ON CAST(((((v0.c0)AND(vt1.c0)))OR(v0.c0)) AS TEXT) LEFT OUTER JOIN vt0 ON ((((rt1.c2)GLOB(rt1.c1)))<=(rt1.c1)) WHERE ((((vt0.c0))<((vt1.c0))) COLLATE NOCASE) ORDER BY ((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) ISNULL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 INNER JOIN rt1 ON 0.31516696738841765 COLLATE BINARY LEFT OUTER JOIN vt1 ON ((NULL) BETWEEN (((((rt1.c0)AND(vt1.c0)))AND(v0.c0))) AND (((vt0.c0)+(vt0.c0)))) WHERE (CAST('%M{\I' AS NUMERIC)) ORDER BY (v0.c0 IN (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST('%M{\I' AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON 0.31516696738841765 COLLATE BINARY LEFT OUTER JOIN vt1 ON ((NULL) BETWEEN (((((rt1.c0)AND(vt1.c0)))AND(v0.c0))) AND (((vt0.c0)+(vt0.c0)))) ORDER BY (v0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, v0 INNER JOIN rt1 ON 0.31516696738841765 COLLATE BINARY LEFT OUTER JOIN vt1 ON ((NULL) BETWEEN (((((rt1.c0)AND(vt1.c0)))AND(v0.c0))) AND (((vt0.c0)+(vt0.c0)))) WHERE (CAST('%M{\I' AS NUMERIC)) ORDER BY (v0.c0 IN (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST('%M{\I' AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON 0.31516696738841765 COLLATE BINARY LEFT OUTER JOIN vt1 ON ((NULL) BETWEEN (((((rt1.c0)AND(vt1.c0)))AND(v0.c0))) AND (((vt0.c0)+(vt0.c0)))) ORDER BY (v0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, v0 INNER JOIN rt1 ON 0.31516696738841765 COLLATE BINARY LEFT OUTER JOIN vt1 ON ((NULL) BETWEEN (((((rt1.c0)AND(vt1.c0)))AND(v0.c0))) AND (((vt0.c0)+(vt0.c0)))) WHERE (CAST('%M{\I' AS NUMERIC)) ORDER BY (v0.c0 IN (vt0.c0)) COLLATE BINARY;
SELECT ALL * FROM v0 WHERE ((((v0.c0))>=((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))>=((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0))>=((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))>=((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0))>=((v0.c0))));
SELECT * FROM vt0, rt1, vt1 WHERE (load_extension(UPPER(DISTINCT rt1.c1))) ORDER BY ((((vt0.c0)>(rt1.c2)))>=(('159071747' IN ()))), ((CAST(rt1.c2 AS REAL))=(((rt1.c1)LIKE(vt0.c0)))), rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(UPPER(DISTINCT rt1.c1))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((((vt0.c0)>(rt1.c2)))>=(('159071747' IN ()))), ((CAST(rt1.c2 AS REAL))=(((rt1.c1)LIKE(vt0.c0)))), rt1.c0  NULLS LAST);
SELECT * FROM vt0, rt1, vt1 WHERE (load_extension(UPPER(DISTINCT rt1.c1))) ORDER BY ((((vt0.c0)>(rt1.c2)))>=(('159071747' IN ()))), ((CAST(rt1.c2 AS REAL))=(((rt1.c1)LIKE(vt0.c0)))), rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(UPPER(DISTINCT rt1.c1))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((((vt0.c0)>(rt1.c2)))>=(('159071747' IN ()))), ((CAST(rt1.c2 AS REAL))=(((rt1.c1)LIKE(vt0.c0)))), rt1.c0  NULLS LAST);
SELECT * FROM vt0, rt1, vt1 WHERE (load_extension(UPPER(DISTINCT rt1.c1))) ORDER BY ((((vt0.c0)>(rt1.c2)))>=(('159071747' IN ()))), ((CAST(rt1.c2 AS REAL))=(((rt1.c1)LIKE(vt0.c0)))), rt1.c0  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY CAST(vt0.c0 AS TEXT) ASC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(vt0.c0 AS TEXT) ASC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND (vt0.c0)) ASC);
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY CAST(vt0.c0 AS TEXT) ASC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(vt0.c0 AS TEXT) ASC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND (vt0.c0)) ASC);
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY CAST(vt0.c0 AS TEXT) ASC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT)) BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND (vt0.c0)) ASC;
SELECT COUNT(*) FROM vt0, v0, vt1, rt1 WHERE ((((((rt1.c0))==((rt1.c1))))>=(json_object(rt1.c2, '64')))) ORDER BY (vt0.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))==((rt1.c1))))>=(json_object(rt1.c2, '64')))) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY (vt0.c0 IN ()) DESC);
SELECT COUNT(*) FROM vt0, v0, vt1, rt1 WHERE ((((((rt1.c0))==((rt1.c1))))>=(json_object(rt1.c2, '64')))) ORDER BY (vt0.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))==((rt1.c1))))>=(json_object(rt1.c2, '64')))) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY (vt0.c0 IN ()) DESC);
SELECT COUNT(*) FROM vt0, v0, vt1, rt1 WHERE ((((((rt1.c0))==((rt1.c1))))>=(json_object(rt1.c2, '64')))) ORDER BY (vt0.c0 IN ()) DESC;
SELECT COUNT(*) FROM v0, rt1 NATURAL JOIN vt0 WHERE (((((((((NULLIF(DISTINCT rt1.c1, NULL))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(x'')))OR(CAST(rt1.c2 AS INTEGER)))) ORDER BY x'7f01edfa' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULLIF(DISTINCT rt1.c1, NULL))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(x'')))OR(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM v0 NOT INDEXED, rt1 NATURAL JOIN vt0 ORDER BY x'7f01edfa' DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 NATURAL JOIN vt0 WHERE (((((((((NULLIF(DISTINCT rt1.c1, NULL))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(x'')))OR(CAST(rt1.c2 AS INTEGER)))) ORDER BY x'7f01edfa' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULLIF(DISTINCT rt1.c1, NULL))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(x'')))OR(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM v0 NOT INDEXED, rt1 NATURAL JOIN vt0 ORDER BY x'7f01edfa' DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 NATURAL JOIN vt0 WHERE (((((((((NULLIF(DISTINCT rt1.c1, NULL))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(x'')))OR(CAST(rt1.c2 AS INTEGER)))) ORDER BY x'7f01edfa' DESC  NULLS LAST;
SELECT * FROM vt0, v0, rt1, vt1 WHERE (CAST(((x'') ISNULL) AS INTEGER)) ORDER BY CASE WHEN ((x'')||(rt1.c0)) THEN TRIM(vt0.c0, v0.c0) ELSE (~ (rt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, v0, rt1, vt1 ORDER BY CASE WHEN ((x'')||(rt1.c0)) THEN TRIM(vt0.c0, v0.c0) ELSE (~ (rt1.c0)) END DESC  NULLS LAST);
SELECT * FROM vt0, v0, rt1, vt1 WHERE (CAST(((x'') ISNULL) AS INTEGER)) ORDER BY CASE WHEN ((x'')||(rt1.c0)) THEN TRIM(vt0.c0, v0.c0) ELSE (~ (rt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, v0, rt1, vt1 ORDER BY CASE WHEN ((x'')||(rt1.c0)) THEN TRIM(vt0.c0, v0.c0) ELSE (~ (rt1.c0)) END DESC  NULLS LAST);
SELECT * FROM vt0, v0, rt1, vt1 WHERE (CAST(((x'') ISNULL) AS INTEGER)) ORDER BY CASE WHEN ((x'')||(rt1.c0)) THEN TRIM(vt0.c0, v0.c0) ELSE (~ (rt1.c0)) END DESC  NULLS LAST;
SELECT * FROM v0, rt1 WHERE (x'5332') ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END, (~ (v0.c0)), v0.c0, ((v0.c0)AND(rt1.c2)), (rt1.c0 IN ())))>(((((rt1.c2))<=((rt1.c1))), '', (NOT (rt1.c2)), (rt1.c2 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (0.017272342758266168))))), ((((((((((rt1.c0)AND(v0.c0)))OR(v0.c0)))OR(rt1.c0)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1)-(rt1.c0))) AND (((((v0.c0)OR(rt1.c2)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((x'5332') IS TRUE)  as count FROM v0, rt1 ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END, (~ (v0.c0)), v0.c0, ((v0.c0)AND(rt1.c2)), (rt1.c0 IN ())))>(((((rt1.c2))<=((rt1.c1))), '', (NOT (rt1.c2)), (rt1.c2 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (0.017272342758266168))))), ((((((((((rt1.c0)AND(v0.c0)))OR(v0.c0)))OR(rt1.c0)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1)-(rt1.c0))) AND (((((v0.c0)OR(rt1.c2)))OR(rt1.c2)))));
SELECT * FROM v0, rt1 WHERE (x'5332') ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END, (~ (v0.c0)), v0.c0, ((v0.c0)AND(rt1.c2)), (rt1.c0 IN ())))>(((((rt1.c2))<=((rt1.c1))), '', (NOT (rt1.c2)), (rt1.c2 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (0.017272342758266168))))), ((((((((((rt1.c0)AND(v0.c0)))OR(v0.c0)))OR(rt1.c0)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1)-(rt1.c0))) AND (((((v0.c0)OR(rt1.c2)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((x'5332') IS TRUE)  as count FROM v0, rt1 ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END, (~ (v0.c0)), v0.c0, ((v0.c0)AND(rt1.c2)), (rt1.c0 IN ())))>(((((rt1.c2))<=((rt1.c1))), '', (NOT (rt1.c2)), (rt1.c2 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (0.017272342758266168))))), ((((((((((rt1.c0)AND(v0.c0)))OR(v0.c0)))OR(rt1.c0)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1)-(rt1.c0))) AND (((((v0.c0)OR(rt1.c2)))OR(rt1.c2)))));
SELECT * FROM v0, rt1 WHERE (x'5332') ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END, (~ (v0.c0)), v0.c0, ((v0.c0)AND(rt1.c2)), (rt1.c0 IN ())))>(((((rt1.c2))<=((rt1.c1))), '', (NOT (rt1.c2)), (rt1.c2 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (0.017272342758266168))))), ((((((((((rt1.c0)AND(v0.c0)))OR(v0.c0)))OR(rt1.c0)))OR(rt1.c0))) NOT BETWEEN (((rt1.c1)-(rt1.c0))) AND (((((v0.c0)OR(rt1.c2)))OR(rt1.c2))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((((((rt1.c0)OR(v0.c0)))AND(vt0.c0)))) AND ((((rt1.c2) IS TRUE)))) INNER JOIN vt0 ON CASE (v0.c0 IN ())  WHEN x'' THEN rt1.c2 COLLATE BINARY END WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((((((rt1.c0)OR(v0.c0)))AND(vt0.c0)))) AND ((((rt1.c2) IS TRUE)))) INNER JOIN vt0 ON CASE (v0.c0 IN ())  WHEN x'' THEN rt1.c2 COLLATE BINARY END);
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((((((rt1.c0)OR(v0.c0)))AND(vt0.c0)))) AND ((((rt1.c2) IS TRUE)))) INNER JOIN vt0 ON CASE (v0.c0 IN ())  WHEN x'' THEN rt1.c2 COLLATE BINARY END WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((((((rt1.c0)OR(v0.c0)))AND(vt0.c0)))) AND ((((rt1.c2) IS TRUE)))) INNER JOIN vt0 ON CASE (v0.c0 IN ())  WHEN x'' THEN rt1.c2 COLLATE BINARY END);
SELECT ALL * FROM rt1, v0, vt0 FULL OUTER JOIN vt1 ON NULL WHERE ((+ (rt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0, vt0 FULL OUTER JOIN vt1 ON NULL);
SELECT ALL * FROM rt1, v0, vt0 FULL OUTER JOIN vt1 ON NULL WHERE ((+ (rt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0, vt0 FULL OUTER JOIN vt1 ON NULL);
SELECT ALL * FROM rt1, v0, vt0 FULL OUTER JOIN vt1 ON NULL WHERE ((+ (rt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))-(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))-(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))-(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))-(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))-(((v0.c0) IS TRUE))));
SELECT ALL * FROM vt1, vt0, v0, rt1 WHERE (json_patch(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), '1620333118')) ORDER BY (((vt0.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), '1620333118')) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY (((vt0.c0) IS FALSE) IN ()));
SELECT ALL * FROM vt1, vt0, v0, rt1 WHERE (json_patch(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), '1620333118')) ORDER BY (((vt0.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), '1620333118')) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY (((vt0.c0) IS FALSE) IN ()));
SELECT ALL * FROM vt1, vt0, v0, rt1 WHERE (json_patch(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)), '1620333118')) ORDER BY (((vt0.c0) IS FALSE) IN ());
SELECT * FROM rt1 CROSS JOIN vt0 ON NULLIF(DISTINCT ((rt1.c0)>=(rt1.c2)), CASE WHEN rt1.c2 THEN rt1.c0 END) WHERE (((x'') IS TRUE)) ORDER BY ((-9.78398475E8) IS TRUE) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') IS TRUE)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON NULLIF(DISTINCT ((rt1.c0)>=(rt1.c2)), CASE WHEN rt1.c2 THEN rt1.c0 END) ORDER BY ((-9.78398475E8) IS TRUE) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN vt0 ON NULLIF(DISTINCT ((rt1.c0)>=(rt1.c2)), CASE WHEN rt1.c2 THEN rt1.c0 END) WHERE (((x'') IS TRUE)) ORDER BY ((-9.78398475E8) IS TRUE) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') IS TRUE)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON NULLIF(DISTINCT ((rt1.c0)>=(rt1.c2)), CASE WHEN rt1.c2 THEN rt1.c0 END) ORDER BY ((-9.78398475E8) IS TRUE) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN vt0 ON NULLIF(DISTINCT ((rt1.c0)>=(rt1.c2)), CASE WHEN rt1.c2 THEN rt1.c0 END) WHERE (((x'') IS TRUE)) ORDER BY ((-9.78398475E8) IS TRUE) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1 WHERE (CHAR(((rt1.c0)+(rt1.c0)), (NOT (rt1.c0)), (rt1.c0 IN ()))) ORDER BY ((('1397212922' IN ()))GLOB(((NULL) NOT BETWEEN (v0.c0) AND (0.8327864440912471))))  NULLS FIRST, (((v0.c0 IN ()))*(((rt1.c0)-(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((rt1.c0)+(rt1.c0)), (NOT (rt1.c0)), (rt1.c0 IN ()))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((('1397212922' IN ()))GLOB(((NULL) NOT BETWEEN (v0.c0) AND (0.8327864440912471))))  NULLS FIRST, (((v0.c0 IN ()))*(((rt1.c0)-(rt1.c2)))) ASC);
SELECT COUNT(*) FROM v0, rt1 WHERE (CHAR(((rt1.c0)+(rt1.c0)), (NOT (rt1.c0)), (rt1.c0 IN ()))) ORDER BY ((('1397212922' IN ()))GLOB(((NULL) NOT BETWEEN (v0.c0) AND (0.8327864440912471))))  NULLS FIRST, (((v0.c0 IN ()))*(((rt1.c0)-(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((rt1.c0)+(rt1.c0)), (NOT (rt1.c0)), (rt1.c0 IN ()))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((('1397212922' IN ()))GLOB(((NULL) NOT BETWEEN (v0.c0) AND (0.8327864440912471))))  NULLS FIRST, (((v0.c0 IN ()))*(((rt1.c0)-(rt1.c2)))) ASC);
SELECT COUNT(*) FROM v0, rt1 WHERE (CHAR(((rt1.c0)+(rt1.c0)), (NOT (rt1.c0)), (rt1.c0 IN ()))) ORDER BY ((('1397212922' IN ()))GLOB(((NULL) NOT BETWEEN (v0.c0) AND (0.8327864440912471))))  NULLS FIRST, (((v0.c0 IN ()))*(((rt1.c0)-(rt1.c2)))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY (((((vt1.c0))!=((vt1.c0)))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN '' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL)))  NULLS FIRST, (((((((vt0.c0))<=((vt1.c0))))AND((((vt1.c0))==((vt0.c0))))))OR(((vt1.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0))!=((vt1.c0)))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN '' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL)))  NULLS FIRST, (((((((vt0.c0))<=((vt1.c0))))AND((((vt1.c0))==((vt0.c0))))))OR(((vt1.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY (((((vt1.c0))!=((vt1.c0)))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN '' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL)))  NULLS FIRST, (((((((vt0.c0))<=((vt1.c0))))AND((((vt1.c0))==((vt0.c0))))))OR(((vt1.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0))!=((vt1.c0)))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN '' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL)))  NULLS FIRST, (((((((vt0.c0))<=((vt1.c0))))AND((((vt1.c0))==((vt0.c0))))))OR(((vt1.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY (((((vt1.c0))!=((vt1.c0)))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN '' ELSE vt0.c0 END) AND (((vt0.c0) ISNULL)))  NULLS FIRST, (((((((vt0.c0))<=((vt1.c0))))AND((((vt1.c0))==((vt0.c0))))))OR(((vt1.c0) IS FALSE))) ASC;
SELECT ALL COUNT(*) FROM rt1, v0, vt1 CROSS JOIN vt0 ON ((((CASE v0.c0  WHEN rt1.c2 THEN vt0.c0 ELSE v0.c0 END)OR(((rt1.c0) IS TRUE))))AND(rt1.c1)) WHERE (((x'')+(((x'') NOTNULL)))) ORDER BY (~ (SQLITE_VERSION())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')+(((x'') NOTNULL)))) IS TRUE)  as count FROM rt1, v0, vt1 CROSS JOIN vt0 ON ((((CASE v0.c0  WHEN rt1.c2 THEN vt0.c0 ELSE v0.c0 END)OR(((rt1.c0) IS TRUE))))AND(rt1.c1)) ORDER BY (~ (SQLITE_VERSION())) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, vt1 CROSS JOIN vt0 ON ((((CASE v0.c0  WHEN rt1.c2 THEN vt0.c0 ELSE v0.c0 END)OR(((rt1.c0) IS TRUE))))AND(rt1.c1)) WHERE (((x'')+(((x'') NOTNULL)))) ORDER BY (~ (SQLITE_VERSION())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')+(((x'') NOTNULL)))) IS TRUE)  as count FROM rt1, v0, vt1 CROSS JOIN vt0 ON ((((CASE v0.c0  WHEN rt1.c2 THEN vt0.c0 ELSE v0.c0 END)OR(((rt1.c0) IS TRUE))))AND(rt1.c1)) ORDER BY (~ (SQLITE_VERSION())) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, vt1 CROSS JOIN vt0 ON ((((CASE v0.c0  WHEN rt1.c2 THEN vt0.c0 ELSE v0.c0 END)OR(((rt1.c0) IS TRUE))))AND(rt1.c1)) WHERE (((x'')+(((x'') NOTNULL)))) ORDER BY (~ (SQLITE_VERSION())) ASC  NULLS LAST;
SELECT ALL * FROM rt1, v0, vt1 WHERE ((((CASE WHEN vt1.c0 THEN rt1.c1 END, ((rt1.c1)>>(v0.c0)), (((rt1.c1))==((rt1.c2))), ((rt1.c1)LIKE(vt1.c0)), (((rt1.c0, x'', NULL))>((rt1.c1, rt1.c0, rt1.c1)))))<>((((rt1.c2)IS NOT(v0.c0)), ((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)), ((rt1.c1)%(rt1.c0)), ((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)), ((rt1.c1) NOT NULL))))) ORDER BY NULL DESC  NULLS LAST, (((NULLIF(DISTINCT rt1.c2, x'')))<((((rt1.c1)%(rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt1.c0 THEN rt1.c1 END, ((rt1.c1)>>(v0.c0)), (((rt1.c1))==((rt1.c2))), ((rt1.c1)LIKE(vt1.c0)), (((rt1.c0, x'', NULL))>((rt1.c1, rt1.c0, rt1.c1)))))!=((((rt1.c2)IS NOT(v0.c0)), ((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)), ((rt1.c1)%(rt1.c0)), ((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)), ((rt1.c1) NOT NULL))))) IS TRUE)  as count FROM rt1, v0, vt1 ORDER BY NULL DESC  NULLS LAST, (((NULLIF(DISTINCT rt1.c2, x'')))<((((rt1.c1)%(rt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt1, v0, vt1 WHERE ((((CASE WHEN vt1.c0 THEN rt1.c1 END, ((rt1.c1)>>(v0.c0)), (((rt1.c1))==((rt1.c2))), ((rt1.c1)LIKE(vt1.c0)), (((rt1.c0, x'', NULL))>((rt1.c1, rt1.c0, rt1.c1)))))<>((((rt1.c2)IS NOT(v0.c0)), ((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)), ((rt1.c1)%(rt1.c0)), ((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)), ((rt1.c1) NOT NULL))))) ORDER BY NULL DESC  NULLS LAST, (((NULLIF(DISTINCT rt1.c2, x'')))<((((rt1.c1)%(rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt1.c0 THEN rt1.c1 END, ((rt1.c1)>>(v0.c0)), (((rt1.c1))==((rt1.c2))), ((rt1.c1)LIKE(vt1.c0)), (((rt1.c0, x'', NULL))>((rt1.c1, rt1.c0, rt1.c1)))))!=((((rt1.c2)IS NOT(v0.c0)), ((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)), ((rt1.c1)%(rt1.c0)), ((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)), ((rt1.c1) NOT NULL))))) IS TRUE)  as count FROM rt1, v0, vt1 ORDER BY NULL DESC  NULLS LAST, (((NULLIF(DISTINCT rt1.c2, x'')))<((((rt1.c1)%(rt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt1, v0, vt1 WHERE ((((CASE WHEN vt1.c0 THEN rt1.c1 END, ((rt1.c1)>>(v0.c0)), (((rt1.c1))==((rt1.c2))), ((rt1.c1)LIKE(vt1.c0)), (((rt1.c0, x'', NULL))>((rt1.c1, rt1.c0, rt1.c1)))))<>((((rt1.c2)IS NOT(v0.c0)), ((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)), ((rt1.c1)%(rt1.c0)), ((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)), ((rt1.c1) NOT NULL))))) ORDER BY NULL DESC  NULLS LAST, (((NULLIF(DISTINCT rt1.c2, x'')))<((((rt1.c1)%(rt1.c1)))))  NULLS FIRST;
SELECT ALL * FROM vt1, rt1 WHERE ((((((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0))))>(((vt1.c0 IN (vt1.c0, rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0))))>(((vt1.c0 IN (vt1.c0, rt1.c2)))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((((((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0))))>(((vt1.c0 IN (vt1.c0, rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0))))>(((vt1.c0 IN (vt1.c0, rt1.c2)))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((((((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0))))>(((vt1.c0 IN (vt1.c0, rt1.c2))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)AND(((v0.c0)>>(v0.c0))))) ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)AND(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)AND(((v0.c0)>>(v0.c0))))) ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)AND(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)AND(((v0.c0)>>(v0.c0))))) ORDER BY ((v0.c0)IS NOT(v0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT * FROM rt1 CROSS JOIN vt1 ON (((rt1.c1, v0.c0, v0.c0)) BETWEEN (((- (rt1.c1)), (('-2103437472') NOT NULL), CASE WHEN rt1.c0 THEN vt1.c0 END)) AND ((UNICODE(vt1.c0), rt1.c0 COLLATE BINARY, rt1.c2 COLLATE BINARY))) RIGHT OUTER JOIN vt0 ON (((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((NULL))))<<('')) INNER JOIN v0 ON ABS(DISTINCT (rt1.c0 IN ())) WHERE (((('-730308621'))<((((v0.c0)-(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((('-730308621'))<((((v0.c0)-(rt1.c2)))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON (((rt1.c1, v0.c0, v0.c0)) BETWEEN (((- (rt1.c1)), (('-2103437472') NOT NULL), CASE WHEN rt1.c0 THEN vt1.c0 END)) AND ((UNICODE(vt1.c0), rt1.c0 COLLATE BINARY, rt1.c2 COLLATE BINARY))) RIGHT OUTER JOIN vt0 ON (((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((NULL))))<<('')) INNER JOIN v0 ON ABS(DISTINCT (rt1.c0 IN ())));
SELECT * FROM rt1 CROSS JOIN vt1 ON (((rt1.c1, v0.c0, v0.c0)) BETWEEN (((- (rt1.c1)), (('-2103437472') NOT NULL), CASE WHEN rt1.c0 THEN vt1.c0 END)) AND ((UNICODE(vt1.c0), rt1.c0 COLLATE BINARY, rt1.c2 COLLATE BINARY))) RIGHT OUTER JOIN vt0 ON (((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((NULL))))<<('')) INNER JOIN v0 ON ABS(DISTINCT (rt1.c0 IN ())) WHERE (((('-730308621'))<((((v0.c0)-(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((('-730308621'))<((((v0.c0)-(rt1.c2)))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON (((rt1.c1, v0.c0, v0.c0)) BETWEEN (((- (rt1.c1)), (('-2103437472') NOT NULL), CASE WHEN rt1.c0 THEN vt1.c0 END)) AND ((UNICODE(vt1.c0), rt1.c0 COLLATE BINARY, rt1.c2 COLLATE BINARY))) RIGHT OUTER JOIN vt0 ON (((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((NULL))))<<('')) INNER JOIN v0 ON ABS(DISTINCT (rt1.c0 IN ())));
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1070977258');
SELECT SUM(count) FROM (SELECT (('-1070977258') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1070977258');
SELECT SUM(count) FROM (SELECT (('-1070977258') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1070977258');
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON ((((rt1.c1)||(rt1.c0))) IS TRUE) LEFT OUTER JOIN rt1 ON CASE (((v0.c0))!=((rt1.c2)))  WHEN CASE x''  WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c0 END THEN rt1.c0 END INNER JOIN vt0 ON (((CAST(rt1.c1 AS BLOB)))<=((((vt0.c0)-(rt1.c1))))) WHERE ((((rt1.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c2)*(x'')), RTRIM(v0.c0), highlight(v0.c0, rt1.c2, rt1.c1, rt1.c1))) AND (((vt1.c0 IN ()), NULLIF(NULL, x'bb84'), x''))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c2)*(x'')), RTRIM(v0.c0), highlight(v0.c0, rt1.c2, rt1.c1, rt1.c1))) AND (((vt1.c0 IN ()), NULLIF(NULL, x'bb84'), x'')))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON ((((rt1.c1)||(rt1.c0))) IS TRUE) LEFT OUTER JOIN rt1 ON CASE (((v0.c0))<>((rt1.c2)))  WHEN CASE x''  WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c0 END THEN rt1.c0 END INNER JOIN vt0 ON (((CAST(rt1.c1 AS BLOB)))<=((((vt0.c0)-(rt1.c1))))));
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON ((((rt1.c1)||(rt1.c0))) IS TRUE) LEFT OUTER JOIN rt1 ON CASE (((v0.c0))!=((rt1.c2)))  WHEN CASE x''  WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c0 END THEN rt1.c0 END INNER JOIN vt0 ON (((CAST(rt1.c1 AS BLOB)))<=((((vt0.c0)-(rt1.c1))))) WHERE ((((rt1.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c2)*(x'')), RTRIM(v0.c0), highlight(v0.c0, rt1.c2, rt1.c1, rt1.c1))) AND (((vt1.c0 IN ()), NULLIF(NULL, x'bb84'), x''))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c2)*(x'')), RTRIM(v0.c0), highlight(v0.c0, rt1.c2, rt1.c1, rt1.c1))) AND (((vt1.c0 IN ()), NULLIF(NULL, x'bb84'), x'')))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON ((((rt1.c1)||(rt1.c0))) IS TRUE) LEFT OUTER JOIN rt1 ON CASE (((v0.c0))<>((rt1.c2)))  WHEN CASE x''  WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c0 END THEN rt1.c0 END INNER JOIN vt0 ON (((CAST(rt1.c1 AS BLOB)))<=((((vt0.c0)-(rt1.c1))))));
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON ((((rt1.c1)||(rt1.c0))) IS TRUE) LEFT OUTER JOIN rt1 ON CASE (((v0.c0))!=((rt1.c2)))  WHEN CASE x''  WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c0 END THEN rt1.c0 END INNER JOIN vt0 ON (((CAST(rt1.c1 AS BLOB)))<=((((vt0.c0)-(rt1.c1))))) WHERE ((((rt1.c2, vt0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c2)*(x'')), RTRIM(v0.c0), highlight(v0.c0, rt1.c2, rt1.c1, rt1.c1))) AND (((vt1.c0 IN ()), NULLIF(NULL, x'bb84'), x''))));
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE (IFNULL(((rt1.c1)&(rt1.c0)), CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt1.c1)&(rt1.c0)), CAST(v0.c0 AS TEXT))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE (IFNULL(((rt1.c1)&(rt1.c0)), CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt1.c1)&(rt1.c0)), CAST(v0.c0 AS TEXT))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE (IFNULL(((rt1.c1)&(rt1.c0)), CAST(v0.c0 AS TEXT)));
SELECT ALL * FROM vt0, v0, vt1, rt1 WHERE (CASE WHEN CAST('(aYw' AS INTEGER) THEN (((vt1.c0))>=((vt1.c0))) ELSE ((vt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST('(aYw' AS INTEGER) THEN (((vt1.c0))>=((vt1.c0))) ELSE ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0, v0, vt1, rt1);
SELECT ALL * FROM vt0, v0, vt1, rt1 WHERE (CASE WHEN CAST('(aYw' AS INTEGER) THEN (((vt1.c0))>=((vt1.c0))) ELSE ((vt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST('(aYw' AS INTEGER) THEN (((vt1.c0))>=((vt1.c0))) ELSE ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0, v0, vt1, rt1);
SELECT ALL * FROM vt0, v0, vt1, rt1 WHERE (CASE WHEN CAST('(aYw' AS INTEGER) THEN (((vt1.c0))>=((vt1.c0))) ELSE ((vt0.c0) IS FALSE) END);
SELECT COUNT(*) FROM v0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)GLOB(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)GLOB(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB(((v0.c0) NOT NULL))));
SELECT * FROM vt1, v0 CROSS JOIN vt0 ON CAST(CASE vt0.c0  WHEN vt1.c0 THEN rt1.c0 WHEN v0.c0 THEN x'' WHEN rt1.c1 THEN 'O' END AS TEXT) INNER JOIN rt1 ON ((rt1.c1)|(CASE WHEN vt0.c0 THEN rt1.c2 END)) WHERE (((((vt1.c0)>>(vt0.c0))) ISNULL)) ORDER BY (((((vt0.c0))!=((rt1.c0))))GLOB(((((rt1.c0)AND(rt1.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>>(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, v0 CROSS JOIN vt0 ON CAST(CASE vt0.c0  WHEN vt1.c0 THEN rt1.c0 WHEN v0.c0 THEN x'' WHEN rt1.c1 THEN 'O' END AS TEXT) INNER JOIN rt1 ON ((rt1.c1)|(CASE WHEN vt0.c0 THEN rt1.c2 END)) ORDER BY (((((vt0.c0))!=((rt1.c0))))GLOB(((((rt1.c0)AND(rt1.c0)))AND(v0.c0))))  NULLS FIRST);
SELECT * FROM vt1, v0 CROSS JOIN vt0 ON CAST(CASE vt0.c0  WHEN vt1.c0 THEN rt1.c0 WHEN v0.c0 THEN x'' WHEN rt1.c1 THEN 'O' END AS TEXT) INNER JOIN rt1 ON ((rt1.c1)|(CASE WHEN vt0.c0 THEN rt1.c2 END)) WHERE (((((vt1.c0)>>(vt0.c0))) ISNULL)) ORDER BY (((((vt0.c0))!=((rt1.c0))))GLOB(((((rt1.c0)AND(rt1.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>>(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, v0 CROSS JOIN vt0 ON CAST(CASE vt0.c0  WHEN vt1.c0 THEN rt1.c0 WHEN v0.c0 THEN x'' WHEN rt1.c1 THEN 'O' END AS TEXT) INNER JOIN rt1 ON ((rt1.c1)|(CASE WHEN vt0.c0 THEN rt1.c2 END)) ORDER BY (((((vt0.c0))!=((rt1.c0))))GLOB(((((rt1.c0)AND(rt1.c0)))AND(v0.c0))))  NULLS FIRST);
SELECT * FROM vt1, v0 CROSS JOIN vt0 ON CAST(CASE vt0.c0  WHEN vt1.c0 THEN rt1.c0 WHEN v0.c0 THEN x'' WHEN rt1.c1 THEN 'O' END AS TEXT) INNER JOIN rt1 ON ((rt1.c1)|(CASE WHEN vt0.c0 THEN rt1.c2 END)) WHERE (((((vt1.c0)>>(vt0.c0))) ISNULL)) ORDER BY (((((vt0.c0))!=((rt1.c0))))GLOB(((((rt1.c0)AND(rt1.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (((v0.c0 IN ())) NOTNULL) WHERE (((((NULLIF(rt1.c1, rt1.c0))OR(NULL)))AND((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(rt1.c1, rt1.c0))OR(NULL)))AND((NOT (v0.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (((v0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (((v0.c0 IN ())) NOTNULL) WHERE (((((NULLIF(rt1.c1, rt1.c0))OR(NULL)))AND((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(rt1.c1, rt1.c0))OR(NULL)))AND((NOT (v0.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (((v0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (((v0.c0 IN ())) NOTNULL) WHERE (((((NULLIF(rt1.c1, rt1.c0))OR(NULL)))AND((NOT (v0.c0)))));
SELECT * FROM vt1, v0 WHERE (((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE ((~ ((rt1.c2 IN (rt1.c1, rt1.c2))))) ORDER BY (((rt1.c0)IS NOT('^D]?1b')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c2 IN (rt1.c1, rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0)IS NOT('^D]?1b')) IN ())  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((~ ((rt1.c2 IN (rt1.c1, rt1.c2))))) ORDER BY (((rt1.c0)IS NOT('^D]?1b')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c2 IN (rt1.c1, rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0)IS NOT('^D]?1b')) IN ())  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((~ ((rt1.c2 IN (rt1.c1, rt1.c2))))) ORDER BY (((rt1.c0)IS NOT('^D]?1b')) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((0.5276781460638733)>(vt0.c0)))<=(((((v0.c0)AND(vt0.c0)))AND('-1523715043'))))) ORDER BY CASE (NOT (vt0.c0))  WHEN v0.c0 THEN ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)) END ASC  NULLS FIRST, v0.c0, v0.c0;
SELECT SUM(count) FROM (SELECT ((((((0.5276781460638733)>(vt0.c0)))<=(((((v0.c0)AND(vt0.c0)))AND('-1523715043'))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE (NOT (vt0.c0))  WHEN v0.c0 THEN ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)) END ASC  NULLS FIRST, v0.c0, v0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((0.5276781460638733)>(vt0.c0)))<=(((((v0.c0)AND(vt0.c0)))AND('-1523715043'))))) ORDER BY CASE (NOT (vt0.c0))  WHEN v0.c0 THEN ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)) END ASC  NULLS FIRST, v0.c0, v0.c0;
SELECT SUM(count) FROM (SELECT ((((((0.5276781460638733)>(vt0.c0)))<=(((((v0.c0)AND(vt0.c0)))AND('-1523715043'))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE (NOT (vt0.c0))  WHEN v0.c0 THEN ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)) END ASC  NULLS FIRST, v0.c0, v0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((0.5276781460638733)>(vt0.c0)))<=(((((v0.c0)AND(vt0.c0)))AND('-1523715043'))))) ORDER BY CASE (NOT (vt0.c0))  WHEN v0.c0 THEN ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)) END ASC  NULLS FIRST, v0.c0, v0.c0;
SELECT ALL * FROM rt1, v0 RIGHT OUTER JOIN vt0 ON ((0xffffffffa4a714b4)>=(rt1.c1)) COLLATE BINARY LEFT OUTER JOIN vt1 ON (((rt1.c2 IN ())) BETWEEN ('' COLLATE NOCASE) AND ((vt0.c0 IN ()))) WHERE (rt1.c1) ORDER BY UNLIKELY(vt1.c0) COLLATE NOCASE ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((0.4774575262008145 COLLATE RTRIM)) AND ((CAST(vt1.c0 AS NUMERIC)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN vt0 ON ((0xffffffffa4a714b4)>=(rt1.c1)) COLLATE BINARY LEFT OUTER JOIN vt1 ON (((rt1.c2 IN ())) BETWEEN ('' COLLATE NOCASE) AND ((vt0.c0 IN ()))) ORDER BY UNLIKELY(vt1.c0) COLLATE NOCASE ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((0.4774575262008145 COLLATE RTRIM)) AND ((CAST(vt1.c0 AS NUMERIC)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 RIGHT OUTER JOIN vt0 ON ((0xffffffffa4a714b4)>=(rt1.c1)) COLLATE BINARY LEFT OUTER JOIN vt1 ON (((rt1.c2 IN ())) BETWEEN ('' COLLATE NOCASE) AND ((vt0.c0 IN ()))) WHERE (rt1.c1) ORDER BY UNLIKELY(vt1.c0) COLLATE NOCASE ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((0.4774575262008145 COLLATE RTRIM)) AND ((CAST(vt1.c0 AS NUMERIC)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN vt0 ON ((0xffffffffa4a714b4)>=(rt1.c1)) COLLATE BINARY LEFT OUTER JOIN vt1 ON (((rt1.c2 IN ())) BETWEEN ('' COLLATE NOCASE) AND ((vt0.c0 IN ()))) ORDER BY UNLIKELY(vt1.c0) COLLATE NOCASE ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((0.4774575262008145 COLLATE RTRIM)) AND ((CAST(vt1.c0 AS NUMERIC)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 RIGHT OUTER JOIN vt0 ON ((0xffffffffa4a714b4)>=(rt1.c1)) COLLATE BINARY LEFT OUTER JOIN vt1 ON (((rt1.c2 IN ())) BETWEEN ('' COLLATE NOCASE) AND ((vt0.c0 IN ()))) WHERE (rt1.c1) ORDER BY UNLIKELY(vt1.c0) COLLATE NOCASE ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((0.4774575262008145 COLLATE RTRIM)) AND ((CAST(vt1.c0 AS NUMERIC)))) DESC  NULLS FIRST;
SELECT * FROM v0 CROSS JOIN vt0 ON ((v0.c0 COLLATE RTRIM) NOTNULL) WHERE (((0.724753774182454)IS(NULL)) COLLATE RTRIM) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (NULL COLLATE RTRIM) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ((((0.724753774182454)IS(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((v0.c0 COLLATE RTRIM) NOTNULL) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (NULL COLLATE RTRIM) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, NULL);
SELECT * FROM v0 CROSS JOIN vt0 ON ((v0.c0 COLLATE RTRIM) NOTNULL) WHERE (((0.724753774182454)IS(NULL)) COLLATE RTRIM) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (NULL COLLATE RTRIM) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ((((0.724753774182454)IS(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((v0.c0 COLLATE RTRIM) NOTNULL) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (NULL COLLATE RTRIM) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, NULL);
SELECT * FROM v0 CROSS JOIN vt0 ON ((v0.c0 COLLATE RTRIM) NOTNULL) WHERE (((0.724753774182454)IS(NULL)) COLLATE RTRIM) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (NULL COLLATE RTRIM) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, NULL;
SELECT ALL * FROM vt0 INNER JOIN rt1 ON UNICODE(vt0.c0) COLLATE BINARY WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN ((((rt1.c1)AND(NULL)))OR(rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END ELSE ((vt0.c0) IS TRUE) END) ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c0 END)-(((x'')GLOB(rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN ((((rt1.c1)AND(NULL)))OR(rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON UNICODE(vt0.c0) COLLATE BINARY ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c0 END)-(((x'')GLOB(rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON UNICODE(vt0.c0) COLLATE BINARY WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN ((((rt1.c1)AND(NULL)))OR(rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END ELSE ((vt0.c0) IS TRUE) END) ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c0 END)-(((x'')GLOB(rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN ((((rt1.c1)AND(NULL)))OR(rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON UNICODE(vt0.c0) COLLATE BINARY ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c0 END)-(((x'')GLOB(rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON UNICODE(vt0.c0) COLLATE BINARY WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN ((((rt1.c1)AND(NULL)))OR(rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END ELSE ((vt0.c0) IS TRUE) END) ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c0 END)-(((x'')GLOB(rt1.c2)))) DESC  NULLS FIRST;
SELECT * FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((v0.c0))>=((v0.c0))) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN (0.768476325078334) AND (((((vt0.c0)OR(vt1.c0)))AND('CK洀')))) WHERE ((vt0.c0 IN ()) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((v0.c0))>=((v0.c0))) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN (0.768476325078334) AND (((((vt0.c0)OR(vt1.c0)))AND('CK洀')))));
SELECT * FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((v0.c0))>=((v0.c0))) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN (0.768476325078334) AND (((((vt0.c0)OR(vt1.c0)))AND('CK洀')))) WHERE ((vt0.c0 IN ()) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN vt1 ON (((v0.c0))>=((v0.c0))) COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) BETWEEN (0.768476325078334) AND (((((vt0.c0)OR(vt1.c0)))AND('CK洀')))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON (+ (((vt1.c0)-(rt1.c0)))) INNER JOIN vt1 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)))<((((vt0.c0)) BETWEEN (('od')) AND ((rt1.c2))))) LEFT OUTER JOIN v0 ON ((vt1.c0) IS TRUE) WHERE (((((v0.c0) ISNULL))<=(((rt1.c0)OR(rt1.c1))))) ORDER BY (((((('666357681') IS TRUE))OR(vt0.c0)))AND(rt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))<=(((rt1.c0)OR(rt1.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (+ (((vt1.c0)-(rt1.c0)))) INNER JOIN vt1 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)))<((((vt0.c0)) BETWEEN (('od')) AND ((rt1.c2))))) LEFT OUTER JOIN v0 ON ((vt1.c0) IS TRUE) ORDER BY (((((('666357681') IS TRUE))OR(vt0.c0)))AND(rt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON (+ (((vt1.c0)-(rt1.c0)))) INNER JOIN vt1 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)))<((((vt0.c0)) BETWEEN (('od')) AND ((rt1.c2))))) LEFT OUTER JOIN v0 ON ((vt1.c0) IS TRUE) WHERE (((((v0.c0) ISNULL))<=(((rt1.c0)OR(rt1.c1))))) ORDER BY (((((('666357681') IS TRUE))OR(vt0.c0)))AND(rt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))<=(((rt1.c0)OR(rt1.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (+ (((vt1.c0)-(rt1.c0)))) INNER JOIN vt1 ON ((((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)))<((((vt0.c0)) BETWEEN (('od')) AND ((rt1.c2))))) LEFT OUTER JOIN v0 ON ((vt1.c0) IS TRUE) ORDER BY (((((('666357681') IS TRUE))OR(vt0.c0)))AND(rt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt1, rt1 WHERE ((0.9041565814383473 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.9041565814383473 IN ())) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((0.9041565814383473 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.9041565814383473 IN ())) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((0.9041565814383473 IN ()));
SELECT * FROM rt1, v0, vt0, vt1 WHERE (((((((((LIKELIHOOD(rt1.c2, 0.4750508793226329))OR(((vt0.c0)|(vt1.c0)))))AND(((rt1.c1) NOT BETWEEN (0.48392173809034367) AND (rt1.c0)))))AND(LIKELY(DISTINCT vt1.c0))))OR(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((LIKELIHOOD(rt1.c2, 0.4750508793226329))OR(((vt0.c0)|(vt1.c0)))))AND(((rt1.c1) NOT BETWEEN (0.48392173809034367) AND (rt1.c0)))))AND(LIKELY(DISTINCT vt1.c0))))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, v0, vt0, vt1);
SELECT * FROM rt1, v0, vt0, vt1 WHERE (((((((((LIKELIHOOD(rt1.c2, 0.4750508793226329))OR(((vt0.c0)|(vt1.c0)))))AND(((rt1.c1) NOT BETWEEN (0.48392173809034367) AND (rt1.c0)))))AND(LIKELY(DISTINCT vt1.c0))))OR(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((LIKELIHOOD(rt1.c2, 0.4750508793226329))OR(((vt0.c0)|(vt1.c0)))))AND(((rt1.c1) NOT BETWEEN (0.48392173809034367) AND (rt1.c0)))))AND(LIKELY(DISTINCT vt1.c0))))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, v0, vt0, vt1);
SELECT * FROM rt1, v0, vt0, vt1 WHERE (((((((((LIKELIHOOD(rt1.c2, 0.4750508793226329))OR(((vt0.c0)|(vt1.c0)))))AND(((rt1.c1) NOT BETWEEN (0.48392173809034367) AND (rt1.c0)))))AND(LIKELY(DISTINCT vt1.c0))))OR(((v0.c0) IS TRUE))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL)))) ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(v0.c0))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL)))) ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)||(v0.c0))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS REAL)))) ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c0)*(rt1.c2)))>(((rt1.c2) ISNULL)))) ORDER BY CASE ((((rt1.c2)OR(rt1.c0)))AND(v0.c0))  WHEN NULLIF(DISTINCT rt1.c2, rt1.c1) THEN rt1.c2 COLLATE NOCASE ELSE ((((rt1.c0)AND(rt1.c1)))AND(v0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)*(rt1.c2)))>(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE ((((rt1.c2)OR(rt1.c0)))AND(v0.c0))  WHEN NULLIF(DISTINCT rt1.c2, rt1.c1) THEN rt1.c2 COLLATE NOCASE ELSE ((((rt1.c0)AND(rt1.c1)))AND(v0.c0)) END ASC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c0)*(rt1.c2)))>(((rt1.c2) ISNULL)))) ORDER BY CASE ((((rt1.c2)OR(rt1.c0)))AND(v0.c0))  WHEN NULLIF(DISTINCT rt1.c2, rt1.c1) THEN rt1.c2 COLLATE NOCASE ELSE ((((rt1.c0)AND(rt1.c1)))AND(v0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)*(rt1.c2)))>(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE ((((rt1.c2)OR(rt1.c0)))AND(v0.c0))  WHEN NULLIF(DISTINCT rt1.c2, rt1.c1) THEN rt1.c2 COLLATE NOCASE ELSE ((((rt1.c0)AND(rt1.c1)))AND(v0.c0)) END ASC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c0)*(rt1.c2)))>(((rt1.c2) ISNULL)))) ORDER BY CASE ((((rt1.c2)OR(rt1.c0)))AND(v0.c0))  WHEN NULLIF(DISTINCT rt1.c2, rt1.c1) THEN rt1.c2 COLLATE NOCASE ELSE ((((rt1.c0)AND(rt1.c1)))AND(v0.c0)) END ASC  NULLS FIRST;
SELECT ALL * FROM rt1, v0, vt0, vt1 WHERE (CAST(CAST(v0.c0 AS REAL) AS TEXT)) ORDER BY CASE (((v0.c0, rt1.c2, rt1.c0))=((vt0.c0, '[|z{>Y', '0.8798793302799508')))  WHEN (rt1.c1 IN (rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0)) WHEN ((v0.c0) BETWEEN (vt1.c0) AND (rt1.c2)) THEN ((v0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE rt1.c1 END THEN CASE rt1.c0  WHEN vt0.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM rt1, v0, vt0, vt1 ORDER BY CASE (((v0.c0, rt1.c2, rt1.c0))=((vt0.c0, '[|z{>Y', '0.8798793302799508')))  WHEN (rt1.c1 IN (rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0)) WHEN ((v0.c0) BETWEEN (vt1.c0) AND (rt1.c2)) THEN ((v0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE rt1.c1 END THEN CASE rt1.c0  WHEN vt0.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END END DESC  NULLS LAST);
SELECT ALL * FROM rt1, v0, vt0, vt1 WHERE (CAST(CAST(v0.c0 AS REAL) AS TEXT)) ORDER BY CASE (((v0.c0, rt1.c2, rt1.c0))=((vt0.c0, '[|z{>Y', '0.8798793302799508')))  WHEN (rt1.c1 IN (rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0)) WHEN ((v0.c0) BETWEEN (vt1.c0) AND (rt1.c2)) THEN ((v0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE rt1.c1 END THEN CASE rt1.c0  WHEN vt0.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM rt1, v0, vt0, vt1 ORDER BY CASE (((v0.c0, rt1.c2, rt1.c0))=((vt0.c0, '[|z{>Y', '0.8798793302799508')))  WHEN (rt1.c1 IN (rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0)) WHEN ((v0.c0) BETWEEN (vt1.c0) AND (rt1.c2)) THEN ((v0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE rt1.c1 END THEN CASE rt1.c0  WHEN vt0.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END END DESC  NULLS LAST);
SELECT ALL * FROM rt1, v0, vt0, vt1 WHERE (CAST(CAST(v0.c0 AS REAL) AS TEXT)) ORDER BY CASE (((v0.c0, rt1.c2, rt1.c0))=((vt0.c0, '[|z{>Y', '0.8798793302799508')))  WHEN (rt1.c1 IN (rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0)) WHEN ((v0.c0) BETWEEN (vt1.c0) AND (rt1.c2)) THEN ((v0.c0) BETWEEN (rt1.c2) AND (rt1.c1)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE rt1.c1 END THEN CASE rt1.c0  WHEN vt0.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END END DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((UNLIKELY(DISTINCT vt0.c0), ((vt0.c0)OR(vt0.c0)), ((vt0.c0) BETWEEN (0x764363cb) AND (0.5687716986914577))))>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)AND(vt0.c0)), ((vt0.c0)OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(DISTINCT vt0.c0), ((vt0.c0)OR(vt0.c0)), ((vt0.c0) BETWEEN (0x764363cb) AND (0.5687716986914577))))>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)AND(vt0.c0)), ((vt0.c0)OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((UNLIKELY(DISTINCT vt0.c0), ((vt0.c0)OR(vt0.c0)), ((vt0.c0) BETWEEN (0x764363cb) AND (0.5687716986914577))))>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)AND(vt0.c0)), ((vt0.c0)OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(DISTINCT vt0.c0), ((vt0.c0)OR(vt0.c0)), ((vt0.c0) BETWEEN (0x764363cb) AND (0.5687716986914577))))>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)AND(vt0.c0)), ((vt0.c0)OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((UNLIKELY(DISTINCT vt0.c0), ((vt0.c0)OR(vt0.c0)), ((vt0.c0) BETWEEN (0x764363cb) AND (0.5687716986914577))))>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)AND(vt0.c0)), ((vt0.c0)OR(vt0.c0))))));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)))IS NOT(((rt1.c1)IS(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)))IS NOT(((rt1.c1)IS(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)))IS NOT(((rt1.c1)IS(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)))IS NOT(((rt1.c1)IS(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)))IS NOT(((rt1.c1)IS(rt1.c0)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt1 ON (((rt1.c0 COLLATE BINARY, ((rt1.c0)<<(rt1.c1)), 0.273864123660299, LIKELY(DISTINCT vt1.c0), (- (rt1.c2))))==((((rt1.c2)/(rt1.c2)), 0X0, ((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), rt1.c0, (((vt1.c0, rt1.c0, rt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((rt1.c0, vt1.c0, vt1.c0, rt1.c0, rt1.c0)) AND ((rt1.c0, vt1.c0, rt1.c2, rt1.c2, vt1.c0)))))) WHERE (((((((((((rt1.c1)+(vt1.c0)))OR(rt1.c0)))OR((rt1.c0 IN ()))))OR((NULL IN ()))))AND((~ (0.25455359325411886)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)+(vt1.c0)))OR(rt1.c0)))OR((rt1.c0 IN ()))))OR((NULL IN ()))))AND((~ (0.25455359325411886))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON (((rt1.c0 COLLATE BINARY, ((rt1.c0)<<(rt1.c1)), 0.273864123660299, LIKELY(DISTINCT vt1.c0), (- (rt1.c2))))==((((rt1.c2)/(rt1.c2)), 0X0, ((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), rt1.c0, (((vt1.c0, rt1.c0, rt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((rt1.c0, vt1.c0, vt1.c0, rt1.c0, rt1.c0)) AND ((rt1.c0, vt1.c0, rt1.c2, rt1.c2, vt1.c0)))))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt1 ON (((rt1.c0 COLLATE BINARY, ((rt1.c0)<<(rt1.c1)), 0.273864123660299, LIKELY(DISTINCT vt1.c0), (- (rt1.c2))))==((((rt1.c2)/(rt1.c2)), 0X0, ((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), rt1.c0, (((vt1.c0, rt1.c0, rt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((rt1.c0, vt1.c0, vt1.c0, rt1.c0, rt1.c0)) AND ((rt1.c0, vt1.c0, rt1.c2, rt1.c2, vt1.c0)))))) WHERE (((((((((((rt1.c1)+(vt1.c0)))OR(rt1.c0)))OR((rt1.c0 IN ()))))OR((NULL IN ()))))AND((~ (0.25455359325411886)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)+(vt1.c0)))OR(rt1.c0)))OR((rt1.c0 IN ()))))OR((NULL IN ()))))AND((~ (0.25455359325411886))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON (((rt1.c0 COLLATE BINARY, ((rt1.c0)<<(rt1.c1)), 0.273864123660299, LIKELY(DISTINCT vt1.c0), (- (rt1.c2))))==((((rt1.c2)/(rt1.c2)), 0X0, ((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), rt1.c0, (((vt1.c0, rt1.c0, rt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((rt1.c0, vt1.c0, vt1.c0, rt1.c0, rt1.c0)) AND ((rt1.c0, vt1.c0, rt1.c2, rt1.c2, vt1.c0)))))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt1 ON (((rt1.c0 COLLATE BINARY, ((rt1.c0)<<(rt1.c1)), 0.273864123660299, LIKELY(DISTINCT vt1.c0), (- (rt1.c2))))==((((rt1.c2)/(rt1.c2)), 0X0, ((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), rt1.c0, (((vt1.c0, rt1.c0, rt1.c0, rt1.c2, vt1.c0)) NOT BETWEEN ((rt1.c0, vt1.c0, vt1.c0, rt1.c0, rt1.c0)) AND ((rt1.c0, vt1.c0, rt1.c2, rt1.c2, vt1.c0)))))) WHERE (((((((((((rt1.c1)+(vt1.c0)))OR(rt1.c0)))OR((rt1.c0 IN ()))))OR((NULL IN ()))))AND((~ (0.25455359325411886)))));
SELECT ALL * FROM rt1, v0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt1.c2 THEN rt1.c2 END) NOTNULL) WHERE (CAST(rt1.c2 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt1.c2 THEN rt1.c2 END) NOTNULL));
SELECT ALL * FROM rt1, v0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt1.c2 THEN rt1.c2 END) NOTNULL) WHERE (CAST(rt1.c2 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt1.c2 THEN rt1.c2 END) NOTNULL));
SELECT ALL * FROM rt1, v0 FULL OUTER JOIN vt0 ON ((CASE WHEN rt1.c2 THEN rt1.c2 END) NOTNULL) WHERE (CAST(rt1.c2 COLLATE BINARY AS REAL));
SELECT ALL * FROM rt1, vt1 WHERE (x'f868');
SELECT SUM(count) FROM (SELECT ALL ((x'f868') IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (x'f868');
SELECT SUM(count) FROM (SELECT ALL ((x'f868') IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (x'f868');
SELECT * FROM rt1 WHERE ((((rt1.c2)<(rt1.c0)) IN (rt1.c0, ((rt1.c1)*(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)<(rt1.c0)) IN (rt1.c0, ((rt1.c1)*(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c2)<(rt1.c0)) IN (rt1.c0, ((rt1.c1)*(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)<(rt1.c0)) IN (rt1.c0, ((rt1.c1)*(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c2)<(rt1.c0)) IN (rt1.c0, ((rt1.c1)*(rt1.c1)))));
SELECT * FROM vt0, rt1, vt1 WHERE ((((rt1.c2)<<(rt1.c0)) IN ())) ORDER BY (((NOT (rt1.c2)))<(rt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)<<(rt1.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY (((NOT (rt1.c2)))<(rt1.c0)) DESC);
SELECT * FROM vt0, rt1, vt1 WHERE ((((rt1.c2)<<(rt1.c0)) IN ())) ORDER BY (((NOT (rt1.c2)))<(rt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)<<(rt1.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY (((NOT (rt1.c2)))<(rt1.c0)) DESC);
SELECT * FROM vt0, rt1, vt1 WHERE ((((rt1.c2)<<(rt1.c0)) IN ())) ORDER BY (((NOT (rt1.c2)))<(rt1.c0)) DESC;
SELECT ALL * FROM rt1, vt1, v0 WHERE (PRINTF(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) IS TRUE)  as count FROM rt1, vt1, v0);
SELECT ALL * FROM rt1, vt1, v0 WHERE (PRINTF(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) IS TRUE)  as count FROM rt1, vt1, v0);
SELECT ALL * FROM rt1, vt1, v0 WHERE (PRINTF(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT COUNT(*) FROM v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (v0.c0);
SELECT * FROM rt1, vt0 INNER JOIN vt1 ON SUBSTR((rt1.c1 IN ()), 0.24198715815988026) WHERE (rt1.c2) ORDER BY ((((((vt0.c0)AND(rt1.c1)))OR(rt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0 INNER JOIN vt1 ON SUBSTR((rt1.c1 IN ()), 0.24198715815988026) ORDER BY ((((((vt0.c0)AND(rt1.c1)))OR(rt1.c0))) NOTNULL));
SELECT * FROM rt1, vt0 INNER JOIN vt1 ON SUBSTR((rt1.c1 IN ()), 0.24198715815988026) WHERE (rt1.c2) ORDER BY ((((((vt0.c0)AND(rt1.c1)))OR(rt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0 INNER JOIN vt1 ON SUBSTR((rt1.c1 IN ()), 0.24198715815988026) ORDER BY ((((((vt0.c0)AND(rt1.c1)))OR(rt1.c0))) NOTNULL));
SELECT * FROM rt1, vt0 INNER JOIN vt1 ON SUBSTR((rt1.c1 IN ()), 0.24198715815988026) WHERE (rt1.c2) ORDER BY ((((((vt0.c0)AND(rt1.c1)))OR(rt1.c0))) NOTNULL);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) DESC;
SELECT ALL * FROM v0 WHERE (DATETIME(((v0.c0)||(v0.c0)), (- (v0.c0)), CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((DATETIME(((v0.c0)||(v0.c0)), (- (v0.c0)), CAST(v0.c0 AS TEXT))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (DATETIME(((v0.c0)||(v0.c0)), (- (v0.c0)), CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((DATETIME(((v0.c0)||(v0.c0)), (- (v0.c0)), CAST(v0.c0 AS TEXT))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (DATETIME(((v0.c0)||(v0.c0)), (- (v0.c0)), CAST(v0.c0 AS TEXT)));
SELECT COUNT(*) FROM rt1, v0, vt0, vt1 WHERE (((vt1.c0)<<(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((rt1.c0)!=(rt1.c2)))AND(v0.c0)))AND(JULIANDAY('ᭆ%⬂96{璤.', rt1.c2, v0.c0, rt1.c2, rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<<(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, vt0, vt1 ORDER BY ((((((rt1.c0)!=(rt1.c2)))AND(v0.c0)))AND(JULIANDAY('ᭆ%⬂96{璤.', rt1.c2, v0.c0, rt1.c2, rt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0, vt0, vt1 WHERE (((vt1.c0)<<(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((rt1.c0)!=(rt1.c2)))AND(v0.c0)))AND(JULIANDAY('ᭆ%⬂96{璤.', rt1.c2, v0.c0, rt1.c2, rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<<(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, vt0, vt1 ORDER BY ((((((rt1.c0)!=(rt1.c2)))AND(v0.c0)))AND(JULIANDAY('ᭆ%⬂96{璤.', rt1.c2, v0.c0, rt1.c2, rt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0, vt0, vt1 WHERE (((vt1.c0)<<(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((rt1.c0)!=(rt1.c2)))AND(v0.c0)))AND(JULIANDAY('ᭆ%⬂96{璤.', rt1.c2, v0.c0, rt1.c2, rt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, v0, rt1 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (rt1.c0) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) ORDER BY CAST(CASE v0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) BETWEEN (rt1.c0) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, v0, rt1 ORDER BY CAST(CASE v0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS BLOB));
SELECT COUNT(*) FROM vt0, vt1, v0, rt1 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (rt1.c0) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) ORDER BY CAST(CASE v0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) BETWEEN (rt1.c0) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, v0, rt1 ORDER BY CAST(CASE v0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS BLOB));
SELECT COUNT(*) FROM vt0, vt1, v0, rt1 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (rt1.c0) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) ORDER BY CAST(CASE v0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c2 ELSE rt1.c2 END AS BLOB);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON rt1.c1 WHERE ((rt1.c2 COLLATE NOCASE IN (((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE NOCASE IN (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON rt1.c1);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON rt1.c1 WHERE ((rt1.c2 COLLATE NOCASE IN (((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE NOCASE IN (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON rt1.c1);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON rt1.c1 WHERE ((rt1.c2 COLLATE NOCASE IN (((vt0.c0)LIKE(vt0.c0)))));
SELECT * FROM vt1, rt1, v0 NATURAL JOIN vt0 WHERE (rt1.c1) ORDER BY CASE WHEN ((v0.c0)<=(rt1.c2)) THEN CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt1, rt1, v0 NATURAL JOIN vt0 ORDER BY CASE WHEN ((v0.c0)<=(rt1.c2)) THEN CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END END ASC);
SELECT * FROM vt1, rt1, v0 NATURAL JOIN vt0 WHERE (rt1.c1) ORDER BY CASE WHEN ((v0.c0)<=(rt1.c2)) THEN CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt1, rt1, v0 NATURAL JOIN vt0 ORDER BY CASE WHEN ((v0.c0)<=(rt1.c2)) THEN CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END END ASC);
SELECT * FROM vt1, rt1, v0 NATURAL JOIN vt0 WHERE (rt1.c1) ORDER BY CASE WHEN ((v0.c0)<=(rt1.c2)) THEN CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END END ASC;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON ((rt1.c1) ISNULL) COLLATE NOCASE WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((x'')IS(rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN (- (rt1.c2)) WHEN ((rt1.c0)OR(x'205d')) THEN 'w''' END) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 END) NOT NULL), (NOT (rt1.c0 COLLATE NOCASE)), ((((((v0.c0)<<(v0.c0)))AND(IFNULL(DISTINCT x'', rt1.c2))))OR(rt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) ISNULL) THEN ((x'')IS(rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN (- (rt1.c2)) WHEN ((rt1.c0)OR(x'205d')) THEN 'w''' END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((rt1.c1) ISNULL) COLLATE NOCASE ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 END) NOT NULL), (NOT (rt1.c0 COLLATE NOCASE)), ((((((v0.c0)<<(v0.c0)))AND(IFNULL(DISTINCT x'', rt1.c2))))OR(rt1.c1)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON ((rt1.c1) ISNULL) COLLATE NOCASE WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((x'')IS(rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN (- (rt1.c2)) WHEN ((rt1.c0)OR(x'205d')) THEN 'w''' END) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 END) NOT NULL), (NOT (rt1.c0 COLLATE NOCASE)), ((((((v0.c0)<<(v0.c0)))AND(IFNULL(DISTINCT x'', rt1.c2))))OR(rt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) ISNULL) THEN ((x'')IS(rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN (- (rt1.c2)) WHEN ((rt1.c0)OR(x'205d')) THEN 'w''' END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((rt1.c1) ISNULL) COLLATE NOCASE ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 END) NOT NULL), (NOT (rt1.c0 COLLATE NOCASE)), ((((((v0.c0)<<(v0.c0)))AND(IFNULL(DISTINCT x'', rt1.c2))))OR(rt1.c1)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON ((rt1.c1) ISNULL) COLLATE NOCASE WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((x'')IS(rt1.c0)) WHEN rt1.c0 COLLATE NOCASE THEN (- (rt1.c2)) WHEN ((rt1.c0)OR(x'205d')) THEN 'w''' END) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 END) NOT NULL), (NOT (rt1.c0 COLLATE NOCASE)), ((((((v0.c0)<<(v0.c0)))AND(IFNULL(DISTINCT x'', rt1.c2))))OR(rt1.c1)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt1, v0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c2)))OR(JULIANDAY(vt0.c0, rt1.c2, rt1.c1)))) ORDER BY (- (((((v0.c0)OR(rt1.c1)))OR(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c2)))OR(JULIANDAY(vt0.c0, rt1.c2, rt1.c1)))) IS TRUE)  as count FROM vt0, rt1, v0, vt1 ORDER BY (- (((((v0.c0)OR(rt1.c1)))OR(rt1.c1)))) DESC);
SELECT ALL * FROM vt0, rt1, v0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c2)))OR(JULIANDAY(vt0.c0, rt1.c2, rt1.c1)))) ORDER BY (- (((((v0.c0)OR(rt1.c1)))OR(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c2)))OR(JULIANDAY(vt0.c0, rt1.c2, rt1.c1)))) IS TRUE)  as count FROM vt0, rt1, v0, vt1 ORDER BY (- (((((v0.c0)OR(rt1.c1)))OR(rt1.c1)))) DESC);
SELECT ALL * FROM vt0, rt1, v0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c2)))OR(JULIANDAY(vt0.c0, rt1.c2, rt1.c1)))) ORDER BY (- (((((v0.c0)OR(rt1.c1)))OR(rt1.c1)))) DESC;
SELECT * FROM vt1 NOT INDEXED WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN ()), vt1.c0)) AND ((((vt1.c0)IS(vt1.c0)), ((vt1.c0)*(vt1.c0)), ((vt1.c0)<(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN ()), vt1.c0)) AND ((((vt1.c0)IS(vt1.c0)), ((vt1.c0)*(vt1.c0)), ((vt1.c0)<(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 NOT INDEXED WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN ()), vt1.c0)) AND ((((vt1.c0)IS(vt1.c0)), ((vt1.c0)*(vt1.c0)), ((vt1.c0)<(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN ()), vt1.c0)) AND ((((vt1.c0)IS(vt1.c0)), ((vt1.c0)*(vt1.c0)), ((vt1.c0)<(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 NOT INDEXED WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (vt1.c0 IN ()), vt1.c0)) AND ((((vt1.c0)IS(vt1.c0)), ((vt1.c0)*(vt1.c0)), ((vt1.c0)<(vt1.c0))))));
SELECT ALL * FROM vt1, v0, vt0, rt1 WHERE ((((((rt1.c0 IN ()))OR(((rt1.c1)OR(rt1.c0)))))AND(COALESCE(DISTINCT v0.c0, vt0.c0, v0.c0, rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0 IN ()))OR(((rt1.c1)OR(rt1.c0)))))AND(COALESCE(DISTINCT v0.c0, vt0.c0, v0.c0, rt1.c0)))) IS TRUE)  as count FROM vt1, v0, vt0, rt1);
SELECT ALL * FROM vt1, v0, vt0, rt1 WHERE ((((((rt1.c0 IN ()))OR(((rt1.c1)OR(rt1.c0)))))AND(COALESCE(DISTINCT v0.c0, vt0.c0, v0.c0, rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0 IN ()))OR(((rt1.c1)OR(rt1.c0)))))AND(COALESCE(DISTINCT v0.c0, vt0.c0, v0.c0, rt1.c0)))) IS TRUE)  as count FROM vt1, v0, vt0, rt1);
SELECT ALL * FROM vt1, v0, vt0, rt1 WHERE ((((((rt1.c0 IN ()))OR(((rt1.c1)OR(rt1.c0)))))AND(COALESCE(DISTINCT v0.c0, vt0.c0, v0.c0, rt1.c0))));
SELECT * FROM v0, vt1, vt0 WHERE (((((((((((((((v0.c0)>(vt1.c0)))AND(rtreenode(v0.c0, vt1.c0))))OR(((vt1.c0)AND('?')))))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END)))OR(((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR((((vt1.c0, v0.c0, v0.c0))>=((vt1.c0, x'83d7', vt0.c0)))))) ORDER BY CAST(((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0)>(vt1.c0)))AND(rtreenode(v0.c0, vt1.c0))))OR(((vt1.c0)AND('?')))))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END)))OR(((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR((((vt1.c0, v0.c0, v0.c0))>=((vt1.c0, x'83d7', vt0.c0)))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) ASC  NULLS LAST);
SELECT * FROM v0, vt1, vt0 WHERE (((((((((((((((v0.c0)>(vt1.c0)))AND(rtreenode(v0.c0, vt1.c0))))OR(((vt1.c0)AND('?')))))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END)))OR(((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR((((vt1.c0, v0.c0, v0.c0))>=((vt1.c0, x'83d7', vt0.c0)))))) ORDER BY CAST(((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0)>(vt1.c0)))AND(rtreenode(v0.c0, vt1.c0))))OR(((vt1.c0)AND('?')))))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END)))OR(((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR((((vt1.c0, v0.c0, v0.c0))>=((vt1.c0, x'83d7', vt0.c0)))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) ASC  NULLS LAST);
SELECT * FROM v0, vt1, vt0 WHERE (((((((((((((((v0.c0)>(vt1.c0)))AND(rtreenode(v0.c0, vt1.c0))))OR(((vt1.c0)AND('?')))))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END)))OR(((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR((((vt1.c0, v0.c0, v0.c0))>=((vt1.c0, x'83d7', vt0.c0)))))) ORDER BY CAST(((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (MIN(((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)), ((rt1.c0)!=(rt1.c2)), HEX(NULL), rt1.c0));
SELECT SUM(count) FROM (SELECT ((MIN(((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)), ((rt1.c0)!=(rt1.c2)), HEX(NULL), rt1.c0)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (MIN(((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)), ((rt1.c0)!=(rt1.c2)), HEX(NULL), rt1.c0));
SELECT SUM(count) FROM (SELECT ((MIN(((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)), ((rt1.c0)!=(rt1.c2)), HEX(NULL), rt1.c0)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (MIN(((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)), ((rt1.c0)!=(rt1.c2)), HEX(NULL), rt1.c0));
SELECT * FROM rt1 WHERE (((((rt1.c1 IN ()), ((rt1.c0) NOT BETWEEN (rt1.c2) AND ('-693832052')), rt1.c0))>(((rt1.c0 IN ()), ((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)), rt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 IN ()), ((rt1.c0) NOT BETWEEN (rt1.c2) AND ('-693832052')), rt1.c0))>(((rt1.c0 IN ()), ((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)), rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1 IN ()), ((rt1.c0) NOT BETWEEN (rt1.c2) AND ('-693832052')), rt1.c0))>(((rt1.c0 IN ()), ((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)), rt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 IN ()), ((rt1.c0) NOT BETWEEN (rt1.c2) AND ('-693832052')), rt1.c0))>(((rt1.c0 IN ()), ((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)), rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1 IN ()), ((rt1.c0) NOT BETWEEN (rt1.c2) AND ('-693832052')), rt1.c0))>(((rt1.c0 IN ()), ((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)), rt1.c0 COLLATE RTRIM))));
SELECT ALL * FROM v0, rt1 WHERE (TYPEOF(((rt1.c1)%(rt1.c1)))) ORDER BY -1.53255406E9 ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt1.c1)%(rt1.c1)))) IS TRUE)  as count FROM v0, rt1 ORDER BY -1.53255406E9 ASC);
SELECT ALL * FROM v0, rt1 WHERE (TYPEOF(((rt1.c1)%(rt1.c1)))) ORDER BY -1.53255406E9 ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt1.c1)%(rt1.c1)))) IS TRUE)  as count FROM v0, rt1 ORDER BY -1.53255406E9 ASC);
SELECT ALL * FROM v0, rt1 WHERE (TYPEOF(((rt1.c1)%(rt1.c1)))) ORDER BY -1.53255406E9 ASC;
SELECT * FROM v0, rt1, vt0, vt1 WHERE ((CAST(rt1.c2 AS TEXT) IN ())) ORDER BY (- (((rt1.c0) NOT BETWEEN (x'6cf1') AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS TEXT) IN ())) IS TRUE)  as count FROM v0, rt1, vt0, vt1 ORDER BY (- (((rt1.c0) NOT BETWEEN (x'6cf1') AND (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0, rt1, vt0, vt1 WHERE ((CAST(rt1.c2 AS TEXT) IN ())) ORDER BY (- (((rt1.c0) NOT BETWEEN (x'6cf1') AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS TEXT) IN ())) IS TRUE)  as count FROM v0, rt1, vt0, vt1 ORDER BY (- (((rt1.c0) NOT BETWEEN (x'6cf1') AND (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0, rt1, vt0, vt1 WHERE ((CAST(rt1.c2 AS TEXT) IN ())) ORDER BY (- (((rt1.c0) NOT BETWEEN (x'6cf1') AND (vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) ORDER BY ((((vt0.c0)-(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)-(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) ORDER BY ((((vt0.c0)-(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)-(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) ORDER BY ((((vt0.c0)-(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON TRIM(0.7643677808918208, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) WHERE ('DMH?') ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (('DMH?') IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON TRIM(0.7643677808918208, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON TRIM(0.7643677808918208, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) WHERE ('DMH?') ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (('DMH?') IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON TRIM(0.7643677808918208, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON TRIM(0.7643677808918208, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) WHERE ('DMH?') ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS TEXT)) ORDER BY ((vt1.c0) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS TEXT)) ORDER BY ((vt1.c0) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS TEXT)) ORDER BY ((vt1.c0) NOT NULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (CAST(((vt1.c0)>(rt1.c1)) AS INTEGER)) ORDER BY ((rt1.c2 COLLATE RTRIM) IS FALSE)  NULLS FIRST, (NOT (((rt1.c2) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((rt1.c2 COLLATE RTRIM) IS FALSE)  NULLS FIRST, (NOT (((rt1.c2) ISNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (CAST(((vt1.c0)>(rt1.c1)) AS INTEGER)) ORDER BY ((rt1.c2 COLLATE RTRIM) IS FALSE)  NULLS FIRST, (NOT (((rt1.c2) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((rt1.c2 COLLATE RTRIM) IS FALSE)  NULLS FIRST, (NOT (((rt1.c2) ISNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE (CAST(((vt1.c0)>(rt1.c1)) AS INTEGER)) ORDER BY ((rt1.c2 COLLATE RTRIM) IS FALSE)  NULLS FIRST, (NOT (((rt1.c2) ISNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((CAST(x'' AS REAL))==(((NULL)+(x''))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(UNICODE(vt1.c0)))  NULLS FIRST, ((('NCoC\n')=(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS REAL))=(((NULL)+(x''))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(UNICODE(vt1.c0)))  NULLS FIRST, ((('NCoC\n')=(vt1.c0)) IN ()));
SELECT ALL * FROM vt1 WHERE (((CAST(x'' AS REAL))==(((NULL)+(x''))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(UNICODE(vt1.c0)))  NULLS FIRST, ((('NCoC\n')=(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS REAL))=(((NULL)+(x''))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(UNICODE(vt1.c0)))  NULLS FIRST, ((('NCoC\n')=(vt1.c0)) IN ()));
SELECT ALL * FROM vt1 WHERE (((CAST(x'' AS REAL))==(((NULL)+(x''))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(UNICODE(vt1.c0)))  NULLS FIRST, ((('NCoC\n')=(vt1.c0)) IN ());
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)OR(vt1.c0)) IN (((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)OR(vt1.c0)) IN (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)OR(vt1.c0)) IN (((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)OR(vt1.c0)) IN (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)OR(vt1.c0)) IN (((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM rt1 WHERE ((IFNULL(rt1.c1, rt1.c0) IN (rt1.c0, ((rt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(rt1.c1, rt1.c0) IN (rt1.c0, ((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((IFNULL(rt1.c1, rt1.c0) IN (rt1.c0, ((rt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(rt1.c1, rt1.c0) IN (rt1.c0, ((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((IFNULL(rt1.c1, rt1.c0) IN (rt1.c0, ((rt1.c0) ISNULL))));
SELECT * FROM rt1, vt1, vt0 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c1)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT * FROM rt1, vt1, vt0 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c1)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT * FROM rt1, vt1, vt0 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM rt1, vt1 WHERE (CAST(LAST_INSERT_ROWID() AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LAST_INSERT_ROWID() AS TEXT)) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CAST(LAST_INSERT_ROWID() AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LAST_INSERT_ROWID() AS TEXT)) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CAST(LAST_INSERT_ROWID() AS TEXT));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((~ (json_quote('?WP\r''AH}]'))));
SELECT SUM(count) FROM (SELECT (((~ (json_quote('?WP\r''AH}]')))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((~ (json_quote('?WP\r''AH}]'))));
SELECT SUM(count) FROM (SELECT (((~ (json_quote('?WP\r''AH}]')))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((~ (json_quote('?WP\r''AH}]'))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (STRFTIME(CASE WHEN x'a13785d3' THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)), ((((rt1.c0)OR(vt0.c0)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CASE WHEN x'a13785d3' THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)), ((((rt1.c0)OR(vt0.c0)))OR(rt1.c2)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (STRFTIME(CASE WHEN x'a13785d3' THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)), ((((rt1.c0)OR(vt0.c0)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CASE WHEN x'a13785d3' THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)), ((((rt1.c0)OR(vt0.c0)))OR(rt1.c2)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (STRFTIME(CASE WHEN x'a13785d3' THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)), ((((rt1.c0)OR(vt0.c0)))OR(rt1.c2))));
SELECT COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c0 IN ()))IS((~ (rt1.c0)))) CROSS JOIN vt0 ON CAST(rt1.c2 AS INTEGER) COLLATE NOCASE WHERE ((((((((v0.c0))<=((rt1.c0))))OR(TRIM(DISTINCT vt1.c0))))OR((('0.5011194616036763')>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0))<=((rt1.c0))))OR(TRIM(DISTINCT vt1.c0))))OR((('0.5011194616036763')>(vt1.c0))))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c0 IN ()))IS((~ (rt1.c0)))) CROSS JOIN vt0 ON CAST(rt1.c2 AS INTEGER) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c0 IN ()))IS((~ (rt1.c0)))) CROSS JOIN vt0 ON CAST(rt1.c2 AS INTEGER) COLLATE NOCASE WHERE ((((((((v0.c0))<=((rt1.c0))))OR(TRIM(DISTINCT vt1.c0))))OR((('0.5011194616036763')>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0))<=((rt1.c0))))OR(TRIM(DISTINCT vt1.c0))))OR((('0.5011194616036763')>(vt1.c0))))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c0 IN ()))IS((~ (rt1.c0)))) CROSS JOIN vt0 ON CAST(rt1.c2 AS INTEGER) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN vt1 ON (((rt1.c0 IN ()))IS((~ (rt1.c0)))) CROSS JOIN vt0 ON CAST(rt1.c2 AS INTEGER) COLLATE NOCASE WHERE ((((((((v0.c0))<=((rt1.c0))))OR(TRIM(DISTINCT vt1.c0))))OR((('0.5011194616036763')>(vt1.c0)))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON DATE(((NULL) ISNULL), (rt1.c2 IN ()), '1070603078', ((((vt1.c0)AND(1531497001)))OR(rt1.c2)), (((vt0.c0))<=((rt1.c1)))) RIGHT OUTER JOIN rt1 ON (- ((vt1.c0 IN ()))) WHERE (((1869129801) NOT NULL)) ORDER BY ABS((rt1.c0 IN (rt1.c2, vt0.c0))) DESC  NULLS LAST, -1.074402307E9 ASC  NULLS FIRST, ((rt1.c0) NOTNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((1869129801) NOT NULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON DATE(((NULL) ISNULL), (rt1.c2 IN ()), '1070603078', ((((vt1.c0)AND(1531497001)))OR(rt1.c2)), (((vt0.c0))<=((rt1.c1)))) RIGHT OUTER JOIN rt1 ON (- ((vt1.c0 IN ()))) ORDER BY ABS((rt1.c0 IN (rt1.c2, vt0.c0))) DESC  NULLS LAST, -1.074402307E9 ASC  NULLS FIRST, ((rt1.c0) NOTNULL) COLLATE BINARY);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON DATE(((NULL) ISNULL), (rt1.c2 IN ()), '1070603078', ((((vt1.c0)AND(1531497001)))OR(rt1.c2)), (((vt0.c0))<=((rt1.c1)))) RIGHT OUTER JOIN rt1 ON (- ((vt1.c0 IN ()))) WHERE (((1869129801) NOT NULL)) ORDER BY ABS((rt1.c0 IN (rt1.c2, vt0.c0))) DESC  NULLS LAST, -1.074402307E9 ASC  NULLS FIRST, ((rt1.c0) NOTNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((1869129801) NOT NULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON DATE(((NULL) ISNULL), (rt1.c2 IN ()), '1070603078', ((((vt1.c0)AND(1531497001)))OR(rt1.c2)), (((vt0.c0))<=((rt1.c1)))) RIGHT OUTER JOIN rt1 ON (- ((vt1.c0 IN ()))) ORDER BY ABS((rt1.c0 IN (rt1.c2, vt0.c0))) DESC  NULLS LAST, -1.074402307E9 ASC  NULLS FIRST, ((rt1.c0) NOTNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (+ (((rt1.c2)<<(rt1.c1)))) FULL OUTER JOIN rt1 ON CASE '-854136011'  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE RTRIM INNER JOIN v0 ON ((vt1.c0)-(0.0031622704656942835)) WHERE ((((rt1.c1) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (+ (((rt1.c2)<<(rt1.c1)))) FULL OUTER JOIN rt1 ON CASE '-854136011'  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE RTRIM INNER JOIN v0 ON ((vt1.c0)-(0.0031622704656942835)));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (+ (((rt1.c2)<<(rt1.c1)))) FULL OUTER JOIN rt1 ON CASE '-854136011'  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE RTRIM INNER JOIN v0 ON ((vt1.c0)-(0.0031622704656942835)) WHERE ((((rt1.c1) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (+ (((rt1.c2)<<(rt1.c1)))) FULL OUTER JOIN rt1 ON CASE '-854136011'  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE RTRIM INNER JOIN v0 ON ((vt1.c0)-(0.0031622704656942835)));
SELECT * FROM vt1, vt0, v0 WHERE (((('-1825425357' IN ()))*(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((('-1825425357' IN ()))*(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((('-1825425357' IN ()))*(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((('-1825425357' IN ()))*(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((('-1825425357' IN ()))*(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (((((x'f45d')OR(CAST(rt1.c0 AS INTEGER))))AND(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN x'' THEN SQLITE_VERSION() ELSE CASE WHEN rt1.c1 THEN vt0.c0 END END ASC, ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((((((x'f45d')OR(CAST(rt1.c0 AS INTEGER))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, rt1, vt1 ORDER BY CASE WHEN x'' THEN SQLITE_VERSION() ELSE CASE WHEN rt1.c1 THEN vt0.c0 END END ASC, ((vt0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (((((x'f45d')OR(CAST(rt1.c0 AS INTEGER))))AND(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN x'' THEN SQLITE_VERSION() ELSE CASE WHEN rt1.c1 THEN vt0.c0 END END ASC, ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((((((x'f45d')OR(CAST(rt1.c0 AS INTEGER))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, rt1, vt1 ORDER BY CASE WHEN x'' THEN SQLITE_VERSION() ELSE CASE WHEN rt1.c1 THEN vt0.c0 END END ASC, ((vt0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM vt0, v0, rt1, vt1 WHERE (((((x'f45d')OR(CAST(rt1.c0 AS INTEGER))))AND(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN x'' THEN SQLITE_VERSION() ELSE CASE WHEN rt1.c1 THEN vt0.c0 END END ASC, ((vt0.c0 IN ()) IN ());
SELECT ALL * FROM vt1 FULL OUTER JOIN rt1 ON CHAR('1080276252') FULL OUTER JOIN vt0 ON rt1.c1 WHERE ('.J') ORDER BY MIN(((rt1.c1) NOTNULL), ((rt1.c0) IS TRUE)) ASC  NULLS FIRST, ((((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))*((~ (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('.J') IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON CHAR('1080276252') FULL OUTER JOIN vt0 ON rt1.c1 ORDER BY MIN(((rt1.c1) NOTNULL), ((rt1.c0) IS TRUE)) ASC  NULLS FIRST, ((((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))*((~ (rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt1 ON CHAR('1080276252') FULL OUTER JOIN vt0 ON rt1.c1 WHERE ('.J') ORDER BY MIN(((rt1.c1) NOTNULL), ((rt1.c0) IS TRUE)) ASC  NULLS FIRST, ((((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))*((~ (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('.J') IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON CHAR('1080276252') FULL OUTER JOIN vt0 ON rt1.c1 ORDER BY MIN(((rt1.c1) NOTNULL), ((rt1.c0) IS TRUE)) ASC  NULLS FIRST, ((((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))*((~ (rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt1 ON CHAR('1080276252') FULL OUTER JOIN vt0 ON rt1.c1 WHERE ('.J') ORDER BY MIN(((rt1.c1) NOTNULL), ((rt1.c0) IS TRUE)) ASC  NULLS FIRST, ((((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))*((~ (rt1.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1, v0, vt1 WHERE ((((((0.6530584586806908, rt1.c1, vt1.c0)) BETWEEN ((rt1.c2, rt1.c2, v0.c0)) AND ((rt1.c0, x'', rt1.c1)))) NOT BETWEEN (((x'')&('-489557860'))) AND (x''))) ORDER BY ((v0.c0)+(rt1.c1)) DESC  NULLS LAST, ((PRINTF(rt1.c1)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((0.6530584586806908, rt1.c1, vt1.c0)) BETWEEN ((rt1.c2, rt1.c2, v0.c0)) AND ((rt1.c0, x'', rt1.c1)))) NOT BETWEEN (((x'')&('-489557860'))) AND (x''))) IS TRUE)  as count FROM vt0, rt1, v0, vt1 ORDER BY ((v0.c0)+(rt1.c1)) DESC  NULLS LAST, ((PRINTF(rt1.c1)) NOT NULL));
SELECT COUNT(*) FROM vt0, rt1, v0, vt1 WHERE ((((((0.6530584586806908, rt1.c1, vt1.c0)) BETWEEN ((rt1.c2, rt1.c2, v0.c0)) AND ((rt1.c0, x'', rt1.c1)))) NOT BETWEEN (((x'')&('-489557860'))) AND (x''))) ORDER BY ((v0.c0)+(rt1.c1)) DESC  NULLS LAST, ((PRINTF(rt1.c1)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((0.6530584586806908, rt1.c1, vt1.c0)) BETWEEN ((rt1.c2, rt1.c2, v0.c0)) AND ((rt1.c0, x'', rt1.c1)))) NOT BETWEEN (((x'')&('-489557860'))) AND (x''))) IS TRUE)  as count FROM vt0, rt1, v0, vt1 ORDER BY ((v0.c0)+(rt1.c1)) DESC  NULLS LAST, ((PRINTF(rt1.c1)) NOT NULL));
SELECT COUNT(*) FROM vt0, rt1, v0, vt1 WHERE ((((((0.6530584586806908, rt1.c1, vt1.c0)) BETWEEN ((rt1.c2, rt1.c2, v0.c0)) AND ((rt1.c0, x'', rt1.c1)))) NOT BETWEEN (((x'')&('-489557860'))) AND (x''))) ORDER BY ((v0.c0)+(rt1.c1)) DESC  NULLS LAST, ((PRINTF(rt1.c1)) NOT NULL);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON NULL INNER JOIN vt1 ON ((json_insert(vt0.c0, x'', vt0.c0))GLOB(vt0.c0)) WHERE (((vt0.c0)OR((- (vt0.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON NULL INNER JOIN vt1 ON ((json_insert(vt0.c0, x'', vt0.c0))GLOB(vt0.c0)) ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON NULL INNER JOIN vt1 ON ((json_insert(vt0.c0, x'', vt0.c0))GLOB(vt0.c0)) WHERE (((vt0.c0)OR((- (vt0.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON NULL INNER JOIN vt1 ON ((json_insert(vt0.c0, x'', vt0.c0))GLOB(vt0.c0)) ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON NULL INNER JOIN vt1 ON ((json_insert(vt0.c0, x'', vt0.c0))GLOB(vt0.c0)) WHERE (((vt0.c0)OR((- (vt0.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (vt1.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY json_extract(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt1.c0) IS FALSE), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_extract(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt1.c0) IS FALSE), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CAST(vt0.c0 AS NUMERIC)));
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (vt1.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY json_extract(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt1.c0) IS FALSE), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_extract(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt1.c0) IS FALSE), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CAST(vt0.c0 AS NUMERIC)));
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (vt1.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY json_extract(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt1.c0) IS FALSE), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CAST(vt0.c0 AS NUMERIC));
SELECT * FROM rt1 CROSS JOIN v0 ON ((NULL)+(rt1.c1)) FULL OUTER JOIN vt1 ON (CAST(vt1.c0 AS BLOB) IN ()) RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(vt1.c0)))AND(vt1.c0)))LIKE(v0.c0 COLLATE BINARY)) WHERE (((((v0.c0)AND(rt1.c2)))OR(0.4812583123281168)) COLLATE BINARY) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(rt1.c2)))OR(0.4812583123281168)) COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((NULL)+(rt1.c1)) FULL OUTER JOIN vt1 ON (CAST(vt1.c0 AS BLOB) IN ()) RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(vt1.c0)))AND(vt1.c0)))LIKE(v0.c0 COLLATE BINARY)) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS INTEGER));
SELECT * FROM rt1 CROSS JOIN v0 ON ((NULL)+(rt1.c1)) FULL OUTER JOIN vt1 ON (CAST(vt1.c0 AS BLOB) IN ()) RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(vt1.c0)))AND(vt1.c0)))LIKE(v0.c0 COLLATE BINARY)) WHERE (((((v0.c0)AND(rt1.c2)))OR(0.4812583123281168)) COLLATE BINARY) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(rt1.c2)))OR(0.4812583123281168)) COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((NULL)+(rt1.c1)) FULL OUTER JOIN vt1 ON (CAST(vt1.c0 AS BLOB) IN ()) RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(vt1.c0)))AND(vt1.c0)))LIKE(v0.c0 COLLATE BINARY)) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS INTEGER));
SELECT * FROM rt1 CROSS JOIN v0 ON ((NULL)+(rt1.c1)) FULL OUTER JOIN vt1 ON (CAST(vt1.c0 AS BLOB) IN ()) RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(vt1.c0)))AND(vt1.c0)))LIKE(v0.c0 COLLATE BINARY)) WHERE (((((v0.c0)AND(rt1.c2)))OR(0.4812583123281168)) COLLATE BINARY) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS INTEGER);
SELECT * FROM vt0, v0 INNER JOIN vt1 ON 0.8662191135818532 WHERE (CASE ((v0.c0) ISNULL)  WHEN vt0.c0 THEN x'796f2461' END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) ISNULL)  WHEN vt0.c0 THEN x'796f2461' END) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt1 ON 0.8662191135818532);
SELECT * FROM vt0, v0 INNER JOIN vt1 ON 0.8662191135818532 WHERE (CASE ((v0.c0) ISNULL)  WHEN vt0.c0 THEN x'796f2461' END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) ISNULL)  WHEN vt0.c0 THEN x'796f2461' END) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt1 ON 0.8662191135818532);
SELECT * FROM vt0, v0 INNER JOIN vt1 ON 0.8662191135818532 WHERE (CASE ((v0.c0) ISNULL)  WHEN vt0.c0 THEN x'796f2461' END);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((((0xfffffffff6e7661c))<((v0.c0))))) AND (((- (rt1.c2))))) WHERE ((+ (rt1.c0 COLLATE BINARY))) ORDER BY 0.5687716986914577 ASC;
SELECT SUM(count) FROM (SELECT (((+ (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((((0xfffffffff6e7661c))<((v0.c0))))) AND (((- (rt1.c2))))) ORDER BY 0.5687716986914577 ASC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((((0xfffffffff6e7661c))<((v0.c0))))) AND (((- (rt1.c2))))) WHERE ((+ (rt1.c0 COLLATE BINARY))) ORDER BY 0.5687716986914577 ASC;
SELECT SUM(count) FROM (SELECT (((+ (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((((0xfffffffff6e7661c))<((v0.c0))))) AND (((- (rt1.c2))))) ORDER BY 0.5687716986914577 ASC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((((0xfffffffff6e7661c))<((v0.c0))))) AND (((- (rt1.c2))))) WHERE ((+ (rt1.c0 COLLATE BINARY))) ORDER BY 0.5687716986914577 ASC;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((9.04105094E8))) AS REAL)) ORDER BY ((((v0.c0) BETWEEN ('-225284489') AND (v0.c0)))||(((vt1.c0) BETWEEN (0.12642571199973685) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((9.04105094E8))) AS REAL)) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((v0.c0) BETWEEN ('-225284489') AND (v0.c0)))||(((vt1.c0) BETWEEN (0.12642571199973685) AND (v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((9.04105094E8))) AS REAL)) ORDER BY ((((v0.c0) BETWEEN ('-225284489') AND (v0.c0)))||(((vt1.c0) BETWEEN (0.12642571199973685) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((9.04105094E8))) AS REAL)) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((v0.c0) BETWEEN ('-225284489') AND (v0.c0)))||(((vt1.c0) BETWEEN (0.12642571199973685) AND (v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((9.04105094E8))) AS REAL)) ORDER BY ((((v0.c0) BETWEEN ('-225284489') AND (v0.c0)))||(((vt1.c0) BETWEEN (0.12642571199973685) AND (v0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt1, v0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (rt1.c2);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)IS(((x'd175')AND(v0.c0)))) WHERE ((((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, v0.c0, vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, v0.c0, vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)IS(((x'd175')AND(v0.c0)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)IS(((x'd175')AND(v0.c0)))) WHERE ((((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, v0.c0, vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, v0.c0, vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)IS(((x'd175')AND(v0.c0)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0)IS(((x'd175')AND(v0.c0)))) WHERE ((((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, v0.c0, vt0.c0)))) NOT NULL));
SELECT * FROM vt1, vt0 WHERE ((- (json_quote(vt0.c0)))) ORDER BY (((('^t~NaNkQ?*'))<>((vt1.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (json_quote(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((('^t~NaNkQ?*'))!=((vt1.c0))) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((- (json_quote(vt0.c0)))) ORDER BY (((('^t~NaNkQ?*'))<>((vt1.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (json_quote(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((('^t~NaNkQ?*'))!=((vt1.c0))) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((- (json_quote(vt0.c0)))) ORDER BY (((('^t~NaNkQ?*'))<>((vt1.c0))) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c1)))<=(((((NULL)AND('	o')))OR(0.4420142884320316)))) WHERE (((rt1.c1)OR(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c1)OR(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c1)))<=(((((NULL)AND('	o')))OR(0.4420142884320316)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c1)))<=(((((NULL)AND('	o')))OR(0.4420142884320316)))) WHERE (((rt1.c1)OR(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c1)OR(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c1)))<=(((((NULL)AND('	o')))OR(0.4420142884320316)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c1)))<=(((((NULL)AND('	o')))OR(0.4420142884320316)))) WHERE (((rt1.c1)OR(rt1.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE (((vt0.c0)<<(rt1.c1)) COLLATE NOCASE) ORDER BY ((((NULL) BETWEEN (rt1.c2) AND (rt1.c0)))IS NOT(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY ((((NULL) BETWEEN (rt1.c2) AND (rt1.c0)))IS NOT(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE (((vt0.c0)<<(rt1.c1)) COLLATE NOCASE) ORDER BY ((((NULL) BETWEEN (rt1.c2) AND (rt1.c0)))IS NOT(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY ((((NULL) BETWEEN (rt1.c2) AND (rt1.c0)))IS NOT(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 WHERE (((vt0.c0)<<(rt1.c1)) COLLATE NOCASE) ORDER BY ((((NULL) BETWEEN (rt1.c2) AND (rt1.c0)))IS NOT(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c1))))  NULLS LAST;
SELECT * FROM vt1, rt1, vt0 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))<=(TRIM(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))<=(TRIM(rt1.c2)))) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT * FROM vt1, rt1, vt0 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))<=(TRIM(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))<=(TRIM(rt1.c2)))) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT * FROM vt1, rt1, vt0 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))<=(TRIM(rt1.c2))));
SELECT COUNT(*) FROM v0, vt1, vt0 NATURAL JOIN rt1 WHERE (v0.c0) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN 0Xffffffffd84094ba THEN vt0.c0 ELSE rt1.c1 END) BETWEEN (((rt1.c0) IS FALSE)) AND ((((vt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))))), ((CAST(v0.c0 AS INTEGER)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1, vt0 NATURAL JOIN rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN 0Xffffffffd84094ba THEN vt0.c0 ELSE rt1.c1 END) BETWEEN (((rt1.c0) IS FALSE)) AND ((((vt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))))), ((CAST(v0.c0 AS INTEGER)) NOTNULL) ASC);
SELECT COUNT(*) FROM v0, vt1, vt0 NATURAL JOIN rt1 WHERE (v0.c0) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN 0Xffffffffd84094ba THEN vt0.c0 ELSE rt1.c1 END) BETWEEN (((rt1.c0) IS FALSE)) AND ((((vt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))))), ((CAST(v0.c0 AS INTEGER)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1, vt0 NATURAL JOIN rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN 0Xffffffffd84094ba THEN vt0.c0 ELSE rt1.c1 END) BETWEEN (((rt1.c0) IS FALSE)) AND ((((vt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))))), ((CAST(v0.c0 AS INTEGER)) NOTNULL) ASC);
SELECT COUNT(*) FROM v0, vt1, vt0 NATURAL JOIN rt1 WHERE (v0.c0) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN 0Xffffffffd84094ba THEN vt0.c0 ELSE rt1.c1 END) BETWEEN (((rt1.c0) IS FALSE)) AND ((((vt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt1.c0))))), ((CAST(v0.c0 AS INTEGER)) NOTNULL) ASC;
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0)OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(-7.30308621E8))))) ORDER BY ((((v0.c0) NOT NULL))%(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(-7.30308621E8))))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((v0.c0) NOT NULL))%(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END)) DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0)OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(-7.30308621E8))))) ORDER BY ((((v0.c0) NOT NULL))%(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(-7.30308621E8))))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((v0.c0) NOT NULL))%(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END)) DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0)OR(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(-7.30308621E8))))) ORDER BY ((((v0.c0) NOT NULL))%(CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END)) DESC;
SELECT * FROM rt1 WHERE ('xQ');
SELECT SUM(count) FROM (SELECT ALL (('xQ') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('xQ');
SELECT SUM(count) FROM (SELECT ALL (('xQ') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('xQ');
SELECT COUNT(*) FROM v0, rt1, vt0, vt1 WHERE (((rt1.c2 IN (rt1.c1)) IN ((v0.c0 IN (v0.c0)), ((vt0.c0)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 IN (rt1.c1)) IN ((v0.c0 IN (v0.c0)), ((vt0.c0)*(vt1.c0))))) IS TRUE)  as count FROM v0, rt1, vt0, vt1);
SELECT COUNT(*) FROM v0, rt1, vt0, vt1 WHERE (((rt1.c2 IN (rt1.c1)) IN ((v0.c0 IN (v0.c0)), ((vt0.c0)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 IN (rt1.c1)) IN ((v0.c0 IN (v0.c0)), ((vt0.c0)*(vt1.c0))))) IS TRUE)  as count FROM v0, rt1, vt0, vt1);
SELECT COUNT(*) FROM v0, rt1, vt0, vt1 WHERE (((rt1.c2 IN (rt1.c1)) IN ((v0.c0 IN (v0.c0)), ((vt0.c0)*(vt1.c0)))));
SELECT COUNT(*) FROM vt1, v0, rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c1) BETWEEN (rt1.c2) AND (vt1.c0)) AS REAL) WHERE ((((((((((rt1.c1)OR(vt0.c0)))OR(vt1.c0)))OR(rt1.c0)))AND(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c1)OR(vt0.c0)))OR(vt1.c0)))OR(rt1.c0)))AND(rt1.c0)) IN ())) IS TRUE)  as count FROM vt1, v0, rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c1) BETWEEN (rt1.c2) AND (vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt1, v0, rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c1) BETWEEN (rt1.c2) AND (vt1.c0)) AS REAL) WHERE ((((((((((rt1.c1)OR(vt0.c0)))OR(vt1.c0)))OR(rt1.c0)))AND(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c1)OR(vt0.c0)))OR(vt1.c0)))OR(rt1.c0)))AND(rt1.c0)) IN ())) IS TRUE)  as count FROM vt1, v0, rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c1) BETWEEN (rt1.c2) AND (vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt1, v0, rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c1) BETWEEN (rt1.c2) AND (vt1.c0)) AS REAL) WHERE ((((((((((rt1.c1)OR(vt0.c0)))OR(vt1.c0)))OR(rt1.c0)))AND(rt1.c0)) IN ()));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((vt0.c0)OR(vt1.c0)))AND(rt1.c1)))AND(rt1.c0)))AND(vt0.c0))) BETWEEN (0.25455359325411886) AND ((rt1.c2 IN (vt1.c0, vt1.c0)))) CROSS JOIN vt1 ON (((((((vt1.c0)OR(vt1.c0)))AND(rt1.c0)), vt0.c0 COLLATE NOCASE, CASE WHEN v0.c0 THEN vt0.c0 ELSE 0.722467953109771 END))>=((rtreenode(v0.c0, vt0.c0), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)>>(rt1.c2))))) CROSS JOIN rt1 ON CASE WHEN CAST(vt1.c0 AS BLOB) THEN (((rt1.c1))>=((vt1.c0))) END WHERE ((('-2116962530') BETWEEN (ABS(DISTINCT rt1.c0)) AND (((rt1.c0)OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((('-2116962530') BETWEEN (ABS(DISTINCT rt1.c0)) AND (((rt1.c0)OR(rt1.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((vt0.c0)OR(vt1.c0)))AND(rt1.c1)))AND(rt1.c0)))AND(vt0.c0))) BETWEEN (0.25455359325411886) AND ((rt1.c2 IN (vt1.c0, vt1.c0)))) CROSS JOIN vt1 ON (((((((vt1.c0)OR(vt1.c0)))AND(rt1.c0)), vt0.c0 COLLATE NOCASE, CASE WHEN v0.c0 THEN vt0.c0 ELSE 0.722467953109771 END))>=((rtreenode(v0.c0, vt0.c0), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)>>(rt1.c2))))) CROSS JOIN rt1 ON CASE WHEN CAST(vt1.c0 AS BLOB) THEN (((rt1.c1))>=((vt1.c0))) END);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((vt0.c0)OR(vt1.c0)))AND(rt1.c1)))AND(rt1.c0)))AND(vt0.c0))) BETWEEN (0.25455359325411886) AND ((rt1.c2 IN (vt1.c0, vt1.c0)))) CROSS JOIN vt1 ON (((((((vt1.c0)OR(vt1.c0)))AND(rt1.c0)), vt0.c0 COLLATE NOCASE, CASE WHEN v0.c0 THEN vt0.c0 ELSE 0.722467953109771 END))>=((rtreenode(v0.c0, vt0.c0), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)>>(rt1.c2))))) CROSS JOIN rt1 ON CASE WHEN CAST(vt1.c0 AS BLOB) THEN (((rt1.c1))>=((vt1.c0))) END WHERE ((('-2116962530') BETWEEN (ABS(DISTINCT rt1.c0)) AND (((rt1.c0)OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((('-2116962530') BETWEEN (ABS(DISTINCT rt1.c0)) AND (((rt1.c0)OR(rt1.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((vt0.c0)OR(vt1.c0)))AND(rt1.c1)))AND(rt1.c0)))AND(vt0.c0))) BETWEEN (0.25455359325411886) AND ((rt1.c2 IN (vt1.c0, vt1.c0)))) CROSS JOIN vt1 ON (((((((vt1.c0)OR(vt1.c0)))AND(rt1.c0)), vt0.c0 COLLATE NOCASE, CASE WHEN v0.c0 THEN vt0.c0 ELSE 0.722467953109771 END))>=((rtreenode(v0.c0, vt0.c0), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)>>(rt1.c2))))) CROSS JOIN rt1 ON CASE WHEN CAST(vt1.c0 AS BLOB) THEN (((rt1.c1))>=((vt1.c0))) END);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0)=(vt0.c0))) IS FALSE)) ORDER BY ((((rt1.c2)IS(rt1.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)=(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2)IS(rt1.c1))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0)=(vt0.c0))) IS FALSE)) ORDER BY ((((rt1.c2)IS(rt1.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)=(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2)IS(rt1.c1))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0)=(vt0.c0))) IS FALSE)) ORDER BY ((((rt1.c2)IS(rt1.c1))) IS TRUE)  NULLS LAST;
SELECT * FROM v0, vt1 WHERE ((('920675820') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('920675820') IS FALSE)) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((('920675820') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('920675820') IS FALSE)) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((('920675820') IS FALSE));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((rt1.c1)<<(rt1.c1))) BETWEEN (rt1.c2) AND ((NOT (v0.c0)))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0)<(rt1.c2)))OR(CASE WHEN rt1.c0 THEN rt1.c1 END)))OR(UNLIKELY(DISTINCT NULL))) INNER JOIN vt1 ON ((((((vt1.c0)||(rt1.c1)))AND(0.033972216973309766)))AND(((rt1.c2)IS NOT(vt0.c0)))) WHERE (((((x'' IN ())))!=(((rt1.c2 IN (vt1.c0, vt1.c0)))))) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c2 END) NOT BETWEEN ((+ (rt1.c0))) AND (((v0.c0)&(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'' IN ())))<>(((rt1.c2 IN (vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((rt1.c1)<<(rt1.c1))) BETWEEN (rt1.c2) AND ((NOT (v0.c0)))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0)<(rt1.c2)))OR(CASE WHEN rt1.c0 THEN rt1.c1 END)))OR(UNLIKELY(DISTINCT NULL))) INNER JOIN vt1 ON ((((((vt1.c0)||(rt1.c1)))AND(0.033972216973309766)))AND(((rt1.c2)IS NOT(vt0.c0)))) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c2 END) NOT BETWEEN ((+ (rt1.c0))) AND (((v0.c0)&(v0.c0))))  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((rt1.c1)<<(rt1.c1))) BETWEEN (rt1.c2) AND ((NOT (v0.c0)))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0)<(rt1.c2)))OR(CASE WHEN rt1.c0 THEN rt1.c1 END)))OR(UNLIKELY(DISTINCT NULL))) INNER JOIN vt1 ON ((((((vt1.c0)||(rt1.c1)))AND(0.033972216973309766)))AND(((rt1.c2)IS NOT(vt0.c0)))) WHERE (((((x'' IN ())))!=(((rt1.c2 IN (vt1.c0, vt1.c0)))))) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c2 END) NOT BETWEEN ((+ (rt1.c0))) AND (((v0.c0)&(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'' IN ())))<>(((rt1.c2 IN (vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((rt1.c1)<<(rt1.c1))) BETWEEN (rt1.c2) AND ((NOT (v0.c0)))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0)<(rt1.c2)))OR(CASE WHEN rt1.c0 THEN rt1.c1 END)))OR(UNLIKELY(DISTINCT NULL))) INNER JOIN vt1 ON ((((((vt1.c0)||(rt1.c1)))AND(0.033972216973309766)))AND(((rt1.c2)IS NOT(vt0.c0)))) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c2 END) NOT BETWEEN ((+ (rt1.c0))) AND (((v0.c0)&(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (758983736) ORDER BY TRIM(DISTINCT vt1.c0) DESC  NULLS FIRST, ((((((vt0.c0)AND(rt1.c0)))OR(rt1.c1))) BETWEEN (rt1.c2) AND (CAST('' AS REAL))), json_patch((+ (rt1.c2)), (vt0.c0 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((758983736) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY TRIM(DISTINCT vt1.c0) DESC  NULLS FIRST, ((((((vt0.c0)AND(rt1.c0)))OR(rt1.c1))) BETWEEN (rt1.c2) AND (CAST('' AS REAL))), json_patch((+ (rt1.c2)), (vt0.c0 IN ()))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (758983736) ORDER BY TRIM(DISTINCT vt1.c0) DESC  NULLS FIRST, ((((((vt0.c0)AND(rt1.c0)))OR(rt1.c1))) BETWEEN (rt1.c2) AND (CAST('' AS REAL))), json_patch((+ (rt1.c2)), (vt0.c0 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((758983736) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY TRIM(DISTINCT vt1.c0) DESC  NULLS FIRST, ((((((vt0.c0)AND(rt1.c0)))OR(rt1.c1))) BETWEEN (rt1.c2) AND (CAST('' AS REAL))), json_patch((+ (rt1.c2)), (vt0.c0 IN ()))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (758983736) ORDER BY TRIM(DISTINCT vt1.c0) DESC  NULLS FIRST, ((((((vt0.c0)AND(rt1.c0)))OR(rt1.c1))) BETWEEN (rt1.c2) AND (CAST('' AS REAL))), json_patch((+ (rt1.c2)), (vt0.c0 IN ()))  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)AND(v0.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(v0.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)AND(v0.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(v0.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)AND(v0.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((+ (((rt1.c0)|(rt1.c1))))) ORDER BY ((((vt0.c0)/(rt1.c0))) NOT NULL) ASC, rt1.c1  NULLS FIRST, x'';
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0)|(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0)/(rt1.c0))) NOT NULL) ASC, rt1.c1  NULLS FIRST, x'');
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((+ (((rt1.c0)|(rt1.c1))))) ORDER BY ((((vt0.c0)/(rt1.c0))) NOT NULL) ASC, rt1.c1  NULLS FIRST, x'';
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0)|(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0)/(rt1.c0))) NOT NULL) ASC, rt1.c1  NULLS FIRST, x'');
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((+ (((rt1.c0)|(rt1.c1))))) ORDER BY ((((vt0.c0)/(rt1.c0))) NOT NULL) ASC, rt1.c1  NULLS FIRST, x'';
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) IS FALSE) THEN (- (v0.c0)) END) ORDER BY ((v0.c0)IS NOT(0.1863515468518111))  NULLS LAST, (((((v0.c0) IS TRUE)))>((LOWER(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) IS FALSE) THEN (- (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)IS NOT(0.1863515468518111))  NULLS LAST, (((((v0.c0) IS TRUE)))>((LOWER(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) IS FALSE) THEN (- (v0.c0)) END) ORDER BY ((v0.c0)IS NOT(0.1863515468518111))  NULLS LAST, (((((v0.c0) IS TRUE)))>((LOWER(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) IS FALSE) THEN (- (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)IS NOT(0.1863515468518111))  NULLS LAST, (((((v0.c0) IS TRUE)))>((LOWER(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) IS FALSE) THEN (- (v0.c0)) END) ORDER BY ((v0.c0)IS NOT(0.1863515468518111))  NULLS LAST, (((((v0.c0) IS TRUE)))>((LOWER(v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt1, rt1, vt0 WHERE (((x'') NOT BETWEEN (TRIM(DISTINCT 'Vqc', v0.c0)) AND (((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (TRIM(DISTINCT 'Vqc', v0.c0)) AND (((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt1, rt1, vt0);
SELECT COUNT(*) FROM v0, vt1, rt1, vt0 WHERE (((x'') NOT BETWEEN (TRIM(DISTINCT 'Vqc', v0.c0)) AND (((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (TRIM(DISTINCT 'Vqc', v0.c0)) AND (((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt1, rt1, vt0);
SELECT COUNT(*) FROM v0, vt1, rt1, vt0 WHERE (((x'') NOT BETWEEN (TRIM(DISTINCT 'Vqc', v0.c0)) AND (((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 INNER JOIN rt1 ON ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))<>(x'')) CROSS JOIN vt1 ON ((((rt1.c1)<=(rt1.c2)))LIKE((((rt1.c1))>=((x'3d22'))))) WHERE (CASE WHEN '-466355497' THEN rt1.c1 COLLATE NOCASE ELSE rt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-466355497' THEN rt1.c1 COLLATE NOCASE ELSE rt1.c0 END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))!=(x'')) CROSS JOIN vt1 ON ((((rt1.c1)<=(rt1.c2)))LIKE((((rt1.c1))>=((x'3d22'))))));
SELECT * FROM vt0 INNER JOIN rt1 ON ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))<>(x'')) CROSS JOIN vt1 ON ((((rt1.c1)<=(rt1.c2)))LIKE((((rt1.c1))>=((x'3d22'))))) WHERE (CASE WHEN '-466355497' THEN rt1.c1 COLLATE NOCASE ELSE rt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-466355497' THEN rt1.c1 COLLATE NOCASE ELSE rt1.c0 END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))!=(x'')) CROSS JOIN vt1 ON ((((rt1.c1)<=(rt1.c2)))LIKE((((rt1.c1))>=((x'3d22'))))));
SELECT * FROM vt0 INNER JOIN rt1 ON ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))<>(x'')) CROSS JOIN vt1 ON ((((rt1.c1)<=(rt1.c2)))LIKE((((rt1.c1))>=((x'3d22'))))) WHERE (CASE WHEN '-466355497' THEN rt1.c1 COLLATE NOCASE ELSE rt1.c0 END);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))>((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))>((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))>((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))>((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))>((vt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM rt1, v0, vt1, vt0 WHERE (0Xffffffffe044df8e);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe044df8e) IS TRUE)  as count FROM rt1, v0, vt1, vt0);
SELECT ALL * FROM rt1, v0, vt1, vt0 WHERE (0Xffffffffe044df8e);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe044df8e) IS TRUE)  as count FROM rt1, v0, vt1, vt0);
SELECT ALL * FROM rt1, v0, vt1, vt0 WHERE (0Xffffffffe044df8e);
SELECT ALL COUNT(*) FROM vt1, rt1, v0 WHERE (((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) COLLATE BINARY) ORDER BY rtreenode(rt1.c2 COLLATE RTRIM, vt1.c0 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1, v0 ORDER BY rtreenode(rt1.c2 COLLATE RTRIM, vt1.c0 COLLATE BINARY) DESC);
SELECT ALL COUNT(*) FROM vt1, rt1, v0 WHERE (((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) COLLATE BINARY) ORDER BY rtreenode(rt1.c2 COLLATE RTRIM, vt1.c0 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1, v0 ORDER BY rtreenode(rt1.c2 COLLATE RTRIM, vt1.c0 COLLATE BINARY) DESC);
SELECT ALL COUNT(*) FROM vt1, rt1, v0 WHERE (((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) COLLATE BINARY) ORDER BY rtreenode(rt1.c2 COLLATE RTRIM, vt1.c0 COLLATE BINARY) DESC;
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((NOT ((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((NOT ((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt0 WHERE ((NOT ((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM rt1, v0 INNER JOIN vt1 ON NULL CROSS JOIN vt0 ON x'' WHERE ((rt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0 INNER JOIN vt1 ON NULL CROSS JOIN vt0 ON x'');
SELECT ALL * FROM rt1, v0 INNER JOIN vt1 ON NULL CROSS JOIN vt0 ON x'' WHERE ((rt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0 INNER JOIN vt1 ON NULL CROSS JOIN vt0 ON x'');
SELECT ALL * FROM rt1, v0 INNER JOIN vt1 ON NULL CROSS JOIN vt0 ON x'' WHERE ((rt1.c0 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE ((((rt1.c2, v0.c0, vt0.c0)) NOT BETWEEN ((((rt1.c1)=(rt1.c2)), ((((((((vt0.c0)OR(v0.c0)))AND('-1234205061')))OR(rt1.c0)))OR(vt0.c0)), (((vt0.c0, rt1.c1, rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c1, vt0.c0, rt1.c0, v0.c0)) AND ((rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2))))) AND ((JULIANDAY(v0.c0, rt1.c0, v0.c0), (+ (v0.c0)), ((rt1.c1) ISNULL))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, v0.c0, vt0.c0)) NOT BETWEEN ((((rt1.c1)==(rt1.c2)), ((((((((vt0.c0)OR(v0.c0)))AND('-1234205061')))OR(rt1.c0)))OR(vt0.c0)), (((vt0.c0, rt1.c1, rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c1, vt0.c0, rt1.c0, v0.c0)) AND ((rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2))))) AND ((JULIANDAY(v0.c0, rt1.c0, v0.c0), (+ (v0.c0)), ((rt1.c1) ISNULL))))) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE ((((rt1.c2, v0.c0, vt0.c0)) NOT BETWEEN ((((rt1.c1)=(rt1.c2)), ((((((((vt0.c0)OR(v0.c0)))AND('-1234205061')))OR(rt1.c0)))OR(vt0.c0)), (((vt0.c0, rt1.c1, rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c1, vt0.c0, rt1.c0, v0.c0)) AND ((rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2))))) AND ((JULIANDAY(v0.c0, rt1.c0, v0.c0), (+ (v0.c0)), ((rt1.c1) ISNULL))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, v0.c0, vt0.c0)) NOT BETWEEN ((((rt1.c1)==(rt1.c2)), ((((((((vt0.c0)OR(v0.c0)))AND('-1234205061')))OR(rt1.c0)))OR(vt0.c0)), (((vt0.c0, rt1.c1, rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c1, vt0.c0, rt1.c0, v0.c0)) AND ((rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2))))) AND ((JULIANDAY(v0.c0, rt1.c0, v0.c0), (+ (v0.c0)), ((rt1.c1) ISNULL))))) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE ((((rt1.c2, v0.c0, vt0.c0)) NOT BETWEEN ((((rt1.c1)=(rt1.c2)), ((((((((vt0.c0)OR(v0.c0)))AND('-1234205061')))OR(rt1.c0)))OR(vt0.c0)), (((vt0.c0, rt1.c1, rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c1, vt0.c0, rt1.c0, v0.c0)) AND ((rt1.c0, v0.c0, rt1.c1, vt0.c0, rt1.c2))))) AND ((JULIANDAY(v0.c0, rt1.c0, v0.c0), (+ (v0.c0)), ((rt1.c1) ISNULL))))) ORDER BY v0.c0;
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((((rt1.c1)AND(vt1.c0)))OR(rt1.c1))) AND ('n~')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((((rt1.c1)AND(vt1.c0)))OR(rt1.c1))) AND ('n~'))) IS TRUE)  as count FROM vt0, vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((((rt1.c1)AND(vt1.c0)))OR(rt1.c1))) AND ('n~')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((((rt1.c1)AND(vt1.c0)))OR(rt1.c1))) AND ('n~'))) IS TRUE)  as count FROM vt0, vt1, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((((rt1.c1)AND(vt1.c0)))OR(rt1.c1))) AND ('n~')));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 INNER JOIN v0 ON '-2010879401' WHERE (CASE ((((((((rt1.c2)AND(rt1.c2)))OR(v0.c0)))OR(rt1.c2)))OR(vt0.c0))  WHEN TYPEOF(DISTINCT vt0.c0) THEN x'' END) ORDER BY ((v0.c0)IS NOT(rt1.c2)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt1.c2)AND(rt1.c2)))OR(v0.c0)))OR(rt1.c2)))OR(vt0.c0))  WHEN TYPEOF(DISTINCT vt0.c0) THEN x'' END) IS TRUE)  as count FROM rt1, vt0, vt1 INNER JOIN v0 ON '-2010879401' ORDER BY ((v0.c0)IS NOT(rt1.c2)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 INNER JOIN v0 ON '-2010879401' WHERE (CASE ((((((((rt1.c2)AND(rt1.c2)))OR(v0.c0)))OR(rt1.c2)))OR(vt0.c0))  WHEN TYPEOF(DISTINCT vt0.c0) THEN x'' END) ORDER BY ((v0.c0)IS NOT(rt1.c2)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt1.c2)AND(rt1.c2)))OR(v0.c0)))OR(rt1.c2)))OR(vt0.c0))  WHEN TYPEOF(DISTINCT vt0.c0) THEN x'' END) IS TRUE)  as count FROM rt1, vt0, vt1 INNER JOIN v0 ON '-2010879401' ORDER BY ((v0.c0)IS NOT(rt1.c2)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 INNER JOIN v0 ON '-2010879401' WHERE (CASE ((((((((rt1.c2)AND(rt1.c2)))OR(v0.c0)))OR(rt1.c2)))OR(vt0.c0))  WHEN TYPEOF(DISTINCT vt0.c0) THEN x'' END) ORDER BY ((v0.c0)IS NOT(rt1.c2)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0 WHERE ((((vt1.c0)LIKE(v0.c0)) IN (((v0.c0) NOT BETWEEN ('芏J%') AND (v0.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)LIKE(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)LIKE(v0.c0)) IN (((v0.c0) NOT BETWEEN ('芏J%') AND (v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((vt1.c0 COLLATE RTRIM)LIKE(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END)) DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE ((((vt1.c0)LIKE(v0.c0)) IN (((v0.c0) NOT BETWEEN ('芏J%') AND (v0.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)LIKE(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)LIKE(v0.c0)) IN (((v0.c0) NOT BETWEEN ('芏J%') AND (v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((vt1.c0 COLLATE RTRIM)LIKE(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END)) DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE ((((vt1.c0)LIKE(v0.c0)) IN (((v0.c0) NOT BETWEEN ('芏J%') AND (v0.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)LIKE(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END)) DESC;
SELECT * FROM rt1, vt0, v0, vt1 WHERE (MIN(((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)), rt1.c0, ((rt1.c2)OR(rt1.c0)), vt1.c0, v0.c0, CAST('-693832052' AS REAL))) ORDER BY LOWER(DISTINCT ((rt1.c2) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)), rt1.c0, ((rt1.c2)OR(rt1.c0)), vt1.c0, v0.c0, CAST('-693832052' AS REAL))) IS TRUE)  as count FROM rt1, vt0, v0, vt1 ORDER BY LOWER(DISTINCT ((rt1.c2) IS TRUE))  NULLS LAST);
SELECT * FROM rt1, vt0, v0, vt1 WHERE (MIN(((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)), rt1.c0, ((rt1.c2)OR(rt1.c0)), vt1.c0, v0.c0, CAST('-693832052' AS REAL))) ORDER BY LOWER(DISTINCT ((rt1.c2) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)), rt1.c0, ((rt1.c2)OR(rt1.c0)), vt1.c0, v0.c0, CAST('-693832052' AS REAL))) IS TRUE)  as count FROM rt1, vt0, v0, vt1 ORDER BY LOWER(DISTINCT ((rt1.c2) IS TRUE))  NULLS LAST);
SELECT * FROM rt1, vt0, v0, vt1 WHERE (MIN(((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)), rt1.c0, ((rt1.c2)OR(rt1.c0)), vt1.c0, v0.c0, CAST('-693832052' AS REAL))) ORDER BY LOWER(DISTINCT ((rt1.c2) IS TRUE))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((+ (((x'')OR(rt1.c2))))) ORDER BY ((((((v0.c0))<((v0.c0)))))>=((((rt1.c2) BETWEEN (0X5a305aa2) AND (rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((x'')OR(rt1.c2))))) IS TRUE)  as count FROM rt1, v0 NOT INDEXED ORDER BY ((((((v0.c0))<((v0.c0)))))>=((((rt1.c2) BETWEEN (0X5a305aa2) AND (rt1.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((+ (((x'')OR(rt1.c2))))) ORDER BY ((((((v0.c0))<((v0.c0)))))>=((((rt1.c2) BETWEEN (0X5a305aa2) AND (rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((x'')OR(rt1.c2))))) IS TRUE)  as count FROM rt1, v0 NOT INDEXED ORDER BY ((((((v0.c0))<((v0.c0)))))>=((((rt1.c2) BETWEEN (0X5a305aa2) AND (rt1.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((+ (((x'')OR(rt1.c2))))) ORDER BY ((((((v0.c0))<((v0.c0)))))>=((((rt1.c2) BETWEEN (0X5a305aa2) AND (rt1.c2))))) DESC;
SELECT * FROM v0 CROSS JOIN vt1 ON vt1.c0 WHERE (CASE (NOT (v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END) IS TRUE)  as count FROM v0 NOT INDEXED CROSS JOIN vt1 ON vt1.c0);
SELECT * FROM v0 CROSS JOIN vt1 ON vt1.c0 WHERE (CASE (NOT (v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END) IS TRUE)  as count FROM v0 NOT INDEXED CROSS JOIN vt1 ON vt1.c0);
SELECT * FROM v0 CROSS JOIN vt1 ON vt1.c0 WHERE (CASE (NOT (v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END);
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON NULLIF(rt1.c0, rt1.c2 COLLATE NOCASE) WHERE (CAST(rt1.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS INTEGER)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON NULLIF(rt1.c0, rt1.c2 COLLATE NOCASE));
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON NULLIF(rt1.c0, rt1.c2 COLLATE NOCASE) WHERE (CAST(rt1.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS INTEGER)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON NULLIF(rt1.c0, rt1.c2 COLLATE NOCASE));
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON NULLIF(rt1.c0, rt1.c2 COLLATE NOCASE) WHERE (CAST(rt1.c1 AS INTEGER));
SELECT ALL * FROM rt1, v0 WHERE ((((((NULL IN (rt1.c0)))OR(0.7690111453589649)))AND(CAST(v0.c0 AS NUMERIC)))) ORDER BY (((rt1.c1 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((((NULL IN (rt1.c0)))OR(0.7690111453589649)))AND(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, v0 ORDER BY (((rt1.c1 IN ())) IS FALSE));
SELECT ALL * FROM rt1, v0 WHERE ((((((NULL IN (rt1.c0)))OR(0.7690111453589649)))AND(CAST(v0.c0 AS NUMERIC)))) ORDER BY (((rt1.c1 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((((NULL IN (rt1.c0)))OR(0.7690111453589649)))AND(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, v0 ORDER BY (((rt1.c1 IN ())) IS FALSE));
SELECT ALL * FROM rt1, v0 WHERE ((((((NULL IN (rt1.c0)))OR(0.7690111453589649)))AND(CAST(v0.c0 AS NUMERIC)))) ORDER BY (((rt1.c1 IN ())) IS FALSE);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, v0 WHERE (((0.3690397338976603) BETWEEN ((((rt1.c1))<>((rt1.c0)))) AND (((rt1.c2)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.3690397338976603) BETWEEN ((((rt1.c1))!=((rt1.c0)))) AND (((rt1.c2)*(v0.c0))))) IS TRUE)  as count FROM rt1, vt1, vt0, v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, v0 WHERE (((0.3690397338976603) BETWEEN ((((rt1.c1))<>((rt1.c0)))) AND (((rt1.c2)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.3690397338976603) BETWEEN ((((rt1.c1))!=((rt1.c0)))) AND (((rt1.c2)*(v0.c0))))) IS TRUE)  as count FROM rt1, vt1, vt0, v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, v0 WHERE (((0.3690397338976603) BETWEEN ((((rt1.c1))<>((rt1.c0)))) AND (((rt1.c2)*(v0.c0)))));
SELECT COUNT(*) FROM v0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) NOT NULL)) ORDER BY (((v0.c0)IS(v0.c0)) IN (TOTAL_CHANGES())) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt1 ORDER BY (((v0.c0)IS(v0.c0)) IN (TOTAL_CHANGES())) ASC);
SELECT COUNT(*) FROM v0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) NOT NULL)) ORDER BY (((v0.c0)IS(v0.c0)) IN (TOTAL_CHANGES())) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt1 ORDER BY (((v0.c0)IS(v0.c0)) IN (TOTAL_CHANGES())) ASC);
SELECT COUNT(*) FROM v0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) NOT NULL)) ORDER BY (((v0.c0)IS(v0.c0)) IN (TOTAL_CHANGES())) ASC;
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC));
SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c0)AND(v0.c0)))AND(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)AND(v0.c0)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c0)AND(v0.c0)))AND(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)AND(v0.c0)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c0)AND(v0.c0)))AND(v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c0) ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c1)GLOB(rt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c1)GLOB(rt1.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c0) ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c1)GLOB(rt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c1)GLOB(rt1.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c0) ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c1)GLOB(rt1.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE (rt1.c2) ORDER BY (~ (((v0.c0)AND(rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt0, vt1, v0 ORDER BY (~ (((v0.c0)AND(rt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE (rt1.c2) ORDER BY (~ (((v0.c0)AND(rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt0, vt1, v0 ORDER BY (~ (((v0.c0)AND(rt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, vt1, v0 WHERE (rt1.c2) ORDER BY (~ (((v0.c0)AND(rt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (0.811263161530081);
SELECT SUM(count) FROM (SELECT ((0.811263161530081) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (0.811263161530081);
SELECT SUM(count) FROM (SELECT ((0.811263161530081) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (0.811263161530081);
SELECT ALL * FROM v0, vt0, rt1, vt1 WHERE (CASE CASE WHEN '' THEN vt1.c0 END  WHEN (x'' IN ()) THEN ((vt0.c0)GLOB(rt1.c1)) WHEN ((rt1.c1) NOT NULL) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)OR(v0.c0)) THEN ((((vt1.c0)AND(v0.c0)))OR(vt0.c0)) ELSE CASE WHEN x'3791' THEN rt1.c1 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN '' THEN vt1.c0 END  WHEN (x'' IN ()) THEN ((vt0.c0)GLOB(rt1.c1)) WHEN ((rt1.c1) NOT NULL) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)OR(v0.c0)) THEN ((((vt1.c0)AND(v0.c0)))OR(vt0.c0)) ELSE CASE WHEN x'3791' THEN rt1.c1 ELSE vt0.c0 END END) IS TRUE)  as count FROM v0, vt0, rt1, vt1);
SELECT ALL * FROM v0, vt0, rt1, vt1 WHERE (CASE CASE WHEN '' THEN vt1.c0 END  WHEN (x'' IN ()) THEN ((vt0.c0)GLOB(rt1.c1)) WHEN ((rt1.c1) NOT NULL) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)OR(v0.c0)) THEN ((((vt1.c0)AND(v0.c0)))OR(vt0.c0)) ELSE CASE WHEN x'3791' THEN rt1.c1 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN '' THEN vt1.c0 END  WHEN (x'' IN ()) THEN ((vt0.c0)GLOB(rt1.c1)) WHEN ((rt1.c1) NOT NULL) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)OR(v0.c0)) THEN ((((vt1.c0)AND(v0.c0)))OR(vt0.c0)) ELSE CASE WHEN x'3791' THEN rt1.c1 ELSE vt0.c0 END END) IS TRUE)  as count FROM v0, vt0, rt1, vt1);
SELECT ALL * FROM v0, vt0, rt1, vt1 WHERE (CASE CASE WHEN '' THEN vt1.c0 END  WHEN (x'' IN ()) THEN ((vt0.c0)GLOB(rt1.c1)) WHEN ((rt1.c1) NOT NULL) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)OR(v0.c0)) THEN ((((vt1.c0)AND(v0.c0)))OR(vt0.c0)) ELSE CASE WHEN x'3791' THEN rt1.c1 ELSE vt0.c0 END END);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((((NOT (vt1.c0)), (vt1.c0 IN ()), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))>((CAST(vt1.c0 AS TEXT), vt1.c0 COLLATE NOCASE, NULL)))) ORDER BY (+ (0.4100602203153051)) ASC, CAST('-225284489' AS INTEGER) ASC, (((+ (vt1.c0)))OR(((vt1.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c0)), (vt1.c0 IN ()), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))>((CAST(vt1.c0 AS TEXT), vt1.c0 COLLATE NOCASE, NULL)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (+ (0.4100602203153051)) ASC, CAST('-225284489' AS INTEGER) ASC, (((+ (vt1.c0)))OR(((vt1.c0) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((((NOT (vt1.c0)), (vt1.c0 IN ()), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))>((CAST(vt1.c0 AS TEXT), vt1.c0 COLLATE NOCASE, NULL)))) ORDER BY (+ (0.4100602203153051)) ASC, CAST('-225284489' AS INTEGER) ASC, (((+ (vt1.c0)))OR(((vt1.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c0)), (vt1.c0 IN ()), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))>((CAST(vt1.c0 AS TEXT), vt1.c0 COLLATE NOCASE, NULL)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (+ (0.4100602203153051)) ASC, CAST('-225284489' AS INTEGER) ASC, (((+ (vt1.c0)))OR(((vt1.c0) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((((NOT (vt1.c0)), (vt1.c0 IN ()), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))>((CAST(vt1.c0 AS TEXT), vt1.c0 COLLATE NOCASE, NULL)))) ORDER BY (+ (0.4100602203153051)) ASC, CAST('-225284489' AS INTEGER) ASC, (((+ (vt1.c0)))OR(((vt1.c0) ISNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((- (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((- (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((- (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0, rt1 WHERE (NULL) ORDER BY 0.2755303425437329;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt1 ORDER BY 0.2755303425437329);
SELECT ALL * FROM v0, rt1 WHERE (NULL) ORDER BY 0.2755303425437329;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt1 ORDER BY 0.2755303425437329);
SELECT ALL * FROM v0, rt1 WHERE (NULL) ORDER BY 0.2755303425437329;
SELECT ALL COUNT(*) FROM v0, vt0, vt1 INNER JOIN rt1 ON 0X68f6ceb0 WHERE (((((vt1.c0)+(rt1.c1))) BETWEEN (json_array(vt1.c0, rt1.c2, v0.c0, vt0.c0)) AND (((rt1.c2)LIKE(v0.c0))))) ORDER BY (CASE WHEN rt1.c0 THEN vt1.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(rt1.c1))) BETWEEN (json_array(vt1.c0, rt1.c2, v0.c0, vt0.c0)) AND (((rt1.c2)LIKE(v0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1 INNER JOIN rt1 ON 0X68f6ceb0 ORDER BY (CASE WHEN rt1.c0 THEN vt1.c0 END IN ()));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 INNER JOIN rt1 ON 0X68f6ceb0 WHERE (((((vt1.c0)+(rt1.c1))) BETWEEN (json_array(vt1.c0, rt1.c2, v0.c0, vt0.c0)) AND (((rt1.c2)LIKE(v0.c0))))) ORDER BY (CASE WHEN rt1.c0 THEN vt1.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(rt1.c1))) BETWEEN (json_array(vt1.c0, rt1.c2, v0.c0, vt0.c0)) AND (((rt1.c2)LIKE(v0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1 INNER JOIN rt1 ON 0X68f6ceb0 ORDER BY (CASE WHEN rt1.c0 THEN vt1.c0 END IN ()));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 INNER JOIN rt1 ON 0X68f6ceb0 WHERE (((((vt1.c0)+(rt1.c1))) BETWEEN (json_array(vt1.c0, rt1.c2, v0.c0, vt0.c0)) AND (((rt1.c2)LIKE(v0.c0))))) ORDER BY (CASE WHEN rt1.c0 THEN vt1.c0 END IN ());
SELECT ALL * FROM v0, vt0, vt1, rt1 WHERE ((- ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c1 IN ())))) IS TRUE)  as count FROM v0, vt0, vt1, rt1);
SELECT ALL * FROM v0, vt0, vt1, rt1 WHERE ((- ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c1 IN ())))) IS TRUE)  as count FROM v0, vt0, vt1, rt1);
SELECT ALL * FROM v0, vt0, vt1, rt1 WHERE ((- ((rt1.c1 IN ()))));
SELECT ALL * FROM rt1, vt0, vt1 FULL OUTER JOIN v0 ON ((rt1.c2 IN ()) IN ()) WHERE ((((rt1.c2)/(vt0.c0)) IN ())) ORDER BY CASE WHEN 0.5305571306773128 THEN CAST('915474232' AS TEXT) WHEN ((((rt1.c2)AND(vt0.c0)))AND(rt1.c1)) THEN vt0.c0 WHEN (((v0.c0))>=((vt1.c0))) THEN (rt1.c1 IN (rt1.c0, v0.c0)) WHEN vt1.c0 COLLATE RTRIM THEN ((((((((rt1.c1)OR(rt1.c2)))OR('')))OR(vt1.c0)))AND(rt1.c1)) WHEN '-2087736112' THEN 0.7359849816064964 ELSE ((((rt1.c1)OR(rt1.c2)))AND(v0.c0)) END ASC, ((rt1.c2)LIKE(rt1.c0 COLLATE BINARY)) ASC  NULLS FIRST, (v0.c0 IN (((vt0.c0) NOT NULL), vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)/(vt0.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0, vt1 FULL OUTER JOIN v0 ON ((rt1.c2 IN ()) IN ()) ORDER BY CASE WHEN 0.5305571306773128 THEN CAST('915474232' AS TEXT) WHEN ((((rt1.c2)AND(vt0.c0)))AND(rt1.c1)) THEN vt0.c0 WHEN (((v0.c0))>=((vt1.c0))) THEN (rt1.c1 IN (rt1.c0, v0.c0)) WHEN vt1.c0 COLLATE RTRIM THEN ((((((((rt1.c1)OR(rt1.c2)))OR('')))OR(vt1.c0)))AND(rt1.c1)) WHEN '-2087736112' THEN 0.7359849816064964 ELSE ((((rt1.c1)OR(rt1.c2)))AND(v0.c0)) END ASC, ((rt1.c2)LIKE(rt1.c0 COLLATE BINARY)) ASC  NULLS FIRST, (v0.c0 IN (((vt0.c0) NOT NULL), vt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt0, vt1 FULL OUTER JOIN v0 ON ((rt1.c2 IN ()) IN ()) WHERE ((((rt1.c2)/(vt0.c0)) IN ())) ORDER BY CASE WHEN 0.5305571306773128 THEN CAST('915474232' AS TEXT) WHEN ((((rt1.c2)AND(vt0.c0)))AND(rt1.c1)) THEN vt0.c0 WHEN (((v0.c0))>=((vt1.c0))) THEN (rt1.c1 IN (rt1.c0, v0.c0)) WHEN vt1.c0 COLLATE RTRIM THEN ((((((((rt1.c1)OR(rt1.c2)))OR('')))OR(vt1.c0)))AND(rt1.c1)) WHEN '-2087736112' THEN 0.7359849816064964 ELSE ((((rt1.c1)OR(rt1.c2)))AND(v0.c0)) END ASC, ((rt1.c2)LIKE(rt1.c0 COLLATE BINARY)) ASC  NULLS FIRST, (v0.c0 IN (((vt0.c0) NOT NULL), vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)/(vt0.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0, vt1 FULL OUTER JOIN v0 ON ((rt1.c2 IN ()) IN ()) ORDER BY CASE WHEN 0.5305571306773128 THEN CAST('915474232' AS TEXT) WHEN ((((rt1.c2)AND(vt0.c0)))AND(rt1.c1)) THEN vt0.c0 WHEN (((v0.c0))>=((vt1.c0))) THEN (rt1.c1 IN (rt1.c0, v0.c0)) WHEN vt1.c0 COLLATE RTRIM THEN ((((((((rt1.c1)OR(rt1.c2)))OR('')))OR(vt1.c0)))AND(rt1.c1)) WHEN '-2087736112' THEN 0.7359849816064964 ELSE ((((rt1.c1)OR(rt1.c2)))AND(v0.c0)) END ASC, ((rt1.c2)LIKE(rt1.c0 COLLATE BINARY)) ASC  NULLS FIRST, (v0.c0 IN (((vt0.c0) NOT NULL), vt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt0, vt1 FULL OUTER JOIN v0 ON ((rt1.c2 IN ()) IN ()) WHERE ((((rt1.c2)/(vt0.c0)) IN ())) ORDER BY CASE WHEN 0.5305571306773128 THEN CAST('915474232' AS TEXT) WHEN ((((rt1.c2)AND(vt0.c0)))AND(rt1.c1)) THEN vt0.c0 WHEN (((v0.c0))>=((vt1.c0))) THEN (rt1.c1 IN (rt1.c0, v0.c0)) WHEN vt1.c0 COLLATE RTRIM THEN ((((((((rt1.c1)OR(rt1.c2)))OR('')))OR(vt1.c0)))AND(rt1.c1)) WHEN '-2087736112' THEN 0.7359849816064964 ELSE ((((rt1.c1)OR(rt1.c2)))AND(v0.c0)) END ASC, ((rt1.c2)LIKE(rt1.c0 COLLATE BINARY)) ASC  NULLS FIRST, (v0.c0 IN (((vt0.c0) NOT NULL), vt0.c0)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON ((NULL)AND(v0.c0 COLLATE RTRIM)) WHERE ((((v0.c0, rt1.c0, rt1.c1)) BETWEEN ((((0.9817326553983271)+(v0.c0)), (((rt1.c2))<(('385268129'))), CAST(rt1.c0 AS BLOB))) AND ((CAST(rt1.c2 AS TEXT), 0.2776084621353384, rt1.c0 COLLATE BINARY)))) ORDER BY ((((((rt1.c0)&(rt1.c0)))AND(CAST(v0.c0 AS TEXT))))OR(((rt1.c1) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt1.c0, rt1.c1)) BETWEEN ((((0.9817326553983271)+(v0.c0)), (((rt1.c2))<(('385268129'))), CAST(rt1.c0 AS BLOB))) AND ((CAST(rt1.c2 AS TEXT), 0.2776084621353384, rt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((NULL)AND(v0.c0 COLLATE RTRIM)) ORDER BY ((((((rt1.c0)&(rt1.c0)))AND(CAST(v0.c0 AS TEXT))))OR(((rt1.c1) IS FALSE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON ((NULL)AND(v0.c0 COLLATE RTRIM)) WHERE ((((v0.c0, rt1.c0, rt1.c1)) BETWEEN ((((0.9817326553983271)+(v0.c0)), (((rt1.c2))<(('385268129'))), CAST(rt1.c0 AS BLOB))) AND ((CAST(rt1.c2 AS TEXT), 0.2776084621353384, rt1.c0 COLLATE BINARY)))) ORDER BY ((((((rt1.c0)&(rt1.c0)))AND(CAST(v0.c0 AS TEXT))))OR(((rt1.c1) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt1.c0, rt1.c1)) BETWEEN ((((0.9817326553983271)+(v0.c0)), (((rt1.c2))<(('385268129'))), CAST(rt1.c0 AS BLOB))) AND ((CAST(rt1.c2 AS TEXT), 0.2776084621353384, rt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((NULL)AND(v0.c0 COLLATE RTRIM)) ORDER BY ((((((rt1.c0)&(rt1.c0)))AND(CAST(v0.c0 AS TEXT))))OR(((rt1.c1) IS FALSE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON ((NULL)AND(v0.c0 COLLATE RTRIM)) WHERE ((((v0.c0, rt1.c0, rt1.c1)) BETWEEN ((((0.9817326553983271)+(v0.c0)), (((rt1.c2))<(('385268129'))), CAST(rt1.c0 AS BLOB))) AND ((CAST(rt1.c2 AS TEXT), 0.2776084621353384, rt1.c0 COLLATE BINARY)))) ORDER BY ((((((rt1.c0)&(rt1.c0)))AND(CAST(v0.c0 AS TEXT))))OR(((rt1.c1) IS FALSE))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) ORDER BY ((v0.c0)<(''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)<(''))  NULLS FIRST);
SELECT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) ORDER BY ((v0.c0)<(''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)<(''))  NULLS FIRST);
SELECT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) ORDER BY ((v0.c0)<(''))  NULLS FIRST;
SELECT * FROM vt1, rt1, v0, vt0 WHERE (LIKELIHOOD(TRIM(v0.c0), 0.6266071344144407)) ORDER BY (NOT ((vt0.c0 IN ()))), ((((((((CASE rt1.c2  WHEN 0xffffffffabf79bde THEN vt1.c0 ELSE v0.c0 END)AND(((rt1.c2) BETWEEN (vt0.c0) AND (0.25482282768758424)))))AND(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)))))OR(x'')))AND((rt1.c2 IN ()))) DESC  NULLS FIRST, json_type(v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(TRIM(v0.c0), 0.6266071344144407)) IS TRUE)  as count FROM vt1, rt1, v0, vt0 ORDER BY (NOT ((vt0.c0 IN ()))), ((((((((CASE rt1.c2  WHEN 0Xffffffffabf79bde THEN vt1.c0 ELSE v0.c0 END)AND(((rt1.c2) BETWEEN (vt0.c0) AND (0.25482282768758424)))))AND(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)))))OR(x'')))AND((rt1.c2 IN ()))) DESC  NULLS FIRST, json_type(v0.c0));
SELECT * FROM vt1, rt1, v0, vt0 WHERE (LIKELIHOOD(TRIM(v0.c0), 0.6266071344144407)) ORDER BY (NOT ((vt0.c0 IN ()))), ((((((((CASE rt1.c2  WHEN 0xffffffffabf79bde THEN vt1.c0 ELSE v0.c0 END)AND(((rt1.c2) BETWEEN (vt0.c0) AND (0.25482282768758424)))))AND(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)))))OR(x'')))AND((rt1.c2 IN ()))) DESC  NULLS FIRST, json_type(v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(TRIM(v0.c0), 0.6266071344144407)) IS TRUE)  as count FROM vt1, rt1, v0, vt0 ORDER BY (NOT ((vt0.c0 IN ()))), ((((((((CASE rt1.c2  WHEN 0Xffffffffabf79bde THEN vt1.c0 ELSE v0.c0 END)AND(((rt1.c2) BETWEEN (vt0.c0) AND (0.25482282768758424)))))AND(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)))))OR(x'')))AND((rt1.c2 IN ()))) DESC  NULLS FIRST, json_type(v0.c0));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((CASE WHEN 0.7180476848491191 THEN rt1.c1 END) BETWEEN (rt1.c0) AND (json_object(rt1.c1, rt1.c1, rt1.c0, v0.c0, rt1.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.7180476848491191 THEN rt1.c1 END) BETWEEN (rt1.c0) AND (json_object(rt1.c1, rt1.c1, rt1.c0, v0.c0, rt1.c0, rt1.c1)))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((CASE WHEN 0.7180476848491191 THEN rt1.c1 END) BETWEEN (rt1.c0) AND (json_object(rt1.c1, rt1.c1, rt1.c0, v0.c0, rt1.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.7180476848491191 THEN rt1.c1 END) BETWEEN (rt1.c0) AND (json_object(rt1.c1, rt1.c1, rt1.c0, v0.c0, rt1.c0, rt1.c1)))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt0.c0)))!=(CAST(vt1.c0 AS NUMERIC)))) ORDER BY x'', INSTR(vt0.c0 COLLATE RTRIM, NULLIF(vt1.c0, vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))!=(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'', INSTR(vt0.c0 COLLATE RTRIM, NULLIF(vt1.c0, vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt0.c0)))!=(CAST(vt1.c0 AS NUMERIC)))) ORDER BY x'', INSTR(vt0.c0 COLLATE RTRIM, NULLIF(vt1.c0, vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))!=(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'', INSTR(vt0.c0 COLLATE RTRIM, NULLIF(vt1.c0, vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt0.c0)))!=(CAST(vt1.c0 AS NUMERIC)))) ORDER BY x'', INSTR(vt0.c0 COLLATE RTRIM, NULLIF(vt1.c0, vt0.c0)) DESC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON ((((v0.c0)<(vt1.c0)))=(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((((vt0.c0) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON ((((v0.c0)<(vt1.c0)))=(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON ((((v0.c0)<(vt1.c0)))=(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((((vt0.c0) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON ((((v0.c0)<(vt1.c0)))=(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON ((((v0.c0)<(vt1.c0)))=(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((((vt0.c0) NOTNULL)) NOTNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((0.3579953867777709)OR(rt1.c0)))AND(rt1.c1)) IN ())) ORDER BY (((rt1.c0)) NOT BETWEEN ((0.3355676448968682)) AND ((((rt1.c0) NOT BETWEEN (rt1.c1) AND ('-1074402307'))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((0.3579953867777709)OR(rt1.c0)))AND(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0)) NOT BETWEEN ((0.3355676448968682)) AND ((((rt1.c0) NOT BETWEEN (rt1.c1) AND ('-1074402307'))))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((0.3579953867777709)OR(rt1.c0)))AND(rt1.c1)) IN ())) ORDER BY (((rt1.c0)) NOT BETWEEN ((0.3355676448968682)) AND ((((rt1.c0) NOT BETWEEN (rt1.c1) AND ('-1074402307'))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((0.3579953867777709)OR(rt1.c0)))AND(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0)) NOT BETWEEN ((0.3355676448968682)) AND ((((rt1.c0) NOT BETWEEN (rt1.c1) AND ('-1074402307'))))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((0.3579953867777709)OR(rt1.c0)))AND(rt1.c1)) IN ())) ORDER BY (((rt1.c0)) NOT BETWEEN ((0.3355676448968682)) AND ((((rt1.c0) NOT BETWEEN (rt1.c1) AND ('-1074402307'))))) ASC;
SELECT ALL * FROM vt1, rt1, v0 WHERE (((((rt1.c0)<(rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM vt1, rt1, v0);
SELECT ALL * FROM vt1, rt1, v0 WHERE (((((rt1.c0)<(rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM vt1, rt1, v0);
SELECT ALL * FROM vt1, rt1, v0 WHERE (((((rt1.c0)<(rt1.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS BLOB)) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS BLOB)) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS BLOB)) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 CROSS JOIN v0 ON rt1.c1 WHERE (CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND ('1e500')) THEN (rt1.c2 IN ()) ELSE rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND ('1e500')) THEN (rt1.c2 IN ()) ELSE rt1.c1 END) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN v0 ON rt1.c1);
SELECT ALL * FROM vt0, rt1 CROSS JOIN v0 ON rt1.c1 WHERE (CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND ('1e500')) THEN (rt1.c2 IN ()) ELSE rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND ('1e500')) THEN (rt1.c2 IN ()) ELSE rt1.c1 END) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN v0 ON rt1.c1);
SELECT ALL * FROM vt0, rt1 CROSS JOIN v0 ON rt1.c1 WHERE (CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND ('1e500')) THEN (rt1.c2 IN ()) ELSE rt1.c1 END);
SELECT * FROM v0, rt1 FULL OUTER JOIN vt1 ON ((((rt1.c2)<>(vt0.c0))) ISNULL) INNER JOIN vt0 ON (((((rt1.c2)IS NOT(vt0.c0))))<>((0X4945f65c COLLATE BINARY))) WHERE ((+ (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))OR(v0.c0)))OR(rt1.c2))))) ORDER BY (((v0.c0, rt1.c1, rt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c0 END, v0.c0 COLLATE BINARY, ((((v0.c0)OR(x'')))OR(rt1.c0)))) AND ((CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END, (((1.162527479E9))>=((v0.c0))), (((vt1.c0))<>((0x31beb51b)))))) ASC  NULLS FIRST, ((((vt0.c0)>(v0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))OR(v0.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN vt1 ON ((((rt1.c2)<>(vt0.c0))) ISNULL) INNER JOIN vt0 ON (((((rt1.c2)IS NOT(vt0.c0))))!=((0x4945f65c COLLATE BINARY))) ORDER BY (((v0.c0, rt1.c1, rt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c0 END, v0.c0 COLLATE BINARY, ((((v0.c0)OR(x'')))OR(rt1.c0)))) AND ((CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END, (((1.162527479E9))>=((v0.c0))), (((vt1.c0))!=((0x31beb51b)))))) ASC  NULLS FIRST, ((((vt0.c0)>(v0.c0))) ISNULL));
SELECT * FROM v0, rt1 FULL OUTER JOIN vt1 ON ((((rt1.c2)<>(vt0.c0))) ISNULL) INNER JOIN vt0 ON (((((rt1.c2)IS NOT(vt0.c0))))<>((0X4945f65c COLLATE BINARY))) WHERE ((+ (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))OR(v0.c0)))OR(rt1.c2))))) ORDER BY (((v0.c0, rt1.c1, rt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c0 END, v0.c0 COLLATE BINARY, ((((v0.c0)OR(x'')))OR(rt1.c0)))) AND ((CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END, (((1.162527479E9))>=((v0.c0))), (((vt1.c0))<>((0x31beb51b)))))) ASC  NULLS FIRST, ((((vt0.c0)>(v0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))OR(v0.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN vt1 ON ((((rt1.c2)<>(vt0.c0))) ISNULL) INNER JOIN vt0 ON (((((rt1.c2)IS NOT(vt0.c0))))!=((0x4945f65c COLLATE BINARY))) ORDER BY (((v0.c0, rt1.c1, rt1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c0 END, v0.c0 COLLATE BINARY, ((((v0.c0)OR(x'')))OR(rt1.c0)))) AND ((CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END, (((1.162527479E9))>=((v0.c0))), (((vt1.c0))!=((0x31beb51b)))))) ASC  NULLS FIRST, ((((vt0.c0)>(v0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((v0.c0 IN (CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((v0.c0 IN (CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((v0.c0 IN (CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((0.5354563648325964)IS(rt1.c1)) THEN ((v0.c0)<=(rt1.c0)) ELSE (- (rt1.c2)) END INNER JOIN vt0 ON CASE WHEN rt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN v0.c0 ELSE NULL END COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((CAST(rt1.c2 AS REAL))<(vt1.c0)) WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((v0.c0)IS NOT(rt1.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((0.5354563648325964)IS(rt1.c1)) THEN ((v0.c0)<=(rt1.c0)) ELSE (- (rt1.c2)) END INNER JOIN vt0 ON CASE WHEN rt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN v0.c0 ELSE NULL END COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((CAST(rt1.c2 AS REAL))<(vt1.c0)) ORDER BY ((v0.c0)IS NOT(rt1.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((0.5354563648325964)IS(rt1.c1)) THEN ((v0.c0)<=(rt1.c0)) ELSE (- (rt1.c2)) END INNER JOIN vt0 ON CASE WHEN rt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN v0.c0 ELSE NULL END COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((CAST(rt1.c2 AS REAL))<(vt1.c0)) WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((v0.c0)IS NOT(rt1.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON CASE WHEN ((0.5354563648325964)IS(rt1.c1)) THEN ((v0.c0)<=(rt1.c0)) ELSE (- (rt1.c2)) END INNER JOIN vt0 ON CASE WHEN rt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN v0.c0 ELSE NULL END COLLATE BINARY RIGHT OUTER JOIN vt1 ON ((CAST(rt1.c2 AS REAL))<(vt1.c0)) ORDER BY ((v0.c0)IS NOT(rt1.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c0)GLOB(rt1.c2)))|(0.5814466731498399))) ORDER BY ((rt1.c2)<>((rt1.c1 IN (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)GLOB(rt1.c2)))|(0.5814466731498399))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((rt1.c2)<>((rt1.c1 IN (vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c0)GLOB(rt1.c2)))|(0.5814466731498399))) ORDER BY ((rt1.c2)<>((rt1.c1 IN (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)GLOB(rt1.c2)))|(0.5814466731498399))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((rt1.c2)<>((rt1.c1 IN (vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c0)GLOB(rt1.c2)))|(0.5814466731498399))) ORDER BY ((rt1.c2)<>((rt1.c1 IN (vt1.c0))))  NULLS LAST;
SELECT * FROM vt0, v0, vt1 WHERE (HEX(DISTINCT v0.c0 COLLATE NOCASE)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS BLOB)  NULLS FIRST);
SELECT * FROM vt0, v0, vt1 WHERE (HEX(DISTINCT v0.c0 COLLATE NOCASE)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS BLOB)  NULLS FIRST);
SELECT * FROM vt0, v0, vt1 WHERE (HEX(DISTINCT v0.c0 COLLATE NOCASE)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1))) BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN (rt1.c1))) BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1))) BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN (rt1.c1))) BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1))) BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT * FROM v0, rt1 WHERE (((NULL COLLATE RTRIM) BETWEEN (((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c1))) AND (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM) BETWEEN (((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c1))) AND (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((NULL COLLATE RTRIM) BETWEEN (((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c1))) AND (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM) BETWEEN (((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c1))) AND (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((NULL COLLATE RTRIM) BETWEEN (((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c1))) AND (((v0.c0) NOTNULL))));
SELECT COUNT(*) FROM rt1, vt1, v0, vt0 WHERE (((TYPEOF(rt1.c2)) NOT BETWEEN (((vt1.c0)/(rt1.c0))) AND (((((((((rt1.c1)OR(-1639418068)))OR('p.')))OR(rt1.c0)))OR(v0.c0))))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt1.c2)) NOT BETWEEN (((vt1.c0)/(rt1.c0))) AND (((((((((rt1.c1)OR(-1639418068)))OR('p.')))OR(rt1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM rt1, vt1, v0, vt0 ORDER BY rt1.c1);
SELECT COUNT(*) FROM rt1, vt1, v0, vt0 WHERE (((TYPEOF(rt1.c2)) NOT BETWEEN (((vt1.c0)/(rt1.c0))) AND (((((((((rt1.c1)OR(-1639418068)))OR('p.')))OR(rt1.c0)))OR(v0.c0))))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt1.c2)) NOT BETWEEN (((vt1.c0)/(rt1.c0))) AND (((((((((rt1.c1)OR(-1639418068)))OR('p.')))OR(rt1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM rt1, vt1, v0, vt0 ORDER BY rt1.c1);
SELECT COUNT(*) FROM rt1, vt1, v0, vt0 WHERE (((TYPEOF(rt1.c2)) NOT BETWEEN (((vt1.c0)/(rt1.c0))) AND (((((((((rt1.c1)OR(-1639418068)))OR('p.')))OR(rt1.c0)))OR(v0.c0))))) ORDER BY rt1.c1;
SELECT * FROM vt1, vt0, v0, rt1 WHERE (LIKELY(((rt1.c2) NOT NULL))) ORDER BY 982170571, ((((vt1.c0) IS FALSE))+((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))) DESC, '{^\nW1' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt1.c2) NOT NULL))) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY 982170571, ((((vt1.c0) IS FALSE))+((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))) DESC, '{^\nW1' COLLATE NOCASE DESC);
SELECT * FROM vt1, vt0, v0, rt1 WHERE (LIKELY(((rt1.c2) NOT NULL))) ORDER BY 982170571, ((((vt1.c0) IS FALSE))+((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))) DESC, '{^\nW1' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt1.c2) NOT NULL))) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY 982170571, ((((vt1.c0) IS FALSE))+((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))) DESC, '{^\nW1' COLLATE NOCASE DESC);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC));
SELECT ALL * FROM rt1, v0 RIGHT OUTER JOIN vt1 ON ((rt1.c1 IN (rt1.c0, rt1.c2)) IN (CAST(rt1.c2 AS NUMERIC), (~ (rt1.c2)))) LEFT OUTER JOIN vt0 ON 1239969854 WHERE (0.649452102733335);
SELECT SUM(count) FROM (SELECT ((0.649452102733335) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN vt1 ON ((rt1.c1 IN (rt1.c0, rt1.c2)) IN (CAST(rt1.c2 AS NUMERIC), (~ (rt1.c2)))) LEFT OUTER JOIN vt0 ON 1239969854);
SELECT ALL * FROM rt1, v0 RIGHT OUTER JOIN vt1 ON ((rt1.c1 IN (rt1.c0, rt1.c2)) IN (CAST(rt1.c2 AS NUMERIC), (~ (rt1.c2)))) LEFT OUTER JOIN vt0 ON 1239969854 WHERE (0.649452102733335);
SELECT SUM(count) FROM (SELECT ((0.649452102733335) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN vt1 ON ((rt1.c1 IN (rt1.c0, rt1.c2)) IN (CAST(rt1.c2 AS NUMERIC), (~ (rt1.c2)))) LEFT OUTER JOIN vt0 ON 1239969854);
SELECT ALL * FROM rt1, v0 RIGHT OUTER JOIN vt1 ON ((rt1.c1 IN (rt1.c0, rt1.c2)) IN (CAST(rt1.c2 AS NUMERIC), (~ (rt1.c2)))) LEFT OUTER JOIN vt0 ON 1239969854 WHERE (0.649452102733335);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN TYPEOF(vt0.c0) THEN vt0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN TYPEOF(vt0.c0) THEN vt0.c0 END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN TYPEOF(vt0.c0) THEN vt0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN TYPEOF(vt0.c0) THEN vt0.c0 END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN TYPEOF(vt0.c0) THEN vt0.c0 END  NULLS LAST;
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON CAST(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END AS NUMERIC) INNER JOIN vt0 ON CASE ((v0.c0) NOTNULL)  WHEN ((vt0.c0)LIKE(rt1.c1)) THEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)) END CROSS JOIN rt1 ON ((((((v0.c0)AND(rt1.c1)))AND(rt1.c0)))=(ROUND(v0.c0, rt1.c2))) WHERE ((((v0.c0, v0.c0, rt1.c1)) BETWEEN ((CASE vt0.c0  WHEN rt1.c1 THEN vt1.c0 ELSE 0.011431624211254543 END, 0.09281698208731748, ((v0.c0) NOTNULL))) AND ((((((rt1.c0)OR(vt0.c0)))AND(vt0.c0)), CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c2)*(v0.c0)))))) ORDER BY ((((rt1.c0)OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))AND(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, CASE ((v0.c0)/(v0.c0))  WHEN 0.853974697353789 THEN v0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, rt1.c1)) BETWEEN ((CASE vt0.c0  WHEN rt1.c1 THEN vt1.c0 ELSE 0.011431624211254543 END, 0.09281698208731748, ((v0.c0) NOTNULL))) AND ((((((rt1.c0)OR(vt0.c0)))AND(vt0.c0)), CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c2)*(v0.c0)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON CAST(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END AS NUMERIC) INNER JOIN vt0 ON CASE ((v0.c0) NOTNULL)  WHEN ((vt0.c0)LIKE(rt1.c1)) THEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)) END CROSS JOIN rt1 ON ((((((v0.c0)AND(rt1.c1)))AND(rt1.c0)))==(ROUND(v0.c0, rt1.c2))) ORDER BY ((((rt1.c0)OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))AND(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, CASE ((v0.c0)/(v0.c0))  WHEN 0.853974697353789 THEN v0.c0 END);
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON CAST(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END AS NUMERIC) INNER JOIN vt0 ON CASE ((v0.c0) NOTNULL)  WHEN ((vt0.c0)LIKE(rt1.c1)) THEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)) END CROSS JOIN rt1 ON ((((((v0.c0)AND(rt1.c1)))AND(rt1.c0)))=(ROUND(v0.c0, rt1.c2))) WHERE ((((v0.c0, v0.c0, rt1.c1)) BETWEEN ((CASE vt0.c0  WHEN rt1.c1 THEN vt1.c0 ELSE 0.011431624211254543 END, 0.09281698208731748, ((v0.c0) NOTNULL))) AND ((((((rt1.c0)OR(vt0.c0)))AND(vt0.c0)), CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c2)*(v0.c0)))))) ORDER BY ((((rt1.c0)OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))AND(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, CASE ((v0.c0)/(v0.c0))  WHEN 0.853974697353789 THEN v0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, rt1.c1)) BETWEEN ((CASE vt0.c0  WHEN rt1.c1 THEN vt1.c0 ELSE 0.011431624211254543 END, 0.09281698208731748, ((v0.c0) NOTNULL))) AND ((((((rt1.c0)OR(vt0.c0)))AND(vt0.c0)), CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 END, ((rt1.c2)*(v0.c0)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON CAST(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END AS NUMERIC) INNER JOIN vt0 ON CASE ((v0.c0) NOTNULL)  WHEN ((vt0.c0)LIKE(rt1.c1)) THEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)) END CROSS JOIN rt1 ON ((((((v0.c0)AND(rt1.c1)))AND(rt1.c0)))==(ROUND(v0.c0, rt1.c2))) ORDER BY ((((rt1.c0)OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))AND(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, CASE ((v0.c0)/(v0.c0))  WHEN 0.853974697353789 THEN v0.c0 END);
SELECT * FROM rt1, v0, vt1 WHERE ((((((rt1.c1))>=((v0.c0))))<(((vt1.c0)-(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1))>=((v0.c0))))<(((vt1.c0)-(rt1.c2))))) IS TRUE)  as count FROM rt1, v0, vt1);
SELECT * FROM rt1, v0, vt1 WHERE ((((((rt1.c1))>=((v0.c0))))<(((vt1.c0)-(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1))>=((v0.c0))))<(((vt1.c0)-(rt1.c2))))) IS TRUE)  as count FROM rt1, v0, vt1);
SELECT * FROM rt1, v0, vt1 WHERE ((((((rt1.c1))>=((v0.c0))))<(((vt1.c0)-(rt1.c2)))));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)==(vt0.c0)))) AND ((((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0)==(vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)==(vt0.c0)))) AND ((((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0)==(vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)==(vt0.c0)))) AND ((((vt0.c0) NOT NULL)))));
SELECT * FROM vt1, v0, rt1, vt0 WHERE (((LOWER(rt1.c2))+(TYPEOF(DISTINCT v0.c0)))) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((rt1.c1) BETWEEN (0xffffffffeedb74a4) AND (vt1.c0)))), CASE ((rt1.c0) IS FALSE)  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN rt1.c2 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt1.c2))+(TYPEOF(DISTINCT v0.c0)))) IS TRUE)  as count FROM vt1, v0, rt1, vt0 ORDER BY ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((rt1.c1) BETWEEN (0xffffffffeedb74a4) AND (vt1.c0)))), CASE ((rt1.c0) IS FALSE)  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN rt1.c2 COLLATE RTRIM END);
SELECT * FROM vt1, v0, rt1, vt0 WHERE (((LOWER(rt1.c2))+(TYPEOF(DISTINCT v0.c0)))) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((rt1.c1) BETWEEN (0xffffffffeedb74a4) AND (vt1.c0)))), CASE ((rt1.c0) IS FALSE)  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN rt1.c2 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt1.c2))+(TYPEOF(DISTINCT v0.c0)))) IS TRUE)  as count FROM vt1, v0, rt1, vt0 ORDER BY ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((rt1.c1) BETWEEN (0xffffffffeedb74a4) AND (vt1.c0)))), CASE ((rt1.c0) IS FALSE)  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN rt1.c2 COLLATE RTRIM END);
SELECT * FROM vt1, v0, rt1, vt0 WHERE (((LOWER(rt1.c2))+(TYPEOF(DISTINCT v0.c0)))) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((rt1.c1) BETWEEN (0xffffffffeedb74a4) AND (vt1.c0)))), CASE ((rt1.c0) IS FALSE)  WHEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN rt1.c2 COLLATE RTRIM END;
SELECT * FROM vt1, rt1, vt0 WHERE (((LIKELY(DISTINCT vt1.c0))*(RTRIM(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt1.c0))*(RTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT * FROM vt1, rt1, vt0 WHERE (((LIKELY(DISTINCT vt1.c0))*(RTRIM(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt1.c0))*(RTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT * FROM vt1, rt1, vt0 WHERE (((LIKELY(DISTINCT vt1.c0))*(RTRIM(vt1.c0))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER) INNER JOIN v0 ON (((NOT (rt1.c2)))<=((- (v0.c0)))) WHERE (load_extension(LAST_INSERT_ROWID())) ORDER BY ((((vt1.c0)GLOB(rt1.c1))) BETWEEN (((rt1.c2) IS FALSE)) AND (0.40930293560266917 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(LAST_INSERT_ROWID())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER) INNER JOIN v0 ON (((NOT (rt1.c2)))<=((- (v0.c0)))) ORDER BY ((((vt1.c0)GLOB(rt1.c1))) BETWEEN (((rt1.c2) IS FALSE)) AND (0.40930293560266917 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER) INNER JOIN v0 ON (((NOT (rt1.c2)))<=((- (v0.c0)))) WHERE (load_extension(LAST_INSERT_ROWID())) ORDER BY ((((vt1.c0)GLOB(rt1.c1))) BETWEEN (((rt1.c2) IS FALSE)) AND (0.40930293560266917 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(LAST_INSERT_ROWID())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER) INNER JOIN v0 ON (((NOT (rt1.c2)))<=((- (v0.c0)))) ORDER BY ((((vt1.c0)GLOB(rt1.c1))) BETWEEN (((rt1.c2) IS FALSE)) AND (0.40930293560266917 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON TRIM((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON TRIM((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON TRIM((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON TRIM((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON TRIM((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) WHERE (vt1.c0);
SELECT COUNT(*) FROM rt1, vt1 LEFT OUTER JOIN vt0 ON ((((((((0xfffffffff8265fe5)OR(vt0.c0 COLLATE NOCASE)))OR('579359101')))OR(vt0.c0 COLLATE RTRIM)))AND(NULLIF(DISTINCT rt1.c0, vt0.c0))) FULL OUTER JOIN v0 ON CASE WHEN ((v0.c0)%(vt0.c0)) THEN ((vt1.c0)LIKE(rt1.c0)) WHEN (((rt1.c0))>=((rt1.c2))) THEN (v0.c0 IN (rt1.c1, rt1.c2)) WHEN rt1.c0 COLLATE RTRIM THEN ((v0.c0) BETWEEN (rt1.c2) AND (vt1.c0)) END WHERE (CASE 'hyI'  WHEN CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c0)*(rt1.c2)) ELSE 0.8844521668238025 END) ORDER BY (((~ (rt1.c2))) BETWEEN ((-8.58772734E8 IN ())) AND (((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)))), (+ (((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 'hyI'  WHEN CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c0)*(rt1.c2)) ELSE 0.8844521668238025 END) IS TRUE)  as count FROM rt1, vt1 LEFT OUTER JOIN vt0 ON ((((((((0Xfffffffff8265fe5)OR(vt0.c0 COLLATE NOCASE)))OR('579359101')))OR(vt0.c0 COLLATE RTRIM)))AND(NULLIF(DISTINCT rt1.c0, vt0.c0))) FULL OUTER JOIN v0 ON CASE WHEN ((v0.c0)%(vt0.c0)) THEN ((vt1.c0)LIKE(rt1.c0)) WHEN (((rt1.c0))>=((rt1.c2))) THEN (v0.c0 IN (rt1.c1, rt1.c2)) WHEN rt1.c0 COLLATE RTRIM THEN ((v0.c0) BETWEEN (rt1.c2) AND (vt1.c0)) END ORDER BY (((~ (rt1.c2))) BETWEEN ((-8.58772734E8 IN ())) AND (((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)))), (+ (((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1 LEFT OUTER JOIN vt0 ON ((((((((0xfffffffff8265fe5)OR(vt0.c0 COLLATE NOCASE)))OR('579359101')))OR(vt0.c0 COLLATE RTRIM)))AND(NULLIF(DISTINCT rt1.c0, vt0.c0))) FULL OUTER JOIN v0 ON CASE WHEN ((v0.c0)%(vt0.c0)) THEN ((vt1.c0)LIKE(rt1.c0)) WHEN (((rt1.c0))>=((rt1.c2))) THEN (v0.c0 IN (rt1.c1, rt1.c2)) WHEN rt1.c0 COLLATE RTRIM THEN ((v0.c0) BETWEEN (rt1.c2) AND (vt1.c0)) END WHERE (CASE 'hyI'  WHEN CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c0)*(rt1.c2)) ELSE 0.8844521668238025 END) ORDER BY (((~ (rt1.c2))) BETWEEN ((-8.58772734E8 IN ())) AND (((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)))), (+ (((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 'hyI'  WHEN CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c0)*(rt1.c2)) ELSE 0.8844521668238025 END) IS TRUE)  as count FROM rt1, vt1 LEFT OUTER JOIN vt0 ON ((((((((0Xfffffffff8265fe5)OR(vt0.c0 COLLATE NOCASE)))OR('579359101')))OR(vt0.c0 COLLATE RTRIM)))AND(NULLIF(DISTINCT rt1.c0, vt0.c0))) FULL OUTER JOIN v0 ON CASE WHEN ((v0.c0)%(vt0.c0)) THEN ((vt1.c0)LIKE(rt1.c0)) WHEN (((rt1.c0))>=((rt1.c2))) THEN (v0.c0 IN (rt1.c1, rt1.c2)) WHEN rt1.c0 COLLATE RTRIM THEN ((v0.c0) BETWEEN (rt1.c2) AND (vt1.c0)) END ORDER BY (((~ (rt1.c2))) BETWEEN ((-8.58772734E8 IN ())) AND (((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)))), (+ (((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1 LEFT OUTER JOIN vt0 ON ((((((((0xfffffffff8265fe5)OR(vt0.c0 COLLATE NOCASE)))OR('579359101')))OR(vt0.c0 COLLATE RTRIM)))AND(NULLIF(DISTINCT rt1.c0, vt0.c0))) FULL OUTER JOIN v0 ON CASE WHEN ((v0.c0)%(vt0.c0)) THEN ((vt1.c0)LIKE(rt1.c0)) WHEN (((rt1.c0))>=((rt1.c2))) THEN (v0.c0 IN (rt1.c1, rt1.c2)) WHEN rt1.c0 COLLATE RTRIM THEN ((v0.c0) BETWEEN (rt1.c2) AND (vt1.c0)) END WHERE (CASE 'hyI'  WHEN CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c0)*(rt1.c2)) ELSE 0.8844521668238025 END) ORDER BY (((~ (rt1.c2))) BETWEEN ((-8.58772734E8 IN ())) AND (((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)))), (+ (((((vt1.c0)AND(vt1.c0)))OR(v0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (0.39682909473055494);
SELECT SUM(count) FROM (SELECT ((0.39682909473055494) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (0.39682909473055494);
SELECT SUM(count) FROM (SELECT ((0.39682909473055494) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (0.39682909473055494);
SELECT * FROM rt1, v0 CROSS JOIN vt1 ON ((rt1.c0)||(rt1.c1)) COLLATE RTRIM WHERE (((((v0.c0) NOT NULL)) IS FALSE)) ORDER BY 0.722467953109771 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt1, v0 CROSS JOIN vt1 ON ((rt1.c0)||(rt1.c1)) COLLATE RTRIM ORDER BY 0.722467953109771 ASC);
SELECT * FROM rt1, v0 CROSS JOIN vt1 ON ((rt1.c0)||(rt1.c1)) COLLATE RTRIM WHERE (((((v0.c0) NOT NULL)) IS FALSE)) ORDER BY 0.722467953109771 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt1, v0 CROSS JOIN vt1 ON ((rt1.c0)||(rt1.c1)) COLLATE RTRIM ORDER BY 0.722467953109771 ASC);
SELECT * FROM rt1, v0 CROSS JOIN vt1 ON ((rt1.c0)||(rt1.c1)) COLLATE RTRIM WHERE (((((v0.c0) NOT NULL)) IS FALSE)) ORDER BY 0.722467953109771 ASC;
SELECT COUNT(*) FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt1.c0)IS(vt1.c0)))<>((((vt1.c0, v0.c0, NULL, v0.c0, vt1.c0))>((v0.c0, v0.c0, v0.c0, x'0db3', vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0)))<>((((vt1.c0, v0.c0, NULL, v0.c0, vt1.c0))>((v0.c0, v0.c0, v0.c0, x'0db3', vt1.c0)))))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt1.c0)IS(vt1.c0)))<>((((vt1.c0, v0.c0, NULL, v0.c0, vt1.c0))>((v0.c0, v0.c0, v0.c0, x'0db3', vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0)))<>((((vt1.c0, v0.c0, NULL, v0.c0, vt1.c0))>((v0.c0, v0.c0, v0.c0, x'0db3', vt1.c0)))))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt1.c0)IS(vt1.c0)))<>((((vt1.c0, v0.c0, NULL, v0.c0, vt1.c0))>((v0.c0, v0.c0, v0.c0, x'0db3', vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON (((((rt1.c2)<(vt1.c0))))>((((vt1.c0)||(rt1.c0))))) RIGHT OUTER JOIN rt1 ON CAST(((((((((v0.c0)OR(rt1.c1)))AND(NULL)))AND('1511392966')))OR(0x1885b426)) AS NUMERIC) WHERE (-986667311) ORDER BY ('0.3690397338976603' IN (v0.c0, ''))  NULLS FIRST, ((((((rt1.c1) IS FALSE))AND(((((rt1.c0)OR(NULL)))OR(0.19787418033906434)))))OR(((v0.c0)LIKE(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((-986667311) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (((((rt1.c2)<(vt1.c0))))>((((vt1.c0)||(rt1.c0))))) RIGHT OUTER JOIN rt1 ON CAST(((((((((v0.c0)OR(rt1.c1)))AND(NULL)))AND('1511392966')))OR(0X1885b426)) AS NUMERIC) ORDER BY ('0.3690397338976603' IN (v0.c0, ''))  NULLS FIRST, ((((((rt1.c1) IS FALSE))AND(((((rt1.c0)OR(NULL)))OR(0.19787418033906434)))))OR(((v0.c0)LIKE(rt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON (((((rt1.c2)<(vt1.c0))))>((((vt1.c0)||(rt1.c0))))) RIGHT OUTER JOIN rt1 ON CAST(((((((((v0.c0)OR(rt1.c1)))AND(NULL)))AND('1511392966')))OR(0x1885b426)) AS NUMERIC) WHERE (-986667311) ORDER BY ('0.3690397338976603' IN (v0.c0, ''))  NULLS FIRST, ((((((rt1.c1) IS FALSE))AND(((((rt1.c0)OR(NULL)))OR(0.19787418033906434)))))OR(((v0.c0)LIKE(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((-986667311) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (((((rt1.c2)<(vt1.c0))))>((((vt1.c0)||(rt1.c0))))) RIGHT OUTER JOIN rt1 ON CAST(((((((((v0.c0)OR(rt1.c1)))AND(NULL)))AND('1511392966')))OR(0X1885b426)) AS NUMERIC) ORDER BY ('0.3690397338976603' IN (v0.c0, ''))  NULLS FIRST, ((((((rt1.c1) IS FALSE))AND(((((rt1.c0)OR(NULL)))OR(0.19787418033906434)))))OR(((v0.c0)LIKE(rt1.c2)))) DESC);
SELECT COUNT(*) FROM rt1, vt1, v0, vt0 WHERE (IFNULL(((rt1.c2) BETWEEN (NULL) AND (vt1.c0)), ((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt1.c2) BETWEEN (NULL) AND (vt1.c0)), ((v0.c0) NOT NULL))) IS TRUE)  as count FROM rt1, vt1, v0, vt0);
SELECT COUNT(*) FROM rt1, vt1, v0, vt0 WHERE (IFNULL(((rt1.c2) BETWEEN (NULL) AND (vt1.c0)), ((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt1.c2) BETWEEN (NULL) AND (vt1.c0)), ((v0.c0) NOT NULL))) IS TRUE)  as count FROM rt1, vt1, v0, vt0);
SELECT COUNT(*) FROM rt1, vt1, v0, vt0 WHERE (IFNULL(((rt1.c2) BETWEEN (NULL) AND (vt1.c0)), ((v0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM v0, rt1, vt0, vt1 WHERE (CASE WHEN rt1.c2 THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN x'' END) IS TRUE)  as count FROM v0, rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, rt1, vt0, vt1 WHERE (CASE WHEN rt1.c2 THEN x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN x'' END) IS TRUE)  as count FROM v0, rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, rt1, vt0, vt1 WHERE (CASE WHEN rt1.c2 THEN x'' END);
SELECT * FROM v0 WHERE (((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1178306162' WHEN v0.c0 THEN v0.c0 END)AND(CASE v0.c0  WHEN v0.c0 THEN 0x46785572 END)))OR(CAST(v0.c0 AS INTEGER))))AND(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1178306162' WHEN v0.c0 THEN v0.c0 END)AND(CASE v0.c0  WHEN v0.c0 THEN 0X46785572 END)))OR(CAST(v0.c0 AS INTEGER))))AND(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1178306162' WHEN v0.c0 THEN v0.c0 END)AND(CASE v0.c0  WHEN v0.c0 THEN 0x46785572 END)))OR(CAST(v0.c0 AS INTEGER))))AND(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1178306162' WHEN v0.c0 THEN v0.c0 END)AND(CASE v0.c0  WHEN v0.c0 THEN 0X46785572 END)))OR(CAST(v0.c0 AS INTEGER))))AND(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1178306162' WHEN v0.c0 THEN v0.c0 END)AND(CASE v0.c0  WHEN v0.c0 THEN 0x46785572 END)))OR(CAST(v0.c0 AS INTEGER))))AND(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0, vt1, vt0 NATURAL JOIN rt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1, vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM v0, vt1, vt0 NATURAL JOIN rt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1, vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM v0, vt1, vt0 NATURAL JOIN rt1 WHERE (v0.c0);
SELECT ALL * FROM v0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (NULL);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c2)>('-1808286191')) THEN rt1.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)>('-1808286191')) THEN rt1.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c2)>('-1808286191')) THEN rt1.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)>('-1808286191')) THEN rt1.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c2)>('-1808286191')) THEN rt1.c2 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON LIKELIHOOD((vt1.c0 IN ()), 0.6314520592312178) WHERE (CASE WHEN ((vt0.c0)<<(vt1.c0)) THEN ((vt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)<<(vt1.c0)) THEN ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON LIKELIHOOD((vt1.c0 IN ()), 0.6314520592312178));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON LIKELIHOOD((vt1.c0 IN ()), 0.6314520592312178) WHERE (CASE WHEN ((vt0.c0)<<(vt1.c0)) THEN ((vt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)<<(vt1.c0)) THEN ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON LIKELIHOOD((vt1.c0 IN ()), 0.6314520592312178));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON LIKELIHOOD((vt1.c0 IN ()), 0.6314520592312178) WHERE (CASE WHEN ((vt0.c0)<<(vt1.c0)) THEN ((vt0.c0) IS FALSE) END);
SELECT * FROM v0, rt1 WHERE (CASE CASE rt1.c1  WHEN rt1.c1 THEN v0.c0 ELSE v0.c0 END  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c0)!=(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt1.c1  WHEN rt1.c1 THEN v0.c0 ELSE v0.c0 END  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c0)!=(rt1.c0)) END) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (CASE CASE rt1.c1  WHEN rt1.c1 THEN v0.c0 ELSE v0.c0 END  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c0)!=(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt1.c1  WHEN rt1.c1 THEN v0.c0 ELSE v0.c0 END  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c0)!=(rt1.c0)) END) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (CASE CASE rt1.c1  WHEN rt1.c1 THEN v0.c0 ELSE v0.c0 END  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c0)!=(rt1.c0)) END);
SELECT ALL * FROM v0, rt1, vt1, vt0 WHERE ((('')OR(CAST(x'61fb' AS TEXT)))) ORDER BY (((((((rt1.c1))==((0xffffffff85776d00))))AND(0.9326346538778821)))OR((((NULL, rt1.c2, v0.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((x'', rt1.c0, vt0.c0))))), LIKELIHOOD(rt1.c0, 0.23402364300810907) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('')OR(CAST(x'61fb' AS TEXT)))) IS TRUE)  as count FROM v0, rt1, vt1, vt0 ORDER BY (((((((rt1.c1))==((0Xffffffff85776d00))))AND(0.9326346538778821)))OR((((NULL, rt1.c2, v0.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((x'', rt1.c0, vt0.c0))))), LIKELIHOOD(rt1.c0, 0.23402364300810907) ASC);
SELECT ALL * FROM v0, rt1, vt1, vt0 WHERE ((('')OR(CAST(x'61fb' AS TEXT)))) ORDER BY (((((((rt1.c1))==((0xffffffff85776d00))))AND(0.9326346538778821)))OR((((NULL, rt1.c2, v0.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((x'', rt1.c0, vt0.c0))))), LIKELIHOOD(rt1.c0, 0.23402364300810907) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('')OR(CAST(x'61fb' AS TEXT)))) IS TRUE)  as count FROM v0, rt1, vt1, vt0 ORDER BY (((((((rt1.c1))==((0Xffffffff85776d00))))AND(0.9326346538778821)))OR((((NULL, rt1.c2, v0.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((x'', rt1.c0, vt0.c0))))), LIKELIHOOD(rt1.c0, 0.23402364300810907) ASC);
SELECT ALL * FROM v0, rt1, vt1, vt0 WHERE ((('')OR(CAST(x'61fb' AS TEXT)))) ORDER BY (((((((rt1.c1))==((0xffffffff85776d00))))AND(0.9326346538778821)))OR((((NULL, rt1.c2, v0.c0)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((x'', rt1.c0, vt0.c0))))), LIKELIHOOD(rt1.c0, 0.23402364300810907) ASC;
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (((((rt1.c2) NOT NULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((NULL)))))) ORDER BY (- ((((v0.c0))>=((rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT NULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((NULL)))))) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY (- ((((v0.c0))>=((rt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (((((rt1.c2) NOT NULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((NULL)))))) ORDER BY (- ((((v0.c0))>=((rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT NULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((NULL)))))) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY (- ((((v0.c0))>=((rt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (((((rt1.c2) NOT NULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((NULL)))))) ORDER BY (- ((((v0.c0))>=((rt1.c0))))) DESC;
SELECT ALL * FROM vt1, vt0, v0, rt1 WHERE (CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((x''))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((x''))) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, v0, rt1 NOT INDEXED);
SELECT ALL * FROM vt1, vt0, v0, rt1 WHERE (CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((x''))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((x''))) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, v0, rt1 NOT INDEXED);
SELECT ALL * FROM vt1, vt0, v0, rt1 WHERE (CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((x''))) AS NUMERIC));
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (x'') ORDER BY CASE (- (rt1.c2))  WHEN vt1.c0 THEN NULL END DESC, (- (vt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY CASE (- (rt1.c2))  WHEN vt1.c0 THEN NULL END DESC, (- (vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (x'') ORDER BY CASE (- (rt1.c2))  WHEN vt1.c0 THEN NULL END DESC, (- (vt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY CASE (- (rt1.c2))  WHEN vt1.c0 THEN NULL END DESC, (- (vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (x'') ORDER BY CASE (- (rt1.c2))  WHEN vt1.c0 THEN NULL END DESC, (- (vt1.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((((CAST(v0.c0 AS BLOB)))=((((v0.c0)IS(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS BLOB)))==((((v0.c0)IS(v0.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((((CAST(v0.c0 AS BLOB)))=((((v0.c0)IS(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS BLOB)))==((((v0.c0)IS(v0.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((((CAST(v0.c0 AS BLOB)))=((((v0.c0)IS(v0.c0))))));
SELECT ALL * FROM v0 WHERE (CASE CAST(v0.c0 AS BLOB)  WHEN (((v0.c0))==((v0.c0))) THEN v0.c0 COLLATE NOCASE ELSE v0.c0 COLLATE NOCASE END) ORDER BY v0.c0 ASC, ((((CAST(v0.c0 AS BLOB))AND(LOWER(v0.c0))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS BLOB)  WHEN (((v0.c0))==((v0.c0))) THEN v0.c0 COLLATE NOCASE ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY v0.c0 ASC, ((((CAST(v0.c0 AS BLOB))AND(LOWER(v0.c0))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE CAST(v0.c0 AS BLOB)  WHEN (((v0.c0))==((v0.c0))) THEN v0.c0 COLLATE NOCASE ELSE v0.c0 COLLATE NOCASE END) ORDER BY v0.c0 ASC, ((((CAST(v0.c0 AS BLOB))AND(LOWER(v0.c0))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS BLOB)  WHEN (((v0.c0))==((v0.c0))) THEN v0.c0 COLLATE NOCASE ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY v0.c0 ASC, ((((CAST(v0.c0 AS BLOB))AND(LOWER(v0.c0))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE CAST(v0.c0 AS BLOB)  WHEN (((v0.c0))==((v0.c0))) THEN v0.c0 COLLATE NOCASE ELSE v0.c0 COLLATE NOCASE END) ORDER BY v0.c0 ASC, ((((CAST(v0.c0 AS BLOB))AND(LOWER(v0.c0))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((NULL IN (((x'') NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NULL IN (((x'') NOTNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NULL IN (((x'') NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NULL IN (((x'') NOTNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NULL IN (((x'') NOTNULL))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (- (vt1.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) ISNULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE (~ (vt1.c0)) END WHERE ((+ (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (- (vt1.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) ISNULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE (~ (vt1.c0)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (- (vt1.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) ISNULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE (~ (vt1.c0)) END WHERE ((+ (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (- (vt1.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) ISNULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE (~ (vt1.c0)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (- (vt1.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) ISNULL) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE (~ (vt1.c0)) END WHERE ((+ (vt1.c0 COLLATE BINARY)));
SELECT * FROM v0, rt1 WHERE (-1.20636048E8) ORDER BY ((((((v0.c0) IS TRUE))AND(rt1.c1 COLLATE RTRIM)))AND((('-2126554067')/(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.20636048E8) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((((v0.c0) IS TRUE))AND(rt1.c1 COLLATE RTRIM)))AND((('-2126554067')/(rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM v0, rt1 WHERE (-1.20636048E8) ORDER BY ((((((v0.c0) IS TRUE))AND(rt1.c1 COLLATE RTRIM)))AND((('-2126554067')/(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.20636048E8) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((((v0.c0) IS TRUE))AND(rt1.c1 COLLATE RTRIM)))AND((('-2126554067')/(rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM v0, rt1 WHERE (-1.20636048E8) ORDER BY ((((((v0.c0) IS TRUE))AND(rt1.c1 COLLATE RTRIM)))AND((('-2126554067')/(rt1.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt1, vt0, v0 WHERE (vt0.c0) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt1, vt0, v0 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS BLOB) ASC);
SELECT ALL * FROM rt1, vt1, vt0, v0 WHERE (vt0.c0) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt1, vt0, v0 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS BLOB) ASC);
SELECT ALL * FROM rt1, vt1, vt0, v0 WHERE (vt0.c0) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS BLOB) ASC;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(CASE rt1.c1  WHEN v0.c0 THEN 0.9165026433766053 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END AS TEXT)) ORDER BY highlight((~ (-1146815060)), ((rt1.c0)%(rt1.c1)), '-467959153', ((rt1.c1)*('490076433')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt1.c1  WHEN v0.c0 THEN 0.9165026433766053 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END AS TEXT)) IS TRUE)  as count FROM rt1, v0 ORDER BY highlight((~ (-1146815060)), ((rt1.c0)%(rt1.c1)), '-467959153', ((rt1.c1)*('490076433')))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(CASE rt1.c1  WHEN v0.c0 THEN 0.9165026433766053 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END AS TEXT)) ORDER BY highlight((~ (-1146815060)), ((rt1.c0)%(rt1.c1)), '-467959153', ((rt1.c1)*('490076433')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt1.c1  WHEN v0.c0 THEN 0.9165026433766053 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END AS TEXT)) IS TRUE)  as count FROM rt1, v0 ORDER BY highlight((~ (-1146815060)), ((rt1.c0)%(rt1.c1)), '-467959153', ((rt1.c1)*('490076433')))  NULLS LAST);
SELECT ALL * FROM vt1, v0, rt1, vt0 WHERE (CASE WHEN (((rt1.c1)) BETWEEN ((v0.c0)) AND ((0.16611395321425249))) THEN CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c1)) BETWEEN ((v0.c0)) AND ((0.16611395321425249))) THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt1, v0, rt1, vt0);
SELECT ALL * FROM vt1, v0, rt1, vt0 WHERE (CASE WHEN (((rt1.c1)) BETWEEN ((v0.c0)) AND ((0.16611395321425249))) THEN CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c1)) BETWEEN ((v0.c0)) AND ((0.16611395321425249))) THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt1, v0, rt1, vt0);
SELECT ALL * FROM vt1, v0, rt1, vt0 WHERE (CASE WHEN (((rt1.c1)) BETWEEN ((v0.c0)) AND ((0.16611395321425249))) THEN CAST(vt0.c0 AS TEXT) END);
SELECT * FROM v0, vt0, vt1, rt1 WHERE ((((((((((((((rt1.c0 IN ()))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE v0.c0 END)))AND(((v0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)))))OR(((rt1.c1) NOT BETWEEN ('490076433') AND (vt1.c0)))))OR(CAST(v0.c0 AS NUMERIC))))AND((- (v0.c0)))))AND((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt1.c0 IN ()))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE v0.c0 END)))AND(((v0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)))))OR(((rt1.c1) NOT BETWEEN ('490076433') AND (vt1.c0)))))OR(CAST(v0.c0 AS NUMERIC))))AND((- (v0.c0)))))AND((- (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1, rt1);
SELECT * FROM v0, vt0, vt1, rt1 WHERE ((((((((((((((rt1.c0 IN ()))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE v0.c0 END)))AND(((v0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)))))OR(((rt1.c1) NOT BETWEEN ('490076433') AND (vt1.c0)))))OR(CAST(v0.c0 AS NUMERIC))))AND((- (v0.c0)))))AND((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt1.c0 IN ()))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE v0.c0 END)))AND(((v0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)))))OR(((rt1.c1) NOT BETWEEN ('490076433') AND (vt1.c0)))))OR(CAST(v0.c0 AS NUMERIC))))AND((- (v0.c0)))))AND((- (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1, rt1);
SELECT * FROM v0, vt0, vt1, rt1 WHERE ((((((((((((((rt1.c0 IN ()))AND(CASE WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE v0.c0 END)))AND(((v0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)))))OR(((rt1.c1) NOT BETWEEN ('490076433') AND (vt1.c0)))))OR(CAST(v0.c0 AS NUMERIC))))AND((- (v0.c0)))))AND((- (vt0.c0)))));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) NOT BETWEEN (CHANGES()) AND (CASE WHEN rt1.c2 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) NOT BETWEEN (CHANGES()) AND (CASE WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) NOT BETWEEN (CHANGES()) AND (CASE WHEN rt1.c2 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) NOT BETWEEN (CHANGES()) AND (CASE WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) NOT BETWEEN (CHANGES()) AND (CASE WHEN rt1.c2 THEN rt1.c0 END)));
SELECT * FROM rt1, v0, vt1 WHERE (NULLIF(DISTINCT rt1.c0 COLLATE BINARY, ((('6t'))>=((rt1.c0))))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT rt1.c0 COLLATE BINARY, ((('6t'))>=((rt1.c0))))) IS TRUE)  as count FROM rt1, v0, vt1 ORDER BY rt1.c1);
SELECT * FROM rt1, v0, vt1 WHERE (NULLIF(DISTINCT rt1.c0 COLLATE BINARY, ((('6t'))>=((rt1.c0))))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT rt1.c0 COLLATE BINARY, ((('6t'))>=((rt1.c0))))) IS TRUE)  as count FROM rt1, v0, vt1 ORDER BY rt1.c1);
SELECT * FROM rt1, v0, vt1 WHERE (NULLIF(DISTINCT rt1.c0 COLLATE BINARY, ((('6t'))>=((rt1.c0))))) ORDER BY rt1.c1;
SELECT * FROM v0, vt1 LEFT OUTER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN (CASE WHEN rt1.c0 THEN rt1.c0 END, CASE -221754276  WHEN vt1.c0 THEN rt1.c2 END)) WHERE (((((v0.c0) IS FALSE)) NOT BETWEEN (((v0.c0)||(rt1.c2))) AND ((rt1.c1 IN ())))) ORDER BY (~ (rt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) NOT BETWEEN (((v0.c0)||(rt1.c2))) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM v0 NOT INDEXED, vt1 LEFT OUTER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN (CASE WHEN rt1.c0 THEN rt1.c0 END, CASE -221754276  WHEN vt1.c0 THEN rt1.c2 END)) ORDER BY (~ (rt1.c0)) ASC);
SELECT * FROM v0, vt1 LEFT OUTER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN (CASE WHEN rt1.c0 THEN rt1.c0 END, CASE -221754276  WHEN vt1.c0 THEN rt1.c2 END)) WHERE (((((v0.c0) IS FALSE)) NOT BETWEEN (((v0.c0)||(rt1.c2))) AND ((rt1.c1 IN ())))) ORDER BY (~ (rt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) NOT BETWEEN (((v0.c0)||(rt1.c2))) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM v0 NOT INDEXED, vt1 LEFT OUTER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN (CASE WHEN rt1.c0 THEN rt1.c0 END, CASE -221754276  WHEN vt1.c0 THEN rt1.c2 END)) ORDER BY (~ (rt1.c0)) ASC);
SELECT * FROM v0, vt1 LEFT OUTER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN (CASE WHEN rt1.c0 THEN rt1.c0 END, CASE -221754276  WHEN vt1.c0 THEN rt1.c2 END)) WHERE (((((v0.c0) IS FALSE)) NOT BETWEEN (((v0.c0)||(rt1.c2))) AND ((rt1.c1 IN ())))) ORDER BY (~ (rt1.c0)) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((TRIM(DISTINCT vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((TRIM(DISTINCT vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((TRIM(DISTINCT vt0.c0)) NOT NULL));
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE ((NOT (((v0.c0) ISNULL)))) ORDER BY (CAST(rt1.c2 AS TEXT) IN ()) DESC, v0.c0 ASC, CAST(((v0.c0) ISNULL) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY (CAST(rt1.c2 AS TEXT) IN ()) DESC, v0.c0 ASC, CAST(((v0.c0) ISNULL) AS REAL));
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE ((NOT (((v0.c0) ISNULL)))) ORDER BY (CAST(rt1.c2 AS TEXT) IN ()) DESC, v0.c0 ASC, CAST(((v0.c0) ISNULL) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY (CAST(rt1.c2 AS TEXT) IN ()) DESC, v0.c0 ASC, CAST(((v0.c0) ISNULL) AS REAL));
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE ((NOT (((v0.c0) ISNULL)))) ORDER BY (CAST(rt1.c2 AS TEXT) IN ()) DESC, v0.c0 ASC, CAST(((v0.c0) ISNULL) AS REAL);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (TRIM(DISTINCT (NOT (v0.c0)), (v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (v0.c0)), (v0.c0 IN ()))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (TRIM(DISTINCT (NOT (v0.c0)), (v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (v0.c0)), (v0.c0 IN ()))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (TRIM(DISTINCT (NOT (v0.c0)), (v0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE ((((((rt1.c2)GLOB(rt1.c0)), vt1.c0, rt1.c1))>((((vt1.c0)AND(rt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)GLOB(rt1.c0)), vt1.c0, rt1.c1))>((((vt1.c0)AND(rt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE ((((((rt1.c2)GLOB(rt1.c0)), vt1.c0, rt1.c1))>((((vt1.c0)AND(rt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)GLOB(rt1.c0)), vt1.c0, rt1.c1))>((((vt1.c0)AND(rt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE ((((((rt1.c2)GLOB(rt1.c0)), vt1.c0, rt1.c1))>((((vt1.c0)AND(rt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((((((NOT (vt0.c0)))AND(((((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))OR('*3}I勞O怵U')))AND(rt1.c2)))))AND(((rt1.c1) BETWEEN (NULL) AND (rt1.c2))))) ORDER BY ((NULL IN ()) IN ())  NULLS FIRST, (+ (rt1.c0)) COLLATE RTRIM ASC, (vt1.c0 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))AND(((((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))OR('*3}I勞O怵U')))AND(rt1.c2)))))AND(((rt1.c1) BETWEEN (NULL) AND (rt1.c2))))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY ((NULL IN ()) IN ())  NULLS FIRST, (+ (rt1.c0)) COLLATE RTRIM ASC, (vt1.c0 IN ()) COLLATE BINARY DESC);
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((((((NOT (vt0.c0)))AND(((((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))OR('*3}I勞O怵U')))AND(rt1.c2)))))AND(((rt1.c1) BETWEEN (NULL) AND (rt1.c2))))) ORDER BY ((NULL IN ()) IN ())  NULLS FIRST, (+ (rt1.c0)) COLLATE RTRIM ASC, (vt1.c0 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))AND(((((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))OR('*3}I勞O怵U')))AND(rt1.c2)))))AND(((rt1.c1) BETWEEN (NULL) AND (rt1.c2))))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY ((NULL IN ()) IN ())  NULLS FIRST, (+ (rt1.c0)) COLLATE RTRIM ASC, (vt1.c0 IN ()) COLLATE BINARY DESC);
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((((((NOT (vt0.c0)))AND(((((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))OR('*3}I勞O怵U')))AND(rt1.c2)))))AND(((rt1.c1) BETWEEN (NULL) AND (rt1.c2))))) ORDER BY ((NULL IN ()) IN ())  NULLS FIRST, (+ (rt1.c0)) COLLATE RTRIM ASC, (vt1.c0 IN ()) COLLATE BINARY DESC;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0), vt0.c0, ((vt0.c0)LIKE(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULLIF(vt0.c0, vt0.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)-(((vt0.c0)IS(vt0.c0)))), (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0), vt0.c0, ((vt0.c0)LIKE(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULLIF(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)-(((vt0.c0)IS(vt0.c0)))), (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0), vt0.c0, ((vt0.c0)LIKE(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULLIF(vt0.c0, vt0.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)-(((vt0.c0)IS(vt0.c0)))), (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0), vt0.c0, ((vt0.c0)LIKE(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULLIF(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)-(((vt0.c0)IS(vt0.c0)))), (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0), vt0.c0, ((vt0.c0)LIKE(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULLIF(vt0.c0, vt0.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)-(((vt0.c0)IS(vt0.c0)))), (~ (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((rt1.c0) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) IS FALSE) AS BLOB)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((rt1.c0) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) IS FALSE) AS BLOB)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((rt1.c0) IS FALSE) AS BLOB));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c0 COLLATE RTRIM)>((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE RTRIM)>((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c0 COLLATE RTRIM)>((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE RTRIM)>((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c0 COLLATE RTRIM)>((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))));
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c1)|(rt1.c2)) ELSE ((rt1.c0) NOT NULL) END) ORDER BY 'D?Q', ((((((rt1.c1)OR(rt1.c0)))OR('0.684563653858827')))&(rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c1)|(rt1.c2)) ELSE ((rt1.c0) NOT NULL) END) IS TRUE)  as count FROM rt1 ORDER BY 'D?Q', ((((((rt1.c1)OR(rt1.c0)))OR('0.684563653858827')))&(rt1.c2)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c1)|(rt1.c2)) ELSE ((rt1.c0) NOT NULL) END) ORDER BY 'D?Q', ((((((rt1.c1)OR(rt1.c0)))OR('0.684563653858827')))&(rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c1)|(rt1.c2)) ELSE ((rt1.c0) NOT NULL) END) IS TRUE)  as count FROM rt1 ORDER BY 'D?Q', ((((((rt1.c1)OR(rt1.c0)))OR('0.684563653858827')))&(rt1.c2)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c1)|(rt1.c2)) ELSE ((rt1.c0) NOT NULL) END) ORDER BY 'D?Q', ((((((rt1.c1)OR(rt1.c0)))OR('0.684563653858827')))&(rt1.c2)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0, v0, vt1 WHERE ((((rt1.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM rt1, vt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt1, vt0, v0, vt1 WHERE ((((rt1.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM rt1, vt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt1, vt0, v0, vt1 WHERE ((((rt1.c0) NOT NULL) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (json_patch((((v0.c0))!=((-6.93832052E8))), ((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_patch((((v0.c0))<>((-6.93832052E8))), ((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_patch((((v0.c0))!=((-6.93832052E8))), ((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_patch((((v0.c0))<>((-6.93832052E8))), ((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_patch((((v0.c0))!=((-6.93832052E8))), ((v0.c0) NOTNULL)));
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE INNER JOIN rt1 ON ((LIKELIHOOD(rt1.c0, 0.33171741641649843))-(v0.c0 COLLATE BINARY)) WHERE (((CAST(x'' AS NUMERIC))>=((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC))>=((~ (rt1.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE INNER JOIN rt1 ON ((LIKELIHOOD(rt1.c0, 0.33171741641649843))-(v0.c0 COLLATE BINARY)));
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE INNER JOIN rt1 ON ((LIKELIHOOD(rt1.c0, 0.33171741641649843))-(v0.c0 COLLATE BINARY)) WHERE (((CAST(x'' AS NUMERIC))>=((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC))>=((~ (rt1.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE INNER JOIN rt1 ON ((LIKELIHOOD(rt1.c0, 0.33171741641649843))-(v0.c0 COLLATE BINARY)));
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE INNER JOIN rt1 ON ((LIKELIHOOD(rt1.c0, 0.33171741641649843))-(v0.c0 COLLATE BINARY)) WHERE (((CAST(x'' AS NUMERIC))>=((~ (rt1.c1)))));
SELECT * FROM vt0, v0 NATURAL JOIN vt1 WHERE ('-1178306162');
SELECT SUM(count) FROM (SELECT ALL (('-1178306162') IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1);
SELECT * FROM vt0, v0 NATURAL JOIN vt1 WHERE ('-1178306162');
SELECT SUM(count) FROM (SELECT ALL (('-1178306162') IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1);
SELECT * FROM vt0, v0 NATURAL JOIN vt1 WHERE ('-1178306162');
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE WHEN x'' THEN CAST(v0.c0 AS INTEGER) WHEN 0.9747627425929944 THEN vt1.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE BINARY THEN (((x'', v0.c0, 0.37974152439115494, vt1.c0, v0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt1.c0, vt1.c0, vt0.c0))) ELSE (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN CAST(v0.c0 AS INTEGER) WHEN 0.9747627425929944 THEN vt1.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE BINARY THEN (((x'', v0.c0, 0.37974152439115494, vt1.c0, v0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt1.c0, vt1.c0, vt0.c0))) ELSE (~ (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE WHEN x'' THEN CAST(v0.c0 AS INTEGER) WHEN 0.9747627425929944 THEN vt1.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE BINARY THEN (((x'', v0.c0, 0.37974152439115494, vt1.c0, v0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt1.c0, vt1.c0, vt0.c0))) ELSE (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN CAST(v0.c0 AS INTEGER) WHEN 0.9747627425929944 THEN vt1.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE BINARY THEN (((x'', v0.c0, 0.37974152439115494, vt1.c0, v0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt1.c0, vt1.c0, vt0.c0))) ELSE (~ (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE WHEN x'' THEN CAST(v0.c0 AS INTEGER) WHEN 0.9747627425929944 THEN vt1.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE BINARY THEN (((x'', v0.c0, 0.37974152439115494, vt1.c0, v0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0, vt1.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt1.c0, vt1.c0, vt0.c0))) ELSE (~ (vt1.c0)) END);
SELECT COUNT(*) FROM vt0, rt1, vt1, v0 WHERE (((json_remove(rt1.c0, rt1.c1))&(((NULL) BETWEEN (vt0.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_remove(rt1.c0, rt1.c1))&(((NULL) BETWEEN (vt0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1, vt1, v0);
SELECT COUNT(*) FROM vt0, rt1, vt1, v0 WHERE (((json_remove(rt1.c0, rt1.c1))&(((NULL) BETWEEN (vt0.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_remove(rt1.c0, rt1.c1))&(((NULL) BETWEEN (vt0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1, vt1, v0);
SELECT COUNT(*) FROM vt0, rt1, vt1, v0 WHERE (((json_remove(rt1.c0, rt1.c1))&(((NULL) BETWEEN (vt0.c0) AND (rt1.c0)))));
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE (((((vt1.c0, vt1.c0, rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, 0.6028505238513873, rt1.c0, v0.c0, vt1.c0)) AND ((v0.c0, rt1.c2, v0.c0, rt1.c2, v0.c0))) IN ())) ORDER BY (SQLITE_COMPILEOPTION_GET(rt1.c2) IN ()) DESC, rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt1.c0, rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, 0.6028505238513873, rt1.c0, v0.c0, vt1.c0)) AND ((v0.c0, rt1.c2, v0.c0, rt1.c2, v0.c0))) IN ())) IS TRUE)  as count FROM rt1, vt1, v0 ORDER BY (SQLITE_COMPILEOPTION_GET(rt1.c2) IN ()) DESC, rt1.c1 DESC);
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE (((((vt1.c0, vt1.c0, rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, 0.6028505238513873, rt1.c0, v0.c0, vt1.c0)) AND ((v0.c0, rt1.c2, v0.c0, rt1.c2, v0.c0))) IN ())) ORDER BY (SQLITE_COMPILEOPTION_GET(rt1.c2) IN ()) DESC, rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt1.c0, rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, 0.6028505238513873, rt1.c0, v0.c0, vt1.c0)) AND ((v0.c0, rt1.c2, v0.c0, rt1.c2, v0.c0))) IN ())) IS TRUE)  as count FROM rt1, vt1, v0 ORDER BY (SQLITE_COMPILEOPTION_GET(rt1.c2) IN ()) DESC, rt1.c1 DESC);
SELECT COUNT(*) FROM rt1, vt1, v0 WHERE (((((vt1.c0, vt1.c0, rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, 0.6028505238513873, rt1.c0, v0.c0, vt1.c0)) AND ((v0.c0, rt1.c2, v0.c0, rt1.c2, v0.c0))) IN ())) ORDER BY (SQLITE_COMPILEOPTION_GET(rt1.c2) IN ()) DESC, rt1.c1 DESC;
SELECT ALL * FROM v0, rt1, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM v0, rt1, vt1);
SELECT ALL * FROM v0, rt1, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM v0, rt1, vt1);
SELECT ALL * FROM v0, rt1, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM v0, rt1 WHERE (CAST('-1416466594' AS INTEGER)) ORDER BY ((NULL) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1416466594' AS INTEGER)) IS TRUE)  as count FROM v0, rt1 ORDER BY ((NULL) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 WHERE (CAST('-1416466594' AS INTEGER)) ORDER BY ((NULL) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1416466594' AS INTEGER)) IS TRUE)  as count FROM v0, rt1 ORDER BY ((NULL) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 WHERE (CAST('-1416466594' AS INTEGER)) ORDER BY ((NULL) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2) ISNULL) AS INTEGER)) ORDER BY ((((((((NULL)OR(rt1.c1)))OR(rt1.c2)))OR(CAST(rt1.c1 AS NUMERIC))))OR(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)) ASC, NULL, '2121023655' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((((((((NULL)OR(rt1.c1)))OR(rt1.c2)))OR(CAST(rt1.c1 AS NUMERIC))))OR(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)) ASC, NULL, '2121023655' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2) ISNULL) AS INTEGER)) ORDER BY ((((((((NULL)OR(rt1.c1)))OR(rt1.c2)))OR(CAST(rt1.c1 AS NUMERIC))))OR(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)) ASC, NULL, '2121023655' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((((((((NULL)OR(rt1.c1)))OR(rt1.c2)))OR(CAST(rt1.c1 AS NUMERIC))))OR(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)) ASC, NULL, '2121023655' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2) ISNULL) AS INTEGER)) ORDER BY ((((((((NULL)OR(rt1.c1)))OR(rt1.c2)))OR(CAST(rt1.c1 AS NUMERIC))))OR(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)) ASC, NULL, '2121023655' DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1, vt1 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c1 END IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 END))) ORDER BY ((CAST(vt0.c0 AS REAL))>=((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c1 END IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((CAST(vt0.c0 AS REAL))>=((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))))));
SELECT ALL * FROM vt0, rt1, vt1 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c1 END IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 END))) ORDER BY ((CAST(vt0.c0 AS REAL))>=((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c1 END IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((CAST(vt0.c0 AS REAL))>=((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))))));
SELECT ALL * FROM vt0, rt1, vt1 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c1 END IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 END))) ORDER BY ((CAST(vt0.c0 AS REAL))>=((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2)))));
SELECT * FROM vt1, vt0, v0 WHERE ((((vt1.c0))<((((((((((vt0.c0)AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))<((((((((((vt0.c0)AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE ((((vt1.c0))<((((((((((vt0.c0)AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))<((((((((((vt0.c0)AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE ((((vt1.c0))<((((((((((vt0.c0)AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(vt0.c0))) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST((x'' IN ()) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(vt0.c0))) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST((x'' IN ()) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(vt0.c0))) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST((x'' IN ()) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(vt0.c0))) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST((x'' IN ()) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>(vt0.c0))) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST((x'' IN ()) AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((ABS(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((ABS(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((ABS(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((ABS(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((ABS(DISTINCT vt0.c0)))));
SELECT COUNT(*) FROM v0, rt1, vt0, vt1 WHERE (CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(x'')))OR('-15046165')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(x'')))OR('-15046165')) AS INTEGER)) IS TRUE)  as count FROM v0, rt1, vt0, vt1);
SELECT COUNT(*) FROM v0, rt1, vt0, vt1 WHERE (CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(x'')))OR('-15046165')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(x'')))OR('-15046165')) AS INTEGER)) IS TRUE)  as count FROM v0, rt1, vt0, vt1);
SELECT COUNT(*) FROM v0, rt1, vt0, vt1 WHERE (CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(x'')))OR('-15046165')) AS INTEGER));
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS BLOB) IN ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS BLOB) IN ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ((v0.c0 IN ()))));
SELECT ALL * FROM vt1, v0, vt0 INNER JOIN rt1 ON (((((v0.c0) BETWEEN ('') AND ('1519244353'))))<=(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1)))))) WHERE ((((rt1.c0)&(vt0.c0)) IN ())) ORDER BY CASE WHEN rt1.c1 THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) ELSE CASE rt1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)&(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0, vt0 INNER JOIN rt1 ON (((((v0.c0) BETWEEN ('') AND ('1519244353'))))<=(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1)))))) ORDER BY CASE WHEN rt1.c1 THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) ELSE CASE rt1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 END END ASC  NULLS LAST);
SELECT ALL * FROM vt1, v0, vt0 INNER JOIN rt1 ON (((((v0.c0) BETWEEN ('') AND ('1519244353'))))<=(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1)))))) WHERE ((((rt1.c0)&(vt0.c0)) IN ())) ORDER BY CASE WHEN rt1.c1 THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) ELSE CASE rt1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)&(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0, vt0 INNER JOIN rt1 ON (((((v0.c0) BETWEEN ('') AND ('1519244353'))))<=(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1)))))) ORDER BY CASE WHEN rt1.c1 THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) ELSE CASE rt1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 END END ASC  NULLS LAST);
SELECT ALL * FROM vt1, v0, vt0 INNER JOIN rt1 ON (((((v0.c0) BETWEEN ('') AND ('1519244353'))))<=(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1)))))) WHERE ((((rt1.c0)&(vt0.c0)) IN ())) ORDER BY CASE WHEN rt1.c1 THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) ELSE CASE rt1.c1  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 END END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND(SQLITE_SOURCE_ID())))AND(((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS INTEGER))AND(SQLITE_SOURCE_ID())))AND(((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND(SQLITE_SOURCE_ID())))AND(((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS INTEGER))AND(SQLITE_SOURCE_ID())))AND(((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND(SQLITE_SOURCE_ID())))AND(((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))OR(v0.c0)))));
SELECT * FROM vt1, v0 WHERE (((NULL) NOT BETWEEN (((((vt1.c0)AND(v0.c0)))AND(x'd6c2'))) AND ((v0.c0 IN (vt1.c0, vt1.c0))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((((vt1.c0)AND(v0.c0)))AND(x'd6c2'))) AND ((v0.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY vt1.c0);
SELECT * FROM vt1, v0 WHERE (((NULL) NOT BETWEEN (((((vt1.c0)AND(v0.c0)))AND(x'd6c2'))) AND ((v0.c0 IN (vt1.c0, vt1.c0))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((((vt1.c0)AND(v0.c0)))AND(x'd6c2'))) AND ((v0.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY vt1.c0);
SELECT * FROM vt1, v0 WHERE (((NULL) NOT BETWEEN (((((vt1.c0)AND(v0.c0)))AND(x'd6c2'))) AND ((v0.c0 IN (vt1.c0, vt1.c0))))) ORDER BY vt1.c0;
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c1 IN ())  WHEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 END) ORDER BY (((((((('283054156')AND(rt1.c0)))AND(rt1.c0)))AND(((rt1.c0)<(rt1.c2)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN ())  WHEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 END) IS TRUE)  as count FROM rt1 ORDER BY (((((((('283054156')AND(rt1.c0)))AND(rt1.c0)))AND(((rt1.c0)<(rt1.c2)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)) ASC);
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c1 IN ())  WHEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 END) ORDER BY (((((((('283054156')AND(rt1.c0)))AND(rt1.c0)))AND(((rt1.c0)<(rt1.c2)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN ())  WHEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 END) IS TRUE)  as count FROM rt1 ORDER BY (((((((('283054156')AND(rt1.c0)))AND(rt1.c0)))AND(((rt1.c0)<(rt1.c2)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)) ASC);
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c1 IN ())  WHEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 END) ORDER BY (((((((('283054156')AND(rt1.c0)))AND(rt1.c0)))AND(((rt1.c0)<(rt1.c2)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)) ASC;
SELECT * FROM vt1, v0, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, v0 WHERE (v0.c0) ORDER BY ((v0.c0 COLLATE BINARY) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, v0 ORDER BY ((v0.c0 COLLATE BINARY) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 WHERE (v0.c0) ORDER BY ((v0.c0 COLLATE BINARY) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1, v0 ORDER BY ((v0.c0 COLLATE BINARY) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0 WHERE (v0.c0) ORDER BY ((v0.c0 COLLATE BINARY) BETWEEN (CAST(v0.c0 AS REAL)) AND ((- (v0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt1, v0 WHERE ((((x'', '-131702811', rt1.c0)) BETWEEN ((((((((((vt0.c0)OR(rt1.c1)))AND(v0.c0)))AND(rt1.c1)))AND(vt0.c0)), (NULL IN (vt0.c0)), x'' COLLATE NOCASE)) AND (((v0.c0 IN ()), LOWER(''), v0.c0 COLLATE BINARY)))) ORDER BY json_type(NULL) DESC  NULLS LAST, (vt0.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'', '-131702811', rt1.c0)) BETWEEN ((((((((((vt0.c0)OR(rt1.c1)))AND(v0.c0)))AND(rt1.c1)))AND(vt0.c0)), (NULL IN (vt0.c0)), x'' COLLATE NOCASE)) AND (((v0.c0 IN ()), LOWER(''), v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY json_type(NULL) DESC  NULLS LAST, (vt0.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1, v0 WHERE ((((x'', '-131702811', rt1.c0)) BETWEEN ((((((((((vt0.c0)OR(rt1.c1)))AND(v0.c0)))AND(rt1.c1)))AND(vt0.c0)), (NULL IN (vt0.c0)), x'' COLLATE NOCASE)) AND (((v0.c0 IN ()), LOWER(''), v0.c0 COLLATE BINARY)))) ORDER BY json_type(NULL) DESC  NULLS LAST, (vt0.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'', '-131702811', rt1.c0)) BETWEEN ((((((((((vt0.c0)OR(rt1.c1)))AND(v0.c0)))AND(rt1.c1)))AND(vt0.c0)), (NULL IN (vt0.c0)), x'' COLLATE NOCASE)) AND (((v0.c0 IN ()), LOWER(''), v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY json_type(NULL) DESC  NULLS LAST, (vt0.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1, v0 WHERE ((((x'', '-131702811', rt1.c0)) BETWEEN ((((((((((vt0.c0)OR(rt1.c1)))AND(v0.c0)))AND(rt1.c1)))AND(vt0.c0)), (NULL IN (vt0.c0)), x'' COLLATE NOCASE)) AND (((v0.c0 IN ()), LOWER(''), v0.c0 COLLATE BINARY)))) ORDER BY json_type(NULL) DESC  NULLS LAST, (vt0.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST((rt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST((rt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST((rt1.c0 IN ()) AS INTEGER));
SELECT ALL * FROM v0 WHERE ((((((v0.c0))=((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))==((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))=((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))==((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))=((v0.c0)))) NOTNULL));
SELECT ALL * FROM v0, vt0, vt1, rt1 WHERE ((- (rt1.c1 COLLATE NOCASE))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0, vt1, rt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM v0, vt0, vt1, rt1 WHERE ((- (rt1.c1 COLLATE NOCASE))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0, vt1, rt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM v0, vt0, vt1, rt1 WHERE ((- (rt1.c1 COLLATE NOCASE))) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((((((((rt1.c2) ISNULL))AND('-799641324')))OR((v0.c0 IN (rt1.c1, v0.c0)))))AND(((v0.c0) IS FALSE))))OR(((rt1.c2)*(v0.c0))))) ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN ((-2.05577088E9)>(rt1.c2)) WHEN MIN(rt1.c2, rt1.c0) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((v0.c0))) WHEN (v0.c0 IN (0Xffffffff86fe017b)) THEN HEX(rt1.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2) ISNULL))AND('-799641324')))OR((v0.c0 IN (rt1.c1, v0.c0)))))AND(((v0.c0) IS FALSE))))OR(((rt1.c2)*(v0.c0))))) IS TRUE)  as count FROM v0, rt1 NOT INDEXED ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN ((-2.05577088E9)>(rt1.c2)) WHEN MIN(rt1.c2, rt1.c0) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((v0.c0))) WHEN (v0.c0 IN (0Xffffffff86fe017b)) THEN HEX(rt1.c1) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((((((((rt1.c2) ISNULL))AND('-799641324')))OR((v0.c0 IN (rt1.c1, v0.c0)))))AND(((v0.c0) IS FALSE))))OR(((rt1.c2)*(v0.c0))))) ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN ((-2.05577088E9)>(rt1.c2)) WHEN MIN(rt1.c2, rt1.c0) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((v0.c0))) WHEN (v0.c0 IN (0Xffffffff86fe017b)) THEN HEX(rt1.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2) ISNULL))AND('-799641324')))OR((v0.c0 IN (rt1.c1, v0.c0)))))AND(((v0.c0) IS FALSE))))OR(((rt1.c2)*(v0.c0))))) IS TRUE)  as count FROM v0, rt1 NOT INDEXED ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN ((-2.05577088E9)>(rt1.c2)) WHEN MIN(rt1.c2, rt1.c0) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((v0.c0))) WHEN (v0.c0 IN (0Xffffffff86fe017b)) THEN HEX(rt1.c1) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((((((((rt1.c2) ISNULL))AND('-799641324')))OR((v0.c0 IN (rt1.c1, v0.c0)))))AND(((v0.c0) IS FALSE))))OR(((rt1.c2)*(v0.c0))))) ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN ((-2.05577088E9)>(rt1.c2)) WHEN MIN(rt1.c2, rt1.c0) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((v0.c0))) WHEN (v0.c0 IN (0Xffffffff86fe017b)) THEN HEX(rt1.c1) END  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CAST(4.1141559E8 AS REAL)) ORDER BY (NOT (((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(4.1141559E8 AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (NOT (((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(4.1141559E8 AS REAL)) ORDER BY (NOT (((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(4.1141559E8 AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (NOT (((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(4.1141559E8 AS REAL)) ORDER BY (NOT (((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (STRFTIME(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), TRIM(DISTINCT v0.c0, v0.c0), ((3.19130913E8)AND(v0.c0)))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((STRFTIME(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), TRIM(DISTINCT v0.c0, v0.c0), ((3.19130913E8)AND(v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0);
SELECT * FROM v0, vt0 WHERE (STRFTIME(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), TRIM(DISTINCT v0.c0, v0.c0), ((3.19130913E8)AND(v0.c0)))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((STRFTIME(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), TRIM(DISTINCT v0.c0, v0.c0), ((3.19130913E8)AND(v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0);
SELECT * FROM v0, vt0 WHERE (STRFTIME(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), TRIM(DISTINCT v0.c0, v0.c0), ((3.19130913E8)AND(v0.c0)))) ORDER BY v0.c0;
SELECT COUNT(*) FROM v0, rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND (('whFu^'))) WHERE (json_array_length(rt1.c0 COLLATE RTRIM, v0.c0)) ORDER BY ((((CAST(rt1.c0 AS REAL))AND(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 END)))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (0.10260409667124049)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(rt1.c0 COLLATE RTRIM, v0.c0)) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND (('whFu^'))) ORDER BY ((((CAST(rt1.c0 AS REAL))AND(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 END)))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (0.10260409667124049)))) DESC);
SELECT COUNT(*) FROM v0, rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND (('whFu^'))) WHERE (json_array_length(rt1.c0 COLLATE RTRIM, v0.c0)) ORDER BY ((((CAST(rt1.c0 AS REAL))AND(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 END)))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (0.10260409667124049)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(rt1.c0 COLLATE RTRIM, v0.c0)) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND (('whFu^'))) ORDER BY ((((CAST(rt1.c0 AS REAL))AND(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 END)))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (0.10260409667124049)))) DESC);
SELECT COUNT(*) FROM v0, rt1 LEFT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND (('whFu^'))) WHERE (json_array_length(rt1.c0 COLLATE RTRIM, v0.c0)) ORDER BY ((((CAST(rt1.c0 AS REAL))AND(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 END)))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (0.10260409667124049)))) DESC;
SELECT * FROM rt1, vt1 WHERE (0.9176958110845406) ORDER BY ((((rt1.c2) IS FALSE)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9176958110845406) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1 ORDER BY ((((rt1.c2) IS FALSE)) IS FALSE)  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE (0.9176958110845406) ORDER BY ((((rt1.c2) IS FALSE)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9176958110845406) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1 ORDER BY ((((rt1.c2) IS FALSE)) IS FALSE)  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE (0.9176958110845406) ORDER BY ((((rt1.c2) IS FALSE)) IS FALSE)  NULLS FIRST;
SELECT * FROM rt1, vt1 WHERE (CAST(((vt1.c0)/(vt1.c0)) AS TEXT)) ORDER BY (('977127298' COLLATE RTRIM) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)/(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt1, vt1 ORDER BY (('977127298' COLLATE RTRIM) IS FALSE));
SELECT * FROM rt1, vt1 WHERE (CAST(((vt1.c0)/(vt1.c0)) AS TEXT)) ORDER BY (('977127298' COLLATE RTRIM) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)/(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt1, vt1 ORDER BY (('977127298' COLLATE RTRIM) IS FALSE));
SELECT * FROM rt1, vt1 WHERE (CAST(((vt1.c0)/(vt1.c0)) AS TEXT)) ORDER BY (('977127298' COLLATE RTRIM) IS FALSE);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (CAST(rt1.c1 COLLATE NOCASE AS TEXT)) ORDER BY (((LIKELIHOOD(DISTINCT rt1.c0, 0.053413909835299256)))<>((((rt1.c0)IS NOT('100231856'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY (((LIKELIHOOD(DISTINCT rt1.c0, 0.053413909835299256)))<>((((rt1.c0)IS NOT('100231856'))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (CAST(rt1.c1 COLLATE NOCASE AS TEXT)) ORDER BY (((LIKELIHOOD(DISTINCT rt1.c0, 0.053413909835299256)))<>((((rt1.c0)IS NOT('100231856'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY (((LIKELIHOOD(DISTINCT rt1.c0, 0.053413909835299256)))<>((((rt1.c0)IS NOT('100231856'))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE (CAST(rt1.c1 COLLATE NOCASE AS TEXT)) ORDER BY (((LIKELIHOOD(DISTINCT rt1.c0, 0.053413909835299256)))<>((((rt1.c0)IS NOT('100231856'))))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (NULL COLLATE NOCASE);
SELECT * FROM vt0, vt1 FULL OUTER JOIN v0 ON ((1.51311837E9) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 END) AND (((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))AND(vt0.c0)))) FULL OUTER JOIN rt1 ON ((((((rt1.c2)AND(v0.c0)))OR(rt1.c2)))>(((((x'')OR(vt0.c0)))OR(rt1.c0)))) WHERE (CASE WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END THEN 0.4489474443255621 WHEN LIKELY(DISTINCT rt1.c0) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN CAST('1070603078' AS INTEGER) THEN CASE vt1.c0  WHEN v0.c0 THEN rt1.c0 ELSE 'OV~5〻Eh76' END ELSE (- (rt1.c2)) END) ORDER BY ((('0.853974697353789')) NOT BETWEEN (((((vt0.c0, x'dcb1', rt1.c0))<((vt1.c0, rt1.c2, vt0.c0))))) AND (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) DESC  NULLS LAST, ((((v0.c0) BETWEEN (rt1.c0) AND (v0.c0))) ISNULL)  NULLS LAST, rt1.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END THEN 0.4489474443255621 WHEN LIKELY(DISTINCT rt1.c0) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN CAST('1070603078' AS INTEGER) THEN CASE vt1.c0  WHEN v0.c0 THEN rt1.c0 ELSE 'OV~5〻Eh76' END ELSE (- (rt1.c2)) END) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN v0 ON ((1.51311837E9) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 END) AND (((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))AND(vt0.c0)))) FULL OUTER JOIN rt1 ON ((((((rt1.c2)AND(v0.c0)))OR(rt1.c2)))>(((((x'')OR(vt0.c0)))OR(rt1.c0)))) ORDER BY ((('0.853974697353789')) NOT BETWEEN (((((vt0.c0, x'dcb1', rt1.c0))<((vt1.c0, rt1.c2, vt0.c0))))) AND (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) DESC  NULLS LAST, ((((v0.c0) BETWEEN (rt1.c0) AND (v0.c0))) ISNULL)  NULLS LAST, rt1.c0 COLLATE BINARY);
SELECT * FROM vt0, vt1 FULL OUTER JOIN v0 ON ((1.51311837E9) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 END) AND (((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))AND(vt0.c0)))) FULL OUTER JOIN rt1 ON ((((((rt1.c2)AND(v0.c0)))OR(rt1.c2)))>(((((x'')OR(vt0.c0)))OR(rt1.c0)))) WHERE (CASE WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END THEN 0.4489474443255621 WHEN LIKELY(DISTINCT rt1.c0) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN CAST('1070603078' AS INTEGER) THEN CASE vt1.c0  WHEN v0.c0 THEN rt1.c0 ELSE 'OV~5〻Eh76' END ELSE (- (rt1.c2)) END) ORDER BY ((('0.853974697353789')) NOT BETWEEN (((((vt0.c0, x'dcb1', rt1.c0))<((vt1.c0, rt1.c2, vt0.c0))))) AND (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) DESC  NULLS LAST, ((((v0.c0) BETWEEN (rt1.c0) AND (v0.c0))) ISNULL)  NULLS LAST, rt1.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 END THEN 0.4489474443255621 WHEN LIKELY(DISTINCT rt1.c0) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN CAST('1070603078' AS INTEGER) THEN CASE vt1.c0  WHEN v0.c0 THEN rt1.c0 ELSE 'OV~5〻Eh76' END ELSE (- (rt1.c2)) END) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN v0 ON ((1.51311837E9) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 END) AND (((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))AND(vt0.c0)))) FULL OUTER JOIN rt1 ON ((((((rt1.c2)AND(v0.c0)))OR(rt1.c2)))>(((((x'')OR(vt0.c0)))OR(rt1.c0)))) ORDER BY ((('0.853974697353789')) NOT BETWEEN (((((vt0.c0, x'dcb1', rt1.c0))<((vt1.c0, rt1.c2, vt0.c0))))) AND (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) DESC  NULLS LAST, ((((v0.c0) BETWEEN (rt1.c0) AND (v0.c0))) ISNULL)  NULLS LAST, rt1.c0 COLLATE BINARY);
SELECT * FROM v0 WHERE (((((IFNULL(DISTINCT v0.c0, v0.c0))AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('TRUE')))))OR(NULL))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((IFNULL(DISTINCT v0.c0, v0.c0))AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('TRUE')))))OR(NULL))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM v0 WHERE (((((IFNULL(DISTINCT v0.c0, v0.c0))AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('TRUE')))))OR(NULL))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((IFNULL(DISTINCT v0.c0, v0.c0))AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('TRUE')))))OR(NULL))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM v0 WHERE (((((IFNULL(DISTINCT v0.c0, v0.c0))AND(((v0.c0) NOT BETWEEN (v0.c0) AND ('TRUE')))))OR(NULL))) ORDER BY v0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE (((rt1.c0 COLLATE BINARY)AND((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE BINARY)AND((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE (((rt1.c0 COLLATE BINARY)AND((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE BINARY)AND((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE (((rt1.c0 COLLATE BINARY)AND((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CAST(((vt0.c0)||(vt0.c0)) AS BLOB) CROSS JOIN rt1 ON CASE WHEN CASE rt1.c1  WHEN vt1.c0 THEN vt0.c0 END THEN CAST(rt1.c2 AS NUMERIC) ELSE CAST(rt1.c1 AS NUMERIC) END WHERE (CASE WHEN CAST(rt1.c2 AS REAL) THEN (rt1.c1 IN (vt1.c0)) ELSE rt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c2 AS REAL) THEN (rt1.c1 IN (vt1.c0)) ELSE rt1.c0 END) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(((vt0.c0)||(vt0.c0)) AS BLOB) CROSS JOIN rt1 ON CASE WHEN CASE rt1.c1  WHEN vt1.c0 THEN vt0.c0 END THEN CAST(rt1.c2 AS NUMERIC) ELSE CAST(rt1.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CAST(((vt0.c0)||(vt0.c0)) AS BLOB) CROSS JOIN rt1 ON CASE WHEN CASE rt1.c1  WHEN vt1.c0 THEN vt0.c0 END THEN CAST(rt1.c2 AS NUMERIC) ELSE CAST(rt1.c1 AS NUMERIC) END WHERE (CASE WHEN CAST(rt1.c2 AS REAL) THEN (rt1.c1 IN (vt1.c0)) ELSE rt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c2 AS REAL) THEN (rt1.c1 IN (vt1.c0)) ELSE rt1.c0 END) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(((vt0.c0)||(vt0.c0)) AS BLOB) CROSS JOIN rt1 ON CASE WHEN CASE rt1.c1  WHEN vt1.c0 THEN vt0.c0 END THEN CAST(rt1.c2 AS NUMERIC) ELSE CAST(rt1.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CAST(((vt0.c0)||(vt0.c0)) AS BLOB) CROSS JOIN rt1 ON CASE WHEN CASE rt1.c1  WHEN vt1.c0 THEN vt0.c0 END THEN CAST(rt1.c2 AS NUMERIC) ELSE CAST(rt1.c1 AS NUMERIC) END WHERE (CASE WHEN CAST(rt1.c2 AS REAL) THEN (rt1.c1 IN (vt1.c0)) ELSE rt1.c0 END);
SELECT ALL * FROM rt1, v0, vt1 WHERE (CAST('OV~5〻Eh76' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('OV~5〻Eh76' AS TEXT)) IS TRUE)  as count FROM rt1, v0, vt1);
SELECT ALL * FROM rt1, v0, vt1 WHERE (CAST('OV~5〻Eh76' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('OV~5〻Eh76' AS TEXT)) IS TRUE)  as count FROM rt1, v0, vt1);
SELECT ALL * FROM rt1, v0, vt1 WHERE (CAST('OV~5〻Eh76' AS TEXT));
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((rt1.c0) IS FALSE) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS FALSE) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((rt1.c0) IS FALSE) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS FALSE) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((rt1.c0) IS FALSE) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE ('0.1863515468518111');
SELECT SUM(count) FROM (SELECT (('0.1863515468518111') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('0.1863515468518111');
SELECT SUM(count) FROM (SELECT (('0.1863515468518111') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('0.1863515468518111');
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER), CASE WHEN 0.0996737784068168 THEN v0.c0 ELSE vt0.c0 END, (NOT (v0.c0)))) AND ((vt0.c0 COLLATE BINARY, v0.c0, ((v0.c0)OR(vt0.c0))))) WHERE (NULL) ORDER BY CAST(((vt0.c0)IS NOT(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER), CASE WHEN 0.0996737784068168 THEN v0.c0 ELSE vt0.c0 END, (NOT (v0.c0)))) AND ((vt0.c0 COLLATE BINARY, v0.c0, ((v0.c0)OR(vt0.c0))))) ORDER BY CAST(((vt0.c0)IS NOT(vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER), CASE WHEN 0.0996737784068168 THEN v0.c0 ELSE vt0.c0 END, (NOT (v0.c0)))) AND ((vt0.c0 COLLATE BINARY, v0.c0, ((v0.c0)OR(vt0.c0))))) WHERE (NULL) ORDER BY CAST(((vt0.c0)IS NOT(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER), CASE WHEN 0.0996737784068168 THEN v0.c0 ELSE vt0.c0 END, (NOT (v0.c0)))) AND ((vt0.c0 COLLATE BINARY, v0.c0, ((v0.c0)OR(vt0.c0))))) ORDER BY CAST(((vt0.c0)IS NOT(vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(v0.c0 AS INTEGER), CASE WHEN 0.0996737784068168 THEN v0.c0 ELSE vt0.c0 END, (NOT (v0.c0)))) AND ((vt0.c0 COLLATE BINARY, v0.c0, ((v0.c0)OR(vt0.c0))))) WHERE (NULL) ORDER BY CAST(((vt0.c0)IS NOT(vt0.c0)) AS REAL);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (v0.c0 COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (x'3e15');
SELECT SUM(count) FROM (SELECT ALL ((x'3e15') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'3e15');
SELECT SUM(count) FROM (SELECT ALL ((x'3e15') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'3e15');
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((0.143652908864773) BETWEEN (rt1.c1) AND (rt1.c0)) THEN (+ (rt1.c1)) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN ABS(DISTINCT rt1.c0) WHEN ((rt1.c1)<(rt1.c0)) THEN ((rt1.c1) NOTNULL) ELSE ABS(rt1.c2) END) ORDER BY (- (rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0.143652908864773) BETWEEN (rt1.c1) AND (rt1.c0)) THEN (+ (rt1.c1)) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN ABS(DISTINCT rt1.c0) WHEN ((rt1.c1)<(rt1.c0)) THEN ((rt1.c1) NOTNULL) ELSE ABS(rt1.c2) END) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((0.143652908864773) BETWEEN (rt1.c1) AND (rt1.c0)) THEN (+ (rt1.c1)) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN ABS(DISTINCT rt1.c0) WHEN ((rt1.c1)<(rt1.c0)) THEN ((rt1.c1) NOTNULL) ELSE ABS(rt1.c2) END) ORDER BY (- (rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0.143652908864773) BETWEEN (rt1.c1) AND (rt1.c0)) THEN (+ (rt1.c1)) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN ABS(DISTINCT rt1.c0) WHEN ((rt1.c1)<(rt1.c0)) THEN ((rt1.c1) NOTNULL) ELSE ABS(rt1.c2) END) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((0.143652908864773) BETWEEN (rt1.c1) AND (rt1.c0)) THEN (+ (rt1.c1)) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN ABS(DISTINCT rt1.c0) WHEN ((rt1.c1)<(rt1.c0)) THEN ((rt1.c1) NOTNULL) ELSE ABS(rt1.c2) END) ORDER BY (- (rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((UNLIKELY(vt0.c0)))>=(('-2010879401')))) ORDER BY CAST((vt0.c0 IN ()) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(vt0.c0)))>=(('-2010879401')))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((UNLIKELY(vt0.c0)))>=(('-2010879401')))) ORDER BY CAST((vt0.c0 IN ()) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(vt0.c0)))>=(('-2010879401')))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((UNLIKELY(vt0.c0)))>=(('-2010879401')))) ORDER BY CAST((vt0.c0 IN ()) AS BLOB) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (0.9729488573348127) ORDER BY ((x'')AND(((vt1.c0)IS NOT(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9729488573348127) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((x'')AND(((vt1.c0)IS NOT(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (0.9729488573348127) ORDER BY ((x'')AND(((vt1.c0)IS NOT(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9729488573348127) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((x'')AND(((vt1.c0)IS NOT(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (0.9729488573348127) ORDER BY ((x'')AND(((vt1.c0)IS NOT(v0.c0))))  NULLS FIRST;
SELECT * FROM vt0, v0, rt1, vt1 WHERE ((NOT ((+ (NULL))))) ORDER BY ((((rt1.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOT BETWEEN ((((rt1.c1, v0.c0, rt1.c0, rt1.c2, vt0.c0)) BETWEEN ((rt1.c1, vt1.c0, v0.c0, rt1.c0, NULL)) AND ((vt0.c0, vt0.c0, rt1.c1, rt1.c1, rt1.c1)))) AND (CAST(vt1.c0 AS BLOB))), rt1.c2;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (NULL))))) IS TRUE)  as count FROM vt0, v0, rt1, vt1 ORDER BY ((((rt1.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOT BETWEEN ((((rt1.c1, v0.c0, rt1.c0, rt1.c2, vt0.c0)) BETWEEN ((rt1.c1, vt1.c0, v0.c0, rt1.c0, NULL)) AND ((vt0.c0, vt0.c0, rt1.c1, rt1.c1, rt1.c1)))) AND (CAST(vt1.c0 AS BLOB))), rt1.c2);
SELECT * FROM vt0, v0, rt1, vt1 WHERE ((NOT ((+ (NULL))))) ORDER BY ((((rt1.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOT BETWEEN ((((rt1.c1, v0.c0, rt1.c0, rt1.c2, vt0.c0)) BETWEEN ((rt1.c1, vt1.c0, v0.c0, rt1.c0, NULL)) AND ((vt0.c0, vt0.c0, rt1.c1, rt1.c1, rt1.c1)))) AND (CAST(vt1.c0 AS BLOB))), rt1.c2;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (NULL))))) IS TRUE)  as count FROM vt0, v0, rt1, vt1 ORDER BY ((((rt1.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOT BETWEEN ((((rt1.c1, v0.c0, rt1.c0, rt1.c2, vt0.c0)) BETWEEN ((rt1.c1, vt1.c0, v0.c0, rt1.c0, NULL)) AND ((vt0.c0, vt0.c0, rt1.c1, rt1.c1, rt1.c1)))) AND (CAST(vt1.c0 AS BLOB))), rt1.c2);
SELECT * FROM vt0, v0, rt1, vt1 WHERE ((NOT ((+ (NULL))))) ORDER BY ((((rt1.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOT BETWEEN ((((rt1.c1, v0.c0, rt1.c0, rt1.c2, vt0.c0)) BETWEEN ((rt1.c1, vt1.c0, v0.c0, rt1.c0, NULL)) AND ((vt0.c0, vt0.c0, rt1.c1, rt1.c1, rt1.c1)))) AND (CAST(vt1.c0 AS BLOB))), rt1.c2;
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((CHANGES()) ISNULL)) ORDER BY ((0x5d1361d4)>(vt1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES()) ISNULL)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((0X5d1361d4)>(vt1.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((CHANGES()) ISNULL)) ORDER BY ((0x5d1361d4)>(vt1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES()) ISNULL)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((0X5d1361d4)>(vt1.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((CHANGES()) ISNULL)) ORDER BY ((0x5d1361d4)>(vt1.c0)) COLLATE NOCASE DESC;
SELECT ALL * FROM v0 WHERE (((v0.c0) BETWEEN (((x'') BETWEEN (v0.c0) AND (v0.c0))) AND (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c0) IS TRUE) COLLATE RTRIM DESC  NULLS FIRST, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (((x'') BETWEEN (v0.c0) AND (v0.c0))) AND (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS TRUE) COLLATE RTRIM DESC  NULLS FIRST, v0.c0 DESC);
SELECT ALL * FROM v0 WHERE (((v0.c0) BETWEEN (((x'') BETWEEN (v0.c0) AND (v0.c0))) AND (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c0) IS TRUE) COLLATE RTRIM DESC  NULLS FIRST, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (((x'') BETWEEN (v0.c0) AND (v0.c0))) AND (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS TRUE) COLLATE RTRIM DESC  NULLS FIRST, v0.c0 DESC);
SELECT ALL * FROM v0 WHERE (((v0.c0) BETWEEN (((x'') BETWEEN (v0.c0) AND (v0.c0))) AND (((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c0) IS TRUE) COLLATE RTRIM DESC  NULLS FIRST, v0.c0 DESC;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0)>(((((vt0.c0)AND(vt0.c0)))OR(rt1.c1))))) ORDER BY json_remove(((rt1.c1) NOT NULL), ((rt1.c2) NOTNULL)) ASC  NULLS FIRST, CAST(((x'') ISNULL) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(((((vt0.c0)AND(vt0.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY json_remove(((rt1.c1) NOT NULL), ((rt1.c2) NOTNULL)) ASC  NULLS FIRST, CAST(((x'') ISNULL) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0)>(((((vt0.c0)AND(vt0.c0)))OR(rt1.c1))))) ORDER BY json_remove(((rt1.c1) NOT NULL), ((rt1.c2) NOTNULL)) ASC  NULLS FIRST, CAST(((x'') ISNULL) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(((((vt0.c0)AND(vt0.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY json_remove(((rt1.c1) NOT NULL), ((rt1.c2) NOTNULL)) ASC  NULLS FIRST, CAST(((x'') ISNULL) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0)>(((((vt0.c0)AND(vt0.c0)))OR(rt1.c1))))) ORDER BY json_remove(((rt1.c1) NOT NULL), ((rt1.c2) NOTNULL)) ASC  NULLS FIRST, CAST(((x'') ISNULL) AS BLOB) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt1 INNER JOIN vt0 ON (rt1.c2 COLLATE BINARY IN ()) LEFT OUTER JOIN v0 ON rt1.c1 WHERE ((NOT ((((rt1.c2, rt1.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c0, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c0)))))) ORDER BY ((((0x3a7be35b)AND(((rt1.c0) IS FALSE))))OR(CHAR(vt1.c0))), vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt1.c2, rt1.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c0, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c0)))))) IS TRUE)  as count FROM vt1, rt1 INNER JOIN vt0 ON (rt1.c2 COLLATE BINARY IN ()) LEFT OUTER JOIN v0 ON rt1.c1 ORDER BY ((((0x3a7be35b)AND(((rt1.c0) IS FALSE))))OR(CHAR(vt1.c0))), vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1 INNER JOIN vt0 ON (rt1.c2 COLLATE BINARY IN ()) LEFT OUTER JOIN v0 ON rt1.c1 WHERE ((NOT ((((rt1.c2, rt1.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c0, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c0)))))) ORDER BY ((((0x3a7be35b)AND(((rt1.c0) IS FALSE))))OR(CHAR(vt1.c0))), vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt1.c2, rt1.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c0, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c0)))))) IS TRUE)  as count FROM vt1, rt1 INNER JOIN vt0 ON (rt1.c2 COLLATE BINARY IN ()) LEFT OUTER JOIN v0 ON rt1.c1 ORDER BY ((((0x3a7be35b)AND(((rt1.c0) IS FALSE))))OR(CHAR(vt1.c0))), vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1 INNER JOIN vt0 ON (rt1.c2 COLLATE BINARY IN ()) LEFT OUTER JOIN v0 ON rt1.c1 WHERE ((NOT ((((rt1.c2, rt1.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt1.c0, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c0)))))) ORDER BY ((((0x3a7be35b)AND(((rt1.c0) IS FALSE))))OR(CHAR(vt1.c0))), vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (((((x'ded1')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) NOT NULL) INNER JOIN rt1 ON vt0.c0 CROSS JOIN vt1 ON (~ ((((vt0.c0, v0.c0, rt1.c2))<=((vt1.c0, v0.c0, vt1.c0))))) WHERE (((((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))LIKE(CAST(x'6afa' AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))LIKE(CAST(x'6afa' AS TEXT)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((x'ded1')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) NOT NULL) INNER JOIN rt1 ON vt0.c0 CROSS JOIN vt1 ON (~ ((((vt0.c0, v0.c0, rt1.c2))<=((vt1.c0, v0.c0, vt1.c0))))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (((((x'ded1')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) NOT NULL) INNER JOIN rt1 ON vt0.c0 CROSS JOIN vt1 ON (~ ((((vt0.c0, v0.c0, rt1.c2))<=((vt1.c0, v0.c0, vt1.c0))))) WHERE (((((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))LIKE(CAST(x'6afa' AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))LIKE(CAST(x'6afa' AS TEXT)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((x'ded1')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) NOT NULL) INNER JOIN rt1 ON vt0.c0 CROSS JOIN vt1 ON (~ ((((vt0.c0, v0.c0, rt1.c2))<=((vt1.c0, v0.c0, vt1.c0))))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (((((x'ded1')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) NOT NULL) INNER JOIN rt1 ON vt0.c0 CROSS JOIN vt1 ON (~ ((((vt0.c0, v0.c0, rt1.c2))<=((vt1.c0, v0.c0, vt1.c0))))) WHERE (((((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))LIKE(CAST(x'6afa' AS TEXT))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((LOWER(v0.c0))|('')) WHERE (((((x'3d77')AND(((rt1.c1) IS FALSE))))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((x'3d77')AND(((rt1.c1) IS FALSE))))AND(x''))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((LOWER(v0.c0))|('')));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((LOWER(v0.c0))|('')) WHERE (((((x'3d77')AND(((rt1.c1) IS FALSE))))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((x'3d77')AND(((rt1.c1) IS FALSE))))AND(x''))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((LOWER(v0.c0))|('')));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((LOWER(v0.c0))|('')) WHERE (((((x'3d77')AND(((rt1.c1) IS FALSE))))AND(x'')));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE (((((rt1.c0)==(rt1.c2))) NOT NULL)) ORDER BY CASE WHEN vt1.c0 THEN ((rt1.c1)=('')) ELSE ((vt1.c0)<(rt1.c1)) END  NULLS FIRST, ((((rt1.c1)>>(rt1.c0))) BETWEEN ((((vt1.c0, vt0.c0, x'')) BETWEEN ((vt1.c0, rt1.c0, vt1.c0)) AND ((rt1.c1, rt1.c0, rt1.c2)))) AND (((rt1.c2)GLOB(rt1.c1))))  NULLS FIRST, (((((vt0.c0, vt0.c0, rt1.c0))>=((rt1.c1, rt1.c2, rt1.c2))))>=(((((rt1.c2)AND(rt1.c2)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)=(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY CASE WHEN vt1.c0 THEN ((rt1.c1)=('')) ELSE ((vt1.c0)<(rt1.c1)) END  NULLS FIRST, ((((rt1.c1)>>(rt1.c0))) BETWEEN ((((vt1.c0, vt0.c0, x'')) BETWEEN ((vt1.c0, rt1.c0, vt1.c0)) AND ((rt1.c1, rt1.c0, rt1.c2)))) AND (((rt1.c2)GLOB(rt1.c1))))  NULLS FIRST, (((((vt0.c0, vt0.c0, rt1.c0))>=((rt1.c1, rt1.c2, rt1.c2))))>=(((((rt1.c2)AND(rt1.c2)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE (((((rt1.c0)==(rt1.c2))) NOT NULL)) ORDER BY CASE WHEN vt1.c0 THEN ((rt1.c1)=('')) ELSE ((vt1.c0)<(rt1.c1)) END  NULLS FIRST, ((((rt1.c1)>>(rt1.c0))) BETWEEN ((((vt1.c0, vt0.c0, x'')) BETWEEN ((vt1.c0, rt1.c0, vt1.c0)) AND ((rt1.c1, rt1.c0, rt1.c2)))) AND (((rt1.c2)GLOB(rt1.c1))))  NULLS FIRST, (((((vt0.c0, vt0.c0, rt1.c0))>=((rt1.c1, rt1.c2, rt1.c2))))>=(((((rt1.c2)AND(rt1.c2)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)=(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY CASE WHEN vt1.c0 THEN ((rt1.c1)=('')) ELSE ((vt1.c0)<(rt1.c1)) END  NULLS FIRST, ((((rt1.c1)>>(rt1.c0))) BETWEEN ((((vt1.c0, vt0.c0, x'')) BETWEEN ((vt1.c0, rt1.c0, vt1.c0)) AND ((rt1.c1, rt1.c0, rt1.c2)))) AND (((rt1.c2)GLOB(rt1.c1))))  NULLS FIRST, (((((vt0.c0, vt0.c0, rt1.c0))>=((rt1.c1, rt1.c2, rt1.c2))))>=(((((rt1.c2)AND(rt1.c2)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 WHERE (((((rt1.c0)==(rt1.c2))) NOT NULL)) ORDER BY CASE WHEN vt1.c0 THEN ((rt1.c1)=('')) ELSE ((vt1.c0)<(rt1.c1)) END  NULLS FIRST, ((((rt1.c1)>>(rt1.c0))) BETWEEN ((((vt1.c0, vt0.c0, x'')) BETWEEN ((vt1.c0, rt1.c0, vt1.c0)) AND ((rt1.c1, rt1.c0, rt1.c2)))) AND (((rt1.c2)GLOB(rt1.c1))))  NULLS FIRST, (((((vt0.c0, vt0.c0, rt1.c0))>=((rt1.c1, rt1.c2, rt1.c2))))>=(((((rt1.c2)AND(rt1.c2)))AND(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0 COLLATE NOCASE)AND((((vt1.c0))<((v0.c0))))))AND((((vt1.c0))<=((v0.c0)))))) ORDER BY (NOT (((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE NOCASE)AND((((vt1.c0))<((v0.c0))))))AND((((vt1.c0))<=((v0.c0)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (NOT (((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0 COLLATE NOCASE)AND((((vt1.c0))<((v0.c0))))))AND((((vt1.c0))<=((v0.c0)))))) ORDER BY (NOT (((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE NOCASE)AND((((vt1.c0))<((v0.c0))))))AND((((vt1.c0))<=((v0.c0)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (NOT (((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0 COLLATE NOCASE)AND((((vt1.c0))<((v0.c0))))))AND((((vt1.c0))<=((v0.c0)))))) ORDER BY (NOT (((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN (((vt1.c0) NOTNULL), (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN (vt1.c0)) IN (((vt1.c0) NOTNULL), (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, NULL)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN (((vt1.c0) NOTNULL), (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN (vt1.c0)) IN (((vt1.c0) NOTNULL), (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, NULL)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN (((vt1.c0) NOTNULL), (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, NULL))))));
SELECT * FROM vt1, vt0, v0, rt1 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((((rt1.c2)|(vt0.c0))) NOT BETWEEN (rt1.c1) AND (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY ((((rt1.c2)|(vt0.c0))) NOT BETWEEN (rt1.c1) AND (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT * FROM vt1, vt0, v0, rt1 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((((rt1.c2)|(vt0.c0))) NOT BETWEEN (rt1.c1) AND (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0, v0, rt1 ORDER BY ((((rt1.c2)|(vt0.c0))) NOT BETWEEN (rt1.c1) AND (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT * FROM vt1, vt0, v0, rt1 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((((rt1.c2)|(vt0.c0))) NOT BETWEEN (rt1.c1) AND (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c2))));
SELECT ALL * FROM v0, vt1, vt0 WHERE (((CAST(vt1.c0 AS REAL))|(((-1.825425357E9) IS TRUE)))) ORDER BY v0.c0 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL))|(((-1.825425357E9) IS TRUE)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY v0.c0 COLLATE BINARY DESC);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((CAST(vt1.c0 AS REAL))|(((-1.825425357E9) IS TRUE)))) ORDER BY v0.c0 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL))|(((-1.825425357E9) IS TRUE)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY v0.c0 COLLATE BINARY DESC);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((CAST(vt1.c0 AS REAL))|(((-1.825425357E9) IS TRUE)))) ORDER BY v0.c0 COLLATE BINARY DESC;
SELECT ALL * FROM vt0, v0, vt1, rt1 WHERE ((+ (vt0.c0))) ORDER BY ((((rt1.c2) IS FALSE)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY ((((rt1.c2) IS FALSE)) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0, vt1, rt1 WHERE ((+ (vt0.c0))) ORDER BY ((((rt1.c2) IS FALSE)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0, v0, vt1, rt1 ORDER BY ((((rt1.c2) IS FALSE)) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0, vt1, rt1 WHERE ((+ (vt0.c0))) ORDER BY ((((rt1.c2) IS FALSE)) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1, vt1 WHERE (RTRIM((((rt1.c2, '80175157', rt1.c1))>=((x'', v0.c0, rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((((rt1.c2, '80175157', rt1.c1))>=((x'', v0.c0, rt1.c1))))) IS TRUE)  as count FROM v0, rt1, vt1);
SELECT ALL COUNT(*) FROM v0, rt1, vt1 WHERE (RTRIM((((rt1.c2, '80175157', rt1.c1))>=((x'', v0.c0, rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((((rt1.c2, '80175157', rt1.c1))>=((x'', v0.c0, rt1.c1))))) IS TRUE)  as count FROM v0, rt1, vt1);
SELECT ALL COUNT(*) FROM v0, rt1, vt1 WHERE (RTRIM((((rt1.c2, '80175157', rt1.c1))>=((x'', v0.c0, rt1.c1)))));
SELECT ALL * FROM rt1, vt0, vt1, v0 WHERE (((((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((UPPER(DISTINCT vt0.c0))+(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, vt1, v0 ORDER BY ((UPPER(DISTINCT vt0.c0))+(NULL)) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0, vt1, v0 WHERE (((((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((UPPER(DISTINCT vt0.c0))+(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, vt1, v0 ORDER BY ((UPPER(DISTINCT vt0.c0))+(NULL)) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0, vt1, v0 WHERE (((((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((UPPER(DISTINCT vt0.c0))+(NULL)) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (LOWER(0.21274451686554463)) ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(0.21274451686554463)) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (LOWER(0.21274451686554463)) ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(0.21274451686554463)) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (LOWER(0.21274451686554463)) ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((TOTAL_CHANGES()) NOT BETWEEN (((vt0.c0)*(vt1.c0))) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES()) NOT BETWEEN (((vt0.c0)*(vt1.c0))) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((TOTAL_CHANGES()) NOT BETWEEN (((vt0.c0)*(vt1.c0))) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES()) NOT BETWEEN (((vt0.c0)*(vt1.c0))) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((TOTAL_CHANGES()) NOT BETWEEN (((vt0.c0)*(vt1.c0))) AND (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))));
SELECT * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT * FROM rt1, vt0, v0, vt1 WHERE (CASE WHEN ((x'11d9')<>(v0.c0)) THEN (~ (2.123479809E9)) WHEN NULL THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND ('411415590')) WHEN ((vt1.c0)/(vt0.c0)) THEN ((v0.c0)|(rt1.c2)) ELSE TRIM(DISTINCT vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'11d9')<>(v0.c0)) THEN (~ (2.123479809E9)) WHEN NULL THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND ('411415590')) WHEN ((vt1.c0)/(vt0.c0)) THEN ((v0.c0)|(rt1.c2)) ELSE TRIM(DISTINCT vt1.c0) END) IS TRUE)  as count FROM rt1, vt0, v0, vt1);
SELECT * FROM rt1, vt0, v0, vt1 WHERE (CASE WHEN ((x'11d9')<>(v0.c0)) THEN (~ (2.123479809E9)) WHEN NULL THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND ('411415590')) WHEN ((vt1.c0)/(vt0.c0)) THEN ((v0.c0)|(rt1.c2)) ELSE TRIM(DISTINCT vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'11d9')<>(v0.c0)) THEN (~ (2.123479809E9)) WHEN NULL THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND ('411415590')) WHEN ((vt1.c0)/(vt0.c0)) THEN ((v0.c0)|(rt1.c2)) ELSE TRIM(DISTINCT vt1.c0) END) IS TRUE)  as count FROM rt1, vt0, v0, vt1);
SELECT * FROM rt1, vt0, v0, vt1 WHERE (CASE WHEN ((x'11d9')<>(v0.c0)) THEN (~ (2.123479809E9)) WHEN NULL THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND ('411415590')) WHEN ((vt1.c0)/(vt0.c0)) THEN ((v0.c0)|(rt1.c2)) ELSE TRIM(DISTINCT vt1.c0) END);
SELECT COUNT(*) FROM vt1, vt0, v0 CROSS JOIN rt1 ON ((ROUND(v0.c0, rt1.c0))&((((v0.c0, rt1.c0, rt1.c1, '2121023655', vt0.c0))!=((vt1.c0, -2010879401, rt1.c2, rt1.c1, rt1.c2))))) WHERE ((((rt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, v0 CROSS JOIN rt1 ON ((ROUND(v0.c0, rt1.c0))&((((v0.c0, rt1.c0, rt1.c1, '2121023655', vt0.c0))!=((vt1.c0, -2010879401, rt1.c2, rt1.c1, rt1.c2))))));
SELECT COUNT(*) FROM vt1, vt0, v0 CROSS JOIN rt1 ON ((ROUND(v0.c0, rt1.c0))&((((v0.c0, rt1.c0, rt1.c1, '2121023655', vt0.c0))!=((vt1.c0, -2010879401, rt1.c2, rt1.c1, rt1.c2))))) WHERE ((((rt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, v0 CROSS JOIN rt1 ON ((ROUND(v0.c0, rt1.c0))&((((v0.c0, rt1.c0, rt1.c1, '2121023655', vt0.c0))!=((vt1.c0, -2010879401, rt1.c2, rt1.c1, rt1.c2))))));
SELECT COUNT(*) FROM vt1, vt0, v0 CROSS JOIN rt1 ON ((ROUND(v0.c0, rt1.c0))&((((v0.c0, rt1.c0, rt1.c1, '2121023655', vt0.c0))!=((vt1.c0, -2010879401, rt1.c2, rt1.c1, rt1.c2))))) WHERE ((((rt1.c0 IN ())) NOT NULL));
SELECT ALL * FROM rt1, vt1, v0 WHERE ((+ (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) ISNULL)))) IS TRUE)  as count FROM rt1, vt1, v0);
SELECT ALL * FROM rt1, vt1, v0 WHERE ((+ (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) ISNULL)))) IS TRUE)  as count FROM rt1, vt1, v0);
SELECT ALL * FROM rt1, vt1, v0 WHERE ((+ (((v0.c0) ISNULL))));
SELECT * FROM vt0, vt1, v0 CROSS JOIN rt1 ON CASE ((vt0.c0) NOT NULL)  WHEN ((rt1.c0) IS TRUE) THEN NULL COLLATE BINARY END WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOT NULL) THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1, v0 CROSS JOIN rt1 ON CASE ((vt0.c0) NOT NULL)  WHEN ((rt1.c0) IS TRUE) THEN NULL COLLATE BINARY END);
SELECT * FROM vt0, vt1, v0 CROSS JOIN rt1 ON CASE ((vt0.c0) NOT NULL)  WHEN ((rt1.c0) IS TRUE) THEN NULL COLLATE BINARY END WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOT NULL) THEN ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1, v0 CROSS JOIN rt1 ON CASE ((vt0.c0) NOT NULL)  WHEN ((rt1.c0) IS TRUE) THEN NULL COLLATE BINARY END);
SELECT * FROM vt0, vt1, v0 CROSS JOIN rt1 ON CASE ((vt0.c0) NOT NULL)  WHEN ((rt1.c0) IS TRUE) THEN NULL COLLATE BINARY END WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN ((vt0.c0) IS TRUE) END);
SELECT * FROM rt1 WHERE ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END IN ())) ORDER BY ((rt1.c2) IS FALSE)  NULLS LAST, CAST((rt1.c1 IN ()) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2) IS FALSE)  NULLS LAST, CAST((rt1.c1 IN ()) AS NUMERIC)  NULLS LAST);
SELECT * FROM rt1 WHERE ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END IN ())) ORDER BY ((rt1.c2) IS FALSE)  NULLS LAST, CAST((rt1.c1 IN ()) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2) IS FALSE)  NULLS LAST, CAST((rt1.c1 IN ()) AS NUMERIC)  NULLS LAST);
SELECT * FROM rt1 WHERE ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END IN ())) ORDER BY ((rt1.c2) IS FALSE)  NULLS LAST, CAST((rt1.c1 IN ()) AS NUMERIC)  NULLS LAST;
SELECT * FROM rt1, vt1, vt0, v0 WHERE (((CAST(rt1.c0 AS INTEGER))>>(((rt1.c2)%(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS INTEGER))>>(((rt1.c2)%(rt1.c2))))) IS TRUE)  as count FROM rt1, vt1, vt0, v0);
SELECT * FROM rt1, vt1, vt0, v0 WHERE (((CAST(rt1.c0 AS INTEGER))>>(((rt1.c2)%(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS INTEGER))>>(((rt1.c2)%(rt1.c2))))) IS TRUE)  as count FROM rt1, vt1, vt0, v0);
SELECT * FROM rt1, vt1, vt0, v0 WHERE (((CAST(rt1.c0 AS INTEGER))>>(((rt1.c2)%(rt1.c2)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.48690152614964743 COLLATE NOCASE) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((CASE WHEN vt0.c0 THEN 0.08866353892961598 ELSE vt1.c0 END) BETWEEN ((~ (vt1.c0))) AND (vt0.c0)), (((vt1.c0)) BETWEEN ((((vt1.c0)<(vt0.c0)))) AND (((vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.48690152614964743 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((CASE WHEN vt0.c0 THEN 0.08866353892961598 ELSE vt1.c0 END) BETWEEN ((~ (vt1.c0))) AND (vt0.c0)), (((vt1.c0)) BETWEEN ((((vt1.c0)<(vt0.c0)))) AND (((vt0.c0 IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.48690152614964743 COLLATE NOCASE) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((CASE WHEN vt0.c0 THEN 0.08866353892961598 ELSE vt1.c0 END) BETWEEN ((~ (vt1.c0))) AND (vt0.c0)), (((vt1.c0)) BETWEEN ((((vt1.c0)<(vt0.c0)))) AND (((vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.48690152614964743 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((CASE WHEN vt0.c0 THEN 0.08866353892961598 ELSE vt1.c0 END) BETWEEN ((~ (vt1.c0))) AND (vt0.c0)), (((vt1.c0)) BETWEEN ((((vt1.c0)<(vt0.c0)))) AND (((vt0.c0 IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.48690152614964743 COLLATE NOCASE) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((CASE WHEN vt0.c0 THEN 0.08866353892961598 ELSE vt1.c0 END) BETWEEN ((~ (vt1.c0))) AND (vt0.c0)), (((vt1.c0)) BETWEEN ((((vt1.c0)<(vt0.c0)))) AND (((vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (NOT (((vt0.c0) NOT NULL))) CROSS JOIN vt1 ON ((- (rt1.c1)) IN (((((((((rt1.c2)OR(vt0.c0)))OR(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))) WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt1.c0 END) NOT BETWEEN (rt1.c0) AND (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE 0.4338449200330555 END))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) ELSE ((vt0.c0)*(rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt1.c0 END) NOT BETWEEN (rt1.c0) AND (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE 0.4338449200330555 END))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (NOT (((vt0.c0) NOT NULL))) CROSS JOIN vt1 ON ((- (rt1.c1)) IN (((((((((rt1.c2)OR(vt0.c0)))OR(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) ELSE ((vt0.c0)*(rt1.c1)) END ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (NOT (((vt0.c0) NOT NULL))) CROSS JOIN vt1 ON ((- (rt1.c1)) IN (((((((((rt1.c2)OR(vt0.c0)))OR(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))) WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt1.c0 END) NOT BETWEEN (rt1.c0) AND (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE 0.4338449200330555 END))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) ELSE ((vt0.c0)*(rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt1.c0 END) NOT BETWEEN (rt1.c0) AND (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE 0.4338449200330555 END))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (NOT (((vt0.c0) NOT NULL))) CROSS JOIN vt1 ON ((- (rt1.c1)) IN (((((((((rt1.c2)OR(vt0.c0)))OR(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) ELSE ((vt0.c0)*(rt1.c1)) END ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (NOT (((vt0.c0) NOT NULL))) CROSS JOIN vt1 ON ((- (rt1.c1)) IN (((((((((rt1.c2)OR(vt0.c0)))OR(vt1.c0)))OR(rt1.c2)))OR(rt1.c0)))) WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt1.c0 END) NOT BETWEEN (rt1.c0) AND (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE 0.4338449200330555 END))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0)) ELSE ((vt0.c0)*(rt1.c1)) END ASC;
SELECT ALL * FROM vt1 WHERE (((vt1.c0) BETWEEN (json_valid(vt1.c0)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY json_insert(vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (json_valid(vt1.c0)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY json_insert(vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) BETWEEN (json_valid(vt1.c0)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY json_insert(vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (json_valid(vt1.c0)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY json_insert(vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((('-2087736112')|(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((('-2087736112')|(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((('-2087736112')|(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((('-2087736112')|(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((('-2087736112')|(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, v0, vt0 WHERE (((('UT焔{s'))<>((CAST(vt0.c0 AS INTEGER))))) ORDER BY ((v0.c0 IN ()) IN (CASE vt1.c0  WHEN NULL THEN vt1.c0 END))  NULLS LAST, ((((vt0.c0) IS TRUE))/(((((((((vt0.c0)AND(v0.c0)))AND('-69631542')))OR(v0.c0)))OR(x'')))) ASC, CAST(rtreenode(vt0.c0, v0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((('UT焔{s'))<>((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((v0.c0 IN ()) IN (CASE vt1.c0  WHEN NULL THEN vt1.c0 END))  NULLS LAST, ((((vt0.c0) IS TRUE))/(((((((((vt0.c0)AND(v0.c0)))AND('-69631542')))OR(v0.c0)))OR(x'')))) ASC, CAST(rtreenode(vt0.c0, v0.c0) AS REAL));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, v0, vt0 WHERE (((('UT焔{s'))<>((CAST(vt0.c0 AS INTEGER))))) ORDER BY ((v0.c0 IN ()) IN (CASE vt1.c0  WHEN NULL THEN vt1.c0 END))  NULLS LAST, ((((vt0.c0) IS TRUE))/(((((((((vt0.c0)AND(v0.c0)))AND('-69631542')))OR(v0.c0)))OR(x'')))) ASC, CAST(rtreenode(vt0.c0, v0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((('UT焔{s'))<>((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((v0.c0 IN ()) IN (CASE vt1.c0  WHEN NULL THEN vt1.c0 END))  NULLS LAST, ((((vt0.c0) IS TRUE))/(((((((((vt0.c0)AND(v0.c0)))AND('-69631542')))OR(v0.c0)))OR(x'')))) ASC, CAST(rtreenode(vt0.c0, v0.c0) AS REAL));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, v0, vt0 WHERE (((('UT焔{s'))<>((CAST(vt0.c0 AS INTEGER))))) ORDER BY ((v0.c0 IN ()) IN (CASE vt1.c0  WHEN NULL THEN vt1.c0 END))  NULLS LAST, ((((vt0.c0) IS TRUE))/(((((((((vt0.c0)AND(v0.c0)))AND('-69631542')))OR(v0.c0)))OR(x'')))) ASC, CAST(rtreenode(vt0.c0, v0.c0) AS REAL);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, v0 WHERE (((((']K	~!ta麿k')AND(v0.c0)))OR(rt1.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN rt1.c1 THEN '-2126554067' WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) BETWEEN (json_quote(rt1.c1)) AND (CASE WHEN rt1.c0 THEN 0.8283645785535458 END))  NULLS FIRST, rt1.c0 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((']K	~!ta麿k')AND(v0.c0)))OR(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1, vt0, v0 ORDER BY ((CASE WHEN rt1.c1 THEN '-2126554067' WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) BETWEEN (json_quote(rt1.c1)) AND (CASE WHEN rt1.c0 THEN 0.8283645785535458 END))  NULLS FIRST, rt1.c0 COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, v0 WHERE (((((']K	~!ta麿k')AND(v0.c0)))OR(rt1.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN rt1.c1 THEN '-2126554067' WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) BETWEEN (json_quote(rt1.c1)) AND (CASE WHEN rt1.c0 THEN 0.8283645785535458 END))  NULLS FIRST, rt1.c0 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((']K	~!ta麿k')AND(v0.c0)))OR(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1, vt0, v0 ORDER BY ((CASE WHEN rt1.c1 THEN '-2126554067' WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) BETWEEN (json_quote(rt1.c1)) AND (CASE WHEN rt1.c0 THEN 0.8283645785535458 END))  NULLS FIRST, rt1.c0 COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, v0 WHERE (((((']K	~!ta麿k')AND(v0.c0)))OR(rt1.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN rt1.c1 THEN '-2126554067' WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) BETWEEN (json_quote(rt1.c1)) AND (CASE WHEN rt1.c0 THEN 0.8283645785535458 END))  NULLS FIRST, rt1.c0 COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt1, vt0, rt1, v0 WHERE (((((x'')OR(v0.c0)))AND(rt1.c1))) ORDER BY LOWER(vt1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(v0.c0)))AND(rt1.c1))) IS TRUE)  as count FROM vt1, vt0, rt1, v0 ORDER BY LOWER(vt1.c0)  NULLS LAST);
SELECT ALL * FROM vt1, vt0, rt1, v0 WHERE (((((x'')OR(v0.c0)))AND(rt1.c1))) ORDER BY LOWER(vt1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(v0.c0)))AND(rt1.c1))) IS TRUE)  as count FROM vt1, vt0, rt1, v0 ORDER BY LOWER(vt1.c0)  NULLS LAST);
SELECT ALL * FROM vt1, vt0, rt1, v0 WHERE (((((x'')OR(v0.c0)))AND(rt1.c1))) ORDER BY LOWER(vt1.c0)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (DATE(((v0.c0)>=(vt0.c0)), CASE vt0.c0  WHEN 0Xffffffffe5415125 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END, vt0.c0, vt1.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END, CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN -1.7976931348623157E308 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 END, (NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((DATE(((v0.c0)>=(vt0.c0)), CASE vt0.c0  WHEN 0Xffffffffe5415125 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END, vt0.c0, vt1.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END, CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN -1.7976931348623157E308 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 END, (NOT (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (DATE(((v0.c0)>=(vt0.c0)), CASE vt0.c0  WHEN 0Xffffffffe5415125 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END, vt0.c0, vt1.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END, CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN -1.7976931348623157E308 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 END, (NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((DATE(((v0.c0)>=(vt0.c0)), CASE vt0.c0  WHEN 0Xffffffffe5415125 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END, vt0.c0, vt1.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END, CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN -1.7976931348623157E308 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 END, (NOT (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (DATE(((v0.c0)>=(vt0.c0)), CASE vt0.c0  WHEN 0Xffffffffe5415125 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END, vt0.c0, vt1.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END, CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN -1.7976931348623157E308 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 END, (NOT (vt1.c0))));
SELECT ALL COUNT(*) FROM rt1, v0 LEFT OUTER JOIN vt0 ON (((v0.c0)IS NOT(vt0.c0)) IN ()) WHERE (((((rt1.c2) NOTNULL))<<(((((rt1.c2)OR(v0.c0)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL))<<(((((rt1.c2)OR(v0.c0)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN vt0 ON (((v0.c0)IS NOT(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt1, v0 LEFT OUTER JOIN vt0 ON (((v0.c0)IS NOT(vt0.c0)) IN ()) WHERE (((((rt1.c2) NOTNULL))<<(((((rt1.c2)OR(v0.c0)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL))<<(((((rt1.c2)OR(v0.c0)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN vt0 ON (((v0.c0)IS NOT(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt1, v0 LEFT OUTER JOIN vt0 ON (((v0.c0)IS NOT(vt0.c0)) IN ()) WHERE (((((rt1.c2) NOTNULL))<<(((((rt1.c2)OR(v0.c0)))AND(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((vt0.c0, rt1.c2, rt1.c1))<=((vt0.c0, rt1.c0, vt0.c0))))||(((NULL) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((((rt1.c0 COLLATE BINARY)AND(vt0.c0 COLLATE NOCASE)))AND((+ (rt1.c2))))  NULLS FIRST, CASE WHEN CAST(NULL AS REAL) THEN ((((rt1.c1)OR(rt1.c2)))OR(NULL)) END DESC  NULLS LAST, ((((((x'')AND(rt1.c0)))OR(rt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt1.c2, rt1.c1))<=((vt0.c0, rt1.c0, vt0.c0))))||(((NULL) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0 COLLATE BINARY)AND(vt0.c0 COLLATE NOCASE)))AND((+ (rt1.c2))))  NULLS FIRST, CASE WHEN CAST(NULL AS REAL) THEN ((((rt1.c1)OR(rt1.c2)))OR(NULL)) END DESC  NULLS LAST, ((((((x'')AND(rt1.c0)))OR(rt1.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((vt0.c0, rt1.c2, rt1.c1))<=((vt0.c0, rt1.c0, vt0.c0))))||(((NULL) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((((rt1.c0 COLLATE BINARY)AND(vt0.c0 COLLATE NOCASE)))AND((+ (rt1.c2))))  NULLS FIRST, CASE WHEN CAST(NULL AS REAL) THEN ((((rt1.c1)OR(rt1.c2)))OR(NULL)) END DESC  NULLS LAST, ((((((x'')AND(rt1.c0)))OR(rt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt1.c2, rt1.c1))<=((vt0.c0, rt1.c0, vt0.c0))))||(((NULL) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0 COLLATE BINARY)AND(vt0.c0 COLLATE NOCASE)))AND((+ (rt1.c2))))  NULLS FIRST, CASE WHEN CAST(NULL AS REAL) THEN ((((rt1.c1)OR(rt1.c2)))OR(NULL)) END DESC  NULLS LAST, ((((((x'')AND(rt1.c0)))OR(rt1.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((vt0.c0, rt1.c2, rt1.c1))<=((vt0.c0, rt1.c0, vt0.c0))))||(((NULL) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((((rt1.c0 COLLATE BINARY)AND(vt0.c0 COLLATE NOCASE)))AND((+ (rt1.c2))))  NULLS FIRST, CASE WHEN CAST(NULL AS REAL) THEN ((((rt1.c1)OR(rt1.c2)))OR(NULL)) END DESC  NULLS LAST, ((((((x'')AND(rt1.c0)))OR(rt1.c0))) NOTNULL);
SELECT ALL * FROM vt0, vt1 INNER JOIN rt1 ON NULLIF(DISTINCT ((v0.c0)AND(v0.c0)), (- (rt1.c0))) LEFT OUTER JOIN v0 ON (rt1.c2 COLLATE NOCASE IN ()) WHERE (((vt0.c0)||(vt1.c0)) COLLATE NOCASE) ORDER BY ((((rt1.c1 IN ()), (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), CAST(rt1.c0 AS INTEGER)))<((((vt0.c0) BETWEEN (vt1.c0) AND (rt1.c2)), (((rt1.c0, vt1.c0, x'')) BETWEEN ((rt1.c0, vt0.c0, rt1.c2)) AND ((rt1.c0, v0.c0, vt0.c0))), rt1.c2 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt1 ON NULLIF(DISTINCT ((v0.c0)AND(v0.c0)), (- (rt1.c0))) LEFT OUTER JOIN v0 ON (rt1.c2 COLLATE NOCASE IN ()) ORDER BY ((((rt1.c1 IN ()), (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), CAST(rt1.c0 AS INTEGER)))<((((vt0.c0) BETWEEN (vt1.c0) AND (rt1.c2)), (((rt1.c0, vt1.c0, x'')) BETWEEN ((rt1.c0, vt0.c0, rt1.c2)) AND ((rt1.c0, v0.c0, vt0.c0))), rt1.c2 COLLATE BINARY)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 INNER JOIN rt1 ON NULLIF(DISTINCT ((v0.c0)AND(v0.c0)), (- (rt1.c0))) LEFT OUTER JOIN v0 ON (rt1.c2 COLLATE NOCASE IN ()) WHERE (((vt0.c0)||(vt1.c0)) COLLATE NOCASE) ORDER BY ((((rt1.c1 IN ()), (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), CAST(rt1.c0 AS INTEGER)))<((((vt0.c0) BETWEEN (vt1.c0) AND (rt1.c2)), (((rt1.c0, vt1.c0, x'')) BETWEEN ((rt1.c0, vt0.c0, rt1.c2)) AND ((rt1.c0, v0.c0, vt0.c0))), rt1.c2 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt1 ON NULLIF(DISTINCT ((v0.c0)AND(v0.c0)), (- (rt1.c0))) LEFT OUTER JOIN v0 ON (rt1.c2 COLLATE NOCASE IN ()) ORDER BY ((((rt1.c1 IN ()), (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), CAST(rt1.c0 AS INTEGER)))<((((vt0.c0) BETWEEN (vt1.c0) AND (rt1.c2)), (((rt1.c0, vt1.c0, x'')) BETWEEN ((rt1.c0, vt0.c0, rt1.c2)) AND ((rt1.c0, v0.c0, vt0.c0))), rt1.c2 COLLATE BINARY)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 INNER JOIN rt1 ON NULLIF(DISTINCT ((v0.c0)AND(v0.c0)), (- (rt1.c0))) LEFT OUTER JOIN v0 ON (rt1.c2 COLLATE NOCASE IN ()) WHERE (((vt0.c0)||(vt1.c0)) COLLATE NOCASE) ORDER BY ((((rt1.c1 IN ()), (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), CAST(rt1.c0 AS INTEGER)))<((((vt0.c0) BETWEEN (vt1.c0) AND (rt1.c2)), (((rt1.c0, vt1.c0, x'')) BETWEEN ((rt1.c0, vt0.c0, rt1.c2)) AND ((rt1.c0, v0.c0, vt0.c0))), rt1.c2 COLLATE BINARY)))  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE ((NOT (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((NOT (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((NOT (v0.c0)));
SELECT COUNT(*) FROM vt0, v0 WHERE (0.2100120707649049) ORDER BY (vt0.c0 COLLATE BINARY IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.2100120707649049) IS TRUE)  as count FROM vt0, v0 ORDER BY (vt0.c0 COLLATE BINARY IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (0.2100120707649049) ORDER BY (vt0.c0 COLLATE BINARY IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.2100120707649049) IS TRUE)  as count FROM vt0, v0 ORDER BY (vt0.c0 COLLATE BINARY IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (0.2100120707649049) ORDER BY (vt0.c0 COLLATE BINARY IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0, rt1, v0 WHERE (((rt1.c0)AND(rt1.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0) NOTNULL), ((rt1.c1)&(rt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)AND(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt1, v0 ORDER BY ((vt0.c0) NOTNULL), ((rt1.c1)&(rt1.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt1, v0 WHERE (((rt1.c0)AND(rt1.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0) NOTNULL), ((rt1.c1)&(rt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)AND(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt1, v0 ORDER BY ((vt0.c0) NOTNULL), ((rt1.c1)&(rt1.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt1, v0 WHERE (((rt1.c0)AND(rt1.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0) NOTNULL), ((rt1.c1)&(rt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((-1808286191)&(0.48392173809034367 COLLATE BINARY))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) NOT NULL))))AND(((vt0.c0)!=(vt0.c0))))  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC, CASE WHEN COALESCE(DISTINCT x'', vt0.c0) THEN ((vt0.c0)GLOB(0.9531501249645566)) ELSE '*Ⳗ]誕v' END;
SELECT SUM(count) FROM (SELECT ((((-1808286191)&(0.48392173809034367 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) NOT NULL))))AND(((vt0.c0)<>(vt0.c0))))  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC, CASE WHEN COALESCE(DISTINCT x'', vt0.c0) THEN ((vt0.c0)GLOB(0.9531501249645566)) ELSE '*Ⳗ]誕v' END);
SELECT ALL * FROM vt0 WHERE (((-1808286191)&(0.48392173809034367 COLLATE BINARY))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) NOT NULL))))AND(((vt0.c0)!=(vt0.c0))))  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC, CASE WHEN COALESCE(DISTINCT x'', vt0.c0) THEN ((vt0.c0)GLOB(0.9531501249645566)) ELSE '*Ⳗ]誕v' END;
SELECT SUM(count) FROM (SELECT ((((-1808286191)&(0.48392173809034367 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) NOT NULL))))AND(((vt0.c0)<>(vt0.c0))))  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC, CASE WHEN COALESCE(DISTINCT x'', vt0.c0) THEN ((vt0.c0)GLOB(0.9531501249645566)) ELSE '*Ⳗ]誕v' END);
SELECT ALL * FROM vt0 WHERE (((-1808286191)&(0.48392173809034367 COLLATE BINARY))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) NOT NULL))))AND(((vt0.c0)!=(vt0.c0))))  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC, CASE WHEN COALESCE(DISTINCT x'', vt0.c0) THEN ((vt0.c0)GLOB(0.9531501249645566)) ELSE '*Ⳗ]誕v' END;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF((vt0.c0 IN ()), (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((vt0.c0 IN ()), (+ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF((vt0.c0 IN ()), (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((vt0.c0 IN ()), (+ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF((vt0.c0 IN ()), (+ (vt0.c0))));
SELECT ALL * FROM rt1 INNER JOIN v0 ON TRIM(((rt1.c2) NOT NULL)) WHERE ((((((v0.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c2, v0.c0, rt1.c2)) AND ((v0.c0, rt1.c2, rt1.c2))))LIKE(((rt1.c1)AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c2, v0.c0, rt1.c2)) AND ((v0.c0, rt1.c2, rt1.c2))))LIKE(((rt1.c1)AND(rt1.c2))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON TRIM(((rt1.c2) NOT NULL)));
SELECT ALL * FROM rt1 INNER JOIN v0 ON TRIM(((rt1.c2) NOT NULL)) WHERE ((((((v0.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c2, v0.c0, rt1.c2)) AND ((v0.c0, rt1.c2, rt1.c2))))LIKE(((rt1.c1)AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c2, v0.c0, rt1.c2)) AND ((v0.c0, rt1.c2, rt1.c2))))LIKE(((rt1.c1)AND(rt1.c2))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON TRIM(((rt1.c2) NOT NULL)));
SELECT ALL * FROM rt1 INNER JOIN v0 ON TRIM(((rt1.c2) NOT NULL)) WHERE ((((((v0.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c2, v0.c0, rt1.c2)) AND ((v0.c0, rt1.c2, rt1.c2))))LIKE(((rt1.c1)AND(rt1.c2)))));
SELECT * FROM vt0 WHERE ((~ (((vt0.c0) IS TRUE)))) ORDER BY (((SQLITE_VERSION()))<>(((vt0.c0 IN ())))), (((vt0.c0)) BETWEEN ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0)<=(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((SQLITE_VERSION()))<>(((vt0.c0 IN ())))), (((vt0.c0)) BETWEEN ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0)<=(NULL))))));
SELECT * FROM vt0 WHERE ((~ (((vt0.c0) IS TRUE)))) ORDER BY (((SQLITE_VERSION()))<>(((vt0.c0 IN ())))), (((vt0.c0)) BETWEEN ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0)<=(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((SQLITE_VERSION()))<>(((vt0.c0 IN ())))), (((vt0.c0)) BETWEEN ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0)<=(NULL))))));
SELECT * FROM vt0 WHERE ((~ (((vt0.c0) IS TRUE)))) ORDER BY (((SQLITE_VERSION()))<>(((vt0.c0 IN ())))), (((vt0.c0)) BETWEEN ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0)<=(NULL)))));
SELECT ALL * FROM rt1, v0 INNER JOIN vt0 ON 0.0 WHERE ((NOT ((+ (rt1.c2))))) ORDER BY LAST_INSERT_ROWID()  NULLS LAST, ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN 0X5b48ca29 THEN vt0.c0 WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END) BETWEEN (CASE 0.06216571982252672  WHEN rt1.c1 THEN vt0.c0 END) AND ((vt0.c0 IN (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (rt1.c2))))) IS TRUE)  as count FROM rt1, v0 INNER JOIN vt0 ON 0.0 ORDER BY LAST_INSERT_ROWID()  NULLS LAST, ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN 0x5b48ca29 THEN vt0.c0 WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END) BETWEEN (CASE 0.06216571982252672  WHEN rt1.c1 THEN vt0.c0 END) AND ((vt0.c0 IN (rt1.c0)))) DESC);
SELECT ALL * FROM rt1, v0 INNER JOIN vt0 ON 0.0 WHERE ((NOT ((+ (rt1.c2))))) ORDER BY LAST_INSERT_ROWID()  NULLS LAST, ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN 0X5b48ca29 THEN vt0.c0 WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END) BETWEEN (CASE 0.06216571982252672  WHEN rt1.c1 THEN vt0.c0 END) AND ((vt0.c0 IN (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (rt1.c2))))) IS TRUE)  as count FROM rt1, v0 INNER JOIN vt0 ON 0.0 ORDER BY LAST_INSERT_ROWID()  NULLS LAST, ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN 0x5b48ca29 THEN vt0.c0 WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END) BETWEEN (CASE 0.06216571982252672  WHEN rt1.c1 THEN vt0.c0 END) AND ((vt0.c0 IN (rt1.c0)))) DESC);
SELECT ALL * FROM rt1, v0 INNER JOIN vt0 ON 0.0 WHERE ((NOT ((+ (rt1.c2))))) ORDER BY LAST_INSERT_ROWID()  NULLS LAST, ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN 0X5b48ca29 THEN vt0.c0 WHEN rt1.c0 THEN v0.c0 ELSE rt1.c1 END) BETWEEN (CASE 0.06216571982252672  WHEN rt1.c1 THEN vt0.c0 END) AND ((vt0.c0 IN (rt1.c0)))) DESC;
SELECT COUNT(*) FROM rt1, vt1 CROSS JOIN vt0 ON ((((((((((((((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND((((rt1.c1, rt1.c0, rt1.c1))>((rt1.c0, rt1.c2, rt1.c2))))))OR(CAST(rt1.c0 AS REAL))))OR(CAST(rt1.c1 AS INTEGER))) WHERE (((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (((((rt1.c0)OR(rt1.c0)))OR(vt0.c0))) AND ('4⸤?MT')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (((((rt1.c0)OR(rt1.c0)))OR(vt0.c0))) AND ('4⸤?MT'))) IS TRUE)  as count FROM rt1, vt1 CROSS JOIN vt0 ON ((((((((((((((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND((((rt1.c1, rt1.c0, rt1.c1))>((rt1.c0, rt1.c2, rt1.c2))))))OR(CAST(rt1.c0 AS REAL))))OR(CAST(rt1.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt1, vt1 CROSS JOIN vt0 ON ((((((((((((((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND((((rt1.c1, rt1.c0, rt1.c1))>((rt1.c0, rt1.c2, rt1.c2))))))OR(CAST(rt1.c0 AS REAL))))OR(CAST(rt1.c1 AS INTEGER))) WHERE (((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (((((rt1.c0)OR(rt1.c0)))OR(vt0.c0))) AND ('4⸤?MT')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (((((rt1.c0)OR(rt1.c0)))OR(vt0.c0))) AND ('4⸤?MT'))) IS TRUE)  as count FROM rt1, vt1 CROSS JOIN vt0 ON ((((((((((((((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND((((rt1.c1, rt1.c0, rt1.c1))>((rt1.c0, rt1.c2, rt1.c2))))))OR(CAST(rt1.c0 AS REAL))))OR(CAST(rt1.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt1, vt1 CROSS JOIN vt0 ON ((((((((((((((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND((((rt1.c1, rt1.c0, rt1.c1))>((rt1.c0, rt1.c2, rt1.c2))))))OR(CAST(rt1.c0 AS REAL))))OR(CAST(rt1.c1 AS INTEGER))) WHERE (((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (((((rt1.c0)OR(rt1.c0)))OR(vt0.c0))) AND ('4⸤?MT')));
SELECT ALL * FROM rt1, vt1, vt0, v0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt1, vt0, v0);
SELECT ALL * FROM rt1, vt1, vt0, v0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt1, vt0, v0);
SELECT ALL * FROM rt1, vt1, vt0, v0 WHERE (rt1.c2);
SELECT ALL * FROM v0, rt1, vt1 WHERE (((((0xffffffff880dec6e)<(rt1.c1))) IS TRUE)) ORDER BY (((~ (rt1.c2))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0xffffffff880dec6e)<(rt1.c1))) IS TRUE)) IS TRUE)  as count FROM v0, rt1, vt1 ORDER BY (((~ (rt1.c2))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM v0, rt1, vt1 WHERE (((((0xffffffff880dec6e)<(rt1.c1))) IS TRUE)) ORDER BY (((~ (rt1.c2))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0xffffffff880dec6e)<(rt1.c1))) IS TRUE)) IS TRUE)  as count FROM v0, rt1, vt1 ORDER BY (((~ (rt1.c2))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM v0, rt1, vt1 WHERE (((((0xffffffff880dec6e)<(rt1.c1))) IS TRUE)) ORDER BY (((~ (rt1.c2))) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (SQLITE_VERSION()) ORDER BY (((((+ (0.05177467728244889)))OR(((vt1.c0)<<(vt1.c0)))))AND(vt1.c0));
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1 ORDER BY (((((+ (0.05177467728244889)))OR(((vt1.c0)<<(vt1.c0)))))AND(vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (SQLITE_VERSION()) ORDER BY (((((+ (0.05177467728244889)))OR(((vt1.c0)<<(vt1.c0)))))AND(vt1.c0));
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1 ORDER BY (((((+ (0.05177467728244889)))OR(((vt1.c0)<<(vt1.c0)))))AND(vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (SQLITE_VERSION()) ORDER BY (((((+ (0.05177467728244889)))OR(((vt1.c0)<<(vt1.c0)))))AND(vt1.c0));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON TYPEOF(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1))) CROSS JOIN vt0 ON ((((((rt1.c0)AND(rt1.c0)))AND(vt0.c0)))IS NOT(('742124638' IN ()))) WHERE (CAST(CASE rt1.c0  WHEN '-2126554067' THEN rt1.c2 ELSE rt1.c0 END AS TEXT)) ORDER BY ((IFNULL(DISTINCT v0.c0, v0.c0))LIKE(((((rt1.c1)AND(rt1.c1)))AND(v0.c0)))) DESC, (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, (((vt0.c0)) BETWEEN ((rt1.c0)) AND ((v0.c0))), ((rt1.c1)GLOB(v0.c0)))) AND ((((-1240228925)%(vt0.c0)), ((vt0.c0)AND(x'')), ((rt1.c0) ISNULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c0  WHEN '-2126554067' THEN rt1.c2 ELSE rt1.c0 END AS TEXT)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON TYPEOF(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1))) CROSS JOIN vt0 ON ((((((rt1.c0)AND(rt1.c0)))AND(vt0.c0)))IS NOT(('742124638' IN ()))) ORDER BY ((IFNULL(DISTINCT v0.c0, v0.c0))LIKE(((((rt1.c1)AND(rt1.c1)))AND(v0.c0)))) DESC, (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, (((vt0.c0)) BETWEEN ((rt1.c0)) AND ((v0.c0))), ((rt1.c1)GLOB(v0.c0)))) AND ((((-1240228925)%(vt0.c0)), ((vt0.c0)AND(x'')), ((rt1.c0) ISNULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON TYPEOF(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1))) CROSS JOIN vt0 ON ((((((rt1.c0)AND(rt1.c0)))AND(vt0.c0)))IS NOT(('742124638' IN ()))) WHERE (CAST(CASE rt1.c0  WHEN '-2126554067' THEN rt1.c2 ELSE rt1.c0 END AS TEXT)) ORDER BY ((IFNULL(DISTINCT v0.c0, v0.c0))LIKE(((((rt1.c1)AND(rt1.c1)))AND(v0.c0)))) DESC, (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, (((vt0.c0)) BETWEEN ((rt1.c0)) AND ((v0.c0))), ((rt1.c1)GLOB(v0.c0)))) AND ((((-1240228925)%(vt0.c0)), ((vt0.c0)AND(x'')), ((rt1.c0) ISNULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c0  WHEN '-2126554067' THEN rt1.c2 ELSE rt1.c0 END AS TEXT)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON TYPEOF(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1))) CROSS JOIN vt0 ON ((((((rt1.c0)AND(rt1.c0)))AND(vt0.c0)))IS NOT(('742124638' IN ()))) ORDER BY ((IFNULL(DISTINCT v0.c0, v0.c0))LIKE(((((rt1.c1)AND(rt1.c1)))AND(v0.c0)))) DESC, (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, (((vt0.c0)) BETWEEN ((rt1.c0)) AND ((v0.c0))), ((rt1.c1)GLOB(v0.c0)))) AND ((((-1240228925)%(vt0.c0)), ((vt0.c0)AND(x'')), ((rt1.c0) ISNULL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt1 ON (~ (((rt1.c0)IS NOT(0.2562950364006492)))) CROSS JOIN v0 ON (((x'08a0')) NOT BETWEEN (((((rt1.c1)) BETWEEN ((rt1.c0)) AND (('265187799'))))) AND ((8358549.0))) WHERE ((CASE WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c2 END IN (((vt0.c0) NOT NULL), CAST(rt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c2 END IN (((vt0.c0) NOT NULL), CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt1 ON (~ (((rt1.c0)IS NOT(0.2562950364006492)))) CROSS JOIN v0 ON (((x'08a0')) NOT BETWEEN (((((rt1.c1)) BETWEEN ((rt1.c0)) AND (('265187799'))))) AND ((8358549.0))));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt1 ON (~ (((rt1.c0)IS NOT(0.2562950364006492)))) CROSS JOIN v0 ON (((x'08a0')) NOT BETWEEN (((((rt1.c1)) BETWEEN ((rt1.c0)) AND (('265187799'))))) AND ((8358549.0))) WHERE ((CASE WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c2 END IN (((vt0.c0) NOT NULL), CAST(rt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c2 END IN (((vt0.c0) NOT NULL), CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt1 ON (~ (((rt1.c0)IS NOT(0.2562950364006492)))) CROSS JOIN v0 ON (((x'08a0')) NOT BETWEEN (((((rt1.c1)) BETWEEN ((rt1.c0)) AND (('265187799'))))) AND ((8358549.0))));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt1 ON (~ (((rt1.c0)IS NOT(0.2562950364006492)))) CROSS JOIN v0 ON (((x'08a0')) NOT BETWEEN (((((rt1.c1)) BETWEEN ((rt1.c0)) AND (('265187799'))))) AND ((8358549.0))) WHERE ((CASE WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c2 END IN (((vt0.c0) NOT NULL), CAST(rt1.c1 AS NUMERIC))));
SELECT ALL * FROM vt0, v0, rt1 WHERE (rt1.c0) ORDER BY ((((rt1.c1)LIKE(rt1.c1)))>(0.12964407193842387))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((((rt1.c1)LIKE(rt1.c1)))>(0.12964407193842387))  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt1 WHERE (rt1.c0) ORDER BY ((((rt1.c1)LIKE(rt1.c1)))>(0.12964407193842387))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((((rt1.c1)LIKE(rt1.c1)))>(0.12964407193842387))  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt1 WHERE (rt1.c0) ORDER BY ((((rt1.c1)LIKE(rt1.c1)))>(0.12964407193842387))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(v0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(v0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)LIKE(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE NOCASE INNER JOIN vt0 ON ((v0.c0)OR(CAST(')*' AS REAL))) INNER JOIN v0 ON ((((vt1.c0)||(0.5726758262027632))) NOTNULL) WHERE (((((NULL)IS(v0.c0)))LIKE(((rt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)IS(v0.c0)))LIKE(((rt1.c0) BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE NOCASE INNER JOIN vt0 ON ((v0.c0)OR(CAST(')*' AS REAL))) INNER JOIN v0 ON ((((vt1.c0)||(0.5726758262027632))) NOTNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE NOCASE INNER JOIN vt0 ON ((v0.c0)OR(CAST(')*' AS REAL))) INNER JOIN v0 ON ((((vt1.c0)||(0.5726758262027632))) NOTNULL) WHERE (((((NULL)IS(v0.c0)))LIKE(((rt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)IS(v0.c0)))LIKE(((rt1.c0) BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE NOCASE INNER JOIN vt0 ON ((v0.c0)OR(CAST(')*' AS REAL))) INNER JOIN v0 ON ((((vt1.c0)||(0.5726758262027632))) NOTNULL));
SELECT * FROM vt1, vt0, v0 WHERE ((((((((vt1.c0))>((v0.c0))))AND(LIKELIHOOD(v0.c0, 0.9048025264753221))))AND(((vt1.c0)!=(vt1.c0))))) ORDER BY (((vt1.c0) NOT NULL) IN (((vt1.c0)+(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))>((v0.c0))))AND(LIKELIHOOD(v0.c0, 0.9048025264753221))))AND(((vt1.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (((vt1.c0) NOT NULL) IN (((vt1.c0)+(vt1.c0)))));
SELECT * FROM vt1, vt0, v0 WHERE ((((((((vt1.c0))>((v0.c0))))AND(LIKELIHOOD(v0.c0, 0.9048025264753221))))AND(((vt1.c0)!=(vt1.c0))))) ORDER BY (((vt1.c0) NOT NULL) IN (((vt1.c0)+(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))>((v0.c0))))AND(LIKELIHOOD(v0.c0, 0.9048025264753221))))AND(((vt1.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (((vt1.c0) NOT NULL) IN (((vt1.c0)+(vt1.c0)))));
SELECT * FROM vt1, vt0, v0 WHERE ((((((((vt1.c0))>((v0.c0))))AND(LIKELIHOOD(v0.c0, 0.9048025264753221))))AND(((vt1.c0)!=(vt1.c0))))) ORDER BY (((vt1.c0) NOT NULL) IN (((vt1.c0)+(vt1.c0))));
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c2 COLLATE BINARY THEN (+ (x'')) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN '' WHEN NULL THEN ((rt1.c1) NOTNULL) ELSE rt1.c2 COLLATE BINARY END) ORDER BY ((((+ (rt1.c0)), rt1.c2, (('-1095767363') BETWEEN (rt1.c2) AND (rt1.c0))))<=((CAST(rt1.c0 AS INTEGER), (~ (rt1.c2)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 COLLATE BINARY THEN (+ (x'')) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN '' WHEN NULL THEN ((rt1.c1) NOTNULL) ELSE rt1.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt1 ORDER BY ((((+ (rt1.c0)), rt1.c2, (('-1095767363') BETWEEN (rt1.c2) AND (rt1.c0))))<=((CAST(rt1.c0 AS INTEGER), (~ (rt1.c2)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c2 COLLATE BINARY THEN (+ (x'')) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN '' WHEN NULL THEN ((rt1.c1) NOTNULL) ELSE rt1.c2 COLLATE BINARY END) ORDER BY ((((+ (rt1.c0)), rt1.c2, (('-1095767363') BETWEEN (rt1.c2) AND (rt1.c0))))<=((CAST(rt1.c0 AS INTEGER), (~ (rt1.c2)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 COLLATE BINARY THEN (+ (x'')) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN '' WHEN NULL THEN ((rt1.c1) NOTNULL) ELSE rt1.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt1 ORDER BY ((((+ (rt1.c0)), rt1.c2, (('-1095767363') BETWEEN (rt1.c2) AND (rt1.c0))))<=((CAST(rt1.c0 AS INTEGER), (~ (rt1.c2)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c2 COLLATE BINARY THEN (+ (x'')) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN '' WHEN NULL THEN ((rt1.c1) NOTNULL) ELSE rt1.c2 COLLATE BINARY END) ORDER BY ((((+ (rt1.c0)), rt1.c2, (('-1095767363') BETWEEN (rt1.c2) AND (rt1.c0))))<=((CAST(rt1.c0 AS INTEGER), (~ (rt1.c2)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, v0, rt1);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, v0, rt1);
SELECT COUNT(*) FROM vt1, vt0, v0, rt1 NOT INDEXED WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)));
SELECT * FROM v0, vt1 WHERE ((((vt1.c0, v0.c0, v0.c0)) BETWEEN ((x'cdc6', (((v0.c0))<>((v0.c0))), ((v0.c0)IS NOT(v0.c0)))) AND ((((((v0.c0)AND(v0.c0)))AND(vt1.c0)), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ()))))) ORDER BY CAST(IFNULL(vt1.c0, vt1.c0) AS INTEGER)  NULLS LAST, (((CASE WHEN v0.c0 THEN '829177074' WHEN vt1.c0 THEN v0.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, (v0.c0 IN ()), ((vt1.c0) BETWEEN (v0.c0) AND (0.762166796982531))))<((load_extension(vt1.c0, v0.c0), (+ (vt1.c0)), (((v0.c0, NULL, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, v0.c0)) AND ((v0.c0, vt1.c0, v0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, v0.c0, v0.c0)) BETWEEN ((x'cdc6', (((v0.c0))!=((v0.c0))), ((v0.c0)IS NOT(v0.c0)))) AND ((((((v0.c0)AND(v0.c0)))AND(vt1.c0)), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ()))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(IFNULL(vt1.c0, vt1.c0) AS INTEGER)  NULLS LAST, (((CASE WHEN v0.c0 THEN '829177074' WHEN vt1.c0 THEN v0.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, (v0.c0 IN ()), ((vt1.c0) BETWEEN (v0.c0) AND (0.762166796982531))))<((load_extension(vt1.c0, v0.c0), (+ (vt1.c0)), (((v0.c0, NULL, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, v0.c0)) AND ((v0.c0, vt1.c0, v0.c0)))))) ASC);
SELECT * FROM v0, vt1 WHERE ((((vt1.c0, v0.c0, v0.c0)) BETWEEN ((x'cdc6', (((v0.c0))<>((v0.c0))), ((v0.c0)IS NOT(v0.c0)))) AND ((((((v0.c0)AND(v0.c0)))AND(vt1.c0)), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ()))))) ORDER BY CAST(IFNULL(vt1.c0, vt1.c0) AS INTEGER)  NULLS LAST, (((CASE WHEN v0.c0 THEN '829177074' WHEN vt1.c0 THEN v0.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, (v0.c0 IN ()), ((vt1.c0) BETWEEN (v0.c0) AND (0.762166796982531))))<((load_extension(vt1.c0, v0.c0), (+ (vt1.c0)), (((v0.c0, NULL, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, v0.c0)) AND ((v0.c0, vt1.c0, v0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, v0.c0, v0.c0)) BETWEEN ((x'cdc6', (((v0.c0))!=((v0.c0))), ((v0.c0)IS NOT(v0.c0)))) AND ((((((v0.c0)AND(v0.c0)))AND(vt1.c0)), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ()))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(IFNULL(vt1.c0, vt1.c0) AS INTEGER)  NULLS LAST, (((CASE WHEN v0.c0 THEN '829177074' WHEN vt1.c0 THEN v0.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END, (v0.c0 IN ()), ((vt1.c0) BETWEEN (v0.c0) AND (0.762166796982531))))<((load_extension(vt1.c0, v0.c0), (+ (vt1.c0)), (((v0.c0, NULL, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, v0.c0)) AND ((v0.c0, vt1.c0, v0.c0)))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ORDER BY ((vt0.c0 COLLATE BINARY)=(vt0.c0 COLLATE BINARY)) DESC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))IS(vt0.c0 COLLATE NOCASE)), (((((-691528097 IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN ()))) ASC  NULLS LAST, ((((vt0.c0) NOT NULL))-((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)==(vt0.c0 COLLATE BINARY)) DESC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))IS(vt0.c0 COLLATE NOCASE)), (((((-691528097 IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN ()))) ASC  NULLS LAST, ((((vt0.c0) NOT NULL))-((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ORDER BY ((vt0.c0 COLLATE BINARY)=(vt0.c0 COLLATE BINARY)) DESC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))IS(vt0.c0 COLLATE NOCASE)), (((((-691528097 IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN ()))) ASC  NULLS LAST, ((((vt0.c0) NOT NULL))-((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)==(vt0.c0 COLLATE BINARY)) DESC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))IS(vt0.c0 COLLATE NOCASE)), (((((-691528097 IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN ()))) ASC  NULLS LAST, ((((vt0.c0) NOT NULL))-((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) ORDER BY ((vt0.c0 COLLATE BINARY)=(vt0.c0 COLLATE BINARY)) DESC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))IS(vt0.c0 COLLATE NOCASE)), (((((-691528097 IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN ()))) ASC  NULLS LAST, ((((vt0.c0) NOT NULL))-((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.3705291209555791 WHEN vt0.c0 THEN x'' END)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.3705291209555791 WHEN vt0.c0 THEN x'' END)))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.3705291209555791 WHEN vt0.c0 THEN x'' END)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.3705291209555791 WHEN vt0.c0 THEN x'' END)))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.3705291209555791 WHEN vt0.c0 THEN x'' END)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM rt1, vt0, vt1, v0 WHERE ((((((vt0.c0))<=((rt1.c0)))) BETWEEN (ROUND(rt1.c1, 'BQ')) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((rt1.c0)))) BETWEEN (ROUND(rt1.c1, 'BQ')) AND (v0.c0))) IS TRUE)  as count FROM rt1, vt0, vt1, v0);
SELECT ALL * FROM rt1, vt0, vt1, v0 WHERE ((((((vt0.c0))<=((rt1.c0)))) BETWEEN (ROUND(rt1.c1, 'BQ')) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((rt1.c0)))) BETWEEN (ROUND(rt1.c1, 'BQ')) AND (v0.c0))) IS TRUE)  as count FROM rt1, vt0, vt1, v0);
SELECT ALL * FROM rt1, vt0, vt1, v0 WHERE ((((((vt0.c0))<=((rt1.c0)))) BETWEEN (ROUND(rt1.c1, 'BQ')) AND (v0.c0)));
SELECT * FROM vt0, v0, rt1, vt1 WHERE ((CASE NULL  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END IN ())) ORDER BY ((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE NULL  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt0, v0, rt1, vt1 ORDER BY ((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0, v0, rt1, vt1 WHERE ((CASE NULL  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END IN ())) ORDER BY ((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE NULL  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt0, v0, rt1, vt1 ORDER BY ((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0, v0, rt1, vt1 WHERE ((CASE NULL  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END IN ())) ORDER BY ((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt1 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt1.c2))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, rt1 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt1.c2))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, rt1 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt1.c2)));
SELECT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS BLOB)  NULLS FIRST, (((+ (vt1.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS BLOB)  NULLS FIRST, (((+ (vt1.c0))) IS TRUE) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS BLOB)  NULLS FIRST, (((+ (vt1.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS BLOB)  NULLS FIRST, (((+ (vt1.c0))) IS TRUE) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS BLOB)  NULLS FIRST, (((+ (vt1.c0))) IS TRUE) ASC  NULLS LAST;
SELECT ALL * FROM v0, vt1, vt0, rt1 WHERE (((((rt1.c2)-(rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)-(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM v0, vt1, vt0, rt1);
SELECT ALL * FROM v0, vt1, vt0, rt1 WHERE (((((rt1.c2)-(rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)-(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM v0, vt1, vt0, rt1);
SELECT ALL * FROM v0, vt1, vt0, rt1 WHERE (((((rt1.c2)-(rt1.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c1)) BETWEEN (((rt1.c0 IN ()))) AND (('')))) ORDER BY ((((vt1.c0) IS TRUE))<(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((rt1.c0 IN ()))) AND (('')))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((vt1.c0) IS TRUE))<(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c1)) BETWEEN (((rt1.c0 IN ()))) AND (('')))) ORDER BY ((((vt1.c0) IS TRUE))<(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((rt1.c0 IN ()))) AND (('')))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((vt1.c0) IS TRUE))<(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c1)) BETWEEN (((rt1.c0 IN ()))) AND (('')))) ORDER BY ((((vt1.c0) IS TRUE))<(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END))  NULLS FIRST;
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON (((x'')) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0)))) AND ((((((((((((((rt1.c2)AND(vt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c2)))OR(rt1.c2))))) FULL OUTER JOIN vt0 ON CAST(((rt1.c0)%(rt1.c1)) AS NUMERIC) WHERE (((((((rt1.c0))<((vt1.c0)))))>((x'a129')))) ORDER BY CASE (((vt0.c0))>=(('467627211')))  WHEN ((rt1.c1) ISNULL) THEN ((((NULL)OR(rt1.c2)))OR(0.4160023549399977)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0))<((vt1.c0)))))>((x'a129')))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON (((x'')) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0)))) AND ((((((((((((((rt1.c2)AND(vt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c2)))OR(rt1.c2))))) FULL OUTER JOIN vt0 ON CAST(((rt1.c0)%(rt1.c1)) AS NUMERIC) ORDER BY CASE (((vt0.c0))>=(('467627211')))  WHEN ((rt1.c1) ISNULL) THEN ((((NULL)OR(rt1.c2)))OR(0.4160023549399977)) END ASC);
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON (((x'')) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0)))) AND ((((((((((((((rt1.c2)AND(vt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c2)))OR(rt1.c2))))) FULL OUTER JOIN vt0 ON CAST(((rt1.c0)%(rt1.c1)) AS NUMERIC) WHERE (((((((rt1.c0))<((vt1.c0)))))>((x'a129')))) ORDER BY CASE (((vt0.c0))>=(('467627211')))  WHEN ((rt1.c1) ISNULL) THEN ((((NULL)OR(rt1.c2)))OR(0.4160023549399977)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0))<((vt1.c0)))))>((x'a129')))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON (((x'')) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0)))) AND ((((((((((((((rt1.c2)AND(vt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c2)))OR(rt1.c2))))) FULL OUTER JOIN vt0 ON CAST(((rt1.c0)%(rt1.c1)) AS NUMERIC) ORDER BY CASE (((vt0.c0))>=(('467627211')))  WHEN ((rt1.c1) ISNULL) THEN ((((NULL)OR(rt1.c2)))OR(0.4160023549399977)) END ASC);
SELECT * FROM vt0, vt1, rt1, v0 WHERE (CAST(((((((((((((rt1.c2)AND(vt1.c0)))AND(v0.c0)))AND(rt1.c2)))AND(vt0.c0)))OR(NULL)))OR(rt1.c1)) AS INTEGER)) ORDER BY ((NULL) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt1.c2)AND(vt1.c0)))AND(v0.c0)))AND(rt1.c2)))AND(vt0.c0)))OR(NULL)))OR(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, rt1, v0 ORDER BY ((NULL) IS TRUE));
SELECT * FROM vt0, vt1, rt1, v0 WHERE (CAST(((((((((((((rt1.c2)AND(vt1.c0)))AND(v0.c0)))AND(rt1.c2)))AND(vt0.c0)))OR(NULL)))OR(rt1.c1)) AS INTEGER)) ORDER BY ((NULL) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt1.c2)AND(vt1.c0)))AND(v0.c0)))AND(rt1.c2)))AND(vt0.c0)))OR(NULL)))OR(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, rt1, v0 ORDER BY ((NULL) IS TRUE));
SELECT * FROM vt0, vt1, rt1, v0 WHERE (CAST(((((((((((((rt1.c2)AND(vt1.c0)))AND(v0.c0)))AND(rt1.c2)))AND(vt0.c0)))OR(NULL)))OR(rt1.c1)) AS INTEGER)) ORDER BY ((NULL) IS TRUE);
SELECT * FROM rt1, vt1 WHERE ((- (((((rt1.c2)AND(vt1.c0)))OR(rt1.c1))))) ORDER BY CASE WHEN (rt1.c0 IN ()) THEN (rt1.c1 IN (rt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((rt1.c2)) BETWEEN ((0.722467953109771)) AND ((rt1.c2))) WHEN (((vt1.c0)) BETWEEN ((rt1.c1)) AND ((vt1.c0))) THEN ((rt1.c2) NOTNULL) ELSE CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END END  NULLS LAST, (((rt1.c2)) NOT BETWEEN ((((vt1.c0)=(rt1.c1)))) AND ((CASE rt1.c2  WHEN rt1.c2 THEN 0.5146748569153716 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((((rt1.c2)AND(vt1.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CASE WHEN (rt1.c0 IN ()) THEN (rt1.c1 IN (rt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((rt1.c2)) BETWEEN ((0.722467953109771)) AND ((rt1.c2))) WHEN (((vt1.c0)) BETWEEN ((rt1.c1)) AND ((vt1.c0))) THEN ((rt1.c2) NOTNULL) ELSE CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END END  NULLS LAST, (((rt1.c2)) NOT BETWEEN ((((vt1.c0)=(rt1.c1)))) AND ((CASE rt1.c2  WHEN rt1.c2 THEN 0.5146748569153716 END))) DESC  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE ((- (((((rt1.c2)AND(vt1.c0)))OR(rt1.c1))))) ORDER BY CASE WHEN (rt1.c0 IN ()) THEN (rt1.c1 IN (rt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((rt1.c2)) BETWEEN ((0.722467953109771)) AND ((rt1.c2))) WHEN (((vt1.c0)) BETWEEN ((rt1.c1)) AND ((vt1.c0))) THEN ((rt1.c2) NOTNULL) ELSE CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END END  NULLS LAST, (((rt1.c2)) NOT BETWEEN ((((vt1.c0)=(rt1.c1)))) AND ((CASE rt1.c2  WHEN rt1.c2 THEN 0.5146748569153716 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((((rt1.c2)AND(vt1.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CASE WHEN (rt1.c0 IN ()) THEN (rt1.c1 IN (rt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((rt1.c2)) BETWEEN ((0.722467953109771)) AND ((rt1.c2))) WHEN (((vt1.c0)) BETWEEN ((rt1.c1)) AND ((vt1.c0))) THEN ((rt1.c2) NOTNULL) ELSE CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END END  NULLS LAST, (((rt1.c2)) NOT BETWEEN ((((vt1.c0)=(rt1.c1)))) AND ((CASE rt1.c2  WHEN rt1.c2 THEN 0.5146748569153716 END))) DESC  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE ((- (((((rt1.c2)AND(vt1.c0)))OR(rt1.c1))))) ORDER BY CASE WHEN (rt1.c0 IN ()) THEN (rt1.c1 IN (rt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((rt1.c2)) BETWEEN ((0.722467953109771)) AND ((rt1.c2))) WHEN (((vt1.c0)) BETWEEN ((rt1.c1)) AND ((vt1.c0))) THEN ((rt1.c2) NOTNULL) ELSE CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END END  NULLS LAST, (((rt1.c2)) NOT BETWEEN ((((vt1.c0)=(rt1.c1)))) AND ((CASE rt1.c2  WHEN rt1.c2 THEN 0.5146748569153716 END))) DESC  NULLS LAST;
SELECT * FROM vt1, v0, rt1 WHERE (((((((0.3583683848480069) ISNULL))OR(((rt1.c0) IS TRUE))))AND(rt1.c0))) ORDER BY (- (v0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.3583683848480069) ISNULL))OR(((rt1.c0) IS TRUE))))AND(rt1.c0))) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY (- (v0.c0)) COLLATE BINARY ASC);
SELECT * FROM vt1, v0, rt1 WHERE (((((((0.3583683848480069) ISNULL))OR(((rt1.c0) IS TRUE))))AND(rt1.c0))) ORDER BY (- (v0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.3583683848480069) ISNULL))OR(((rt1.c0) IS TRUE))))AND(rt1.c0))) IS TRUE)  as count FROM vt1, v0, rt1 ORDER BY (- (v0.c0)) COLLATE BINARY ASC);
SELECT * FROM vt1, v0, rt1 WHERE (((((((0.3583683848480069) ISNULL))OR(((rt1.c0) IS TRUE))))AND(rt1.c0))) ORDER BY (- (v0.c0)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM rt1, vt0, v0 INNER JOIN vt1 ON (((((-8.54136011E8 IN ()))OR(((v0.c0)||(0.8783685490425525)))))OR(CASE rt1.c0  WHEN x'b75c' THEN rt1.c2 END)) WHERE (((json(vt0.c0))<(((rt1.c2)==(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((json(vt0.c0))<(((rt1.c2)=(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0, v0 INNER JOIN vt1 ON (((((-8.54136011E8 IN ()))OR(((v0.c0)||(0.8783685490425525)))))OR(CASE rt1.c0  WHEN x'b75c' THEN rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1, vt0, v0 INNER JOIN vt1 ON (((((-8.54136011E8 IN ()))OR(((v0.c0)||(0.8783685490425525)))))OR(CASE rt1.c0  WHEN x'b75c' THEN rt1.c2 END)) WHERE (((json(vt0.c0))<(((rt1.c2)==(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((json(vt0.c0))<(((rt1.c2)=(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0, v0 INNER JOIN vt1 ON (((((-8.54136011E8 IN ()))OR(((v0.c0)||(0.8783685490425525)))))OR(CASE rt1.c0  WHEN x'b75c' THEN rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1, vt0, v0 INNER JOIN vt1 ON (((((-8.54136011E8 IN ()))OR(((v0.c0)||(0.8783685490425525)))))OR(CASE rt1.c0  WHEN x'b75c' THEN rt1.c2 END)) WHERE (((json(vt0.c0))<(((rt1.c2)==(rt1.c2)))));
SELECT ALL * FROM v0 NOT INDEXED, vt0, vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0 NOT INDEXED, vt0, vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0 NOT INDEXED, vt0, vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT));
SELECT COUNT(*) FROM vt1, vt0 WHERE (666357681 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((666357681 COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (666357681 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((666357681 COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (666357681 COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY ((vt0.c0) BETWEEN (CAST(v0.c0 AS REAL)) AND (-1836590655)), ((((vt1.c0))!=((v0.c0))) IN (0.9326346538778821, CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, NULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((vt0.c0) BETWEEN (CAST(v0.c0 AS REAL)) AND (-1836590655)), ((((vt1.c0))!=((v0.c0))) IN (0.9326346538778821, CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, NULL)));
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY ((vt0.c0) BETWEEN (CAST(v0.c0 AS REAL)) AND (-1836590655)), ((((vt1.c0))!=((v0.c0))) IN (0.9326346538778821, CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, NULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((vt0.c0) BETWEEN (CAST(v0.c0 AS REAL)) AND (-1836590655)), ((((vt1.c0))!=((v0.c0))) IN (0.9326346538778821, CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, NULL)));
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY ((vt0.c0) BETWEEN (CAST(v0.c0 AS REAL)) AND (-1836590655)), ((((vt1.c0))!=((v0.c0))) IN (0.9326346538778821, CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, NULL));
SELECT ALL * FROM v0, vt1 CROSS JOIN rt1 ON ((LOWER(DISTINCT v0.c0)) IS FALSE) INNER JOIN vt0 ON CAST(vt1.c0 AS INTEGER) COLLATE BINARY WHERE (CAST(((((v0.c0)AND(rt1.c0)))AND(vt1.c0)) AS BLOB)) ORDER BY CAST((NULL IN ()) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(rt1.c0)))AND(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt1 CROSS JOIN rt1 ON ((LOWER(DISTINCT v0.c0)) IS FALSE) INNER JOIN vt0 ON CAST(vt1.c0 AS INTEGER) COLLATE BINARY ORDER BY CAST((NULL IN ()) AS REAL) DESC);
SELECT ALL * FROM v0, vt1 CROSS JOIN rt1 ON ((LOWER(DISTINCT v0.c0)) IS FALSE) INNER JOIN vt0 ON CAST(vt1.c0 AS INTEGER) COLLATE BINARY WHERE (CAST(((((v0.c0)AND(rt1.c0)))AND(vt1.c0)) AS BLOB)) ORDER BY CAST((NULL IN ()) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(rt1.c0)))AND(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt1 CROSS JOIN rt1 ON ((LOWER(DISTINCT v0.c0)) IS FALSE) INNER JOIN vt0 ON CAST(vt1.c0 AS INTEGER) COLLATE BINARY ORDER BY CAST((NULL IN ()) AS REAL) DESC);
SELECT ALL * FROM v0, vt1 CROSS JOIN rt1 ON ((LOWER(DISTINCT v0.c0)) IS FALSE) INNER JOIN vt0 ON CAST(vt1.c0 AS INTEGER) COLLATE BINARY WHERE (CAST(((((v0.c0)AND(rt1.c0)))AND(vt1.c0)) AS BLOB)) ORDER BY CAST((NULL IN ()) AS REAL) DESC;
