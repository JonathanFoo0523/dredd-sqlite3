-- Time: 2024/06/09 03:49:08
-- Database: database6
-- Database version: 3.40.0
-- seed value: 1519570906
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED, ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 3ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE vt0 SET (c1)=(NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.7277273399619729); -- 5ms;
BEGIN DEFERRED TRANSACTION; -- 2ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA main.soft_heap_limit = 0; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'', c0='OG' WHERE ((((((vt1.c0)OR(vt1.c0)))OR(json_object(vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE NOCASE)); -- 1ms;
PRAGMA short_column_names = true; -- 1ms;
UPDATE vt1 SET (c0, c0, c0)=('q-', NULL, '-1374505259') WHERE (((vt1.c0) IS TRUE) IN ()); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA temp.threads; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT , c1 INTEGER , c2 INT  CHECK ( ((c1) NOT NULL))); -- 0ms;
ALTER TABLE t0 ADD COLUMN c55 INT; -- 1ms;
ANALYZE; -- 2ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('6208867569534935212', x'', 0Xffffffffae12b6d5, NULL); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(0.25737947941302497) WHERE ((((((vt0.c1)/(vt0.c0)))OR(NULL)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)); -- 1ms;
UPDATE vt0 SET (c0)=('뛕&6') WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'')))-(((vt0.c1)|(vt0.c1)))); -- 0ms;
END; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c53; -- 1ms;
ANALYZE; -- 0ms;
REINDEX RTRIM; -- 0ms;
VACUUM; -- 4ms;
UPDATE OR FAIL vt1 SET (c0, c0)=(NULL, 0.6238992464429823); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
PRAGMA temp.defer_foreign_keys = true; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, NULL); -- 6ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
DELETE FROM t0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '17399'); -- 0ms;
UPDATE OR ABORT vt1 SET (c0)=('-1374505259') WHERE CAST(vt1.c0 AS INTEGER); -- 1ms;
REINDEX BINARY; -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER INSERT ON t0 FOR EACH ROW  BEGIN UPDATE vt0 SET c1=x'', c0='-1819557272';END; -- 1ms;
ANALYZE t0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '52846'); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL) WHERE (((vt1.c0)OR(vt1.c0)) IN (IFNULL(DISTINCT vt1.c0, vt1.c0))); -- 0ms;
CREATE UNIQUE INDEX i65 ON t0(COALESCE((c1 IN ()), (+ (c1)), CAST(c0 AS BLOB), ((c53)|(c0))),(((c0 IN ())) NOT BETWEEN (x'') AND (CAST(c0 AS NUMERIC))),((NULL)IS NOT(((((((((c1)AND(c0)))OR(c0)))AND(c1)))AND(c0)))) DESC,((LIKE(c55, c1)) ISNULL) COLLATE NOCASE ASC); -- 1ms;
CREATE INDEX i39 ON t0((~ (((c1)-(c53)))) COLLATE BINARY ASC,(((- (c1))) NOT BETWEEN (((c1) NOT NULL)) AND (CASE c55  WHEN c1 THEN c55 WHEN c0 THEN c55 WHEN c0 THEN c55 END)) COLLATE BINARY DESC,CASE ((c55) ISNULL)  WHEN ((c1) BETWEEN (c0) AND (c53)) THEN 1609069618 COLLATE RTRIM ELSE (((c53))==((c1))) END COLLATE RTRIM,(((c53)) BETWEEN ((CAST(c0 AS TEXT))) AND ((((((c1)OR(c1)))OR(c55))))) ASC); -- 1ms;
DROP TABLE IF EXISTS t0; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 10ms;
PRAGMA main.busy_timeout = 10000; -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('0.25737947941302497') WHERE vt0.c1; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0x6a0467f3 WHERE ((NULL) ISNULL); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (2103566063), (NULL), (x''); -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA main.defer_foreign_keys = false; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('2FHx') WHERE vt0.c0; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL; -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1)))!=(vt0.c0))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))!=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1)))!=(vt0.c0))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))!=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1)))!=(vt0.c0))) ORDER BY vt0.c1 DESC;
SELECT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('0.25737947941302497')))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)&(CAST(vt1.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('0.25737947941302497')))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)&(CAST(vt1.c0 AS REAL)))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('0.25737947941302497')))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)&(CAST(vt1.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('0.25737947941302497')))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)&(CAST(vt1.c0 AS REAL)))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('0.25737947941302497')))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)&(CAST(vt1.c0 AS REAL)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((UPPER(NULL))) AND (((+ (vt0.c0)))))) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN (((vt0.c1)<>(vt1.c0))) AND ((('402167225') NOTNULL))) DESC, ((vt0.c0)<<(x'9ded')) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((UPPER(NULL))) AND (((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN (((vt0.c1)<>(vt1.c0))) AND ((('402167225') NOTNULL))) DESC, ((vt0.c0)<<(x'9ded')) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((UPPER(NULL))) AND (((+ (vt0.c0)))))) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN (((vt0.c1)<>(vt1.c0))) AND ((('402167225') NOTNULL))) DESC, ((vt0.c0)<<(x'9ded')) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((UPPER(NULL))) AND (((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN (((vt0.c1)<>(vt1.c0))) AND ((('402167225') NOTNULL))) DESC, ((vt0.c0)<<(x'9ded')) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((UPPER(NULL))) AND (((+ (vt0.c0)))))) ORDER BY ((vt0.c1 COLLATE RTRIM) BETWEEN (((vt0.c1)<>(vt1.c0))) AND ((('402167225') NOTNULL))) DESC, ((vt0.c0)<<(x'9ded')) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(NULL AS TEXT));
SELECT * FROM vt1 WHERE ((((0.9180658875650421)) BETWEEN ((((0.7277273399619729)-(vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY ((CHANGES()) NOT NULL) DESC, CAST((- (vt1.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.9180658875650421)) BETWEEN ((((0.7277273399619729)-(vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CHANGES()) NOT NULL) DESC, CAST((- (vt1.c0)) AS NUMERIC) DESC);
SELECT * FROM vt1 WHERE ((((0.9180658875650421)) BETWEEN ((((0.7277273399619729)-(vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY ((CHANGES()) NOT NULL) DESC, CAST((- (vt1.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.9180658875650421)) BETWEEN ((((0.7277273399619729)-(vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CHANGES()) NOT NULL) DESC, CAST((- (vt1.c0)) AS NUMERIC) DESC);
SELECT * FROM vt1 WHERE ((((0.9180658875650421)) BETWEEN ((((0.7277273399619729)-(vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY ((CHANGES()) NOT NULL) DESC, CAST((- (vt1.c0)) AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>>(vt0.c0))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (json_insert(1.609069618E9, vt0.c1, vt0.c0)))) ORDER BY CAST('-1374505259' COLLATE NOCASE AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>>(vt0.c0))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (json_insert(1.609069618E9, vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST('-1374505259' COLLATE NOCASE AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>>(vt0.c0))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (json_insert(1.609069618E9, vt0.c1, vt0.c0)))) ORDER BY CAST('-1374505259' COLLATE NOCASE AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>>(vt0.c0))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (json_insert(1.609069618E9, vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST('-1374505259' COLLATE NOCASE AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>>(vt0.c0))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (json_insert(1.609069618E9, vt0.c1, vt0.c0)))) ORDER BY CAST('-1374505259' COLLATE NOCASE AS NUMERIC)  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((vt0.c1)IS(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)IS(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c1)IS(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)IS(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c1)IS(vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (LOWER(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY (('-1627422861')LIKE(QUOTE(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (('-1627422861')LIKE(QUOTE(vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LOWER(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY (('-1627422861')LIKE(QUOTE(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (('-1627422861')LIKE(QUOTE(vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LOWER(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY (('-1627422861')LIKE(QUOTE(vt0.c0))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (((json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0))*((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0))*((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0))*((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0))*((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((0.03996492517194117)<=(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.03996492517194117)<=(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((0.03996492517194117)<=(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.03996492517194117)<=(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((0.03996492517194117)<=(vt0.c0)) AS NUMERIC));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE -1819557272 END) ORDER BY (((vt0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE -1819557272 END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE -1819557272 END) ORDER BY (((vt0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE -1819557272 END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE -1819557272 END) ORDER BY (((vt0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)<>(vt1.c0))) AND (CASE '2103566063'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)<>(vt1.c0))) AND (CASE '2103566063'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)<>(vt1.c0))) AND (CASE '2103566063'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)<>(vt1.c0))) AND (CASE '2103566063'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)<>(vt1.c0))) AND (CASE '2103566063'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL)) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, (((NULL, (0.08770743013492976 IN ()), (((vt0.c0))>((vt1.c0)))))>((LTRIM(vt0.c0), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), (('-1068627643')%(vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, (((NULL, (0.08770743013492976 IN ()), (((vt0.c0))>((vt1.c0)))))>((LTRIM(vt0.c0), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), (('-1068627643')%(vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL)) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, (((NULL, (0.08770743013492976 IN ()), (((vt0.c0))>((vt1.c0)))))>((LTRIM(vt0.c0), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), (('-1068627643')%(vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, (((NULL, (0.08770743013492976 IN ()), (((vt0.c0))>((vt1.c0)))))>((LTRIM(vt0.c0), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), (('-1068627643')%(vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL)) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, (((NULL, (0.08770743013492976 IN ()), (((vt0.c0))>((vt1.c0)))))>((LTRIM(vt0.c0), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), (('-1068627643')%(vt0.c1))))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) WHEN CAST(vt1.c0 AS BLOB) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN (~ (vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) WHEN CAST(vt1.c0 AS BLOB) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN (~ (vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) WHEN CAST(vt1.c0 AS BLOB) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN (~ (vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) WHEN CAST(vt1.c0 AS BLOB) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN (~ (vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) WHEN CAST(vt1.c0 AS BLOB) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN (~ (vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (LTRIM(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, (+ (vt0.c0)))) ORDER BY (vt0.c0 COLLATE BINARY IN (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, (+ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE BINARY IN (NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LTRIM(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, (+ (vt0.c0)))) ORDER BY (vt0.c0 COLLATE BINARY IN (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, (+ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE BINARY IN (NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LTRIM(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, (+ (vt0.c0)))) ORDER BY (vt0.c0 COLLATE BINARY IN (NULL))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((('')/(vt1.c0)))+(SQLITE_COMPILEOPTION_USED(vt1.c0)))) ORDER BY LOWER(((vt1.c0)|(vt1.c0))) DESC, ((((vt1.c0) NOTNULL)) BETWEEN (UPPER(DISTINCT NULL)) AND (((vt1.c0)>(vt1.c0))))  NULLS FIRST, ((((NOT (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.00861213542164141)), ((vt1.c0) NOTNULL)))>=((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS TRUE), ((vt1.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((('')/(vt1.c0)))+(SQLITE_COMPILEOPTION_USED(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY LOWER(((vt1.c0)|(vt1.c0))) DESC, ((((vt1.c0) NOTNULL)) BETWEEN (UPPER(DISTINCT NULL)) AND (((vt1.c0)>(vt1.c0))))  NULLS FIRST, ((((NOT (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.00861213542164141)), ((vt1.c0) NOTNULL)))>=((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS TRUE), ((vt1.c0)&(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE ((((('')/(vt1.c0)))+(SQLITE_COMPILEOPTION_USED(vt1.c0)))) ORDER BY LOWER(((vt1.c0)|(vt1.c0))) DESC, ((((vt1.c0) NOTNULL)) BETWEEN (UPPER(DISTINCT NULL)) AND (((vt1.c0)>(vt1.c0))))  NULLS FIRST, ((((NOT (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.00861213542164141)), ((vt1.c0) NOTNULL)))>=((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS TRUE), ((vt1.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((('')/(vt1.c0)))+(SQLITE_COMPILEOPTION_USED(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY LOWER(((vt1.c0)|(vt1.c0))) DESC, ((((vt1.c0) NOTNULL)) BETWEEN (UPPER(DISTINCT NULL)) AND (((vt1.c0)>(vt1.c0))))  NULLS FIRST, ((((NOT (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.00861213542164141)), ((vt1.c0) NOTNULL)))>=((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS TRUE), ((vt1.c0)&(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE ((((('')/(vt1.c0)))+(SQLITE_COMPILEOPTION_USED(vt1.c0)))) ORDER BY LOWER(((vt1.c0)|(vt1.c0))) DESC, ((((vt1.c0) NOTNULL)) BETWEEN (UPPER(DISTINCT NULL)) AND (((vt1.c0)>(vt1.c0))))  NULLS FIRST, ((((NOT (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.00861213542164141)), ((vt1.c0) NOTNULL)))>=((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) IS TRUE), ((vt1.c0)&(vt1.c0)))));
SELECT * FROM vt1 WHERE (SQLITE_VERSION()) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (x'')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (x'')))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (SQLITE_VERSION()) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (x'')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (x'')))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (SQLITE_VERSION()) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (x'')))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (UPPER(x''));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(x'')) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(x''));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(x'')) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(x''));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.c0)))OR((+ (vt0.c0)))))OR((- (vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(x'')))))AND(vt0.c1))) ORDER BY (((((0.14465374527995645, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0))))OR(((x'48a6') NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)OR(vt0.c0)))OR((+ (vt0.c0)))))OR((- (vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(x'')))))AND(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((0.14465374527995645, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0))))OR(((x'48a6') NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.c0)))OR((+ (vt0.c0)))))OR((- (vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(x'')))))AND(vt0.c1))) ORDER BY (((((0.14465374527995645, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0))))OR(((x'48a6') NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)OR(vt0.c0)))OR((+ (vt0.c0)))))OR((- (vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(x'')))))AND(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((0.14465374527995645, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0))))OR(((x'48a6') NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.c0)))OR((+ (vt0.c0)))))OR((- (vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))OR(x'')))))AND(vt0.c1))) ORDER BY (((((0.14465374527995645, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c0))))OR(((x'48a6') NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY UNLIKELY(DISTINCT (~ (vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT (~ (vt0.c1)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY UNLIKELY(DISTINCT (~ (vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT (~ (vt0.c1)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY UNLIKELY(DISTINCT (~ (vt0.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((NULL)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN ())) ORDER BY ((((((((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(CASE WHEN 0.25756885938787977 THEN vt0.c0 END)))AND(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(LOWER(vt1.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST, ((CAST(vt1.c0 AS NUMERIC)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(CASE WHEN 0.25756885938787977 THEN vt0.c0 END)))AND(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(LOWER(vt1.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST, ((CAST(vt1.c0 AS NUMERIC)) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((NULL)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN ())) ORDER BY ((((((((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(CASE WHEN 0.25756885938787977 THEN vt0.c0 END)))AND(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(LOWER(vt1.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST, ((CAST(vt1.c0 AS NUMERIC)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(CASE WHEN 0.25756885938787977 THEN vt0.c0 END)))AND(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(LOWER(vt1.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST, ((CAST(vt1.c0 AS NUMERIC)) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((NULL)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN ())) ORDER BY ((((((((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)AND(CASE WHEN 0.25756885938787977 THEN vt0.c0 END)))AND(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(LOWER(vt1.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST, ((CAST(vt1.c0 AS NUMERIC)) IS FALSE);
SELECT COUNT(*) FROM vt0, vt1 WHERE (TRIM((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c0)IS(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (TRIM((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c0)IS(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (TRIM((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), ((vt0.c0)IS(vt0.c0))));
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN (((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c1, vt1.c0, vt0.c1))), vt0.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)) AND ((CAST(vt0.c0 AS REAL), (((NULL)) BETWEEN ((vt0.c0)) AND ((NULL))), CAST(vt0.c1 AS INTEGER)))) WHERE (vt1.c0) ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN (((((vt0.c1, vt0.c1, vt0.c1))=((vt0.c1, vt1.c0, vt0.c1))), vt0.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)) AND ((CAST(vt0.c0 AS REAL), (((NULL)) BETWEEN ((vt0.c0)) AND ((NULL))), CAST(vt0.c1 AS INTEGER)))) ORDER BY (vt1.c0 IN ()));
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN (((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c1, vt1.c0, vt0.c1))), vt0.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)) AND ((CAST(vt0.c0 AS REAL), (((NULL)) BETWEEN ((vt0.c0)) AND ((NULL))), CAST(vt0.c1 AS INTEGER)))) WHERE (vt1.c0) ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN (((((vt0.c1, vt0.c1, vt0.c1))=((vt0.c1, vt1.c0, vt0.c1))), vt0.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)) AND ((CAST(vt0.c0 AS REAL), (((NULL)) BETWEEN ((vt0.c0)) AND ((NULL))), CAST(vt0.c1 AS INTEGER)))) ORDER BY (vt1.c0 IN ()));
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN (((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c1, vt1.c0, vt0.c1))), vt0.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)) AND ((CAST(vt0.c0 AS REAL), (((NULL)) BETWEEN ((vt0.c0)) AND ((NULL))), CAST(vt0.c1 AS INTEGER)))) WHERE (vt1.c0) ORDER BY (vt1.c0 IN ());
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(x'd97a')))AND(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(x'd97a')))AND(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(x'd97a')))AND(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(x'd97a')))AND(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(x'd97a')))AND(((vt1.c0) ISNULL))));
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) ORDER BY ((((((((((vt0.c1) NOTNULL))AND(vt0.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR((vt0.c1 IN ()))))OR((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1) NOTNULL))AND(vt0.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR((vt0.c1 IN ()))))OR((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) ORDER BY ((((((((((vt0.c1) NOTNULL))AND(vt0.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR((vt0.c1 IN ()))))OR((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1) NOTNULL))AND(vt0.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR((vt0.c1 IN ()))))OR((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) ORDER BY ((((((((((vt0.c1) NOTNULL))AND(vt0.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR((vt0.c1 IN ()))))OR((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((TOTAL_CHANGES()) BETWEEN (((vt0.c1)+(vt1.c0))) AND (TRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) BETWEEN (((vt0.c1)+(vt1.c0))) AND (TRIM(vt0.c1)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((TOTAL_CHANGES()) BETWEEN (((vt0.c1)+(vt1.c0))) AND (TRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) BETWEEN (((vt0.c1)+(vt1.c0))) AND (TRIM(vt0.c1)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((TOTAL_CHANGES()) BETWEEN (((vt0.c1)+(vt1.c0))) AND (TRIM(vt0.c1))));
SELECT ALL * FROM vt1 WHERE ((- (vt1.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN STRFTIME(x'', vt1.c0, vt1.c0, vt1.c0, vt1.c0) WHEN json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0) THEN ((vt1.c0)<=(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)LIKE(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN STRFTIME(x'', vt1.c0, vt1.c0, vt1.c0, vt1.c0) WHEN json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0) THEN ((vt1.c0)<=(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)LIKE(vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE ((- (vt1.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN STRFTIME(x'', vt1.c0, vt1.c0, vt1.c0, vt1.c0) WHEN json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0) THEN ((vt1.c0)<=(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)LIKE(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN STRFTIME(x'', vt1.c0, vt1.c0, vt1.c0, vt1.c0) WHEN json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0) THEN ((vt1.c0)<=(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)LIKE(vt1.c0)) END);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))>=(CASE WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))>=(CASE WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))>=(CASE WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))>=(CASE WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))>=(CASE WHEN vt0.c1 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON COALESCE(((((((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)), vt1.c0) WHERE (CASE CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN 'Fॅe6y~t' THEN NULL END  WHEN '1536164869' THEN CAST(vt0.c0 AS NUMERIC) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN 'Fॅe6y~t' THEN NULL END  WHEN '1536164869' THEN CAST(vt0.c0 AS NUMERIC) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON COALESCE(((((((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)), vt1.c0));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON COALESCE(((((((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)), vt1.c0) WHERE (CASE CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN 'Fॅe6y~t' THEN NULL END  WHEN '1536164869' THEN CAST(vt0.c0 AS NUMERIC) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN 'Fॅe6y~t' THEN NULL END  WHEN '1536164869' THEN CAST(vt0.c0 AS NUMERIC) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON COALESCE(((((((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)), vt1.c0));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON COALESCE(((((((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)), vt1.c0) WHERE (CASE CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN 'Fॅe6y~t' THEN NULL END  WHEN '1536164869' THEN CAST(vt0.c0 AS NUMERIC) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) END);
SELECT ALL * FROM vt0 WHERE ('zT,4Lc%') ORDER BY (+ (LIKE(vt0.c0, vt0.c0, 'x')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('zT,4Lc%') IS TRUE)  as count FROM vt0 ORDER BY (+ (LIKE(vt0.c0, vt0.c0, 'x')))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ('zT,4Lc%') ORDER BY (+ (LIKE(vt0.c0, vt0.c0, 'x')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('zT,4Lc%') IS TRUE)  as count FROM vt0 ORDER BY (+ (LIKE(vt0.c0, vt0.c0, 'x')))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ('zT,4Lc%') ORDER BY (+ (LIKE(vt0.c0, vt0.c0, 'x')))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((LIKE('0.9180658875650421', vt0.c0, '0'))<(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((vt0.c0) IS TRUE))))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((LIKE('0.9180658875650421', vt0.c0, '0'))<(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((vt0.c0) IS TRUE))))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE (((LIKE('0.9180658875650421', vt0.c0, '0'))<(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((vt0.c0) IS TRUE))))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((LIKE('0.9180658875650421', vt0.c0, '0'))<(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((vt0.c0) IS TRUE))))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE (((LIKE('0.9180658875650421', vt0.c0, '0'))<(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((vt0.c0) IS TRUE))))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) ASC;
SELECT * FROM vt1, vt0 WHERE ((('-1374505259') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('-1374505259') IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((('-1374505259') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('-1374505259') IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((('-1374505259') IS FALSE));
SELECT ALL * FROM vt1, vt0 WHERE (((TOTAL_CHANGES())<(''))) ORDER BY (~ (((x'5c65') ISNULL))) ASC, CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (+ (vt0.c1)) ELSE (((vt0.c0, vt0.c1, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES())<(''))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (((x'5c65') ISNULL))) ASC, CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (+ (vt0.c1)) ELSE (((vt0.c0, vt0.c1, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0))) END  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((TOTAL_CHANGES())<(''))) ORDER BY (~ (((x'5c65') ISNULL))) ASC, CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (+ (vt0.c1)) ELSE (((vt0.c0, vt0.c1, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES())<(''))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (((x'5c65') ISNULL))) ASC, CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (+ (vt0.c1)) ELSE (((vt0.c0, vt0.c1, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0))) END  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((TOTAL_CHANGES())<(''))) ORDER BY (~ (((x'5c65') ISNULL))) ASC, CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (+ (vt0.c1)) ELSE (((vt0.c0, vt0.c1, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0))) END  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0))=((vt0.c1)))) NOT BETWEEN ((~ (vt1.c0))) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))==((vt0.c1)))) NOT BETWEEN ((~ (vt1.c0))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0))=((vt0.c1)))) NOT BETWEEN ((~ (vt1.c0))) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))==((vt0.c1)))) NOT BETWEEN ((~ (vt1.c0))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0))=((vt0.c1)))) NOT BETWEEN ((~ (vt1.c0))) AND ((- (vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ('-1627422861') ORDER BY ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0)<=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('-1627422861') IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0)<=(vt0.c0)))) ASC);
SELECT * FROM vt0, vt1 WHERE ('-1627422861') ORDER BY ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0)<=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('-1627422861') IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0)<=(vt0.c0)))) ASC);
SELECT * FROM vt0, vt1 WHERE ('-1627422861') ORDER BY ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0)<=(vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) ISNULL))))AND(((vt1.c0) IS FALSE))))AND((((vt1.c0))>=((vt1.c0))))))AND(x'cf62'))) ORDER BY ((('1114262467'))<>(((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) DESC, CAST(vt1.c0 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) ISNULL))))AND(((vt1.c0) IS FALSE))))AND((((vt1.c0))>=((vt1.c0))))))AND(x'cf62'))) IS TRUE)  as count FROM vt1 ORDER BY ((('1114262467'))<>(((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) DESC, CAST(vt1.c0 COLLATE BINARY AS INTEGER));
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) ISNULL))))AND(((vt1.c0) IS FALSE))))AND((((vt1.c0))>=((vt1.c0))))))AND(x'cf62'))) ORDER BY ((('1114262467'))<>(((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) DESC, CAST(vt1.c0 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) ISNULL))))AND(((vt1.c0) IS FALSE))))AND((((vt1.c0))>=((vt1.c0))))))AND(x'cf62'))) IS TRUE)  as count FROM vt1 ORDER BY ((('1114262467'))<>(((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) DESC, CAST(vt1.c0 COLLATE BINARY AS INTEGER));
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) ISNULL))))AND(((vt1.c0) IS FALSE))))AND((((vt1.c0))>=((vt1.c0))))))AND(x'cf62'))) ORDER BY ((('1114262467'))<>(((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) DESC, CAST(vt1.c0 COLLATE BINARY AS INTEGER);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((x'')*(vt0.c0))) AND (ABS(vt0.c1)))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((x'')*(vt0.c0))) AND (ABS(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((x'')*(vt0.c0))) AND (ABS(vt0.c1)))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((x'')*(vt0.c0))) AND (ABS(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((x'')*(vt0.c0))) AND (ABS(vt0.c1)))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ('1114262467');
SELECT SUM(count) FROM (SELECT ALL (('1114262467') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('1114262467');
SELECT SUM(count) FROM (SELECT ALL (('1114262467') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('1114262467');
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE)) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY '' DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE)) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY '' DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE)) ORDER BY '' DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((((+ (vt1.c0)))OR(CAST(vt1.c0 AS INTEGER))))OR('-1625542855')));
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c0)))OR(CAST(vt1.c0 AS INTEGER))))OR('-1625542855'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((+ (vt1.c0)))OR(CAST(vt1.c0 AS INTEGER))))OR('-1625542855')));
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c0)))OR(CAST(vt1.c0 AS INTEGER))))OR('-1625542855'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((+ (vt1.c0)))OR(CAST(vt1.c0 AS INTEGER))))OR('-1625542855')));
SELECT * FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY (+ (vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (x'77b6' IN ((((('-341389224')AND(vt1.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (+ (vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (x'77b6' IN ((((('-341389224')AND(vt1.c0)))OR(vt1.c0)))) DESC);
SELECT * FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY (+ (vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (x'77b6' IN ((((('-341389224')AND(vt1.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (+ (vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (x'77b6' IN ((((('-341389224')AND(vt1.c0)))OR(vt1.c0)))) DESC);
SELECT * FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY (+ (vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (x'77b6' IN ((((('-341389224')AND(vt1.c0)))OR(vt1.c0)))) DESC;
SELECT * FROM vt1, vt0 WHERE (x'0e4e');
SELECT SUM(count) FROM (SELECT ((x'0e4e') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (x'0e4e');
SELECT SUM(count) FROM (SELECT ((x'0e4e') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (x'0e4e');
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)/(NULL))) IS TRUE)) ORDER BY DATE(vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)/(NULL))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY DATE(vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0) COLLATE NOCASE ASC);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)/(NULL))) IS TRUE)) ORDER BY DATE(vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)/(NULL))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY DATE(vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0) COLLATE NOCASE ASC);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)/(NULL))) IS TRUE)) ORDER BY DATE(vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0) COLLATE NOCASE ASC;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-1627422861' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) AND ((((((((((vt0.c0)AND(1.7976931348623157E308)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-1627422861' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) AND ((((((((((vt0.c0)AND(1.7976931348623157E308)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-1627422861' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) AND ((((((((((vt0.c0)AND(1.7976931348623157E308)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-1627422861' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) AND ((((((((((vt0.c0)AND(1.7976931348623157E308)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-1627422861' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) AND ((((((((((vt0.c0)AND(1.7976931348623157E308)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1))))));
SELECT * FROM vt0, vt1 WHERE (((LIKELY(DISTINCT vt0.c0)) BETWEEN ((((('n74dgT䈱a')AND(vt1.c0)))AND(vt1.c0))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt0.c0)) BETWEEN ((((('n74dgT䈱a')AND(vt1.c0)))AND(vt1.c0))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((LIKELY(DISTINCT vt0.c0)) BETWEEN ((((('n74dgT䈱a')AND(vt1.c0)))AND(vt1.c0))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt0.c0)) BETWEEN ((((('n74dgT䈱a')AND(vt1.c0)))AND(vt1.c0))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((LIKELY(DISTINCT vt0.c0)) BETWEEN ((((('n74dgT䈱a')AND(vt1.c0)))AND(vt1.c0))) AND ((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT))))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS FALSE)  NULLS FIRST, (NOT (0.238105903334209)) ASC, ((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND((vt0.c0 IN ()))))OR(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS FALSE)  NULLS FIRST, (NOT (0.238105903334209)) ASC, ((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND((vt0.c0 IN ()))))OR(vt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT))))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS FALSE)  NULLS FIRST, (NOT (0.238105903334209)) ASC, ((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND((vt0.c0 IN ()))))OR(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS FALSE)  NULLS FIRST, (NOT (0.238105903334209)) ASC, ((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND((vt0.c0 IN ()))))OR(vt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT))))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS FALSE)  NULLS FIRST, (NOT (0.238105903334209)) ASC, ((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND((vt0.c0 IN ()))))OR(vt0.c1))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (CAST(vt0.c1 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (CAST(vt0.c1 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (CAST(vt0.c1 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (CAST(vt0.c1 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (CAST(vt0.c1 AS TEXT))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.06881195967135278) ORDER BY CASE WHEN vt0.c1 THEN 0.8364410085955668 WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c1 ELSE LIKELIHOOD(vt0.c1, 0.8502304452708801) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.06881195967135278) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN 0.8364410085955668 WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c1 ELSE LIKELIHOOD(vt0.c1, 0.8502304452708801) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.06881195967135278) ORDER BY CASE WHEN vt0.c1 THEN 0.8364410085955668 WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c1 ELSE LIKELIHOOD(vt0.c1, 0.8502304452708801) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.06881195967135278) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN 0.8364410085955668 WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c1 ELSE LIKELIHOOD(vt0.c1, 0.8502304452708801) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.06881195967135278) ORDER BY CASE WHEN vt0.c1 THEN 0.8364410085955668 WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c1 ELSE LIKELIHOOD(vt0.c1, 0.8502304452708801) END  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((CAST(NULL AS BLOB))||(((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(NULL AS BLOB))||(((vt1.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((CAST(NULL AS BLOB))||(((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(NULL AS BLOB))||(((vt1.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((CAST(NULL AS BLOB))||(((vt1.c0) NOT NULL)));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (0.16273121239802846) AND (' ')))==(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (0.16273121239802846) AND (' ')))=(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (0.16273121239802846) AND (' ')))==(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (0.16273121239802846) AND (' ')))=(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (0.16273121239802846) AND (' ')))==(((vt1.c0) ISNULL))));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) AS TEXT));
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1) BETWEEN (NULL) AND ((('뛕&6') BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (NULL) AND ((('뛕&6') BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1) BETWEEN (NULL) AND ((('뛕&6') BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (NULL) AND ((('뛕&6') BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1) BETWEEN (NULL) AND ((('뛕&6') BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (vt0.c0 IN (vt0.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE 0.30436974601925293 END THEN ((vt1.c0)>(vt0.c1)) WHEN (- (vt1.c0)) THEN ((((vt1.c0)AND('2FHx')))OR(vt0.c0)) ELSE TRIM(vt0.c1, vt1.c0) END) ORDER BY ((vt0.c1)<=(((vt0.c0) NOT NULL)))  NULLS LAST, (((((vt0.c0)OR(vt0.c1))))>(((((vt1.c0, vt0.c1, vt0.c0)) BETWEEN ((0.3831591306851383, x'', vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))))), CAST((((vt1.c0))>=((x''))) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (vt0.c0 IN (vt0.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE 0.30436974601925293 END THEN ((vt1.c0)>(vt0.c1)) WHEN (- (vt1.c0)) THEN ((((vt1.c0)AND('2FHx')))OR(vt0.c0)) ELSE TRIM(vt0.c1, vt1.c0) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1)<=(((vt0.c0) NOT NULL)))  NULLS LAST, (((((vt0.c0)OR(vt0.c1))))>(((((vt1.c0, vt0.c1, vt0.c0)) BETWEEN ((0.3831591306851383, x'', vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))))), CAST((((vt1.c0))>=((x''))) AS TEXT));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (vt0.c0 IN (vt0.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE 0.30436974601925293 END THEN ((vt1.c0)>(vt0.c1)) WHEN (- (vt1.c0)) THEN ((((vt1.c0)AND('2FHx')))OR(vt0.c0)) ELSE TRIM(vt0.c1, vt1.c0) END) ORDER BY ((vt0.c1)<=(((vt0.c0) NOT NULL)))  NULLS LAST, (((((vt0.c0)OR(vt0.c1))))>(((((vt1.c0, vt0.c1, vt0.c0)) BETWEEN ((0.3831591306851383, x'', vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))))), CAST((((vt1.c0))>=((x''))) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (vt0.c0 IN (vt0.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE 0.30436974601925293 END THEN ((vt1.c0)>(vt0.c1)) WHEN (- (vt1.c0)) THEN ((((vt1.c0)AND('2FHx')))OR(vt0.c0)) ELSE TRIM(vt0.c1, vt1.c0) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1)<=(((vt0.c0) NOT NULL)))  NULLS LAST, (((((vt0.c0)OR(vt0.c1))))>(((((vt1.c0, vt0.c1, vt0.c0)) BETWEEN ((0.3831591306851383, x'', vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))))), CAST((((vt1.c0))>=((x''))) AS TEXT));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (vt0.c0 IN (vt0.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE 0.30436974601925293 END THEN ((vt1.c0)>(vt0.c1)) WHEN (- (vt1.c0)) THEN ((((vt1.c0)AND('2FHx')))OR(vt0.c0)) ELSE TRIM(vt0.c1, vt1.c0) END) ORDER BY ((vt0.c1)<=(((vt0.c0) NOT NULL)))  NULLS LAST, (((((vt0.c0)OR(vt0.c1))))>(((((vt1.c0, vt0.c1, vt0.c0)) BETWEEN ((0.3831591306851383, x'', vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))))), CAST((((vt1.c0))>=((x''))) AS TEXT);
SELECT COUNT(*) FROM vt1 NOT INDEXED LEFT OUTER JOIN vt0 ON CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC));
SELECT COUNT(*) FROM vt1 NOT INDEXED LEFT OUTER JOIN vt0 ON CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC));
SELECT COUNT(*) FROM vt1 NOT INDEXED LEFT OUTER JOIN vt0 ON CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((((vt1.c0))<>((NULL)))))) ORDER BY ((vt0.c1 COLLATE BINARY) IS TRUE)  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), (vt1.c0 IN ()), ((vt0.c0)|(vt1.c0)))) AND (((vt1.c0 IN ()), (((vt0.c1)) NOT BETWEEN ((x'')) AND ((0.6437763456556636))), (vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c0))!=((NULL)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((vt0.c1 COLLATE BINARY) IS TRUE)  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), (vt1.c0 IN ()), ((vt0.c0)|(vt1.c0)))) AND (((vt1.c0 IN ()), (((vt0.c1)) NOT BETWEEN ((x'')) AND ((0.6437763456556636))), (vt0.c1 IN ())))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((((vt1.c0))<>((NULL)))))) ORDER BY ((vt0.c1 COLLATE BINARY) IS TRUE)  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), (vt1.c0 IN ()), ((vt0.c0)|(vt1.c0)))) AND (((vt1.c0 IN ()), (((vt0.c1)) NOT BETWEEN ((x'')) AND ((0.6437763456556636))), (vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c0))!=((NULL)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((vt0.c1 COLLATE BINARY) IS TRUE)  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), (vt1.c0 IN ()), ((vt0.c0)|(vt1.c0)))) AND (((vt1.c0 IN ()), (((vt0.c1)) NOT BETWEEN ((x'')) AND ((0.6437763456556636))), (vt0.c1 IN ())))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((((vt1.c0))<>((NULL)))))) ORDER BY ((vt0.c1 COLLATE BINARY) IS TRUE)  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), (vt1.c0 IN ()), ((vt0.c0)|(vt1.c0)))) AND (((vt1.c0 IN ()), (((vt0.c1)) NOT BETWEEN ((x'')) AND ((0.6437763456556636))), (vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ ((NOT (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.9601413042895376) ORDER BY ((((vt1.c0)*(vt0.c1)))|(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.9601413042895376) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)*(vt0.c1)))|(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.9601413042895376) ORDER BY ((((vt1.c0)*(vt0.c1)))|(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.9601413042895376) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)*(vt0.c1)))|(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.9601413042895376) ORDER BY ((((vt1.c0)*(vt0.c1)))|(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((+ (vt1.c0)))<=(((((vt0.c1)OR(NULL)))AND(vt0.c0))))) ORDER BY (- ((vt0.c1 IN ()))) DESC  NULLS FIRST, CASE WHEN ((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN vt0.c1 THEN vt0.c0 WHEN ((vt0.c0)LIKE(vt0.c1)) THEN ((vt0.c0)+(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))<=(((((vt0.c1)OR(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((vt0.c1 IN ()))) DESC  NULLS FIRST, CASE WHEN ((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN vt0.c1 THEN vt0.c0 WHEN ((vt0.c0)LIKE(vt0.c1)) THEN ((vt0.c0)+(vt1.c0)) END);
SELECT ALL * FROM vt1, vt0 WHERE ((((+ (vt1.c0)))<=(((((vt0.c1)OR(NULL)))AND(vt0.c0))))) ORDER BY (- ((vt0.c1 IN ()))) DESC  NULLS FIRST, CASE WHEN ((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN vt0.c1 THEN vt0.c0 WHEN ((vt0.c0)LIKE(vt0.c1)) THEN ((vt0.c0)+(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))<=(((((vt0.c1)OR(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((vt0.c1 IN ()))) DESC  NULLS FIRST, CASE WHEN ((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN vt0.c1 THEN vt0.c0 WHEN ((vt0.c0)LIKE(vt0.c1)) THEN ((vt0.c0)+(vt1.c0)) END);
SELECT ALL * FROM vt1, vt0 WHERE ((((+ (vt1.c0)))<=(((((vt0.c1)OR(NULL)))AND(vt0.c0))))) ORDER BY (- ((vt0.c1 IN ()))) DESC  NULLS FIRST, CASE WHEN ((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN vt0.c1 THEN vt0.c0 WHEN ((vt0.c0)LIKE(vt0.c1)) THEN ((vt0.c0)+(vt1.c0)) END;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED LEFT OUTER JOIN vt1 ON (((((((((~ ('1282112653')))AND(((vt1.c0)<>(vt1.c0)))))AND(((vt1.c0)<<(vt0.c1)))))OR(CAST(vt0.c1 AS REAL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((vt0.c0 IN (((vt0.c0)>>(vt1.c0)), (vt0.c1 IN ())))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))!=((((vt0.c0))<=((vt1.c0))))), CASE WHEN (((vt0.c1))>=((vt1.c0))) THEN (('?i-8286363267729478552T5421963505037199296 oH') ISNULL) WHEN ((vt0.c0) NOT NULL) THEN (vt1.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN '674284690' COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((vt0.c0)>>(vt1.c0)), (vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((~ ('1282112653')))AND(((vt1.c0)<>(vt1.c0)))))AND(((vt1.c0)<<(vt0.c1)))))OR(CAST(vt0.c1 AS REAL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<>((((vt0.c0))<=((vt1.c0))))), CASE WHEN (((vt0.c1))>=((vt1.c0))) THEN (('?i-8286363267729478552T5421963505037199296 oH') ISNULL) WHEN ((vt0.c0) NOT NULL) THEN (vt1.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN '674284690' COLLATE BINARY END ASC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED LEFT OUTER JOIN vt1 ON (((((((((~ ('1282112653')))AND(((vt1.c0)<>(vt1.c0)))))AND(((vt1.c0)<<(vt0.c1)))))OR(CAST(vt0.c1 AS REAL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((vt0.c0 IN (((vt0.c0)>>(vt1.c0)), (vt0.c1 IN ())))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))!=((((vt0.c0))<=((vt1.c0))))), CASE WHEN (((vt0.c1))>=((vt1.c0))) THEN (('?i-8286363267729478552T5421963505037199296 oH') ISNULL) WHEN ((vt0.c0) NOT NULL) THEN (vt1.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN '674284690' COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((vt0.c0)>>(vt1.c0)), (vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((~ ('1282112653')))AND(((vt1.c0)<>(vt1.c0)))))AND(((vt1.c0)<<(vt0.c1)))))OR(CAST(vt0.c1 AS REAL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<>((((vt0.c0))<=((vt1.c0))))), CASE WHEN (((vt0.c1))>=((vt1.c0))) THEN (('?i-8286363267729478552T5421963505037199296 oH') ISNULL) WHEN ((vt0.c0) NOT NULL) THEN (vt1.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN '674284690' COLLATE BINARY END ASC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED LEFT OUTER JOIN vt1 ON (((((((((~ ('1282112653')))AND(((vt1.c0)<>(vt1.c0)))))AND(((vt1.c0)<<(vt0.c1)))))OR(CAST(vt0.c1 AS REAL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((vt0.c0 IN (((vt0.c0)>>(vt1.c0)), (vt0.c1 IN ())))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))!=((((vt0.c0))<=((vt1.c0))))), CASE WHEN (((vt0.c1))>=((vt1.c0))) THEN (('?i-8286363267729478552T5421963505037199296 oH') ISNULL) WHEN ((vt0.c0) NOT NULL) THEN (vt1.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN '674284690' COLLATE BINARY END ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL)) ORDER BY ((((((vt0.c0)AND(vt0.c1)))OR(x'd315'))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)AND(vt0.c1)))OR(x'd315'))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL)) ORDER BY ((((((vt0.c0)AND(vt0.c1)))OR(x'd315'))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)AND(vt0.c1)))OR(x'd315'))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL)) ORDER BY ((((((vt0.c0)AND(vt0.c1)))OR(x'd315'))) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c0) IS FALSE))>>(((vt1.c0)+(0.29878305218879386))))) ORDER BY ((((vt1.c0) NOT NULL))>(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, (vt1.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))>>(((vt1.c0)+(0.29878305218879386))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL))>(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, (vt1.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) IS FALSE))>>(((vt1.c0)+(0.29878305218879386))))) ORDER BY ((((vt1.c0) NOT NULL))>(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, (vt1.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))>>(((vt1.c0)+(0.29878305218879386))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL))>(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, (vt1.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) IS FALSE))>>(((vt1.c0)+(0.29878305218879386))))) ORDER BY ((((vt1.c0) NOT NULL))>(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, (vt1.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((LIKELY(DISTINCT 2024785025)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT 2024785025)) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((LIKELY(DISTINCT 2024785025)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT 2024785025)) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((LIKELY(DISTINCT 2024785025)) ISNULL));
SELECT * FROM vt1, vt0 WHERE (((NULL)<=(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT * FROM vt1, vt0 WHERE (((NULL)<=(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT * FROM vt1, vt0 WHERE (((NULL)<=(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CAST('4-jPqz(' AS TEXT)) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('4-jPqz(' AS TEXT)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0) NOTNULL))) ASC);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CAST('4-jPqz(' AS TEXT)) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('4-jPqz(' AS TEXT)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0) NOTNULL))) ASC);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CAST('4-jPqz(' AS TEXT)) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((((vt0.c1)OR(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0) NOTNULL))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN ((vt0.c1) IS TRUE) THEN 0x5660b2e2 END);
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(DISTINCT vt0.c0)  WHEN ((vt0.c1) IS TRUE) THEN 0X5660b2e2 END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN ((vt0.c1) IS TRUE) THEN 0x5660b2e2 END);
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(DISTINCT vt0.c0)  WHEN ((vt0.c1) IS TRUE) THEN 0X5660b2e2 END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN ((vt0.c1) IS TRUE) THEN 0x5660b2e2 END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c1))) NOT NULL)) ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('kh'))) THEN vt0.c1 WHEN vt0.c0 THEN CAST(vt0.c1 AS REAL) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 END, (~ (((vt0.c1)*('!A%'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('kh'))) THEN vt0.c1 WHEN vt0.c0 THEN CAST(vt0.c1 AS REAL) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 END, (~ (((vt0.c1)*('!A%'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c1))) NOT NULL)) ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('kh'))) THEN vt0.c1 WHEN vt0.c0 THEN CAST(vt0.c1 AS REAL) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 END, (~ (((vt0.c1)*('!A%'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('kh'))) THEN vt0.c1 WHEN vt0.c0 THEN CAST(vt0.c1 AS REAL) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 END, (~ (((vt0.c1)*('!A%'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c1))) NOT NULL)) ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('kh'))) THEN vt0.c1 WHEN vt0.c0 THEN CAST(vt0.c1 AS REAL) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 END, (~ (((vt0.c1)*('!A%'))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN (~ (vt0.c1)) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN (~ (vt0.c1)) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN (~ (vt0.c1)) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN (~ (vt0.c1)) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN (~ (vt0.c1)) ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('FALSE', ((vt0.c1)>=(vt0.c1)), vt1.c0)) AND ((((((vt1.c0)AND(vt1.c0)))OR(NULL)), (('1935523473') NOT BETWEEN (NULL) AND (vt1.c0)), x'')))) ORDER BY (((vt0.c1)GLOB(vt0.c0)) IN ()) ASC  NULLS FIRST, ((vt1.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('FALSE', ((vt0.c1)>=(vt0.c1)), vt1.c0)) AND ((((((vt1.c0)AND(vt1.c0)))OR(NULL)), (('1935523473') NOT BETWEEN (NULL) AND (vt1.c0)), x'')))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1)GLOB(vt0.c0)) IN ()) ASC  NULLS FIRST, ((vt1.c0 IN ()) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('FALSE', ((vt0.c1)>=(vt0.c1)), vt1.c0)) AND ((((((vt1.c0)AND(vt1.c0)))OR(NULL)), (('1935523473') NOT BETWEEN (NULL) AND (vt1.c0)), x'')))) ORDER BY (((vt0.c1)GLOB(vt0.c0)) IN ()) ASC  NULLS FIRST, ((vt1.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('FALSE', ((vt0.c1)>=(vt0.c1)), vt1.c0)) AND ((((((vt1.c0)AND(vt1.c0)))OR(NULL)), (('1935523473') NOT BETWEEN (NULL) AND (vt1.c0)), x'')))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1)GLOB(vt0.c0)) IN ()) ASC  NULLS FIRST, ((vt1.c0 IN ()) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('FALSE', ((vt0.c1)>=(vt0.c1)), vt1.c0)) AND ((((((vt1.c0)AND(vt1.c0)))OR(NULL)), (('1935523473') NOT BETWEEN (NULL) AND (vt1.c0)), x'')))) ORDER BY (((vt0.c1)GLOB(vt0.c0)) IN ()) ASC  NULLS FIRST, ((vt1.c0 IN ()) IN ())  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(CAST('!a%' AS NUMERIC))))AND(x'e27f')));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))AND(CAST('!a%' AS NUMERIC))))AND(x'e27f'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(CAST('!a%' AS NUMERIC))))AND(x'e27f')));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))AND(CAST('!a%' AS NUMERIC))))AND(x'e27f'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(CAST('!a%' AS NUMERIC))))AND(x'e27f')));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c1) IS FALSE))) WHERE (TRIM(((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))) ORDER BY ((((vt0.c1) BETWEEN (vt1.c0) AND (0.18552094935915997)))<>(((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c1) IS FALSE))) ORDER BY ((((vt0.c1) BETWEEN (vt1.c0) AND (0.18552094935915997)))<>(((vt1.c0) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c1) IS FALSE))) WHERE (TRIM(((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))) ORDER BY ((((vt0.c1) BETWEEN (vt1.c0) AND (0.18552094935915997)))<>(((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c1) IS FALSE))) ORDER BY ((((vt0.c1) BETWEEN (vt1.c0) AND (0.18552094935915997)))<>(((vt1.c0) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c1) IS FALSE))) WHERE (TRIM(((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))) ORDER BY ((((vt0.c1) BETWEEN (vt1.c0) AND (0.18552094935915997)))<>(((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0)<<(vt0.c0))))<=((CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<<(vt0.c0))))<=((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0)<<(vt0.c0))))<=((CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<<(vt0.c0))))<=((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0)<<(vt0.c0))))<=((CAST(vt0.c0 AS BLOB)))));
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)/(vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)/(vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)/(vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)/(vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)/(vt0.c1)))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)|(vt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN NULL END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)|(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN NULL END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)|(vt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN NULL END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)|(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN NULL END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)|(vt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN NULL END DESC  NULLS FIRST;
SELECT * FROM vt1 INNER JOIN vt0 ON ((((((((CASE WHEN vt1.c0 THEN -1461138653 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)AND((vt0.c1 IN ()))))OR(((vt0.c1)>>(vt1.c0)))))OR(INSTR(vt0.c1, vt0.c0))))OR(0x1bba5c7)) WHERE (((((vt0.c0) ISNULL))+(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (((vt0.c0)*(vt0.c1))) AND (((vt1.c0)GLOB(vt1.c0)))), ((vt0.c0 COLLATE RTRIM)&(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)), vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))+(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((((CASE WHEN vt1.c0 THEN -1461138653 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)AND((vt0.c1 IN ()))))OR(((vt0.c1)>>(vt1.c0)))))OR(INSTR(vt0.c1, vt0.c0))))OR(0x1bba5c7)) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (((vt0.c0)*(vt0.c1))) AND (((vt1.c0)GLOB(vt1.c0)))), ((vt0.c0 COLLATE RTRIM)&(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)), vt0.c0);
SELECT * FROM vt1 INNER JOIN vt0 ON ((((((((CASE WHEN vt1.c0 THEN -1461138653 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)AND((vt0.c1 IN ()))))OR(((vt0.c1)>>(vt1.c0)))))OR(INSTR(vt0.c1, vt0.c0))))OR(0x1bba5c7)) WHERE (((((vt0.c0) ISNULL))+(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (((vt0.c0)*(vt0.c1))) AND (((vt1.c0)GLOB(vt1.c0)))), ((vt0.c0 COLLATE RTRIM)&(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)), vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))+(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((((CASE WHEN vt1.c0 THEN -1461138653 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)AND((vt0.c1 IN ()))))OR(((vt0.c1)>>(vt1.c0)))))OR(INSTR(vt0.c1, vt0.c0))))OR(0x1bba5c7)) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (((vt0.c0)*(vt0.c1))) AND (((vt1.c0)GLOB(vt1.c0)))), ((vt0.c0 COLLATE RTRIM)&(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)), vt0.c0);
SELECT * FROM vt1 INNER JOIN vt0 ON ((((((((CASE WHEN vt1.c0 THEN -1461138653 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)AND((vt0.c1 IN ()))))OR(((vt0.c1)>>(vt1.c0)))))OR(INSTR(vt0.c1, vt0.c0))))OR(0x1bba5c7)) WHERE (((((vt0.c0) ISNULL))+(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (((vt0.c0)*(vt0.c1))) AND (((vt1.c0)GLOB(vt1.c0)))), ((vt0.c0 COLLATE RTRIM)&(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)), vt0.c0;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((('0.3831591306851383')%(0.23370974470895078)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('0.3831591306851383')%(0.23370974470895078)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((('0.3831591306851383')%(0.23370974470895078)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('0.3831591306851383')%(0.23370974470895078)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((('0.3831591306851383')%(0.23370974470895078)) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)LIKE(vt0.c1)))>('S?')) WHERE (((vt1.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)LIKE(vt0.c1)))>('S?')));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)LIKE(vt0.c1)))>('S?')) WHERE (((vt1.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)LIKE(vt0.c1)))>('S?')));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((vt0.c0)LIKE(vt0.c1)))>('S?')) WHERE (((vt1.c0) NOTNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c0)==(vt1.c0))  WHEN (vt0.c0 IN ()) THEN ((-1461138653) BETWEEN (x'ab48') AND (vt0.c1)) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)=(vt1.c0))  WHEN (vt0.c0 IN ()) THEN ((-1461138653) BETWEEN (x'ab48') AND (vt0.c1)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c0)==(vt1.c0))  WHEN (vt0.c0 IN ()) THEN ((-1461138653) BETWEEN (x'ab48') AND (vt0.c1)) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)=(vt1.c0))  WHEN (vt0.c0 IN ()) THEN ((-1461138653) BETWEEN (x'ab48') AND (vt0.c1)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c0)==(vt1.c0))  WHEN (vt0.c0 IN ()) THEN ((-1461138653) BETWEEN (x'ab48') AND (vt0.c1)) ELSE (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM vt0 WHERE (((((((x'') NOT BETWEEN (vt0.c0) AND (NULL)))OR(((vt0.c1) ISNULL))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'') NOT BETWEEN (vt0.c0) AND (NULL)))OR(((vt0.c1) ISNULL))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((x'') NOT BETWEEN (vt0.c0) AND (NULL)))OR(((vt0.c1) ISNULL))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'') NOT BETWEEN (vt0.c0) AND (NULL)))OR(((vt0.c1) ISNULL))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((x'') NOT BETWEEN (vt0.c0) AND (NULL)))OR(((vt0.c1) ISNULL))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN TYPEOF(vt1.c0) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE -770298273 END) ORDER BY vt1.c0 ASC, ((0.35275073290161396)>((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(vt1.c0) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE -770298273 END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, ((0.35275073290161396)>((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN TYPEOF(vt1.c0) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE -770298273 END) ORDER BY vt1.c0 ASC, ((0.35275073290161396)>((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(vt1.c0) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE -770298273 END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, ((0.35275073290161396)>((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN TYPEOF(vt1.c0) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE -770298273 END) ORDER BY vt1.c0 ASC, ((0.35275073290161396)>((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0)) BETWEEN ((0.5228351975089323)) AND ((vt0.c1))))+((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((0.5228351975089323)) AND ((vt0.c1))))+((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0)) BETWEEN ((0.5228351975089323)) AND ((vt0.c1))))+((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((0.5228351975089323)) AND ((vt0.c1))))+((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0)) BETWEEN ((0.5228351975089323)) AND ((vt0.c1))))+((vt1.c0 IN ()))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (((0.9786502897925823 IN ()) IN ())) ORDER BY (+ (json_extract(vt0.c1, vt1.c0, vt0.c0, vt1.c0, vt0.c1, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.9786502897925823 IN ()) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c0 ORDER BY (+ (json_extract(vt0.c1, vt1.c0, vt0.c0, vt1.c0, vt0.c1, vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (((0.9786502897925823 IN ()) IN ())) ORDER BY (+ (json_extract(vt0.c1, vt1.c0, vt0.c0, vt1.c0, vt0.c1, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.9786502897925823 IN ()) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c0 ORDER BY (+ (json_extract(vt0.c1, vt1.c0, vt0.c0, vt1.c0, vt0.c1, vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (((0.9786502897925823 IN ()) IN ())) ORDER BY (+ (json_extract(vt0.c1, vt1.c0, vt0.c0, vt1.c0, vt0.c1, vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) AS INTEGER)) ORDER BY '6208867569534935212' DESC  NULLS FIRST, ((((vt0.c0) IS FALSE))+('1778673651' COLLATE RTRIM)) DESC  NULLS FIRST, x'' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY '6208867569534935212' DESC  NULLS FIRST, ((((vt0.c0) IS FALSE))+('1778673651' COLLATE RTRIM)) DESC  NULLS FIRST, x'' COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) AS INTEGER)) ORDER BY '6208867569534935212' DESC  NULLS FIRST, ((((vt0.c0) IS FALSE))+('1778673651' COLLATE RTRIM)) DESC  NULLS FIRST, x'' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY '6208867569534935212' DESC  NULLS FIRST, ((((vt0.c0) IS FALSE))+('1778673651' COLLATE RTRIM)) DESC  NULLS FIRST, x'' COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) AS INTEGER)) ORDER BY '6208867569534935212' DESC  NULLS FIRST, ((((vt0.c0) IS FALSE))+('1778673651' COLLATE RTRIM)) DESC  NULLS FIRST, x'' COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)IS(vt1.c0))))) ORDER BY (((((vt1.c0))<>((vt1.c0)))) BETWEEN (UPPER(DISTINCT vt1.c0)) AND ((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<>((vt1.c0)))) BETWEEN (UPPER(DISTINCT vt1.c0)) AND ((~ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)IS(vt1.c0))))) ORDER BY (((((vt1.c0))<>((vt1.c0)))) BETWEEN (UPPER(DISTINCT vt1.c0)) AND ((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<>((vt1.c0)))) BETWEEN (UPPER(DISTINCT vt1.c0)) AND ((~ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c0)IS(vt1.c0))))) ORDER BY (((((vt1.c0))<>((vt1.c0)))) BETWEEN (UPPER(DISTINCT vt1.c0)) AND ((~ (vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'29b7') IS FALSE)) ORDER BY ((CASE WHEN 0.34799137477578124 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)IS(((vt1.c0) NOT BETWEEN ('1250638255') AND (vt1.c0)))), (+ (vt1.c0)) ASC  NULLS LAST, ((0.6761663968333906)>>(0.2655476894054727 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'29b7') IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN 0.34799137477578124 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)IS(((vt1.c0) NOT BETWEEN ('1250638255') AND (vt1.c0)))), (+ (vt1.c0)) ASC  NULLS LAST, ((0.6761663968333906)>>(0.2655476894054727 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'29b7') IS FALSE)) ORDER BY ((CASE WHEN 0.34799137477578124 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)IS(((vt1.c0) NOT BETWEEN ('1250638255') AND (vt1.c0)))), (+ (vt1.c0)) ASC  NULLS LAST, ((0.6761663968333906)>>(0.2655476894054727 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'29b7') IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN 0.34799137477578124 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)IS(((vt1.c0) NOT BETWEEN ('1250638255') AND (vt1.c0)))), (+ (vt1.c0)) ASC  NULLS LAST, ((0.6761663968333906)>>(0.2655476894054727 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'29b7') IS FALSE)) ORDER BY ((CASE WHEN 0.34799137477578124 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)IS(((vt1.c0) NOT BETWEEN ('1250638255') AND (vt1.c0)))), (+ (vt1.c0)) ASC  NULLS LAST, ((0.6761663968333906)>>(0.2655476894054727 COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY STRFTIME(((vt0.c0)==(0.16273121239802846)), ((vt0.c1)==(vt0.c1)), 0.9729842944380654, ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), (+ (vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY STRFTIME(((vt0.c0)=(0.16273121239802846)), ((vt0.c1)==(vt0.c1)), 0.9729842944380654, ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), (+ (vt0.c0))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY STRFTIME(((vt0.c0)==(0.16273121239802846)), ((vt0.c1)==(vt0.c1)), 0.9729842944380654, ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), (+ (vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY STRFTIME(((vt0.c0)=(0.16273121239802846)), ((vt0.c1)==(vt0.c1)), 0.9729842944380654, ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), (+ (vt0.c0))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY STRFTIME(((vt0.c0)==(0.16273121239802846)), ((vt0.c1)==(vt0.c1)), 0.9729842944380654, ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), (+ (vt0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN 1330397745 THEN ABS(DISTINCT vt0.c1) WHEN (('6208867569534935212') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c1)-(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END END) ORDER BY ((CAST(vt0.c1 AS REAL)) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0)<=(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN 1330397745 THEN ABS(DISTINCT vt0.c1) WHEN (('6208867569534935212') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c1)-(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS REAL)) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0)<=(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN 1330397745 THEN ABS(DISTINCT vt0.c1) WHEN (('6208867569534935212') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c1)-(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END END) ORDER BY ((CAST(vt0.c1 AS REAL)) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0)<=(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN 1330397745 THEN ABS(DISTINCT vt0.c1) WHEN (('6208867569534935212') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c1)-(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS REAL)) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0)<=(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN 1330397745 THEN ABS(DISTINCT vt0.c1) WHEN (('6208867569534935212') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c1)-(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END END) ORDER BY ((CAST(vt0.c1 AS REAL)) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0)<=(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0) NOTNULL))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)OR(vt1.c0)))))AND(vt1.c0)))OR(((vt1.c0)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) NOTNULL))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)OR(vt1.c0)))))AND(vt1.c0)))OR(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0) NOTNULL))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)OR(vt1.c0)))))AND(vt1.c0)))OR(((vt1.c0)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) NOTNULL))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)OR(vt1.c0)))))AND(vt1.c0)))OR(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0) NOTNULL))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)OR(vt1.c0)))))AND(vt1.c0)))OR(((vt1.c0)|(vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (TRIM(DISTINCT (~ (vt0.c0)))) ORDER BY vt0.c1 DESC, ((((vt1.c0)|(vt1.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1 DESC, ((((vt1.c0)|(vt1.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (TRIM(DISTINCT (~ (vt0.c0)))) ORDER BY vt0.c1 DESC, ((((vt1.c0)|(vt1.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1 DESC, ((((vt1.c0)|(vt1.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (TRIM(DISTINCT (~ (vt0.c0)))) ORDER BY vt0.c1 DESC, ((((vt1.c0)|(vt1.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ (vt0.c0))) ORDER BY ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))<=((((vt1.c0, vt0.c0, vt1.c0))=((vt0.c1, vt0.c0, vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))<=((((vt1.c0, vt0.c0, vt1.c0))=((vt0.c1, vt0.c0, vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ (vt0.c0))) ORDER BY ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))<=((((vt1.c0, vt0.c0, vt1.c0))=((vt0.c1, vt0.c0, vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))<=((((vt1.c0, vt0.c0, vt1.c0))=((vt0.c1, vt0.c0, vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ (vt0.c0))) ORDER BY ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))<=((((vt1.c0, vt0.c0, vt1.c0))=((vt0.c1, vt0.c0, vt1.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ('') ORDER BY (((((vt1.c0) IS FALSE), (~ (vt1.c0)), ((vt1.c0)=(vt1.c0)), (vt1.c0 IN (vt1.c0)), vt1.c0 COLLATE BINARY))>=((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (((vt1.c0))>((vt1.c0))), CAST(vt1.c0 AS REAL), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) IS FALSE), (~ (vt1.c0)), ((vt1.c0)=(vt1.c0)), (vt1.c0 IN (vt1.c0)), vt1.c0 COLLATE BINARY))>=((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (((vt1.c0))>((vt1.c0))), CAST(vt1.c0 AS REAL), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('') ORDER BY (((((vt1.c0) IS FALSE), (~ (vt1.c0)), ((vt1.c0)=(vt1.c0)), (vt1.c0 IN (vt1.c0)), vt1.c0 COLLATE BINARY))>=((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (((vt1.c0))>((vt1.c0))), CAST(vt1.c0 AS REAL), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) IS FALSE), (~ (vt1.c0)), ((vt1.c0)=(vt1.c0)), (vt1.c0 IN (vt1.c0)), vt1.c0 COLLATE BINARY))>=((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (((vt1.c0))>((vt1.c0))), CAST(vt1.c0 AS REAL), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('') ORDER BY (((((vt1.c0) IS FALSE), (~ (vt1.c0)), ((vt1.c0)=(vt1.c0)), (vt1.c0 IN (vt1.c0)), vt1.c0 COLLATE BINARY))>=((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (((vt1.c0))>((vt1.c0))), CAST(vt1.c0 AS REAL), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ()))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (ROUND(((vt1.c0)>=(6.7428469E8)), ((vt0.c1) IS TRUE))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((ROUND(((vt1.c0)>=(6.7428469E8)), ((vt0.c1) IS TRUE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (ROUND(((vt1.c0)>=(6.7428469E8)), ((vt0.c1) IS TRUE))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((ROUND(((vt1.c0)>=(6.7428469E8)), ((vt0.c1) IS TRUE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (ROUND(((vt1.c0)>=(6.7428469E8)), ((vt0.c1) IS TRUE))) ORDER BY vt0.c0 DESC;
SELECT COUNT(*) FROM vt1 WHERE (ABS((0.9180658875650421 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((ABS((0.9180658875650421 IN ()))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (ABS((0.9180658875650421 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((ABS((0.9180658875650421 IN ()))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (ABS((0.9180658875650421 IN ())));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ()));
SELECT ALL * FROM vt0, vt1 WHERE (PRINTF(((vt1.c0)IS(vt0.c1)))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((PRINTF(((vt1.c0)IS(vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) NOT NULL))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (PRINTF(((vt1.c0)IS(vt0.c1)))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((PRINTF(((vt1.c0)IS(vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) NOT NULL))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (PRINTF(((vt1.c0)IS(vt0.c1)))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) NOT NULL))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c1))>((vt0.c0, vt0.c0, vt1.c0)))))) ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))) DESC, NULLIF(DISTINCT ABS(DISTINCT vt1.c0), ((vt1.c0) NOTNULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c1, vt0.c1, vt0.c1))>((vt0.c0, vt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))) DESC, NULLIF(DISTINCT ABS(DISTINCT vt1.c0), ((vt1.c0) NOTNULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c1))>((vt0.c0, vt0.c0, vt1.c0)))))) ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))) DESC, NULLIF(DISTINCT ABS(DISTINCT vt1.c0), ((vt1.c0) NOTNULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c1, vt0.c1, vt0.c1))>((vt0.c0, vt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))) DESC, NULLIF(DISTINCT ABS(DISTINCT vt1.c0), ((vt1.c0) NOTNULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c1))>((vt0.c0, vt0.c0, vt1.c0)))))) ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))) DESC, NULLIF(DISTINCT ABS(DISTINCT vt1.c0), ((vt1.c0) NOTNULL)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))))) ORDER BY TYPEOF(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))))) ORDER BY TYPEOF(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))))) ORDER BY TYPEOF(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN NULL END)LIKE(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN NULL END)LIKE(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN NULL END)LIKE(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN NULL END)LIKE(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN NULL END)LIKE(CAST(vt1.c0 AS NUMERIC))));
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))<((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS REAL)))<((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))<((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS REAL)))<((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL)))<((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS BLOB))||(vt0.c0 COLLATE NOCASE))) ORDER BY ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))AND(CAST(vt1.c0 AS REAL))))AND(((vt0.c0)<(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS BLOB))||(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))AND(CAST(vt1.c0 AS REAL))))AND(((vt0.c0)<(vt1.c0))))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS BLOB))||(vt0.c0 COLLATE NOCASE))) ORDER BY ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))AND(CAST(vt1.c0 AS REAL))))AND(((vt0.c0)<(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS BLOB))||(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))AND(CAST(vt1.c0 AS REAL))))AND(((vt0.c0)<(vt1.c0))))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS BLOB))||(vt0.c0 COLLATE NOCASE))) ORDER BY ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))AND(CAST(vt1.c0 AS REAL))))AND(((vt0.c0)<(vt1.c0))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (LIKELIHOOD(DISTINCT TRIM(vt1.c0, vt1.c0), 0.015412202581081336));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT TRIM(vt1.c0, vt1.c0), 0.015412202581081336)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (LIKELIHOOD(DISTINCT TRIM(vt1.c0, vt1.c0), 0.015412202581081336));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT TRIM(vt1.c0, vt1.c0), 0.015412202581081336)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (LIKELIHOOD(DISTINCT TRIM(vt1.c0, vt1.c0), 0.015412202581081336));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS TEXT));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB))));
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY ((json_type(vt0.c1)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((json_type(vt0.c1)) NOT NULL)  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY ((json_type(vt0.c1)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((json_type(vt0.c1)) NOT NULL)  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY ((json_type(vt0.c1)) NOT NULL)  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c1 COLLATE NOCASE) IS TRUE)) ORDER BY (((highlight(vt0.c0, vt1.c0, vt0.c1, vt0.c0)))<(((vt0.c1 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((highlight(vt0.c0, vt1.c0, vt0.c1, vt0.c0)))<(((vt0.c1 IN ()))))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((vt0.c1 COLLATE NOCASE) IS TRUE)) ORDER BY (((highlight(vt0.c0, vt1.c0, vt0.c1, vt0.c0)))<(((vt0.c1 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((highlight(vt0.c0, vt1.c0, vt0.c1, vt0.c0)))<(((vt0.c1 IN ()))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))) IN ())) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0) AND ((((vt1.c0))<>((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0) AND ((((vt1.c0))<>((vt1.c0))))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))) IN ())) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0) AND ((((vt1.c0))<>((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0) AND ((((vt1.c0))<>((vt1.c0))))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))) IN ())) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0) AND ((((vt1.c0))<>((vt1.c0))))) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 IN ()))|((0.5478824390966697 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))|((0.5478824390966697 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 IN ()))|((0.5478824390966697 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))|((0.5478824390966697 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 IN ()))|((0.5478824390966697 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0)))), vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0)))), vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0)))), vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0)))), vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0)))), vt1.c0  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)*(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)*(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)*(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)*(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)*(((vt0.c0)/(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((0.0) IS FALSE)))<(((- (vt0.c0)))))) ORDER BY CASE (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND ((vt0.c0, vt1.c0, x'')))  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN (vt0.c1)) ELSE 6.208867569534935E18 END  NULLS LAST, ((vt0.c0) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (((vt0.c1)OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.0) IS FALSE)))<(((- (vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND ((vt0.c0, vt1.c0, x'')))  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN (vt0.c1)) ELSE 6.208867569534935E18 END  NULLS LAST, ((vt0.c0) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (((vt0.c1)OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((0.0) IS FALSE)))<(((- (vt0.c0)))))) ORDER BY CASE (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND ((vt0.c0, vt1.c0, x'')))  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN (vt0.c1)) ELSE 6.208867569534935E18 END  NULLS LAST, ((vt0.c0) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (((vt0.c1)OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.0) IS FALSE)))<(((- (vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND ((vt0.c0, vt1.c0, x'')))  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN (vt0.c1)) ELSE 6.208867569534935E18 END  NULLS LAST, ((vt0.c0) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (((vt0.c1)OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((0.0) IS FALSE)))<(((- (vt0.c0)))))) ORDER BY CASE (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND ((vt0.c0, vt1.c0, x'')))  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN (vt0.c1)) ELSE 6.208867569534935E18 END  NULLS LAST, ((vt0.c0) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (((vt0.c1)OR(vt1.c0))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0, 0.34865233822129904, vt0.c1)) BETWEEN (((~ (0.3936346977526911)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND ((((vt1.c0)=(vt0.c1)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), (vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, 0.34865233822129904, vt0.c1)) BETWEEN (((~ (0.3936346977526911)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND ((((vt1.c0)==(vt0.c1)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), (vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0, 0.34865233822129904, vt0.c1)) BETWEEN (((~ (0.3936346977526911)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND ((((vt1.c0)=(vt0.c1)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), (vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, 0.34865233822129904, vt0.c1)) BETWEEN (((~ (0.3936346977526911)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND ((((vt1.c0)==(vt0.c1)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), (vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0, 0.34865233822129904, vt0.c1)) BETWEEN (((~ (0.3936346977526911)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND ((((vt1.c0)=(vt0.c1)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), (vt1.c0 IN ())))));
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)IS NOT(x''))) NOT NULL)) ORDER BY LIKE(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)), (vt0.c0 IN ())) DESC  NULLS FIRST, (((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())  NULLS LAST, (NOT (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(x''))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY LIKE(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)), (vt0.c0 IN ())) DESC  NULLS FIRST, (((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())  NULLS LAST, (NOT (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)IS NOT(x''))) NOT NULL)) ORDER BY LIKE(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)), (vt0.c0 IN ())) DESC  NULLS FIRST, (((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())  NULLS LAST, (NOT (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(x''))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY LIKE(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)), (vt0.c0 IN ())) DESC  NULLS FIRST, (((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())  NULLS LAST, (NOT (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)IS NOT(x''))) NOT NULL)) ORDER BY LIKE(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)), (vt0.c0 IN ())) DESC  NULLS FIRST, (((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())  NULLS LAST, (NOT (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 IN (vt0.c0)))<=((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c0)))<=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 IN (vt0.c0)))<=((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c0)))<=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 IN (vt0.c0)))<=((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)OR(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(x'')))OR(vt0.c1)))))OR(TRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE BINARY)OR(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(x'')))OR(vt0.c1)))))OR(TRIM(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)OR(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(x'')))OR(vt0.c1)))))OR(TRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE BINARY)OR(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(x'')))OR(vt0.c1)))))OR(TRIM(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)OR(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(x'')))OR(vt0.c1)))))OR(TRIM(vt0.c1))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN '' THEN ((vt0.c1) ISNULL) END) ORDER BY COALESCE(((vt0.c0)||(vt1.c0)), (vt1.c0 IN ()), (- (vt1.c0)), (~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN ((vt0.c1) ISNULL) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY COALESCE(((vt0.c0)||(vt1.c0)), (vt1.c0 IN ()), (- (vt1.c0)), (~ (vt0.c1))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN '' THEN ((vt0.c1) ISNULL) END) ORDER BY COALESCE(((vt0.c0)||(vt1.c0)), (vt1.c0 IN ()), (- (vt1.c0)), (~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN ((vt0.c1) ISNULL) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY COALESCE(((vt0.c0)||(vt1.c0)), (vt1.c0 IN ()), (- (vt1.c0)), (~ (vt0.c1))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN '' THEN ((vt0.c1) ISNULL) END) ORDER BY COALESCE(((vt0.c0)||(vt1.c0)), (vt1.c0 IN ()), (- (vt1.c0)), (~ (vt0.c1)));
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c0)%(vt1.c0))))) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c0)%(vt1.c0))))) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c0)%(vt1.c0))))) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.2720908672981849)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)LIKE(((vt0.c0)||(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.2720908672981849)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)LIKE(((vt0.c0)||(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.2720908672981849)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)LIKE(((vt0.c0)||(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.2720908672981849)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)LIKE(((vt0.c0)||(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.2720908672981849)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)LIKE(((vt0.c0)||(vt0.c1))));
SELECT ALL * FROM vt1, vt0 WHERE (TYPEOF(DISTINCT vt1.c0 COLLATE RTRIM)) ORDER BY '-1002686709';
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, vt0 ORDER BY '-1002686709');
SELECT ALL * FROM vt1, vt0 WHERE (TYPEOF(DISTINCT vt1.c0 COLLATE RTRIM)) ORDER BY '-1002686709';
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, vt0 ORDER BY '-1002686709');
SELECT ALL * FROM vt1, vt0 WHERE (TYPEOF(DISTINCT vt1.c0 COLLATE RTRIM)) ORDER BY '-1002686709';
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) IS FALSE) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) IS FALSE) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) IS FALSE) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) IS FALSE) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) IS FALSE) ELSE (vt0.c0 IN ()) END);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)|((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND((~ (vt0.c0)))))OR((((vt0.c1))>((vt0.c1))))) DESC, vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)|((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND((~ (vt0.c0)))))OR((((vt0.c1))>((vt0.c1))))) DESC, vt0.c1);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)|((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND((~ (vt0.c0)))))OR((((vt0.c1))>((vt0.c1))))) DESC, vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)|((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND((~ (vt0.c0)))))OR((((vt0.c1))>((vt0.c1))))) DESC, vt0.c1);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)|((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND((~ (vt0.c0)))))OR((((vt0.c1))>((vt0.c1))))) DESC, vt0.c1;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN ((- (vt0.c1))) AND (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))))) ORDER BY CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN ((- (vt0.c1))) AND (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN ((- (vt0.c1))) AND (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))))) ORDER BY CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN ((- (vt0.c1))) AND (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN ((- (vt0.c1))) AND (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))))) ORDER BY CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((((- (vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c1)))AND(((vt0.c1) ISNULL))))OR((vt1.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((- (vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c1)))AND(((vt0.c1) ISNULL))))OR((vt1.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((((- (vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c1)))AND(((vt0.c1) ISNULL))))OR((vt1.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((- (vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c1)))AND(((vt0.c1) ISNULL))))OR((vt1.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((((- (vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c1)))AND(((vt0.c1) ISNULL))))OR((vt1.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(json(0X779a0666), vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((IFNULL(json(0x779a0666), vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(json(0X779a0666), vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((IFNULL(json(0x779a0666), vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(json(0X779a0666), vt1.c0 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) IN ((((vt0.c1))>((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) IN ((((vt0.c1))>((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) IN ((((vt0.c1))>((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) IN ((((vt0.c1))>((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) IN ((((vt0.c1))>((vt0.c1))))));
SELECT * FROM vt1 WHERE (NULLIF(UPPER(vt1.c0), (vt1.c0 IN ('4-jpqz(')))) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL) ASC  NULLS FIRST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0)))) ASC  NULLS FIRST, vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(UPPER(vt1.c0), (vt1.c0 IN ('4-jpqz(')))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL) ASC  NULLS FIRST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0)))) ASC  NULLS FIRST, vt1.c0 DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (NULLIF(UPPER(vt1.c0), (vt1.c0 IN ('4-jpqz(')))) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL) ASC  NULLS FIRST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0)))) ASC  NULLS FIRST, vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(UPPER(vt1.c0), (vt1.c0 IN ('4-jpqz(')))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL) ASC  NULLS FIRST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0)))) ASC  NULLS FIRST, vt1.c0 DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (NULLIF(UPPER(vt1.c0), (vt1.c0 IN ('4-jpqz(')))) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL) ASC  NULLS FIRST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0)))) ASC  NULLS FIRST, vt1.c0 DESC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS TEXT))OR((((vt0.c0))>((vt0.c1))))))OR(TRIM(vt0.c0)))) ORDER BY ((((vt1.c0)%(vt0.c0)))<<(CAST('2024785025' AS BLOB)))  NULLS FIRST, CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(x'20dc')) ELSE ((NULL)&(vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS TEXT))OR((((vt0.c0))>((vt0.c1))))))OR(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)%(vt0.c0)))<<(CAST('2024785025' AS BLOB)))  NULLS FIRST, CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(x'20dc')) ELSE ((NULL)&(vt1.c0)) END  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS TEXT))OR((((vt0.c0))>((vt0.c1))))))OR(TRIM(vt0.c0)))) ORDER BY ((((vt1.c0)%(vt0.c0)))<<(CAST('2024785025' AS BLOB)))  NULLS FIRST, CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(x'20dc')) ELSE ((NULL)&(vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS TEXT))OR((((vt0.c0))>((vt0.c1))))))OR(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)%(vt0.c0)))<<(CAST('2024785025' AS BLOB)))  NULLS FIRST, CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(x'20dc')) ELSE ((NULL)&(vt1.c0)) END  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS TEXT))OR((((vt0.c0))>((vt0.c1))))))OR(TRIM(vt0.c0)))) ORDER BY ((((vt1.c0)%(vt0.c0)))<<(CAST('2024785025' AS BLOB)))  NULLS FIRST, CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(x'20dc')) ELSE ((NULL)&(vt1.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('-1068841384') ORDER BY (~ (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1068841384') IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('-1068841384') ORDER BY (~ (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1068841384') IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('-1068841384') ORDER BY (~ (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (x'' COLLATE NOCASE) ORDER BY CASE WHEN CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END THEN ((vt0.c0)%(vt0.c0)) WHEN 0.7939392412241684 THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END THEN ((vt0.c0)%(vt0.c0)) WHEN 0.7939392412241684 THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) END);
SELECT ALL * FROM vt0, vt1 WHERE (x'' COLLATE NOCASE) ORDER BY CASE WHEN CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END THEN ((vt0.c0)%(vt0.c0)) WHEN 0.7939392412241684 THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END THEN ((vt0.c0)%(vt0.c0)) WHEN 0.7939392412241684 THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) END);
SELECT ALL * FROM vt0, vt1 WHERE (x'' COLLATE NOCASE) ORDER BY CASE WHEN CASE vt1.c0  WHEN x'' THEN vt1.c0 ELSE vt1.c0 END THEN ((vt0.c0)%(vt0.c0)) WHEN 0.7939392412241684 THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) END;
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt1.c0)OR(vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((('1330397745' IN (vt0.c1)), json_insert(vt1.c0, vt1.c0, vt0.c0), ((vt0.c1) BETWEEN (vt1.c0) AND (0.6564227418838148)))) AND ((NULL, vt1.c0, vt0.c0 COLLATE NOCASE)))) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT NULL) DESC, ((x'ba26')>>(((vt0.c1) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((('1330397745' IN (vt0.c1)), json_insert(vt1.c0, vt1.c0, vt0.c0), ((vt0.c1) BETWEEN (vt1.c0) AND (0.6564227418838148)))) AND ((NULL, vt1.c0, vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT NULL) DESC, ((x'ba26')>>(((vt0.c1) ISNULL))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((('1330397745' IN (vt0.c1)), json_insert(vt1.c0, vt1.c0, vt0.c0), ((vt0.c1) BETWEEN (vt1.c0) AND (0.6564227418838148)))) AND ((NULL, vt1.c0, vt0.c0 COLLATE NOCASE)))) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT NULL) DESC, ((x'ba26')>>(((vt0.c1) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((('1330397745' IN (vt0.c1)), json_insert(vt1.c0, vt1.c0, vt0.c0), ((vt0.c1) BETWEEN (vt1.c0) AND (0.6564227418838148)))) AND ((NULL, vt1.c0, vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT NULL) DESC, ((x'ba26')>>(((vt0.c1) ISNULL))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((('1330397745' IN (vt0.c1)), json_insert(vt1.c0, vt1.c0, vt0.c0), ((vt0.c1) BETWEEN (vt1.c0) AND (0.6564227418838148)))) AND ((NULL, vt1.c0, vt0.c0 COLLATE NOCASE)))) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT NULL) DESC, ((x'ba26')>>(((vt0.c1) ISNULL))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0)<>(vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c1) IS TRUE))) WHERE (((((('0.7939392412241684'))<=((vt0.c0)))) IS FALSE)) ORDER BY (((vt0.c1)GLOB(vt0.c0)) IN (0xffffffffacf1103c));
SELECT SUM(count) FROM (SELECT ALL ((((((('0.7939392412241684'))<=((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0)!=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c1) IS TRUE))) ORDER BY (((vt0.c1)GLOB(vt0.c0)) IN (0xffffffffacf1103c)));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0)<>(vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c1) IS TRUE))) WHERE (((((('0.7939392412241684'))<=((vt0.c0)))) IS FALSE)) ORDER BY (((vt0.c1)GLOB(vt0.c0)) IN (0xffffffffacf1103c));
SELECT SUM(count) FROM (SELECT ALL ((((((('0.7939392412241684'))<=((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0)!=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c1) IS TRUE))) ORDER BY (((vt0.c1)GLOB(vt0.c0)) IN (0xffffffffacf1103c)));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0)<>(vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c1) IS TRUE))) WHERE (((((('0.7939392412241684'))<=((vt0.c0)))) IS FALSE)) ORDER BY (((vt0.c1)GLOB(vt0.c0)) IN (0xffffffffacf1103c));
SELECT ALL * FROM vt1 WHERE (((vt1.c0)<>((vt1.c0 IN ())))) ORDER BY (((((vt1.c0 IN ()))OR(((vt1.c0) IS TRUE))))OR(((('N74DGT䈱A'))>((vt1.c0))))) ASC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)!=((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0 IN ()))OR(((vt1.c0) IS TRUE))))OR(((('N74DGT䈱A'))>((vt1.c0))))) ASC, vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)<>((vt1.c0 IN ())))) ORDER BY (((((vt1.c0 IN ()))OR(((vt1.c0) IS TRUE))))OR(((('N74DGT䈱A'))>((vt1.c0))))) ASC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)!=((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0 IN ()))OR(((vt1.c0) IS TRUE))))OR(((('N74DGT䈱A'))>((vt1.c0))))) ASC, vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)<>((vt1.c0 IN ())))) ORDER BY (((((vt1.c0 IN ()))OR(((vt1.c0) IS TRUE))))OR(((('N74DGT䈱A'))>((vt1.c0))))) ASC, vt1.c0  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) NOTNULL)) ORDER BY '\rM'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY '\rM'  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) NOTNULL)) ORDER BY '\rM'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY '\rM'  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) NOTNULL)) ORDER BY '\rM'  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (TRIM(DISTINCT (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (TRIM(DISTINCT (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (TRIM(DISTINCT (vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(((vt1.c0)>(NULL)))))AND(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))) NOT NULL) ASC  NULLS FIRST, ((((((vt1.c0)OR(vt0.c1)))AND('703016652'))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(((vt1.c0)>(NULL)))))AND(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))) NOT NULL) ASC  NULLS FIRST, ((((((vt1.c0)OR(vt0.c1)))AND('703016652'))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(((vt1.c0)>(NULL)))))AND(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))) NOT NULL) ASC  NULLS FIRST, ((((((vt1.c0)OR(vt0.c1)))AND('703016652'))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(((vt1.c0)>(NULL)))))AND(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))) NOT NULL) ASC  NULLS FIRST, ((((((vt1.c0)OR(vt0.c1)))AND('703016652'))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c0)))AND(((vt1.c0)>(NULL)))))AND(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))) NOT NULL) ASC  NULLS FIRST, ((((((vt1.c0)OR(vt0.c1)))AND('703016652'))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('?e_I(am' IN ())) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) NOT BETWEEN ('-n') AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((('?e_I(am' IN ())) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) NOT BETWEEN ('-n') AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('?e_I(am' IN ())) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) NOT BETWEEN ('-n') AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((('?e_I(am' IN ())) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) NOT BETWEEN ('-n') AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('?e_I(am' IN ())) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) NOT BETWEEN ('-n') AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (COALESCE(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (COALESCE(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (COALESCE(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS BLOB)) ISNULL);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB)) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS BLOB)) ISNULL);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB)) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS BLOB)) ISNULL);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0)*(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)*(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0)*(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)*(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0)*(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1)==((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)=((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1)==((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)=((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1)==((vt0.c1 IN ()))));
SELECT * FROM vt0, vt1 WHERE ((((~ (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((~ (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((~ (vt0.c0))) IS FALSE));
SELECT ALL * FROM vt0, vt1 WHERE (CASE (vt0.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN NULL THEN IFNULL(vt0.c0, vt0.c1) WHEN ((vt1.c0)<=(0.7815466085159807)) THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN NULL THEN IFNULL(vt0.c0, vt0.c1) WHEN ((vt1.c0)<=(0.7815466085159807)) THEN vt0.c1 END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE (vt0.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN NULL THEN IFNULL(vt0.c0, vt0.c1) WHEN ((vt1.c0)<=(0.7815466085159807)) THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN NULL THEN IFNULL(vt0.c0, vt0.c1) WHEN ((vt1.c0)<=(0.7815466085159807)) THEN vt0.c1 END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE (vt0.c0 IN ())  WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN NULL THEN IFNULL(vt0.c0, vt0.c1) WHEN ((vt1.c0)<=(0.7815466085159807)) THEN vt0.c1 END);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c1))<((x''))))!=(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) WHERE (((((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt1.c0)))))==((((vt0.c1)-('-1353526785'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt1.c0)))))==((((vt0.c1)-('-1353526785')))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c1))<((x''))))<>(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c1))<((x''))))!=(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) WHERE (((((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt1.c0)))))==((((vt0.c1)-('-1353526785'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt1.c0)))))==((((vt0.c1)-('-1353526785')))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c1))<((x''))))<>(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c1))<((x''))))!=(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) WHERE (((((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c1, vt1.c0)))))==((((vt0.c1)-('-1353526785'))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ORDER BY CASE WHEN x'' COLLATE BINARY THEN ((vt0.c1) NOTNULL) END DESC, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN x'' COLLATE BINARY THEN ((vt0.c1) NOTNULL) END DESC, vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ORDER BY CASE WHEN x'' COLLATE BINARY THEN ((vt0.c1) NOTNULL) END DESC, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN x'' COLLATE BINARY THEN ((vt0.c1) NOTNULL) END DESC, vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ORDER BY CASE WHEN x'' COLLATE BINARY THEN ((vt0.c1) NOTNULL) END DESC, vt0.c1  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1 COLLATE RTRIM, ((vt0.c0) NOTNULL), ((vt1.c0) NOTNULL), (vt1.c0 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))>=((((vt1.c0) NOT NULL), 1382934150, (((vt0.c0, vt0.c1, vt0.c1))<>((vt0.c1, vt1.c0, vt1.c0))), (((x'e2b22ed6', vt0.c0, vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, x'', vt1.c0, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, vt0.c0, vt0.c0, vt0.c1))), vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE RTRIM, ((vt0.c0) NOTNULL), ((vt1.c0) NOTNULL), (vt1.c0 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))>=((((vt1.c0) NOT NULL), 1382934150, (((vt0.c0, vt0.c1, vt0.c1))<>((vt0.c1, vt1.c0, vt1.c0))), (((x'e2b22ed6', vt0.c0, vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, x'', vt1.c0, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, vt0.c0, vt0.c0, vt0.c1))), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1 COLLATE RTRIM, ((vt0.c0) NOTNULL), ((vt1.c0) NOTNULL), (vt1.c0 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))>=((((vt1.c0) NOT NULL), 1382934150, (((vt0.c0, vt0.c1, vt0.c1))<>((vt0.c1, vt1.c0, vt1.c0))), (((x'e2b22ed6', vt0.c0, vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, x'', vt1.c0, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, vt0.c0, vt0.c0, vt0.c1))), vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE RTRIM, ((vt0.c0) NOTNULL), ((vt1.c0) NOTNULL), (vt1.c0 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))>=((((vt1.c0) NOT NULL), 1382934150, (((vt0.c0, vt0.c1, vt0.c1))<>((vt0.c1, vt1.c0, vt1.c0))), (((x'e2b22ed6', vt0.c0, vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, x'', vt1.c0, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, vt0.c0, vt0.c0, vt0.c1))), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1 COLLATE RTRIM, ((vt0.c0) NOTNULL), ((vt1.c0) NOTNULL), (vt1.c0 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))>=((((vt1.c0) NOT NULL), 1382934150, (((vt0.c0, vt0.c1, vt0.c1))<>((vt0.c1, vt1.c0, vt1.c0))), (((x'e2b22ed6', vt0.c0, vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, x'', vt1.c0, vt0.c0, vt0.c1)) AND ((x'', vt0.c1, vt0.c0, vt0.c0, vt0.c1))), vt0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)LIKE((vt0.c0 IN ()))) WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))) AND ('B'))) ORDER BY ((((((((((0.2720908672981849)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))) AND ('B'))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)LIKE((vt0.c0 IN ()))) ORDER BY ((((((((((0.2720908672981849)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)LIKE((vt0.c0 IN ()))) WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))) AND ('B'))) ORDER BY ((((((((((0.2720908672981849)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))) AND ('B'))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)LIKE((vt0.c0 IN ()))) ORDER BY ((((((((((0.2720908672981849)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)LIKE((vt0.c0 IN ()))) WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))) AND ('B'))) ORDER BY ((((((((((0.2720908672981849)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (~ (NULLIF(DISTINCT vt0.c1, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (NULLIF(DISTINCT vt0.c1, vt1.c0))));
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (~ (NULLIF(DISTINCT vt0.c1, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (NULLIF(DISTINCT vt0.c1, vt1.c0))));
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (~ (NULLIF(DISTINCT vt0.c1, vt1.c0)));
SELECT * FROM vt1 WHERE ((((0.9975943247551465, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS BLOB)))<>((UNLIKELY(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE '0' END, CAST(vt1.c0 AS NUMERIC))))) ORDER BY x'' ASC, (NOT ((((vt1.c0))<>((vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((0.9975943247551465, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS BLOB)))!=((UNLIKELY(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE '0' END, CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1 ORDER BY x'' ASC, (NOT ((((vt1.c0))!=((vt1.c0))))));
SELECT * FROM vt1 WHERE ((((0.9975943247551465, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS BLOB)))<>((UNLIKELY(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE '0' END, CAST(vt1.c0 AS NUMERIC))))) ORDER BY x'' ASC, (NOT ((((vt1.c0))<>((vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((0.9975943247551465, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS BLOB)))!=((UNLIKELY(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE '0' END, CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1 ORDER BY x'' ASC, (NOT ((((vt1.c0))!=((vt1.c0))))));
SELECT * FROM vt1 WHERE ((((0.9975943247551465, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS BLOB)))<>((UNLIKELY(DISTINCT vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE '0' END, CAST(vt1.c0 AS NUMERIC))))) ORDER BY x'' ASC, (NOT ((((vt1.c0))<>((vt1.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((CASE vt1.c0  WHEN vt0.c1 THEN '' END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<=(vt0.c1))))=(((((vt0.c0))>((vt0.c0))), ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0))) WHERE (((vt1.c0 COLLATE RTRIM)<(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)<(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((CASE vt1.c0  WHEN vt0.c1 THEN '' END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<=(vt0.c1))))=(((((vt0.c0))>((vt0.c0))), ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((CASE vt1.c0  WHEN vt0.c1 THEN '' END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<=(vt0.c1))))=(((((vt0.c0))>((vt0.c0))), ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0))) WHERE (((vt1.c0 COLLATE RTRIM)<(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)<(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((CASE vt1.c0  WHEN vt0.c1 THEN '' END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<=(vt0.c1))))=(((((vt0.c0))>((vt0.c0))), ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((CASE vt1.c0  WHEN vt0.c1 THEN '' END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<=(vt0.c1))))=(((((vt0.c0))>((vt0.c0))), ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0))) WHERE (((vt1.c0 COLLATE RTRIM)<(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1) ISNULL) WHERE ((- (vt1.c0))) ORDER BY (- (((vt0.c0)AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1) ISNULL) ORDER BY (- (((vt0.c0)AND(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1) ISNULL) WHERE ((- (vt1.c0))) ORDER BY (- (((vt0.c0)AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1) ISNULL) ORDER BY (- (((vt0.c0)AND(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1) ISNULL) WHERE ((- (vt1.c0))) ORDER BY (- (((vt0.c0)AND(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0) IS TRUE));
SELECT * FROM vt0 WHERE ((((((vt0.c1) IS TRUE), CASE WHEN vt0.c0 THEN 'sd' ELSE vt0.c1 END, (vt0.c1 IN ())))>((vt0.c1 COLLATE NOCASE, CAST(vt0.c0 AS TEXT), CAST(vt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) IS TRUE), CASE WHEN vt0.c0 THEN 'sd' ELSE vt0.c1 END, (vt0.c1 IN ())))>((vt0.c1 COLLATE NOCASE, CAST(vt0.c0 AS TEXT), CAST(vt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1) IS TRUE), CASE WHEN vt0.c0 THEN 'sd' ELSE vt0.c1 END, (vt0.c1 IN ())))>((vt0.c1 COLLATE NOCASE, CAST(vt0.c0 AS TEXT), CAST(vt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) IS TRUE), CASE WHEN vt0.c0 THEN 'sd' ELSE vt0.c1 END, (vt0.c1 IN ())))>((vt0.c1 COLLATE NOCASE, CAST(vt0.c0 AS TEXT), CAST(vt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1) IS TRUE), CASE WHEN vt0.c0 THEN 'sd' ELSE vt0.c1 END, (vt0.c1 IN ())))>((vt0.c1 COLLATE NOCASE, CAST(vt0.c0 AS TEXT), CAST(vt0.c1 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN CAST(NULL AS NUMERIC) THEN (~ (NULL)) END) ORDER BY (((vt1.c0)) BETWEEN ((COALESCE(vt1.c0, vt1.c0))) AND ((''))) DESC  NULLS FIRST, vt1.c0  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS FALSE)  WHEN CAST(NULL AS NUMERIC) THEN (~ (NULL)) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((COALESCE(vt1.c0, vt1.c0))) AND ((''))) DESC  NULLS FIRST, vt1.c0  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN CAST(NULL AS NUMERIC) THEN (~ (NULL)) END) ORDER BY (((vt1.c0)) BETWEEN ((COALESCE(vt1.c0, vt1.c0))) AND ((''))) DESC  NULLS FIRST, vt1.c0  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS FALSE)  WHEN CAST(NULL AS NUMERIC) THEN (~ (NULL)) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((COALESCE(vt1.c0, vt1.c0))) AND ((''))) DESC  NULLS FIRST, vt1.c0  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN CAST(NULL AS NUMERIC) THEN (~ (NULL)) END) ORDER BY (((vt1.c0)) BETWEEN ((COALESCE(vt1.c0, vt1.c0))) AND ((''))) DESC  NULLS FIRST, vt1.c0  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (~ (NULL)) WHERE ((((vt1.c0)) BETWEEN ((((vt0.c1)LIKE(vt0.c1)))) AND (((vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((vt0.c1)LIKE(vt0.c1)))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (~ (NULL)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (~ (NULL)) WHERE ((((vt1.c0)) BETWEEN ((((vt0.c1)LIKE(vt0.c1)))) AND (((vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((vt0.c1)LIKE(vt0.c1)))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (~ (NULL)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (~ (NULL)) WHERE ((((vt1.c0)) BETWEEN ((((vt0.c1)LIKE(vt0.c1)))) AND (((vt1.c0 IN ())))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0 IN (NULL)), ((vt0.c0)<>(vt0.c1)), (NOT (vt0.c1))))<=((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c0)), vt0.c0 COLLATE BINARY))) WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)%(((vt0.c1) NOT BETWEEN (9.67584196E8) AND (vt0.c0))))) ORDER BY ((((-3.41389224E8) IS FALSE))GLOB(((vt0.c0)<(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)%(((vt0.c1) NOT BETWEEN (9.67584196E8) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0 IN (NULL)), ((vt0.c0)<>(vt0.c1)), (NOT (vt0.c1))))<=((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c0)), vt0.c0 COLLATE BINARY))) ORDER BY ((((-3.41389224E8) IS FALSE))GLOB(((vt0.c0)<(vt0.c0)))) ASC);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0 IN (NULL)), ((vt0.c0)<>(vt0.c1)), (NOT (vt0.c1))))<=((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c0)), vt0.c0 COLLATE BINARY))) WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)%(((vt0.c1) NOT BETWEEN (9.67584196E8) AND (vt0.c0))))) ORDER BY ((((-3.41389224E8) IS FALSE))GLOB(((vt0.c0)<(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)%(((vt0.c1) NOT BETWEEN (9.67584196E8) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0 IN (NULL)), ((vt0.c0)<>(vt0.c1)), (NOT (vt0.c1))))<=((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c0)), vt0.c0 COLLATE BINARY))) ORDER BY ((((-3.41389224E8) IS FALSE))GLOB(((vt0.c0)<(vt0.c0)))) ASC);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0 IN (NULL)), ((vt0.c0)<>(vt0.c1)), (NOT (vt0.c1))))<=((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c0)), vt0.c0 COLLATE BINARY))) WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)%(((vt0.c1) NOT BETWEEN (9.67584196E8) AND (vt0.c0))))) ORDER BY ((((-3.41389224E8) IS FALSE))GLOB(((vt0.c0)<(vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt1.c0)) ISNULL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0, vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT COUNT(*) FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt1.c0)) ISNULL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0, vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT COUNT(*) FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt1.c0)) ISNULL)) ORDER BY x'';
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN RTRIM(vt1.c0) THEN ((vt0.c1) NOT NULL) ELSE CAST(vt1.c0 AS NUMERIC) END WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-437807742')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-437807742')) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN RTRIM(vt1.c0) THEN ((vt0.c1) NOT NULL) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN RTRIM(vt1.c0) THEN ((vt0.c1) NOT NULL) ELSE CAST(vt1.c0 AS NUMERIC) END WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-437807742')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-437807742')) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN RTRIM(vt1.c0) THEN ((vt0.c1) NOT NULL) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN RTRIM(vt1.c0) THEN ((vt0.c1) NOT NULL) ELSE CAST(vt1.c0 AS NUMERIC) END WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-437807742')) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1))<((vt0.c1))))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((vt0.c1))<((vt0.c0))) COLLATE NOCASE, MAX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0) IS FALSE)) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<((vt0.c1))))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((vt0.c1))<((vt0.c0))) COLLATE NOCASE, MAX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0) IS FALSE)) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1))<((vt0.c1))))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((vt0.c1))<((vt0.c0))) COLLATE NOCASE, MAX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0) IS FALSE)) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<((vt0.c1))))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((vt0.c1))<((vt0.c0))) COLLATE NOCASE, MAX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0) IS FALSE)) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1))<((vt0.c1))))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((vt0.c1))<((vt0.c0))) COLLATE NOCASE, MAX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0) IS FALSE)) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt1.c0, vt1.c0)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt1.c0, vt1.c0)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0)) NOTNULL));
SELECT * FROM vt0, vt1 WHERE ((((vt0.c1)!=(vt0.c0)) IN (((vt0.c1)LIKE(vt0.c1)), TRIM(vt0.c1)))) ORDER BY ((((vt0.c0)*(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)!=(vt0.c0)) IN (((vt0.c1)LIKE(vt0.c1)), TRIM(vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)*(vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c1)!=(vt0.c0)) IN (((vt0.c1)LIKE(vt0.c1)), TRIM(vt0.c1)))) ORDER BY ((((vt0.c0)*(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)!=(vt0.c0)) IN (((vt0.c1)LIKE(vt0.c1)), TRIM(vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)*(vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c1)!=(vt0.c0)) IN (((vt0.c1)LIKE(vt0.c1)), TRIM(vt0.c1)))) ORDER BY ((((vt0.c0)*(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL)LIKE(TYPEOF(DISTINCT vt1.c0)))) ORDER BY (((vt1.c0))==(((('-295564199')*(vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)LIKE(TYPEOF(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))=(((('-295564199')*(vt1.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL)LIKE(TYPEOF(DISTINCT vt1.c0)))) ORDER BY (((vt1.c0))==(((('-295564199')*(vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)LIKE(TYPEOF(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))=(((('-295564199')*(vt1.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL)LIKE(TYPEOF(DISTINCT vt1.c0)))) ORDER BY (((vt1.c0))==(((('-295564199')*(vt1.c0))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (LOWER(vt0.c1)) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt0.c1)) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (LOWER(vt0.c1)) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt0.c1)) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (LOWER(vt0.c1)) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (QUOTE(vt0.c1)) ORDER BY (((((((((vt0.c1 IN ()))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt0.c1) IS TRUE))))OR('')))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(vt0.c1)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((vt0.c1 IN ()))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt0.c1) IS TRUE))))OR('')))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (QUOTE(vt0.c1)) ORDER BY (((((((((vt0.c1 IN ()))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt0.c1) IS TRUE))))OR('')))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(vt0.c1)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((vt0.c1 IN ()))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt0.c1) IS TRUE))))OR('')))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (QUOTE(vt0.c1)) ORDER BY (((((((((vt0.c1 IN ()))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt0.c1) IS TRUE))))OR('')))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)AND(vt0.c0)) AS INTEGER)) ORDER BY vt0.c1 ASC, ((((NULL)AND(vt0.c1))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC, ((((NULL)AND(vt0.c1))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)AND(vt0.c0)) AS INTEGER)) ORDER BY vt0.c1 ASC, ((((NULL)AND(vt0.c1))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC, ((((NULL)AND(vt0.c1))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)AND(vt0.c0)) AS INTEGER)) ORDER BY vt0.c1 ASC, ((((NULL)AND(vt0.c1))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((((vt0.c1)AND(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((((vt0.c1)AND(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((((vt0.c1)AND(vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)GLOB(vt0.c1))))<>((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))))) ORDER BY (((CAST(NULL AS TEXT), (('}')IS NOT(vt0.c0)), 'D+3D2]5!'))>=((vt0.c1 COLLATE NOCASE, -1500284598, vt0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)GLOB(vt0.c1))))<>((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(NULL AS TEXT), (('}')IS NOT(vt0.c0)), 'D+3D2]5!'))>=((vt0.c1 COLLATE NOCASE, -1500284598, vt0.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)GLOB(vt0.c1))))<>((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))))) ORDER BY (((CAST(NULL AS TEXT), (('}')IS NOT(vt0.c0)), 'D+3D2]5!'))>=((vt0.c1 COLLATE NOCASE, -1500284598, vt0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)GLOB(vt0.c1))))<>((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(NULL AS TEXT), (('}')IS NOT(vt0.c0)), 'D+3D2]5!'))>=((vt0.c1 COLLATE NOCASE, -1500284598, vt0.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)GLOB(vt0.c1))))<>((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))))) ORDER BY (((CAST(NULL AS TEXT), (('}')IS NOT(vt0.c0)), 'D+3D2]5!'))>=((vt0.c1 COLLATE NOCASE, -1500284598, vt0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) NOT NULL) WHERE ((((((vt0.c0 IN ()))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN (vt1.c0, vt0.c1))))) ORDER BY (((vt0.c0) NOT BETWEEN ('YK\rwR') AND (vt0.c0)) IN ()) DESC, ((((vt0.c1) BETWEEN (vt0.c1) AND (0.5404949270773145)))GLOB(((x'1d7a')<(vt0.c1)))) ASC  NULLS LAST, ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN (vt1.c0, vt0.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) NOT NULL) ORDER BY (((vt0.c0) NOT BETWEEN ('YK\rwR') AND (vt0.c0)) IN ()) DESC, ((((vt0.c1) BETWEEN (vt0.c1) AND (0.5404949270773145)))GLOB(((x'1d7a')<(vt0.c1)))) ASC  NULLS LAST, ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) DESC, vt0.c0);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) NOT NULL) WHERE ((((((vt0.c0 IN ()))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN (vt1.c0, vt0.c1))))) ORDER BY (((vt0.c0) NOT BETWEEN ('YK\rwR') AND (vt0.c0)) IN ()) DESC, ((((vt0.c1) BETWEEN (vt0.c1) AND (0.5404949270773145)))GLOB(((x'1d7a')<(vt0.c1)))) ASC  NULLS LAST, ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN (vt1.c0, vt0.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) NOT NULL) ORDER BY (((vt0.c0) NOT BETWEEN ('YK\rwR') AND (vt0.c0)) IN ()) DESC, ((((vt0.c1) BETWEEN (vt0.c1) AND (0.5404949270773145)))GLOB(((x'1d7a')<(vt0.c1)))) ASC  NULLS LAST, ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) DESC, vt0.c0);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) NOT NULL) WHERE ((((((vt0.c0 IN ()))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN (vt1.c0, vt0.c1))))) ORDER BY (((vt0.c0) NOT BETWEEN ('YK\rwR') AND (vt0.c0)) IN ()) DESC, ((((vt0.c1) BETWEEN (vt0.c1) AND (0.5404949270773145)))GLOB(((x'1d7a')<(vt0.c1)))) ASC  NULLS LAST, ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) DESC, vt0.c0;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (vt0.c1)));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)IS NOT(vt0.c1)))%((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt0.c1)))%((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)IS NOT(vt0.c1)))%((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt0.c1)))%((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)IS NOT(vt0.c1)))%((vt0.c1 IN ()))));
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0, vt1 WHERE (x'1968');
SELECT SUM(count) FROM (SELECT ((x'1968') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (x'1968');
SELECT SUM(count) FROM (SELECT ((x'1968') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (x'1968');
SELECT COUNT(*) FROM vt1, vt0 WHERE (((GLOB(vt0.c0, vt0.c1)) BETWEEN (vt0.c0) AND (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY '-341389224'  NULLS FIRST, ((((- (vt1.c0)), ((1246960216)*(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))<=((CAST(vt0.c1 AS INTEGER), (vt0.c1 IN ()), NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((GLOB(vt0.c0, vt0.c1)) BETWEEN (vt0.c0) AND (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY '-341389224'  NULLS FIRST, ((((- (vt1.c0)), ((1246960216)*(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))<=((CAST(vt0.c1 AS INTEGER), (vt0.c1 IN ()), NULL))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((GLOB(vt0.c0, vt0.c1)) BETWEEN (vt0.c0) AND (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY '-341389224'  NULLS FIRST, ((((- (vt1.c0)), ((1246960216)*(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))<=((CAST(vt0.c1 AS INTEGER), (vt0.c1 IN ()), NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((GLOB(vt0.c0, vt0.c1)) BETWEEN (vt0.c0) AND (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY '-341389224'  NULLS FIRST, ((((- (vt1.c0)), ((1246960216)*(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))<=((CAST(vt0.c1 AS INTEGER), (vt0.c1 IN ()), NULL))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((GLOB(vt0.c0, vt0.c1)) BETWEEN (vt0.c0) AND (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY '-341389224'  NULLS FIRST, ((((- (vt1.c0)), ((1246960216)*(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))<=((CAST(vt0.c1 AS INTEGER), (vt0.c1 IN ()), NULL))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (MIN('H5L', (('-1353526785') NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY vt0.c0 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((MIN('H5L', (('-1353526785') NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 COLLATE RTRIM ASC);
SELECT ALL * FROM vt1, vt0 WHERE (MIN('H5L', (('-1353526785') NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY vt0.c0 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((MIN('H5L', (('-1353526785') NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 COLLATE RTRIM ASC);
SELECT ALL * FROM vt1, vt0 WHERE (MIN('H5L', (('-1353526785') NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY vt0.c0 COLLATE RTRIM ASC;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT NULL))|(((vt0.c0)||(vt0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))LIKE(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))|(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))LIKE(NULL))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT NULL))|(((vt0.c0)||(vt0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))LIKE(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))|(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))LIKE(NULL))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT NULL))|(((vt0.c0)||(vt0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))LIKE(NULL))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE (- (vt0.c0))  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((x'')GLOB(vt0.c1)) WHEN LIKE(vt0.c1, vt0.c1) THEN 'E' WHEN 0.05792386259259141 THEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) ELSE x'' END) ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS LAST, ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c0))  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((x'')GLOB(vt0.c1)) WHEN LIKE(vt0.c1, vt0.c1) THEN 'E' WHEN 0.05792386259259141 THEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) ELSE x'' END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS LAST, ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE (- (vt0.c0))  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((x'')GLOB(vt0.c1)) WHEN LIKE(vt0.c1, vt0.c1) THEN 'E' WHEN 0.05792386259259141 THEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) ELSE x'' END) ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS LAST, ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c0))  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((x'')GLOB(vt0.c1)) WHEN LIKE(vt0.c1, vt0.c1) THEN 'E' WHEN 0.05792386259259141 THEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) ELSE x'' END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS LAST, ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE (- (vt0.c0))  WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((x'')GLOB(vt0.c1)) WHEN LIKE(vt0.c1, vt0.c1) THEN 'E' WHEN 0.05792386259259141 THEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) ELSE x'' END) ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS LAST, ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.07054271945269264);
SELECT SUM(count) FROM (SELECT ALL ((0.07054271945269264) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.07054271945269264);
SELECT SUM(count) FROM (SELECT ALL ((0.07054271945269264) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.07054271945269264);
SELECT * FROM vt0 WHERE ('-1068627643' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-1068627643' COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('-1068627643' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-1068627643' COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('-1068627643' COLLATE NOCASE);
SELECT * FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))&(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))&(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))&(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))&(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))&(CAST(vt1.c0 AS INTEGER))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0) IS FALSE) WHERE ((NOT (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0) IS FALSE));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0) IS FALSE) WHERE ((NOT (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0) IS FALSE));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0) IS FALSE) WHERE ((NOT (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((('鰻v')IS NOT(((vt0.c1)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('鰻v')IS NOT(((vt0.c1)<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('鰻v')IS NOT(((vt0.c1)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('鰻v')IS NOT(((vt0.c1)<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('鰻v')IS NOT(((vt0.c1)<(vt0.c1)))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON '2756624071011931374 -6078508781303741845 1324 n' WHERE (((vt0.c1)&((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)&((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON '2756624071011931374 -6078508781303741845 1324 n');
SELECT ALL * FROM vt1 INNER JOIN vt0 ON '2756624071011931374 -6078508781303741845 1324 n' WHERE (((vt0.c1)&((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)&((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON '2756624071011931374 -6078508781303741845 1324 n');
SELECT ALL * FROM vt1 INNER JOIN vt0 ON '2756624071011931374 -6078508781303741845 1324 n' WHERE (((vt0.c1)&((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((NULL COLLATE BINARY)>((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) WHERE (LOWER(DISTINCT ((vt0.c0) IS FALSE))) ORDER BY json_array(CAST(vt0.c0 AS INTEGER), vt0.c1 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((NULL COLLATE BINARY)>((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) ORDER BY json_array(CAST(vt0.c0 AS INTEGER), vt0.c1 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((NULL COLLATE BINARY)>((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) WHERE (LOWER(DISTINCT ((vt0.c0) IS FALSE))) ORDER BY json_array(CAST(vt0.c0 AS INTEGER), vt0.c1 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((NULL COLLATE BINARY)>((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) ORDER BY json_array(CAST(vt0.c0 AS INTEGER), vt0.c1 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((NULL COLLATE BINARY)>((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))) WHERE (LOWER(DISTINCT ((vt0.c0) IS FALSE))) ORDER BY json_array(CAST(vt0.c0 AS INTEGER), vt0.c1 COLLATE RTRIM)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) ORDER BY (x'' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) ORDER BY (x'' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) ORDER BY (x'' IN ()) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))LIKE(HEX(vt0.c0)))) ORDER BY (((((NULL)/(0.7029718244336769))))>=((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))LIKE(HEX(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((NULL)/(0.7029718244336769))))>=((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))) DESC);
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))LIKE(HEX(vt0.c0)))) ORDER BY (((((NULL)/(0.7029718244336769))))>=((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))LIKE(HEX(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((NULL)/(0.7029718244336769))))>=((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))) DESC);
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))LIKE(HEX(vt0.c0)))) ORDER BY (((((NULL)/(0.7029718244336769))))>=((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c1)LIKE(vt0.c0)) AS NUMERIC)) ORDER BY ROUND('''DDKpjX', ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)LIKE(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ROUND('''DDKpjX', ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c1)LIKE(vt0.c0)) AS NUMERIC)) ORDER BY ROUND('''DDKpjX', ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)LIKE(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ROUND('''DDKpjX', ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c1)LIKE(vt0.c0)) AS NUMERIC)) ORDER BY ROUND('''DDKpjX', ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) DESC;
SELECT * FROM vt1 WHERE (((((vt1.c0)&(NULL))) BETWEEN ((vt1.c0 IN ())) AND (vt1.c0 COLLATE BINARY))) ORDER BY (vt1.c0 IN ()) ASC, (NOT (((vt1.c0)||(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)&(NULL))) BETWEEN ((vt1.c0 IN ())) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) ASC, (NOT (((vt1.c0)||(vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0)&(NULL))) BETWEEN ((vt1.c0 IN ())) AND (vt1.c0 COLLATE BINARY))) ORDER BY (vt1.c0 IN ()) ASC, (NOT (((vt1.c0)||(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)&(NULL))) BETWEEN ((vt1.c0 IN ())) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) ASC, (NOT (((vt1.c0)||(vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0)&(NULL))) BETWEEN ((vt1.c0 IN ())) AND (vt1.c0 COLLATE BINARY))) ORDER BY (vt1.c0 IN ()) ASC, (NOT (((vt1.c0)||(vt1.c0)))) ASC;
SELECT * FROM vt1, vt0 WHERE (((((('YK|wR')OR(vt0.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((((('YK|wR')OR(vt0.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((('YK|wR')OR(vt0.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((((('YK|wR')OR(vt0.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((('YK|wR')OR(vt0.c0)))AND(vt1.c0)) IN ()));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1)GLOB(vt0.c1)) AS TEXT) WHERE (CASE WHEN ((vt0.c0)*(vt1.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END WHEN CAST(vt0.c1 AS REAL) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)*(vt1.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END WHEN CAST(vt0.c1 AS REAL) THEN vt1.c0 END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1)GLOB(vt0.c1)) AS TEXT));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1)GLOB(vt0.c1)) AS TEXT) WHERE (CASE WHEN ((vt0.c0)*(vt1.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END WHEN CAST(vt0.c1 AS REAL) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)*(vt1.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END WHEN CAST(vt0.c1 AS REAL) THEN vt1.c0 END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1)GLOB(vt0.c1)) AS TEXT));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1)GLOB(vt0.c1)) AS TEXT) WHERE (CASE WHEN ((vt0.c0)*(vt1.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END WHEN CAST(vt0.c1 AS REAL) THEN vt1.c0 END);
SELECT * FROM vt0 WHERE (IFNULL(DISTINCT ((vt0.c0)<(x'')), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((vt0.c1 COLLATE RTRIM)AND(vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt0.c0)<(x'')), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1 COLLATE RTRIM)AND(vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (IFNULL(DISTINCT ((vt0.c0)<(x'')), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((vt0.c1 COLLATE RTRIM)AND(vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt0.c0)<(x'')), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1 COLLATE RTRIM)AND(vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (IFNULL(DISTINCT ((vt0.c0)<(x'')), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((vt0.c1 COLLATE RTRIM)AND(vt0.c1)))AND(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(NULL AS INTEGER)))==((((vt0.c1)>=(vt0.c1)), ((((x'')OR(vt0.c0)))AND(vt0.c1)), (vt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(NULL AS INTEGER)))==((((vt0.c1)>=(vt0.c1)), ((((x'')OR(vt0.c0)))AND(vt0.c1)), (vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(NULL AS INTEGER)))==((((vt0.c1)>=(vt0.c1)), ((((x'')OR(vt0.c0)))AND(vt0.c1)), (vt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(NULL AS INTEGER)))==((((vt0.c1)>=(vt0.c1)), ((((x'')OR(vt0.c0)))AND(vt0.c1)), (vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(NULL AS INTEGER)))==((((vt0.c1)>=(vt0.c1)), ((((x'')OR(vt0.c0)))AND(vt0.c1)), (vt0.c1 IN ())))));
SELECT ALL * FROM vt0 WHERE ((HEX(vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(vt0.c1) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((HEX(vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(vt0.c1) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((HEX(vt0.c1) IN ()));
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS REAL)))) ORDER BY json_valid(CASE vt0.c1  WHEN -1053279366 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST, ((((vt0.c1) NOTNULL))||(CASE WHEN vt0.c1 THEN x'ebb2' ELSE x'' END))  NULLS FIRST, ((vt0.c0)<>(vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY json_valid(CASE vt0.c1  WHEN -1053279366 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST, ((((vt0.c1) NOTNULL))||(CASE WHEN vt0.c1 THEN x'ebb2' ELSE x'' END))  NULLS FIRST, ((vt0.c0)<>(vt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS REAL)))) ORDER BY json_valid(CASE vt0.c1  WHEN -1053279366 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST, ((((vt0.c1) NOTNULL))||(CASE WHEN vt0.c1 THEN x'ebb2' ELSE x'' END))  NULLS FIRST, ((vt0.c0)<>(vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY json_valid(CASE vt0.c1  WHEN -1053279366 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST, ((((vt0.c1) NOTNULL))||(CASE WHEN vt0.c1 THEN x'ebb2' ELSE x'' END))  NULLS FIRST, ((vt0.c0)<>(vt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS REAL)))) ORDER BY json_valid(CASE vt0.c1  WHEN -1053279366 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST, ((((vt0.c1) NOTNULL))||(CASE WHEN vt0.c1 THEN x'ebb2' ELSE x'' END))  NULLS FIRST, ((vt0.c0)<>(vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)IS(0.12433206279062736)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)IS(0.12433206279062736))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)IS(0.12433206279062736)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)IS(0.12433206279062736))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)IS(0.12433206279062736)))));
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c1)AND(vt0.c0)))AND('-887447774')))+(vt0.c0))) ORDER BY CASE WHEN 0.6424335422340591 THEN (((vt0.c0)) NOT BETWEEN (('1250638255')) AND ((vt1.c0))) WHEN ((((((((NULL)AND(vt0.c1)))AND(vt0.c1)))AND(0.4940814914084998)))OR(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN ((vt1.c0) IS TRUE) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c1) ISNULL) THEN ((vt1.c0)IS NOT(vt0.c1)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN NULL END THEN ((vt0.c1)+(vt1.c0)) ELSE ((vt0.c0)+(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND('-887447774')))+(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN 0.6424335422340591 THEN (((vt0.c0)) NOT BETWEEN (('1250638255')) AND ((vt1.c0))) WHEN ((((((((NULL)AND(vt0.c1)))AND(vt0.c1)))AND(0.4940814914084998)))OR(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN ((vt1.c0) IS TRUE) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c1) ISNULL) THEN ((vt1.c0)IS NOT(vt0.c1)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN NULL END THEN ((vt0.c1)+(vt1.c0)) ELSE ((vt0.c0)+(vt0.c0)) END DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c1)AND(vt0.c0)))AND('-887447774')))+(vt0.c0))) ORDER BY CASE WHEN 0.6424335422340591 THEN (((vt0.c0)) NOT BETWEEN (('1250638255')) AND ((vt1.c0))) WHEN ((((((((NULL)AND(vt0.c1)))AND(vt0.c1)))AND(0.4940814914084998)))OR(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN ((vt1.c0) IS TRUE) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c1) ISNULL) THEN ((vt1.c0)IS NOT(vt0.c1)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN NULL END THEN ((vt0.c1)+(vt1.c0)) ELSE ((vt0.c0)+(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND('-887447774')))+(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN 0.6424335422340591 THEN (((vt0.c0)) NOT BETWEEN (('1250638255')) AND ((vt1.c0))) WHEN ((((((((NULL)AND(vt0.c1)))AND(vt0.c1)))AND(0.4940814914084998)))OR(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN ((vt1.c0) IS TRUE) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c1) ISNULL) THEN ((vt1.c0)IS NOT(vt0.c1)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN NULL END THEN ((vt0.c1)+(vt1.c0)) ELSE ((vt0.c0)+(vt0.c0)) END DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c1)AND(vt0.c0)))AND('-887447774')))+(vt0.c0))) ORDER BY CASE WHEN 0.6424335422340591 THEN (((vt0.c0)) NOT BETWEEN (('1250638255')) AND ((vt1.c0))) WHEN ((((((((NULL)AND(vt0.c1)))AND(vt0.c1)))AND(0.4940814914084998)))OR(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN ((vt1.c0) IS TRUE) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c1) ISNULL) THEN ((vt1.c0)IS NOT(vt0.c1)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN NULL END THEN ((vt0.c1)+(vt1.c0)) ELSE ((vt0.c0)+(vt0.c0)) END DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (0x5b900405)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (0X5b900405)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (0x5b900405)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (0X5b900405)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (0x5b900405)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 COLLATE NOCASE))>((((vt0.c0)||(vt0.c1)))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 COLLATE NOCASE))>((((vt0.c0)||(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 COLLATE NOCASE))>((((vt0.c0)||(vt0.c1)))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 COLLATE NOCASE))>((((vt0.c0)||(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 COLLATE NOCASE))>((((vt0.c0)||(vt0.c1)))))) ORDER BY NULL DESC;
SELECT * FROM vt0, vt1 WHERE ((+ (9.67584196E8)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (9.67584196E8)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((+ (9.67584196E8)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (9.67584196E8)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((+ (9.67584196E8)) COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 WHERE ((('988614348')<((((vt0.c1))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((('988614348')<((((vt0.c1))<((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((('988614348')<((((vt0.c1))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((('988614348')<((((vt0.c1))<((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((('988614348')<((((vt0.c1))<((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((x'3c49')AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((((x'3c49')AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((x'3c49')AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((((x'3c49')AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((x'3c49')AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c1)))>(vt0.c0))) ORDER BY ((((NULL))<>((0X3aed0ecc))) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt0.c1)))>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL))<>((0x3aed0ecc))) IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c1)))>(vt0.c0))) ORDER BY ((((NULL))<>((0X3aed0ecc))) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt0.c1)))>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL))<>((0x3aed0ecc))) IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c1)))>(vt0.c0))) ORDER BY ((((NULL))<>((0X3aed0ecc))) IN ());
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((~ (vt1.c0))) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((~ (vt1.c0))) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((~ (vt1.c0))) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((~ (vt1.c0))) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((~ (vt1.c0))) AND ((+ (vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt1.c0) IS FALSE) ELSE CAST(vt1.c0 AS BLOB) END) ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt1.c0) IS FALSE) ELSE CAST(vt1.c0 AS BLOB) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt1.c0) IS FALSE) ELSE CAST(vt1.c0 AS BLOB) END) ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt1.c0) IS FALSE) ELSE CAST(vt1.c0 AS BLOB) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt1.c0) IS FALSE) ELSE CAST(vt1.c0 AS BLOB) END) ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE)))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 ASC);
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE)))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 ASC);
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE)))) ORDER BY vt0.c1 ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY (- (vt1.c0)), CAST(vt1.c0 AS BLOB) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)), CAST(vt1.c0 AS BLOB) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY (- (vt1.c0)), CAST(vt1.c0 AS BLOB) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)), CAST(vt1.c0 AS BLOB) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY (- (vt1.c0)), CAST(vt1.c0 AS BLOB) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) IN ())) ORDER BY (((vt1.c0 IN (vt1.c0, vt0.c1)))+(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))), vt1.c0, (~ (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0 IN (vt1.c0, vt0.c1)))+(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))), vt1.c0, (~ (vt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) IN ())) ORDER BY (((vt1.c0 IN (vt1.c0, vt0.c1)))+(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))), vt1.c0, (~ (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0 IN (vt1.c0, vt0.c1)))+(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))), vt1.c0, (~ (vt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) IN ())) ORDER BY (((vt1.c0 IN (vt1.c0, vt0.c1)))+(((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))), vt1.c0, (~ (vt0.c0)) COLLATE BINARY ASC;
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (NULL)) END) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC, NULL ASC, vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1 COLLATE NOCASE  WHEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (NULL)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC, NULL ASC, vt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (NULL)) END) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC, NULL ASC, vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1 COLLATE NOCASE  WHEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (NULL)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC, NULL ASC, vt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (NULL)) END) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC, NULL ASC, vt1.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ())) ORDER BY ((vt0.c0)/(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)/(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, LAST_INSERT_ROWID());
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ())) ORDER BY ((vt0.c0)/(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)/(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, LAST_INSERT_ROWID());
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ())) ORDER BY ((vt0.c0)/(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, LAST_INSERT_ROWID();
SELECT ALL * FROM vt1 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt1 WHERE (TYPEOF(CAST(vt1.c0 AS BLOB))) ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (TYPEOF(CAST(vt1.c0 AS BLOB))) ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (TYPEOF(CAST(vt1.c0 AS BLOB))) ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt0 WHERE (((('', UPPER(DISTINCT vt0.c0), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))<=((vt0.c1 COLLATE RTRIM, 0.6669371728260505, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-503905705' THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((('', UPPER(DISTINCT vt0.c0), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))<=((vt0.c1 COLLATE RTRIM, 0.6669371728260505, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-503905705' THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((('', UPPER(DISTINCT vt0.c0), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))<=((vt0.c1 COLLATE RTRIM, 0.6669371728260505, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-503905705' THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((('', UPPER(DISTINCT vt0.c0), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))<=((vt0.c1 COLLATE RTRIM, 0.6669371728260505, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-503905705' THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((('', UPPER(DISTINCT vt0.c0), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))<=((vt0.c1 COLLATE RTRIM, 0.6669371728260505, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-503905705' THEN vt0.c0 END))));
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN CAST(vt1.c0 AS REAL) THEN vt1.c0 COLLATE BINARY END) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) IS TRUE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN CAST(vt1.c0 AS REAL) THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) IS TRUE)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN CAST(vt1.c0 AS REAL) THEN vt1.c0 COLLATE BINARY END) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) IS TRUE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN CAST(vt1.c0 AS REAL) THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) IS TRUE)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN CAST(vt1.c0 AS REAL) THEN vt1.c0 COLLATE BINARY END) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) IS TRUE)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, x'1bb0', vt1.c0)) NOT BETWEEN ((((vt1.c0)>(vt1.c0)), ((vt1.c0) IS TRUE), (((('}zoN\nY祊{e')AND(vt1.c0)))AND(0.8863890848605549)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((NULL) ISNULL), TRIM(DISTINCT vt1.c0))))) ORDER BY load_extension(((vt1.c0)&(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'1bb0', vt1.c0)) NOT BETWEEN ((((vt1.c0)>(vt1.c0)), ((vt1.c0) IS TRUE), (((('}zoN\nY祊{e')AND(vt1.c0)))AND(0.8863890848605549)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((NULL) ISNULL), TRIM(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY load_extension(((vt1.c0)&(vt1.c0))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, x'1bb0', vt1.c0)) NOT BETWEEN ((((vt1.c0)>(vt1.c0)), ((vt1.c0) IS TRUE), (((('}zoN\nY祊{e')AND(vt1.c0)))AND(0.8863890848605549)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((NULL) ISNULL), TRIM(DISTINCT vt1.c0))))) ORDER BY load_extension(((vt1.c0)&(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'1bb0', vt1.c0)) NOT BETWEEN ((((vt1.c0)>(vt1.c0)), ((vt1.c0) IS TRUE), (((('}zoN\nY祊{e')AND(vt1.c0)))AND(0.8863890848605549)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((NULL) ISNULL), TRIM(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY load_extension(((vt1.c0)&(vt1.c0))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (vt0.c0)));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL) WHERE (((HEX(DISTINCT ''))>(LTRIM(0.3556451565371008, vt0.c1)))) ORDER BY (NOT (((vt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT ''))>(LTRIM(0.3556451565371008, vt0.c1)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL) ORDER BY (NOT (((vt0.c1) IS TRUE))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL) WHERE (((HEX(DISTINCT ''))>(LTRIM(0.3556451565371008, vt0.c1)))) ORDER BY (NOT (((vt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT ''))>(LTRIM(0.3556451565371008, vt0.c1)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL) ORDER BY (NOT (((vt0.c1) IS TRUE))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL) WHERE (((HEX(DISTINCT ''))>(LTRIM(0.3556451565371008, vt0.c1)))) ORDER BY (NOT (((vt0.c1) IS TRUE)));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE BINARY) WHERE ((((((vt0.c0) ISNULL), vt0.c0, vt1.c0, (~ (vt0.c1)), vt0.c1 COLLATE NOCASE))<=(((- (vt0.c1)), (((vt0.c1))==((0.6043483168525183))), (('0.9180658875650421') NOT NULL), IFNULL(vt0.c1, vt0.c1), ((vt0.c0)<=(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) ISNULL), vt0.c0, vt1.c0, (~ (vt0.c1)), vt0.c1 COLLATE NOCASE))<=(((- (vt0.c1)), (((vt0.c1))==((0.6043483168525183))), (('0.9180658875650421') NOT NULL), IFNULL(vt0.c1, vt0.c1), ((vt0.c0)<=(vt0.c1)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE BINARY));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE BINARY) WHERE ((((((vt0.c0) ISNULL), vt0.c0, vt1.c0, (~ (vt0.c1)), vt0.c1 COLLATE NOCASE))<=(((- (vt0.c1)), (((vt0.c1))==((0.6043483168525183))), (('0.9180658875650421') NOT NULL), IFNULL(vt0.c1, vt0.c1), ((vt0.c0)<=(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) ISNULL), vt0.c0, vt1.c0, (~ (vt0.c1)), vt0.c1 COLLATE NOCASE))<=(((- (vt0.c1)), (((vt0.c1))==((0.6043483168525183))), (('0.9180658875650421') NOT NULL), IFNULL(vt0.c1, vt0.c1), ((vt0.c0)<=(vt0.c1)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE BINARY));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE BINARY) WHERE ((((((vt0.c0) ISNULL), vt0.c0, vt1.c0, (~ (vt0.c1)), vt0.c1 COLLATE NOCASE))<=(((- (vt0.c1)), (((vt0.c1))==((0.6043483168525183))), (('0.9180658875650421') NOT NULL), IFNULL(vt0.c1, vt0.c1), ((vt0.c0)<=(vt0.c1))))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(((vt0.c0)<=(vt0.c0)))))OR(0.930998170012281 COLLATE RTRIM))) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN ((vt0.c1 IN ())) AND (x''));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND(((vt0.c0)<=(vt0.c0)))))OR(0.930998170012281 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN ((vt0.c1 IN ())) AND (x'')));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(((vt0.c0)<=(vt0.c0)))))OR(0.930998170012281 COLLATE RTRIM))) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN ((vt0.c1 IN ())) AND (x''));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND(((vt0.c0)<=(vt0.c0)))))OR(0.930998170012281 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN ((vt0.c1 IN ())) AND (x'')));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(((vt0.c0)<=(vt0.c0)))))OR(0.930998170012281 COLLATE RTRIM))) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN ((vt0.c1 IN ())) AND (x''));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0)))) ORDER BY ((((vt0.c0)==(vt0.c0)))+(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)=(vt0.c0)))+(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0)))) ORDER BY ((((vt0.c0)==(vt0.c0)))+(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)=(vt0.c0)))+(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0)))) ORDER BY ((((vt0.c0)==(vt0.c0)))+(vt0.c0)) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (0.5313521854199392) ORDER BY json_object((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0)*(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB)) ASC;
SELECT SUM(count) FROM (SELECT ((0.5313521854199392) IS TRUE)  as count FROM vt0 ORDER BY json_object((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0)*(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB)) ASC);
SELECT * FROM vt0 WHERE (0.5313521854199392) ORDER BY json_object((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0)*(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB)) ASC;
SELECT SUM(count) FROM (SELECT ((0.5313521854199392) IS TRUE)  as count FROM vt0 ORDER BY json_object((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0)*(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, CAST(vt0.c0 AS BLOB)) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1))>=((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c1))>=((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1))>=((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c1))>=((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1))>=((vt0.c0))) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE (((x'7955') BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ('8~7Y')));
SELECT SUM(count) FROM (SELECT ALL ((((x'7955') BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ('8~7Y'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((x'7955') BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ('8~7Y')));
SELECT SUM(count) FROM (SELECT ALL ((((x'7955') BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ('8~7Y'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((x'7955') BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ('8~7Y')));
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))*(-4.37807742E8)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))*(-4.37807742E8))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))*(-4.37807742E8)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))*(-4.37807742E8))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))*(-4.37807742E8)));
SELECT * FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c1) NOTNULL)  WHEN ((vt0.c1)==(vt0.c1)) THEN ((0.07717153850029257) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (('*,䯃	')GLOB(vt1.c0)) END WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c1) NOTNULL)  WHEN ((vt0.c1)=(vt0.c1)) THEN ((0.07717153850029257) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (('*,䯃	')GLOB(vt1.c0)) END);
SELECT * FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c1) NOTNULL)  WHEN ((vt0.c1)==(vt0.c1)) THEN ((0.07717153850029257) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (('*,䯃	')GLOB(vt1.c0)) END WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c1) NOTNULL)  WHEN ((vt0.c1)=(vt0.c1)) THEN ((0.07717153850029257) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (('*,䯃	')GLOB(vt1.c0)) END);
SELECT * FROM vt1 CROSS JOIN vt0 ON CASE ((vt0.c1) NOTNULL)  WHEN ((vt0.c1)==(vt0.c1)) THEN ((0.07717153850029257) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (('*,䯃	')GLOB(vt1.c0)) END WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT * FROM vt0, vt1 WHERE (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) BETWEEN (COALESCE(vt0.c1, vt0.c0)) AND ('-1526802173')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) BETWEEN (COALESCE(vt0.c1, vt0.c0)) AND ('-1526802173'))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) BETWEEN (COALESCE(vt0.c1, vt0.c0)) AND ('-1526802173')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) BETWEEN (COALESCE(vt0.c1, vt0.c0)) AND ('-1526802173'))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) BETWEEN (COALESCE(vt0.c1, vt0.c0)) AND ('-1526802173')));
SELECT * FROM vt1 WHERE (((ABS(0.5478824390966697))<=(((vt1.c0)-(vt1.c0))))) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS LAST, x'0a3a' ASC;
SELECT SUM(count) FROM (SELECT ((((ABS(0.5478824390966697))<=(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS LAST, x'0a3a' ASC);
SELECT * FROM vt1 WHERE (((ABS(0.5478824390966697))<=(((vt1.c0)-(vt1.c0))))) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS LAST, x'0a3a' ASC;
SELECT SUM(count) FROM (SELECT ((((ABS(0.5478824390966697))<=(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS LAST, x'0a3a' ASC);
SELECT * FROM vt1 WHERE (((ABS(0.5478824390966697))<=(((vt1.c0)-(vt1.c0))))) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS LAST, x'0a3a' ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKELIHOOD(vt0.c1 COLLATE NOCASE, 0.34539447900784404));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt0.c1 COLLATE NOCASE, 0.34539447900784404)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKELIHOOD(vt0.c1 COLLATE NOCASE, 0.34539447900784404));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt0.c1 COLLATE NOCASE, 0.34539447900784404)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKELIHOOD(vt0.c1 COLLATE NOCASE, 0.34539447900784404));
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN (SQLITE_SOURCE_ID(), vt0.c0))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN (SQLITE_SOURCE_ID(), vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN (SQLITE_SOURCE_ID(), vt0.c0))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN (SQLITE_SOURCE_ID(), vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN (SQLITE_SOURCE_ID(), vt0.c0))) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (vt0.c0 IN ()), vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()), vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (vt0.c0 IN ()), vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()), vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (vt0.c0 IN ()), vt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN ((NULL) BETWEEN (x'3cf4') AND (vt0.c1)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN SQLITE_COMPILEOPTION_GET(vt0.c1) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (0.4796596795281619, vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt0.c0)) THEN ((NULL) BETWEEN (x'3cf4') AND (vt0.c1)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN SQLITE_COMPILEOPTION_GET(vt0.c1) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (0.4796596795281619, vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN ((NULL) BETWEEN (x'3cf4') AND (vt0.c1)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN SQLITE_COMPILEOPTION_GET(vt0.c1) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (0.4796596795281619, vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt0.c0)) THEN ((NULL) BETWEEN (x'3cf4') AND (vt0.c1)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN SQLITE_COMPILEOPTION_GET(vt0.c1) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (0.4796596795281619, vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN ((NULL) BETWEEN (x'3cf4') AND (vt0.c1)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN SQLITE_COMPILEOPTION_GET(vt0.c1) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (0.4796596795281619, vt0.c1)) END);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1 COLLATE BINARY, ((vt0.c1)>(vt0.c1)))) AND ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, (('NbS') IS TRUE)))) WHERE (IFNULL((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))  WHEN CAST(vt1.c0 AS TEXT) THEN (- (vt0.c1)) ELSE vt1.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1 COLLATE BINARY, ((vt0.c1)>(vt0.c1)))) AND ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, (('NbS') IS TRUE)))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))  WHEN CAST(vt1.c0 AS TEXT) THEN (- (vt0.c1)) ELSE vt1.c0 END ASC);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1 COLLATE BINARY, ((vt0.c1)>(vt0.c1)))) AND ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, (('NbS') IS TRUE)))) WHERE (IFNULL((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))  WHEN CAST(vt1.c0 AS TEXT) THEN (- (vt0.c1)) ELSE vt1.c0 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1 COLLATE BINARY, ((vt0.c1)>(vt0.c1)))) AND ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, (('NbS') IS TRUE)))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))  WHEN CAST(vt1.c0 AS TEXT) THEN (- (vt0.c1)) ELSE vt1.c0 END ASC);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1 COLLATE BINARY, ((vt0.c1)>(vt0.c1)))) AND ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)), CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, (('NbS') IS TRUE)))) WHERE (IFNULL((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))  WHEN CAST(vt1.c0 AS TEXT) THEN (- (vt0.c1)) ELSE vt1.c0 END ASC;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 INNER JOIN vt0 ON CASE ((('1935523473', vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0)))  WHEN (NOT (vt0.c0)) THEN ((vt0.c1)!=(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(vt0.c0) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN UNLIKELY(DISTINCT vt0.c1) END WHERE (CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY CASE WHEN (+ (vt0.c1)) THEN x'' ELSE ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)) END  NULLS LAST, CAST(vt0.c1 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE ((('1935523473', vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0)))  WHEN (NOT (vt0.c0)) THEN ((vt0.c1)<>(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(vt0.c0) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN UNLIKELY(DISTINCT vt0.c1) END ORDER BY CASE WHEN (+ (vt0.c1)) THEN x'' ELSE ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)) END  NULLS LAST, CAST(vt0.c1 AS BLOB));
SELECT * FROM vt1 INNER JOIN vt0 ON CASE ((('1935523473', vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0)))  WHEN (NOT (vt0.c0)) THEN ((vt0.c1)!=(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(vt0.c0) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN UNLIKELY(DISTINCT vt0.c1) END WHERE (CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY CASE WHEN (+ (vt0.c1)) THEN x'' ELSE ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)) END  NULLS LAST, CAST(vt0.c1 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE ((('1935523473', vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0)))  WHEN (NOT (vt0.c0)) THEN ((vt0.c1)<>(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(vt0.c0) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN UNLIKELY(DISTINCT vt0.c1) END ORDER BY CASE WHEN (+ (vt0.c1)) THEN x'' ELSE ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)) END  NULLS LAST, CAST(vt0.c1 AS BLOB));
SELECT * FROM vt1 INNER JOIN vt0 ON CASE ((('1935523473', vt1.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0)))  WHEN (NOT (vt0.c0)) THEN ((vt0.c1)!=(vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN UNLIKELY(vt0.c0) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN UNLIKELY(DISTINCT vt0.c1) END WHERE (CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) ORDER BY CASE WHEN (+ (vt0.c1)) THEN x'' ELSE ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c1)))AND(vt0.c0)) END  NULLS LAST, CAST(vt0.c1 AS BLOB);
SELECT * FROM vt1 WHERE (((((x'') NOT NULL)) NOT BETWEEN (UNLIKELY(vt1.c0)) AND ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, '2FHx'))))));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT NULL)) NOT BETWEEN (UNLIKELY(vt1.c0)) AND ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, '2FHx')))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((x'') NOT NULL)) NOT BETWEEN (UNLIKELY(vt1.c0)) AND ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, '2FHx'))))));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT NULL)) NOT BETWEEN (UNLIKELY(vt1.c0)) AND ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, '2FHx')))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((x'') NOT NULL)) NOT BETWEEN (UNLIKELY(vt1.c0)) AND ((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, '2FHx'))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))==(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))=(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))==(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))=(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))==(((vt0.c1) IS TRUE))));
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR('LD')))OR(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS REAL))))AND(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (TRIM(vt1.c0))) ASC, vt1.c0 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR('LD')))OR(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS REAL))))AND(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (TRIM(vt1.c0))) ASC, vt1.c0 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR('LD')))OR(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS REAL))))AND(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (TRIM(vt1.c0))) ASC, vt1.c0 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR('LD')))OR(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS REAL))))AND(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (TRIM(vt1.c0))) ASC, vt1.c0 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR('LD')))OR(vt1.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS REAL))))AND(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (TRIM(vt1.c0))) ASC, vt1.c0 COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) AS INTEGER)) ORDER BY ((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))!=(((vt0.c1)<(NULL)))) DESC, CAST(x'' AS REAL) ASC, (((vt0.c0, '628541792', vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN x'' ELSE vt1.c0 END, LAST_INSERT_ROWID(), (x'1e44' IN (vt0.c0)))) AND (((('}~}xXk9')>>(-1634245161)), CAST(vt0.c0 AS NUMERIC), (((vt0.c1, x'7790ee11', vt0.c0, vt0.c0, 'NaN墀.oퟟ{')) BETWEEN ((vt0.c0, 'pvnBV_u', vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, '612846293', vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))<>(((vt0.c1)<(NULL)))) DESC, CAST(x'' AS REAL) ASC, (((vt0.c0, '628541792', vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN x'' ELSE vt1.c0 END, LAST_INSERT_ROWID(), (x'1e44' IN (vt0.c0)))) AND (((('}~}xXk9')>>(-1634245161)), CAST(vt0.c0 AS NUMERIC), (((vt0.c1, x'7790ee11', vt0.c0, vt0.c0, 'NaN墀.oퟟ{')) BETWEEN ((vt0.c0, 'pvnBV_u', vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, '612846293', vt0.c0, vt0.c1)))))));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) AS INTEGER)) ORDER BY ((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))!=(((vt0.c1)<(NULL)))) DESC, CAST(x'' AS REAL) ASC, (((vt0.c0, '628541792', vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN x'' ELSE vt1.c0 END, LAST_INSERT_ROWID(), (x'1e44' IN (vt0.c0)))) AND (((('}~}xXk9')>>(-1634245161)), CAST(vt0.c0 AS NUMERIC), (((vt0.c1, x'7790ee11', vt0.c0, vt0.c0, 'NaN墀.oퟟ{')) BETWEEN ((vt0.c0, 'pvnBV_u', vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, '612846293', vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))<>(((vt0.c1)<(NULL)))) DESC, CAST(x'' AS REAL) ASC, (((vt0.c0, '628541792', vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN x'' ELSE vt1.c0 END, LAST_INSERT_ROWID(), (x'1e44' IN (vt0.c0)))) AND (((('}~}xXk9')>>(-1634245161)), CAST(vt0.c0 AS NUMERIC), (((vt0.c1, x'7790ee11', vt0.c0, vt0.c0, 'NaN墀.oퟟ{')) BETWEEN ((vt0.c0, 'pvnBV_u', vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, '612846293', vt0.c0, vt0.c1)))))));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) AS INTEGER)) ORDER BY ((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))!=(((vt0.c1)<(NULL)))) DESC, CAST(x'' AS REAL) ASC, (((vt0.c0, '628541792', vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN x'' ELSE vt1.c0 END, LAST_INSERT_ROWID(), (x'1e44' IN (vt0.c0)))) AND (((('}~}xXk9')>>(-1634245161)), CAST(vt0.c0 AS NUMERIC), (((vt0.c1, x'7790ee11', vt0.c0, vt0.c0, 'NaN墀.oퟟ{')) BETWEEN ((vt0.c0, 'pvnBV_u', vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, '612846293', vt0.c0, vt0.c1))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((((0.29074125833421016)OR(vt0.c1)))OR(vt1.c0))) AND (CASE WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN (((((0.29074125833421016)OR(vt0.c1)))OR(vt1.c0))) AND (CASE WHEN vt0.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((((0.29074125833421016)OR(vt0.c1)))OR(vt1.c0))) AND (CASE WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN (((((0.29074125833421016)OR(vt0.c1)))OR(vt1.c0))) AND (CASE WHEN vt0.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((((0.29074125833421016)OR(vt0.c1)))OR(vt1.c0))) AND (CASE WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) ORDER BY LOWER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY LOWER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) ORDER BY LOWER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY LOWER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) ORDER BY LOWER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) DESC;
SELECT * FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOTNULL)) ORDER BY CAST((NOT (vt1.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY CAST((NOT (vt1.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOTNULL)) ORDER BY CAST((NOT (vt1.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY CAST((NOT (vt1.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOTNULL)) ORDER BY CAST((NOT (vt1.c0)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE)) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c0))) AND (CASE WHEN 0.3096079920297624 THEN '' END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c0))) AND (CASE WHEN 0.3096079920297624 THEN '' END)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE)) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c0))) AND (CASE WHEN 0.3096079920297624 THEN '' END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c0))) AND (CASE WHEN 0.3096079920297624 THEN '' END)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE)) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c0))) AND (CASE WHEN 0.3096079920297624 THEN '' END)) ASC;
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((((((NOT (vt0.c0)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END)))OR(((vt0.c0)|(vt1.c0)))))OR((~ (vt1.c0)))))OR(((vt0.c0) ISNULL)))) ORDER BY (((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c1))))>((LIKELY(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((NOT (vt0.c0)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END)))OR(((vt0.c0)|(vt1.c0)))))OR((~ (vt1.c0)))))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c1))))>((LIKELY(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((((((NOT (vt0.c0)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END)))OR(((vt0.c0)|(vt1.c0)))))OR((~ (vt1.c0)))))OR(((vt0.c0) ISNULL)))) ORDER BY (((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c1))))>((LIKELY(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((NOT (vt0.c0)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END)))OR(((vt0.c0)|(vt1.c0)))))OR((~ (vt1.c0)))))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c1))))>((LIKELY(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((((((NOT (vt0.c0)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END)))OR(((vt0.c0)|(vt1.c0)))))OR((~ (vt1.c0)))))OR(((vt0.c0) ISNULL)))) ORDER BY (((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c1))))>((LIKELY(vt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (NULL)));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt1.c0)AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt1.c0)AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt1.c0)AND(vt0.c0)) AS BLOB));
SELECT ALL * FROM vt0, vt1 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c0)GLOB(vt1.c0)) THEN ((vt1.c0)+(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c0)GLOB(vt1.c0)) THEN ((vt1.c0)+(vt0.c1)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c0)GLOB(vt1.c0)) THEN ((vt1.c0)+(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c0)GLOB(vt1.c0)) THEN ((vt1.c0)+(vt0.c1)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c0)GLOB(vt1.c0)) THEN ((vt1.c0)+(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LTRIM(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((LTRIM(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LTRIM(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((LTRIM(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LTRIM(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END));
SELECT * FROM vt1 WHERE (0x695d87e6);
SELECT SUM(count) FROM (SELECT ALL ((0X695d87e6) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0x695d87e6);
SELECT SUM(count) FROM (SELECT ALL ((0X695d87e6) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0x695d87e6);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)%(vt0.c0)))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt0.c0)))AND(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)%(vt0.c0)))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt0.c0)))AND(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)%(vt0.c0)))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN 0.03996492517194117 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY  NULLS FIRST, (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN 0.03996492517194117 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY  NULLS FIRST, (~ (vt0.c0)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN 0.03996492517194117 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY  NULLS FIRST, (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN 0.03996492517194117 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY  NULLS FIRST, (~ (vt0.c0)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c1 AS TEXT)) ORDER BY CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN 0.03996492517194117 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY  NULLS FIRST, (~ (vt0.c0));
SELECT * FROM vt0 WHERE (((((0.7277273399619729)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) AND (((((vt0.c1)AND('-527110682')))OR(vt0.c0))))) ORDER BY (- (TRIM(DISTINCT '2045045461')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.7277273399619729)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) AND (((((vt0.c1)AND('-527110682')))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- (TRIM(DISTINCT '2045045461')))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((0.7277273399619729)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) AND (((((vt0.c1)AND('-527110682')))OR(vt0.c0))))) ORDER BY (- (TRIM(DISTINCT '2045045461')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.7277273399619729)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) AND (((((vt0.c1)AND('-527110682')))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- (TRIM(DISTINCT '2045045461')))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((0.7277273399619729)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) AND (((((vt0.c1)AND('-527110682')))OR(vt0.c0))))) ORDER BY (- (TRIM(DISTINCT '2045045461')))  NULLS LAST;
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 1.071705804E9 END)||(LTRIM(vt0.c0)))) ORDER BY CASE WHEN NULL THEN vt0.c0 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END DESC  NULLS LAST, ((vt0.c1 IN ()) IN ()) DESC, ((((vt0.c1)>>('71228522'))) BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND (CASE WHEN NULL THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 1.071705804E9 END)||(LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN vt0.c0 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END DESC  NULLS LAST, ((vt0.c1 IN ()) IN ()) DESC, ((((vt0.c1)>>('71228522'))) BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND (CASE WHEN NULL THEN vt0.c0 END)) DESC);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 1.071705804E9 END)||(LTRIM(vt0.c0)))) ORDER BY CASE WHEN NULL THEN vt0.c0 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END DESC  NULLS LAST, ((vt0.c1 IN ()) IN ()) DESC, ((((vt0.c1)>>('71228522'))) BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND (CASE WHEN NULL THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 1.071705804E9 END)||(LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN vt0.c0 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END DESC  NULLS LAST, ((vt0.c1 IN ()) IN ()) DESC, ((((vt0.c1)>>('71228522'))) BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND (CASE WHEN NULL THEN vt0.c0 END)) DESC);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 1.071705804E9 END)||(LTRIM(vt0.c0)))) ORDER BY CASE WHEN NULL THEN vt0.c0 ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END DESC  NULLS LAST, ((vt0.c1 IN ()) IN ()) DESC, ((((vt0.c1)>>('71228522'))) BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND (CASE WHEN NULL THEN vt0.c0 END)) DESC;
SELECT COUNT(*) FROM vt1 WHERE ((NOT ((~ (vt1.c0))))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT COUNT(*) FROM vt1 WHERE ((NOT ((~ (vt1.c0))))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT COUNT(*) FROM vt1 WHERE ((NOT ((~ (vt1.c0))))) ORDER BY vt1.c0 ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((- (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY CASE ((vt1.c0)>(vt1.c0))  WHEN ((((vt0.c1)AND(-7.70298273E8)))AND(vt0.c1)) THEN CAST(vt0.c1 AS INTEGER) WHEN CAST(vt0.c0 AS INTEGER) THEN (vt0.c1 IN ()) WHEN CAST(vt0.c0 AS TEXT) THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END END ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt1.c0)>(vt1.c0))  WHEN ((((vt0.c1)AND(-7.70298273E8)))AND(vt0.c1)) THEN CAST(vt0.c1 AS INTEGER) WHEN CAST(vt0.c0 AS INTEGER) THEN (vt0.c1 IN ()) WHEN CAST(vt0.c0 AS TEXT) THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END END ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((- (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY CASE ((vt1.c0)>(vt1.c0))  WHEN ((((vt0.c1)AND(-7.70298273E8)))AND(vt0.c1)) THEN CAST(vt0.c1 AS INTEGER) WHEN CAST(vt0.c0 AS INTEGER) THEN (vt0.c1 IN ()) WHEN CAST(vt0.c0 AS TEXT) THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END END ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt1.c0)>(vt1.c0))  WHEN ((((vt0.c1)AND(-7.70298273E8)))AND(vt0.c1)) THEN CAST(vt0.c1 AS INTEGER) WHEN CAST(vt0.c0 AS INTEGER) THEN (vt0.c1 IN ()) WHEN CAST(vt0.c0 AS TEXT) THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END END ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((- (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY CASE ((vt1.c0)>(vt1.c0))  WHEN ((((vt0.c1)AND(-7.70298273E8)))AND(vt0.c1)) THEN CAST(vt0.c1 AS INTEGER) WHEN CAST(vt0.c0 AS INTEGER) THEN (vt0.c1 IN ()) WHEN CAST(vt0.c0 AS TEXT) THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END END ASC;
SELECT ALL * FROM vt0 WHERE (((-770298273)<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((vt0.c1)+(vt0.c1)))IS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((-770298273)<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)+(vt0.c1)))IS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((-770298273)<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((vt0.c1)+(vt0.c1)))IS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((-770298273)<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)+(vt0.c1)))IS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((-770298273)<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((vt0.c1)+(vt0.c1)))IS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (COALESCE(CASE vt1.c0  WHEN '-1616247630' THEN vt1.c0 ELSE 0x17c9e5b4 END, (~ (vt1.c0)), ((vt1.c0)<(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 7.1228522E7 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE vt1.c0  WHEN '-1616247630' THEN vt1.c0 ELSE 0x17c9e5b4 END, (~ (vt1.c0)), ((vt1.c0)<(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 7.1228522E7 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (COALESCE(CASE vt1.c0  WHEN '-1616247630' THEN vt1.c0 ELSE 0x17c9e5b4 END, (~ (vt1.c0)), ((vt1.c0)<(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 7.1228522E7 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE vt1.c0  WHEN '-1616247630' THEN vt1.c0 ELSE 0x17c9e5b4 END, (~ (vt1.c0)), ((vt1.c0)<(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 7.1228522E7 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (COALESCE(CASE vt1.c0  WHEN '-1616247630' THEN vt1.c0 ELSE 0x17c9e5b4 END, (~ (vt1.c0)), ((vt1.c0)<(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 7.1228522E7 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT * FROM vt1 WHERE ('q5#');
SELECT SUM(count) FROM (SELECT ALL (('q5#') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('q5#');
SELECT SUM(count) FROM (SELECT ALL (('q5#') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('q5#');
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))IS NOT(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))IS NOT(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))IS NOT(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))IS NOT(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))IS NOT(vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0, vt1 WHERE (NULLIF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt1.c0)|(NULL)))) ORDER BY ((~ (vt0.c1)) IN (vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt1.c0)|(NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((~ (vt0.c1)) IN (vt1.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (NULLIF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt1.c0)|(NULL)))) ORDER BY ((~ (vt0.c1)) IN (vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt1.c0)|(NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((~ (vt0.c1)) IN (vt1.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (NULLIF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt1.c0)|(NULL)))) ORDER BY ((~ (vt0.c1)) IN (vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))>((+ (x'05a2'))))) ORDER BY CASE (NOT (vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)==('0.23370974470895078')) ELSE CAST(x'' AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1)))>((+ (x'05a2'))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)==('0.23370974470895078')) ELSE CAST(x'' AS REAL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))>((+ (x'05a2'))))) ORDER BY CASE (NOT (vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)==('0.23370974470895078')) ELSE CAST(x'' AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1)))>((+ (x'05a2'))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)==('0.23370974470895078')) ELSE CAST(x'' AS REAL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))>((+ (x'05a2'))))) ORDER BY CASE (NOT (vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)==('0.23370974470895078')) ELSE CAST(x'' AS REAL) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (-2.95564199E8);
SELECT SUM(count) FROM (SELECT ((-2.95564199E8) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (-2.95564199E8);
SELECT SUM(count) FROM (SELECT ((-2.95564199E8) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (-2.95564199E8);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT ALL * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (x'');
SELECT ALL * FROM vt1 WHERE ((- ((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- ((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- ((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT * FROM vt1, vt0 NOT INDEXED WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))>>(vt0.c0 COLLATE BINARY))) ORDER BY CAST(ABS(DISTINCT vt0.c1) AS NUMERIC) ASC, (NULL COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))>>(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(ABS(DISTINCT vt0.c1) AS NUMERIC) ASC, (NULL COLLATE RTRIM IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 NOT INDEXED WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))>>(vt0.c0 COLLATE BINARY))) ORDER BY CAST(ABS(DISTINCT vt0.c1) AS NUMERIC) ASC, (NULL COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))>>(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(ABS(DISTINCT vt0.c1) AS NUMERIC) ASC, (NULL COLLATE RTRIM IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 NOT INDEXED WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))>>(vt0.c0 COLLATE BINARY))) ORDER BY CAST(ABS(DISTINCT vt0.c1) AS NUMERIC) ASC, (NULL COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN 0.9939401210273835 THEN vt0.c1 END)-(CAST(vt0.c0 AS TEXT)))) ORDER BY vt1.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN 0.9939401210273835 THEN vt0.c1 END)-(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN 0.9939401210273835 THEN vt0.c1 END)-(CAST(vt0.c0 AS TEXT)))) ORDER BY vt1.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN 0.9939401210273835 THEN vt0.c1 END)-(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN 0.9939401210273835 THEN vt0.c1 END)-(CAST(vt0.c0 AS TEXT)))) ORDER BY vt1.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE 0.7721260995129269 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE 0.7721260995129269 END IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE 0.7721260995129269 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE 0.7721260995129269 END IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE 0.7721260995129269 END IN ()));
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(CAST(x'' AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(x'' AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(CAST(x'' AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(x'' AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(CAST(x'' AS NUMERIC)));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON UNLIKELY(DISTINCT (NOT (vt1.c0))) WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)-(vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)-(vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON UNLIKELY(DISTINCT (NOT (vt1.c0))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON UNLIKELY(DISTINCT (NOT (vt1.c0))) WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)-(vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)-(vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON UNLIKELY(DISTINCT (NOT (vt1.c0))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON UNLIKELY(DISTINCT (NOT (vt1.c0))) WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)-(vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)%(UNLIKELY(vt1.c0)))) ORDER BY 0Xffffffffee620c59;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)%(UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0Xffffffffee620c59);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)%(UNLIKELY(vt1.c0)))) ORDER BY 0Xffffffffee620c59;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)%(UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0Xffffffffee620c59);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)%(UNLIKELY(vt1.c0)))) ORDER BY 0Xffffffffee620c59;
SELECT * FROM vt1 CROSS JOIN vt0 ON (('399107508') NOT BETWEEN ('0.00861213542164141') AND (x'')) WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN vt1.c0 COLLATE RTRIM END) ORDER BY ((((CASE WHEN vt1.c0 THEN vt0.c1 END)AND(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))) DESC  NULLS FIRST, (((((vt1.c0, vt0.c1, vt0.c1))>((vt0.c0, vt0.c1, vt0.c1))))>(((vt1.c0) BETWEEN (x'') AND (vt0.c1)))) ASC, (((((vt1.c0) IS FALSE), ((vt0.c0) ISNULL), ((vt0.c1)<<(vt1.c0))))!=(((NOT (vt0.c0)), '29074887', CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (('399107508') NOT BETWEEN ('0.00861213542164141') AND (x'')) ORDER BY ((((CASE WHEN vt1.c0 THEN vt0.c1 END)AND(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))) DESC  NULLS FIRST, (((((vt1.c0, vt0.c1, vt0.c1))>((vt0.c0, vt0.c1, vt0.c1))))>(((vt1.c0) BETWEEN (x'') AND (vt0.c1)))) ASC, (((((vt1.c0) IS FALSE), ((vt0.c0) ISNULL), ((vt0.c1)<<(vt1.c0))))!=(((NOT (vt0.c0)), '29074887', CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN vt0 ON (('399107508') NOT BETWEEN ('0.00861213542164141') AND (x'')) WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN vt1.c0 COLLATE RTRIM END) ORDER BY ((((CASE WHEN vt1.c0 THEN vt0.c1 END)AND(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))) DESC  NULLS FIRST, (((((vt1.c0, vt0.c1, vt0.c1))>((vt0.c0, vt0.c1, vt0.c1))))>(((vt1.c0) BETWEEN (x'') AND (vt0.c1)))) ASC, (((((vt1.c0) IS FALSE), ((vt0.c0) ISNULL), ((vt0.c1)<<(vt1.c0))))!=(((NOT (vt0.c0)), '29074887', CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (('399107508') NOT BETWEEN ('0.00861213542164141') AND (x'')) ORDER BY ((((CASE WHEN vt1.c0 THEN vt0.c1 END)AND(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))) DESC  NULLS FIRST, (((((vt1.c0, vt0.c1, vt0.c1))>((vt0.c0, vt0.c1, vt0.c1))))>(((vt1.c0) BETWEEN (x'') AND (vt0.c1)))) ASC, (((((vt1.c0) IS FALSE), ((vt0.c0) ISNULL), ((vt0.c1)<<(vt1.c0))))!=(((NOT (vt0.c0)), '29074887', CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN vt0 ON (('399107508') NOT BETWEEN ('0.00861213542164141') AND (x'')) WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN vt1.c0 COLLATE RTRIM END) ORDER BY ((((CASE WHEN vt1.c0 THEN vt0.c1 END)AND(vt1.c0)))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))) DESC  NULLS FIRST, (((((vt1.c0, vt0.c1, vt0.c1))>((vt0.c0, vt0.c1, vt0.c1))))>(((vt1.c0) BETWEEN (x'') AND (vt0.c1)))) ASC, (((((vt1.c0) IS FALSE), ((vt0.c0) ISNULL), ((vt0.c1)<<(vt1.c0))))!=(((NOT (vt0.c0)), '29074887', CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ())))>((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE RTRIM, ((vt1.c0) IS FALSE)))), (((((vt1.c0) NOTNULL)))<((((vt1.c0) BETWEEN (vt1.c0) AND ('-503905705')))))  NULLS LAST, ABS(0.34799137477578124) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ())))>((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE RTRIM, ((vt1.c0) IS FALSE)))), (((((vt1.c0) NOTNULL)))<((((vt1.c0) BETWEEN (vt1.c0) AND ('-503905705')))))  NULLS LAST, ABS(0.34799137477578124) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ())))>((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE RTRIM, ((vt1.c0) IS FALSE)))), (((((vt1.c0) NOTNULL)))<((((vt1.c0) BETWEEN (vt1.c0) AND ('-503905705')))))  NULLS LAST, ABS(0.34799137477578124) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ())))>((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE RTRIM, ((vt1.c0) IS FALSE)))), (((((vt1.c0) NOTNULL)))<((((vt1.c0) BETWEEN (vt1.c0) AND ('-503905705')))))  NULLS LAST, ABS(0.34799137477578124) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (vt1.c0 IN ()), (vt1.c0 IN ())))>((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), vt1.c0 COLLATE RTRIM, ((vt1.c0) IS FALSE)))), (((((vt1.c0) NOTNULL)))<((((vt1.c0) BETWEEN (vt1.c0) AND ('-503905705')))))  NULLS LAST, ABS(0.34799137477578124) DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) END);
SELECT * FROM vt1, vt0 WHERE (CASE CASE WHEN 0xffffffff8abc9a39 THEN vt1.c0 END  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END ELSE ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) END) ORDER BY (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN 0xffffffff8abc9a39 THEN vt1.c0 END  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END ELSE ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT * FROM vt1, vt0 WHERE (CASE CASE WHEN 0xffffffff8abc9a39 THEN vt1.c0 END  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END ELSE ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) END) ORDER BY (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN 0xffffffff8abc9a39 THEN vt1.c0 END  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END ELSE ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT * FROM vt1, vt0 WHERE (CASE CASE WHEN 0xffffffff8abc9a39 THEN vt1.c0 END  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END ELSE ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) END) ORDER BY (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ());
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT)  NULLS FIRST, highlight(((vt0.c1)>('1')), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), CAST(vt0.c1 AS BLOB), ((vt0.c1)LIKE(x'0676'))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT)  NULLS FIRST, highlight(((vt0.c1)>('1')), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), CAST(vt0.c1 AS BLOB), ((vt0.c1)LIKE(x'0676'))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT)  NULLS FIRST, highlight(((vt0.c1)>('1')), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), CAST(vt0.c1 AS BLOB), ((vt0.c1)LIKE(x'0676'))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT)  NULLS FIRST, highlight(((vt0.c1)>('1')), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), CAST(vt0.c1 AS BLOB), ((vt0.c1)LIKE(x'0676'))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL, (NOT (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>((UNLIKELY(DISTINCT vt0.c0), (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), (vt0.c1 IN (vt0.c1, vt0.c1)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))<>(((vt0.c0)/(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL, (NOT (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>((UNLIKELY(DISTINCT vt0.c0), (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), (vt0.c1 IN (vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))!=(((vt0.c0)/(vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL, (NOT (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>((UNLIKELY(DISTINCT vt0.c0), (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), (vt0.c1 IN (vt0.c1, vt0.c1)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))<>(((vt0.c0)/(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL, (NOT (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>((UNLIKELY(DISTINCT vt0.c0), (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), (vt0.c1 IN (vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))!=(((vt0.c0)/(vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL, (NOT (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>((UNLIKELY(DISTINCT vt0.c0), (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), (vt0.c1 IN (vt0.c1, vt0.c1)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))<>(((vt0.c0)/(vt0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))>=(x'' COLLATE RTRIM))) ORDER BY (((((NULL) ISNULL)))>=((vt1.c0))) ASC  NULLS FIRST, 'p)Uj䚐>' DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))>=(x'' COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((NULL) ISNULL)))>=((vt1.c0))) ASC  NULLS FIRST, 'p)Uj䚐>' DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))>=(x'' COLLATE RTRIM))) ORDER BY (((((NULL) ISNULL)))>=((vt1.c0))) ASC  NULLS FIRST, 'p)Uj䚐>' DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))>=(x'' COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((NULL) ISNULL)))>=((vt1.c0))) ASC  NULLS FIRST, 'p)Uj䚐>' DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))>=(x'' COLLATE RTRIM))) ORDER BY (((((NULL) ISNULL)))>=((vt1.c0))) ASC  NULLS FIRST, 'p)Uj䚐>' DESC;
SELECT ALL * FROM vt1 WHERE (1536164869) ORDER BY (- ('柳gxJ+X_}~')) DESC  NULLS FIRST, (+ (((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1536164869) IS TRUE)  as count FROM vt1 ORDER BY (- ('柳gxJ+X_}~')) DESC  NULLS FIRST, (+ (((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (1536164869) ORDER BY (- ('柳gxJ+X_}~')) DESC  NULLS FIRST, (+ (((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1536164869) IS TRUE)  as count FROM vt1 ORDER BY (- ('柳gxJ+X_}~')) DESC  NULLS FIRST, (+ (((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (1536164869) ORDER BY (- ('柳gxJ+X_}~')) DESC  NULLS FIRST, (+ (((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'')||('')));
SELECT SUM(count) FROM (SELECT ((((x'')||(''))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'')||('')));
SELECT SUM(count) FROM (SELECT ((((x'')||(''))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'')||('')));
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0)|(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt1.c0)|(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0)|(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt1.c0)|(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0)|(vt1.c0))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) ORDER BY ((((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))>=(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(x'1a92')))OR(vt1.c0)))) ASC  NULLS FIRST, CAST('1250638255' AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))>=(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(x'1a92')))OR(vt1.c0)))) ASC  NULLS FIRST, CAST('1250638255' AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) ORDER BY ((((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))>=(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(x'1a92')))OR(vt1.c0)))) ASC  NULLS FIRST, CAST('1250638255' AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))>=(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(x'1a92')))OR(vt1.c0)))) ASC  NULLS FIRST, CAST('1250638255' AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((vt1.c0) IS TRUE) ELSE ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END) ORDER BY ((((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))>=(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(x'1a92')))OR(vt1.c0)))) ASC  NULLS FIRST, CAST('1250638255' AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (x'aa8d');
SELECT SUM(count) FROM (SELECT ALL ((x'aa8d') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (x'aa8d');
SELECT SUM(count) FROM (SELECT ALL ((x'aa8d') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (x'aa8d');
SELECT * FROM vt1, vt0 WHERE (CASE ((vt0.c0)==(vt0.c0))  WHEN (((2.006582886E9, vt0.c0, vt1.c0, 0.5366797930095948, ''))<=((vt1.c0, vt0.c1, vt0.c0, vt1.c0, x''))) THEN ((vt1.c0) NOTNULL) END) ORDER BY ((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)=(vt0.c0))  WHEN (((2.006582886E9, vt0.c0, vt1.c0, 0.5366797930095948, ''))<=((vt1.c0, vt0.c1, vt0.c0, vt1.c0, x''))) THEN ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE NOCASE ASC);
SELECT * FROM vt1, vt0 WHERE (CASE ((vt0.c0)==(vt0.c0))  WHEN (((2.006582886E9, vt0.c0, vt1.c0, 0.5366797930095948, ''))<=((vt1.c0, vt0.c1, vt0.c0, vt1.c0, x''))) THEN ((vt1.c0) NOTNULL) END) ORDER BY ((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)=(vt0.c0))  WHEN (((2.006582886E9, vt0.c0, vt1.c0, 0.5366797930095948, ''))<=((vt1.c0, vt0.c1, vt0.c0, vt1.c0, x''))) THEN ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE NOCASE ASC);
SELECT * FROM vt1, vt0 WHERE (CASE ((vt0.c0)==(vt0.c0))  WHEN (((2.006582886E9, vt0.c0, vt1.c0, 0.5366797930095948, ''))<=((vt1.c0, vt0.c1, vt0.c0, vt1.c0, x''))) THEN ((vt1.c0) NOTNULL) END) ORDER BY ((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1 COLLATE RTRIM)GLOB(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM)GLOB(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1 COLLATE RTRIM)GLOB(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM)GLOB(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1 COLLATE RTRIM)GLOB(CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN (~ (vt0.c1)) THEN 'pvnbv_u' ELSE vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN (~ (vt0.c1)) THEN 'pvnbv_u' ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN (~ (vt0.c1)) THEN 'pvnbv_u' ELSE vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN (~ (vt0.c1)) THEN 'pvnbv_u' ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN (~ (vt0.c1)) THEN 'pvnbv_u' ELSE vt0.c0 COLLATE RTRIM END);
SELECT * FROM vt1, vt0 WHERE (((0x7d2d7afa) BETWEEN ((+ (vt1.c0))) AND (((vt0.c1)OR(vt1.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt1.c0))>=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, NULL))))) AND (('0.3936346977526911' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((0x7d2d7afa) BETWEEN ((+ (vt1.c0))) AND (((vt0.c1)OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt1.c0))>=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, NULL))))) AND (('0.3936346977526911' COLLATE RTRIM))));
SELECT * FROM vt1, vt0 WHERE (((0x7d2d7afa) BETWEEN ((+ (vt1.c0))) AND (((vt0.c1)OR(vt1.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt1.c0))>=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, NULL))))) AND (('0.3936346977526911' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((0x7d2d7afa) BETWEEN ((+ (vt1.c0))) AND (((vt0.c1)OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt1.c0))>=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, NULL))))) AND (('0.3936346977526911' COLLATE RTRIM))));
SELECT * FROM vt1, vt0 WHERE (((0x7d2d7afa) BETWEEN ((+ (vt1.c0))) AND (((vt0.c1)OR(vt1.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt1.c0))>=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, NULL))))) AND (('0.3936346977526911' COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN ())))>=((vt0.c1)))) ORDER BY vt0.c1  NULLS FIRST, (NOT (vt0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 IN ())))>=((vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, (NOT (vt0.c1 COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN ())))>=((vt0.c1)))) ORDER BY vt0.c1  NULLS FIRST, (NOT (vt0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 IN ())))>=((vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, (NOT (vt0.c1 COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN ())))>=((vt0.c1)))) ORDER BY vt0.c1  NULLS FIRST, (NOT (vt0.c1 COLLATE RTRIM)) DESC;
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c0) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((~ (vt0.c1))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c0) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((~ (vt0.c1))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c0) BETWEEN (ABS(DISTINCT vt0.c0)) AND ((~ (vt0.c1))))) ORDER BY vt0.c0;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c1 END) NOTNULL) WHERE (((x'' COLLATE BINARY) NOT NULL)) ORDER BY vt0.c1 ASC  NULLS LAST, CAST(((vt0.c1)%(vt0.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c1 END) NOTNULL) ORDER BY vt0.c1 ASC  NULLS LAST, CAST(((vt0.c1)%(vt0.c1)) AS INTEGER) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c1 END) NOTNULL) WHERE (((x'' COLLATE BINARY) NOT NULL)) ORDER BY vt0.c1 ASC  NULLS LAST, CAST(((vt0.c1)%(vt0.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c1 END) NOTNULL) ORDER BY vt0.c1 ASC  NULLS LAST, CAST(((vt0.c1)%(vt0.c1)) AS INTEGER) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c1 END) NOTNULL) WHERE (((x'' COLLATE BINARY) NOT NULL)) ORDER BY vt0.c1 ASC  NULLS LAST, CAST(((vt0.c1)%(vt0.c1)) AS INTEGER) ASC;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON NULL WHERE (CAST(((vt0.c0)<>(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)!=(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON NULL);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON NULL WHERE (CAST(((vt0.c0)<>(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)!=(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON NULL);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON NULL WHERE (CAST(((vt0.c0)<>(vt1.c0)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (((NULL)%(2.045045461E9)) COLLATE BINARY) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((NULL)%(2.045045461E9)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT ALL * FROM vt0 WHERE (((NULL)%(2.045045461E9)) COLLATE BINARY) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((NULL)%(2.045045461E9)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT ALL * FROM vt0 WHERE (((NULL)%(2.045045461E9)) COLLATE BINARY) ORDER BY vt0.c1;
SELECT * FROM vt0 INNER JOIN vt1 ON (((((vt0.c0))<=((vt0.c0))))+(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((vt0.c0))<=((vt0.c0))))+(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM vt0 INNER JOIN vt1 ON (((((vt0.c0))<=((vt0.c0))))+(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((vt0.c0))<=((vt0.c0))))+(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM vt0 INNER JOIN vt1 ON (((((vt0.c0))<=((vt0.c0))))+(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (NULL);
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((vt0.c1)-(vt0.c1)) COLLATE BINARY, (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, vt0.c1 COLLATE NOCASE, vt0.c0))<((vt0.c1, vt0.c0, (((((((('*[6O')OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)-(vt0.c1)) COLLATE BINARY, (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, vt0.c1 COLLATE NOCASE, vt0.c0))<((vt0.c1, vt0.c0, (((((((('*[6O')OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((vt0.c1)-(vt0.c1)) COLLATE BINARY, (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, vt0.c1 COLLATE NOCASE, vt0.c0))<((vt0.c1, vt0.c0, (((((((('*[6O')OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)-(vt0.c1)) COLLATE BINARY, (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, vt0.c1 COLLATE NOCASE, vt0.c0))<((vt0.c1, vt0.c0, (((((((('*[6O')OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((vt0.c1)-(vt0.c1)) COLLATE BINARY, (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, vt0.c1 COLLATE NOCASE, vt0.c0))<((vt0.c1, vt0.c0, (((((((('*[6O')OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((x'7a1a')<=(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND('-596924933')), ((vt0.c0)*(vt0.c0)), rtreenode(vt0.c1, vt0.c0))))) ORDER BY (((vt0.c0))>=((NULL)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((x'7a1a')<=(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND('-596924933')), ((vt0.c0)*(vt0.c0)), rtreenode(vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))>=((NULL))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((x'7a1a')<=(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND('-596924933')), ((vt0.c0)*(vt0.c0)), rtreenode(vt0.c1, vt0.c0))))) ORDER BY (((vt0.c0))>=((NULL)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((x'7a1a')<=(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND('-596924933')), ((vt0.c0)*(vt0.c0)), rtreenode(vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))>=((NULL))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), ((x'7a1a')<=(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND('-596924933')), ((vt0.c0)*(vt0.c0)), rtreenode(vt0.c1, vt0.c0))))) ORDER BY (((vt0.c0))>=((NULL)));
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) IS TRUE) DESC;
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (vt1.c0) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (vt1.c0) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (vt1.c0) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (((QUOTE(vt0.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END) AND (CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((QUOTE(vt0.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END) AND (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((QUOTE(vt0.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END) AND (CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((QUOTE(vt0.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END) AND (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((QUOTE(vt0.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END) AND (CAST(vt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (vt0.c0 IN ()), 1449177826)) AND (((+ (vt0.c0)), ((vt0.c1)+(vt0.c1)), ((vt1.c0)=(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (vt0.c0 IN ()), 1449177826)) AND (((+ (vt0.c0)), ((vt0.c1)+(vt0.c1)), ((vt1.c0)==(vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (vt0.c0 IN ()), 1449177826)) AND (((+ (vt0.c0)), ((vt0.c1)+(vt0.c1)), ((vt1.c0)=(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (vt0.c0 IN ()), 1449177826)) AND (((+ (vt0.c0)), ((vt0.c1)+(vt0.c1)), ((vt1.c0)==(vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (vt0.c0 IN ()), 1449177826)) AND (((+ (vt0.c0)), ((vt0.c1)+(vt0.c1)), ((vt1.c0)=(vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL) ASC;
SELECT * FROM vt1, vt0 WHERE ((+ (vt0.c1)) COLLATE BINARY) ORDER BY (((~ (vt0.c0)))-(((vt0.c0)IS NOT('839020675')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt0.c0)))-(((vt0.c0)IS NOT('839020675')))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((+ (vt0.c1)) COLLATE BINARY) ORDER BY (((~ (vt0.c0)))-(((vt0.c0)IS NOT('839020675')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt0.c0)))-(((vt0.c0)IS NOT('839020675')))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((+ (vt0.c1)) COLLATE BINARY) ORDER BY (((~ (vt0.c0)))-(((vt0.c0)IS NOT('839020675')))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)-(vt1.c0)))AND(((1.536164869E9) IS FALSE))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)-(vt1.c0)))AND(((1.536164869E9) IS FALSE))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)-(vt1.c0)))AND(((1.536164869E9) IS FALSE))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)-(vt1.c0)))AND(((1.536164869E9) IS FALSE))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)-(vt1.c0)))AND(((1.536164869E9) IS FALSE))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, vt1.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN '-596924933' WHEN (vt0.c1 IN (vt0.c0)) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN '-596924933' WHEN (vt0.c1 IN (vt0.c0)) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN '-596924933' WHEN (vt0.c1 IN (vt0.c0)) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN '-596924933' WHEN (vt0.c1 IN (vt0.c0)) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN '-596924933' WHEN (vt0.c1 IN (vt0.c0)) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((~ ((((vt0.c0))>=((vt1.c0)))))) ORDER BY (((+ (vt1.c0)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((+ (vt1.c0)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((~ ((((vt0.c0))>=((vt1.c0)))))) ORDER BY (((+ (vt1.c0)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((+ (vt1.c0)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((~ ((((vt0.c0))>=((vt1.c0)))))) ORDER BY (((+ (vt1.c0)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt1.c0)&(vt0.c1)))OR((((('0.08770743013492976')OR(vt1.c0)))AND(vt0.c0)))))OR(((vt1.c0) NOT NULL))))AND(((vt1.c0)<=(vt0.c1)))))AND(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))))) ORDER BY CAST(((vt0.c1)LIKE(vt1.c0)) AS BLOB), ((vt0.c1)LIKE(vt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)&(vt0.c1)))OR((((('0.08770743013492976')OR(vt1.c0)))AND(vt0.c0)))))OR(((vt1.c0) NOT NULL))))AND(((vt1.c0)<=(vt0.c1)))))AND(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c1)LIKE(vt1.c0)) AS BLOB), ((vt0.c1)LIKE(vt0.c1)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt1.c0)&(vt0.c1)))OR((((('0.08770743013492976')OR(vt1.c0)))AND(vt0.c0)))))OR(((vt1.c0) NOT NULL))))AND(((vt1.c0)<=(vt0.c1)))))AND(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))))) ORDER BY CAST(((vt0.c1)LIKE(vt1.c0)) AS BLOB), ((vt0.c1)LIKE(vt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)&(vt0.c1)))OR((((('0.08770743013492976')OR(vt1.c0)))AND(vt0.c0)))))OR(((vt1.c0) NOT NULL))))AND(((vt1.c0)<=(vt0.c1)))))AND(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c1)LIKE(vt1.c0)) AS BLOB), ((vt0.c1)LIKE(vt0.c1)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt1.c0)&(vt0.c1)))OR((((('0.08770743013492976')OR(vt1.c0)))AND(vt0.c0)))))OR(((vt1.c0) NOT NULL))))AND(((vt1.c0)<=(vt0.c1)))))AND(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))))) ORDER BY CAST(((vt0.c1)LIKE(vt1.c0)) AS BLOB), ((vt0.c1)LIKE(vt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt0.c1)))>=(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c1)))>=(x''))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt0.c1)))>=(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c1)))>=(x''))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt0.c1)))>=(x'')));
SELECT ALL * FROM vt1 WHERE ((NULL COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NULL COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NULL COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (('<[')OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY (('<[')OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (('<[')OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY (('<[')OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (('<[')OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))));
SELECT * FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON vt0.c0);
SELECT * FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON vt0.c0);
SELECT * FROM vt1 INNER JOIN vt0 ON vt0.c0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)%(vt1.c0))))<=((vt1.c0)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND(CASE WHEN 0xffffffffd1ee4690 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, CASE WHEN CASE 'AU [e?'  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)-(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(1421018332)) THEN (NOT (vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)%(vt1.c0))))<=((vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND(CASE WHEN 0Xffffffffd1ee4690 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, CASE WHEN CASE 'AU [e?'  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)-(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(1421018332)) THEN (NOT (vt1.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)%(vt1.c0))))<=((vt1.c0)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND(CASE WHEN 0xffffffffd1ee4690 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, CASE WHEN CASE 'AU [e?'  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)-(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(1421018332)) THEN (NOT (vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)%(vt1.c0))))<=((vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND(CASE WHEN 0Xffffffffd1ee4690 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, CASE WHEN CASE 'AU [e?'  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)-(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(1421018332)) THEN (NOT (vt1.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)%(vt1.c0))))<=((vt1.c0)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND(CASE WHEN 0xffffffffd1ee4690 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, CASE WHEN CASE 'AU [e?'  WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)-(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(1421018332)) THEN (NOT (vt1.c0)) END DESC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN json_remove(vt1.c0, vt1.c0, vt1.c0, vt0.c1) THEN ((vt1.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN json_remove(vt1.c0, vt1.c0, vt1.c0, vt0.c1) THEN ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN json_remove(vt1.c0, vt1.c0, vt1.c0, vt0.c1) THEN ((vt1.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN json_remove(vt1.c0, vt1.c0, vt1.c0, vt0.c1) THEN ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))AND(NULL))  WHEN (vt0.c0 IN ()) THEN json_remove(vt0.c0, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)OR(vt0.c0)))AND(NULL))  WHEN (vt0.c0 IN ()) THEN json_remove(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))AND(NULL))  WHEN (vt0.c0 IN ()) THEN json_remove(vt0.c0, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)OR(vt0.c0)))AND(NULL))  WHEN (vt0.c0 IN ()) THEN json_remove(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))AND(NULL))  WHEN (vt0.c0 IN ()) THEN json_remove(vt0.c0, vt0.c0) END);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN x'' THEN (((vt1.c0))<>((vt1.c0))) END) ORDER BY TRIM(NULLIF(DISTINCT vt1.c0, vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT NULL)  WHEN x'' THEN (((vt1.c0))<>((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY TRIM(NULLIF(DISTINCT vt1.c0, vt1.c0)) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN x'' THEN (((vt1.c0))<>((vt1.c0))) END) ORDER BY TRIM(NULLIF(DISTINCT vt1.c0, vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT NULL)  WHEN x'' THEN (((vt1.c0))<>((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY TRIM(NULLIF(DISTINCT vt1.c0, vt1.c0)) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN x'' THEN (((vt1.c0))<>((vt1.c0))) END) ORDER BY TRIM(NULLIF(DISTINCT vt1.c0, vt1.c0)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (((((vt0.c0)*(vt0.c1)))>=(((vt1.c0)LIKE(vt0.c1))))) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) AND (rtreenode(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c1)))>=(((vt1.c0)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) AND (rtreenode(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (((((vt0.c0)*(vt0.c1)))>=(((vt1.c0)LIKE(vt0.c1))))) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) AND (rtreenode(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c1)))>=(((vt1.c0)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) AND (rtreenode(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (((((vt0.c0)*(vt0.c1)))>=(((vt1.c0)LIKE(vt0.c1))))) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) AND (rtreenode(vt0.c0, vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((((((TRIM(DISTINCT vt0.c0))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c1)>>(vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((TRIM(DISTINCT vt0.c0))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c1)>>(vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((TRIM(DISTINCT vt0.c0))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c1)>>(vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((TRIM(DISTINCT vt0.c0))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c1)>>(vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((TRIM(DISTINCT vt0.c0))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c1)>>(vt0.c0)))))OR(((vt0.c0) NOTNULL))))AND(vt0.c1)));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (UNLIKELY(DISTINCT ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (UNLIKELY(DISTINCT ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (UNLIKELY(DISTINCT ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ())))) ORDER BY ((-1056279444) NOT BETWEEN (NULL) AND (0.00861213542164141))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((-1056279444) NOT BETWEEN (NULL) AND (0.00861213542164141))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ())))) ORDER BY ((-1056279444) NOT BETWEEN (NULL) AND (0.00861213542164141))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((-1056279444) NOT BETWEEN (NULL) AND (0.00861213542164141))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ())))) ORDER BY ((-1056279444) NOT BETWEEN (NULL) AND (0.00861213542164141))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS BLOB)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)  NULLS FIRST, ((vt0.c0)==(((vt0.c1)GLOB(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)  NULLS FIRST, ((vt0.c0)==(((vt0.c1)GLOB(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS BLOB)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)  NULLS FIRST, ((vt0.c0)==(((vt0.c1)GLOB(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)  NULLS FIRST, ((vt0.c0)==(((vt0.c1)GLOB(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS BLOB)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)  NULLS FIRST, ((vt0.c0)==(((vt0.c1)GLOB(vt0.c0))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (+ (vt0.c1)) COLLATE NOCASE WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN ((0Xffffffff938bc268) NOT NULL) ELSE ((vt1.c0)LIKE(vt0.c1)) END) ORDER BY CASE ((vt1.c0)-(vt0.c1))  WHEN ((((((((vt1.c0)OR(0.42231185633239865)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN ((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) ISNULL) THEN ((0Xffffffff938bc268) NOT NULL) ELSE ((vt1.c0)LIKE(vt0.c1)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (+ (vt0.c1)) COLLATE NOCASE ORDER BY CASE ((vt1.c0)-(vt0.c1))  WHEN ((((((((vt1.c0)OR(0.42231185633239865)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN ((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)) END ASC);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (+ (vt0.c1)) COLLATE NOCASE WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN ((0Xffffffff938bc268) NOT NULL) ELSE ((vt1.c0)LIKE(vt0.c1)) END) ORDER BY CASE ((vt1.c0)-(vt0.c1))  WHEN ((((((((vt1.c0)OR(0.42231185633239865)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN ((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) ISNULL) THEN ((0Xffffffff938bc268) NOT NULL) ELSE ((vt1.c0)LIKE(vt0.c1)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (+ (vt0.c1)) COLLATE NOCASE ORDER BY CASE ((vt1.c0)-(vt0.c1))  WHEN ((((((((vt1.c0)OR(0.42231185633239865)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN ((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)) END ASC);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (+ (vt0.c1)) COLLATE NOCASE WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN ((0Xffffffff938bc268) NOT NULL) ELSE ((vt1.c0)LIKE(vt0.c1)) END) ORDER BY CASE ((vt1.c0)-(vt0.c1))  WHEN ((((((((vt1.c0)OR(0.42231185633239865)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN ((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)) END ASC;
SELECT * FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (NULL);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((((vt0.c0)AND(NULL)))OR(vt0.c1))  WHEN ((((vt1.c0)AND(vt1.c0)))OR('t༧')) THEN ((vt1.c0)+(vt0.c1)) WHEN '-509597802' THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) WHEN ((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>>(vt0.c1)) END) ORDER BY ((((0.35275073290161396)LIKE(vt0.c1)))AND((vt0.c1 IN ())))  NULLS LAST, (((vt1.c0 IN (vt1.c0)))-(((vt0.c1) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(NULL)))OR(vt0.c1))  WHEN ((((vt1.c0)AND(vt1.c0)))OR('t༧')) THEN ((vt1.c0)+(vt0.c1)) WHEN '-509597802' THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) WHEN ((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>>(vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((0.35275073290161396)LIKE(vt0.c1)))AND((vt0.c1 IN ())))  NULLS LAST, (((vt1.c0 IN (vt1.c0)))-(((vt0.c1) NOT NULL)))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((((vt0.c0)AND(NULL)))OR(vt0.c1))  WHEN ((((vt1.c0)AND(vt1.c0)))OR('t༧')) THEN ((vt1.c0)+(vt0.c1)) WHEN '-509597802' THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) WHEN ((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>>(vt0.c1)) END) ORDER BY ((((0.35275073290161396)LIKE(vt0.c1)))AND((vt0.c1 IN ())))  NULLS LAST, (((vt1.c0 IN (vt1.c0)))-(((vt0.c1) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(NULL)))OR(vt0.c1))  WHEN ((((vt1.c0)AND(vt1.c0)))OR('t༧')) THEN ((vt1.c0)+(vt0.c1)) WHEN '-509597802' THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) WHEN ((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)>>(vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((0.35275073290161396)LIKE(vt0.c1)))AND((vt0.c1 IN ())))  NULLS LAST, (((vt1.c0 IN (vt1.c0)))-(((vt0.c1) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0))>=((vt1.c0))))!=(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((vt1.c0))))!=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0))>=((vt1.c0))))!=(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((vt1.c0))))!=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0))>=((vt1.c0))))!=(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) THEN (~ (vt0.c1)) WHEN ((vt0.c1)*(vt0.c1)) THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (~ (vt0.c0)) ELSE ((0xffffffffdc6ba5fb) IS FALSE) END WHERE ((+ (vt0.c1 COLLATE NOCASE))) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN LAST_INSERT_ROWID() THEN (~ (vt0.c0)) WHEN (- (vt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) WHEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) THEN 9.67584196E8 WHEN (((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c1 AS REAL) THEN (((vt0.c1))<((vt1.c0))) ELSE (((vt0.c0, vt0.c0, vt0.c1))<((1320608314, '', vt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) THEN (~ (vt0.c1)) WHEN ((vt0.c1)*(vt0.c1)) THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (~ (vt0.c0)) ELSE ((0Xffffffffdc6ba5fb) IS FALSE) END ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN LAST_INSERT_ROWID() THEN (~ (vt0.c0)) WHEN (- (vt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) WHEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) THEN 9.67584196E8 WHEN (((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c1 AS REAL) THEN (((vt0.c1))<((vt1.c0))) ELSE (((vt0.c0, vt0.c0, vt0.c1))<((1320608314, '', vt0.c0))) END DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) THEN (~ (vt0.c1)) WHEN ((vt0.c1)*(vt0.c1)) THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (~ (vt0.c0)) ELSE ((0xffffffffdc6ba5fb) IS FALSE) END WHERE ((+ (vt0.c1 COLLATE NOCASE))) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN LAST_INSERT_ROWID() THEN (~ (vt0.c0)) WHEN (- (vt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) WHEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) THEN 9.67584196E8 WHEN (((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c1 AS REAL) THEN (((vt0.c1))<((vt1.c0))) ELSE (((vt0.c0, vt0.c0, vt0.c1))<((1320608314, '', vt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) THEN (~ (vt0.c1)) WHEN ((vt0.c1)*(vt0.c1)) THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (~ (vt0.c0)) ELSE ((0Xffffffffdc6ba5fb) IS FALSE) END ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN LAST_INSERT_ROWID() THEN (~ (vt0.c0)) WHEN (- (vt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) WHEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) THEN 9.67584196E8 WHEN (((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c1 AS REAL) THEN (((vt0.c1))<((vt1.c0))) ELSE (((vt0.c0, vt0.c0, vt0.c1))<((1320608314, '', vt0.c0))) END DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) THEN (~ (vt0.c1)) WHEN ((vt0.c1)*(vt0.c1)) THEN vt1.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN (~ (vt0.c0)) ELSE ((0xffffffffdc6ba5fb) IS FALSE) END WHERE ((+ (vt0.c1 COLLATE NOCASE))) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN LAST_INSERT_ROWID() THEN (~ (vt0.c0)) WHEN (- (vt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) WHEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) THEN 9.67584196E8 WHEN (((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c1 AS REAL) THEN (((vt0.c1))<((vt1.c0))) ELSE (((vt0.c0, vt0.c0, vt0.c1))<((1320608314, '', vt0.c0))) END DESC;
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) IN (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) IN (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) IN (vt1.c0)));
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c1) IS FALSE) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((+ (vt0.c1)) AS TEXT)) ORDER BY (((((NOT (vt1.c0)))AND((((vt0.c1, vt1.c0, 0Xffffffffa8743c62, 0.052232869338059595, vt1.c0))<=((vt0.c1, vt0.c0, vt0.c0, vt1.c0, vt0.c1))))))AND(((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((NOT (vt1.c0)))AND((((vt0.c1, vt1.c0, 0Xffffffffa8743c62, 0.052232869338059595, vt1.c0))<=((vt0.c1, vt0.c0, vt0.c0, vt1.c0, vt0.c1))))))AND(((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((+ (vt0.c1)) AS TEXT)) ORDER BY (((((NOT (vt1.c0)))AND((((vt0.c1, vt1.c0, 0Xffffffffa8743c62, 0.052232869338059595, vt1.c0))<=((vt0.c1, vt0.c0, vt0.c0, vt1.c0, vt0.c1))))))AND(((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((NOT (vt1.c0)))AND((((vt0.c1, vt1.c0, 0Xffffffffa8743c62, 0.052232869338059595, vt1.c0))<=((vt0.c1, vt0.c0, vt0.c0, vt1.c0, vt0.c1))))))AND(((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((+ (vt0.c1)) AS TEXT)) ORDER BY (((((NOT (vt1.c0)))AND((((vt0.c1, vt1.c0, 0Xffffffffa8743c62, 0.052232869338059595, vt1.c0))<=((vt0.c1, vt0.c0, vt0.c0, vt1.c0, vt0.c1))))))AND(((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))) DESC;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ((((((((('0.4796596795281619')OR(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (- (((vt1.c0)>>(NULL))))  NULLS FIRST, '';
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ((((((((('0.4796596795281619')OR(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0)>>(NULL))))  NULLS FIRST, '');
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ((((((((('0.4796596795281619')OR(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (- (((vt1.c0)>>(NULL))))  NULLS FIRST, '';
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ((((((((('0.4796596795281619')OR(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0)>>(NULL))))  NULLS FIRST, '');
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ((((((((('0.4796596795281619')OR(vt1.c0)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (- (((vt1.c0)>>(NULL))))  NULLS FIRST, '';
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((+ (((vt0.c1)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT * FROM vt1, vt0 WHERE ((+ (((vt0.c1)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT * FROM vt1, vt0 WHERE ((+ (((vt0.c1)IS NOT(vt0.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON CASE (vt0.c1 IN ())  WHEN CAST(vt0.c1 AS REAL) THEN CAST(-1.500284598E9 AS REAL) ELSE (vt1.c0 IN ()) END WHERE (((json_remove(vt1.c0, vt0.c1)) BETWEEN ((NOT (vt0.c0))) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(vt1.c0, vt0.c1)) BETWEEN ((NOT (vt0.c0))) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE (vt0.c1 IN ())  WHEN CAST(vt0.c1 AS REAL) THEN CAST(-1.500284598E9 AS REAL) ELSE (vt1.c0 IN ()) END);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON CASE (vt0.c1 IN ())  WHEN CAST(vt0.c1 AS REAL) THEN CAST(-1.500284598E9 AS REAL) ELSE (vt1.c0 IN ()) END WHERE (((json_remove(vt1.c0, vt0.c1)) BETWEEN ((NOT (vt0.c0))) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(vt1.c0, vt0.c1)) BETWEEN ((NOT (vt0.c0))) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE (vt0.c1 IN ())  WHEN CAST(vt0.c1 AS REAL) THEN CAST(-1.500284598E9 AS REAL) ELSE (vt1.c0 IN ()) END);
SELECT * FROM vt0, vt1 WHERE (-2.127193029E9);
SELECT SUM(count) FROM (SELECT ((-2.127193029E9) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (-2.127193029E9);
SELECT SUM(count) FROM (SELECT ((-2.127193029E9) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (-2.127193029E9);
SELECT * FROM vt0 WHERE (((LTRIM(vt0.c1)) NOT NULL)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c1)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (((LTRIM(vt0.c1)) NOT NULL)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c1)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (((LTRIM(vt0.c1)) NOT NULL)) ORDER BY vt0.c0;
SELECT * FROM vt1, vt0 WHERE (NULLIF(DISTINCT '0.238105903334209', CAST(vt0.c0 AS NUMERIC))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT '0.238105903334209', CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT * FROM vt1, vt0 WHERE (NULLIF(DISTINCT '0.238105903334209', CAST(vt0.c0 AS NUMERIC))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT '0.238105903334209', CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT * FROM vt1, vt0 WHERE (NULLIF(DISTINCT '0.238105903334209', CAST(vt0.c0 AS NUMERIC))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))==((vt1.c0))))IS NOT(((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))=((vt1.c0))))IS NOT(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))==((vt1.c0))))IS NOT(((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))=((vt1.c0))))IS NOT(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))==((vt1.c0))))IS NOT(((vt1.c0)>>(vt1.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, vt0.c1))!=((vt0.c1, vt0.c0, vt0.c0))) AS REAL) WHERE (((((vt0.c1) NOT NULL)) BETWEEN (((NULL)>=(vt1.c0))) AND (((vt1.c0)IS(vt0.c0))))) ORDER BY ((((vt0.c1)%(vt0.c0)))IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL)) BETWEEN (((NULL)>=(vt1.c0))) AND (((vt1.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, vt0.c1))<>((vt0.c1, vt0.c0, vt0.c0))) AS REAL) ORDER BY ((((vt0.c1)%(vt0.c0)))IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, vt0.c1))!=((vt0.c1, vt0.c0, vt0.c0))) AS REAL) WHERE (((((vt0.c1) NOT NULL)) BETWEEN (((NULL)>=(vt1.c0))) AND (((vt1.c0)IS(vt0.c0))))) ORDER BY ((((vt0.c1)%(vt0.c0)))IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL)) BETWEEN (((NULL)>=(vt1.c0))) AND (((vt1.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, vt0.c1))<>((vt0.c1, vt0.c0, vt0.c0))) AS REAL) ORDER BY ((((vt0.c1)%(vt0.c0)))IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST((((vt1.c0, vt0.c0, vt0.c1))!=((vt0.c1, vt0.c0, vt0.c0))) AS REAL) WHERE (((((vt0.c1) NOT NULL)) BETWEEN (((NULL)>=(vt1.c0))) AND (((vt1.c0)IS(vt0.c0))))) ORDER BY ((((vt0.c1)%(vt0.c0)))IS((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c1)OR(vt0.c0))) AND (CASE NULL  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0.7939392412241684 WHEN vt1.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c1)OR(vt0.c0))) AND (CASE NULL  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0.7939392412241684 WHEN vt1.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c1)OR(vt0.c0))) AND (CASE NULL  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0.7939392412241684 WHEN vt1.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c1)OR(vt0.c0))) AND (CASE NULL  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0.7939392412241684 WHEN vt1.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c1)OR(vt0.c0))) AND (CASE NULL  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0.7939392412241684 WHEN vt1.c0 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))&(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt1.c0)))&(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))&(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt1.c0)))&(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))&(vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('?JgZ', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, 6.7428469E8, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))) BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((('?JgZ', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, 6.7428469E8, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))) BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('?JgZ', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, 6.7428469E8, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))) BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((('?JgZ', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, 6.7428469E8, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))) BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('?JgZ', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, 6.7428469E8, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))) BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON 'E' WHERE ((((vt0.c0 IN ())) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON 'E');
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON 'E' WHERE ((((vt0.c0 IN ())) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON 'E');
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON 'E' WHERE ((((vt0.c0 IN ())) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT * FROM vt0 INNER JOIN vt1 ON CASE ((vt1.c0)LIKE(vt1.c0))  WHEN ((x'')>=(vt0.c0)) THEN ((x'')AND(vt0.c0)) END WHERE (vt0.c1 COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CASE ((vt1.c0)LIKE(vt1.c0))  WHEN ((x'')>=(vt0.c0)) THEN ((x'')AND(vt0.c0)) END);
SELECT * FROM vt0 INNER JOIN vt1 ON CASE ((vt1.c0)LIKE(vt1.c0))  WHEN ((x'')>=(vt0.c0)) THEN ((x'')AND(vt0.c0)) END WHERE (vt0.c1 COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CASE ((vt1.c0)LIKE(vt1.c0))  WHEN ((x'')>=(vt0.c0)) THEN ((x'')AND(vt0.c0)) END);
SELECT * FROM vt0 INNER JOIN vt1 ON CASE ((vt1.c0)LIKE(vt1.c0))  WHEN ((x'')>=(vt0.c0)) THEN ((x'')AND(vt0.c0)) END WHERE (vt0.c1 COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY TOTAL_CHANGES()  NULLS LAST, ((((vt1.c0)*(vt1.c0)))|((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY TOTAL_CHANGES()  NULLS LAST, ((((vt1.c0)*(vt1.c0)))|((vt1.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY TOTAL_CHANGES()  NULLS LAST, ((((vt1.c0)*(vt1.c0)))|((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY TOTAL_CHANGES()  NULLS LAST, ((((vt1.c0)*(vt1.c0)))|((vt1.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY TOTAL_CHANGES()  NULLS LAST, ((((vt1.c0)*(vt1.c0)))|((vt1.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT COUNT(*) FROM vt1 WHERE ('.');
SELECT SUM(count) FROM (SELECT ALL (('.') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('.');
SELECT SUM(count) FROM (SELECT ALL (('.') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('.');
SELECT ALL * FROM vt0, vt1 WHERE (((~ (vt0.c0)) IN ())) ORDER BY ((((vt1.c0 IN ()), vt0.c0, vt1.c0))>((vt1.c0, ((vt1.c0) IS TRUE), ((vt0.c0)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0 IN ()), vt0.c0, vt1.c0))>((vt1.c0, ((vt1.c0) IS TRUE), ((vt0.c0)<<(vt1.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE (((~ (vt0.c0)) IN ())) ORDER BY ((((vt1.c0 IN ()), vt0.c0, vt1.c0))>((vt1.c0, ((vt1.c0) IS TRUE), ((vt0.c0)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0 IN ()), vt0.c0, vt1.c0))>((vt1.c0, ((vt1.c0) IS TRUE), ((vt0.c0)<<(vt1.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE (((~ (vt0.c0)) IN ())) ORDER BY ((((vt1.c0 IN ()), vt0.c0, vt1.c0))>((vt1.c0, ((vt1.c0) IS TRUE), ((vt0.c0)<<(vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c1)-(vt0.c1))))>((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)-(vt0.c1))))>((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c1)-(vt0.c1))))>((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)-(vt0.c1))))>((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c1)-(vt0.c1))))>((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT ALL * FROM vt0 WHERE (json_patch(((vt0.c1) IS TRUE), (vt0.c1 IN ()))) ORDER BY (((vt0.c0))!=((ABS(DISTINCT vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0)))>(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((vt0.c1) IS TRUE), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))<>((ABS(DISTINCT vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0)))>(vt0.c1))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (json_patch(((vt0.c1) IS TRUE), (vt0.c1 IN ()))) ORDER BY (((vt0.c0))!=((ABS(DISTINCT vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0)))>(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((vt0.c1) IS TRUE), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))<>((ABS(DISTINCT vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0)))>(vt0.c1))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (json_patch(((vt0.c1) IS TRUE), (vt0.c1 IN ()))) ORDER BY (((vt0.c0))!=((ABS(DISTINCT vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0)))>(vt0.c1))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((((x'') IS TRUE))AND(LIKELIHOOD(vt1.c0, 0.6827101907852797))))OR((vt1.c0 IN ())))) ORDER BY '1735540523';
SELECT SUM(count) FROM (SELECT ((((((((x'') IS TRUE))AND(LIKELIHOOD(vt1.c0, 0.6827101907852797))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY '1735540523');
SELECT ALL * FROM vt1 WHERE (((((((x'') IS TRUE))AND(LIKELIHOOD(vt1.c0, 0.6827101907852797))))OR((vt1.c0 IN ())))) ORDER BY '1735540523';
SELECT SUM(count) FROM (SELECT ((((((((x'') IS TRUE))AND(LIKELIHOOD(vt1.c0, 0.6827101907852797))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY '1735540523');
SELECT ALL * FROM vt1 WHERE (((((((x'') IS TRUE))AND(LIKELIHOOD(vt1.c0, 0.6827101907852797))))OR((vt1.c0 IN ())))) ORDER BY '1735540523';
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)&(vt1.c0)) IN ())) ORDER BY (+ (((vt1.c0) BETWEEN ('?JGZ') AND (0xffffffffbad5195e)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)&(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0) BETWEEN ('?JGZ') AND (0xffffffffbad5195e)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)&(vt1.c0)) IN ())) ORDER BY (+ (((vt1.c0) BETWEEN ('?JGZ') AND (0xffffffffbad5195e)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)&(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0) BETWEEN ('?JGZ') AND (0xffffffffbad5195e)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)&(vt1.c0)) IN ())) ORDER BY (+ (((vt1.c0) BETWEEN ('?JGZ') AND (0xffffffffbad5195e)))) ASC;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CASE ((vt0.c1)>=(vt1.c0))  WHEN 0.14465374527995645 THEN ((vt0.c1)<=(vt0.c0)) WHEN ((((vt0.c1)AND(NULL)))AND(vt1.c0)) THEN CASE WHEN vt0.c0 THEN -1.393487812E9 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0)/(vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt1.c0))<((vt0.c1))) WHEN 'r5' THEN (((vt0.c1))!=((vt1.c0))) ELSE ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) END WHERE (CASE ((vt0.c1) IS FALSE)  WHEN ((vt0.c0)OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY END) ORDER BY CASE WHEN (('B<')%(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE vt1.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) IS FALSE)  WHEN ((vt0.c0)OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE ((vt0.c1)>=(vt1.c0))  WHEN 0.14465374527995645 THEN ((vt0.c1)<=(vt0.c0)) WHEN ((((vt0.c1)AND(NULL)))AND(vt1.c0)) THEN CASE WHEN vt0.c0 THEN -1.393487812E9 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0)/(vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt1.c0))<((vt0.c1))) WHEN 'r5' THEN (((vt0.c1))!=((vt1.c0))) ELSE ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) END ORDER BY CASE WHEN (('B<')%(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE vt1.c0 COLLATE NOCASE END);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CASE ((vt0.c1)>=(vt1.c0))  WHEN 0.14465374527995645 THEN ((vt0.c1)<=(vt0.c0)) WHEN ((((vt0.c1)AND(NULL)))AND(vt1.c0)) THEN CASE WHEN vt0.c0 THEN -1.393487812E9 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0)/(vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt1.c0))<((vt0.c1))) WHEN 'r5' THEN (((vt0.c1))!=((vt1.c0))) ELSE ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) END WHERE (CASE ((vt0.c1) IS FALSE)  WHEN ((vt0.c0)OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY END) ORDER BY CASE WHEN (('B<')%(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE vt1.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) IS FALSE)  WHEN ((vt0.c0)OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE ((vt0.c1)>=(vt1.c0))  WHEN 0.14465374527995645 THEN ((vt0.c1)<=(vt0.c0)) WHEN ((((vt0.c1)AND(NULL)))AND(vt1.c0)) THEN CASE WHEN vt0.c0 THEN -1.393487812E9 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0)/(vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt1.c0))<((vt0.c1))) WHEN 'r5' THEN (((vt0.c1))!=((vt1.c0))) ELSE ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) END ORDER BY CASE WHEN (('B<')%(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE vt1.c0 COLLATE NOCASE END);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CASE ((vt0.c1)>=(vt1.c0))  WHEN 0.14465374527995645 THEN ((vt0.c1)<=(vt0.c0)) WHEN ((((vt0.c1)AND(NULL)))AND(vt1.c0)) THEN CASE WHEN vt0.c0 THEN -1.393487812E9 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0)/(vt0.c0)) THEN (- (vt0.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((vt1.c0))<((vt0.c1))) WHEN 'r5' THEN (((vt0.c1))!=((vt1.c0))) ELSE ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) END WHERE (CASE ((vt0.c1) IS FALSE)  WHEN ((vt0.c0)OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY END) ORDER BY CASE WHEN (('B<')%(vt0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE vt1.c0 COLLATE NOCASE END;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE, UPPER(DISTINCT vt0.c1), ((vt1.c0)/(vt0.c1)))) AND ((CAST(vt0.c0 AS NUMERIC), CASE WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE, UPPER(DISTINCT vt0.c1), ((vt1.c0)/(vt0.c1)))) AND ((CAST(vt0.c0 AS NUMERIC), CASE WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE, UPPER(DISTINCT vt0.c1), ((vt1.c0)/(vt0.c1)))) AND ((CAST(vt0.c0 AS NUMERIC), CASE WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE, UPPER(DISTINCT vt0.c1), ((vt1.c0)/(vt0.c1)))) AND ((CAST(vt0.c0 AS NUMERIC), CASE WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE, UPPER(DISTINCT vt0.c1), ((vt1.c0)/(vt0.c1)))) AND ((CAST(vt0.c0 AS NUMERIC), CASE WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))));
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (1342394047);
SELECT SUM(count) FROM (SELECT ((1342394047) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (1342394047);
SELECT SUM(count) FROM (SELECT ((1342394047) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (1342394047);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)>=(vt0.c0)))-(CAST(vt0.c1 AS TEXT)))) ORDER BY (0x4301e1d3 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0)))-(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (0X4301e1d3 IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)>=(vt0.c0)))-(CAST(vt0.c1 AS TEXT)))) ORDER BY (0x4301e1d3 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0)))-(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (0X4301e1d3 IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)>=(vt0.c0)))-(CAST(vt0.c1 AS TEXT)))) ORDER BY (0x4301e1d3 IN ()) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((0Xffffffff9c7fff36)-(vt0.c0))))) ORDER BY (+ (((vt0.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((0Xffffffff9c7fff36)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c1) ISNULL))) DESC);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((0Xffffffff9c7fff36)-(vt0.c0))))) ORDER BY (+ (((vt0.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((0Xffffffff9c7fff36)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c1) ISNULL))) DESC);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)||(vt0.c0))) AND (((0Xffffffff9c7fff36)-(vt0.c0))))) ORDER BY (+ (((vt0.c1) ISNULL))) DESC;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB));
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY (IFNULL(vt1.c0, 0.31906561716188075) IN ())  NULLS FIRST, (vt1.c0 IN ()) COLLATE BINARY, CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (IFNULL(vt1.c0, 0.31906561716188075) IN ())  NULLS FIRST, (vt1.c0 IN ()) COLLATE BINARY, CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY (IFNULL(vt1.c0, 0.31906561716188075) IN ())  NULLS FIRST, (vt1.c0 IN ()) COLLATE BINARY, CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (IFNULL(vt1.c0, 0.31906561716188075) IN ())  NULLS FIRST, (vt1.c0 IN ()) COLLATE BINARY, CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)) ORDER BY (IFNULL(vt1.c0, 0.31906561716188075) IN ())  NULLS FIRST, (vt1.c0 IN ()) COLLATE BINARY, CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((('z&St\|	' COLLATE RTRIM)<(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN 0.1903370376165553 THEN vt1.c0 END))) ORDER BY ((vt0.c0) IS TRUE) COLLATE BINARY ASC, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL) ASC, ((((vt0.c1)||(vt0.c0)))GLOB(((vt0.c0)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('z&St\|	' COLLATE RTRIM)<(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN 0.1903370376165553 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) IS TRUE) COLLATE BINARY ASC, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL) ASC, ((((vt0.c1)||(vt0.c0)))GLOB(((vt0.c0)<=(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ((('z&St\|	' COLLATE RTRIM)<(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN 0.1903370376165553 THEN vt1.c0 END))) ORDER BY ((vt0.c0) IS TRUE) COLLATE BINARY ASC, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL) ASC, ((((vt0.c1)||(vt0.c0)))GLOB(((vt0.c0)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('z&St\|	' COLLATE RTRIM)<(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN 0.1903370376165553 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) IS TRUE) COLLATE BINARY ASC, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL) ASC, ((((vt0.c1)||(vt0.c0)))GLOB(((vt0.c0)<=(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ((('z&St\|	' COLLATE RTRIM)<(CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN 0.1903370376165553 THEN vt1.c0 END))) ORDER BY ((vt0.c0) IS TRUE) COLLATE BINARY ASC, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL) ASC, ((((vt0.c1)||(vt0.c0)))GLOB(((vt0.c0)<=(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))-(vt1.c0))) ORDER BY (((((vt1.c0)) BETWEEN ((x'd74d')) AND ((vt1.c0))))=(CAST(x'' AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)&(vt1.c0)))-(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((x'd74d')) AND ((vt1.c0))))==(CAST(x'' AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))-(vt1.c0))) ORDER BY (((((vt1.c0)) BETWEEN ((x'd74d')) AND ((vt1.c0))))=(CAST(x'' AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)&(vt1.c0)))-(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((x'd74d')) AND ((vt1.c0))))==(CAST(x'' AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))-(vt1.c0))) ORDER BY (((((vt1.c0)) BETWEEN ((x'd74d')) AND ((vt1.c0))))=(CAST(x'' AS INTEGER)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'' COLLATE BINARY) ORDER BY CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, NULL)) AND ((vt0.c1, vt0.c1, vt0.c1))) ELSE ((vt0.c0)*(vt0.c1)) END ASC, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, NULL)) AND ((vt0.c1, vt0.c1, vt0.c1))) ELSE ((vt0.c0)*(vt0.c1)) END ASC, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'' COLLATE BINARY) ORDER BY CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, NULL)) AND ((vt0.c1, vt0.c1, vt0.c1))) ELSE ((vt0.c0)*(vt0.c1)) END ASC, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, NULL)) AND ((vt0.c1, vt0.c1, vt0.c1))) ELSE ((vt0.c0)*(vt0.c1)) END ASC, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'' COLLATE BINARY) ORDER BY CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, NULL)) AND ((vt0.c1, vt0.c1, vt0.c1))) ELSE ((vt0.c0)*(vt0.c1)) END ASC, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY;
SELECT ALL * FROM vt1 WHERE (LOWER(vt1.c0) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt1.c0) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LOWER(vt1.c0) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt1.c0) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LOWER(vt1.c0) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))+(((vt0.c1)=(vt0.c1))))) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0)))+(((vt0.c1)==(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c1 AS REAL) AS REAL) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))+(((vt0.c1)=(vt0.c1))))) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0)))+(((vt0.c1)==(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c1 AS REAL) AS REAL) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))+(((vt0.c1)=(vt0.c1))))) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON '-433976463' WHERE (0.653203361014294) ORDER BY CASE WHEN x'' THEN (('9') IS FALSE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.653203361014294) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON '-433976463' ORDER BY CASE WHEN x'' THEN (('9') IS FALSE) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON '-433976463' WHERE (0.653203361014294) ORDER BY CASE WHEN x'' THEN (('9') IS FALSE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.653203361014294) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON '-433976463' ORDER BY CASE WHEN x'' THEN (('9') IS FALSE) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON '-433976463' WHERE (0.653203361014294) ORDER BY CASE WHEN x'' THEN (('9') IS FALSE) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c1) NOTNULL))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (('' IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOTNULL))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (('' IN ()) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c1) NOTNULL))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (('' IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOTNULL))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (('' IN ()) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c1) NOTNULL))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (('' IN ()) IN ())  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN vt1 ON CAST(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC) WHERE (((vt0.c1)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC));
SELECT * FROM vt0 INNER JOIN vt1 ON CAST(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC) WHERE (((vt0.c1)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC));
SELECT * FROM vt0 INNER JOIN vt1 ON CAST(((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC) WHERE (((vt0.c1)%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)OR(CAST(NULL AS NUMERIC)))) ORDER BY vt0.c1  NULLS FIRST, (((x'3edf'))<((vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)OR(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, (((x'3edf'))<((vt0.c0 COLLATE BINARY))));
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)OR(CAST(NULL AS NUMERIC)))) ORDER BY vt0.c1  NULLS FIRST, (((x'3edf'))<((vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)OR(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, (((x'3edf'))<((vt0.c0 COLLATE BINARY))));
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)OR(CAST(NULL AS NUMERIC)))) ORDER BY vt0.c1  NULLS FIRST, (((x'3edf'))<((vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0)==(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN (((vt1.c0 IN (x'78df', vt0.c0)), (((vt0.c1, vt0.c1, vt1.c0, 'B', vt0.c1))>((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1))), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0, CASE WHEN vt0.c1 THEN vt0.c1 END, ((0.8672396023663268)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)==(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN (((vt1.c0 IN (x'78df', vt0.c0)), (((vt0.c1, vt0.c1, vt1.c0, 'B', vt0.c1))>((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1))), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0, CASE WHEN vt0.c1 THEN vt0.c1 END, ((0.8672396023663268)+(vt1.c0))))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0)==(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN (((vt1.c0 IN (x'78df', vt0.c0)), (((vt0.c1, vt0.c1, vt1.c0, 'B', vt0.c1))>((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1))), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0, CASE WHEN vt0.c1 THEN vt0.c1 END, ((0.8672396023663268)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)==(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN (((vt1.c0 IN (x'78df', vt0.c0)), (((vt0.c1, vt0.c1, vt1.c0, 'B', vt0.c1))>((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1))), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0, CASE WHEN vt0.c1 THEN vt0.c1 END, ((0.8672396023663268)+(vt1.c0))))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0)==(vt0.c1)) THEN ((vt0.c1)IS(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN (((vt1.c0 IN (x'78df', vt0.c0)), (((vt0.c1, vt0.c1, vt1.c0, 'B', vt0.c1))>((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c1))), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0, CASE WHEN vt0.c1 THEN vt0.c1 END, ((0.8672396023663268)+(vt1.c0)))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (NULL) ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST, ((((((((((vt0.c0) IS TRUE))AND('n74dgT䈱a')))OR((((vt0.c0))>=((vt1.c0))))))OR(((0xffffffffdae8c849) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(TRIM(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST, ((((((((((vt0.c0) IS TRUE))AND('n74dgT䈱a')))OR((((vt0.c0))>=((vt1.c0))))))OR(((0Xffffffffdae8c849) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(TRIM(DISTINCT vt1.c0))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (NULL) ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST, ((((((((((vt0.c0) IS TRUE))AND('n74dgT䈱a')))OR((((vt0.c0))>=((vt1.c0))))))OR(((0xffffffffdae8c849) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(TRIM(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST, ((((((((((vt0.c0) IS TRUE))AND('n74dgT䈱a')))OR((((vt0.c0))>=((vt1.c0))))))OR(((0Xffffffffdae8c849) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(TRIM(DISTINCT vt1.c0))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (NULL) ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST, ((((((((((vt0.c0) IS TRUE))AND('n74dgT䈱a')))OR((((vt0.c0))>=((vt1.c0))))))OR(((0xffffffffdae8c849) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(TRIM(DISTINCT vt1.c0)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL) WHERE (SUBSTR((vt0.c1 IN ()), ((NULL) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((SUBSTR((vt0.c1 IN ()), ((NULL) IS TRUE))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL) WHERE (SUBSTR((vt0.c1 IN ()), ((NULL) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((SUBSTR((vt0.c1 IN ()), ((NULL) IS TRUE))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL) WHERE (SUBSTR((vt0.c1 IN ()), ((NULL) IS TRUE)));
SELECT COUNT(*) FROM vt1 WHERE (0.5275120771505004);
SELECT SUM(count) FROM (SELECT ((0.5275120771505004) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.5275120771505004);
SELECT SUM(count) FROM (SELECT ((0.5275120771505004) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.5275120771505004);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN CAST(vt1.c0 AS REAL) THEN NULL COLLATE BINARY ELSE (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0 COLLATE NOCASE  WHEN CAST(vt1.c0 AS REAL) THEN NULL COLLATE BINARY ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN CAST(vt1.c0 AS REAL) THEN NULL COLLATE BINARY ELSE (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0 COLLATE NOCASE  WHEN CAST(vt1.c0 AS REAL) THEN NULL COLLATE BINARY ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN CAST(vt1.c0 AS REAL) THEN NULL COLLATE BINARY ELSE (+ (vt1.c0)) END);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) AND (vt0.c0))) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1) NOT NULL))) AND ((((vt0.c1)+(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1) NOT NULL))) AND ((((vt0.c1)+(vt0.c1))))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) AND (vt0.c0))) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1) NOT NULL))) AND ((((vt0.c1)+(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1) NOT NULL))) AND ((((vt0.c1)+(vt0.c1))))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) AND (vt0.c0))) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1) NOT NULL))) AND ((((vt0.c1)+(vt0.c1))))) DESC;
SELECT * FROM vt0 WHERE (((((((vt0.c1)+(vt0.c0)))OR((('1320608314') ISNULL))))OR(((vt0.c1)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)+(vt0.c0)))OR((('1320608314') ISNULL))))OR(((vt0.c1)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c1)+(vt0.c0)))OR((('1320608314') ISNULL))))OR(((vt0.c1)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)+(vt0.c0)))OR((('1320608314') ISNULL))))OR(((vt0.c1)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c1)+(vt0.c0)))OR((('1320608314') ISNULL))))OR(((vt0.c1)<=(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY vt0.c1  NULLS FIRST, HEX(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (0.6362420191045537))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1  NULLS FIRST, HEX(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (0.6362420191045537))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY vt0.c1  NULLS FIRST, HEX(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (0.6362420191045537))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1  NULLS FIRST, HEX(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (0.6362420191045537))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY vt0.c1  NULLS FIRST, HEX(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (0.6362420191045537))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(CAST(vt0.c0 AS REAL))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((('M㼭c0')) BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(vt1.c0)))AND(CAST(vt0.c0 AS REAL))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((('M㼭c0')) BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(CAST(vt0.c0 AS REAL))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((('M㼭c0')) BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(vt1.c0)))AND(CAST(vt0.c0 AS REAL))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((('M㼭c0')) BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(CAST(vt0.c0 AS REAL))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((('M㼭c0')) BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (GLOB(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN x'7c60478a' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CAST(vt0.c1 AS INTEGER))) ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0) IS TRUE))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.728645902355752))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN x'7c60478a' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CAST(vt0.c1 AS INTEGER))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0) IS TRUE))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.728645902355752))))) DESC);
SELECT * FROM vt1, vt0 WHERE (GLOB(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN x'7c60478a' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CAST(vt0.c1 AS INTEGER))) ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0) IS TRUE))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.728645902355752))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN x'7c60478a' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CAST(vt0.c1 AS INTEGER))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0) IS TRUE))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.728645902355752))))) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)%(vt0.c1))))) ORDER BY CAST(vt0.c1 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE BINARY)OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)%(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS BLOB));
SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)%(vt0.c1))))) ORDER BY CAST(vt0.c1 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE BINARY)OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)%(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS BLOB));
SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)%(vt0.c1))))) ORDER BY CAST(vt0.c1 AS BLOB);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY CAST(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL) ASC  NULLS LAST, (((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffffab0283fd END))==(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL) ASC  NULLS LAST, (((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffffab0283fd END))=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY CAST(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL) ASC  NULLS LAST, (((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffffab0283fd END))==(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL) ASC  NULLS LAST, (((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffffab0283fd END))=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY CAST(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL) ASC  NULLS LAST, (((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffffab0283fd END))==(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (COALESCE(DISTINCT ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0)>(x''))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0)>(x'')))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (COALESCE(DISTINCT ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0)>(x''))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0)>(x'')))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (COALESCE(DISTINCT ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0)>(x''))));
SELECT * FROM vt1 WHERE (((LOWER(vt1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt1.c0)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((LOWER(vt1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt1.c0)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((LOWER(vt1.c0)) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ()), '6' COLLATE RTRIM, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))!=(((vt0.c1 IN ()), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), (vt0.c1 IN (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ()), '6' COLLATE RTRIM, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))!=(((vt0.c1 IN ()), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), (vt0.c1 IN (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ()), '6' COLLATE RTRIM, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))!=(((vt0.c1 IN ()), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), (vt0.c1 IN (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ()), '6' COLLATE RTRIM, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))!=(((vt0.c1 IN ()), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), (vt0.c1 IN (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ()), '6' COLLATE RTRIM, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))!=(((vt0.c1 IN ()), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), (vt0.c1 IN (vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, 46055613, vt0.c0))>((vt0.c0, vt0.c0, vt0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1, 46055613, vt0.c0))>((vt0.c0, vt0.c0, vt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, 46055613, vt0.c0))>((vt0.c0, vt0.c0, vt0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1, 46055613, vt0.c0))>((vt0.c0, vt0.c0, vt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, 46055613, vt0.c0))>((vt0.c0, vt0.c0, vt0.c1))) AS BLOB));
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((json_insert(vt0.c0, vt0.c0, vt0.c1))) AND ((((vt0.c1)>>(vt0.c0)))))) ORDER BY highlight((vt0.c1 IN (vt0.c0)), vt0.c1 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (1935523473) AND (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((json_insert(vt0.c0, vt0.c0, vt0.c1))) AND ((((vt0.c1)>>(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY highlight((vt0.c1 IN (vt0.c0)), vt0.c1 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (1935523473) AND (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((json_insert(vt0.c0, vt0.c0, vt0.c1))) AND ((((vt0.c1)>>(vt0.c0)))))) ORDER BY highlight((vt0.c1 IN (vt0.c0)), vt0.c1 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (1935523473) AND (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((json_insert(vt0.c0, vt0.c0, vt0.c1))) AND ((((vt0.c1)>>(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY highlight((vt0.c1 IN (vt0.c0)), vt0.c1 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (1935523473) AND (vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) NOT NULL))))AND((vt0.c1 IN (vt0.c0))))) ORDER BY CASE WHEN LOWER(vt0.c0) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE 0.6109686148783096 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) NOT NULL))))AND((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN LOWER(vt0.c0) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE 0.6109686148783096 END END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) NOT NULL))))AND((vt0.c1 IN (vt0.c0))))) ORDER BY CASE WHEN LOWER(vt0.c0) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE 0.6109686148783096 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) NOT NULL))))AND((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN LOWER(vt0.c0) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE 0.6109686148783096 END END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) NOT NULL))))AND((vt0.c1 IN (vt0.c0))))) ORDER BY CASE WHEN LOWER(vt0.c0) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE 0.6109686148783096 END END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0))<=((vt0.c1)))))>=((((vt0.c1) NOT NULL))))) ORDER BY ((vt0.c1 COLLATE NOCASE)||(((vt0.c1)<<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))<=((vt0.c1)))))>=((((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE NOCASE)||(((vt0.c1)<<(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0))<=((vt0.c1)))))>=((((vt0.c1) NOT NULL))))) ORDER BY ((vt0.c1 COLLATE NOCASE)||(((vt0.c1)<<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))<=((vt0.c1)))))>=((((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE NOCASE)||(((vt0.c1)<<(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0))<=((vt0.c1)))))>=((((vt0.c1) NOT NULL))))) ORDER BY ((vt0.c1 COLLATE NOCASE)||(((vt0.c1)<<(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (NULLIF(DISTINCT vt1.c0, UNLIKELY(DISTINCT vt1.c0))) ORDER BY (~ (1.250638255E9));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt1.c0, UNLIKELY(DISTINCT vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (~ (1.250638255E9)));
SELECT * FROM vt1 WHERE (NULLIF(DISTINCT vt1.c0, UNLIKELY(DISTINCT vt1.c0))) ORDER BY (~ (1.250638255E9));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt1.c0, UNLIKELY(DISTINCT vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (~ (1.250638255E9)));
SELECT * FROM vt1 WHERE (NULLIF(DISTINCT vt1.c0, UNLIKELY(DISTINCT vt1.c0))) ORDER BY (~ (1.250638255E9));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)<=(vt0.c0)) IN ()) WHERE (TYPEOF((vt1.c0 IN (vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((vt1.c0 IN (vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)<=(vt0.c0)) IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)<=(vt0.c0)) IN ()) WHERE (TYPEOF((vt1.c0 IN (vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((vt1.c0 IN (vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)<=(vt0.c0)) IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)<=(vt0.c0)) IN ()) WHERE (TYPEOF((vt1.c0 IN (vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((((NULL))>((CAST(vt1.c0 AS REAL))))) ORDER BY LIKELIHOOD(vt1.c0 COLLATE RTRIM, 0.16011364151845153) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL))>((CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1 ORDER BY LIKELIHOOD(vt1.c0 COLLATE RTRIM, 0.16011364151845153) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((NULL))>((CAST(vt1.c0 AS REAL))))) ORDER BY LIKELIHOOD(vt1.c0 COLLATE RTRIM, 0.16011364151845153) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL))>((CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1 ORDER BY LIKELIHOOD(vt1.c0 COLLATE RTRIM, 0.16011364151845153) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((NULL))>((CAST(vt1.c0 AS REAL))))) ORDER BY LIKELIHOOD(vt1.c0 COLLATE RTRIM, 0.16011364151845153) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND ('1246960216'))) NOTNULL)) ORDER BY ((vt0.c1) BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((vt0.c1 IN (vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND ('1246960216'))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((vt0.c1 IN (vt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND ('1246960216'))) NOTNULL)) ORDER BY ((vt0.c1) BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((vt0.c1 IN (vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND ('1246960216'))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((vt0.c1 IN (vt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND ('1246960216'))) NOTNULL)) ORDER BY ((vt0.c1) BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((vt0.c1 IN (vt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(x'4c34')))%(LIKELIHOOD(vt0.c1, 0.2815142298619264)))) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), NULL, ((vt0.c0) NOT BETWEEN (0xffffffffdf9ecfbd) AND (vt0.c1))))>=(((('2045045461')!=(vt0.c1)), vt0.c0, (vt0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(x'4c34')))%(LIKELIHOOD(vt0.c1, 0.2815142298619264)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), NULL, ((vt0.c0) NOT BETWEEN (0Xffffffffdf9ecfbd) AND (vt0.c1))))>=(((('2045045461')!=(vt0.c1)), vt0.c0, (vt0.c0 IN ())))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(x'4c34')))%(LIKELIHOOD(vt0.c1, 0.2815142298619264)))) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), NULL, ((vt0.c0) NOT BETWEEN (0xffffffffdf9ecfbd) AND (vt0.c1))))>=(((('2045045461')!=(vt0.c1)), vt0.c0, (vt0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(x'4c34')))%(LIKELIHOOD(vt0.c1, 0.2815142298619264)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), NULL, ((vt0.c0) NOT BETWEEN (0Xffffffffdf9ecfbd) AND (vt0.c1))))>=(((('2045045461')!=(vt0.c1)), vt0.c0, (vt0.c0 IN ())))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(x'4c34')))%(LIKELIHOOD(vt0.c1, 0.2815142298619264)))) ORDER BY (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), NULL, ((vt0.c0) NOT BETWEEN (0xffffffffdf9ecfbd) AND (vt0.c1))))>=(((('2045045461')!=(vt0.c1)), vt0.c0, (vt0.c0 IN ())))) DESC;
SELECT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY x'';
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c0)IS NOT(vt1.c0))))) ORDER BY (((((((('NWL7vy')AND(vt1.c0 COLLATE RTRIM)))AND(0.7029718244336769)))AND(((vt1.c0)=(NULL)))))OR(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((('NWL7vy')AND(vt1.c0 COLLATE RTRIM)))AND(0.7029718244336769)))AND(((vt1.c0)=(NULL)))))OR(CAST(vt1.c0 AS REAL))));
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c0)IS NOT(vt1.c0))))) ORDER BY (((((((('NWL7vy')AND(vt1.c0 COLLATE RTRIM)))AND(0.7029718244336769)))AND(((vt1.c0)=(NULL)))))OR(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((('NWL7vy')AND(vt1.c0 COLLATE RTRIM)))AND(0.7029718244336769)))AND(((vt1.c0)=(NULL)))))OR(CAST(vt1.c0 AS REAL))));
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c0)IS NOT(vt1.c0))))) ORDER BY (((((((('NWL7vy')AND(vt1.c0 COLLATE RTRIM)))AND(0.7029718244336769)))AND(((vt1.c0)=(NULL)))))OR(CAST(vt1.c0 AS REAL)));
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER)) ORDER BY (- (((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) ISNULL))));
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER)) ORDER BY (- (((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) ISNULL))));
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER)) ORDER BY (- (((vt0.c0) ISNULL)));
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>>(vt0.c1))) BETWEEN ((('蘉A	#D	') ISNULL)) AND (('-295564199' IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>>(vt0.c1))) BETWEEN ((('蘉A	#D	') ISNULL)) AND (('-295564199' IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>>(vt0.c1))) BETWEEN ((('蘉A	#D	') ISNULL)) AND (('-295564199' IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>>(vt0.c1))) BETWEEN ((('蘉A	#D	') ISNULL)) AND (('-295564199' IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>>(vt0.c1))) BETWEEN ((('蘉A	#D	') ISNULL)) AND (('-295564199' IN ()))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON NULLIF((((vt0.c0))<((vt0.c0))), vt0.c1) WHERE (CAST(CASE WHEN 0.7029718244336769 THEN '-1082949427' ELSE vt0.c1 END AS REAL)) ORDER BY (((vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), load_extension(vt0.c1)))<((((vt1.c0) NOTNULL), ((vt0.c0) NOT BETWEEN ('-2041021978') AND (vt1.c0)), (vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN 0.7029718244336769 THEN '-1082949427' ELSE vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON NULLIF((((vt0.c0))<((vt0.c0))), vt0.c1) ORDER BY (((vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), load_extension(vt0.c1)))<((((vt1.c0) NOTNULL), ((vt0.c0) NOT BETWEEN ('-2041021978') AND (vt1.c0)), (vt0.c0 IN ())))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON NULLIF((((vt0.c0))<((vt0.c0))), vt0.c1) WHERE (CAST(CASE WHEN 0.7029718244336769 THEN '-1082949427' ELSE vt0.c1 END AS REAL)) ORDER BY (((vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), load_extension(vt0.c1)))<((((vt1.c0) NOTNULL), ((vt0.c0) NOT BETWEEN ('-2041021978') AND (vt1.c0)), (vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN 0.7029718244336769 THEN '-1082949427' ELSE vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON NULLIF((((vt0.c0))<((vt0.c0))), vt0.c1) ORDER BY (((vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), load_extension(vt0.c1)))<((((vt1.c0) NOTNULL), ((vt0.c0) NOT BETWEEN ('-2041021978') AND (vt1.c0)), (vt0.c0 IN ())))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON NULLIF((((vt0.c0))<((vt0.c0))), vt0.c1) WHERE (CAST(CASE WHEN 0.7029718244336769 THEN '-1082949427' ELSE vt0.c1 END AS REAL)) ORDER BY (((vt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)), load_extension(vt0.c1)))<((((vt1.c0) NOTNULL), ((vt0.c0) NOT BETWEEN ('-2041021978') AND (vt1.c0)), (vt0.c0 IN ()))));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) ORDER BY (((vt0.c1)) BETWEEN ((((vt1.c0)>(vt0.c1)))) AND ((0xffffffffd96a5846))) DESC  NULLS FIRST, TRIM(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST, (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))AND((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1)) BETWEEN ((((vt1.c0)>(vt0.c1)))) AND ((0Xffffffffd96a5846))) DESC  NULLS FIRST, TRIM(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST, (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))AND((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) ORDER BY (((vt0.c1)) BETWEEN ((((vt1.c0)>(vt0.c1)))) AND ((0xffffffffd96a5846))) DESC  NULLS FIRST, TRIM(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST, (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))AND((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1)) BETWEEN ((((vt1.c0)>(vt0.c1)))) AND ((0Xffffffffd96a5846))) DESC  NULLS FIRST, TRIM(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST, (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))AND((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) ORDER BY (((vt0.c1)) BETWEEN ((((vt1.c0)>(vt0.c1)))) AND ((0xffffffffd96a5846))) DESC  NULLS FIRST, TRIM(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST, (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))AND((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM((NOT (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM((NOT (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM((NOT (vt1.c0))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt1.c0)))%(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))%(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt1.c0)))%(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))%(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt1.c0)))%(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) IN ())) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN '' WHEN ROUND(vt0.c1, vt0.c0) THEN UPPER(vt0.c1) WHEN ((vt0.c0)IS(-1967351239)) THEN '0.5228351975089323' ELSE CASE vt0.c1  WHEN NULL THEN vt0.c1 ELSE x'' END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN '' WHEN ROUND(vt0.c1, vt0.c0) THEN UPPER(vt0.c1) WHEN ((vt0.c0)IS(-1967351239)) THEN '0.5228351975089323' ELSE CASE vt0.c1  WHEN NULL THEN vt0.c1 ELSE x'' END END  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) IN ())) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN '' WHEN ROUND(vt0.c1, vt0.c0) THEN UPPER(vt0.c1) WHEN ((vt0.c0)IS(-1967351239)) THEN '0.5228351975089323' ELSE CASE vt0.c1  WHEN NULL THEN vt0.c1 ELSE x'' END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN '' WHEN ROUND(vt0.c1, vt0.c0) THEN UPPER(vt0.c1) WHEN ((vt0.c0)IS(-1967351239)) THEN '0.5228351975089323' ELSE CASE vt0.c1  WHEN NULL THEN vt0.c1 ELSE x'' END END  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) IN ())) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN '' WHEN ROUND(vt0.c1, vt0.c0) THEN UPPER(vt0.c1) WHEN ((vt0.c0)IS(-1967351239)) THEN '0.5228351975089323' ELSE CASE vt0.c1  WHEN NULL THEN vt0.c1 ELSE x'' END END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS BLOB) WHERE (((((vt0.c1)|(vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)|(vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS BLOB) WHERE (((((vt0.c1)|(vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)|(vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS BLOB) WHERE (((((vt0.c1)|(vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ()))));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((CAST(vt0.c1 AS INTEGER)))==((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) DESC  NULLS LAST, CAST(IFNULL(DISTINCT vt0.c1, 279992474) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c1 AS INTEGER)))=((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) DESC  NULLS LAST, CAST(IFNULL(DISTINCT vt0.c1, 279992474) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((CAST(vt0.c1 AS INTEGER)))==((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) DESC  NULLS LAST, CAST(IFNULL(DISTINCT vt0.c1, 279992474) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c1 AS INTEGER)))=((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) DESC  NULLS LAST, CAST(IFNULL(DISTINCT vt0.c1, 279992474) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((CAST(vt0.c1 AS INTEGER)))==((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) DESC  NULLS LAST, CAST(IFNULL(DISTINCT vt0.c1, 279992474) AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c1)!=(vt0.c0)))))) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c1)<>(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c1)!=(vt0.c0)))))) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c1)<>(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c1)!=(vt0.c0)))))) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)>=('x}')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=('x}')) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)>=('x}')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=('x}')) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)>=('x}')) COLLATE BINARY);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((x'5bca9613') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'5bca9613') NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((x'5bca9613') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'5bca9613') NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((x'5bca9613') NOTNULL));
SELECT * FROM vt1 WHERE (((((vt1.c0 IN ())))==((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(1.536164869E9)))OR(vt1.c0)))))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE '^zBC'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))==((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(1.536164869E9)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE '^zBC'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0 IN ())))==((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(1.536164869E9)))OR(vt1.c0)))))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE '^zBC'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))==((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(1.536164869E9)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE '^zBC'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0 IN ())))==((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(1.536164869E9)))OR(vt1.c0)))))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST, (((vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE '^zBC'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) BETWEEN (((vt1.c0)&(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((vt1.c0)&(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) BETWEEN (((vt1.c0)&(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((vt1.c0)&(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) BETWEEN (((vt1.c0)&(vt1.c0))) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c1 IN ()), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE -1500284598 END)) AND (('t༧', ((vt0.c1)||('''DDKpjX')), (((vt0.c0))<((vt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c1 IN ()), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE -1500284598 END)) AND (('t༧', ((vt0.c1)||('''DDKpjX')), (((vt0.c0))<((vt0.c1))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c1 IN ()), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE -1500284598 END)) AND (('t༧', ((vt0.c1)||('''DDKpjX')), (((vt0.c0))<((vt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c1 IN ()), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE -1500284598 END)) AND (('t༧', ((vt0.c1)||('''DDKpjX')), (((vt0.c0))<((vt0.c1))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c1 IN ()), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE -1500284598 END)) AND (('t༧', ((vt0.c1)||('''DDKpjX')), (((vt0.c0))<((vt0.c1)))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))!=(((((vt1.c0)AND(vt0.c1)))OR(x'')))) WHERE ((IFNULL(DISTINCT vt0.c0, vt1.c0) IN (((0.6564227418838148) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(((vt1.c0) BETWEEN (0xffffffff9989cd70) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(DISTINCT vt0.c0, vt1.c0) IN (((0.6564227418838148) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))<>(((((vt1.c0)AND(vt0.c1)))OR(x'')))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(((vt1.c0) BETWEEN (0xffffffff9989cd70) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))!=(((((vt1.c0)AND(vt0.c1)))OR(x'')))) WHERE ((IFNULL(DISTINCT vt0.c0, vt1.c0) IN (((0.6564227418838148) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(((vt1.c0) BETWEEN (0xffffffff9989cd70) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(DISTINCT vt0.c0, vt1.c0) IN (((0.6564227418838148) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))<>(((((vt1.c0)AND(vt0.c1)))OR(x'')))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(((vt1.c0) BETWEEN (0xffffffff9989cd70) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))!=(((((vt1.c0)AND(vt0.c1)))OR(x'')))) WHERE ((IFNULL(DISTINCT vt0.c0, vt1.c0) IN (((0.6564227418838148) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE(((vt1.c0) BETWEEN (0xffffffff9989cd70) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))>>(((vt1.c0)>=(vt0.c0)))) WHERE (CAST(((vt0.c1) IS TRUE) AS TEXT)) ORDER BY ((x'')OR(184852895));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))>>(((vt1.c0)>=(vt0.c0)))) ORDER BY ((x'')OR(184852895)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))>>(((vt1.c0)>=(vt0.c0)))) WHERE (CAST(((vt0.c1) IS TRUE) AS TEXT)) ORDER BY ((x'')OR(184852895));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))>>(((vt1.c0)>=(vt0.c0)))) ORDER BY ((x'')OR(184852895)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))>>(((vt1.c0)>=(vt0.c0)))) WHERE (CAST(((vt0.c1) IS TRUE) AS TEXT)) ORDER BY ((x'')OR(184852895));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c1 COLLATE RTRIM))) ORDER BY (- (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER))+((('-1880276922') NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER))+((('-1880276922') NOTNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c1 COLLATE RTRIM))) ORDER BY (- (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER))+((('-1880276922') NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER))+((('-1880276922') NOTNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c1 COLLATE RTRIM))) ORDER BY (- (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, ((CAST(vt0.c0 AS INTEGER))+((('-1880276922') NOTNULL))) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((- (NULL))))) ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((CAST(vt0.c0 AS NUMERIC)))) ASC  NULLS FIRST, (NOT (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((- (NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((CAST(vt0.c0 AS NUMERIC)))) ASC  NULLS FIRST, (NOT (((vt0.c0) NOTNULL))));
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((- (NULL))))) ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((CAST(vt0.c0 AS NUMERIC)))) ASC  NULLS FIRST, (NOT (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((- (NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((CAST(vt0.c0 AS NUMERIC)))) ASC  NULLS FIRST, (NOT (((vt0.c0) NOTNULL))));
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((- (NULL))))) ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((CAST(vt0.c0 AS NUMERIC)))) ASC  NULLS FIRST, (NOT (((vt0.c0) NOTNULL)));
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0, vt0.c0, vt0.c0))>((x'a8bc', vt1.c0, vt0.c0))) IN (x'', (vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c0, vt0.c0))>((x'a8bc', vt1.c0, vt0.c0))) IN (x'', (vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0, vt0.c0, vt0.c0))>((x'a8bc', vt1.c0, vt0.c0))) IN (x'', (vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c0, vt0.c0))>((x'a8bc', vt1.c0, vt0.c0))) IN (x'', (vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0, vt0.c0, vt0.c0))>((x'a8bc', vt1.c0, vt0.c0))) IN (x'', (vt1.c0 IN ()))));
SELECT * FROM vt1 CROSS JOIN vt0 ON vt1.c0 COLLATE NOCASE WHERE (((HEX(DISTINCT vt0.c0))<=(((vt1.c0)GLOB(vt0.c1))))) ORDER BY HEX(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.4015521723424066))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt0.c0))<=(((vt1.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt1.c0 COLLATE NOCASE ORDER BY HEX(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.4015521723424066))  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN vt0 ON vt1.c0 COLLATE NOCASE WHERE (((HEX(DISTINCT vt0.c0))<=(((vt1.c0)GLOB(vt0.c1))))) ORDER BY HEX(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.4015521723424066))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt0.c0))<=(((vt1.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt1.c0 COLLATE NOCASE ORDER BY HEX(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.4015521723424066))  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN vt0 ON vt1.c0 COLLATE NOCASE WHERE (((HEX(DISTINCT vt0.c0))<=(((vt1.c0)GLOB(vt0.c1))))) ORDER BY HEX(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.4015521723424066))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1)LIKE(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, -5.09597802E8, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))) AS REAL)) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, -5.09597802E8, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, -5.09597802E8, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))) AS REAL)) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, -5.09597802E8, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, -5.09597802E8, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))) AS REAL)) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((('-1068627643' IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((('-1068627643' IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((('-1068627643' IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((('-1068627643' IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((('-1068627643' IN ())) NOT NULL));
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY vt1.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY vt1.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY vt1.c0 COLLATE NOCASE;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((NULL) BETWEEN (SUBSTR(vt1.c0, NULL)) AND (((vt0.c1)%(vt1.c0)))) WHERE ((+ (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((NULL) BETWEEN (SUBSTR(vt1.c0, NULL)) AND (((vt0.c1)%(vt1.c0)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((NULL) BETWEEN (SUBSTR(vt1.c0, NULL)) AND (((vt0.c1)%(vt1.c0)))) WHERE ((+ (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((NULL) BETWEEN (SUBSTR(vt1.c0, NULL)) AND (((vt0.c1)%(vt1.c0)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((NULL) BETWEEN (SUBSTR(vt1.c0, NULL)) AND (((vt0.c1)%(vt1.c0)))) WHERE ((+ (vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS TEXT)))<=((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) ORDER BY 0x17f895b9  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS TEXT)))<=((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0x17f895b9  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS TEXT)))<=((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) ORDER BY 0x17f895b9  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS TEXT)))<=((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0x17f895b9  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)*(vt1.c0))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)*(vt1.c0))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)*(vt1.c0))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1 IN ()) IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))+(((vt0.c0) NOT NULL)))) ORDER BY (((((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, NULL, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0))))AND(((('rFqi澣/?'))<=((vt0.c0))))))OR(ROUND(-2.127193029E9, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c1)))+(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, NULL, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0))))AND(((('rFqi澣/?'))<=((vt0.c0))))))OR(ROUND(-2.127193029E9, vt0.c0)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))+(((vt0.c0) NOT NULL)))) ORDER BY (((((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, NULL, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0))))AND(((('rFqi澣/?'))<=((vt0.c0))))))OR(ROUND(-2.127193029E9, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c1)))+(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, NULL, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0))))AND(((('rFqi澣/?'))<=((vt0.c0))))))OR(ROUND(-2.127193029E9, vt0.c0)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))+(((vt0.c0) NOT NULL)))) ORDER BY (((((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, NULL, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0))))AND(((('rFqi澣/?'))<=((vt0.c0))))))OR(ROUND(-2.127193029E9, vt0.c0)))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY '0.2655476894054727';
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY '0.2655476894054727');
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY '0.2655476894054727';
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY '0.2655476894054727');
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY '0.2655476894054727';
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())) ORDER BY vt0.c1 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1 COLLATE RTRIM ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())) ORDER BY vt0.c1 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1 COLLATE RTRIM ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)) IN ())) ORDER BY vt0.c1 COLLATE RTRIM ASC;
SELECT ALL * FROM vt1 WHERE (0x64af067e);
SELECT SUM(count) FROM (SELECT ((0x64af067e) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0x64af067e);
SELECT SUM(count) FROM (SELECT ((0x64af067e) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0x64af067e);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0 IN ()))||(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))||(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0 IN ()))||(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))||(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0 IN ()))||(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1))))>=((CAST(NULL AS BLOB))))) ORDER BY (((((x'24bd6925')) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END) AND ((vt0.c1 IN ())))  NULLS FIRST, ((LTRIM(vt0.c1))<<(CASE WHEN vt0.c1 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1))))>=((CAST(NULL AS BLOB))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((x'24bd6925')) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END) AND ((vt0.c1 IN ())))  NULLS FIRST, ((LTRIM(vt0.c1))<<(CASE WHEN vt0.c1 THEN vt1.c0 END)));
SELECT * FROM vt0, vt1 WHERE ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1))))>=((CAST(NULL AS BLOB))))) ORDER BY (((((x'24bd6925')) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END) AND ((vt0.c1 IN ())))  NULLS FIRST, ((LTRIM(vt0.c1))<<(CASE WHEN vt0.c1 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1))))>=((CAST(NULL AS BLOB))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((x'24bd6925')) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END) AND ((vt0.c1 IN ())))  NULLS FIRST, ((LTRIM(vt0.c1))<<(CASE WHEN vt0.c1 THEN vt1.c0 END)));
SELECT * FROM vt0, vt1 WHERE ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c1))))>=((CAST(NULL AS BLOB))))) ORDER BY (((((x'24bd6925')) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END) AND ((vt0.c1 IN ())))  NULLS FIRST, ((LTRIM(vt0.c1))<<(CASE WHEN vt0.c1 THEN vt1.c0 END));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c1, vt0.c1)))) AND ((-1499371480))) WHERE ((NOT (((vt1.c0) NOT NULL)))) ORDER BY 721621245  NULLS FIRST, (((vt0.c0 IN (vt0.c1, vt0.c0)))>=(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c1, vt0.c1)))) AND ((-1499371480))) ORDER BY 721621245  NULLS FIRST, (((vt0.c0 IN (vt0.c1, vt0.c0)))>=(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, vt1.c0);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c1, vt0.c1)))) AND ((-1499371480))) WHERE ((NOT (((vt1.c0) NOT NULL)))) ORDER BY 721621245  NULLS FIRST, (((vt0.c0 IN (vt0.c1, vt0.c0)))>=(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c1, vt0.c1)))) AND ((-1499371480))) ORDER BY 721621245  NULLS FIRST, (((vt0.c0 IN (vt0.c1, vt0.c0)))>=(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('-1122415677') ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)!=(vt1.c0))) AND (((vt0.c0) IS TRUE))), (((vt1.c0 IN (vt0.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)<<(vt0.c1)))) DESC, (((vt0.c1) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (('-1122415677') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)<>(vt1.c0))) AND (((vt0.c0) IS TRUE))), (((vt1.c0 IN (vt0.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)<<(vt0.c1)))) DESC, (((vt0.c1) IS TRUE) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('-1122415677') ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)!=(vt1.c0))) AND (((vt0.c0) IS TRUE))), (((vt1.c0 IN (vt0.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)<<(vt0.c1)))) DESC, (((vt0.c1) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (('-1122415677') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)<>(vt1.c0))) AND (((vt0.c0) IS TRUE))), (((vt1.c0 IN (vt0.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)<<(vt0.c1)))) DESC, (((vt0.c1) IS TRUE) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('-1122415677') ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)!=(vt1.c0))) AND (((vt0.c0) IS TRUE))), (((vt1.c0 IN (vt0.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)<<(vt0.c1)))) DESC, (((vt0.c1) IS TRUE) IN ()) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((+ (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), '%A'))<((('1381685661' IN ()), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c1)))) ORDER BY ((LIKELY(vt0.c0))%((((vt0.c0))>((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), '%A'))<((('1381685661' IN ()), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c0))%((((vt0.c0))>((vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((+ (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), '%A'))<((('1381685661' IN ()), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c1)))) ORDER BY ((LIKELY(vt0.c0))%((((vt0.c0))>((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), '%A'))<((('1381685661' IN ()), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c0))%((((vt0.c0))>((vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((+ (vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), '%A'))<((('1381685661' IN ()), ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c1)))) ORDER BY ((LIKELY(vt0.c0))%((((vt0.c0))>((vt0.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON LOWER(vt1.c0) COLLATE RTRIM WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<=(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON LOWER(vt1.c0) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON LOWER(vt1.c0) COLLATE RTRIM WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<=(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON LOWER(vt1.c0) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON LOWER(vt1.c0) COLLATE RTRIM WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<=(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1 WHERE ((+ (MAX(vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((+ (MAX(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (MAX(vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((+ (MAX(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (MAX(vt1.c0, vt1.c0))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN (('-1797279157')) AND ((((vt1.c0)%(vt1.c0)))))) ORDER BY json_valid((vt1.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (('-1797279157')) AND ((((vt1.c0)%(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY json_valid((vt1.c0 IN ()))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN (('-1797279157')) AND ((((vt1.c0)%(vt1.c0)))))) ORDER BY json_valid((vt1.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (('-1797279157')) AND ((((vt1.c0)%(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY json_valid((vt1.c0 IN ()))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN (('-1797279157')) AND ((((vt1.c0)%(vt1.c0)))))) ORDER BY json_valid((vt1.c0 IN ()))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (json_patch(CASE vt1.c0  WHEN -1.526802173E9 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0));
SELECT SUM(count) FROM (SELECT ((json_patch(CASE vt1.c0  WHEN -1.526802173E9 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (json_patch(CASE vt1.c0  WHEN -1.526802173E9 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0));
SELECT SUM(count) FROM (SELECT ((json_patch(CASE vt1.c0  WHEN -1.526802173E9 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) BETWEEN ((NOT (vt0.c1))) AND (vt1.c0))) ORDER BY (((vt0.c1 IN ()))>(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) BETWEEN ((NOT (vt0.c1))) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1 IN ()))>(CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) BETWEEN ((NOT (vt0.c1))) AND (vt1.c0))) ORDER BY (((vt0.c1 IN ()))>(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) BETWEEN ((NOT (vt0.c1))) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1 IN ()))>(CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) BETWEEN ((NOT (vt0.c1))) AND (vt1.c0))) ORDER BY (((vt0.c1 IN ()))>(CAST(vt0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY);
SELECT * FROM vt1 WHERE (0.11235735492246568) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((0.11235735492246568) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE (0.11235735492246568) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((0.11235735492246568) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE (0.11235735492246568) ORDER BY vt1.c0;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0))) NOT BETWEEN (0xffffffff8f2056af) AND (vt0.c1)) WHERE ((~ (((vt0.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0))) NOT BETWEEN (0xffffffff8f2056af) AND (vt0.c1)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0))) NOT BETWEEN (0xffffffff8f2056af) AND (vt0.c1)) WHERE ((~ (((vt0.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0))) NOT BETWEEN (0xffffffff8f2056af) AND (vt0.c1)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0)+(vt0.c0))) NOT BETWEEN (0xffffffff8f2056af) AND (vt0.c1)) WHERE ((~ (((vt0.c0)-(vt1.c0)))));
SELECT * FROM vt1 NOT INDEXED WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' END ELSE ((vt1.c0)>>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS REAL)  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' END ELSE ((vt1.c0)>>(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 NOT INDEXED WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' END ELSE ((vt1.c0)>>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS REAL)  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' END ELSE ((vt1.c0)>>(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 NOT INDEXED WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' END ELSE ((vt1.c0)>>(vt1.c0)) END);
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (((x'')<(vt0.c0))) ORDER BY (- ((- (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((- (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (((x'')<(vt0.c0))) ORDER BY (- ((- (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((- (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (((x'')<(vt0.c0))) ORDER BY (- ((- (vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE COLLATE NOCASE) ORDER BY (- ((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c0, vt0.c1, vt1.c0)))))  NULLS LAST, ((x'' COLLATE BINARY)IS NOT(((vt0.c1) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c0, vt0.c1, vt1.c0)))))  NULLS LAST, ((x'' COLLATE BINARY)IS NOT(((vt0.c1) ISNULL))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE COLLATE NOCASE) ORDER BY (- ((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c0, vt0.c1, vt1.c0)))))  NULLS LAST, ((x'' COLLATE BINARY)IS NOT(((vt0.c1) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c0, vt0.c1, vt1.c0)))))  NULLS LAST, ((x'' COLLATE BINARY)IS NOT(((vt0.c1) ISNULL))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE COLLATE NOCASE) ORDER BY (- ((((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c0, vt0.c1, vt1.c0)))))  NULLS LAST, ((x'' COLLATE BINARY)IS NOT(((vt0.c1) ISNULL))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY ((vt0.c0) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND ((NULL IN (vt0.c1))))  NULLS FIRST, LIKELIHOOD(vt1.c0 COLLATE NOCASE, 0.9398052814840229) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND ((NULL IN (vt0.c1))))  NULLS FIRST, LIKELIHOOD(vt1.c0 COLLATE NOCASE, 0.9398052814840229) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY ((vt0.c0) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND ((NULL IN (vt0.c1))))  NULLS FIRST, LIKELIHOOD(vt1.c0 COLLATE NOCASE, 0.9398052814840229) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND ((NULL IN (vt0.c1))))  NULLS FIRST, LIKELIHOOD(vt1.c0 COLLATE NOCASE, 0.9398052814840229) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY ((vt0.c0) NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND ((NULL IN (vt0.c1))))  NULLS FIRST, LIKELIHOOD(vt1.c0 COLLATE NOCASE, 0.9398052814840229) DESC;
SELECT ALL * FROM vt0 WHERE ((~ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ ((+ (vt0.c0)))));
SELECT * FROM vt0 WHERE (((((((((((vt0.c1) NOT NULL))AND(((vt0.c0)/(vt0.c0)))))AND(((NULL) NOT NULL))))OR(TRIM(DISTINCT vt0.c1))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY ((((vt0.c1) NOT NULL))OR(CAST(vt0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1) NOT NULL))AND(((vt0.c0)/(vt0.c0)))))AND(((NULL) NOT NULL))))OR(TRIM(DISTINCT vt0.c1))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL))OR(CAST(vt0.c1 AS INTEGER))) DESC);
SELECT * FROM vt0 WHERE (((((((((((vt0.c1) NOT NULL))AND(((vt0.c0)/(vt0.c0)))))AND(((NULL) NOT NULL))))OR(TRIM(DISTINCT vt0.c1))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY ((((vt0.c1) NOT NULL))OR(CAST(vt0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1) NOT NULL))AND(((vt0.c0)/(vt0.c0)))))AND(((NULL) NOT NULL))))OR(TRIM(DISTINCT vt0.c1))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL))OR(CAST(vt0.c1 AS INTEGER))) DESC);
SELECT * FROM vt0 WHERE (((((((((((vt0.c1) NOT NULL))AND(((vt0.c0)/(vt0.c0)))))AND(((NULL) NOT NULL))))OR(TRIM(DISTINCT vt0.c1))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY ((((vt0.c1) NOT NULL))OR(CAST(vt0.c1 AS INTEGER))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)<<(0.7042365789112033)) COLLATE BINARY) ORDER BY (((vt0.c0 COLLATE NOCASE))>=((((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(0.7042365789112033)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 COLLATE NOCASE))>=((((vt0.c1) ISNULL)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)<<(0.7042365789112033)) COLLATE BINARY) ORDER BY (((vt0.c0 COLLATE NOCASE))>=((((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(0.7042365789112033)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 COLLATE NOCASE))>=((((vt0.c1) ISNULL)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)<<(0.7042365789112033)) COLLATE BINARY) ORDER BY (((vt0.c0 COLLATE NOCASE))>=((((vt0.c1) ISNULL))));
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) IS TRUE), vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0) IS TRUE), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) IS TRUE), vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0) IS TRUE), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) IS TRUE), vt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY vt0.c0  NULLS FIRST;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL)) ORDER BY ((((vt1.c0)>(vt1.c0)))<<(CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)>(vt1.c0)))<<(CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL)) ORDER BY ((((vt1.c0)>(vt1.c0)))<<(CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)>(vt1.c0)))<<(CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL)) ORDER BY ((((vt1.c0)>(vt1.c0)))<<(CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN ())) ORDER BY CAST(vt1.c0 COLLATE BINARY AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt1.c0 COLLATE BINARY AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN ())) ORDER BY CAST(vt1.c0 COLLATE BINARY AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt1.c0 COLLATE BINARY AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN ())) ORDER BY CAST(vt1.c0 COLLATE BINARY AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0))<>((vt0.c1)))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((vt0.c1)))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0))<>((vt0.c1)))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((vt0.c1)))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0))<>((vt0.c1)))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c0)>=(vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ('1114262467' IN (((((x'')AND(vt1.c0)))AND(vt0.c0)))) WHERE ((((((0Xffffffffc04ac658)) BETWEEN ((vt0.c0)) AND ((NULL)))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND('zt,4lc%'))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((0xffffffffc04ac658)) BETWEEN ((vt0.c0)) AND ((NULL)))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND('zt,4lc%'))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ('1114262467' IN (((((x'')AND(vt1.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ('1114262467' IN (((((x'')AND(vt1.c0)))AND(vt0.c0)))) WHERE ((((((0Xffffffffc04ac658)) BETWEEN ((vt0.c0)) AND ((NULL)))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND('zt,4lc%'))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((0xffffffffc04ac658)) BETWEEN ((vt0.c0)) AND ((NULL)))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND('zt,4lc%'))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ('1114262467' IN (((((x'')AND(vt1.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ('1114262467' IN (((((x'')AND(vt1.c0)))AND(vt0.c0)))) WHERE ((((((0Xffffffffc04ac658)) BETWEEN ((vt0.c0)) AND ((NULL)))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND('zt,4lc%'))) AND (((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((2024785025)) AND (((+ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((2024785025)) AND (((+ (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((2024785025)) AND (((+ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((2024785025)) AND (((+ (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((2024785025)) AND (((+ (vt0.c1))))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((((vt0.c0))>((vt1.c0))))OR(HEX(vt0.c1))))AND((~ (vt0.c0)))))OR((vt0.c1 IN (vt1.c0, vt0.c0)))))OR((((vt0.c0))<=((vt0.c0)))))) ORDER BY ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)<>(((vt0.c1) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0))>((vt1.c0))))OR(HEX(vt0.c1))))AND((~ (vt0.c0)))))OR((vt0.c1 IN (vt1.c0, vt0.c0)))))OR((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)!=(((vt0.c1) NOT NULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((((vt0.c0))>((vt1.c0))))OR(HEX(vt0.c1))))AND((~ (vt0.c0)))))OR((vt0.c1 IN (vt1.c0, vt0.c0)))))OR((((vt0.c0))<=((vt0.c0)))))) ORDER BY ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)<>(((vt0.c1) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0))>((vt1.c0))))OR(HEX(vt0.c1))))AND((~ (vt0.c0)))))OR((vt0.c1 IN (vt1.c0, vt0.c0)))))OR((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)!=(((vt0.c1) NOT NULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((((vt0.c0))>((vt1.c0))))OR(HEX(vt0.c1))))AND((~ (vt0.c0)))))OR((vt0.c1 IN (vt1.c0, vt0.c0)))))OR((((vt0.c0))<=((vt0.c0)))))) ORDER BY ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)<>(((vt0.c1) NOT NULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((x'')*(vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')*(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((x'')*(vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')*(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((x'')*(vt0.c1)) AS BLOB));
SELECT * FROM vt1 WHERE ((~ ((((vt1.c0))!=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt1.c0))!=((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ ((((vt1.c0))!=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt1.c0))!=((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ ((((vt1.c0))!=((vt1.c0))))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (NULL IN (((vt0.c0)OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN (((vt0.c0)OR(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (NULL IN (((vt0.c0)OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN (((vt0.c0)OR(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (NULL IN (((vt0.c0)OR(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE json_type(vt1.c0)  WHEN ((((vt0.c0)AND(vt0.c1)))OR('1864467479')) THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE json_type(vt1.c0)  WHEN ((((vt0.c0)AND(vt0.c1)))OR('1864467479')) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE json_type(vt1.c0)  WHEN ((((vt0.c0)AND(vt0.c1)))OR('1864467479')) THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE json_type(vt1.c0)  WHEN ((((vt0.c0)AND(vt0.c1)))OR('1864467479')) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (721621245);
SELECT SUM(count) FROM (SELECT ALL ((721621245) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (721621245);
SELECT SUM(count) FROM (SELECT ALL ((721621245) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (721621245);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) NOT BETWEEN (((((vt0.c1)AND(vt1.c0)))AND(-2.127193029E9))) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) NOT BETWEEN (((((vt0.c1)AND(vt1.c0)))AND(-2.127193029E9))) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) NOT BETWEEN (((((vt0.c1)AND(vt1.c0)))AND(-2.127193029E9))) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) NOT BETWEEN (((((vt0.c1)AND(vt1.c0)))AND(-2.127193029E9))) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) NOT BETWEEN (((((vt0.c1)AND(vt1.c0)))AND(-2.127193029E9))) AND ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY)LIKE(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)LIKE(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY)LIKE(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)LIKE(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY)LIKE(vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON '5+G?|' WHERE ('㡧C''b罳Z2n2');
SELECT SUM(count) FROM (SELECT (('㡧C''b罳Z2n2') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON '5+G?|');
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON '5+G?|' WHERE ('㡧C''b罳Z2n2');
SELECT SUM(count) FROM (SELECT (('㡧C''b罳Z2n2') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON '5+G?|');
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON '5+G?|' WHERE ('㡧C''b罳Z2n2');
SELECT * FROM vt1, vt0 WHERE (LIKELY(DISTINCT vt0.c1 COLLATE BINARY)) ORDER BY (((UPPER(vt0.c1)))>((((vt1.c0) IS FALSE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((UPPER(vt0.c1)))>((((vt1.c0) IS FALSE))))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (LIKELY(DISTINCT vt0.c1 COLLATE BINARY)) ORDER BY (((UPPER(vt0.c1)))>((((vt1.c0) IS FALSE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((UPPER(vt0.c1)))>((((vt1.c0) IS FALSE))))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (LIKELY(DISTINCT vt0.c1 COLLATE BINARY)) ORDER BY (((UPPER(vt0.c1)))>((((vt1.c0) IS FALSE))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY IFNULL(((vt0.c1)OR(vt0.c0)), (~ (vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(((vt0.c1)OR(vt0.c0)), (~ (vt0.c1)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY IFNULL(((vt0.c1)OR(vt0.c0)), (~ (vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(((vt0.c1)OR(vt0.c0)), (~ (vt0.c1)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY IFNULL(((vt0.c1)OR(vt0.c0)), (~ (vt0.c1)))  NULLS LAST;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0);
SELECT * FROM vt0 WHERE (DATE(CAST(vt0.c1 AS REAL), ((vt0.c1) IS FALSE), (+ (vt0.c0)))) ORDER BY CAST(vt0.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATE(CAST(vt0.c1 AS REAL), ((vt0.c1) IS FALSE), (+ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (DATE(CAST(vt0.c1 AS REAL), ((vt0.c1) IS FALSE), (+ (vt0.c0)))) ORDER BY CAST(vt0.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATE(CAST(vt0.c1 AS REAL), ((vt0.c1) IS FALSE), (+ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (DATE(CAST(vt0.c1 AS REAL), ((vt0.c1) IS FALSE), (+ (vt0.c0)))) ORDER BY CAST(vt0.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(vt1.c0)))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(vt1.c0)))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt0.c0)==(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt0.c0)=(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt0.c0)==(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt0.c0)=(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt0.c0)==(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN '>#' WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE '5' END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN vt0.c0 THEN '>#' WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE '5' END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN '>#' WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE '5' END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN vt0.c0 THEN '>#' WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE '5' END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN '>#' WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE '5' END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT * FROM vt1 WHERE (NULLIF(vt1.c0 COLLATE NOCASE, ((vt1.c0)>=(vt1.c0)))) ORDER BY CASE WHEN x'' THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt1.c0 COLLATE NOCASE, ((vt1.c0)>=(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN x'' THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END);
SELECT * FROM vt1 WHERE (NULLIF(vt1.c0 COLLATE NOCASE, ((vt1.c0)>=(vt1.c0)))) ORDER BY CASE WHEN x'' THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt1.c0 COLLATE NOCASE, ((vt1.c0)>=(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN x'' THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END);
SELECT * FROM vt1 WHERE (NULLIF(vt1.c0 COLLATE NOCASE, ((vt1.c0)>=(vt1.c0)))) ORDER BY CASE WHEN x'' THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END;
SELECT * FROM vt0, vt1 WHERE (0X685aac7) ORDER BY CHANGES(), '!f' ASC;
SELECT SUM(count) FROM (SELECT ALL ((0X685aac7) IS TRUE)  as count FROM vt0, vt1 ORDER BY CHANGES(), '!f' ASC);
SELECT * FROM vt0, vt1 WHERE (0X685aac7) ORDER BY CHANGES(), '!f' ASC;
SELECT SUM(count) FROM (SELECT ALL ((0X685aac7) IS TRUE)  as count FROM vt0, vt1 ORDER BY CHANGES(), '!f' ASC);
SELECT * FROM vt0, vt1 WHERE (0X685aac7) ORDER BY CHANGES(), '!f' ASC;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)IS NOT(((vt0.c1)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS NOT(((vt0.c1)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)IS NOT(((vt0.c1)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS NOT(((vt0.c1)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)IS NOT(((vt0.c1)&(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((((vt1.c0)OR('1609069618')))AND(vt1.c0))) AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (((((vt1.c0)OR('1609069618')))AND(vt1.c0))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((((vt1.c0)OR('1609069618')))AND(vt1.c0))) AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (((((vt1.c0)OR('1609069618')))AND(vt1.c0))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((((vt1.c0)OR('1609069618')))AND(vt1.c0))) AND ((~ (vt1.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))))<=(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, ((((vt0.c1)GLOB(vt0.c1))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))))<=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, ((((vt0.c1)GLOB(vt0.c1))) NOT NULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))))<=(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, ((((vt0.c1)GLOB(vt0.c1))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))))<=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, ((((vt0.c1)GLOB(vt0.c1))) NOT NULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))))<=(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST, ((((vt0.c1)GLOB(vt0.c1))) NOT NULL)  NULLS LAST;
