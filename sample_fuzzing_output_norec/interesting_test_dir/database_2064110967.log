-- Time: 2024/06/10 06:39:52
-- Database: database67
-- Database version: 3.40.0
-- seed value: 2064110967
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT  CHECK ( NULL)); -- 0ms;
ANALYZE; -- 1ms;
VACUUM main; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT ALL load_extension(('-638134793' IN ())) FROM t0 WHERE (((((x'e189')OR(((('54523724'))>((0.6484288076356823))))))OR((0.16121476051098915 IN ())))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''), (0.9510566875680354), ('0\rj p'), ('54523724'), ('0\rj p'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('54523724'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (''), (x'b137'), (0.5336208589237513); -- 0ms;
PRAGMA temp.cache_spill = 1528430781378379277; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c68; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA automatic_index = true; -- 0ms;
UPDATE OR ABORT t0 SET (c68)=(0.5336208589237513); -- 0ms;
PRAGMA stats; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
UPDATE t0 SET c68=NULL WHERE ((((- (t0.c68))))=((((((t0.c68)OR(t0.c68)))OR(t0.c68))))); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''); -- 0ms;
COMMIT; -- 0ms;
PRAGMA cache_spill = -3247664812204914564; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE t0 SET (c68)=(NULL) WHERE json_valid(t0.c68) COLLATE RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c68) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (0Xffffffff8034cf73), (0.897090235534138), (x''), (0.16121476051098915); -- 0ms;
REINDEX NOCASE; -- 0ms;
CREATE UNIQUE INDEX i47 ON t0((((((c68))<>((c68))))IS NOT(((0xffffffff8e9c7845)&(c68)))) ASC); -- 0ms;
CREATE INDEX i55 ON t0(((((CASE c68  WHEN c68 THEN c68 WHEN c68 THEN NULL WHEN c68 THEN c68 END)AND(0.9086883274761526)))OR(((c68) NOT BETWEEN (c68) AND (c68)))) ASC); -- 0ms;
INSERT OR IGNORE INTO t0(c68) VALUES (-1450679966), (x''), (0X33ff74c); -- 0ms;
ANALYZE; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c68) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c68) VALUES (0.14291740501766015); -- 0ms;
PRAGMA main.journal_mode = DELETE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (x''), (0.17745364106914152); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
ANALYZE i55; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=54523724 unordered'); -- 0ms;
CREATE INDEX i69 ON t0((((c68, c68, c68)) NOT BETWEEN (((NOT (c68)), (c68 IN (c68)), ((c68) BETWEEN (c68) AND (c68)))) AND ((c68 COLLATE NOCASE, TRIM(DISTINCT c68), ((c68)GLOB(c68))))) ASC); -- 0ms;
PRAGMA temp.cache_spill = 4288470686860411164; -- 0ms;
PRAGMA cache_spill; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT OR ABORT INTO t0(c68) VALUES (0.05773892224492028), (x''), (x'b5e74baf'); -- 0ms;
DROP INDEX "i69"; -- 3ms;
INSERT OR IGNORE INTO vt0 VALUES ('D_OeS6[m3', ''), (NULL, '-1902348219'), (0.11203315440895012, '-2144022669'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0 WHERE (json_quote(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(vt0.c1)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_quote(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(vt0.c1)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_quote(vt0.c1));
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c0)) AS BLOB)) ORDER BY ((((((((((vt0.c1)OR('')))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1)OR('')))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) IS FALSE) DESC);
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c0)) AS BLOB)) ORDER BY ((((((((((vt0.c1)OR('')))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1)OR('')))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) IS FALSE) DESC);
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c0)) AS BLOB)) ORDER BY ((((((((((vt0.c1)OR('')))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (UNLIKELY(DISTINCT CASE WHEN NULL THEN t0.c68 END)) ORDER BY ((((v0.c0)%(x'')))AND('-1450679966')) DESC  NULLS LAST, json_array_length(((vt0.c0) NOT NULL)) DESC  NULLS FIRST, (CASE WHEN t0.c68 THEN vt0.c1 ELSE t0.c68 END IN (((vt0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CASE WHEN NULL THEN t0.c68 END)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((v0.c0)%(x'')))AND('-1450679966')) DESC  NULLS LAST, json_array_length(((vt0.c0) NOT NULL)) DESC  NULLS FIRST, (CASE WHEN t0.c68 THEN vt0.c1 ELSE t0.c68 END IN (((vt0.c1) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (UNLIKELY(DISTINCT CASE WHEN NULL THEN t0.c68 END)) ORDER BY ((((v0.c0)%(x'')))AND('-1450679966')) DESC  NULLS LAST, json_array_length(((vt0.c0) NOT NULL)) DESC  NULLS FIRST, (CASE WHEN t0.c68 THEN vt0.c1 ELSE t0.c68 END IN (((vt0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CASE WHEN NULL THEN t0.c68 END)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((v0.c0)%(x'')))AND('-1450679966')) DESC  NULLS LAST, json_array_length(((vt0.c0) NOT NULL)) DESC  NULLS FIRST, (CASE WHEN t0.c68 THEN vt0.c1 ELSE t0.c68 END IN (((vt0.c1) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((vt0.c0, vt0.c1, t0.c68)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0) IS TRUE), ((0.3280266739396005)IS NOT(vt0.c0)))) AND ((((((((((0.49855724193144035)OR(v0.c0)))OR(vt0.c0)))OR(t0.c68)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, ((((0.0)AND(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, t0.c68)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0) IS TRUE), ((0.3280266739396005)IS NOT(vt0.c0)))) AND ((((((((((0.49855724193144035)OR(v0.c0)))OR(vt0.c0)))OR(t0.c68)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, ((((0.0)AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((vt0.c0, vt0.c1, t0.c68)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0) IS TRUE), ((0.3280266739396005)IS NOT(vt0.c0)))) AND ((((((((((0.49855724193144035)OR(v0.c0)))OR(vt0.c0)))OR(t0.c68)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, ((((0.0)AND(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, t0.c68)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0) IS TRUE), ((0.3280266739396005)IS NOT(vt0.c0)))) AND ((((((((((0.49855724193144035)OR(v0.c0)))OR(vt0.c0)))OR(t0.c68)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, ((((0.0)AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM t0 WHERE ((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((CAST(t0.c68 AS REAL))))) ORDER BY ((((((t0.c68)-(t0.c68)))AND(t0.c68)))AND(((t0.c68)>>(t0.c68))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((CAST(t0.c68 AS REAL))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c68)-(t0.c68)))AND(t0.c68)))AND(((t0.c68)>>(t0.c68)))));
SELECT ALL * FROM t0 WHERE ((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((CAST(t0.c68 AS REAL))))) ORDER BY ((((((t0.c68)-(t0.c68)))AND(t0.c68)))AND(((t0.c68)>>(t0.c68))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((CAST(t0.c68 AS REAL))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c68)-(t0.c68)))AND(t0.c68)))AND(((t0.c68)>>(t0.c68)))));
SELECT ALL * FROM t0 WHERE ((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((CAST(t0.c68 AS REAL))))) ORDER BY ((((((t0.c68)-(t0.c68)))AND(t0.c68)))AND(((t0.c68)>>(t0.c68))));
SELECT ALL * FROM v0 WHERE ((INSTR(v0.c0, v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((INSTR(v0.c0, v0.c0) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((INSTR(v0.c0, v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((INSTR(v0.c0, v0.c0) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((INSTR(v0.c0, v0.c0) IN ()));
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((t0.c68) IS TRUE) IN (((vt0.c1)!=(vt0.c1)))) RIGHT OUTER JOIN t0 ON vt0.c0 WHERE (((((t0.c68) IS TRUE)) BETWEEN (t0.c68 COLLATE NOCASE) AND (''))) ORDER BY ((((((vt0.c0)OR(t0.c68)))OR(t0.c68)))/(((t0.c68)>=(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) IS TRUE)) BETWEEN (t0.c68 COLLATE NOCASE) AND (''))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((t0.c68) IS TRUE) IN (((vt0.c1)!=(vt0.c1)))) RIGHT OUTER JOIN t0 ON vt0.c0 ORDER BY ((((((vt0.c0)OR(t0.c68)))OR(t0.c68)))/(((t0.c68)>=(vt0.c1)))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((t0.c68) IS TRUE) IN (((vt0.c1)!=(vt0.c1)))) RIGHT OUTER JOIN t0 ON vt0.c0 WHERE (((((t0.c68) IS TRUE)) BETWEEN (t0.c68 COLLATE NOCASE) AND (''))) ORDER BY ((((((vt0.c0)OR(t0.c68)))OR(t0.c68)))/(((t0.c68)>=(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) IS TRUE)) BETWEEN (t0.c68 COLLATE NOCASE) AND (''))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((t0.c68) IS TRUE) IN (((vt0.c1)!=(vt0.c1)))) RIGHT OUTER JOIN t0 ON vt0.c0 ORDER BY ((((((vt0.c0)OR(t0.c68)))OR(t0.c68)))/(((t0.c68)>=(vt0.c1)))));
SELECT * FROM t0 INNER JOIN vt0 ON x'' WHERE (CASE WHEN '635650553' THEN ((t0.c68)|(vt0.c0)) ELSE CASE t0.c68  WHEN vt0.c0 THEN NULL ELSE t0.c68 END END) ORDER BY '1' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '635650553' THEN ((t0.c68)|(vt0.c0)) ELSE CASE t0.c68  WHEN vt0.c0 THEN NULL ELSE t0.c68 END END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON x'' ORDER BY '1' ASC  NULLS LAST);
SELECT * FROM t0 INNER JOIN vt0 ON x'' WHERE (CASE WHEN '635650553' THEN ((t0.c68)|(vt0.c0)) ELSE CASE t0.c68  WHEN vt0.c0 THEN NULL ELSE t0.c68 END END) ORDER BY '1' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '635650553' THEN ((t0.c68)|(vt0.c0)) ELSE CASE t0.c68  WHEN vt0.c0 THEN NULL ELSE t0.c68 END END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON x'' ORDER BY '1' ASC  NULLS LAST);
SELECT * FROM t0 INNER JOIN vt0 ON x'' WHERE (CASE WHEN '635650553' THEN ((t0.c68)|(vt0.c0)) ELSE CASE t0.c68  WHEN vt0.c0 THEN NULL ELSE t0.c68 END END) ORDER BY '1' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)) WHERE (((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))) ISNULL)) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) THEN NULL WHEN CAST(vt0.c1 AS INTEGER) THEN v0.c0 COLLATE NOCASE ELSE ((vt0.c0)-(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) THEN NULL WHEN CAST(vt0.c1 AS INTEGER) THEN v0.c0 COLLATE NOCASE ELSE ((vt0.c0)-(vt0.c0)) END);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)) WHERE (((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))) ISNULL)) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) THEN NULL WHEN CAST(vt0.c1 AS INTEGER) THEN v0.c0 COLLATE NOCASE ELSE ((vt0.c0)-(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (NOT (vt0.c1 COLLATE BINARY)) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) THEN NULL WHEN CAST(vt0.c1 AS INTEGER) THEN v0.c0 COLLATE NOCASE ELSE ((vt0.c0)-(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS FALSE)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS FALSE)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((vt0.c1) IS FALSE));
SELECT ALL * FROM t0 WHERE ((+ (((((t0.c68)OR(t0.c68)))OR(NULL))))) ORDER BY (((t0.c68 IN ()))<<(((x'')>=(t0.c68)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c68)OR(t0.c68)))OR(NULL))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68 IN ()))<<(((x'')>=(t0.c68)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((+ (((((t0.c68)OR(t0.c68)))OR(NULL))))) ORDER BY (((t0.c68 IN ()))<<(((x'')>=(t0.c68)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c68)OR(t0.c68)))OR(NULL))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68 IN ()))<<(((x'')>=(t0.c68)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((+ (((((t0.c68)OR(t0.c68)))OR(NULL))))) ORDER BY (((t0.c68 IN ()))<<(((x'')>=(t0.c68)))) DESC  NULLS FIRST;
SELECT * FROM v0 CROSS JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)GLOB(((vt0.c1)>>(vt0.c0)))) WHERE ((((~ (v0.c0))) NOT NULL)) ORDER BY json_object(((vt0.c0)>(vt0.c0)), LOWER(vt0.c1), ((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)), v0.c0), 0xffffffffa9886162 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)GLOB(((vt0.c1)>>(vt0.c0)))) ORDER BY json_object(((vt0.c0)>(vt0.c0)), LOWER(vt0.c1), ((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)), v0.c0), 0Xffffffffa9886162 ASC  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)GLOB(((vt0.c1)>>(vt0.c0)))) WHERE ((((~ (v0.c0))) NOT NULL)) ORDER BY json_object(((vt0.c0)>(vt0.c0)), LOWER(vt0.c1), ((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)), v0.c0), 0xffffffffa9886162 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)GLOB(((vt0.c1)>>(vt0.c0)))) ORDER BY json_object(((vt0.c0)>(vt0.c0)), LOWER(vt0.c1), ((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0)), v0.c0), 0Xffffffffa9886162 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((vt0.c0 IN ()))=(((vt0.c1) BETWEEN (vt0.c0) AND ('-2144022669'))))) ORDER BY ((t0.c68) NOTNULL) COLLATE RTRIM DESC, ((t0.c68) IS TRUE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))==(((vt0.c1) BETWEEN (vt0.c0) AND ('-2144022669'))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((t0.c68) NOTNULL) COLLATE RTRIM DESC, ((t0.c68) IS TRUE) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((vt0.c0 IN ()))=(((vt0.c1) BETWEEN (vt0.c0) AND ('-2144022669'))))) ORDER BY ((t0.c68) NOTNULL) COLLATE RTRIM DESC, ((t0.c68) IS TRUE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))==(((vt0.c1) BETWEEN (vt0.c0) AND ('-2144022669'))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((t0.c68) NOTNULL) COLLATE RTRIM DESC, ((t0.c68) IS TRUE) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((vt0.c0 IN ()))=(((vt0.c1) BETWEEN (vt0.c0) AND ('-2144022669'))))) ORDER BY ((t0.c68) NOTNULL) COLLATE RTRIM DESC, ((t0.c68) IS TRUE) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM v0, t0, vt0 WHERE ((v0.c0 IN (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((v0.c0 IN (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((CASE '￿G'  WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN 0x7fe7f6fc ELSE v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE '￿G'  WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN 0X7fe7f6fc ELSE v0.c0 END IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((CASE '￿G'  WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN 0x7fe7f6fc ELSE v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE '￿G'  WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN 0X7fe7f6fc ELSE v0.c0 END IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((CASE '￿G'  WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN 0x7fe7f6fc ELSE v0.c0 END IN ()));
SELECT ALL * FROM t0, v0 WHERE (((x'8d57') ISNULL)) ORDER BY NULL DESC, CASE WHEN ((t0.c68)IS(t0.c68)) THEN v0.c0 COLLATE NOCASE WHEN CASE WHEN t0.c68 THEN NULL END THEN ((v0.c0)IS NOT(x'')) WHEN (- (NULL)) THEN (+ (v0.c0)) END, CAST(((t0.c68)&(v0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((x'8d57') ISNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY NULL DESC, CASE WHEN ((t0.c68)IS(t0.c68)) THEN v0.c0 COLLATE NOCASE WHEN CASE WHEN t0.c68 THEN NULL END THEN ((v0.c0)IS NOT(x'')) WHEN (- (NULL)) THEN (+ (v0.c0)) END, CAST(((t0.c68)&(v0.c0)) AS REAL) ASC);
SELECT ALL * FROM t0, v0 WHERE (((x'8d57') ISNULL)) ORDER BY NULL DESC, CASE WHEN ((t0.c68)IS(t0.c68)) THEN v0.c0 COLLATE NOCASE WHEN CASE WHEN t0.c68 THEN NULL END THEN ((v0.c0)IS NOT(x'')) WHEN (- (NULL)) THEN (+ (v0.c0)) END, CAST(((t0.c68)&(v0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((x'8d57') ISNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY NULL DESC, CASE WHEN ((t0.c68)IS(t0.c68)) THEN v0.c0 COLLATE NOCASE WHEN CASE WHEN t0.c68 THEN NULL END THEN ((v0.c0)IS NOT(x'')) WHEN (- (NULL)) THEN (+ (v0.c0)) END, CAST(((t0.c68)&(v0.c0)) AS REAL) ASC);
SELECT ALL * FROM t0 WHERE ((- (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))));
SELECT ALL * FROM v0, t0 WHERE ((((('54523724')/(v0.c0)))OR((- (v0.c0))))) ORDER BY ((((t0.c68)AND(v0.c0))) BETWEEN (((((v0.c0)OR(t0.c68)))OR(v0.c0))) AND (v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((((('54523724')/(v0.c0)))OR((- (v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c68)AND(v0.c0))) BETWEEN (((((v0.c0)OR(t0.c68)))OR(v0.c0))) AND (v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0, t0 WHERE ((((('54523724')/(v0.c0)))OR((- (v0.c0))))) ORDER BY ((((t0.c68)AND(v0.c0))) BETWEEN (((((v0.c0)OR(t0.c68)))OR(v0.c0))) AND (v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((((('54523724')/(v0.c0)))OR((- (v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c68)AND(v0.c0))) BETWEEN (((((v0.c0)OR(t0.c68)))OR(v0.c0))) AND (v0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((v0.c0)IS NOT(t0.c68)))*(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS NOT(t0.c68)))*(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, t0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((v0.c0)IS NOT(t0.c68)))*(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS NOT(t0.c68)))*(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, t0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN ())) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CASE WHEN v0.c0 THEN vt0.c1 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END)) WHERE ((((vt0.c1) IS FALSE) IN ())) ORDER BY ((vt0.c0)-((('?m	WYL') NOT BETWEEN (vt0.c0) AND (0.8247072821740434))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN ())) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CASE WHEN v0.c0 THEN vt0.c1 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END)) ORDER BY ((vt0.c0)-((('?m	WYL') NOT BETWEEN (vt0.c0) AND (0.8247072821740434))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN ())) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CASE WHEN v0.c0 THEN vt0.c1 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END)) WHERE ((((vt0.c1) IS FALSE) IN ())) ORDER BY ((vt0.c0)-((('?m	WYL') NOT BETWEEN (vt0.c0) AND (0.8247072821740434))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN ())) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CASE WHEN v0.c0 THEN vt0.c1 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END)) ORDER BY ((vt0.c0)-((('?m	WYL') NOT BETWEEN (vt0.c0) AND (0.8247072821740434))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN ())) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CASE WHEN v0.c0 THEN vt0.c1 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END)) WHERE ((((vt0.c1) IS FALSE) IN ())) ORDER BY ((vt0.c0)-((('?m	WYL') NOT BETWEEN (vt0.c0) AND (0.8247072821740434))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)/(t0.c68)))-((('')<=(t0.c68))))) ORDER BY (('') ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)/(t0.c68)))-((('')<=(t0.c68))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (('') ISNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)/(t0.c68)))-((('')<=(t0.c68))))) ORDER BY (('') ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)/(t0.c68)))-((('')<=(t0.c68))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (('') ISNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)/(t0.c68)))-((('')<=(t0.c68))))) ORDER BY (('') ISNULL);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)))AND((+ (v0.c0)))))OR((NOT (t0.c68))))) ORDER BY ((+ (vt0.c1)) IN ((((vt0.c1))<((vt0.c0))))), (CAST(v0.c0 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)))AND((+ (v0.c0)))))OR((NOT (t0.c68))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((+ (vt0.c1)) IN ((((vt0.c1))<((vt0.c0))))), (CAST(v0.c0 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)))AND((+ (v0.c0)))))OR((NOT (t0.c68))))) ORDER BY ((+ (vt0.c1)) IN ((((vt0.c1))<((vt0.c0))))), (CAST(v0.c0 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)))AND((+ (v0.c0)))))OR((NOT (t0.c68))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((+ (vt0.c1)) IN ((((vt0.c1))<((vt0.c0))))), (CAST(v0.c0 AS BLOB) IN ()));
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(CAST(NULL AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(NULL AS REAL) AS INTEGER)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(CAST(NULL AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(NULL AS REAL) AS INTEGER)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(CAST(NULL AS REAL) AS INTEGER));
SELECT * FROM vt0, t0 NATURAL JOIN v0 WHERE (((((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((0.14192934096040477, t0.c68, t0.c68)) AND ((t0.c68, x'', v0.c0))) IN (((NULL)*(v0.c0))))) ORDER BY CAST(x'' AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((0.14192934096040477, t0.c68, t0.c68)) AND ((t0.c68, x'', v0.c0))) IN (((NULL)*(v0.c0))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0 ORDER BY CAST(x'' AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM vt0, t0 NATURAL JOIN v0 WHERE (((((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((0.14192934096040477, t0.c68, t0.c68)) AND ((t0.c68, x'', v0.c0))) IN (((NULL)*(v0.c0))))) ORDER BY CAST(x'' AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((0.14192934096040477, t0.c68, t0.c68)) AND ((t0.c68, x'', v0.c0))) IN (((NULL)*(v0.c0))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0 ORDER BY CAST(x'' AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR('JBBlJR')))AND(t0.c68))) AND (CASE WHEN v0.c0 THEN t0.c68 ELSE vt0.c0 END)) WHERE (CAST((- (v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((- (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR('JBBlJR')))AND(t0.c68))) AND (CASE WHEN v0.c0 THEN t0.c68 ELSE vt0.c0 END)));
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR('JBBlJR')))AND(t0.c68))) AND (CASE WHEN v0.c0 THEN t0.c68 ELSE vt0.c0 END)) WHERE (CAST((- (v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((- (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR('JBBlJR')))AND(t0.c68))) AND (CASE WHEN v0.c0 THEN t0.c68 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((t0.c68)GLOB(x'bf8c'))) BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1))) AND (((((t0.c68)AND(t0.c68)))AND(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)GLOB(x'bf8c'))) BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1))) AND (((((t0.c68)AND(t0.c68)))AND(t0.c68))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((t0.c68)GLOB(x'bf8c'))) BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1))) AND (((((t0.c68)AND(t0.c68)))AND(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)GLOB(x'bf8c'))) BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1))) AND (((((t0.c68)AND(t0.c68)))AND(t0.c68))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((('1594547406') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('1594547406') IS FALSE)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((('1594547406') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('1594547406') IS FALSE)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((('1594547406') IS FALSE));
SELECT * FROM vt0 INDEXED BY i55 WHERE ((((((vt0.c0)*(vt0.c0))))>((CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)*(vt0.c0))))>((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 INDEXED BY i55);
SELECT * FROM vt0 INDEXED BY i55 WHERE ((((((vt0.c0)*(vt0.c0))))>((CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)*(vt0.c0))))>((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 INDEXED BY i55);
SELECT ALL * FROM t0 WHERE (HEX(((t0.c68) BETWEEN (t0.c68) AND (t0.c68))));
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (HEX(((t0.c68) BETWEEN (t0.c68) AND (t0.c68))));
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (HEX(((t0.c68) BETWEEN (t0.c68) AND (t0.c68))));
SELECT COUNT(*) FROM vt0 WHERE (CASE ('1594547406' IN ())  WHEN vt0.c1 THEN (vt0.c1 IN (vt0.c0)) ELSE ((vt0.c1)<>(vt0.c1)) END) ORDER BY ((((vt0.c0)+(vt0.c1)))-(vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE ('1594547406' IN ())  WHEN vt0.c1 THEN (vt0.c1 IN (vt0.c0)) ELSE ((vt0.c1)!=(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c1)))-(vt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (CASE ('1594547406' IN ())  WHEN vt0.c1 THEN (vt0.c1 IN (vt0.c0)) ELSE ((vt0.c1)<>(vt0.c1)) END) ORDER BY ((((vt0.c0)+(vt0.c1)))-(vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE ('1594547406' IN ())  WHEN vt0.c1 THEN (vt0.c1 IN (vt0.c0)) ELSE ((vt0.c1)!=(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c1)))-(vt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (CASE ('1594547406' IN ())  WHEN vt0.c1 THEN (vt0.c1 IN (vt0.c0)) ELSE ((vt0.c1)<>(vt0.c1)) END) ORDER BY ((((vt0.c0)+(vt0.c1)))-(vt0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)-(CAST(vt0.c1 AS BLOB)))) ORDER BY CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN COALESCE(DISTINCT vt0.c0, vt0.c1) THEN CASE WHEN '858753179' THEN vt0.c0 END WHEN ((vt0.c1)LIKE(vt0.c1)) THEN ((vt0.c1) IS TRUE) ELSE vt0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)-(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN COALESCE(DISTINCT vt0.c0, vt0.c1) THEN CASE WHEN '858753179' THEN vt0.c0 END WHEN ((vt0.c1)LIKE(vt0.c1)) THEN ((vt0.c1) IS TRUE) ELSE vt0.c0 COLLATE RTRIM END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)-(CAST(vt0.c1 AS BLOB)))) ORDER BY CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN COALESCE(DISTINCT vt0.c0, vt0.c1) THEN CASE WHEN '858753179' THEN vt0.c0 END WHEN ((vt0.c1)LIKE(vt0.c1)) THEN ((vt0.c1) IS TRUE) ELSE vt0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)-(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN COALESCE(DISTINCT vt0.c0, vt0.c1) THEN CASE WHEN '858753179' THEN vt0.c0 END WHEN ((vt0.c1)LIKE(vt0.c1)) THEN ((vt0.c1) IS TRUE) ELSE vt0.c0 COLLATE RTRIM END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)-(CAST(vt0.c1 AS BLOB)))) ORDER BY CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN COALESCE(DISTINCT vt0.c0, vt0.c1) THEN CASE WHEN '858753179' THEN vt0.c0 END WHEN ((vt0.c1)LIKE(vt0.c1)) THEN ((vt0.c1) IS TRUE) ELSE vt0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c68) IS TRUE) COLLATE BINARY) ORDER BY LOWER(DISTINCT CASE t0.c68  WHEN t0.c68 THEN t0.c68 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY LOWER(DISTINCT CASE t0.c68  WHEN t0.c68 THEN t0.c68 END) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c68) IS TRUE) COLLATE BINARY) ORDER BY LOWER(DISTINCT CASE t0.c68  WHEN t0.c68 THEN t0.c68 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY LOWER(DISTINCT CASE t0.c68  WHEN t0.c68 THEN t0.c68 END) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c68) IS TRUE) COLLATE BINARY) ORDER BY LOWER(DISTINCT CASE t0.c68  WHEN t0.c68 THEN t0.c68 END) ASC  NULLS FIRST;
SELECT ALL * FROM v0, t0, vt0 WHERE ((((CASE 1297975447  WHEN NULL THEN vt0.c1 END))<=((LIKE(vt0.c0, vt0.c0, ')')))));
SELECT SUM(count) FROM (SELECT (((((CASE 1297975447  WHEN NULL THEN vt0.c1 END))<=((LIKE(vt0.c0, vt0.c0, ')'))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((CASE 1297975447  WHEN NULL THEN vt0.c1 END))<=((LIKE(vt0.c0, vt0.c0, ')')))));
SELECT SUM(count) FROM (SELECT (((((CASE 1297975447  WHEN NULL THEN vt0.c1 END))<=((LIKE(vt0.c0, vt0.c0, ')'))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((CASE 1297975447  WHEN NULL THEN vt0.c1 END))<=((LIKE(vt0.c0, vt0.c0, ')')))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY ((vt0.c1) NOT NULL)  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c1) NOT NULL)  NULLS LAST, vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY ((vt0.c1) NOT NULL)  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c1) NOT NULL)  NULLS LAST, vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY ((vt0.c1) NOT NULL)  NULLS LAST, vt0.c0;
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT NULL)) ORDER BY (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, ((((vt0.c0))<>((vt0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL)) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, ((((vt0.c0))<>((vt0.c0))) IN ()) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT NULL)) ORDER BY (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, ((((vt0.c0))<>((vt0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL)) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, ((((vt0.c0))<>((vt0.c0))) IN ()) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT NULL)) ORDER BY (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, ((((vt0.c0))<>((vt0.c0))) IN ()) ASC;
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((t0.c68 IN ()))AND((t0.c68 IN ()))))AND(((0.3280266739396005)<<(v0.c0))))) ORDER BY ABS(((v0.c0) NOT BETWEEN (t0.c68) AND (v0.c0))) ASC  NULLS FIRST, ((((NULL)OR(((t0.c68) IS FALSE))))AND((((v0.c0)) BETWEEN ((t0.c68)) AND ((-1.450679966E9)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c68 IN ()))AND((t0.c68 IN ()))))AND(((0.3280266739396005)<<(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ABS(((v0.c0) NOT BETWEEN (t0.c68) AND (v0.c0))) ASC  NULLS FIRST, ((((NULL)OR(((t0.c68) IS FALSE))))AND((((v0.c0)) BETWEEN ((t0.c68)) AND ((-1.450679966E9))))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((t0.c68 IN ()))AND((t0.c68 IN ()))))AND(((0.3280266739396005)<<(v0.c0))))) ORDER BY ABS(((v0.c0) NOT BETWEEN (t0.c68) AND (v0.c0))) ASC  NULLS FIRST, ((((NULL)OR(((t0.c68) IS FALSE))))AND((((v0.c0)) BETWEEN ((t0.c68)) AND ((-1.450679966E9)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c68 IN ()))AND((t0.c68 IN ()))))AND(((0.3280266739396005)<<(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ABS(((v0.c0) NOT BETWEEN (t0.c68) AND (v0.c0))) ASC  NULLS FIRST, ((((NULL)OR(((t0.c68) IS FALSE))))AND((((v0.c0)) BETWEEN ((t0.c68)) AND ((-1.450679966E9))))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) IS TRUE) IN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN (LIKELY(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) IS TRUE) IN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN (LIKELY(v0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) IS TRUE) IN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN (LIKELY(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) IS TRUE) IN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN (LIKELY(v0.c0))) DESC  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE (TRIM(DISTINCT vt0.c0)) ORDER BY ((CASE WHEN t0.c68 THEN 0.37098368383929736 END)=(CASE vt0.c0  WHEN v0.c0 THEN x'' WHEN vt0.c0 THEN t0.c68 WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c0)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((CASE WHEN t0.c68 THEN 0.37098368383929736 END)==(CASE vt0.c0  WHEN v0.c0 THEN x'' WHEN vt0.c0 THEN t0.c68 WHEN v0.c0 THEN v0.c0 END)));
SELECT * FROM t0, v0, vt0 WHERE (TRIM(DISTINCT vt0.c0)) ORDER BY ((CASE WHEN t0.c68 THEN 0.37098368383929736 END)=(CASE vt0.c0  WHEN v0.c0 THEN x'' WHEN vt0.c0 THEN t0.c68 WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c0)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((CASE WHEN t0.c68 THEN 0.37098368383929736 END)==(CASE vt0.c0  WHEN v0.c0 THEN x'' WHEN vt0.c0 THEN t0.c68 WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0))<>((v0.c0))) AS INTEGER)) ORDER BY ((((v0.c0)AND(v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0))!=((v0.c0))) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(v0.c0))) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0))<>((v0.c0))) AS INTEGER)) ORDER BY ((((v0.c0)AND(v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0))!=((v0.c0))) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(v0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0) BETWEEN ('61918417') AND (vt0.c1))) IS FALSE)) ORDER BY (((vt0.c0 IN ())) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN ('61918417') AND (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0 IN ())) ISNULL) ASC);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0) BETWEEN ('61918417') AND (vt0.c1))) IS FALSE)) ORDER BY (((vt0.c0 IN ())) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN ('61918417') AND (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0 IN ())) ISNULL) ASC);
SELECT ALL * FROM vt0 WHERE ((~ (INSTR(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (INSTR(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (INSTR(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (INSTR(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (INSTR(vt0.c0, vt0.c1))));
SELECT ALL * FROM v0, vt0, t0 WHERE (((CAST(v0.c0 AS NUMERIC))AND('0.897090235534138')));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))AND('0.897090235534138'))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (((CAST(v0.c0 AS NUMERIC))AND('0.897090235534138')));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))AND('0.897090235534138'))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, t0);
SELECT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))+(((NULL) BETWEEN (vt0.c1) AND (v0.c0))))) ORDER BY ((TYPEOF(DISTINCT v0.c0)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))+(((NULL) BETWEEN (vt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((TYPEOF(DISTINCT v0.c0)) IS FALSE) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))+(((NULL) BETWEEN (vt0.c1) AND (v0.c0))))) ORDER BY ((TYPEOF(DISTINCT v0.c0)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))+(((NULL) BETWEEN (vt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((TYPEOF(DISTINCT v0.c0)) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)>=(t0.c68)))OR(t0.c68 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)>=(t0.c68)))OR(t0.c68 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)>=(t0.c68)))OR(t0.c68 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)>=(t0.c68)))OR(t0.c68 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)>=(t0.c68)))OR(t0.c68 COLLATE BINARY)));
SELECT * FROM v0, vt0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON IFNULL(DISTINCT ((NULL) NOTNULL), ((vt0.c0) IS FALSE)) WHERE (((((vt0.c1) BETWEEN (t0.c68) AND (v0.c0)))AND(''))) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) ISNULL) WHEN '?m	WYL' THEN vt0.c1 COLLATE NOCASE WHEN ((v0.c0)IS NOT(vt0.c1)) THEN 0.20142874785220644 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (t0.c68) AND (v0.c0)))AND(''))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON IFNULL(DISTINCT ((NULL) NOTNULL), ((vt0.c0) IS FALSE)) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) ISNULL) WHEN '?m	WYL' THEN vt0.c1 COLLATE NOCASE WHEN ((v0.c0)IS NOT(vt0.c1)) THEN 0.20142874785220644 END ASC);
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON IFNULL(DISTINCT ((NULL) NOTNULL), ((vt0.c0) IS FALSE)) WHERE (((((vt0.c1) BETWEEN (t0.c68) AND (v0.c0)))AND(''))) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) ISNULL) WHEN '?m	WYL' THEN vt0.c1 COLLATE NOCASE WHEN ((v0.c0)IS NOT(vt0.c1)) THEN 0.20142874785220644 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (t0.c68) AND (v0.c0)))AND(''))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON IFNULL(DISTINCT ((NULL) NOTNULL), ((vt0.c0) IS FALSE)) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) ISNULL) WHEN '?m	WYL' THEN vt0.c1 COLLATE NOCASE WHEN ((v0.c0)IS NOT(vt0.c1)) THEN 0.20142874785220644 END ASC);
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON IFNULL(DISTINCT ((NULL) NOTNULL), ((vt0.c0) IS FALSE)) WHERE (((((vt0.c1) BETWEEN (t0.c68) AND (v0.c0)))AND(''))) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN ((vt0.c0)%(vt0.c1)) THEN ((vt0.c1) ISNULL) WHEN '?m	WYL' THEN vt0.c1 COLLATE NOCASE WHEN ((v0.c0)IS NOT(vt0.c1)) THEN 0.20142874785220644 END ASC;
SELECT ALL * FROM v0, vt0, t0 WHERE (IFNULL(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((t0.c68)/(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((t0.c68)/(t0.c68)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (IFNULL(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((t0.c68)/(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((t0.c68)/(t0.c68)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((((- (v0.c0)))AND(TYPEOF(DISTINCT t0.c68))))OR(((vt0.c1)|(NULL))))) ORDER BY CAST(ABS(v0.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((((- (v0.c0)))AND(TYPEOF(DISTINCT t0.c68))))OR(((vt0.c1)|(NULL))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CAST(ABS(v0.c0) AS TEXT));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((((- (v0.c0)))AND(TYPEOF(DISTINCT t0.c68))))OR(((vt0.c1)|(NULL))))) ORDER BY CAST(ABS(v0.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((((- (v0.c0)))AND(TYPEOF(DISTINCT t0.c68))))OR(((vt0.c1)|(NULL))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CAST(ABS(v0.c0) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE (((((+ (v0.c0))))<=((((v0.c0)/(v0.c0)))))) ORDER BY ((((((((1e500)OR(CAST(v0.c0 AS TEXT))))AND((v0.c0 IN ()))))AND(IFNULL(v0.c0, v0.c0))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((+ (v0.c0))))<=((((v0.c0)/(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((1e500)OR(CAST(v0.c0 AS TEXT))))AND((v0.c0 IN ()))))AND(IFNULL(v0.c0, v0.c0))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((+ (v0.c0))))<=((((v0.c0)/(v0.c0)))))) ORDER BY ((((((((1e500)OR(CAST(v0.c0 AS TEXT))))AND((v0.c0 IN ()))))AND(IFNULL(v0.c0, v0.c0))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((+ (v0.c0))))<=((((v0.c0)/(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((1e500)OR(CAST(v0.c0 AS TEXT))))AND((v0.c0 IN ()))))AND(IFNULL(v0.c0, v0.c0))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CASE (vt0.c1 IN (vt0.c0))  WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)) WHEN CAST(NULL AS REAL) THEN ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c1)) AND ((v0.c0, vt0.c0, v0.c0))) END WHERE (((vt0.c1)IS NOT((vt0.c1 IN (vt0.c1, v0.c0))))) ORDER BY CAST(vt0.c1 AS TEXT) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)IS NOT((vt0.c1 IN (vt0.c1, v0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE (vt0.c1 IN (vt0.c0))  WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)) WHEN CAST(NULL AS REAL) THEN ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c1)) AND ((v0.c0, vt0.c0, v0.c0))) END ORDER BY CAST(vt0.c1 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CASE (vt0.c1 IN (vt0.c0))  WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)) WHEN CAST(NULL AS REAL) THEN ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c1)) AND ((v0.c0, vt0.c0, v0.c0))) END WHERE (((vt0.c1)IS NOT((vt0.c1 IN (vt0.c1, v0.c0))))) ORDER BY CAST(vt0.c1 AS TEXT) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)IS NOT((vt0.c1 IN (vt0.c1, v0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE (vt0.c1 IN (vt0.c0))  WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)) WHEN CAST(NULL AS REAL) THEN ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c1)) AND ((v0.c0, vt0.c0, v0.c0))) END ORDER BY CAST(vt0.c1 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c68, t0.c68, NULL))<=((t0.c68, 0.3863024895824294, t0.c68))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c68, t0.c68, NULL))<=((t0.c68, 0.3863024895824294, t0.c68))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c68, t0.c68, NULL))<=((t0.c68, 0.3863024895824294, t0.c68))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c68, t0.c68, NULL))<=((t0.c68, 0.3863024895824294, t0.c68))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c68, t0.c68, NULL))<=((t0.c68, 0.3863024895824294, t0.c68))) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1, x''))) NOTNULL)) ORDER BY UNLIKELY(CAST(vt0.c1 AS NUMERIC)) ASC  NULLS LAST, (((-6.38134793E8, (NOT (0.49855724193144035)), ((vt0.c0)*(vt0.c0))))!=(((+ (vt0.c0)), (NULL IN ()), ((vt0.c0)OR(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c1, x''))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(CAST(vt0.c1 AS NUMERIC)) ASC  NULLS LAST, (((-6.38134793E8, (NOT (0.49855724193144035)), ((vt0.c0)*(vt0.c0))))!=(((+ (vt0.c0)), (NULL IN ()), ((vt0.c0)OR(vt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1, x''))) NOTNULL)) ORDER BY UNLIKELY(CAST(vt0.c1 AS NUMERIC)) ASC  NULLS LAST, (((-6.38134793E8, (NOT (0.49855724193144035)), ((vt0.c0)*(vt0.c0))))!=(((+ (vt0.c0)), (NULL IN ()), ((vt0.c0)OR(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c1, x''))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(CAST(vt0.c1 AS NUMERIC)) ASC  NULLS LAST, (((-6.38134793E8, (NOT (0.49855724193144035)), ((vt0.c0)*(vt0.c0))))!=(((+ (vt0.c0)), (NULL IN ()), ((vt0.c0)OR(vt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1, x''))) NOTNULL)) ORDER BY UNLIKELY(CAST(vt0.c1 AS NUMERIC)) ASC  NULLS LAST, (((-6.38134793E8, (NOT (0.49855724193144035)), ((vt0.c0)*(vt0.c0))))!=(((+ (vt0.c0)), (NULL IN ()), ((vt0.c0)OR(vt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c68)OR(vt0.c0)))OR(t0.c68)))|((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c68)OR(vt0.c0)))OR(t0.c68)))|((+ (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c68)OR(vt0.c0)))OR(t0.c68)))|((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c68)OR(vt0.c0)))OR(t0.c68)))|((+ (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c68)OR(vt0.c0)))OR(t0.c68)))|((+ (vt0.c1)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (UPPER((+ (t0.c68)))) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((+ (t0.c68)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (UPPER((+ (t0.c68)))) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((+ (t0.c68)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (UPPER((+ (t0.c68)))) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 END IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1)) BETWEEN ((t0.c68)) AND ((vt0.c0))))%(((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((t0.c68)) AND ((vt0.c0))))%(((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1)) BETWEEN ((t0.c68)) AND ((vt0.c0))))%(((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((t0.c68)) AND ((vt0.c0))))%(((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1)) BETWEEN ((t0.c68)) AND ((vt0.c0))))%(((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN 'g0溭Y)yQ' THEN 0.7055190582924219 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'g0溭Y)yQ' THEN 0.7055190582924219 END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN 'g0溭Y)yQ' THEN 0.7055190582924219 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'g0溭Y)yQ' THEN 0.7055190582924219 END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN 'g0溭Y)yQ' THEN 0.7055190582924219 END);
SELECT ALL * FROM vt0 WHERE ((((((((0xfffffffffff27b8b)AND(vt0.c1)))AND(vt0.c1))))!=((TRIM(0.4349845124612214)))));
SELECT SUM(count) FROM (SELECT (((((((((0Xfffffffffff27b8b)AND(vt0.c1)))AND(vt0.c1))))!=((TRIM(0.4349845124612214))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((0xfffffffffff27b8b)AND(vt0.c1)))AND(vt0.c1))))!=((TRIM(0.4349845124612214)))));
SELECT SUM(count) FROM (SELECT (((((((((0Xfffffffffff27b8b)AND(vt0.c1)))AND(vt0.c1))))!=((TRIM(0.4349845124612214))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((0xfffffffffff27b8b)AND(vt0.c1)))AND(vt0.c1))))!=((TRIM(0.4349845124612214)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((v0.c0)))) ORDER BY (((+ (x'')))+((~ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((+ (x'')))+((~ (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((v0.c0)))) ORDER BY (((+ (x'')))+((~ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((+ (x'')))+((~ (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0, v0, t0 WHERE (x'') ORDER BY (((vt0.c1)) NOT BETWEEN ((((((t0.c68)OR(t0.c68)))OR(v0.c0)))) AND ((IFNULL(t0.c68, vt0.c0)))), CAST(((v0.c0)AND(v0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((((t0.c68)OR(t0.c68)))OR(v0.c0)))) AND ((IFNULL(t0.c68, vt0.c0)))), CAST(((v0.c0)AND(v0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM vt0, v0, t0 WHERE (x'') ORDER BY (((vt0.c1)) NOT BETWEEN ((((((t0.c68)OR(t0.c68)))OR(v0.c0)))) AND ((IFNULL(t0.c68, vt0.c0)))), CAST(((v0.c0)AND(v0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((((t0.c68)OR(t0.c68)))OR(v0.c0)))) AND ((IFNULL(t0.c68, vt0.c0)))), CAST(((v0.c0)AND(v0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((((v0.c0)AND(vt0.c1 COLLATE NOCASE)))AND(LIKELIHOOD(DISTINCT v0.c0, 0.06085562417606849))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(vt0.c1 COLLATE NOCASE)))AND(LIKELIHOOD(DISTINCT v0.c0, 0.06085562417606849)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((v0.c0)AND(vt0.c1 COLLATE NOCASE)))AND(LIKELIHOOD(DISTINCT v0.c0, 0.06085562417606849))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(vt0.c1 COLLATE NOCASE)))AND(LIKELIHOOD(DISTINCT v0.c0, 0.06085562417606849)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((x'')IS NOT(t0.c68))) NOT BETWEEN (((t0.c68)IS NOT(t0.c68))) AND (CAST(t0.c68 AS BLOB)))) ORDER BY ((((v0.c0) IS TRUE)) BETWEEN ((((v0.c0, v0.c0, v0.c0, v0.c0, t0.c68))=((v0.c0, t0.c68, v0.c0, v0.c0, v0.c0)))) AND ((t0.c68 IN (v0.c0)))) DESC, ((CASE WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN 0X69e290e7 END)||(NULL))  NULLS LAST, (v0.c0 IN ('{!', ((t0.c68) BETWEEN (x'') AND (0.672490239705841))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')IS NOT(t0.c68))) NOT BETWEEN (((t0.c68)IS NOT(t0.c68))) AND (CAST(t0.c68 AS BLOB)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0) IS TRUE)) BETWEEN ((((v0.c0, v0.c0, v0.c0, v0.c0, t0.c68))=((v0.c0, t0.c68, v0.c0, v0.c0, v0.c0)))) AND ((t0.c68 IN (v0.c0)))) DESC, ((CASE WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN 0X69e290e7 END)||(NULL))  NULLS LAST, (v0.c0 IN ('{!', ((t0.c68) BETWEEN (x'') AND (0.672490239705841)))));
SELECT COUNT(*) FROM t0, v0 WHERE (((((x'')IS NOT(t0.c68))) NOT BETWEEN (((t0.c68)IS NOT(t0.c68))) AND (CAST(t0.c68 AS BLOB)))) ORDER BY ((((v0.c0) IS TRUE)) BETWEEN ((((v0.c0, v0.c0, v0.c0, v0.c0, t0.c68))=((v0.c0, t0.c68, v0.c0, v0.c0, v0.c0)))) AND ((t0.c68 IN (v0.c0)))) DESC, ((CASE WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN 0X69e290e7 END)||(NULL))  NULLS LAST, (v0.c0 IN ('{!', ((t0.c68) BETWEEN (x'') AND (0.672490239705841))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')IS NOT(t0.c68))) NOT BETWEEN (((t0.c68)IS NOT(t0.c68))) AND (CAST(t0.c68 AS BLOB)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0) IS TRUE)) BETWEEN ((((v0.c0, v0.c0, v0.c0, v0.c0, t0.c68))=((v0.c0, t0.c68, v0.c0, v0.c0, v0.c0)))) AND ((t0.c68 IN (v0.c0)))) DESC, ((CASE WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN 0X69e290e7 END)||(NULL))  NULLS LAST, (v0.c0 IN ('{!', ((t0.c68) BETWEEN (x'') AND (0.672490239705841)))));
SELECT * FROM vt0, t0, v0 WHERE (((CASE WHEN vt0.c0 THEN t0.c68 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c68 END) ISNULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (((CASE WHEN vt0.c0 THEN t0.c68 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c68 END) ISNULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((CASE WHEN '61918417' THEN vt0.c0 END) IS TRUE) WHERE (CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.c1 END COLLATE NOCASE) ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN CASE vt0.c1  WHEN t0.c68 THEN t0.c68 ELSE vt0.c1 END ELSE t0.c68 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((CASE WHEN '61918417' THEN vt0.c0 END) IS TRUE) ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN CASE vt0.c1  WHEN t0.c68 THEN t0.c68 ELSE vt0.c1 END ELSE t0.c68 COLLATE BINARY END ASC);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((CASE WHEN '61918417' THEN vt0.c0 END) IS TRUE) WHERE (CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.c1 END COLLATE NOCASE) ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN CASE vt0.c1  WHEN t0.c68 THEN t0.c68 ELSE vt0.c1 END ELSE t0.c68 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((CASE WHEN '61918417' THEN vt0.c0 END) IS TRUE) ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN CASE vt0.c1  WHEN t0.c68 THEN t0.c68 ELSE vt0.c1 END ELSE t0.c68 COLLATE BINARY END ASC);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((CASE WHEN '61918417' THEN vt0.c0 END) IS TRUE) WHERE (CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.c1 END COLLATE NOCASE) ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN CASE vt0.c1  WHEN t0.c68 THEN t0.c68 ELSE vt0.c1 END ELSE t0.c68 COLLATE BINARY END ASC;
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY CAST(((v0.c0)IS NOT(1969346457)) AS NUMERIC) DESC, COALESCE(((x'b94f') IS TRUE), (v0.c0 IN (v0.c0))), ((((v0.c0)||(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)IS NOT(1969346457)) AS NUMERIC) DESC, COALESCE(((x'b94f') IS TRUE), (v0.c0 IN (v0.c0))), ((((v0.c0)||(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY CAST(((v0.c0)IS NOT(1969346457)) AS NUMERIC) DESC, COALESCE(((x'b94f') IS TRUE), (v0.c0 IN (v0.c0))), ((((v0.c0)||(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)IS NOT(1969346457)) AS NUMERIC) DESC, COALESCE(((x'b94f') IS TRUE), (v0.c0 IN (v0.c0))), ((((v0.c0)||(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((- ((0.3133024127755819 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((0.3133024127755819 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((- ((0.3133024127755819 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((0.3133024127755819 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((- ((0.3133024127755819 IN ()))));
SELECT ALL * FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)/(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)/(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c1, NULL)) BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (CAST(vt0.c0 AS TEXT)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c1, NULL)) BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c1, NULL)) BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (CAST(vt0.c0 AS TEXT)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c1, NULL)) BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c1, NULL)) BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (CAST(vt0.c0 AS TEXT)))) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)OR(vt0.c1)) THEN (((('-1169926990')AND(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c0 COLLATE NOCASE WHEN ((((vt0.c1)OR(x'f5e02620')))AND('')) THEN x'012f' COLLATE BINARY ELSE '' END) ORDER BY CASE ((((0.515804255277292)OR(vt0.c1)))OR(vt0.c0))  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'33ca')))OR(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)OR(vt0.c1)) THEN (((('-1169926990')AND(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c0 COLLATE NOCASE WHEN ((((vt0.c1)OR(x'f5e02620')))AND('')) THEN x'012f' COLLATE BINARY ELSE '' END) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((0.515804255277292)OR(vt0.c1)))OR(vt0.c0))  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'33ca')))OR(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)OR(vt0.c1)) THEN (((('-1169926990')AND(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c0 COLLATE NOCASE WHEN ((((vt0.c1)OR(x'f5e02620')))AND('')) THEN x'012f' COLLATE BINARY ELSE '' END) ORDER BY CASE ((((0.515804255277292)OR(vt0.c1)))OR(vt0.c0))  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'33ca')))OR(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)OR(vt0.c1)) THEN (((('-1169926990')AND(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c0 COLLATE NOCASE WHEN ((((vt0.c1)OR(x'f5e02620')))AND('')) THEN x'012f' COLLATE BINARY ELSE '' END) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((0.515804255277292)OR(vt0.c1)))OR(vt0.c0))  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'33ca')))OR(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)OR(vt0.c1)) THEN (((('-1169926990')AND(vt0.c1)))AND(vt0.c1)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c0 COLLATE NOCASE WHEN ((((vt0.c1)OR(x'f5e02620')))AND('')) THEN x'012f' COLLATE BINARY ELSE '' END) ORDER BY CASE ((((0.515804255277292)OR(vt0.c1)))OR(vt0.c0))  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'33ca')))OR(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(v0.c0 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(v0.c0 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0);
SELECT * FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (x'');
SELECT COUNT(*) FROM t0, vt0 WHERE ((t0.c68 IN ())) ORDER BY ((('-1450679966')==(t0.c68)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((('-1450679966')==(t0.c68)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((t0.c68 IN ())) ORDER BY ((('-1450679966')==(t0.c68)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((('-1450679966')==(t0.c68)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((t0.c68 IN ())) ORDER BY ((('-1450679966')==(t0.c68)) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(((x'c0ba') BETWEEN (NULL) AND (vt0.c0)))))OR('5998576')))AND(TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(((x'c0ba') BETWEEN (NULL) AND (vt0.c0)))))OR('5998576')))AND(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(((x'c0ba') BETWEEN (NULL) AND (vt0.c0)))))OR('5998576')))AND(TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(((x'c0ba') BETWEEN (NULL) AND (vt0.c0)))))OR('5998576')))AND(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(((x'c0ba') BETWEEN (NULL) AND (vt0.c0)))))OR('5998576')))AND(TRIM(DISTINCT vt0.c0))));
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c68)OR(t0.c68)))AND(CAST('0.3280266739396005' AS BLOB))))AND(CAST(x'03adec9c' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c68)OR(t0.c68)))AND(CAST('0.3280266739396005' AS BLOB))))AND(CAST(x'03adec9c' AS TEXT)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c68)OR(t0.c68)))AND(CAST('0.3280266739396005' AS BLOB))))AND(CAST(x'03adec9c' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c68)OR(t0.c68)))AND(CAST('0.3280266739396005' AS BLOB))))AND(CAST(x'03adec9c' AS TEXT)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c68)OR(t0.c68)))AND(CAST('0.3280266739396005' AS BLOB))))AND(CAST(x'03adec9c' AS TEXT))));
SELECT * FROM t0 WHERE ('?m	wyl');
SELECT SUM(count) FROM (SELECT ALL (('?m	wyl') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('?m	wyl');
SELECT SUM(count) FROM (SELECT ALL (('?m	wyl') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('?m	wyl');
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY CASE (t0.c68 IN (t0.c68, vt0.c0))  WHEN ((vt0.c1)%(vt0.c0)) THEN 0.8846901609853451 ELSE LOWER(vt0.c0) END;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE (t0.c68 IN (t0.c68, vt0.c0))  WHEN ((vt0.c1)%(vt0.c0)) THEN 0.8846901609853451 ELSE LOWER(vt0.c0) END);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY CASE (t0.c68 IN (t0.c68, vt0.c0))  WHEN ((vt0.c1)%(vt0.c0)) THEN 0.8846901609853451 ELSE LOWER(vt0.c0) END;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE (t0.c68 IN (t0.c68, vt0.c0))  WHEN ((vt0.c1)%(vt0.c0)) THEN 0.8846901609853451 ELSE LOWER(vt0.c0) END);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY CASE (t0.c68 IN (t0.c68, vt0.c0))  WHEN ((vt0.c1)%(vt0.c0)) THEN 0.8846901609853451 ELSE LOWER(vt0.c0) END;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c68 IN ())  WHEN CAST(t0.c68 AS BLOB) THEN ((t0.c68)&('(.gj.I^n')) WHEN TRIM(DISTINCT t0.c68) THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (NULL)) THEN HEX(DISTINCT t0.c68) ELSE ((t0.c68) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c68 IN ())  WHEN CAST(t0.c68 AS BLOB) THEN ((t0.c68)&('(.gj.I^n')) WHEN TRIM(DISTINCT t0.c68) THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (NULL)) THEN HEX(DISTINCT t0.c68) ELSE ((t0.c68) ISNULL) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c68 IN ())  WHEN CAST(t0.c68 AS BLOB) THEN ((t0.c68)&('(.gj.I^n')) WHEN TRIM(DISTINCT t0.c68) THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (NULL)) THEN HEX(DISTINCT t0.c68) ELSE ((t0.c68) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c68 IN ())  WHEN CAST(t0.c68 AS BLOB) THEN ((t0.c68)&('(.gj.I^n')) WHEN TRIM(DISTINCT t0.c68) THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (NULL)) THEN HEX(DISTINCT t0.c68) ELSE ((t0.c68) ISNULL) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c68 IN ())  WHEN CAST(t0.c68 AS BLOB) THEN ((t0.c68)&('(.gj.I^n')) WHEN TRIM(DISTINCT t0.c68) THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (NULL)) THEN HEX(DISTINCT t0.c68) ELSE ((t0.c68) ISNULL) END);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((NULL, (- (vt0.c0)), 0.3609365147690943))<((LIKELY(DISTINCT vt0.c0), CAST(0.49855724193144035 AS REAL), (((t0.c68, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c1)) AND ((t0.c68, v0.c0, t0.c68)))))));
SELECT SUM(count) FROM (SELECT (((((NULL, (- (vt0.c0)), 0.3609365147690943))<((LIKELY(DISTINCT vt0.c0), CAST(0.49855724193144035 AS REAL), (((t0.c68, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c1)) AND ((t0.c68, v0.c0, t0.c68))))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((NULL, (- (vt0.c0)), 0.3609365147690943))<((LIKELY(DISTINCT vt0.c0), CAST(0.49855724193144035 AS REAL), (((t0.c68, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c1)) AND ((t0.c68, v0.c0, t0.c68)))))));
SELECT SUM(count) FROM (SELECT (((((NULL, (- (vt0.c0)), 0.3609365147690943))<((LIKELY(DISTINCT vt0.c0), CAST(0.49855724193144035 AS REAL), (((t0.c68, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c1)) AND ((t0.c68, v0.c0, t0.c68))))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((NULL, (- (vt0.c0)), 0.3609365147690943))<((LIKELY(DISTINCT vt0.c0), CAST(0.49855724193144035 AS REAL), (((t0.c68, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c1)) AND ((t0.c68, v0.c0, t0.c68)))))));
SELECT * FROM v0, vt0 WHERE (CASE vt0.c1  WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 COLLATE BINARY ELSE ((v0.c0)AND(vt0.c1)) END) ORDER BY CAST(v0.c0 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 COLLATE BINARY ELSE ((v0.c0)AND(vt0.c1)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c0 AS BLOB)  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CASE vt0.c1  WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 COLLATE BINARY ELSE ((v0.c0)AND(vt0.c1)) END) ORDER BY CAST(v0.c0 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 COLLATE BINARY ELSE ((v0.c0)AND(vt0.c1)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c0 AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL) ORDER BY CAST(LENGTH(vt0.c1) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(LENGTH(vt0.c1) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL) ORDER BY CAST(LENGTH(vt0.c1) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(LENGTH(vt0.c1) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL) ORDER BY CAST(LENGTH(vt0.c1) AS NUMERIC) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY v0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY v0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY v0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY v0.c0 COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((~ ((vt0.c1 IN ())))) ORDER BY ((NULL COLLATE BINARY) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN NULL END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL COLLATE BINARY) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN NULL END)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ ((vt0.c1 IN ())))) ORDER BY ((NULL COLLATE BINARY) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN NULL END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL COLLATE BINARY) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN NULL END)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ ((vt0.c1 IN ())))) ORDER BY ((NULL COLLATE BINARY) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN NULL END)) ASC  NULLS LAST;
SELECT * FROM v0 WHERE (CAST((- (v0.c0)) AS NUMERIC)) ORDER BY (NOT (((v0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOT NULL))) DESC);
SELECT * FROM v0 WHERE (CAST((- (v0.c0)) AS NUMERIC)) ORDER BY (NOT (((v0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ (json(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (json(vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ (json(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (json(vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON (v0.c0 IN ()) WHERE (CAST(CASE WHEN t0.c68 THEN t0.c68 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c68 THEN t0.c68 END AS INTEGER)) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (v0.c0 IN ()));
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON (v0.c0 IN ()) WHERE (CAST(CASE WHEN t0.c68 THEN t0.c68 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c68 THEN t0.c68 END AS INTEGER)) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (v0.c0 IN ()));
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON (v0.c0 IN ()) WHERE (CAST(CASE WHEN t0.c68 THEN t0.c68 END AS INTEGER));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON CAST(((v0.c0)||(vt0.c0)) AS BLOB) WHERE ((NOT (NULL))) ORDER BY ((CASE WHEN 6.35650553E8 THEN v0.c0 END)*(((v0.c0)<(vt0.c0))))  NULLS FIRST, NULL ASC  NULLS LAST, (+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(((v0.c0)||(vt0.c0)) AS BLOB) ORDER BY ((CASE WHEN 6.35650553E8 THEN v0.c0 END)*(((v0.c0)<(vt0.c0))))  NULLS FIRST, NULL ASC  NULLS LAST, (+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON CAST(((v0.c0)||(vt0.c0)) AS BLOB) WHERE ((NOT (NULL))) ORDER BY ((CASE WHEN 6.35650553E8 THEN v0.c0 END)*(((v0.c0)<(vt0.c0))))  NULLS FIRST, NULL ASC  NULLS LAST, (+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(((v0.c0)||(vt0.c0)) AS BLOB) ORDER BY ((CASE WHEN 6.35650553E8 THEN v0.c0 END)*(((v0.c0)<(vt0.c0))))  NULLS FIRST, NULL ASC  NULLS LAST, (+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) ASC  NULLS LAST);
SELECT * FROM vt0, v0, t0 WHERE (CASE t0.c68  WHEN t0.c68 THEN vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE t0.c68  WHEN t0.c68 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (CASE t0.c68  WHEN t0.c68 THEN vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE t0.c68  WHEN t0.c68 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM t0, v0, vt0 WHERE (((((vt0.c0)GLOB(v0.c0))) NOT BETWEEN (((NULL)<(t0.c68))) AND ((((v0.c0))>=((t0.c68)))))) ORDER BY COALESCE(DISTINCT (+ (v0.c0)), (('2145908476')<=(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(v0.c0))) NOT BETWEEN (((NULL)<(t0.c68))) AND ((((v0.c0))>=((t0.c68)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY COALESCE(DISTINCT (+ (v0.c0)), (('2145908476')<=(vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM t0, v0, vt0 WHERE (((((vt0.c0)GLOB(v0.c0))) NOT BETWEEN (((NULL)<(t0.c68))) AND ((((v0.c0))>=((t0.c68)))))) ORDER BY COALESCE(DISTINCT (+ (v0.c0)), (('2145908476')<=(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(v0.c0))) NOT BETWEEN (((NULL)<(t0.c68))) AND ((((v0.c0))>=((t0.c68)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY COALESCE(DISTINCT (+ (v0.c0)), (('2145908476')<=(vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c68) BETWEEN (t0.c68) AND (t0.c68))  WHEN t0.c68 THEN t0.c68 WHEN (NOT (t0.c68)) THEN (NOT (t0.c68)) WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68) IS TRUE) END) ORDER BY ((CASE t0.c68  WHEN t0.c68 THEN x'' END) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c68) BETWEEN (t0.c68) AND (t0.c68))  WHEN t0.c68 THEN t0.c68 WHEN (NOT (t0.c68)) THEN (NOT (t0.c68)) WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68) IS TRUE) END) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c68  WHEN t0.c68 THEN x'' END) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c68) BETWEEN (t0.c68) AND (t0.c68))  WHEN t0.c68 THEN t0.c68 WHEN (NOT (t0.c68)) THEN (NOT (t0.c68)) WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68) IS TRUE) END) ORDER BY ((CASE t0.c68  WHEN t0.c68 THEN x'' END) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c68) BETWEEN (t0.c68) AND (t0.c68))  WHEN t0.c68 THEN t0.c68 WHEN (NOT (t0.c68)) THEN (NOT (t0.c68)) WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68) IS TRUE) END) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c68  WHEN t0.c68 THEN x'' END) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c68) BETWEEN (t0.c68) AND (t0.c68))  WHEN t0.c68 THEN t0.c68 WHEN (NOT (t0.c68)) THEN (NOT (t0.c68)) WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68) IS TRUE) END) ORDER BY ((CASE t0.c68  WHEN t0.c68 THEN x'' END) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c68);
SELECT ALL * FROM vt0, v0, t0 WHERE ((((vt0.c1, ((765038969)<('-1902348219')), '1594547406'))<>((((vt0.c0)IS(t0.c68)), CASE v0.c0  WHEN v0.c0 THEN t0.c68 END, x'' COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, ((765038969)<('-1902348219')), '1594547406'))!=((((vt0.c0)IS(t0.c68)), CASE v0.c0  WHEN v0.c0 THEN t0.c68 END, x'' COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE ((((vt0.c1, ((765038969)<('-1902348219')), '1594547406'))<>((((vt0.c0)IS(t0.c68)), CASE v0.c0  WHEN v0.c0 THEN t0.c68 END, x'' COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, ((765038969)<('-1902348219')), '1594547406'))!=((((vt0.c0)IS(t0.c68)), CASE v0.c0  WHEN v0.c0 THEN t0.c68 END, x'' COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE ((((((((((NOT (NULL)))OR(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(NULL)))OR(((x'') BETWEEN (x'') AND (vt0.c1)))))AND(json_extract(vt0.c0, vt0.c0)))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST, (((('')OR(LOWER('#W37?Z[q]'))))OR(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (NULL)))OR(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(NULL)))OR(((x'') BETWEEN (x'') AND (vt0.c1)))))AND(json_extract(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST, (((('')OR(LOWER('#W37?Z[q]'))))OR(x'')) DESC);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE ((((((((((NOT (NULL)))OR(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(NULL)))OR(((x'') BETWEEN (x'') AND (vt0.c1)))))AND(json_extract(vt0.c0, vt0.c0)))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST, (((('')OR(LOWER('#W37?Z[q]'))))OR(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (NULL)))OR(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(NULL)))OR(((x'') BETWEEN (x'') AND (vt0.c1)))))AND(json_extract(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST, (((('')OR(LOWER('#W37?Z[q]'))))OR(x'')) DESC);
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0 IN ())) BETWEEN (x'd962d975') AND ((- (t0.c68)))) WHERE ((((vt0.c1)LIKE(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)LIKE(v0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0 IN ())) BETWEEN (x'd962d975') AND ((- (t0.c68)))));
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0 IN ())) BETWEEN (x'd962d975') AND ((- (t0.c68)))) WHERE ((((vt0.c1)LIKE(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)LIKE(v0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON (((vt0.c0 IN ())) BETWEEN (x'd962d975') AND ((- (t0.c68)))));
SELECT ALL * FROM t0, v0, vt0 WHERE (ABS(DISTINCT ((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((vt0.c1) NOTNULL))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (ABS(DISTINCT ((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((vt0.c1) NOTNULL))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, vt0, v0 WHERE (NULL) ORDER BY CASE WHEN ((vt0.c1)/(vt0.c0)) THEN vt0.c1 ELSE (((vt0.c1))=((vt0.c1))) END ASC, (NOT (COALESCE(DISTINCT v0.c0, vt0.c0, t0.c68, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE WHEN ((vt0.c1)/(vt0.c0)) THEN vt0.c1 ELSE (((vt0.c1))=((vt0.c1))) END ASC, (NOT (COALESCE(DISTINCT v0.c0, vt0.c0, t0.c68, vt0.c0))) DESC);
SELECT * FROM t0, vt0, v0 WHERE (NULL) ORDER BY CASE WHEN ((vt0.c1)/(vt0.c0)) THEN vt0.c1 ELSE (((vt0.c1))=((vt0.c1))) END ASC, (NOT (COALESCE(DISTINCT v0.c0, vt0.c0, t0.c68, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE WHEN ((vt0.c1)/(vt0.c0)) THEN vt0.c1 ELSE (((vt0.c1))=((vt0.c1))) END ASC, (NOT (COALESCE(DISTINCT v0.c0, vt0.c0, t0.c68, vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON (+ ('-638134793')) COLLATE BINARY WHERE (TYPEOF(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(vt0.c1)) IS TRUE)  as count FROM v0, vt0 NOT INDEXED FULL OUTER JOIN t0 ON (+ ('-638134793')) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON (+ ('-638134793')) COLLATE BINARY WHERE (TYPEOF(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(vt0.c1)) IS TRUE)  as count FROM v0, vt0 NOT INDEXED FULL OUTER JOIN t0 ON (+ ('-638134793')) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON (+ ('-638134793')) COLLATE BINARY WHERE (TYPEOF(vt0.c1));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON HEX(((t0.c68)*(t0.c68))) FULL OUTER JOIN v0 ON vt0.c1 WHERE (CAST(CAST(x'8c97' AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(x'8c97' AS REAL) AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON HEX(((t0.c68)*(t0.c68))) FULL OUTER JOIN v0 ON vt0.c1);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON HEX(((t0.c68)*(t0.c68))) FULL OUTER JOIN v0 ON vt0.c1 WHERE (CAST(CAST(x'8c97' AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(x'8c97' AS REAL) AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON HEX(((t0.c68)*(t0.c68))) FULL OUTER JOIN v0 ON vt0.c1);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN vt0 ON (((+ (v0.c0)))-(x'')) WHERE (CAST((NOT (vt0.c0)) AS INTEGER)) ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((vt0.c1)&(vt0.c0))))  NULLS LAST, (NOT (((t0.c68) NOTNULL)))  NULLS FIRST, (((((t0.c68))<((vt0.c1))))*(((vt0.c0)OR(0x253de908))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON (((+ (v0.c0)))-(x'')) ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((vt0.c1)&(vt0.c0))))  NULLS LAST, (NOT (((t0.c68) NOTNULL)))  NULLS FIRST, (((((t0.c68))<((vt0.c1))))*(((vt0.c0)OR(0X253de908))))  NULLS LAST);
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN vt0 ON (((+ (v0.c0)))-(x'')) WHERE (CAST((NOT (vt0.c0)) AS INTEGER)) ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((vt0.c1)&(vt0.c0))))  NULLS LAST, (NOT (((t0.c68) NOTNULL)))  NULLS FIRST, (((((t0.c68))<((vt0.c1))))*(((vt0.c0)OR(0x253de908))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON (((+ (v0.c0)))-(x'')) ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((vt0.c1)&(vt0.c0))))  NULLS LAST, (NOT (((t0.c68) NOTNULL)))  NULLS FIRST, (((((t0.c68))<((vt0.c1))))*(((vt0.c0)OR(0X253de908))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR('0.37098368383929736')))<=(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c1)))OR('0.37098368383929736')))<=(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR('0.37098368383929736')))<=(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c1)))OR('0.37098368383929736')))<=(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR('0.37098368383929736')))<=(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT * FROM v0, t0 WHERE ((((((((v0.c0)) BETWEEN ((NULL)) AND ((v0.c0))))AND(TRIM(DISTINCT t0.c68))))OR(((t0.c68)OR(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)) BETWEEN ((NULL)) AND ((v0.c0))))AND(TRIM(DISTINCT t0.c68))))OR(((t0.c68)OR(t0.c68))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((((((v0.c0)) BETWEEN ((NULL)) AND ((v0.c0))))AND(TRIM(DISTINCT t0.c68))))OR(((t0.c68)OR(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)) BETWEEN ((NULL)) AND ((v0.c0))))AND(TRIM(DISTINCT t0.c68))))OR(((t0.c68)OR(t0.c68))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((t0.c68) BETWEEN (t0.c68) AND (v0.c0)) ELSE vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) ISNULL) THEN ((t0.c68) BETWEEN (t0.c68) AND (v0.c0)) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CASE WHEN ((v0.c0) ISNULL) THEN ((t0.c68) BETWEEN (t0.c68) AND (v0.c0)) ELSE vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) ISNULL) THEN ((t0.c68) BETWEEN (t0.c68) AND (v0.c0)) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM t0 WHERE ((((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))OR(((t0.c68)IS(t0.c68)))))AND((t0.c68 IN ())))) ORDER BY ((((t0.c68)!=(t0.c68)))GLOB(CAST(t0.c68 AS INTEGER))) ASC, HEX((t0.c68 IN ())) DESC  NULLS FIRST, ((t0.c68 COLLATE BINARY) BETWEEN (-6.38134793E8) AND (CAST(t0.c68 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))OR(((t0.c68)IS(t0.c68)))))AND((t0.c68 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)!=(t0.c68)))GLOB(CAST(t0.c68 AS INTEGER))) ASC, HEX((t0.c68 IN ())) DESC  NULLS FIRST, ((t0.c68 COLLATE BINARY) BETWEEN (-6.38134793E8) AND (CAST(t0.c68 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))OR(((t0.c68)IS(t0.c68)))))AND((t0.c68 IN ())))) ORDER BY ((((t0.c68)!=(t0.c68)))GLOB(CAST(t0.c68 AS INTEGER))) ASC, HEX((t0.c68 IN ())) DESC  NULLS FIRST, ((t0.c68 COLLATE BINARY) BETWEEN (-6.38134793E8) AND (CAST(t0.c68 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))OR(((t0.c68)IS(t0.c68)))))AND((t0.c68 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)!=(t0.c68)))GLOB(CAST(t0.c68 AS INTEGER))) ASC, HEX((t0.c68 IN ())) DESC  NULLS FIRST, ((t0.c68 COLLATE BINARY) BETWEEN (-6.38134793E8) AND (CAST(t0.c68 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))OR(((t0.c68)IS(t0.c68)))))AND((t0.c68 IN ())))) ORDER BY ((((t0.c68)!=(t0.c68)))GLOB(CAST(t0.c68 AS INTEGER))) ASC, HEX((t0.c68 IN ())) DESC  NULLS FIRST, ((t0.c68 COLLATE BINARY) BETWEEN (-6.38134793E8) AND (CAST(t0.c68 AS NUMERIC)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c68) NOTNULL)) NOT BETWEEN ('hW!R') AND (t0.c68)));
SELECT SUM(count) FROM (SELECT ((((((t0.c68) NOTNULL)) NOT BETWEEN ('hW!R') AND (t0.c68))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c68) NOTNULL)) NOT BETWEEN ('hW!R') AND (t0.c68)));
SELECT SUM(count) FROM (SELECT ((((((t0.c68) NOTNULL)) NOT BETWEEN ('hW!R') AND (t0.c68))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c68) NOTNULL)) NOT BETWEEN ('hW!R') AND (t0.c68)));
SELECT * FROM v0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) ORDER BY (((CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 END))>=(((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 END))>=(((vt0.c1 IN ())))));
SELECT * FROM v0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) ORDER BY (((CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 END))>=(((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 END))>=(((vt0.c1 IN ())))));
SELECT * FROM vt0, t0 LEFT OUTER JOIN v0 ON 0.6041980427674988 WHERE (((((((vt0.c0)&(vt0.c1)))OR(v0.c0 COLLATE NOCASE)))OR(v0.c0))) ORDER BY ((CASE vt0.c0  WHEN v0.c0 THEN t0.c68 ELSE vt0.c1 END)OR(0.45432212051862675)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)&(vt0.c1)))OR(v0.c0 COLLATE NOCASE)))OR(v0.c0))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN v0 ON 0.6041980427674988 ORDER BY ((CASE vt0.c0  WHEN v0.c0 THEN t0.c68 ELSE vt0.c1 END)OR(0.45432212051862675)) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 LEFT OUTER JOIN v0 ON 0.6041980427674988 WHERE (((((((vt0.c0)&(vt0.c1)))OR(v0.c0 COLLATE NOCASE)))OR(v0.c0))) ORDER BY ((CASE vt0.c0  WHEN v0.c0 THEN t0.c68 ELSE vt0.c1 END)OR(0.45432212051862675)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)&(vt0.c1)))OR(v0.c0 COLLATE NOCASE)))OR(v0.c0))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN v0 ON 0.6041980427674988 ORDER BY ((CASE vt0.c0  WHEN v0.c0 THEN t0.c68 ELSE vt0.c1 END)OR(0.45432212051862675)) DESC  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (STRFTIME(t0.c68, t0.c68, '{!', v0.c0, v0.c0) COLLATE BINARY COLLATE NOCASE) ORDER BY t0.c68, ((((v0.c0)>(t0.c68)))IS((0.9086883274761526 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(t0.c68, t0.c68, '{!', v0.c0, v0.c0) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c68, ((((v0.c0)>(t0.c68)))IS((0.9086883274761526 IN ()))));
SELECT * FROM t0, v0 WHERE (STRFTIME(t0.c68, t0.c68, '{!', v0.c0, v0.c0) COLLATE BINARY COLLATE NOCASE) ORDER BY t0.c68, ((((v0.c0)>(t0.c68)))IS((0.9086883274761526 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(t0.c68, t0.c68, '{!', v0.c0, v0.c0) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c68, ((((v0.c0)>(t0.c68)))IS((0.9086883274761526 IN ()))));
SELECT ALL * FROM t0, vt0, v0 WHERE ((((((('-1450679966')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1 COLLATE BINARY))) ORDER BY (NOT (vt0.c0)) DESC  NULLS FIRST, (+ ((((('')OR(vt0.c1)))OR(vt0.c1)))), CAST((v0.c0 IN (t0.c68)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((('-1450679966')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (NOT (vt0.c0)) DESC  NULLS FIRST, (+ ((((('')OR(vt0.c1)))OR(vt0.c1)))), CAST((v0.c0 IN (t0.c68)) AS REAL));
SELECT ALL * FROM t0, vt0, v0 WHERE ((((((('-1450679966')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1 COLLATE BINARY))) ORDER BY (NOT (vt0.c0)) DESC  NULLS FIRST, (+ ((((('')OR(vt0.c1)))OR(vt0.c1)))), CAST((v0.c0 IN (t0.c68)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((('-1450679966')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (NOT (vt0.c0)) DESC  NULLS FIRST, (+ ((((('')OR(vt0.c1)))OR(vt0.c1)))), CAST((v0.c0 IN (t0.c68)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (ROUND(((vt0.c0) BETWEEN (vt0.c1) AND (0.9325084462641291)), vt0.c0 COLLATE RTRIM)) ORDER BY (((0.5560513052047986)) BETWEEN (((- (vt0.c1)))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))) DESC  NULLS FIRST, CASE (vt0.c0 IN ())  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) END DESC  NULLS FIRST, (+ ((((('641389745')AND(vt0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((ROUND(((vt0.c0) BETWEEN (vt0.c1) AND (0.9325084462641291)), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY (((0.5560513052047986)) BETWEEN (((- (vt0.c1)))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))) DESC  NULLS FIRST, CASE (vt0.c0 IN ())  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) END DESC  NULLS FIRST, (+ ((((('641389745')AND(vt0.c0)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (ROUND(((vt0.c0) BETWEEN (vt0.c1) AND (0.9325084462641291)), vt0.c0 COLLATE RTRIM)) ORDER BY (((0.5560513052047986)) BETWEEN (((- (vt0.c1)))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))) DESC  NULLS FIRST, CASE (vt0.c0 IN ())  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) END DESC  NULLS FIRST, (+ ((((('641389745')AND(vt0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((ROUND(((vt0.c0) BETWEEN (vt0.c1) AND (0.9325084462641291)), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY (((0.5560513052047986)) BETWEEN (((- (vt0.c1)))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))) DESC  NULLS FIRST, CASE (vt0.c0 IN ())  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) END DESC  NULLS FIRST, (+ ((((('641389745')AND(vt0.c0)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (ROUND(((vt0.c0) BETWEEN (vt0.c1) AND (0.9325084462641291)), vt0.c0 COLLATE RTRIM)) ORDER BY (((0.5560513052047986)) BETWEEN (((- (vt0.c1)))) AND (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))) DESC  NULLS FIRST, CASE (vt0.c0 IN ())  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) END DESC  NULLS FIRST, (+ ((((('641389745')AND(vt0.c0)))AND(vt0.c1))));
SELECT * FROM vt0, t0, v0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((CAST(vt0.c1 AS REAL))))) ORDER BY (~ (((NULL)GLOB(x'3d54'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((CAST(vt0.c1 AS REAL))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (~ (((NULL)GLOB(x'3d54')))));
SELECT * FROM vt0, t0, v0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((CAST(vt0.c1 AS REAL))))) ORDER BY (~ (((NULL)GLOB(x'3d54'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((CAST(vt0.c1 AS REAL))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (~ (((NULL)GLOB(x'3d54')))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON CASE CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END  WHEN rtreenode(v0.c0, NULL) THEN TRIM(DISTINCT v0.c0, v0.c0) ELSE ((((t0.c68)AND(x'')))OR(t0.c68)) END WHERE (((((t0.c68)OR(t0.c68))) BETWEEN (((((t0.c68)OR(v0.c0)))OR(v0.c0))) AND (((t0.c68)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)OR(t0.c68))) BETWEEN (((((t0.c68)OR(v0.c0)))OR(v0.c0))) AND (((t0.c68)AND(v0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CASE CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END  WHEN rtreenode(v0.c0, NULL) THEN TRIM(DISTINCT v0.c0, v0.c0) ELSE ((((t0.c68)AND(x'')))OR(t0.c68)) END);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON CASE CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END  WHEN rtreenode(v0.c0, NULL) THEN TRIM(DISTINCT v0.c0, v0.c0) ELSE ((((t0.c68)AND(x'')))OR(t0.c68)) END WHERE (((((t0.c68)OR(t0.c68))) BETWEEN (((((t0.c68)OR(v0.c0)))OR(v0.c0))) AND (((t0.c68)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)OR(t0.c68))) BETWEEN (((((t0.c68)OR(v0.c0)))OR(v0.c0))) AND (((t0.c68)AND(v0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CASE CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END  WHEN rtreenode(v0.c0, NULL) THEN TRIM(DISTINCT v0.c0, v0.c0) ELSE ((((t0.c68)AND(x'')))OR(t0.c68)) END);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((v0.c0))<>((((((t0.c68)AND(v0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0))!=((((((t0.c68)AND(v0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((v0.c0))<>((((((t0.c68)AND(v0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0))!=((((((t0.c68)AND(v0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON CASE COALESCE('', vt0.c1)  WHEN (- (v0.c0)) THEN vt0.c1 COLLATE RTRIM WHEN ((t0.c68)>(v0.c0)) THEN ((vt0.c1) NOT NULL) WHEN CAST(vt0.c1 AS REAL) THEN ((v0.c0)!=(v0.c0)) ELSE t0.c68 COLLATE RTRIM END RIGHT OUTER JOIN vt0 ON ((((vt0.c1)>(vt0.c1))) NOT NULL) WHERE ((((vt0.c0)) BETWEEN (((((vt0.c1, v0.c0, t0.c68))<((vt0.c0, t0.c68, ''))))) AND ((vt0.c0 COLLATE RTRIM)))) ORDER BY IFNULL(DISTINCT LIKELY(vt0.c1), 0Xffffffffe701cf24)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt0.c1, v0.c0, t0.c68))<((vt0.c0, t0.c68, ''))))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CASE COALESCE('', vt0.c1)  WHEN (- (v0.c0)) THEN vt0.c1 COLLATE RTRIM WHEN ((t0.c68)>(v0.c0)) THEN ((vt0.c1) NOT NULL) WHEN CAST(vt0.c1 AS REAL) THEN ((v0.c0)!=(v0.c0)) ELSE t0.c68 COLLATE RTRIM END RIGHT OUTER JOIN vt0 ON ((((vt0.c1)>(vt0.c1))) NOT NULL) ORDER BY IFNULL(DISTINCT LIKELY(vt0.c1), 0Xffffffffe701cf24)  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON CASE COALESCE('', vt0.c1)  WHEN (- (v0.c0)) THEN vt0.c1 COLLATE RTRIM WHEN ((t0.c68)>(v0.c0)) THEN ((vt0.c1) NOT NULL) WHEN CAST(vt0.c1 AS REAL) THEN ((v0.c0)!=(v0.c0)) ELSE t0.c68 COLLATE RTRIM END RIGHT OUTER JOIN vt0 ON ((((vt0.c1)>(vt0.c1))) NOT NULL) WHERE ((((vt0.c0)) BETWEEN (((((vt0.c1, v0.c0, t0.c68))<((vt0.c0, t0.c68, ''))))) AND ((vt0.c0 COLLATE RTRIM)))) ORDER BY IFNULL(DISTINCT LIKELY(vt0.c1), 0Xffffffffe701cf24)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt0.c1, v0.c0, t0.c68))<((vt0.c0, t0.c68, ''))))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CASE COALESCE('', vt0.c1)  WHEN (- (v0.c0)) THEN vt0.c1 COLLATE RTRIM WHEN ((t0.c68)>(v0.c0)) THEN ((vt0.c1) NOT NULL) WHEN CAST(vt0.c1 AS REAL) THEN ((v0.c0)!=(v0.c0)) ELSE t0.c68 COLLATE RTRIM END RIGHT OUTER JOIN vt0 ON ((((vt0.c1)>(vt0.c1))) NOT NULL) ORDER BY IFNULL(DISTINCT LIKELY(vt0.c1), 0Xffffffffe701cf24)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN (+ (v0.c0)) THEN ((v0.c0) IS TRUE) WHEN (+ (t0.c68)) THEN (((t0.c68, NULL, v0.c0))<>(('{!', v0.c0, t0.c68))) WHEN ((t0.c68)<(t0.c68)) THEN ((v0.c0)AND(v0.c0)) ELSE ((t0.c68)>(v0.c0)) END) ORDER BY (((t0.c68, t0.c68, t0.c68))>=((v0.c0, v0.c0, v0.c0))) COLLATE BINARY, (NOT (CAST('641389745' AS REAL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (v0.c0)) THEN ((v0.c0) IS TRUE) WHEN (+ (t0.c68)) THEN (((t0.c68, NULL, v0.c0))<>(('{!', v0.c0, t0.c68))) WHEN ((t0.c68)<(t0.c68)) THEN ((v0.c0)AND(v0.c0)) ELSE ((t0.c68)>(v0.c0)) END) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c68, t0.c68, t0.c68))>=((v0.c0, v0.c0, v0.c0))) COLLATE BINARY, (NOT (CAST('641389745' AS REAL))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN (+ (v0.c0)) THEN ((v0.c0) IS TRUE) WHEN (+ (t0.c68)) THEN (((t0.c68, NULL, v0.c0))<>(('{!', v0.c0, t0.c68))) WHEN ((t0.c68)<(t0.c68)) THEN ((v0.c0)AND(v0.c0)) ELSE ((t0.c68)>(v0.c0)) END) ORDER BY (((t0.c68, t0.c68, t0.c68))>=((v0.c0, v0.c0, v0.c0))) COLLATE BINARY, (NOT (CAST('641389745' AS REAL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (v0.c0)) THEN ((v0.c0) IS TRUE) WHEN (+ (t0.c68)) THEN (((t0.c68, NULL, v0.c0))<>(('{!', v0.c0, t0.c68))) WHEN ((t0.c68)<(t0.c68)) THEN ((v0.c0)AND(v0.c0)) ELSE ((t0.c68)>(v0.c0)) END) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c68, t0.c68, t0.c68))>=((v0.c0, v0.c0, v0.c0))) COLLATE BINARY, (NOT (CAST('641389745' AS REAL))));
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CAST(t0.c68 AS TEXT))) AND ((CASE WHEN NULL THEN vt0.c1 END))) WHERE ((((((v0.c0)>=(v0.c0))))<((((v0.c0)||(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)>=(v0.c0))))<((((v0.c0)||(v0.c0)))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CAST(t0.c68 AS TEXT))) AND ((CASE WHEN NULL THEN vt0.c1 END))));
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CAST(t0.c68 AS TEXT))) AND ((CASE WHEN NULL THEN vt0.c1 END))) WHERE ((((((v0.c0)>=(v0.c0))))<((((v0.c0)||(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)>=(v0.c0))))<((((v0.c0)||(v0.c0)))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CAST(t0.c68 AS TEXT))) AND ((CASE WHEN NULL THEN vt0.c1 END))));
SELECT ALL COUNT(*) FROM v0 WHERE (highlight(v0.c0, v0.c0, v0.c0, ((((((((v0.c0)AND(v0.c0)))OR(NULL)))AND(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((highlight(v0.c0, v0.c0, v0.c0, ((((((((v0.c0)AND(v0.c0)))OR(NULL)))AND(v0.c0)))AND(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (highlight(v0.c0, v0.c0, v0.c0, ((((((((v0.c0)AND(v0.c0)))OR(NULL)))AND(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((highlight(v0.c0, v0.c0, v0.c0, ((((((((v0.c0)AND(v0.c0)))OR(NULL)))AND(v0.c0)))AND(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)IS NOT(v0.c0))  WHEN 0.9692318044671326 THEN ((((((((v0.c0)AND(v0.c0)))OR(x'')))AND(v0.c0)))AND(' -')) END) ORDER BY CASE WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) IS FALSE) WHEN (v0.c0 IN ()) THEN TOTAL_CHANGES() WHEN (+ (v0.c0)) THEN 197902739 WHEN NULL COLLATE NOCASE THEN ((v0.c0)*(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)IS NOT(v0.c0))  WHEN 0.9692318044671326 THEN ((((((((v0.c0)AND(v0.c0)))OR(x'')))AND(v0.c0)))AND(' -')) END) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) IS FALSE) WHEN (v0.c0 IN ()) THEN TOTAL_CHANGES() WHEN (+ (v0.c0)) THEN 197902739 WHEN NULL COLLATE NOCASE THEN ((v0.c0)*(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE BINARY END  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)IS NOT(v0.c0))  WHEN 0.9692318044671326 THEN ((((((((v0.c0)AND(v0.c0)))OR(x'')))AND(v0.c0)))AND(' -')) END) ORDER BY CASE WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) IS FALSE) WHEN (v0.c0 IN ()) THEN TOTAL_CHANGES() WHEN (+ (v0.c0)) THEN 197902739 WHEN NULL COLLATE NOCASE THEN ((v0.c0)*(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)IS NOT(v0.c0))  WHEN 0.9692318044671326 THEN ((((((((v0.c0)AND(v0.c0)))OR(x'')))AND(v0.c0)))AND(' -')) END) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) IS FALSE) WHEN (v0.c0 IN ()) THEN TOTAL_CHANGES() WHEN (+ (v0.c0)) THEN 197902739 WHEN NULL COLLATE NOCASE THEN ((v0.c0)*(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE BINARY END  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c1, vt0.c1, t0.c68)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), ((t0.c68)>>(vt0.c1)), vt0.c0 COLLATE RTRIM)) AND ((x'', (((vt0.c0))>=((t0.c68))), (t0.c68 IN ())))) FULL OUTER JOIN v0 ON ((x'703b') BETWEEN (((vt0.c0)<(t0.c68))) AND (((v0.c0) NOT NULL))) WHERE (((((((((v0.c0)AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(ABS(vt0.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c1, vt0.c1, t0.c68)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), ((t0.c68)>>(vt0.c1)), vt0.c0 COLLATE RTRIM)) AND ((x'', (((vt0.c0))>=((t0.c68))), (t0.c68 IN ())))) FULL OUTER JOIN v0 ON ((x'703b') BETWEEN (((vt0.c0)<(t0.c68))) AND (((v0.c0) NOT NULL))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c1, vt0.c1, t0.c68)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), ((t0.c68)>>(vt0.c1)), vt0.c0 COLLATE RTRIM)) AND ((x'', (((vt0.c0))>=((t0.c68))), (t0.c68 IN ())))) FULL OUTER JOIN v0 ON ((x'703b') BETWEEN (((vt0.c0)<(t0.c68))) AND (((v0.c0) NOT NULL))) WHERE (((((((((v0.c0)AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(ABS(vt0.c0)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c1, vt0.c1, t0.c68)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), ((t0.c68)>>(vt0.c1)), vt0.c0 COLLATE RTRIM)) AND ((x'', (((vt0.c0))>=((t0.c68))), (t0.c68 IN ())))) FULL OUTER JOIN v0 ON ((x'703b') BETWEEN (((vt0.c0)<(t0.c68))) AND (((v0.c0) NOT NULL))));
SELECT * FROM t0 WHERE (((((x'')|(t0.c68)))<>(LIKELIHOOD(0.14192934096040477, 0.9505442404509258)))) ORDER BY ((((((((((((t0.c68)AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))AND((0.5350208165685141 IN (t0.c68)))))OR(((t0.c68)GLOB(t0.c68)))))AND((t0.c68 IN (881681061)))))AND((((t0.c68))>((t0.c68))))))OR(CAST(t0.c68 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')|(t0.c68)))<>(LIKELIHOOD(0.14192934096040477, 0.9505442404509258)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((t0.c68)AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))AND((0.5350208165685141 IN (t0.c68)))))OR(((t0.c68)GLOB(t0.c68)))))AND((t0.c68 IN (881681061)))))AND((((t0.c68))>((t0.c68))))))OR(CAST(t0.c68 AS TEXT)))  NULLS LAST);
SELECT * FROM t0 WHERE (((((x'')|(t0.c68)))<>(LIKELIHOOD(0.14192934096040477, 0.9505442404509258)))) ORDER BY ((((((((((((t0.c68)AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))AND((0.5350208165685141 IN (t0.c68)))))OR(((t0.c68)GLOB(t0.c68)))))AND((t0.c68 IN (881681061)))))AND((((t0.c68))>((t0.c68))))))OR(CAST(t0.c68 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')|(t0.c68)))<>(LIKELIHOOD(0.14192934096040477, 0.9505442404509258)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((t0.c68)AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))AND((0.5350208165685141 IN (t0.c68)))))OR(((t0.c68)GLOB(t0.c68)))))AND((t0.c68 IN (881681061)))))AND((((t0.c68))>((t0.c68))))))OR(CAST(t0.c68 AS TEXT)))  NULLS LAST);
SELECT * FROM t0 WHERE (((((x'')|(t0.c68)))<>(LIKELIHOOD(0.14192934096040477, 0.9505442404509258)))) ORDER BY ((((((((((((t0.c68)AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))AND((0.5350208165685141 IN (t0.c68)))))OR(((t0.c68)GLOB(t0.c68)))))AND((t0.c68 IN (881681061)))))AND((((t0.c68))>((t0.c68))))))OR(CAST(t0.c68 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((((((NULLIF(v0.c0, v0.c0))AND(((v0.c0)+(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(v0.c0)))OR(v0.c0))) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, v0.c0 COLLATE BINARY, ((v0.c0) NOT NULL))) AND ((LOWER(v0.c0), (((v0.c0))==((v0.c0))), CAST(v0.c0 AS REAL)))) ASC, ((((v0.c0) IS FALSE)) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS NUMERIC)))  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULLIF(v0.c0, v0.c0))AND(((v0.c0)+(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(v0.c0)))OR(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, v0.c0 COLLATE BINARY, ((v0.c0) NOT NULL))) AND ((LOWER(v0.c0), (((v0.c0))=((v0.c0))), CAST(v0.c0 AS REAL)))) ASC, ((((v0.c0) IS FALSE)) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS NUMERIC)))  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((((NULLIF(v0.c0, v0.c0))AND(((v0.c0)+(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(v0.c0)))OR(v0.c0))) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, v0.c0 COLLATE BINARY, ((v0.c0) NOT NULL))) AND ((LOWER(v0.c0), (((v0.c0))==((v0.c0))), CAST(v0.c0 AS REAL)))) ASC, ((((v0.c0) IS FALSE)) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS NUMERIC)))  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULLIF(v0.c0, v0.c0))AND(((v0.c0)+(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(v0.c0)))OR(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, v0.c0 COLLATE BINARY, ((v0.c0) NOT NULL))) AND ((LOWER(v0.c0), (((v0.c0))=((v0.c0))), CAST(v0.c0 AS REAL)))) ASC, ((((v0.c0) IS FALSE)) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS NUMERIC)))  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY UNLIKELY(DISTINCT (t0.c68 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(DISTINCT (t0.c68 IN ())) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY UNLIKELY(DISTINCT (t0.c68 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(DISTINCT (t0.c68 IN ())) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY UNLIKELY(DISTINCT (t0.c68 IN ())) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY WHERE (((((v0.c0) ISNULL)) NOT BETWEEN (IFNULL(vt0.c1, vt0.c0)) AND (((v0.c0)*(vt0.c0))))) ORDER BY (TRIM(vt0.c0, v0.c0) IN (json_array_length(t0.c68, vt0.c0), IFNULL(NULL, t0.c68), CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) NOT BETWEEN (IFNULL(vt0.c1, vt0.c0)) AND (((v0.c0)*(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY ORDER BY (TRIM(vt0.c0, v0.c0) IN (json_array_length(t0.c68, vt0.c0), IFNULL(NULL, t0.c68), CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY WHERE (((((v0.c0) ISNULL)) NOT BETWEEN (IFNULL(vt0.c1, vt0.c0)) AND (((v0.c0)*(vt0.c0))))) ORDER BY (TRIM(vt0.c0, v0.c0) IN (json_array_length(t0.c68, vt0.c0), IFNULL(NULL, t0.c68), CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) NOT BETWEEN (IFNULL(vt0.c1, vt0.c0)) AND (((v0.c0)*(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY ORDER BY (TRIM(vt0.c0, v0.c0) IN (json_array_length(t0.c68, vt0.c0), IFNULL(NULL, t0.c68), CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE (TRIM(DISTINCT JULIANDAY(vt0.c0, vt0.c0, vt0.c0), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ORDER BY ((vt0.c0 COLLATE RTRIM)*(((vt0.c1)>=(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT JULIANDAY(vt0.c0, vt0.c0, vt0.c0), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)*(((vt0.c1)>=(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT JULIANDAY(vt0.c0, vt0.c0, vt0.c0), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ORDER BY ((vt0.c0 COLLATE RTRIM)*(((vt0.c1)>=(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT JULIANDAY(vt0.c0, vt0.c0, vt0.c0), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)*(((vt0.c1)>=(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT JULIANDAY(vt0.c0, vt0.c0, vt0.c0), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ORDER BY ((vt0.c0 COLLATE RTRIM)*(((vt0.c1)>=(vt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((((vt0.c0)IS NOT(vt0.c1)), (((x''))<((t0.c68))), vt0.c0))!=((x'6929', (vt0.c1 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c68 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)IS NOT(vt0.c1)), (((x''))<((t0.c68))), vt0.c0))!=((x'6929', (vt0.c1 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c68 END)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((((vt0.c0)IS NOT(vt0.c1)), (((x''))<((t0.c68))), vt0.c0))!=((x'6929', (vt0.c1 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c68 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)IS NOT(vt0.c1)), (((x''))<((t0.c68))), vt0.c0))!=((x'6929', (vt0.c1 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c68 END)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((((vt0.c0)IS NOT(vt0.c1)), (((x''))<((t0.c68))), vt0.c0))!=((x'6929', (vt0.c1 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c68 END))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((t0.c68)OR(v0.c0)))OR(t0.c68)) COLLATE BINARY LEFT OUTER JOIN t0 ON (CASE t0.c68  WHEN vt0.c0 THEN vt0.c0 END IN ()) WHERE (((x'') BETWEEN ((v0.c0 IN ())) AND (((vt0.c0)|(t0.c68))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN ((v0.c0 IN ())) AND (((vt0.c0)|(t0.c68))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((t0.c68)OR(v0.c0)))OR(t0.c68)) COLLATE BINARY LEFT OUTER JOIN t0 ON (CASE t0.c68  WHEN vt0.c0 THEN vt0.c0 END IN ()) ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((t0.c68)OR(v0.c0)))OR(t0.c68)) COLLATE BINARY LEFT OUTER JOIN t0 ON (CASE t0.c68  WHEN vt0.c0 THEN vt0.c0 END IN ()) WHERE (((x'') BETWEEN ((v0.c0 IN ())) AND (((vt0.c0)|(t0.c68))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN ((v0.c0 IN ())) AND (((vt0.c0)|(t0.c68))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((t0.c68)OR(v0.c0)))OR(t0.c68)) COLLATE BINARY LEFT OUTER JOIN t0 ON (CASE t0.c68  WHEN vt0.c0 THEN vt0.c0 END IN ()) ORDER BY v0.c0 ASC);
SELECT ALL * FROM vt0 WHERE ((('2145908476') ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('2145908476') ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('2145908476') ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('2145908476') ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('2145908476') ISNULL) COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN v0 ON ((((t0.c68)|(vt0.c0))) NOT BETWEEN (LIKELY(DISTINCT t0.c68)) AND (CASE WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN '6r' WHEN t0.c68 THEN t0.c68 END)) RIGHT OUTER JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c68) AND (t0.c68)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND((vt0.c1 IN ()))))OR(((vt0.c1)>=(v0.c0)))))AND(vt0.c1)) WHERE ('') ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((((vt0.c0)OR(x'')))AND(x'860d')) ELSE ((vt0.c1)>>(t0.c68)) END;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((t0.c68)|(vt0.c0))) NOT BETWEEN (LIKELY(DISTINCT t0.c68)) AND (CASE WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN '6r' WHEN t0.c68 THEN t0.c68 END)) RIGHT OUTER JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c68) AND (t0.c68)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND((vt0.c1 IN ()))))OR(((vt0.c1)>=(v0.c0)))))AND(vt0.c1)) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((((vt0.c0)OR(x'')))AND(x'860d')) ELSE ((vt0.c1)>>(t0.c68)) END);
SELECT * FROM vt0 INNER JOIN v0 ON ((((t0.c68)|(vt0.c0))) NOT BETWEEN (LIKELY(DISTINCT t0.c68)) AND (CASE WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN '6r' WHEN t0.c68 THEN t0.c68 END)) RIGHT OUTER JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c68) AND (t0.c68)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND((vt0.c1 IN ()))))OR(((vt0.c1)>=(v0.c0)))))AND(vt0.c1)) WHERE ('') ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((((vt0.c0)OR(x'')))AND(x'860d')) ELSE ((vt0.c1)>>(t0.c68)) END;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((t0.c68)|(vt0.c0))) NOT BETWEEN (LIKELY(DISTINCT t0.c68)) AND (CASE WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN '6r' WHEN t0.c68 THEN t0.c68 END)) RIGHT OUTER JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c68) AND (t0.c68)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND((vt0.c1 IN ()))))OR(((vt0.c1)>=(v0.c0)))))AND(vt0.c1)) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((((vt0.c0)OR(x'')))AND(x'860d')) ELSE ((vt0.c1)>>(t0.c68)) END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN t0.c68 COLLATE BINARY THEN CASE WHEN 'g0溭Y)yQ' THEN vt0.c1 END WHEN ((vt0.c1) IS FALSE) THEN LIKELY(DISTINCT t0.c68) WHEN t0.c68 COLLATE RTRIM THEN CHANGES() END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c68 COLLATE BINARY THEN CASE WHEN 'g0溭Y)yQ' THEN vt0.c1 END WHEN ((vt0.c1) IS FALSE) THEN LIKELY(DISTINCT t0.c68) WHEN t0.c68 COLLATE RTRIM THEN CHANGES() END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN t0.c68 COLLATE BINARY THEN CASE WHEN 'g0溭Y)yQ' THEN vt0.c1 END WHEN ((vt0.c1) IS FALSE) THEN LIKELY(DISTINCT t0.c68) WHEN t0.c68 COLLATE RTRIM THEN CHANGES() END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c68 COLLATE BINARY THEN CASE WHEN 'g0溭Y)yQ' THEN vt0.c1 END WHEN ((vt0.c1) IS FALSE) THEN LIKELY(DISTINCT t0.c68) WHEN t0.c68 COLLATE RTRIM THEN CHANGES() END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN t0.c68 COLLATE BINARY THEN CASE WHEN 'g0溭Y)yQ' THEN vt0.c1 END WHEN ((vt0.c1) IS FALSE) THEN LIKELY(DISTINCT t0.c68) WHEN t0.c68 COLLATE RTRIM THEN CHANGES() END);
SELECT COUNT(*) FROM t0 WHERE (QUOTE(((t0.c68) BETWEEN (NULL) AND ('-1554842831'))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((t0.c68) BETWEEN (NULL) AND ('-1554842831')))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (QUOTE(((t0.c68) BETWEEN (NULL) AND ('-1554842831'))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((t0.c68) BETWEEN (NULL) AND ('-1554842831')))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (QUOTE(((t0.c68) BETWEEN (NULL) AND ('-1554842831'))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((((((((~ (v0.c0)))AND((+ (t0.c68)))))OR(TRIM(vt0.c0))))OR(vt0.c0)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (v0.c0)))AND((+ (t0.c68)))))OR(TRIM(vt0.c0))))OR(vt0.c0)))AND(v0.c0))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((((((((~ (v0.c0)))AND((+ (t0.c68)))))OR(TRIM(vt0.c0))))OR(vt0.c0)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (v0.c0)))AND((+ (t0.c68)))))OR(TRIM(vt0.c0))))OR(vt0.c0)))AND(v0.c0))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((TYPEOF(DISTINCT '224876658')) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT '224876658')) IS TRUE)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((TYPEOF(DISTINCT '224876658')) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT '224876658')) IS TRUE)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((TYPEOF(DISTINCT '224876658')) IS TRUE));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) IS FALSE)))>(((('w4Q')<>(NULL))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) IS FALSE)))>(((('w4Q')!=(NULL)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) IS FALSE)))>(((('w4Q')<>(NULL))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) IS FALSE)))>(((('w4Q')!=(NULL)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0)||(t0.c68))) AND (v0.c0))) ORDER BY (((((v0.c0)) BETWEEN ((t0.c68)) AND ((vt0.c0))))IS NOT(((vt0.c1)LIKE(v0.c0)))) DESC  NULLS FIRST, CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)  NULLS FIRST, ((((((vt0.c1)AND(t0.c68)))AND(vt0.c1)))||(((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0)||(t0.c68))) AND (v0.c0))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((((v0.c0)) BETWEEN ((t0.c68)) AND ((vt0.c0))))IS NOT(((vt0.c1)LIKE(v0.c0)))) DESC  NULLS FIRST, CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)  NULLS FIRST, ((((((vt0.c1)AND(t0.c68)))AND(vt0.c1)))||(((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0)||(t0.c68))) AND (v0.c0))) ORDER BY (((((v0.c0)) BETWEEN ((t0.c68)) AND ((vt0.c0))))IS NOT(((vt0.c1)LIKE(v0.c0)))) DESC  NULLS FIRST, CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)  NULLS FIRST, ((((((vt0.c1)AND(t0.c68)))AND(vt0.c1)))||(((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0)||(t0.c68))) AND (v0.c0))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((((v0.c0)) BETWEEN ((t0.c68)) AND ((vt0.c0))))IS NOT(((vt0.c1)LIKE(v0.c0)))) DESC  NULLS FIRST, CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)  NULLS FIRST, ((((((vt0.c1)AND(t0.c68)))AND(vt0.c1)))||(((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c1)=(t0.c68))) AND (((vt0.c1)<=(v0.c0))))) ORDER BY (((((NULL IN ()))AND('A%h')))AND(('mUH()2 z' IN (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c1)=(t0.c68))) AND (((vt0.c1)<=(v0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((((NULL IN ()))AND('A%h')))AND(('mUH()2 z' IN (vt0.c0))))  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c1)=(t0.c68))) AND (((vt0.c1)<=(v0.c0))))) ORDER BY (((((NULL IN ()))AND('A%h')))AND(('mUH()2 z' IN (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c1)=(t0.c68))) AND (((vt0.c1)<=(v0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((((NULL IN ()))AND('A%h')))AND(('mUH()2 z' IN (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((((t0.c68) NOT BETWEEN (vt0.c0) AND (v0.c0)))+(((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c1))))) ORDER BY ((((vt0.c1)>(v0.c0))) IS FALSE)  NULLS FIRST, ((((t0.c68) IS FALSE)) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c68 WHEN vt0.c1 THEN 0.18833976909081285 WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END) AND (((vt0.c1) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c68) NOT BETWEEN (vt0.c0) AND (v0.c0)))+(((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c1))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((vt0.c1)>(v0.c0))) IS FALSE)  NULLS FIRST, ((((t0.c68) IS FALSE)) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c68 WHEN vt0.c1 THEN 0.18833976909081285 WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END) AND (((vt0.c1) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((((t0.c68) NOT BETWEEN (vt0.c0) AND (v0.c0)))+(((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c1))))) ORDER BY ((((vt0.c1)>(v0.c0))) IS FALSE)  NULLS FIRST, ((((t0.c68) IS FALSE)) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c68 WHEN vt0.c1 THEN 0.18833976909081285 WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END) AND (((vt0.c1) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c68) NOT BETWEEN (vt0.c0) AND (v0.c0)))+(((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c1))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((vt0.c1)>(v0.c0))) IS FALSE)  NULLS FIRST, ((((t0.c68) IS FALSE)) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c68 WHEN vt0.c1 THEN 0.18833976909081285 WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END) AND (((vt0.c1) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((((x'')AND(((NULL)-(v0.c0)))))AND(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((NULL)-(v0.c0)))))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((((x'')AND(((NULL)-(v0.c0)))))AND(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((NULL)-(v0.c0)))))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((vt0.c0 IN (v0.c0))) NOT BETWEEN (0.9711519120363512 COLLATE NOCASE) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (v0.c0))) NOT BETWEEN (0.9711519120363512 COLLATE NOCASE) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((vt0.c0 IN (v0.c0))) NOT BETWEEN (0.9711519120363512 COLLATE NOCASE) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (v0.c0))) NOT BETWEEN (0.9711519120363512 COLLATE NOCASE) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM) ORDER BY ((+ (v0.c0)) IN (((v0.c0)>>(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((+ (v0.c0)) IN (((v0.c0)>>(v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM) ORDER BY ((+ (v0.c0)) IN (((v0.c0)>>(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((+ (v0.c0)) IN (((v0.c0)>>(v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1)OR(t0.c68)))OR('6t')) IN (((vt0.c0) IS FALSE)))) ORDER BY t0.c68 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(t0.c68)))OR('6t')) IN (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c68 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1)OR(t0.c68)))OR('6t')) IN (((vt0.c0) IS FALSE)))) ORDER BY t0.c68 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(t0.c68)))OR('6t')) IN (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c68 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1)OR(t0.c68)))OR('6t')) IN (((vt0.c0) IS FALSE)))) ORDER BY t0.c68 ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((json_remove(vt0.c0, vt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((json_remove(vt0.c0, vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((json_remove(vt0.c0, vt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((json_remove(vt0.c0, vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (json_valid(((vt0.c1) NOT NULL))) ORDER BY (vt0.c0 IN (v0.c0, v0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(((vt0.c1) NOT NULL))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (vt0.c0 IN (v0.c0, v0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (json_valid(((vt0.c1) NOT NULL))) ORDER BY (vt0.c0 IN (v0.c0, v0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(((vt0.c1) NOT NULL))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (vt0.c0 IN (v0.c0, v0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CAST((- (x'')) AS BLOB)) ORDER BY (- ('1793718270')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (x'')) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (- ('1793718270')) DESC);
SELECT * FROM vt0, t0 WHERE (CAST((- (x'')) AS BLOB)) ORDER BY (- ('1793718270')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (x'')) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (- ('1793718270')) DESC);
SELECT * FROM vt0, t0 WHERE (CAST((- (x'')) AS BLOB)) ORDER BY (- ('1793718270')) DESC;
SELECT ALL * FROM v0, t0, vt0 WHERE (((((((((((t0.c68)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(x''))) BETWEEN ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c68, vt0.c0, t0.c68)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (vt0.c0))) ORDER BY (((CAST(v0.c0 AS TEXT)))>((((v0.c0)|(t0.c68))))) ASC  NULLS FIRST, (((x''))<=((t0.c68)))  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c68)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(x''))) BETWEEN ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c68, vt0.c0, t0.c68)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (vt0.c0))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((CAST(v0.c0 AS TEXT)))>((((v0.c0)|(t0.c68))))) ASC  NULLS FIRST, (((x''))<=((t0.c68)))  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM v0, t0, vt0 WHERE (((((((((((t0.c68)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(x''))) BETWEEN ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c68, vt0.c0, t0.c68)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (vt0.c0))) ORDER BY (((CAST(v0.c0 AS TEXT)))>((((v0.c0)|(t0.c68))))) ASC  NULLS FIRST, (((x''))<=((t0.c68)))  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c68)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(x''))) BETWEEN ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c68, vt0.c0, t0.c68)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (vt0.c0))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((CAST(v0.c0 AS TEXT)))>((((v0.c0)|(t0.c68))))) ASC  NULLS FIRST, (((x''))<=((t0.c68)))  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM v0, t0 WHERE (((((v0.c0)IS NOT(v0.c0)))IS NOT((+ (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS NOT(v0.c0)))IS NOT((+ (t0.c68))))) IS TRUE)  as count FROM v0, t0 NOT INDEXED);
SELECT ALL * FROM v0, t0 WHERE (((((v0.c0)IS NOT(v0.c0)))IS NOT((+ (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS NOT(v0.c0)))IS NOT((+ (t0.c68))))) IS TRUE)  as count FROM v0, t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.7968493886183274) ORDER BY IFNULL((~ (t0.c68)), (- (t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((0.7968493886183274) IS TRUE)  as count FROM vt0, t0 ORDER BY IFNULL((~ (t0.c68)), (- (t0.c68))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.7968493886183274) ORDER BY IFNULL((~ (t0.c68)), (- (t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((0.7968493886183274) IS TRUE)  as count FROM vt0, t0 ORDER BY IFNULL((~ (t0.c68)), (- (t0.c68))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.7968493886183274) ORDER BY IFNULL((~ (t0.c68)), (- (t0.c68)));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN v0 ON (- ((((v0.c0))<>((vt0.c1))))) WHERE (((((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c1)))-(CAST(t0.c68 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c1)))-(CAST(t0.c68 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON (- ((((v0.c0))<>((vt0.c1))))));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN v0 ON (- ((((v0.c0))<>((vt0.c1))))) WHERE (((((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c1)))-(CAST(t0.c68 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c1)))-(CAST(t0.c68 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON (- ((((v0.c0))<>((vt0.c1))))));
SELECT ALL * FROM v0 WHERE ((- (((v0.c0)GLOB(v0.c0))))) ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0)>>('r_M\r阶HcG.')))))OR((NOT (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0)>>('r_M\r阶HcG.')))))OR((NOT (v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE ((- (((v0.c0)GLOB(v0.c0))))) ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0)>>('r_M\r阶HcG.')))))OR((NOT (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0)>>('r_M\r阶HcG.')))))OR((NOT (v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON v0.c0 RIGHT OUTER JOIN v0 ON CASE CASE WHEN v0.c0 THEN vt0.c1 ELSE x'f979' END  WHEN ((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c0)) END WHERE (CASE (x'' IN ())  WHEN (('') IS TRUE) THEN ((((((((((((v0.c0)OR(t0.c68)))AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c1)) ELSE LIKE(v0.c0, vt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (x'' IN ())  WHEN (('') IS TRUE) THEN ((((((((((((v0.c0)OR(t0.c68)))AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c1)) ELSE LIKE(v0.c0, vt0.c1) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON v0.c0 RIGHT OUTER JOIN v0 ON CASE CASE WHEN v0.c0 THEN vt0.c1 ELSE x'f979' END  WHEN ((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON v0.c0 RIGHT OUTER JOIN v0 ON CASE CASE WHEN v0.c0 THEN vt0.c1 ELSE x'f979' END  WHEN ((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c0)) END WHERE (CASE (x'' IN ())  WHEN (('') IS TRUE) THEN ((((((((((((v0.c0)OR(t0.c68)))AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c1)) ELSE LIKE(v0.c0, vt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (x'' IN ())  WHEN (('') IS TRUE) THEN ((((((((((((v0.c0)OR(t0.c68)))AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c1)) ELSE LIKE(v0.c0, vt0.c1) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON v0.c0 RIGHT OUTER JOIN v0 ON CASE CASE WHEN v0.c0 THEN vt0.c1 ELSE x'f979' END  WHEN ((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c0)) END);
SELECT * FROM v0 INNER JOIN vt0 ON ((((vt0.c1)|(vt0.c1))) IS FALSE) CROSS JOIN t0 ON (((v0.c0)) NOT BETWEEN (((NOT (t0.c68)))) AND ((((((t0.c68)OR(vt0.c0)))OR(v0.c0))))) WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)/(vt0.c0)))) AND ((TYPEOF(t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt0.c1)/(vt0.c0)))) AND ((TYPEOF(t0.c68))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((vt0.c1)|(vt0.c1))) IS FALSE) CROSS JOIN t0 ON (((v0.c0)) NOT BETWEEN (((NOT (t0.c68)))) AND ((((((t0.c68)OR(vt0.c0)))OR(v0.c0))))));
SELECT * FROM v0 INNER JOIN vt0 ON ((((vt0.c1)|(vt0.c1))) IS FALSE) CROSS JOIN t0 ON (((v0.c0)) NOT BETWEEN (((NOT (t0.c68)))) AND ((((((t0.c68)OR(vt0.c0)))OR(v0.c0))))) WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)/(vt0.c0)))) AND ((TYPEOF(t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt0.c1)/(vt0.c0)))) AND ((TYPEOF(t0.c68))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((vt0.c1)|(vt0.c1))) IS FALSE) CROSS JOIN t0 ON (((v0.c0)) NOT BETWEEN (((NOT (t0.c68)))) AND ((((((t0.c68)OR(vt0.c0)))OR(v0.c0))))));
SELECT * FROM t0 INNER JOIN vt0 ON json_remove(LOWER(DISTINCT t0.c68), (t0.c68 IN ())) WHERE ((((6.24814344E8, t0.c68, '0.20142874785220644')) NOT BETWEEN ((vt0.c1, -4.19311836E8, vt0.c0)) AND ((t0.c68, vt0.c1, vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((6.24814344E8, t0.c68, '0.20142874785220644')) NOT BETWEEN ((vt0.c1, -4.19311836E8, vt0.c0)) AND ((t0.c68, vt0.c1, vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON json_remove(LOWER(DISTINCT t0.c68), (t0.c68 IN ())));
SELECT * FROM t0 INNER JOIN vt0 ON json_remove(LOWER(DISTINCT t0.c68), (t0.c68 IN ())) WHERE ((((6.24814344E8, t0.c68, '0.20142874785220644')) NOT BETWEEN ((vt0.c1, -4.19311836E8, vt0.c0)) AND ((t0.c68, vt0.c1, vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((6.24814344E8, t0.c68, '0.20142874785220644')) NOT BETWEEN ((vt0.c1, -4.19311836E8, vt0.c0)) AND ((t0.c68, vt0.c1, vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON json_remove(LOWER(DISTINCT t0.c68), (t0.c68 IN ())));
SELECT * FROM v0 WHERE ((((+ (v0.c0)))%(v0.c0))) ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN (((x'')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)AND(v0.c0)) THEN v0.c0 COLLATE BINARY WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, 5998576.0))) ELSE ((v0.c0)AND(x'')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))%(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN (((x'')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)AND(v0.c0)) THEN v0.c0 COLLATE BINARY WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, 5998576.0))) ELSE ((v0.c0)AND(x'')) END DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((+ (v0.c0)))%(v0.c0))) ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN (((x'')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)AND(v0.c0)) THEN v0.c0 COLLATE BINARY WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, 5998576.0))) ELSE ((v0.c0)AND(x'')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0)))%(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN (((x'')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)AND(v0.c0)) THEN v0.c0 COLLATE BINARY WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, 5998576.0))) ELSE ((v0.c0)AND(x'')) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE ((v0.c0)GLOB(t0.c68))  WHEN (- (t0.c68)) THEN ((v0.c0)GLOB(v0.c0)) ELSE CAST(t0.c68 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)GLOB(t0.c68))  WHEN (- (t0.c68)) THEN ((v0.c0)GLOB(v0.c0)) ELSE CAST(t0.c68 AS TEXT) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE ((v0.c0)GLOB(t0.c68))  WHEN (- (t0.c68)) THEN ((v0.c0)GLOB(v0.c0)) ELSE CAST(t0.c68 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)GLOB(t0.c68))  WHEN (- (t0.c68)) THEN ((v0.c0)GLOB(v0.c0)) ELSE CAST(t0.c68 AS TEXT) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM vt0, v0 CROSS JOIN t0 ON (((((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, t0.c68))))OR(((vt0.c1)>(t0.c68)))))AND(TRIM(DISTINCT t0.c68, v0.c0))) WHERE (CAST(((vt0.c0)+(t0.c68)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)+(t0.c68)) AS REAL)) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON (((((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, t0.c68))))OR(((vt0.c1)>(t0.c68)))))AND(TRIM(DISTINCT t0.c68, v0.c0))));
SELECT ALL * FROM vt0, v0 CROSS JOIN t0 ON (((((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, t0.c68))))OR(((vt0.c1)>(t0.c68)))))AND(TRIM(DISTINCT t0.c68, v0.c0))) WHERE (CAST(((vt0.c0)+(t0.c68)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)+(t0.c68)) AS REAL)) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON (((((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, t0.c68))))OR(((vt0.c1)>(t0.c68)))))AND(TRIM(DISTINCT t0.c68, v0.c0))));
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE ((- (((t0.c68)GLOB(t0.c68))))) ORDER BY CAST((((vt0.c0, t0.c68, vt0.c0))==((t0.c68, vt0.c0, vt0.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((- (((t0.c68)GLOB(t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((((vt0.c0, t0.c68, vt0.c0))==((t0.c68, vt0.c0, vt0.c0))) AS INTEGER));
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE ((- (((t0.c68)GLOB(t0.c68))))) ORDER BY CAST((((vt0.c0, t0.c68, vt0.c0))==((t0.c68, vt0.c0, vt0.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((- (((t0.c68)GLOB(t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((((vt0.c0, t0.c68, vt0.c0))==((t0.c68, vt0.c0, vt0.c0))) AS INTEGER));
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE ((- (((t0.c68)GLOB(t0.c68))))) ORDER BY CAST((((vt0.c0, t0.c68, vt0.c0))==((t0.c68, vt0.c0, vt0.c0))) AS INTEGER);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((vt0.c0 IN (t0.c68)) COLLATE NOCASE) ORDER BY (((vt0.c1)) NOT BETWEEN (((v0.c0 IN ()))) AND ((vt0.c0 COLLATE RTRIM))) ASC, ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (t0.c68)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((vt0.c1)) NOT BETWEEN (((v0.c0 IN ()))) AND ((vt0.c0 COLLATE RTRIM))) ASC, ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((vt0.c0 IN (t0.c68)) COLLATE NOCASE) ORDER BY (((vt0.c1)) NOT BETWEEN (((v0.c0 IN ()))) AND ((vt0.c0 COLLATE RTRIM))) ASC, ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (t0.c68)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((vt0.c1)) NOT BETWEEN (((v0.c0 IN ()))) AND ((vt0.c0 COLLATE RTRIM))) ASC, ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT NULL) DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) COLLATE NOCASE) ORDER BY (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END IN ());
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END IN ()));
SELECT ALL * FROM t0 WHERE ((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) COLLATE NOCASE) ORDER BY (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END IN ());
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END IN ()));
SELECT ALL * FROM t0 WHERE ((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) COLLATE NOCASE) ORDER BY (CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END IN ());
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c68 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c68 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS INTEGER)) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1))<=((vt0.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1))<=((vt0.c1))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1))<=((vt0.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1))<=((vt0.c1))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1))<=((vt0.c1))) AS REAL));
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS INTEGER) WHERE (v0.c0) ORDER BY '61918417'  NULLS FIRST, ((((((0.529885349953836) ISNULL))OR(((v0.c0)<(t0.c68)))))AND(((vt0.c1)*(vt0.c1)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))*(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS INTEGER) ORDER BY '61918417'  NULLS FIRST, ((((((0.529885349953836) ISNULL))OR(((v0.c0)<(t0.c68)))))AND(((vt0.c1)*(vt0.c1)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))*(v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS INTEGER) WHERE (v0.c0) ORDER BY '61918417'  NULLS FIRST, ((((((0.529885349953836) ISNULL))OR(((v0.c0)<(t0.c68)))))AND(((vt0.c1)*(vt0.c1)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))*(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS INTEGER) ORDER BY '61918417'  NULLS FIRST, ((((((0.529885349953836) ISNULL))OR(((v0.c0)<(t0.c68)))))AND(((vt0.c1)*(vt0.c1)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))*(v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (json_remove(CAST(v0.c0 AS BLOB), (((vt0.c1))<=((v0.c0))), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 END, RTRIM(t0.c68), ((((((((v0.c0)AND(vt0.c1)))OR(t0.c68)))AND(NULL)))AND(vt0.c1)))) ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(t0.c68))) NOT BETWEEN ('1016319843') AND (t0.c68 COLLATE RTRIM)), CAST(t0.c68 AS REAL) COLLATE BINARY ASC  NULLS FIRST, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_remove(CAST(v0.c0 AS BLOB), (((vt0.c1))<=((v0.c0))), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 END, RTRIM(t0.c68), ((((((((v0.c0)AND(vt0.c1)))OR(t0.c68)))AND(NULL)))AND(vt0.c1)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(t0.c68))) NOT BETWEEN ('1016319843') AND (t0.c68 COLLATE RTRIM)), CAST(t0.c68 AS REAL) COLLATE BINARY ASC  NULLS FIRST, x'' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (json_remove(CAST(v0.c0 AS BLOB), (((vt0.c1))<=((v0.c0))), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 END, RTRIM(t0.c68), ((((((((v0.c0)AND(vt0.c1)))OR(t0.c68)))AND(NULL)))AND(vt0.c1)))) ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(t0.c68))) NOT BETWEEN ('1016319843') AND (t0.c68 COLLATE RTRIM)), CAST(t0.c68 AS REAL) COLLATE BINARY ASC  NULLS FIRST, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_remove(CAST(v0.c0 AS BLOB), (((vt0.c1))<=((v0.c0))), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 END, RTRIM(t0.c68), ((((((((v0.c0)AND(vt0.c1)))OR(t0.c68)))AND(NULL)))AND(vt0.c1)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(t0.c68))) NOT BETWEEN ('1016319843') AND (t0.c68 COLLATE RTRIM)), CAST(t0.c68 AS REAL) COLLATE BINARY ASC  NULLS FIRST, x'' DESC  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END)<<((+ (t0.c68))))) ORDER BY (((((v0.c0, v0.c0, vt0.c0))<>(('', vt0.c1, '863665872')))) NOTNULL)  NULLS FIRST, (+ ((((vt0.c1)) BETWEEN ((t0.c68)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c0 END)<<((+ (t0.c68))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((((v0.c0, v0.c0, vt0.c0))!=(('', vt0.c1, '863665872')))) NOTNULL)  NULLS FIRST, (+ ((((vt0.c1)) BETWEEN ((t0.c68)) AND ((vt0.c1))))) ASC  NULLS FIRST);
SELECT * FROM t0, v0, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END)<<((+ (t0.c68))))) ORDER BY (((((v0.c0, v0.c0, vt0.c0))<>(('', vt0.c1, '863665872')))) NOTNULL)  NULLS FIRST, (+ ((((vt0.c1)) BETWEEN ((t0.c68)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c0 END)<<((+ (t0.c68))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((((v0.c0, v0.c0, vt0.c0))!=(('', vt0.c1, '863665872')))) NOTNULL)  NULLS FIRST, (+ ((((vt0.c1)) BETWEEN ((t0.c68)) AND ((vt0.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0 WHERE ((+ (((vt0.c1)|(vt0.c0))))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0))  WHEN CASE WHEN vt0.c1 THEN '' WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN t0.c68 ELSE NULL END THEN ((vt0.c0) BETWEEN (NULL) AND (t0.c68)) WHEN CASE WHEN v0.c0 THEN vt0.c1 ELSE t0.c68 END THEN ((vt0.c0)*(vt0.c0)) WHEN (v0.c0 IN ()) THEN vt0.c1 COLLATE NOCASE ELSE t0.c68 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1)|(vt0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0))  WHEN CASE WHEN vt0.c1 THEN '' WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN t0.c68 ELSE NULL END THEN ((vt0.c0) BETWEEN (NULL) AND (t0.c68)) WHEN CASE WHEN v0.c0 THEN vt0.c1 ELSE t0.c68 END THEN ((vt0.c0)*(vt0.c0)) WHEN (v0.c0 IN ()) THEN vt0.c1 COLLATE NOCASE ELSE t0.c68 COLLATE NOCASE END);
SELECT ALL * FROM t0, v0, vt0 WHERE ((+ (((vt0.c1)|(vt0.c0))))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0))  WHEN CASE WHEN vt0.c1 THEN '' WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN t0.c68 ELSE NULL END THEN ((vt0.c0) BETWEEN (NULL) AND (t0.c68)) WHEN CASE WHEN v0.c0 THEN vt0.c1 ELSE t0.c68 END THEN ((vt0.c0)*(vt0.c0)) WHEN (v0.c0 IN ()) THEN vt0.c1 COLLATE NOCASE ELSE t0.c68 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1)|(vt0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0))  WHEN CASE WHEN vt0.c1 THEN '' WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN t0.c68 ELSE NULL END THEN ((vt0.c0) BETWEEN (NULL) AND (t0.c68)) WHEN CASE WHEN v0.c0 THEN vt0.c1 ELSE t0.c68 END THEN ((vt0.c0)*(vt0.c0)) WHEN (v0.c0 IN ()) THEN vt0.c1 COLLATE NOCASE ELSE t0.c68 COLLATE NOCASE END);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN v0 ON LIKELIHOOD(DISTINCT HEX(DISTINCT vt0.c1), 0.22873525654512883) WHERE (CAST((((vt0.c0))<=((t0.c68))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))<=((t0.c68))) AS BLOB)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON LIKELIHOOD(DISTINCT HEX(DISTINCT vt0.c1), 0.22873525654512883));
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN v0 ON LIKELIHOOD(DISTINCT HEX(DISTINCT vt0.c1), 0.22873525654512883) WHERE (CAST((((vt0.c0))<=((t0.c68))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))<=((t0.c68))) AS BLOB)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON LIKELIHOOD(DISTINCT HEX(DISTINCT vt0.c1), 0.22873525654512883));
SELECT * FROM v0, vt0 NATURAL JOIN t0 WHERE (((((((((v0.c0)OR(t0.c68)))AND(vt0.c1)))OR(t0.c68)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY (((v0.c0)) NOT BETWEEN ((((t0.c68) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CAST(v0.c0 AS TEXT))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(t0.c68)))AND(vt0.c1)))OR(t0.c68)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN t0 ORDER BY (((v0.c0)) NOT BETWEEN ((((t0.c68) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CAST(v0.c0 AS TEXT))))  NULLS LAST);
SELECT * FROM v0, vt0 NATURAL JOIN t0 WHERE (((((((((v0.c0)OR(t0.c68)))AND(vt0.c1)))OR(t0.c68)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY (((v0.c0)) NOT BETWEEN ((((t0.c68) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CAST(v0.c0 AS TEXT))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(t0.c68)))AND(vt0.c1)))OR(t0.c68)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN t0 ORDER BY (((v0.c0)) NOT BETWEEN ((((t0.c68) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CAST(v0.c0 AS TEXT))))  NULLS LAST);
SELECT ALL * FROM v0, t0, vt0 WHERE (((CAST(v0.c0 AS INTEGER))/(SQLITE_VERSION()))) ORDER BY (NOT (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) DESC  NULLS LAST, ((((vt0.c0))<((vt0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))/(SQLITE_VERSION()))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (NOT (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) DESC  NULLS LAST, ((((vt0.c0))<((vt0.c0))) IN ()) ASC);
SELECT ALL * FROM v0, t0, vt0 WHERE (((CAST(v0.c0 AS INTEGER))/(SQLITE_VERSION()))) ORDER BY (NOT (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) DESC  NULLS LAST, ((((vt0.c0))<((vt0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))/(SQLITE_VERSION()))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (NOT (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) DESC  NULLS LAST, ((((vt0.c0))<((vt0.c0))) IN ()) ASC);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c68)|(t0.c68))  WHEN ((t0.c68) IS FALSE) THEN COALESCE(1.7976931348623157E308, t0.c68, t0.c68, t0.c68) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c68)|(t0.c68))  WHEN ((t0.c68) IS FALSE) THEN COALESCE(1.7976931348623157E308, t0.c68, t0.c68, t0.c68) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c68)|(t0.c68))  WHEN ((t0.c68) IS FALSE) THEN COALESCE(1.7976931348623157E308, t0.c68, t0.c68, t0.c68) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c68)|(t0.c68))  WHEN ((t0.c68) IS FALSE) THEN COALESCE(1.7976931348623157E308, t0.c68, t0.c68, t0.c68) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c68)|(t0.c68))  WHEN ((t0.c68) IS FALSE) THEN COALESCE(1.7976931348623157E308, t0.c68, t0.c68, t0.c68) END);
SELECT ALL * FROM t0 WHERE (((t0.c68 COLLATE NOCASE) BETWEEN (((((t0.c68)AND(t0.c68)))AND(t0.c68))) AND (COALESCE(t0.c68, t0.c68))));
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE NOCASE) BETWEEN (((((t0.c68)AND(t0.c68)))AND(t0.c68))) AND (COALESCE(t0.c68, t0.c68)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c68 COLLATE NOCASE) BETWEEN (((((t0.c68)AND(t0.c68)))AND(t0.c68))) AND (COALESCE(t0.c68, t0.c68))));
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE NOCASE) BETWEEN (((((t0.c68)AND(t0.c68)))AND(t0.c68))) AND (COALESCE(t0.c68, t0.c68)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c68 COLLATE NOCASE) BETWEEN (((((t0.c68)AND(t0.c68)))AND(t0.c68))) AND (COALESCE(t0.c68, t0.c68))));
SELECT COUNT(*) FROM t0 WHERE (((((NOT (t0.c68))))<=((((t0.c68) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t0.c68))))<=((((t0.c68) NOTNULL))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((NOT (t0.c68))))<=((((t0.c68) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t0.c68))))<=((((t0.c68) NOTNULL))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((NOT (t0.c68))))<=((((t0.c68) NOTNULL)))));
SELECT COUNT(*) FROM t0 WHERE (ABS(DISTINCT ((t0.c68)/(t0.c68))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((t0.c68)/(t0.c68)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (ABS(DISTINCT ((t0.c68)/(t0.c68))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((t0.c68)/(t0.c68)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (ABS(DISTINCT ((t0.c68)/(t0.c68))));
SELECT * FROM t0, vt0, v0 WHERE (((t0.c68 COLLATE RTRIM)<<(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))<=(((t0.c68)<(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68 COLLATE RTRIM)<<(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))<=(((t0.c68)<(vt0.c0))))  NULLS FIRST);
SELECT * FROM t0, vt0, v0 WHERE (((t0.c68 COLLATE RTRIM)<<(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))<=(((t0.c68)<(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68 COLLATE RTRIM)<<(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))<=(((t0.c68)<(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((x'')*(((((vt0.c1)OR(vt0.c0)))AND(v0.c0))))) ORDER BY ((ABS(DISTINCT vt0.c0))<(CASE WHEN v0.c0 THEN v0.c0 END)) DESC, ((((vt0.c0)<<(vt0.c0)))||(((vt0.c1)+(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')*(((((vt0.c1)OR(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((ABS(DISTINCT vt0.c0))<(CASE WHEN v0.c0 THEN v0.c0 END)) DESC, ((((vt0.c0)<<(vt0.c0)))||(((vt0.c1)+(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((x'')*(((((vt0.c1)OR(vt0.c0)))AND(v0.c0))))) ORDER BY ((ABS(DISTINCT vt0.c0))<(CASE WHEN v0.c0 THEN v0.c0 END)) DESC, ((((vt0.c0)<<(vt0.c0)))||(((vt0.c1)+(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')*(((((vt0.c1)OR(vt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((ABS(DISTINCT vt0.c0))<(CASE WHEN v0.c0 THEN v0.c0 END)) DESC, ((((vt0.c0)<<(vt0.c0)))||(((vt0.c1)+(v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1)%(vt0.c0)))>=(((((vt0.c1)OR(0X652a3c73)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)%(vt0.c0)))>=(((((vt0.c1)OR(0X652a3c73)))AND(vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1)%(vt0.c0)))>=(((((vt0.c1)OR(0X652a3c73)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)%(vt0.c0)))>=(((((vt0.c1)OR(0X652a3c73)))AND(vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1)%(vt0.c0)))>=(((((vt0.c1)OR(0X652a3c73)))AND(vt0.c1)))));
SELECT * FROM v0, t0, vt0 WHERE (TRIM(DISTINCT '9')) ORDER BY ((((((t0.c68)AND(t0.c68)))AND(t0.c68))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (''))) AND (CAST(t0.c68 AS NUMERIC))), (t0.c68 IN (CASE WHEN vt0.c1 THEN v0.c0 END, (((vt0.c0))<>((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT '9')) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((t0.c68)AND(t0.c68)))AND(t0.c68))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (''))) AND (CAST(t0.c68 AS NUMERIC))), (t0.c68 IN (CASE WHEN vt0.c1 THEN v0.c0 END, (((vt0.c0))!=((v0.c0))))) DESC);
SELECT * FROM v0, t0, vt0 WHERE (TRIM(DISTINCT '9')) ORDER BY ((((((t0.c68)AND(t0.c68)))AND(t0.c68))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (''))) AND (CAST(t0.c68 AS NUMERIC))), (t0.c68 IN (CASE WHEN vt0.c1 THEN v0.c0 END, (((vt0.c0))<>((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT '9')) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((t0.c68)AND(t0.c68)))AND(t0.c68))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (''))) AND (CAST(t0.c68 AS NUMERIC))), (t0.c68 IN (CASE WHEN vt0.c1 THEN v0.c0 END, (((vt0.c0))!=((v0.c0))))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((~ ((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c68 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ ((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c68 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ ((t0.c68 IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(LIKE(v0.c0, v0.c0, 'b'))))OR(((v0.c0)>>(v0.c0))))) ORDER BY (((ABS(v0.c0)))!=((((v0.c0)>=(v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(LIKE(v0.c0, v0.c0, 'b'))))OR(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((ABS(v0.c0)))!=((((v0.c0)>=(v0.c0))))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(LIKE(v0.c0, v0.c0, 'b'))))OR(((v0.c0)>>(v0.c0))))) ORDER BY (((ABS(v0.c0)))!=((((v0.c0)>=(v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(LIKE(v0.c0, v0.c0, 'b'))))OR(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((ABS(v0.c0)))!=((((v0.c0)>=(v0.c0))))) DESC);
SELECT * FROM v0 WHERE (((((v0.c0)+(x''))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (((-1.450679966E9) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(x''))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (((-1.450679966E9) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)+(x''))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (((-1.450679966E9) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(x''))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (((-1.450679966E9) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (LIKELIHOOD(t0.c68, 0.8967221659936454) COLLATE NOCASE) ORDER BY (- (v0.c0)) COLLATE NOCASE ASC, ((((((x'fe51')OR(vt0.c0)))AND(v0.c0)))*((t0.c68 IN (vt0.c1))))  NULLS LAST, v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(t0.c68, 0.8967221659936454) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (- (v0.c0)) COLLATE NOCASE ASC, ((((((x'fe51')OR(vt0.c0)))AND(v0.c0)))*((t0.c68 IN (vt0.c1))))  NULLS LAST, v0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (LIKELIHOOD(t0.c68, 0.8967221659936454) COLLATE NOCASE) ORDER BY (- (v0.c0)) COLLATE NOCASE ASC, ((((((x'fe51')OR(vt0.c0)))AND(v0.c0)))*((t0.c68 IN (vt0.c1))))  NULLS LAST, v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(t0.c68, 0.8967221659936454) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (- (v0.c0)) COLLATE NOCASE ASC, ((((((x'fe51')OR(vt0.c0)))AND(v0.c0)))*((t0.c68 IN (vt0.c1))))  NULLS LAST, v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c1)AND(-1.16992699E9)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0))))<>(((('700895546') ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1)AND(-1.16992699E9)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0))))<>(((('700895546') ISNULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c1)AND(-1.16992699E9)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0))))<>(((('700895546') ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1)AND(-1.16992699E9)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0))))<>(((('700895546') ISNULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c1)AND(-1.16992699E9)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0))))<>(((('700895546') ISNULL)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c1) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c1) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c1) ORDER BY NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (ROUND(((v0.c0)IS(v0.c0)), ((((((((vt0.c1)AND(vt0.c1)))AND(t0.c68)))OR(v0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((v0.c0)IS(v0.c0)), ((((((((vt0.c1)AND(vt0.c1)))AND(t0.c68)))OR(v0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (ROUND(((v0.c0)IS(v0.c0)), ((((((((vt0.c1)AND(vt0.c1)))AND(t0.c68)))OR(v0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((v0.c0)IS(v0.c0)), ((((((((vt0.c1)AND(vt0.c1)))AND(t0.c68)))OR(v0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.10277346912923002) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.10277346912923002) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.10277346912923002) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.10277346912923002) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.10277346912923002) NOT NULL));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((t0.c68)AND(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c68)AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((t0.c68)AND(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c68)AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((t0.c68)AND(vt0.c0)) COLLATE BINARY);
SELECT * FROM t0 INNER JOIN vt0 ON ((((vt0.c0)==(vt0.c0)))<>(vt0.c1)) WHERE ((((((vt0.c1)) BETWEEN (('959313370')) AND ((vt0.c1)))) NOT BETWEEN (((t0.c68)LIKE(t0.c68))) AND (CASE t0.c68  WHEN vt0.c0 THEN '' WHEN t0.c68 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((0.047036176682600406)LIKE((~ (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN (('959313370')) AND ((vt0.c1)))) NOT BETWEEN (((t0.c68)LIKE(t0.c68))) AND (CASE t0.c68  WHEN vt0.c0 THEN '' WHEN t0.c68 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((vt0.c0)=(vt0.c0)))!=(vt0.c1)) ORDER BY ((0.047036176682600406)LIKE((~ (vt0.c1))))  NULLS LAST);
SELECT * FROM t0 INNER JOIN vt0 ON ((((vt0.c0)==(vt0.c0)))<>(vt0.c1)) WHERE ((((((vt0.c1)) BETWEEN (('959313370')) AND ((vt0.c1)))) NOT BETWEEN (((t0.c68)LIKE(t0.c68))) AND (CASE t0.c68  WHEN vt0.c0 THEN '' WHEN t0.c68 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((0.047036176682600406)LIKE((~ (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN (('959313370')) AND ((vt0.c1)))) NOT BETWEEN (((t0.c68)LIKE(t0.c68))) AND (CASE t0.c68  WHEN vt0.c0 THEN '' WHEN t0.c68 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((vt0.c0)=(vt0.c0)))!=(vt0.c1)) ORDER BY ((0.047036176682600406)LIKE((~ (vt0.c1))))  NULLS LAST);
SELECT * FROM t0 INNER JOIN vt0 ON ((((vt0.c0)==(vt0.c0)))<>(vt0.c1)) WHERE ((((((vt0.c1)) BETWEEN (('959313370')) AND ((vt0.c1)))) NOT BETWEEN (((t0.c68)LIKE(t0.c68))) AND (CASE t0.c68  WHEN vt0.c0 THEN '' WHEN t0.c68 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((0.047036176682600406)LIKE((~ (vt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((t0.c68, vt0.c1, '1737412492')) BETWEEN ((CAST(t0.c68 AS BLOB), (+ (vt0.c1)), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c1 IN (vt0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)), 0Xf054d5d))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, vt0.c1, '1737412492')) BETWEEN ((CAST(t0.c68 AS BLOB), (+ (vt0.c1)), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c1 IN (vt0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)), 0Xf054d5d)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((t0.c68, vt0.c1, '1737412492')) BETWEEN ((CAST(t0.c68 AS BLOB), (+ (vt0.c1)), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c1 IN (vt0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)), 0Xf054d5d))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, vt0.c1, '1737412492')) BETWEEN ((CAST(t0.c68 AS BLOB), (+ (vt0.c1)), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c1 IN (vt0.c0)), ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)), 0Xf054d5d)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1 IN ())) NOT NULL)) ORDER BY (((vt0.c1, vt0.c1, v0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((v0.c0, ((vt0.c1)/(v0.c0)), IFNULL(vt0.c0, vt0.c1), v0.c0 COLLATE RTRIM, ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((v0.c0)>>(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 END, highlight(v0.c0, vt0.c1, v0.c0, v0.c0), CAST(v0.c0 AS NUMERIC), ((vt0.c1)&(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c1, vt0.c1, v0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((v0.c0, ((vt0.c1)/(v0.c0)), IFNULL(vt0.c0, vt0.c1), v0.c0 COLLATE RTRIM, ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((v0.c0)>>(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 END, highlight(v0.c0, vt0.c1, v0.c0, v0.c0), CAST(v0.c0 AS NUMERIC), ((vt0.c1)&(vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1 IN ())) NOT NULL)) ORDER BY (((vt0.c1, vt0.c1, v0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((v0.c0, ((vt0.c1)/(v0.c0)), IFNULL(vt0.c0, vt0.c1), v0.c0 COLLATE RTRIM, ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((v0.c0)>>(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 END, highlight(v0.c0, vt0.c1, v0.c0, v0.c0), CAST(v0.c0 AS NUMERIC), ((vt0.c1)&(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c1, vt0.c1, v0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((v0.c0, ((vt0.c1)/(v0.c0)), IFNULL(vt0.c0, vt0.c1), v0.c0 COLLATE RTRIM, ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((v0.c0)>>(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 END, highlight(v0.c0, vt0.c1, v0.c0, v0.c0), CAST(v0.c0 AS NUMERIC), ((vt0.c1)&(vt0.c0))))) DESC);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))+(((v0.c0)IS NOT(x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))+(((v0.c0)IS NOT(x''))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))+(((v0.c0)IS NOT(x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))+(((v0.c0)IS NOT(x''))))) IS TRUE)  as count FROM v0);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOT NULL)))) ORDER BY (((((+ (vt0.c0)))OR((+ (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, ((((((((vt0.c0)AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, x'')) AND ((vt0.c0, vt0.c1, vt0.c0))))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((vt0.c1)/(vt0.c1)))))AND((- (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((+ (vt0.c0)))OR((+ (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, ((((((((vt0.c0)AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, x'')) AND ((vt0.c0, vt0.c1, vt0.c0))))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((vt0.c1)/(vt0.c1)))))AND((- (vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOT NULL)))) ORDER BY (((((+ (vt0.c0)))OR((+ (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, ((((((((vt0.c0)AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, x'')) AND ((vt0.c0, vt0.c1, vt0.c0))))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((vt0.c1)/(vt0.c1)))))AND((- (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((+ (vt0.c0)))OR((+ (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, ((((((((vt0.c0)AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, x'')) AND ((vt0.c0, vt0.c1, vt0.c0))))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((vt0.c1)/(vt0.c1)))))AND((- (vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOT NULL)))) ORDER BY (((((+ (vt0.c0)))OR((+ (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, ((((((((vt0.c0)AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, x'')) AND ((vt0.c0, vt0.c1, vt0.c0))))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((vt0.c1)/(vt0.c1)))))AND((- (vt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((- (0X54bef340)) IN (((vt0.c1) NOT NULL), v0.c0 COLLATE BINARY))) ORDER BY ((((((((((((((v0.c0)OR(x'')))OR(t0.c68)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c68))) IS TRUE) DESC  NULLS LAST, (((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((~ (v0.c0))) AND (CASE vt0.c1  WHEN v0.c0 THEN 0.4355205268051955 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c68 THEN v0.c0 WHEN vt0.c1 THEN 0.7292013032598047 ELSE t0.c68 END)), ((((vt0.c1)||(vt0.c0)))IS(CAST(NULL AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (0x54bef340)) IN (((vt0.c1) NOT NULL), v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((((((((((((v0.c0)OR(x'')))OR(t0.c68)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c68))) IS TRUE) DESC  NULLS LAST, (((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((~ (v0.c0))) AND (CASE vt0.c1  WHEN v0.c0 THEN 0.4355205268051955 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c68 THEN v0.c0 WHEN vt0.c1 THEN 0.7292013032598047 ELSE t0.c68 END)), ((((vt0.c1)||(vt0.c0)))IS(CAST(NULL AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((- (0X54bef340)) IN (((vt0.c1) NOT NULL), v0.c0 COLLATE BINARY))) ORDER BY ((((((((((((((v0.c0)OR(x'')))OR(t0.c68)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c68))) IS TRUE) DESC  NULLS LAST, (((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((~ (v0.c0))) AND (CASE vt0.c1  WHEN v0.c0 THEN 0.4355205268051955 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c68 THEN v0.c0 WHEN vt0.c1 THEN 0.7292013032598047 ELSE t0.c68 END)), ((((vt0.c1)||(vt0.c0)))IS(CAST(NULL AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (0x54bef340)) IN (((vt0.c1) NOT NULL), v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((((((((((((v0.c0)OR(x'')))OR(t0.c68)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c68))) IS TRUE) DESC  NULLS LAST, (((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((~ (v0.c0))) AND (CASE vt0.c1  WHEN v0.c0 THEN 0.4355205268051955 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c68 THEN v0.c0 WHEN vt0.c1 THEN 0.7292013032598047 ELSE t0.c68 END)), ((((vt0.c1)||(vt0.c0)))IS(CAST(NULL AS BLOB)))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))))OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) ORDER BY ((((((t0.c68)OR(t0.c68)))AND(t0.c68)))/(x'57df' COLLATE BINARY)), (t0.c68 COLLATE BINARY IN ()) DESC, (((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))))OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c68)OR(t0.c68)))AND(t0.c68)))/(x'57df' COLLATE BINARY)), (t0.c68 COLLATE BINARY IN ()) DESC, (((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))) ASC);
SELECT * FROM t0 WHERE (((((((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))))OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) ORDER BY ((((((t0.c68)OR(t0.c68)))AND(t0.c68)))/(x'57df' COLLATE BINARY)), (t0.c68 COLLATE BINARY IN ()) DESC, (((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))))OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c68)OR(t0.c68)))AND(t0.c68)))/(x'57df' COLLATE BINARY)), (t0.c68 COLLATE BINARY IN ()) DESC, (((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))) ASC);
SELECT * FROM t0 WHERE (((((((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))))OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) ORDER BY ((((((t0.c68)OR(t0.c68)))AND(t0.c68)))/(x'57df' COLLATE BINARY)), (t0.c68 COLLATE BINARY IN ()) DESC, (((((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))AND(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))) ASC;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END) NOT NULL) WHERE (((((v0.c0)%(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY CAST(x'69d4' AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END) NOT NULL) ORDER BY CAST(x'69d4' AS BLOB)  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END) NOT NULL) WHERE (((((v0.c0)%(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY CAST(x'69d4' AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END) NOT NULL) ORDER BY CAST(x'69d4' AS BLOB)  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c0;
SELECT ALL * FROM vt0 INDEXED BY i55, t0, v0 WHERE (CASE t0.c68  WHEN CASE vt0.c0  WHEN t0.c68 THEN t0.c68 WHEN '|M' THEN v0.c0 WHEN t0.c68 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN vt0.c1 THEN v0.c0 ELSE t0.c68 END THEN ((t0.c68)IS(t0.c68)) WHEN '' COLLATE RTRIM THEN ((v0.c0) NOTNULL) WHEN ((vt0.c1) NOT NULL) THEN (NOT (t0.c68)) WHEN NULL THEN vt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS BLOB) THEN ((((v0.c0)AND(t0.c68)))OR(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN CASE NULL  WHEN -1e500 THEN t0.c68 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c68  WHEN CASE vt0.c0  WHEN t0.c68 THEN t0.c68 WHEN '|M' THEN v0.c0 WHEN t0.c68 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN vt0.c1 THEN v0.c0 ELSE t0.c68 END THEN ((t0.c68)IS(t0.c68)) WHEN '' COLLATE RTRIM THEN ((v0.c0) NOTNULL) WHEN ((vt0.c1) NOT NULL) THEN (NOT (t0.c68)) WHEN NULL THEN vt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS BLOB) THEN ((((v0.c0)AND(t0.c68)))OR(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN CASE NULL  WHEN -1e500 THEN t0.c68 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 INDEXED BY i55, t0, v0);
SELECT ALL * FROM vt0 INDEXED BY i55, t0, v0 WHERE (CASE t0.c68  WHEN CASE vt0.c0  WHEN t0.c68 THEN t0.c68 WHEN '|M' THEN v0.c0 WHEN t0.c68 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN vt0.c1 THEN v0.c0 ELSE t0.c68 END THEN ((t0.c68)IS(t0.c68)) WHEN '' COLLATE RTRIM THEN ((v0.c0) NOTNULL) WHEN ((vt0.c1) NOT NULL) THEN (NOT (t0.c68)) WHEN NULL THEN vt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS BLOB) THEN ((((v0.c0)AND(t0.c68)))OR(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN CASE NULL  WHEN -1e500 THEN t0.c68 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c68  WHEN CASE vt0.c0  WHEN t0.c68 THEN t0.c68 WHEN '|M' THEN v0.c0 WHEN t0.c68 THEN vt0.c0 WHEN t0.c68 THEN t0.c68 WHEN vt0.c1 THEN v0.c0 ELSE t0.c68 END THEN ((t0.c68)IS(t0.c68)) WHEN '' COLLATE RTRIM THEN ((v0.c0) NOTNULL) WHEN ((vt0.c1) NOT NULL) THEN (NOT (t0.c68)) WHEN NULL THEN vt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS BLOB) THEN ((((v0.c0)AND(t0.c68)))OR(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN CASE NULL  WHEN -1e500 THEN t0.c68 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 INDEXED BY i55, t0, v0);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND((~ (t0.c68)))))OR(((((((((t0.c68)OR(t0.c68)))AND(v0.c0)))AND(t0.c68)))AND(t0.c68)))) CROSS JOIN t0 ON CASE WHEN (vt0.c1 IN ()) THEN ((NULL)>(vt0.c1)) END WHERE (CASE ((vt0.c1)||('5998576'))  WHEN (- (vt0.c0)) THEN '-1169926990' END) ORDER BY ABS(vt0.c1), (vt0.c1 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)||('5998576'))  WHEN (- (vt0.c0)) THEN '-1169926990' END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND((~ (t0.c68)))))OR(((((((((t0.c68)OR(t0.c68)))AND(v0.c0)))AND(t0.c68)))AND(t0.c68)))) CROSS JOIN t0 ON CASE WHEN (vt0.c1 IN ()) THEN ((NULL)>(vt0.c1)) END ORDER BY ABS(vt0.c1), (vt0.c1 COLLATE RTRIM IN ()));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND((~ (t0.c68)))))OR(((((((((t0.c68)OR(t0.c68)))AND(v0.c0)))AND(t0.c68)))AND(t0.c68)))) CROSS JOIN t0 ON CASE WHEN (vt0.c1 IN ()) THEN ((NULL)>(vt0.c1)) END WHERE (CASE ((vt0.c1)||('5998576'))  WHEN (- (vt0.c0)) THEN '-1169926990' END) ORDER BY ABS(vt0.c1), (vt0.c1 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)||('5998576'))  WHEN (- (vt0.c0)) THEN '-1169926990' END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND((~ (t0.c68)))))OR(((((((((t0.c68)OR(t0.c68)))AND(v0.c0)))AND(t0.c68)))AND(t0.c68)))) CROSS JOIN t0 ON CASE WHEN (vt0.c1 IN ()) THEN ((NULL)>(vt0.c1)) END ORDER BY ABS(vt0.c1), (vt0.c1 COLLATE RTRIM IN ()));
SELECT ALL * FROM v0 WHERE (((UNLIKELY(DISTINCT v0.c0))&((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT v0.c0))&((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((UNLIKELY(DISTINCT v0.c0))&((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT v0.c0))&((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON t0.c68 WHERE (((((((((((((TYPEOF(t0.c68))OR((((('sH')AND(v0.c0)))AND(t0.c68)))))OR((+ (v0.c0)))))AND((((v0.c0)) BETWEEN ((t0.c68)) AND ((v0.c0))))))OR(LOWER(DISTINCT v0.c0))))AND((t0.c68 IN ()))))OR(CASE t0.c68  WHEN t0.c68 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((TYPEOF(t0.c68))OR((((('sH')AND(v0.c0)))AND(t0.c68)))))OR((+ (v0.c0)))))AND((((v0.c0)) BETWEEN ((t0.c68)) AND ((v0.c0))))))OR(LOWER(DISTINCT v0.c0))))AND((t0.c68 IN ()))))OR(CASE t0.c68  WHEN t0.c68 THEN v0.c0 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON t0.c68);
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON t0.c68 WHERE (((((((((((((TYPEOF(t0.c68))OR((((('sH')AND(v0.c0)))AND(t0.c68)))))OR((+ (v0.c0)))))AND((((v0.c0)) BETWEEN ((t0.c68)) AND ((v0.c0))))))OR(LOWER(DISTINCT v0.c0))))AND((t0.c68 IN ()))))OR(CASE t0.c68  WHEN t0.c68 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((TYPEOF(t0.c68))OR((((('sH')AND(v0.c0)))AND(t0.c68)))))OR((+ (v0.c0)))))AND((((v0.c0)) BETWEEN ((t0.c68)) AND ((v0.c0))))))OR(LOWER(DISTINCT v0.c0))))AND((t0.c68 IN ()))))OR(CASE t0.c68  WHEN t0.c68 THEN v0.c0 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON t0.c68);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((NOT (t0.c68)))IS NOT(''))) ORDER BY (((((vt0.c1) NOTNULL)))<>(((1201128430 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c68)))IS NOT(''))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((((vt0.c1) NOTNULL)))<>(((1201128430 IN ()))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((NOT (t0.c68)))IS NOT(''))) ORDER BY (((((vt0.c1) NOTNULL)))<>(((1201128430 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c68)))IS NOT(''))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((((vt0.c1) NOTNULL)))<>(((1201128430 IN ()))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((NOT (t0.c68)))IS NOT(''))) ORDER BY (((((vt0.c1) NOTNULL)))<>(((1201128430 IN ()))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((0.12282771688919614)AND(vt0.c0)))OR(x'b699')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((0.12282771688919614)AND(vt0.c0)))OR(x'b699')) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((0.12282771688919614)AND(vt0.c0)))OR(x'b699')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((0.12282771688919614)AND(vt0.c0)))OR(x'b699')) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((0.12282771688919614)AND(vt0.c0)))OR(x'b699')) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_quote(((vt0.c1)&(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_quote(((vt0.c1)&(vt0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_quote(((vt0.c1)&(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_quote(((vt0.c1)&(vt0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_quote(((vt0.c1)&(vt0.c1))));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON CASE ((((vt0.c1)OR(v0.c0)))AND(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END END WHERE (((v0.c0) IS FALSE)) ORDER BY (((((vt0.c1 IN (v0.c0, vt0.c1)))AND((~ (vt0.c0)))))AND((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CASE ((((vt0.c1)OR(v0.c0)))AND(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END END ORDER BY (((((vt0.c1 IN (v0.c0, vt0.c1)))AND((~ (vt0.c0)))))AND((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON CASE ((((vt0.c1)OR(v0.c0)))AND(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END END WHERE (((v0.c0) IS FALSE)) ORDER BY (((((vt0.c1 IN (v0.c0, vt0.c1)))AND((~ (vt0.c0)))))AND((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CASE ((((vt0.c1)OR(v0.c0)))AND(vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END END ORDER BY (((((vt0.c1 IN (v0.c0, vt0.c1)))AND((~ (vt0.c0)))))AND((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN json_array_length(vt0.c1) WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) WHEN NULLIF(DISTINCT v0.c0, vt0.c1) THEN ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(v0.c0)) ELSE (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE BINARY THEN json_array_length(vt0.c1) WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) WHEN NULLIF(DISTINCT v0.c0, vt0.c1) THEN ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(v0.c0)) ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN json_array_length(vt0.c1) WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) WHEN NULLIF(DISTINCT v0.c0, vt0.c1) THEN ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(v0.c0)) ELSE (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE BINARY THEN json_array_length(vt0.c1) WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) WHEN NULLIF(DISTINCT v0.c0, vt0.c1) THEN ((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(v0.c0)) ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((+ (NULL))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((+ (NULL))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((+ (NULL))) ORDER BY vt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CASE WHEN t0.c68 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END AS TEXT)) ORDER BY ((vt0.c1 COLLATE RTRIM)<(vt0.c0 COLLATE RTRIM)), (((NOT (0.1324401752053893)))>=((~ ('')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c68 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1 COLLATE RTRIM)<(vt0.c0 COLLATE RTRIM)), (((NOT (0.1324401752053893)))>=((~ ('')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CASE WHEN t0.c68 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END AS TEXT)) ORDER BY ((vt0.c1 COLLATE RTRIM)<(vt0.c0 COLLATE RTRIM)), (((NOT (0.1324401752053893)))>=((~ ('')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c68 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1 COLLATE RTRIM)<(vt0.c0 COLLATE RTRIM)), (((NOT (0.1324401752053893)))>=((~ ('')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CASE WHEN t0.c68 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END AS TEXT)) ORDER BY ((vt0.c1 COLLATE RTRIM)<(vt0.c0 COLLATE RTRIM)), (((NOT (0.1324401752053893)))>=((~ ('')))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0, t0 LEFT OUTER JOIN vt0 ON CAST(((vt0.c1) NOT NULL) AS INTEGER) WHERE (((((((v0.c0)AND(t0.c68)))AND(v0.c0)))IS NOT(LIKELY(DISTINCT vt0.c0)))) ORDER BY CASE ((vt0.c1) NOT NULL)  WHEN t0.c68 THEN (((v0.c0))>=((vt0.c1))) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((t0.c68)>>(v0.c0)) WHEN ((vt0.c0)!=('-1554842831')) THEN v0.c0 COLLATE RTRIM END ASC  NULLS FIRST, ((RTRIM(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((('cvt')) NOT BETWEEN ((x'9dc1')) AND ((t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(t0.c68)))AND(v0.c0)))IS NOT(LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON CAST(((vt0.c1) NOT NULL) AS INTEGER) ORDER BY CASE ((vt0.c1) NOT NULL)  WHEN t0.c68 THEN (((v0.c0))>=((vt0.c1))) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((t0.c68)>>(v0.c0)) WHEN ((vt0.c0)!=('-1554842831')) THEN v0.c0 COLLATE RTRIM END ASC  NULLS FIRST, ((RTRIM(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((('cvt')) NOT BETWEEN ((x'9dc1')) AND ((t0.c68))))));
SELECT COUNT(*) FROM v0, t0 LEFT OUTER JOIN vt0 ON CAST(((vt0.c1) NOT NULL) AS INTEGER) WHERE (((((((v0.c0)AND(t0.c68)))AND(v0.c0)))IS NOT(LIKELY(DISTINCT vt0.c0)))) ORDER BY CASE ((vt0.c1) NOT NULL)  WHEN t0.c68 THEN (((v0.c0))>=((vt0.c1))) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((t0.c68)>>(v0.c0)) WHEN ((vt0.c0)!=('-1554842831')) THEN v0.c0 COLLATE RTRIM END ASC  NULLS FIRST, ((RTRIM(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((('cvt')) NOT BETWEEN ((x'9dc1')) AND ((t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(t0.c68)))AND(v0.c0)))IS NOT(LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON CAST(((vt0.c1) NOT NULL) AS INTEGER) ORDER BY CASE ((vt0.c1) NOT NULL)  WHEN t0.c68 THEN (((v0.c0))>=((vt0.c1))) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((t0.c68)>>(v0.c0)) WHEN ((vt0.c0)!=('-1554842831')) THEN v0.c0 COLLATE RTRIM END ASC  NULLS FIRST, ((RTRIM(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((('cvt')) NOT BETWEEN ((x'9dc1')) AND ((t0.c68))))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 CROSS JOIN v0 ON (~ (((((((((((((vt0.c0)OR(t0.c68)))AND(v0.c0)))OR(v0.c0)))OR(t0.c68)))OR(vt0.c0)))AND(vt0.c1)))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 CROSS JOIN v0 ON (~ (((((((((((((vt0.c0)OR(t0.c68)))AND(v0.c0)))OR(v0.c0)))OR(t0.c68)))OR(vt0.c0)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 CROSS JOIN v0 ON (~ (((((((((((((vt0.c0)OR(t0.c68)))AND(v0.c0)))OR(v0.c0)))OR(t0.c68)))OR(vt0.c0)))AND(vt0.c1)))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 CROSS JOIN v0 ON (~ (((((((((((((vt0.c0)OR(t0.c68)))AND(v0.c0)))OR(v0.c0)))OR(t0.c68)))OR(vt0.c0)))AND(vt0.c1)))));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))LIKE(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))LIKE(v0.c0))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))LIKE(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))LIKE(v0.c0))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (((v0.c0)||(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)||(NULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (((v0.c0)||(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)||(NULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY '0\rj p'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 ORDER BY '0\rj p'  NULLS LAST);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY '0\rj p'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 ORDER BY '0\rj p'  NULLS LAST);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY '0\rj p'  NULLS LAST;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0)%(v0.c0)))&((vt0.c1 IN ()))) WHERE (json(CAST(v0.c0 AS NUMERIC))) ORDER BY (~ (((vt0.c1)/(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json(CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0)%(v0.c0)))&((vt0.c1 IN ()))) ORDER BY (~ (((vt0.c1)/(vt0.c0)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0)%(v0.c0)))&((vt0.c1 IN ()))) WHERE (json(CAST(v0.c0 AS NUMERIC))) ORDER BY (~ (((vt0.c1)/(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json(CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0)%(v0.c0)))&((vt0.c1 IN ()))) ORDER BY (~ (((vt0.c1)/(vt0.c0)))));
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(((t0.c68)<<(t0.c68)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c68)<<(t0.c68)) AS REAL)) IS TRUE)  as count FROM v0, t0 NOT INDEXED);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(((t0.c68)<<(t0.c68)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c68)<<(t0.c68)) AS REAL)) IS TRUE)  as count FROM v0, t0 NOT INDEXED);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(((t0.c68)<<(t0.c68)) AS REAL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CAST((((t0.c68)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL) CROSS JOIN t0 ON (('\5䪧.J粮')>(((((((((v0.c0)OR(vt0.c1)))AND('V谒')))OR(vt0.c0)))AND(vt0.c0)))) WHERE (CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 COLLATE NOCASE ELSE (((vt0.c0, vt0.c1, t0.c68))>((v0.c0, v0.c0, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 COLLATE NOCASE ELSE (((vt0.c0, vt0.c1, t0.c68))>((v0.c0, v0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CAST((((t0.c68)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL) CROSS JOIN t0 ON (('\5䪧.J粮')>(((((((((v0.c0)OR(vt0.c1)))AND('V谒')))OR(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CAST((((t0.c68)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL) CROSS JOIN t0 ON (('\5䪧.J粮')>(((((((((v0.c0)OR(vt0.c1)))AND('V谒')))OR(vt0.c0)))AND(vt0.c0)))) WHERE (CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 COLLATE NOCASE ELSE (((vt0.c0, vt0.c1, t0.c68))>((v0.c0, v0.c0, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c1 COLLATE NOCASE ELSE (((vt0.c0, vt0.c1, t0.c68))>((v0.c0, v0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CAST((((t0.c68)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL) CROSS JOIN t0 ON (('\5䪧.J粮')>(((((((((v0.c0)OR(vt0.c1)))AND('V谒')))OR(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON ((t0.c68 IN ()) IN ()) WHERE (CASE t0.c68  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL ELSE t0.c68 END COLLATE NOCASE) ORDER BY ((v0.c0)IS(CASE WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c68  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL ELSE t0.c68 END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON ((t0.c68 IN ()) IN ()) ORDER BY ((v0.c0)IS(CASE WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON ((t0.c68 IN ()) IN ()) WHERE (CASE t0.c68  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL ELSE t0.c68 END COLLATE NOCASE) ORDER BY ((v0.c0)IS(CASE WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c68  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL ELSE t0.c68 END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON ((t0.c68 IN ()) IN ()) ORDER BY ((v0.c0)IS(CASE WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (CAST(vt0.c1 AS BLOB) IN ()) WHERE (CASE x''  WHEN (NULL IN ()) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(v0.c0)))AND(1.737412492E9)))OR(v0.c0)))AND(v0.c0)) END) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (NULL IN ()) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(v0.c0)))AND(1.737412492E9)))OR(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (CAST(vt0.c1 AS BLOB) IN ()) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (CAST(vt0.c1 AS BLOB) IN ()) WHERE (CASE x''  WHEN (NULL IN ()) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(v0.c0)))AND(1.737412492E9)))OR(v0.c0)))AND(v0.c0)) END) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (NULL IN ()) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(v0.c0)))AND(1.737412492E9)))OR(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (CAST(vt0.c1 AS BLOB) IN ()) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (CAST(vt0.c1 AS BLOB) IN ()) WHERE (CASE x''  WHEN (NULL IN ()) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(v0.c0)))AND(1.737412492E9)))OR(v0.c0)))AND(v0.c0)) END) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ());
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST((- (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST((- (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0);
SELECT * FROM v0, t0 LEFT OUTER JOIN vt0 ON ((CASE t0.c68  WHEN v0.c0 THEN vt0.c1 ELSE t0.c68 END)>>(((v0.c0) IS FALSE))) WHERE (CASE WHEN v0.c0 THEN (- (vt0.c0)) WHEN ((vt0.c0)==(vt0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))) WHEN (~ (v0.c0)) THEN CAST(v0.c0 AS TEXT) ELSE vt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN (- (vt0.c0)) WHEN ((vt0.c0)=(vt0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))) WHEN (~ (v0.c0)) THEN CAST(v0.c0 AS TEXT) ELSE vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON ((CASE t0.c68  WHEN v0.c0 THEN vt0.c1 ELSE t0.c68 END)>>(((v0.c0) IS FALSE))));
SELECT * FROM v0, t0 LEFT OUTER JOIN vt0 ON ((CASE t0.c68  WHEN v0.c0 THEN vt0.c1 ELSE t0.c68 END)>>(((v0.c0) IS FALSE))) WHERE (CASE WHEN v0.c0 THEN (- (vt0.c0)) WHEN ((vt0.c0)==(vt0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))) WHEN (~ (v0.c0)) THEN CAST(v0.c0 AS TEXT) ELSE vt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN (- (vt0.c0)) WHEN ((vt0.c0)=(vt0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))) WHEN (~ (v0.c0)) THEN CAST(v0.c0 AS TEXT) ELSE vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON ((CASE t0.c68  WHEN v0.c0 THEN vt0.c1 ELSE t0.c68 END)>>(((v0.c0) IS FALSE))));
SELECT ALL * FROM t0, v0 WHERE ((((x'')) BETWEEN (((- (v0.c0)))) AND ((CASE WHEN t0.c68 THEN v0.c0 END)))) ORDER BY HEX(DISTINCT ((v0.c0)-(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN (((- (v0.c0)))) AND ((CASE WHEN t0.c68 THEN v0.c0 END)))) IS TRUE)  as count FROM t0, v0 ORDER BY HEX(DISTINCT ((v0.c0)-(v0.c0))));
SELECT ALL * FROM t0, v0 WHERE ((((x'')) BETWEEN (((- (v0.c0)))) AND ((CASE WHEN t0.c68 THEN v0.c0 END)))) ORDER BY HEX(DISTINCT ((v0.c0)-(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN (((- (v0.c0)))) AND ((CASE WHEN t0.c68 THEN v0.c0 END)))) IS TRUE)  as count FROM t0, v0 ORDER BY HEX(DISTINCT ((v0.c0)-(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)AND(v0.c0 COLLATE BINARY)))AND(((NULL)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)AND(v0.c0 COLLATE BINARY)))AND(((NULL)|(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)AND(v0.c0 COLLATE BINARY)))AND(((NULL)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)AND(v0.c0 COLLATE BINARY)))AND(((NULL)|(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN t0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(((((t0.c68)OR(vt0.c1)))AND(v0.c0))))) ORDER BY TOTAL_CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(((((t0.c68)OR(vt0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN t0 ORDER BY TOTAL_CHANGES()  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN t0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(((((t0.c68)OR(vt0.c1)))AND(v0.c0))))) ORDER BY TOTAL_CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(((((t0.c68)OR(vt0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN t0 ORDER BY TOTAL_CHANGES()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (TYPEOF(DISTINCT (((t0.c68, vt0.c1, t0.c68))==((vt0.c0, vt0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (((t0.c68, vt0.c1, t0.c68))==((vt0.c0, vt0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (TYPEOF(DISTINCT (((t0.c68, vt0.c1, t0.c68))==((vt0.c0, vt0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (((t0.c68, vt0.c1, t0.c68))==((vt0.c0, vt0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (TYPEOF(DISTINCT (((t0.c68, vt0.c1, t0.c68))==((vt0.c0, vt0.c0, vt0.c1)))));
SELECT COUNT(*) FROM v0 INDEXED BY i55, vt0, t0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c1)))OR(t0.c68)))AND(vt0.c0)))AND(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(vt0.c1)))OR(t0.c68)))AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 INDEXED BY i55, vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM v0 INDEXED BY i55, vt0, t0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c1)))OR(t0.c68)))AND(vt0.c0)))AND(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(vt0.c1)))OR(t0.c68)))AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 INDEXED BY i55, vt0 NOT INDEXED, t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS TEXT))>((t0.c68 IN ())))) ORDER BY CAST((t0.c68 IN ()) AS BLOB)  NULLS LAST, t0.c68, CAST(((t0.c68) IS TRUE) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c68 AS TEXT))>((t0.c68 IN ())))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c68 IN ()) AS BLOB)  NULLS LAST, t0.c68, CAST(((t0.c68) IS TRUE) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS TEXT))>((t0.c68 IN ())))) ORDER BY CAST((t0.c68 IN ()) AS BLOB)  NULLS LAST, t0.c68, CAST(((t0.c68) IS TRUE) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c68 AS TEXT))>((t0.c68 IN ())))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c68 IN ()) AS BLOB)  NULLS LAST, t0.c68, CAST(((t0.c68) IS TRUE) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS TEXT))>((t0.c68 IN ())))) ORDER BY CAST((t0.c68 IN ()) AS BLOB)  NULLS LAST, t0.c68, CAST(((t0.c68) IS TRUE) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM t0, vt0 CROSS JOIN v0 ON ((LIKELIHOOD(DISTINCT vt0.c0, 0.5436774269635419)) NOTNULL) WHERE ((((((- (NULL)))OR(vt0.c1)))AND(((((v0.c0)OR(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (NULL)))OR(vt0.c1)))AND(((((v0.c0)OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON ((LIKELIHOOD(DISTINCT vt0.c0, 0.5436774269635419)) NOTNULL));
SELECT ALL * FROM t0, vt0 CROSS JOIN v0 ON ((LIKELIHOOD(DISTINCT vt0.c0, 0.5436774269635419)) NOTNULL) WHERE ((((((- (NULL)))OR(vt0.c1)))AND(((((v0.c0)OR(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (NULL)))OR(vt0.c1)))AND(((((v0.c0)OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON ((LIKELIHOOD(DISTINCT vt0.c0, 0.5436774269635419)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (TYPEOF(v0.c0)) ORDER BY LIKELY(((((((((v0.c0)OR(0x63a2df85)))OR(x'25c3a652')))OR(0.7571609136224996)))AND(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(v0.c0)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY LIKELY(((((((((v0.c0)OR(0x63a2df85)))OR(x'25c3a652')))OR(0.7571609136224996)))AND(vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (TYPEOF(v0.c0)) ORDER BY LIKELY(((((((((v0.c0)OR(0x63a2df85)))OR(x'25c3a652')))OR(0.7571609136224996)))AND(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(v0.c0)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY LIKELY(((((((((v0.c0)OR(0x63a2df85)))OR(x'25c3a652')))OR(0.7571609136224996)))AND(vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE (((((v0.c0) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (((((v0.c0) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ((t0.c68) IS TRUE) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c68) IS TRUE) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ((t0.c68) IS TRUE) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c68) IS TRUE) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ((t0.c68) IS TRUE) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM vt0, t0, v0 WHERE ('') ORDER BY ((((t0.c68))==((v0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, t0, v0 NOT INDEXED ORDER BY ((((t0.c68))=((v0.c0))) IN ()));
SELECT * FROM vt0, t0, v0 WHERE ('') ORDER BY ((((t0.c68))==((v0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, t0, v0 NOT INDEXED ORDER BY ((((t0.c68))=((v0.c0))) IN ()));
SELECT * FROM vt0, t0, v0 WHERE ('') ORDER BY ((((t0.c68))==((v0.c0))) IN ());
SELECT * FROM t0, v0, vt0 WHERE ((((t0.c68)) NOT BETWEEN ((x'')) AND ((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN ((x'')) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE ((((t0.c68)) NOT BETWEEN ((x'')) AND ((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN ((x'')) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM v0, t0 WHERE (NULL) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c68) AND (v0.c0))) NOT BETWEEN (((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68))) AND ((t0.c68 IN ()))) ASC, (~ (((((t0.c68)OR(t0.c68)))OR('l')))) DESC  NULLS LAST, ((((t0.c68) NOT NULL)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0) NOT BETWEEN (t0.c68) AND (v0.c0))) NOT BETWEEN (((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68))) AND ((t0.c68 IN ()))) ASC, (~ (((((t0.c68)OR(t0.c68)))OR('l')))) DESC  NULLS LAST, ((((t0.c68) NOT NULL)) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (NULL) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c68) AND (v0.c0))) NOT BETWEEN (((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68))) AND ((t0.c68 IN ()))) ASC, (~ (((((t0.c68)OR(t0.c68)))OR('l')))) DESC  NULLS LAST, ((((t0.c68) NOT NULL)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0) NOT BETWEEN (t0.c68) AND (v0.c0))) NOT BETWEEN (((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68))) AND ((t0.c68 IN ()))) ASC, (~ (((((t0.c68)OR(t0.c68)))OR('l')))) DESC  NULLS LAST, ((((t0.c68) NOT NULL)) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ('1483545867') ORDER BY ((((vt0.c0) IS TRUE))IS(vt0.c0)), 0.20989252419597848 COLLATE BINARY ASC  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))!=(CHAR(v0.c0, v0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT (('1483545867') IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((vt0.c0) IS TRUE))IS(vt0.c0)), 0.20989252419597848 COLLATE BINARY ASC  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))<>(CHAR(v0.c0, v0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ('1483545867') ORDER BY ((((vt0.c0) IS TRUE))IS(vt0.c0)), 0.20989252419597848 COLLATE BINARY ASC  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))!=(CHAR(v0.c0, v0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT (('1483545867') IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((vt0.c0) IS TRUE))IS(vt0.c0)), 0.20989252419597848 COLLATE BINARY ASC  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))<>(CHAR(v0.c0, v0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((((vt0.c0)/(vt0.c1)))OR(CASE vt0.c1  WHEN t0.c68 THEN vt0.c1 ELSE vt0.c1 END)))AND((((vt0.c1))=(('-1772688260'))))) INNER JOIN t0 ON ((JULIANDAY(vt0.c1, t0.c68, vt0.c0)) IS TRUE) WHERE ((((((vt0.c1, '119020134', v0.c0)) BETWEEN ((v0.c0, vt0.c1, 0.4125219826253701)) AND ((t0.c68, vt0.c0, t0.c68)))) IS FALSE)) ORDER BY t0.c68 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, '119020134', v0.c0)) BETWEEN ((v0.c0, vt0.c1, 0.4125219826253701)) AND ((t0.c68, vt0.c0, t0.c68)))) IS FALSE)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((((vt0.c0)/(vt0.c1)))OR(CASE vt0.c1  WHEN t0.c68 THEN vt0.c1 ELSE vt0.c1 END)))AND((((vt0.c1))==(('-1772688260'))))) INNER JOIN t0 ON ((JULIANDAY(vt0.c1, t0.c68, vt0.c0)) IS TRUE) ORDER BY t0.c68 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((((vt0.c0)/(vt0.c1)))OR(CASE vt0.c1  WHEN t0.c68 THEN vt0.c1 ELSE vt0.c1 END)))AND((((vt0.c1))=(('-1772688260'))))) INNER JOIN t0 ON ((JULIANDAY(vt0.c1, t0.c68, vt0.c0)) IS TRUE) WHERE ((((((vt0.c1, '119020134', v0.c0)) BETWEEN ((v0.c0, vt0.c1, 0.4125219826253701)) AND ((t0.c68, vt0.c0, t0.c68)))) IS FALSE)) ORDER BY t0.c68 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, '119020134', v0.c0)) BETWEEN ((v0.c0, vt0.c1, 0.4125219826253701)) AND ((t0.c68, vt0.c0, t0.c68)))) IS FALSE)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((((vt0.c0)/(vt0.c1)))OR(CASE vt0.c1  WHEN t0.c68 THEN vt0.c1 ELSE vt0.c1 END)))AND((((vt0.c1))==(('-1772688260'))))) INNER JOIN t0 ON ((JULIANDAY(vt0.c1, t0.c68, vt0.c0)) IS TRUE) ORDER BY t0.c68 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((((vt0.c0)/(vt0.c1)))OR(CASE vt0.c1  WHEN t0.c68 THEN vt0.c1 ELSE vt0.c1 END)))AND((((vt0.c1))=(('-1772688260'))))) INNER JOIN t0 ON ((JULIANDAY(vt0.c1, t0.c68, vt0.c0)) IS TRUE) WHERE ((((((vt0.c1, '119020134', v0.c0)) BETWEEN ((v0.c0, vt0.c1, 0.4125219826253701)) AND ((t0.c68, vt0.c0, t0.c68)))) IS FALSE)) ORDER BY t0.c68 COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))) AND ((CAST(t0.c68 AS REAL)))) WHERE (CAST(v0.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))) AND ((CAST(t0.c68 AS REAL)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))) AND ((CAST(t0.c68 AS REAL)))) WHERE (CAST(v0.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c1 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))) AND ((CAST(t0.c68 AS REAL)))));
SELECT COUNT(*) FROM v0, t0 WHERE (SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS INTEGER))) ORDER BY CAST(((((NULL)OR(t0.c68)))OR(t0.c68)) AS INTEGER), '197902739' ASC  NULLS LAST, ((((t0.c68) IS TRUE))OR(CAST(t0.c68 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(((((NULL)OR(t0.c68)))OR(t0.c68)) AS INTEGER), '197902739' ASC  NULLS LAST, ((((t0.c68) IS TRUE))OR(CAST(t0.c68 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS INTEGER))) ORDER BY CAST(((((NULL)OR(t0.c68)))OR(t0.c68)) AS INTEGER), '197902739' ASC  NULLS LAST, ((((t0.c68) IS TRUE))OR(CAST(t0.c68 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(((((NULL)OR(t0.c68)))OR(t0.c68)) AS INTEGER), '197902739' ASC  NULLS LAST, ((((t0.c68) IS TRUE))OR(CAST(t0.c68 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (JULIANDAY(v0.c0, vt0.c1, vt0.c0) COLLATE BINARY) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(v0.c0, vt0.c1, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (JULIANDAY(v0.c0, vt0.c1, vt0.c0) COLLATE BINARY) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(v0.c0, vt0.c1, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))!=(vt0.c1 COLLATE RTRIM))) ORDER BY ((~ (vt0.c1)) IN (SQLITE_COMPILEOPTION_GET(v0.c0), HEX(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0)))<>(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((~ (vt0.c1)) IN (SQLITE_COMPILEOPTION_GET(v0.c0), HEX(DISTINCT vt0.c0))) ASC);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))!=(vt0.c1 COLLATE RTRIM))) ORDER BY ((~ (vt0.c1)) IN (SQLITE_COMPILEOPTION_GET(v0.c0), HEX(DISTINCT vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0)))<>(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((~ (vt0.c1)) IN (SQLITE_COMPILEOPTION_GET(v0.c0), HEX(DISTINCT vt0.c0))) ASC);
SELECT * FROM t0 WHERE ('[]');
SELECT SUM(count) FROM (SELECT (('[]') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('[]');
SELECT SUM(count) FROM (SELECT (('[]') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('[]');
SELECT * FROM v0, vt0, t0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END)||(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END)||(vt0.c1))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END)||(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END)||(vt0.c1))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM vt0 INDEXED BY i55, t0, v0 WHERE ((((((t0.c68))<((v0.c0))))LIKE(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((~ (vt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c68))<((v0.c0))))LIKE(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 INDEXED BY i55, t0, v0 ORDER BY ((~ (vt0.c1)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INDEXED BY i55, t0, v0 WHERE ((((((t0.c68))<((v0.c0))))LIKE(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((~ (vt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c68))<((v0.c0))))LIKE(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 INDEXED BY i55, t0, v0 ORDER BY ((~ (vt0.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((-1.509559215E9) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) ORDER BY ((t0.c68)=(((vt0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((-1.509559215E9) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((t0.c68)=(((vt0.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((-1.509559215E9) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) ORDER BY ((t0.c68)=(((vt0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((-1.509559215E9) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((t0.c68)=(((vt0.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((-1.509559215E9) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) ORDER BY ((t0.c68)=(((vt0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE (CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.6433889883987229) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.6433889883987229) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.6433889883987229) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.6433889883987229) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)AND(t0.c68)))GLOB(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) ORDER BY (((((((((((t0.c68))==((' Nw'))))AND(CASE WHEN t0.c68 THEN t0.c68 END)))AND(t0.c68)))AND(UNLIKELY(t0.c68))))AND(t0.c68 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)AND(t0.c68)))GLOB(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c68))==((' Nw'))))AND(CASE WHEN t0.c68 THEN t0.c68 END)))AND(t0.c68)))AND(UNLIKELY(t0.c68))))AND(t0.c68 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)AND(t0.c68)))GLOB(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) ORDER BY (((((((((((t0.c68))==((' Nw'))))AND(CASE WHEN t0.c68 THEN t0.c68 END)))AND(t0.c68)))AND(UNLIKELY(t0.c68))))AND(t0.c68 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)AND(t0.c68)))GLOB(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c68))==((' Nw'))))AND(CASE WHEN t0.c68 THEN t0.c68 END)))AND(t0.c68)))AND(UNLIKELY(t0.c68))))AND(t0.c68 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)AND(t0.c68)))GLOB(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) ORDER BY (((((((((((t0.c68))==((' Nw'))))AND(CASE WHEN t0.c68 THEN t0.c68 END)))AND(t0.c68)))AND(UNLIKELY(t0.c68))))AND(t0.c68 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((NOT (v0.c0)))&(IFNULL(DISTINCT vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))&(IFNULL(DISTINCT vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((NOT (v0.c0)))&(IFNULL(DISTINCT vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))&(IFNULL(DISTINCT vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((vt0.c0, NULL, v0.c0, vt0.c1, 'opw ]')) BETWEEN (((NOT (v0.c0)), v0.c0, ABS(DISTINCT v0.c0), v0.c0 COLLATE NOCASE, CAST(vt0.c0 AS NUMERIC))) AND ((x'', v0.c0, ((vt0.c1)==(t0.c68)), CAST(vt0.c0 AS NUMERIC), MAX(v0.c0, t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, NULL, v0.c0, vt0.c1, 'opw ]')) BETWEEN (((NOT (v0.c0)), v0.c0, ABS(DISTINCT v0.c0), v0.c0 COLLATE NOCASE, CAST(vt0.c0 AS NUMERIC))) AND ((x'', v0.c0, ((vt0.c1)==(t0.c68)), CAST(vt0.c0 AS NUMERIC), MAX(v0.c0, t0.c68))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((vt0.c0, NULL, v0.c0, vt0.c1, 'opw ]')) BETWEEN (((NOT (v0.c0)), v0.c0, ABS(DISTINCT v0.c0), v0.c0 COLLATE NOCASE, CAST(vt0.c0 AS NUMERIC))) AND ((x'', v0.c0, ((vt0.c1)==(t0.c68)), CAST(vt0.c0 AS NUMERIC), MAX(v0.c0, t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, NULL, v0.c0, vt0.c1, 'opw ]')) BETWEEN (((NOT (v0.c0)), v0.c0, ABS(DISTINCT v0.c0), v0.c0 COLLATE NOCASE, CAST(vt0.c0 AS NUMERIC))) AND ((x'', v0.c0, ((vt0.c1)==(t0.c68)), CAST(vt0.c0 AS NUMERIC), MAX(v0.c0, t0.c68))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((CASE t0.c68  WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t0.c68  WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((CASE t0.c68  WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t0.c68  WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((CASE t0.c68  WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN v0 ON -1.77268826E9 WHERE (((((((((vt0.c1)OR(CAST(v0.c0 AS REAL))))AND(t0.c68)))AND(((vt0.c1) NOTNULL))))OR(((v0.c0)>=(vt0.c0))))) ORDER BY TRIM(CHAR(v0.c0, vt0.c1, v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)OR(CAST(v0.c0 AS REAL))))AND(t0.c68)))AND(((vt0.c1) NOTNULL))))OR(((v0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN v0 ON -1.77268826E9 ORDER BY TRIM(CHAR(v0.c0, vt0.c1, v0.c0)) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN v0 ON -1.77268826E9 WHERE (((((((((vt0.c1)OR(CAST(v0.c0 AS REAL))))AND(t0.c68)))AND(((vt0.c1) NOTNULL))))OR(((v0.c0)>=(vt0.c0))))) ORDER BY TRIM(CHAR(v0.c0, vt0.c1, v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)OR(CAST(v0.c0 AS REAL))))AND(t0.c68)))AND(((vt0.c1) NOTNULL))))OR(((v0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN v0 ON -1.77268826E9 ORDER BY TRIM(CHAR(v0.c0, vt0.c1, v0.c0)) ASC);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (vt0.c0) ORDER BY (- ((((vt0.c1))>=((0.7958154436824589))))) DESC  NULLS LAST, v0.c0 DESC  NULLS LAST, ((CASE WHEN NULL THEN vt0.c0 END)|(((((vt0.c0)AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0 ORDER BY (- ((((vt0.c1))>=((0.7958154436824589))))) DESC  NULLS LAST, v0.c0 DESC  NULLS LAST, ((CASE WHEN NULL THEN vt0.c0 END)|(((((vt0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (vt0.c0) ORDER BY (- ((((vt0.c1))>=((0.7958154436824589))))) DESC  NULLS LAST, v0.c0 DESC  NULLS LAST, ((CASE WHEN NULL THEN vt0.c0 END)|(((((vt0.c0)AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0 ORDER BY (- ((((vt0.c1))>=((0.7958154436824589))))) DESC  NULLS LAST, v0.c0 DESC  NULLS LAST, ((CASE WHEN NULL THEN vt0.c0 END)|(((((vt0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT * FROM vt0, v0 LEFT OUTER JOIN t0 ON (~ (((t0.c68)IS NOT(v0.c0)))) WHERE ((((t0.c68) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON (~ (((t0.c68)IS NOT(v0.c0)))));
SELECT * FROM vt0, v0 LEFT OUTER JOIN t0 ON (~ (((t0.c68)IS NOT(v0.c0)))) WHERE ((((t0.c68) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON (~ (((t0.c68)IS NOT(v0.c0)))));
SELECT * FROM v0, vt0, t0 WHERE ((+ (t0.c68)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((+ (t0.c68)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)IS(v0.c0)))OR('-419311836')))OR(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)IS(v0.c0)))OR('-419311836')))OR(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)IS(v0.c0)))OR('-419311836')))OR(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)IS(v0.c0)))OR('-419311836')))OR(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(((vt0.c1) IS FALSE))))OR(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)-(vt0.c1)))))AND(((vt0.c1) NOTNULL))) WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(((vt0.c1) IS FALSE))))OR(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)-(vt0.c1)))))AND(((vt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(((vt0.c1) IS FALSE))))OR(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)-(vt0.c1)))))AND(((vt0.c1) NOTNULL))) WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(((vt0.c1) IS FALSE))))OR(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)-(vt0.c1)))))AND(((vt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(((vt0.c1) IS FALSE))))OR(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c1)-(vt0.c1)))))AND(((vt0.c1) NOTNULL))) WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((((((((x'')OR(((vt0.c1) IS FALSE))))OR(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0X7442cf6d))))GLOB(((vt0.c0)>>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR(((vt0.c1) IS FALSE))))OR(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0x7442cf6d))))GLOB(((vt0.c0)>>(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((x'')OR(((vt0.c1) IS FALSE))))OR(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0X7442cf6d))))GLOB(((vt0.c0)>>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR(((vt0.c1) IS FALSE))))OR(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0x7442cf6d))))GLOB(((vt0.c0)>>(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((x'')OR(((vt0.c1) IS FALSE))))OR(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0X7442cf6d))))GLOB(((vt0.c0)>>(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR((- (vt0.c1)))))AND(((vt0.c1) IS TRUE))))AND(((vt0.c0)|(vt0.c0)))))AND((vt0.c0 IN (vt0.c0))))) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR((- (vt0.c1)))))AND(((vt0.c1) IS TRUE))))AND(((vt0.c0)|(vt0.c0)))))AND((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CHANGES() DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR((- (vt0.c1)))))AND(((vt0.c1) IS TRUE))))AND(((vt0.c0)|(vt0.c0)))))AND((vt0.c0 IN (vt0.c0))))) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR((- (vt0.c1)))))AND(((vt0.c1) IS TRUE))))AND(((vt0.c0)|(vt0.c0)))))AND((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CHANGES() DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR((- (vt0.c1)))))AND(((vt0.c1) IS TRUE))))AND(((vt0.c0)|(vt0.c0)))))AND((vt0.c0 IN (vt0.c0))))) ORDER BY CHANGES() DESC;
SELECT * FROM vt0 INDEXED BY i55, t0, v0 WHERE ((((t0.c68 COLLATE BINARY))!=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68 COLLATE BINARY))!=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 INDEXED BY i55, t0, v0);
SELECT * FROM vt0 INDEXED BY i55, t0, v0 WHERE ((((t0.c68 COLLATE BINARY))!=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68 COLLATE BINARY))!=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 INDEXED BY i55, t0, v0);
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN vt0 WHERE (((((t0.c68)==(t0.c68)))>=((~ (vt0.c0))))) ORDER BY CAST((((vt0.c0))!=((v0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c68)==(t0.c68)))>=((~ (vt0.c0))))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0 ORDER BY CAST((((vt0.c0))<>((v0.c0))) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN vt0 WHERE (((((t0.c68)==(t0.c68)))>=((~ (vt0.c0))))) ORDER BY CAST((((vt0.c0))!=((v0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c68)==(t0.c68)))>=((~ (vt0.c0))))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0 ORDER BY CAST((((vt0.c0))<>((v0.c0))) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE (NULL) ORDER BY ((((((v0.c0)<=(vt0.c1)))OR(((v0.c0) BETWEEN (t0.c68) AND (vt0.c1)))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC, vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((((v0.c0)<=(vt0.c1)))OR(((v0.c0) BETWEEN (t0.c68) AND (vt0.c1)))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC, vt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE (NULL) ORDER BY ((((((v0.c0)<=(vt0.c1)))OR(((v0.c0) BETWEEN (t0.c68) AND (vt0.c1)))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC, vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((((v0.c0)<=(vt0.c1)))OR(((v0.c0) BETWEEN (t0.c68) AND (vt0.c1)))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC, vt0.c1 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (0xffffffffb20f0b3a);
SELECT SUM(count) FROM (SELECT ((0xffffffffb20f0b3a) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0xffffffffb20f0b3a);
SELECT SUM(count) FROM (SELECT ((0xffffffffb20f0b3a) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0xffffffffb20f0b3a);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((((CAST(v0.c0 AS TEXT))AND(((((v0.c0)AND(t0.c68)))OR(v0.c0)))))OR(((vt0.c1) ISNULL)))) ORDER BY ((((LIKELIHOOD(DISTINCT NULL, 0.21729349861260028))OR('?&ESKGPf')))AND(((vt0.c0) NOT NULL))) ASC  NULLS FIRST, LAST_INSERT_ROWID() ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS TEXT))AND(((((v0.c0)AND(t0.c68)))OR(v0.c0)))))OR(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((LIKELIHOOD(DISTINCT NULL, 0.21729349861260028))OR('?&ESKGPf')))AND(((vt0.c0) NOT NULL))) ASC  NULLS FIRST, LAST_INSERT_ROWID() ASC);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((((CAST(v0.c0 AS TEXT))AND(((((v0.c0)AND(t0.c68)))OR(v0.c0)))))OR(((vt0.c1) ISNULL)))) ORDER BY ((((LIKELIHOOD(DISTINCT NULL, 0.21729349861260028))OR('?&ESKGPf')))AND(((vt0.c0) NOT NULL))) ASC  NULLS FIRST, LAST_INSERT_ROWID() ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS TEXT))AND(((((v0.c0)AND(t0.c68)))OR(v0.c0)))))OR(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((LIKELIHOOD(DISTINCT NULL, 0.21729349861260028))OR('?&ESKGPf')))AND(((vt0.c0) NOT NULL))) ASC  NULLS FIRST, LAST_INSERT_ROWID() ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)AND(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0) NOT NULL)))) ORDER BY (((((v0.c0))=((v0.c0))))<(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))==((v0.c0))))<(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)AND(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0) NOT NULL)))) ORDER BY (((((v0.c0))=((v0.c0))))<(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(v0.c0))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))==((v0.c0))))<(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE ((NULL) NOT BETWEEN (t0.c68) AND (vt0.c1))  WHEN ((t0.c68)<(vt0.c1)) THEN ((vt0.c0)%(vt0.c1)) WHEN (NOT (vt0.c1)) THEN ((t0.c68)GLOB(vt0.c1)) WHEN v0.c0 THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END ELSE (((vt0.c0)) BETWEEN (('1016319843')) AND ((vt0.c1))) END) ORDER BY CAST(x'' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL) NOT BETWEEN (t0.c68) AND (vt0.c1))  WHEN ((t0.c68)<(vt0.c1)) THEN ((vt0.c0)%(vt0.c1)) WHEN (NOT (vt0.c1)) THEN ((t0.c68)GLOB(vt0.c1)) WHEN v0.c0 THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END ELSE (((vt0.c0)) BETWEEN (('1016319843')) AND ((vt0.c1))) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CAST(x'' AS INTEGER) ASC);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE ((NULL) NOT BETWEEN (t0.c68) AND (vt0.c1))  WHEN ((t0.c68)<(vt0.c1)) THEN ((vt0.c0)%(vt0.c1)) WHEN (NOT (vt0.c1)) THEN ((t0.c68)GLOB(vt0.c1)) WHEN v0.c0 THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END ELSE (((vt0.c0)) BETWEEN (('1016319843')) AND ((vt0.c1))) END) ORDER BY CAST(x'' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL) NOT BETWEEN (t0.c68) AND (vt0.c1))  WHEN ((t0.c68)<(vt0.c1)) THEN ((vt0.c0)%(vt0.c1)) WHEN (NOT (vt0.c1)) THEN ((t0.c68)GLOB(vt0.c1)) WHEN v0.c0 THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END ELSE (((vt0.c0)) BETWEEN (('1016319843')) AND ((vt0.c1))) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CAST(x'' AS INTEGER) ASC);
SELECT ALL * FROM v0, vt0, t0 WHERE (((CASE WHEN v0.c0 THEN t0.c68 ELSE x'' END) NOTNULL)) ORDER BY (vt0.c0 IN ())  NULLS FIRST, ((((((vt0.c0) BETWEEN (t0.c68) AND (v0.c0)))AND((((v0.c0, '-986161029', t0.c68))<>((9.5931337E8, NULL, t0.c68))))))OR(-236082795)) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN t0.c68 ELSE x'' END) NOTNULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (vt0.c0 IN ())  NULLS FIRST, ((((((vt0.c0) BETWEEN (t0.c68) AND (v0.c0)))AND((((v0.c0, '-986161029', t0.c68))<>((9.5931337E8, NULL, t0.c68))))))OR(-236082795)) ASC);
SELECT ALL * FROM v0, vt0, t0 WHERE (((CASE WHEN v0.c0 THEN t0.c68 ELSE x'' END) NOTNULL)) ORDER BY (vt0.c0 IN ())  NULLS FIRST, ((((((vt0.c0) BETWEEN (t0.c68) AND (v0.c0)))AND((((v0.c0, '-986161029', t0.c68))<>((9.5931337E8, NULL, t0.c68))))))OR(-236082795)) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN t0.c68 ELSE x'' END) NOTNULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (vt0.c0 IN ())  NULLS FIRST, ((((((vt0.c0) BETWEEN (t0.c68) AND (v0.c0)))AND((((v0.c0, '-986161029', t0.c68))<>((9.5931337E8, NULL, t0.c68))))))OR(-236082795)) ASC);
SELECT ALL * FROM v0 WHERE (((0.4062325546727419) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((((((((v0.c0)OR(NULL)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.4062325546727419) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((((((((v0.c0)OR(NULL)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((0.4062325546727419) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((((((((v0.c0)OR(NULL)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.4062325546727419) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((((((((v0.c0)OR(NULL)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<(((NULL) NOT NULL)))) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((- (v0.c0)))))OR(((vt0.c0)<>(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<(((NULL) NOT NULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((- (v0.c0)))))OR(((vt0.c0)!=(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<(((NULL) NOT NULL)))) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((- (v0.c0)))))OR(((vt0.c0)<>(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<(((NULL) NOT NULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((- (v0.c0)))))OR(((vt0.c0)!=(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM v0 WHERE (((IFNULL(DISTINCT v0.c0, x'')) NOT BETWEEN (((v0.c0)=(v0.c0))) AND (((((v0.c0)AND(v0.c0)))OR(0xfffffffffa5e2eaf))))) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN 0.17745364106914152 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT v0.c0, x'')) NOT BETWEEN (((v0.c0)==(v0.c0))) AND (((((v0.c0)AND(v0.c0)))OR(0Xfffffffffa5e2eaf))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN 0.17745364106914152 COLLATE BINARY END DESC);
SELECT * FROM v0 WHERE (((IFNULL(DISTINCT v0.c0, x'')) NOT BETWEEN (((v0.c0)=(v0.c0))) AND (((((v0.c0)AND(v0.c0)))OR(0xfffffffffa5e2eaf))))) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN 0.17745364106914152 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT v0.c0, x'')) NOT BETWEEN (((v0.c0)==(v0.c0))) AND (((((v0.c0)AND(v0.c0)))OR(0Xfffffffffa5e2eaf))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN 0.17745364106914152 COLLATE BINARY END DESC);
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c68 END, (~ (v0.c0))) WHERE (HEX(DISTINCT json_array_length(v0.c0))) ORDER BY CASE vt0.c0  WHEN 'A-' THEN ((t0.c68) ISNULL) ELSE ((((v0.c0)AND(t0.c68)))AND(t0.c68)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT json_array_length(v0.c0))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c68 END, (~ (v0.c0))) ORDER BY CASE vt0.c0  WHEN 'A-' THEN ((t0.c68) ISNULL) ELSE ((((v0.c0)AND(t0.c68)))AND(t0.c68)) END  NULLS LAST);
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c68 END, (~ (v0.c0))) WHERE (HEX(DISTINCT json_array_length(v0.c0))) ORDER BY CASE vt0.c0  WHEN 'A-' THEN ((t0.c68) ISNULL) ELSE ((((v0.c0)AND(t0.c68)))AND(t0.c68)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT json_array_length(v0.c0))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c68 END, (~ (v0.c0))) ORDER BY CASE vt0.c0  WHEN 'A-' THEN ((t0.c68) ISNULL) ELSE ((((v0.c0)AND(t0.c68)))AND(t0.c68)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((((((t0.c68)OR(t0.c68)))AND(t0.c68)))/(((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))), CAST((('-1885378442')OR(t0.c68)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c68)OR(t0.c68)))AND(t0.c68)))/(((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))), CAST((('-1885378442')OR(t0.c68)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((((((t0.c68)OR(t0.c68)))AND(t0.c68)))/(((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))), CAST((('-1885378442')OR(t0.c68)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c68)OR(t0.c68)))AND(t0.c68)))/(((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))), CAST((('-1885378442')OR(t0.c68)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((((((t0.c68)OR(t0.c68)))AND(t0.c68)))/(((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))), CAST((('-1885378442')OR(t0.c68)) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((- (IFNULL(DISTINCT v0.c0, v0.c0)))) ORDER BY COALESCE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.5426202559978393 END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) DESC, (((((((((v0.c0)OR(NULL)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) IN ('', v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (IFNULL(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY COALESCE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.5426202559978393 END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) DESC, (((((((((v0.c0)OR(NULL)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) IN ('', v0.c0 COLLATE BINARY)) ASC);
SELECT * FROM v0 WHERE ((- (IFNULL(DISTINCT v0.c0, v0.c0)))) ORDER BY COALESCE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.5426202559978393 END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) DESC, (((((((((v0.c0)OR(NULL)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) IN ('', v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (IFNULL(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY COALESCE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.5426202559978393 END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) DESC, (((((((((v0.c0)OR(NULL)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) IN ('', v0.c0 COLLATE BINARY)) ASC);
SELECT * FROM v0, t0 WHERE (((((v0.c0)-(NULL)))/(t0.c68))) ORDER BY ((CAST(t0.c68 AS TEXT))GLOB(((v0.c0) ISNULL))) DESC  NULLS FIRST, t0.c68 ASC, (((((v0.c0 IN ()))OR(0.3321930085871554)))OR(((t0.c68)>=(t0.c68)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)-(NULL)))/(t0.c68))) IS TRUE)  as count FROM v0, t0 ORDER BY ((CAST(t0.c68 AS TEXT))GLOB(((v0.c0) ISNULL))) DESC  NULLS FIRST, t0.c68 ASC, (((((v0.c0 IN ()))OR(0.3321930085871554)))OR(((t0.c68)>=(t0.c68)))) ASC);
SELECT * FROM v0, t0 WHERE (((((v0.c0)-(NULL)))/(t0.c68))) ORDER BY ((CAST(t0.c68 AS TEXT))GLOB(((v0.c0) ISNULL))) DESC  NULLS FIRST, t0.c68 ASC, (((((v0.c0 IN ()))OR(0.3321930085871554)))OR(((t0.c68)>=(t0.c68)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)-(NULL)))/(t0.c68))) IS TRUE)  as count FROM v0, t0 ORDER BY ((CAST(t0.c68 AS TEXT))GLOB(((v0.c0) ISNULL))) DESC  NULLS FIRST, t0.c68 ASC, (((((v0.c0 IN ()))OR(0.3321930085871554)))OR(((t0.c68)>=(t0.c68)))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY CAST(HEX(DISTINCT vt0.c0) AS REAL) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND ('')))<<(vt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(HEX(DISTINCT vt0.c0) AS REAL) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND ('')))<<(vt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY CAST(HEX(DISTINCT vt0.c0) AS REAL) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND ('')))<<(vt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(HEX(DISTINCT vt0.c0) AS REAL) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND ('')))<<(vt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE) ORDER BY CAST(HEX(DISTINCT vt0.c0) AS REAL) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND ('')))<<(vt0.c0 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((vt0.c1) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((vt0.c1) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((vt0.c1) IS FALSE) COLLATE BINARY);
SELECT * FROM t0 WHERE (((((t0.c68)GLOB(t0.c68)))&((t0.c68 IN (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)GLOB(t0.c68)))&((t0.c68 IN (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c68)GLOB(t0.c68)))&((t0.c68 IN (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)GLOB(t0.c68)))&((t0.c68 IN (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c68)GLOB(t0.c68)))&((t0.c68 IN (t0.c68)))));
SELECT * FROM t0, vt0 WHERE ((((NULL)||(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL)||(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((NULL)||(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((NULL)||(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((NULL)||(vt0.c0)) IN ()));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON CAST(357669697 AS REAL) WHERE ((CAST(t0.c68 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c68 AS BLOB) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CAST(357669697 AS REAL));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON CAST(357669697 AS REAL) WHERE ((CAST(t0.c68 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c68 AS BLOB) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CAST(357669697 AS REAL));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON CAST(357669697 AS REAL) WHERE ((CAST(t0.c68 AS BLOB) IN ()));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN NULLIF(t0.c68, t0.c68) THEN CASE WHEN t0.c68 THEN t0.c68 END END) ORDER BY CAST((- (t0.c68)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULLIF(t0.c68, t0.c68) THEN CASE WHEN t0.c68 THEN t0.c68 END END) IS TRUE)  as count FROM t0 ORDER BY CAST((- (t0.c68)) AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN NULLIF(t0.c68, t0.c68) THEN CASE WHEN t0.c68 THEN t0.c68 END END) ORDER BY CAST((- (t0.c68)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULLIF(t0.c68, t0.c68) THEN CASE WHEN t0.c68 THEN t0.c68 END END) IS TRUE)  as count FROM t0 ORDER BY CAST((- (t0.c68)) AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN NULLIF(t0.c68, t0.c68) THEN CASE WHEN t0.c68 THEN t0.c68 END END) ORDER BY CAST((- (t0.c68)) AS NUMERIC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULL IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULL IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULL IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c1 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN v0 WHERE ((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))) COLLATE BINARY) ORDER BY ((x'') IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN v0 ORDER BY ((x'') IS FALSE) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN v0 WHERE ((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))) COLLATE BINARY) ORDER BY ((x'') IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN v0 ORDER BY ((x'') IS FALSE) DESC);
SELECT COUNT(*) FROM v0, t0 NOT INDEXED, vt0 WHERE (((((((((v0.c0 COLLATE NOCASE)AND((vt0.c0 IN (vt0.c0, -1358768755)))))OR(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c0 COLLATE NOCASE)))AND(CASE WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0 COLLATE NOCASE)AND((vt0.c0 IN (vt0.c0, -1358768755)))))OR(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c0 COLLATE NOCASE)))AND(CASE WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0 NOT INDEXED, vt0 WHERE (((((((((v0.c0 COLLATE NOCASE)AND((vt0.c0 IN (vt0.c0, -1358768755)))))OR(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c0 COLLATE NOCASE)))AND(CASE WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0 COLLATE NOCASE)AND((vt0.c0 IN (vt0.c0, -1358768755)))))OR(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c0 COLLATE NOCASE)))AND(CASE WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN 0.3033632288814905 THEN ((((vt0.c1)AND('*4z1Y')))OR(vt0.c1)) END) ORDER BY HEX(DISTINCT (((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))), (((vt0.c0))<>((vt0.c1 COLLATE NOCASE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.3033632288814905 THEN ((((vt0.c1)AND('*4z1Y')))OR(vt0.c1)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY HEX(DISTINCT (((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))), (((vt0.c0))!=((vt0.c1 COLLATE NOCASE)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN 0.3033632288814905 THEN ((((vt0.c1)AND('*4z1Y')))OR(vt0.c1)) END) ORDER BY HEX(DISTINCT (((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))), (((vt0.c0))<>((vt0.c1 COLLATE NOCASE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.3033632288814905 THEN ((((vt0.c1)AND('*4z1Y')))OR(vt0.c1)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY HEX(DISTINCT (((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))), (((vt0.c0))!=((vt0.c1 COLLATE NOCASE)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON (('2Y')&(((v0.c0)IS NOT(t0.c68)))) CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) WHERE ((NOT (NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL)) COLLATE BINARY) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (('2Y')&(((v0.c0)IS NOT(t0.c68)))) CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON (('2Y')&(((v0.c0)IS NOT(t0.c68)))) CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) WHERE ((NOT (NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL)) COLLATE BINARY) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (('2Y')&(((v0.c0)IS NOT(t0.c68)))) CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON (('2Y')&(((v0.c0)IS NOT(t0.c68)))) CROSS JOIN vt0 ON (vt0.c0 COLLATE NOCASE IN ()) WHERE ((NOT (NULL)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)))AND((vt0.c0 IN ()))))OR(-1.885378442E9 COLLATE NOCASE))) ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)))AND((vt0.c0 IN ()))))OR(-1.885378442E9 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)))AND((vt0.c0 IN ()))))OR(-1.885378442E9 COLLATE NOCASE))) ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)))AND((vt0.c0 IN ()))))OR(-1.885378442E9 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)))AND((vt0.c0 IN ()))))OR(-1.885378442E9 COLLATE NOCASE))) ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((vt0.c0)AND(-1.554842831E9)))OR(vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(-1.554842831E9)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, t0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((vt0.c0)AND(-1.554842831E9)))OR(vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(-1.554842831E9)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, t0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((vt0.c0)AND(-1.554842831E9)))OR(vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((t0.c68)AND('')))OR(0.0020428711350042317)))AND(NULL)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((((t0.c68)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY (~ (LIKELY(DISTINCT vt0.c0))), (((((((t0.c68)) NOT BETWEEN ((vt0.c0)) AND ((t0.c68))))AND(NULL)))AND(CAST(t0.c68 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c68)AND('')))OR(0.0020428711350042317)))AND(NULL)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((((t0.c68)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (LIKELY(DISTINCT vt0.c0))), (((((((t0.c68)) NOT BETWEEN ((vt0.c0)) AND ((t0.c68))))AND(NULL)))AND(CAST(t0.c68 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((t0.c68)AND('')))OR(0.0020428711350042317)))AND(NULL)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((((t0.c68)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY (~ (LIKELY(DISTINCT vt0.c0))), (((((((t0.c68)) NOT BETWEEN ((vt0.c0)) AND ((t0.c68))))AND(NULL)))AND(CAST(t0.c68 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c68)AND('')))OR(0.0020428711350042317)))AND(NULL)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((((t0.c68)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (LIKELY(DISTINCT vt0.c0))), (((((((t0.c68)) NOT BETWEEN ((vt0.c0)) AND ((t0.c68))))AND(NULL)))AND(CAST(t0.c68 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((t0.c68)AND('')))OR(0.0020428711350042317)))AND(NULL)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((((t0.c68)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY (~ (LIKELY(DISTINCT vt0.c0))), (((((((t0.c68)) NOT BETWEEN ((vt0.c0)) AND ((t0.c68))))AND(NULL)))AND(CAST(t0.c68 AS NUMERIC)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((('0.8247072821740434') NOT BETWEEN (vt0.c1) AND (t0.c68)))>=(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((('0.8247072821740434') NOT BETWEEN (vt0.c1) AND (t0.c68)))>=(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((('0.8247072821740434') NOT BETWEEN (vt0.c1) AND (t0.c68)))>=(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((('0.8247072821740434') NOT BETWEEN (vt0.c1) AND (t0.c68)))>=(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM vt0 WHERE (CAST(LAST_INSERT_ROWID() AS BLOB)) ORDER BY (CAST(vt0.c1 AS INTEGER) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LAST_INSERT_ROWID() AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS INTEGER) IN ()) ASC);
SELECT * FROM vt0 WHERE (CAST(LAST_INSERT_ROWID() AS BLOB)) ORDER BY (CAST(vt0.c1 AS INTEGER) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LAST_INSERT_ROWID() AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS INTEGER) IN ()) ASC);
SELECT * FROM vt0 WHERE (CAST(LAST_INSERT_ROWID() AS BLOB)) ORDER BY (CAST(vt0.c1 AS INTEGER) IN ()) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i55 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)|(vt0.c1))))>=((((vt0.c0)-(v0.c0))))) WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((v0.c0)AND(vt0.c1)), ((v0.c0)>>(vt0.c0)), (~ (vt0.c1)))) AND ((((v0.c0) NOT BETWEEN (NULL) AND (vt0.c1)), CAST('1682729665' AS BLOB), (vt0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM v0 INDEXED BY i55 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)|(vt0.c1))))>=((((vt0.c0)-(v0.c0))))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((v0.c0)AND(vt0.c1)), ((v0.c0)>>(vt0.c0)), (~ (vt0.c1)))) AND ((((v0.c0) NOT BETWEEN (NULL) AND (vt0.c1)), CAST('1682729665' AS BLOB), (vt0.c0 IN ())))) DESC);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i55 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)|(vt0.c1))))>=((((vt0.c0)-(v0.c0))))) WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((v0.c0)AND(vt0.c1)), ((v0.c0)>>(vt0.c0)), (~ (vt0.c1)))) AND ((((v0.c0) NOT BETWEEN (NULL) AND (vt0.c1)), CAST('1682729665' AS BLOB), (vt0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM v0 INDEXED BY i55 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)|(vt0.c1))))>=((((vt0.c0)-(v0.c0))))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((v0.c0)AND(vt0.c1)), ((v0.c0)>>(vt0.c0)), (~ (vt0.c1)))) AND ((((v0.c0) NOT BETWEEN (NULL) AND (vt0.c1)), CAST('1682729665' AS BLOB), (vt0.c0 IN ())))) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((ABS(vt0.c0))%(((v0.c0)||(vt0.c0)))) LEFT OUTER JOIN t0 ON ((((((t0.c68)AND(vt0.c0)))OR(t0.c68))) ISNULL) WHERE ((((- (vt0.c0))) IS TRUE)) ORDER BY ((t0.c68) NOT NULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((ABS(vt0.c0))%(((v0.c0)||(vt0.c0)))) LEFT OUTER JOIN t0 ON ((((((t0.c68)AND(vt0.c0)))OR(t0.c68))) ISNULL) ORDER BY ((t0.c68) NOT NULL) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((ABS(vt0.c0))%(((v0.c0)||(vt0.c0)))) LEFT OUTER JOIN t0 ON ((((((t0.c68)AND(vt0.c0)))OR(t0.c68))) ISNULL) WHERE ((((- (vt0.c0))) IS TRUE)) ORDER BY ((t0.c68) NOT NULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((ABS(vt0.c0))%(((v0.c0)||(vt0.c0)))) LEFT OUTER JOIN t0 ON ((((((t0.c68)AND(vt0.c0)))OR(t0.c68))) ISNULL) ORDER BY ((t0.c68) NOT NULL) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM v0, vt0, t0 WHERE (((x'')&((vt0.c1 IN (vt0.c0))))) ORDER BY ((((v0.c0)IS NOT(t0.c68))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((x'')&((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((v0.c0)IS NOT(t0.c68))) IS FALSE));
SELECT * FROM v0, vt0, t0 WHERE (((x'')&((vt0.c1 IN (vt0.c0))))) ORDER BY ((((v0.c0)IS NOT(t0.c68))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((x'')&((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((v0.c0)IS NOT(t0.c68))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((((((((NOT (vt0.c1)))OR(((((vt0.c1)OR(t0.c68)))AND(t0.c68)))))OR(vt0.c1)))OR(((t0.c68)+(vt0.c0)))))OR(TRIM(vt0.c1))) WHERE ((((('1e500')IS NOT(vt0.c0)))>(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((('1e500')IS NOT(vt0.c0)))>(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((((((NOT (vt0.c1)))OR(((((vt0.c1)OR(t0.c68)))AND(t0.c68)))))OR(vt0.c1)))OR(((t0.c68)+(vt0.c0)))))OR(TRIM(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((((((((NOT (vt0.c1)))OR(((((vt0.c1)OR(t0.c68)))AND(t0.c68)))))OR(vt0.c1)))OR(((t0.c68)+(vt0.c0)))))OR(TRIM(vt0.c1))) WHERE ((((('1e500')IS NOT(vt0.c0)))>(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((('1e500')IS NOT(vt0.c0)))>(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((((((NOT (vt0.c1)))OR(((((vt0.c1)OR(t0.c68)))AND(t0.c68)))))OR(vt0.c1)))OR(((t0.c68)+(vt0.c0)))))OR(TRIM(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((((((((NOT (vt0.c1)))OR(((((vt0.c1)OR(t0.c68)))AND(t0.c68)))))OR(vt0.c1)))OR(((t0.c68)+(vt0.c0)))))OR(TRIM(vt0.c1))) WHERE ((((('1e500')IS NOT(vt0.c0)))>(((vt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0 COLLATE NOCASE)-((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)-((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0 COLLATE NOCASE)-((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)-((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0 COLLATE NOCASE)-((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((- (' -')))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<<(vt0.c0))))) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((- (' -')))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c1)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((- (' -')))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<<(vt0.c0))))) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((- (' -')))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c1)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((- (' -')))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<<(vt0.c0))))) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c1)) ASC;
SELECT ALL * FROM t0, v0 WHERE (((t0.c68 COLLATE NOCASE) NOT BETWEEN ((t0.c68 IN ())) AND (((v0.c0)LIKE(v0.c0))))) ORDER BY ((((CAST(t0.c68 AS NUMERIC))OR(((((v0.c0)AND(t0.c68)))AND(v0.c0)))))AND(CAST(t0.c68 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE NOCASE) NOT BETWEEN ((t0.c68 IN ())) AND (((v0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((CAST(t0.c68 AS NUMERIC))OR(((((v0.c0)AND(t0.c68)))AND(v0.c0)))))AND(CAST(t0.c68 AS INTEGER))));
SELECT ALL * FROM t0, v0 WHERE (((t0.c68 COLLATE NOCASE) NOT BETWEEN ((t0.c68 IN ())) AND (((v0.c0)LIKE(v0.c0))))) ORDER BY ((((CAST(t0.c68 AS NUMERIC))OR(((((v0.c0)AND(t0.c68)))AND(v0.c0)))))AND(CAST(t0.c68 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE NOCASE) NOT BETWEEN ((t0.c68 IN ())) AND (((v0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((CAST(t0.c68 AS NUMERIC))OR(((((v0.c0)AND(t0.c68)))AND(v0.c0)))))AND(CAST(t0.c68 AS INTEGER))));
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((vt0.c0 COLLATE NOCASE)))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END))>=((((vt0.c0)GLOB(vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END))>=((((vt0.c0)GLOB(vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((vt0.c0 COLLATE NOCASE)))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END))>=((((vt0.c0)GLOB(vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END))>=((((vt0.c0)GLOB(vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((v0.c0)AND(((t0.c68) NOT NULL))))OR(((v0.c0)>=(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(((t0.c68) NOT NULL))))OR(((v0.c0)>=(t0.c68))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((v0.c0)AND(((t0.c68) NOT NULL))))OR(((v0.c0)>=(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(((t0.c68) NOT NULL))))OR(((v0.c0)>=(t0.c68))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((- (vt0.c0)) COLLATE BINARY) ORDER BY ((INSTR(v0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (- (CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY ((INSTR(v0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (- (CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt0, v0 WHERE ((- (vt0.c0)) COLLATE BINARY) ORDER BY ((INSTR(v0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (- (CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY ((INSTR(v0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (- (CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)||(vt0.c1))  WHEN ((vt0.c1) NOT NULL) THEN CASE 'L'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)) ASC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0x4d5d8897))) NOT BETWEEN (CAST('*,' AS BLOB)) AND (TRIM(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)||(vt0.c1))  WHEN ((vt0.c1) NOT NULL) THEN CASE 'L'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)) ASC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0X4d5d8897))) NOT BETWEEN (CAST('*,' AS BLOB)) AND (TRIM(vt0.c0, vt0.c0))));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)||(vt0.c1))  WHEN ((vt0.c1) NOT NULL) THEN CASE 'L'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)) ASC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0x4d5d8897))) NOT BETWEEN (CAST('*,' AS BLOB)) AND (TRIM(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)||(vt0.c1))  WHEN ((vt0.c1) NOT NULL) THEN CASE 'L'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)) ASC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0X4d5d8897))) NOT BETWEEN (CAST('*,' AS BLOB)) AND (TRIM(vt0.c0, vt0.c0))));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)||(vt0.c1))  WHEN ((vt0.c1) NOT NULL) THEN CASE 'L'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)) ASC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0x4d5d8897))) NOT BETWEEN (CAST('*,' AS BLOB)) AND (TRIM(vt0.c0, vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((((('-1852754588') BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((('-1852754588') BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((('-1852754588') BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((('-1852754588') BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((('-1852754588') BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL));
SELECT ALL * FROM vt0 INNER JOIN t0 ON v0.c0 INNER JOIN v0 ON ((CAST(v0.c0 AS REAL)) IS FALSE) WHERE (CASE ((vt0.c1)>=(v0.c0))  WHEN HEX(0.7737754095973193) THEN ((((((((vt0.c0)AND('l')))OR(NULL)))AND(t0.c68)))OR('1144607531')) END) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c1)OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)>=(v0.c0))  WHEN HEX(0.7737754095973193) THEN ((((((((vt0.c0)AND('l')))OR(NULL)))AND(t0.c68)))OR('1144607531')) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON v0.c0 INNER JOIN v0 ON ((CAST(v0.c0 AS REAL)) IS FALSE) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c1)OR(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN t0 ON v0.c0 INNER JOIN v0 ON ((CAST(v0.c0 AS REAL)) IS FALSE) WHERE (CASE ((vt0.c1)>=(v0.c0))  WHEN HEX(0.7737754095973193) THEN ((((((((vt0.c0)AND('l')))OR(NULL)))AND(t0.c68)))OR('1144607531')) END) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c1)OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)>=(v0.c0))  WHEN HEX(0.7737754095973193) THEN ((((((((vt0.c0)AND('l')))OR(NULL)))AND(t0.c68)))OR('1144607531')) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON v0.c0 INNER JOIN v0 ON ((CAST(v0.c0 AS REAL)) IS FALSE) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c1)OR(vt0.c1))))  NULLS LAST);
SELECT * FROM vt0, t0 INDEXED BY i55 CROSS JOIN v0 ON (- ((((vt0.c1))==((vt0.c1))))) WHERE ((NOT (((((t0.c68)OR(vt0.c0)))OR(t0.c68)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((t0.c68)OR(vt0.c0)))OR(t0.c68))))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i55 CROSS JOIN v0 ON (- ((((vt0.c1))==((vt0.c1))))));
SELECT * FROM vt0, t0 INDEXED BY i55 CROSS JOIN v0 ON (- ((((vt0.c1))==((vt0.c1))))) WHERE ((NOT (((((t0.c68)OR(vt0.c0)))OR(t0.c68)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((t0.c68)OR(vt0.c0)))OR(t0.c68))))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i55 CROSS JOIN v0 ON (- ((((vt0.c1))==((vt0.c1))))));
SELECT * FROM vt0 INNER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE BINARY WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE BINARY WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CAST(v0.c0 AS BLOB) COLLATE BINARY);
SELECT * FROM t0, vt0, v0 WHERE ((~ (((((vt0.c1)AND('')))OR(v0.c0))))) ORDER BY 0.7513733983956042, TYPEOF(((t0.c68)||(vt0.c0))), (- ((~ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c1)AND('')))OR(v0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY 0.7513733983956042, TYPEOF(((t0.c68)||(vt0.c0))), (- ((~ (v0.c0))))  NULLS FIRST);
SELECT * FROM t0, vt0, v0 WHERE ((~ (((((vt0.c1)AND('')))OR(v0.c0))))) ORDER BY 0.7513733983956042, TYPEOF(((t0.c68)||(vt0.c0))), (- ((~ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c1)AND('')))OR(v0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY 0.7513733983956042, TYPEOF(((t0.c68)||(vt0.c0))), (- ((~ (v0.c0))))  NULLS FIRST);
SELECT * FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT NULL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN -9.4490961E7 WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END) AND ((0.6364735900552614 IN ()))) WHERE (NULL) ORDER BY (((t0.c68)) NOT BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT NULL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN -9.4490961E7 WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END) AND ((0.6364735900552614 IN ()))) ORDER BY (((t0.c68)) NOT BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((v0.c0))) DESC);
SELECT * FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT NULL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN -9.4490961E7 WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END) AND ((0.6364735900552614 IN ()))) WHERE (NULL) ORDER BY (((t0.c68)) NOT BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((((v0.c0) NOT NULL)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN -9.4490961E7 WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END) AND ((0.6364735900552614 IN ()))) ORDER BY (((t0.c68)) NOT BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((v0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)+(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM)+(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)+(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM)+(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)+(CAST(vt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM vt0 WHERE (QUOTE(vt0.c0 COLLATE RTRIM)) ORDER BY ((DATETIME(vt0.c1, '1930794550', vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))IS(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((QUOTE(vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY ((DATETIME(vt0.c1, '1930794550', vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))IS(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (QUOTE(vt0.c0 COLLATE RTRIM)) ORDER BY ((DATETIME(vt0.c1, '1930794550', vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))IS(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((QUOTE(vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY ((DATETIME(vt0.c1, '1930794550', vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))IS(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (QUOTE(vt0.c0 COLLATE RTRIM)) ORDER BY ((DATETIME(vt0.c1, '1930794550', vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))IS(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))));
SELECT * FROM t0, v0 WHERE ((((t0.c68)) NOT BETWEEN ((NULL)) AND ((LIKELIHOOD(t0.c68, 0.17625777286598288)))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN ((NULL)) AND ((LIKELIHOOD(t0.c68, 0.17625777286598288))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((t0.c68)) NOT BETWEEN ((NULL)) AND ((LIKELIHOOD(t0.c68, 0.17625777286598288)))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN ((NULL)) AND ((LIKELIHOOD(t0.c68, 0.17625777286598288))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((t0.c68)) NOT BETWEEN ((NULL)) AND ((LIKELIHOOD(t0.c68, 0.17625777286598288)))));
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c68) ORDER BY UNLIKELY(DISTINCT (~ (t0.c68))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM v0, t0 ORDER BY UNLIKELY(DISTINCT (~ (t0.c68))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c68) ORDER BY UNLIKELY(DISTINCT (~ (t0.c68))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM v0, t0 ORDER BY UNLIKELY(DISTINCT (~ (t0.c68))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c68) ORDER BY UNLIKELY(DISTINCT (~ (t0.c68))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN ((v0.c0)<(v0.c0)) THEN CASE WHEN t0.c68 THEN t0.c68 END ELSE ((t0.c68)>=(t0.c68)) END) ORDER BY DATETIME(t0.c68, v0.c0, v0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)<(v0.c0)) THEN CASE WHEN t0.c68 THEN t0.c68 END ELSE ((t0.c68)>=(t0.c68)) END) IS TRUE)  as count FROM t0, v0 ORDER BY DATETIME(t0.c68, v0.c0, v0.c0) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN ((v0.c0)<(v0.c0)) THEN CASE WHEN t0.c68 THEN t0.c68 END ELSE ((t0.c68)>=(t0.c68)) END) ORDER BY DATETIME(t0.c68, v0.c0, v0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)<(v0.c0)) THEN CASE WHEN t0.c68 THEN t0.c68 END ELSE ((t0.c68)>=(t0.c68)) END) IS TRUE)  as count FROM t0, v0 ORDER BY DATETIME(t0.c68, v0.c0, v0.c0) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((('') IS FALSE) IN ())) ORDER BY ((((((v0.c0) NOT NULL))OR((((NULL, NULL, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, NULL, v0.c0, v0.c0))))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((('') IS FALSE) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT NULL))OR((((NULL, NULL, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, NULL, v0.c0, v0.c0))))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (((('') IS FALSE) IN ())) ORDER BY ((((((v0.c0) NOT NULL))OR((((NULL, NULL, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, NULL, v0.c0, v0.c0))))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((('') IS FALSE) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT NULL))OR((((NULL, NULL, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, NULL, v0.c0, v0.c0))))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT * FROM t0, v0 WHERE (TYPEOF((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TYPEOF((v0.c0 IN ()))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (TYPEOF((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TYPEOF((v0.c0 IN ()))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (TYPEOF((v0.c0 IN ())));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c68)OR((v0.c0 IN ()))))AND(((vt0.c1)&(vt0.c1)))) CROSS JOIN vt0 ON ((CAST(vt0.c1 AS REAL)) IS TRUE) WHERE (((((vt0.c1)<>(v0.c0)))*(LIKELY(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)!=(v0.c0)))*(LIKELY(DISTINCT v0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c68)OR((v0.c0 IN ()))))AND(((vt0.c1)&(vt0.c1)))) CROSS JOIN vt0 ON ((CAST(vt0.c1 AS REAL)) IS TRUE));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c68)OR((v0.c0 IN ()))))AND(((vt0.c1)&(vt0.c1)))) CROSS JOIN vt0 ON ((CAST(vt0.c1 AS REAL)) IS TRUE) WHERE (((((vt0.c1)<>(v0.c0)))*(LIKELY(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)!=(v0.c0)))*(LIKELY(DISTINCT v0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c68)OR((v0.c0 IN ()))))AND(((vt0.c1)&(vt0.c1)))) CROSS JOIN vt0 ON ((CAST(vt0.c1 AS REAL)) IS TRUE));
SELECT * FROM t0, v0, vt0 WHERE ((((vt0.c0, vt0.c1, t0.c68)) NOT BETWEEN ((CASE t0.c68  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t0.c68 END, t0.c68, ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)))) AND ((-532438636, ((vt0.c0) NOTNULL), ((t0.c68) IS TRUE))))) ORDER BY ((vt0.c1)+(0x5535787f)) COLLATE BINARY, (((~ (vt0.c1)))GLOB(((vt0.c0)AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, t0.c68)) NOT BETWEEN ((CASE t0.c68  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t0.c68 END, t0.c68, ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)))) AND ((-532438636, ((vt0.c0) NOTNULL), ((t0.c68) IS TRUE))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((vt0.c1)+(0X5535787f)) COLLATE BINARY, (((~ (vt0.c1)))GLOB(((vt0.c0)AND(vt0.c0))))  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE ((((vt0.c0, vt0.c1, t0.c68)) NOT BETWEEN ((CASE t0.c68  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t0.c68 END, t0.c68, ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)))) AND ((-532438636, ((vt0.c0) NOTNULL), ((t0.c68) IS TRUE))))) ORDER BY ((vt0.c1)+(0x5535787f)) COLLATE BINARY, (((~ (vt0.c1)))GLOB(((vt0.c0)AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, t0.c68)) NOT BETWEEN ((CASE t0.c68  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t0.c68 END, t0.c68, ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)))) AND ((-532438636, ((vt0.c0) NOTNULL), ((t0.c68) IS TRUE))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((vt0.c1)+(0X5535787f)) COLLATE BINARY, (((~ (vt0.c1)))GLOB(((vt0.c0)AND(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN t0.c68 END) ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(vt0.c1)))OR(t0.c68))) IS FALSE)  NULLS LAST, x'c5af8dfa';
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c1 IN ()) THEN t0.c68 END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(vt0.c1)))OR(t0.c68))) IS FALSE)  NULLS LAST, x'c5af8dfa');
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN t0.c68 END) ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(vt0.c1)))OR(t0.c68))) IS FALSE)  NULLS LAST, x'c5af8dfa';
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c1 IN ()) THEN t0.c68 END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(vt0.c1)))OR(t0.c68))) IS FALSE)  NULLS LAST, x'c5af8dfa');
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN t0.c68 END) ORDER BY ((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(vt0.c1)))OR(t0.c68))) IS FALSE)  NULLS LAST, x'c5af8dfa';
SELECT ALL * FROM t0 WHERE ((((((((((((0.8881100598347845)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68))))<=((((t0.c68)LIKE(t0.c68)))))) ORDER BY CASE ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))  WHEN UNLIKELY(t0.c68) THEN ((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR('-1909936735')))OR(t0.c68)) ELSE 0.18723325006543845 END DESC, COALESCE((((x'95ec')) NOT BETWEEN ((t0.c68)) AND ((t0.c68))), (- (t0.c68)), ((t0.c68)IS NOT(t0.c68)), CASE t0.c68  WHEN t0.c68 THEN NULL ELSE t0.c68 END) DESC, ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)GLOB(((t0.c68)*(t0.c68)))) DESC, ((CAST(t0.c68 AS NUMERIC))<(((((t0.c68)OR(t0.c68)))OR(t0.c68)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((0.8881100598347845)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68))))<=((((t0.c68)LIKE(t0.c68)))))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))  WHEN UNLIKELY(t0.c68) THEN ((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR('-1909936735')))OR(t0.c68)) ELSE 0.18723325006543845 END DESC, COALESCE((((x'95ec')) NOT BETWEEN ((t0.c68)) AND ((t0.c68))), (- (t0.c68)), ((t0.c68)IS NOT(t0.c68)), CASE t0.c68  WHEN t0.c68 THEN NULL ELSE t0.c68 END) DESC, ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)GLOB(((t0.c68)*(t0.c68)))) DESC, ((CAST(t0.c68 AS NUMERIC))<(((((t0.c68)OR(t0.c68)))OR(t0.c68)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((((((((0.8881100598347845)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68))))<=((((t0.c68)LIKE(t0.c68)))))) ORDER BY CASE ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))  WHEN UNLIKELY(t0.c68) THEN ((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR('-1909936735')))OR(t0.c68)) ELSE 0.18723325006543845 END DESC, COALESCE((((x'95ec')) NOT BETWEEN ((t0.c68)) AND ((t0.c68))), (- (t0.c68)), ((t0.c68)IS NOT(t0.c68)), CASE t0.c68  WHEN t0.c68 THEN NULL ELSE t0.c68 END) DESC, ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)GLOB(((t0.c68)*(t0.c68)))) DESC, ((CAST(t0.c68 AS NUMERIC))<(((((t0.c68)OR(t0.c68)))OR(t0.c68)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((0.8881100598347845)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68))))<=((((t0.c68)LIKE(t0.c68)))))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))  WHEN UNLIKELY(t0.c68) THEN ((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR('-1909936735')))OR(t0.c68)) ELSE 0.18723325006543845 END DESC, COALESCE((((x'95ec')) NOT BETWEEN ((t0.c68)) AND ((t0.c68))), (- (t0.c68)), ((t0.c68)IS NOT(t0.c68)), CASE t0.c68  WHEN t0.c68 THEN NULL ELSE t0.c68 END) DESC, ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)GLOB(((t0.c68)*(t0.c68)))) DESC, ((CAST(t0.c68 AS NUMERIC))<(((((t0.c68)OR(t0.c68)))OR(t0.c68)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((((((((0.8881100598347845)AND(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(t0.c68))))<=((((t0.c68)LIKE(t0.c68)))))) ORDER BY CASE ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))  WHEN UNLIKELY(t0.c68) THEN ((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR('-1909936735')))OR(t0.c68)) ELSE 0.18723325006543845 END DESC, COALESCE((((x'95ec')) NOT BETWEEN ((t0.c68)) AND ((t0.c68))), (- (t0.c68)), ((t0.c68)IS NOT(t0.c68)), CASE t0.c68  WHEN t0.c68 THEN NULL ELSE t0.c68 END) DESC, ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)GLOB(((t0.c68)*(t0.c68)))) DESC, ((CAST(t0.c68 AS NUMERIC))<(((((t0.c68)OR(t0.c68)))OR(t0.c68)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (NULLIF(DISTINCT ((t0.c68)GLOB(v0.c0)), ((vt0.c1)LIKE(v0.c0)))) ORDER BY (((t0.c68 IN (vt0.c0)))OR((t0.c68 IN ())))  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)/(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((t0.c68)GLOB(v0.c0)), ((vt0.c1)LIKE(v0.c0)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((t0.c68 IN (vt0.c0)))OR((t0.c68 IN ())))  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)/(vt0.c1)))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (NULLIF(DISTINCT ((t0.c68)GLOB(v0.c0)), ((vt0.c1)LIKE(v0.c0)))) ORDER BY (((t0.c68 IN (vt0.c0)))OR((t0.c68 IN ())))  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)/(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((t0.c68)GLOB(v0.c0)), ((vt0.c1)LIKE(v0.c0)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((t0.c68 IN (vt0.c0)))OR((t0.c68 IN ())))  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)/(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON ')J' WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ')J');
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON ')J' WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ')J');
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON ')J' WHERE (NULL);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c68) NOTNULL), ((vt0.c0) IS TRUE), CAST(vt0.c1 AS NUMERIC)))<>(((((t0.c68, t0.c68, '1')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, t0.c68, t0.c68))), ((t0.c68) NOT BETWEEN (t0.c68) AND (x'b860')), ((vt0.c1) IS FALSE))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68) NOTNULL), ((vt0.c0) IS TRUE), CAST(vt0.c1 AS NUMERIC)))!=(((((t0.c68, t0.c68, '1')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, t0.c68, t0.c68))), ((t0.c68) NOT BETWEEN (t0.c68) AND (x'b860')), ((vt0.c1) IS FALSE))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c68) NOTNULL), ((vt0.c0) IS TRUE), CAST(vt0.c1 AS NUMERIC)))<>(((((t0.c68, t0.c68, '1')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, t0.c68, t0.c68))), ((t0.c68) NOT BETWEEN (t0.c68) AND (x'b860')), ((vt0.c1) IS FALSE))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68) NOTNULL), ((vt0.c0) IS TRUE), CAST(vt0.c1 AS NUMERIC)))!=(((((t0.c68, t0.c68, '1')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, t0.c68, t0.c68))), ((t0.c68) NOT BETWEEN (t0.c68) AND (x'b860')), ((vt0.c1) IS FALSE))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c68) NOTNULL), ((vt0.c0) IS TRUE), CAST(vt0.c1 AS NUMERIC)))<>(((((t0.c68, t0.c68, '1')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, t0.c68, t0.c68))), ((t0.c68) NOT BETWEEN (t0.c68) AND (x'b860')), ((vt0.c1) IS FALSE))))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((CHAR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((CHAR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((CHAR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)AND(v0.c0)))AND(v0.c0))))>((CHAR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END)%(((vt0.c0)/(vt0.c1)))) LEFT OUTER JOIN v0 ON (((~ (vt0.c1)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) WHERE (((CASE WHEN vt0.c0 THEN t0.c68 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND((((v0.c0))=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN t0.c68 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND((((v0.c0))==((v0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END)%(((vt0.c0)/(vt0.c1)))) LEFT OUTER JOIN v0 ON (((~ (vt0.c1)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END)%(((vt0.c0)/(vt0.c1)))) LEFT OUTER JOIN v0 ON (((~ (vt0.c1)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) WHERE (((CASE WHEN vt0.c0 THEN t0.c68 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND((((v0.c0))=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN t0.c68 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND((((v0.c0))==((v0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END)%(((vt0.c0)/(vt0.c1)))) LEFT OUTER JOIN v0 ON (((~ (vt0.c1)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM v0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND((~ ('-986161029')))))AND(CAST(v0.c0 AS REAL))))OR((v0.c0 IN (v0.c0)))))OR(((v0.c0)OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND((~ ('-986161029')))))AND(CAST(v0.c0 AS REAL))))OR((v0.c0 IN (v0.c0)))))OR(((v0.c0)OR(v0.c0)))));
SELECT ALL * FROM v0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND((~ ('-986161029')))))AND(CAST(v0.c0 AS REAL))))OR((v0.c0 IN (v0.c0)))))OR(((v0.c0)OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND((~ ('-986161029')))))AND(CAST(v0.c0 AS REAL))))OR((v0.c0 IN (v0.c0)))))OR(((v0.c0)OR(v0.c0)))));
SELECT ALL * FROM t0 WHERE ('1617368393');
SELECT SUM(count) FROM (SELECT (('1617368393') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('1617368393');
SELECT SUM(count) FROM (SELECT (('1617368393') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('1617368393');
SELECT * FROM v0, vt0 INDEXED BY i55 CROSS JOIN t0 ON (~ ((- (vt0.c1)))) WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN (NOT ('[,l7nrK')) ELSE v0.c0 END) ORDER BY ((NOT (t0.c68)) IN ()), ((((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(t0.c68)))AND(v0.c0)))OR(t0.c68)))OR(t0.c68)) COLLATE NOCASE COLLATE NOCASE  NULLS LAST, (+ ((((vt0.c1))==((v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN (NOT ('[,l7nrK')) ELSE v0.c0 END) IS TRUE)  as count FROM v0, vt0 INDEXED BY i55 CROSS JOIN t0 ON (~ ((- (vt0.c1)))) ORDER BY ((NOT (t0.c68)) IN ()), ((((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(t0.c68)))AND(v0.c0)))OR(t0.c68)))OR(t0.c68)) COLLATE NOCASE COLLATE NOCASE  NULLS LAST, (+ ((((vt0.c1))==((v0.c0))))) ASC  NULLS LAST);
SELECT * FROM v0, vt0 INDEXED BY i55 CROSS JOIN t0 ON (~ ((- (vt0.c1)))) WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN (NOT ('[,l7nrK')) ELSE v0.c0 END) ORDER BY ((NOT (t0.c68)) IN ()), ((((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(t0.c68)))AND(v0.c0)))OR(t0.c68)))OR(t0.c68)) COLLATE NOCASE COLLATE NOCASE  NULLS LAST, (+ ((((vt0.c1))==((v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN (NOT ('[,l7nrK')) ELSE v0.c0 END) IS TRUE)  as count FROM v0, vt0 INDEXED BY i55 CROSS JOIN t0 ON (~ ((- (vt0.c1)))) ORDER BY ((NOT (t0.c68)) IN ()), ((((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(t0.c68)))AND(v0.c0)))OR(t0.c68)))OR(t0.c68)) COLLATE NOCASE COLLATE NOCASE  NULLS LAST, (+ ((((vt0.c1))==((v0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN ((((((((vt0.c1)OR(v0.c0)))AND(vt0.c1)))AND(v0.c0)))AND(v0.c0)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE BINARY  WHEN ((((((((vt0.c1)OR(v0.c0)))AND(vt0.c1)))AND(v0.c0)))AND(v0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN ((((((((vt0.c1)OR(v0.c0)))AND(vt0.c1)))AND(v0.c0)))AND(v0.c0)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE BINARY  WHEN ((((((((vt0.c1)OR(v0.c0)))AND(vt0.c1)))AND(v0.c0)))AND(v0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM t0 WHERE ((- (t0.c68)) COLLATE BINARY) ORDER BY CASE WHEN (('-1167036755') BETWEEN (t0.c68) AND (t0.c68)) THEN (((t0.c68))>=((t0.c68))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (('-1167036755') BETWEEN (t0.c68) AND (t0.c68)) THEN (((t0.c68))>=((t0.c68))) END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((- (t0.c68)) COLLATE BINARY) ORDER BY CASE WHEN (('-1167036755') BETWEEN (t0.c68) AND (t0.c68)) THEN (((t0.c68))>=((t0.c68))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (('-1167036755') BETWEEN (t0.c68) AND (t0.c68)) THEN (((t0.c68))>=((t0.c68))) END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((- (t0.c68)) COLLATE BINARY) ORDER BY CASE WHEN (('-1167036755') BETWEEN (t0.c68) AND (t0.c68)) THEN (((t0.c68))>=((t0.c68))) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>(CAST(vt0.c1 AS REAL)))) ORDER BY x'' COLLATE RTRIM, json_insert(vt0.c1, vt0.c1, vt0.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY x'' COLLATE RTRIM, json_insert(vt0.c1, vt0.c1, vt0.c0) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>(CAST(vt0.c1 AS REAL)))) ORDER BY x'' COLLATE RTRIM, json_insert(vt0.c1, vt0.c1, vt0.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY x'' COLLATE RTRIM, json_insert(vt0.c1, vt0.c1, vt0.c0) COLLATE BINARY);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (5998576.0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((5998576.0 COLLATE RTRIM) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (5998576.0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((5998576.0 COLLATE RTRIM) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CASE ((x'') IS TRUE)  WHEN ((NULL) NOT BETWEEN (x'') AND (vt0.c0)) THEN (vt0.c0 IN (v0.c0, vt0.c0)) WHEN ((v0.c0) NOT NULL) THEN CAST(vt0.c1 AS NUMERIC) WHEN v0.c0 THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68)) END INNER JOIN t0 ON ABS(vt0.c0) WHERE (json_array_length(STRFTIME(v0.c0, vt0.c0, t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(STRFTIME(v0.c0, vt0.c0, t0.c68))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE ((x'') IS TRUE)  WHEN ((NULL) NOT BETWEEN (x'') AND (vt0.c0)) THEN (vt0.c0 IN (v0.c0, vt0.c0)) WHEN ((v0.c0) NOT NULL) THEN CAST(vt0.c1 AS NUMERIC) WHEN v0.c0 THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68)) END INNER JOIN t0 ON ABS(vt0.c0));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CASE ((x'') IS TRUE)  WHEN ((NULL) NOT BETWEEN (x'') AND (vt0.c0)) THEN (vt0.c0 IN (v0.c0, vt0.c0)) WHEN ((v0.c0) NOT NULL) THEN CAST(vt0.c1 AS NUMERIC) WHEN v0.c0 THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68)) END INNER JOIN t0 ON ABS(vt0.c0) WHERE (json_array_length(STRFTIME(v0.c0, vt0.c0, t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(STRFTIME(v0.c0, vt0.c0, t0.c68))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE ((x'') IS TRUE)  WHEN ((NULL) NOT BETWEEN (x'') AND (vt0.c0)) THEN (vt0.c0 IN (v0.c0, vt0.c0)) WHEN ((v0.c0) NOT NULL) THEN CAST(vt0.c1 AS NUMERIC) WHEN v0.c0 THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68)) END INNER JOIN t0 ON ABS(vt0.c0));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (LTRIM(vt0.c0) IN ()) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (LTRIM(vt0.c0) IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (LTRIM(vt0.c0) IN ()) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (LTRIM(vt0.c0) IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (LTRIM(vt0.c0) IN ()) WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((UPPER(t0.c68)) NOT BETWEEN (t0.c68 COLLATE NOCASE) AND (((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0))))) ORDER BY ((((0.9944897165992934) IS FALSE))<=(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((UPPER(t0.c68)) NOT BETWEEN (t0.c68 COLLATE NOCASE) AND (((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((0.9944897165992934) IS FALSE))<=(v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((UPPER(t0.c68)) NOT BETWEEN (t0.c68 COLLATE NOCASE) AND (((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0))))) ORDER BY ((((0.9944897165992934) IS FALSE))<=(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((UPPER(t0.c68)) NOT BETWEEN (t0.c68 COLLATE NOCASE) AND (((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((0.9944897165992934) IS FALSE))<=(v0.c0 COLLATE BINARY)));
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE BINARY);
SELECT ALL * FROM v0, vt0, t0 WHERE ((((v0.c0 IN (v0.c0)))IS NOT(((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0)))IS NOT(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE ((((v0.c0 IN (v0.c0)))IS NOT(((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0)))IS NOT(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((((1006865547)AND(vt0.c0)))OR(vt0.c1)) THEN (((vt0.c1, vt0.c0, vt0.c1, t0.c68, t0.c68)) BETWEEN ((vt0.c0, vt0.c1, '1639241486', vt0.c0, vt0.c1)) AND ((t0.c68, t0.c68, t0.c68, vt0.c0, t0.c68))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((1006865547)AND(vt0.c0)))OR(vt0.c1)) THEN (((vt0.c1, vt0.c0, vt0.c1, t0.c68, t0.c68)) BETWEEN ((vt0.c0, vt0.c1, '1639241486', vt0.c0, vt0.c1)) AND ((t0.c68, t0.c68, t0.c68, vt0.c0, t0.c68))) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((((1006865547)AND(vt0.c0)))OR(vt0.c1)) THEN (((vt0.c1, vt0.c0, vt0.c1, t0.c68, t0.c68)) BETWEEN ((vt0.c0, vt0.c1, '1639241486', vt0.c0, vt0.c1)) AND ((t0.c68, t0.c68, t0.c68, vt0.c0, t0.c68))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((1006865547)AND(vt0.c0)))OR(vt0.c1)) THEN (((vt0.c1, vt0.c0, vt0.c1, t0.c68, t0.c68)) BETWEEN ((vt0.c0, vt0.c1, '1639241486', vt0.c0, vt0.c1)) AND ((t0.c68, t0.c68, t0.c68, vt0.c0, t0.c68))) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((((1006865547)AND(vt0.c0)))OR(vt0.c1)) THEN (((vt0.c1, vt0.c0, vt0.c1, t0.c68, t0.c68)) BETWEEN ((vt0.c0, vt0.c1, '1639241486', vt0.c0, vt0.c1)) AND ((t0.c68, t0.c68, t0.c68, vt0.c0, t0.c68))) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(t0.c68 COLLATE NOCASE AS NUMERIC) WHERE ((NOT (CASE WHEN t0.c68 THEN '0.6484288076356823' END))) ORDER BY UPPER(DISTINCT CAST(vt0.c0 AS REAL)) ASC, ((vt0.c0 IN (vt0.c1, vt0.c0)) IN (CAST('-885877' AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t0.c68 THEN '0.6484288076356823' END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(t0.c68 COLLATE NOCASE AS NUMERIC) ORDER BY UPPER(DISTINCT CAST(vt0.c0 AS REAL)) ASC, ((vt0.c0 IN (vt0.c1, vt0.c0)) IN (CAST('-885877' AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(t0.c68 COLLATE NOCASE AS NUMERIC) WHERE ((NOT (CASE WHEN t0.c68 THEN '0.6484288076356823' END))) ORDER BY UPPER(DISTINCT CAST(vt0.c0 AS REAL)) ASC, ((vt0.c0 IN (vt0.c1, vt0.c0)) IN (CAST('-885877' AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t0.c68 THEN '0.6484288076356823' END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(t0.c68 COLLATE NOCASE AS NUMERIC) ORDER BY UPPER(DISTINCT CAST(vt0.c0 AS REAL)) ASC, ((vt0.c0 IN (vt0.c1, vt0.c0)) IN (CAST('-885877' AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(t0.c68 COLLATE NOCASE AS NUMERIC) WHERE ((NOT (CASE WHEN t0.c68 THEN '0.6484288076356823' END))) ORDER BY UPPER(DISTINCT CAST(vt0.c0 AS REAL)) ASC, ((vt0.c0 IN (vt0.c1, vt0.c0)) IN (CAST('-885877' AS NUMERIC))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (0.7737754095973193);
SELECT SUM(count) FROM (SELECT ALL ((0.7737754095973193) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (0.7737754095973193);
SELECT SUM(count) FROM (SELECT ALL ((0.7737754095973193) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (0.7737754095973193);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((+ (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((+ (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((+ (v0.c0)) IN ()));
SELECT COUNT(*) FROM t0, vt0 WHERE ((- ((((vt0.c1))==((vt0.c1)))))) ORDER BY ((LOWER(vt0.c1)) IS FALSE) ASC, vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c1))==((vt0.c1)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((LOWER(vt0.c1)) IS FALSE) ASC, vt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- ((((vt0.c1))==((vt0.c1)))))) ORDER BY ((LOWER(vt0.c1)) IS FALSE) ASC, vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c1))==((vt0.c1)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((LOWER(vt0.c1)) IS FALSE) ASC, vt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- ((((vt0.c1))==((vt0.c1)))))) ORDER BY ((LOWER(vt0.c1)) IS FALSE) ASC, vt0.c1 DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((t0.c68) BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (((t0.c68) BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((t0.c68) BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (((t0.c68) BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((t0.c68) BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CASE WHEN COALESCE(vt0.c1, t0.c68) THEN (((vt0.c0, t0.c68, t0.c68))<>((t0.c68, vt0.c0, vt0.c1))) WHEN ABS(vt0.c1) THEN ((((((((((((vt0.c1)AND(-206085466)))OR(vt0.c1)))OR(vt0.c0)))AND(0.03795784880945763)))AND(vt0.c1)))AND('-1365871776')) WHEN t0.c68 COLLATE RTRIM THEN ((vt0.c0)*(vt0.c0)) ELSE vt0.c1 END WHERE (CAST(((vt0.c1) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOTNULL) AS BLOB)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE WHEN COALESCE(vt0.c1, t0.c68) THEN (((vt0.c0, t0.c68, t0.c68))<>((t0.c68, vt0.c0, vt0.c1))) WHEN ABS(vt0.c1) THEN ((((((((((((vt0.c1)AND(-206085466)))OR(vt0.c1)))OR(vt0.c0)))AND(0.03795784880945763)))AND(vt0.c1)))AND('-1365871776')) WHEN t0.c68 COLLATE RTRIM THEN ((vt0.c0)*(vt0.c0)) ELSE vt0.c1 END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CASE WHEN COALESCE(vt0.c1, t0.c68) THEN (((vt0.c0, t0.c68, t0.c68))<>((t0.c68, vt0.c0, vt0.c1))) WHEN ABS(vt0.c1) THEN ((((((((((((vt0.c1)AND(-206085466)))OR(vt0.c1)))OR(vt0.c0)))AND(0.03795784880945763)))AND(vt0.c1)))AND('-1365871776')) WHEN t0.c68 COLLATE RTRIM THEN ((vt0.c0)*(vt0.c0)) ELSE vt0.c1 END WHERE (CAST(((vt0.c1) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOTNULL) AS BLOB)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE WHEN COALESCE(vt0.c1, t0.c68) THEN (((vt0.c0, t0.c68, t0.c68))<>((t0.c68, vt0.c0, vt0.c1))) WHEN ABS(vt0.c1) THEN ((((((((((((vt0.c1)AND(-206085466)))OR(vt0.c1)))OR(vt0.c0)))AND(0.03795784880945763)))AND(vt0.c1)))AND('-1365871776')) WHEN t0.c68 COLLATE RTRIM THEN ((vt0.c0)*(vt0.c0)) ELSE vt0.c1 END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CASE WHEN COALESCE(vt0.c1, t0.c68) THEN (((vt0.c0, t0.c68, t0.c68))<>((t0.c68, vt0.c0, vt0.c1))) WHEN ABS(vt0.c1) THEN ((((((((((((vt0.c1)AND(-206085466)))OR(vt0.c1)))OR(vt0.c0)))AND(0.03795784880945763)))AND(vt0.c1)))AND('-1365871776')) WHEN t0.c68 COLLATE RTRIM THEN ((vt0.c0)*(vt0.c0)) ELSE vt0.c1 END WHERE (CAST(((vt0.c1) NOTNULL) AS BLOB));
SELECT ALL * FROM vt0, v0, t0 WHERE (((vt0.c1)-(v0.c0))) ORDER BY (+ (((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)-(v0.c0))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (+ (((vt0.c0) IS FALSE)))  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0 WHERE (((vt0.c1)-(v0.c0))) ORDER BY (+ (((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)-(v0.c0))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (+ (((vt0.c0) IS FALSE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (TYPEOF((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((~ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((~ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF((~ (vt0.c0))));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((- (((vt0.c1)<(v0.c0))))) ORDER BY vt0.c0 COLLATE NOCASE, ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))IS NOT(v0.c0));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)<(v0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY vt0.c0 COLLATE NOCASE, ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))IS NOT(v0.c0)));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((- (((vt0.c1)<(v0.c0))))) ORDER BY vt0.c0 COLLATE NOCASE, ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))IS NOT(v0.c0));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)<(v0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY vt0.c0 COLLATE NOCASE, ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))IS NOT(v0.c0)));
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((v0.c0)<<(vt0.c0)))AND(v0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)<<(vt0.c0)))AND(v0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((v0.c0)<<(vt0.c0)))AND(v0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)<<(vt0.c0)))AND(v0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT * FROM t0 NOT INDEXED, vt0 RIGHT OUTER JOIN v0 ON 0.7247247446712469 WHERE (((v0.c0)>=(LIKELY(DISTINCT t0.c68)))) ORDER BY '0.20989252419597848', ((vt0.c0 COLLATE BINARY)%(CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((((((((((((t0.c68)AND(v0.c0)))AND(t0.c68)))AND(v0.c0)))AND(vt0.c1)))OR(CHANGES())))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>=(LIKELY(DISTINCT t0.c68)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.7247247446712469 ORDER BY '0.20989252419597848', ((vt0.c0 COLLATE BINARY)%(CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((((((((((((t0.c68)AND(v0.c0)))AND(t0.c68)))AND(v0.c0)))AND(vt0.c1)))OR(CHANGES())))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM t0 NOT INDEXED, vt0 RIGHT OUTER JOIN v0 ON 0.7247247446712469 WHERE (((v0.c0)>=(LIKELY(DISTINCT t0.c68)))) ORDER BY '0.20989252419597848', ((vt0.c0 COLLATE BINARY)%(CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((((((((((((t0.c68)AND(v0.c0)))AND(t0.c68)))AND(v0.c0)))AND(vt0.c1)))OR(CHANGES())))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>=(LIKELY(DISTINCT t0.c68)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON 0.7247247446712469 ORDER BY '0.20989252419597848', ((vt0.c0 COLLATE BINARY)%(CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((((((((((((t0.c68)AND(v0.c0)))AND(t0.c68)))AND(v0.c0)))AND(vt0.c1)))OR(CHANGES())))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY CAST((v0.c0 IN ()) AS TEXT), CAST(CAST(v0.c0 AS TEXT) AS TEXT), (((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS TEXT), CAST(CAST(v0.c0 AS TEXT) AS TEXT), (((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((v0.c0))) ASC);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY CAST((v0.c0 IN ()) AS TEXT), CAST(CAST(v0.c0 AS TEXT) AS TEXT), (((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS TEXT), CAST(CAST(v0.c0 AS TEXT) AS TEXT), (((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((v0.c0))) ASC);
SELECT ALL * FROM vt0, v0 WHERE (TRIM(DISTINCT ((v0.c0) NOT BETWEEN (vt0.c0) AND (x'')), (NULL IN ()))) ORDER BY ((CAST(v0.c0 AS BLOB))<(((vt0.c0)OR(vt0.c1)))) DESC  NULLS FIRST, CASE WHEN ((vt0.c1)<(vt0.c0)) THEN ((vt0.c0)+(vt0.c1)) ELSE vt0.c1 COLLATE BINARY END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((v0.c0) NOT BETWEEN (vt0.c0) AND (x'')), (NULL IN ()))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c0 AS BLOB))<(((vt0.c0)OR(vt0.c1)))) DESC  NULLS FIRST, CASE WHEN ((vt0.c1)<(vt0.c0)) THEN ((vt0.c0)+(vt0.c1)) ELSE vt0.c1 COLLATE BINARY END DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (TRIM(DISTINCT ((v0.c0) NOT BETWEEN (vt0.c0) AND (x'')), (NULL IN ()))) ORDER BY ((CAST(v0.c0 AS BLOB))<(((vt0.c0)OR(vt0.c1)))) DESC  NULLS FIRST, CASE WHEN ((vt0.c1)<(vt0.c0)) THEN ((vt0.c0)+(vt0.c1)) ELSE vt0.c1 COLLATE BINARY END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((v0.c0) NOT BETWEEN (vt0.c0) AND (x'')), (NULL IN ()))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c0 AS BLOB))<(((vt0.c0)OR(vt0.c1)))) DESC  NULLS FIRST, CASE WHEN ((vt0.c1)<(vt0.c0)) THEN ((vt0.c0)+(vt0.c1)) ELSE vt0.c1 COLLATE BINARY END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((vt0.c1)/(vt0.c0)))>=((~ (vt0.c1)))) WHERE ((((NOT (vt0.c1))) NOTNULL)) ORDER BY CAST(((t0.c68) NOT NULL) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt0.c1)/(vt0.c0)))>=((~ (vt0.c1)))) ORDER BY CAST(((t0.c68) NOT NULL) AS INTEGER) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((vt0.c1)/(vt0.c0)))>=((~ (vt0.c1)))) WHERE ((((NOT (vt0.c1))) NOTNULL)) ORDER BY CAST(((t0.c68) NOT NULL) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt0.c1)/(vt0.c0)))>=((~ (vt0.c1)))) ORDER BY CAST(((t0.c68) NOT NULL) AS INTEGER) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((vt0.c1)/(vt0.c0)))>=((~ (vt0.c1)))) WHERE ((((NOT (vt0.c1))) NOTNULL)) ORDER BY CAST(((t0.c68) NOT NULL) AS INTEGER) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((vt0.c1) NOTNULL)) IS TRUE)) ORDER BY CAST(v0.c0 COLLATE NOCASE AS REAL) ASC  NULLS FIRST, (((((((vt0.c1, vt0.c0, vt0.c1))<=((v0.c0, v0.c0, t0.c68))))OR(((t0.c68)<<(-181286)))))OR(((vt0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CAST(v0.c0 COLLATE NOCASE AS REAL) ASC  NULLS FIRST, (((((((vt0.c1, vt0.c0, vt0.c1))<=((v0.c0, v0.c0, t0.c68))))OR(((t0.c68)<<(-181286)))))OR(((vt0.c1) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((vt0.c1) NOTNULL)) IS TRUE)) ORDER BY CAST(v0.c0 COLLATE NOCASE AS REAL) ASC  NULLS FIRST, (((((((vt0.c1, vt0.c0, vt0.c1))<=((v0.c0, v0.c0, t0.c68))))OR(((t0.c68)<<(-181286)))))OR(((vt0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CAST(v0.c0 COLLATE NOCASE AS REAL) ASC  NULLS FIRST, (((((((vt0.c1, vt0.c0, vt0.c1))<=((v0.c0, v0.c0, t0.c68))))OR(((t0.c68)<<(-181286)))))OR(((vt0.c1) NOT NULL))) ASC);
SELECT * FROM vt0, t0, v0 WHERE ((((((t0.c68)) BETWEEN ((v0.c0)) AND ((NULL)))) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)) BETWEEN ((v0.c0)) AND ((NULL)))) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE ((((((t0.c68)) BETWEEN ((v0.c0)) AND ((NULL)))) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)) BETWEEN ((v0.c0)) AND ((NULL)))) NOT BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, v0, t0 WHERE (((+ (v0.c0)) IN ())) ORDER BY CASE ((v0.c0) BETWEEN ('4.\n') AND (v0.c0))  WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (NOT ('197902739')) END;
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CASE ((v0.c0) BETWEEN ('4.\n') AND (v0.c0))  WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (NOT ('197902739')) END);
SELECT ALL * FROM vt0, v0, t0 WHERE (((+ (v0.c0)) IN ())) ORDER BY CASE ((v0.c0) BETWEEN ('4.\n') AND (v0.c0))  WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (NOT ('197902739')) END;
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY CASE ((v0.c0) BETWEEN ('4.\n') AND (v0.c0))  WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (NOT ('197902739')) END);
SELECT * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0))) ORDER BY ((((v0.c0))<=((v0.c0))) IN ())  NULLS FIRST, CASE v0.c0 COLLATE RTRIM  WHEN CAST(v0.c0 AS INTEGER) THEN x'c53adca9' WHEN json_type(v0.c0) THEN v0.c0 WHEN v0.c0 THEN ((v0.c0) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0))<=((v0.c0))) IN ())  NULLS FIRST, CASE v0.c0 COLLATE RTRIM  WHEN CAST(v0.c0 AS INTEGER) THEN x'c53adca9' WHEN json_type(v0.c0) THEN v0.c0 WHEN v0.c0 THEN ((v0.c0) ISNULL) END  NULLS LAST);
SELECT * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0))) ORDER BY ((((v0.c0))<=((v0.c0))) IN ())  NULLS FIRST, CASE v0.c0 COLLATE RTRIM  WHEN CAST(v0.c0 AS INTEGER) THEN x'c53adca9' WHEN json_type(v0.c0) THEN v0.c0 WHEN v0.c0 THEN ((v0.c0) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0))<=((v0.c0))) IN ())  NULLS FIRST, CASE v0.c0 COLLATE RTRIM  WHEN CAST(v0.c0 AS INTEGER) THEN x'c53adca9' WHEN json_type(v0.c0) THEN v0.c0 WHEN v0.c0 THEN ((v0.c0) ISNULL) END  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE ((~ (((NULL) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((NULL) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((~ (((NULL) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((NULL) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (CAST(((((((((vt0.c1)OR(t0.c68)))OR(v0.c0)))OR(vt0.c0)))OR(t0.c68)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c1)OR(t0.c68)))OR(v0.c0)))OR(vt0.c0)))OR(t0.c68)) AS INTEGER)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (CAST(((((((((vt0.c1)OR(t0.c68)))OR(v0.c0)))OR(vt0.c0)))OR(t0.c68)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c1)OR(t0.c68)))OR(v0.c0)))OR(vt0.c0)))OR(t0.c68)) AS INTEGER)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM vt0, t0 CROSS JOIN v0 ON ((CASE v0.c0  WHEN t0.c68 THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) BETWEEN (DATE(vt0.c0, vt0.c0, vt0.c1, t0.c68, vt0.c0)) AND ((v0.c0 IN ()))) WHERE ('}媆/pV0!R') ORDER BY ((t0.c68)&((~ ('*C诛I'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('}媆/pV0!R') IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON ((CASE v0.c0  WHEN t0.c68 THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) BETWEEN (DATE(vt0.c0, vt0.c0, vt0.c1, t0.c68, vt0.c0)) AND ((v0.c0 IN ()))) ORDER BY ((t0.c68)&((~ ('*C诛I'))))  NULLS LAST);
SELECT * FROM vt0, t0 CROSS JOIN v0 ON ((CASE v0.c0  WHEN t0.c68 THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) BETWEEN (DATE(vt0.c0, vt0.c0, vt0.c1, t0.c68, vt0.c0)) AND ((v0.c0 IN ()))) WHERE ('}媆/pV0!R') ORDER BY ((t0.c68)&((~ ('*C诛I'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('}媆/pV0!R') IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON ((CASE v0.c0  WHEN t0.c68 THEN t0.c68 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) BETWEEN (DATE(vt0.c0, vt0.c0, vt0.c1, t0.c68, vt0.c0)) AND ((v0.c0 IN ()))) ORDER BY ((t0.c68)&((~ ('*C诛I'))))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((~ (LOWER(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (LOWER(v0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((~ (LOWER(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (LOWER(v0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0)<>(vt0.c0)))<<((('Wk[[9')>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(vt0.c0)))<<((('Wk[[9')>=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0)<>(vt0.c0)))<<((('Wk[[9')>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(vt0.c0)))<<((('Wk[[9')>=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0)<>(vt0.c0)))<<((('Wk[[9')>=(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((vt0.c1 IN ())) BETWEEN ((NOT (t0.c68))) AND ((0X392df5da IN ())))) ORDER BY (NOT (CAST(t0.c68 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) BETWEEN ((NOT (t0.c68))) AND ((0X392df5da IN ())))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (NOT (CAST(t0.c68 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((vt0.c1 IN ())) BETWEEN ((NOT (t0.c68))) AND ((0X392df5da IN ())))) ORDER BY (NOT (CAST(t0.c68 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) BETWEEN ((NOT (t0.c68))) AND ((0X392df5da IN ())))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (NOT (CAST(t0.c68 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((vt0.c1 IN ())) BETWEEN ((NOT (t0.c68))) AND ((0X392df5da IN ())))) ORDER BY (NOT (CAST(t0.c68 AS INTEGER))) ASC;
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON (NOT (CAST(x'8a29' AS INTEGER))) WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON (NOT (CAST(x'8a29' AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON (NOT (CAST(x'8a29' AS INTEGER))) WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON (NOT (CAST(x'8a29' AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON (NOT (CAST(x'8a29' AS INTEGER))) WHERE ((v0.c0 IN ()));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c68)%(v0.c0)) IN ()) WHERE (((((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))), v0.c0, (+ (585076951)), (v0.c0 IN ()), ((v0.c0)>=(v0.c0)), t0.c68, ((((v0.c0)OR('Q')))OR('5z'))))<>(((~ (t0.c68)), ((v0.c0)<(t0.c68)), (~ (t0.c68)), ((t0.c68)-(v0.c0)), CASE WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN v0.c0 END, v0.c0 COLLATE RTRIM, CASE WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)))) ORDER BY 'R_M\r阶HCG.'  NULLS LAST, ((-9.4490961E7)%((t0.c68 IN (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))), v0.c0, (+ (585076951)), (v0.c0 IN ()), ((v0.c0)>=(v0.c0)), t0.c68, ((((v0.c0)OR('Q')))OR('5z'))))!=(((~ (t0.c68)), ((v0.c0)<(t0.c68)), (~ (t0.c68)), ((t0.c68)-(v0.c0)), CASE WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN v0.c0 END, v0.c0 COLLATE RTRIM, CASE WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c68)%(v0.c0)) IN ()) ORDER BY 'R_M\r阶HCG.'  NULLS LAST, ((-9.4490961E7)%((t0.c68 IN (v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c68)%(v0.c0)) IN ()) WHERE (((((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))), v0.c0, (+ (585076951)), (v0.c0 IN ()), ((v0.c0)>=(v0.c0)), t0.c68, ((((v0.c0)OR('Q')))OR('5z'))))<>(((~ (t0.c68)), ((v0.c0)<(t0.c68)), (~ (t0.c68)), ((t0.c68)-(v0.c0)), CASE WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN v0.c0 END, v0.c0 COLLATE RTRIM, CASE WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)))) ORDER BY 'R_M\r阶HCG.'  NULLS LAST, ((-9.4490961E7)%((t0.c68 IN (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))), v0.c0, (+ (585076951)), (v0.c0 IN ()), ((v0.c0)>=(v0.c0)), t0.c68, ((((v0.c0)OR('Q')))OR('5z'))))!=(((~ (t0.c68)), ((v0.c0)<(t0.c68)), (~ (t0.c68)), ((t0.c68)-(v0.c0)), CASE WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN v0.c0 END, v0.c0 COLLATE RTRIM, CASE WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c68)%(v0.c0)) IN ()) ORDER BY 'R_M\r阶HCG.'  NULLS LAST, ((-9.4490961E7)%((t0.c68 IN (v0.c0)))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0))=((v0.c0))) IN (v0.c0 COLLATE RTRIM, (((('-1959287235')OR(x'f57ce963')))OR(v0.c0))))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0))=((v0.c0))) IN (v0.c0 COLLATE RTRIM, (((('-1959287235')OR(x'f57ce963')))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0))=((v0.c0))) IN (v0.c0 COLLATE RTRIM, (((('-1959287235')OR(x'f57ce963')))OR(v0.c0))))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0))=((v0.c0))) IN (v0.c0 COLLATE RTRIM, (((('-1959287235')OR(x'f57ce963')))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)GLOB(v0.c0))  WHEN ((v0.c0)LIKE(v0.c0)) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) ORDER BY CAST(v0.c0 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)GLOB(v0.c0))  WHEN ((v0.c0)LIKE(v0.c0)) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)GLOB(v0.c0))  WHEN ((v0.c0)LIKE(v0.c0)) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) ORDER BY CAST(v0.c0 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)GLOB(v0.c0))  WHEN ((v0.c0)LIKE(v0.c0)) THEN (v0.c0 IN (v0.c0, v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM t0, vt0, v0 WHERE (CAST((~ (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (CAST((~ (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM vt0, t0, v0 WHERE ((((t0.c68) IS FALSE) IN (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68) IS FALSE) IN (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE ((((t0.c68) IS FALSE) IN (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68) IS FALSE) IN (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM t0 WHERE ((NOT (t0.c68 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c68 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (t0.c68 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c68 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (t0.c68 COLLATE BINARY)));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((((0.9595865527495396, t0.c68, v0.c0))<((t0.c68, vt0.c1, vt0.c0))))) AND ((CAST(vt0.c1 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((((0.9595865527495396, t0.c68, v0.c0))<((t0.c68, vt0.c1, vt0.c0))))) AND ((CAST(vt0.c1 AS INTEGER))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((((0.9595865527495396, t0.c68, v0.c0))<((t0.c68, vt0.c1, vt0.c0))))) AND ((CAST(vt0.c1 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((((0.9595865527495396, t0.c68, v0.c0))<((t0.c68, vt0.c1, vt0.c0))))) AND ((CAST(vt0.c1 AS INTEGER))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM v0 WHERE (((((- (v0.c0))))>((CAST(v0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (v0.c0))))>((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((- (v0.c0))))>((CAST(v0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (v0.c0))))>((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0, t0 WHERE (((((((v0.c0)AND(t0.c68)))OR(t0.c68))) BETWEEN ((((v0.c0, v0.c0, t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68, v0.c0, t0.c68)) AND ((t0.c68, t0.c68, v0.c0, v0.c0, v0.c0)))) AND (CAST(v0.c0 AS REAL)))) ORDER BY CAST(HEX(DISTINCT t0.c68) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(t0.c68)))OR(t0.c68))) BETWEEN ((((v0.c0, v0.c0, t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68, v0.c0, t0.c68)) AND ((t0.c68, t0.c68, v0.c0, v0.c0, v0.c0)))) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(HEX(DISTINCT t0.c68) AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (((((((v0.c0)AND(t0.c68)))OR(t0.c68))) BETWEEN ((((v0.c0, v0.c0, t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68, v0.c0, t0.c68)) AND ((t0.c68, t0.c68, v0.c0, v0.c0, v0.c0)))) AND (CAST(v0.c0 AS REAL)))) ORDER BY CAST(HEX(DISTINCT t0.c68) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(t0.c68)))OR(t0.c68))) BETWEEN ((((v0.c0, v0.c0, t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68, v0.c0, t0.c68)) AND ((t0.c68, t0.c68, v0.c0, v0.c0, v0.c0)))) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(HEX(DISTINCT t0.c68) AS REAL) DESC  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (t0.c68) ORDER BY CASE WHEN (- (v0.c0)) THEN ((t0.c68) NOT NULL) ELSE (((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))) END DESC;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN (- (v0.c0)) THEN ((t0.c68) NOT NULL) ELSE (((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))) END DESC);
SELECT * FROM v0, t0 WHERE (t0.c68) ORDER BY CASE WHEN (- (v0.c0)) THEN ((t0.c68) NOT NULL) ELSE (((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))) END DESC;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN (- (v0.c0)) THEN ((t0.c68) NOT NULL) ELSE (((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))) END DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))==(((t0.c68) ISNULL)))) ORDER BY ((((t0.c68)>=(t0.c68))) NOT BETWEEN (TRIM(t0.c68)) AND (t0.c68))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))==(((t0.c68) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)>=(t0.c68))) NOT BETWEEN (TRIM(t0.c68)) AND (t0.c68))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))==(((t0.c68) ISNULL)))) ORDER BY ((((t0.c68)>=(t0.c68))) NOT BETWEEN (TRIM(t0.c68)) AND (t0.c68))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))==(((t0.c68) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)>=(t0.c68))) NOT BETWEEN (TRIM(t0.c68)) AND (t0.c68))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))==(((t0.c68) ISNULL)))) ORDER BY ((((t0.c68)>=(t0.c68))) NOT BETWEEN (TRIM(t0.c68)) AND (t0.c68))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((v0.c0 IN ()))&(((((((((((((v0.c0)AND(t0.c68)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))&(((((((((((((v0.c0)AND(t0.c68)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((v0.c0 IN ()))&(((((((((((((v0.c0)AND(t0.c68)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))&(((((((((((((v0.c0)AND(t0.c68)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0 WHERE ((((x'', t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, ((t0.c68)IS NOT(t0.c68)), NULLIF(t0.c68, t0.c68))) AND (((~ (t0.c68)), ((t0.c68)IS NOT(x'')), ((t0.c68)/(t0.c68))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, ((t0.c68)IS NOT(t0.c68)), NULLIF(t0.c68, t0.c68))) AND (((~ (t0.c68)), ((t0.c68)IS NOT(x'')), ((t0.c68)/(t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((x'', t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, ((t0.c68)IS NOT(t0.c68)), NULLIF(t0.c68, t0.c68))) AND (((~ (t0.c68)), ((t0.c68)IS NOT(x'')), ((t0.c68)/(t0.c68))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, ((t0.c68)IS NOT(t0.c68)), NULLIF(t0.c68, t0.c68))) AND (((~ (t0.c68)), ((t0.c68)IS NOT(x'')), ((t0.c68)/(t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((x'', t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, ((t0.c68)IS NOT(t0.c68)), NULLIF(t0.c68, t0.c68))) AND (((~ (t0.c68)), ((t0.c68)IS NOT(x'')), ((t0.c68)/(t0.c68))))));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1) NOTNULL) WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY vt0.c1 ASC  NULLS LAST, 774684198  NULLS FIRST, LOWER(DISTINCT (~ (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1) NOTNULL) ORDER BY vt0.c1 ASC  NULLS LAST, 774684198  NULLS FIRST, LOWER(DISTINCT (~ (vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1) NOTNULL) WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY vt0.c1 ASC  NULLS LAST, 774684198  NULLS FIRST, LOWER(DISTINCT (~ (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1) NOTNULL) ORDER BY vt0.c1 ASC  NULLS LAST, 774684198  NULLS FIRST, LOWER(DISTINCT (~ (vt0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((v0.c0)+(t0.c68)) COLLATE RTRIM) ORDER BY (x'' IN ()), CAST((t0.c68 IN ()) AS NUMERIC), ((((t0.c68) NOT BETWEEN (vt0.c1) AND (t0.c68)))GLOB(((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)+(t0.c68)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (x'' IN ()), CAST((t0.c68 IN ()) AS NUMERIC), ((((t0.c68) NOT BETWEEN (vt0.c1) AND (t0.c68)))GLOB(((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1)))) ASC);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((v0.c0)+(t0.c68)) COLLATE RTRIM) ORDER BY (x'' IN ()), CAST((t0.c68 IN ()) AS NUMERIC), ((((t0.c68) NOT BETWEEN (vt0.c1) AND (t0.c68)))GLOB(((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)+(t0.c68)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (x'' IN ()), CAST((t0.c68 IN ()) AS NUMERIC), ((((t0.c68) NOT BETWEEN (vt0.c1) AND (t0.c68)))GLOB(((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1)))) ASC);
SELECT * FROM t0 WHERE ((((- ('-1897879507')))&(((t0.c68) IS TRUE)))) ORDER BY CASE DATE(t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)  WHEN CASE WHEN 0.31590428332778653 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END THEN '' END;
SELECT SUM(count) FROM (SELECT ALL (((((- ('-1897879507')))&(((t0.c68) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY CASE DATE(t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)  WHEN CASE WHEN 0.31590428332778653 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END THEN '' END);
SELECT * FROM t0 WHERE ((((- ('-1897879507')))&(((t0.c68) IS TRUE)))) ORDER BY CASE DATE(t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)  WHEN CASE WHEN 0.31590428332778653 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END THEN '' END;
SELECT SUM(count) FROM (SELECT ALL (((((- ('-1897879507')))&(((t0.c68) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY CASE DATE(t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)  WHEN CASE WHEN 0.31590428332778653 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END THEN '' END);
SELECT * FROM t0 WHERE ((((- ('-1897879507')))&(((t0.c68) IS TRUE)))) ORDER BY CASE DATE(t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)  WHEN CASE WHEN 0.31590428332778653 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END THEN '' END;
SELECT ALL * FROM vt0, t0 WHERE (NULL) ORDER BY (((t0.c68 IN ()))GLOB((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c68 IN ()))GLOB((~ (vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (NULL) ORDER BY (((t0.c68 IN ()))GLOB((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c68 IN ()))GLOB((~ (vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (NULL) ORDER BY (((t0.c68 IN ()))GLOB((~ (vt0.c0))));
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1) BETWEEN (t0.c68) AND (vt0.c0)) COLLATE BINARY WHERE ('.[r6j ') ORDER BY ((TRIM(t0.c68))&(((vt0.c1) BETWEEN (0.7571609136224996) AND (t0.c68)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('.[r6j ') IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1) BETWEEN (t0.c68) AND (vt0.c0)) COLLATE BINARY ORDER BY ((TRIM(t0.c68))&(((vt0.c1) BETWEEN (0.7571609136224996) AND (t0.c68)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1) BETWEEN (t0.c68) AND (vt0.c0)) COLLATE BINARY WHERE ('.[r6j ') ORDER BY ((TRIM(t0.c68))&(((vt0.c1) BETWEEN (0.7571609136224996) AND (t0.c68)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('.[r6j ') IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1) BETWEEN (t0.c68) AND (vt0.c0)) COLLATE BINARY ORDER BY ((TRIM(t0.c68))&(((vt0.c1) BETWEEN (0.7571609136224996) AND (t0.c68)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1) BETWEEN (t0.c68) AND (vt0.c0)) COLLATE BINARY WHERE ('.[r6j ') ORDER BY ((TRIM(t0.c68))&(((vt0.c1) BETWEEN (0.7571609136224996) AND (t0.c68)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0, t0 WHERE ((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END IN ((- (v0.c0))))) ORDER BY vt0.c1, 0.18358221065325597 DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END IN ((- (v0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY vt0.c1, 0.18358221065325597 DESC);
SELECT ALL * FROM vt0, v0, t0 WHERE ((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END IN ((- (v0.c0))))) ORDER BY vt0.c1, 0.18358221065325597 DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END IN ((- (v0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY vt0.c1, 0.18358221065325597 DESC);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL))+((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))+((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL))+((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))+((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))>=((NOT (v0.c0))))) ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN 0.2344475711640277 THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN '-201652379' THEN t0.c68 ELSE v0.c0 END END, NULLIF((+ (t0.c68)), (NOT (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))>=((NOT (v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN 0.2344475711640277 THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN '-201652379' THEN t0.c68 ELSE v0.c0 END END, NULLIF((+ (t0.c68)), (NOT (v0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))>=((NOT (v0.c0))))) ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN 0.2344475711640277 THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN '-201652379' THEN t0.c68 ELSE v0.c0 END END, NULLIF((+ (t0.c68)), (NOT (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))>=((NOT (v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN 0.2344475711640277 THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN '-201652379' THEN t0.c68 ELSE v0.c0 END END, NULLIF((+ (t0.c68)), (NOT (v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((UPPER(v0.c0))|(-2.01652379E8))) ORDER BY (((~ (NULL)))AND(CASE WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(v0.c0))|(-2.01652379E8))) IS TRUE)  as count FROM v0 ORDER BY (((~ (NULL)))AND(CASE WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((UPPER(v0.c0))|(-2.01652379E8))) ORDER BY (((~ (NULL)))AND(CASE WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(v0.c0))|(-2.01652379E8))) IS TRUE)  as count FROM v0 ORDER BY (((~ (NULL)))AND(CASE WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN v0.c0 THEN ABS(v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) IS FALSE)  WHEN v0.c0 THEN ABS(v0.c0) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN v0.c0 THEN ABS(v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) IS FALSE)  WHEN v0.c0 THEN ABS(v0.c0) END) IS TRUE)  as count FROM v0);
SELECT * FROM vt0, v0, t0 WHERE (((((vt0.c1)LIKE(''))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)LIKE(''))) ISNULL)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((((vt0.c1)LIKE(''))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)LIKE(''))) ISNULL)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((((vt0.c1)LIKE(''))) ISNULL));
SELECT * FROM vt0 WHERE ((((((vt0.c1))<=((vt0.c1)))) BETWEEN ((vt0.c0 IN ())) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<=((vt0.c1)))) BETWEEN ((vt0.c0 IN ())) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1))<=((vt0.c1)))) BETWEEN ((vt0.c0 IN ())) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<=((vt0.c1)))) BETWEEN ((vt0.c0 IN ())) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1))<=((vt0.c1)))) BETWEEN ((vt0.c0 IN ())) AND ((- (vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LAST_INSERT_ROWID());
SELECT ALL * FROM vt0 WHERE (CASE LIKE('TJCP', vt0.c0, '~')  WHEN ((vt0.c1)<<(vt0.c1)) THEN ((vt0.c0)>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKE('TJCP', vt0.c0, '~')  WHEN ((vt0.c1)<<(vt0.c1)) THEN ((vt0.c0)>(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE LIKE('TJCP', vt0.c0, '~')  WHEN ((vt0.c1)<<(vt0.c1)) THEN ((vt0.c0)>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKE('TJCP', vt0.c0, '~')  WHEN ((vt0.c1)<<(vt0.c1)) THEN ((vt0.c0)>(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE LIKE('TJCP', vt0.c0, '~')  WHEN ((vt0.c1)<<(vt0.c1)) THEN ((vt0.c0)>(vt0.c1)) END);
SELECT * FROM v0, vt0, t0 WHERE ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT NULL)) ORDER BY vt0.c0 DESC, ((((vt0.c1))!=((vt0.c1))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY vt0.c0 DESC, ((((vt0.c1))<>((vt0.c1))) IN ()) ASC);
SELECT * FROM v0, vt0, t0 WHERE ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT NULL)) ORDER BY vt0.c0 DESC, ((((vt0.c1))!=((vt0.c1))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY vt0.c0 DESC, ((((vt0.c1))<>((vt0.c1))) IN ()) ASC);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN t0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c1) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) BETWEEN (vt0.c1) AND (t0.c68))))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN t0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c1) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) BETWEEN (vt0.c1) AND (t0.c68))))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN t0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c1) AND (t0.c68)))));
SELECT ALL * FROM t0 INDEXED BY i55, vt0, v0 WHERE (((NULLIF(v0.c0, vt0.c0))>(((vt0.c1)-(vt0.c1))))) ORDER BY (((((vt0.c0) ISNULL)))<((x'f028')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(v0.c0, vt0.c0))>(((vt0.c1)-(vt0.c1))))) IS TRUE)  as count FROM t0 INDEXED BY i55, vt0, v0 ORDER BY (((((vt0.c0) ISNULL)))<((x'f028')))  NULLS FIRST);
SELECT ALL * FROM t0 INDEXED BY i55, vt0, v0 WHERE (((NULLIF(v0.c0, vt0.c0))>(((vt0.c1)-(vt0.c1))))) ORDER BY (((((vt0.c0) ISNULL)))<((x'f028')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(v0.c0, vt0.c0))>(((vt0.c1)-(vt0.c1))))) IS TRUE)  as count FROM t0 INDEXED BY i55, vt0, v0 ORDER BY (((((vt0.c0) ISNULL)))<((x'f028')))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (x''))) ORDER BY ((vt0.c1) NOT NULL) ASC  NULLS LAST, (NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) NOT NULL) ASC  NULLS LAST, (NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (x''))) ORDER BY ((vt0.c1) NOT NULL) ASC  NULLS LAST, (NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) NOT NULL) ASC  NULLS LAST, (NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (x''))) ORDER BY ((vt0.c1) NOT NULL) ASC  NULLS LAST, (NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY NULL DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((t0.c68 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c68 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c68 IN ()));
SELECT ALL * FROM t0, vt0, v0 WHERE ((~ (((t0.c68)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c68)*(v0.c0))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((~ (((t0.c68)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c68)*(v0.c0))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (TRIM(((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) IS TRUE))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (TRIM(((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) IS TRUE))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (TRIM(((vt0.c0) IS TRUE)));
SELECT ALL * FROM vt0, v0, t0 WHERE (((-2.36082795E8)>>(((0.587409218825409) BETWEEN (t0.c68) AND (0.5984786151239748))))) ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(t0.c68)))<>(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((-2.36082795E8)>>(((0.587409218825409) BETWEEN (t0.c68) AND (0.5984786151239748))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, t0 ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(t0.c68)))<>(vt0.c0)));
SELECT ALL * FROM vt0, v0, t0 WHERE (((-2.36082795E8)>>(((0.587409218825409) BETWEEN (t0.c68) AND (0.5984786151239748))))) ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(t0.c68)))<>(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((-2.36082795E8)>>(((0.587409218825409) BETWEEN (t0.c68) AND (0.5984786151239748))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, t0 ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(t0.c68)))<>(vt0.c0)));
SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0xfffffffffd285f56, v0.c0, v0.c0)))))) ORDER BY '' ASC  NULLS FIRST, ((((x'')<<(v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (IFNULL(DISTINCT v0.c0, v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS INTEGER))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0Xfffffffffd285f56, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY '' ASC  NULLS FIRST, ((((x'')<<(v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (IFNULL(DISTINCT v0.c0, v0.c0))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0xfffffffffd285f56, v0.c0, v0.c0)))))) ORDER BY '' ASC  NULLS FIRST, ((((x'')<<(v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (IFNULL(DISTINCT v0.c0, v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS INTEGER))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0Xfffffffffd285f56, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY '' ASC  NULLS FIRST, ((((x'')<<(v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (IFNULL(DISTINCT v0.c0, v0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END COLLATE RTRIM) ORDER BY ((v0.c0)*(vt0.c1)) COLLATE NOCASE DESC, (+ (((vt0.c1)+(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0)*(vt0.c1)) COLLATE NOCASE DESC, (+ (((vt0.c1)+(vt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END COLLATE RTRIM) ORDER BY ((v0.c0)*(vt0.c1)) COLLATE NOCASE DESC, (+ (((vt0.c1)+(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0)*(vt0.c1)) COLLATE NOCASE DESC, (+ (((vt0.c1)+(vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((vt0.c1 IN ())) NOT BETWEEN (((((((((t0.c68)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR(vt0.c0))) AND ((((t0.c68))!=((t0.c68)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1 IN ())) NOT BETWEEN (((((((((t0.c68)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR(vt0.c0))) AND ((((t0.c68))!=((t0.c68)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((vt0.c1 IN ())) NOT BETWEEN (((((((((t0.c68)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR(vt0.c0))) AND ((((t0.c68))!=((t0.c68)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1 IN ())) NOT BETWEEN (((((((((t0.c68)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR(vt0.c0))) AND ((((t0.c68))!=((t0.c68)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((vt0.c1 IN ())) NOT BETWEEN (((((((((t0.c68)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR(vt0.c0))) AND ((((t0.c68))!=((t0.c68)))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 END) NOT BETWEEN (((((((((t0.c68)OR('}Er3k')))OR(v0.c0)))OR(t0.c68)))OR(vt0.c0))) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 END) NOT BETWEEN (((((((((t0.c68)OR('}Er3k')))OR(v0.c0)))OR(t0.c68)))OR(vt0.c0))) AND (vt0.c1))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 END) NOT BETWEEN (((((((((t0.c68)OR('}Er3k')))OR(v0.c0)))OR(t0.c68)))OR(vt0.c0))) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 END) NOT BETWEEN (((((((((t0.c68)OR('}Er3k')))OR(v0.c0)))OR(t0.c68)))OR(vt0.c0))) AND (vt0.c1))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((t0.c68)AND(v0.c0)))OR(t0.c68))) NOTNULL)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c68)AND(v0.c0)))OR(t0.c68))) NOTNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((t0.c68)AND(v0.c0)))OR(t0.c68))) NOTNULL)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c68)AND(v0.c0)))OR(t0.c68))) NOTNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((((CAST(t0.c68 AS NUMERIC))OR(((vt0.c0)<(vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (vt0.c1) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((CAST(t0.c68 AS NUMERIC))OR(((vt0.c0)<(vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((((CAST(t0.c68 AS NUMERIC))OR(((vt0.c0)<(vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (vt0.c1) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((CAST(t0.c68 AS NUMERIC))OR(((vt0.c0)<(vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((((CAST(t0.c68 AS NUMERIC))OR(((vt0.c0)<(vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (vt0.c1) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((('')<<(t0.c68)))GLOB((0.7405829379729917 IN ())))) ORDER BY ((t0.c68 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('')<<(t0.c68)))GLOB((0.7405829379729917 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((('')<<(t0.c68)))GLOB((0.7405829379729917 IN ())))) ORDER BY ((t0.c68 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('')<<(t0.c68)))GLOB((0.7405829379729917 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((('')<<(t0.c68)))GLOB((0.7405829379729917 IN ())))) ORDER BY ((t0.c68 IN ()) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN t0 ON t0.c68 WHERE (CAST((((vt0.c1))=((t0.c68))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1))==((t0.c68))) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON t0.c68);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN t0 ON t0.c68 WHERE (CAST((((vt0.c1))=((t0.c68))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1))==((t0.c68))) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON t0.c68);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN t0 ON t0.c68 WHERE (CAST((((vt0.c1))=((t0.c68))) AS INTEGER));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c1)<<(v0.c0)) THEN (+ (0.8371533908035106)) WHEN x'' THEN ((vt0.c1)<<(vt0.c1)) WHEN ((vt0.c1)/(v0.c0)) THEN ((vt0.c1) NOT NULL) WHEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN vt0.c1 COLLATE NOCASE WHEN 0xfffffffff15b1cbd THEN ((vt0.c1)==(vt0.c0)) END) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(SQLITE_COMPILEOPTION_GET(0.8846901609853451)));
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN ((vt0.c1)<<(v0.c0)) THEN (+ (0.8371533908035106)) WHEN x'' THEN ((vt0.c1)<<(vt0.c1)) WHEN ((vt0.c1)/(v0.c0)) THEN ((vt0.c1) NOT NULL) WHEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN vt0.c1 COLLATE NOCASE WHEN 0Xfffffffff15b1cbd THEN ((vt0.c1)==(vt0.c0)) END) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(SQLITE_COMPILEOPTION_GET(0.8846901609853451))));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c1)<<(v0.c0)) THEN (+ (0.8371533908035106)) WHEN x'' THEN ((vt0.c1)<<(vt0.c1)) WHEN ((vt0.c1)/(v0.c0)) THEN ((vt0.c1) NOT NULL) WHEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN vt0.c1 COLLATE NOCASE WHEN 0xfffffffff15b1cbd THEN ((vt0.c1)==(vt0.c0)) END) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(SQLITE_COMPILEOPTION_GET(0.8846901609853451)));
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN ((vt0.c1)<<(v0.c0)) THEN (+ (0.8371533908035106)) WHEN x'' THEN ((vt0.c1)<<(vt0.c1)) WHEN ((vt0.c1)/(v0.c0)) THEN ((vt0.c1) NOT NULL) WHEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN vt0.c1 COLLATE NOCASE WHEN 0Xfffffffff15b1cbd THEN ((vt0.c1)==(vt0.c0)) END) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(SQLITE_COMPILEOPTION_GET(0.8846901609853451))));
SELECT ALL COUNT(*) FROM t0 WHERE ('\');
SELECT SUM(count) FROM (SELECT (('\') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('\');
SELECT SUM(count) FROM (SELECT (('\') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('\');
SELECT * FROM vt0, v0 WHERE ((~ ((('t(2[6>(<8')<(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((('t(2[6>(<8')<(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((~ ((('t(2[6>(<8')<(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((('t(2[6>(<8')<(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM v0, t0 WHERE ((- ((t0.c68 IN ())))) ORDER BY t0.c68 DESC, t0.c68  NULLS FIRST, CAST((- (v0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((t0.c68 IN ())))) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c68 DESC, t0.c68  NULLS FIRST, CAST((- (v0.c0)) AS BLOB)  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((- ((t0.c68 IN ())))) ORDER BY t0.c68 DESC, t0.c68  NULLS FIRST, CAST((- (v0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((t0.c68 IN ())))) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c68 DESC, t0.c68  NULLS FIRST, CAST((- (v0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((((vt0.c0)GLOB(vt0.c1))))>=((CASE WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)GLOB(vt0.c1))))>=((CASE WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((((vt0.c0)GLOB(vt0.c1))))>=((CASE WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)GLOB(vt0.c1))))>=((CASE WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)==(t0.c68))) BETWEEN ((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68)))) AND (t0.c68))) ORDER BY CASE json_array(t0.c68, t0.c68)  WHEN CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN 0xffffffffd9f6d5f7 END THEN (~ (t0.c68)) ELSE 0x3c93cf63 END, CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE BINARY, ((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c68)==(t0.c68))) BETWEEN ((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68)))) AND (t0.c68))) IS TRUE)  as count FROM t0 ORDER BY CASE json_array(t0.c68, t0.c68)  WHEN CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN 0Xffffffffd9f6d5f7 END THEN (~ (t0.c68)) ELSE 0x3c93cf63 END, CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE BINARY, ((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)==(t0.c68))) BETWEEN ((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68)))) AND (t0.c68))) ORDER BY CASE json_array(t0.c68, t0.c68)  WHEN CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN 0xffffffffd9f6d5f7 END THEN (~ (t0.c68)) ELSE 0x3c93cf63 END, CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE BINARY, ((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c68)==(t0.c68))) BETWEEN ((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68)))) AND (t0.c68))) IS TRUE)  as count FROM t0 ORDER BY CASE json_array(t0.c68, t0.c68)  WHEN CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN 0Xffffffffd9f6d5f7 END THEN (~ (t0.c68)) ELSE 0x3c93cf63 END, CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE BINARY, ((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))) IN ()) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0 IN ())))=(((((v0.c0))>((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN ())))==(((((v0.c0))>((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0 IN ())))=(((((v0.c0))>((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN ())))==(((((v0.c0))>((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT * FROM t0, vt0 WHERE ((((NOT (t0.c68))) BETWEEN (0xffffffffbc832464) AND ('✲쳑')));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c68))) BETWEEN (0xffffffffbc832464) AND ('✲쳑'))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((NOT (t0.c68))) BETWEEN (0xffffffffbc832464) AND ('✲쳑')));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c68))) BETWEEN (0xffffffffbc832464) AND ('✲쳑'))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((NOT (t0.c68))) BETWEEN (0xffffffffbc832464) AND ('✲쳑')));
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c0)>>(t0.c68))) BETWEEN (((((v0.c0)AND(t0.c68)))OR(NULL))) AND (CASE t0.c68  WHEN v0.c0 THEN v0.c0 ELSE NULL END))) ORDER BY t0.c68;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(t0.c68))) BETWEEN (((((v0.c0)AND(t0.c68)))OR(NULL))) AND (CASE t0.c68  WHEN v0.c0 THEN v0.c0 ELSE NULL END))) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c68);
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c0)>>(t0.c68))) BETWEEN (((((v0.c0)AND(t0.c68)))OR(NULL))) AND (CASE t0.c68  WHEN v0.c0 THEN v0.c0 ELSE NULL END))) ORDER BY t0.c68;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(t0.c68))) BETWEEN (((((v0.c0)AND(t0.c68)))OR(NULL))) AND (CASE t0.c68  WHEN v0.c0 THEN v0.c0 ELSE NULL END))) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c68);
SELECT ALL * FROM t0, v0, vt0 WHERE (CASE (+ (v0.c0))  WHEN ((v0.c0)>(vt0.c0)) THEN (~ ('')) END) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(t0.c68)))OR(v0.c0))) NOT BETWEEN (CAST(t0.c68 AS TEXT)) AND (((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (v0.c0))  WHEN ((v0.c0)>(vt0.c0)) THEN (~ ('')) END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(t0.c68)))OR(v0.c0))) NOT BETWEEN (CAST(t0.c68 AS TEXT)) AND (((vt0.c0)IS(vt0.c0)))));
SELECT ALL * FROM t0, v0, vt0 WHERE (CASE (+ (v0.c0))  WHEN ((v0.c0)>(vt0.c0)) THEN (~ ('')) END) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(t0.c68)))OR(v0.c0))) NOT BETWEEN (CAST(t0.c68 AS TEXT)) AND (((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (v0.c0))  WHEN ((v0.c0)>(vt0.c0)) THEN (~ ('')) END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(t0.c68)))OR(v0.c0))) NOT BETWEEN (CAST(t0.c68 AS TEXT)) AND (((vt0.c0)IS(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68)))AND(((v0.c0) NOT BETWEEN (t0.c68) AND (v0.c0)))))OR(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68)))AND(((v0.c0) NOT BETWEEN (t0.c68) AND (v0.c0)))))OR(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68)))AND(((v0.c0) NOT BETWEEN (t0.c68) AND (v0.c0)))))OR(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68)))AND(((v0.c0) NOT BETWEEN (t0.c68) AND (v0.c0)))))OR(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM vt0, v0, t0 NOT INDEXED WHERE (((((((v0.c0)IS(vt0.c0)))AND(((((t0.c68)OR(v0.c0)))OR(t0.c68)))))AND(((vt0.c1)!=('-1169926990')))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)IS(vt0.c0)))AND(((((t0.c68)OR(v0.c0)))OR(t0.c68)))))AND(((vt0.c1)<>('-1169926990'))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 NOT INDEXED WHERE (((((((v0.c0)IS(vt0.c0)))AND(((((t0.c68)OR(v0.c0)))OR(t0.c68)))))AND(((vt0.c1)!=('-1169926990')))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)IS(vt0.c0)))AND(((((t0.c68)OR(v0.c0)))OR(t0.c68)))))AND(((vt0.c1)<>('-1169926990'))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, t0 WHERE (CASE ((x'') NOT BETWEEN ('') AND (t0.c68))  WHEN 0.0 THEN STRFTIME(t0.c68, -1902348219, NULL) WHEN ((t0.c68) NOT BETWEEN (vt0.c1) AND ('0.3609365147690943')) THEN ((t0.c68)>(x'b80b')) WHEN CASE vt0.c0  WHEN vt0.c1 THEN -1132256156 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c1 AS NUMERIC) ELSE CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') NOT BETWEEN ('') AND (t0.c68))  WHEN 0.0 THEN STRFTIME(t0.c68, -1902348219, NULL) WHEN ((t0.c68) NOT BETWEEN (vt0.c1) AND ('0.3609365147690943')) THEN ((t0.c68)>(x'b80b')) WHEN CASE vt0.c0  WHEN vt0.c1 THEN -1132256156 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c1 AS NUMERIC) ELSE CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (CASE ((x'') NOT BETWEEN ('') AND (t0.c68))  WHEN 0.0 THEN STRFTIME(t0.c68, -1902348219, NULL) WHEN ((t0.c68) NOT BETWEEN (vt0.c1) AND ('0.3609365147690943')) THEN ((t0.c68)>(x'b80b')) WHEN CASE vt0.c0  WHEN vt0.c1 THEN -1132256156 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c1 AS NUMERIC) ELSE CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') NOT BETWEEN ('') AND (t0.c68))  WHEN 0.0 THEN STRFTIME(t0.c68, -1902348219, NULL) WHEN ((t0.c68) NOT BETWEEN (vt0.c1) AND ('0.3609365147690943')) THEN ((t0.c68)>(x'b80b')) WHEN CASE vt0.c0  WHEN vt0.c1 THEN -1132256156 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c1 AS NUMERIC) ELSE CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (CASE ((x'') NOT BETWEEN ('') AND (t0.c68))  WHEN 0.0 THEN STRFTIME(t0.c68, -1902348219, NULL) WHEN ((t0.c68) NOT BETWEEN (vt0.c1) AND ('0.3609365147690943')) THEN ((t0.c68)>(x'b80b')) WHEN CASE vt0.c0  WHEN vt0.c1 THEN -1132256156 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c1 AS NUMERIC) ELSE CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c68) AND (vt0.c1))) NOT NULL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (LOWER(((vt0.c0)!=(vt0.c0)))) ORDER BY ABS(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC, (('-1885378442') ISNULL) ASC, LTRIM(IFNULL(vt0.c1, vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)<>(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ABS(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC, (('-1885378442') ISNULL) ASC, LTRIM(IFNULL(vt0.c1, vt0.c1)) ASC);
SELECT * FROM vt0 WHERE (LOWER(((vt0.c0)!=(vt0.c0)))) ORDER BY ABS(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC, (('-1885378442') ISNULL) ASC, LTRIM(IFNULL(vt0.c1, vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)<>(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ABS(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC, (('-1885378442') ISNULL) ASC, LTRIM(IFNULL(vt0.c1, vt0.c1)) ASC);
SELECT * FROM vt0 WHERE (LOWER(((vt0.c0)!=(vt0.c0)))) ORDER BY ABS(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC, (('-1885378442') ISNULL) ASC, LTRIM(IFNULL(vt0.c1, vt0.c1)) ASC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (NULL);
SELECT ALL * FROM v0, vt0 WHERE (((((((((-236082795)OR((('-623720145')>=(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND((~ (v0.c0)))))AND(((v0.c0)+(0Xffffffffae65ceb8))))) ORDER BY ((CAST(vt0.c1 AS BLOB))GLOB(0Xffffffffd07fd050)), ((((((((((((((((0.6282705237143638)AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))))AND(NULL)))OR(((NULL) IS TRUE))))OR(((vt0.c0) NOT NULL))))AND(((vt0.c1)<<(vt0.c0)))))AND(((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))))OR(LIKELIHOOD(DISTINCT v0.c0, 0.7448326697613066))))OR('1297975447')) ASC, '-1609121952'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((-236082795)OR((('-623720145')>=(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND((~ (v0.c0)))))AND(((v0.c0)+(0xffffffffae65ceb8))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(vt0.c1 AS BLOB))GLOB(0xffffffffd07fd050)), ((((((((((((((((0.6282705237143638)AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))))AND(NULL)))OR(((NULL) IS TRUE))))OR(((vt0.c0) NOT NULL))))AND(((vt0.c1)<<(vt0.c0)))))AND(((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))))OR(LIKELIHOOD(DISTINCT v0.c0, 0.7448326697613066))))OR('1297975447')) ASC, '-1609121952'  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((((((-236082795)OR((('-623720145')>=(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND((~ (v0.c0)))))AND(((v0.c0)+(0Xffffffffae65ceb8))))) ORDER BY ((CAST(vt0.c1 AS BLOB))GLOB(0Xffffffffd07fd050)), ((((((((((((((((0.6282705237143638)AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))))AND(NULL)))OR(((NULL) IS TRUE))))OR(((vt0.c0) NOT NULL))))AND(((vt0.c1)<<(vt0.c0)))))AND(((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))))OR(LIKELIHOOD(DISTINCT v0.c0, 0.7448326697613066))))OR('1297975447')) ASC, '-1609121952'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((-236082795)OR((('-623720145')>=(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))))AND((~ (v0.c0)))))AND(((v0.c0)+(0xffffffffae65ceb8))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(vt0.c1 AS BLOB))GLOB(0xffffffffd07fd050)), ((((((((((((((((0.6282705237143638)AND((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))))AND(NULL)))OR(((NULL) IS TRUE))))OR(((vt0.c0) NOT NULL))))AND(((vt0.c1)<<(vt0.c0)))))AND(((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))))OR(LIKELIHOOD(DISTINCT v0.c0, 0.7448326697613066))))OR('1297975447')) ASC, '-1609121952'  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((((((((((vt0.c1)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))OR(vt0.c0))) NOTNULL)) ORDER BY 1.006865547E9, (((~ ('-746016110'))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY 1.006865547E9, (((~ ('-746016110'))) IS TRUE));
SELECT ALL * FROM vt0, v0 WHERE (((((((((((vt0.c1)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))OR(vt0.c0))) NOTNULL)) ORDER BY 1.006865547E9, (((~ ('-746016110'))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY 1.006865547E9, (((~ ('-746016110'))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT * FROM vt0, v0 WHERE ('~Q鎶m#K\n');
SELECT SUM(count) FROM (SELECT (('~Q鎶m#K\n') IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ('~Q鎶m#K\n');
SELECT SUM(count) FROM (SELECT (('~Q鎶m#K\n') IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ('~Q鎶m#K\n');
SELECT ALL COUNT(*) FROM vt0 WHERE (((HEX(vt0.c0))<<(((vt0.c0)+(vt0.c0))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/((((0X21a7c679, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0))<<(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/((((0X21a7c679, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((HEX(vt0.c0))<<(((vt0.c0)+(vt0.c0))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/((((0X21a7c679, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0))<<(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/((((0X21a7c679, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((HEX(vt0.c0))<<(((vt0.c0)+(vt0.c0))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/((((0X21a7c679, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c1))))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, v0 WHERE (((NULL)==(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END))) ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((t0.c68)) AND ((v0.c0))) THEN ((((t0.c68)OR(vt0.c0)))AND(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((t0.c68)) AND ((v0.c0))) THEN ((((t0.c68)OR(vt0.c0)))AND(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT ALL * FROM t0, vt0, v0 WHERE (((NULL)==(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END))) ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((t0.c68)) AND ((v0.c0))) THEN ((((t0.c68)OR(vt0.c0)))AND(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((t0.c68)) AND ((v0.c0))) THEN ((((t0.c68)OR(vt0.c0)))AND(vt0.c0)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CAST((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c0, 0.4854085791753703, vt0.c1))) AS REAL) WHERE (((((((vt0.c0)OR(t0.c68)))AND(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY CAST(CHAR(vt0.c1, vt0.c1, '0.9510566875680354') AS REAL)  NULLS FIRST, HEX(CAST(x'' AS INTEGER)) ASC, IFNULL(((x'') NOTNULL), CASE t0.c68  WHEN vt0.c1 THEN t0.c68 WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(t0.c68)))AND(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c0, 0.4854085791753703, vt0.c1))) AS REAL) ORDER BY CAST(CHAR(vt0.c1, vt0.c1, '0.9510566875680354') AS REAL)  NULLS FIRST, HEX(CAST(x'' AS INTEGER)) ASC, IFNULL(((x'') NOTNULL), CASE t0.c68  WHEN vt0.c1 THEN t0.c68 WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.c1 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CAST((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c0, 0.4854085791753703, vt0.c1))) AS REAL) WHERE (((((((vt0.c0)OR(t0.c68)))AND(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY CAST(CHAR(vt0.c1, vt0.c1, '0.9510566875680354') AS REAL)  NULLS FIRST, HEX(CAST(x'' AS INTEGER)) ASC, IFNULL(((x'') NOTNULL), CASE t0.c68  WHEN vt0.c1 THEN t0.c68 WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(t0.c68)))AND(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c0, 0.4854085791753703, vt0.c1))) AS REAL) ORDER BY CAST(CHAR(vt0.c1, vt0.c1, '0.9510566875680354') AS REAL)  NULLS FIRST, HEX(CAST(x'' AS INTEGER)) ASC, IFNULL(((x'') NOTNULL), CASE t0.c68  WHEN vt0.c1 THEN t0.c68 WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.c1 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CAST((((vt0.c1, vt0.c0, vt0.c0))>((vt0.c0, 0.4854085791753703, vt0.c1))) AS REAL) WHERE (((((((vt0.c0)OR(t0.c68)))AND(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY CAST(CHAR(vt0.c1, vt0.c1, '0.9510566875680354') AS REAL)  NULLS FIRST, HEX(CAST(x'' AS INTEGER)) ASC, IFNULL(((x'') NOTNULL), CASE t0.c68  WHEN vt0.c1 THEN t0.c68 WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.c1 END)  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0 WHERE ((x'' IN ())) ORDER BY t0.c68 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c68 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE ((x'' IN ())) ORDER BY t0.c68 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c68 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE ((x'' IN ())) ORDER BY t0.c68 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c68) BETWEEN (t0.c68) AND (v0.c0)) IN (((t0.c68)*(t0.c68)), NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68) BETWEEN (t0.c68) AND (v0.c0)) IN (((t0.c68)*(t0.c68)), NULL COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c68) BETWEEN (t0.c68) AND (v0.c0)) IN (((t0.c68)*(t0.c68)), NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68) BETWEEN (t0.c68) AND (v0.c0)) IN (((t0.c68)*(t0.c68)), NULL COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT NULL)) ORDER BY ((((((vt0.c1)>=(vt0.c1)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)>=(vt0.c1)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT NULL)) ORDER BY ((((((vt0.c1)>=(vt0.c1)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)>=(vt0.c1)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT NULL)) ORDER BY ((((((vt0.c1)>=(vt0.c1)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT * FROM t0, v0 NOT INDEXED WHERE (CAST((- (v0.c0)) AS NUMERIC)) ORDER BY CAST(((v0.c0) BETWEEN (t0.c68) AND (v0.c0)) AS REAL) DESC, (((((v0.c0)AND(t0.c68)))AND(t0.c68)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((- (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((v0.c0) BETWEEN (t0.c68) AND (v0.c0)) AS REAL) DESC, (((((v0.c0)AND(t0.c68)))AND(t0.c68)) IN ()) ASC);
SELECT * FROM t0, v0 NOT INDEXED WHERE (CAST((- (v0.c0)) AS NUMERIC)) ORDER BY CAST(((v0.c0) BETWEEN (t0.c68) AND (v0.c0)) AS REAL) DESC, (((((v0.c0)AND(t0.c68)))AND(t0.c68)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((- (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((v0.c0) BETWEEN (t0.c68) AND (v0.c0)) AS REAL) DESC, (((((v0.c0)AND(t0.c68)))AND(t0.c68)) IN ()) ASC);
SELECT * FROM t0 WHERE (((UNLIKELY(DISTINCT 0.7557994469736897)) BETWEEN (CAST(t0.c68 AS INTEGER)) AND (t0.c68 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT 0.7557994469736897)) BETWEEN (CAST(t0.c68 AS INTEGER)) AND (t0.c68 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((UNLIKELY(DISTINCT 0.7557994469736897)) BETWEEN (CAST(t0.c68 AS INTEGER)) AND (t0.c68 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT 0.7557994469736897)) BETWEEN (CAST(t0.c68 AS INTEGER)) AND (t0.c68 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((UNLIKELY(DISTINCT 0.7557994469736897)) BETWEEN (CAST(t0.c68 AS INTEGER)) AND (t0.c68 COLLATE BINARY)));
SELECT ALL * FROM vt0, v0, t0 WHERE (0.2707856021716254);
SELECT SUM(count) FROM (SELECT ALL ((0.2707856021716254) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (0.2707856021716254);
SELECT SUM(count) FROM (SELECT ALL ((0.2707856021716254) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((0.9711519120363512)OR((((vt0.c0))>=((vt0.c1))))))AND(((vt0.c1)%(x'12f0'))))) ORDER BY CASE WHEN HEX(DISTINCT vt0.c0) THEN ((t0.c68)GLOB(vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.9711519120363512)OR((((vt0.c0))>=((vt0.c1))))))AND(((vt0.c1)%(x'12f0'))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE WHEN HEX(DISTINCT vt0.c0) THEN ((t0.c68)GLOB(vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) END DESC);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((0.9711519120363512)OR((((vt0.c0))>=((vt0.c1))))))AND(((vt0.c1)%(x'12f0'))))) ORDER BY CASE WHEN HEX(DISTINCT vt0.c0) THEN ((t0.c68)GLOB(vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.9711519120363512)OR((((vt0.c0))>=((vt0.c1))))))AND(((vt0.c1)%(x'12f0'))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE WHEN HEX(DISTINCT vt0.c0) THEN ((t0.c68)GLOB(vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) END DESC);
SELECT ALL * FROM vt0 WHERE (0.48561673276055184);
SELECT SUM(count) FROM (SELECT ALL ((0.48561673276055184) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.48561673276055184);
SELECT SUM(count) FROM (SELECT ALL ((0.48561673276055184) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.48561673276055184);
SELECT * FROM t0 WHERE ((((t0.c68, 0.3975395528895498, t0.c68)) NOT BETWEEN ((((t0.c68)AND(t0.c68)), t0.c68, t0.c68 COLLATE NOCASE)) AND ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), (((t0.c68, 0Xffffffffcf9c5e20, x'', t0.c68, t0.c68))==((t0.c68, t0.c68, t0.c68, 't琝郗		TcM', t0.c68))), LIKELY(DISTINCT '*왹䡁⨗'))))) ORDER BY (((((t0.c68)IS(t0.c68))))<(((+ (t0.c68)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c68, 0.3975395528895498, t0.c68)) NOT BETWEEN ((((t0.c68)AND(t0.c68)), t0.c68, t0.c68 COLLATE NOCASE)) AND ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), (((t0.c68, 0Xffffffffcf9c5e20, x'', t0.c68, t0.c68))==((t0.c68, t0.c68, t0.c68, 't琝郗		TcM', t0.c68))), LIKELY(DISTINCT '*왹䡁⨗'))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c68)IS(t0.c68))))<(((+ (t0.c68)))))  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c68, 0.3975395528895498, t0.c68)) NOT BETWEEN ((((t0.c68)AND(t0.c68)), t0.c68, t0.c68 COLLATE NOCASE)) AND ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), (((t0.c68, 0Xffffffffcf9c5e20, x'', t0.c68, t0.c68))==((t0.c68, t0.c68, t0.c68, 't琝郗		TcM', t0.c68))), LIKELY(DISTINCT '*왹䡁⨗'))))) ORDER BY (((((t0.c68)IS(t0.c68))))<(((+ (t0.c68)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c68, 0.3975395528895498, t0.c68)) NOT BETWEEN ((((t0.c68)AND(t0.c68)), t0.c68, t0.c68 COLLATE NOCASE)) AND ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), (((t0.c68, 0Xffffffffcf9c5e20, x'', t0.c68, t0.c68))==((t0.c68, t0.c68, t0.c68, 't琝郗		TcM', t0.c68))), LIKELY(DISTINCT '*왹䡁⨗'))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c68)IS(t0.c68))))<(((+ (t0.c68)))))  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c68, 0.3975395528895498, t0.c68)) NOT BETWEEN ((((t0.c68)AND(t0.c68)), t0.c68, t0.c68 COLLATE NOCASE)) AND ((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), (((t0.c68, 0Xffffffffcf9c5e20, x'', t0.c68, t0.c68))==((t0.c68, t0.c68, t0.c68, 't琝郗		TcM', t0.c68))), LIKELY(DISTINCT '*왹䡁⨗'))))) ORDER BY (((((t0.c68)IS(t0.c68))))<(((+ (t0.c68)))))  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c68)<<('-1118799821'))) BETWEEN (((x'') NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((t0.c68) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)<<('-1118799821'))) BETWEEN (((x'') NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((t0.c68) NOTNULL)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c68)<<('-1118799821'))) BETWEEN (((x'') NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((t0.c68) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)<<('-1118799821'))) BETWEEN (((x'') NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((t0.c68) NOTNULL)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (((v0.c0)-(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)-(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (((v0.c0)-(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)-(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON ((vt0.c1) IS TRUE) WHERE ((- (TRIM(vt0.c0)))) ORDER BY ((((((vt0.c0)OR(v0.c0)))AND(NULL)))-((+ (v0.c0)))) ASC, ((((v0.c0) IS TRUE))<=(t0.c68)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(vt0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON ((vt0.c1) IS TRUE) ORDER BY ((((((vt0.c0)OR(v0.c0)))AND(NULL)))-((+ (v0.c0)))) ASC, ((((v0.c0) IS TRUE))<=(t0.c68)) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON ((vt0.c1) IS TRUE) WHERE ((- (TRIM(vt0.c0)))) ORDER BY ((((((vt0.c0)OR(v0.c0)))AND(NULL)))-((+ (v0.c0)))) ASC, ((((v0.c0) IS TRUE))<=(t0.c68)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(vt0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON ((vt0.c1) IS TRUE) ORDER BY ((((((vt0.c0)OR(v0.c0)))AND(NULL)))-((+ (v0.c0)))) ASC, ((((v0.c0) IS TRUE))<=(t0.c68)) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON ((vt0.c1) IS TRUE) WHERE ((- (TRIM(vt0.c0)))) ORDER BY ((((((vt0.c0)OR(v0.c0)))AND(NULL)))-((+ (v0.c0)))) ASC, ((((v0.c0) IS TRUE))<=(t0.c68)) DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((v0.c0, t0.c68, vt0.c0))>((0Xffffffffd1343b2a, vt0.c1, NULL))) IN ()) LEFT OUTER JOIN v0 ON '' WHERE ((((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))AND(vt0.c1)))AND(t0.c68)), (NOT (v0.c0)), vt0.c1 COLLATE NOCASE))=(((NOT (vt0.c1)), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)), v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))AND(vt0.c1)))AND(t0.c68)), (NOT (v0.c0)), vt0.c1 COLLATE NOCASE))=(((NOT (vt0.c1)), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)), v0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((v0.c0, t0.c68, vt0.c0))>((0xffffffffd1343b2a, vt0.c1, NULL))) IN ()) LEFT OUTER JOIN v0 ON '');
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((v0.c0, t0.c68, vt0.c0))>((0Xffffffffd1343b2a, vt0.c1, NULL))) IN ()) LEFT OUTER JOIN v0 ON '' WHERE ((((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))AND(vt0.c1)))AND(t0.c68)), (NOT (v0.c0)), vt0.c1 COLLATE NOCASE))=(((NOT (vt0.c1)), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)), v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))AND(vt0.c1)))AND(t0.c68)), (NOT (v0.c0)), vt0.c1 COLLATE NOCASE))=(((NOT (vt0.c1)), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)), v0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((v0.c0, t0.c68, vt0.c0))>((0xffffffffd1343b2a, vt0.c1, NULL))) IN ()) LEFT OUTER JOIN v0 ON '');
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((v0.c0, t0.c68, vt0.c0))>((0Xffffffffd1343b2a, vt0.c1, NULL))) IN ()) LEFT OUTER JOIN v0 ON '' WHERE ((((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))AND(vt0.c1)))AND(t0.c68)), (NOT (v0.c0)), vt0.c1 COLLATE NOCASE))=(((NOT (vt0.c1)), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)), v0.c0))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) NOT BETWEEN ((((v0.c0)+(vt0.c1)))) AND ((((v0.c0) NOT NULL)))) WHERE ((~ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) NOT BETWEEN ((((v0.c0)+(vt0.c1)))) AND ((((v0.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) NOT BETWEEN ((((v0.c0)+(vt0.c1)))) AND ((((v0.c0) NOT NULL)))) WHERE ((~ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) NOT BETWEEN ((((v0.c0)+(vt0.c1)))) AND ((((v0.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((((t0.c68, t0.c68, vt0.c1))>((vt0.c1, t0.c68, v0.c0))))IS((t0.c68 IN ())))) ORDER BY CAST(CASE WHEN v0.c0 THEN 0.43247617185109055 ELSE v0.c0 END AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c68, t0.c68, vt0.c1))>((vt0.c1, t0.c68, v0.c0))))IS((t0.c68 IN ())))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CAST(CASE WHEN v0.c0 THEN 0.43247617185109055 ELSE v0.c0 END AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((((t0.c68, t0.c68, vt0.c1))>((vt0.c1, t0.c68, v0.c0))))IS((t0.c68 IN ())))) ORDER BY CAST(CASE WHEN v0.c0 THEN 0.43247617185109055 ELSE v0.c0 END AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c68, t0.c68, vt0.c1))>((vt0.c1, t0.c68, v0.c0))))IS((t0.c68 IN ())))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CAST(CASE WHEN v0.c0 THEN 0.43247617185109055 ELSE v0.c0 END AS REAL)  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE ((((- (v0.c0))) IS TRUE)) ORDER BY SQLITE_COMPILEOPTION_USED((- (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY SQLITE_COMPILEOPTION_USED((- (v0.c0))));
SELECT * FROM t0, v0, vt0 WHERE ((((- (v0.c0))) IS TRUE)) ORDER BY SQLITE_COMPILEOPTION_USED((- (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY SQLITE_COMPILEOPTION_USED((- (v0.c0))));
SELECT * FROM v0, t0 WHERE ((((- (x''))) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN t0.c68 THEN NULL WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN v0.c0 ELSE t0.c68 END))) ORDER BY (((v0.c0)) NOT BETWEEN ((LIKE(t0.c68, v0.c0, '0'))) AND ((((((NULL)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (x''))) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN t0.c68 THEN NULL WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN v0.c0 ELSE t0.c68 END))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c0)) NOT BETWEEN ((LIKE(t0.c68, v0.c0, '0'))) AND ((((((NULL)AND(v0.c0)))OR(v0.c0))))));
SELECT * FROM v0, t0 WHERE ((((- (x''))) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN t0.c68 THEN NULL WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN v0.c0 ELSE t0.c68 END))) ORDER BY (((v0.c0)) NOT BETWEEN ((LIKE(t0.c68, v0.c0, '0'))) AND ((((((NULL)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (x''))) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN t0.c68 THEN NULL WHEN t0.c68 THEN v0.c0 WHEN t0.c68 THEN v0.c0 ELSE t0.c68 END))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c0)) NOT BETWEEN ((LIKE(t0.c68, v0.c0, '0'))) AND ((((((NULL)AND(v0.c0)))OR(v0.c0))))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((((vt0.c1)*(v0.c0)))==(((vt0.c1) NOT NULL)))) ORDER BY (((vt0.c1, (((t0.c68))>=((v0.c0))), vt0.c1))<((((vt0.c0) ISNULL), ((t0.c68)<=(vt0.c1)), vt0.c0))) DESC  NULLS FIRST, (((vt0.c0, (- (vt0.c0)), vt0.c1 COLLATE RTRIM))==((((vt0.c0)<=(vt0.c0)), vt0.c1, CAST(vt0.c1 AS TEXT)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)*(v0.c0)))=(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((vt0.c1, (((t0.c68))>=((v0.c0))), vt0.c1))<((((vt0.c0) ISNULL), ((t0.c68)<=(vt0.c1)), vt0.c0))) DESC  NULLS FIRST, (((vt0.c0, (- (vt0.c0)), vt0.c1 COLLATE RTRIM))==((((vt0.c0)<=(vt0.c0)), vt0.c1, CAST(vt0.c1 AS TEXT)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((((vt0.c1)*(v0.c0)))==(((vt0.c1) NOT NULL)))) ORDER BY (((vt0.c1, (((t0.c68))>=((v0.c0))), vt0.c1))<((((vt0.c0) ISNULL), ((t0.c68)<=(vt0.c1)), vt0.c0))) DESC  NULLS FIRST, (((vt0.c0, (- (vt0.c0)), vt0.c1 COLLATE RTRIM))==((((vt0.c0)<=(vt0.c0)), vt0.c1, CAST(vt0.c1 AS TEXT)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)*(v0.c0)))=(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((vt0.c1, (((t0.c68))>=((v0.c0))), vt0.c1))<((((vt0.c0) ISNULL), ((t0.c68)<=(vt0.c1)), vt0.c0))) DESC  NULLS FIRST, (((vt0.c0, (- (vt0.c0)), vt0.c1 COLLATE RTRIM))==((((vt0.c0)<=(vt0.c0)), vt0.c1, CAST(vt0.c1 AS TEXT)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) BETWEEN (564643449) AND (v0.c0))))==((x'930c'))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (564643449) AND (v0.c0))))==((x'930c')))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) BETWEEN (564643449) AND (v0.c0))))==((x'930c'))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (564643449) AND (v0.c0))))==((x'930c')))) IS TRUE)  as count FROM v0);
SELECT * FROM vt0 WHERE ((NULL IN ()) COLLATE RTRIM) ORDER BY vt0.c1  NULLS FIRST, CAST('346600975' AS REAL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((NULL IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, CAST('346600975' AS REAL) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((NULL IN ()) COLLATE RTRIM) ORDER BY vt0.c1  NULLS FIRST, CAST('346600975' AS REAL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((NULL IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, CAST('346600975' AS REAL) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((NULL IN ()) COLLATE RTRIM) ORDER BY vt0.c1  NULLS FIRST, CAST('346600975' AS REAL) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c68) ISNULL) COLLATE BINARY WHERE (CAST(((vt0.c0)IS(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c68) ISNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c68) ISNULL) COLLATE BINARY WHERE (CAST(((vt0.c0)IS(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c68) ISNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c68) ISNULL) COLLATE BINARY WHERE (CAST(((vt0.c0)IS(vt0.c1)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((- (vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) ISNULL) AS NUMERIC));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((vt0.c1)AND(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(t0.c68 COLLATE RTRIM)) INNER JOIN vt0 ON ((((CAST(vt0.c0 AS TEXT))AND((~ (t0.c68)))))OR(((v0.c0)LIKE(vt0.c1)))) WHERE (t0.c68) ORDER BY t0.c68 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((((vt0.c1)AND(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(t0.c68 COLLATE RTRIM)) INNER JOIN vt0 ON ((((CAST(vt0.c0 AS TEXT))AND((~ (t0.c68)))))OR(((v0.c0)LIKE(vt0.c1)))) ORDER BY t0.c68 ASC  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((((vt0.c1)AND(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(t0.c68 COLLATE RTRIM)) INNER JOIN vt0 ON ((((CAST(vt0.c0 AS TEXT))AND((~ (t0.c68)))))OR(((v0.c0)LIKE(vt0.c1)))) WHERE (t0.c68) ORDER BY t0.c68 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((((vt0.c1)AND(((t0.c68) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(t0.c68 COLLATE RTRIM)) INNER JOIN vt0 ON ((((CAST(vt0.c0 AS TEXT))AND((~ (t0.c68)))))OR(((v0.c0)LIKE(vt0.c1)))) ORDER BY t0.c68 ASC  NULLS LAST);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((vt0.c0)OR('m!ONQ獠x|I'))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((t0.c68)<<(v0.c0))))) ORDER BY ((((v0.c0)OR(x'cc6a')))==(((vt0.c0)*(t0.c68))))  NULLS FIRST, (((vt0.c0)/(vt0.c1)) IN ((- (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR('m!ONQ獠x|I'))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((t0.c68)<<(v0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((v0.c0)OR(x'cc6a')))=(((vt0.c0)*(t0.c68))))  NULLS FIRST, (((vt0.c0)/(vt0.c1)) IN ((- (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((vt0.c0)OR('m!ONQ獠x|I'))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((t0.c68)<<(v0.c0))))) ORDER BY ((((v0.c0)OR(x'cc6a')))==(((vt0.c0)*(t0.c68))))  NULLS FIRST, (((vt0.c0)/(vt0.c1)) IN ((- (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR('m!ONQ獠x|I'))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((t0.c68)<<(v0.c0))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((v0.c0)OR(x'cc6a')))=(((vt0.c0)*(t0.c68))))  NULLS FIRST, (((vt0.c0)/(vt0.c1)) IN ((- (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE ((((t0.c68)) NOT BETWEEN ((((t0.c68)GLOB(t0.c68)))) AND ((CASE v0.c0  WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END)))) ORDER BY (((v0.c0 IN ()))*(((v0.c0)*(v0.c0)))) ASC, (((v0.c0 IN ())) ISNULL) DESC, CAST((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, v0.c0, t0.c68)) AND ((t0.c68, v0.c0, v0.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) NOT BETWEEN ((((t0.c68)GLOB(t0.c68)))) AND ((CASE v0.c0  WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((v0.c0 IN ()))*(((v0.c0)*(v0.c0)))) ASC, (((v0.c0 IN ())) ISNULL) DESC, CAST((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, v0.c0, t0.c68)) AND ((t0.c68, v0.c0, v0.c0))) AS INTEGER));
SELECT ALL * FROM t0, v0 WHERE ((((t0.c68)) NOT BETWEEN ((((t0.c68)GLOB(t0.c68)))) AND ((CASE v0.c0  WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END)))) ORDER BY (((v0.c0 IN ()))*(((v0.c0)*(v0.c0)))) ASC, (((v0.c0 IN ())) ISNULL) DESC, CAST((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, v0.c0, t0.c68)) AND ((t0.c68, v0.c0, v0.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) NOT BETWEEN ((((t0.c68)GLOB(t0.c68)))) AND ((CASE v0.c0  WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((v0.c0 IN ()))*(((v0.c0)*(v0.c0)))) ASC, (((v0.c0 IN ())) ISNULL) DESC, CAST((((t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, v0.c0, t0.c68)) AND ((t0.c68, v0.c0, v0.c0))) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c1 COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c1 COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (vt0.c1 COLLATE NOCASE)) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)-(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0)-(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)-(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0)-(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))/(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) ORDER BY (((t0.c68)) NOT BETWEEN (((((t0.c68, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c68))))) AND ((CAST(t0.c68 AS BLOB))))  NULLS LAST, ((((((((CAST(t0.c68 AS TEXT))OR((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))))OR(((t0.c68)==(t0.c68)))))OR((('-951884382') NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((((t0.c68)OR(t0.c68)))AND(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))/(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68)) NOT BETWEEN (((((t0.c68, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c68))))) AND ((CAST(t0.c68 AS BLOB))))  NULLS LAST, ((((((((CAST(t0.c68 AS TEXT))OR((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))))OR(((t0.c68)==(t0.c68)))))OR((('-951884382') NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((((t0.c68)OR(t0.c68)))AND(NULL)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))/(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) ORDER BY (((t0.c68)) NOT BETWEEN (((((t0.c68, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c68))))) AND ((CAST(t0.c68 AS BLOB))))  NULLS LAST, ((((((((CAST(t0.c68 AS TEXT))OR((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))))OR(((t0.c68)==(t0.c68)))))OR((('-951884382') NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((((t0.c68)OR(t0.c68)))AND(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))/(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68)) NOT BETWEEN (((((t0.c68, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c68))))) AND ((CAST(t0.c68 AS BLOB))))  NULLS LAST, ((((((((CAST(t0.c68 AS TEXT))OR((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))))OR(((t0.c68)==(t0.c68)))))OR((('-951884382') NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((((t0.c68)OR(t0.c68)))AND(NULL)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))/(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END))) ORDER BY (((t0.c68)) NOT BETWEEN (((((t0.c68, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c68))))) AND ((CAST(t0.c68 AS BLOB))))  NULLS LAST, ((((((((CAST(t0.c68 AS TEXT))OR((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))))OR(((t0.c68)==(t0.c68)))))OR((('-951884382') NOT BETWEEN (t0.c68) AND (t0.c68)))))OR(((((t0.c68)OR(t0.c68)))AND(NULL)))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((CAST(t0.c68 AS BLOB))AND((((t0.c68, vt0.c1, vt0.c1))<((t0.c68, t0.c68, vt0.c1))))))AND((((vt0.c0, t0.c68, 'A-', vt0.c0, vt0.c1))<>((vt0.c1, vt0.c1, vt0.c0, vt0.c1, '-746016110')))))) ORDER BY ((((((t0.c68)*(vt0.c1)))OR(((t0.c68) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c68 AS BLOB))AND((((t0.c68, vt0.c1, vt0.c1))<((t0.c68, t0.c68, vt0.c1))))))AND((((vt0.c0, t0.c68, 'A-', vt0.c0, vt0.c1))!=((vt0.c1, vt0.c1, vt0.c0, vt0.c1, '-746016110')))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c68)*(vt0.c1)))OR(((t0.c68) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(vt0.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((CAST(t0.c68 AS BLOB))AND((((t0.c68, vt0.c1, vt0.c1))<((t0.c68, t0.c68, vt0.c1))))))AND((((vt0.c0, t0.c68, 'A-', vt0.c0, vt0.c1))<>((vt0.c1, vt0.c1, vt0.c0, vt0.c1, '-746016110')))))) ORDER BY ((((((t0.c68)*(vt0.c1)))OR(((t0.c68) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c68 AS BLOB))AND((((t0.c68, vt0.c1, vt0.c1))<((t0.c68, t0.c68, vt0.c1))))))AND((((vt0.c0, t0.c68, 'A-', vt0.c0, vt0.c1))!=((vt0.c1, vt0.c1, vt0.c0, vt0.c1, '-746016110')))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c68)*(vt0.c1)))OR(((t0.c68) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(vt0.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((CAST(t0.c68 AS BLOB))AND((((t0.c68, vt0.c1, vt0.c1))<((t0.c68, t0.c68, vt0.c1))))))AND((((vt0.c0, t0.c68, 'A-', vt0.c0, vt0.c1))<>((vt0.c1, vt0.c1, vt0.c0, vt0.c1, '-746016110')))))) ORDER BY ((((((t0.c68)*(vt0.c1)))OR(((t0.c68) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(vt0.c1))  NULLS FIRST;
SELECT ALL * FROM t0, v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC))<=((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))<=((- (vt0.c1))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC))<=((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))<=((- (vt0.c1))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0 WHERE (((COALESCE(t0.c68, t0.c68))=(((t0.c68)&(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(t0.c68, t0.c68))==(((t0.c68)&(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((COALESCE(t0.c68, t0.c68))=(((t0.c68)&(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(t0.c68, t0.c68))==(((t0.c68)&(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((COALESCE(t0.c68, t0.c68))=(((t0.c68)&(t0.c68)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY (((NOT (vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NOT (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY (((NOT (vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NOT (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY (((NOT (vt0.c0))) IS TRUE);
SELECT ALL * FROM v0, vt0, t0 WHERE (((TRIM(vt0.c1))>=(((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c1))>=(((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (((TRIM(vt0.c1))>=(((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c1))>=(((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (ABS(v0.c0 COLLATE NOCASE)) ORDER BY (+ (((vt0.c0)|('-832643950'))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (((vt0.c0)|('-832643950')))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (ABS(v0.c0 COLLATE NOCASE)) ORDER BY (+ (((vt0.c0)|('-832643950'))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (((vt0.c0)|('-832643950')))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((NULL IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) IS FALSE)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((NULL IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) IS FALSE)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((NULL IN ())) IS FALSE));
SELECT ALL * FROM vt0, v0, t0 WHERE ((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND (((t0.c68 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND (((t0.c68 IN ()))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE ((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND (((t0.c68 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND (((t0.c68 IN ()))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS TEXT)) ORDER BY (CASE WHEN '\5䪧.J粮' THEN vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY (CASE WHEN '\5䪧.J粮' THEN vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS TEXT)) ORDER BY (CASE WHEN '\5䪧.J粮' THEN vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY (CASE WHEN '\5䪧.J粮' THEN vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS TEXT)) ORDER BY (CASE WHEN '\5䪧.J粮' THEN vt0.c0 END IN ());
SELECT * FROM v0 CROSS JOIN t0 ON CAST(vt0.c1 COLLATE NOCASE AS REAL) CROSS JOIN vt0 ON (((~ (v0.c0)))IS NOT(vt0.c0 COLLATE NOCASE)) WHERE ((v0.c0 IN ()) COLLATE RTRIM) ORDER BY ((((x'')OR(CAST(NULL AS TEXT))))OR(LIKELY(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CAST(vt0.c1 COLLATE NOCASE AS REAL) CROSS JOIN vt0 ON (((~ (v0.c0)))IS NOT(vt0.c0 COLLATE NOCASE)) ORDER BY ((((x'')OR(CAST(NULL AS TEXT))))OR(LIKELY(v0.c0)))  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN t0 ON CAST(vt0.c1 COLLATE NOCASE AS REAL) CROSS JOIN vt0 ON (((~ (v0.c0)))IS NOT(vt0.c0 COLLATE NOCASE)) WHERE ((v0.c0 IN ()) COLLATE RTRIM) ORDER BY ((((x'')OR(CAST(NULL AS TEXT))))OR(LIKELY(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CAST(vt0.c1 COLLATE NOCASE AS REAL) CROSS JOIN vt0 ON (((~ (v0.c0)))IS NOT(vt0.c0 COLLATE NOCASE)) ORDER BY ((((x'')OR(CAST(NULL AS TEXT))))OR(LIKELY(v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON (((((v0.c0)>>(0X6c1f719d))))>(('1884707462'))) WHERE ((CASE WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN t0.c68 END IN ())) ORDER BY json_insert((((v0.c0, 0x6fdfd645, v0.c0)) NOT BETWEEN ((t0.c68, v0.c0, v0.c0)) AND ((t0.c68, t0.c68, 0.7047985307954495))), ((v0.c0)IS('-785106134')), CAST(v0.c0 AS TEXT)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN t0.c68 END IN ())) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((((v0.c0)>>(0X6c1f719d))))>(('1884707462'))) ORDER BY json_insert((((v0.c0, 0x6fdfd645, v0.c0)) NOT BETWEEN ((t0.c68, v0.c0, v0.c0)) AND ((t0.c68, t0.c68, 0.7047985307954495))), ((v0.c0)IS('-785106134')), CAST(v0.c0 AS TEXT)) ASC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON (((((v0.c0)>>(0X6c1f719d))))>(('1884707462'))) WHERE ((CASE WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN t0.c68 END IN ())) ORDER BY json_insert((((v0.c0, 0x6fdfd645, v0.c0)) NOT BETWEEN ((t0.c68, v0.c0, v0.c0)) AND ((t0.c68, t0.c68, 0.7047985307954495))), ((v0.c0)IS('-785106134')), CAST(v0.c0 AS TEXT)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN t0.c68 END IN ())) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((((v0.c0)>>(0X6c1f719d))))>(('1884707462'))) ORDER BY json_insert((((v0.c0, 0x6fdfd645, v0.c0)) NOT BETWEEN ((t0.c68, v0.c0, v0.c0)) AND ((t0.c68, t0.c68, 0.7047985307954495))), ((v0.c0)IS('-785106134')), CAST(v0.c0 AS TEXT)) ASC);
SELECT COUNT(*) FROM v0 WHERE (LIKE(json_object(v0.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKE(json_object(v0.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LIKE(json_object(v0.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKE(json_object(v0.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((~ (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((~ (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((~ (CAST(vt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM t0 WHERE ((((('1751597428')AND(t0.c68)))AND(((t0.c68)&(t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((('1751597428')AND(t0.c68)))AND(((t0.c68)&(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((('1751597428')AND(t0.c68)))AND(((t0.c68)&(t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((('1751597428')AND(t0.c68)))AND(((t0.c68)&(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((('1751597428')AND(t0.c68)))AND(((t0.c68)&(t0.c68)))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((vt0.c1 IN (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN (vt0.c1)) IN ())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((vt0.c1 IN (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN (vt0.c1)) IN ())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((vt0.c1 IN (vt0.c1)) IN ()));
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0) IS TRUE))));
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT vt0.c1 COLLATE RTRIM, vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT vt0.c1 COLLATE RTRIM, vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT vt0.c1 COLLATE RTRIM, vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT vt0.c1 COLLATE RTRIM, vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT vt0.c1 COLLATE RTRIM, vt0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c68 IN (t0.c68)))AND(t0.c68)))AND(t0.c68)));
SELECT SUM(count) FROM (SELECT (((((((t0.c68 IN (t0.c68)))AND(t0.c68)))AND(t0.c68))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c68 IN (t0.c68)))AND(t0.c68)))AND(t0.c68)));
SELECT SUM(count) FROM (SELECT (((((((t0.c68 IN (t0.c68)))AND(t0.c68)))AND(t0.c68))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c68 IN (t0.c68)))AND(t0.c68)))AND(t0.c68)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)||(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((CAST(v0.c0 AS NUMERIC), vt0.c0, NULL))>=((((vt0.c0)<=(vt0.c1)), ((((vt0.c0)OR(0.31981862976756104)))OR('1446922919')), (+ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS NUMERIC), vt0.c0, NULL))>=((((vt0.c0)<=(vt0.c1)), ((((vt0.c0)OR(0.31981862976756104)))OR('1446922919')), (+ (vt0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((CAST(v0.c0 AS NUMERIC), vt0.c0, NULL))>=((((vt0.c0)<=(vt0.c1)), ((((vt0.c0)OR(0.31981862976756104)))OR('1446922919')), (+ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS NUMERIC), vt0.c0, NULL))>=((((vt0.c0)<=(vt0.c1)), ((((vt0.c0)OR(0.31981862976756104)))OR('1446922919')), (+ (vt0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM t0, v0 CROSS JOIN vt0 ON (((CASE WHEN v0.c0 THEN t0.c68 END))==(('2'))) WHERE (((CAST(t0.c68 AS NUMERIC)) BETWEEN (CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS NUMERIC)) BETWEEN (CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) AND (vt0.c0))) IS TRUE)  as count FROM t0, v0 CROSS JOIN vt0 ON (((CASE WHEN v0.c0 THEN t0.c68 END))==(('2'))));
SELECT COUNT(*) FROM t0, v0 CROSS JOIN vt0 ON (((CASE WHEN v0.c0 THEN t0.c68 END))==(('2'))) WHERE (((CAST(t0.c68 AS NUMERIC)) BETWEEN (CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS NUMERIC)) BETWEEN (CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) AND (vt0.c0))) IS TRUE)  as count FROM t0, v0 CROSS JOIN vt0 ON (((CASE WHEN v0.c0 THEN t0.c68 END))==(('2'))));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((NOT (NULL))) ORDER BY (+ (vt0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (+ (vt0.c1 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((NOT (NULL))) ORDER BY (+ (vt0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (+ (vt0.c1 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((NOT (NULL))) ORDER BY (+ (vt0.c1 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL)IS(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END)) WHERE (((ABS(t0.c68)) ISNULL)) ORDER BY ((((((((((((t0.c68)OR(t0.c68)))OR(x'b7ccd7047076')))OR(vt0.c0)))AND(t0.c68)))OR(t0.c68)))AND((((t0.c68, t0.c68, vt0.c0)) NOT BETWEEN ((vt0.c1, t0.c68, t0.c68)) AND ((x'5305', vt0.c1, ''))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(t0.c68)) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL)IS(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END)) ORDER BY ((((((((((((t0.c68)OR(t0.c68)))OR(x'b7ccd7047076')))OR(vt0.c0)))AND(t0.c68)))OR(t0.c68)))AND((((t0.c68, t0.c68, vt0.c0)) NOT BETWEEN ((vt0.c1, t0.c68, t0.c68)) AND ((x'5305', vt0.c1, ''))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL)IS(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END)) WHERE (((ABS(t0.c68)) ISNULL)) ORDER BY ((((((((((((t0.c68)OR(t0.c68)))OR(x'b7ccd7047076')))OR(vt0.c0)))AND(t0.c68)))OR(t0.c68)))AND((((t0.c68, t0.c68, vt0.c0)) NOT BETWEEN ((vt0.c1, t0.c68, t0.c68)) AND ((x'5305', vt0.c1, ''))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(t0.c68)) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL)IS(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END)) ORDER BY ((((((((((((t0.c68)OR(t0.c68)))OR(x'b7ccd7047076')))OR(vt0.c0)))AND(t0.c68)))OR(t0.c68)))AND((((t0.c68, t0.c68, vt0.c0)) NOT BETWEEN ((vt0.c1, t0.c68, t0.c68)) AND ((x'5305', vt0.c1, ''))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((NULL)IS(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END)) WHERE (((ABS(t0.c68)) ISNULL)) ORDER BY ((((((((((((t0.c68)OR(t0.c68)))OR(x'b7ccd7047076')))OR(vt0.c0)))AND(t0.c68)))OR(t0.c68)))AND((((t0.c68, t0.c68, vt0.c0)) NOT BETWEEN ((vt0.c1, t0.c68, t0.c68)) AND ((x'5305', vt0.c1, ''))))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((t0.c68)/('57997486'))) ORDER BY ABS(((vt0.c0)%(t0.c68))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c68)/('57997486'))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ABS(((vt0.c0)%(t0.c68))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((t0.c68)/('57997486'))) ORDER BY ABS(((vt0.c0)%(t0.c68))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c68)/('57997486'))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ABS(((vt0.c0)%(t0.c68))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((t0.c68)/('57997486'))) ORDER BY ABS(((vt0.c0)%(t0.c68))) DESC;
SELECT ALL * FROM vt0, v0 INDEXED BY i55, t0 WHERE (((HEX(vt0.c1)) ISNULL)) ORDER BY t0.c68  NULLS LAST, ((((t0.c68 IN (vt0.c1, v0.c0))))<((((vt0.c1)/(v0.c0))))) DESC  NULLS FIRST, ((((((((((t0.c68)AND(vt0.c1)))AND(v0.c0)))AND(t0.c68)))OR(''))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c1)) ISNULL)) IS TRUE)  as count FROM vt0, v0 INDEXED BY i55, t0 ORDER BY t0.c68  NULLS LAST, ((((t0.c68 IN (vt0.c1, v0.c0))))<((((vt0.c1)/(v0.c0))))) DESC  NULLS FIRST, ((((((((((t0.c68)AND(vt0.c1)))AND(v0.c0)))AND(t0.c68)))OR(''))) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 INDEXED BY i55, t0 WHERE (((HEX(vt0.c1)) ISNULL)) ORDER BY t0.c68  NULLS LAST, ((((t0.c68 IN (vt0.c1, v0.c0))))<((((vt0.c1)/(v0.c0))))) DESC  NULLS FIRST, ((((((((((t0.c68)AND(vt0.c1)))AND(v0.c0)))AND(t0.c68)))OR(''))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c1)) ISNULL)) IS TRUE)  as count FROM vt0, v0 INDEXED BY i55, t0 ORDER BY t0.c68  NULLS LAST, ((((t0.c68 IN (vt0.c1, v0.c0))))<((((vt0.c1)/(v0.c0))))) DESC  NULLS FIRST, ((((((((((t0.c68)AND(vt0.c1)))AND(v0.c0)))AND(t0.c68)))OR(''))) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS INTEGER)) ORDER BY ((((vt0.c1)&(vt0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1)&(vt0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS INTEGER)) ORDER BY ((((vt0.c1)&(vt0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1)&(vt0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((v0.c0 IN (v0.c0)) COLLATE RTRIM) ORDER BY CASE ((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))AND(t0.c68))  WHEN ((v0.c0) IS FALSE) THEN CASE v0.c0  WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 END WHEN 0xffffffffe6bab924 THEN CAST(t0.c68 AS REAL) WHEN ((t0.c68)<<(v0.c0)) THEN t0.c68 ELSE v0.c0 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY CASE ((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))AND(t0.c68))  WHEN ((v0.c0) IS FALSE) THEN CASE v0.c0  WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 END WHEN 0xffffffffe6bab924 THEN CAST(t0.c68 AS REAL) WHEN ((t0.c68)<<(v0.c0)) THEN t0.c68 ELSE v0.c0 COLLATE NOCASE END DESC);
SELECT COUNT(*) FROM v0, t0 WHERE ((v0.c0 IN (v0.c0)) COLLATE RTRIM) ORDER BY CASE ((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))AND(t0.c68))  WHEN ((v0.c0) IS FALSE) THEN CASE v0.c0  WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 END WHEN 0xffffffffe6bab924 THEN CAST(t0.c68 AS REAL) WHEN ((t0.c68)<<(v0.c0)) THEN t0.c68 ELSE v0.c0 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY CASE ((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))OR(t0.c68)))AND(t0.c68))  WHEN ((v0.c0) IS FALSE) THEN CASE v0.c0  WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 END WHEN 0xffffffffe6bab924 THEN CAST(t0.c68 AS REAL) WHEN ((t0.c68)<<(v0.c0)) THEN t0.c68 ELSE v0.c0 COLLATE NOCASE END DESC);
SELECT COUNT(*) FROM t0 WHERE (DATETIME(((t0.c68)GLOB(t0.c68)), t0.c68 COLLATE RTRIM, ''));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((t0.c68)GLOB(t0.c68)), t0.c68 COLLATE RTRIM, '')) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (DATETIME(((t0.c68)GLOB(t0.c68)), t0.c68 COLLATE RTRIM, ''));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((t0.c68)GLOB(t0.c68)), t0.c68 COLLATE RTRIM, '')) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (DATETIME(((t0.c68)GLOB(t0.c68)), t0.c68 COLLATE RTRIM, ''));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(-181286.0))) ORDER BY CASE WHEN 0.1733744386157574 THEN CAST(vt0.c0 AS BLOB) ELSE (vt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(-181286.0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0.1733744386157574 THEN CAST(vt0.c0 AS BLOB) ELSE (vt0.c0 IN ()) END ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(-181286.0))) ORDER BY CASE WHEN 0.1733744386157574 THEN CAST(vt0.c0 AS BLOB) ELSE (vt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(-181286.0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0.1733744386157574 THEN CAST(vt0.c0 AS BLOB) ELSE (vt0.c0 IN ()) END ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(-181286.0))) ORDER BY CASE WHEN 0.1733744386157574 THEN CAST(vt0.c0 AS BLOB) ELSE (vt0.c0 IN ()) END ASC;
SELECT ALL * FROM t0 WHERE (CASE LIKE(t0.c68, t0.c68, '7')  WHEN CASE WHEN t0.c68 THEN t0.c68 END THEN json_insert(t0.c68, t0.c68, t0.c68, t0.c68, t0.c68) ELSE (t0.c68 IN (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKE(t0.c68, t0.c68, '7')  WHEN CASE WHEN t0.c68 THEN t0.c68 END THEN json_insert(t0.c68, t0.c68, t0.c68, t0.c68, t0.c68) ELSE (t0.c68 IN (x'')) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE LIKE(t0.c68, t0.c68, '7')  WHEN CASE WHEN t0.c68 THEN t0.c68 END THEN json_insert(t0.c68, t0.c68, t0.c68, t0.c68, t0.c68) ELSE (t0.c68 IN (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKE(t0.c68, t0.c68, '7')  WHEN CASE WHEN t0.c68 THEN t0.c68 END THEN json_insert(t0.c68, t0.c68, t0.c68, t0.c68, t0.c68) ELSE (t0.c68 IN (x'')) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE LIKE(t0.c68, t0.c68, '7')  WHEN CASE WHEN t0.c68 THEN t0.c68 END THEN json_insert(t0.c68, t0.c68, t0.c68, t0.c68, t0.c68) ELSE (t0.c68 IN (x'')) END);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c1, vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN (vt0.c1, vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c1, vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN (vt0.c1, vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c1, vt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)GLOB(x'')) IN ())) ORDER BY (((TRIM(v0.c0)))>=(((v0.c0 IN ())))) ASC, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT NULL), CASE CAST(v0.c0 AS INTEGER)  WHEN COALESCE(v0.c0, v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (+ (v0.c0)) WHEN NULL THEN ((v0.c0)IS NOT(v0.c0)) ELSE v0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)GLOB(x'')) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((TRIM(v0.c0)))>=(((v0.c0 IN ())))) ASC, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT NULL), CASE CAST(v0.c0 AS INTEGER)  WHEN COALESCE(v0.c0, v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (+ (v0.c0)) WHEN NULL THEN ((v0.c0)IS NOT(v0.c0)) ELSE v0.c0 COLLATE BINARY END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)GLOB(x'')) IN ())) ORDER BY (((TRIM(v0.c0)))>=(((v0.c0 IN ())))) ASC, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT NULL), CASE CAST(v0.c0 AS INTEGER)  WHEN COALESCE(v0.c0, v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (+ (v0.c0)) WHEN NULL THEN ((v0.c0)IS NOT(v0.c0)) ELSE v0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)GLOB(x'')) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((TRIM(v0.c0)))>=(((v0.c0 IN ())))) ASC, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT NULL), CASE CAST(v0.c0 AS INTEGER)  WHEN COALESCE(v0.c0, v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (+ (v0.c0)) WHEN NULL THEN ((v0.c0)IS NOT(v0.c0)) ELSE v0.c0 COLLATE BINARY END  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE (((((v0.c0 COLLATE RTRIM)AND((((vt0.c0, v0.c0, vt0.c1))>=((v0.c0, t0.c68, vt0.c0))))))OR(vt0.c1 COLLATE RTRIM))) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS BLOB))))AND((+ (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)AND((((vt0.c0, v0.c0, vt0.c1))>=((v0.c0, t0.c68, vt0.c0))))))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS BLOB))))AND((+ (v0.c0)))) ASC);
SELECT ALL * FROM vt0, t0, v0 WHERE (((((v0.c0 COLLATE RTRIM)AND((((vt0.c0, v0.c0, vt0.c1))>=((v0.c0, t0.c68, vt0.c0))))))OR(vt0.c1 COLLATE RTRIM))) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS BLOB))))AND((+ (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)AND((((vt0.c0, v0.c0, vt0.c1))>=((v0.c0, t0.c68, vt0.c0))))))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS BLOB))))AND((+ (v0.c0)))) ASC);
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON (('}R''솓')*(((vt0.c1) ISNULL))) WHERE (((CAST(v0.c0 AS BLOB))==(TYPEOF(NULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB))=(TYPEOF(NULL)))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON (('}R''솓')*(((vt0.c1) ISNULL))));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON (('}R''솓')*(((vt0.c1) ISNULL))) WHERE (((CAST(v0.c0 AS BLOB))==(TYPEOF(NULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB))=(TYPEOF(NULL)))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON (('}R''솓')*(((vt0.c1) ISNULL))));
SELECT * FROM vt0, v0 WHERE (UNLIKELY(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(vt0.c1)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (UNLIKELY(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(vt0.c1)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM t0, v0, vt0 WHERE ((((t0.c68)) NOT BETWEEN ((x'49832aec')) AND ((GLOB(v0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN ((x'49832aec')) AND ((GLOB(v0.c0, vt0.c0))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE ((((t0.c68)) NOT BETWEEN ((x'49832aec')) AND ((GLOB(v0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN ((x'49832aec')) AND ((GLOB(v0.c0, vt0.c0))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM vt0, t0 WHERE (json_quote('~U灹u') COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((json_quote('~U灹u') COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (json_quote('~U灹u') COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((json_quote('~U灹u') COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (json_quote('~U灹u') COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, v0 WHERE (CAST(((t0.c68) BETWEEN (v0.c0) AND (0.5201358580912242)) AS TEXT)) ORDER BY (CASE 0.8769835770493004  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68) BETWEEN (v0.c0) AND (0.5201358580912242)) AS TEXT)) IS TRUE)  as count FROM t0, v0 ORDER BY (CASE 0.8769835770493004  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, v0 WHERE (CAST(((t0.c68) BETWEEN (v0.c0) AND (0.5201358580912242)) AS TEXT)) ORDER BY (CASE 0.8769835770493004  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68) BETWEEN (v0.c0) AND (0.5201358580912242)) AS TEXT)) IS TRUE)  as count FROM t0, v0 ORDER BY (CASE 0.8769835770493004  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END IN ()));
SELECT ALL * FROM vt0, t0, v0 WHERE (CASE (~ (vt0.c1))  WHEN NULL THEN CAST(vt0.c0 AS INTEGER) ELSE (vt0.c1 IN ()) END) ORDER BY ((((((v0.c0)&(v0.c0)))OR(vt0.c1)))AND(CASE WHEN t0.c68 THEN vt0.c1 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c1))  WHEN NULL THEN CAST(vt0.c0 AS INTEGER) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((((v0.c0)&(v0.c0)))OR(vt0.c1)))AND(CASE WHEN t0.c68 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, t0, v0 WHERE (CASE (~ (vt0.c1))  WHEN NULL THEN CAST(vt0.c0 AS INTEGER) ELSE (vt0.c1 IN ()) END) ORDER BY ((((((v0.c0)&(v0.c0)))OR(vt0.c1)))AND(CASE WHEN t0.c68 THEN vt0.c1 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c1))  WHEN NULL THEN CAST(vt0.c0 AS INTEGER) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((((v0.c0)&(v0.c0)))OR(vt0.c1)))AND(CASE WHEN t0.c68 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))AND(CAST(t0.c68 AS BLOB))))OR((t0.c68 IN ())))) ORDER BY CAST(t0.c68 AS TEXT) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))AND(CAST(t0.c68 AS BLOB))))OR((t0.c68 IN ())))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c68 AS TEXT) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))AND(CAST(t0.c68 AS BLOB))))OR((t0.c68 IN ())))) ORDER BY CAST(t0.c68 AS TEXT) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))AND(CAST(t0.c68 AS BLOB))))OR((t0.c68 IN ())))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c68 AS TEXT) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))AND(CAST(t0.c68 AS BLOB))))OR((t0.c68 IN ())))) ORDER BY CAST(t0.c68 AS TEXT) COLLATE BINARY DESC;
SELECT * FROM vt0, t0 WHERE (((((vt0.c1) BETWEEN ('켤c,	%HM') AND (t0.c68))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE vt0.c1  WHEN vt0.c1 THEN t0.c68 WHEN 0Xffffffff894f10c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((vt0.c1 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN ('켤c,	%HM') AND (t0.c68))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE vt0.c1  WHEN vt0.c1 THEN t0.c68 WHEN 0xffffffff894f10c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1 IN ()) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c1) BETWEEN ('켤c,	%HM') AND (t0.c68))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE vt0.c1  WHEN vt0.c1 THEN t0.c68 WHEN 0Xffffffff894f10c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((vt0.c1 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN ('켤c,	%HM') AND (t0.c68))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE vt0.c1  WHEN vt0.c1 THEN t0.c68 WHEN 0xffffffff894f10c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1 IN ()) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c1) BETWEEN ('켤c,	%HM') AND (t0.c68))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE vt0.c1  WHEN vt0.c1 THEN t0.c68 WHEN 0Xffffffff894f10c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((vt0.c1 IN ()) IN ()) ASC  NULLS LAST;
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (CASE WHEN 1969346457 THEN vt0.c0 END IN ()) WHERE ('1148868102');
SELECT SUM(count) FROM (SELECT ALL (('1148868102') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (CASE WHEN 1969346457 THEN vt0.c0 END IN ()));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (CASE WHEN 1969346457 THEN vt0.c0 END IN ()) WHERE ('1148868102');
SELECT SUM(count) FROM (SELECT ALL (('1148868102') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (CASE WHEN 1969346457 THEN vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((- (t0.c68)) IN ())) ORDER BY ((json_object(t0.c68, t0.c68))>(TYPEOF(DISTINCT t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c68)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((json_object(t0.c68, t0.c68))>(TYPEOF(DISTINCT t0.c68))));
SELECT ALL COUNT(*) FROM t0 WHERE (((- (t0.c68)) IN ())) ORDER BY ((json_object(t0.c68, t0.c68))>(TYPEOF(DISTINCT t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c68)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((json_object(t0.c68, t0.c68))>(TYPEOF(DISTINCT t0.c68))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) BETWEEN ('-1554842831') AND (v0.c0)))||((((vt0.c1))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN ('-1554842831') AND (v0.c0)))||((((vt0.c1))<((vt0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) BETWEEN ('-1554842831') AND (v0.c0)))||((((vt0.c1))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN ('-1554842831') AND (v0.c0)))||((((vt0.c1))<((vt0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM t0 INNER JOIN v0 ON (((v0.c0 IN (v0.c0, t0.c68)))<=(UPPER(t0.c68))) WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)OR('MA⫀&*B!Y')) ELSE ((((t0.c68)AND(t0.c68)))OR(t0.c68)) END) ORDER BY ((v0.c0 COLLATE BINARY)=((('z+F%<Jd')<=(t0.c68))))  NULLS LAST, '0.4125219826253701';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)OR('MA⫀&*B!Y')) ELSE ((((t0.c68)AND(t0.c68)))OR(t0.c68)) END) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((v0.c0 IN (v0.c0, t0.c68)))<=(UPPER(t0.c68))) ORDER BY ((v0.c0 COLLATE BINARY)=((('z+F%<Jd')<=(t0.c68))))  NULLS LAST, '0.4125219826253701');
SELECT * FROM t0 INNER JOIN v0 ON (((v0.c0 IN (v0.c0, t0.c68)))<=(UPPER(t0.c68))) WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)OR('MA⫀&*B!Y')) ELSE ((((t0.c68)AND(t0.c68)))OR(t0.c68)) END) ORDER BY ((v0.c0 COLLATE BINARY)=((('z+F%<Jd')<=(t0.c68))))  NULLS LAST, '0.4125219826253701';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)OR('MA⫀&*B!Y')) ELSE ((((t0.c68)AND(t0.c68)))OR(t0.c68)) END) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((v0.c0 IN (v0.c0, t0.c68)))<=(UPPER(t0.c68))) ORDER BY ((v0.c0 COLLATE BINARY)=((('z+F%<Jd')<=(t0.c68))))  NULLS LAST, '0.4125219826253701');
SELECT * FROM t0, v0 WHERE (((((((((CAST(t0.c68 AS TEXT))AND(((t0.c68) BETWEEN (t0.c68) AND (-1187062289)))))AND(CASE WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'1785' END)))OR((~ (t0.c68)))))AND(t0.c68)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c68 AS TEXT))AND(((t0.c68) BETWEEN (t0.c68) AND (-1187062289)))))AND(CASE WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'1785' END)))OR((~ (t0.c68)))))AND(t0.c68))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((((((CAST(t0.c68 AS TEXT))AND(((t0.c68) BETWEEN (t0.c68) AND (-1187062289)))))AND(CASE WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'1785' END)))OR((~ (t0.c68)))))AND(t0.c68)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t0.c68 AS TEXT))AND(((t0.c68) BETWEEN (t0.c68) AND (-1187062289)))))AND(CASE WHEN t0.c68 THEN t0.c68 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'1785' END)))OR((~ (t0.c68)))))AND(t0.c68))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) ISNULL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) ISNULL));
SELECT * FROM t0, v0, vt0 WHERE ((((v0.c0)||(t0.c68)) IN ())) ORDER BY t0.c68 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)||(t0.c68)) IN ())) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY t0.c68 DESC  NULLS FIRST);
SELECT * FROM t0, v0, vt0 WHERE ((((v0.c0)||(t0.c68)) IN ())) ORDER BY t0.c68 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)||(t0.c68)) IN ())) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY t0.c68 DESC  NULLS FIRST);
SELECT * FROM t0, v0, vt0 WHERE ((((v0.c0)||(t0.c68)) IN ())) ORDER BY t0.c68 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ROUND(CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN '1737412492' WHEN x'613a' THEN vt0.c1 END, ((vt0.c0)/(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ROUND(CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN '1737412492' WHEN x'613a' THEN vt0.c1 END, ((vt0.c0)/(vt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ROUND(CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN '1737412492' WHEN x'613a' THEN vt0.c1 END, ((vt0.c0)/(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ROUND(CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN '1737412492' WHEN x'613a' THEN vt0.c1 END, ((vt0.c0)/(vt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ROUND(CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN '1737412492' WHEN x'613a' THEN vt0.c1 END, ((vt0.c0)/(vt0.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (t0.c68);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((NOT (CASE WHEN t0.c68 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 ELSE 1.006865547E9 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN t0.c68 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 ELSE 1.006865547E9 END))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((NOT (CASE WHEN t0.c68 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 ELSE 1.006865547E9 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN t0.c68 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 ELSE 1.006865547E9 END))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((((((vt0.c1)IS NOT(1.969346457E9)))AND(((((vt0.c0)AND(t0.c68)))AND(vt0.c0)))))OR(CAST(vt0.c1 AS INTEGER)))) ORDER BY TYPEOF(DISTINCT vt0.c0) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)IS NOT(1.969346457E9)))AND(((((vt0.c0)AND(t0.c68)))AND(vt0.c0)))))OR(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY TYPEOF(DISTINCT vt0.c0) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((((((vt0.c1)IS NOT(1.969346457E9)))AND(((((vt0.c0)AND(t0.c68)))AND(vt0.c0)))))OR(CAST(vt0.c1 AS INTEGER)))) ORDER BY TYPEOF(DISTINCT vt0.c0) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)IS NOT(1.969346457E9)))AND(((((vt0.c0)AND(t0.c68)))AND(vt0.c0)))))OR(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY TYPEOF(DISTINCT vt0.c0) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((((((vt0.c1)IS NOT(1.969346457E9)))AND(((((vt0.c0)AND(t0.c68)))AND(vt0.c0)))))OR(CAST(vt0.c1 AS INTEGER)))) ORDER BY TYPEOF(DISTINCT vt0.c0) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((t0.c68)) BETWEEN ((((t0.c68)%(t0.c68)))) AND ((((((v0.c0)OR(v0.c0)))AND(t0.c68))))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN ((((t0.c68)%(t0.c68)))) AND ((((((v0.c0)OR(v0.c0)))AND(t0.c68)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((t0.c68)) BETWEEN ((((t0.c68)%(t0.c68)))) AND ((((((v0.c0)OR(v0.c0)))AND(t0.c68))))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN ((((t0.c68)%(t0.c68)))) AND ((((((v0.c0)OR(v0.c0)))AND(t0.c68)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM v0 INNER JOIN t0 ON SQLITE_COMPILEOPTION_USED((v0.c0 IN ())) WHERE (((((((v0.c0)AND(t0.c68)))OR(v0.c0)))IS NOT(TRIM(t0.c68)))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(t0.c68)))OR(v0.c0)))IS NOT(TRIM(t0.c68)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON SQLITE_COMPILEOPTION_USED((v0.c0 IN ())) ORDER BY v0.c0 ASC);
SELECT ALL * FROM v0 INNER JOIN t0 ON SQLITE_COMPILEOPTION_USED((v0.c0 IN ())) WHERE (((((((v0.c0)AND(t0.c68)))OR(v0.c0)))IS NOT(TRIM(t0.c68)))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(t0.c68)))OR(v0.c0)))IS NOT(TRIM(t0.c68)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON SQLITE_COMPILEOPTION_USED((v0.c0 IN ())) ORDER BY v0.c0 ASC);
SELECT ALL * FROM v0 INNER JOIN t0 ON SQLITE_COMPILEOPTION_USED((v0.c0 IN ())) WHERE (((((((v0.c0)AND(t0.c68)))OR(v0.c0)))IS NOT(TRIM(t0.c68)))) ORDER BY v0.c0 ASC;
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c1 IN (0.37283036299574124)) AS TEXT)) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((x''))) AS BLOB), ((0.6155741593572157)==(((vt0.c1) NOT NULL))) DESC  NULLS LAST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN (0.37283036299574124)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((x''))) AS BLOB), ((0.6155741593572157)=(((vt0.c1) NOT NULL))) DESC  NULLS LAST, NULL DESC);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c1 IN (0.37283036299574124)) AS TEXT)) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((x''))) AS BLOB), ((0.6155741593572157)==(((vt0.c1) NOT NULL))) DESC  NULLS LAST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN (0.37283036299574124)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((x''))) AS BLOB), ((0.6155741593572157)=(((vt0.c1) NOT NULL))) DESC  NULLS LAST, NULL DESC);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c1 IN (0.37283036299574124)) AS TEXT)) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((x''))) AS BLOB), ((0.6155741593572157)==(((vt0.c1) NOT NULL))) DESC  NULLS LAST, NULL DESC;
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (DATETIME(vt0.c1, t0.c68, t0.c68)) AND (((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) BETWEEN (DATETIME(vt0.c1, t0.c68, t0.c68)) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (DATETIME(vt0.c1, t0.c68, t0.c68)) AND (((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) BETWEEN (DATETIME(vt0.c1, t0.c68, t0.c68)) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (DATETIME(vt0.c1, t0.c68, t0.c68)) AND (((vt0.c1) NOT NULL))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c68)<<(t0.c68)))<<(((t0.c68)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)<<(t0.c68)))<<(((t0.c68)<=(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c68)<<(t0.c68)))<<(((t0.c68)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)<<(t0.c68)))<<(((t0.c68)<=(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c68)<<(t0.c68)))<<(((t0.c68)<=(vt0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN x'' WHEN 'hWI*' THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) NOTNULL) THEN ('J7~<' IN ()) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN x'' WHEN 'hWI*' THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) NOTNULL) THEN ('J7~<' IN ()) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN x'' WHEN 'hWI*' THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) NOTNULL) THEN ('J7~<' IN ()) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN x'' WHEN 'hWI*' THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) NOTNULL) THEN ('J7~<' IN ()) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN x'' WHEN 'hWI*' THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) NOTNULL) THEN ('J7~<' IN ()) ELSE (vt0.c0 IN ()) END);
SELECT * FROM t0, v0, vt0 WHERE (v0.c0) ORDER BY UPPER(((vt0.c1)>>(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY UPPER(((vt0.c1)>>(vt0.c1))));
SELECT * FROM t0, v0, vt0 WHERE (v0.c0) ORDER BY UPPER(((vt0.c1)>>(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY UPPER(((vt0.c1)>>(vt0.c1))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((NOT ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt0.c1))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((NOT ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt0.c1))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((NOT ((NOT (vt0.c1)))));
SELECT ALL * FROM vt0, v0, t0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((x'8f5945f9')) AND ((vt0.c1))))) AND ((t0.c68 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((x'8f5945f9')) AND ((vt0.c1))))) AND ((t0.c68 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((x'8f5945f9')) AND ((vt0.c1))))) AND ((t0.c68 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((x'8f5945f9')) AND ((vt0.c1))))) AND ((t0.c68 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM v0 WHERE (-218656554) ORDER BY '1776455911'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-218656554) IS TRUE)  as count FROM v0 ORDER BY '1776455911'  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (-218656554) ORDER BY '1776455911'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-218656554) IS TRUE)  as count FROM v0 ORDER BY '1776455911'  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (-218656554) ORDER BY '1776455911'  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS BLOB)) ORDER BY COALESCE(CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS BLOB)) ORDER BY COALESCE(CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS BLOB)) ORDER BY COALESCE(CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.c0)AND(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)AND(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.c0)AND(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)AND(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.c0)AND(vt0.c1)) AS INTEGER));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((+ (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((+ (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((UPPER(DISTINCT v0.c0))>=(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT v0.c0))>=(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((UPPER(DISTINCT v0.c0))>=(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT v0.c0))>=(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE x'56c0' END) NOT BETWEEN (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68))) AND (UPPER(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE x'56c0' END) NOT BETWEEN (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68))) AND (UPPER(t0.c68)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE x'56c0' END) NOT BETWEEN (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68))) AND (UPPER(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE x'56c0' END) NOT BETWEEN (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68))) AND (UPPER(t0.c68)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE x'56c0' END) NOT BETWEEN (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68))) AND (UPPER(t0.c68))));
SELECT * FROM vt0 INDEXED BY i55 WHERE ((- ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 INDEXED BY i55);
SELECT * FROM vt0 INDEXED BY i55 WHERE ((- ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 INDEXED BY i55);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((t0.c68)==(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((+ (vt0.c0))))>((CAST(vt0.c0 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68)=(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((+ (vt0.c0))))>((CAST(vt0.c0 AS NUMERIC)))) ASC);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((t0.c68)==(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((+ (vt0.c0))))>((CAST(vt0.c0 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68)=(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((+ (vt0.c0))))>((CAST(vt0.c0 AS NUMERIC)))) ASC);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((t0.c68)==(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((+ (vt0.c0))))>((CAST(vt0.c0 AS NUMERIC)))) ASC;
SELECT * FROM v0, vt0, t0 WHERE (((v0.c0) NOT BETWEEN (vt0.c1) AND (t0.c68)) COLLATE RTRIM COLLATE RTRIM) ORDER BY TRIM(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (vt0.c1) AND (t0.c68)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY TRIM(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END)  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE (((v0.c0) NOT BETWEEN (vt0.c1) AND (t0.c68)) COLLATE RTRIM COLLATE RTRIM) ORDER BY TRIM(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (vt0.c1) AND (t0.c68)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY TRIM(DISTINCT CASE WHEN v0.c0 THEN v0.c0 END)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((vt0.c1) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((vt0.c1) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c1) ISNULL)));
SELECT ALL * FROM v0, t0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END))) ORDER BY ((((v0.c0) IS TRUE))LIKE(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0) IS TRUE))LIKE(v0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0, t0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END))) ORDER BY ((((v0.c0) IS TRUE))LIKE(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0) IS TRUE))LIKE(v0.c0 COLLATE BINARY)));
SELECT * FROM t0, v0 WHERE ((((+ (t0.c68)))||(CAST(v0.c0 AS NUMERIC)))) ORDER BY UPPER(((t0.c68) ISNULL)) DESC  NULLS LAST, CASE WHEN CASE t0.c68  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END THEN ((((t0.c68)OR(v0.c0)))AND(t0.c68)) END, v0.c0;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c68)))||(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, v0 ORDER BY UPPER(((t0.c68) ISNULL)) DESC  NULLS LAST, CASE WHEN CASE t0.c68  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END THEN ((((t0.c68)OR(v0.c0)))AND(t0.c68)) END, v0.c0);
SELECT * FROM t0, v0 WHERE ((((+ (t0.c68)))||(CAST(v0.c0 AS NUMERIC)))) ORDER BY UPPER(((t0.c68) ISNULL)) DESC  NULLS LAST, CASE WHEN CASE t0.c68  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END THEN ((((t0.c68)OR(v0.c0)))AND(t0.c68)) END, v0.c0;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c68)))||(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, v0 ORDER BY UPPER(((t0.c68) ISNULL)) DESC  NULLS LAST, CASE WHEN CASE t0.c68  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END THEN ((((t0.c68)OR(v0.c0)))AND(t0.c68)) END, v0.c0);
SELECT ALL * FROM v0 INNER JOIN t0 ON json_quote(v0.c0) WHERE (IFNULL(((v0.c0) ISNULL), '~''%}	*&2)'));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((v0.c0) ISNULL), '~''%}	*&2)')) IS TRUE)  as count FROM v0 INNER JOIN t0 ON json_quote(v0.c0));
SELECT ALL * FROM v0 INNER JOIN t0 ON json_quote(v0.c0) WHERE (IFNULL(((v0.c0) ISNULL), '~''%}	*&2)'));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((v0.c0) ISNULL), '~''%}	*&2)')) IS TRUE)  as count FROM v0 INNER JOIN t0 ON json_quote(v0.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY ((vt0.c1)&(vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)&(vt0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY ((vt0.c1)&(vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)&(vt0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY ((vt0.c1)&(vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON LOWER(v0.c0) COLLATE BINARY WHERE ((((+ (t0.c68))) NOT BETWEEN (((v0.c0)/(v0.c0))) AND (t0.c68))) ORDER BY (v0.c0 IN ()) COLLATE NOCASE  NULLS LAST, (((t0.c68))<((LTRIM(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c68))) NOT BETWEEN (((v0.c0)/(v0.c0))) AND (t0.c68))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON LOWER(v0.c0) COLLATE BINARY ORDER BY (v0.c0 IN ()) COLLATE NOCASE  NULLS LAST, (((t0.c68))<((LTRIM(v0.c0)))) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON LOWER(v0.c0) COLLATE BINARY WHERE ((((+ (t0.c68))) NOT BETWEEN (((v0.c0)/(v0.c0))) AND (t0.c68))) ORDER BY (v0.c0 IN ()) COLLATE NOCASE  NULLS LAST, (((t0.c68))<((LTRIM(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c68))) NOT BETWEEN (((v0.c0)/(v0.c0))) AND (t0.c68))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON LOWER(v0.c0) COLLATE BINARY ORDER BY (v0.c0 IN ()) COLLATE NOCASE  NULLS LAST, (((t0.c68))<((LTRIM(v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON CAST(v0.c0 AS NUMERIC) WHERE (HEX(DISTINCT JULIANDAY(vt0.c0, v0.c0, vt0.c1))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND (((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT JULIANDAY(vt0.c0, v0.c0, vt0.c1))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CAST(v0.c0 AS NUMERIC) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND (((v0.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON CAST(v0.c0 AS NUMERIC) WHERE (HEX(DISTINCT JULIANDAY(vt0.c0, v0.c0, vt0.c1))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND (((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT JULIANDAY(vt0.c0, v0.c0, vt0.c1))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CAST(v0.c0 AS NUMERIC) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND (((v0.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON SQLITE_COMPILEOPTION_USED(CAST(t0.c68 AS INTEGER)) WHERE (v0.c0) ORDER BY UPPER(DISTINCT ((('')) BETWEEN ((t0.c68)) AND ((v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0 INNER JOIN v0 ON SQLITE_COMPILEOPTION_USED(CAST(t0.c68 AS INTEGER)) ORDER BY UPPER(DISTINCT ((('')) BETWEEN ((t0.c68)) AND ((v0.c0)))) DESC);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON SQLITE_COMPILEOPTION_USED(CAST(t0.c68 AS INTEGER)) WHERE (v0.c0) ORDER BY UPPER(DISTINCT ((('')) BETWEEN ((t0.c68)) AND ((v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0 INNER JOIN v0 ON SQLITE_COMPILEOPTION_USED(CAST(t0.c68 AS INTEGER)) ORDER BY UPPER(DISTINCT ((('')) BETWEEN ((t0.c68)) AND ((v0.c0)))) DESC);
SELECT * FROM v0, vt0, t0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, t0, vt0 WHERE (((((vt0.c1) NOTNULL)) IS FALSE)) ORDER BY ((((((((v0.c0)AND(x'')))OR(vt0.c0)))OR((NOT (v0.c0)))))OR('r_m\r阶hcg.'))  NULLS FIRST, ((TYPEOF(v0.c0))AND(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((v0.c0)AND(x'')))OR(vt0.c0)))OR((NOT (v0.c0)))))OR('r_m\r阶hcg.'))  NULLS FIRST, ((TYPEOF(v0.c0))AND(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE (((((vt0.c1) NOTNULL)) IS FALSE)) ORDER BY ((((((((v0.c0)AND(x'')))OR(vt0.c0)))OR((NOT (v0.c0)))))OR('r_m\r阶hcg.'))  NULLS FIRST, ((TYPEOF(v0.c0))AND(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((v0.c0)AND(x'')))OR(vt0.c0)))OR((NOT (v0.c0)))))OR('r_m\r阶hcg.'))  NULLS FIRST, ((TYPEOF(v0.c0))AND(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (UPPER(DISTINCT x'')) ORDER BY (((t0.c68) NOT NULL) IN (((((t0.c68)OR(t0.c68)))AND(t0.c68)), (t0.c68 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT x'')) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68) NOT NULL) IN (((((t0.c68)OR(t0.c68)))AND(t0.c68)), (t0.c68 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (UPPER(DISTINCT x'')) ORDER BY (((t0.c68) NOT NULL) IN (((((t0.c68)OR(t0.c68)))AND(t0.c68)), (t0.c68 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT x'')) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68) NOT NULL) IN (((((t0.c68)OR(t0.c68)))AND(t0.c68)), (t0.c68 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (UPPER(DISTINCT x'')) ORDER BY (((t0.c68) NOT NULL) IN (((((t0.c68)OR(t0.c68)))AND(t0.c68)), (t0.c68 IN ())));
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0 COLLATE BINARY)>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY (NOT (((v0.c0)OR(t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (NOT (((v0.c0)OR(t0.c68))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0 COLLATE BINARY)>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY (NOT (((v0.c0)OR(t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (NOT (((v0.c0)OR(t0.c68))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (vt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE x'5982' END) BETWEEN (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))) AND (CAST(t0.c68 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE x'5982' END) BETWEEN (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))) AND (CAST(t0.c68 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE x'5982' END) BETWEEN (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))) AND (CAST(t0.c68 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE x'5982' END) BETWEEN (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))) AND (CAST(t0.c68 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE x'5982' END) BETWEEN (((t0.c68) BETWEEN (t0.c68) AND (t0.c68))) AND (CAST(t0.c68 AS TEXT))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ ((NOT (vt0.c1)))));
SELECT ALL * FROM v0 WHERE (SUBSTR(v0.c0, ((((v0.c0)AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(v0.c0, ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (SUBSTR(v0.c0, ((((v0.c0)AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(v0.c0, ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt0 WHERE (0X7181a66 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0x7181a66 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0X7181a66 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0x7181a66 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0X7181a66 COLLATE BINARY);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((- ((+ (vt0.c1))))) ORDER BY vt0.c1 ASC, (- (0.5506096689523392))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt0.c1))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY vt0.c1 ASC, (- (0.5506096689523392))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((- ((+ (vt0.c1))))) ORDER BY vt0.c1 ASC, (- (0.5506096689523392))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt0.c1))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY vt0.c1 ASC, (- (0.5506096689523392))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((- ((+ (vt0.c1))))) ORDER BY vt0.c1 ASC, (- (0.5506096689523392))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (TRIM((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (TRIM((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (TRIM((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (IFNULL(DISTINCT vt0.c0 COLLATE BINARY, x'')) ORDER BY (((vt0.c0 IN ())) BETWEEN (DATE(vt0.c1, v0.c0, '')) AND (((t0.c68)/(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT vt0.c0 COLLATE BINARY, x'')) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (DATE(vt0.c1, v0.c0, '')) AND (((t0.c68)/(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (IFNULL(DISTINCT vt0.c0 COLLATE BINARY, x'')) ORDER BY (((vt0.c0 IN ())) BETWEEN (DATE(vt0.c1, v0.c0, '')) AND (((t0.c68)/(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT vt0.c0 COLLATE BINARY, x'')) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (DATE(vt0.c1, v0.c0, '')) AND (((t0.c68)/(vt0.c0)))));
SELECT * FROM vt0, v0, t0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(vt0.c1 COLLATE BINARY)))OR(((vt0.c1)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND(vt0.c1 COLLATE BINARY)))OR(((vt0.c1)*(v0.c0))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(vt0.c1 COLLATE BINARY)))OR(((vt0.c1)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND(vt0.c1 COLLATE BINARY)))OR(((vt0.c1)*(v0.c0))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((LIKELY(t0.c68)) NOT NULL)) ORDER BY (('-1307636934')IS NOT(t0.c68))  NULLS FIRST, (((vt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((((x'') NOTNULL), CAST(v0.c0 AS REAL), ((v0.c0) IS FALSE))) AND (((x'9884' IN ()), (vt0.c0 IN (v0.c0, vt0.c0)), ((vt0.c0)>=(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(t0.c68)) NOT NULL)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (('-1307636934')IS NOT(t0.c68))  NULLS FIRST, (((vt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((((x'') NOTNULL), CAST(v0.c0 AS REAL), ((v0.c0) IS FALSE))) AND (((x'9884' IN ()), (vt0.c0 IN (v0.c0, vt0.c0)), ((vt0.c0)>=(vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((LIKELY(t0.c68)) NOT NULL)) ORDER BY (('-1307636934')IS NOT(t0.c68))  NULLS FIRST, (((vt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((((x'') NOTNULL), CAST(v0.c0 AS REAL), ((v0.c0) IS FALSE))) AND (((x'9884' IN ()), (vt0.c0 IN (v0.c0, vt0.c0)), ((vt0.c0)>=(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(t0.c68)) NOT NULL)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (('-1307636934')IS NOT(t0.c68))  NULLS FIRST, (((vt0.c1, v0.c0, vt0.c0)) NOT BETWEEN ((((x'') NOTNULL), CAST(v0.c0 AS REAL), ((v0.c0) IS FALSE))) AND (((x'9884' IN ()), (vt0.c0 IN (v0.c0, vt0.c0)), ((vt0.c0)>=(vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((('1737412492') NOT NULL)) ORDER BY 0Xffffffffbd507833 COLLATE RTRIM DESC  NULLS LAST, UNLIKELY(((t0.c68)AND(NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('1737412492') NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY 0Xffffffffbd507833 COLLATE RTRIM DESC  NULLS LAST, UNLIKELY(((t0.c68)AND(NULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((('1737412492') NOT NULL)) ORDER BY 0Xffffffffbd507833 COLLATE RTRIM DESC  NULLS LAST, UNLIKELY(((t0.c68)AND(NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('1737412492') NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY 0Xffffffffbd507833 COLLATE RTRIM DESC  NULLS LAST, UNLIKELY(((t0.c68)AND(NULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((('1737412492') NOT NULL)) ORDER BY 0Xffffffffbd507833 COLLATE RTRIM DESC  NULLS LAST, UNLIKELY(((t0.c68)AND(NULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (LTRIM((((v0.c0, vt0.c1, 0.529885349953836)) BETWEEN ((t0.c68, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((LTRIM((((v0.c0, vt0.c1, 0.529885349953836)) BETWEEN ((t0.c68, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (LTRIM((((v0.c0, vt0.c1, 0.529885349953836)) BETWEEN ((t0.c68, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((LTRIM((((v0.c0, vt0.c1, 0.529885349953836)) BETWEEN ((t0.c68, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c68)))>=((('54523724') NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c68)))>=((('54523724') NOT BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c68)))>=((('54523724') NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c68)))>=((('54523724') NOT BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c68)))>=((('54523724') NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CASE t0.c68 COLLATE NOCASE  WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 WHEN (((t0.c68)) BETWEEN ((vt0.c1)) AND ((t0.c68))) THEN NULL WHEN ((t0.c68) NOTNULL) THEN CAST(t0.c68 AS BLOB) END) ORDER BY t0.c68, ((json_object(vt0.c0, vt0.c0, NULL, vt0.c1)) ISNULL) ASC, (((((vt0.c1) NOTNULL), CASE vt0.c0  WHEN NULL THEN vt0.c0 END, ((t0.c68) NOT BETWEEN (-0.0) AND (t0.c68))))<((((t0.c68) IS FALSE), t0.c68 COLLATE BINARY, ((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(vt0.c1)))AND(vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c68 COLLATE NOCASE  WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 WHEN (((t0.c68)) BETWEEN ((vt0.c1)) AND ((t0.c68))) THEN NULL WHEN ((t0.c68) NOTNULL) THEN CAST(t0.c68 AS BLOB) END) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY t0.c68, ((json_object(vt0.c0, vt0.c0, NULL, vt0.c1)) ISNULL) ASC, (((((vt0.c1) NOTNULL), CASE vt0.c0  WHEN NULL THEN vt0.c0 END, ((t0.c68) NOT BETWEEN (-0.0) AND (t0.c68))))<((((t0.c68) IS FALSE), t0.c68 COLLATE BINARY, ((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(vt0.c1)))AND(vt0.c1))))) DESC  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CASE t0.c68 COLLATE NOCASE  WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 WHEN (((t0.c68)) BETWEEN ((vt0.c1)) AND ((t0.c68))) THEN NULL WHEN ((t0.c68) NOTNULL) THEN CAST(t0.c68 AS BLOB) END) ORDER BY t0.c68, ((json_object(vt0.c0, vt0.c0, NULL, vt0.c1)) ISNULL) ASC, (((((vt0.c1) NOTNULL), CASE vt0.c0  WHEN NULL THEN vt0.c0 END, ((t0.c68) NOT BETWEEN (-0.0) AND (t0.c68))))<((((t0.c68) IS FALSE), t0.c68 COLLATE BINARY, ((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(vt0.c1)))AND(vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c68 COLLATE NOCASE  WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 WHEN (((t0.c68)) BETWEEN ((vt0.c1)) AND ((t0.c68))) THEN NULL WHEN ((t0.c68) NOTNULL) THEN CAST(t0.c68 AS BLOB) END) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY t0.c68, ((json_object(vt0.c0, vt0.c0, NULL, vt0.c1)) ISNULL) ASC, (((((vt0.c1) NOTNULL), CASE vt0.c0  WHEN NULL THEN vt0.c0 END, ((t0.c68) NOT BETWEEN (-0.0) AND (t0.c68))))<((((t0.c68) IS FALSE), t0.c68 COLLATE BINARY, ((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(vt0.c1)))AND(vt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, v0 WHERE (CAST((+ (vt0.c1)) AS TEXT)) ORDER BY (vt0.c0 COLLATE BINARY IN (((('*ehU\r', vt0.c1, vt0.c1))=((vt0.c0, t0.c68, x'')))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (vt0.c0 COLLATE BINARY IN (((('*ehU\r', vt0.c1, vt0.c1))=((vt0.c0, t0.c68, x''))))));
SELECT ALL * FROM t0, vt0, v0 WHERE (CAST((+ (vt0.c1)) AS TEXT)) ORDER BY (vt0.c0 COLLATE BINARY IN (((('*ehU\r', vt0.c1, vt0.c1))=((vt0.c0, t0.c68, x'')))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (vt0.c0 COLLATE BINARY IN (((('*ehU\r', vt0.c1, vt0.c1))=((vt0.c0, t0.c68, x''))))));
SELECT ALL * FROM t0 WHERE (0.0043630060375163815) ORDER BY ((((t0.c68)&(x'')))<(((t0.c68) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((0.0043630060375163815) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)&(x'')))<(((t0.c68) NOTNULL))));
SELECT ALL * FROM t0 WHERE (0.0043630060375163815) ORDER BY ((((t0.c68)&(x'')))<(((t0.c68) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((0.0043630060375163815) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)&(x'')))<(((t0.c68) NOTNULL))));
SELECT ALL * FROM t0 WHERE (0.0043630060375163815) ORDER BY ((((t0.c68)&(x'')))<(((t0.c68) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) IS TRUE));
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT * FROM vt0, t0, v0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((CASE vt0.c0  WHEN t0.c68 THEN '197902739' WHEN vt0.c1 THEN vt0.c1 WHEN '' THEN vt0.c0 END)>=((vt0.c1 IN ()))) WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))!=(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))!=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((CASE vt0.c0  WHEN t0.c68 THEN '197902739' WHEN vt0.c1 THEN vt0.c1 WHEN '' THEN vt0.c0 END)>=((vt0.c1 IN ()))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((CASE vt0.c0  WHEN t0.c68 THEN '197902739' WHEN vt0.c1 THEN vt0.c1 WHEN '' THEN vt0.c0 END)>=((vt0.c1 IN ()))) WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))!=(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))!=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((CASE vt0.c0  WHEN t0.c68 THEN '197902739' WHEN vt0.c1 THEN vt0.c1 WHEN '' THEN vt0.c0 END)>=((vt0.c1 IN ()))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((CASE vt0.c0  WHEN t0.c68 THEN '197902739' WHEN vt0.c1 THEN vt0.c1 WHEN '' THEN vt0.c0 END)>=((vt0.c1 IN ()))) WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))!=(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c68)))IS NOT(((t0.c68)||('[?5.|C[䄲*'))))) ORDER BY ((((0.38837484652373033 COLLATE BINARY)AND(ROUND(t0.c68, t0.c68))))OR(NULL)), ((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(''))) BETWEEN (t0.c68) AND (((t0.c68)<=(t0.c68))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c68)))IS NOT(((t0.c68)||('[?5.|C[䄲*'))))) IS TRUE)  as count FROM t0 ORDER BY ((((0.38837484652373033 COLLATE BINARY)AND(ROUND(t0.c68, t0.c68))))OR(NULL)), ((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(''))) BETWEEN (t0.c68) AND (((t0.c68)<=(t0.c68))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c68)))IS NOT(((t0.c68)||('[?5.|C[䄲*'))))) ORDER BY ((((0.38837484652373033 COLLATE BINARY)AND(ROUND(t0.c68, t0.c68))))OR(NULL)), ((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(''))) BETWEEN (t0.c68) AND (((t0.c68)<=(t0.c68))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c68)))IS NOT(((t0.c68)||('[?5.|C[䄲*'))))) IS TRUE)  as count FROM t0 ORDER BY ((((0.38837484652373033 COLLATE BINARY)AND(ROUND(t0.c68, t0.c68))))OR(NULL)), ((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(''))) BETWEEN (t0.c68) AND (((t0.c68)<=(t0.c68))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c68)))IS NOT(((t0.c68)||('[?5.|C[䄲*'))))) ORDER BY ((((0.38837484652373033 COLLATE BINARY)AND(ROUND(t0.c68, t0.c68))))OR(NULL)), ((((((((((t0.c68)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(''))) BETWEEN (t0.c68) AND (((t0.c68)<=(t0.c68))))  NULLS LAST;
SELECT COUNT(*) FROM v0, t0 WHERE ((~ (((v0.c0) NOTNULL)))) ORDER BY CASE INSTR(t0.c68, v0.c0)  WHEN NULL THEN (((t0.c68)) BETWEEN ((t0.c68)) AND ((0.7737754095973193))) END;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE INSTR(t0.c68, v0.c0)  WHEN NULL THEN (((t0.c68)) BETWEEN ((t0.c68)) AND ((0.7737754095973193))) END);
SELECT COUNT(*) FROM v0, t0 WHERE ((~ (((v0.c0) NOTNULL)))) ORDER BY CASE INSTR(t0.c68, v0.c0)  WHEN NULL THEN (((t0.c68)) BETWEEN ((t0.c68)) AND ((0.7737754095973193))) END;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE INSTR(t0.c68, v0.c0)  WHEN NULL THEN (((t0.c68)) BETWEEN ((t0.c68)) AND ((0.7737754095973193))) END);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((NULL)>>(((v0.c0)/(t0.c68))))) ORDER BY ((TRIM(DISTINCT 0.699452205614376, t0.c68)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(((v0.c0)/(t0.c68))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((TRIM(DISTINCT 0.699452205614376, t0.c68)) IS FALSE));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((NULL)>>(((v0.c0)/(t0.c68))))) ORDER BY ((TRIM(DISTINCT 0.699452205614376, t0.c68)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(((v0.c0)/(t0.c68))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((TRIM(DISTINCT 0.699452205614376, t0.c68)) IS FALSE));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (x'' COLLATE RTRIM) ORDER BY HEX(CASE WHEN vt0.c1 THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY HEX(CASE WHEN vt0.c1 THEN v0.c0 END));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (x'' COLLATE RTRIM) ORDER BY HEX(CASE WHEN vt0.c1 THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY HEX(CASE WHEN vt0.c1 THEN v0.c0 END));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0))==((v0.c0)))))==((((v0.c0)LIKE(v0.c0)))))) ORDER BY (+ (v0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0))==((v0.c0)))))=((((v0.c0)LIKE(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0))==((v0.c0)))))==((((v0.c0)LIKE(v0.c0)))))) ORDER BY (+ (v0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0))==((v0.c0)))))=((((v0.c0)LIKE(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (0xffffffffc9bf4841) AND (CASE WHEN '-1118799821' THEN t0.c68 END))) ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT BETWEEN (0xffffffffc9bf4841) AND (CASE WHEN '-1118799821' THEN t0.c68 END))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (0xffffffffc9bf4841) AND (CASE WHEN '-1118799821' THEN t0.c68 END))) ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT BETWEEN (0xffffffffc9bf4841) AND (CASE WHEN '-1118799821' THEN t0.c68 END))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((vt0.c1)AND(vt0.c1)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0))=((v0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))==((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0))=((v0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))==((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0, t0, vt0 WHERE (((t0.c68)!=((- (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((t0.c68)<>((- (t0.c68))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((t0.c68)!=((- (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((t0.c68)<>((- (t0.c68))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, vt0, t0 WHERE (((((((((((((('-204291796' IN ()))AND(0.7292013032598047)))OR(((((v0.c0)OR(t0.c68)))AND(v0.c0)))))OR((v0.c0 IN ()))))OR(t0.c68 COLLATE BINARY)))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0))) ORDER BY SQLITE_COMPILEOPTION_GET(((((((((t0.c68)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((('-204291796' IN ()))AND(0.7292013032598047)))OR(((((v0.c0)OR(t0.c68)))AND(v0.c0)))))OR((v0.c0 IN ()))))OR(t0.c68 COLLATE BINARY)))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY SQLITE_COMPILEOPTION_GET(((((((((t0.c68)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1))) ASC);
SELECT ALL * FROM v0, vt0, t0 WHERE (((((((((((((('-204291796' IN ()))AND(0.7292013032598047)))OR(((((v0.c0)OR(t0.c68)))AND(v0.c0)))))OR((v0.c0 IN ()))))OR(t0.c68 COLLATE BINARY)))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0))) ORDER BY SQLITE_COMPILEOPTION_GET(((((((((t0.c68)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((('-204291796' IN ()))AND(0.7292013032598047)))OR(((((v0.c0)OR(t0.c68)))AND(v0.c0)))))OR((v0.c0 IN ()))))OR(t0.c68 COLLATE BINARY)))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY SQLITE_COMPILEOPTION_GET(((((((((t0.c68)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1))) ASC);
SELECT * FROM t0, vt0 NATURAL JOIN v0 WHERE (((((((t0.c68) ISNULL))OR(NULL)))OR(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c68) ISNULL))OR(NULL)))OR(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 NATURAL JOIN v0);
SELECT * FROM t0, vt0 NATURAL JOIN v0 WHERE (((((((t0.c68) ISNULL))OR(NULL)))OR(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c68) ISNULL))OR(NULL)))OR(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 NATURAL JOIN v0);
SELECT * FROM t0, v0 NATURAL JOIN vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN '' COLLATE NOCASE THEN v0.c0 COLLATE RTRIM WHEN ((((vt0.c1)AND(t0.c68)))AND(v0.c0)) THEN (- (vt0.c1)) WHEN vt0.c1 THEN 0.11617859011093246 END) ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))AND(((t0.c68)&(0.5169029288545376)))))AND(((v0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN (v0.c0, vt0.c1)))))OR(NULLIF(0.08276681549762455, -2.144022669E9))), (((t0.c68))<((x''))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN '' COLLATE NOCASE THEN v0.c0 COLLATE RTRIM WHEN ((((vt0.c1)AND(t0.c68)))AND(v0.c0)) THEN (- (vt0.c1)) WHEN vt0.c1 THEN 0.11617859011093246 END) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt0 ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))AND(((t0.c68)&(0.5169029288545376)))))AND(((v0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN (v0.c0, vt0.c1)))))OR(NULLIF(0.08276681549762455, -2.144022669E9))), (((t0.c68))<((x''))) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM t0, v0 NATURAL JOIN vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN '' COLLATE NOCASE THEN v0.c0 COLLATE RTRIM WHEN ((((vt0.c1)AND(t0.c68)))AND(v0.c0)) THEN (- (vt0.c1)) WHEN vt0.c1 THEN 0.11617859011093246 END) ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))AND(((t0.c68)&(0.5169029288545376)))))AND(((v0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN (v0.c0, vt0.c1)))))OR(NULLIF(0.08276681549762455, -2.144022669E9))), (((t0.c68))<((x''))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN '' COLLATE NOCASE THEN v0.c0 COLLATE RTRIM WHEN ((((vt0.c1)AND(t0.c68)))AND(v0.c0)) THEN (- (vt0.c1)) WHEN vt0.c1 THEN 0.11617859011093246 END) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt0 ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))AND(((t0.c68)&(0.5169029288545376)))))AND(((v0.c0)LIKE(vt0.c0)))))AND((vt0.c0 IN (v0.c0, vt0.c1)))))OR(NULLIF(0.08276681549762455, -2.144022669E9))), (((t0.c68))<((x''))) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (NULLIF((vt0.c1 IN (vt0.c1)), ((vt0.c0)<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((vt0.c1 IN (vt0.c1)), ((vt0.c0)<(vt0.c1)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (NULLIF((vt0.c1 IN (vt0.c1)), ((vt0.c0)<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((vt0.c1 IN (vt0.c1)), ((vt0.c0)<(vt0.c1)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (NULLIF((vt0.c1 IN (vt0.c1)), ((vt0.c0)<(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1))) AS REAL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/((NOT (-885877.0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/((NOT (-885877.0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1))) AS REAL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/((NOT (-885877.0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/((NOT (-885877.0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1))) AS REAL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/((NOT (-885877.0))));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((((t0.c68 IN (v0.c0)))OR((v0.c0 IN ()))))AND(((vt0.c0)==(7.00895546E8))))) ORDER BY ((((t0.c68) NOT NULL))<<(((v0.c0) IS TRUE))) ASC  NULLS FIRST, CASE WHEN 0.6041980427674988 THEN ((vt0.c1)LIKE(vt0.c1)) ELSE ((v0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT (((((((t0.c68 IN (v0.c0)))OR((v0.c0 IN ()))))AND(((vt0.c0)==(7.00895546E8))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((t0.c68) NOT NULL))<<(((v0.c0) IS TRUE))) ASC  NULLS FIRST, CASE WHEN 0.6041980427674988 THEN ((vt0.c1)LIKE(vt0.c1)) ELSE ((v0.c0) NOTNULL) END);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((((t0.c68 IN (v0.c0)))OR((v0.c0 IN ()))))AND(((vt0.c0)==(7.00895546E8))))) ORDER BY ((((t0.c68) NOT NULL))<<(((v0.c0) IS TRUE))) ASC  NULLS FIRST, CASE WHEN 0.6041980427674988 THEN ((vt0.c1)LIKE(vt0.c1)) ELSE ((v0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT (((((((t0.c68 IN (v0.c0)))OR((v0.c0 IN ()))))AND(((vt0.c0)==(7.00895546E8))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((t0.c68) NOT NULL))<<(((v0.c0) IS TRUE))) ASC  NULLS FIRST, CASE WHEN 0.6041980427674988 THEN ((vt0.c1)LIKE(vt0.c1)) ELSE ((v0.c0) NOTNULL) END);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c68 COLLATE BINARY AS REAL)) ORDER BY (CASE t0.c68  WHEN t0.c68 THEN t0.c68 END IN ()), ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE NULL END)OR(t0.c68 COLLATE RTRIM)))OR(0.38902300909737864))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c68 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (CASE t0.c68  WHEN t0.c68 THEN t0.c68 END IN ()), ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE NULL END)OR(t0.c68 COLLATE RTRIM)))OR(0.38902300909737864))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c68 COLLATE BINARY AS REAL)) ORDER BY (CASE t0.c68  WHEN t0.c68 THEN t0.c68 END IN ()), ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE NULL END)OR(t0.c68 COLLATE RTRIM)))OR(0.38902300909737864))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c68 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (CASE t0.c68  WHEN t0.c68 THEN t0.c68 END IN ()), ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE NULL END)OR(t0.c68 COLLATE RTRIM)))OR(0.38902300909737864))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c68 COLLATE BINARY AS REAL)) ORDER BY (CASE t0.c68  WHEN t0.c68 THEN t0.c68 END IN ()), ((((CASE t0.c68  WHEN t0.c68 THEN t0.c68 ELSE NULL END)OR(t0.c68 COLLATE RTRIM)))OR(0.38902300909737864))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE ((0.2859983844779549)||(v0.c0))  WHEN LENGTH(v0.c0) THEN v0.c0 COLLATE BINARY END) ORDER BY (v0.c0 COLLATE RTRIM IN ())  NULLS LAST, CAST(((NULL) IS FALSE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.2859983844779549)||(v0.c0))  WHEN LENGTH(v0.c0) THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE RTRIM IN ())  NULLS LAST, CAST(((NULL) IS FALSE) AS INTEGER));
SELECT ALL * FROM v0 WHERE (CASE ((0.2859983844779549)||(v0.c0))  WHEN LENGTH(v0.c0) THEN v0.c0 COLLATE BINARY END) ORDER BY (v0.c0 COLLATE RTRIM IN ())  NULLS LAST, CAST(((NULL) IS FALSE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.2859983844779549)||(v0.c0))  WHEN LENGTH(v0.c0) THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE RTRIM IN ())  NULLS LAST, CAST(((NULL) IS FALSE) AS INTEGER));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))|(vt0.c1)) WHERE ((((vt0.c0)%(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)%(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))|(vt0.c1)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))|(vt0.c1)) WHERE ((((vt0.c0)%(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)%(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))|(vt0.c1)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))|(vt0.c1)) WHERE ((((vt0.c0)%(vt0.c0)) IN ()));
SELECT * FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)=(vt0.c0)))) AND ((v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)=(vt0.c0)))) AND ((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)=(vt0.c0)))) AND ((v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)=(vt0.c0)))) AND ((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS NUMERIC)))<((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS NUMERIC)))<((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS NUMERIC)))<((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS NUMERIC)))<((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS BLOB));
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN v0 WHERE (((vt0.c0) NOT BETWEEN (t0.c68) AND (v0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (t0.c68) AND (v0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN v0 WHERE (((vt0.c0) NOT BETWEEN (t0.c68) AND (v0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (t0.c68) AND (v0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>=((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ORDER BY ((((v0.c0) ISNULL))/(((((0Xffffffff9e90c48e)AND(v0.c0)))AND('910263066'))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)>=((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) ISNULL))/(((((0xffffffff9e90c48e)AND(v0.c0)))AND('910263066')))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>=((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ORDER BY ((((v0.c0) ISNULL))/(((((0Xffffffff9e90c48e)AND(v0.c0)))AND('910263066'))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)>=((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) ISNULL))/(((((0xffffffff9e90c48e)AND(v0.c0)))AND('910263066')))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END)<(json_insert(vt0.c0, vt0.c1, vt0.c0, v0.c0, vt0.c1)))) ORDER BY (+ (x'01f3'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END)<(json_insert(vt0.c0, vt0.c1, vt0.c0, v0.c0, vt0.c1)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (x'01f3'))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END)<(json_insert(vt0.c0, vt0.c1, vt0.c0, v0.c0, vt0.c1)))) ORDER BY (+ (x'01f3'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END)<(json_insert(vt0.c0, vt0.c1, vt0.c0, v0.c0, vt0.c1)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (x'01f3'))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-638134793' IN ()))OR(((vt0.c0)&(vt0.c1)))))OR(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((('-638134793' IN ()))OR(((vt0.c0)&(vt0.c1)))))OR(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-638134793' IN ()))OR(((vt0.c0)&(vt0.c1)))))OR(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((('-638134793' IN ()))OR(((vt0.c0)&(vt0.c1)))))OR(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-638134793' IN ()))OR(((vt0.c0)&(vt0.c1)))))OR(CAST(vt0.c1 AS BLOB))));
SELECT * FROM t0, v0 WHERE (((CASE WHEN v0.c0 THEN t0.c68 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN t0.c68 END) NOT NULL)) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((CASE WHEN v0.c0 THEN t0.c68 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN t0.c68 END) NOT NULL)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON COALESCE(t0.c68, -6.23720145E8) COLLATE BINARY WHERE (NULL) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON COALESCE(t0.c68, -6.23720145E8) COLLATE BINARY ORDER BY vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON COALESCE(t0.c68, -6.23720145E8) COLLATE BINARY WHERE (NULL) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON COALESCE(t0.c68, -6.23720145E8) COLLATE BINARY ORDER BY vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON COALESCE(t0.c68, -6.23720145E8) COLLATE BINARY WHERE (NULL) ORDER BY vt0.c1  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((t0.c68, v0.c0, 0Xffffffffe2cc4429)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1, CAST(vt0.c1 AS BLOB))) AND ((v0.c0 COLLATE NOCASE, NULL, t0.c68))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, v0.c0, 0Xffffffffe2cc4429)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1, CAST(vt0.c1 AS BLOB))) AND ((v0.c0 COLLATE NOCASE, NULL, t0.c68)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((t0.c68, v0.c0, 0Xffffffffe2cc4429)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1, CAST(vt0.c1 AS BLOB))) AND ((v0.c0 COLLATE NOCASE, NULL, t0.c68))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, v0.c0, 0Xffffffffe2cc4429)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1, CAST(vt0.c1 AS BLOB))) AND ((v0.c0 COLLATE NOCASE, NULL, t0.c68)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (LIKELY(DISTINCT vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (LIKELY(DISTINCT vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (LIKELY(DISTINCT vt0.c1 COLLATE RTRIM));
SELECT ALL * FROM t0, v0, vt0 WHERE (((((((((CASE WHEN t0.c68 THEN 0.7225288570827714 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c68 THEN vt0.c1 ELSE vt0.c0 END)AND(((vt0.c0)*(vt0.c1)))))OR(((0.07771916381163502)/(vt0.c0)))))AND(((NULL)IS(vt0.c1)))))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t0.c68 THEN 0.7225288570827714 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c68 THEN vt0.c1 ELSE vt0.c0 END)AND(((vt0.c0)*(vt0.c1)))))OR(((0.07771916381163502)/(vt0.c0)))))AND(((NULL)IS(vt0.c1)))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((((((CASE WHEN t0.c68 THEN 0.7225288570827714 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c68 THEN vt0.c1 ELSE vt0.c0 END)AND(((vt0.c0)*(vt0.c1)))))OR(((0.07771916381163502)/(vt0.c0)))))AND(((NULL)IS(vt0.c1)))))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t0.c68 THEN 0.7225288570827714 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c68 THEN vt0.c1 ELSE vt0.c0 END)AND(((vt0.c0)*(vt0.c1)))))OR(((0.07771916381163502)/(vt0.c0)))))AND(((NULL)IS(vt0.c1)))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((((((CASE WHEN t0.c68 THEN 0.7225288570827714 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c68 THEN vt0.c1 ELSE vt0.c0 END)AND(((vt0.c0)*(vt0.c1)))))OR(((0.07771916381163502)/(vt0.c0)))))AND(((NULL)IS(vt0.c1)))))AND(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((TYPEOF(NULL))+(t0.c68))) ORDER BY ((((((((x'')OR((NOT (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR((2.145908476E9 IN ()))))AND(((vt0.c1)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(NULL))+(t0.c68))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((((((x'')OR((NOT (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR((2.145908476E9 IN ()))))AND(((vt0.c1)OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((TYPEOF(NULL))+(t0.c68))) ORDER BY ((((((((x'')OR((NOT (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR((2.145908476E9 IN ()))))AND(((vt0.c1)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(NULL))+(t0.c68))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((((((x'')OR((NOT (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR((2.145908476E9 IN ()))))AND(((vt0.c1)OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((TYPEOF(NULL))+(t0.c68))) ORDER BY ((((((((x'')OR((NOT (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR((2.145908476E9 IN ()))))AND(((vt0.c1)OR(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE ((t0.c68)||(t0.c68))  WHEN (('1406346401') BETWEEN (t0.c68) AND (t0.c68)) THEN CASE t0.c68  WHEN v0.c0 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c68)||(t0.c68))  WHEN (('1406346401') BETWEEN (t0.c68) AND (t0.c68)) THEN CASE t0.c68  WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE ((t0.c68)||(t0.c68))  WHEN (('1406346401') BETWEEN (t0.c68) AND (t0.c68)) THEN CASE t0.c68  WHEN v0.c0 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c68)||(t0.c68))  WHEN (('1406346401') BETWEEN (t0.c68) AND (t0.c68)) THEN CASE t0.c68  WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE ((t0.c68)||(t0.c68))  WHEN (('1406346401') BETWEEN (t0.c68) AND (t0.c68)) THEN CASE t0.c68  WHEN v0.c0 THEN v0.c0 END END);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c68))>((t0.c68))) COLLATE RTRIM) ORDER BY ((SUBSTR(v0.c0, t0.c68))GLOB(((v0.c0)+(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68))>((t0.c68))) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY ((SUBSTR(v0.c0, t0.c68))GLOB(((v0.c0)+(t0.c68)))));
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c68))>((t0.c68))) COLLATE RTRIM) ORDER BY ((SUBSTR(v0.c0, t0.c68))GLOB(((v0.c0)+(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68))>((t0.c68))) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY ((SUBSTR(v0.c0, t0.c68))GLOB(((v0.c0)+(t0.c68)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON LIKELY(((vt0.c1)|(t0.c68))) WHERE (((((vt0.c0)IS NOT(vt0.c1))) NOT BETWEEN ((~ (t0.c68))) AND (json_extract(t0.c68, vt0.c1)))) ORDER BY ((vt0.c1 COLLATE NOCASE)IS(CAST(t0.c68 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c1))) NOT BETWEEN ((~ (t0.c68))) AND (json_extract(t0.c68, vt0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON LIKELY(((vt0.c1)|(t0.c68))) ORDER BY ((vt0.c1 COLLATE NOCASE)IS(CAST(t0.c68 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON LIKELY(((vt0.c1)|(t0.c68))) WHERE (((((vt0.c0)IS NOT(vt0.c1))) NOT BETWEEN ((~ (t0.c68))) AND (json_extract(t0.c68, vt0.c1)))) ORDER BY ((vt0.c1 COLLATE NOCASE)IS(CAST(t0.c68 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c1))) NOT BETWEEN ((~ (t0.c68))) AND (json_extract(t0.c68, vt0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON LIKELY(((vt0.c1)|(t0.c68))) ORDER BY ((vt0.c1 COLLATE NOCASE)IS(CAST(t0.c68 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0 WHERE (((v0.c0)<=((((v0.c0, t0.c68, vt0.c0))<((t0.c68, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=((((v0.c0, t0.c68, vt0.c0))<((t0.c68, v0.c0, v0.c0)))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (((v0.c0)<=((((v0.c0, t0.c68, vt0.c0))<((t0.c68, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=((((v0.c0, t0.c68, vt0.c0))<((t0.c68, v0.c0, v0.c0)))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, t0, v0 WHERE (((x'')<>(CASE WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')!=(CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (((x'')<>(CASE WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')!=(CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM t0, vt0, v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN json_valid(vt0.c1) THEN CAST(t0.c68 AS TEXT) END) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE NOCASE  WHEN json_valid(vt0.c1) THEN CAST(t0.c68 AS TEXT) END) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST);
SELECT * FROM t0, vt0, v0 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN json_valid(vt0.c1) THEN CAST(t0.c68 AS TEXT) END) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE NOCASE  WHEN json_valid(vt0.c1) THEN CAST(t0.c68 AS TEXT) END) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON v0.c0 RIGHT OUTER JOIN v0 ON (((((v0.c0, v0.c0, vt0.c0, 0.7958154436824589, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, t0.c68, t0.c68))))+(IFNULL(v0.c0, vt0.c0))) WHERE ((NULLIF(v0.c0, t0.c68) IN ()));
SELECT SUM(count) FROM (SELECT (((NULLIF(v0.c0, t0.c68) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON v0.c0 RIGHT OUTER JOIN v0 ON (((((v0.c0, v0.c0, vt0.c0, 0.7958154436824589, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, t0.c68, t0.c68))))+(IFNULL(v0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON v0.c0 RIGHT OUTER JOIN v0 ON (((((v0.c0, v0.c0, vt0.c0, 0.7958154436824589, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, t0.c68, t0.c68))))+(IFNULL(v0.c0, vt0.c0))) WHERE ((NULLIF(v0.c0, t0.c68) IN ()));
SELECT SUM(count) FROM (SELECT (((NULLIF(v0.c0, t0.c68) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON v0.c0 RIGHT OUTER JOIN v0 ON (((((v0.c0, v0.c0, vt0.c0, 0.7958154436824589, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, t0.c68, t0.c68))))+(IFNULL(v0.c0, vt0.c0))));
SELECT * FROM t0, vt0, v0 WHERE ((((((((((~ (t0.c68)))AND(((vt0.c1) NOT BETWEEN (t0.c68) AND ('-368966162')))))OR(((((v0.c0)OR(v0.c0)))OR(vt0.c0)))))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(NULL))) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((((v0.c0)AND(t0.c68)))OR(vt0.c0))) AND ((((vt0.c0))=((t0.c68))))) ASC, (('0.515804255277292')||((~ (vt0.c0)))) ASC  NULLS LAST, (((((vt0.c0))<>((t0.c68)))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (t0.c68)))AND(((vt0.c1) NOT BETWEEN (t0.c68) AND ('-368966162')))))OR(((((v0.c0)OR(v0.c0)))OR(vt0.c0)))))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(NULL))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((((v0.c0)AND(t0.c68)))OR(vt0.c0))) AND ((((vt0.c0))=((t0.c68))))) ASC, (('0.515804255277292')||((~ (vt0.c0)))) ASC  NULLS LAST, (((((vt0.c0))!=((t0.c68)))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM t0, vt0, v0 WHERE ((((((((((~ (t0.c68)))AND(((vt0.c1) NOT BETWEEN (t0.c68) AND ('-368966162')))))OR(((((v0.c0)OR(v0.c0)))OR(vt0.c0)))))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(NULL))) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((((v0.c0)AND(t0.c68)))OR(vt0.c0))) AND ((((vt0.c0))=((t0.c68))))) ASC, (('0.515804255277292')||((~ (vt0.c0)))) ASC  NULLS LAST, (((((vt0.c0))<>((t0.c68)))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (t0.c68)))AND(((vt0.c1) NOT BETWEEN (t0.c68) AND ('-368966162')))))OR(((((v0.c0)OR(v0.c0)))OR(vt0.c0)))))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(NULL))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((((v0.c0)AND(t0.c68)))OR(vt0.c0))) AND ((((vt0.c0))=((t0.c68))))) ASC, (('0.515804255277292')||((~ (vt0.c0)))) ASC  NULLS LAST, (((((vt0.c0))!=((t0.c68)))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS INTEGER)))) WHERE ((((((vt0.c1) NOTNULL)))==(((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, v0.c0, v0.c0))))))) ORDER BY ((((v0.c0)OR(((vt0.c0)%(vt0.c0)))))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOTNULL)))==(((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, v0.c0, v0.c0))))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((v0.c0)OR(((vt0.c0)%(vt0.c0)))))OR(NULL))  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS INTEGER)))) WHERE ((((((vt0.c1) NOTNULL)))==(((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, v0.c0, v0.c0))))))) ORDER BY ((((v0.c0)OR(((vt0.c0)%(vt0.c0)))))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOTNULL)))==(((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, v0.c0, v0.c0))))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((v0.c0)OR(((vt0.c0)%(vt0.c0)))))OR(NULL))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c68  WHEN CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN 0.2336052665699121 THEN t0.c68 WHEN t0.c68 THEN NULL WHEN t0.c68 THEN t0.c68 END THEN ((t0.c68)<<(t0.c68)) ELSE (- (x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c68  WHEN CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN 0.2336052665699121 THEN t0.c68 WHEN t0.c68 THEN NULL WHEN t0.c68 THEN t0.c68 END THEN ((t0.c68)<<(t0.c68)) ELSE (- (x'')) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c68  WHEN CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN 0.2336052665699121 THEN t0.c68 WHEN t0.c68 THEN NULL WHEN t0.c68 THEN t0.c68 END THEN ((t0.c68)<<(t0.c68)) ELSE (- (x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c68  WHEN CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN 0.2336052665699121 THEN t0.c68 WHEN t0.c68 THEN NULL WHEN t0.c68 THEN t0.c68 END THEN ((t0.c68)<<(t0.c68)) ELSE (- (x'')) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c68  WHEN CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN 0.2336052665699121 THEN t0.c68 WHEN t0.c68 THEN NULL WHEN t0.c68 THEN t0.c68 END THEN ((t0.c68)<<(t0.c68)) ELSE (- (x'')) END);
SELECT ALL * FROM v0, vt0, t0 WHERE ((((vt0.c1)/(vt0.c1)) IN (CAST(NULL AS TEXT)))) ORDER BY 'SSkN괽' DESC, SQLITE_COMPILEOPTION_GET(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)/(vt0.c1)) IN (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY 'SSkN괽' DESC, SQLITE_COMPILEOPTION_GET(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))));
SELECT ALL * FROM v0, vt0, t0 WHERE ((((vt0.c1)/(vt0.c1)) IN (CAST(NULL AS TEXT)))) ORDER BY 'SSkN괽' DESC, SQLITE_COMPILEOPTION_GET(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)/(vt0.c1)) IN (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY 'SSkN괽' DESC, SQLITE_COMPILEOPTION_GET(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))));
SELECT ALL * FROM v0, vt0, t0 WHERE ((((vt0.c1)/(vt0.c1)) IN (CAST(NULL AS TEXT)))) ORDER BY 'SSkN괽' DESC, SQLITE_COMPILEOPTION_GET(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)));
SELECT ALL * FROM v0, t0 NATURAL JOIN vt0 WHERE (((((((((CAST(t0.c68 AS TEXT))OR(CASE WHEN v0.c0 THEN vt0.c1 ELSE t0.c68 END)))OR((~ (v0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))))OR(CASE WHEN t0.c68 THEN v0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c68 AS TEXT))OR(CASE WHEN v0.c0 THEN vt0.c1 ELSE t0.c68 END)))OR((~ (v0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))))OR(CASE WHEN t0.c68 THEN v0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM v0, t0 NATURAL JOIN vt0 WHERE (((((((((CAST(t0.c68 AS TEXT))OR(CASE WHEN v0.c0 THEN vt0.c1 ELSE t0.c68 END)))OR((~ (v0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))))OR(CASE WHEN t0.c68 THEN v0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c68 AS TEXT))OR(CASE WHEN v0.c0 THEN vt0.c1 ELSE t0.c68 END)))OR((~ (v0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))))OR(CASE WHEN t0.c68 THEN v0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (ABS(NULLIF(DISTINCT t0.c68, v0.c0)));
SELECT SUM(count) FROM (SELECT ((ABS(NULLIF(DISTINCT t0.c68, v0.c0))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (ABS(NULLIF(DISTINCT t0.c68, v0.c0)));
SELECT SUM(count) FROM (SELECT ((ABS(NULLIF(DISTINCT t0.c68, v0.c0))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))IS NOT(vt0.c0)) INNER JOIN vt0 ON UNLIKELY(vt0.c0 COLLATE NOCASE) WHERE (CAST('-1338246479' AS BLOB)) ORDER BY (((NOT (vt0.c0)))>>(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1338246479' AS BLOB)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))IS NOT(vt0.c0)) INNER JOIN vt0 ON UNLIKELY(vt0.c0 COLLATE NOCASE) ORDER BY (((NOT (vt0.c0)))>>(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))IS NOT(vt0.c0)) INNER JOIN vt0 ON UNLIKELY(vt0.c0 COLLATE NOCASE) WHERE (CAST('-1338246479' AS BLOB)) ORDER BY (((NOT (vt0.c0)))>>(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1338246479' AS BLOB)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))IS NOT(vt0.c0)) INNER JOIN vt0 ON UNLIKELY(vt0.c0 COLLATE NOCASE) ORDER BY (((NOT (vt0.c0)))>>(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CASE CASE WHEN x'6629' THEN vt0.c0 ELSE v0.c0 END  WHEN ((vt0.c1)%(0.06835092650758012)) THEN ((((vt0.c1)OR(t0.c68)))OR(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN x'6629' THEN vt0.c0 ELSE v0.c0 END  WHEN ((vt0.c1)%(0.06835092650758012)) THEN ((((vt0.c1)OR(t0.c68)))OR(t0.c68)) END) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CASE CASE WHEN x'6629' THEN vt0.c0 ELSE v0.c0 END  WHEN ((vt0.c1)%(0.06835092650758012)) THEN ((((vt0.c1)OR(t0.c68)))OR(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN x'6629' THEN vt0.c0 ELSE v0.c0 END  WHEN ((vt0.c1)%(0.06835092650758012)) THEN ((((vt0.c1)OR(t0.c68)))OR(t0.c68)) END) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((vt0.c0)/(vt0.c1)))>(IFNULL(vt0.c1, vt0.c0)))) ORDER BY 0.5251330046392524 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c1)))>(IFNULL(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY 0.5251330046392524 DESC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((vt0.c0)/(vt0.c1)))>(IFNULL(vt0.c1, vt0.c0)))) ORDER BY 0.5251330046392524 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c1)))>(IFNULL(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY 0.5251330046392524 DESC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((vt0.c0)/(vt0.c1)))>(IFNULL(vt0.c1, vt0.c0)))) ORDER BY 0.5251330046392524 DESC;
SELECT * FROM v0, vt0, t0 WHERE (CASE WHEN (~ (vt0.c0)) THEN CASE WHEN v0.c0 THEN t0.c68 END WHEN ((t0.c68)+(vt0.c1)) THEN t0.c68 WHEN CAST(t0.c68 AS TEXT) THEN CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN CASE WHEN v0.c0 THEN t0.c68 END WHEN ((t0.c68)+(vt0.c1)) THEN t0.c68 WHEN CAST(t0.c68 AS TEXT) THEN CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (CASE WHEN (~ (vt0.c0)) THEN CASE WHEN v0.c0 THEN t0.c68 END WHEN ((t0.c68)+(vt0.c1)) THEN t0.c68 WHEN CAST(t0.c68 AS TEXT) THEN CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN CASE WHEN v0.c0 THEN t0.c68 END WHEN ((t0.c68)+(vt0.c1)) THEN t0.c68 WHEN CAST(t0.c68 AS TEXT) THEN CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (LTRIM((- (0.284342131175629)))) ORDER BY CASE CASE v0.c0  WHEN vt0.c0 THEN t0.c68 END  WHEN (vt0.c0 IN ()) THEN (((vt0.c0, '1656256970', v0.c0, '371788609', vt0.c0))<=((v0.c0, t0.c68, v0.c0, v0.c0, v0.c0))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LTRIM((- (0.284342131175629)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CASE CASE v0.c0  WHEN vt0.c0 THEN t0.c68 END  WHEN (vt0.c0 IN ()) THEN (((vt0.c0, '1656256970', v0.c0, '371788609', vt0.c0))<=((v0.c0, t0.c68, v0.c0, v0.c0, v0.c0))) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (LTRIM((- (0.284342131175629)))) ORDER BY CASE CASE v0.c0  WHEN vt0.c0 THEN t0.c68 END  WHEN (vt0.c0 IN ()) THEN (((vt0.c0, '1656256970', v0.c0, '371788609', vt0.c0))<=((v0.c0, t0.c68, v0.c0, v0.c0, v0.c0))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LTRIM((- (0.284342131175629)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CASE CASE v0.c0  WHEN vt0.c0 THEN t0.c68 END  WHEN (vt0.c0 IN ()) THEN (((vt0.c0, '1656256970', v0.c0, '371788609', vt0.c0))<=((v0.c0, t0.c68, v0.c0, v0.c0, v0.c0))) END DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (json_extract(((t0.c68)>=(t0.c68)), LIKELIHOOD(t0.c68, 0.07273628004519206)));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((t0.c68)>=(t0.c68)), LIKELIHOOD(t0.c68, 0.07273628004519206))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (json_extract(((t0.c68)>=(t0.c68)), LIKELIHOOD(t0.c68, 0.07273628004519206)));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((t0.c68)>=(t0.c68)), LIKELIHOOD(t0.c68, 0.07273628004519206))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0)OR(((v0.c0)<>(v0.c0))))) ORDER BY LIKELY((((t0.c68))!=((t0.c68)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)OR(((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY LIKELY((((t0.c68))<>((t0.c68)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0)OR(((v0.c0)<>(v0.c0))))) ORDER BY LIKELY((((t0.c68))!=((t0.c68)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)OR(((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY LIKELY((((t0.c68))<>((t0.c68)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((7.65038969E8 COLLATE BINARY)<(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((7.65038969E8 COLLATE BINARY)<(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((7.65038969E8 COLLATE BINARY)<(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((7.65038969E8 COLLATE BINARY)<(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((NULL IN ()));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((0.7961387959871947) NOT NULL) WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((LOWER(vt0.c1))))) ORDER BY (((((+ (vt0.c1)))OR((((vt0.c1))<=((v0.c0))))))AND(((vt0.c0)IS NOT(vt0.c0)))) ASC, v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((LOWER(vt0.c1))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((0.7961387959871947) NOT NULL) ORDER BY (((((+ (vt0.c1)))OR((((vt0.c1))<=((v0.c0))))))AND(((vt0.c0)IS NOT(vt0.c0)))) ASC, v0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((0.7961387959871947) NOT NULL) WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((LOWER(vt0.c1))))) ORDER BY (((((+ (vt0.c1)))OR((((vt0.c1))<=((v0.c0))))))AND(((vt0.c0)IS NOT(vt0.c0)))) ASC, v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((LOWER(vt0.c1))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((0.7961387959871947) NOT NULL) ORDER BY (((((+ (vt0.c1)))OR((((vt0.c1))<=((v0.c0))))))AND(((vt0.c0)IS NOT(vt0.c0)))) ASC, v0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (QUOTE(((v0.c0) IS TRUE))) ORDER BY CAST((v0.c0 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((v0.c0) IS TRUE))) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS BLOB));
SELECT ALL * FROM v0 WHERE (QUOTE(((v0.c0) IS TRUE))) ORDER BY CAST((v0.c0 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((v0.c0) IS TRUE))) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS BLOB));
SELECT * FROM vt0, t0 WHERE ((((((t0.c68))<((0.0865478930427338))))*(((vt0.c0)>=(-7.54784642E8))))) ORDER BY (NOT (((vt0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68))<((0.0865478930427338))))*(((vt0.c0)>=(-7.54784642E8))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (((vt0.c1) NOT NULL)))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((((t0.c68))<((0.0865478930427338))))*(((vt0.c0)>=(-7.54784642E8))))) ORDER BY (NOT (((vt0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68))<((0.0865478930427338))))*(((vt0.c0)>=(-7.54784642E8))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (((vt0.c1) NOT NULL)))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((((t0.c68))<((0.0865478930427338))))*(((vt0.c0)>=(-7.54784642E8))))) ORDER BY (NOT (((vt0.c1) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(CAST(NULL AS TEXT))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY (+ (((vt0.c1) ISNULL))) ASC, (((((((((((vt0.c1, 0x41086e6b, '564643449')) NOT BETWEEN ((0.5781887275893625, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))OR((vt0.c1 IN ()))))OR(ABS(vt0.c0))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c1)>=(vt0.c0)))), vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)&(vt0.c0)))AND(CAST(NULL AS TEXT))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c1) ISNULL))) ASC, (((((((((((vt0.c1, 0X41086e6b, '564643449')) NOT BETWEEN ((0.5781887275893625, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))OR((vt0.c1 IN ()))))OR(ABS(vt0.c0))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c1)>=(vt0.c0)))), vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(CAST(NULL AS TEXT))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY (+ (((vt0.c1) ISNULL))) ASC, (((((((((((vt0.c1, 0x41086e6b, '564643449')) NOT BETWEEN ((0.5781887275893625, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))OR((vt0.c1 IN ()))))OR(ABS(vt0.c0))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c1)>=(vt0.c0)))), vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)&(vt0.c0)))AND(CAST(NULL AS TEXT))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c1) ISNULL))) ASC, (((((((((((vt0.c1, 0X41086e6b, '564643449')) NOT BETWEEN ((0.5781887275893625, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))OR((vt0.c1 IN ()))))OR(ABS(vt0.c0))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c1)>=(vt0.c0)))), vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(CAST(NULL AS TEXT))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY (+ (((vt0.c1) ISNULL))) ASC, (((((((((((vt0.c1, 0x41086e6b, '564643449')) NOT BETWEEN ((0.5781887275893625, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))OR((vt0.c1 IN ()))))OR(ABS(vt0.c0))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c1)>=(vt0.c0)))), vt0.c0;
SELECT ALL COUNT(*) FROM vt0 WHERE (0x1a66815c);
SELECT SUM(count) FROM (SELECT ALL ((0X1a66815c) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0x1a66815c);
SELECT SUM(count) FROM (SELECT ALL ((0X1a66815c) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0x1a66815c);
SELECT ALL * FROM t0 WHERE ((('848655696')&(x''))) ORDER BY ((x'')=(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))), ((x'') NOT BETWEEN (((t0.c68)>>(t0.c68))) AND (t0.c68)) ASC;
SELECT SUM(count) FROM (SELECT (((('848655696')&(x''))) IS TRUE)  as count FROM t0 ORDER BY ((x'')=(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))), ((x'') NOT BETWEEN (((t0.c68)>>(t0.c68))) AND (t0.c68)) ASC);
SELECT ALL * FROM t0 WHERE ((('848655696')&(x''))) ORDER BY ((x'')=(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))), ((x'') NOT BETWEEN (((t0.c68)>>(t0.c68))) AND (t0.c68)) ASC;
SELECT SUM(count) FROM (SELECT (((('848655696')&(x''))) IS TRUE)  as count FROM t0 ORDER BY ((x'')=(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))), ((x'') NOT BETWEEN (((t0.c68)>>(t0.c68))) AND (t0.c68)) ASC);
SELECT ALL * FROM t0 WHERE ((('848655696')&(x''))) ORDER BY ((x'')=(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))), ((x'') NOT BETWEEN (((t0.c68)>>(t0.c68))) AND (t0.c68)) ASC;
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS INTEGER) AS REAL)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS INTEGER) AS REAL)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS REAL));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE ((((v0.c0)) BETWEEN (((t0.c68 IN ()))) AND ((LIKELY(v0.c0))))) ORDER BY 0.9596667123283232 DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((t0.c68 IN ()))) AND ((LIKELY(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY 0.9596667123283232 DESC);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE ((((v0.c0)) BETWEEN (((t0.c68 IN ()))) AND ((LIKELY(v0.c0))))) ORDER BY 0.9596667123283232 DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((t0.c68 IN ()))) AND ((LIKELY(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY 0.9596667123283232 DESC);
SELECT ALL * FROM v0, t0, vt0 WHERE (x'eaba');
SELECT SUM(count) FROM (SELECT ALL ((x'eaba') IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (x'eaba');
SELECT SUM(count) FROM (SELECT ALL ((x'eaba') IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (x'eaba');
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (vt0.c1) ORDER BY ((((t0.c68)%(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((t0.c68)%(vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (vt0.c1) ORDER BY ((((t0.c68)%(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((t0.c68)%(vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (vt0.c1) ORDER BY ((((t0.c68)%(vt0.c0))) ISNULL);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (NULL);
SELECT ALL * FROM v0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN (v0.c0 IN (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, '564643449'))) WHEN ((v0.c0)||(v0.c0)) THEN 0.006448087798923252 WHEN ((v0.c0)|(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE BINARY  WHEN (v0.c0 IN (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, '564643449'))) WHEN ((v0.c0)||(v0.c0)) THEN 0.006448087798923252 WHEN ((v0.c0)|(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN (v0.c0 IN (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, '564643449'))) WHEN ((v0.c0)||(v0.c0)) THEN 0.006448087798923252 WHEN ((v0.c0)|(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE BINARY  WHEN (v0.c0 IN (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, '564643449'))) WHEN ((v0.c0)||(v0.c0)) THEN 0.006448087798923252 WHEN ((v0.c0)|(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c1) ORDER BY ((v0.c0 COLLATE NOCASE)%(((vt0.c1) NOT NULL))) DESC, vt0.c0, ((((0X2c23edb6)>(vt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0 COLLATE NOCASE)%(((vt0.c1) NOT NULL))) DESC, vt0.c0, ((((0X2c23edb6)>(vt0.c0))) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c1) ORDER BY ((v0.c0 COLLATE NOCASE)%(((vt0.c1) NOT NULL))) DESC, vt0.c0, ((((0X2c23edb6)>(vt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0 COLLATE NOCASE)%(((vt0.c1) NOT NULL))) DESC, vt0.c0, ((((0X2c23edb6)>(vt0.c0))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<>(((v0.c0) BETWEEN (v0.c0) AND ('0.0')))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<>(((v0.c0) BETWEEN (v0.c0) AND ('0.0'))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<>(((v0.c0) BETWEEN (v0.c0) AND ('0.0')))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<>(((v0.c0) BETWEEN (v0.c0) AND ('0.0'))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((- (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))) ORDER BY ((((CASE WHEN x'' THEN vt0.c0 END)AND(((vt0.c0)>('1903710245')))))OR((+ (1060226880)))), TRIM(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), v0.c0);
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((CASE WHEN x'' THEN vt0.c0 END)AND(((vt0.c0)>('1903710245')))))OR((+ (1060226880)))), TRIM(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), v0.c0));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((- (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))) ORDER BY ((((CASE WHEN x'' THEN vt0.c0 END)AND(((vt0.c0)>('1903710245')))))OR((+ (1060226880)))), TRIM(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), v0.c0);
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((CASE WHEN x'' THEN vt0.c0 END)AND(((vt0.c0)>('1903710245')))))OR((+ (1060226880)))), TRIM(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), v0.c0));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((NULL)=(((t0.c68) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)==(((t0.c68) NOT NULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((NULL)=(((t0.c68) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)==(((t0.c68) NOT NULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((NULL)=(((t0.c68) NOT NULL))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.c1) BETWEEN (t0.c68) AND (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) BETWEEN (t0.c68) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.c1) BETWEEN (t0.c68) AND (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) BETWEEN (t0.c68) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((vt0.c1) BETWEEN (t0.c68) AND (vt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED CROSS JOIN t0 ON ((t0.c68 COLLATE NOCASE)<>(((t0.c68)GLOB(t0.c68)))) WHERE (((CAST(t0.c68 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c68 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((t0.c68 COLLATE NOCASE)!=(((t0.c68)GLOB(t0.c68)))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED CROSS JOIN t0 ON ((t0.c68 COLLATE NOCASE)<>(((t0.c68)GLOB(t0.c68)))) WHERE (((CAST(t0.c68 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c68 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((t0.c68 COLLATE NOCASE)!=(((t0.c68)GLOB(t0.c68)))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED CROSS JOIN t0 ON ((t0.c68 COLLATE NOCASE)<>(((t0.c68)GLOB(t0.c68)))) WHERE (((CAST(t0.c68 AS TEXT)) IS TRUE));
SELECT ALL * FROM v0, t0 WHERE (((CASE WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN 0.24444915499369735 END)==(CASE WHEN v0.c0 THEN t0.c68 END))) ORDER BY ((((0.35018293599033823)OR((((((((('1876940357')OR(v0.c0)))AND(v0.c0)))OR(t0.c68)))AND(t0.c68)))))OR(((t0.c68)LIKE(t0.c68))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN 0.24444915499369735 END)=(CASE WHEN v0.c0 THEN t0.c68 END))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((0.35018293599033823)OR((((((((('1876940357')OR(v0.c0)))AND(v0.c0)))OR(t0.c68)))AND(t0.c68)))))OR(((t0.c68)LIKE(t0.c68))))  NULLS LAST);
SELECT ALL * FROM v0, t0 WHERE (((CASE WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN 0.24444915499369735 END)==(CASE WHEN v0.c0 THEN t0.c68 END))) ORDER BY ((((0.35018293599033823)OR((((((((('1876940357')OR(v0.c0)))AND(v0.c0)))OR(t0.c68)))AND(t0.c68)))))OR(((t0.c68)LIKE(t0.c68))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN 0.24444915499369735 END)=(CASE WHEN v0.c0 THEN t0.c68 END))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((0.35018293599033823)OR((((((((('1876940357')OR(v0.c0)))AND(v0.c0)))OR(t0.c68)))AND(t0.c68)))))OR(((t0.c68)LIKE(t0.c68))))  NULLS LAST);
SELECT * FROM v0 NOT INDEXED, vt0, t0 WHERE (((0.2604807238682596) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((0.2604807238682596) IS FALSE)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0 NOT INDEXED, vt0, t0 WHERE (((0.2604807238682596) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((0.2604807238682596) IS FALSE)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0 NOT INDEXED, vt0, t0 WHERE (((0.2604807238682596) IS FALSE));
SELECT ALL * FROM vt0, t0, v0 WHERE (IFNULL(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (IFNULL(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((NOT (((t0.c68) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY t0.c68, (TIME(t0.c68, v0.c0, v0.c0) IN ((+ (t0.c68)), ((-1350376799)%(t0.c68)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c68) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c68, (TIME(t0.c68, v0.c0, v0.c0) IN ((+ (t0.c68)), ((-1350376799)%(t0.c68)))) ASC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((NOT (((t0.c68) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY t0.c68, (TIME(t0.c68, v0.c0, v0.c0) IN ((+ (t0.c68)), ((-1350376799)%(t0.c68)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c68) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c68, (TIME(t0.c68, v0.c0, v0.c0) IN ((+ (t0.c68)), ((-1350376799)%(t0.c68)))) ASC);
SELECT ALL * FROM v0 WHERE (((0.3732053555774125 COLLATE RTRIM)GLOB(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0.3732053555774125 COLLATE RTRIM)GLOB(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((0.3732053555774125 COLLATE RTRIM)GLOB(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0.3732053555774125 COLLATE RTRIM)GLOB(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i55, t0 INNER JOIN v0 ON HEX((NOT (vt0.c0))) WHERE (((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INDEXED BY i55, t0 INNER JOIN v0 ON HEX((NOT (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i55, t0 INNER JOIN v0 ON HEX((NOT (vt0.c0))) WHERE (((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INDEXED BY i55, t0 INNER JOIN v0 ON HEX((NOT (vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((NOT (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0, t0 WHERE (((vt0.c1 IN (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN (v0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (((vt0.c1 IN (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN (v0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (((vt0.c1 IN (v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (('1483545867' IN ())) ORDER BY (CASE v0.c0  WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END IN (0.7432276500471214, (- (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((('1483545867' IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY (CASE v0.c0  WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END IN (0.7432276500471214, (- (v0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (('1483545867' IN ())) ORDER BY (CASE v0.c0  WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END IN (0.7432276500471214, (- (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((('1483545867' IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY (CASE v0.c0  WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END IN (0.7432276500471214, (- (v0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((vt0.c1 IN ()));
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))AND(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))AND(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))AND(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))AND(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))AND(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM vt0, v0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC)) ORDER BY ((vt0.c1)||(vt0.c0)) COLLATE NOCASE, ((CAST(vt0.c1 AS BLOB)) BETWEEN (LIKELY(DISTINCT vt0.c1)) AND ((((vt0.c1, NULL, vt0.c0))>=((vt0.c1, v0.c0, v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c1)||(vt0.c0)) COLLATE NOCASE, ((CAST(vt0.c1 AS BLOB)) BETWEEN (LIKELY(DISTINCT vt0.c1)) AND ((((vt0.c1, NULL, vt0.c0))>=((vt0.c1, v0.c0, v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC)) ORDER BY ((vt0.c1)||(vt0.c0)) COLLATE NOCASE, ((CAST(vt0.c1 AS BLOB)) BETWEEN (LIKELY(DISTINCT vt0.c1)) AND ((((vt0.c1, NULL, vt0.c0))>=((vt0.c1, v0.c0, v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c1)||(vt0.c0)) COLLATE NOCASE, ((CAST(vt0.c1 AS BLOB)) BETWEEN (LIKELY(DISTINCT vt0.c1)) AND ((((vt0.c1, NULL, vt0.c0))>=((vt0.c1, v0.c0, v0.c0)))))  NULLS LAST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((v0.c0 COLLATE BINARY, (vt0.c1 IN ()), (((v0.c0, vt0.c1, vt0.c0))>=((vt0.c0, v0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS BLOB), (~ (vt0.c0)), QUOTE(v0.c0)))) WHERE ((+ (v0.c0)) COLLATE RTRIM) ORDER BY CAST((~ (vt0.c0)) AS NUMERIC)  NULLS FIRST, ((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((vt0.c1)GLOB(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((v0.c0 COLLATE BINARY, (vt0.c1 IN ()), (((v0.c0, vt0.c1, vt0.c0))>=((vt0.c0, v0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS BLOB), (~ (vt0.c0)), QUOTE(v0.c0)))) ORDER BY CAST((~ (vt0.c0)) AS NUMERIC)  NULLS FIRST, ((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((vt0.c1)GLOB(vt0.c1)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((v0.c0 COLLATE BINARY, (vt0.c1 IN ()), (((v0.c0, vt0.c1, vt0.c0))>=((vt0.c0, v0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS BLOB), (~ (vt0.c0)), QUOTE(v0.c0)))) WHERE ((+ (v0.c0)) COLLATE RTRIM) ORDER BY CAST((~ (vt0.c0)) AS NUMERIC)  NULLS FIRST, ((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((vt0.c1)GLOB(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((v0.c0 COLLATE BINARY, (vt0.c1 IN ()), (((v0.c0, vt0.c1, vt0.c0))>=((vt0.c0, v0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS BLOB), (~ (vt0.c0)), QUOTE(v0.c0)))) ORDER BY CAST((~ (vt0.c0)) AS NUMERIC)  NULLS FIRST, ((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)OR((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((vt0.c1)GLOB(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'f560' IN ())) ORDER BY COALESCE((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST, vt0.c0, ((((vt0.c1)GLOB(vt0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((x'f560' IN ())) IS TRUE)  as count FROM vt0 ORDER BY COALESCE((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST, vt0.c0, ((((vt0.c1)GLOB(vt0.c0))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'f560' IN ())) ORDER BY COALESCE((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST, vt0.c0, ((((vt0.c1)GLOB(vt0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((x'f560' IN ())) IS TRUE)  as count FROM vt0 ORDER BY COALESCE((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST, vt0.c0, ((((vt0.c1)GLOB(vt0.c0))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'f560' IN ())) ORDER BY COALESCE((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST, vt0.c0, ((((vt0.c1)GLOB(vt0.c0))) ISNULL) DESC;
SELECT ALL * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c68);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((+ (vt0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((+ (vt0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((+ (vt0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM t0 WHERE ((((t0.c68)) NOT BETWEEN (((~ (t0.c68)))) AND ((CAST(t0.c68 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) NOT BETWEEN (((~ (t0.c68)))) AND ((CAST(t0.c68 AS REAL))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c68)) NOT BETWEEN (((~ (t0.c68)))) AND ((CAST(t0.c68 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) NOT BETWEEN (((~ (t0.c68)))) AND ((CAST(t0.c68 AS REAL))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c68)) NOT BETWEEN (((~ (t0.c68)))) AND ((CAST(t0.c68 AS REAL)))));
SELECT * FROM vt0, v0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-638134793'))  WHEN ((v0.c0)IS NOT(v0.c0)) THEN CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END ELSE '' END) ORDER BY ((vt0.c0)/(v0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-638134793'))  WHEN ((v0.c0)IS NOT(v0.c0)) THEN CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END ELSE '' END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)/(v0.c0)) COLLATE BINARY DESC);
SELECT * FROM vt0, v0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-638134793'))  WHEN ((v0.c0)IS NOT(v0.c0)) THEN CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END ELSE '' END) ORDER BY ((vt0.c0)/(v0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-638134793'))  WHEN ((v0.c0)IS NOT(v0.c0)) THEN CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END ELSE '' END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)/(v0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((vt0.c1)||(vt0.c0)) AS NUMERIC)) ORDER BY CAST(NULL AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)||(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CAST(NULL AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((vt0.c1)||(vt0.c0)) AS NUMERIC)) ORDER BY CAST(NULL AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)||(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CAST(NULL AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((vt0.c1)||(vt0.c0)) AS NUMERIC)) ORDER BY CAST(NULL AS BLOB) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((vt0.c1)-(v0.c0))) ISNULL)) ORDER BY LIKELY(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))), (((+ (vt0.c0)))-(((vt0.c1)==(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY LIKELY(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))), (((+ (vt0.c0)))-(((vt0.c1)==(t0.c68)))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((vt0.c1)-(v0.c0))) ISNULL)) ORDER BY LIKELY(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))), (((+ (vt0.c0)))-(((vt0.c1)==(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY LIKELY(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))), (((+ (vt0.c0)))-(((vt0.c1)==(t0.c68)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS TEXT))OR((v0.c0 IN ()))))AND(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS TEXT))OR((v0.c0 IN ()))))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS TEXT))OR((v0.c0 IN ()))))AND(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS TEXT))OR((v0.c0 IN ()))))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM t0, v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM v0, vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c68) AND (v0.c0)))&(0x20177a0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c68) AND (v0.c0)))&(0x20177a0))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c68) AND (v0.c0)))&(0x20177a0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c68) AND (v0.c0)))&(0x20177a0))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, t0 CROSS JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 ELSE t0.c68 END)+(((t0.c68)%('Y熝Jyᩦy')))) WHERE (CASE ((t0.c68) IS TRUE)  WHEN MAX(vt0.c0, vt0.c1) THEN (~ (v0.c0)) END) ORDER BY CASE WHEN ((t0.c68) NOT BETWEEN (v0.c0) AND ('Dq')) THEN v0.c0 ELSE (v0.c0 IN (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68) IS TRUE)  WHEN MAX(vt0.c0, vt0.c1) THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0, t0 CROSS JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 ELSE t0.c68 END)+(((t0.c68)%('Y熝Jyᩦy')))) ORDER BY CASE WHEN ((t0.c68) NOT BETWEEN (v0.c0) AND ('Dq')) THEN v0.c0 ELSE (v0.c0 IN (v0.c0)) END);
SELECT ALL COUNT(*) FROM v0, t0 CROSS JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 ELSE t0.c68 END)+(((t0.c68)%('Y熝Jyᩦy')))) WHERE (CASE ((t0.c68) IS TRUE)  WHEN MAX(vt0.c0, vt0.c1) THEN (~ (v0.c0)) END) ORDER BY CASE WHEN ((t0.c68) NOT BETWEEN (v0.c0) AND ('Dq')) THEN v0.c0 ELSE (v0.c0 IN (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68) IS TRUE)  WHEN MAX(vt0.c0, vt0.c1) THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0, t0 CROSS JOIN vt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 ELSE t0.c68 END)+(((t0.c68)%('Y熝Jyᩦy')))) ORDER BY CASE WHEN ((t0.c68) NOT BETWEEN (v0.c0) AND ('Dq')) THEN v0.c0 ELSE (v0.c0 IN (v0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) BETWEEN (((((((((NULL)OR(vt0.c0)))AND(vt0.c1)))AND(0.44896493248845515)))AND(vt0.c1))) AND (((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) BETWEEN (((((((((NULL)OR(vt0.c0)))AND(vt0.c1)))AND(0.44896493248845515)))AND(vt0.c1))) AND (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) BETWEEN (((((((((NULL)OR(vt0.c0)))AND(vt0.c1)))AND(0.44896493248845515)))AND(vt0.c1))) AND (((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) BETWEEN (((((((((NULL)OR(vt0.c0)))AND(vt0.c1)))AND(0.44896493248845515)))AND(vt0.c1))) AND (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) BETWEEN (((((((((NULL)OR(vt0.c0)))AND(vt0.c1)))AND(0.44896493248845515)))AND(vt0.c1))) AND (((vt0.c0)LIKE(vt0.c0)))));
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN v0 ON x'' WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON x'');
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN v0 ON x'' WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON x'');
SELECT ALL * FROM vt0, v0, t0 WHERE ((((((((vt0.c1, vt0.c0, v0.c0, vt0.c0, t0.c68))>((v0.c0, t0.c68, vt0.c1, t0.c68, vt0.c1))))OR((((t0.c68))<=((x''))))))AND(v0.c0 COLLATE RTRIM))) ORDER BY ((CASE WHEN vt0.c1 THEN x'0556' END) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (t0.c68))) AND ((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1, vt0.c0, v0.c0, vt0.c0, t0.c68))>((v0.c0, t0.c68, vt0.c1, t0.c68, vt0.c1))))OR((((t0.c68))<=((x''))))))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((CASE WHEN vt0.c1 THEN x'0556' END) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (t0.c68))) AND ((+ (v0.c0)))));
SELECT ALL * FROM vt0, v0, t0 WHERE ((((((((vt0.c1, vt0.c0, v0.c0, vt0.c0, t0.c68))>((v0.c0, t0.c68, vt0.c1, t0.c68, vt0.c1))))OR((((t0.c68))<=((x''))))))AND(v0.c0 COLLATE RTRIM))) ORDER BY ((CASE WHEN vt0.c1 THEN x'0556' END) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (t0.c68))) AND ((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1, vt0.c0, v0.c0, vt0.c0, t0.c68))>((v0.c0, t0.c68, vt0.c1, t0.c68, vt0.c1))))OR((((t0.c68))<=((x''))))))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((CASE WHEN vt0.c1 THEN x'0556' END) BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (t0.c68))) AND ((+ (v0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c68)) NOT BETWEEN (((~ (t0.c68)))) AND ((t0.c68)))) ORDER BY (((NOT (t0.c68)))<=(((0.5621788136285455)-(t0.c68)))), (+ ((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN (((~ (t0.c68)))) AND ((t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c68)))<=(((0.5621788136285455)-(t0.c68)))), (+ ((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c68)) NOT BETWEEN (((~ (t0.c68)))) AND ((t0.c68)))) ORDER BY (((NOT (t0.c68)))<=(((0.5621788136285455)-(t0.c68)))), (+ ((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN (((~ (t0.c68)))) AND ((t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c68)))<=(((0.5621788136285455)-(t0.c68)))), (+ ((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c68)) NOT BETWEEN (((~ (t0.c68)))) AND ((t0.c68)))) ORDER BY (((NOT (t0.c68)))<=(((0.5621788136285455)-(t0.c68)))), (+ ((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))))  NULLS LAST;
SELECT ALL * FROM vt0, v0, t0 WHERE (ABS((~ (vt0.c1)))) ORDER BY (~ (((t0.c68) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((~ (vt0.c1)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (~ (((t0.c68) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, t0 WHERE (ABS((~ (vt0.c1)))) ORDER BY (~ (((t0.c68) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((~ (vt0.c1)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (~ (((t0.c68) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)OR(x'')))OR(0.7795652602843477)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(x'')))OR(0.7795652602843477))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)OR(x'')))OR(0.7795652602843477)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(x'')))OR(0.7795652602843477))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)OR(x'')))OR(0.7795652602843477)));
SELECT ALL * FROM t0 WHERE (t0.c68) ORDER BY ((((t0.c68 IN ())))<((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68 IN ())))<((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c68) ORDER BY ((((t0.c68 IN ())))<((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68 IN ())))<((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c68) ORDER BY ((((t0.c68 IN ())))<((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)==(' }'))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)=(' }'))) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)==(' }'))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)=(' }'))) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)==(' }'))) NOTNULL));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((vt0.c0 IN ())) ISNULL)) ORDER BY (((t0.c68 IN (v0.c0)))*(((t0.c68)AND(t0.c68)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((t0.c68 IN (v0.c0)))*(((t0.c68)AND(t0.c68)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((vt0.c0 IN ())) ISNULL)) ORDER BY (((t0.c68 IN (v0.c0)))*(((t0.c68)AND(t0.c68)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((t0.c68 IN (v0.c0)))*(((t0.c68)AND(t0.c68)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (x'')))&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (x'')))&(vt0.c0))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (x'')))&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (x'')))&(vt0.c0))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (x'')))&(vt0.c0)));
SELECT * FROM v0, vt0 INDEXED BY i55, t0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM v0, vt0 INDEXED BY i55, t0);
SELECT * FROM v0, vt0 INDEXED BY i55, t0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM v0, vt0 INDEXED BY i55, t0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (COALESCE((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))), (vt0.c0 IN ()))) ORDER BY (- (0.7571609136224996))  NULLS FIRST, ((UNLIKELY(DISTINCT vt0.c0)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (- (0.7571609136224996))  NULLS FIRST, ((UNLIKELY(DISTINCT vt0.c0)) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (COALESCE((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))), (vt0.c0 IN ()))) ORDER BY (- (0.7571609136224996))  NULLS FIRST, ((UNLIKELY(DISTINCT vt0.c0)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (- (0.7571609136224996))  NULLS FIRST, ((UNLIKELY(DISTINCT vt0.c0)) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM v0, t0, vt0 WHERE (TRIM(DISTINCT ((t0.c68) BETWEEN (v0.c0) AND (vt0.c1)), v0.c0 COLLATE RTRIM)) ORDER BY '-2084516014'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t0.c68) BETWEEN (v0.c0) AND (vt0.c1)), v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY '-2084516014'  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE (TRIM(DISTINCT ((t0.c68) BETWEEN (v0.c0) AND (vt0.c1)), v0.c0 COLLATE RTRIM)) ORDER BY '-2084516014'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t0.c68) BETWEEN (v0.c0) AND (vt0.c1)), v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY '-2084516014'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ('{ey>n' COLLATE RTRIM))) ORDER BY (~ (t0.c68 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('{ey>n' COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c68 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ('{ey>n' COLLATE RTRIM))) ORDER BY (~ (t0.c68 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('{ey>n' COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c68 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ('{ey>n' COLLATE RTRIM))) ORDER BY (~ (t0.c68 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (t0.c68);
SELECT ALL * FROM t0 INDEXED BY i55, v0 WHERE ((~ (((((t0.c68)AND(t0.c68)))AND(x'07db')))));
SELECT SUM(count) FROM (SELECT (((~ (((((t0.c68)AND(t0.c68)))AND(x'07db'))))) IS TRUE)  as count FROM t0 INDEXED BY i55, v0);
SELECT ALL * FROM t0 INDEXED BY i55, v0 WHERE ((~ (((((t0.c68)AND(t0.c68)))AND(x'07db')))));
SELECT SUM(count) FROM (SELECT (((~ (((((t0.c68)AND(t0.c68)))AND(x'07db'))))) IS TRUE)  as count FROM t0 INDEXED BY i55, v0);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ()))=(vt0.c0 COLLATE BINARY)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ()))==(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ()))=(vt0.c0 COLLATE BINARY)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ()))==(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ()))=(vt0.c0 COLLATE BINARY)) WHERE (x'');
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN (t0.c68)))IS NOT(((((((((v0.c0)AND(t0.c68)))AND(NULL)))OR(v0.c0)))OR(t0.c68)))) WHERE ('0.9944897165992934');
SELECT SUM(count) FROM (SELECT ALL (('0.9944897165992934') IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN (t0.c68)))IS NOT(((((((((v0.c0)AND(t0.c68)))AND(NULL)))OR(v0.c0)))OR(t0.c68)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN (t0.c68)))IS NOT(((((((((v0.c0)AND(t0.c68)))AND(NULL)))OR(v0.c0)))OR(t0.c68)))) WHERE ('0.9944897165992934');
SELECT SUM(count) FROM (SELECT ALL (('0.9944897165992934') IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((v0.c0 IN (t0.c68)))IS NOT(((((((((v0.c0)AND(t0.c68)))AND(NULL)))OR(v0.c0)))OR(t0.c68)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)<<(vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<<(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)<<(vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<<(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)<<(vt0.c1))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (((~ (v0.c0)) IN (((v0.c0)>>(v0.c0))))) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) WHEN (- (v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN UPPER(DISTINCT '1836302746') THEN v0.c0 COLLATE BINARY ELSE ((v0.c0)|(v0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (v0.c0)) IN (((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) WHEN (- (v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN UPPER(DISTINCT '1836302746') THEN v0.c0 COLLATE BINARY ELSE ((v0.c0)|(v0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((~ (v0.c0)) IN (((v0.c0)>>(v0.c0))))) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) WHEN (- (v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN UPPER(DISTINCT '1836302746') THEN v0.c0 COLLATE BINARY ELSE ((v0.c0)|(v0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (v0.c0)) IN (((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) WHEN (- (v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN UPPER(DISTINCT '1836302746') THEN v0.c0 COLLATE BINARY ELSE ((v0.c0)|(v0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0 WHERE (CAST(v0.c0 COLLATE BINARY AS REAL)) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY v0.c0);
SELECT ALL * FROM vt0, v0, t0 WHERE (CAST(v0.c0 COLLATE BINARY AS REAL)) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY v0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN (vt0.c1 IN ()) WHEN ((((((((0X336a097d)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN (vt0.c1 IN ()) WHEN ((((((((0X336a097d)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1) IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN (vt0.c1 IN ()) WHEN ((((((((0X336a097d)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN (vt0.c1 IN ()) WHEN ((((((((0X336a097d)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1) IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN (vt0.c1 IN ()) WHEN ((((((((0X336a097d)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1) IS TRUE) END);
SELECT * FROM v0 CROSS JOIN t0 ON ((((t0.c68) IS TRUE))-(v0.c0)) LEFT OUTER JOIN vt0 ON ((((v0.c0)AND(vt0.c1))) BETWEEN (((vt0.c0)<<(t0.c68))) AND ((vt0.c1 IN (-181286.0)))) WHERE (CAST(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 END AS BLOB)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((t0.c68) IS TRUE))-(v0.c0)) LEFT OUTER JOIN vt0 ON ((((v0.c0)AND(vt0.c1))) BETWEEN (((vt0.c0)<<(t0.c68))) AND ((vt0.c1 IN (-181286.0)))));
SELECT * FROM v0 CROSS JOIN t0 ON ((((t0.c68) IS TRUE))-(v0.c0)) LEFT OUTER JOIN vt0 ON ((((v0.c0)AND(vt0.c1))) BETWEEN (((vt0.c0)<<(t0.c68))) AND ((vt0.c1 IN (-181286.0)))) WHERE (CAST(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 END AS BLOB)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((t0.c68) IS TRUE))-(v0.c0)) LEFT OUTER JOIN vt0 ON ((((v0.c0)AND(vt0.c1))) BETWEEN (((vt0.c0)<<(t0.c68))) AND ((vt0.c1 IN (-181286.0)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) IN ())) ORDER BY ((('' IN ()))IS NOT(((vt0.c1)<=(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((('' IN ()))IS NOT(((vt0.c1)<=(vt0.c1)))) ASC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) IN ())) ORDER BY ((('' IN ()))IS NOT(((vt0.c1)<=(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((('' IN ()))IS NOT(((vt0.c1)<=(vt0.c1)))) ASC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) IN ())) ORDER BY ((('' IN ()))IS NOT(((vt0.c1)<=(vt0.c1)))) ASC;
SELECT * FROM vt0, t0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (((NOT (v0.c0)), 'x\rX).9-', (('OpW?#>X⧑')AND(vt0.c1)))) AND ((((vt0.c0) ISNULL), 0.08248835336875016, (- (v0.c0))))) WHERE (LOWER(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) ORDER BY (((NULL) BETWEEN (v0.c0) AND (vt0.c0)) IN ())  NULLS FIRST, (~ ((+ (vt0.c1))))  NULLS LAST, (v0.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (((NOT (v0.c0)), 'x\rX).9-', (('OpW?#>X⧑')AND(vt0.c1)))) AND ((((vt0.c0) ISNULL), 0.08248835336875016, (- (v0.c0))))) ORDER BY (((NULL) BETWEEN (v0.c0) AND (vt0.c0)) IN ())  NULLS FIRST, (~ ((+ (vt0.c1))))  NULLS LAST, (v0.c0 IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (((NOT (v0.c0)), 'x\rX).9-', (('OpW?#>X⧑')AND(vt0.c1)))) AND ((((vt0.c0) ISNULL), 0.08248835336875016, (- (v0.c0))))) WHERE (LOWER(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) ORDER BY (((NULL) BETWEEN (v0.c0) AND (vt0.c0)) IN ())  NULLS FIRST, (~ ((+ (vt0.c1))))  NULLS LAST, (v0.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (((NOT (v0.c0)), 'x\rX).9-', (('OpW?#>X⧑')AND(vt0.c1)))) AND ((((vt0.c0) ISNULL), 0.08248835336875016, (- (v0.c0))))) ORDER BY (((NULL) BETWEEN (v0.c0) AND (vt0.c0)) IN ())  NULLS FIRST, (~ ((+ (vt0.c1))))  NULLS LAST, (v0.c0 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY CASE CAST(t0.c68 AS BLOB)  WHEN ((t0.c68) NOT NULL) THEN (t0.c68 IN ()) ELSE t0.c68 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c68 AS BLOB)  WHEN ((t0.c68) NOT NULL) THEN (t0.c68 IN ()) ELSE t0.c68 END DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY CASE CAST(t0.c68 AS BLOB)  WHEN ((t0.c68) NOT NULL) THEN (t0.c68 IN ()) ELSE t0.c68 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c68 AS BLOB)  WHEN ((t0.c68) NOT NULL) THEN (t0.c68 IN ()) ELSE t0.c68 END DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY CASE CAST(t0.c68 AS BLOB)  WHEN ((t0.c68) NOT NULL) THEN (t0.c68 IN ()) ELSE t0.c68 END DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.10432989586719965) ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.10432989586719965) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.10432989586719965) ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.10432989586719965) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.10432989586719965) ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN 0Xffffffff882d1817 ELSE NULLIF(DISTINCT v0.c0, v0.c0) END) ORDER BY ((v0.c0 COLLATE BINARY)LIKE(v0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS INTEGER)  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN 0Xffffffff882d1817 ELSE NULLIF(DISTINCT v0.c0, v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY)LIKE(v0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN 0Xffffffff882d1817 ELSE NULLIF(DISTINCT v0.c0, v0.c0) END) ORDER BY ((v0.c0 COLLATE BINARY)LIKE(v0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS INTEGER)  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN 0Xffffffff882d1817 ELSE NULLIF(DISTINCT v0.c0, v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY)LIKE(v0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (MIN(x'', CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((MIN(x'', CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (MIN(x'', CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((MIN(x'', CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (MIN(x'', CAST(vt0.c0 AS NUMERIC)));
SELECT * FROM vt0 INNER JOIN v0 ON ((((v0.c0)>>(v0.c0)))OR((v0.c0 IN (v0.c0, t0.c68)))) CROSS JOIN t0 ON ((-8.3264395E8)<(v0.c0)) WHERE ((NOT (vt0.c0 COLLATE RTRIM))) ORDER BY CAST((((vt0.c1))>=((v0.c0))) AS REAL);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((v0.c0)>>(v0.c0)))OR((v0.c0 IN (v0.c0, t0.c68)))) CROSS JOIN t0 ON ((-8.3264395E8)<(v0.c0)) ORDER BY CAST((((vt0.c1))>=((v0.c0))) AS REAL));
SELECT * FROM vt0 INNER JOIN v0 ON ((((v0.c0)>>(v0.c0)))OR((v0.c0 IN (v0.c0, t0.c68)))) CROSS JOIN t0 ON ((-8.3264395E8)<(v0.c0)) WHERE ((NOT (vt0.c0 COLLATE RTRIM))) ORDER BY CAST((((vt0.c1))>=((v0.c0))) AS REAL);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((v0.c0)>>(v0.c0)))OR((v0.c0 IN (v0.c0, t0.c68)))) CROSS JOIN t0 ON ((-8.3264395E8)<(v0.c0)) ORDER BY CAST((((vt0.c1))>=((v0.c0))) AS REAL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c68 COLLATE NOCASE)>=(CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)) WHERE (((t0.c68 COLLATE NOCASE) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (x'ad47'))) ORDER BY CAST(x'1989' AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68 COLLATE NOCASE) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (x'ad47'))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c68 COLLATE NOCASE)>=(CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)) ORDER BY CAST(x'1989' AS INTEGER));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c68 COLLATE NOCASE)>=(CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)) WHERE (((t0.c68 COLLATE NOCASE) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (x'ad47'))) ORDER BY CAST(x'1989' AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68 COLLATE NOCASE) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (x'ad47'))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c68 COLLATE NOCASE)>=(CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)) ORDER BY CAST(x'1989' AS INTEGER));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c68 COLLATE NOCASE)>=(CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END)) WHERE (((t0.c68 COLLATE NOCASE) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (x'ad47'))) ORDER BY CAST(x'1989' AS INTEGER);
SELECT * FROM vt0 WHERE ((~ (((((NULL)AND(vt0.c1)))OR(vt0.c0))))) ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST, (((((vt0.c0)) BETWEEN (('-1358768755')) AND ((vt0.c0)))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((((NULL)AND(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST, (((((vt0.c0)) BETWEEN (('-1358768755')) AND ((vt0.c0)))) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ (((((NULL)AND(vt0.c1)))OR(vt0.c0))))) ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST, (((((vt0.c0)) BETWEEN (('-1358768755')) AND ((vt0.c0)))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((((NULL)AND(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST, (((((vt0.c0)) BETWEEN (('-1358768755')) AND ((vt0.c0)))) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ (((((NULL)AND(vt0.c1)))OR(vt0.c0))))) ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST, (((((vt0.c0)) BETWEEN (('-1358768755')) AND ((vt0.c0)))) NOT NULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, vt0 INDEXED BY i55 WHERE ((NOT (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1))) IS TRUE)  as count FROM t0, v0, vt0 INDEXED BY i55);
SELECT COUNT(*) FROM t0, v0, vt0 INDEXED BY i55 WHERE ((NOT (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1))) IS TRUE)  as count FROM t0, v0, vt0 INDEXED BY i55);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)|(((vt0.c0) NOT BETWEEN (t0.c68) AND ('	V')))) WHERE (5.7997486E7) ORDER BY (- (t0.c68 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((5.7997486E7) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)|(((vt0.c0) NOT BETWEEN (t0.c68) AND ('	V')))) ORDER BY (- (t0.c68 COLLATE NOCASE)) ASC);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)|(((vt0.c0) NOT BETWEEN (t0.c68) AND ('	V')))) WHERE (5.7997486E7) ORDER BY (- (t0.c68 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((5.7997486E7) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)|(((vt0.c0) NOT BETWEEN (t0.c68) AND ('	V')))) ORDER BY (- (t0.c68 COLLATE NOCASE)) ASC);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM)|(((vt0.c0) NOT BETWEEN (t0.c68) AND ('	V')))) WHERE (5.7997486E7) ORDER BY (- (t0.c68 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (vt0.c1 IN (CASE WHEN vt0.c1 THEN t0.c68 WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN NULL ELSE '-1984757340' END, CAST(vt0.c1 AS REAL))) WHERE (NULL) ORDER BY NULLIF(DISTINCT CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS TEXT))  NULLS LAST, (((t0.c68 IN ()))IS NOT((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (vt0.c1 IN (CASE WHEN vt0.c1 THEN t0.c68 WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN NULL ELSE '-1984757340' END, CAST(vt0.c1 AS REAL))) ORDER BY NULLIF(DISTINCT CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS TEXT))  NULLS LAST, (((t0.c68 IN ()))IS NOT((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (vt0.c1 IN (CASE WHEN vt0.c1 THEN t0.c68 WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN NULL ELSE '-1984757340' END, CAST(vt0.c1 AS REAL))) WHERE (NULL) ORDER BY NULLIF(DISTINCT CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS TEXT))  NULLS LAST, (((t0.c68 IN ()))IS NOT((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (vt0.c1 IN (CASE WHEN vt0.c1 THEN t0.c68 WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN NULL ELSE '-1984757340' END, CAST(vt0.c1 AS REAL))) ORDER BY NULLIF(DISTINCT CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS TEXT))  NULLS LAST, (((t0.c68 IN ()))IS NOT((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (vt0.c1 IN (CASE WHEN vt0.c1 THEN t0.c68 WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN NULL ELSE '-1984757340' END, CAST(vt0.c1 AS REAL))) WHERE (NULL) ORDER BY NULLIF(DISTINCT CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS TEXT))  NULLS LAST, (((t0.c68 IN ()))IS NOT((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON LOWER(CAST(vt0.c0 AS TEXT)) WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY CASE WHEN 0x3d7c11a THEN t0.c68 END COLLATE NOCASE, ((~ (t0.c68)) IN (v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON LOWER(CAST(vt0.c0 AS TEXT)) ORDER BY CASE WHEN 0X3d7c11a THEN t0.c68 END COLLATE NOCASE, ((~ (t0.c68)) IN (v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON LOWER(CAST(vt0.c0 AS TEXT)) WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY CASE WHEN 0x3d7c11a THEN t0.c68 END COLLATE NOCASE, ((~ (t0.c68)) IN (v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON LOWER(CAST(vt0.c0 AS TEXT)) ORDER BY CASE WHEN 0X3d7c11a THEN t0.c68 END COLLATE NOCASE, ((~ (t0.c68)) IN (v0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((v0.c0)=(vt0.c1)) IN (NULL)));
SELECT SUM(count) FROM (SELECT (((((v0.c0)=(vt0.c1)) IN (NULL))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((v0.c0)=(vt0.c1)) IN (NULL)));
SELECT SUM(count) FROM (SELECT (((((v0.c0)=(vt0.c1)) IN (NULL))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((t0.c68, t0.c68, t0.c68)) BETWEEN (((~ (v0.c0)), ((t0.c68)=(t0.c68)), t0.c68 COLLATE RTRIM)) AND ((((v0.c0) NOT NULL), (v0.c0 IN ()), (~ (t0.c68)))))) ORDER BY (((t0.c68)&(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, t0.c68, t0.c68)) BETWEEN (((~ (v0.c0)), ((t0.c68)==(t0.c68)), t0.c68 COLLATE RTRIM)) AND ((((v0.c0) NOT NULL), (v0.c0 IN ()), (~ (t0.c68)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c68)&(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((t0.c68, t0.c68, t0.c68)) BETWEEN (((~ (v0.c0)), ((t0.c68)=(t0.c68)), t0.c68 COLLATE RTRIM)) AND ((((v0.c0) NOT NULL), (v0.c0 IN ()), (~ (t0.c68)))))) ORDER BY (((t0.c68)&(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, t0.c68, t0.c68)) BETWEEN (((~ (v0.c0)), ((t0.c68)==(t0.c68)), t0.c68 COLLATE RTRIM)) AND ((((v0.c0) NOT NULL), (v0.c0 IN ()), (~ (t0.c68)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c68)&(v0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1, vt0.c0, t0.c68))>=((t0.c68, t0.c68, vt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, t0.c68))>=((t0.c68, t0.c68, vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1, vt0.c0, t0.c68))>=((t0.c68, t0.c68, vt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, t0.c68))>=((t0.c68, t0.c68, vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1, vt0.c0, t0.c68))>=((t0.c68, t0.c68, vt0.c1))) COLLATE BINARY);
SELECT * FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((((vt0.c1) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1)) ASC  NULLS LAST, (('r')%(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1)) ASC  NULLS LAST, (('r')%(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((((vt0.c1) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1)) ASC  NULLS LAST, (('r')%(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1)) ASC  NULLS LAST, (('r')%(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((((vt0.c1) IS FALSE)) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1)) ASC  NULLS LAST, (('r')%(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN v0 ON (- (((vt0.c0)OR('')))) WHERE (((((((((CAST(v0.c0 AS NUMERIC))AND(v0.c0 COLLATE RTRIM)))AND(((v0.c0)==(vt0.c1)))))AND(((v0.c0)IS(t0.c68)))))AND(t0.c68))) ORDER BY CAST(((v0.c0)<(vt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c0 AS NUMERIC))AND(v0.c0 COLLATE RTRIM)))AND(((v0.c0)=(vt0.c1)))))AND(((v0.c0)IS(t0.c68)))))AND(t0.c68))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON (- (((vt0.c0)OR('')))) ORDER BY CAST(((v0.c0)<(vt0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN v0 ON (- (((vt0.c0)OR('')))) WHERE (((((((((CAST(v0.c0 AS NUMERIC))AND(v0.c0 COLLATE RTRIM)))AND(((v0.c0)==(vt0.c1)))))AND(((v0.c0)IS(t0.c68)))))AND(t0.c68))) ORDER BY CAST(((v0.c0)<(vt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c0 AS NUMERIC))AND(v0.c0 COLLATE RTRIM)))AND(((v0.c0)=(vt0.c1)))))AND(((v0.c0)IS(t0.c68)))))AND(t0.c68))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON (- (((vt0.c0)OR('')))) ORDER BY CAST(((v0.c0)<(vt0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 END AS BLOB)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c68 END AS BLOB)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM vt0 WHERE (CAST(CHAR(vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CHAR(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CHAR(vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CHAR(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CHAR(vt0.c0) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (~ (json_remove(v0.c0, vt0.c0, vt0.c0, vt0.c1))) WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (~ (json_remove(v0.c0, vt0.c0, vt0.c0, vt0.c1))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (~ (json_remove(v0.c0, vt0.c0, vt0.c0, vt0.c1))) WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (~ (json_remove(v0.c0, vt0.c0, vt0.c0, vt0.c1))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c68 COLLATE NOCASE)||(t0.c68 COLLATE RTRIM))) ORDER BY TRIM(DISTINCT (+ (t0.c68)), ((v0.c0)||(v0.c0))) DESC  NULLS LAST, (((x'', ((t0.c68)!=(t0.c68)), ((v0.c0)!=(t0.c68))))<>((((t0.c68)GLOB('2063981758')), ((v0.c0)!=(t0.c68)), ((((((((t0.c68)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE NOCASE)||(t0.c68 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY TRIM(DISTINCT (+ (t0.c68)), ((v0.c0)||(v0.c0))) DESC  NULLS LAST, (((x'', ((t0.c68)<>(t0.c68)), ((v0.c0)<>(t0.c68))))!=((((t0.c68)GLOB('2063981758')), ((v0.c0)!=(t0.c68)), ((((((((t0.c68)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c68 COLLATE NOCASE)||(t0.c68 COLLATE RTRIM))) ORDER BY TRIM(DISTINCT (+ (t0.c68)), ((v0.c0)||(v0.c0))) DESC  NULLS LAST, (((x'', ((t0.c68)!=(t0.c68)), ((v0.c0)!=(t0.c68))))<>((((t0.c68)GLOB('2063981758')), ((v0.c0)!=(t0.c68)), ((((((((t0.c68)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE NOCASE)||(t0.c68 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY TRIM(DISTINCT (+ (t0.c68)), ((v0.c0)||(v0.c0))) DESC  NULLS LAST, (((x'', ((t0.c68)<>(t0.c68)), ((v0.c0)<>(t0.c68))))!=((((t0.c68)GLOB('2063981758')), ((v0.c0)!=(t0.c68)), ((((((((t0.c68)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 WHERE (v0.c0) ORDER BY (((t0.c68)) NOT BETWEEN ((((NULL)IS(t0.c68)))) AND ((((t0.c68)>(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 ORDER BY (((t0.c68)) NOT BETWEEN ((((NULL)IS(t0.c68)))) AND ((((t0.c68)>(t0.c68))))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 WHERE (v0.c0) ORDER BY (((t0.c68)) NOT BETWEEN ((((NULL)IS(t0.c68)))) AND ((((t0.c68)>(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON v0.c0 ORDER BY (((t0.c68)) NOT BETWEEN ((((NULL)IS(t0.c68)))) AND ((((t0.c68)>(t0.c68))))));
SELECT * FROM vt0, t0 WHERE (CASE WHEN t0.c68 COLLATE NOCASE THEN (((vt0.c0, 'eX', vt0.c1))>((t0.c68, t0.c68, t0.c68))) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c68 COLLATE NOCASE THEN (((vt0.c0, 'eX', vt0.c1))>((t0.c68, t0.c68, t0.c68))) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE WHEN t0.c68 COLLATE NOCASE THEN (((vt0.c0, 'eX', vt0.c1))>((t0.c68, t0.c68, t0.c68))) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c68 COLLATE NOCASE THEN (((vt0.c0, 'eX', vt0.c1))>((t0.c68, t0.c68, t0.c68))) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE WHEN t0.c68 COLLATE NOCASE THEN (((vt0.c0, 'eX', vt0.c1))>((t0.c68, t0.c68, t0.c68))) ELSE vt0.c0 END);
SELECT * FROM vt0, t0, v0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE ((vt0.c1 IN ()));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (LIKELIHOOD('{6P%r薚zJl', 0.9140468752510442));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('{6P%r薚zJl', 0.9140468752510442)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (LIKELIHOOD('{6P%r薚zJl', 0.9140468752510442));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('{6P%r薚zJl', 0.9140468752510442)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (LIKELIHOOD('{6P%r薚zJl', 0.9140468752510442));
SELECT ALL * FROM v0, t0, vt0 INDEXED BY i55 WHERE (UNLIKELY(((vt0.c1)AND(vt0.c1)))) ORDER BY ((((((((((((vt0.c1)OR(vt0.c1)))OR('Vw[X5[')))AND(t0.c68)))AND(vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(CASE WHEN '224876658' THEN v0.c0 WHEN 0.973760073566465 THEN t0.c68 WHEN v0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c1)AND(vt0.c1)))) IS TRUE)  as count FROM v0, t0, vt0 INDEXED BY i55 ORDER BY ((((((((((((vt0.c1)OR(vt0.c1)))OR('Vw[X5[')))AND(t0.c68)))AND(vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(CASE WHEN '224876658' THEN v0.c0 WHEN 0.973760073566465 THEN t0.c68 WHEN v0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM v0, t0, vt0 INDEXED BY i55 WHERE (UNLIKELY(((vt0.c1)AND(vt0.c1)))) ORDER BY ((((((((((((vt0.c1)OR(vt0.c1)))OR('Vw[X5[')))AND(t0.c68)))AND(vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(CASE WHEN '224876658' THEN v0.c0 WHEN 0.973760073566465 THEN t0.c68 WHEN v0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c1)AND(vt0.c1)))) IS TRUE)  as count FROM v0, t0, vt0 INDEXED BY i55 ORDER BY ((((((((((((vt0.c1)OR(vt0.c1)))OR('Vw[X5[')))AND(t0.c68)))AND(vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(CASE WHEN '224876658' THEN v0.c0 WHEN 0.973760073566465 THEN t0.c68 WHEN v0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 COLLATE BINARY WHERE (CASE v0.c0  WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((t0.c68)AND(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((t0.c68)AND(t0.c68)) END) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 COLLATE BINARY WHERE (CASE v0.c0  WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((t0.c68)AND(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((t0.c68)AND(t0.c68)) END) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(0.3696394254130373)))AND(((vt0.c1) BETWEEN (v0.c0) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(0.3696394254130373)))AND(((vt0.c1) BETWEEN (v0.c0) AND (t0.c68))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(0.3696394254130373)))AND(((vt0.c1) BETWEEN (v0.c0) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(0.3696394254130373)))AND(((vt0.c1) BETWEEN (v0.c0) AND (t0.c68))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (CASE WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (CASE WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM t0, v0, vt0 WHERE ((((t0.c68)) BETWEEN ((((vt0.c1) IS TRUE))) AND (((vt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN ((((vt0.c1) IS TRUE))) AND (((vt0.c1 IN ()))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE ((((t0.c68)) BETWEEN ((((vt0.c1) IS TRUE))) AND (((vt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN ((((vt0.c1) IS TRUE))) AND (((vt0.c1 IN ()))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE ((((t0.c68)) BETWEEN ((((vt0.c1) IS TRUE))) AND (((vt0.c1 IN ())))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CASE SQLITE_SOURCE_ID()  WHEN ((t0.c68)==(v0.c0)) THEN ((t0.c68) ISNULL) WHEN (t0.c68 IN ()) THEN CAST(v0.c0 AS TEXT) WHEN CAST(t0.c68 AS BLOB) THEN ((t0.c68) IS TRUE) END WHERE (CAST((- (t0.c68)) AS REAL)) ORDER BY ((((((((UPPER(v0.c0))OR(CASE v0.c0  WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN v0.c0 ELSE t0.c68 END)))AND((((v0.c0, 0.46797764181973434, '')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, t0.c68, t0.c68))))))OR((((t0.c68))<>(('0.9595865527495396'))))))OR(COALESCE(t0.c68, v0.c0, v0.c0, t0.c68, NULL, t0.c68))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c68)) AS REAL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON CASE SQLITE_SOURCE_ID()  WHEN ((t0.c68)==(v0.c0)) THEN ((t0.c68) ISNULL) WHEN (t0.c68 IN ()) THEN CAST(v0.c0 AS TEXT) WHEN CAST(t0.c68 AS BLOB) THEN ((t0.c68) IS TRUE) END ORDER BY ((((((((UPPER(v0.c0))OR(CASE v0.c0  WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN v0.c0 ELSE t0.c68 END)))AND((((v0.c0, 0.46797764181973434, '')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, t0.c68, t0.c68))))))OR((((t0.c68))!=(('0.9595865527495396'))))))OR(COALESCE(t0.c68, v0.c0, v0.c0, t0.c68, NULL, t0.c68))) DESC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CASE SQLITE_SOURCE_ID()  WHEN ((t0.c68)==(v0.c0)) THEN ((t0.c68) ISNULL) WHEN (t0.c68 IN ()) THEN CAST(v0.c0 AS TEXT) WHEN CAST(t0.c68 AS BLOB) THEN ((t0.c68) IS TRUE) END WHERE (CAST((- (t0.c68)) AS REAL)) ORDER BY ((((((((UPPER(v0.c0))OR(CASE v0.c0  WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN v0.c0 ELSE t0.c68 END)))AND((((v0.c0, 0.46797764181973434, '')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, t0.c68, t0.c68))))))OR((((t0.c68))<>(('0.9595865527495396'))))))OR(COALESCE(t0.c68, v0.c0, v0.c0, t0.c68, NULL, t0.c68))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c68)) AS REAL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON CASE SQLITE_SOURCE_ID()  WHEN ((t0.c68)==(v0.c0)) THEN ((t0.c68) ISNULL) WHEN (t0.c68 IN ()) THEN CAST(v0.c0 AS TEXT) WHEN CAST(t0.c68 AS BLOB) THEN ((t0.c68) IS TRUE) END ORDER BY ((((((((UPPER(v0.c0))OR(CASE v0.c0  WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN v0.c0 ELSE t0.c68 END)))AND((((v0.c0, 0.46797764181973434, '')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, t0.c68, t0.c68))))))OR((((t0.c68))!=(('0.9595865527495396'))))))OR(COALESCE(t0.c68, v0.c0, v0.c0, t0.c68, NULL, t0.c68))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((((((((v0.c0)LIKE(v0.c0)))AND(((((((((((((((((v0.c0)AND(v0.c0)))OR('dYh6&ᣬ)x')))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))OR(ABS(v0.c0))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(x'')))AND(v0.c0 COLLATE NOCASE))) ORDER BY ((v0.c0) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0)LIKE(v0.c0)))AND(((((((((((((((((v0.c0)AND(v0.c0)))OR('dYh6&ᣬ)x')))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))OR(ABS(v0.c0))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(x'')))AND(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT NULL));
SELECT COUNT(*) FROM v0 WHERE (((((((((((((((v0.c0)LIKE(v0.c0)))AND(((((((((((((((((v0.c0)AND(v0.c0)))OR('dYh6&ᣬ)x')))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))OR(ABS(v0.c0))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(x'')))AND(v0.c0 COLLATE NOCASE))) ORDER BY ((v0.c0) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0)LIKE(v0.c0)))AND(((((((((((((((((v0.c0)AND(v0.c0)))OR('dYh6&ᣬ)x')))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))OR(ABS(v0.c0))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(x'')))AND(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT NULL));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((- ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((- ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((- ((v0.c0 IN ()))));
SELECT * FROM t0, vt0 WHERE ((((t0.c68)) NOT BETWEEN (((- (vt0.c1)))) AND (((((t0.c68)) BETWEEN ((vt0.c0)) AND ((0X3ceaadc2))))))) ORDER BY (((((t0.c68) ISNULL), ((t0.c68) IS FALSE), NULL))<>((CAST(vt0.c0 AS INTEGER), json_insert(vt0.c0, vt0.c1, vt0.c1, t0.c68, vt0.c1), CAST(t0.c68 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN (((- (vt0.c1)))) AND (((((t0.c68)) BETWEEN ((vt0.c0)) AND ((0x3ceaadc2))))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c68) ISNULL), ((t0.c68) IS FALSE), NULL))!=((CAST(vt0.c0 AS INTEGER), json_insert(vt0.c0, vt0.c1, vt0.c1, t0.c68, vt0.c1), CAST(t0.c68 AS TEXT)))));
SELECT * FROM t0, vt0 WHERE ((((t0.c68)) NOT BETWEEN (((- (vt0.c1)))) AND (((((t0.c68)) BETWEEN ((vt0.c0)) AND ((0X3ceaadc2))))))) ORDER BY (((((t0.c68) ISNULL), ((t0.c68) IS FALSE), NULL))<>((CAST(vt0.c0 AS INTEGER), json_insert(vt0.c0, vt0.c1, vt0.c1, t0.c68, vt0.c1), CAST(t0.c68 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN (((- (vt0.c1)))) AND (((((t0.c68)) BETWEEN ((vt0.c0)) AND ((0x3ceaadc2))))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c68) ISNULL), ((t0.c68) IS FALSE), NULL))!=((CAST(vt0.c0 AS INTEGER), json_insert(vt0.c0, vt0.c1, vt0.c1, t0.c68, vt0.c1), CAST(t0.c68 AS TEXT)))));
SELECT * FROM vt0 WHERE ((('z25&w?J1[')/(((vt0.c0)>>(vt0.c1))))) ORDER BY IFNULL(vt0.c0, ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('z25&w?J1[')/(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(vt0.c0, ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) DESC);
SELECT * FROM vt0 WHERE ((('z25&w?J1[')/(((vt0.c0)>>(vt0.c1))))) ORDER BY IFNULL(vt0.c0, ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('z25&w?J1[')/(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(vt0.c0, ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) DESC);
SELECT * FROM vt0 WHERE ((('z25&w?J1[')/(((vt0.c0)>>(vt0.c1))))) ORDER BY IFNULL(vt0.c0, ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c68 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c68 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c68 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t0.c68 COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c68 COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c68)>=(t0.c68)) THEN t0.c68 COLLATE BINARY WHEN t0.c68 COLLATE BINARY THEN ((((((((t0.c68)AND(NULL)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) WHEN CAST(t0.c68 AS TEXT) THEN load_extension(t0.c68, t0.c68) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c68)>=(t0.c68)) THEN t0.c68 COLLATE BINARY WHEN t0.c68 COLLATE BINARY THEN ((((((((t0.c68)AND(NULL)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) WHEN CAST(t0.c68 AS TEXT) THEN load_extension(t0.c68, t0.c68) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c68)>=(t0.c68)) THEN t0.c68 COLLATE BINARY WHEN t0.c68 COLLATE BINARY THEN ((((((((t0.c68)AND(NULL)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) WHEN CAST(t0.c68 AS TEXT) THEN load_extension(t0.c68, t0.c68) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c68)>=(t0.c68)) THEN t0.c68 COLLATE BINARY WHEN t0.c68 COLLATE BINARY THEN ((((((((t0.c68)AND(NULL)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) WHEN CAST(t0.c68 AS TEXT) THEN load_extension(t0.c68, t0.c68) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c68)>=(t0.c68)) THEN t0.c68 COLLATE BINARY WHEN t0.c68 COLLATE BINARY THEN ((((((((t0.c68)AND(NULL)))AND(t0.c68)))OR(t0.c68)))OR(t0.c68)) WHEN CAST(t0.c68 AS TEXT) THEN load_extension(t0.c68, t0.c68) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0) NOT NULL)))) ORDER BY v0.c0, ((((v0.c0)<>(v0.c0)))%(CAST(v0.c0 AS BLOB)))  NULLS LAST, ((((((((((v0.c0)AND(v0.c0)))OR((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR((v0.c0 IN ()))))AND((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0, ((((v0.c0)<>(v0.c0)))%(CAST(v0.c0 AS BLOB)))  NULLS LAST, ((((((((((v0.c0)AND(v0.c0)))OR((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR((v0.c0 IN ()))))AND((~ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0) NOT NULL)))) ORDER BY v0.c0, ((((v0.c0)<>(v0.c0)))%(CAST(v0.c0 AS BLOB)))  NULLS LAST, ((((((((((v0.c0)AND(v0.c0)))OR((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR((v0.c0 IN ()))))AND((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0, ((((v0.c0)<>(v0.c0)))%(CAST(v0.c0 AS BLOB)))  NULLS LAST, ((((((((((v0.c0)AND(v0.c0)))OR((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR((v0.c0 IN ()))))AND((~ (v0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)>=(t0.c68)))AND(((vt0.c0)*(vt0.c0))))) ORDER BY 0xffffffff8561b2ca;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(t0.c68)))AND(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0Xffffffff8561b2ca);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)>=(t0.c68)))AND(((vt0.c0)*(vt0.c0))))) ORDER BY 0xffffffff8561b2ca;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(t0.c68)))AND(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0Xffffffff8561b2ca);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)>=(t0.c68)))AND(((vt0.c0)*(vt0.c0))))) ORDER BY 0xffffffff8561b2ca;
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS NUMERIC)) ISNULL)) ORDER BY ((NULL COLLATE NOCASE) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((NULL COLLATE NOCASE) ISNULL) DESC);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS NUMERIC)) ISNULL)) ORDER BY ((NULL COLLATE NOCASE) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((NULL COLLATE NOCASE) ISNULL) DESC);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS NUMERIC)) ISNULL)) ORDER BY ((NULL COLLATE NOCASE) ISNULL) DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))||(CAST(vt0.c0 AS BLOB)))) ORDER BY (- ((vt0.c1 IN ()))) ASC  NULLS LAST, ((LOWER(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(x'5166')))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))||(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c1 IN ()))) ASC  NULLS LAST, ((LOWER(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(x'5166')))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))||(CAST(vt0.c0 AS BLOB)))) ORDER BY (- ((vt0.c1 IN ()))) ASC  NULLS LAST, ((LOWER(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(x'5166')))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))||(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c1 IN ()))) ASC  NULLS LAST, ((LOWER(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(x'5166')))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))||(CAST(vt0.c0 AS BLOB)))) ORDER BY (- ((vt0.c1 IN ()))) ASC  NULLS LAST, ((LOWER(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(x'5166')))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((t0.c68)=(t0.c68))) AND (v0.c0 COLLATE NOCASE))) ORDER BY CAST(((vt0.c0)=('')) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((t0.c68)==(t0.c68))) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CAST(((vt0.c0)==('')) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((t0.c68)=(t0.c68))) AND (v0.c0 COLLATE NOCASE))) ORDER BY CAST(((vt0.c0)=('')) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((t0.c68)==(t0.c68))) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CAST(((vt0.c0)==('')) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN v0 ON (((vt0.c0, NULL, v0.c0)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((((((((vt0.c1)AND(v0.c0)))OR(t0.c68)))AND(0.07771916381163502)))OR(v0.c0)), ((vt0.c1)/(vt0.c0)))) AND ((NULL, vt0.c1 COLLATE NOCASE, ((v0.c0) NOT NULL)))) WHERE ((((+ (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON (((vt0.c0, NULL, v0.c0)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((((((((vt0.c1)AND(v0.c0)))OR(t0.c68)))AND(0.07771916381163502)))OR(v0.c0)), ((vt0.c1)/(vt0.c0)))) AND ((NULL, vt0.c1 COLLATE NOCASE, ((v0.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN v0 ON (((vt0.c0, NULL, v0.c0)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((((((((vt0.c1)AND(v0.c0)))OR(t0.c68)))AND(0.07771916381163502)))OR(v0.c0)), ((vt0.c1)/(vt0.c0)))) AND ((NULL, vt0.c1 COLLATE NOCASE, ((v0.c0) NOT NULL)))) WHERE ((((+ (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON (((vt0.c0, NULL, v0.c0)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((((((((vt0.c1)AND(v0.c0)))OR(t0.c68)))AND(0.07771916381163502)))OR(v0.c0)), ((vt0.c1)/(vt0.c0)))) AND ((NULL, vt0.c1 COLLATE NOCASE, ((v0.c0) NOT NULL)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1)GLOB(((0.5123006415471715) NOT BETWEEN (vt0.c0) AND ('0.2336052665699121'))))) ORDER BY (((NOT (vt0.c1)))|(CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((((vt0.c0) IS TRUE)) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (x'a05d')) ASC  NULLS FIRST, json_array(vt0.c1, vt0.c1) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)GLOB(((0.5123006415471715) NOT BETWEEN (vt0.c0) AND ('0.2336052665699121'))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (vt0.c1)))|(CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((((vt0.c0) IS TRUE)) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (x'a05d')) ASC  NULLS FIRST, json_array(vt0.c1, vt0.c1) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1)GLOB(((0.5123006415471715) NOT BETWEEN (vt0.c0) AND ('0.2336052665699121'))))) ORDER BY (((NOT (vt0.c1)))|(CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((((vt0.c0) IS TRUE)) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (x'a05d')) ASC  NULLS FIRST, json_array(vt0.c1, vt0.c1) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)GLOB(((0.5123006415471715) NOT BETWEEN (vt0.c0) AND ('0.2336052665699121'))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (vt0.c1)))|(CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((((vt0.c0) IS TRUE)) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (x'a05d')) ASC  NULLS FIRST, json_array(vt0.c1, vt0.c1) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0 WHERE (TRIM(v0.c0, t0.c68) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TRIM(v0.c0, t0.c68) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (TRIM(v0.c0, t0.c68) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TRIM(v0.c0, t0.c68) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM vt0 WHERE (0x7561d799);
SELECT SUM(count) FROM (SELECT ((0X7561d799) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0x7561d799);
SELECT SUM(count) FROM (SELECT ((0X7561d799) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0x7561d799);
SELECT * FROM t0 WHERE (((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(1259228803)) COLLATE BINARY) ORDER BY (((((((((('1297975447')AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))==(CAST(t0.c68 AS BLOB))), ((CAST(t0.c68 AS TEXT))OR(((t0.c68)||(t0.c68)))) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(1259228803)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (((((((((('1297975447')AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))==(CAST(t0.c68 AS BLOB))), ((CAST(t0.c68 AS TEXT))OR(((t0.c68)||(t0.c68)))) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(LAST_INSERT_ROWID()));
SELECT * FROM t0 WHERE (((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(1259228803)) COLLATE BINARY) ORDER BY (((((((((('1297975447')AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))==(CAST(t0.c68 AS BLOB))), ((CAST(t0.c68 AS TEXT))OR(((t0.c68)||(t0.c68)))) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(1259228803)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (((((((((('1297975447')AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))==(CAST(t0.c68 AS BLOB))), ((CAST(t0.c68 AS TEXT))OR(((t0.c68)||(t0.c68)))) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(LAST_INSERT_ROWID()));
SELECT * FROM t0 WHERE (((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c68)))OR(1259228803)) COLLATE BINARY) ORDER BY (((((((((('1297975447')AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68)))==(CAST(t0.c68 AS BLOB))), ((CAST(t0.c68 AS TEXT))OR(((t0.c68)||(t0.c68)))) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_USED(LAST_INSERT_ROWID());
SELECT * FROM v0, vt0 WHERE ((- (((v0.c0)=(v0.c0))))) ORDER BY ((((CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND(vt0.c1)))OR(CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND(vt0.c1)))OR(CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((- (((v0.c0)=(v0.c0))))) ORDER BY ((((CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND(vt0.c1)))OR(CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND(vt0.c1)))OR(CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)*(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)*(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)*(vt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN (0.07025949596916481 IN ()) THEN ((((v0.c0)OR(v0.c0)))OR(x'')) END) ORDER BY CAST(x'0e53' AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN (0.07025949596916481 IN ()) THEN ((((v0.c0)OR(v0.c0)))OR(x'')) END) IS TRUE)  as count FROM v0 ORDER BY CAST(x'0e53' AS BLOB));
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN (0.07025949596916481 IN ()) THEN ((((v0.c0)OR(v0.c0)))OR(x'')) END) ORDER BY CAST(x'0e53' AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN (0.07025949596916481 IN ()) THEN ((((v0.c0)OR(v0.c0)))OR(x'')) END) IS TRUE)  as count FROM v0 ORDER BY CAST(x'0e53' AS BLOB));
SELECT * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM) ORDER BY ((vt0.c0) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND ((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND ((vt0.c1 IN ()))));
SELECT * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM) ORDER BY ((vt0.c0) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND ((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND ((vt0.c1 IN ()))));
SELECT * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM) ORDER BY ((vt0.c0) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND ((vt0.c1 IN ())));
SELECT * FROM t0 WHERE ((((t0.c68, t0.c68, 0.2432167280573463)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) COLLATE NOCASE) ORDER BY CAST(((t0.c68) ISNULL) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, t0.c68, 0.2432167280573463)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c68) ISNULL) AS REAL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c68, t0.c68, 0.2432167280573463)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) COLLATE NOCASE) ORDER BY CAST(((t0.c68) ISNULL) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, t0.c68, 0.2432167280573463)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c68) ISNULL) AS REAL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c68, t0.c68, 0.2432167280573463)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))) COLLATE NOCASE) ORDER BY CAST(((t0.c68) ISNULL) AS REAL) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)/(v0.c0)) WHEN (~ (v0.c0)) THEN (- (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)/(v0.c0)) WHEN (~ (v0.c0)) THEN (- (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)/(v0.c0)) WHEN (~ (v0.c0)) THEN (- (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)/(v0.c0)) WHEN (~ (v0.c0)) THEN (- (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68))) NOT BETWEEN ('-236082795' COLLATE RTRIM) AND ((((t0.c68))==((t0.c68))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68))) NOT BETWEEN ('-236082795' COLLATE RTRIM) AND ((((t0.c68))=((t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68))) NOT BETWEEN ('-236082795' COLLATE RTRIM) AND ((((t0.c68))==((t0.c68))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68))) NOT BETWEEN ('-236082795' COLLATE RTRIM) AND ((((t0.c68))=((t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(t0.c68)))OR(t0.c68))) NOT BETWEEN ('-236082795' COLLATE RTRIM) AND ((((t0.c68))==((t0.c68))))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((v0.c0)IS((((t0.c68, t0.c68, v0.c0))>((t0.c68, t0.c68, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS((((t0.c68, t0.c68, v0.c0))>((t0.c68, t0.c68, v0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((v0.c0)IS((((t0.c68, t0.c68, v0.c0))>((t0.c68, t0.c68, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS((((t0.c68, t0.c68, v0.c0))>((t0.c68, t0.c68, v0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0, vt0 WHERE (CAST((- (vt0.c1)) AS NUMERIC)) ORDER BY ((((((v0.c0, t0.c68, v0.c0))>=((vt0.c1, v0.c0, t0.c68)))))==(((vt0.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((v0.c0, t0.c68, v0.c0))>=((vt0.c1, v0.c0, t0.c68)))))=(((vt0.c0 IN ())))) ASC);
SELECT * FROM v0, t0, vt0 WHERE (CAST((- (vt0.c1)) AS NUMERIC)) ORDER BY ((((((v0.c0, t0.c68, v0.c0))>=((vt0.c1, v0.c0, t0.c68)))))==(((vt0.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((v0.c0, t0.c68, v0.c0))>=((vt0.c1, v0.c0, t0.c68)))))=(((vt0.c0 IN ())))) ASC);
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END IN (((((((((x'7826')OR(t0.c68)))AND(t0.c68)))AND('-832643950')))AND(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END IN (((((((((x'7826')OR(t0.c68)))AND(t0.c68)))AND('-832643950')))AND(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END IN (((((((((x'7826')OR(t0.c68)))AND(t0.c68)))AND('-832643950')))AND(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END IN (((((((((x'7826')OR(t0.c68)))AND(t0.c68)))AND('-832643950')))AND(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END IN (((((((((x'7826')OR(t0.c68)))AND(t0.c68)))AND('-832643950')))AND(t0.c68)))));
SELECT * FROM v0, vt0, t0 WHERE (rtreenode(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, LIKELIHOOD(DISTINCT vt0.c1, 0.8330931280581695)));
SELECT SUM(count) FROM (SELECT ((rtreenode(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, LIKELIHOOD(DISTINCT vt0.c1, 0.8330931280581695))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (rtreenode(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, LIKELIHOOD(DISTINCT vt0.c1, 0.8330931280581695)));
SELECT SUM(count) FROM (SELECT ((rtreenode(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, LIKELIHOOD(DISTINCT vt0.c1, 0.8330931280581695))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))GLOB(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))GLOB(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))GLOB(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))GLOB(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))GLOB(CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((NOT (vt0.c0)))IS(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (~ (v0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))IS(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (v0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((NOT (vt0.c0)))IS(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (~ (v0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))IS(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (v0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- (CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) ORDER BY t0.c68  NULLS FIRST, (((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((x''))))&(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c68  NULLS FIRST, (((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((x''))))&(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT ALL * FROM t0 WHERE ((- (CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) ORDER BY t0.c68  NULLS FIRST, (((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((x''))))&(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c68  NULLS FIRST, (((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((x''))))&(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT ALL * FROM t0 WHERE ((- (CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) ORDER BY t0.c68  NULLS FIRST, (((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((x''))))&(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))));
SELECT COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((+ (vt0.c1))) AND (((vt0.c0)*(vt0.c1))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((+ (vt0.c1))) AND (((vt0.c0)*(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((+ (vt0.c1))) AND (((vt0.c0)*(vt0.c1))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((+ (vt0.c1))) AND (((vt0.c0)*(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0)) NOT BETWEEN ((+ (vt0.c1))) AND (((vt0.c0)*(vt0.c1))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM v0 INNER JOIN t0 ON CASE v0.c0 COLLATE BINARY  WHEN ((NULL)<(v0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END LEFT OUTER JOIN vt0 ON (('-796929968')-(CAST(t0.c68 AS INTEGER))) WHERE ((- (((NULL)/(vt0.c1))))) ORDER BY ((ABS(v0.c0)) NOT BETWEEN ((vt0.c1 IN (v0.c0, vt0.c0, NULL))) AND (NULLIF(vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (((NULL)/(vt0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CASE v0.c0 COLLATE BINARY  WHEN ((NULL)<(v0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END LEFT OUTER JOIN vt0 ON (('-796929968')-(CAST(t0.c68 AS INTEGER))) ORDER BY ((ABS(v0.c0)) NOT BETWEEN ((vt0.c1 IN (v0.c0, vt0.c0, NULL))) AND (NULLIF(vt0.c0, vt0.c1))));
SELECT ALL * FROM v0 INNER JOIN t0 ON CASE v0.c0 COLLATE BINARY  WHEN ((NULL)<(v0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END LEFT OUTER JOIN vt0 ON (('-796929968')-(CAST(t0.c68 AS INTEGER))) WHERE ((- (((NULL)/(vt0.c1))))) ORDER BY ((ABS(v0.c0)) NOT BETWEEN ((vt0.c1 IN (v0.c0, vt0.c0, NULL))) AND (NULLIF(vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (((NULL)/(vt0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CASE v0.c0 COLLATE BINARY  WHEN ((NULL)<(v0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END LEFT OUTER JOIN vt0 ON (('-796929968')-(CAST(t0.c68 AS INTEGER))) ORDER BY ((ABS(v0.c0)) NOT BETWEEN ((vt0.c1 IN (v0.c0, vt0.c0, NULL))) AND (NULLIF(vt0.c0, vt0.c1))));
SELECT ALL * FROM t0, vt0, v0 WHERE (((((0.6022219445477104)AND(v0.c0 COLLATE BINARY)))AND((vt0.c1 IN ())))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((0.6022219445477104)AND(v0.c0 COLLATE BINARY)))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY x'' DESC);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((0.6022219445477104)AND(v0.c0 COLLATE BINARY)))AND((vt0.c1 IN ())))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((0.6022219445477104)AND(v0.c0 COLLATE BINARY)))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY x'' DESC);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((0.6022219445477104)AND(v0.c0 COLLATE BINARY)))AND((vt0.c1 IN ())))) ORDER BY x'' DESC;
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (((((t0.c68)AND(t0.c68)))||((((0Xffffffffa605f451, t0.c68, t0.c68))<=((t0.c68, t0.c68, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)AND(t0.c68)))||((((0Xffffffffa605f451, t0.c68, t0.c68))<=((t0.c68, t0.c68, v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (((((t0.c68)AND(t0.c68)))||((((0Xffffffffa605f451, t0.c68, t0.c68))<=((t0.c68, t0.c68, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)AND(t0.c68)))||((((0Xffffffffa605f451, t0.c68, t0.c68))<=((t0.c68, t0.c68, v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (((((t0.c68)AND(t0.c68)))||((((0Xffffffffa605f451, t0.c68, t0.c68))<=((t0.c68, t0.c68, v0.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (((vt0.c0)&(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)&(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (((vt0.c0)&(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)&(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM v0, t0 WHERE (CASE WHEN 0X0 THEN v0.c0 ELSE t0.c68 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0X0 THEN v0.c0 ELSE t0.c68 END COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CASE WHEN 0X0 THEN v0.c0 ELSE t0.c68 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0X0 THEN v0.c0 ELSE t0.c68 END COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CASE WHEN 0X0 THEN v0.c0 ELSE t0.c68 END COLLATE RTRIM);
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON (NOT (((t0.c68) NOT NULL))) WHERE (((((((((((v0.c0)IS NOT(vt0.c1)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c1)|(vt0.c1)))))AND(((t0.c68) NOT BETWEEN (v0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)IS NOT(vt0.c1)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c1)|(vt0.c1)))))AND(((t0.c68) NOT BETWEEN (v0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON (NOT (((t0.c68) NOT NULL))));
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON (NOT (((t0.c68) NOT NULL))) WHERE (((((((((((v0.c0)IS NOT(vt0.c1)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c1)|(vt0.c1)))))AND(((t0.c68) NOT BETWEEN (v0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)IS NOT(vt0.c1)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c1)|(vt0.c1)))))AND(((t0.c68) NOT BETWEEN (v0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON (NOT (((t0.c68) NOT NULL))));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (x'') ORDER BY (+ (((1.639241486E9) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (+ (((1.639241486E9) IS TRUE))) ASC);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (x'') ORDER BY (+ (((1.639241486E9) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (+ (((1.639241486E9) IS TRUE))) ASC);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (x'') ORDER BY (+ (((1.639241486E9) IS TRUE))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, (- ((~ (vt0.c0)))), ((NULL) NOTNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, (- ((~ (vt0.c0)))), ((NULL) NOTNULL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, (- ((~ (vt0.c0)))), ((NULL) NOTNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, (- ((~ (vt0.c0)))), ((NULL) NOTNULL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST, (- ((~ (vt0.c0)))), ((NULL) NOTNULL) COLLATE BINARY;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END)AND(((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END)AND(((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END)AND(((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END)AND(((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON MAX(0.6078633381003424, (vt0.c1 IN ())) RIGHT OUTER JOIN t0 ON ((INSTR(vt0.c1, NULL))>(vt0.c0)) WHERE ((((- (vt0.c0))) NOT NULL)) ORDER BY ((v0.c0) NOT BETWEEN (NULL) AND ('1405785613')) COLLATE RTRIM DESC, ((((((((NULLIF(DISTINCT vt0.c0, t0.c68))OR(((vt0.c1)GLOB(vt0.c0)))))AND((((vt0.c1, 0xffffffffcbcc3f26, t0.c68))=((vt0.c1, vt0.c1, vt0.c1))))))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '{ey>n' WHEN v0.c0 THEN 'qk⨗5ir&a' END)))AND(((vt0.c0)<=(t0.c68)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON MAX(0.6078633381003424, (vt0.c1 IN ())) RIGHT OUTER JOIN t0 ON ((INSTR(vt0.c1, NULL))>(vt0.c0)) ORDER BY ((v0.c0) NOT BETWEEN (NULL) AND ('1405785613')) COLLATE RTRIM DESC, ((((((((NULLIF(DISTINCT vt0.c0, t0.c68))OR(((vt0.c1)GLOB(vt0.c0)))))AND((((vt0.c1, 0Xffffffffcbcc3f26, t0.c68))==((vt0.c1, vt0.c1, vt0.c1))))))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '{ey>n' WHEN v0.c0 THEN 'qk⨗5ir&a' END)))AND(((vt0.c0)<=(t0.c68)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON MAX(0.6078633381003424, (vt0.c1 IN ())) RIGHT OUTER JOIN t0 ON ((INSTR(vt0.c1, NULL))>(vt0.c0)) WHERE ((((- (vt0.c0))) NOT NULL)) ORDER BY ((v0.c0) NOT BETWEEN (NULL) AND ('1405785613')) COLLATE RTRIM DESC, ((((((((NULLIF(DISTINCT vt0.c0, t0.c68))OR(((vt0.c1)GLOB(vt0.c0)))))AND((((vt0.c1, 0xffffffffcbcc3f26, t0.c68))=((vt0.c1, vt0.c1, vt0.c1))))))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '{ey>n' WHEN v0.c0 THEN 'qk⨗5ir&a' END)))AND(((vt0.c0)<=(t0.c68)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON MAX(0.6078633381003424, (vt0.c1 IN ())) RIGHT OUTER JOIN t0 ON ((INSTR(vt0.c1, NULL))>(vt0.c0)) ORDER BY ((v0.c0) NOT BETWEEN (NULL) AND ('1405785613')) COLLATE RTRIM DESC, ((((((((NULLIF(DISTINCT vt0.c0, t0.c68))OR(((vt0.c1)GLOB(vt0.c0)))))AND((((vt0.c1, 0Xffffffffcbcc3f26, t0.c68))==((vt0.c1, vt0.c1, vt0.c1))))))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '{ey>n' WHEN v0.c0 THEN 'qk⨗5ir&a' END)))AND(((vt0.c0)<=(t0.c68)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON MAX(0.6078633381003424, (vt0.c1 IN ())) RIGHT OUTER JOIN t0 ON ((INSTR(vt0.c1, NULL))>(vt0.c0)) WHERE ((((- (vt0.c0))) NOT NULL)) ORDER BY ((v0.c0) NOT BETWEEN (NULL) AND ('1405785613')) COLLATE RTRIM DESC, ((((((((NULLIF(DISTINCT vt0.c0, t0.c68))OR(((vt0.c1)GLOB(vt0.c0)))))AND((((vt0.c1, 0xffffffffcbcc3f26, t0.c68))=((vt0.c1, vt0.c1, vt0.c1))))))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '{ey>n' WHEN v0.c0 THEN 'qk⨗5ir&a' END)))AND(((vt0.c0)<=(t0.c68)))) DESC  NULLS LAST;
SELECT * FROM t0, v0 WHERE (((ABS(DISTINCT v0.c0)) BETWEEN (CAST(t0.c68 AS TEXT)) AND (t0.c68 COLLATE RTRIM))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT v0.c0)) BETWEEN (CAST(t0.c68 AS TEXT)) AND (t0.c68 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 ASC);
SELECT * FROM t0, v0 WHERE (((ABS(DISTINCT v0.c0)) BETWEEN (CAST(t0.c68 AS TEXT)) AND (t0.c68 COLLATE RTRIM))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT v0.c0)) BETWEEN (CAST(t0.c68 AS TEXT)) AND (t0.c68 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c68) NOT BETWEEN (((t0.c68)IS(vt0.c1))) AND (t0.c68 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) NOT BETWEEN (((t0.c68)IS(vt0.c1))) AND (t0.c68 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c68) NOT BETWEEN (((t0.c68)IS(vt0.c1))) AND (t0.c68 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) NOT BETWEEN (((t0.c68)IS(vt0.c1))) AND (t0.c68 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c68) NOT BETWEEN (((t0.c68)IS(vt0.c1))) AND (t0.c68 COLLATE NOCASE)));
SELECT * FROM t0, vt0, v0 WHERE (ABS('0.7047985307954495')) ORDER BY CAST((((vt0.c0))>=((vt0.c1))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((ABS('0.7047985307954495')) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CAST((((vt0.c0))>=((vt0.c1))) AS BLOB) DESC);
SELECT * FROM t0, vt0, v0 WHERE (ABS('0.7047985307954495')) ORDER BY CAST((((vt0.c0))>=((vt0.c1))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((ABS('0.7047985307954495')) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CAST((((vt0.c0))>=((vt0.c1))) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c68 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c68 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c68 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 IN (v0.c0, v0.c0))))>=((v0.c0)))) ORDER BY ((((((((PRINTF(v0.c0))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR((+ (v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((v0.c0)+(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN (v0.c0, v0.c0))))>=((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((PRINTF(v0.c0))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR((+ (v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((v0.c0)+(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 IN (v0.c0, v0.c0))))>=((v0.c0)))) ORDER BY ((((((((PRINTF(v0.c0))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR((+ (v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((v0.c0)+(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN (v0.c0, v0.c0))))>=((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((PRINTF(v0.c0))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR((+ (v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((v0.c0)+(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 INNER JOIN vt0 ON (((((vt0.c1, v0.c0, t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, v0.c0, v0.c0, vt0.c1, 0.8759625889011015)) AND ((v0.c0, vt0.c1, vt0.c0, vt0.c1, v0.c0))))IS(t0.c68 COLLATE BINARY)) WHERE (((t0.c68) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c68) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON (((((vt0.c1, v0.c0, t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, v0.c0, v0.c0, vt0.c1, 0.8759625889011015)) AND ((v0.c0, vt0.c1, vt0.c0, vt0.c1, v0.c0))))IS(t0.c68 COLLATE BINARY)));
SELECT COUNT(*) FROM t0, v0 INNER JOIN vt0 ON (((((vt0.c1, v0.c0, t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, v0.c0, v0.c0, vt0.c1, 0.8759625889011015)) AND ((v0.c0, vt0.c1, vt0.c0, vt0.c1, v0.c0))))IS(t0.c68 COLLATE BINARY)) WHERE (((t0.c68) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c68) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON (((((vt0.c1, v0.c0, t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, v0.c0, v0.c0, vt0.c1, 0.8759625889011015)) AND ((v0.c0, vt0.c1, vt0.c0, vt0.c1, v0.c0))))IS(t0.c68 COLLATE BINARY)));
SELECT * FROM vt0, t0, v0 WHERE (NULL) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY vt0.c1  NULLS LAST);
SELECT * FROM vt0, t0, v0 WHERE (NULL) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY vt0.c1  NULLS LAST);
SELECT * FROM vt0, t0, v0 WHERE (NULL) ORDER BY vt0.c1  NULLS LAST;
SELECT * FROM v0, t0, vt0 WHERE (json_valid(UNLIKELY(vt0.c0))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)LIKE(vt0.c0)) DESC, SQLITE_COMPILEOPTION_USED(((v0.c0)*(NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(UNLIKELY(vt0.c0))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)LIKE(vt0.c0)) DESC, SQLITE_COMPILEOPTION_USED(((v0.c0)*(NULL))) DESC  NULLS FIRST);
SELECT * FROM v0, t0, vt0 WHERE (json_valid(UNLIKELY(vt0.c0))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)LIKE(vt0.c0)) DESC, SQLITE_COMPILEOPTION_USED(((v0.c0)*(NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(UNLIKELY(vt0.c0))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)LIKE(vt0.c0)) DESC, SQLITE_COMPILEOPTION_USED(((v0.c0)*(NULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0))) ORDER BY (((NOT (v0.c0)))&(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))&(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0))) ORDER BY (((NOT (v0.c0)))&(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))&(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON t0.c68 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, ((t0.c68) IS FALSE), (t0.c68 IN ()))) AND (((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))), vt0.c1, t0.c68))), CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c68)))  WHEN (('1594547406')%(vt0.c1)) THEN '-1118799821' WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN (t0.c68 IN ()) THEN CAST(t0.c68 AS NUMERIC) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t0.c68 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, ((t0.c68) IS FALSE), (t0.c68 IN ()))) AND (((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))), vt0.c1, t0.c68))), CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c68)))  WHEN (('1594547406')%(vt0.c1)) THEN '-1118799821' WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN (t0.c68 IN ()) THEN CAST(t0.c68 AS NUMERIC) END  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON t0.c68 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, ((t0.c68) IS FALSE), (t0.c68 IN ()))) AND (((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))), vt0.c1, t0.c68))), CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c68)))  WHEN (('1594547406')%(vt0.c1)) THEN '-1118799821' WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN (t0.c68 IN ()) THEN CAST(t0.c68 AS NUMERIC) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON t0.c68 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, ((t0.c68) IS FALSE), (t0.c68 IN ()))) AND (((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))), vt0.c1, t0.c68))), CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c68)))  WHEN (('1594547406')%(vt0.c1)) THEN '-1118799821' WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN (t0.c68 IN ()) THEN CAST(t0.c68 AS NUMERIC) END  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON t0.c68 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, ((t0.c68) IS FALSE), (t0.c68 IN ()))) AND (((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))), vt0.c1, t0.c68))), CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c68)))  WHEN (('1594547406')%(vt0.c1)) THEN '-1118799821' WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN (t0.c68 IN ()) THEN CAST(t0.c68 AS NUMERIC) END  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE ((t0.c68 IN ()) COLLATE RTRIM) ORDER BY ((COALESCE(DISTINCT t0.c68, '')) BETWEEN (((v0.c0) BETWEEN (t0.c68) AND (v0.c0))) AND ((((((((('-1118799821')OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC, t0.c68, CAST('197902739' AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c68 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0 ORDER BY ((COALESCE(DISTINCT t0.c68, '')) BETWEEN (((v0.c0) BETWEEN (t0.c68) AND (v0.c0))) AND ((((((((('-1118799821')OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC, t0.c68, CAST('197902739' AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE ((t0.c68 IN ()) COLLATE RTRIM) ORDER BY ((COALESCE(DISTINCT t0.c68, '')) BETWEEN (((v0.c0) BETWEEN (t0.c68) AND (v0.c0))) AND ((((((((('-1118799821')OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC, t0.c68, CAST('197902739' AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c68 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0 ORDER BY ((COALESCE(DISTINCT t0.c68, '')) BETWEEN (((v0.c0) BETWEEN (t0.c68) AND (v0.c0))) AND ((((((((('-1118799821')OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC, t0.c68, CAST('197902739' AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i55, v0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) WHERE ((((((((vt0.c1)OR(0.2586455998115539)))AND(vt0.c0)), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)), ((0.07311140076632339)+(vt0.c0))))<>(((NOT (vt0.c0)), ((((((((v0.c0)AND(t0.c68)))OR(t0.c68)))OR(vt0.c1)))AND(vt0.c1)), CASE WHEN t0.c68 THEN v0.c0 ELSE vt0.c1 END)))) ORDER BY 0x5903243 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)OR(0.2586455998115539)))AND(vt0.c0)), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)), ((0.07311140076632339)+(vt0.c0))))<>(((NOT (vt0.c0)), ((((((((v0.c0)AND(t0.c68)))OR(t0.c68)))OR(vt0.c1)))AND(vt0.c1)), CASE WHEN t0.c68 THEN v0.c0 ELSE vt0.c1 END)))) IS TRUE)  as count FROM t0 INDEXED BY i55, v0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ORDER BY 0x5903243 ASC);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i55, v0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) WHERE ((((((((vt0.c1)OR(0.2586455998115539)))AND(vt0.c0)), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)), ((0.07311140076632339)+(vt0.c0))))<>(((NOT (vt0.c0)), ((((((((v0.c0)AND(t0.c68)))OR(t0.c68)))OR(vt0.c1)))AND(vt0.c1)), CASE WHEN t0.c68 THEN v0.c0 ELSE vt0.c1 END)))) ORDER BY 0x5903243 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)OR(0.2586455998115539)))AND(vt0.c0)), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0)), ((0.07311140076632339)+(vt0.c0))))<>(((NOT (vt0.c0)), ((((((((v0.c0)AND(t0.c68)))OR(t0.c68)))OR(vt0.c1)))AND(vt0.c1)), CASE WHEN t0.c68 THEN v0.c0 ELSE vt0.c1 END)))) IS TRUE)  as count FROM t0 INDEXED BY i55, v0 LEFT OUTER JOIN vt0 ON LIKELY(DISTINCT ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ORDER BY 0x5903243 ASC);
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON LIKELIHOOD(CAST(vt0.c1 AS NUMERIC), 0.7151344329092312) WHERE (t0.c68) ORDER BY ((((t0.c68)AND(t0.c68 COLLATE NOCASE)))OR(((vt0.c0)||(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON LIKELIHOOD(CAST(vt0.c1 AS NUMERIC), 0.7151344329092312) ORDER BY ((((t0.c68)AND(t0.c68 COLLATE NOCASE)))OR(((vt0.c0)||(vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON LIKELIHOOD(CAST(vt0.c1 AS NUMERIC), 0.7151344329092312) WHERE (t0.c68) ORDER BY ((((t0.c68)AND(t0.c68 COLLATE NOCASE)))OR(((vt0.c0)||(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON LIKELIHOOD(CAST(vt0.c1 AS NUMERIC), 0.7151344329092312) ORDER BY ((((t0.c68)AND(t0.c68 COLLATE NOCASE)))OR(((vt0.c0)||(vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON LIKELIHOOD(CAST(vt0.c1 AS NUMERIC), 0.7151344329092312) WHERE (t0.c68) ORDER BY ((((t0.c68)AND(t0.c68 COLLATE NOCASE)))OR(((vt0.c0)||(vt0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (vt0.c1) ORDER BY CASE (~ (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (t0.c68 IN ()) END;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE (~ (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (t0.c68 IN ()) END);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (vt0.c1) ORDER BY CASE (~ (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (t0.c68 IN ()) END;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE (~ (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (t0.c68 IN ()) END);
SELECT ALL * FROM v0, t0 WHERE (DATE((NOT (t0.c68)), CAST(v0.c0 AS REAL), TRIM(v0.c0), (v0.c0 IN ()), (t0.c68 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((DATE((NOT (t0.c68)), CAST(v0.c0 AS REAL), TRIM(v0.c0), (v0.c0 IN ()), (t0.c68 IN ()))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (DATE((NOT (t0.c68)), CAST(v0.c0 AS REAL), TRIM(v0.c0), (v0.c0 IN ()), (t0.c68 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((DATE((NOT (t0.c68)), CAST(v0.c0 AS REAL), TRIM(v0.c0), (v0.c0 IN ()), (t0.c68 IN ()))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((t0.c68)AND(v0.c0)))OR(t0.c68))) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0)&(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68)AND(v0.c0)))OR(t0.c68))) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0)&(v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((t0.c68)AND(v0.c0)))OR(t0.c68))) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0)&(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68)AND(v0.c0)))OR(t0.c68))) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0)&(v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM t0 WHERE (((((CASE WHEN t0.c68 THEN t0.c68 END)OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))OR(CASE t0.c68  WHEN t0.c68 THEN '!a%k}' ELSE t0.c68 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c68 THEN t0.c68 END)OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))OR(CASE t0.c68  WHEN t0.c68 THEN '!a%k}' ELSE t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((CASE WHEN t0.c68 THEN t0.c68 END)OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))OR(CASE t0.c68  WHEN t0.c68 THEN '!a%k}' ELSE t0.c68 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c68 THEN t0.c68 END)OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))OR(CASE t0.c68  WHEN t0.c68 THEN '!a%k}' ELSE t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((CASE WHEN t0.c68 THEN t0.c68 END)OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))OR(CASE t0.c68  WHEN t0.c68 THEN '!a%k}' ELSE t0.c68 END)));
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM v0 WHERE ((~ (CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM t0 WHERE (((((((x'')OR(t0.c68)))AND(t0.c68))) NOT BETWEEN (x'14a0') AND (((t0.c68) NOTNULL)))) ORDER BY (((t0.c68))<((CAST(t0.c68 AS NUMERIC)))), (((((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)))) NOT BETWEEN (((('TB'))>=((t0.c68)))) AND (((t0.c68)<=(t0.c68)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')OR(t0.c68)))AND(t0.c68))) NOT BETWEEN (x'14a0') AND (((t0.c68) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68))<((CAST(t0.c68 AS NUMERIC)))), (((((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)))) NOT BETWEEN (((('TB'))>=((t0.c68)))) AND (((t0.c68)<=(t0.c68)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((((x'')OR(t0.c68)))AND(t0.c68))) NOT BETWEEN (x'14a0') AND (((t0.c68) NOTNULL)))) ORDER BY (((t0.c68))<((CAST(t0.c68 AS NUMERIC)))), (((((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)))) NOT BETWEEN (((('TB'))>=((t0.c68)))) AND (((t0.c68)<=(t0.c68)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')OR(t0.c68)))AND(t0.c68))) NOT BETWEEN (x'14a0') AND (((t0.c68) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68))<((CAST(t0.c68 AS NUMERIC)))), (((((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)))) NOT BETWEEN (((('TB'))>=((t0.c68)))) AND (((t0.c68)<=(t0.c68)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((((x'')OR(t0.c68)))AND(t0.c68))) NOT BETWEEN (x'14a0') AND (((t0.c68) NOTNULL)))) ORDER BY (((t0.c68))<((CAST(t0.c68 AS NUMERIC)))), (((((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68, t0.c68, t0.c68)))) NOT BETWEEN (((('TB'))>=((t0.c68)))) AND (((t0.c68)<=(t0.c68)))) DESC;
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN vt0.c0 WHEN ((vt0.c1) BETWEEN ('-245687107') AND (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((((vt0.c1)AND(v0.c0)))AND(vt0.c0)) THEN v0.c0 END) ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN 'ᶱo2b疆T' WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 END IN ((((vt0.c0))<=((v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN vt0.c0 WHEN ((vt0.c1) BETWEEN ('-245687107') AND (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((((vt0.c1)AND(v0.c0)))AND(vt0.c0)) THEN v0.c0 END) IS TRUE)  as count FROM vt0, v0 ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN 'ᶱo2b疆T' WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 END IN ((((vt0.c0))<=((v0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN vt0.c0 WHEN ((vt0.c1) BETWEEN ('-245687107') AND (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((((vt0.c1)AND(v0.c0)))AND(vt0.c0)) THEN v0.c0 END) ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN 'ᶱo2b疆T' WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 END IN ((((vt0.c0))<=((v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN vt0.c0 WHEN ((vt0.c1) BETWEEN ('-245687107') AND (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END WHEN ((((vt0.c1)AND(v0.c0)))AND(vt0.c0)) THEN v0.c0 END) IS TRUE)  as count FROM vt0, v0 ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN 'ᶱo2b疆T' WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 END IN ((((vt0.c0))<=((v0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON CAST(t0.c68 COLLATE RTRIM AS REAL) RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c0)IS(t0.c68)) THEN ((vt0.c1)>(vt0.c1)) ELSE ((vt0.c0) BETWEEN (v0.c0) AND (t0.c68)) END WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY PRINTF((((vt0.c1, vt0.c1, t0.c68, vt0.c0, v0.c0))>=((v0.c0, vt0.c1, vt0.c1, v0.c0, v0.c0))), SQLITE_VERSION(), CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CAST(t0.c68 COLLATE RTRIM AS REAL) RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c0)IS(t0.c68)) THEN ((vt0.c1)>(vt0.c1)) ELSE ((vt0.c0) BETWEEN (v0.c0) AND (t0.c68)) END ORDER BY PRINTF((((vt0.c1, vt0.c1, t0.c68, vt0.c0, v0.c0))>=((v0.c0, vt0.c1, vt0.c1, v0.c0, v0.c0))), SQLITE_VERSION(), CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON CAST(t0.c68 COLLATE RTRIM AS REAL) RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c0)IS(t0.c68)) THEN ((vt0.c1)>(vt0.c1)) ELSE ((vt0.c0) BETWEEN (v0.c0) AND (t0.c68)) END WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY PRINTF((((vt0.c1, vt0.c1, t0.c68, vt0.c0, v0.c0))>=((v0.c0, vt0.c1, vt0.c1, v0.c0, v0.c0))), SQLITE_VERSION(), CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CAST(t0.c68 COLLATE RTRIM AS REAL) RIGHT OUTER JOIN vt0 ON CASE WHEN ((v0.c0)IS(t0.c68)) THEN ((vt0.c1)>(vt0.c1)) ELSE ((vt0.c0) BETWEEN (v0.c0) AND (t0.c68)) END ORDER BY PRINTF((((vt0.c1, vt0.c1, t0.c68, vt0.c0, v0.c0))>=((v0.c0, vt0.c1, vt0.c1, v0.c0, v0.c0))), SQLITE_VERSION(), CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c68);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN CASE x''  WHEN t0.c68 THEN vt0.c1 ELSE t0.c68 END THEN (vt0.c1 IN ()) WHEN t0.c68 COLLATE BINARY THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c0)) WHEN t0.c68 COLLATE BINARY THEN NULL WHEN ((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (('1737412492') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c1 AS TEXT) ELSE IFNULL(vt0.c1, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE x''  WHEN t0.c68 THEN vt0.c1 ELSE t0.c68 END THEN (vt0.c1 IN ()) WHEN t0.c68 COLLATE BINARY THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c0)) WHEN t0.c68 COLLATE BINARY THEN NULL WHEN ((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (('1737412492') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c1 AS TEXT) ELSE IFNULL(vt0.c1, vt0.c0) END) IS TRUE)  as count FROM t0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN CASE x''  WHEN t0.c68 THEN vt0.c1 ELSE t0.c68 END THEN (vt0.c1 IN ()) WHEN t0.c68 COLLATE BINARY THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c0)) WHEN t0.c68 COLLATE BINARY THEN NULL WHEN ((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (('1737412492') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c1 AS TEXT) ELSE IFNULL(vt0.c1, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE x''  WHEN t0.c68 THEN vt0.c1 ELSE t0.c68 END THEN (vt0.c1 IN ()) WHEN t0.c68 COLLATE BINARY THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c0)) WHEN t0.c68 COLLATE BINARY THEN NULL WHEN ((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (('1737412492') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c1 AS TEXT) ELSE IFNULL(vt0.c1, vt0.c0) END) IS TRUE)  as count FROM t0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN CASE x''  WHEN t0.c68 THEN vt0.c1 ELSE t0.c68 END THEN (vt0.c1 IN ()) WHEN t0.c68 COLLATE BINARY THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c0)) WHEN t0.c68 COLLATE BINARY THEN NULL WHEN ((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (('1737412492') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CAST(vt0.c1 AS TEXT) ELSE IFNULL(vt0.c1, vt0.c0) END);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i55 WHERE ((((((NOT (v0.c0)))AND((((v0.c0))<>((v0.c0))))))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c0)))AND((((v0.c0))<>((v0.c0))))))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 INDEXED BY i55);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i55 WHERE ((((((NOT (v0.c0)))AND((((v0.c0))<>((v0.c0))))))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c0)))AND((((v0.c0))<>((v0.c0))))))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 INDEXED BY i55);
SELECT ALL * FROM t0 WHERE (((((NULL)GLOB(t0.c68))) IS FALSE)) ORDER BY CAST(t0.c68 AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)GLOB(t0.c68))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c68 AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((NULL)GLOB(t0.c68))) IS FALSE)) ORDER BY CAST(t0.c68 AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)GLOB(t0.c68))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c68 AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((NULL)GLOB(t0.c68))) IS FALSE)) ORDER BY CAST(t0.c68 AS INTEGER) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((((x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((((x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((((x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((((x'', v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((v0.c0 IN ()));
SELECT COUNT(*) FROM vt0, v0 WHERE (0.34905650696278756) ORDER BY (+ (((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((0.34905650696278756) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (((v0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0, v0 WHERE (0.34905650696278756) ORDER BY (+ (((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((0.34905650696278756) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (((v0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((t0.c68)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((((t0.c68)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (176863033);
SELECT SUM(count) FROM (SELECT ((176863033) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (176863033);
SELECT SUM(count) FROM (SELECT ((176863033) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) WHERE ((((((((((((((t0.c68)OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c68)))OR(v0.c0)))AND(t0.c68)) IN ((NOT (vt0.c1)), ((v0.c0) NOT NULL)))) ORDER BY CASE (+ (v0.c0))  WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((t0.c68)OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c68)))OR(v0.c0)))AND(t0.c68)) IN ((NOT (vt0.c1)), ((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) ORDER BY CASE (+ (v0.c0))  WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) WHERE ((((((((((((((t0.c68)OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c68)))OR(v0.c0)))AND(t0.c68)) IN ((NOT (vt0.c1)), ((v0.c0) NOT NULL)))) ORDER BY CASE (+ (v0.c0))  WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((t0.c68)OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c68)))OR(v0.c0)))AND(t0.c68)) IN ((NOT (vt0.c1)), ((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) ORDER BY CASE (+ (v0.c0))  WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON TYPEOF(DISTINCT ((vt0.c0) NOTNULL)) WHERE ((((((((((((((t0.c68)OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)))AND(t0.c68)))OR(v0.c0)))AND(t0.c68)) IN ((NOT (vt0.c1)), ((v0.c0) NOT NULL)))) ORDER BY CASE (+ (v0.c0))  WHEN (vt0.c1 IN (vt0.c1, vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON CASE WHEN highlight(v0.c0, vt0.c0, v0.c0, v0.c0) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))) END WHERE (((((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>(((vt0.c1)/(v0.c0))))) ORDER BY LIKELY(vt0.c0);
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>(((vt0.c1)/(v0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN highlight(v0.c0, vt0.c0, v0.c0, v0.c0) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))) END ORDER BY LIKELY(vt0.c0));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON CASE WHEN highlight(v0.c0, vt0.c0, v0.c0, v0.c0) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))) END WHERE (((((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>(((vt0.c1)/(v0.c0))))) ORDER BY LIKELY(vt0.c0);
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>(((vt0.c1)/(v0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN highlight(v0.c0, vt0.c0, v0.c0, v0.c0) THEN CAST(vt0.c0 AS REAL) ELSE (((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0))) END ORDER BY LIKELY(vt0.c0));
SELECT * FROM v0, t0 INNER JOIN vt0 ON (((x'')) NOT BETWEEN ((PRINTF(t0.c68))) AND ((CASE WHEN vt0.c0 THEN t0.c68 ELSE v0.c0 END))) WHERE ((((((t0.c68, x'', t0.c68))>=((v0.c0, t0.c68, v0.c0))))!=((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68, x'', t0.c68))>=((v0.c0, t0.c68, v0.c0))))<>((t0.c68 IN ())))) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON (((x'')) NOT BETWEEN ((PRINTF(t0.c68))) AND ((CASE WHEN vt0.c0 THEN t0.c68 ELSE v0.c0 END))));
SELECT * FROM v0, t0 INNER JOIN vt0 ON (((x'')) NOT BETWEEN ((PRINTF(t0.c68))) AND ((CASE WHEN vt0.c0 THEN t0.c68 ELSE v0.c0 END))) WHERE ((((((t0.c68, x'', t0.c68))>=((v0.c0, t0.c68, v0.c0))))!=((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68, x'', t0.c68))>=((v0.c0, t0.c68, v0.c0))))<>((t0.c68 IN ())))) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON (((x'')) NOT BETWEEN ((PRINTF(t0.c68))) AND ((CASE WHEN vt0.c0 THEN t0.c68 ELSE v0.c0 END))));
SELECT * FROM v0 WHERE (rtreenode(0.5427015249493814, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY CASE WHEN v0.c0 THEN ((v0.c0)!=(NULL)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)-('H')) WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN v0.c0 ELSE (~ (v0.c0)) END DESC, v0.c0;
SELECT SUM(count) FROM (SELECT ((rtreenode(0.5427015249493814, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN ((v0.c0)<>(NULL)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)-('H')) WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN v0.c0 ELSE (~ (v0.c0)) END DESC, v0.c0);
SELECT * FROM v0 WHERE (rtreenode(0.5427015249493814, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY CASE WHEN v0.c0 THEN ((v0.c0)!=(NULL)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)-('H')) WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN v0.c0 ELSE (~ (v0.c0)) END DESC, v0.c0;
SELECT SUM(count) FROM (SELECT ((rtreenode(0.5427015249493814, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN ((v0.c0)<>(NULL)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN ((v0.c0)-('H')) WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN v0.c0 ELSE (~ (v0.c0)) END DESC, v0.c0);
SELECT COUNT(*) FROM v0 WHERE (MIN(CAST(v0.c0 AS REAL), (NOT (v0.c0)))) ORDER BY (+ (CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((MIN(CAST(v0.c0 AS REAL), (NOT (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (+ (CAST(v0.c0 AS TEXT))));
SELECT COUNT(*) FROM v0 WHERE (MIN(CAST(v0.c0 AS REAL), (NOT (v0.c0)))) ORDER BY (+ (CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((MIN(CAST(v0.c0 AS REAL), (NOT (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (+ (CAST(v0.c0 AS TEXT))));
SELECT ALL * FROM v0 INNER JOIN t0 ON load_extension(((((v0.c0)AND(t0.c68)))AND(v0.c0)), v0.c0 COLLATE NOCASE) WHERE (((((((((((t0.c68) NOT NULL))AND(CASE WHEN 'now' THEN t0.c68 ELSE t0.c68 END)))AND((((v0.c0, v0.c0, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))))))OR(NULL)))AND(x'' COLLATE RTRIM))) ORDER BY v0.c0  NULLS FIRST, 0X2d999179 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c68) NOT NULL))AND(CASE WHEN 'now' THEN t0.c68 ELSE t0.c68 END)))AND((((v0.c0, v0.c0, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))))))OR(NULL)))AND(x'' COLLATE RTRIM))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON load_extension(((((v0.c0)AND(t0.c68)))AND(v0.c0)), v0.c0 COLLATE NOCASE) ORDER BY v0.c0  NULLS FIRST, 0x2d999179 ASC);
SELECT ALL * FROM v0 INNER JOIN t0 ON load_extension(((((v0.c0)AND(t0.c68)))AND(v0.c0)), v0.c0 COLLATE NOCASE) WHERE (((((((((((t0.c68) NOT NULL))AND(CASE WHEN 'now' THEN t0.c68 ELSE t0.c68 END)))AND((((v0.c0, v0.c0, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))))))OR(NULL)))AND(x'' COLLATE RTRIM))) ORDER BY v0.c0  NULLS FIRST, 0X2d999179 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c68) NOT NULL))AND(CASE WHEN 'now' THEN t0.c68 ELSE t0.c68 END)))AND((((v0.c0, v0.c0, t0.c68)) BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68))))))OR(NULL)))AND(x'' COLLATE RTRIM))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON load_extension(((((v0.c0)AND(t0.c68)))AND(v0.c0)), v0.c0 COLLATE NOCASE) ORDER BY v0.c0  NULLS FIRST, 0x2d999179 ASC);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((CAST(v0.c0 AS BLOB)) NOT BETWEEN (t0.c68) AND (((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) NOT BETWEEN (t0.c68) AND (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((CAST(v0.c0 AS BLOB)) NOT BETWEEN (t0.c68) AND (((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) NOT BETWEEN (t0.c68) AND (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT * FROM v0, vt0, t0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c1)) BETWEEN ((CAST(t0.c68 AS TEXT))) AND ((vt0.c1 COLLATE RTRIM)))  NULLS FIRST, ((((v0.c0)>=(t0.c68))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((vt0.c1)) BETWEEN ((CAST(t0.c68 AS TEXT))) AND ((vt0.c1 COLLATE RTRIM)))  NULLS FIRST, ((((v0.c0)>=(t0.c68))) ISNULL) DESC  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c1)) BETWEEN ((CAST(t0.c68 AS TEXT))) AND ((vt0.c1 COLLATE RTRIM)))  NULLS FIRST, ((((v0.c0)>=(t0.c68))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((vt0.c1)) BETWEEN ((CAST(t0.c68 AS TEXT))) AND ((vt0.c1 COLLATE RTRIM)))  NULLS FIRST, ((((v0.c0)>=(t0.c68))) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CASE WHEN (x'e585' IN (t0.c68, v0.c0)) THEN ((v0.c0)||(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (x'e585' IN (t0.c68, v0.c0)) THEN ((v0.c0)||(t0.c68)) END) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CASE WHEN (x'e585' IN (t0.c68, v0.c0)) THEN ((v0.c0)||(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (x'e585' IN (t0.c68, v0.c0)) THEN ((v0.c0)||(t0.c68)) END) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT * FROM vt0, t0 INDEXED BY i55 WHERE (((((NULL)>(t0.c68)))*(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END))) ORDER BY (t0.c68 IN (((t0.c68)IS(t0.c68))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)>(t0.c68)))*(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i55 ORDER BY (t0.c68 IN (((t0.c68)IS(t0.c68))))  NULLS LAST);
SELECT * FROM vt0, t0 INDEXED BY i55 WHERE (((((NULL)>(t0.c68)))*(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END))) ORDER BY (t0.c68 IN (((t0.c68)IS(t0.c68))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)>(t0.c68)))*(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i55 ORDER BY (t0.c68 IN (((t0.c68)IS(t0.c68))))  NULLS LAST);
SELECT * FROM vt0, t0 INDEXED BY i55 WHERE (((((NULL)>(t0.c68)))*(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END))) ORDER BY (t0.c68 IN (((t0.c68)IS(t0.c68))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) INNER JOIN v0 ON CAST(CAST(t0.c68 AS TEXT) AS TEXT) WHERE (CASE WHEN ((vt0.c1) NOTNULL) THEN (((vt0.c1)) NOT BETWEEN ((t0.c68)) AND ((v0.c0))) END) ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOTNULL) THEN (((vt0.c1)) NOT BETWEEN ((t0.c68)) AND ((v0.c0))) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) INNER JOIN v0 ON CAST(CAST(t0.c68 AS TEXT) AS TEXT) ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) INNER JOIN v0 ON CAST(CAST(t0.c68 AS TEXT) AS TEXT) WHERE (CASE WHEN ((vt0.c1) NOTNULL) THEN (((vt0.c1)) NOT BETWEEN ((t0.c68)) AND ((v0.c0))) END) ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOTNULL) THEN (((vt0.c1)) NOT BETWEEN ((t0.c68)) AND ((v0.c0))) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) INNER JOIN v0 ON CAST(CAST(t0.c68 AS TEXT) AS TEXT) ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (NULL);
SELECT ALL * FROM vt0, v0, t0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE BINARY THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((((vt0.c0) NOTNULL), CAST(vt0.c1 AS BLOB), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))<>(((+ (vt0.c0)), ((((vt0.c1)OR(v0.c0)))AND(vt0.c0)), ((v0.c0)AND(vt0.c1)))))) ORDER BY ((((0x3612240a) BETWEEN (vt0.c0) AND (v0.c0)))<=((NOT (t0.c68))))  NULLS FIRST, (((v0.c0) IS FALSE) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), ((((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(t0.c68)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOTNULL), CAST(vt0.c1 AS BLOB), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))!=(((+ (vt0.c0)), ((((vt0.c1)OR(v0.c0)))AND(vt0.c0)), ((v0.c0)AND(vt0.c1)))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((0X3612240a) BETWEEN (vt0.c0) AND (v0.c0)))<=((NOT (t0.c68))))  NULLS FIRST, (((v0.c0) IS FALSE) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), ((((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(t0.c68)))AND(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((((vt0.c0) NOTNULL), CAST(vt0.c1 AS BLOB), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))<>(((+ (vt0.c0)), ((((vt0.c1)OR(v0.c0)))AND(vt0.c0)), ((v0.c0)AND(vt0.c1)))))) ORDER BY ((((0x3612240a) BETWEEN (vt0.c0) AND (v0.c0)))<=((NOT (t0.c68))))  NULLS FIRST, (((v0.c0) IS FALSE) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), ((((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(t0.c68)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOTNULL), CAST(vt0.c1 AS BLOB), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))!=(((+ (vt0.c0)), ((((vt0.c1)OR(v0.c0)))AND(vt0.c0)), ((v0.c0)AND(vt0.c1)))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((0X3612240a) BETWEEN (vt0.c0) AND (v0.c0)))<=((NOT (t0.c68))))  NULLS FIRST, (((v0.c0) IS FALSE) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), ((((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(t0.c68)))AND(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE ((((t0.c68 IN (v0.c0)))>(((v0.c0)==(t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((t0.c68 IN (v0.c0)))>(((v0.c0)==(t0.c68))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((((t0.c68 IN (v0.c0)))>(((v0.c0)==(t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((t0.c68 IN (v0.c0)))>(((v0.c0)==(t0.c68))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((((t0.c68)>=(vt0.c1))))<>((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(vt0.c0)))AND(t0.c68)))))) ORDER BY (NULL IN ()), (('1201128430')*(1443055515));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)>=(vt0.c1))))<>((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(vt0.c0)))AND(t0.c68)))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (NULL IN ()), (('1201128430')*(1443055515)));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((((t0.c68)>=(vt0.c1))))<>((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(vt0.c0)))AND(t0.c68)))))) ORDER BY (NULL IN ()), (('1201128430')*(1443055515));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)>=(vt0.c1))))<>((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(vt0.c0)))AND(t0.c68)))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (NULL IN ()), (('1201128430')*(1443055515)));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((((t0.c68)>=(vt0.c1))))<>((((((((((vt0.c1)OR(vt0.c1)))OR(t0.c68)))OR(vt0.c0)))AND(t0.c68)))))) ORDER BY (NULL IN ()), (('1201128430')*(1443055515));
SELECT * FROM t0, vt0, v0 WHERE ('0.9711519120363512');
SELECT SUM(count) FROM (SELECT (('0.9711519120363512') IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE ('0.9711519120363512');
SELECT SUM(count) FROM (SELECT (('0.9711519120363512') IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM vt0, v0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((NULLIF(vt0.c1, v0.c0)) BETWEEN (CASE v0.c0  WHEN 0.68053988634855 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c1 ELSE vt0.c0 END) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NULLIF(vt0.c1, v0.c0)) BETWEEN (CASE v0.c0  WHEN 0.68053988634855 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c1 ELSE vt0.c0 END) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))))) DESC);
SELECT * FROM vt0, v0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((NULLIF(vt0.c1, v0.c0)) BETWEEN (CASE v0.c0  WHEN 0.68053988634855 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c1 ELSE vt0.c0 END) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NULLIF(vt0.c1, v0.c0)) BETWEEN (CASE v0.c0  WHEN 0.68053988634855 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c1 ELSE vt0.c0 END) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))))) DESC);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN v0 WHERE ((((((v0.c0 IN ()))AND(((vt0.c0)LIKE(v0.c0)))))AND((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))AND(((vt0.c0)LIKE(v0.c0)))))AND((+ (vt0.c1))))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN v0 WHERE ((((((v0.c0 IN ()))AND(((vt0.c0)LIKE(v0.c0)))))AND((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))AND(((vt0.c0)LIKE(v0.c0)))))AND((+ (vt0.c1))))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN v0);
SELECT * FROM vt0, t0 NATURAL JOIN v0 WHERE (CASE WHEN (+ (vt0.c1)) THEN ((vt0.c0)>(vt0.c1)) WHEN (NOT (t0.c68)) THEN ((0x7228f6d2) BETWEEN (vt0.c0) AND (v0.c0)) WHEN (('頠nY%f')+(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) WHEN (t0.c68 IN ()) THEN ((vt0.c0) IS TRUE) WHEN -9.4490961E7 COLLATE NOCASE THEN (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt0.c1)) THEN ((vt0.c0)>(vt0.c1)) WHEN (NOT (t0.c68)) THEN ((0x7228f6d2) BETWEEN (vt0.c0) AND (v0.c0)) WHEN (('頠nY%f')+(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) WHEN (t0.c68 IN ()) THEN ((vt0.c0) IS TRUE) WHEN -9.4490961E7 COLLATE NOCASE THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0);
SELECT * FROM vt0, t0 NATURAL JOIN v0 WHERE (CASE WHEN (+ (vt0.c1)) THEN ((vt0.c0)>(vt0.c1)) WHEN (NOT (t0.c68)) THEN ((0x7228f6d2) BETWEEN (vt0.c0) AND (v0.c0)) WHEN (('頠nY%f')+(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) WHEN (t0.c68 IN ()) THEN ((vt0.c0) IS TRUE) WHEN -9.4490961E7 COLLATE NOCASE THEN (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt0.c1)) THEN ((vt0.c0)>(vt0.c1)) WHEN (NOT (t0.c68)) THEN ((0x7228f6d2) BETWEEN (vt0.c0) AND (v0.c0)) WHEN (('頠nY%f')+(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) WHEN (t0.c68 IN ()) THEN ((vt0.c0) IS TRUE) WHEN -9.4490961E7 COLLATE NOCASE THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0);
SELECT ALL * FROM v0, vt0, t0 WHERE (UPPER(DISTINCT vt0.c1 COLLATE NOCASE)) ORDER BY ((CAST(vt0.c1 AS INTEGER))>=((((vt0.c1, vt0.c1, NULL))<=((vt0.c1, vt0.c0, vt0.c1))))), ((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR('1655474955')))OR(vt0.c1)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68)))))AND((vt0.c0 IN (t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT vt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, t0 ORDER BY ((CAST(vt0.c1 AS INTEGER))>=((((vt0.c1, vt0.c1, NULL))<=((vt0.c1, vt0.c0, vt0.c1))))), ((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR('1655474955')))OR(vt0.c1)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68)))))AND((vt0.c0 IN (t0.c68))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0 WHERE (UPPER(DISTINCT vt0.c1 COLLATE NOCASE)) ORDER BY ((CAST(vt0.c1 AS INTEGER))>=((((vt0.c1, vt0.c1, NULL))<=((vt0.c1, vt0.c0, vt0.c1))))), ((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR('1655474955')))OR(vt0.c1)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68)))))AND((vt0.c0 IN (t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT vt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, t0 ORDER BY ((CAST(vt0.c1 AS INTEGER))>=((((vt0.c1, vt0.c1, NULL))<=((vt0.c1, vt0.c0, vt0.c1))))), ((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR('1655474955')))OR(vt0.c1)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68)))))AND((vt0.c0 IN (t0.c68))))  NULLS FIRST);
SELECT * FROM vt0, t0, v0 WHERE (((((vt0.c1))<>((vt0.c0))) IN ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1))<>((vt0.c0))) IN ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (((((vt0.c1))<>((vt0.c0))) IN ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1))<>((vt0.c0))) IN ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (((((vt0.c1))<>((vt0.c0))) IN ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((NULL) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 WHEN NULL THEN t0.c68 ELSE t0.c68 END) AND (((v0.c0)LIKE(v0.c0))))) ORDER BY ((t0.c68 COLLATE RTRIM)|(0.22429547550600193))  NULLS LAST, 0.1397735270632683 DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 WHEN NULL THEN t0.c68 ELSE t0.c68 END) AND (((v0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c68 COLLATE RTRIM)|(0.22429547550600193))  NULLS LAST, 0.1397735270632683 DESC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((NULL) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 WHEN NULL THEN t0.c68 ELSE t0.c68 END) AND (((v0.c0)LIKE(v0.c0))))) ORDER BY ((t0.c68 COLLATE RTRIM)|(0.22429547550600193))  NULLS LAST, 0.1397735270632683 DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 WHEN NULL THEN t0.c68 ELSE t0.c68 END) AND (((v0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c68 COLLATE RTRIM)|(0.22429547550600193))  NULLS LAST, 0.1397735270632683 DESC);
SELECT * FROM t0, vt0 WHERE (((NULL) NOT BETWEEN (TRIM(t0.c68, t0.c68)) AND (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (TRIM(t0.c68, t0.c68)) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((NULL) NOT BETWEEN (TRIM(t0.c68, t0.c68)) AND (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (TRIM(t0.c68, t0.c68)) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((NULL) NOT BETWEEN (TRIM(t0.c68, t0.c68)) AND (((vt0.c0)&(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT vt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT vt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT vt0.c1) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt0 WHERE ('-245687107');
SELECT SUM(count) FROM (SELECT (('-245687107') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ('-245687107');
SELECT SUM(count) FROM (SELECT (('-245687107') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ('-245687107');
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (CAST(((v0.c0) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (CAST(((v0.c0) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM vt0, t0 NATURAL JOIN v0 WHERE (CAST(((v0.c0)||(vt0.c0)) AS TEXT)) ORDER BY RTRIM(((v0.c0)>>(0xffffffffbab74146))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)||(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0 NOT INDEXED NATURAL JOIN v0 ORDER BY RTRIM(((v0.c0)>>(0xffffffffbab74146))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 NATURAL JOIN v0 WHERE (CAST(((v0.c0)||(vt0.c0)) AS TEXT)) ORDER BY RTRIM(((v0.c0)>>(0xffffffffbab74146))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)||(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0 NOT INDEXED NATURAL JOIN v0 ORDER BY RTRIM(((v0.c0)>>(0xffffffffbab74146))) DESC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((+ (0.30070610660287445)))-(t0.c68 COLLATE NOCASE)) INNER JOIN v0 ON x'' WHERE ((- (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((+ (0.30070610660287445)))-(t0.c68 COLLATE NOCASE)) INNER JOIN v0 ON x'');
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((+ (0.30070610660287445)))-(t0.c68 COLLATE NOCASE)) INNER JOIN v0 ON x'' WHERE ((- (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((+ (0.30070610660287445)))-(t0.c68 COLLATE NOCASE)) INNER JOIN v0 ON x'');
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((+ (0.30070610660287445)))-(t0.c68 COLLATE NOCASE)) INNER JOIN v0 ON x'' WHERE ((- (CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)&(vt0.c1)))) AND ((((((v0.c0)AND(vt0.c1)))OR(vt0.c0))))) CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)%((~ (v0.c0)))) WHERE ('5998576') ORDER BY (((((v0.c0))<=((v0.c0))))||(((vt0.c1) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('5998576') IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)&(vt0.c1)))) AND ((((((v0.c0)AND(vt0.c1)))OR(vt0.c0))))) CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)%((~ (v0.c0)))) ORDER BY (((((v0.c0))<=((v0.c0))))||(((vt0.c1) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)&(vt0.c1)))) AND ((((((v0.c0)AND(vt0.c1)))OR(vt0.c0))))) CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)%((~ (v0.c0)))) WHERE ('5998576') ORDER BY (((((v0.c0))<=((v0.c0))))||(((vt0.c1) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('5998576') IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)&(vt0.c1)))) AND ((((((v0.c0)AND(vt0.c1)))OR(vt0.c0))))) CROSS JOIN v0 ON ((v0.c0 COLLATE RTRIM)%((~ (v0.c0)))) ORDER BY (((((v0.c0))<=((v0.c0))))||(((vt0.c1) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((CAST(vt0.c0 AS REAL))AND(0.2336052665699121)))OR(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))AND(0.2336052665699121)))OR(vt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((CAST(vt0.c0 AS REAL))AND(0.2336052665699121)))OR(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))AND(0.2336052665699121)))OR(vt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((CAST(vt0.c0 AS REAL))AND(0.2336052665699121)))OR(vt0.c1))  NULLS FIRST;
SELECT * FROM t0, vt0, v0 WHERE (((CAST(vt0.c1 AS NUMERIC))AND('-962461787'))) ORDER BY ((x'') NOTNULL), ((((t0.c68)GLOB(t0.c68)))||((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))AND('-962461787'))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0 ORDER BY ((x'') NOTNULL), ((((t0.c68)GLOB(t0.c68)))||((NOT (vt0.c0))))  NULLS FIRST);
SELECT * FROM t0, vt0, v0 WHERE (((CAST(vt0.c1 AS NUMERIC))AND('-962461787'))) ORDER BY ((x'') NOTNULL), ((((t0.c68)GLOB(t0.c68)))||((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))AND('-962461787'))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0 ORDER BY ((x'') NOTNULL), ((((t0.c68)GLOB(t0.c68)))||((NOT (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c68, x'', v0.c0, v0.c0, t0.c68)) NOT BETWEEN ((((t0.c68)IS NOT(t0.c68)), CAST(v0.c0 AS NUMERIC), (t0.c68 IN (t0.c68)), ((t0.c68) IS TRUE), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) AND ((((((((((x'')OR(t0.c68)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)), (t0.c68 IN ()), ((('E9'))<((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 WHEN '' THEN v0.c0 END, (- (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c68, x'', v0.c0, v0.c0, t0.c68)) NOT BETWEEN ((((t0.c68)IS NOT(t0.c68)), CAST(v0.c0 AS NUMERIC), (t0.c68 IN (t0.c68)), ((t0.c68) IS TRUE), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) AND ((((((((((x'')OR(t0.c68)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)), (t0.c68 IN ()), ((('E9'))<((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 WHEN '' THEN v0.c0 END, (- (v0.c0)))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c68, x'', v0.c0, v0.c0, t0.c68)) NOT BETWEEN ((((t0.c68)IS NOT(t0.c68)), CAST(v0.c0 AS NUMERIC), (t0.c68 IN (t0.c68)), ((t0.c68) IS TRUE), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) AND ((((((((((x'')OR(t0.c68)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)), (t0.c68 IN ()), ((('E9'))<((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 WHEN '' THEN v0.c0 END, (- (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c68, x'', v0.c0, v0.c0, t0.c68)) NOT BETWEEN ((((t0.c68)IS NOT(t0.c68)), CAST(v0.c0 AS NUMERIC), (t0.c68 IN (t0.c68)), ((t0.c68) IS TRUE), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))) AND ((((((((((x'')OR(t0.c68)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)), (t0.c68 IN ()), ((('E9'))<((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c68 THEN t0.c68 WHEN '' THEN v0.c0 END, (- (v0.c0)))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM vt0, t0 WHERE (MIN(t0.c68, vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((MIN(t0.c68, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (MIN(t0.c68, vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((MIN(t0.c68, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (MIN(t0.c68, vt0.c0) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c1)LIKE(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, ((((((((NULL)OR((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))))AND(vt0.c0 COLLATE NOCASE)))OR('')))OR(CAST(vt0.c1 AS BLOB))), ((((((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(((vt0.c0)LIKE(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, ((((((((NULL)OR((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))))AND(vt0.c0 COLLATE NOCASE)))OR('')))OR(CAST(vt0.c1 AS BLOB))), ((((((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(((vt0.c0)LIKE(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c1)LIKE(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, ((((((((NULL)OR((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))))AND(vt0.c0 COLLATE NOCASE)))OR('')))OR(CAST(vt0.c1 AS BLOB))), ((((((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(((vt0.c0)LIKE(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, ((((((((NULL)OR((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))))AND(vt0.c0 COLLATE NOCASE)))OR('')))OR(CAST(vt0.c1 AS BLOB))), ((((((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(((vt0.c0)LIKE(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c1)LIKE(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, ((((((((NULL)OR((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))))AND(vt0.c0 COLLATE NOCASE)))OR('')))OR(CAST(vt0.c1 AS BLOB))), ((((((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(((vt0.c0)LIKE(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON (('-941274088')|((t0.c68 IN ()))) WHERE (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(((v0.c0)>=(t0.c68)))))AND(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(((v0.c0)>=(t0.c68)))))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (('-941274088')|((t0.c68 IN ()))));
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON (('-941274088')|((t0.c68 IN ()))) WHERE (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(((v0.c0)>=(t0.c68)))))AND(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))AND(((v0.c0)>=(t0.c68)))))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (('-941274088')|((t0.c68 IN ()))));
SELECT * FROM vt0 WHERE (((CAST(NULL AS NUMERIC))|((vt0.c1 IN ())))) ORDER BY TIME(CAST(vt0.c0 AS TEXT), (~ (vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS NUMERIC))|((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY TIME(CAST(vt0.c0 AS TEXT), (~ (vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ASC);
SELECT * FROM vt0 WHERE (((CAST(NULL AS NUMERIC))|((vt0.c1 IN ())))) ORDER BY TIME(CAST(vt0.c0 AS TEXT), (~ (vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS NUMERIC))|((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY TIME(CAST(vt0.c0 AS TEXT), (~ (vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ASC);
SELECT * FROM vt0 WHERE (((CAST(NULL AS NUMERIC))|((vt0.c1 IN ())))) ORDER BY TIME(CAST(vt0.c0 AS TEXT), (~ (vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ASC;
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i55, v0, t0 WHERE ((((((v0.c0 IN ()))AND(((vt0.c1)AND(v0.c0)))))AND((v0.c0 IN (vt0.c0, t0.c68))))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))AND(((vt0.c1)AND(v0.c0)))))AND((v0.c0 IN (vt0.c0, t0.c68))))) IS TRUE)  as count FROM vt0 INDEXED BY i55, v0, t0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i55, v0, t0 WHERE ((((((v0.c0 IN ()))AND(((vt0.c1)AND(v0.c0)))))AND((v0.c0 IN (vt0.c0, t0.c68))))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))AND(((vt0.c1)AND(v0.c0)))))AND((v0.c0 IN (vt0.c0, t0.c68))))) IS TRUE)  as count FROM vt0 INDEXED BY i55, v0, t0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE ((((((vt0.c1)OR(t0.c68))))<((CASE vt0.c1  WHEN vt0.c0 THEN x'828d' ELSE t0.c68 END))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(t0.c68))))<((CASE vt0.c1  WHEN vt0.c0 THEN x'828d' ELSE t0.c68 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE ((((((vt0.c1)OR(t0.c68))))<((CASE vt0.c1  WHEN vt0.c0 THEN x'828d' ELSE t0.c68 END))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(t0.c68))))<((CASE vt0.c1  WHEN vt0.c0 THEN x'828d' ELSE t0.c68 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE ((((((vt0.c1)OR(t0.c68))))<((CASE vt0.c1  WHEN vt0.c0 THEN x'828d' ELSE t0.c68 END))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(t0.c68)))OR('㼜/w')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(t0.c68)))OR('㼜/w')) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(t0.c68)))OR('㼜/w')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(t0.c68)))OR('㼜/w')) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(t0.c68)))OR('㼜/w')) IN ()));
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT CASE t0.c68  WHEN t0.c68 THEN NULL ELSE t0.c68 END)) ORDER BY (('L	') BETWEEN (t0.c68) AND (CAST(t0.c68 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CASE t0.c68  WHEN t0.c68 THEN NULL ELSE t0.c68 END)) IS TRUE)  as count FROM t0 ORDER BY (('L	') BETWEEN (t0.c68) AND (CAST(t0.c68 AS REAL))) ASC);
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT CASE t0.c68  WHEN t0.c68 THEN NULL ELSE t0.c68 END)) ORDER BY (('L	') BETWEEN (t0.c68) AND (CAST(t0.c68 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CASE t0.c68  WHEN t0.c68 THEN NULL ELSE t0.c68 END)) IS TRUE)  as count FROM t0 ORDER BY (('L	') BETWEEN (t0.c68) AND (CAST(t0.c68 AS REAL))) ASC);
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT CASE t0.c68  WHEN t0.c68 THEN NULL ELSE t0.c68 END)) ORDER BY (('L	') BETWEEN (t0.c68) AND (CAST(t0.c68 AS REAL))) ASC;
SELECT * FROM t0 WHERE ((+ (((t0.c68)*(t0.c68)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c68)*(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((t0.c68)*(t0.c68)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c68)*(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((t0.c68)*(t0.c68)))));
SELECT ALL * FROM t0, v0, vt0 WHERE (NULL) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY x'');
SELECT ALL * FROM t0, v0, vt0 WHERE (NULL) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY x'');
SELECT ALL * FROM t0, v0, vt0 WHERE (NULL) ORDER BY x'';
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(v0.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(v0.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0 INNER JOIN vt0 ON (~ (((x'debb') IS FALSE))) INNER JOIN t0 ON (('-1713960001' COLLATE RTRIM)>(CAST(v0.c0 AS TEXT))) WHERE ('1969346457') ORDER BY (-1888165100 IN ());
SELECT SUM(count) FROM (SELECT (('1969346457') IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (((x'debb') IS FALSE))) INNER JOIN t0 ON (('-1713960001' COLLATE RTRIM)>(CAST(v0.c0 AS TEXT))) ORDER BY (-1888165100 IN ()));
SELECT * FROM v0 INNER JOIN vt0 ON (~ (((x'debb') IS FALSE))) INNER JOIN t0 ON (('-1713960001' COLLATE RTRIM)>(CAST(v0.c0 AS TEXT))) WHERE ('1969346457') ORDER BY (-1888165100 IN ());
SELECT SUM(count) FROM (SELECT (('1969346457') IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (((x'debb') IS FALSE))) INNER JOIN t0 ON (('-1713960001' COLLATE RTRIM)>(CAST(v0.c0 AS TEXT))) ORDER BY (-1888165100 IN ()));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((LIKELY(v0.c0))GLOB(((x'fe8f8915') IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c0))GLOB(((x'fe8f8915') IS FALSE)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((LIKELY(v0.c0))GLOB(((x'fe8f8915') IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c0))GLOB(((x'fe8f8915') IS FALSE)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM v0, vt0 NOT INDEXED, t0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0 NOT INDEXED, t0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (IFNULL(((0Xffffffffaaacfa76) BETWEEN (vt0.c0) AND (vt0.c1)), TIME(vt0.c0, 'Xr7H-K', vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((0Xffffffffaaacfa76) BETWEEN (vt0.c0) AND (vt0.c1)), TIME(vt0.c0, 'Xr7H-K', vt0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (IFNULL(((0Xffffffffaaacfa76) BETWEEN (vt0.c0) AND (vt0.c1)), TIME(vt0.c0, 'Xr7H-K', vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((0Xffffffffaaacfa76) BETWEEN (vt0.c0) AND (vt0.c1)), TIME(vt0.c0, 'Xr7H-K', vt0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (IFNULL(((0Xffffffffaaacfa76) BETWEEN (vt0.c0) AND (vt0.c1)), TIME(vt0.c0, 'Xr7H-K', vt0.c0)));
SELECT ALL * FROM v0 NOT INDEXED WHERE ((NOT (((v0.c0)=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((NOT (((v0.c0)=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS NUMERIC))+(((t0.c68) NOT NULL)))) ORDER BY COALESCE(DISTINCT CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, CAST(t0.c68 AS INTEGER), t0.c68 COLLATE NOCASE, ((t0.c68)<>(t0.c68))), (- (((t0.c68) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c68 AS NUMERIC))+(((t0.c68) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY COALESCE(DISTINCT CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, CAST(t0.c68 AS INTEGER), t0.c68 COLLATE NOCASE, ((t0.c68)!=(t0.c68))), (- (((t0.c68) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS NUMERIC))+(((t0.c68) NOT NULL)))) ORDER BY COALESCE(DISTINCT CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, CAST(t0.c68 AS INTEGER), t0.c68 COLLATE NOCASE, ((t0.c68)<>(t0.c68))), (- (((t0.c68) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c68 AS NUMERIC))+(((t0.c68) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY COALESCE(DISTINCT CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, CAST(t0.c68 AS INTEGER), t0.c68 COLLATE NOCASE, ((t0.c68)!=(t0.c68))), (- (((t0.c68) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c68 AS NUMERIC))+(((t0.c68) NOT NULL)))) ORDER BY COALESCE(DISTINCT CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, CAST(t0.c68 AS INTEGER), t0.c68 COLLATE NOCASE, ((t0.c68)<>(t0.c68))), (- (((t0.c68) IS FALSE)));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN (((+ (vt0.c0)), (vt0.c0 IN (vt0.c0)), CAST(vt0.c1 AS BLOB))) AND (((NOT (vt0.c0)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), (('*C诛I')&(vt0.c0)))))) ORDER BY MAX(x'5870', (((vt0.c1))<=((vt0.c1)))), ((CASE 1.93079455E9  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END)|(((NULL) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN (((+ (vt0.c0)), (vt0.c0 IN (vt0.c0)), CAST(vt0.c1 AS BLOB))) AND (((NOT (vt0.c0)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), (('*C诛I')&(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED ORDER BY MAX(x'5870', (((vt0.c1))<=((vt0.c1)))), ((CASE 1.93079455E9  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END)|(((NULL) IS FALSE))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN (((+ (vt0.c0)), (vt0.c0 IN (vt0.c0)), CAST(vt0.c1 AS BLOB))) AND (((NOT (vt0.c0)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), (('*C诛I')&(vt0.c0)))))) ORDER BY MAX(x'5870', (((vt0.c1))<=((vt0.c1)))), ((CASE 1.93079455E9  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END)|(((NULL) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN (((+ (vt0.c0)), (vt0.c0 IN (vt0.c0)), CAST(vt0.c1 AS BLOB))) AND (((NOT (vt0.c0)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), (('*C诛I')&(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED ORDER BY MAX(x'5870', (((vt0.c1))<=((vt0.c1)))), ((CASE 1.93079455E9  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END)|(((NULL) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED FULL OUTER JOIN t0 ON (- ((v0.c0 IN ()))) WHERE (x'') ORDER BY json_quote(TRIM(t0.c68)) DESC  NULLS LAST, (((v0.c0 COLLATE RTRIM))<((CAST(t0.c68 AS TEXT)))) DESC, DATETIME(CAST(t0.c68 AS REAL), vt0.c1, ((t0.c68)OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON (- ((v0.c0 IN ()))) ORDER BY json_quote(TRIM(t0.c68)) DESC  NULLS LAST, (((v0.c0 COLLATE RTRIM))<((CAST(t0.c68 AS TEXT)))) DESC, DATETIME(CAST(t0.c68 AS REAL), vt0.c1, ((t0.c68)OR(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED FULL OUTER JOIN t0 ON (- ((v0.c0 IN ()))) WHERE (x'') ORDER BY json_quote(TRIM(t0.c68)) DESC  NULLS LAST, (((v0.c0 COLLATE RTRIM))<((CAST(t0.c68 AS TEXT)))) DESC, DATETIME(CAST(t0.c68 AS REAL), vt0.c1, ((t0.c68)OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON (- ((v0.c0 IN ()))) ORDER BY json_quote(TRIM(t0.c68)) DESC  NULLS LAST, (((v0.c0 COLLATE RTRIM))<((CAST(t0.c68 AS TEXT)))) DESC, DATETIME(CAST(t0.c68 AS REAL), vt0.c1, ((t0.c68)OR(vt0.c0))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CAST(TRIM(DISTINCT t0.c68) AS TEXT) WHERE (TYPEOF((- (v0.c0)))) ORDER BY CASE ((x'')-(t0.c68))  WHEN ROUND(v0.c0, t0.c68) THEN ((v0.c0) ISNULL) WHEN CASE v0.c0  WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c68)) WHEN (((v0.c0))>((t0.c68))) THEN 0Xffffffffce5edc92 ELSE (~ (t0.c68)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((- (v0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON CAST(TRIM(DISTINCT t0.c68) AS TEXT) ORDER BY CASE ((x'')-(t0.c68))  WHEN ROUND(v0.c0, t0.c68) THEN ((v0.c0) ISNULL) WHEN CASE v0.c0  WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c68)) WHEN (((v0.c0))>((t0.c68))) THEN 0xffffffffce5edc92 ELSE (~ (t0.c68)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CAST(TRIM(DISTINCT t0.c68) AS TEXT) WHERE (TYPEOF((- (v0.c0)))) ORDER BY CASE ((x'')-(t0.c68))  WHEN ROUND(v0.c0, t0.c68) THEN ((v0.c0) ISNULL) WHEN CASE v0.c0  WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c68)) WHEN (((v0.c0))>((t0.c68))) THEN 0Xffffffffce5edc92 ELSE (~ (t0.c68)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((- (v0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON CAST(TRIM(DISTINCT t0.c68) AS TEXT) ORDER BY CASE ((x'')-(t0.c68))  WHEN ROUND(v0.c0, t0.c68) THEN ((v0.c0) ISNULL) WHEN CASE v0.c0  WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c68)) WHEN (((v0.c0))>((t0.c68))) THEN 0xffffffffce5edc92 ELSE (~ (t0.c68)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((- (vt0.c1)))AND((((vt0.c0))>((vt0.c0)))))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0))) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))AND((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0))) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((((- (vt0.c1)))AND((((vt0.c0))>((vt0.c0)))))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0))) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))AND((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0))) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((t0.c68)|(t0.c68)) AS INTEGER)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c68)|(t0.c68)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((t0.c68)|(t0.c68)) AS INTEGER)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c68)|(t0.c68)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((t0.c68)|(t0.c68)) AS INTEGER)) ORDER BY x'' ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (COALESCE(DISTINCT (+ (t0.c68)), t0.c68));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (+ (t0.c68)), t0.c68)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (COALESCE(DISTINCT (+ (t0.c68)), t0.c68));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (+ (t0.c68)), t0.c68)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (COALESCE(DISTINCT (+ (t0.c68)), t0.c68));
SELECT ALL * FROM vt0 WHERE (LENGTH(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LENGTH(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LENGTH(((vt0.c0) NOTNULL)));
SELECT * FROM v0, vt0, t0 WHERE ((json_remove(v0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((json_remove(v0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((json_remove(v0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((json_remove(v0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((json_remove(v0.c0, vt0.c0) IN ()));
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((((v0.c0)) NOT BETWEEN ((t0.c68)) AND ((vt0.c0)))) NOT NULL) WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((((v0.c0)) NOT BETWEEN ((t0.c68)) AND ((vt0.c0)))) NOT NULL));
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((((v0.c0)) NOT BETWEEN ((t0.c68)) AND ((vt0.c0)))) NOT NULL) WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((((v0.c0)) NOT BETWEEN ((t0.c68)) AND ((vt0.c0)))) NOT NULL));
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c1) NOT NULL), ((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c1) NOT NULL), ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c1) NOT NULL), ((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c1) NOT NULL), ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c1) NOT NULL), ((vt0.c0)%(vt0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS INTEGER));
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN (vt0.c0 COLLATE BINARY))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))==(((vt0.c0)<>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt0.c1 END IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))=(((vt0.c0)!=(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN (vt0.c0 COLLATE BINARY))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))==(((vt0.c0)<>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt0.c1 END IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))=(((vt0.c0)!=(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN (vt0.c0 COLLATE BINARY))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))==(((vt0.c0)<>(vt0.c0))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE ((vt0.c0)<=(0.5626320305578818))  WHEN (((t0.c68))>=((t0.c68))) THEN ((vt0.c0)<>(vt0.c0)) ELSE CAST(t0.c68 AS INTEGER) END WHERE (((t0.c68 COLLATE NOCASE) BETWEEN (((t0.c68) NOTNULL)) AND (CASE vt0.c1  WHEN t0.c68 THEN vt0.c0 END))) ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE NOCASE) BETWEEN (((t0.c68) NOTNULL)) AND (CASE vt0.c1  WHEN t0.c68 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE ((vt0.c0)<=(0.5626320305578818))  WHEN (((t0.c68))>=((t0.c68))) THEN ((vt0.c0)!=(vt0.c0)) ELSE CAST(t0.c68 AS INTEGER) END ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE ((vt0.c0)<=(0.5626320305578818))  WHEN (((t0.c68))>=((t0.c68))) THEN ((vt0.c0)<>(vt0.c0)) ELSE CAST(t0.c68 AS INTEGER) END WHERE (((t0.c68 COLLATE NOCASE) BETWEEN (((t0.c68) NOTNULL)) AND (CASE vt0.c1  WHEN t0.c68 THEN vt0.c0 END))) ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE NOCASE) BETWEEN (((t0.c68) NOTNULL)) AND (CASE vt0.c1  WHEN t0.c68 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE ((vt0.c0)<=(0.5626320305578818))  WHEN (((t0.c68))>=((t0.c68))) THEN ((vt0.c0)!=(vt0.c0)) ELSE CAST(t0.c68 AS INTEGER) END ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE ((vt0.c0)<=(0.5626320305578818))  WHEN (((t0.c68))>=((t0.c68))) THEN ((vt0.c0)<>(vt0.c0)) ELSE CAST(t0.c68 AS INTEGER) END WHERE (((t0.c68 COLLATE NOCASE) BETWEEN (((t0.c68) NOTNULL)) AND (CASE vt0.c1  WHEN t0.c68 THEN vt0.c0 END))) ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((('' COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT (((('' COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((('' COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT (((('' COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((('' COLLATE BINARY) IS TRUE));
SELECT * FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM v0, vt0 WHERE (CAST('61918417' AS REAL)) ORDER BY ((((vt0.c1)LIKE(vt0.c0)))<((((vt0.c1)) BETWEEN (('346600975')) AND ((v0.c0))))), CAST(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('61918417' AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1)LIKE(vt0.c0)))<((((vt0.c1)) BETWEEN (('346600975')) AND ((v0.c0))))), CAST(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (CAST('61918417' AS REAL)) ORDER BY ((((vt0.c1)LIKE(vt0.c0)))<((((vt0.c1)) BETWEEN (('346600975')) AND ((v0.c0))))), CAST(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('61918417' AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1)LIKE(vt0.c0)))<((((vt0.c1)) BETWEEN (('346600975')) AND ((v0.c0))))), CAST(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (CASE WHEN -561505901 THEN ((t0.c68) BETWEEN (vt0.c0) AND (v0.c0)) ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -561505901 THEN ((t0.c68) BETWEEN (vt0.c0) AND (v0.c0)) ELSE vt0.c1 END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (CASE WHEN -561505901 THEN ((t0.c68) BETWEEN (vt0.c0) AND (v0.c0)) ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -561505901 THEN ((t0.c68) BETWEEN (vt0.c0) AND (v0.c0)) ELSE vt0.c1 END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0)))OR((vt0.c0 IN (vt0.c1)))))AND(((vt0.c1) NOT NULL)))) ORDER BY CHANGES() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<=(vt0.c0)))OR((vt0.c0 IN (vt0.c1)))))AND(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY CHANGES() ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0)))OR((vt0.c0 IN (vt0.c1)))))AND(((vt0.c1) NOT NULL)))) ORDER BY CHANGES() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<=(vt0.c0)))OR((vt0.c0 IN (vt0.c1)))))AND(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY CHANGES() ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0)))OR((vt0.c0 IN (vt0.c1)))))AND(((vt0.c1) NOT NULL)))) ORDER BY CHANGES() ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c68, t0.c68, t0.c68))!=((t0.c68, t0.c68, t0.c68))))%((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68)))))) ORDER BY IFNULL(t0.c68 COLLATE BINARY, CAST(t0.c68 AS BLOB))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c68, t0.c68, t0.c68))<>((t0.c68, t0.c68, t0.c68))))%((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68)))))) IS TRUE)  as count FROM t0 ORDER BY IFNULL(t0.c68 COLLATE BINARY, CAST(t0.c68 AS BLOB))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c68, t0.c68, t0.c68))!=((t0.c68, t0.c68, t0.c68))))%((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68)))))) ORDER BY IFNULL(t0.c68 COLLATE BINARY, CAST(t0.c68 AS BLOB))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c68, t0.c68, t0.c68))<>((t0.c68, t0.c68, t0.c68))))%((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68)))))) IS TRUE)  as count FROM t0 ORDER BY IFNULL(t0.c68 COLLATE BINARY, CAST(t0.c68 AS BLOB))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c68, t0.c68, t0.c68))!=((t0.c68, t0.c68, t0.c68))))%((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, t0.c68)) AND ((t0.c68, t0.c68, t0.c68)))))) ORDER BY IFNULL(t0.c68 COLLATE BINARY, CAST(t0.c68 AS BLOB))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (vt0.c0) ORDER BY (t0.c68 IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (t0.c68 IN ()));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (vt0.c0) ORDER BY (t0.c68 IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (t0.c68 IN ()));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (vt0.c0) ORDER BY (t0.c68 IN ());
SELECT * FROM t0, vt0 WHERE ((((t0.c68))>=((vt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c68))>=((vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c68))>=((vt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c68))>=((vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c68))>=((vt0.c1))) COLLATE RTRIM);
SELECT * FROM v0, t0, vt0 WHERE ((((+ (NULL))) BETWEEN (PRINTF(vt0.c1, vt0.c1, t0.c68, vt0.c0, vt0.c0)) AND (x'310c'))) ORDER BY ((CASE v0.c0  WHEN vt0.c1 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((v0.c0) IS FALSE)) AND (((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL))) BETWEEN (PRINTF(vt0.c1, vt0.c1, t0.c68, vt0.c0, vt0.c0)) AND (x'310c'))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((CASE v0.c0  WHEN vt0.c1 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((v0.c0) IS FALSE)) AND (((vt0.c0) ISNULL)))  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE ((((+ (NULL))) BETWEEN (PRINTF(vt0.c1, vt0.c1, t0.c68, vt0.c0, vt0.c0)) AND (x'310c'))) ORDER BY ((CASE v0.c0  WHEN vt0.c1 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((v0.c0) IS FALSE)) AND (((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL))) BETWEEN (PRINTF(vt0.c1, vt0.c1, t0.c68, vt0.c0, vt0.c0)) AND (x'310c'))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((CASE v0.c0  WHEN vt0.c1 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((v0.c0) IS FALSE)) AND (((vt0.c0) ISNULL)))  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)IS((NOT (v0.c0))))) ORDER BY ((CAST(v0.c0 AS BLOB))<<((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('-1775924500')))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)IS((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS BLOB))<<((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('-1775924500'))))));
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)IS((NOT (v0.c0))))) ORDER BY ((CAST(v0.c0 AS BLOB))<<((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('-1775924500')))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)IS((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS BLOB))<<((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('-1775924500'))))));
SELECT * FROM vt0, v0 WHERE (v0.c0) ORDER BY ((((vt0.c0) IS TRUE)) ISNULL) DESC, LIKELY(((v0.c0) ISNULL)) DESC, ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c1)IS NOT(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) IS TRUE)) ISNULL) DESC, LIKELY(((v0.c0) ISNULL)) DESC, ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c1)IS NOT(v0.c0)))));
SELECT * FROM vt0, v0 WHERE (v0.c0) ORDER BY ((((vt0.c0) IS TRUE)) ISNULL) DESC, LIKELY(((v0.c0) ISNULL)) DESC, ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c1)IS NOT(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) IS TRUE)) ISNULL) DESC, LIKELY(((v0.c0) ISNULL)) DESC, ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c1)IS NOT(v0.c0)))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((vt0.c0)+(t0.c68))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(t0.c68))) NOT NULL)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((vt0.c0)+(t0.c68))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(t0.c68))) NOT NULL)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((((vt0.c0)+(t0.c68))) NOT NULL));
SELECT ALL * FROM vt0 WHERE (CAST(PRINTF(vt0.c0) AS BLOB)) ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.10320863371031241 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (((vt0.c0)<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(PRINTF(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.10320863371031241 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (((vt0.c0)<(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(PRINTF(vt0.c0) AS BLOB)) ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.10320863371031241 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (((vt0.c0)<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(PRINTF(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.10320863371031241 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (((vt0.c0)<(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(PRINTF(vt0.c0) AS BLOB)) ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.10320863371031241 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (((vt0.c0)<(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM v0, t0 NATURAL JOIN vt0 WHERE (CAST(((t0.c68)*(t0.c68)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c68)*(t0.c68)) AS BLOB)) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM v0, t0 NATURAL JOIN vt0 WHERE (CAST(((t0.c68)*(t0.c68)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c68)*(t0.c68)) AS BLOB)) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt0, v0 WHERE (NULL) ORDER BY (((((((((NOT (vt0.c1)))AND(v0.c0)))AND((- (v0.c0)))))AND(((((v0.c0)OR(vt0.c1)))OR(vt0.c0)))))OR(x'')), 6.24814344E8  NULLS LAST, (NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN -1678736339 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((((NOT (vt0.c1)))AND(v0.c0)))AND((- (v0.c0)))))AND(((((v0.c0)OR(vt0.c1)))OR(vt0.c0)))))OR(x'')), 6.24814344E8  NULLS LAST, (NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN -1678736339 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (NULL) ORDER BY (((((((((NOT (vt0.c1)))AND(v0.c0)))AND((- (v0.c0)))))AND(((((v0.c0)OR(vt0.c1)))OR(vt0.c0)))))OR(x'')), 6.24814344E8  NULLS LAST, (NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN -1678736339 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((((NOT (vt0.c1)))AND(v0.c0)))AND((- (v0.c0)))))AND(((((v0.c0)OR(vt0.c1)))OR(vt0.c0)))))OR(x'')), 6.24814344E8  NULLS LAST, (NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN -1678736339 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN ((t0.c68)LIKE(v0.c0)) THEN json_remove(v0.c0, v0.c0, vt0.c0, vt0.c0) ELSE ((v0.c0)!=(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN ((t0.c68)LIKE(v0.c0)) THEN json_remove(v0.c0, v0.c0, vt0.c0, vt0.c0) ELSE ((v0.c0)<>(vt0.c1)) END) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN ((t0.c68)LIKE(v0.c0)) THEN json_remove(v0.c0, v0.c0, vt0.c0, vt0.c0) ELSE ((v0.c0)!=(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN ((t0.c68)LIKE(v0.c0)) THEN json_remove(v0.c0, v0.c0, vt0.c0, vt0.c0) ELSE ((v0.c0)<>(vt0.c1)) END) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT ALL * FROM v0 CROSS JOIN t0 ON (NOT ((vt0.c0 IN (vt0.c1)))) INNER JOIN vt0 ON ((CAST(t0.c68 AS TEXT))>=('1429512283')) WHERE (((((t0.c68) NOTNULL)) NOT NULL)) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (NOT ((vt0.c0 IN (vt0.c1)))) INNER JOIN vt0 ON ((CAST(t0.c68 AS TEXT))>=('1429512283')) ORDER BY vt0.c1);
SELECT ALL * FROM v0 CROSS JOIN t0 ON (NOT ((vt0.c0 IN (vt0.c1)))) INNER JOIN vt0 ON ((CAST(t0.c68 AS TEXT))>=('1429512283')) WHERE (((((t0.c68) NOTNULL)) NOT NULL)) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (NOT ((vt0.c0 IN (vt0.c1)))) INNER JOIN vt0 ON ((CAST(t0.c68 AS TEXT))>=('1429512283')) ORDER BY vt0.c1);
SELECT * FROM t0 WHERE (((((((t0.c68)AND(t0.c68)))AND(t0.c68)))<=(((t0.c68)<(t0.c68))))) ORDER BY CAST('423973734' AS REAL), (((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))) BETWEEN (t0.c68) AND (((t0.c68) BETWEEN (t0.c68) AND (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))<=(((t0.c68)<(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY CAST('423973734' AS REAL), (((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))) BETWEEN (t0.c68) AND (((t0.c68) BETWEEN (t0.c68) AND (x''))))  NULLS LAST);
SELECT * FROM t0 WHERE (((((((t0.c68)AND(t0.c68)))AND(t0.c68)))<=(((t0.c68)<(t0.c68))))) ORDER BY CAST('423973734' AS REAL), (((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))) BETWEEN (t0.c68) AND (((t0.c68) BETWEEN (t0.c68) AND (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))<=(((t0.c68)<(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY CAST('423973734' AS REAL), (((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))) BETWEEN (t0.c68) AND (((t0.c68) BETWEEN (t0.c68) AND (x''))))  NULLS LAST);
SELECT * FROM t0 WHERE (((((((t0.c68)AND(t0.c68)))AND(t0.c68)))<=(((t0.c68)<(t0.c68))))) ORDER BY CAST('423973734' AS REAL), (((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))) BETWEEN (t0.c68) AND (((t0.c68) BETWEEN (t0.c68) AND (x''))))  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c0)*(v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS(v0.c0))))) ORDER BY ((v0.c0)-(v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)-(v0.c0)) COLLATE RTRIM);
SELECT * FROM v0 WHERE (((((v0.c0)*(v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS(v0.c0))))) ORDER BY ((v0.c0)-(v0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(v0.c0))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)-(v0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0, v0 WHERE (((t0.c68 COLLATE BINARY)>((((v0.c0))<((vt0.c0)))))) ORDER BY (2099523855 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE BINARY)>((((v0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (2099523855 IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, v0 WHERE (((t0.c68 COLLATE BINARY)>((((v0.c0))<((vt0.c0)))))) ORDER BY (2099523855 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE BINARY)>((((v0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (2099523855 IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 NOT INDEXED WHERE ((((vt0.c0 IN (t0.c68)))-(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c68)))-(vt0.c0))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 NOT INDEXED WHERE ((((vt0.c0 IN (t0.c68)))-(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c68)))-(vt0.c0))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 NOT INDEXED WHERE ((((vt0.c0 IN (t0.c68)))-(vt0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (0.33343899546286015);
SELECT SUM(count) FROM (SELECT ((0.33343899546286015) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0.33343899546286015);
SELECT SUM(count) FROM (SELECT ((0.33343899546286015) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0.33343899546286015);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (x'') ORDER BY ((vt0.c0)>=(0.8565117925138187)) COLLATE BINARY ASC, ((CAST(t0.c68 AS INTEGER))=(json_type(vt0.c0))) DESC, ((((NULL)<(t0.c68)))=(t0.c68 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((vt0.c0)>=(0.8565117925138187)) COLLATE BINARY ASC, ((CAST(t0.c68 AS INTEGER))=(json_type(vt0.c0))) DESC, ((((NULL)<(t0.c68)))==(t0.c68 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (x'') ORDER BY ((vt0.c0)>=(0.8565117925138187)) COLLATE BINARY ASC, ((CAST(t0.c68 AS INTEGER))=(json_type(vt0.c0))) DESC, ((((NULL)<(t0.c68)))=(t0.c68 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((vt0.c0)>=(0.8565117925138187)) COLLATE BINARY ASC, ((CAST(t0.c68 AS INTEGER))=(json_type(vt0.c0))) DESC, ((((NULL)<(t0.c68)))==(t0.c68 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0, v0 INNER JOIN t0 ON (((((v0.c0)IS(t0.c68))))<>(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) WHERE (0.699452205614376);
SELECT SUM(count) FROM (SELECT ((0.699452205614376) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON (((((v0.c0)IS(t0.c68))))!=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT ALL * FROM vt0, v0 INNER JOIN t0 ON (((((v0.c0)IS(t0.c68))))<>(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) WHERE (0.699452205614376);
SELECT SUM(count) FROM (SELECT ((0.699452205614376) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON (((((v0.c0)IS(t0.c68))))!=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))!=(NULL)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))!=(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))!=(NULL)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))!=(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))!=(NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (STRFTIME(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c1))>((vt0.c0))), (('-1450679966')IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c1))>((vt0.c0))), (('-1450679966')IS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (STRFTIME(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c1))>((vt0.c0))), (('-1450679966')IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c1))>((vt0.c0))), (('-1450679966')IS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (STRFTIME(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c1))>((vt0.c0))), (('-1450679966')IS(vt0.c0))));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON vt0.c1 INNER JOIN vt0 ON 0.82275029634259 WHERE (((((((v0.c0)OR(vt0.c1)))OR(vt0.c0))) NOTNULL)) ORDER BY ((TYPEOF(DISTINCT vt0.c0)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(vt0.c1)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON vt0.c1 INNER JOIN vt0 ON 0.82275029634259 ORDER BY ((TYPEOF(DISTINCT vt0.c0)) NOT NULL) ASC);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON vt0.c1 INNER JOIN vt0 ON 0.82275029634259 WHERE (((((((v0.c0)OR(vt0.c1)))OR(vt0.c0))) NOTNULL)) ORDER BY ((TYPEOF(DISTINCT vt0.c0)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(vt0.c1)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON vt0.c1 INNER JOIN vt0 ON 0.82275029634259 ORDER BY ((TYPEOF(DISTINCT vt0.c0)) NOT NULL) ASC);
SELECT ALL * FROM v0 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN (v0.c0 IN ()) THEN '1144607531' ELSE ((v0.c0)LIKE(v0.c0)) END) ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN MAX(NULL, v0.c0, v0.c0, x'') THEN RTRIM(v0.c0) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS TEXT)  WHEN (v0.c0 IN ()) THEN '1144607531' ELSE ((v0.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN MAX(NULL, v0.c0, v0.c0, x'') THEN RTRIM(v0.c0) END ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN (v0.c0 IN ()) THEN '1144607531' ELSE ((v0.c0)LIKE(v0.c0)) END) ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN MAX(NULL, v0.c0, v0.c0, x'') THEN RTRIM(v0.c0) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS TEXT)  WHEN (v0.c0 IN ()) THEN '1144607531' ELSE ((v0.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN MAX(NULL, v0.c0, v0.c0, x'') THEN RTRIM(v0.c0) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN LIKELY(vt0.c0) THEN ((NULL)*(vt0.c1)) WHEN (vt0.c1 IN (vt0.c0)) THEN CASE WHEN NULL THEN vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN NULL ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) ORDER BY '5P䪧8' ASC  NULLS FIRST, ((((CAST(vt0.c0 AS REAL))AND(((0.4647563867510859) IS TRUE))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ASC, (((vt0.c0 COLLATE NOCASE))=(((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(vt0.c0) THEN ((NULL)*(vt0.c1)) WHEN (vt0.c1 IN (vt0.c0)) THEN CASE WHEN NULL THEN vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN NULL ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) IS TRUE)  as count FROM vt0 ORDER BY '5P䪧8' ASC  NULLS FIRST, ((((CAST(vt0.c0 AS REAL))AND(((0.4647563867510859) IS TRUE))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ASC, (((vt0.c0 COLLATE NOCASE))==(((NOT (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN LIKELY(vt0.c0) THEN ((NULL)*(vt0.c1)) WHEN (vt0.c1 IN (vt0.c0)) THEN CASE WHEN NULL THEN vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN NULL ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) ORDER BY '5P䪧8' ASC  NULLS FIRST, ((((CAST(vt0.c0 AS REAL))AND(((0.4647563867510859) IS TRUE))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ASC, (((vt0.c0 COLLATE NOCASE))=(((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(vt0.c0) THEN ((NULL)*(vt0.c1)) WHEN (vt0.c1 IN (vt0.c0)) THEN CASE WHEN NULL THEN vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN NULL ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) IS TRUE)  as count FROM vt0 ORDER BY '5P䪧8' ASC  NULLS FIRST, ((((CAST(vt0.c0 AS REAL))AND(((0.4647563867510859) IS TRUE))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ASC, (((vt0.c0 COLLATE NOCASE))==(((NOT (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN LIKELY(vt0.c0) THEN ((NULL)*(vt0.c1)) WHEN (vt0.c1 IN (vt0.c0)) THEN CASE WHEN NULL THEN vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN NULL ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) ORDER BY '5P䪧8' ASC  NULLS FIRST, ((((CAST(vt0.c0 AS REAL))AND(((0.4647563867510859) IS TRUE))))OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ASC, (((vt0.c0 COLLATE NOCASE))=(((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) IS FALSE)) ORDER BY (((vt0.c1)) BETWEEN ((json_array(vt0.c0, vt0.c1, vt0.c1, vt0.c0))) AND (((vt0.c1 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((json_array(vt0.c0, vt0.c1, vt0.c1, vt0.c0))) AND (((vt0.c1 IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) IS FALSE)) ORDER BY (((vt0.c1)) BETWEEN ((json_array(vt0.c0, vt0.c1, vt0.c1, vt0.c0))) AND (((vt0.c1 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((json_array(vt0.c0, vt0.c1, vt0.c1, vt0.c0))) AND (((vt0.c1 IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) IS FALSE)) ORDER BY (((vt0.c1)) BETWEEN ((json_array(vt0.c0, vt0.c1, vt0.c1, vt0.c0))) AND (((vt0.c1 IN ())))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LTRIM(((((v0.c0)AND(vt0.c1)))AND(v0.c0)))) ORDER BY ((vt0.c1 COLLATE BINARY) IS FALSE) ASC, ((((vt0.c0) IS FALSE)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ('媆WW'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((v0.c0)AND(vt0.c1)))AND(v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c1 COLLATE BINARY) IS FALSE) ASC, ((((vt0.c0) IS FALSE)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ('媆WW'))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LTRIM(((((v0.c0)AND(vt0.c1)))AND(v0.c0)))) ORDER BY ((vt0.c1 COLLATE BINARY) IS FALSE) ASC, ((((vt0.c0) IS FALSE)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ('媆WW'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((v0.c0)AND(vt0.c1)))AND(v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c1 COLLATE BINARY) IS FALSE) ASC, ((((vt0.c0) IS FALSE)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ('媆WW'))  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN t0 ON CAST(((vt0.c0)%(vt0.c1)) AS REAL) FULL OUTER JOIN vt0 ON ((((t0.c68)GLOB(vt0.c0))) IS TRUE) WHERE ((NOT (((((vt0.c1)AND(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c1)AND(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CAST(((vt0.c0)%(vt0.c1)) AS REAL) FULL OUTER JOIN vt0 ON ((((t0.c68)GLOB(vt0.c0))) IS TRUE));
SELECT ALL * FROM v0 CROSS JOIN t0 ON CAST(((vt0.c0)%(vt0.c1)) AS REAL) FULL OUTER JOIN vt0 ON ((((t0.c68)GLOB(vt0.c0))) IS TRUE) WHERE ((NOT (((((vt0.c1)AND(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c1)AND(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CAST(((vt0.c0)%(vt0.c1)) AS REAL) FULL OUTER JOIN vt0 ON ((((t0.c68)GLOB(vt0.c0))) IS TRUE));
SELECT ALL * FROM v0 WHERE (0.03795784880945763);
SELECT SUM(count) FROM (SELECT ALL ((0.03795784880945763) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.03795784880945763);
SELECT SUM(count) FROM (SELECT ALL ((0.03795784880945763) IS TRUE)  as count FROM v0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0)GLOB(t0.c68)) COLLATE RTRIM) ORDER BY ((t0.c68)AND(vt0.c1)) COLLATE RTRIM ASC  NULLS LAST, ((((vt0.c1) ISNULL))>=((NOT (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(t0.c68)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c68)AND(vt0.c1)) COLLATE RTRIM ASC  NULLS LAST, ((((vt0.c1) ISNULL))>=((NOT (vt0.c1))))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((vt0.c0)GLOB(t0.c68)) COLLATE RTRIM) ORDER BY ((t0.c68)AND(vt0.c1)) COLLATE RTRIM ASC  NULLS LAST, ((((vt0.c1) ISNULL))>=((NOT (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(t0.c68)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c68)AND(vt0.c1)) COLLATE RTRIM ASC  NULLS LAST, ((((vt0.c1) ISNULL))>=((NOT (vt0.c1))))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((vt0.c0)GLOB(t0.c68)) COLLATE RTRIM) ORDER BY ((t0.c68)AND(vt0.c1)) COLLATE RTRIM ASC  NULLS LAST, ((((vt0.c1) ISNULL))>=((NOT (vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (json_patch((~ (vt0.c1)), v0.c0));
SELECT SUM(count) FROM (SELECT ((json_patch((~ (vt0.c1)), v0.c0)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (json_patch((~ (vt0.c1)), v0.c0));
SELECT SUM(count) FROM (SELECT ((json_patch((~ (vt0.c1)), v0.c0)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ((~ (vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY vt0.c0 DESC);
SELECT * FROM v0, vt0, t0 WHERE ((~ (vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY vt0.c0 DESC);
SELECT * FROM t0, vt0, v0 WHERE ((('-1527983433') BETWEEN ((('l') NOT BETWEEN (v0.c0) AND ('aDt[z#7cO>]'))) AND (HEX(v0.c0)))) ORDER BY ((((((((LTRIM(vt0.c0, vt0.c1))AND((v0.c0 IN ()))))OR((((v0.c0, NULL, v0.c0)) BETWEEN ((v0.c0, vt0.c1, v0.c0)) AND ((vt0.c1, v0.c0, t0.c68))))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))AND(t0.c68)))AND(vt0.c0)))))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((('-1527983433') BETWEEN ((('l') NOT BETWEEN (v0.c0) AND ('aDt[z#7cO>]'))) AND (HEX(v0.c0)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((((LTRIM(vt0.c0, vt0.c1))AND((v0.c0 IN ()))))OR((((v0.c0, NULL, v0.c0)) BETWEEN ((v0.c0, vt0.c1, v0.c0)) AND ((vt0.c1, v0.c0, t0.c68))))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))AND(t0.c68)))AND(vt0.c0)))))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC);
SELECT * FROM t0, vt0, v0 WHERE ((('-1527983433') BETWEEN ((('l') NOT BETWEEN (v0.c0) AND ('aDt[z#7cO>]'))) AND (HEX(v0.c0)))) ORDER BY ((((((((LTRIM(vt0.c0, vt0.c1))AND((v0.c0 IN ()))))OR((((v0.c0, NULL, v0.c0)) BETWEEN ((v0.c0, vt0.c1, v0.c0)) AND ((vt0.c1, v0.c0, t0.c68))))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))AND(t0.c68)))AND(vt0.c0)))))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((('-1527983433') BETWEEN ((('l') NOT BETWEEN (v0.c0) AND ('aDt[z#7cO>]'))) AND (HEX(v0.c0)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((((LTRIM(vt0.c0, vt0.c1))AND((v0.c0 IN ()))))OR((((v0.c0, NULL, v0.c0)) BETWEEN ((v0.c0, vt0.c1, v0.c0)) AND ((vt0.c1, v0.c0, t0.c68))))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))AND(t0.c68)))AND(vt0.c0)))))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (((((((((vt0.c1)OR(v0.c0)))AND(vt0.c1)))OR(v0.c0)))AND(vt0.c1))) AND (v0.c0 COLLATE RTRIM))) ORDER BY '*n' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) BETWEEN (((((((((vt0.c1)OR(v0.c0)))AND(vt0.c1)))OR(v0.c0)))AND(vt0.c1))) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0 ORDER BY '*n' ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (((((((((vt0.c1)OR(v0.c0)))AND(vt0.c1)))OR(v0.c0)))AND(vt0.c1))) AND (v0.c0 COLLATE RTRIM))) ORDER BY '*n' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) BETWEEN (((((((((vt0.c1)OR(v0.c0)))AND(vt0.c1)))OR(v0.c0)))AND(vt0.c1))) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0 ORDER BY '*n' ASC);
SELECT * FROM v0, t0 WHERE (0X353f8c38) ORDER BY x'6dfd3bb6';
SELECT SUM(count) FROM (SELECT ((0X353f8c38) IS TRUE)  as count FROM v0, t0 ORDER BY x'6dfd3bb6');
SELECT * FROM v0, t0 WHERE (0X353f8c38) ORDER BY x'6dfd3bb6';
SELECT SUM(count) FROM (SELECT ((0X353f8c38) IS TRUE)  as count FROM v0, t0 ORDER BY x'6dfd3bb6');
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((((t0.c68)>>(t0.c68)), ((t0.c68) NOT NULL), ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))) AND (((t0.c68 IN ()), (t0.c68 IN (t0.c68)), x''))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((((t0.c68)>>(t0.c68)), ((t0.c68) NOT NULL), ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))) AND (((t0.c68 IN ()), (t0.c68 IN (t0.c68)), x'')))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((((t0.c68)>>(t0.c68)), ((t0.c68) NOT NULL), ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))) AND (((t0.c68 IN ()), (t0.c68 IN (t0.c68)), x''))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((((t0.c68)>>(t0.c68)), ((t0.c68) NOT NULL), ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))) AND (((t0.c68 IN ()), (t0.c68 IN (t0.c68)), x'')))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c68, t0.c68, t0.c68)) NOT BETWEEN ((((t0.c68)>>(t0.c68)), ((t0.c68) NOT NULL), ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)))) AND (((t0.c68 IN ()), (t0.c68 IN (t0.c68)), x''))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((((-1301827834 COLLATE NOCASE)AND(((((((((((((vt0.c1)AND(t0.c68)))OR(vt0.c1)))OR(NULL)))AND(v0.c0)))AND(vt0.c1)))OR(v0.c0)))))OR(LENGTH(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((-1301827834 COLLATE NOCASE)AND(((((((((((((vt0.c1)AND(t0.c68)))OR(vt0.c1)))OR(NULL)))AND(v0.c0)))AND(vt0.c1)))OR(v0.c0)))))OR(LENGTH(v0.c0)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((((-1301827834 COLLATE NOCASE)AND(((((((((((((vt0.c1)AND(t0.c68)))OR(vt0.c1)))OR(NULL)))AND(v0.c0)))AND(vt0.c1)))OR(v0.c0)))))OR(LENGTH(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((-1301827834 COLLATE NOCASE)AND(((((((((((((vt0.c1)AND(t0.c68)))OR(vt0.c1)))OR(NULL)))AND(v0.c0)))AND(vt0.c1)))OR(v0.c0)))))OR(LENGTH(v0.c0)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0 WHERE (t0.c68) ORDER BY COALESCE(ABS(t0.c68), CASE v0.c0  WHEN x'' THEN v0.c0 END) DESC  NULLS FIRST, (+ ((+ (t0.c68)))) DESC, ((((NULL)OR(t0.c68)))AND(t0.c68)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM v0, t0 ORDER BY COALESCE(ABS(t0.c68), CASE v0.c0  WHEN x'' THEN v0.c0 END) DESC  NULLS FIRST, (+ ((+ (t0.c68)))) DESC, ((((NULL)OR(t0.c68)))AND(t0.c68)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (t0.c68) ORDER BY COALESCE(ABS(t0.c68), CASE v0.c0  WHEN x'' THEN v0.c0 END) DESC  NULLS FIRST, (+ ((+ (t0.c68)))) DESC, ((((NULL)OR(t0.c68)))AND(t0.c68)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM v0, t0 ORDER BY COALESCE(ABS(t0.c68), CASE v0.c0  WHEN x'' THEN v0.c0 END) DESC  NULLS FIRST, (+ ((+ (t0.c68)))) DESC, ((((NULL)OR(t0.c68)))AND(t0.c68)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c68 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c68 AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c68 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c68 AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c68 AS BLOB));
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c68 AS INTEGER)))<((((t0.c68)>>(t0.c68)))))) ORDER BY ((((t0.c68)OR(t0.c68)))IS NOT((+ (t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c68 AS INTEGER)))<((((t0.c68)>>(t0.c68)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)OR(t0.c68)))IS NOT((+ (t0.c68))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c68 AS INTEGER)))<((((t0.c68)>>(t0.c68)))))) ORDER BY ((((t0.c68)OR(t0.c68)))IS NOT((+ (t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c68 AS INTEGER)))<((((t0.c68)>>(t0.c68)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)OR(t0.c68)))IS NOT((+ (t0.c68))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((CAST(t0.c68 AS INTEGER)))<((((t0.c68)>>(t0.c68)))))) ORDER BY ((((t0.c68)OR(t0.c68)))IS NOT((+ (t0.c68))))  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (NULLIF(vt0.c1, vt0.c0 COLLATE BINARY)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c1, vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (NULLIF(vt0.c1, vt0.c0 COLLATE BINARY)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c1, vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT) ASC  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((((((x'd366')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))|((~ (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((((x'd366')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))|((~ (t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((x'd366')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))|((~ (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((((((x'd366')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))|((~ (t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((x'd366')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))|((~ (t0.c68)))));
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN vt0 WHERE ((+ (TYPEOF(x'14c0'))));
SELECT SUM(count) FROM (SELECT ALL (((+ (TYPEOF(x'14c0')))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN vt0 WHERE ((+ (TYPEOF(x'14c0'))));
SELECT SUM(count) FROM (SELECT ALL (((+ (TYPEOF(x'14c0')))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (JULIANDAY(vt0.c1 COLLATE RTRIM, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((v0.c0)||(vt0.c0)))) ORDER BY ((((CASE WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE vt0.c1  WHEN t0.c68 THEN v0.c0 ELSE -423970524 END)))OR(((((vt0.c0)OR(t0.c68)))AND(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(vt0.c1 COLLATE RTRIM, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((v0.c0)||(vt0.c0)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((CASE WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE vt0.c1  WHEN t0.c68 THEN v0.c0 ELSE -423970524 END)))OR(((((vt0.c0)OR(t0.c68)))AND(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, v0, vt0 WHERE (JULIANDAY(vt0.c1 COLLATE RTRIM, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((v0.c0)||(vt0.c0)))) ORDER BY ((((CASE WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE vt0.c1  WHEN t0.c68 THEN v0.c0 ELSE -423970524 END)))OR(((((vt0.c0)OR(t0.c68)))AND(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(vt0.c1 COLLATE RTRIM, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((v0.c0)||(vt0.c0)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((CASE WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE vt0.c1  WHEN t0.c68 THEN v0.c0 ELSE -423970524 END)))OR(((((vt0.c0)OR(t0.c68)))AND(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (t0.c68) ORDER BY (NOT (((v0.c0) BETWEEN (t0.c68) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT (((v0.c0) BETWEEN (t0.c68) AND (v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (t0.c68) ORDER BY (NOT (((v0.c0) BETWEEN (t0.c68) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT (((v0.c0) BETWEEN (t0.c68) AND (v0.c0))))  NULLS LAST);
SELECT * FROM t0, vt0, v0 WHERE (json_array_length(TRIM(DISTINCT vt0.c0), t0.c68)) ORDER BY t0.c68  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(TRIM(DISTINCT vt0.c0), t0.c68)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY t0.c68  NULLS LAST);
SELECT * FROM t0, vt0, v0 WHERE (json_array_length(TRIM(DISTINCT vt0.c0), t0.c68)) ORDER BY t0.c68  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(TRIM(DISTINCT vt0.c0), t0.c68)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY t0.c68  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0 IN ())) BETWEEN (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND (v0.c0))  NULLS FIRST, ((((((((LOWER(v0.c0))AND(-8.3264395E8)))OR(((v0.c0) IS FALSE))))OR(((v0.c0)<(v0.c0)))))AND((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) BETWEEN (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND (v0.c0))  NULLS FIRST, ((((((((LOWER(v0.c0))AND(-8.3264395E8)))OR(((v0.c0) IS FALSE))))OR(((v0.c0)<(v0.c0)))))AND((v0.c0 IN ())))  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0 IN ())) BETWEEN (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND (v0.c0))  NULLS FIRST, ((((((((LOWER(v0.c0))AND(-8.3264395E8)))OR(((v0.c0) IS FALSE))))OR(((v0.c0)<(v0.c0)))))AND((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) BETWEEN (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND (v0.c0))  NULLS FIRST, ((((((((LOWER(v0.c0))AND(-8.3264395E8)))OR(((v0.c0) IS FALSE))))OR(((v0.c0)<(v0.c0)))))AND((v0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((t0.c68) NOT BETWEEN (vt0.c1) AND (NULL)))>>(CAST('S灹N.' AS BLOB)))) ORDER BY CAST((NOT (t0.c68)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOT BETWEEN (vt0.c1) AND (NULL)))>>(CAST('S灹N.' AS BLOB)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((NOT (t0.c68)) AS NUMERIC));
SELECT * FROM vt0, t0 WHERE (((((t0.c68) NOT BETWEEN (vt0.c1) AND (NULL)))>>(CAST('S灹N.' AS BLOB)))) ORDER BY CAST((NOT (t0.c68)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOT BETWEEN (vt0.c1) AND (NULL)))>>(CAST('S灹N.' AS BLOB)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((NOT (t0.c68)) AS NUMERIC));
SELECT * FROM vt0, t0 WHERE (((((t0.c68) NOT BETWEEN (vt0.c1) AND (NULL)))>>(CAST('S灹N.' AS BLOB)))) ORDER BY CAST((NOT (t0.c68)) AS NUMERIC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOT NULL)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOT NULL)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOT NULL)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((CAST(t0.c68 AS INTEGER))IS(((vt0.c0)<=(NULL)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS INTEGER))IS(((vt0.c0)<=(NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(t0.c68 AS INTEGER))IS(((vt0.c0)<=(NULL)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS INTEGER))IS(((vt0.c0)<=(NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CAST(t0.c68 AS INTEGER))IS(((vt0.c0)<=(NULL)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0) NOT BETWEEN ('s9+D') AND (0.39622205929928045)))AND((+ (t0.c68)))))AND(DATE(vt0.c1, vt0.c0, vt0.c0, t0.c68, t0.c68)))) ORDER BY CASE WHEN (((t0.c68, t0.c68, vt0.c0, vt0.c1, t0.c68, vt0.c0, x'')) BETWEEN (('', t0.c68, t0.c68, t0.c68, vt0.c0, vt0.c0, '(po')) AND ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, t0.c68, t0.c68, t0.c68))) THEN ((t0.c68)=(vt0.c1)) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN ('s9+D') AND (0.39622205929928045)))AND((+ (t0.c68)))))AND(DATE(vt0.c1, vt0.c0, vt0.c0, t0.c68, t0.c68)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (((t0.c68, t0.c68, vt0.c0, vt0.c1, t0.c68, vt0.c0, x'')) BETWEEN (('', t0.c68, t0.c68, t0.c68, vt0.c0, vt0.c0, '(po')) AND ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, t0.c68, t0.c68, t0.c68))) THEN ((t0.c68)==(vt0.c1)) ELSE vt0.c0 END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0) NOT BETWEEN ('s9+D') AND (0.39622205929928045)))AND((+ (t0.c68)))))AND(DATE(vt0.c1, vt0.c0, vt0.c0, t0.c68, t0.c68)))) ORDER BY CASE WHEN (((t0.c68, t0.c68, vt0.c0, vt0.c1, t0.c68, vt0.c0, x'')) BETWEEN (('', t0.c68, t0.c68, t0.c68, vt0.c0, vt0.c0, '(po')) AND ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, t0.c68, t0.c68, t0.c68))) THEN ((t0.c68)=(vt0.c1)) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN ('s9+D') AND (0.39622205929928045)))AND((+ (t0.c68)))))AND(DATE(vt0.c1, vt0.c0, vt0.c0, t0.c68, t0.c68)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (((t0.c68, t0.c68, vt0.c0, vt0.c1, t0.c68, vt0.c0, x'')) BETWEEN (('', t0.c68, t0.c68, t0.c68, vt0.c0, vt0.c0, '(po')) AND ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, t0.c68, t0.c68, t0.c68))) THEN ((t0.c68)==(vt0.c1)) ELSE vt0.c0 END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0) NOT BETWEEN ('s9+D') AND (0.39622205929928045)))AND((+ (t0.c68)))))AND(DATE(vt0.c1, vt0.c0, vt0.c0, t0.c68, t0.c68)))) ORDER BY CASE WHEN (((t0.c68, t0.c68, vt0.c0, vt0.c1, t0.c68, vt0.c0, x'')) BETWEEN (('', t0.c68, t0.c68, t0.c68, vt0.c0, vt0.c0, '(po')) AND ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, t0.c68, t0.c68, t0.c68))) THEN ((t0.c68)=(vt0.c1)) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (NULL))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (NULL))) IS TRUE)  as count FROM v0);
SELECT * FROM vt0 CROSS JOIN t0 ON (((t0.c68)) BETWEEN ((((t0.c68) NOT BETWEEN (vt0.c0) AND (t0.c68)))) AND ((((t0.c68)OR(t0.c68))))) INNER JOIN v0 ON x'' WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY LOWER(CAST(t0.c68 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((t0.c68)) BETWEEN ((((t0.c68) NOT BETWEEN (vt0.c0) AND (t0.c68)))) AND ((((t0.c68)OR(t0.c68))))) INNER JOIN v0 ON x'' ORDER BY LOWER(CAST(t0.c68 AS NUMERIC)));
SELECT * FROM vt0 CROSS JOIN t0 ON (((t0.c68)) BETWEEN ((((t0.c68) NOT BETWEEN (vt0.c0) AND (t0.c68)))) AND ((((t0.c68)OR(t0.c68))))) INNER JOIN v0 ON x'' WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY LOWER(CAST(t0.c68 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((t0.c68)) BETWEEN ((((t0.c68) NOT BETWEEN (vt0.c0) AND (t0.c68)))) AND ((((t0.c68)OR(t0.c68))))) INNER JOIN v0 ON x'' ORDER BY LOWER(CAST(t0.c68 AS NUMERIC)));
SELECT * FROM vt0 CROSS JOIN t0 ON (((t0.c68)) BETWEEN ((((t0.c68) NOT BETWEEN (vt0.c0) AND (t0.c68)))) AND ((((t0.c68)OR(t0.c68))))) INNER JOIN v0 ON x'' WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY LOWER(CAST(t0.c68 AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((~ ((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c68 IN ())))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((~ ((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c68 IN ())))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ((~ ((t0.c68 IN ()))));
SELECT * FROM t0 CROSS JOIN vt0 ON (((NULL) NOTNULL) IN ()) INNER JOIN v0 ON (+ (t0.c68)) WHERE (((CASE WHEN vt0.c1 THEN v0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((NULL) NOTNULL) IN ()) INNER JOIN v0 ON (+ (t0.c68)));
SELECT * FROM t0 CROSS JOIN vt0 ON (((NULL) NOTNULL) IN ()) INNER JOIN v0 ON (+ (t0.c68)) WHERE (((CASE WHEN vt0.c1 THEN v0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN v0.c0 END) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((NULL) NOTNULL) IN ()) INNER JOIN v0 ON (+ (t0.c68)));
SELECT * FROM t0 CROSS JOIN vt0 ON (((NULL) NOTNULL) IN ()) INNER JOIN v0 ON (+ (t0.c68)) WHERE (((CASE WHEN vt0.c1 THEN v0.c0 END) IS FALSE));
SELECT ALL * FROM vt0 WHERE ((((('-236082795')LIKE(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((('-236082795')LIKE(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('-236082795')LIKE(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((('-236082795')LIKE(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('-236082795')LIKE(vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c0)+(v0.c0)))<<((((v0.c0))>((x'')))))) ORDER BY '1697266803' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(v0.c0)))<<((((v0.c0))>((x'')))))) IS TRUE)  as count FROM t0, v0 ORDER BY '1697266803' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c0)+(v0.c0)))<<((((v0.c0))>((x'')))))) ORDER BY '1697266803' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(v0.c0)))<<((((v0.c0))>((x'')))))) IS TRUE)  as count FROM t0, v0 ORDER BY '1697266803' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((v0.c0, vt0.c1, '691152690')) NOT BETWEEN (((- (vt0.c1)), CAST(t0.c68 AS BLOB), NULL)) AND ((((NULL)>(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))), (((' }', t0.c68, v0.c0))<>(('1594547406', v0.c0, t0.c68))))))) ORDER BY (((('-623720145')/(NULL)))!=(vt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt0.c1, '691152690')) NOT BETWEEN (((- (vt0.c1)), CAST(t0.c68 AS BLOB), NULL)) AND ((((NULL)>(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))), (((' }', t0.c68, v0.c0))<>(('1594547406', v0.c0, t0.c68))))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((('-623720145')/(NULL)))!=(vt0.c1)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((v0.c0, vt0.c1, '691152690')) NOT BETWEEN (((- (vt0.c1)), CAST(t0.c68 AS BLOB), NULL)) AND ((((NULL)>(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))), (((' }', t0.c68, v0.c0))<>(('1594547406', v0.c0, t0.c68))))))) ORDER BY (((('-623720145')/(NULL)))!=(vt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt0.c1, '691152690')) NOT BETWEEN (((- (vt0.c1)), CAST(t0.c68 AS BLOB), NULL)) AND ((((NULL)>(v0.c0)), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))), (((' }', t0.c68, v0.c0))<>(('1594547406', v0.c0, t0.c68))))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((('-623720145')/(NULL)))!=(vt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0))) WHERE (CASE WHEN ((v0.c0)|(t0.c68)) THEN v0.c0 ELSE CAST(v0.c0 AS BLOB) END) ORDER BY (+ (NULLIF(v0.c0, vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)|(t0.c68)) THEN v0.c0 ELSE CAST(v0.c0 AS BLOB) END) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0))) ORDER BY (+ (NULLIF(v0.c0, vt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0))) WHERE (CASE WHEN ((v0.c0)|(t0.c68)) THEN v0.c0 ELSE CAST(v0.c0 AS BLOB) END) ORDER BY (+ (NULLIF(v0.c0, vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)|(t0.c68)) THEN v0.c0 ELSE CAST(v0.c0 AS BLOB) END) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0))) ORDER BY (+ (NULLIF(v0.c0, vt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((t0.c68)=(v0.c0))) BETWEEN (vt0.c0) AND ((vt0.c1 IN (vt0.c1, v0.c0))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((((t0.c68)==(v0.c0))) BETWEEN (vt0.c0) AND ((vt0.c1 IN (vt0.c1, v0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((t0.c68)=(v0.c0))) BETWEEN (vt0.c0) AND ((vt0.c1 IN (vt0.c1, v0.c0))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((((t0.c68)==(v0.c0))) BETWEEN (vt0.c0) AND ((vt0.c1 IN (vt0.c1, v0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)) IN (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)) IN (v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)) IN (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)) IN (v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0 WHERE (((v0.c0)>=(v0.c0)) COLLATE NOCASE) ORDER BY ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(x'')))AND(v0.c0)))AND((((((((((((('-832643950')AND('-458567457')))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0)OR(v0.c0)))), ((((v0.c0)%(0.7168581242000558))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>=(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(x'')))AND(v0.c0)))AND((((((((((((('-832643950')AND('-458567457')))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0)OR(v0.c0)))), ((((v0.c0)%(0.7168581242000558))) NOT NULL));
SELECT ALL * FROM v0 WHERE (((v0.c0)>=(v0.c0)) COLLATE NOCASE) ORDER BY ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(x'')))AND(v0.c0)))AND((((((((((((('-832643950')AND('-458567457')))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0)OR(v0.c0)))), ((((v0.c0)%(0.7168581242000558))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>=(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(x'')))AND(v0.c0)))AND((((((((((((('-832643950')AND('-458567457')))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0)OR(v0.c0)))), ((((v0.c0)%(0.7168581242000558))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL)+(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)+(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL)+(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)+(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL)+(vt0.c0))) IS FALSE));
SELECT ALL * FROM t0, vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS BLOB) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS BLOB) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS REAL));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND (((((t0.c68)AND(vt0.c1)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND (((((t0.c68)AND(vt0.c1)))AND(x''))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND (((((t0.c68)AND(vt0.c1)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND (((((t0.c68)AND(vt0.c1)))AND(x''))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND (((((t0.c68)AND(vt0.c1)))AND(x'')))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((- (NULL))) ORDER BY (((~ (t0.c68)))AND(((vt0.c1)||(vt0.c0)))), ((UPPER(v0.c0))<(CAST(v0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((~ (t0.c68)))AND(((vt0.c1)||(vt0.c0)))), ((UPPER(v0.c0))<(CAST(v0.c0 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((- (NULL))) ORDER BY (((~ (t0.c68)))AND(((vt0.c1)||(vt0.c0)))), ((UPPER(v0.c0))<(CAST(v0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((~ (t0.c68)))AND(((vt0.c1)||(vt0.c0)))), ((UPPER(v0.c0))<(CAST(v0.c0 AS NUMERIC))) ASC);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ()))+(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))+(vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ()))+(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))+(vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ()))+(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((HEX(vt0.c1))*(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) ORDER BY ((((vt0.c1)*(vt0.c0))) NOTNULL)  NULLS FIRST, (- (CAST(vt0.c0 AS NUMERIC))), UNLIKELY(((vt0.c0)OR(vt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c1))*(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)*(vt0.c0))) NOTNULL)  NULLS FIRST, (- (CAST(vt0.c0 AS NUMERIC))), UNLIKELY(((vt0.c0)OR(vt0.c1))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((HEX(vt0.c1))*(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) ORDER BY ((((vt0.c1)*(vt0.c0))) NOTNULL)  NULLS FIRST, (- (CAST(vt0.c0 AS NUMERIC))), UNLIKELY(((vt0.c0)OR(vt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c1))*(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)*(vt0.c0))) NOTNULL)  NULLS FIRST, (- (CAST(vt0.c0 AS NUMERIC))), UNLIKELY(((vt0.c0)OR(vt0.c1))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((HEX(vt0.c1))*(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) ORDER BY ((((vt0.c1)*(vt0.c0))) NOTNULL)  NULLS FIRST, (- (CAST(vt0.c0 AS NUMERIC))), UNLIKELY(((vt0.c0)OR(vt0.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT 0.529885349953836)) ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT 0.529885349953836)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT 0.529885349953836)) ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT 0.529885349953836)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT 0.529885349953836)) ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t0 WHERE (((((t0.c68) BETWEEN (v0.c0) AND (v0.c0)))||(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68) BETWEEN (v0.c0) AND (v0.c0)))||(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (((((t0.c68) BETWEEN (v0.c0) AND (v0.c0)))||(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68) BETWEEN (v0.c0) AND (v0.c0)))||(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN ((((vt0.c1)AND(v0.c0)))OR(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) WHEN 0.06144457245184143 THEN ((v0.c0)IS NOT(t0.c68)) WHEN ((t0.c68) NOT NULL) THEN CAST(v0.c0 AS TEXT) END) ORDER BY CAST(t0.c68 AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)AND(v0.c0)))OR(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) WHEN 0.06144457245184143 THEN ((v0.c0)IS NOT(t0.c68)) WHEN ((t0.c68) NOT NULL) THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CAST(t0.c68 AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN ((((vt0.c1)AND(v0.c0)))OR(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) WHEN 0.06144457245184143 THEN ((v0.c0)IS NOT(t0.c68)) WHEN ((t0.c68) NOT NULL) THEN CAST(v0.c0 AS TEXT) END) ORDER BY CAST(t0.c68 AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)AND(v0.c0)))OR(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) WHEN 0.06144457245184143 THEN ((v0.c0)IS NOT(t0.c68)) WHEN ((t0.c68) NOT NULL) THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CAST(t0.c68 AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (~ (CASE -661128956  WHEN vt0.c1 THEN x'' END)) ASC;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE -661128956  WHEN vt0.c1 THEN x'' END)) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (~ (CASE -661128956  WHEN vt0.c1 THEN x'' END)) ASC;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE -661128956  WHEN vt0.c1 THEN x'' END)) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (~ (CASE -661128956  WHEN vt0.c1 THEN x'' END)) ASC;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (CAST((((vt0.c1))<((vt0.c1))) AS TEXT)) ORDER BY (((t0.c68 IN ()))<>(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1))<((vt0.c1))) AS TEXT)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((t0.c68 IN ()))<>(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (CAST((((vt0.c1))<((vt0.c1))) AS TEXT)) ORDER BY (((t0.c68 IN ()))<>(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1))<((vt0.c1))) AS TEXT)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((t0.c68 IN ()))<>(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON (- ((((vt0.c1, '-245687107', vt0.c0)) BETWEEN ((t0.c68, v0.c0, vt0.c0)) AND ((t0.c68, t0.c68, t0.c68))))) WHERE (((((((t0.c68)AND(vt0.c1)))AND(vt0.c0)))<<(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68)AND(vt0.c1)))AND(vt0.c0)))<<(NULL))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON (- ((((vt0.c1, '-245687107', vt0.c0)) BETWEEN ((t0.c68, v0.c0, vt0.c0)) AND ((t0.c68, t0.c68, t0.c68))))));
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON (- ((((vt0.c1, '-245687107', vt0.c0)) BETWEEN ((t0.c68, v0.c0, vt0.c0)) AND ((t0.c68, t0.c68, t0.c68))))) WHERE (((((((t0.c68)AND(vt0.c1)))AND(vt0.c0)))<<(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68)AND(vt0.c1)))AND(vt0.c0)))<<(NULL))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON (- ((((vt0.c1, '-245687107', vt0.c0)) BETWEEN ((t0.c68, v0.c0, vt0.c0)) AND ((t0.c68, t0.c68, t0.c68))))));
SELECT ALL * FROM t0, v0, vt0 WHERE (TRIM(DISTINCT CAST(v0.c0 AS TEXT), CAST(NULL AS NUMERIC))) ORDER BY (('1930794550') ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(v0.c0 AS TEXT), CAST(NULL AS NUMERIC))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (('1930794550') ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0 WHERE (TRIM(DISTINCT CAST(v0.c0 AS TEXT), CAST(NULL AS NUMERIC))) ORDER BY (('1930794550') ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(v0.c0 AS TEXT), CAST(NULL AS NUMERIC))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (('1930794550') ISNULL) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)/(vt0.c1))) AND (CAST(v0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)/(vt0.c1))) AND (CAST(v0.c0 AS INTEGER))) ASC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)/(vt0.c1))) AND (CAST(v0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)/(vt0.c1))) AND (CAST(v0.c0 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((NULL) NOTNULL)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((CAST(vt0.c0 AS TEXT)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((NULL) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((CAST(vt0.c0 AS TEXT)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((NULL) NOTNULL)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((CAST(vt0.c0 AS TEXT)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((NULL) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((CAST(vt0.c0 AS TEXT)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((NULL) NOTNULL)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((CAST(vt0.c0 AS TEXT)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 INDEXED BY i55 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))%(((vt0.c1)IS NOT(vt0.c0))))) ORDER BY CASE WHEN ((vt0.c1)&(vt0.c1)) THEN vt0.c0 ELSE ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)) END, (((v0.c0, vt0.c1, vt0.c0))<>((vt0.c1, v0.c0, vt0.c1))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))%(((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 INDEXED BY i55 ORDER BY CASE WHEN ((vt0.c1)&(vt0.c1)) THEN vt0.c0 ELSE ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)) END, (((v0.c0, vt0.c1, vt0.c0))<>((vt0.c1, v0.c0, vt0.c1))) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, v0 INDEXED BY i55 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))%(((vt0.c1)IS NOT(vt0.c0))))) ORDER BY CASE WHEN ((vt0.c1)&(vt0.c1)) THEN vt0.c0 ELSE ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)) END, (((v0.c0, vt0.c1, vt0.c0))<>((vt0.c1, v0.c0, vt0.c1))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))%(((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 INDEXED BY i55 ORDER BY CASE WHEN ((vt0.c1)&(vt0.c1)) THEN vt0.c0 ELSE ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)) END, (((v0.c0, vt0.c1, vt0.c0))<>((vt0.c1, v0.c0, vt0.c1))) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT)) ORDER BY CASE WHEN (- (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (- (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT)) ORDER BY CASE WHEN (- (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (- (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c0 IN (v0.c0)))<=(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0)))<=(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c0 IN (v0.c0)))<=(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0)))<=(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) ISNULL)) ORDER BY (~ (v0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) ISNULL)) ORDER BY (~ (v0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c0)) DESC  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE ((((vt0.c0)IS('Kd믨o\nG')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS('Kd믨o\nG')) IN ())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE ((((vt0.c0)IS('Kd믨o\nG')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS('Kd믨o\nG')) IN ())) IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE ((((vt0.c0)IS('Kd믨o\nG')) IN ()));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN v0 ON (- (((((t0.c68)AND(-5.32438636E8)))AND(vt0.c0)))) WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((0.42874203347042583)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))AND(vt0.c1)))) AND (((vt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((((((((0.42874203347042583)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))AND(vt0.c1)))) AND (((vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON (- (((((t0.c68)AND(-5.32438636E8)))AND(vt0.c0)))));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN v0 ON (- (((((t0.c68)AND(-5.32438636E8)))AND(vt0.c0)))) WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((0.42874203347042583)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))AND(vt0.c1)))) AND (((vt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((((((((0.42874203347042583)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))AND(vt0.c1)))) AND (((vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON (- (((((t0.c68)AND(-5.32438636E8)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST('땑#^ W&' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('땑#^ W&' AS INTEGER)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST('땑#^ W&' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('땑#^ W&' AS INTEGER)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST('땑#^ W&' AS INTEGER));
SELECT COUNT(*) FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, NULL, -7.85106134E8))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, NULL, -7.85106134E8)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, NULL, -7.85106134E8))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, NULL, -7.85106134E8)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((((((((((v0.c0)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR('1499769400')))OR((('1') NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((((vt0.c0)OR(vt0.c1)))OR(t0.c68)))) INNER JOIN t0 ON (NOT ((~ (v0.c0)))) WHERE (((((((((((t0.c68)<(v0.c0)))OR('464463144')))AND(((vt0.c1)LIKE(t0.c68)))))OR(((t0.c68)+(vt0.c1)))))OR(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((CAST(0.9090900885819483 AS INTEGER))>(((vt0.c0)<=(t0.c68)))) DESC, CAST(v0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, ((((x'')OR(vt0.c0 COLLATE BINARY)))AND(HEX(vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c68)<(v0.c0)))OR('464463144')))AND(((vt0.c1)LIKE(t0.c68)))))OR(((t0.c68)+(vt0.c1)))))OR(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((((((((((v0.c0)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR('1499769400')))OR((('1') NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((((vt0.c0)OR(vt0.c1)))OR(t0.c68)))) INNER JOIN t0 ON (NOT ((~ (v0.c0)))) ORDER BY ((CAST(0.9090900885819483 AS INTEGER))>(((vt0.c0)<=(t0.c68)))) DESC, CAST(v0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, ((((x'')OR(vt0.c0 COLLATE BINARY)))AND(HEX(vt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((((((((((((v0.c0)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR('1499769400')))OR((('1') NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((((vt0.c0)OR(vt0.c1)))OR(t0.c68)))) INNER JOIN t0 ON (NOT ((~ (v0.c0)))) WHERE (((((((((((t0.c68)<(v0.c0)))OR('464463144')))AND(((vt0.c1)LIKE(t0.c68)))))OR(((t0.c68)+(vt0.c1)))))OR(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((CAST(0.9090900885819483 AS INTEGER))>(((vt0.c0)<=(t0.c68)))) DESC, CAST(v0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, ((((x'')OR(vt0.c0 COLLATE BINARY)))AND(HEX(vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c68)<(v0.c0)))OR('464463144')))AND(((vt0.c1)LIKE(t0.c68)))))OR(((t0.c68)+(vt0.c1)))))OR(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((((((((((v0.c0)AND(vt0.c0)))OR(t0.c68)))AND(vt0.c0)))OR('1499769400')))OR((('1') NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((((vt0.c0)OR(vt0.c1)))OR(t0.c68)))) INNER JOIN t0 ON (NOT ((~ (v0.c0)))) ORDER BY ((CAST(0.9090900885819483 AS INTEGER))>(((vt0.c0)<=(t0.c68)))) DESC, CAST(v0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, ((((x'')OR(vt0.c0 COLLATE BINARY)))AND(HEX(vt0.c0))) DESC  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (NULL) ORDER BY (- (rtreenode(vt0.c1, t0.c68))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (- (rtreenode(vt0.c1, t0.c68))) DESC);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (NULL) ORDER BY (- (rtreenode(vt0.c1, t0.c68))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (- (rtreenode(vt0.c1, t0.c68))) DESC);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (NULL) ORDER BY (- (rtreenode(vt0.c1, t0.c68))) DESC;
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (t0.c68) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN v0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN v0.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (t0.c68) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN v0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN v0.c0 COLLATE RTRIM END);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0, (v0.c0 IN ()))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, v0.c0, CAST(v0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0, (v0.c0 IN ()))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, v0.c0, CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0, (v0.c0 IN ()))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, v0.c0, CAST(v0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0, (v0.c0 IN ()))) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, v0.c0, CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY (((((t0.c68)<(t0.c68)), CAST(t0.c68 AS TEXT), (t0.c68 IN ())))>=((NULL COLLATE NOCASE, ((((t0.c68)AND(t0.c68)))AND(t0.c68)), (+ (t0.c68))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c68)<(t0.c68)), CAST(t0.c68 AS TEXT), (t0.c68 IN ())))>=((NULL COLLATE NOCASE, ((((t0.c68)AND(t0.c68)))AND(t0.c68)), (+ (t0.c68))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY (((((t0.c68)<(t0.c68)), CAST(t0.c68 AS TEXT), (t0.c68 IN ())))>=((NULL COLLATE NOCASE, ((((t0.c68)AND(t0.c68)))AND(t0.c68)), (+ (t0.c68))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c68)<(t0.c68)), CAST(t0.c68 AS TEXT), (t0.c68 IN ())))>=((NULL COLLATE NOCASE, ((((t0.c68)AND(t0.c68)))AND(t0.c68)), (+ (t0.c68))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY (((((t0.c68)<(t0.c68)), CAST(t0.c68 AS TEXT), (t0.c68 IN ())))>=((NULL COLLATE NOCASE, ((((t0.c68)AND(t0.c68)))AND(t0.c68)), (+ (t0.c68))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE ((((((v0.c0, v0.c0, t0.c68)) NOT BETWEEN ((t0.c68, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))>=(((t0.c68) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(t0.c68 COLLATE BINARY AS INTEGER), ((((v0.c0)/(v0.c0))) BETWEEN (0.613682139942754) AND (IFNULL(v0.c0, t0.c68))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, t0.c68)) NOT BETWEEN ((t0.c68, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))>=(((t0.c68) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(t0.c68 COLLATE BINARY AS INTEGER), ((((v0.c0)/(v0.c0))) BETWEEN (0.613682139942754) AND (IFNULL(v0.c0, t0.c68))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((((v0.c0, v0.c0, t0.c68)) NOT BETWEEN ((t0.c68, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))>=(((t0.c68) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(t0.c68 COLLATE BINARY AS INTEGER), ((((v0.c0)/(v0.c0))) BETWEEN (0.613682139942754) AND (IFNULL(v0.c0, t0.c68))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, t0.c68)) NOT BETWEEN ((t0.c68, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))>=(((t0.c68) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(t0.c68 COLLATE BINARY AS INTEGER), ((((v0.c0)/(v0.c0))) BETWEEN (0.613682139942754) AND (IFNULL(v0.c0, t0.c68))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (HEX(DISTINCT ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (HEX(DISTINCT ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((vt0.c1) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN t0.c68 END) AND (((t0.c68) IS TRUE)))) ORDER BY ((((x'') IS TRUE))||((+ (vt0.c0)))) DESC, ((1148868102)&((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN t0.c68 END) AND (((t0.c68) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((x'') IS TRUE))||((+ (vt0.c0)))) DESC, ((1148868102)&((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((vt0.c1) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN t0.c68 END) AND (((t0.c68) IS TRUE)))) ORDER BY ((((x'') IS TRUE))||((+ (vt0.c0)))) DESC, ((1148868102)&((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN t0.c68 END) AND (((t0.c68) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((x'') IS TRUE))||((+ (vt0.c0)))) DESC, ((1148868102)&((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))))) DESC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT vt0.c1, vt0.c1) COLLATE NOCASE COLLATE RTRIM CROSS JOIN t0 ON vt0.c0 WHERE (CASE WHEN (vt0.c1 IN (vt0.c1)) THEN x'' WHEN ((((0.3807982376844258)OR(vt0.c0)))AND(vt0.c1)) THEN TYPEOF(vt0.c0) WHEN json_object(v0.c0, vt0.c0, vt0.c0, t0.c68) THEN (~ (vt0.c0)) ELSE (vt0.c1 IN (v0.c0)) END) ORDER BY (((((((t0.c68)OR(0Xffffffffe78b2c8f)))OR(vt0.c1))))<=((((vt0.c0) ISNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN (vt0.c1)) THEN x'' WHEN ((((0.3807982376844258)OR(vt0.c0)))AND(vt0.c1)) THEN TYPEOF(vt0.c0) WHEN json_object(v0.c0, vt0.c0, vt0.c0, t0.c68) THEN (~ (vt0.c0)) ELSE (vt0.c1 IN (v0.c0)) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT vt0.c1, vt0.c1) COLLATE NOCASE COLLATE RTRIM CROSS JOIN t0 ON vt0.c0 ORDER BY (((((((t0.c68)OR(0xffffffffe78b2c8f)))OR(vt0.c1))))<=((((vt0.c0) ISNULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT vt0.c1, vt0.c1) COLLATE NOCASE COLLATE RTRIM CROSS JOIN t0 ON vt0.c0 WHERE (CASE WHEN (vt0.c1 IN (vt0.c1)) THEN x'' WHEN ((((0.3807982376844258)OR(vt0.c0)))AND(vt0.c1)) THEN TYPEOF(vt0.c0) WHEN json_object(v0.c0, vt0.c0, vt0.c0, t0.c68) THEN (~ (vt0.c0)) ELSE (vt0.c1 IN (v0.c0)) END) ORDER BY (((((((t0.c68)OR(0Xffffffffe78b2c8f)))OR(vt0.c1))))<=((((vt0.c0) ISNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN (vt0.c1)) THEN x'' WHEN ((((0.3807982376844258)OR(vt0.c0)))AND(vt0.c1)) THEN TYPEOF(vt0.c0) WHEN json_object(v0.c0, vt0.c0, vt0.c0, t0.c68) THEN (~ (vt0.c0)) ELSE (vt0.c1 IN (v0.c0)) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT vt0.c1, vt0.c1) COLLATE NOCASE COLLATE RTRIM CROSS JOIN t0 ON vt0.c0 ORDER BY (((((((t0.c68)OR(0xffffffffe78b2c8f)))OR(vt0.c1))))<=((((vt0.c0) ISNULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT vt0.c1, vt0.c1) COLLATE NOCASE COLLATE RTRIM CROSS JOIN t0 ON vt0.c0 WHERE (CASE WHEN (vt0.c1 IN (vt0.c1)) THEN x'' WHEN ((((0.3807982376844258)OR(vt0.c0)))AND(vt0.c1)) THEN TYPEOF(vt0.c0) WHEN json_object(v0.c0, vt0.c0, vt0.c0, t0.c68) THEN (~ (vt0.c0)) ELSE (vt0.c1 IN (v0.c0)) END) ORDER BY (((((((t0.c68)OR(0Xffffffffe78b2c8f)))OR(vt0.c1))))<=((((vt0.c0) ISNULL)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN t0.c68 THEN NULL END)||(((vt0.c1) BETWEEN (NULL) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c68 THEN NULL END)||(((vt0.c1) BETWEEN (NULL) AND (t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN t0.c68 THEN NULL END)||(((vt0.c1) BETWEEN (NULL) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c68 THEN NULL END)||(((vt0.c1) BETWEEN (NULL) AND (t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN t0.c68 THEN NULL END)||(((vt0.c1) BETWEEN (NULL) AND (t0.c68)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)<<(t0.c68)))||(((t0.c68)<>(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)<<(t0.c68)))||(((t0.c68)!=(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)<<(t0.c68)))||(((t0.c68)<>(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)<<(t0.c68)))||(((t0.c68)!=(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)<<(t0.c68)))||(((t0.c68)<>(t0.c68)))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((((vt0.c1)) BETWEEN ((t0.c68)) AND ((x'd0b1'))))LIKE((((t0.c68, vt0.c1, vt0.c1)) NOT BETWEEN ((t0.c68, vt0.c1, vt0.c1)) AND (('1201128430', t0.c68, t0.c68))))) WHERE ((NOT (((t0.c68) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c68 THEN x'' END));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c68) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((vt0.c1)) BETWEEN ((t0.c68)) AND ((x'd0b1'))))LIKE((((t0.c68, vt0.c1, vt0.c1)) NOT BETWEEN ((t0.c68, vt0.c1, vt0.c1)) AND (('1201128430', t0.c68, t0.c68))))) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c68 THEN x'' END)));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((((vt0.c1)) BETWEEN ((t0.c68)) AND ((x'd0b1'))))LIKE((((t0.c68, vt0.c1, vt0.c1)) NOT BETWEEN ((t0.c68, vt0.c1, vt0.c1)) AND (('1201128430', t0.c68, t0.c68))))) WHERE ((NOT (((t0.c68) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c68 THEN x'' END));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c68) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((vt0.c1)) BETWEEN ((t0.c68)) AND ((x'd0b1'))))LIKE((((t0.c68, vt0.c1, vt0.c1)) NOT BETWEEN ((t0.c68, vt0.c1, vt0.c1)) AND (('1201128430', t0.c68, t0.c68))))) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c68 THEN x'' END)));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((((vt0.c1)) BETWEEN ((t0.c68)) AND ((x'd0b1'))))LIKE((((t0.c68, vt0.c1, vt0.c1)) NOT BETWEEN ((t0.c68, vt0.c1, vt0.c1)) AND (('1201128430', t0.c68, t0.c68))))) WHERE ((NOT (((t0.c68) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c68 THEN x'' END));
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0)&(v0.c0)))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0)LIKE(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0)&(v0.c0)))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0)LIKE(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0)&(v0.c0)))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0)LIKE(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0)&(v0.c0)))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0)LIKE(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM t0 WHERE (((t0.c68 COLLATE NOCASE) NOT BETWEEN (((x'') NOT BETWEEN (t0.c68) AND (''))) AND ((~ (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE NOCASE) NOT BETWEEN (((x'') NOT BETWEEN (t0.c68) AND (''))) AND ((~ (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c68 COLLATE NOCASE) NOT BETWEEN (((x'') NOT BETWEEN (t0.c68) AND (''))) AND ((~ (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE NOCASE) NOT BETWEEN (((x'') NOT BETWEEN (t0.c68) AND (''))) AND ((~ (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c68 COLLATE NOCASE) NOT BETWEEN (((x'') NOT BETWEEN (t0.c68) AND (''))) AND ((~ (t0.c68)))));
SELECT * FROM v0, t0, vt0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(v0.c0))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(v0.c0))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0 WHERE ('1751597428');
SELECT SUM(count) FROM (SELECT ALL (('1751597428') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('1751597428');
SELECT SUM(count) FROM (SELECT ALL (('1751597428') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('1751597428');
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (CAST(vt0.c1 AS TEXT) IN (v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON '' COLLATE BINARY WHERE (((v0.c0)||(t0.c68)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)||(t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (CAST(vt0.c1 AS TEXT) IN (v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON '' COLLATE BINARY);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (CAST(vt0.c1 AS TEXT) IN (v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON '' COLLATE BINARY WHERE (((v0.c0)||(t0.c68)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)||(t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (CAST(vt0.c1 AS TEXT) IN (v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt0 ON '' COLLATE BINARY);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0 IN ()))AND(((v0.c0)AND(v0.c0)))))AND(((v0.c0) NOT NULL))) ASC, (((v0.c0 IN ()))LIKE(CAST(v0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))AND(((v0.c0)AND(v0.c0)))))AND(((v0.c0) NOT NULL))) ASC, (((v0.c0 IN ()))LIKE(CAST(v0.c0 AS INTEGER))) ASC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0 IN ()))AND(((v0.c0)AND(v0.c0)))))AND(((v0.c0) NOT NULL))) ASC, (((v0.c0 IN ()))LIKE(CAST(v0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))AND(((v0.c0)AND(v0.c0)))))AND(((v0.c0) NOT NULL))) ASC, (((v0.c0 IN ()))LIKE(CAST(v0.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (~ (v0.c0 COLLATE RTRIM)) WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(vt0.c1)))OR(v0.c0)))OR(vt0.c1))) AND (((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(vt0.c1)))OR(v0.c0)))OR(vt0.c1))) AND (((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (~ (v0.c0 COLLATE RTRIM)) WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(vt0.c1)))OR(v0.c0)))OR(vt0.c1))) AND (((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(vt0.c1)))OR(v0.c0)))OR(vt0.c1))) AND (((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS NUMERIC)) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS NUMERIC)) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- (t0.c68 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (t0.c68 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (t0.c68 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (t0.c68 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (t0.c68 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CHAR(t0.c68) COLLATE RTRIM) ORDER BY MAX(CASE WHEN t0.c68 THEN t0.c68 END, ((t0.c68)>(850995955)), (- (v0.c0)), (- (v0.c0)), (t0.c68 IN (t0.c68)), (((v0.c0))==((t0.c68)))), (((t0.c68) BETWEEN (v0.c0) AND (v0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHAR(t0.c68) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY MAX(CASE WHEN t0.c68 THEN t0.c68 END, ((t0.c68)>(850995955)), (- (v0.c0)), (- (v0.c0)), (t0.c68 IN (t0.c68)), (((v0.c0))==((t0.c68)))), (((t0.c68) BETWEEN (v0.c0) AND (v0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CHAR(t0.c68) COLLATE RTRIM) ORDER BY MAX(CASE WHEN t0.c68 THEN t0.c68 END, ((t0.c68)>(850995955)), (- (v0.c0)), (- (v0.c0)), (t0.c68 IN (t0.c68)), (((v0.c0))==((t0.c68)))), (((t0.c68) BETWEEN (v0.c0) AND (v0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHAR(t0.c68) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY MAX(CASE WHEN t0.c68 THEN t0.c68 END, ((t0.c68)>(850995955)), (- (v0.c0)), (- (v0.c0)), (t0.c68 IN (t0.c68)), (((v0.c0))==((t0.c68)))), (((t0.c68) BETWEEN (v0.c0) AND (v0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0)==(vt0.c1)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.453787666041648) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN HEX(DISTINCT vt0.c1) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0)=(vt0.c1)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.453787666041648) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN HEX(DISTINCT vt0.c1) ELSE x'' END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0)==(vt0.c1)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.453787666041648) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN HEX(DISTINCT vt0.c1) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0)=(vt0.c1)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.453787666041648) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN HEX(DISTINCT vt0.c1) ELSE x'' END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM t0, vt0 NATURAL JOIN v0 WHERE (((v0.c0 COLLATE NOCASE)==(((vt0.c0)>=(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)=(((vt0.c0)>=(t0.c68))))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN v0);
SELECT ALL * FROM t0, vt0 NATURAL JOIN v0 WHERE (((v0.c0 COLLATE NOCASE)==(((vt0.c0)>=(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)=(((vt0.c0)>=(t0.c68))))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0 WHERE (CASE 0.0043630060375163815  WHEN 0.286790667593519 THEN t0.c68 ELSE t0.c68 END COLLATE NOCASE) ORDER BY (((((((((t0.c68 IN ()))OR('0.20989252419597848')))AND(((t0.c68)||(t0.c68)))))OR(((t0.c68) IS TRUE))))AND(((((t0.c68)AND(t0.c68)))OR(t0.c68)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE 0.0043630060375163815  WHEN 0.286790667593519 THEN t0.c68 ELSE t0.c68 END COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c68 IN ()))OR('0.20989252419597848')))AND(((t0.c68)||(t0.c68)))))OR(((t0.c68) IS TRUE))))AND(((((t0.c68)AND(t0.c68)))OR(t0.c68)))) DESC);
SELECT ALL * FROM t0 WHERE (CASE 0.0043630060375163815  WHEN 0.286790667593519 THEN t0.c68 ELSE t0.c68 END COLLATE NOCASE) ORDER BY (((((((((t0.c68 IN ()))OR('0.20989252419597848')))AND(((t0.c68)||(t0.c68)))))OR(((t0.c68) IS TRUE))))AND(((((t0.c68)AND(t0.c68)))OR(t0.c68)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE 0.0043630060375163815  WHEN 0.286790667593519 THEN t0.c68 ELSE t0.c68 END COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c68 IN ()))OR('0.20989252419597848')))AND(((t0.c68)||(t0.c68)))))OR(((t0.c68) IS TRUE))))AND(((((t0.c68)AND(t0.c68)))OR(t0.c68)))) DESC);
SELECT ALL * FROM t0 WHERE (CASE 0.0043630060375163815  WHEN 0.286790667593519 THEN t0.c68 ELSE t0.c68 END COLLATE NOCASE) ORDER BY (((((((((t0.c68 IN ()))OR('0.20989252419597848')))AND(((t0.c68)||(t0.c68)))))OR(((t0.c68) IS TRUE))))AND(((((t0.c68)AND(t0.c68)))OR(t0.c68)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM v0, t0 NOT INDEXED, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0 NOT INDEXED, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN ((((vt0.c0))<>((vt0.c1)))) AND ((((vt0.c1))==((vt0.c0)))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((((vt0.c0))<>((vt0.c1)))) AND ((((vt0.c1))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN ((((vt0.c0))<>((vt0.c1)))) AND ((((vt0.c1))==((vt0.c0)))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((((vt0.c0))<>((vt0.c1)))) AND ((((vt0.c1))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN ((((vt0.c0))<>((vt0.c1)))) AND ((((vt0.c1))==((vt0.c0)))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (PRINTF(v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((PRINTF(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (PRINTF(v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((PRINTF(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)GLOB(t0.c68))) AND (21851207)) WHERE (((ABS(x'a854')) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((ABS(x'a854')) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)GLOB(t0.c68))) AND (21851207)));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)GLOB(t0.c68))) AND (21851207)) WHERE (((ABS(x'a854')) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((ABS(x'a854')) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)GLOB(t0.c68))) AND (21851207)));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)GLOB(t0.c68))) AND (21851207)) WHERE (((ABS(x'a854')) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0)/(t0.c68)) IN ()) LEFT OUTER JOIN t0 ON ((((((((vt0.c0)OR(t0.c68)))AND(v0.c0)))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(CAST(vt0.c1 AS TEXT))) WHERE (CASE WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c68)) ELSE ((t0.c68) NOT NULL) END) ORDER BY (+ (((v0.c0)/(t0.c68)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c68)) ELSE ((t0.c68) NOT NULL) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0)/(t0.c68)) IN ()) LEFT OUTER JOIN t0 ON ((((((((vt0.c0)OR(t0.c68)))AND(v0.c0)))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(CAST(vt0.c1 AS TEXT))) ORDER BY (+ (((v0.c0)/(t0.c68)))) DESC);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0)/(t0.c68)) IN ()) LEFT OUTER JOIN t0 ON ((((((((vt0.c0)OR(t0.c68)))AND(v0.c0)))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(CAST(vt0.c1 AS TEXT))) WHERE (CASE WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c68)) ELSE ((t0.c68) NOT NULL) END) ORDER BY (+ (((v0.c0)/(t0.c68)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c68)) ELSE ((t0.c68) NOT NULL) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0)/(t0.c68)) IN ()) LEFT OUTER JOIN t0 ON ((((((((vt0.c0)OR(t0.c68)))AND(v0.c0)))OR(((vt0.c1)IS NOT(vt0.c0)))))AND(CAST(vt0.c1 AS TEXT))) ORDER BY (+ (((v0.c0)/(t0.c68)))) DESC);
SELECT * FROM vt0, v0 WHERE (((((vt0.c1) NOT NULL))&(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY (((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL))&(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) DESC);
SELECT * FROM vt0, v0 WHERE (((((vt0.c1) NOT NULL))&(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY (((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL))&(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) DESC);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((('-1852754588')) BETWEEN ((CASE WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN v0.c0 END)) AND ((MAX(t0.c68, v0.c0, t0.c68, v0.c0)))) WHERE (CAST((+ (t0.c68)) AS BLOB)) ORDER BY ((((((v0.c0)OR(t0.c68)))OR(t0.c68)))/(t0.c68 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c68)) AS BLOB)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((('-1852754588')) BETWEEN ((CASE WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN v0.c0 END)) AND ((MAX(t0.c68, v0.c0, t0.c68, v0.c0)))) ORDER BY ((((((v0.c0)OR(t0.c68)))OR(t0.c68)))/(t0.c68 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((('-1852754588')) BETWEEN ((CASE WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN v0.c0 END)) AND ((MAX(t0.c68, v0.c0, t0.c68, v0.c0)))) WHERE (CAST((+ (t0.c68)) AS BLOB)) ORDER BY ((((((v0.c0)OR(t0.c68)))OR(t0.c68)))/(t0.c68 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c68)) AS BLOB)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((('-1852754588')) BETWEEN ((CASE WHEN v0.c0 THEN t0.c68 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN v0.c0 END)) AND ((MAX(t0.c68, v0.c0, t0.c68, v0.c0)))) ORDER BY ((((((v0.c0)OR(t0.c68)))OR(t0.c68)))/(t0.c68 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN v0 ON '0.8247072821740434' WHERE (((((v0.c0)<<(t0.c68))) IS TRUE)) ORDER BY INSTR(v0.c0, t0.c68) COLLATE NOCASE  NULLS FIRST, (((vt0.c0)) BETWEEN ((0Xffffffffe11b524f)) AND ((1646124706))) COLLATE NOCASE ASC  NULLS LAST, ((((CAST(t0.c68 AS REAL))OR((~ (vt0.c0)))))OR(t0.c68))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<<(t0.c68))) IS TRUE)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 INNER JOIN v0 ON '0.8247072821740434' ORDER BY INSTR(v0.c0, t0.c68) COLLATE NOCASE  NULLS FIRST, (((vt0.c0)) BETWEEN ((0xffffffffe11b524f)) AND ((1646124706))) COLLATE NOCASE ASC  NULLS LAST, ((((CAST(t0.c68 AS REAL))OR((~ (vt0.c0)))))OR(t0.c68))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN v0 ON '0.8247072821740434' WHERE (((((v0.c0)<<(t0.c68))) IS TRUE)) ORDER BY INSTR(v0.c0, t0.c68) COLLATE NOCASE  NULLS FIRST, (((vt0.c0)) BETWEEN ((0Xffffffffe11b524f)) AND ((1646124706))) COLLATE NOCASE ASC  NULLS LAST, ((((CAST(t0.c68 AS REAL))OR((~ (vt0.c0)))))OR(t0.c68))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<<(t0.c68))) IS TRUE)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 INNER JOIN v0 ON '0.8247072821740434' ORDER BY INSTR(v0.c0, t0.c68) COLLATE NOCASE  NULLS FIRST, (((vt0.c0)) BETWEEN ((0xffffffffe11b524f)) AND ((1646124706))) COLLATE NOCASE ASC  NULLS LAST, ((((CAST(t0.c68 AS REAL))OR((~ (vt0.c0)))))OR(t0.c68))  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)<>((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c1, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)!=((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c1, v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)<>((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c1, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)!=((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt0.c1, v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM t0, v0 WHERE ((((((((((v0.c0 IN ()))OR(t0.c68)))OR(((((t0.c68)AND(v0.c0)))OR(t0.c68)))))OR(CASE v0.c0  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END)))AND((((0.8846901609853451, t0.c68, t0.c68))!=((v0.c0, v0.c0, t0.c68))))));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN ()))OR(t0.c68)))OR(((((t0.c68)AND(v0.c0)))OR(t0.c68)))))OR(CASE v0.c0  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END)))AND((((0.8846901609853451, t0.c68, t0.c68))!=((v0.c0, v0.c0, t0.c68)))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((((((((v0.c0 IN ()))OR(t0.c68)))OR(((((t0.c68)AND(v0.c0)))OR(t0.c68)))))OR(CASE v0.c0  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END)))AND((((0.8846901609853451, t0.c68, t0.c68))!=((v0.c0, v0.c0, t0.c68))))));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN ()))OR(t0.c68)))OR(((((t0.c68)AND(v0.c0)))OR(t0.c68)))))OR(CASE v0.c0  WHEN v0.c0 THEN t0.c68 ELSE v0.c0 END)))AND((((0.8846901609853451, t0.c68, t0.c68))!=((v0.c0, v0.c0, t0.c68)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM vt0 WHERE (UPPER((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ORDER BY (~ (((vt0.c1) BETWEEN (vt0.c1) AND (NULL))))  NULLS FIRST, CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)  NULLS LAST, x'' ASC;
SELECT SUM(count) FROM (SELECT ((UPPER((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c1) BETWEEN (vt0.c1) AND (NULL))))  NULLS FIRST, CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)  NULLS LAST, x'' ASC);
SELECT ALL * FROM vt0 WHERE (UPPER((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ORDER BY (~ (((vt0.c1) BETWEEN (vt0.c1) AND (NULL))))  NULLS FIRST, CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)  NULLS LAST, x'' ASC;
SELECT SUM(count) FROM (SELECT ((UPPER((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c1) BETWEEN (vt0.c1) AND (NULL))))  NULLS FIRST, CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)  NULLS LAST, x'' ASC);
SELECT ALL * FROM vt0 WHERE (UPPER((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ORDER BY (~ (((vt0.c1) BETWEEN (vt0.c1) AND (NULL))))  NULLS FIRST, CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)  NULLS LAST, x'' ASC;
SELECT ALL * FROM v0 WHERE (((v0.c0)GLOB(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY '*]N_';
SELECT SUM(count) FROM (SELECT ((((v0.c0)GLOB(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY '*]N_');
SELECT ALL * FROM v0 WHERE (((v0.c0)GLOB(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY '*]N_';
SELECT SUM(count) FROM (SELECT ((((v0.c0)GLOB(((NULL) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY '*]N_');
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)==(vt0.c0)))==('-379420283')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)==(vt0.c0)))==('-379420283'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)==(vt0.c0)))==('-379420283')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)==(vt0.c0)))==('-379420283'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)==(vt0.c0)))==('-379420283')));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN v0 ON (((- (t0.c68)))OR(vt0.c0)) WHERE (((((((((v0.c0 COLLATE BINARY)AND((v0.c0 IN ()))))AND('')))AND(TRIM(DISTINCT vt0.c0))))AND(((vt0.c1)<<(v0.c0))))) ORDER BY v0.c0 ASC  NULLS FIRST, CASE ((((((((t0.c68)AND(x'')))OR(1.950535533E9)))OR(vt0.c1)))AND(vt0.c0))  WHEN (vt0.c0 IN ()) THEN (- (t0.c68)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE BINARY)AND((v0.c0 IN ()))))AND('')))AND(TRIM(DISTINCT vt0.c0))))AND(((vt0.c1)<<(v0.c0))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON (((- (t0.c68)))OR(vt0.c0)) ORDER BY v0.c0 ASC  NULLS FIRST, CASE ((((((((t0.c68)AND(x'')))OR(1.950535533E9)))OR(vt0.c1)))AND(vt0.c0))  WHEN (vt0.c0 IN ()) THEN (- (t0.c68)) END ASC);
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN v0 ON (((- (t0.c68)))OR(vt0.c0)) WHERE (((((((((v0.c0 COLLATE BINARY)AND((v0.c0 IN ()))))AND('')))AND(TRIM(DISTINCT vt0.c0))))AND(((vt0.c1)<<(v0.c0))))) ORDER BY v0.c0 ASC  NULLS FIRST, CASE ((((((((t0.c68)AND(x'')))OR(1.950535533E9)))OR(vt0.c1)))AND(vt0.c0))  WHEN (vt0.c0 IN ()) THEN (- (t0.c68)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE BINARY)AND((v0.c0 IN ()))))AND('')))AND(TRIM(DISTINCT vt0.c0))))AND(((vt0.c1)<<(v0.c0))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON (((- (t0.c68)))OR(vt0.c0)) ORDER BY v0.c0 ASC  NULLS FIRST, CASE ((((((((t0.c68)AND(x'')))OR(1.950535533E9)))OR(vt0.c1)))AND(vt0.c0))  WHEN (vt0.c0 IN ()) THEN (- (t0.c68)) END ASC);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c1)))|(CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY COALESCE(DISTINCT vt0.c0, vt0.c1) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c1)))|(CASE WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT vt0.c0, vt0.c1) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c1)))|(CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY COALESCE(DISTINCT vt0.c0, vt0.c1) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c1)))|(CASE WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT vt0.c0, vt0.c1) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c1)))|(CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY COALESCE(DISTINCT vt0.c0, vt0.c1) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE ((vt0.c1)>=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c1 AS REAL) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN vt0.c1 COLLATE NOCASE WHEN v0.c0 COLLATE NOCASE THEN vt0.c0 ELSE vt0.c1 END WHERE (IFNULL(v0.c0, (v0.c0 IN (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(v0.c0, (v0.c0 IN (vt0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE ((vt0.c1)>=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c1 AS REAL) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN vt0.c1 COLLATE NOCASE WHEN v0.c0 COLLATE NOCASE THEN vt0.c0 ELSE vt0.c1 END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE ((vt0.c1)>=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c1 AS REAL) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN vt0.c1 COLLATE NOCASE WHEN v0.c0 COLLATE NOCASE THEN vt0.c0 ELSE vt0.c1 END WHERE (IFNULL(v0.c0, (v0.c0 IN (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(v0.c0, (v0.c0 IN (vt0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE ((vt0.c1)>=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c1 AS REAL) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN vt0.c1 COLLATE NOCASE WHEN v0.c0 COLLATE NOCASE THEN vt0.c0 ELSE vt0.c1 END);
SELECT COUNT(*) FROM vt0 WHERE (-9223372036854775808);
SELECT SUM(count) FROM (SELECT ALL ((-9223372036854775808) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (-9223372036854775808);
SELECT SUM(count) FROM (SELECT ALL ((-9223372036854775808) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (-9223372036854775808);
SELECT COUNT(*) FROM t0, v0 WHERE ((((((+ (t0.c68)))OR(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))OR((((0.607230520571174)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((((((((((CAST(v0.c0 AS TEXT))OR(CAST(v0.c0 AS BLOB))))AND(((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68)))))OR(((t0.c68)LIKE(t0.c68)))))AND(LOWER(DISTINCT v0.c0))))OR(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN t0.c68 END)))OR(CASE WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END)) DESC, CASE WHEN ((((v0.c0)OR(t0.c68)))OR(v0.c0)) THEN CAST(t0.c68 AS BLOB) WHEN v0.c0 THEN CAST(t0.c68 AS REAL) WHEN (((v0.c0))<((v0.c0))) THEN v0.c0 ELSE (~ (v0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c68)))OR(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))OR((((0.607230520571174)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((((((CAST(v0.c0 AS TEXT))OR(CAST(v0.c0 AS BLOB))))AND(((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68)))))OR(((t0.c68)LIKE(t0.c68)))))AND(LOWER(DISTINCT v0.c0))))OR(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN t0.c68 END)))OR(CASE WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END)) DESC, CASE WHEN ((((v0.c0)OR(t0.c68)))OR(v0.c0)) THEN CAST(t0.c68 AS BLOB) WHEN v0.c0 THEN CAST(t0.c68 AS REAL) WHEN (((v0.c0))<((v0.c0))) THEN v0.c0 ELSE (~ (v0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((((+ (t0.c68)))OR(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))OR((((0.607230520571174)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((((((((((CAST(v0.c0 AS TEXT))OR(CAST(v0.c0 AS BLOB))))AND(((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68)))))OR(((t0.c68)LIKE(t0.c68)))))AND(LOWER(DISTINCT v0.c0))))OR(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN t0.c68 END)))OR(CASE WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END)) DESC, CASE WHEN ((((v0.c0)OR(t0.c68)))OR(v0.c0)) THEN CAST(t0.c68 AS BLOB) WHEN v0.c0 THEN CAST(t0.c68 AS REAL) WHEN (((v0.c0))<((v0.c0))) THEN v0.c0 ELSE (~ (v0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c68)))OR(CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)))OR((((0.607230520571174)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((((((CAST(v0.c0 AS TEXT))OR(CAST(v0.c0 AS BLOB))))AND(((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68)))))OR(((t0.c68)LIKE(t0.c68)))))AND(LOWER(DISTINCT v0.c0))))OR(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN v0.c0 WHEN v0.c0 THEN t0.c68 END)))OR(CASE WHEN t0.c68 THEN v0.c0 ELSE v0.c0 END)) DESC, CASE WHEN ((((v0.c0)OR(t0.c68)))OR(v0.c0)) THEN CAST(t0.c68 AS BLOB) WHEN v0.c0 THEN CAST(t0.c68 AS REAL) WHEN (((v0.c0))<((v0.c0))) THEN v0.c0 ELSE (~ (v0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'f441');
SELECT SUM(count) FROM (SELECT ((x'f441') IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'f441');
SELECT SUM(count) FROM (SELECT ((x'f441') IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'f441');
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT t0.c68)) IS FALSE) INNER JOIN t0 ON CASE WHEN (- ('-1450679966')) THEN vt0.c1 COLLATE RTRIM END WHERE (TRIM(((t0.c68)<(vt0.c1)), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t0.c68)<(vt0.c1)), (vt0.c0 IN ()))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT t0.c68)) IS FALSE) INNER JOIN t0 ON CASE WHEN (- ('-1450679966')) THEN vt0.c1 COLLATE RTRIM END);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT t0.c68)) IS FALSE) INNER JOIN t0 ON CASE WHEN (- ('-1450679966')) THEN vt0.c1 COLLATE RTRIM END WHERE (TRIM(((t0.c68)<(vt0.c1)), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t0.c68)<(vt0.c1)), (vt0.c0 IN ()))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((TYPEOF(DISTINCT t0.c68)) IS FALSE) INNER JOIN t0 ON CASE WHEN (- ('-1450679966')) THEN vt0.c1 COLLATE RTRIM END);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)*(t0.c68))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)*(t0.c68))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)*(t0.c68))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)*(t0.c68))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)*(t0.c68))) IS TRUE));
SELECT * FROM v0, t0 WHERE (((t0.c68 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c68 IN ()) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((t0.c68 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c68 IN ()) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((t0.c68 IN ()) IN ()));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CASE v0.c0  WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CASE v0.c0  WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN t0.c68 THEN t0.c68 ELSE v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c68);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (t0.c68 IN ()) FULL OUTER JOIN t0 ON CAST(CASE v0.c0  WHEN t0.c68 THEN t0.c68 END AS NUMERIC) WHERE ((((+ (vt0.c0)))AND(((v0.c0) IS FALSE)))) ORDER BY CAST(((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0)) AS REAL)  NULLS LAST, ((UNLIKELY(vt0.c0)) ISNULL) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))AND(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (t0.c68 IN ()) FULL OUTER JOIN t0 ON CAST(CASE v0.c0  WHEN t0.c68 THEN t0.c68 END AS NUMERIC) ORDER BY CAST(((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0)) AS REAL)  NULLS LAST, ((UNLIKELY(vt0.c0)) ISNULL) DESC, vt0.c0);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (t0.c68 IN ()) FULL OUTER JOIN t0 ON CAST(CASE v0.c0  WHEN t0.c68 THEN t0.c68 END AS NUMERIC) WHERE ((((+ (vt0.c0)))AND(((v0.c0) IS FALSE)))) ORDER BY CAST(((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0)) AS REAL)  NULLS LAST, ((UNLIKELY(vt0.c0)) ISNULL) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))AND(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (t0.c68 IN ()) FULL OUTER JOIN t0 ON CAST(CASE v0.c0  WHEN t0.c68 THEN t0.c68 END AS NUMERIC) ORDER BY CAST(((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0)) AS REAL)  NULLS LAST, ((UNLIKELY(vt0.c0)) ISNULL) DESC, vt0.c0);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (t0.c68 IN ()) FULL OUTER JOIN t0 ON CAST(CASE v0.c0  WHEN t0.c68 THEN t0.c68 END AS NUMERIC) WHERE ((((+ (vt0.c0)))AND(((v0.c0) IS FALSE)))) ORDER BY CAST(((t0.c68) NOT BETWEEN (t0.c68) AND (v0.c0)) AS REAL)  NULLS LAST, ((UNLIKELY(vt0.c0)) ISNULL) DESC, vt0.c0;
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((+ (((vt0.c1)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((+ (((vt0.c1)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((+ (((vt0.c1)GLOB(vt0.c1)))));
SELECT * FROM vt0 INNER JOIN v0 ON CASE ((vt0.c0) IS TRUE)  WHEN ((t0.c68) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE WHEN t0.c68 THEN vt0.c0 END WHEN ((v0.c0)=(vt0.c1)) THEN CAST(vt0.c1 AS TEXT) WHEN '1594547406' THEN TYPEOF(DISTINCT vt0.c1) END FULL OUTER JOIN t0 ON ((CAST(vt0.c1 AS REAL)) NOT BETWEEN ((('')<(t0.c68))) AND (((v0.c0)>>(vt0.c0)))) WHERE ((('-674881820')%(vt0.c0 COLLATE BINARY))) ORDER BY (((((NOT (t0.c68)))AND(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-674881820')%(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE ((vt0.c0) IS TRUE)  WHEN ((t0.c68) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE WHEN t0.c68 THEN vt0.c0 END WHEN ((v0.c0)=(vt0.c1)) THEN CAST(vt0.c1 AS TEXT) WHEN '1594547406' THEN TYPEOF(DISTINCT vt0.c1) END FULL OUTER JOIN t0 ON ((CAST(vt0.c1 AS REAL)) NOT BETWEEN ((('')<(t0.c68))) AND (((v0.c0)>>(vt0.c0)))) ORDER BY (((((NOT (t0.c68)))AND(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))) DESC);
SELECT * FROM vt0 INNER JOIN v0 ON CASE ((vt0.c0) IS TRUE)  WHEN ((t0.c68) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE WHEN t0.c68 THEN vt0.c0 END WHEN ((v0.c0)=(vt0.c1)) THEN CAST(vt0.c1 AS TEXT) WHEN '1594547406' THEN TYPEOF(DISTINCT vt0.c1) END FULL OUTER JOIN t0 ON ((CAST(vt0.c1 AS REAL)) NOT BETWEEN ((('')<(t0.c68))) AND (((v0.c0)>>(vt0.c0)))) WHERE ((('-674881820')%(vt0.c0 COLLATE BINARY))) ORDER BY (((((NOT (t0.c68)))AND(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-674881820')%(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE ((vt0.c0) IS TRUE)  WHEN ((t0.c68) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE WHEN t0.c68 THEN vt0.c0 END WHEN ((v0.c0)=(vt0.c1)) THEN CAST(vt0.c1 AS TEXT) WHEN '1594547406' THEN TYPEOF(DISTINCT vt0.c1) END FULL OUTER JOIN t0 ON ((CAST(vt0.c1 AS REAL)) NOT BETWEEN ((('')<(t0.c68))) AND (((v0.c0)>>(vt0.c0)))) ORDER BY (((((NOT (t0.c68)))AND(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON (+ (((t0.c68)-(v0.c0)))) WHERE (((CASE t0.c68  WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN v0.c0 ELSE t0.c68 END) BETWEEN (((v0.c0)AND(1793718270))) AND (((t0.c68)>=(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c68  WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN v0.c0 ELSE t0.c68 END) BETWEEN (((v0.c0)AND(1793718270))) AND (((t0.c68)>=(t0.c68))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (+ (((t0.c68)-(v0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON (+ (((t0.c68)-(v0.c0)))) WHERE (((CASE t0.c68  WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN v0.c0 ELSE t0.c68 END) BETWEEN (((v0.c0)AND(1793718270))) AND (((t0.c68)>=(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c68  WHEN v0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN v0.c0 ELSE t0.c68 END) BETWEEN (((v0.c0)AND(1793718270))) AND (((t0.c68)>=(t0.c68))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (+ (((t0.c68)-(v0.c0)))));
SELECT * FROM t0 WHERE (((CAST(t0.c68 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(t0.c68 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(t0.c68 AS NUMERIC)) NOT NULL));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CAST(highlight(vt0.c1, NULL, vt0.c0, vt0.c1) AS REAL) WHERE ((((vt0.c1)*(vt0.c1)) IN ((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN v0.c0 END))) ORDER BY (NOT ((vt0.c1 IN ()))), ((vt0.c1 COLLATE RTRIM)<(CAST(vt0.c1 AS NUMERIC))), ((((0Xffffffffb50684c4)IS('|xx')))!=(CASE WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)*(vt0.c1)) IN ((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(highlight(vt0.c1, NULL, vt0.c0, vt0.c1) AS REAL) ORDER BY (NOT ((vt0.c1 IN ()))), ((vt0.c1 COLLATE RTRIM)<(CAST(vt0.c1 AS NUMERIC))), ((((0Xffffffffb50684c4)IS('|xx')))!=(CASE WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CAST(highlight(vt0.c1, NULL, vt0.c0, vt0.c1) AS REAL) WHERE ((((vt0.c1)*(vt0.c1)) IN ((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN v0.c0 END))) ORDER BY (NOT ((vt0.c1 IN ()))), ((vt0.c1 COLLATE RTRIM)<(CAST(vt0.c1 AS NUMERIC))), ((((0Xffffffffb50684c4)IS('|xx')))!=(CASE WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)*(vt0.c1)) IN ((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(highlight(vt0.c1, NULL, vt0.c0, vt0.c1) AS REAL) ORDER BY (NOT ((vt0.c1 IN ()))), ((vt0.c1 COLLATE RTRIM)<(CAST(vt0.c1 AS NUMERIC))), ((((0Xffffffffb50684c4)IS('|xx')))!=(CASE WHEN vt0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c1)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c1)))OR(v0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c1)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c1)))OR(v0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((- (vt0.c1)))<<(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((vt0.c1) BETWEEN (((vt0.c1)<<(vt0.c1))) AND (((v0.c0)<=(vt0.c0)))), ((((vt0.c0) IS TRUE))LIKE(CASE 0.7571609136224996  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END))  NULLS LAST, (+ (vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))<<(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c1) BETWEEN (((vt0.c1)<<(vt0.c1))) AND (((v0.c0)<=(vt0.c0)))), ((((vt0.c0) IS TRUE))LIKE(CASE 0.7571609136224996  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END))  NULLS LAST, (+ (vt0.c0)) ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((((- (vt0.c1)))<<(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((vt0.c1) BETWEEN (((vt0.c1)<<(vt0.c1))) AND (((v0.c0)<=(vt0.c0)))), ((((vt0.c0) IS TRUE))LIKE(CASE 0.7571609136224996  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END))  NULLS LAST, (+ (vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))<<(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c1) BETWEEN (((vt0.c1)<<(vt0.c1))) AND (((v0.c0)<=(vt0.c0)))), ((((vt0.c0) IS TRUE))LIKE(CASE 0.7571609136224996  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END))  NULLS LAST, (+ (vt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE ((((CAST('N,' AS REAL)))<((((t0.c68)IS NOT(t0.c68)))))) ORDER BY t0.c68 DESC  NULLS FIRST, CASE WHEN ((((t0.c68)AND(v0.c0)))AND(v0.c0)) THEN NULL ELSE ((v0.c0)>(v0.c0)) END  NULLS LAST, 0X393b0d10  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST('N,' AS REAL)))<((((t0.c68)IS NOT(t0.c68)))))) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c68 DESC  NULLS FIRST, CASE WHEN ((((t0.c68)AND(v0.c0)))AND(v0.c0)) THEN NULL ELSE ((v0.c0)>(v0.c0)) END  NULLS LAST, 0x393b0d10  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE ((((CAST('N,' AS REAL)))<((((t0.c68)IS NOT(t0.c68)))))) ORDER BY t0.c68 DESC  NULLS FIRST, CASE WHEN ((((t0.c68)AND(v0.c0)))AND(v0.c0)) THEN NULL ELSE ((v0.c0)>(v0.c0)) END  NULLS LAST, 0X393b0d10  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST('N,' AS REAL)))<((((t0.c68)IS NOT(t0.c68)))))) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c68 DESC  NULLS FIRST, CASE WHEN ((((t0.c68)AND(v0.c0)))AND(v0.c0)) THEN NULL ELSE ((v0.c0)>(v0.c0)) END  NULLS LAST, 0x393b0d10  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN (+ (t0.c68)) THEN x'' END WHERE (0.5755238664263892);
SELECT SUM(count) FROM (SELECT ((0.5755238664263892) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN (+ (t0.c68)) THEN x'' END);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN (+ (t0.c68)) THEN x'' END WHERE (0.5755238664263892);
SELECT SUM(count) FROM (SELECT ((0.5755238664263892) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN (+ (t0.c68)) THEN x'' END);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CASE WHEN (+ (t0.c68)) THEN x'' END WHERE (0.5755238664263892);
SELECT * FROM vt0, t0, v0 WHERE (vt0.c1) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY vt0.c1 ASC);
SELECT * FROM vt0, t0, v0 WHERE (vt0.c1) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM vt0, t0 INDEXED BY i55 WHERE (((CASE WHEN vt0.c0 THEN '' WHEN '433135139' THEN t0.c68 WHEN vt0.c1 THEN t0.c68 END) NOT BETWEEN (((t0.c68)/(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN t0.c68 WHEN vt0.c1 THEN t0.c68 WHEN vt0.c0 THEN 0.7206272073306805 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN '' WHEN '433135139' THEN t0.c68 WHEN vt0.c1 THEN t0.c68 END) NOT BETWEEN (((t0.c68)/(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN t0.c68 WHEN vt0.c1 THEN t0.c68 WHEN vt0.c0 THEN 0.7206272073306805 END))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i55);
SELECT COUNT(*) FROM vt0, t0 INDEXED BY i55 WHERE (((CASE WHEN vt0.c0 THEN '' WHEN '433135139' THEN t0.c68 WHEN vt0.c1 THEN t0.c68 END) NOT BETWEEN (((t0.c68)/(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN t0.c68 WHEN vt0.c1 THEN t0.c68 WHEN vt0.c0 THEN 0.7206272073306805 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN '' WHEN '433135139' THEN t0.c68 WHEN vt0.c1 THEN t0.c68 END) NOT BETWEEN (((t0.c68)/(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN t0.c68 WHEN vt0.c1 THEN t0.c68 WHEN vt0.c0 THEN 0.7206272073306805 END))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i55);
SELECT COUNT(*) FROM vt0, t0 INDEXED BY i55 WHERE (((CASE WHEN vt0.c0 THEN '' WHEN '433135139' THEN t0.c68 WHEN vt0.c1 THEN t0.c68 END) NOT BETWEEN (((t0.c68)/(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN t0.c68 WHEN vt0.c1 THEN t0.c68 WHEN vt0.c0 THEN 0.7206272073306805 END)));
SELECT * FROM t0 WHERE (CASE ((t0.c68) ISNULL)  WHEN IFNULL(t0.c68, t0.c68) THEN CAST(t0.c68 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c68) ISNULL)  WHEN IFNULL(t0.c68, t0.c68) THEN CAST(t0.c68 AS TEXT) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE ((t0.c68) ISNULL)  WHEN IFNULL(t0.c68, t0.c68) THEN CAST(t0.c68 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c68) ISNULL)  WHEN IFNULL(t0.c68, t0.c68) THEN CAST(t0.c68 AS TEXT) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE ((t0.c68) ISNULL)  WHEN IFNULL(t0.c68, t0.c68) THEN CAST(t0.c68 AS TEXT) END);
SELECT * FROM v0 WHERE ((((('쾗Q')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (((((((((v0.c0)AND(v0.c0)))AND(NULL)))AND(x'')))AND(v0.c0))))) ORDER BY TOTAL_CHANGES() COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('쾗Q')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (((((((((v0.c0)AND(v0.c0)))AND(NULL)))AND(x'')))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY TOTAL_CHANGES() COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((('쾗Q')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (((((((((v0.c0)AND(v0.c0)))AND(NULL)))AND(x'')))AND(v0.c0))))) ORDER BY TOTAL_CHANGES() COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('쾗Q')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN (((((((((v0.c0)AND(v0.c0)))AND(NULL)))AND(x'')))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY TOTAL_CHANGES() COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM t0, v0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY ((CASE v0.c0  WHEN t0.c68 THEN t0.c68 WHEN NULL THEN v0.c0 WHEN t0.c68 THEN v0.c0 END)=(((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY ((CASE v0.c0  WHEN t0.c68 THEN t0.c68 WHEN NULL THEN v0.c0 WHEN t0.c68 THEN v0.c0 END)==(((v0.c0) NOTNULL))));
SELECT COUNT(*) FROM t0, v0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY ((CASE v0.c0  WHEN t0.c68 THEN t0.c68 WHEN NULL THEN v0.c0 WHEN t0.c68 THEN v0.c0 END)=(((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY ((CASE v0.c0  WHEN t0.c68 THEN t0.c68 WHEN NULL THEN v0.c0 WHEN t0.c68 THEN v0.c0 END)==(((v0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((((vt0.c0))>((vt0.c1))) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE (((((vt0.c1) IS FALSE))>>(((v0.c0) ISNULL)))) ORDER BY 0X39ebfec1 ASC  NULLS LAST, (((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE))>>(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((vt0.c0))>((vt0.c1))) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) ORDER BY 0x39ebfec1 ASC  NULLS LAST, (((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((((vt0.c0))>((vt0.c1))) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE (((((vt0.c1) IS FALSE))>>(((v0.c0) ISNULL)))) ORDER BY 0X39ebfec1 ASC  NULLS LAST, (((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE))>>(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((vt0.c0))>((vt0.c1))) IN (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) ORDER BY 0x39ebfec1 ASC  NULLS LAST, (((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68)OR(t0.c68)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)OR(t0.c68)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68)OR(t0.c68)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)OR(t0.c68)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68)OR(t0.c68)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END) ORDER BY ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END) ORDER BY ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) END) ORDER BY ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))) NOTNULL)  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c68 IN ()) IN (CAST(t0.c68 AS NUMERIC), TRIM(DISTINCT t0.c68)))) ORDER BY (NOT (((t0.c68)IS NOT(t0.c68))));
SELECT SUM(count) FROM (SELECT ((((t0.c68 IN ()) IN (CAST(t0.c68 AS NUMERIC), TRIM(DISTINCT t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c68)IS NOT(t0.c68)))));
SELECT * FROM t0 WHERE (((t0.c68 IN ()) IN (CAST(t0.c68 AS NUMERIC), TRIM(DISTINCT t0.c68)))) ORDER BY (NOT (((t0.c68)IS NOT(t0.c68))));
SELECT SUM(count) FROM (SELECT ((((t0.c68 IN ()) IN (CAST(t0.c68 AS NUMERIC), TRIM(DISTINCT t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c68)IS NOT(t0.c68)))));
SELECT * FROM t0 WHERE (((t0.c68 IN ()) IN (CAST(t0.c68 AS NUMERIC), TRIM(DISTINCT t0.c68)))) ORDER BY (NOT (((t0.c68)IS NOT(t0.c68))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY t0.c68 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY t0.c68 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY t0.c68 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY t0.c68 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY t0.c68 ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c68)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c68)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c68)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c68)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c68)) AS TEXT));
SELECT ALL * FROM v0, vt0 WHERE (((((((((CAST(v0.c0 AS REAL))OR(NULL)))OR(vt0.c1 COLLATE BINARY)))OR(v0.c0)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((CAST(-2.45687107E8 AS BLOB))%(((6.9115269E8) IS FALSE)))  NULLS LAST, IFNULL((~ (x'')), ((vt0.c1)<(vt0.c0)))  NULLS LAST, '1321905023' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c0 AS REAL))OR(NULL)))OR(vt0.c1 COLLATE BINARY)))OR(v0.c0)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(-2.45687107E8 AS BLOB))%(((6.9115269E8) IS FALSE)))  NULLS LAST, IFNULL((~ (x'')), ((vt0.c1)<(vt0.c0)))  NULLS LAST, '1321905023' ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((((((((CAST(v0.c0 AS REAL))OR(NULL)))OR(vt0.c1 COLLATE BINARY)))OR(v0.c0)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((CAST(-2.45687107E8 AS BLOB))%(((6.9115269E8) IS FALSE)))  NULLS LAST, IFNULL((~ (x'')), ((vt0.c1)<(vt0.c0)))  NULLS LAST, '1321905023' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c0 AS REAL))OR(NULL)))OR(vt0.c1 COLLATE BINARY)))OR(v0.c0)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(-2.45687107E8 AS BLOB))%(((6.9115269E8) IS FALSE)))  NULLS LAST, IFNULL((~ (x'')), ((vt0.c1)<(vt0.c0)))  NULLS LAST, '1321905023' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)IS(CAST(vt0.c1 AS INTEGER)))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(vt0.c1)))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)IS(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(vt0.c1)))AND(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)IS(CAST(vt0.c1 AS INTEGER)))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(vt0.c1)))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)IS(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(vt0.c1)))AND(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)IS(CAST(vt0.c1 AS INTEGER)))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(vt0.c1)))AND(vt0.c0));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CASE WHEN (~ (v0.c0)) THEN v0.c0 ELSE (vt0.c1 IN ()) END) ORDER BY x'' COLLATE RTRIM, ' }';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (v0.c0)) THEN v0.c0 ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY x'' COLLATE RTRIM, ' }');
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CASE WHEN (~ (v0.c0)) THEN v0.c0 ELSE (vt0.c1 IN ()) END) ORDER BY x'' COLLATE RTRIM, ' }';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (v0.c0)) THEN v0.c0 ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY x'' COLLATE RTRIM, ' }');
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0, '', t0.c68))<>((vt0.c1, '1515344586', vt0.c1))) IN ())) ORDER BY ((((vt0.c1)LIKE(vt0.c1)))LIKE(vt0.c1))  NULLS LAST, ((((((vt0.c1)|(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((0Xffffffffb0d9f74e))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, '', t0.c68))<>((vt0.c1, '1515344586', vt0.c1))) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1)LIKE(vt0.c1)))LIKE(vt0.c1))  NULLS LAST, ((((((vt0.c1)|(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((0xffffffffb0d9f74e))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0, '', t0.c68))<>((vt0.c1, '1515344586', vt0.c1))) IN ())) ORDER BY ((((vt0.c1)LIKE(vt0.c1)))LIKE(vt0.c1))  NULLS LAST, ((((((vt0.c1)|(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((0Xffffffffb0d9f74e))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, '', t0.c68))<>((vt0.c1, '1515344586', vt0.c1))) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1)LIKE(vt0.c1)))LIKE(vt0.c1))  NULLS LAST, ((((((vt0.c1)|(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((0xffffffffb0d9f74e))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0, '', t0.c68))<>((vt0.c1, '1515344586', vt0.c1))) IN ())) ORDER BY ((((vt0.c1)LIKE(vt0.c1)))LIKE(vt0.c1))  NULLS LAST, ((((((vt0.c1)|(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((t0.c68)) AND ((t0.c68))))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((0Xffffffffb0d9f74e))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM v0 WHERE (((~ (v0.c0)) IN (((v0.c0)GLOB('!g')), v0.c0 COLLATE NOCASE))) ORDER BY ((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (v0.c0)) IN (((v0.c0)GLOB('!g')), v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((~ (v0.c0)) IN (((v0.c0)GLOB('!g')), v0.c0 COLLATE NOCASE))) ORDER BY ((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (v0.c0)) IN (((v0.c0)GLOB('!g')), v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN CAST(vt0.c0 AS REAL) END);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM t0 WHERE (((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68))) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((NOT (vt0.c1)))IS NOT(vt0.c0 COLLATE BINARY)) WHERE (-1.358768755E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.358768755E9) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((NOT (vt0.c1)))IS NOT(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((NOT (vt0.c1)))IS NOT(vt0.c0 COLLATE BINARY)) WHERE (-1.358768755E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.358768755E9) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((NOT (vt0.c1)))IS NOT(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((NOT (vt0.c1)))IS NOT(vt0.c0 COLLATE BINARY)) WHERE (-1.358768755E9);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((t0.c68 IN (vt0.c1))) IS TRUE)) ORDER BY 0x13f309cd COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68 IN (vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY 0X13f309cd COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((t0.c68 IN (vt0.c1))) IS TRUE)) ORDER BY 0x13f309cd COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68 IN (vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY 0X13f309cd COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON rtreenode((- (t0.c68)), ((t0.c68) NOTNULL)) INNER JOIN v0 ON CASE WHEN '1120686191' COLLATE RTRIM THEN CAST(t0.c68 AS INTEGER) WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN (vt0.c1 IN ()) WHEN vt0.c1 THEN ((vt0.c0)IS(vt0.c1)) END WHERE (CAST('-423970524' AS TEXT)) ORDER BY CASE WHEN ((-419311836) NOTNULL) THEN 'D' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('-423970524' AS TEXT)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON rtreenode((- (t0.c68)), ((t0.c68) NOTNULL)) INNER JOIN v0 ON CASE WHEN '1120686191' COLLATE RTRIM THEN CAST(t0.c68 AS INTEGER) WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN (vt0.c1 IN ()) WHEN vt0.c1 THEN ((vt0.c0)IS(vt0.c1)) END ORDER BY CASE WHEN ((-419311836) NOTNULL) THEN 'D' END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON rtreenode((- (t0.c68)), ((t0.c68) NOTNULL)) INNER JOIN v0 ON CASE WHEN '1120686191' COLLATE RTRIM THEN CAST(t0.c68 AS INTEGER) WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN (vt0.c1 IN ()) WHEN vt0.c1 THEN ((vt0.c0)IS(vt0.c1)) END WHERE (CAST('-423970524' AS TEXT)) ORDER BY CASE WHEN ((-419311836) NOTNULL) THEN 'D' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('-423970524' AS TEXT)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON rtreenode((- (t0.c68)), ((t0.c68) NOTNULL)) INNER JOIN v0 ON CASE WHEN '1120686191' COLLATE RTRIM THEN CAST(t0.c68 AS INTEGER) WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN (vt0.c1 IN ()) WHEN vt0.c1 THEN ((vt0.c0)IS(vt0.c1)) END ORDER BY CASE WHEN ((-419311836) NOTNULL) THEN 'D' END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON rtreenode((- (t0.c68)), ((t0.c68) NOTNULL)) INNER JOIN v0 ON CASE WHEN '1120686191' COLLATE RTRIM THEN CAST(t0.c68 AS INTEGER) WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END THEN (vt0.c1 IN ()) WHEN vt0.c1 THEN ((vt0.c0)IS(vt0.c1)) END WHERE (CAST('-423970524' AS TEXT)) ORDER BY CASE WHEN ((-419311836) NOTNULL) THEN 'D' END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((((vt0.c0) IS TRUE)))<=(((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) IS TRUE)))<=(((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((((vt0.c0) IS TRUE)))<=(((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) IS TRUE)))<=(((((t0.c68)) NOT BETWEEN ((v0.c0)) AND ((t0.c68))))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((((vt0.c1)||(t0.c68))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)||(t0.c68))) IS FALSE)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((((vt0.c1)||(t0.c68))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)||(t0.c68))) IS FALSE)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((((vt0.c1)||(t0.c68))) IS FALSE));
SELECT ALL * FROM v0, vt0 WHERE (((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)) COLLATE BINARY) ORDER BY (((v0.c0 IN ()))<>(LIKELY(0.5100230073142588))), '';
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN ()))!=(LIKELY(0.5100230073142588))), '');
SELECT ALL * FROM v0, vt0 WHERE (((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)) COLLATE BINARY) ORDER BY (((v0.c0 IN ()))<>(LIKELY(0.5100230073142588))), '';
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN ()))!=(LIKELY(0.5100230073142588))), '');
SELECT * FROM vt0 WHERE ((((load_extension(NULL)))>=(((((vt0.c0))<=((vt0.c0))))))) ORDER BY LIKELIHOOD(DISTINCT CAST(vt0.c1 AS BLOB), 0.8298532601250235) DESC;
SELECT SUM(count) FROM (SELECT (((((load_extension(NULL)))>=(((((vt0.c0))<=((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT CAST(vt0.c1 AS BLOB), 0.8298532601250235) DESC);
SELECT * FROM vt0 WHERE ((((load_extension(NULL)))>=(((((vt0.c0))<=((vt0.c0))))))) ORDER BY LIKELIHOOD(DISTINCT CAST(vt0.c1 AS BLOB), 0.8298532601250235) DESC;
SELECT SUM(count) FROM (SELECT (((((load_extension(NULL)))>=(((((vt0.c0))<=((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT CAST(vt0.c1 AS BLOB), 0.8298532601250235) DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY 5998576.0, (((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) ISNULL), ((NULL)IS(vt0.c1)), vt0.c1 COLLATE RTRIM, 0.6428630136002036, CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ()), LIKELY(vt0.c0), -354329574, (+ (vt0.c0)), vt0.c0))) DESC, (((((vt0.c1))==((vt0.c0)))) NOT BETWEEN (x'') AND ((((vt0.c1))==((vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 5998576.0, (((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) ISNULL), ((NULL)IS(vt0.c1)), vt0.c1 COLLATE RTRIM, 0.6428630136002036, CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ()), LIKELY(vt0.c0), -354329574, (+ (vt0.c0)), vt0.c0))) DESC, (((((vt0.c1))=((vt0.c0)))) NOT BETWEEN (x'') AND ((((vt0.c1))==((vt0.c1)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY 5998576.0, (((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) ISNULL), ((NULL)IS(vt0.c1)), vt0.c1 COLLATE RTRIM, 0.6428630136002036, CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ()), LIKELY(vt0.c0), -354329574, (+ (vt0.c0)), vt0.c0))) DESC, (((((vt0.c1))==((vt0.c0)))) NOT BETWEEN (x'') AND ((((vt0.c1))==((vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 5998576.0, (((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) ISNULL), ((NULL)IS(vt0.c1)), vt0.c1 COLLATE RTRIM, 0.6428630136002036, CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ()), LIKELY(vt0.c0), -354329574, (+ (vt0.c0)), vt0.c0))) DESC, (((((vt0.c1))=((vt0.c0)))) NOT BETWEEN (x'') AND ((((vt0.c1))==((vt0.c1)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY 5998576.0, (((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c1) ISNULL), ((NULL)IS(vt0.c1)), vt0.c1 COLLATE RTRIM, 0.6428630136002036, CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN ()), LIKELY(vt0.c0), -354329574, (+ (vt0.c0)), vt0.c0))) DESC, (((((vt0.c1))==((vt0.c0)))) NOT BETWEEN (x'') AND ((((vt0.c1))==((vt0.c1)))))  NULLS LAST;
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN 0.3975395528895498 THEN (vt0.c1 IN (vt0.c0)) ELSE v0.c0 END RIGHT OUTER JOIN vt0 ON (((t0.c68)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((v0.c0)<<(vt0.c0))))) WHERE (('-785106134' IN (((t0.c68) BETWEEN (v0.c0) AND (vt0.c1))))) ORDER BY vt0.c0  NULLS LAST, ((((((t0.c68)&(vt0.c0)))AND(((vt0.c0)>=(vt0.c1)))))OR(((0.1699203551596722)<=(vt0.c1)))) DESC  NULLS LAST, (((((t0.c68)OR(t0.c68)))AND(t0.c68)) IN (t0.c68 COLLATE RTRIM, ((vt0.c1)IS NOT(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('-785106134' IN (((t0.c68) BETWEEN (v0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN 0.3975395528895498 THEN (vt0.c1 IN (vt0.c0)) ELSE v0.c0 END RIGHT OUTER JOIN vt0 ON (((t0.c68)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((v0.c0)<<(vt0.c0))))) ORDER BY vt0.c0  NULLS LAST, ((((((t0.c68)&(vt0.c0)))AND(((vt0.c0)>=(vt0.c1)))))OR(((0.1699203551596722)<=(vt0.c1)))) DESC  NULLS LAST, (((((t0.c68)OR(t0.c68)))AND(t0.c68)) IN (t0.c68 COLLATE RTRIM, ((vt0.c1)IS NOT(vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN 0.3975395528895498 THEN (vt0.c1 IN (vt0.c0)) ELSE v0.c0 END RIGHT OUTER JOIN vt0 ON (((t0.c68)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((v0.c0)<<(vt0.c0))))) WHERE (('-785106134' IN (((t0.c68) BETWEEN (v0.c0) AND (vt0.c1))))) ORDER BY vt0.c0  NULLS LAST, ((((((t0.c68)&(vt0.c0)))AND(((vt0.c0)>=(vt0.c1)))))OR(((0.1699203551596722)<=(vt0.c1)))) DESC  NULLS LAST, (((((t0.c68)OR(t0.c68)))AND(t0.c68)) IN (t0.c68 COLLATE RTRIM, ((vt0.c1)IS NOT(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('-785106134' IN (((t0.c68) BETWEEN (v0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN 0.3975395528895498 THEN (vt0.c1 IN (vt0.c0)) ELSE v0.c0 END RIGHT OUTER JOIN vt0 ON (((t0.c68)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((v0.c0)<<(vt0.c0))))) ORDER BY vt0.c0  NULLS LAST, ((((((t0.c68)&(vt0.c0)))AND(((vt0.c0)>=(vt0.c1)))))OR(((0.1699203551596722)<=(vt0.c1)))) DESC  NULLS LAST, (((((t0.c68)OR(t0.c68)))AND(t0.c68)) IN (t0.c68 COLLATE RTRIM, ((vt0.c1)IS NOT(vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS BLOB))OR((~ (v0.c0))))) ORDER BY LOWER(DISTINCT (NOT (v0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB))OR((~ (v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY LOWER(DISTINCT (NOT (v0.c0))));
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS BLOB))OR((~ (v0.c0))))) ORDER BY LOWER(DISTINCT (NOT (v0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB))OR((~ (v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY LOWER(DISTINCT (NOT (v0.c0))));
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY NULLIF(DISTINCT ((t0.c68)+(t0.c68)), ((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND('r\M')))AND(x'')));
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY NULLIF(DISTINCT ((t0.c68)+(t0.c68)), ((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND('r\M')))AND(x''))));
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY NULLIF(DISTINCT ((t0.c68)+(t0.c68)), ((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND('r\M')))AND(x'')));
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY NULLIF(DISTINCT ((t0.c68)+(t0.c68)), ((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND('r\M')))AND(x''))));
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY NULLIF(DISTINCT ((t0.c68)+(t0.c68)), ((((((((t0.c68)AND(t0.c68)))OR(t0.c68)))AND('r\M')))AND(x'')));
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((~ (v0.c0)))))) ORDER BY ((((vt0.c1)AND(v0.c0)))AND(vt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((~ (v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1)AND(v0.c0)))AND(vt0.c1)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((~ (v0.c0)))))) ORDER BY ((((vt0.c1)AND(v0.c0)))AND(vt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((~ (v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1)AND(v0.c0)))AND(vt0.c1)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM t0, vt0, v0 WHERE (CAST(((v0.c0) NOTNULL) AS BLOB)) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END) BETWEEN (((-1014931999)IS NOT(t0.c68))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END) BETWEEN (((-1014931999)IS NOT(t0.c68))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM t0, vt0, v0 WHERE (CAST(((v0.c0) NOTNULL) AS BLOB)) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END) BETWEEN (((-1014931999)IS NOT(t0.c68))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END) BETWEEN (((-1014931999)IS NOT(t0.c68))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY ((TRIM(vt0.c1)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((TRIM(vt0.c1)) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY ((TRIM(vt0.c1)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((TRIM(vt0.c1)) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY ((TRIM(vt0.c1)) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) ISNULL)))=((((vt0.c1) NOT NULL))))) ORDER BY ((json_insert(vt0.c0, vt0.c0, vt0.c1))<(json_array(vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0, NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) ISNULL)))==((((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((json_insert(vt0.c0, vt0.c0, vt0.c1))<(json_array(vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0, NULL))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) ISNULL)))=((((vt0.c1) NOT NULL))))) ORDER BY ((json_insert(vt0.c0, vt0.c0, vt0.c1))<(json_array(vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0, NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) ISNULL)))==((((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((json_insert(vt0.c0, vt0.c0, vt0.c1))<(json_array(vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0, NULL))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c68) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((t0.c68) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c68) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((t0.c68) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c68) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT * FROM t0, vt0, v0 WHERE ((0.7203888041709127 IN ())) ORDER BY (('1697266803')>=(((x'')<(t0.c68))))  NULLS FIRST, 0.7597464165915628;
SELECT SUM(count) FROM (SELECT ALL (((0.7203888041709127 IN ())) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (('1697266803')>=(((x'')<(t0.c68))))  NULLS FIRST, 0.7597464165915628);
SELECT * FROM t0, vt0, v0 WHERE ((0.7203888041709127 IN ())) ORDER BY (('1697266803')>=(((x'')<(t0.c68))))  NULLS FIRST, 0.7597464165915628;
SELECT SUM(count) FROM (SELECT ALL (((0.7203888041709127 IN ())) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (('1697266803')>=(((x'')<(t0.c68))))  NULLS FIRST, 0.7597464165915628);
SELECT * FROM t0, vt0, v0 WHERE ((0.7203888041709127 IN ())) ORDER BY (('1697266803')>=(((x'')<(t0.c68))))  NULLS FIRST, 0.7597464165915628;
SELECT ALL * FROM t0, v0 NATURAL JOIN vt0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt0);
SELECT ALL * FROM t0, v0 NATURAL JOIN vt0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt0);
SELECT * FROM v0, t0, vt0 WHERE (JULIANDAY((vt0.c1 IN ()), ((v0.c0) NOTNULL), ((t0.c68)%(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY((vt0.c1 IN ()), ((v0.c0) NOTNULL), ((t0.c68)%(vt0.c1)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (JULIANDAY((vt0.c1 IN ()), ((v0.c0) NOTNULL), ((t0.c68)%(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY((vt0.c1 IN ()), ((v0.c0) NOTNULL), ((t0.c68)%(vt0.c1)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((CAST(0.3863024895824294 AS TEXT)) NOTNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE '' END)>>(((vt0.c1)%(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.3863024895824294 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE '' END)>>(((vt0.c1)%(vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((CAST(0.3863024895824294 AS TEXT)) NOTNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE '' END)>>(((vt0.c1)%(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.3863024895824294 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE '' END)>>(((vt0.c1)%(vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((CAST(0.3863024895824294 AS TEXT)) NOTNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE '' END)>>(((vt0.c1)%(vt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY ((((0.7068783740652597)OR(((vt0.c1)+(vt0.c0)))))OR(('*왹䡁⨗' IN (t0.c68)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((0.7068783740652597)OR(((vt0.c1)+(vt0.c0)))))OR(('*왹䡁⨗' IN (t0.c68)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY ((((0.7068783740652597)OR(((vt0.c1)+(vt0.c0)))))OR(('*왹䡁⨗' IN (t0.c68)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((0.7068783740652597)OR(((vt0.c1)+(vt0.c0)))))OR(('*왹䡁⨗' IN (t0.c68)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((~ (vt0.c0 COLLATE BINARY))) ORDER BY ((((0.7068783740652597)OR(((vt0.c1)+(vt0.c0)))))OR(('*왹䡁⨗' IN (t0.c68)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((2039888812)&(v0.c0)))%((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((2039888812)&(v0.c0)))%((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((2039888812)&(v0.c0)))%((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((2039888812)&(v0.c0)))%((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM vt0, v0, t0 WHERE (((((v0.c0)&(t0.c68))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c1)>=(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)&(t0.c68))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c1)>=(t0.c68))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((((v0.c0)&(t0.c68))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c1)>=(t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)&(t0.c68))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c1)>=(t0.c68))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM t0, v0, vt0 WHERE (((((v0.c0)%(v0.c0))) NOTNULL)) ORDER BY LOWER((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((t0.c68, v0.c0, vt0.c1)))) DESC  NULLS LAST, ((575195972) BETWEEN (((v0.c0)<(v0.c0))) AND (((v0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(v0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY LOWER((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((t0.c68, v0.c0, vt0.c1)))) DESC  NULLS LAST, ((575195972) BETWEEN (((v0.c0)<(v0.c0))) AND (((v0.c0) ISNULL))) ASC);
SELECT * FROM t0, v0, vt0 WHERE (((((v0.c0)%(v0.c0))) NOTNULL)) ORDER BY LOWER((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((t0.c68, v0.c0, vt0.c1)))) DESC  NULLS LAST, ((575195972) BETWEEN (((v0.c0)<(v0.c0))) AND (((v0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(v0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY LOWER((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((t0.c68, v0.c0, vt0.c1)))) DESC  NULLS LAST, ((575195972) BETWEEN (((v0.c0)<(v0.c0))) AND (((v0.c0) ISNULL))) ASC);
SELECT * FROM t0, v0 WHERE (((((v0.c0) ISNULL))*((('/\rep') NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL))*((('/\rep') NOT BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((v0.c0) ISNULL))*((('/\rep') NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL))*((('/\rep') NOT BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY LOWER(((v0.c0)||(v0.c0))) ASC  NULLS FIRST, ((((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68)))%((~ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY LOWER(((v0.c0)||(v0.c0))) ASC  NULLS FIRST, ((((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68)))%((~ (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY LOWER(((v0.c0)||(v0.c0))) ASC  NULLS FIRST, ((((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68)))%((~ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY LOWER(((v0.c0)||(v0.c0))) ASC  NULLS FIRST, ((((t0.c68) NOT BETWEEN (v0.c0) AND (t0.c68)))%((~ (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE (x'f6cb');
SELECT SUM(count) FROM (SELECT ((x'f6cb') IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (x'f6cb');
SELECT SUM(count) FROM (SELECT ((x'f6cb') IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (x'f6cb');
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM v0 WHERE (2.24876658E8) ORDER BY ((((((((((v0.c0)/(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((v0.c0 IN ()))))OR(LIKELIHOOD(DISTINCT v0.c0, 0.33098832296074765))))OR(((v0.c0)==(0.9276729378732166)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((2.24876658E8) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)/(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((v0.c0 IN ()))))OR(LIKELIHOOD(DISTINCT v0.c0, 0.33098832296074765))))OR(((v0.c0)=(0.9276729378732166)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (2.24876658E8) ORDER BY ((((((((((v0.c0)/(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((v0.c0 IN ()))))OR(LIKELIHOOD(DISTINCT v0.c0, 0.33098832296074765))))OR(((v0.c0)==(0.9276729378732166)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((2.24876658E8) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)/(v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND((v0.c0 IN ()))))OR(LIKELIHOOD(DISTINCT v0.c0, 0.33098832296074765))))OR(((v0.c0)=(0.9276729378732166)))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE ('頠NY%F');
SELECT SUM(count) FROM (SELECT (('頠NY%F') IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ('頠NY%F');
SELECT SUM(count) FROM (SELECT (('頠NY%F') IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE ('頠NY%F');
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CASE x''  WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM ELSE CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END END WHERE (CAST((~ (vt0.c0)) AS NUMERIC)) ORDER BY (vt0.c1 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CASE x''  WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM ELSE CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END END ORDER BY (vt0.c1 IN ()) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CASE x''  WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM ELSE CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END END WHERE (CAST((~ (vt0.c0)) AS NUMERIC)) ORDER BY (vt0.c1 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CASE x''  WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM ELSE CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END END ORDER BY (vt0.c1 IN ()) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CASE x''  WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM ELSE CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END END WHERE (CAST((~ (vt0.c0)) AS NUMERIC)) ORDER BY (vt0.c1 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT * FROM v0 INNER JOIN t0 ON ((((v0.c0) BETWEEN (t0.c68) AND (v0.c0)))=(SQLITE_COMPILEOPTION_USED(v0.c0))) WHERE ('**/k');
SELECT SUM(count) FROM (SELECT ALL (('**/k') IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((((v0.c0) BETWEEN (t0.c68) AND (v0.c0)))==(SQLITE_COMPILEOPTION_USED(v0.c0))));
SELECT * FROM v0 INNER JOIN t0 ON ((((v0.c0) BETWEEN (t0.c68) AND (v0.c0)))=(SQLITE_COMPILEOPTION_USED(v0.c0))) WHERE ('**/k');
SELECT SUM(count) FROM (SELECT ALL (('**/k') IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((((v0.c0) BETWEEN (t0.c68) AND (v0.c0)))==(SQLITE_COMPILEOPTION_USED(v0.c0))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c1 RIGHT OUTER JOIN v0 ON ('-629231727' IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c1 RIGHT OUTER JOIN v0 ON ('-629231727' IN ()));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c1 RIGHT OUTER JOIN v0 ON ('-629231727' IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c1 RIGHT OUTER JOIN v0 ON ('-629231727' IN ()));
SELECT ALL * FROM t0, vt0 WHERE (((0.44908851394323135)/(((vt0.c1)IS NOT(t0.c68))))) ORDER BY (((vt0.c0 IN ())) ISNULL) DESC, CASE ((0.8921233624348887)AND(vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c68 END ELSE (NOT (vt0.c1)) END  NULLS FIRST, (((vt0.c0)) BETWEEN (((NOT (t0.c68)))) AND ((TRIM(vt0.c1, vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.44908851394323135)/(((vt0.c1)IS NOT(t0.c68))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0 IN ())) ISNULL) DESC, CASE ((0.8921233624348887)AND(vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c68 END ELSE (NOT (vt0.c1)) END  NULLS FIRST, (((vt0.c0)) BETWEEN (((NOT (t0.c68)))) AND ((TRIM(vt0.c1, vt0.c0))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((0.44908851394323135)/(((vt0.c1)IS NOT(t0.c68))))) ORDER BY (((vt0.c0 IN ())) ISNULL) DESC, CASE ((0.8921233624348887)AND(vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c68 END ELSE (NOT (vt0.c1)) END  NULLS FIRST, (((vt0.c0)) BETWEEN (((NOT (t0.c68)))) AND ((TRIM(vt0.c1, vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.44908851394323135)/(((vt0.c1)IS NOT(t0.c68))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0 IN ())) ISNULL) DESC, CASE ((0.8921233624348887)AND(vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c68 END ELSE (NOT (vt0.c1)) END  NULLS FIRST, (((vt0.c0)) BETWEEN (((NOT (t0.c68)))) AND ((TRIM(vt0.c1, vt0.c0))))  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((0.44908851394323135)/(((vt0.c1)IS NOT(t0.c68))))) ORDER BY (((vt0.c0 IN ())) ISNULL) DESC, CASE ((0.8921233624348887)AND(vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c68 END ELSE (NOT (vt0.c1)) END  NULLS FIRST, (((vt0.c0)) BETWEEN (((NOT (t0.c68)))) AND ((TRIM(vt0.c1, vt0.c0))))  NULLS LAST;
SELECT * FROM v0 INNER JOIN vt0 ON ((t0.c68)%(vt0.c1)) COLLATE BINARY CROSS JOIN t0 ON vt0.c1 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND ('')))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) BETWEEN (vt0.c0) AND (''))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((t0.c68)%(vt0.c1)) COLLATE BINARY CROSS JOIN t0 ON vt0.c1);
SELECT * FROM v0 INNER JOIN vt0 ON ((t0.c68)%(vt0.c1)) COLLATE BINARY CROSS JOIN t0 ON vt0.c1 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND ('')))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) BETWEEN (vt0.c0) AND (''))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((t0.c68)%(vt0.c1)) COLLATE BINARY CROSS JOIN t0 ON vt0.c1);
SELECT * FROM v0 WHERE ((~ (v0.c0)) COLLATE RTRIM) ORDER BY v0.c0 DESC, ((v0.c0 COLLATE RTRIM) BETWEEN ((- (v0.c0))) AND ((((v0.c0))>=((v0.c0))))) DESC, ((v0.c0)GLOB(0X32783b1f)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC, ((v0.c0 COLLATE RTRIM) BETWEEN ((- (v0.c0))) AND ((((v0.c0))>=((v0.c0))))) DESC, ((v0.c0)GLOB(0X32783b1f)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM v0 WHERE ((~ (v0.c0)) COLLATE RTRIM) ORDER BY v0.c0 DESC, ((v0.c0 COLLATE RTRIM) BETWEEN ((- (v0.c0))) AND ((((v0.c0))>=((v0.c0))))) DESC, ((v0.c0)GLOB(0X32783b1f)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC, ((v0.c0 COLLATE RTRIM) BETWEEN ((- (v0.c0))) AND ((((v0.c0))>=((v0.c0))))) DESC, ((v0.c0)GLOB(0X32783b1f)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE (((v0.c0)|(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)|(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((v0.c0)|(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)|(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c68);
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (1297975447) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((1297975447) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY x'');
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (1297975447) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((1297975447) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY x'');
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (1297975447) ORDER BY x'';
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c68))>=((t0.c68))))AND(0.8289650118521247)))OR((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c68))>=((t0.c68))))AND(0.8289650118521247)))OR((t0.c68 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c68))>=((t0.c68))))AND(0.8289650118521247)))OR((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c68))>=((t0.c68))))AND(0.8289650118521247)))OR((t0.c68 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c68))>=((t0.c68))))AND(0.8289650118521247)))OR((t0.c68 IN ()))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((0.8604711685894262)+(t0.c68)) IN ())) ORDER BY t0.c68 COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.8604711685894262)+(t0.c68)) IN ())) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY t0.c68 COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((0.8604711685894262)+(t0.c68)) IN ())) ORDER BY t0.c68 COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.8604711685894262)+(t0.c68)) IN ())) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY t0.c68 COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((0.8604711685894262)+(t0.c68)) IN ())) ORDER BY t0.c68 COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN -1533534759 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0)LIKE(v0.c0)))<<(CASE WHEN v0.c0 THEN v0.c0 END)) ASC, ((NOT (v0.c0)) IN (CAST(v0.c0 AS INTEGER), v0.c0)), v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN -1533534759 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)LIKE(v0.c0)))<<(CASE WHEN v0.c0 THEN v0.c0 END)) ASC, ((NOT (v0.c0)) IN (CAST(v0.c0 AS INTEGER), v0.c0)), v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN -1533534759 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0)LIKE(v0.c0)))<<(CASE WHEN v0.c0 THEN v0.c0 END)) ASC, ((NOT (v0.c0)) IN (CAST(v0.c0 AS INTEGER), v0.c0)), v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN -1533534759 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)LIKE(v0.c0)))<<(CASE WHEN v0.c0 THEN v0.c0 END)) ASC, ((NOT (v0.c0)) IN (CAST(v0.c0 AS INTEGER), v0.c0)), v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON (((t0.c68) BETWEEN (vt0.c0) AND (t0.c68)) IN ()) WHERE ((- ((vt0.c0 IN ())))) ORDER BY ((((((((((t0.c68) NOTNULL))AND(vt0.c1)))AND(((v0.c0)|('')))))AND((v0.c0 IN (vt0.c1, vt0.c0)))))OR(((t0.c68) BETWEEN (0.7247247446712469) AND (x'')))), vt0.c1, (((((vt0.c1 IN ()))AND(vt0.c0)))OR((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON (((t0.c68) BETWEEN (vt0.c0) AND (t0.c68)) IN ()) ORDER BY ((((((((((t0.c68) NOTNULL))AND(vt0.c1)))AND(((v0.c0)|('')))))AND((v0.c0 IN (vt0.c1, vt0.c0)))))OR(((t0.c68) BETWEEN (0.7247247446712469) AND (x'')))), vt0.c1, (((((vt0.c1 IN ()))AND(vt0.c0)))OR((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON (((t0.c68) BETWEEN (vt0.c0) AND (t0.c68)) IN ()) WHERE ((- ((vt0.c0 IN ())))) ORDER BY ((((((((((t0.c68) NOTNULL))AND(vt0.c1)))AND(((v0.c0)|('')))))AND((v0.c0 IN (vt0.c1, vt0.c0)))))OR(((t0.c68) BETWEEN (0.7247247446712469) AND (x'')))), vt0.c1, (((((vt0.c1 IN ()))AND(vt0.c0)))OR((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON (((t0.c68) BETWEEN (vt0.c0) AND (t0.c68)) IN ()) ORDER BY ((((((((((t0.c68) NOTNULL))AND(vt0.c1)))AND(((v0.c0)|('')))))AND((v0.c0 IN (vt0.c1, vt0.c0)))))OR(((t0.c68) BETWEEN (0.7247247446712469) AND (x'')))), vt0.c1, (((((vt0.c1 IN ()))AND(vt0.c0)))OR((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON (((t0.c68) BETWEEN (vt0.c0) AND (t0.c68)) IN ()) WHERE ((- ((vt0.c0 IN ())))) ORDER BY ((((((((((t0.c68) NOTNULL))AND(vt0.c1)))AND(((v0.c0)|('')))))AND((v0.c0 IN (vt0.c1, vt0.c0)))))OR(((t0.c68) BETWEEN (0.7247247446712469) AND (x'')))), vt0.c1, (((((vt0.c1 IN ()))AND(vt0.c0)))OR((v0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)*(vt0.c1)) IN ())) ORDER BY HEX(t0.c68) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY HEX(t0.c68) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)*(vt0.c1)) IN ())) ORDER BY HEX(t0.c68) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY HEX(t0.c68) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)*(vt0.c1)) IN ())) ORDER BY HEX(t0.c68) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))AND(vt0.c1)))AND(CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE (((''))>=((t0.c68)))  WHEN t0.c68 THEN t0.c68 ELSE ((vt0.c0) NOTNULL) END DESC  NULLS LAST, CAST(((t0.c68) NOT BETWEEN (-206440681) AND (vt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND(vt0.c1)))AND(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (((''))>=((t0.c68)))  WHEN t0.c68 THEN t0.c68 ELSE ((vt0.c0) NOTNULL) END DESC  NULLS LAST, CAST(((t0.c68) NOT BETWEEN (-206440681) AND (vt0.c1)) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))AND(vt0.c1)))AND(CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE (((''))>=((t0.c68)))  WHEN t0.c68 THEN t0.c68 ELSE ((vt0.c0) NOTNULL) END DESC  NULLS LAST, CAST(((t0.c68) NOT BETWEEN (-206440681) AND (vt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND(vt0.c1)))AND(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (((''))>=((t0.c68)))  WHEN t0.c68 THEN t0.c68 ELSE ((vt0.c0) NOTNULL) END DESC  NULLS LAST, CAST(((t0.c68) NOT BETWEEN (-206440681) AND (vt0.c1)) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))AND(vt0.c1)))AND(CAST(vt0.c1 AS INTEGER)))) ORDER BY CASE (((''))>=((t0.c68)))  WHEN t0.c68 THEN t0.c68 ELSE ((vt0.c0) NOTNULL) END DESC  NULLS LAST, CAST(((t0.c68) NOT BETWEEN (-206440681) AND (vt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (IFNULL(((v0.c0) NOTNULL), CAST(v0.c0 AS NUMERIC))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((v0.c0) NOTNULL), CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (IFNULL(((v0.c0) NOTNULL), CAST(v0.c0 AS NUMERIC))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((v0.c0) NOTNULL), CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 INNER JOIN v0 ON ((((t0.c68)||(v0.c0)))||(((NULL) BETWEEN (t0.c68) AND (v0.c0)))) WHERE ((((x''))==((((vt0.c0)GLOB(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((x''))=((((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN v0 ON ((((t0.c68)||(v0.c0)))||(((NULL) BETWEEN (t0.c68) AND (v0.c0)))));
SELECT COUNT(*) FROM vt0, t0 INNER JOIN v0 ON ((((t0.c68)||(v0.c0)))||(((NULL) BETWEEN (t0.c68) AND (v0.c0)))) WHERE ((((x''))==((((vt0.c0)GLOB(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((x''))=((((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN v0 ON ((((t0.c68)||(v0.c0)))||(((NULL) BETWEEN (t0.c68) AND (v0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON CASE v0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM WHERE (((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND('-796929968')));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND('-796929968'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE v0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON CASE v0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM WHERE (((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND('-796929968')));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND('-796929968'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE v0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM);
SELECT * FROM v0, vt0 WHERE (((vt0.c1)IS(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)IS(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c1)IS(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)IS(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c1)IS(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0, v0, vt0 WHERE ((~ ((+ (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (t0.c68))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE ((~ ((+ (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (t0.c68))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((t0.c68)) BETWEEN ((vt0.c1)) AND (((~ (t0.c68)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c68)) BETWEEN ((vt0.c1)) AND (((~ (t0.c68)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((t0.c68)) BETWEEN ((vt0.c1)) AND (((~ (t0.c68)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c68)) BETWEEN ((vt0.c1)) AND (((~ (t0.c68)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((t0.c68)) BETWEEN ((vt0.c1)) AND (((~ (t0.c68)))))  NULLS FIRST;
SELECT ALL * FROM v0, t0, vt0 WHERE ((NOT ((t0.c68 IN ())))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC, (+ ('5417490'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c68 IN ())))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC, (+ ('5417490'))  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt0 WHERE ((NOT ((t0.c68 IN ())))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC, (+ ('5417490'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c68 IN ())))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) ASC, (+ ('5417490'))  NULLS FIRST);
SELECT * FROM t0 WHERE ((((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, ((t0.c68)<=(t0.c68)), t0.c68 COLLATE BINARY))>((1573030875, ((((t0.c68)AND(t0.c68)))AND(t0.c68)), (+ (t0.c68))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, ((t0.c68)<=(t0.c68)), t0.c68 COLLATE BINARY))>((1573030875, ((((t0.c68)AND(t0.c68)))AND(t0.c68)), (+ (t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, ((t0.c68)<=(t0.c68)), t0.c68 COLLATE BINARY))>((1573030875, ((((t0.c68)AND(t0.c68)))AND(t0.c68)), (+ (t0.c68))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, ((t0.c68)<=(t0.c68)), t0.c68 COLLATE BINARY))>((1573030875, ((((t0.c68)AND(t0.c68)))AND(t0.c68)), (+ (t0.c68)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END, ((t0.c68)<=(t0.c68)), t0.c68 COLLATE BINARY))>((1573030875, ((((t0.c68)AND(t0.c68)))AND(t0.c68)), (+ (t0.c68))))));
SELECT * FROM t0 WHERE (((CAST(t0.c68 AS BLOB))==(((t0.c68)GLOB(t0.c68))))) ORDER BY ((((t0.c68)GLOB(t0.c68))) NOT BETWEEN ('U') AND ((t0.c68 IN ()))) DESC  NULLS FIRST, RTRIM(((t0.c68)*('493747960')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS BLOB))==(((t0.c68)GLOB(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)GLOB(t0.c68))) NOT BETWEEN ('U') AND ((t0.c68 IN ()))) DESC  NULLS FIRST, RTRIM(((t0.c68)*('493747960')))  NULLS FIRST);
SELECT * FROM t0 WHERE (((CAST(t0.c68 AS BLOB))==(((t0.c68)GLOB(t0.c68))))) ORDER BY ((((t0.c68)GLOB(t0.c68))) NOT BETWEEN ('U') AND ((t0.c68 IN ()))) DESC  NULLS FIRST, RTRIM(((t0.c68)*('493747960')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c68 AS BLOB))==(((t0.c68)GLOB(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)GLOB(t0.c68))) NOT BETWEEN ('U') AND ((t0.c68 IN ()))) DESC  NULLS FIRST, RTRIM(((t0.c68)*('493747960')))  NULLS FIRST);
SELECT * FROM t0 WHERE (((CAST(t0.c68 AS BLOB))==(((t0.c68)GLOB(t0.c68))))) ORDER BY ((((t0.c68)GLOB(t0.c68))) NOT BETWEEN ('U') AND ((t0.c68 IN ()))) DESC  NULLS FIRST, RTRIM(((t0.c68)*('493747960')))  NULLS FIRST;
SELECT ALL * FROM t0, v0, vt0 WHERE (CASE (~ (vt0.c0))  WHEN v0.c0 THEN (vt0.c1 IN ()) END) ORDER BY t0.c68;
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c0))  WHEN v0.c0 THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY t0.c68);
SELECT ALL * FROM t0, v0, vt0 WHERE (CASE (~ (vt0.c0))  WHEN v0.c0 THEN (vt0.c1 IN ()) END) ORDER BY t0.c68;
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c0))  WHEN v0.c0 THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY t0.c68);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c68)|(vt0.c0)))<(vt0.c1 COLLATE BINARY)) FULL OUTER JOIN v0 ON (+ (((((((((-1710024607)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))) WHERE ((((vt0.c0 IN (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (v0.c0))) NOTNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c68)|(vt0.c0)))<(vt0.c1 COLLATE BINARY)) FULL OUTER JOIN v0 ON (+ (((((((((-1710024607)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c68)|(vt0.c0)))<(vt0.c1 COLLATE BINARY)) FULL OUTER JOIN v0 ON (+ (((((((((-1710024607)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))) WHERE ((((vt0.c0 IN (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (v0.c0))) NOTNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c68)|(vt0.c0)))<(vt0.c1 COLLATE BINARY)) FULL OUTER JOIN v0 ON (+ (((((((((-1710024607)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c0)) AS BLOB)) ORDER BY (((vt0.c0) IS FALSE) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) IS FALSE) IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c0)) AS BLOB)) ORDER BY (((vt0.c0) IS FALSE) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) IS FALSE) IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c0)) AS BLOB)) ORDER BY (((vt0.c0) IS FALSE) IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))))%(CASE vt0.c1  WHEN NULL THEN vt0.c1 END))) ORDER BY TYPEOF(CAST(vt0.c1 AS INTEGER)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))))%(CASE vt0.c1  WHEN NULL THEN vt0.c1 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY TYPEOF(CAST(vt0.c1 AS INTEGER)) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))))%(CASE vt0.c1  WHEN NULL THEN vt0.c1 END))) ORDER BY TYPEOF(CAST(vt0.c1 AS INTEGER)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))))%(CASE vt0.c1  WHEN NULL THEN vt0.c1 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY TYPEOF(CAST(vt0.c1 AS INTEGER)) DESC);
SELECT * FROM vt0, v0 WHERE ((((NOT (vt0.c0))) BETWEEN (((v0.c0)/(v0.c0))) AND ('176863033')));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) BETWEEN (((v0.c0)/(v0.c0))) AND ('176863033'))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((NOT (vt0.c0))) BETWEEN (((v0.c0)/(v0.c0))) AND ('176863033')));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) BETWEEN (((v0.c0)/(v0.c0))) AND ('176863033'))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE))>>('-1677314655'))) ORDER BY (((v0.c0 IN ()))>(((v0.c0)!=(vt0.c0)))), ABS(0.8242428716510442) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))>>('-1677314655'))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN ()))>(((v0.c0)<>(vt0.c0)))), ABS(0.8242428716510442) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE))>>('-1677314655'))) ORDER BY (((v0.c0 IN ()))>(((v0.c0)!=(vt0.c0)))), ABS(0.8242428716510442) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))>>('-1677314655'))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN ()))>(((v0.c0)<>(vt0.c0)))), ABS(0.8242428716510442) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((('[]' IN (v0.c0, v0.c0))))>=(((~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((('[]' IN (v0.c0, v0.c0))))>=(((~ (v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((('[]' IN (v0.c0, v0.c0))))>=(((~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((('[]' IN (v0.c0, v0.c0))))>=(((~ (v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (DATE(vt0.c1 COLLATE NOCASE, (NOT (t0.c68)), ((((t0.c68)OR(vt0.c1)))OR(vt0.c0)), v0.c0 COLLATE BINARY, NULL COLLATE NOCASE, x'', 0.2707856021716254));
SELECT SUM(count) FROM (SELECT ALL ((DATE(vt0.c1 COLLATE NOCASE, (NOT (t0.c68)), ((((t0.c68)OR(vt0.c1)))OR(vt0.c0)), v0.c0 COLLATE BINARY, NULL COLLATE NOCASE, x'', 0.2707856021716254)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (DATE(vt0.c1 COLLATE NOCASE, (NOT (t0.c68)), ((((t0.c68)OR(vt0.c1)))OR(vt0.c0)), v0.c0 COLLATE BINARY, NULL COLLATE NOCASE, x'', 0.2707856021716254));
SELECT SUM(count) FROM (SELECT ALL ((DATE(vt0.c1 COLLATE NOCASE, (NOT (t0.c68)), ((((t0.c68)OR(vt0.c1)))OR(vt0.c0)), v0.c0 COLLATE BINARY, NULL COLLATE NOCASE, x'', 0.2707856021716254)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM t0 WHERE (CAST((t0.c68 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c68 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((t0.c68 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c68 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((t0.c68 IN ()) AS NUMERIC));
SELECT ALL * FROM vt0, t0, v0 WHERE (((((CAST(v0.c0 AS REAL))OR((- (x'')))))AND(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY t0.c68  NULLS FIRST, (((vt0.c0, v0.c0, vt0.c1)) BETWEEN ((((vt0.c1) NOT NULL), ((((((((vt0.c0)AND(x'02dfecb7')))OR('*ehU\r')))OR(vt0.c0)))AND(t0.c68)), '0.4349845124612214')) AND ((CAST(x'9644' AS INTEGER), (v0.c0 IN ()), LAST_INSERT_ROWID())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS REAL))OR((- (x'')))))AND(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY t0.c68  NULLS FIRST, (((vt0.c0, v0.c0, vt0.c1)) BETWEEN ((((vt0.c1) NOT NULL), ((((((((vt0.c0)AND(x'02dfecb7')))OR('*ehU\r')))OR(vt0.c0)))AND(t0.c68)), '0.4349845124612214')) AND ((CAST(x'9644' AS INTEGER), (v0.c0 IN ()), LAST_INSERT_ROWID())))  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE (((((CAST(v0.c0 AS REAL))OR((- (x'')))))AND(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY t0.c68  NULLS FIRST, (((vt0.c0, v0.c0, vt0.c1)) BETWEEN ((((vt0.c1) NOT NULL), ((((((((vt0.c0)AND(x'02dfecb7')))OR('*ehU\r')))OR(vt0.c0)))AND(t0.c68)), '0.4349845124612214')) AND ((CAST(x'9644' AS INTEGER), (v0.c0 IN ()), LAST_INSERT_ROWID())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS REAL))OR((- (x'')))))AND(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY t0.c68  NULLS FIRST, (((vt0.c0, v0.c0, vt0.c1)) BETWEEN ((((vt0.c1) NOT NULL), ((((((((vt0.c0)AND(x'02dfecb7')))OR('*ehU\r')))OR(vt0.c0)))AND(t0.c68)), '0.4349845124612214')) AND ((CAST(x'9644' AS INTEGER), (v0.c0 IN ()), LAST_INSERT_ROWID())))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)GLOB(t0.c68))) BETWEEN (((t0.c68) IS FALSE)) AND (t0.c68 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)GLOB(t0.c68))) BETWEEN (((t0.c68) IS FALSE)) AND (t0.c68 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)GLOB(t0.c68))) BETWEEN (((t0.c68) IS FALSE)) AND (t0.c68 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)GLOB(t0.c68))) BETWEEN (((t0.c68) IS FALSE)) AND (t0.c68 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)GLOB(t0.c68))) BETWEEN (((t0.c68) IS FALSE)) AND (t0.c68 COLLATE RTRIM)));
