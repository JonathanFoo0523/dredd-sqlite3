-- Time: 2024/06/09 13:18:01
-- Database: database80
-- Database version: 3.40.0
-- seed value: 3388810780
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 0ms;
ANALYZE; -- 0ms;
CREATE TABLE IF NOT EXISTS t1 (c0 INTEGER ); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '61774'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE t1 SET c0=-1746253619 WHERE CAST(t1.c0 AS INTEGER); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '3702'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '48916'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '50625'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '63495'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 865693406); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
DELETE FROM t1; -- 0ms;
CREATE INDEX IF NOT EXISTS i67 ON t1(x'748b' COLLATE BINARY); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1006006156);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ANALYZE t1; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=4'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP INDEX IF EXISTS "i67"; -- 0ms;
PRAGMA threads; -- 0ms;
ANALYZE vt1; -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr2 BEFORE DELETE ON t0 WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS TEXT), t0.c0 COLLATE NOCASE, t0.c0 COLLATE NOCASE)) AND ((t0.c0, (+ (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) BEGIN UPDATE OR ROLLBACK t0 SET (c0)=('a') WHERE (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));END; -- 0ms;
ALTER TABLE t1 RENAME TO t2; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c71; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c48; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c21; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c35; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c98; -- 0ms;
ALTER TABLE t0 ADD COLUMN c60 REAL; -- 0ms;
ALTER TABLE t1 ADD COLUMN c24 REAL; -- 0ms;
DROP TABLE IF EXISTS t0; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1472412691); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=2'); -- 0ms;
END; -- 4ms;
ALTER TABLE t1 RENAME TO t0; -- 2ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2098594635); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1560856549); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '7282'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1102051633);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=11'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'', x''), (0.9222111726299318, x''), (NULL, 1006006156); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
CREATE INDEX IF NOT EXISTS i30 ON t0((- (NULLIF(c24, c24))) ASC,-1.746253619E9 ASC); -- 0ms;
ANALYZE i30; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT SUM('1102051633') FROM vt1; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1807600702); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '54581'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -702103848);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=6'); -- 0ms;
VACUUM; -- 1ms;
CREATE INDEX IF NOT EXISTS i95 ON t0(c0 COLLATE RTRIM,((c0) IS TRUE) COLLATE RTRIM); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1911600103); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0, vt1 WHERE ((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY ((((t0.c24) ISNULL)) BETWEEN (t0.c24 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c24))))  NULLS FIRST, ((CASE t0.c24  WHEN t0.c0 THEN t0.c24 END)>(x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c24) ISNULL)) BETWEEN (t0.c24 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c24))))  NULLS FIRST, ((CASE t0.c24  WHEN t0.c0 THEN t0.c24 END)>(x'')) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE ((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY ((((t0.c24) ISNULL)) BETWEEN (t0.c24 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c24))))  NULLS FIRST, ((CASE t0.c24  WHEN t0.c0 THEN t0.c24 END)>(x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c24) ISNULL)) BETWEEN (t0.c24 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c24))))  NULLS FIRST, ((CASE t0.c24  WHEN t0.c0 THEN t0.c24 END)>(x'')) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE ((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY ((((t0.c24) ISNULL)) BETWEEN (t0.c24 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c24))))  NULLS FIRST, ((CASE t0.c24  WHEN t0.c0 THEN t0.c24 END)>(x'')) DESC  NULLS LAST;
SELECT * FROM t0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (t0.c0))) IS FALSE)) ORDER BY ((v0.c0)%(t0.c24)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, v0 ORDER BY ((v0.c0)%(t0.c24)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (t0.c0))) IS FALSE)) ORDER BY ((v0.c0)%(t0.c24)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, v0 ORDER BY ((v0.c0)%(t0.c24)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (t0.c0))) IS FALSE)) ORDER BY ((v0.c0)%(t0.c24)) COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c24)) BETWEEN ((t0.c24 COLLATE BINARY)) AND (('m뾶Oyw#	0'))));
SELECT SUM(count) FROM (SELECT (((((t0.c24)) BETWEEN ((t0.c24 COLLATE BINARY)) AND (('m뾶Oyw#	0')))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c24)) BETWEEN ((t0.c24 COLLATE BINARY)) AND (('m뾶Oyw#	0'))));
SELECT SUM(count) FROM (SELECT (((((t0.c24)) BETWEEN ((t0.c24 COLLATE BINARY)) AND (('m뾶Oyw#	0')))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c24)) BETWEEN ((t0.c24 COLLATE BINARY)) AND (('m뾶Oyw#	0'))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS INTEGER)))=(((vt1.c0 IN ('0.9222111726299318')), x'' COLLATE BINARY, ((((((((vt1.c0)AND(vt1.c0)))OR('-1349075018')))AND(vt1.c0)))OR(vt1.c0)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS INTEGER)))==(((vt1.c0 IN ('0.9222111726299318')), x'' COLLATE BINARY, ((((((((vt1.c0)AND(vt1.c0)))OR('-1349075018')))AND(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS INTEGER)))=(((vt1.c0 IN ('0.9222111726299318')), x'' COLLATE BINARY, ((((((((vt1.c0)AND(vt1.c0)))OR('-1349075018')))AND(vt1.c0)))OR(vt1.c0)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS INTEGER)))==(((vt1.c0 IN ('0.9222111726299318')), x'' COLLATE BINARY, ((((((((vt1.c0)AND(vt1.c0)))OR('-1349075018')))AND(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS INTEGER)))=(((vt1.c0 IN ('0.9222111726299318')), x'' COLLATE BINARY, ((((((((vt1.c0)AND(vt1.c0)))OR('-1349075018')))AND(vt1.c0)))OR(vt1.c0)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) IS TRUE)) ORDER BY (('-1125414395' COLLATE NOCASE) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (('-1125414395' COLLATE NOCASE) IS TRUE) DESC);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) IS TRUE)) ORDER BY (('-1125414395' COLLATE NOCASE) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (('-1125414395' COLLATE NOCASE) IS TRUE) DESC);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) IS TRUE)) ORDER BY (('-1125414395' COLLATE NOCASE) IS TRUE) DESC;
SELECT * FROM t0 INNER JOIN v0 ON json_quote(((t0.c0) ISNULL)) WHERE ((((t0.c24)) BETWEEN ((CAST(t0.c24 AS REAL))) AND (((t0.c24 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c24)) BETWEEN ((CAST(t0.c24 AS REAL))) AND (((t0.c24 IN ()))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON json_quote(((t0.c0) ISNULL)));
SELECT * FROM t0 INNER JOIN v0 ON json_quote(((t0.c0) ISNULL)) WHERE ((((t0.c24)) BETWEEN ((CAST(t0.c24 AS REAL))) AND (((t0.c24 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c24)) BETWEEN ((CAST(t0.c24 AS REAL))) AND (((t0.c24 IN ()))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON json_quote(((t0.c0) ISNULL)));
SELECT * FROM t0 INNER JOIN v0 ON json_quote(((t0.c0) ISNULL)) WHERE ((((t0.c24)) BETWEEN ((CAST(t0.c24 AS REAL))) AND (((t0.c24 IN ())))));
SELECT ALL * FROM t0, v0, vt1 WHERE (CASE (((t0.c0))>=((t0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN ((t0.c24)LIKE(t0.c24)) WHEN UNICODE(v0.c0) THEN ((((v0.c0)AND(t0.c0)))AND(v0.c0)) WHEN ((')') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (~ (vt1.c0)) WHEN ((t0.c24) ISNULL) THEN ((t0.c0)==(vt1.c0)) WHEN ((v0.c0)%(t0.c0)) THEN (- (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c0))>=((t0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN ((t0.c24)LIKE(t0.c24)) WHEN UNICODE(v0.c0) THEN ((((v0.c0)AND(t0.c0)))AND(v0.c0)) WHEN ((')') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (~ (vt1.c0)) WHEN ((t0.c24) ISNULL) THEN ((t0.c0)==(vt1.c0)) WHEN ((v0.c0)%(t0.c0)) THEN (- (vt1.c0)) END) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE (CASE (((t0.c0))>=((t0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN ((t0.c24)LIKE(t0.c24)) WHEN UNICODE(v0.c0) THEN ((((v0.c0)AND(t0.c0)))AND(v0.c0)) WHEN ((')') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (~ (vt1.c0)) WHEN ((t0.c24) ISNULL) THEN ((t0.c0)==(vt1.c0)) WHEN ((v0.c0)%(t0.c0)) THEN (- (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c0))>=((t0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN ((t0.c24)LIKE(t0.c24)) WHEN UNICODE(v0.c0) THEN ((((v0.c0)AND(t0.c0)))AND(v0.c0)) WHEN ((')') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (~ (vt1.c0)) WHEN ((t0.c24) ISNULL) THEN ((t0.c0)==(vt1.c0)) WHEN ((v0.c0)%(t0.c0)) THEN (- (vt1.c0)) END) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE (CASE (((t0.c0))>=((t0.c0)))  WHEN v0.c0 COLLATE NOCASE THEN ((t0.c24)LIKE(t0.c24)) WHEN UNICODE(v0.c0) THEN ((((v0.c0)AND(t0.c0)))AND(v0.c0)) WHEN ((')') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (~ (vt1.c0)) WHEN ((t0.c24) ISNULL) THEN ((t0.c0)==(vt1.c0)) WHEN ((v0.c0)%(t0.c0)) THEN (- (vt1.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c24 END  WHEN v0.c0 COLLATE RTRIM THEN (t0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c24 END  WHEN v0.c0 COLLATE RTRIM THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt1, t0);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c24 END  WHEN v0.c0 COLLATE RTRIM THEN (t0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c24 END  WHEN v0.c0 COLLATE RTRIM THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt1, t0);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c24 END  WHEN v0.c0 COLLATE RTRIM THEN (t0.c0 IN ()) END);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM vt1, v0, t0);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM vt1, v0, t0);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS FALSE));
SELECT COUNT(*) FROM vt1, v0 WHERE ((+ ((('0.9222111726299318') IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ ((('0.9222111726299318') IS TRUE)))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE ((+ ((('0.9222111726299318') IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ ((('0.9222111726299318') IS TRUE)))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE ((+ ((('0.9222111726299318') IS TRUE))));
SELECT * FROM vt1, t0, v0 WHERE (((t0.c0 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt1, t0, v0);
SELECT * FROM vt1, t0, v0 WHERE (((t0.c0 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt1, t0, v0);
SELECT * FROM vt1, t0, v0 WHERE (((t0.c0 COLLATE RTRIM) NOTNULL));
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((CASE v0.c0  WHEN -7.02103848E8 THEN v0.c0 ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c0)) AND ((CASE v0.c0  WHEN -7.02103848E8 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((CASE v0.c0  WHEN -7.02103848E8 THEN v0.c0 ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c0)) AND ((CASE v0.c0  WHEN -7.02103848E8 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((CASE v0.c0  WHEN -7.02103848E8 THEN v0.c0 ELSE v0.c0 END))));
SELECT COUNT(*) FROM vt1 WHERE (0.5785354697492667) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((0.5785354697492667) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC);
SELECT COUNT(*) FROM vt1 WHERE (0.5785354697492667) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((0.5785354697492667) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC);
SELECT COUNT(*) FROM vt1 WHERE (0.5785354697492667) ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) DESC;
SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (0x41aff931))))) ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS INTEGER))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (0x41aff931))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (0x41aff931))))) ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS INTEGER))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (0x41aff931))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (0x41aff931))))) ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM vt1, v0 WHERE (v0.c0) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, v0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (v0.c0) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, v0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (v0.c0) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM v0, t0, vt1 WHERE ('1006006156') ORDER BY (((v0.c0)!=(t0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1006006156') IS TRUE)  as count FROM v0, t0, vt1 ORDER BY (((v0.c0)<>(t0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt1 WHERE ('1006006156') ORDER BY (((v0.c0)!=(t0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1006006156') IS TRUE)  as count FROM v0, t0, vt1 ORDER BY (((v0.c0)<>(t0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt1 WHERE ('1006006156') ORDER BY (((v0.c0)!=(t0.c0)) IN ()) DESC  NULLS FIRST;
SELECT * FROM v0, t0 WHERE (CASE ((t0.c24) BETWEEN (t0.c24) AND (v0.c0))  WHEN v0.c0 THEN (((t0.c24))<=((v0.c0))) WHEN (v0.c0 IN ()) THEN json_object(t0.c0, v0.c0) WHEN ((((((((t0.c24)OR(v0.c0)))OR(v0.c0)))AND(t0.c24)))OR(t0.c24)) THEN ((t0.c0) BETWEEN (t0.c24) AND (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c24) BETWEEN (t0.c24) AND (v0.c0))  WHEN v0.c0 THEN (((t0.c24))<=((v0.c0))) WHEN (v0.c0 IN ()) THEN json_object(t0.c0, v0.c0) WHEN ((((((((t0.c24)OR(v0.c0)))OR(v0.c0)))AND(t0.c24)))OR(t0.c24)) THEN ((t0.c0) BETWEEN (t0.c24) AND (x'')) END) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (CASE ((t0.c24) BETWEEN (t0.c24) AND (v0.c0))  WHEN v0.c0 THEN (((t0.c24))<=((v0.c0))) WHEN (v0.c0 IN ()) THEN json_object(t0.c0, v0.c0) WHEN ((((((((t0.c24)OR(v0.c0)))OR(v0.c0)))AND(t0.c24)))OR(t0.c24)) THEN ((t0.c0) BETWEEN (t0.c24) AND (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c24) BETWEEN (t0.c24) AND (v0.c0))  WHEN v0.c0 THEN (((t0.c24))<=((v0.c0))) WHEN (v0.c0 IN ()) THEN json_object(t0.c0, v0.c0) WHEN ((((((((t0.c24)OR(v0.c0)))OR(v0.c0)))AND(t0.c24)))OR(t0.c24)) THEN ((t0.c0) BETWEEN (t0.c24) AND (x'')) END) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (CASE ((t0.c24) BETWEEN (t0.c24) AND (v0.c0))  WHEN v0.c0 THEN (((t0.c24))<=((v0.c0))) WHEN (v0.c0 IN ()) THEN json_object(t0.c0, v0.c0) WHEN ((((((((t0.c24)OR(v0.c0)))OR(v0.c0)))AND(t0.c24)))OR(t0.c24)) THEN ((t0.c0) BETWEEN (t0.c24) AND (x'')) END);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (CASE WHEN ((v0.c0)||(t0.c24)) THEN t0.c24 WHEN CAST(0xffffffffaf96bfb6 AS INTEGER) THEN ((t0.c0) ISNULL) WHEN LIKELIHOOD(DISTINCT v0.c0, 0.09567593666110541) THEN (((v0.c0, t0.c0, x'')) NOT BETWEEN ((t0.c24, vt1.c0, t0.c24)) AND ((vt1.c0, v0.c0, vt1.c0))) ELSE CAST(t0.c24 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)||(t0.c24)) THEN t0.c24 WHEN CAST(0Xffffffffaf96bfb6 AS INTEGER) THEN ((t0.c0) ISNULL) WHEN LIKELIHOOD(DISTINCT v0.c0, 0.09567593666110541) THEN (((v0.c0, t0.c0, x'')) NOT BETWEEN ((t0.c24, vt1.c0, t0.c24)) AND ((vt1.c0, v0.c0, vt1.c0))) ELSE CAST(t0.c24 AS REAL) END) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (CASE WHEN ((v0.c0)||(t0.c24)) THEN t0.c24 WHEN CAST(0xffffffffaf96bfb6 AS INTEGER) THEN ((t0.c0) ISNULL) WHEN LIKELIHOOD(DISTINCT v0.c0, 0.09567593666110541) THEN (((v0.c0, t0.c0, x'')) NOT BETWEEN ((t0.c24, vt1.c0, t0.c24)) AND ((vt1.c0, v0.c0, vt1.c0))) ELSE CAST(t0.c24 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)||(t0.c24)) THEN t0.c24 WHEN CAST(0Xffffffffaf96bfb6 AS INTEGER) THEN ((t0.c0) ISNULL) WHEN LIKELIHOOD(DISTINCT v0.c0, 0.09567593666110541) THEN (((v0.c0, t0.c0, x'')) NOT BETWEEN ((t0.c24, vt1.c0, t0.c24)) AND ((vt1.c0, v0.c0, vt1.c0))) ELSE CAST(t0.c24 AS REAL) END) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (CASE WHEN ((v0.c0)||(t0.c24)) THEN t0.c24 WHEN CAST(0xffffffffaf96bfb6 AS INTEGER) THEN ((t0.c0) ISNULL) WHEN LIKELIHOOD(DISTINCT v0.c0, 0.09567593666110541) THEN (((v0.c0, t0.c0, x'')) NOT BETWEEN ((t0.c24, vt1.c0, t0.c24)) AND ((vt1.c0, v0.c0, vt1.c0))) ELSE CAST(t0.c24 AS REAL) END);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE ((((((v0.c0)&(t0.c0))))!=((CASE WHEN t0.c0 THEN t0.c24 END))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)&(t0.c0))))!=((CASE WHEN t0.c0 THEN t0.c24 END)))) IS TRUE)  as count FROM t0, v0, vt1);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE ((((((v0.c0)&(t0.c0))))!=((CASE WHEN t0.c0 THEN t0.c24 END))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)&(t0.c0))))!=((CASE WHEN t0.c0 THEN t0.c24 END)))) IS TRUE)  as count FROM t0, v0, vt1);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE ((((((v0.c0)&(t0.c0))))!=((CASE WHEN t0.c0 THEN t0.c24 END))));
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN v0 ON (('1102051633') NOT NULL) WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)<(t0.c24)) WHEN (+ (v0.c0)) THEN (('/')=(vt1.c0)) WHEN ((x'') IS FALSE) THEN v0.c0 COLLATE NOCASE END) ORDER BY ((((((vt1.c0)AND(v0.c0)))AND(t0.c24)))%((((v0.c0))>=((0xffffffffc7a69423))))), CAST(((t0.c0)IS NOT(vt1.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)<(t0.c24)) WHEN (+ (v0.c0)) THEN (('/')==(vt1.c0)) WHEN ((x'') IS FALSE) THEN v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1, t0 CROSS JOIN v0 ON (('1102051633') NOT NULL) ORDER BY ((((((vt1.c0)AND(v0.c0)))AND(t0.c24)))%((((v0.c0))>=((0Xffffffffc7a69423))))), CAST(((t0.c0)IS NOT(vt1.c0)) AS REAL) ASC);
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN v0 ON (('1102051633') NOT NULL) WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)<(t0.c24)) WHEN (+ (v0.c0)) THEN (('/')=(vt1.c0)) WHEN ((x'') IS FALSE) THEN v0.c0 COLLATE NOCASE END) ORDER BY ((((((vt1.c0)AND(v0.c0)))AND(t0.c24)))%((((v0.c0))>=((0xffffffffc7a69423))))), CAST(((t0.c0)IS NOT(vt1.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)<(t0.c24)) WHEN (+ (v0.c0)) THEN (('/')==(vt1.c0)) WHEN ((x'') IS FALSE) THEN v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1, t0 CROSS JOIN v0 ON (('1102051633') NOT NULL) ORDER BY ((((((vt1.c0)AND(v0.c0)))AND(t0.c24)))%((((v0.c0))>=((0Xffffffffc7a69423))))), CAST(((t0.c0)IS NOT(vt1.c0)) AS REAL) ASC);
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN v0 ON (('1102051633') NOT NULL) WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)<(t0.c24)) WHEN (+ (v0.c0)) THEN (('/')=(vt1.c0)) WHEN ((x'') IS FALSE) THEN v0.c0 COLLATE NOCASE END) ORDER BY ((((((vt1.c0)AND(v0.c0)))AND(t0.c24)))%((((v0.c0))>=((0xffffffffc7a69423))))), CAST(((t0.c0)IS NOT(vt1.c0)) AS REAL) ASC;
SELECT COUNT(*) FROM v0, vt1 FULL OUTER JOIN t0 ON CAST(((x'') BETWEEN (t0.c24) AND (x'1119')) AS NUMERIC) WHERE (CASE ((((v0.c0)AND(t0.c24)))OR(t0.c0))  WHEN rtreenode(t0.c24, v0.c0) THEN (t0.c24 IN ()) END) ORDER BY (((+ (t0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)AND(t0.c24)))OR(t0.c0))  WHEN rtreenode(t0.c24, v0.c0) THEN (t0.c24 IN ()) END) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN t0 ON CAST(((x'') BETWEEN (t0.c24) AND (x'1119')) AS NUMERIC) ORDER BY (((+ (t0.c0))) IS FALSE) ASC);
SELECT COUNT(*) FROM v0, vt1 FULL OUTER JOIN t0 ON CAST(((x'') BETWEEN (t0.c24) AND (x'1119')) AS NUMERIC) WHERE (CASE ((((v0.c0)AND(t0.c24)))OR(t0.c0))  WHEN rtreenode(t0.c24, v0.c0) THEN (t0.c24 IN ()) END) ORDER BY (((+ (t0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)AND(t0.c24)))OR(t0.c0))  WHEN rtreenode(t0.c24, v0.c0) THEN (t0.c24 IN ()) END) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN t0 ON CAST(((x'') BETWEEN (t0.c24) AND (x'1119')) AS NUMERIC) ORDER BY (((+ (t0.c0))) IS FALSE) ASC);
SELECT COUNT(*) FROM v0, vt1 FULL OUTER JOIN t0 ON CAST(((x'') BETWEEN (t0.c24) AND (x'1119')) AS NUMERIC) WHERE (CASE ((((v0.c0)AND(t0.c24)))OR(t0.c0))  WHEN rtreenode(t0.c24, v0.c0) THEN (t0.c24 IN ()) END) ORDER BY (((+ (t0.c0))) IS FALSE) ASC;
SELECT ALL * FROM v0 WHERE ((+ (((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ (((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((+ (((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)<=(v0.c0)) WHEN ((v0.c0)-(v0.c0)) THEN TRIM(v0.c0) WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOT NULL) ELSE v0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)<=(v0.c0)) WHEN ((v0.c0)-(v0.c0)) THEN TRIM(v0.c0) WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOT NULL) ELSE v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)<=(v0.c0)) WHEN ((v0.c0)-(v0.c0)) THEN TRIM(v0.c0) WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOT NULL) ELSE v0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)<=(v0.c0)) WHEN ((v0.c0)-(v0.c0)) THEN TRIM(v0.c0) WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOT NULL) ELSE v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)<=(v0.c0)) WHEN ((v0.c0)-(v0.c0)) THEN TRIM(v0.c0) WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOT NULL) ELSE v0.c0 COLLATE BINARY END);
SELECT ALL * FROM vt1 WHERE (UNLIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ' P-\n' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY (((((vt1.c0))<>((vt1.c0))))<=((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ' P-\n' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<>((vt1.c0))))<=((vt1.c0 IN ()))));
SELECT ALL * FROM vt1 WHERE (UNLIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ' P-\n' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY (((((vt1.c0))<>((vt1.c0))))<=((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ' P-\n' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<>((vt1.c0))))<=((vt1.c0 IN ()))));
SELECT ALL * FROM vt1 WHERE (UNLIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ' P-\n' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY (((((vt1.c0))<>((vt1.c0))))<=((vt1.c0 IN ())));
SELECT ALL * FROM vt1 WHERE (COALESCE((((vt1.c0))<=((vt1.c0))), (((vt1.c0))!=((vt1.c0))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (-1.746253619E9) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('1834168684')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE((((vt1.c0))<=((vt1.c0))), (((vt1.c0))<>((vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (-1.746253619E9) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('1834168684')))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (COALESCE((((vt1.c0))<=((vt1.c0))), (((vt1.c0))!=((vt1.c0))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (-1.746253619E9) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('1834168684')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE((((vt1.c0))<=((vt1.c0))), (((vt1.c0))<>((vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (-1.746253619E9) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('1834168684')))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (COALESCE((((vt1.c0))<=((vt1.c0))), (((vt1.c0))!=((vt1.c0))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (-1.746253619E9) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('1834168684')))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ((t0.c24) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ((t0.c24) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (t0.c24);
SELECT * FROM t0, v0, vt1 WHERE (((((((((v0.c0)AND(((((((((((((t0.c0)AND(t0.c24)))AND(t0.c24)))AND(t0.c24)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))AND(x'cbbc')))OR(CAST(t0.c24 AS NUMERIC))))OR((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(((((((((((((t0.c0)AND(t0.c24)))AND(t0.c24)))AND(t0.c24)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))AND(x'cbbc')))OR(CAST(t0.c24 AS NUMERIC))))OR((- (vt1.c0))))) IS TRUE)  as count FROM t0, v0, vt1);
SELECT * FROM t0, v0, vt1 WHERE (((((((((v0.c0)AND(((((((((((((t0.c0)AND(t0.c24)))AND(t0.c24)))AND(t0.c24)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))AND(x'cbbc')))OR(CAST(t0.c24 AS NUMERIC))))OR((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(((((((((((((t0.c0)AND(t0.c24)))AND(t0.c24)))AND(t0.c24)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))AND(x'cbbc')))OR(CAST(t0.c24 AS NUMERIC))))OR((- (vt1.c0))))) IS TRUE)  as count FROM t0, v0, vt1);
SELECT * FROM t0, v0, vt1 WHERE (((((((((v0.c0)AND(((((((((((((t0.c0)AND(t0.c24)))AND(t0.c24)))AND(t0.c24)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))AND(x'cbbc')))OR(CAST(t0.c24 AS NUMERIC))))OR((- (vt1.c0)))));
SELECT * FROM v0 NATURAL JOIN vt1 WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT * FROM v0 NATURAL JOIN vt1 WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT * FROM v0 NATURAL JOIN vt1 WHERE (CAST(v0.c0 AS TEXT));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0))) ISNULL)) ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)||(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0, v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)||(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0))) ISNULL)) ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)||(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0, v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)||(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0))) ISNULL)) ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)||(v0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON (((v0.c0 COLLATE RTRIM))<((0.996789724749393))) WHERE (v0.c0) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON (((v0.c0 COLLATE RTRIM))<((0.996789724749393))) ORDER BY ''  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON (((v0.c0 COLLATE RTRIM))<((0.996789724749393))) WHERE (v0.c0) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON (((v0.c0 COLLATE RTRIM))<((0.996789724749393))) ORDER BY ''  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON (((v0.c0 COLLATE RTRIM))<((0.996789724749393))) WHERE (v0.c0) ORDER BY ''  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)/(t0.c0)) IN (t0.c24))) ORDER BY ((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c0)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)/(t0.c0)) IN (t0.c24))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c0)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)/(t0.c0)) IN (t0.c24))) ORDER BY ((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c0)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)/(t0.c0)) IN (t0.c24))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c0)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)/(t0.c0)) IN (t0.c24))) ORDER BY ((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c0)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS REAL))*(load_extension(t0.c24, t0.c24)));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY ((CAST(t0.c0 AS REAL))*(load_extension(t0.c24, t0.c24))));
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS REAL))*(load_extension(t0.c24, t0.c24)));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY ((CAST(t0.c0 AS REAL))*(load_extension(t0.c24, t0.c24))));
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS REAL))*(load_extension(t0.c24, t0.c24)));
SELECT ALL * FROM v0 WHERE (CAST(TYPEOF(v0.c0) AS INTEGER)) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(v0.c0) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE));
SELECT ALL * FROM v0 WHERE (CAST(TYPEOF(v0.c0) AS INTEGER)) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(v0.c0) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE));
SELECT ALL * FROM v0 WHERE (CAST(TYPEOF(v0.c0) AS INTEGER)) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (CASE ((((((((-9.45384413E8)AND(x'')))AND(t0.c0)))OR(vt1.c0)))OR(v0.c0))  WHEN ((((((((vt1.c0)AND(v0.c0)))AND(t0.c24)))AND(vt1.c0)))OR(t0.c24)) THEN 0x1a005d09 ELSE CAST(v0.c0 AS NUMERIC) END) ORDER BY (+ (x'')) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((-9.45384413E8)AND(x'')))AND(t0.c0)))OR(vt1.c0)))OR(v0.c0))  WHEN ((((((((vt1.c0)AND(v0.c0)))AND(t0.c24)))AND(vt1.c0)))OR(t0.c24)) THEN 0X1a005d09 ELSE CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY (+ (x'')) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (CASE ((((((((-9.45384413E8)AND(x'')))AND(t0.c0)))OR(vt1.c0)))OR(v0.c0))  WHEN ((((((((vt1.c0)AND(v0.c0)))AND(t0.c24)))AND(vt1.c0)))OR(t0.c24)) THEN 0x1a005d09 ELSE CAST(v0.c0 AS NUMERIC) END) ORDER BY (+ (x'')) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((-9.45384413E8)AND(x'')))AND(t0.c0)))OR(vt1.c0)))OR(v0.c0))  WHEN ((((((((vt1.c0)AND(v0.c0)))AND(t0.c24)))AND(vt1.c0)))OR(t0.c24)) THEN 0X1a005d09 ELSE CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY (+ (x'')) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (CASE ((((((((-9.45384413E8)AND(x'')))AND(t0.c0)))OR(vt1.c0)))OR(v0.c0))  WHEN ((((((((vt1.c0)AND(v0.c0)))AND(t0.c24)))AND(vt1.c0)))OR(t0.c24)) THEN 0x1a005d09 ELSE CAST(v0.c0 AS NUMERIC) END) ORDER BY (+ (x'')) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0)))||(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0)))||(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0)))||(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0)))||(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0)))||(vt1.c0)));
SELECT COUNT(*) FROM t0, v0, vt1 WHERE ('vy0 GK53');
SELECT SUM(count) FROM (SELECT ALL (('vy0 GK53') IS TRUE)  as count FROM t0, v0, vt1);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE ('vy0 GK53');
SELECT SUM(count) FROM (SELECT ALL (('vy0 GK53') IS TRUE)  as count FROM t0, v0, vt1);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE ('vy0 GK53');
SELECT * FROM vt1 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0)) BETWEEN ((NULL, ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (v0.c0 IN ()))) AND ((CAST(vt1.c0 AS NUMERIC), vt1.c0, 0.720855897706911))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0)) BETWEEN ((NULL, ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (v0.c0 IN ()))) AND ((CAST(vt1.c0 AS NUMERIC), vt1.c0, 0.720855897706911))));
SELECT * FROM vt1 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0)) BETWEEN ((NULL, ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (v0.c0 IN ()))) AND ((CAST(vt1.c0 AS NUMERIC), vt1.c0, 0.720855897706911))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0)) BETWEEN ((NULL, ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (v0.c0 IN ()))) AND ((CAST(vt1.c0 AS NUMERIC), vt1.c0, 0.720855897706911))));
SELECT * FROM vt1 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0)) BETWEEN ((NULL, ((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (v0.c0 IN ()))) AND ((CAST(vt1.c0 AS NUMERIC), vt1.c0, 0.720855897706911))) WHERE (v0.c0);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0)!=(t0.c24 COLLATE BINARY))) ORDER BY ((((((t0.c0) BETWEEN (vt1.c0) AND (t0.c24)))OR(DATE(t0.c0, vt1.c0, t0.c0, vt1.c0, t0.c24))))OR(CASE t0.c0  WHEN x'b6b10ad6' THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c24 END)) DESC  NULLS LAST, ((((((((t0.c24)OR((~ (vt1.c0)))))OR(x'')))OR(((t0.c24) NOTNULL))))AND(CAST(t0.c24 AS TEXT))), (((+ (vt1.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)!=(t0.c24 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((t0.c0) BETWEEN (vt1.c0) AND (t0.c24)))OR(DATE(t0.c0, vt1.c0, t0.c0, vt1.c0, t0.c24))))OR(CASE t0.c0  WHEN x'b6b10ad6' THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c24 END)) DESC  NULLS LAST, ((((((((t0.c24)OR((~ (vt1.c0)))))OR(x'')))OR(((t0.c24) NOTNULL))))AND(CAST(t0.c24 AS TEXT))), (((+ (vt1.c0))) IS FALSE) DESC);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0)!=(t0.c24 COLLATE BINARY))) ORDER BY ((((((t0.c0) BETWEEN (vt1.c0) AND (t0.c24)))OR(DATE(t0.c0, vt1.c0, t0.c0, vt1.c0, t0.c24))))OR(CASE t0.c0  WHEN x'b6b10ad6' THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c24 END)) DESC  NULLS LAST, ((((((((t0.c24)OR((~ (vt1.c0)))))OR(x'')))OR(((t0.c24) NOTNULL))))AND(CAST(t0.c24 AS TEXT))), (((+ (vt1.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)!=(t0.c24 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((t0.c0) BETWEEN (vt1.c0) AND (t0.c24)))OR(DATE(t0.c0, vt1.c0, t0.c0, vt1.c0, t0.c24))))OR(CASE t0.c0  WHEN x'b6b10ad6' THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c24 END)) DESC  NULLS LAST, ((((((((t0.c24)OR((~ (vt1.c0)))))OR(x'')))OR(((t0.c24) NOTNULL))))AND(CAST(t0.c24 AS TEXT))), (((+ (vt1.c0))) IS FALSE) DESC);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0)!=(t0.c24 COLLATE BINARY))) ORDER BY ((((((t0.c0) BETWEEN (vt1.c0) AND (t0.c24)))OR(DATE(t0.c0, vt1.c0, t0.c0, vt1.c0, t0.c24))))OR(CASE t0.c0  WHEN x'b6b10ad6' THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c24 END)) DESC  NULLS LAST, ((((((((t0.c24)OR((~ (vt1.c0)))))OR(x'')))OR(((t0.c24) NOTNULL))))AND(CAST(t0.c24 AS TEXT))), (((+ (vt1.c0))) IS FALSE) DESC;
SELECT COUNT(*) FROM vt1, t0, v0 WHERE (((((- (v0.c0))))<>(((- (vt1.c0)))))) ORDER BY (((vt1.c0, t0.c24, vt1.c0, v0.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), (NOT (vt1.c0)), ((vt1.c0)-(t0.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) ISNULL))) AND ((((vt1.c0) ISNULL), (t0.c24 IN (vt1.c0)), t0.c0 COLLATE NOCASE, ((((v0.c0)AND(t0.c0)))AND(vt1.c0)), t0.c24))), (+ (((NULL)<>(t0.c24)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (v0.c0))))<>(((- (vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY (((vt1.c0, t0.c24, vt1.c0, v0.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), (NOT (vt1.c0)), ((vt1.c0)-(t0.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) ISNULL))) AND ((((vt1.c0) ISNULL), (t0.c24 IN (vt1.c0)), t0.c0 COLLATE NOCASE, ((((v0.c0)AND(t0.c0)))AND(vt1.c0)), t0.c24))), (+ (((NULL)!=(t0.c24)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, v0 WHERE (((((- (v0.c0))))<>(((- (vt1.c0)))))) ORDER BY (((vt1.c0, t0.c24, vt1.c0, v0.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), (NOT (vt1.c0)), ((vt1.c0)-(t0.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) ISNULL))) AND ((((vt1.c0) ISNULL), (t0.c24 IN (vt1.c0)), t0.c0 COLLATE NOCASE, ((((v0.c0)AND(t0.c0)))AND(vt1.c0)), t0.c24))), (+ (((NULL)<>(t0.c24)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (v0.c0))))<>(((- (vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY (((vt1.c0, t0.c24, vt1.c0, v0.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), (NOT (vt1.c0)), ((vt1.c0)-(t0.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) ISNULL))) AND ((((vt1.c0) ISNULL), (t0.c24 IN (vt1.c0)), t0.c0 COLLATE NOCASE, ((((v0.c0)AND(t0.c0)))AND(vt1.c0)), t0.c24))), (+ (((NULL)!=(t0.c24)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, v0 WHERE (((((- (v0.c0))))<>(((- (vt1.c0)))))) ORDER BY (((vt1.c0, t0.c24, vt1.c0, v0.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), (NOT (vt1.c0)), ((vt1.c0)-(t0.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) ISNULL))) AND ((((vt1.c0) ISNULL), (t0.c24 IN (vt1.c0)), t0.c0 COLLATE NOCASE, ((((v0.c0)AND(t0.c0)))AND(vt1.c0)), t0.c24))), (+ (((NULL)<>(t0.c24)))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE NOCASE))>((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (((- (vt1.c0)))<((vt1.c0 IN (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE NOCASE))>((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c0)))<((vt1.c0 IN (vt1.c0)))) DESC);
SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE NOCASE))>((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (((- (vt1.c0)))<((vt1.c0 IN (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE NOCASE))>((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c0)))<((vt1.c0 IN (vt1.c0)))) DESC);
SELECT * FROM vt1 WHERE ((((vt1.c0 COLLATE NOCASE))>((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (((- (vt1.c0)))<((vt1.c0 IN (vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)%(LIKELIHOOD(v0.c0, 0.9161824847146058)))) ORDER BY (((((v0.c0)>>(v0.c0))))==(((v0.c0 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 END)%(LIKELIHOOD(v0.c0, 0.9161824847146058)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)>>(v0.c0))))==(((v0.c0 IN ()))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)%(LIKELIHOOD(v0.c0, 0.9161824847146058)))) ORDER BY (((((v0.c0)>>(v0.c0))))==(((v0.c0 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 END)%(LIKELIHOOD(v0.c0, 0.9161824847146058)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)>>(v0.c0))))==(((v0.c0 IN ()))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)%(LIKELIHOOD(v0.c0, 0.9161824847146058)))) ORDER BY (((((v0.c0)>>(v0.c0))))==(((v0.c0 IN ()))))  NULLS LAST;
SELECT * FROM t0 WHERE (CASE WHEN '頻gtX+肋iHn' THEN (t0.c24 IN ()) ELSE CAST(t0.c24 AS BLOB) END) ORDER BY ((RTRIM(t0.c24))<<((+ (t0.c24)))) ASC, CASE ((t0.c0) NOTNULL)  WHEN CAST(1013013707 AS NUMERIC) THEN 'vy0 GK53' ELSE ((t0.c24)>>(t0.c0)) END, CASE WHEN (t0.c24 IN ()) THEN CAST(t0.c24 AS REAL) ELSE (~ (t0.c24)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '頻gtX+肋iHn' THEN (t0.c24 IN ()) ELSE CAST(t0.c24 AS BLOB) END) IS TRUE)  as count FROM t0 ORDER BY ((RTRIM(t0.c24))<<((+ (t0.c24)))) ASC, CASE ((t0.c0) NOTNULL)  WHEN CAST(1013013707 AS NUMERIC) THEN 'vy0 GK53' ELSE ((t0.c24)>>(t0.c0)) END, CASE WHEN (t0.c24 IN ()) THEN CAST(t0.c24 AS REAL) ELSE (~ (t0.c24)) END  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN '頻gtX+肋iHn' THEN (t0.c24 IN ()) ELSE CAST(t0.c24 AS BLOB) END) ORDER BY ((RTRIM(t0.c24))<<((+ (t0.c24)))) ASC, CASE ((t0.c0) NOTNULL)  WHEN CAST(1013013707 AS NUMERIC) THEN 'vy0 GK53' ELSE ((t0.c24)>>(t0.c0)) END, CASE WHEN (t0.c24 IN ()) THEN CAST(t0.c24 AS REAL) ELSE (~ (t0.c24)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '頻gtX+肋iHn' THEN (t0.c24 IN ()) ELSE CAST(t0.c24 AS BLOB) END) IS TRUE)  as count FROM t0 ORDER BY ((RTRIM(t0.c24))<<((+ (t0.c24)))) ASC, CASE ((t0.c0) NOTNULL)  WHEN CAST(1013013707 AS NUMERIC) THEN 'vy0 GK53' ELSE ((t0.c24)>>(t0.c0)) END, CASE WHEN (t0.c24 IN ()) THEN CAST(t0.c24 AS REAL) ELSE (~ (t0.c24)) END  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN '頻gtX+肋iHn' THEN (t0.c24 IN ()) ELSE CAST(t0.c24 AS BLOB) END) ORDER BY ((RTRIM(t0.c24))<<((+ (t0.c24)))) ASC, CASE ((t0.c0) NOTNULL)  WHEN CAST(1013013707 AS NUMERIC) THEN 'vy0 GK53' ELSE ((t0.c24)>>(t0.c0)) END, CASE WHEN (t0.c24 IN ()) THEN CAST(t0.c24 AS REAL) ELSE (~ (t0.c24)) END  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1 WHERE (((x'')IS(CASE t0.c0  WHEN vt1.c0 THEN t0.c24 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((x'')IS(CASE t0.c0  WHEN vt1.c0 THEN t0.c24 ELSE vt1.c0 END))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((x'')IS(CASE t0.c0  WHEN vt1.c0 THEN t0.c24 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((x'')IS(CASE t0.c0  WHEN vt1.c0 THEN t0.c24 ELSE vt1.c0 END))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((x'')IS(CASE t0.c0  WHEN vt1.c0 THEN t0.c24 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM t0, v0, vt1 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(t0.c24) THEN CASE t0.c0  WHEN vt1.c0 THEN v0.c0 END ELSE (((vt1.c0, x'', t0.c24))<=((v0.c0, vt1.c0, vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SQLITE_COMPILEOPTION_GET(t0.c24) THEN CASE t0.c0  WHEN vt1.c0 THEN v0.c0 END ELSE (((vt1.c0, x'', t0.c24))<=((v0.c0, vt1.c0, vt1.c0))) END) IS TRUE)  as count FROM t0, v0, vt1);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(t0.c24) THEN CASE t0.c0  WHEN vt1.c0 THEN v0.c0 END ELSE (((vt1.c0, x'', t0.c24))<=((v0.c0, vt1.c0, vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SQLITE_COMPILEOPTION_GET(t0.c24) THEN CASE t0.c0  WHEN vt1.c0 THEN v0.c0 END ELSE (((vt1.c0, x'', t0.c24))<=((v0.c0, vt1.c0, vt1.c0))) END) IS TRUE)  as count FROM t0, v0, vt1);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(t0.c24) THEN CASE t0.c0  WHEN vt1.c0 THEN v0.c0 END ELSE (((vt1.c0, x'', t0.c24))<=((v0.c0, vt1.c0, vt1.c0))) END);
SELECT * FROM vt1 WHERE ((('a')OR(json_array_length(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('a')OR(json_array_length(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((('a')OR(json_array_length(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('a')OR(json_array_length(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((('a')OR(json_array_length(vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN x'41aa' ELSE vt1.c0 END)AND(UNLIKELY(DISTINCT vt1.c0))))OR((vt1.c0 IN (vt1.c0))))) ORDER BY json_object(INSTR(vt1.c0, vt1.c0), ((vt1.c0)%(vt1.c0)), CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c0 THEN x'41aa' ELSE vt1.c0 END)AND(UNLIKELY(DISTINCT vt1.c0))))OR((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY json_object(INSTR(vt1.c0, vt1.c0), ((vt1.c0)%(vt1.c0)), CAST(vt1.c0 AS TEXT), (vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN x'41aa' ELSE vt1.c0 END)AND(UNLIKELY(DISTINCT vt1.c0))))OR((vt1.c0 IN (vt1.c0))))) ORDER BY json_object(INSTR(vt1.c0, vt1.c0), ((vt1.c0)%(vt1.c0)), CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c0 THEN x'41aa' ELSE vt1.c0 END)AND(UNLIKELY(DISTINCT vt1.c0))))OR((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY json_object(INSTR(vt1.c0, vt1.c0), ((vt1.c0)%(vt1.c0)), CAST(vt1.c0 AS TEXT), (vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN x'41aa' ELSE vt1.c0 END)AND(UNLIKELY(DISTINCT vt1.c0))))OR((vt1.c0 IN (vt1.c0))))) ORDER BY json_object(INSTR(vt1.c0, vt1.c0), ((vt1.c0)%(vt1.c0)), CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()));
SELECT ALL * FROM t0 WHERE (((json_valid(t0.c0)) BETWEEN (CAST(t0.c24 AS NUMERIC)) AND ('831584972')));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(t0.c0)) BETWEEN (CAST(t0.c24 AS NUMERIC)) AND ('831584972'))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((json_valid(t0.c0)) BETWEEN (CAST(t0.c24 AS NUMERIC)) AND ('831584972')));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(t0.c0)) BETWEEN (CAST(t0.c24 AS NUMERIC)) AND ('831584972'))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((json_valid(t0.c0)) BETWEEN (CAST(t0.c24 AS NUMERIC)) AND ('831584972')));
SELECT ALL * FROM v0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)AND((((v0.c0, vt1.c0, v0.c0))<((vt1.c0, vt1.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)AND((((v0.c0, vt1.c0, v0.c0))<((vt1.c0, vt1.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)AND((((v0.c0, vt1.c0, v0.c0))<((vt1.c0, vt1.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)AND((((v0.c0, vt1.c0, v0.c0))<((vt1.c0, vt1.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)AND((((v0.c0, vt1.c0, v0.c0))<((vt1.c0, vt1.c0, v0.c0))))));
SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY 'z' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY 'z' ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY 'z' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY 'z' ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY 'z' ASC;
SELECT COUNT(*) FROM v0, vt1, t0 WHERE ((IFNULL(DISTINCT t0.c24, t0.c24) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(DISTINCT t0.c24, t0.c24) IN ())) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE ((IFNULL(DISTINCT t0.c24, t0.c24) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(DISTINCT t0.c24, t0.c24) IN ())) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE ((IFNULL(DISTINCT t0.c24, t0.c24) IN ()));
SELECT ALL * FROM t0, v0, vt1 WHERE (CASE ((t0.c24)>=(t0.c24))  WHEN (t0.c24 IN ()) THEN vt1.c0 WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) THEN TYPEOF(v0.c0) WHEN CHANGES() THEN ((t0.c0)+(vt1.c0)) ELSE (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c24)>=(t0.c24))  WHEN (t0.c24 IN ()) THEN vt1.c0 WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) THEN TYPEOF(v0.c0) WHEN CHANGES() THEN ((t0.c0)+(vt1.c0)) ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE (CASE ((t0.c24)>=(t0.c24))  WHEN (t0.c24 IN ()) THEN vt1.c0 WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) THEN TYPEOF(v0.c0) WHEN CHANGES() THEN ((t0.c0)+(vt1.c0)) ELSE (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c24)>=(t0.c24))  WHEN (t0.c24 IN ()) THEN vt1.c0 WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) THEN TYPEOF(v0.c0) WHEN CHANGES() THEN ((t0.c0)+(vt1.c0)) ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE (CASE ((t0.c24)>=(t0.c24))  WHEN (t0.c24 IN ()) THEN vt1.c0 WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) THEN TYPEOF(v0.c0) WHEN CHANGES() THEN ((t0.c0)+(vt1.c0)) ELSE (v0.c0 IN ()) END);
SELECT COUNT(*) FROM vt1, v0 NATURAL JOIN t0 WHERE (((x'' IN ()) IN ((((t0.c24)) BETWEEN ((t0.c0)) AND ((v0.c0))), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN ()) IN ((((t0.c24)) BETWEEN ((t0.c0)) AND ((v0.c0))), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt1, v0 NATURAL JOIN t0 ORDER BY v0.c0);
SELECT COUNT(*) FROM vt1, v0 NATURAL JOIN t0 WHERE (((x'' IN ()) IN ((((t0.c24)) BETWEEN ((t0.c0)) AND ((v0.c0))), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN ()) IN ((((t0.c24)) BETWEEN ((t0.c0)) AND ((v0.c0))), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt1, v0 NATURAL JOIN t0 ORDER BY v0.c0);
SELECT COUNT(*) FROM vt1, v0 NATURAL JOIN t0 WHERE (((x'' IN ()) IN ((((t0.c24)) BETWEEN ((t0.c0)) AND ((v0.c0))), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0))))) ORDER BY v0.c0;
SELECT COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY '1006006156' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY '1006006156' DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY '1006006156' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY '1006006156' DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY '1006006156' DESC  NULLS LAST;
SELECT ALL * FROM vt1, v0, t0 WHERE (CASE (t0.c0 IN ())  WHEN ((v0.c0)%(t0.c0)) THEN (('-1349075018')+(t0.c0)) END) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN ())  WHEN ((v0.c0)%(t0.c0)) THEN (('-1349075018')+(t0.c0)) END) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY NULL ASC);
SELECT ALL * FROM vt1, v0, t0 WHERE (CASE (t0.c0 IN ())  WHEN ((v0.c0)%(t0.c0)) THEN (('-1349075018')+(t0.c0)) END) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN ())  WHEN ((v0.c0)%(t0.c0)) THEN (('-1349075018')+(t0.c0)) END) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY NULL ASC);
SELECT ALL * FROM vt1, v0, t0 WHERE (CASE (t0.c0 IN ())  WHEN ((v0.c0)%(t0.c0)) THEN (('-1349075018')+(t0.c0)) END) ORDER BY NULL ASC;
SELECT * FROM t0 WHERE ((0x70f9ccd IN ()));
SELECT SUM(count) FROM (SELECT (((0x70f9ccd IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((0x70f9ccd IN ()));
SELECT SUM(count) FROM (SELECT (((0x70f9ccd IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((0x70f9ccd IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)IS NOT(x'fa1e')))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)IS NOT(x'fa1e')))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)IS NOT(x'fa1e')))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)IS NOT(x'fa1e')))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)IS NOT(x'fa1e')))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (CAST((- (t0.c0)) AS REAL)) ORDER BY x''  NULLS LAST, (((t0.c0) BETWEEN (t0.c0) AND (v0.c0)) IN (((((t0.c0)OR(vt1.c0)))AND(0.5517819457779639))));
SELECT SUM(count) FROM (SELECT ((CAST((- (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY x''  NULLS LAST, (((t0.c0) BETWEEN (t0.c0) AND (v0.c0)) IN (((((t0.c0)OR(vt1.c0)))AND(0.5517819457779639)))));
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (CAST((- (t0.c0)) AS REAL)) ORDER BY x''  NULLS LAST, (((t0.c0) BETWEEN (t0.c0) AND (v0.c0)) IN (((((t0.c0)OR(vt1.c0)))AND(0.5517819457779639))));
SELECT SUM(count) FROM (SELECT ((CAST((- (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY x''  NULLS LAST, (((t0.c0) BETWEEN (t0.c0) AND (v0.c0)) IN (((((t0.c0)OR(vt1.c0)))AND(0.5517819457779639)))));
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (CAST((- (t0.c0)) AS REAL)) ORDER BY x''  NULLS LAST, (((t0.c0) BETWEEN (t0.c0) AND (v0.c0)) IN (((((t0.c0)OR(vt1.c0)))AND(0.5517819457779639))));
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0)GLOB(v0.c0))))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL));
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0)GLOB(v0.c0))))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL));
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0)GLOB(v0.c0))))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL);
SELECT ALL * FROM t0, vt1, v0 WHERE ((((((v0.c0))<=((t0.c24))))!=(t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<=((t0.c24))))<>(t0.c0))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL * FROM t0, vt1, v0 WHERE ((((((v0.c0))<=((t0.c24))))!=(t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<=((t0.c24))))<>(t0.c0))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL * FROM t0, vt1, v0 WHERE ((((((v0.c0))<=((t0.c24))))!=(t0.c0)));
SELECT COUNT(*) FROM v0 NOT INDEXED, t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c24) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) BETWEEN (t0.c24) AND (v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0 NOT INDEXED, t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c24) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) BETWEEN (t0.c24) AND (v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0 NOT INDEXED, t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c24) AND (v0.c0)))));
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (t0.c0);
SELECT * FROM t0, v0 WHERE (CAST(t0.c0 COLLATE BINARY AS TEXT)) ORDER BY ((((('176749808', t0.c0, t0.c24))>((t0.c0, t0.c0, v0.c0))))LIKE((+ (t0.c0))))  NULLS LAST, (t0.c24 COLLATE BINARY IN ())  NULLS LAST, '1102051633' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((('176749808', t0.c0, t0.c24))>((t0.c0, t0.c0, v0.c0))))LIKE((+ (t0.c0))))  NULLS LAST, (t0.c24 COLLATE BINARY IN ())  NULLS LAST, '1102051633' ASC);
SELECT * FROM t0, v0 WHERE (CAST(t0.c0 COLLATE BINARY AS TEXT)) ORDER BY ((((('176749808', t0.c0, t0.c24))>((t0.c0, t0.c0, v0.c0))))LIKE((+ (t0.c0))))  NULLS LAST, (t0.c24 COLLATE BINARY IN ())  NULLS LAST, '1102051633' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((('176749808', t0.c0, t0.c24))>((t0.c0, t0.c0, v0.c0))))LIKE((+ (t0.c0))))  NULLS LAST, (t0.c24 COLLATE BINARY IN ())  NULLS LAST, '1102051633' ASC);
SELECT * FROM t0, v0 WHERE (CAST(t0.c0 COLLATE BINARY AS TEXT)) ORDER BY ((((('176749808', t0.c0, t0.c24))>((t0.c0, t0.c0, v0.c0))))LIKE((+ (t0.c0))))  NULLS LAST, (t0.c24 COLLATE BINARY IN ())  NULLS LAST, '1102051633' ASC;
SELECT * FROM t0, vt1 WHERE (((MAX(vt1.c0, t0.c0, x'38a1', t0.c24))<=(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((MAX(vt1.c0, t0.c0, x'38a1', t0.c24))<=(t0.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((MAX(vt1.c0, t0.c0, x'38a1', t0.c24))<=(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((MAX(vt1.c0, t0.c0, x'38a1', t0.c24))<=(t0.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((MAX(vt1.c0, t0.c0, x'38a1', t0.c24))<=(t0.c0)));
SELECT COUNT(*) FROM vt1, t0 WHERE (LOWER(DISTINCT t0.c0)) ORDER BY ((((t0.c24) NOTNULL)) BETWEEN (COALESCE(t0.c24, t0.c0)) AND (0.6085382427815668)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT t0.c0)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((t0.c24) NOTNULL)) BETWEEN (COALESCE(t0.c24, t0.c0)) AND (0.6085382427815668)) DESC);
SELECT COUNT(*) FROM vt1, t0 WHERE (LOWER(DISTINCT t0.c0)) ORDER BY ((((t0.c24) NOTNULL)) BETWEEN (COALESCE(t0.c24, t0.c0)) AND (0.6085382427815668)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT t0.c0)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((t0.c24) NOTNULL)) BETWEEN (COALESCE(t0.c24, t0.c0)) AND (0.6085382427815668)) DESC);
SELECT COUNT(*) FROM vt1, t0 WHERE (LOWER(DISTINCT t0.c0)) ORDER BY ((((t0.c24) NOTNULL)) BETWEEN (COALESCE(t0.c24, t0.c0)) AND (0.6085382427815668)) DESC;
SELECT COUNT(*) FROM vt1, v0, t0 WHERE ((((((vt1.c0, v0.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, x'1160'))))<<(((((((((0.720855897706911)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(t0.c24)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, v0.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, x'1160'))))<<(((((((((0.720855897706911)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(t0.c24))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE ((((((vt1.c0, v0.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, x'1160'))))<<(((((((((0.720855897706911)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(t0.c24)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, v0.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, x'1160'))))<<(((((((((0.720855897706911)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(t0.c24))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE ((((((vt1.c0, v0.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, x'1160'))))<<(((((((((0.720855897706911)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(t0.c24)))));
SELECT COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt1 ON (((vt1.c0, t0.c0, v0.c0)) NOT BETWEEN ((((t0.c24)>=(vt1.c0)), NULLIF(t0.c24, v0.c0), (NOT (-1.746253619E9)))) AND ((CAST(t0.c0 AS REAL), t0.c24 COLLATE RTRIM, ((NULL)GLOB(t0.c24))))) WHERE (CASE WHEN (- (t0.c24)) THEN ((t0.c0)OR(t0.c24)) ELSE CASE WHEN 0.49249983073632886 THEN vt1.c0 WHEN v0.c0 THEN t0.c24 WHEN t0.c24 THEN vt1.c0 ELSE 0.5785354697492667 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c24)) THEN ((t0.c0)OR(t0.c24)) ELSE CASE WHEN 0.49249983073632886 THEN vt1.c0 WHEN v0.c0 THEN t0.c24 WHEN t0.c24 THEN vt1.c0 ELSE 0.5785354697492667 END END) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt1 ON (((vt1.c0, t0.c0, v0.c0)) NOT BETWEEN ((((t0.c24)>=(vt1.c0)), NULLIF(t0.c24, v0.c0), (NOT (-1.746253619E9)))) AND ((CAST(t0.c0 AS REAL), t0.c24 COLLATE RTRIM, ((NULL)GLOB(t0.c24))))));
SELECT COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt1 ON (((vt1.c0, t0.c0, v0.c0)) NOT BETWEEN ((((t0.c24)>=(vt1.c0)), NULLIF(t0.c24, v0.c0), (NOT (-1.746253619E9)))) AND ((CAST(t0.c0 AS REAL), t0.c24 COLLATE RTRIM, ((NULL)GLOB(t0.c24))))) WHERE (CASE WHEN (- (t0.c24)) THEN ((t0.c0)OR(t0.c24)) ELSE CASE WHEN 0.49249983073632886 THEN vt1.c0 WHEN v0.c0 THEN t0.c24 WHEN t0.c24 THEN vt1.c0 ELSE 0.5785354697492667 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c24)) THEN ((t0.c0)OR(t0.c24)) ELSE CASE WHEN 0.49249983073632886 THEN vt1.c0 WHEN v0.c0 THEN t0.c24 WHEN t0.c24 THEN vt1.c0 ELSE 0.5785354697492667 END END) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt1 ON (((vt1.c0, t0.c0, v0.c0)) NOT BETWEEN ((((t0.c24)>=(vt1.c0)), NULLIF(t0.c24, v0.c0), (NOT (-1.746253619E9)))) AND ((CAST(t0.c0 AS REAL), t0.c24 COLLATE RTRIM, ((NULL)GLOB(t0.c24))))));
SELECT COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt1 ON (((vt1.c0, t0.c0, v0.c0)) NOT BETWEEN ((((t0.c24)>=(vt1.c0)), NULLIF(t0.c24, v0.c0), (NOT (-1.746253619E9)))) AND ((CAST(t0.c0 AS REAL), t0.c24 COLLATE RTRIM, ((NULL)GLOB(t0.c24))))) WHERE (CASE WHEN (- (t0.c24)) THEN ((t0.c0)OR(t0.c24)) ELSE CASE WHEN 0.49249983073632886 THEN vt1.c0 WHEN v0.c0 THEN t0.c24 WHEN t0.c24 THEN vt1.c0 ELSE 0.5785354697492667 END END);
SELECT COUNT(*) FROM vt1 WHERE ((((-2.76594549E8, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), NULL, ((((NULL)AND(vt1.c0)))AND(x'')))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST('-276594549' AS TEXT))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((-2.76594549E8, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), NULL, ((((NULL)AND(vt1.c0)))AND(x'')))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST('-276594549' AS TEXT))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE ((((-2.76594549E8, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), NULL, ((((NULL)AND(vt1.c0)))AND(x'')))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST('-276594549' AS TEXT))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((-2.76594549E8, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), NULL, ((((NULL)AND(vt1.c0)))AND(x'')))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST('-276594549' AS TEXT))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE ((((-2.76594549E8, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) ISNULL), NULL, ((((NULL)AND(vt1.c0)))AND(x'')))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST('-276594549' AS TEXT))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ());
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((v0.c0) IS FALSE) IN ()) INNER JOIN vt1 ON ((((CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c24) BETWEEN (v0.c0) AND (t0.c24)))))OR('-1349075018')) WHERE (x'') ORDER BY ((x'')<((((v0.c0, t0.c0, t0.c0))<=((0x3190facc, v0.c0, t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((v0.c0) IS FALSE) IN ()) INNER JOIN vt1 ON ((((CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c24) BETWEEN (v0.c0) AND (t0.c24)))))OR('-1349075018')) ORDER BY ((x'')<((((v0.c0, t0.c0, t0.c0))<=((0x3190facc, v0.c0, t0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((v0.c0) IS FALSE) IN ()) INNER JOIN vt1 ON ((((CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c24) BETWEEN (v0.c0) AND (t0.c24)))))OR('-1349075018')) WHERE (x'') ORDER BY ((x'')<((((v0.c0, t0.c0, t0.c0))<=((0x3190facc, v0.c0, t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((v0.c0) IS FALSE) IN ()) INNER JOIN vt1 ON ((((CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c24) BETWEEN (v0.c0) AND (t0.c24)))))OR('-1349075018')) ORDER BY ((x'')<((((v0.c0, t0.c0, t0.c0))<=((0x3190facc, v0.c0, t0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((v0.c0) IS FALSE) IN ()) INNER JOIN vt1 ON ((((CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c24) BETWEEN (v0.c0) AND (t0.c24)))))OR('-1349075018')) WHERE (x'') ORDER BY ((x'')<((((v0.c0, t0.c0, t0.c0))<=((0x3190facc, v0.c0, t0.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, vt1 WHERE ((((((t0.c24))>((v0.c0))))>>(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c24))>((v0.c0))))>>(x''))) IS TRUE)  as count FROM t0, v0, vt1);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE ((((((t0.c24))>((v0.c0))))>>(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c24))>((v0.c0))))>>(x''))) IS TRUE)  as count FROM t0, v0, vt1);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE ((((((t0.c24))>((v0.c0))))>>(x'')));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) BETWEEN (x'4cb9') AND (v0.c0)))OR(((v0.c0) IS TRUE))))AND((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (x'4cb9') AND (v0.c0)))OR(((v0.c0) IS TRUE))))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) BETWEEN (x'4cb9') AND (v0.c0)))OR(((v0.c0) IS TRUE))))AND((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (x'4cb9') AND (v0.c0)))OR(((v0.c0) IS TRUE))))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) BETWEEN (x'4cb9') AND (v0.c0)))OR(((v0.c0) IS TRUE))))AND((+ (v0.c0)))));
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (((vt1.c0)GLOB(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)GLOB(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (((vt1.c0)GLOB(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)GLOB(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (((vt1.c0)GLOB(v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (CASE WHEN DATETIME(t0.c0, t0.c0, t0.c24) THEN CASE t0.c0  WHEN t0.c24 THEN t0.c0 END ELSE NULL END) ORDER BY ((((ABS(t0.c0))OR((t0.c0 IN ()))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN DATETIME(t0.c0, t0.c0, t0.c24) THEN CASE t0.c0  WHEN t0.c24 THEN t0.c0 END ELSE NULL END) IS TRUE)  as count FROM t0 ORDER BY ((((ABS(t0.c0))OR((t0.c0 IN ()))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT ALL * FROM t0 WHERE (CASE WHEN DATETIME(t0.c0, t0.c0, t0.c24) THEN CASE t0.c0  WHEN t0.c24 THEN t0.c0 END ELSE NULL END) ORDER BY ((((ABS(t0.c0))OR((t0.c0 IN ()))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN DATETIME(t0.c0, t0.c0, t0.c24) THEN CASE t0.c0  WHEN t0.c24 THEN t0.c0 END ELSE NULL END) IS TRUE)  as count FROM t0 ORDER BY ((((ABS(t0.c0))OR((t0.c0 IN ()))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT ALL * FROM t0 WHERE (CASE WHEN DATETIME(t0.c0, t0.c0, t0.c24) THEN CASE t0.c0  WHEN t0.c24 THEN t0.c0 END ELSE NULL END) ORDER BY ((((ABS(t0.c0))OR((t0.c0 IN ()))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN TYPEOF(NULL) WHEN DATE(NULL, v0.c0, v0.c0) THEN CAST('FALSE' AS INTEGER) WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN TYPEOF(NULL) WHEN DATE(NULL, v0.c0, v0.c0) THEN CAST('FALSE' AS INTEGER) WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN TYPEOF(NULL) WHEN DATE(NULL, v0.c0, v0.c0) THEN CAST('FALSE' AS INTEGER) WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN TYPEOF(NULL) WHEN DATE(NULL, v0.c0, v0.c0) THEN CAST('FALSE' AS INTEGER) WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN TYPEOF(NULL) WHEN DATE(NULL, v0.c0, v0.c0) THEN CAST('FALSE' AS INTEGER) WHEN CAST(v0.c0 AS NUMERIC) THEN ((v0.c0) NOTNULL) END);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c24)<<('227198268'))) IS FALSE)) ORDER BY t0.c0, ((((((t0.c0)>=(t0.c0)))AND(((t0.c24)>(NULL)))))AND(((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0))))  NULLS FIRST, (((+ (t0.c24))) BETWEEN (json_patch(t0.c24, t0.c0)) AND (((t0.c24)==(t0.c24)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c24)<<('227198268'))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY t0.c0, ((((((t0.c0)>=(t0.c0)))AND(((t0.c24)>(NULL)))))AND(((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0))))  NULLS FIRST, (((+ (t0.c24))) BETWEEN (json_patch(t0.c24, t0.c0)) AND (((t0.c24)=(t0.c24)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c24)<<('227198268'))) IS FALSE)) ORDER BY t0.c0, ((((((t0.c0)>=(t0.c0)))AND(((t0.c24)>(NULL)))))AND(((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0))))  NULLS FIRST, (((+ (t0.c24))) BETWEEN (json_patch(t0.c24, t0.c0)) AND (((t0.c24)==(t0.c24)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c24)<<('227198268'))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY t0.c0, ((((((t0.c0)>=(t0.c0)))AND(((t0.c24)>(NULL)))))AND(((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0))))  NULLS FIRST, (((+ (t0.c24))) BETWEEN (json_patch(t0.c24, t0.c0)) AND (((t0.c24)=(t0.c24)))) ASC);
SELECT COUNT(*) FROM vt1, v0 CROSS JOIN t0 ON ((HEX(DISTINCT v0.c0)) BETWEEN (((((t0.c0)OR(v0.c0)))OR(v0.c0))) AND ((((t0.c24, vt1.c0, 0.17040582237287316)) BETWEEN (('1102051633', t0.c24, '1357564074')) AND ((vt1.c0, t0.c0, v0.c0))))) WHERE (((v0.c0) BETWEEN (t0.c24) AND (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (t0.c24) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0 CROSS JOIN t0 ON ((HEX(DISTINCT v0.c0)) BETWEEN (((((t0.c0)OR(v0.c0)))OR(v0.c0))) AND ((((t0.c24, vt1.c0, 0.17040582237287316)) BETWEEN (('1102051633', t0.c24, '1357564074')) AND ((vt1.c0, t0.c0, v0.c0))))));
SELECT COUNT(*) FROM vt1, v0 CROSS JOIN t0 ON ((HEX(DISTINCT v0.c0)) BETWEEN (((((t0.c0)OR(v0.c0)))OR(v0.c0))) AND ((((t0.c24, vt1.c0, 0.17040582237287316)) BETWEEN (('1102051633', t0.c24, '1357564074')) AND ((vt1.c0, t0.c0, v0.c0))))) WHERE (((v0.c0) BETWEEN (t0.c24) AND (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (t0.c24) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0 CROSS JOIN t0 ON ((HEX(DISTINCT v0.c0)) BETWEEN (((((t0.c0)OR(v0.c0)))OR(v0.c0))) AND ((((t0.c24, vt1.c0, 0.17040582237287316)) BETWEEN (('1102051633', t0.c24, '1357564074')) AND ((vt1.c0, t0.c0, v0.c0))))));
SELECT COUNT(*) FROM vt1, v0 CROSS JOIN t0 ON ((HEX(DISTINCT v0.c0)) BETWEEN (((((t0.c0)OR(v0.c0)))OR(v0.c0))) AND ((((t0.c24, vt1.c0, 0.17040582237287316)) BETWEEN (('1102051633', t0.c24, '1357564074')) AND ((vt1.c0, t0.c0, v0.c0))))) WHERE (((v0.c0) BETWEEN (t0.c24) AND (t0.c0)) COLLATE NOCASE);
SELECT * FROM vt1, t0 WHERE ((x'3db153142d8c' IN ()));
SELECT SUM(count) FROM (SELECT (((x'3db153142d8c' IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((x'3db153142d8c' IN ()));
SELECT SUM(count) FROM (SELECT (((x'3db153142d8c' IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((x'3db153142d8c' IN ()));
SELECT ALL * FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('');
SELECT * FROM vt1 CROSS JOIN t0 ON NULL WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((t0.c0)<(t0.c0)) THEN ((t0.c24)<('VY0 GK53')) ELSE (t0.c24 IN (vt1.c0)) END) ORDER BY t0.c0  NULLS FIRST, CAST(vt1.c0 COLLATE NOCASE AS INTEGER)  NULLS FIRST, ((((t0.c24) ISNULL)) BETWEEN ((((t0.c24, t0.c0, t0.c0))>((t0.c24, vt1.c0, vt1.c0)))) AND (((vt1.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS INTEGER)  WHEN ((t0.c0)<(t0.c0)) THEN ((t0.c24)<('VY0 GK53')) ELSE (t0.c24 IN (vt1.c0)) END) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON NULL ORDER BY t0.c0  NULLS FIRST, CAST(vt1.c0 COLLATE NOCASE AS INTEGER)  NULLS FIRST, ((((t0.c24) ISNULL)) BETWEEN ((((t0.c24, t0.c0, t0.c0))>((t0.c24, vt1.c0, vt1.c0)))) AND (((vt1.c0) ISNULL)))  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN t0 ON NULL WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((t0.c0)<(t0.c0)) THEN ((t0.c24)<('VY0 GK53')) ELSE (t0.c24 IN (vt1.c0)) END) ORDER BY t0.c0  NULLS FIRST, CAST(vt1.c0 COLLATE NOCASE AS INTEGER)  NULLS FIRST, ((((t0.c24) ISNULL)) BETWEEN ((((t0.c24, t0.c0, t0.c0))>((t0.c24, vt1.c0, vt1.c0)))) AND (((vt1.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS INTEGER)  WHEN ((t0.c0)<(t0.c0)) THEN ((t0.c24)<('VY0 GK53')) ELSE (t0.c24 IN (vt1.c0)) END) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON NULL ORDER BY t0.c0  NULLS FIRST, CAST(vt1.c0 COLLATE NOCASE AS INTEGER)  NULLS FIRST, ((((t0.c24) ISNULL)) BETWEEN ((((t0.c24, t0.c0, t0.c0))>((t0.c24, vt1.c0, vt1.c0)))) AND (((vt1.c0) ISNULL)))  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN t0 ON NULL WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((t0.c0)<(t0.c0)) THEN ((t0.c24)<('VY0 GK53')) ELSE (t0.c24 IN (vt1.c0)) END) ORDER BY t0.c0  NULLS FIRST, CAST(vt1.c0 COLLATE NOCASE AS INTEGER)  NULLS FIRST, ((((t0.c24) ISNULL)) BETWEEN ((((t0.c24, t0.c0, t0.c0))>((t0.c24, vt1.c0, vt1.c0)))) AND (((vt1.c0) ISNULL)))  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE (('XP' COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('XP' COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (('XP' COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('XP' COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (('XP' COLLATE RTRIM IN ()));
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON (+ (CASE v0.c0  WHEN t0.c0 THEN t0.c24 ELSE v0.c0 END)) WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ALL ((t0.c24) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (+ (CASE v0.c0  WHEN t0.c0 THEN t0.c24 ELSE v0.c0 END)));
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON (+ (CASE v0.c0  WHEN t0.c0 THEN t0.c24 ELSE v0.c0 END)) WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ALL ((t0.c24) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (+ (CASE v0.c0  WHEN t0.c0 THEN t0.c24 ELSE v0.c0 END)));
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON (+ (CASE v0.c0  WHEN t0.c0 THEN t0.c24 ELSE v0.c0 END)) WHERE (t0.c24);
SELECT * FROM t0, v0 FULL OUTER JOIN vt1 ON ((DATETIME(t0.c24, vt1.c0, v0.c0, t0.c0, t0.c0, x'', '176749808')) BETWEEN (((t0.c24) NOT BETWEEN (v0.c0) AND (vt1.c0))) AND (t0.c24)) WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY IFNULL(DISTINCT ((v0.c0)AND(t0.c0)), ((t0.c0) ISNULL)) DESC  NULLS FIRST, '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt1 ON ((DATETIME(t0.c24, vt1.c0, v0.c0, t0.c0, t0.c0, x'', '176749808')) BETWEEN (((t0.c24) NOT BETWEEN (v0.c0) AND (vt1.c0))) AND (t0.c24)) ORDER BY IFNULL(DISTINCT ((v0.c0)AND(t0.c0)), ((t0.c0) ISNULL)) DESC  NULLS FIRST, '' DESC  NULLS FIRST);
SELECT * FROM t0, v0 FULL OUTER JOIN vt1 ON ((DATETIME(t0.c24, vt1.c0, v0.c0, t0.c0, t0.c0, x'', '176749808')) BETWEEN (((t0.c24) NOT BETWEEN (v0.c0) AND (vt1.c0))) AND (t0.c24)) WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY IFNULL(DISTINCT ((v0.c0)AND(t0.c0)), ((t0.c0) ISNULL)) DESC  NULLS FIRST, '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt1 ON ((DATETIME(t0.c24, vt1.c0, v0.c0, t0.c0, t0.c0, x'', '176749808')) BETWEEN (((t0.c24) NOT BETWEEN (v0.c0) AND (vt1.c0))) AND (t0.c24)) ORDER BY IFNULL(DISTINCT ((v0.c0)AND(t0.c0)), ((t0.c0) ISNULL)) DESC  NULLS FIRST, '' DESC  NULLS FIRST);
SELECT * FROM t0, v0 FULL OUTER JOIN vt1 ON ((DATETIME(t0.c24, vt1.c0, v0.c0, t0.c0, t0.c0, x'', '176749808')) BETWEEN (((t0.c24) NOT BETWEEN (v0.c0) AND (vt1.c0))) AND (t0.c24)) WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY IFNULL(DISTINCT ((v0.c0)AND(t0.c0)), ((t0.c0) ISNULL)) DESC  NULLS FIRST, '' DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)), ((v0.c0) IS FALSE), ((v0.c0) IS FALSE))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END, x'7ab8' COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)), ((v0.c0) IS FALSE), ((v0.c0) IS FALSE))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END, x'7ab8' COLLATE NOCASE)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)), ((v0.c0) IS FALSE), ((v0.c0) IS FALSE))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END, x'7ab8' COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)), ((v0.c0) IS FALSE), ((v0.c0) IS FALSE))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END, x'7ab8' COLLATE NOCASE)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)LIKE(v0.c0)), ((v0.c0) IS FALSE), ((v0.c0) IS FALSE))) AND ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 END, x'7ab8' COLLATE NOCASE))));
SELECT ALL * FROM vt1 WHERE ('7삃') ORDER BY (((((vt1.c0)) NOT BETWEEN ((x'452808ef5b33')) AND ((vt1.c0))))>>(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('7삃') IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((x'452808ef5b33')) AND ((vt1.c0))))>>(vt1.c0)) ASC);
SELECT ALL * FROM vt1 WHERE ('7삃') ORDER BY (((((vt1.c0)) NOT BETWEEN ((x'452808ef5b33')) AND ((vt1.c0))))>>(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('7삃') IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((x'452808ef5b33')) AND ((vt1.c0))))>>(vt1.c0)) ASC);
SELECT ALL * FROM vt1 WHERE ('7삃') ORDER BY (((((vt1.c0)) NOT BETWEEN ((x'452808ef5b33')) AND ((vt1.c0))))>>(vt1.c0)) ASC;
SELECT * FROM v0 WHERE (0X7a2d387) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((0x7a2d387) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT * FROM v0 WHERE (0X7a2d387) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((0x7a2d387) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT * FROM v0 WHERE (0X7a2d387) ORDER BY v0.c0 DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) ORDER BY t0.c24 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY t0.c24 COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) ORDER BY t0.c24 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY t0.c24 COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) ORDER BY t0.c24 COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN v0 ON ((v0.c0) IS FALSE) WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ALL ((t0.c24) IS TRUE)  as count FROM vt1, t0 CROSS JOIN v0 ON ((v0.c0) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN v0 ON ((v0.c0) IS FALSE) WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ALL ((t0.c24) IS TRUE)  as count FROM vt1, t0 CROSS JOIN v0 ON ((v0.c0) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN v0 ON ((v0.c0) IS FALSE) WHERE (t0.c24);
SELECT * FROM vt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST((+ (v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST((+ (v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST((+ (v0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON 0.951152589844318 WHERE (((JULIANDAY(vt1.c0, vt1.c0, v0.c0)) BETWEEN ((NOT (v0.c0))) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(vt1.c0, vt1.c0, v0.c0)) BETWEEN ((NOT (v0.c0))) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON 0.951152589844318);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON 0.951152589844318 WHERE (((JULIANDAY(vt1.c0, vt1.c0, v0.c0)) BETWEEN ((NOT (v0.c0))) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(vt1.c0, vt1.c0, v0.c0)) BETWEEN ((NOT (v0.c0))) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON 0.951152589844318);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON 0.951152589844318 WHERE (((JULIANDAY(vt1.c0, vt1.c0, v0.c0)) BETWEEN ((NOT (v0.c0))) AND ((+ (vt1.c0)))));
SELECT * FROM vt1, t0 INNER JOIN v0 ON ((~ (vt1.c0)) IN ()) WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (((((t0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (((v0.c0)==(t0.c24))))) ORDER BY CAST(v0.c0 AS TEXT) DESC, CAST(vt1.c0 COLLATE RTRIM AS TEXT)  NULLS LAST, ((((((((((t0.c24)AND(vt1.c0)))OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))>>(((t0.c24) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) NOT BETWEEN (((((t0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (((v0.c0)==(t0.c24))))) IS TRUE)  as count FROM vt1, t0 INNER JOIN v0 ON ((~ (vt1.c0)) IN ()) ORDER BY CAST(v0.c0 AS TEXT) DESC, CAST(vt1.c0 COLLATE RTRIM AS TEXT)  NULLS LAST, ((((((((((t0.c24)AND(vt1.c0)))OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))>>(((t0.c24) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM vt1, t0 INNER JOIN v0 ON ((~ (vt1.c0)) IN ()) WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (((((t0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (((v0.c0)==(t0.c24))))) ORDER BY CAST(v0.c0 AS TEXT) DESC, CAST(vt1.c0 COLLATE RTRIM AS TEXT)  NULLS LAST, ((((((((((t0.c24)AND(vt1.c0)))OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))>>(((t0.c24) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) NOT BETWEEN (((((t0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (((v0.c0)==(t0.c24))))) IS TRUE)  as count FROM vt1, t0 INNER JOIN v0 ON ((~ (vt1.c0)) IN ()) ORDER BY CAST(v0.c0 AS TEXT) DESC, CAST(vt1.c0 COLLATE RTRIM AS TEXT)  NULLS LAST, ((((((((((t0.c24)AND(vt1.c0)))OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))>>(((t0.c24) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM vt1, t0 INNER JOIN v0 ON ((~ (vt1.c0)) IN ()) WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (((((t0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (((v0.c0)==(t0.c24))))) ORDER BY CAST(v0.c0 AS TEXT) DESC, CAST(vt1.c0 COLLATE RTRIM AS TEXT)  NULLS LAST, ((((((((((t0.c24)AND(vt1.c0)))OR(t0.c0)))OR(v0.c0)))OR(v0.c0)))>>(((t0.c24) BETWEEN (v0.c0) AND (v0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))*(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(vt1.c0)))*(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))*(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(vt1.c0)))*(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))*(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (x'') ORDER BY LIKELIHOOD(DISTINCT IFNULL(t0.c0, t0.c24), 0.595281002623274) DESC, ((t0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt1, v0 ORDER BY LIKELIHOOD(DISTINCT IFNULL(t0.c0, t0.c24), 0.595281002623274) DESC, ((t0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (x'') ORDER BY LIKELIHOOD(DISTINCT IFNULL(t0.c0, t0.c24), 0.595281002623274) DESC, ((t0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt1, v0 ORDER BY LIKELIHOOD(DISTINCT IFNULL(t0.c0, t0.c24), 0.595281002623274) DESC, ((t0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (x'') ORDER BY LIKELIHOOD(DISTINCT IFNULL(t0.c0, t0.c24), 0.595281002623274) DESC, ((t0.c0) IS TRUE);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (NULL) ORDER BY (((((((t0.c24))>((t0.c24))))AND(((t0.c24)AND(vt1.c0)))))OR(ABS(DISTINCT t0.c24))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((t0.c24))>((t0.c24))))AND(((t0.c24)AND(vt1.c0)))))OR(ABS(DISTINCT t0.c24))) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (NULL) ORDER BY (((((((t0.c24))>((t0.c24))))AND(((t0.c24)AND(vt1.c0)))))OR(ABS(DISTINCT t0.c24))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((t0.c24))>((t0.c24))))AND(((t0.c24)AND(vt1.c0)))))OR(ABS(DISTINCT t0.c24))) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (NULL) ORDER BY (((((((t0.c24))>((t0.c24))))AND(((t0.c24)AND(vt1.c0)))))OR(ABS(DISTINCT t0.c24))) ASC;
SELECT COUNT(*) FROM t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (vt1.c0);
SELECT * FROM t0, vt1 WHERE (((CAST(t0.c24 AS BLOB))IS(((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c24 AS BLOB))IS(((((t0.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((CAST(t0.c24 AS BLOB))IS(((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c24 AS BLOB))IS(((((t0.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((CAST(t0.c24 AS BLOB))IS(((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) BETWEEN (t0.c0 COLLATE NOCASE) AND (json_remove(t0.c0, t0.c24))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS NUMERIC)) BETWEEN (t0.c0 COLLATE NOCASE) AND (json_remove(t0.c0, t0.c24)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) BETWEEN (t0.c0 COLLATE NOCASE) AND (json_remove(t0.c0, t0.c24))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS NUMERIC)) BETWEEN (t0.c0 COLLATE NOCASE) AND (json_remove(t0.c0, t0.c24)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR('-598634616')))OR('')))OR(v0.c0)) COLLATE BINARY) ORDER BY json_object(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 1942759078 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)OR(v0.c0)))OR('-598634616')))OR('')))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY json_object(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 1942759078 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR('-598634616')))OR('')))OR(v0.c0)) COLLATE BINARY) ORDER BY json_object(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 1942759078 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)OR(v0.c0)))OR('-598634616')))OR('')))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY json_object(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 1942759078 COLLATE RTRIM));
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT ALL * FROM t0, vt1 WHERE (vt1.c0) ORDER BY ((CASE WHEN t0.c24 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c24 END) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (((((t0.c0)OR(t0.c24)))AND(t0.c24))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CASE WHEN t0.c24 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c24 END) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (((((t0.c0)OR(t0.c24)))AND(t0.c24)))));
SELECT ALL * FROM t0, vt1 WHERE (vt1.c0) ORDER BY ((CASE WHEN t0.c24 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c24 END) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (((((t0.c0)OR(t0.c24)))AND(t0.c24))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CASE WHEN t0.c24 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c24 END) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (((((t0.c0)OR(t0.c24)))AND(t0.c24)))));
SELECT ALL * FROM t0, vt1 WHERE (vt1.c0) ORDER BY ((CASE WHEN t0.c24 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c24 END) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (((((t0.c0)OR(t0.c24)))AND(t0.c24))));
SELECT * FROM v0, vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE json(v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE json(v0.c0) END) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE json(v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE json(v0.c0) END) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE json(v0.c0) END);
SELECT * FROM vt1, v0 RIGHT OUTER JOIN t0 ON NULL WHERE (((((t0.c24)/(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c24)/(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN t0 ON NULL);
SELECT * FROM vt1, v0 RIGHT OUTER JOIN t0 ON NULL WHERE (((((t0.c24)/(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c24)/(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN t0 ON NULL);
SELECT * FROM vt1, v0 RIGHT OUTER JOIN t0 ON NULL WHERE (((((t0.c24)/(vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM t0, vt1 WHERE ((+ (vt1.c0))) ORDER BY ((((vt1.c0)LIKE(t0.c0))) IS TRUE), (((+ (t0.c24))) BETWEEN ((((t0.c24)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) AND (((t0.c0)||(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((vt1.c0)LIKE(t0.c0))) IS TRUE), (((+ (t0.c24))) BETWEEN ((((t0.c24)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) AND (((t0.c0)||(t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE ((+ (vt1.c0))) ORDER BY ((((vt1.c0)LIKE(t0.c0))) IS TRUE), (((+ (t0.c24))) BETWEEN ((((t0.c24)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) AND (((t0.c0)||(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((vt1.c0)LIKE(t0.c0))) IS TRUE), (((+ (t0.c24))) BETWEEN ((((t0.c24)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) AND (((t0.c0)||(t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE ((+ (vt1.c0))) ORDER BY ((((vt1.c0)LIKE(t0.c0))) IS TRUE), (((+ (t0.c24))) BETWEEN ((((t0.c24)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) AND (((t0.c0)||(t0.c0)))) DESC;
SELECT * FROM t0 WHERE (LIKELY(((t0.c24)OR(t0.c24)))) ORDER BY ((((t0.c24, t0.c0, t0.c24, t0.c0, t0.c24)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c24, t0.c0)) AND ((t0.c24, t0.c24, x'01d0', t0.c24, t0.c0))) IN ())  NULLS LAST, ((((t0.c0) NOT NULL)) NOT BETWEEN (CAST(t0.c24 AS INTEGER)) AND (CASE 0.488720015548439  WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c24)OR(t0.c24)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c24, t0.c0, t0.c24, t0.c0, t0.c24)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c24, t0.c0)) AND ((t0.c24, t0.c24, x'01d0', t0.c24, t0.c0))) IN ())  NULLS LAST, ((((t0.c0) NOT NULL)) NOT BETWEEN (CAST(t0.c24 AS INTEGER)) AND (CASE 0.488720015548439  WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (LIKELY(((t0.c24)OR(t0.c24)))) ORDER BY ((((t0.c24, t0.c0, t0.c24, t0.c0, t0.c24)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c24, t0.c0)) AND ((t0.c24, t0.c24, x'01d0', t0.c24, t0.c0))) IN ())  NULLS LAST, ((((t0.c0) NOT NULL)) NOT BETWEEN (CAST(t0.c24 AS INTEGER)) AND (CASE 0.488720015548439  WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c24)OR(t0.c24)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c24, t0.c0, t0.c24, t0.c0, t0.c24)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c24, t0.c0)) AND ((t0.c24, t0.c24, x'01d0', t0.c24, t0.c0))) IN ())  NULLS LAST, ((((t0.c0) NOT NULL)) NOT BETWEEN (CAST(t0.c24 AS INTEGER)) AND (CASE 0.488720015548439  WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (LIKELY(((t0.c24)OR(t0.c24)))) ORDER BY ((((t0.c24, t0.c0, t0.c24, t0.c0, t0.c24)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c24, t0.c0)) AND ((t0.c24, t0.c24, x'01d0', t0.c24, t0.c0))) IN ())  NULLS LAST, ((((t0.c0) NOT NULL)) NOT BETWEEN (CAST(t0.c24 AS INTEGER)) AND (CASE 0.488720015548439  WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ((NOT (v0.c0)), ((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN ((NOT (v0.c0)), ((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ((NOT (v0.c0)), ((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN ((NOT (v0.c0)), ((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ((NOT (v0.c0)), ((v0.c0) NOT NULL))));
SELECT ALL * FROM v0 WHERE (CASE '118463693'  WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '118463693'  WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE '118463693'  WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '118463693'  WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE '118463693'  WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT * FROM vt1, t0, v0 WHERE ((((((((((t0.c24 IN ()))AND((((t0.c24, vt1.c0, t0.c0)) BETWEEN ((v0.c0, v0.c0, t0.c24)) AND ((t0.c24, x'4d63', NULL))))))AND((NULL IN ()))))OR((v0.c0 IN ()))))AND(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c24 IN ()))AND((((t0.c24, vt1.c0, t0.c0)) BETWEEN ((v0.c0, v0.c0, t0.c24)) AND ((t0.c24, x'4d63', NULL))))))AND((NULL IN ()))))OR((v0.c0 IN ()))))AND(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t0, v0);
SELECT * FROM vt1, t0, v0 WHERE ((((((((((t0.c24 IN ()))AND((((t0.c24, vt1.c0, t0.c0)) BETWEEN ((v0.c0, v0.c0, t0.c24)) AND ((t0.c24, x'4d63', NULL))))))AND((NULL IN ()))))OR((v0.c0 IN ()))))AND(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c24 IN ()))AND((((t0.c24, vt1.c0, t0.c0)) BETWEEN ((v0.c0, v0.c0, t0.c24)) AND ((t0.c24, x'4d63', NULL))))))AND((NULL IN ()))))OR((v0.c0 IN ()))))AND(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t0, v0);
SELECT * FROM vt1, t0, v0 WHERE ((((((((((t0.c24 IN ()))AND((((t0.c24, vt1.c0, t0.c0)) BETWEEN ((v0.c0, v0.c0, t0.c24)) AND ((t0.c24, x'4d63', NULL))))))AND((NULL IN ()))))OR((v0.c0 IN ()))))AND(CAST(v0.c0 AS BLOB))));
SELECT * FROM t0, vt1 WHERE (1.18463693E8);
SELECT SUM(count) FROM (SELECT ((1.18463693E8) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (1.18463693E8);
SELECT SUM(count) FROM (SELECT ((1.18463693E8) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (1.18463693E8);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CAST(((vt1.c0) ISNULL) AS TEXT) WHERE ((t0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(((vt1.c0) ISNULL) AS TEXT));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CAST(((vt1.c0) ISNULL) AS TEXT) WHERE ((t0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(((vt1.c0) ISNULL) AS TEXT));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CAST(((vt1.c0) ISNULL) AS TEXT) WHERE ((t0.c0 IN ()) COLLATE NOCASE);
SELECT * FROM vt1, v0 WHERE (CAST(((v0.c0)IS NOT(v0.c0)) AS BLOB)) ORDER BY ((((x'') ISNULL))-(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)IS NOT(v0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((x'') ISNULL))-(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) ASC);
SELECT * FROM vt1, v0 WHERE (CAST(((v0.c0)IS NOT(v0.c0)) AS BLOB)) ORDER BY ((((x'') ISNULL))-(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)IS NOT(v0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((x'') ISNULL))-(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) ASC);
SELECT * FROM vt1, v0 WHERE (CAST(((v0.c0)IS NOT(v0.c0)) AS BLOB)) ORDER BY ((((x'') ISNULL))-(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) ASC;
SELECT * FROM t0, v0 NATURAL JOIN vt1 WHERE ((CASE WHEN t0.c0 THEN v0.c0 END IN ())) ORDER BY ((vt1.c0)OR(v0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt1 ORDER BY ((vt1.c0)OR(v0.c0)) COLLATE NOCASE DESC);
SELECT * FROM t0, v0 NATURAL JOIN vt1 WHERE ((CASE WHEN t0.c0 THEN v0.c0 END IN ())) ORDER BY ((vt1.c0)OR(v0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt1 ORDER BY ((vt1.c0)OR(v0.c0)) COLLATE NOCASE DESC);
SELECT * FROM t0, v0 NATURAL JOIN vt1 WHERE ((CASE WHEN t0.c0 THEN v0.c0 END IN ())) ORDER BY ((vt1.c0)OR(v0.c0)) COLLATE NOCASE DESC;
SELECT ALL * FROM t0 NOT INDEXED, v0 INNER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) WHERE ((((x'')) NOT BETWEEN ((((t0.c0)&(vt1.c0)))) AND ((v0.c0 COLLATE BINARY)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN ((((t0.c0)&(vt1.c0)))) AND ((v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) ORDER BY vt1.c0);
SELECT ALL * FROM t0 NOT INDEXED, v0 INNER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) WHERE ((((x'')) NOT BETWEEN ((((t0.c0)&(vt1.c0)))) AND ((v0.c0 COLLATE BINARY)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN ((((t0.c0)&(vt1.c0)))) AND ((v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, v0 INNER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) ORDER BY vt1.c0);
SELECT ALL * FROM t0 NOT INDEXED, v0 INNER JOIN vt1 ON ((NOT (vt1.c0)) IN ()) WHERE ((((x'')) NOT BETWEEN ((((t0.c0)&(vt1.c0)))) AND ((v0.c0 COLLATE BINARY)))) ORDER BY vt1.c0;
SELECT * FROM t0 WHERE (((0.14819827285301324)>(CAST('741068926' AS NUMERIC)))) ORDER BY ((t0.c24) NOT BETWEEN (x'0824e9cd') AND (0.19103687379147027)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.14819827285301324)>(CAST('741068926' AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c24) NOT BETWEEN (x'0824e9cd') AND (0.19103687379147027)) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((0.14819827285301324)>(CAST('741068926' AS NUMERIC)))) ORDER BY ((t0.c24) NOT BETWEEN (x'0824e9cd') AND (0.19103687379147027)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.14819827285301324)>(CAST('741068926' AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c24) NOT BETWEEN (x'0824e9cd') AND (0.19103687379147027)) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((0.14819827285301324)>(CAST('741068926' AS NUMERIC)))) ORDER BY ((t0.c24) NOT BETWEEN (x'0824e9cd') AND (0.19103687379147027)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY TYPEOF((v0.c0 IN (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY TYPEOF((v0.c0 IN (v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY TYPEOF((v0.c0 IN (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY TYPEOF((v0.c0 IN (v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY TYPEOF((v0.c0 IN (v0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((('-1422514673')|((((vt1.c0, v0.c0, v0.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (((+ (vt1.c0)))GLOB(LIKELY(v0.c0))) ASC  NULLS LAST, CAST((+ (vt1.c0)) AS REAL) ASC, CASE WHEN (((vt1.c0, NULL, v0.c0))=((v0.c0, v0.c0, vt1.c0))) THEN (((vt1.c0, v0.c0, '0.488720015548439'))<>((v0.c0, vt1.c0, vt1.c0))) END;
SELECT SUM(count) FROM (SELECT ALL (((('-1422514673')|((((vt1.c0, v0.c0, v0.c0))!=((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((+ (vt1.c0)))GLOB(LIKELY(v0.c0))) ASC  NULLS LAST, CAST((+ (vt1.c0)) AS REAL) ASC, CASE WHEN (((vt1.c0, NULL, v0.c0))==((v0.c0, v0.c0, vt1.c0))) THEN (((vt1.c0, v0.c0, '0.488720015548439'))!=((v0.c0, vt1.c0, vt1.c0))) END);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((('-1422514673')|((((vt1.c0, v0.c0, v0.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (((+ (vt1.c0)))GLOB(LIKELY(v0.c0))) ASC  NULLS LAST, CAST((+ (vt1.c0)) AS REAL) ASC, CASE WHEN (((vt1.c0, NULL, v0.c0))=((v0.c0, v0.c0, vt1.c0))) THEN (((vt1.c0, v0.c0, '0.488720015548439'))<>((v0.c0, vt1.c0, vt1.c0))) END;
SELECT SUM(count) FROM (SELECT ALL (((('-1422514673')|((((vt1.c0, v0.c0, v0.c0))!=((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((+ (vt1.c0)))GLOB(LIKELY(v0.c0))) ASC  NULLS LAST, CAST((+ (vt1.c0)) AS REAL) ASC, CASE WHEN (((vt1.c0, NULL, v0.c0))==((v0.c0, v0.c0, vt1.c0))) THEN (((vt1.c0, v0.c0, '0.488720015548439'))!=((v0.c0, vt1.c0, vt1.c0))) END);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((('-1422514673')|((((vt1.c0, v0.c0, v0.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (((+ (vt1.c0)))GLOB(LIKELY(v0.c0))) ASC  NULLS LAST, CAST((+ (vt1.c0)) AS REAL) ASC, CASE WHEN (((vt1.c0, NULL, v0.c0))=((v0.c0, v0.c0, vt1.c0))) THEN (((vt1.c0, v0.c0, '0.488720015548439'))<>((v0.c0, vt1.c0, vt1.c0))) END;
SELECT ALL COUNT(*) FROM vt1, t0 FULL OUTER JOIN v0 ON ((t0.c0 COLLATE NOCASE)IS NOT(CASE t0.c0  WHEN '-1552286447' THEN vt1.c0 END)) WHERE ((((t0.c0 IN (v0.c0, v0.c0)))>((+ (vt1.c0))))) ORDER BY (- (((((t0.c0)OR(t0.c0)))OR(-0.0)))) DESC  NULLS LAST, ((vt1.c0 COLLATE BINARY)||(HEX(t0.c24))) ASC  NULLS LAST, ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (v0.c0, v0.c0)))>((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN v0 ON ((t0.c0 COLLATE NOCASE)IS NOT(CASE t0.c0  WHEN '-1552286447' THEN vt1.c0 END)) ORDER BY (- (((((t0.c0)OR(t0.c0)))OR(-0.0)))) DESC  NULLS LAST, ((vt1.c0 COLLATE BINARY)||(HEX(t0.c24))) ASC  NULLS LAST, ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, t0 FULL OUTER JOIN v0 ON ((t0.c0 COLLATE NOCASE)IS NOT(CASE t0.c0  WHEN '-1552286447' THEN vt1.c0 END)) WHERE ((((t0.c0 IN (v0.c0, v0.c0)))>((+ (vt1.c0))))) ORDER BY (- (((((t0.c0)OR(t0.c0)))OR(-0.0)))) DESC  NULLS LAST, ((vt1.c0 COLLATE BINARY)||(HEX(t0.c24))) ASC  NULLS LAST, ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (v0.c0, v0.c0)))>((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN v0 ON ((t0.c0 COLLATE NOCASE)IS NOT(CASE t0.c0  WHEN '-1552286447' THEN vt1.c0 END)) ORDER BY (- (((((t0.c0)OR(t0.c0)))OR(-0.0)))) DESC  NULLS LAST, ((vt1.c0 COLLATE BINARY)||(HEX(t0.c24))) ASC  NULLS LAST, ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, t0 FULL OUTER JOIN v0 ON ((t0.c0 COLLATE NOCASE)IS NOT(CASE t0.c0  WHEN '-1552286447' THEN vt1.c0 END)) WHERE ((((t0.c0 IN (v0.c0, v0.c0)))>((+ (vt1.c0))))) ORDER BY (- (((((t0.c0)OR(t0.c0)))OR(-0.0)))) DESC  NULLS LAST, ((vt1.c0 COLLATE BINARY)||(HEX(t0.c24))) ASC  NULLS LAST, ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE RTRIM;
SELECT * FROM v0, vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN TRIM(vt1.c0) THEN ((vt1.c0)>(v0.c0)) WHEN CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)*(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE NOCASE  WHEN TRIM(vt1.c0) THEN ((vt1.c0)>(v0.c0)) WHEN CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)*(vt1.c0)) END) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN TRIM(vt1.c0) THEN ((vt1.c0)>(v0.c0)) WHEN CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)*(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE NOCASE  WHEN TRIM(vt1.c0) THEN ((vt1.c0)>(v0.c0)) WHEN CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)*(vt1.c0)) END) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN TRIM(vt1.c0) THEN ((vt1.c0)>(v0.c0)) WHEN CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)*(vt1.c0)) END);
SELECT * FROM v0, t0, vt1 WHERE (CAST(t0.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt1);
SELECT * FROM v0, t0, vt1 WHERE (CAST(t0.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt1);
SELECT * FROM v0, t0, vt1 WHERE (CAST(t0.c0 AS BLOB) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 INNER JOIN v0 ON ((('1*' IN ())) BETWEEN (((vt1.c0)-(t0.c24))) AND ('vy0 gk53')) CROSS JOIN t0 ON (((((t0.c24 IN ()))AND(CAST(vt1.c0 AS NUMERIC))))OR(((((((((t0.c24)AND(t0.c24)))OR(v0.c0)))AND(t0.c24)))AND(t0.c0)))) WHERE (((((t0.c24) BETWEEN (v0.c0) AND (vt1.c0)))<((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c24) BETWEEN (v0.c0) AND (vt1.c0)))<((~ (v0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON ((('1*' IN ())) BETWEEN (((vt1.c0)-(t0.c24))) AND ('vy0 gk53')) CROSS JOIN t0 ON (((((t0.c24 IN ()))AND(CAST(vt1.c0 AS NUMERIC))))OR(((((((((t0.c24)AND(t0.c24)))OR(v0.c0)))AND(t0.c24)))AND(t0.c0)))));
SELECT COUNT(*) FROM vt1 INNER JOIN v0 ON ((('1*' IN ())) BETWEEN (((vt1.c0)-(t0.c24))) AND ('vy0 gk53')) CROSS JOIN t0 ON (((((t0.c24 IN ()))AND(CAST(vt1.c0 AS NUMERIC))))OR(((((((((t0.c24)AND(t0.c24)))OR(v0.c0)))AND(t0.c24)))AND(t0.c0)))) WHERE (((((t0.c24) BETWEEN (v0.c0) AND (vt1.c0)))<((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c24) BETWEEN (v0.c0) AND (vt1.c0)))<((~ (v0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON ((('1*' IN ())) BETWEEN (((vt1.c0)-(t0.c24))) AND ('vy0 gk53')) CROSS JOIN t0 ON (((((t0.c24 IN ()))AND(CAST(vt1.c0 AS NUMERIC))))OR(((((((((t0.c24)AND(t0.c24)))OR(v0.c0)))AND(t0.c24)))AND(t0.c0)))));
SELECT COUNT(*) FROM vt1 INNER JOIN v0 ON ((('1*' IN ())) BETWEEN (((vt1.c0)-(t0.c24))) AND ('vy0 gk53')) CROSS JOIN t0 ON (((((t0.c24 IN ()))AND(CAST(vt1.c0 AS NUMERIC))))OR(((((((((t0.c24)AND(t0.c24)))OR(v0.c0)))AND(t0.c24)))AND(t0.c0)))) WHERE (((((t0.c24) BETWEEN (v0.c0) AND (vt1.c0)))<((~ (v0.c0)))));
SELECT * FROM vt1, t0, v0 WHERE ((((t0.c0) IS FALSE) IN ())) ORDER BY ((((t0.c0) IS FALSE))&((NULL IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY ((((t0.c0) IS FALSE))&((NULL IN ())))  NULLS LAST);
SELECT * FROM vt1, t0, v0 WHERE ((((t0.c0) IS FALSE) IN ())) ORDER BY ((((t0.c0) IS FALSE))&((NULL IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY ((((t0.c0) IS FALSE))&((NULL IN ())))  NULLS LAST);
SELECT * FROM vt1, t0, v0 WHERE ((((t0.c0) IS FALSE) IN ())) ORDER BY ((((t0.c0) IS FALSE))&((NULL IN ())))  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)>(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)>(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)>(vt1.c0)) AS TEXT));
SELECT * FROM t0 INNER JOIN v0 ON TIME(t0.c24, (NOT ('0\b^v')), '3r.') WHERE (t0.c24) ORDER BY (NOT ((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c24) IS TRUE)  as count FROM t0 INNER JOIN v0 ON TIME(t0.c24, (NOT ('0\b^v')), '3r.') ORDER BY (NOT ((t0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM t0 INNER JOIN v0 ON TIME(t0.c24, (NOT ('0\b^v')), '3r.') WHERE (t0.c24) ORDER BY (NOT ((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c24) IS TRUE)  as count FROM t0 INNER JOIN v0 ON TIME(t0.c24, (NOT ('0\b^v')), '3r.') ORDER BY (NOT ((t0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM t0 INNER JOIN v0 ON TIME(t0.c24, (NOT ('0\b^v')), '3r.') WHERE (t0.c24) ORDER BY (NOT ((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((v0.c0) NOTNULL))AND(((t0.c24)%(t0.c24)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOTNULL))AND(((t0.c24)%(t0.c24)))))OR(NULL))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((v0.c0) NOTNULL))AND(((t0.c24)%(t0.c24)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOTNULL))AND(((t0.c24)%(t0.c24)))))OR(NULL))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((v0.c0) NOTNULL))AND(((t0.c24)%(t0.c24)))))OR(NULL)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON ((t0.c0)GLOB(vt1.c0)) COLLATE BINARY WHERE (CASE WHEN (vt1.c0 IN (t0.c0, vt1.c0)) THEN ((((t0.c24)AND(vt1.c0)))AND(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN (t0.c0, vt1.c0)) THEN ((((t0.c24)AND(vt1.c0)))AND(t0.c0)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((t0.c0)GLOB(vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON ((t0.c0)GLOB(vt1.c0)) COLLATE BINARY WHERE (CASE WHEN (vt1.c0 IN (t0.c0, vt1.c0)) THEN ((((t0.c24)AND(vt1.c0)))AND(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN (t0.c0, vt1.c0)) THEN ((((t0.c24)AND(vt1.c0)))AND(t0.c0)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((t0.c0)GLOB(vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON ((t0.c0)GLOB(vt1.c0)) COLLATE BINARY WHERE (CASE WHEN (vt1.c0 IN (t0.c0, vt1.c0)) THEN ((((t0.c24)AND(vt1.c0)))AND(t0.c0)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (TOTAL_CHANGES()) ORDER BY TYPEOF(v0.c0 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(v0.c0 COLLATE NOCASE) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (TOTAL_CHANGES()) ORDER BY TYPEOF(v0.c0 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(v0.c0 COLLATE NOCASE) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (TOTAL_CHANGES()) ORDER BY TYPEOF(v0.c0 COLLATE NOCASE) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c24) ORDER BY 'QJ/斶'  NULLS FIRST, x'a54d' ASC, (((t0.c24)) BETWEEN ((COALESCE(t0.c0, t0.c0))) AND ((((t0.c0)LIKE(t0.c24)))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c24) IS TRUE)  as count FROM t0 ORDER BY 'QJ/斶'  NULLS FIRST, x'a54d' ASC, (((t0.c24)) BETWEEN ((COALESCE(t0.c0, t0.c0))) AND ((((t0.c0)LIKE(t0.c24))))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c24) ORDER BY 'QJ/斶'  NULLS FIRST, x'a54d' ASC, (((t0.c24)) BETWEEN ((COALESCE(t0.c0, t0.c0))) AND ((((t0.c0)LIKE(t0.c24)))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c24) IS TRUE)  as count FROM t0 ORDER BY 'QJ/斶'  NULLS FIRST, x'a54d' ASC, (((t0.c24)) BETWEEN ((COALESCE(t0.c0, t0.c0))) AND ((((t0.c0)LIKE(t0.c24))))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c24) ORDER BY 'QJ/斶'  NULLS FIRST, x'a54d' ASC, (((t0.c24)) BETWEEN ((COALESCE(t0.c0, t0.c0))) AND ((((t0.c0)LIKE(t0.c24)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (v0.c0 IN ()) COLLATE RTRIM FULL OUTER JOIN vt1 ON ((-8422353)&(((t0.c24) NOTNULL))) WHERE (((highlight('jGW)좪*(3', vt1.c0, t0.c24, t0.c24)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((highlight('jGW)좪*(3', vt1.c0, t0.c24, t0.c24)) IS TRUE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (v0.c0 IN ()) COLLATE RTRIM FULL OUTER JOIN vt1 ON ((-8422353)&(((t0.c24) NOTNULL))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (v0.c0 IN ()) COLLATE RTRIM FULL OUTER JOIN vt1 ON ((-8422353)&(((t0.c24) NOTNULL))) WHERE (((highlight('jGW)좪*(3', vt1.c0, t0.c24, t0.c24)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((highlight('jGW)좪*(3', vt1.c0, t0.c24, t0.c24)) IS TRUE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (v0.c0 IN ()) COLLATE RTRIM FULL OUTER JOIN vt1 ON ((-8422353)&(((t0.c24) NOTNULL))));
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c24) NOT NULL)))) ORDER BY (+ (t0.c24)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c24) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c24)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c24) NOT NULL)))) ORDER BY (+ (t0.c24)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c24) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c24)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c24) NOT NULL)))) ORDER BY (+ (t0.c24)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((NULL)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((NULL)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((NULL)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((NULL)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((NULL)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) IN ()));
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (t0.c24)))<>(CAST(t0.c0 AS NUMERIC)))) ORDER BY LIKELY(0.9922364432758475) DESC  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC)) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (t0.c24)))!=(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY LIKELY(0.9922364432758475) DESC  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC)) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (t0.c24)))<>(CAST(t0.c0 AS NUMERIC)))) ORDER BY LIKELY(0.9922364432758475) DESC  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC)) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (t0.c24)))!=(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY LIKELY(0.9922364432758475) DESC  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC)) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (t0.c24)))<>(CAST(t0.c0 AS NUMERIC)))) ORDER BY LIKELY(0.9922364432758475) DESC  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC)) ISNULL) ASC  NULLS FIRST;
SELECT * FROM vt1 FULL OUTER JOIN t0 ON (((t0.c24)|(t0.c0)) IN ()) LEFT OUTER JOIN v0 ON v0.c0 WHERE (CASE ((v0.c0)&(vt1.c0))  WHEN vt1.c0 THEN x'de54' ELSE (- (t0.c0)) END) ORDER BY ((((vt1.c0)<=(v0.c0))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CAST(t0.c24 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)&(vt1.c0))  WHEN vt1.c0 THEN x'de54' ELSE (- (t0.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((t0.c24)|(t0.c0)) IN ()) LEFT OUTER JOIN v0 ON v0.c0 ORDER BY ((((vt1.c0)<=(v0.c0))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CAST(t0.c24 AS INTEGER))));
SELECT * FROM vt1 FULL OUTER JOIN t0 ON (((t0.c24)|(t0.c0)) IN ()) LEFT OUTER JOIN v0 ON v0.c0 WHERE (CASE ((v0.c0)&(vt1.c0))  WHEN vt1.c0 THEN x'de54' ELSE (- (t0.c0)) END) ORDER BY ((((vt1.c0)<=(v0.c0))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CAST(t0.c24 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)&(vt1.c0))  WHEN vt1.c0 THEN x'de54' ELSE (- (t0.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((t0.c24)|(t0.c0)) IN ()) LEFT OUTER JOIN v0 ON v0.c0 ORDER BY ((((vt1.c0)<=(v0.c0))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CAST(t0.c24 AS INTEGER))));
SELECT * FROM vt1 FULL OUTER JOIN t0 ON (((t0.c24)|(t0.c0)) IN ()) LEFT OUTER JOIN v0 ON v0.c0 WHERE (CASE ((v0.c0)&(vt1.c0))  WHEN vt1.c0 THEN x'de54' ELSE (- (t0.c0)) END) ORDER BY ((((vt1.c0)<=(v0.c0))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CAST(t0.c24 AS INTEGER)));
SELECT * FROM vt1 WHERE ((x'875e' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'875e' IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((x'875e' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'875e' IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((x'875e' IN ()));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (NULL COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON PRINTF(t0.c24) COLLATE BINARY WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN ((((t0.c24, x'', t0.c24, v0.c0, t0.c24, t0.c0, NULL))!=((x'', t0.c24, v0.c0, t0.c24, v0.c0, t0.c24, t0.c0)))) AND ((('-1070719039') NOT NULL)))) ORDER BY (+ (((t0.c24) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) NOT BETWEEN ((((t0.c24, x'', t0.c24, v0.c0, t0.c24, t0.c0, NULL))<>((x'', t0.c24, v0.c0, t0.c24, v0.c0, t0.c24, t0.c0)))) AND ((('-1070719039') NOT NULL)))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON PRINTF(t0.c24) COLLATE BINARY ORDER BY (+ (((t0.c24) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON PRINTF(t0.c24) COLLATE BINARY WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN ((((t0.c24, x'', t0.c24, v0.c0, t0.c24, t0.c0, NULL))!=((x'', t0.c24, v0.c0, t0.c24, v0.c0, t0.c24, t0.c0)))) AND ((('-1070719039') NOT NULL)))) ORDER BY (+ (((t0.c24) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) NOT BETWEEN ((((t0.c24, x'', t0.c24, v0.c0, t0.c24, t0.c0, NULL))<>((x'', t0.c24, v0.c0, t0.c24, v0.c0, t0.c24, t0.c0)))) AND ((('-1070719039') NOT NULL)))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON PRINTF(t0.c24) COLLATE BINARY ORDER BY (+ (((t0.c24) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON PRINTF(t0.c24) COLLATE BINARY WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN ((((t0.c24, x'', t0.c24, v0.c0, t0.c24, t0.c0, NULL))!=((x'', t0.c24, v0.c0, t0.c24, v0.c0, t0.c24, t0.c0)))) AND ((('-1070719039') NOT NULL)))) ORDER BY (+ (((t0.c24) ISNULL))) ASC;
SELECT * FROM vt1, t0 WHERE ((- ('a'))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ('a'))) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE ((- ('a'))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ('a'))) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE ((- ('a'))) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL * FROM t0, vt1, v0 WHERE (((LIKELY(0x6d53316c))IS NOT(((((t0.c0)AND(v0.c0)))OR(t0.c0))))) ORDER BY ((((v0.c0)==(vt1.c0)))-(t0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(0x6d53316c))IS NOT(((((t0.c0)AND(v0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY ((((v0.c0)=(vt1.c0)))-(t0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM t0, vt1, v0 WHERE (((LIKELY(0x6d53316c))IS NOT(((((t0.c0)AND(v0.c0)))OR(t0.c0))))) ORDER BY ((((v0.c0)==(vt1.c0)))-(t0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(0x6d53316c))IS NOT(((((t0.c0)AND(v0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY ((((v0.c0)=(vt1.c0)))-(t0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM t0, vt1, v0 WHERE (((LIKELY(0x6d53316c))IS NOT(((((t0.c0)AND(v0.c0)))OR(t0.c0))))) ORDER BY ((((v0.c0)==(vt1.c0)))-(t0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c24)AND(x''))))!=((t0.c0)))) ORDER BY CHAR(((t0.c24) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c24)AND(x''))))!=((t0.c0)))) IS TRUE)  as count FROM v0, t0 ORDER BY CHAR(((t0.c24) IS TRUE)) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c24)AND(x''))))!=((t0.c0)))) ORDER BY CHAR(((t0.c24) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c24)AND(x''))))!=((t0.c0)))) IS TRUE)  as count FROM v0, t0 ORDER BY CHAR(((t0.c24) IS TRUE)) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c24)AND(x''))))!=((t0.c0)))) ORDER BY CHAR(((t0.c24) IS TRUE)) ASC  NULLS FIRST;
SELECT * FROM vt1 CROSS JOIN v0 ON ((CASE WHEN x'' THEN t0.c0 ELSE vt1.c0 END) NOT BETWEEN (((((v0.c0)AND(t0.c0)))AND(NULL))) AND (((t0.c24)<>(t0.c0)))) CROSS JOIN t0 ON (((((((((((((vt1.c0)OR(0.9154966266730168)))OR(t0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0)))AND(t0.c24)) IN ()) WHERE (((((((t0.c0) BETWEEN (v0.c0) AND (vt1.c0)))AND(((((NULL)AND(t0.c0)))OR(t0.c0)))))AND(((((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))OR(v0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) BETWEEN (v0.c0) AND (vt1.c0)))AND(((((NULL)AND(t0.c0)))OR(t0.c0)))))AND(((((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))OR(v0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((CASE WHEN x'' THEN t0.c0 ELSE vt1.c0 END) NOT BETWEEN (((((v0.c0)AND(t0.c0)))AND(NULL))) AND (((t0.c24)!=(t0.c0)))) CROSS JOIN t0 ON (((((((((((((vt1.c0)OR(0.9154966266730168)))OR(t0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0)))AND(t0.c24)) IN ()));
SELECT * FROM vt1 CROSS JOIN v0 ON ((CASE WHEN x'' THEN t0.c0 ELSE vt1.c0 END) NOT BETWEEN (((((v0.c0)AND(t0.c0)))AND(NULL))) AND (((t0.c24)<>(t0.c0)))) CROSS JOIN t0 ON (((((((((((((vt1.c0)OR(0.9154966266730168)))OR(t0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0)))AND(t0.c24)) IN ()) WHERE (((((((t0.c0) BETWEEN (v0.c0) AND (vt1.c0)))AND(((((NULL)AND(t0.c0)))OR(t0.c0)))))AND(((((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))OR(v0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) BETWEEN (v0.c0) AND (vt1.c0)))AND(((((NULL)AND(t0.c0)))OR(t0.c0)))))AND(((((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))OR(v0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((CASE WHEN x'' THEN t0.c0 ELSE vt1.c0 END) NOT BETWEEN (((((v0.c0)AND(t0.c0)))AND(NULL))) AND (((t0.c24)!=(t0.c0)))) CROSS JOIN t0 ON (((((((((((((vt1.c0)OR(0.9154966266730168)))OR(t0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0)))AND(t0.c24)) IN ()));
SELECT * FROM vt1 CROSS JOIN v0 ON ((CASE WHEN x'' THEN t0.c0 ELSE vt1.c0 END) NOT BETWEEN (((((v0.c0)AND(t0.c0)))AND(NULL))) AND (((t0.c24)<>(t0.c0)))) CROSS JOIN t0 ON (((((((((((((vt1.c0)OR(0.9154966266730168)))OR(t0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0)))AND(t0.c24)) IN ()) WHERE (((((((t0.c0) BETWEEN (v0.c0) AND (vt1.c0)))AND(((((NULL)AND(t0.c0)))OR(t0.c0)))))AND(((((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))OR(v0.c0)))OR(t0.c0)))));
SELECT * FROM vt1 WHERE (COALESCE(DISTINCT (~ (vt1.c0)), vt1.c0, (vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 END, -1857631299, ((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (~ (vt1.c0)), vt1.c0, (vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 END, -1857631299, ((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (COALESCE(DISTINCT (~ (vt1.c0)), vt1.c0, (vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 END, -1857631299, ((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (~ (vt1.c0)), vt1.c0, (vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 END, -1857631299, ((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (COALESCE(DISTINCT (~ (vt1.c0)), vt1.c0, (vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 END, -1857631299, ((vt1.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((((((((((('1870988661')OR(vt1.c0)))OR(x'')))AND(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END)))OR((((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((v0.c0, v0.c0, vt1.c0))))))OR(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))  NULLS FIRST, '-284269130' ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((('1870988661')OR(vt1.c0)))OR(x'')))AND(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END)))OR((((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((v0.c0, v0.c0, vt1.c0))))))OR(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))  NULLS FIRST, '-284269130' ASC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((((((((((('1870988661')OR(vt1.c0)))OR(x'')))AND(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END)))OR((((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((v0.c0, v0.c0, vt1.c0))))))OR(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))  NULLS FIRST, '-284269130' ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((('1870988661')OR(vt1.c0)))OR(x'')))AND(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END)))OR((((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((v0.c0, v0.c0, vt1.c0))))))OR(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))  NULLS FIRST, '-284269130' ASC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((((((((((('1870988661')OR(vt1.c0)))OR(x'')))AND(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END)))OR((((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((v0.c0, v0.c0, vt1.c0))))))OR(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))  NULLS FIRST, '-284269130' ASC;
SELECT ALL * FROM t0, vt1 INDEXED BY i95, v0 WHERE (((vt1.c0) IS FALSE) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((t0.c24) BETWEEN (t0.c24) AND (v0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS FALSE) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 INDEXED BY i95, v0 ORDER BY ((((t0.c24) BETWEEN (t0.c24) AND (v0.c0))) IS TRUE) DESC);
SELECT ALL * FROM t0, vt1 INDEXED BY i95, v0 WHERE (((vt1.c0) IS FALSE) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((t0.c24) BETWEEN (t0.c24) AND (v0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS FALSE) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 INDEXED BY i95, v0 ORDER BY ((((t0.c24) BETWEEN (t0.c24) AND (v0.c0))) IS TRUE) DESC);
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN vt1 WHERE ((((v0.c0) IS TRUE) IN (((t0.c24) NOT NULL)))) ORDER BY ((((t0.c24) BETWEEN (v0.c0) AND (v0.c0)))!=(CASE WHEN t0.c0 THEN vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) IS TRUE) IN (((t0.c24) NOT NULL)))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt1 ORDER BY ((((t0.c24) BETWEEN (v0.c0) AND (v0.c0)))<>(CASE WHEN t0.c0 THEN vt1.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN vt1 WHERE ((((v0.c0) IS TRUE) IN (((t0.c24) NOT NULL)))) ORDER BY ((((t0.c24) BETWEEN (v0.c0) AND (v0.c0)))!=(CASE WHEN t0.c0 THEN vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) IS TRUE) IN (((t0.c24) NOT NULL)))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt1 ORDER BY ((((t0.c24) BETWEEN (v0.c0) AND (v0.c0)))<>(CASE WHEN t0.c0 THEN vt1.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN vt1 WHERE ((((v0.c0) IS TRUE) IN (((t0.c24) NOT NULL)))) ORDER BY ((((t0.c24) BETWEEN (v0.c0) AND (v0.c0)))!=(CASE WHEN t0.c0 THEN vt1.c0 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE (CAST(v0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE (CAST(v0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE (CAST(v0.c0 AS BLOB));
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (x'') AND (v0.c0))) ORDER BY ((vt1.c0) IS FALSE) COLLATE NOCASE DESC  NULLS FIRST, ((CAST(v0.c0 AS BLOB))=((((x'', v0.c0, vt1.c0))==((v0.c0, v0.c0, v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (x'') AND (v0.c0))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((vt1.c0) IS FALSE) COLLATE NOCASE DESC  NULLS FIRST, ((CAST(v0.c0 AS BLOB))==((((x'', v0.c0, vt1.c0))==((v0.c0, v0.c0, v0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (x'') AND (v0.c0))) ORDER BY ((vt1.c0) IS FALSE) COLLATE NOCASE DESC  NULLS FIRST, ((CAST(v0.c0 AS BLOB))=((((x'', v0.c0, vt1.c0))==((v0.c0, v0.c0, v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (x'') AND (v0.c0))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((vt1.c0) IS FALSE) COLLATE NOCASE DESC  NULLS FIRST, ((CAST(v0.c0 AS BLOB))==((((x'', v0.c0, vt1.c0))==((v0.c0, v0.c0, v0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (x'') AND (v0.c0))) ORDER BY ((vt1.c0) IS FALSE) COLLATE NOCASE DESC  NULLS FIRST, ((CAST(v0.c0 AS BLOB))=((((x'', v0.c0, vt1.c0))==((v0.c0, v0.c0, v0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 LEFT OUTER JOIN v0 ON (((t0.c24) BETWEEN (vt1.c0) AND (t0.c24)) IN ()) WHERE (CASE WHEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) THEN '-1746253619' ELSE CAST(t0.c0 AS INTEGER) END) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) THEN '-1746253619' ELSE CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN v0 ON (((t0.c24) BETWEEN (vt1.c0) AND (t0.c24)) IN ()) ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM t0, vt1 LEFT OUTER JOIN v0 ON (((t0.c24) BETWEEN (vt1.c0) AND (t0.c24)) IN ()) WHERE (CASE WHEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) THEN '-1746253619' ELSE CAST(t0.c0 AS INTEGER) END) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) THEN '-1746253619' ELSE CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN v0 ON (((t0.c24) BETWEEN (vt1.c0) AND (t0.c24)) IN ()) ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM t0, vt1 LEFT OUTER JOIN v0 ON (((t0.c24) BETWEEN (vt1.c0) AND (t0.c24)) IN ()) WHERE (CASE WHEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) THEN '-1746253619' ELSE CAST(t0.c0 AS INTEGER) END) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM vt1 WHERE ('(X') ORDER BY SQLITE_VERSION()  NULLS FIRST, (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END)) AND ((vt1.c0 COLLATE NOCASE))) DESC, (((((((((NOT (vt1.c0)))OR(((vt1.c0)=(vt1.c0)))))OR(((vt1.c0) IS FALSE))))AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN ('-276594549') AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('(X') IS TRUE)  as count FROM vt1 ORDER BY SQLITE_VERSION()  NULLS FIRST, (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END)) AND ((vt1.c0 COLLATE NOCASE))) DESC, (((((((((NOT (vt1.c0)))OR(((vt1.c0)==(vt1.c0)))))OR(((vt1.c0) IS FALSE))))AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN ('-276594549') AND (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('(X') ORDER BY SQLITE_VERSION()  NULLS FIRST, (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END)) AND ((vt1.c0 COLLATE NOCASE))) DESC, (((((((((NOT (vt1.c0)))OR(((vt1.c0)=(vt1.c0)))))OR(((vt1.c0) IS FALSE))))AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN ('-276594549') AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('(X') IS TRUE)  as count FROM vt1 ORDER BY SQLITE_VERSION()  NULLS FIRST, (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END)) AND ((vt1.c0 COLLATE NOCASE))) DESC, (((((((((NOT (vt1.c0)))OR(((vt1.c0)==(vt1.c0)))))OR(((vt1.c0) IS FALSE))))AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN ('-276594549') AND (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('(X') ORDER BY SQLITE_VERSION()  NULLS FIRST, (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END)) AND ((vt1.c0 COLLATE NOCASE))) DESC, (((((((((NOT (vt1.c0)))OR(((vt1.c0)=(vt1.c0)))))OR(((vt1.c0) IS FALSE))))AND(((vt1.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN ('-276594549') AND (vt1.c0))))  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (CASE WHEN ((t0.c0) BETWEEN ('354778041') AND (t0.c0)) THEN ((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) WHEN CASE t0.c0  WHEN NULL THEN t0.c24 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 END THEN ((t0.c0)IS(vt1.c0)) WHEN CASE WHEN t0.c24 THEN t0.c0 END THEN t0.c24 WHEN t0.c0 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CASE WHEN t0.c24 THEN t0.c0 END THEN TYPEOF(t0.c24) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) BETWEEN ('354778041') AND (t0.c0)) THEN ((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) WHEN CASE t0.c0  WHEN NULL THEN t0.c24 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 END THEN ((t0.c0)IS(vt1.c0)) WHEN CASE WHEN t0.c24 THEN t0.c0 END THEN t0.c24 WHEN t0.c0 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CASE WHEN t0.c24 THEN t0.c0 END THEN TYPEOF(t0.c24) END) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (CASE WHEN ((t0.c0) BETWEEN ('354778041') AND (t0.c0)) THEN ((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) WHEN CASE t0.c0  WHEN NULL THEN t0.c24 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 END THEN ((t0.c0)IS(vt1.c0)) WHEN CASE WHEN t0.c24 THEN t0.c0 END THEN t0.c24 WHEN t0.c0 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CASE WHEN t0.c24 THEN t0.c0 END THEN TYPEOF(t0.c24) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) BETWEEN ('354778041') AND (t0.c0)) THEN ((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) WHEN CASE t0.c0  WHEN NULL THEN t0.c24 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 END THEN ((t0.c0)IS(vt1.c0)) WHEN CASE WHEN t0.c24 THEN t0.c0 END THEN t0.c24 WHEN t0.c0 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CASE WHEN t0.c24 THEN t0.c0 END THEN TYPEOF(t0.c24) END) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (CASE WHEN ((t0.c0) BETWEEN ('354778041') AND (t0.c0)) THEN ((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) WHEN CASE t0.c0  WHEN NULL THEN t0.c24 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 END THEN ((t0.c0)IS(vt1.c0)) WHEN CASE WHEN t0.c24 THEN t0.c0 END THEN t0.c24 WHEN t0.c0 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CASE WHEN t0.c24 THEN t0.c0 END THEN TYPEOF(t0.c24) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (- (x'')) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) ELSE TRIM(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0 COLLATE RTRIM  WHEN (- (x'')) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) ELSE TRIM(vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (- (x'')) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) ELSE TRIM(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0 COLLATE RTRIM  WHEN (- (x'')) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) ELSE TRIM(vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (- (x'')) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')) ELSE TRIM(vt1.c0) END);
SELECT * FROM vt1, v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))AND(vt1.c0)) AS NUMERIC)) ORDER BY (((((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))OR(v0.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)OR(v0.c0)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))OR(v0.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT * FROM vt1, v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))AND(vt1.c0)) AS NUMERIC)) ORDER BY (((((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))OR(v0.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)OR(v0.c0)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))OR(v0.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT * FROM vt1, v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))AND(vt1.c0)) AS NUMERIC)) ORDER BY (((((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))OR(v0.c0 COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON CASE ((t0.c24) ISNULL)  WHEN ((x'') NOT NULL) THEN ((vt1.c0)IS(0.6085382427815668)) END WHERE (LOWER(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CASE ((t0.c24) ISNULL)  WHEN ((x'') NOT NULL) THEN ((vt1.c0)IS(0.6085382427815668)) END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON CASE ((t0.c24) ISNULL)  WHEN ((x'') NOT NULL) THEN ((vt1.c0)IS(0.6085382427815668)) END WHERE (LOWER(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CASE ((t0.c24) ISNULL)  WHEN ((x'') NOT NULL) THEN ((vt1.c0)IS(0.6085382427815668)) END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON CASE ((t0.c24) ISNULL)  WHEN ((x'') NOT NULL) THEN ((vt1.c0)IS(0.6085382427815668)) END WHERE (LOWER(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT * FROM t0 WHERE (-7.02103848E8);
SELECT SUM(count) FROM (SELECT ALL ((-7.02103848E8) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (-7.02103848E8);
SELECT SUM(count) FROM (SELECT ALL ((-7.02103848E8) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (-7.02103848E8);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN 0.6228256248446676 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN 0.6228256248446676 END) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN 0.6228256248446676 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN 0.6228256248446676 END) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN 0.6228256248446676 END);
SELECT * FROM vt1 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (NULL)));
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN (v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (((((v0.c0) ISNULL)) BETWEEN (((vt1.c0) IS FALSE)) AND ((~ (t0.c24))))) ORDER BY ((((('1249030964') NOT BETWEEN (t0.c24) AND (t0.c24)), '0.5517819457779639', ((x'') IS TRUE)))>=((CAST(v0.c0 AS NUMERIC), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (t0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) BETWEEN (((vt1.c0) IS FALSE)) AND ((~ (t0.c24))))) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY ((((('1249030964') NOT BETWEEN (t0.c24) AND (t0.c24)), '0.5517819457779639', ((x'') IS TRUE)))>=((CAST(v0.c0 AS NUMERIC), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (t0.c0, v0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (((((v0.c0) ISNULL)) BETWEEN (((vt1.c0) IS FALSE)) AND ((~ (t0.c24))))) ORDER BY ((((('1249030964') NOT BETWEEN (t0.c24) AND (t0.c24)), '0.5517819457779639', ((x'') IS TRUE)))>=((CAST(v0.c0 AS NUMERIC), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (t0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) BETWEEN (((vt1.c0) IS FALSE)) AND ((~ (t0.c24))))) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY ((((('1249030964') NOT BETWEEN (t0.c24) AND (t0.c24)), '0.5517819457779639', ((x'') IS TRUE)))>=((CAST(v0.c0 AS NUMERIC), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (t0.c0, v0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (((((v0.c0) ISNULL)) BETWEEN (((vt1.c0) IS FALSE)) AND ((~ (t0.c24))))) ORDER BY ((((('1249030964') NOT BETWEEN (t0.c24) AND (t0.c24)), '0.5517819457779639', ((x'') IS TRUE)))>=((CAST(v0.c0 AS NUMERIC), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (t0.c0, v0.c0)))));
SELECT * FROM v0, t0, vt1 WHERE ((((((t0.c24) BETWEEN (t0.c0) AND (t0.c24)), vt1.c0 COLLATE RTRIM, ((vt1.c0)<=(v0.c0))))<((LOWER(DISTINCT v0.c0), ((t0.c24) IS FALSE), ((t0.c24) NOTNULL))))) ORDER BY ((vt1.c0 COLLATE BINARY)=(((t0.c24)LIKE(NULL)))) DESC, (COALESCE(DISTINCT v0.c0, vt1.c0, t0.c0, vt1.c0, t0.c0, vt1.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c24) BETWEEN (t0.c0) AND (t0.c24)), vt1.c0 COLLATE RTRIM, ((vt1.c0)<=(v0.c0))))<((LOWER(DISTINCT v0.c0), ((t0.c24) IS FALSE), ((t0.c24) NOTNULL))))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY)==(((t0.c24)LIKE(NULL)))) DESC, (COALESCE(DISTINCT v0.c0, vt1.c0, t0.c0, vt1.c0, t0.c0, vt1.c0) IN ()) DESC);
SELECT * FROM v0, t0, vt1 WHERE ((((((t0.c24) BETWEEN (t0.c0) AND (t0.c24)), vt1.c0 COLLATE RTRIM, ((vt1.c0)<=(v0.c0))))<((LOWER(DISTINCT v0.c0), ((t0.c24) IS FALSE), ((t0.c24) NOTNULL))))) ORDER BY ((vt1.c0 COLLATE BINARY)=(((t0.c24)LIKE(NULL)))) DESC, (COALESCE(DISTINCT v0.c0, vt1.c0, t0.c0, vt1.c0, t0.c0, vt1.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c24) BETWEEN (t0.c0) AND (t0.c24)), vt1.c0 COLLATE RTRIM, ((vt1.c0)<=(v0.c0))))<((LOWER(DISTINCT v0.c0), ((t0.c24) IS FALSE), ((t0.c24) NOTNULL))))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY)==(((t0.c24)LIKE(NULL)))) DESC, (COALESCE(DISTINCT v0.c0, vt1.c0, t0.c0, vt1.c0, t0.c0, vt1.c0) IN ()) DESC);
SELECT * FROM v0, t0, vt1 WHERE ((((((t0.c24) BETWEEN (t0.c0) AND (t0.c24)), vt1.c0 COLLATE RTRIM, ((vt1.c0)<=(v0.c0))))<((LOWER(DISTINCT v0.c0), ((t0.c24) IS FALSE), ((t0.c24) NOTNULL))))) ORDER BY ((vt1.c0 COLLATE BINARY)=(((t0.c24)LIKE(NULL)))) DESC, (COALESCE(DISTINCT v0.c0, vt1.c0, t0.c0, vt1.c0, t0.c0, vt1.c0) IN ()) DESC;
SELECT * FROM v0, vt1 WHERE (CASE IFNULL(v0.c0, NULL)  WHEN v0.c0 COLLATE NOCASE THEN x'' WHEN -1349075018 THEN ((v0.c0) IS FALSE) WHEN ((v0.c0) NOT NULL) THEN HEX(DISTINCT v0.c0) ELSE (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) END) ORDER BY json_quote(((((v0.c0)AND(v0.c0)))AND(v0.c0))) ASC  NULLS FIRST, (CAST(vt1.c0 AS BLOB) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(v0.c0, NULL)  WHEN v0.c0 COLLATE NOCASE THEN x'' WHEN -1349075018 THEN ((v0.c0) IS FALSE) WHEN ((v0.c0) NOT NULL) THEN HEX(DISTINCT v0.c0) ELSE (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM v0, vt1 ORDER BY json_quote(((((v0.c0)AND(v0.c0)))AND(v0.c0))) ASC  NULLS FIRST, (CAST(vt1.c0 AS BLOB) IN ()) ASC  NULLS FIRST);
SELECT * FROM v0, vt1 WHERE (CASE IFNULL(v0.c0, NULL)  WHEN v0.c0 COLLATE NOCASE THEN x'' WHEN -1349075018 THEN ((v0.c0) IS FALSE) WHEN ((v0.c0) NOT NULL) THEN HEX(DISTINCT v0.c0) ELSE (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) END) ORDER BY json_quote(((((v0.c0)AND(v0.c0)))AND(v0.c0))) ASC  NULLS FIRST, (CAST(vt1.c0 AS BLOB) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(v0.c0, NULL)  WHEN v0.c0 COLLATE NOCASE THEN x'' WHEN -1349075018 THEN ((v0.c0) IS FALSE) WHEN ((v0.c0) NOT NULL) THEN HEX(DISTINCT v0.c0) ELSE (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM v0, vt1 ORDER BY json_quote(((((v0.c0)AND(v0.c0)))AND(v0.c0))) ASC  NULLS FIRST, (CAST(vt1.c0 AS BLOB) IN ()) ASC  NULLS FIRST);
SELECT * FROM v0, vt1 WHERE (CASE IFNULL(v0.c0, NULL)  WHEN v0.c0 COLLATE NOCASE THEN x'' WHEN -1349075018 THEN ((v0.c0) IS FALSE) WHEN ((v0.c0) NOT NULL) THEN HEX(DISTINCT v0.c0) ELSE (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) END) ORDER BY json_quote(((((v0.c0)AND(v0.c0)))AND(v0.c0))) ASC  NULLS FIRST, (CAST(vt1.c0 AS BLOB) IN ()) ASC  NULLS FIRST;
SELECT * FROM v0, vt1 WHERE ((((((NOT (v0.c0)))AND(((v0.c0)&(v0.c0)))))AND(((vt1.c0)==('')))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (v0.c0)))AND(((v0.c0)&(v0.c0)))))AND(((vt1.c0)==(''))))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((((((NOT (v0.c0)))AND(((v0.c0)&(v0.c0)))))AND(((vt1.c0)==('')))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (v0.c0)))AND(((v0.c0)&(v0.c0)))))AND(((vt1.c0)==(''))))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((((((NOT (v0.c0)))AND(((v0.c0)&(v0.c0)))))AND(((vt1.c0)==('')))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c24)), CASE WHEN t0.c24 THEN t0.c24 ELSE t0.c0 END, ((t0.c24)IS NOT(t0.c24))))!=((CAST(t0.c24 AS BLOB), ((t0.c24) BETWEEN (t0.c24) AND (t0.c0)), (NOT (t0.c24))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c24)), CASE WHEN t0.c24 THEN t0.c24 ELSE t0.c0 END, ((t0.c24)IS NOT(t0.c24))))!=((CAST(t0.c24 AS BLOB), ((t0.c24) BETWEEN (t0.c24) AND (t0.c0)), (NOT (t0.c24)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c24)), CASE WHEN t0.c24 THEN t0.c24 ELSE t0.c0 END, ((t0.c24)IS NOT(t0.c24))))!=((CAST(t0.c24 AS BLOB), ((t0.c24) BETWEEN (t0.c24) AND (t0.c0)), (NOT (t0.c24))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c24)), CASE WHEN t0.c24 THEN t0.c24 ELSE t0.c0 END, ((t0.c24)IS NOT(t0.c24))))!=((CAST(t0.c24 AS BLOB), ((t0.c24) BETWEEN (t0.c24) AND (t0.c0)), (NOT (t0.c24)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c24)), CASE WHEN t0.c24 THEN t0.c24 ELSE t0.c0 END, ((t0.c24)IS NOT(t0.c24))))!=((CAST(t0.c24 AS BLOB), ((t0.c24) BETWEEN (t0.c24) AND (t0.c0)), (NOT (t0.c24))))));
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) ISNULL)) ORDER BY (CAST(t0.c0 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c0 AS REAL) IN ()));
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) ISNULL)) ORDER BY (CAST(t0.c0 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c0 AS REAL) IN ()));
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) ISNULL)) ORDER BY (CAST(t0.c0 AS REAL) IN ());
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)==(vt1.c0)) AS BLOB)) ORDER BY ((vt1.c0 COLLATE BINARY)OR(((vt1.c0)<<(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)=(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)OR(((vt1.c0)<<(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)==(vt1.c0)) AS BLOB)) ORDER BY ((vt1.c0 COLLATE BINARY)OR(((vt1.c0)<<(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)=(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)OR(((vt1.c0)<<(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)==(vt1.c0)) AS BLOB)) ORDER BY ((vt1.c0 COLLATE BINARY)OR(((vt1.c0)<<(vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (((((t0.c0)&(vt1.c0))) ISNULL)) ORDER BY ((json_extract(t0.c0, v0.c0, t0.c0, t0.c24)) ISNULL) ASC, (('-312204450') BETWEEN (((t0.c24)>>(t0.c0))) AND (x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)&(vt1.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY ((json_extract(t0.c0, v0.c0, t0.c0, t0.c24)) ISNULL) ASC, (('-312204450') BETWEEN (((t0.c24)>>(t0.c0))) AND (x'')) ASC);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (((((t0.c0)&(vt1.c0))) ISNULL)) ORDER BY ((json_extract(t0.c0, v0.c0, t0.c0, t0.c24)) ISNULL) ASC, (('-312204450') BETWEEN (((t0.c24)>>(t0.c0))) AND (x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)&(vt1.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY ((json_extract(t0.c0, v0.c0, t0.c0, t0.c24)) ISNULL) ASC, (('-312204450') BETWEEN (((t0.c24)>>(t0.c0))) AND (x'')) ASC);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (((((t0.c0)&(vt1.c0))) ISNULL)) ORDER BY ((json_extract(t0.c0, v0.c0, t0.c0, t0.c24)) ISNULL) ASC, (('-312204450') BETWEEN (((t0.c24)>>(t0.c0))) AND (x'')) ASC;
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (((((vt1.c0) NOTNULL)) IS FALSE)) ORDER BY ((((((t0.c0) NOTNULL))AND(v0.c0)))AND(((t0.c0)IS(t0.c24))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY ((((((t0.c0) NOTNULL))AND(v0.c0)))AND(((t0.c0)IS(t0.c24))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (((((vt1.c0) NOTNULL)) IS FALSE)) ORDER BY ((((((t0.c0) NOTNULL))AND(v0.c0)))AND(((t0.c0)IS(t0.c24))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY ((((((t0.c0) NOTNULL))AND(v0.c0)))AND(((t0.c0)IS(t0.c24))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (((((vt1.c0) NOTNULL)) IS FALSE)) ORDER BY ((((((t0.c0) NOTNULL))AND(v0.c0)))AND(((t0.c0)IS(t0.c24))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (('jGW)좪*(3' IN (((((t0.c0)OR(t0.c24)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((('jGW)좪*(3' IN (((((t0.c0)OR(t0.c24)))AND(vt1.c0))))) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (('jGW)좪*(3' IN (((((t0.c0)OR(t0.c24)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((('jGW)좪*(3' IN (((((t0.c0)OR(t0.c24)))AND(vt1.c0))))) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (('jGW)좪*(3' IN (((((t0.c0)OR(t0.c24)))AND(vt1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)<>(vt1.c0)))OR(CAST(vt1.c0 AS TEXT))))OR(v0.c0)) CROSS JOIN t0 ON t0.c24 WHERE (((((v0.c0) NOTNULL))&((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))&((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)<>(vt1.c0)))OR(CAST(vt1.c0 AS TEXT))))OR(v0.c0)) CROSS JOIN t0 ON t0.c24);
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)<>(vt1.c0)))OR(CAST(vt1.c0 AS TEXT))))OR(v0.c0)) CROSS JOIN t0 ON t0.c24 WHERE (((((v0.c0) NOTNULL))&((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))&((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)<>(vt1.c0)))OR(CAST(vt1.c0 AS TEXT))))OR(v0.c0)) CROSS JOIN t0 ON t0.c24);
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)<>(vt1.c0)))OR(CAST(vt1.c0 AS TEXT))))OR(v0.c0)) CROSS JOIN t0 ON t0.c24 WHERE (((((v0.c0) NOTNULL))&((NOT (vt1.c0)))));
SELECT COUNT(*) FROM vt1, t0 WHERE (NULL COLLATE RTRIM) ORDER BY ((NULL) ISNULL), ((((CAST(t0.c0 AS TEXT))AND(((t0.c0) NOT BETWEEN (t0.c0) AND ('7삃')))))OR((((7.41068926E8))<=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 ORDER BY ((NULL) ISNULL), ((((CAST(t0.c0 AS TEXT))AND(((t0.c0) NOT BETWEEN (t0.c0) AND ('7삃')))))OR((((7.41068926E8))<=((t0.c0))))));
SELECT COUNT(*) FROM vt1, t0 WHERE (NULL COLLATE RTRIM) ORDER BY ((NULL) ISNULL), ((((CAST(t0.c0 AS TEXT))AND(((t0.c0) NOT BETWEEN (t0.c0) AND ('7삃')))))OR((((7.41068926E8))<=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 ORDER BY ((NULL) ISNULL), ((((CAST(t0.c0 AS TEXT))AND(((t0.c0) NOT BETWEEN (t0.c0) AND ('7삃')))))OR((((7.41068926E8))<=((t0.c0))))));
SELECT COUNT(*) FROM vt1, t0 WHERE (NULL COLLATE RTRIM) ORDER BY ((NULL) ISNULL), ((((CAST(t0.c0 AS TEXT))AND(((t0.c0) NOT BETWEEN (t0.c0) AND ('7삃')))))OR((((7.41068926E8))<=((t0.c0)))));
SELECT ALL * FROM t0 WHERE ('-1125414395');
SELECT SUM(count) FROM (SELECT ALL (('-1125414395') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('-1125414395');
SELECT SUM(count) FROM (SELECT ALL (('-1125414395') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('-1125414395');
SELECT * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))==(('')))) ORDER BY CAST((vt1.c0 IN ()) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))=(('')))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))==(('')))) ORDER BY CAST((vt1.c0 IN ()) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))=(('')))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))==(('')))) ORDER BY CAST((vt1.c0 IN ()) AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN (load_extension(v0.c0, v0.c0), (+ (v0.c0))))) ORDER BY (+ (((v0.c0)+(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN (load_extension(v0.c0, v0.c0), (+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0)+(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN (load_extension(v0.c0, v0.c0), (+ (v0.c0))))) ORDER BY (+ (((v0.c0)+(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN (load_extension(v0.c0, v0.c0), (+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0)+(v0.c0)))) DESC);
SELECT * FROM t0, vt1, v0 INDEXED BY i30 WHERE (HEX((((t0.c0))<((t0.c24)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((t0.c0))<((t0.c24))))) IS TRUE)  as count FROM t0, vt1, v0 INDEXED BY i30);
SELECT * FROM t0, vt1, v0 INDEXED BY i30 WHERE (HEX((((t0.c0))<((t0.c24)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((t0.c0))<((t0.c24))))) IS TRUE)  as count FROM t0, vt1, v0 INDEXED BY i30);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0)IS NOT(t0.c0)))>=((- (t0.c24)))) WHERE (t0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0)IS NOT(t0.c0)))>=((- (t0.c24)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0)IS NOT(t0.c0)))>=((- (t0.c24)))) WHERE (t0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0)IS NOT(t0.c0)))>=((- (t0.c24)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((((t0.c0)IS NOT(t0.c0)))>=((- (t0.c24)))) WHERE (t0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE ((t0.c0) NOT NULL)  WHEN '-841997379' THEN ((t0.c24) BETWEEN (t0.c0) AND (t0.c24)) WHEN ((t0.c24) ISNULL) THEN CASE WHEN vt1.c0 THEN t0.c24 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END WHEN NULL THEN ((vt1.c0)IS(t0.c0)) ELSE ((vt1.c0) ISNULL) END) ORDER BY ((t0.c0) IS TRUE) ASC  NULLS LAST, NULL ASC, t0.c24 COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOT NULL)  WHEN '-841997379' THEN ((t0.c24) BETWEEN (t0.c0) AND (t0.c24)) WHEN ((t0.c24) ISNULL) THEN CASE WHEN vt1.c0 THEN t0.c24 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END WHEN NULL THEN ((vt1.c0)IS(t0.c0)) ELSE ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c0) IS TRUE) ASC  NULLS LAST, NULL ASC, t0.c24 COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE ((t0.c0) NOT NULL)  WHEN '-841997379' THEN ((t0.c24) BETWEEN (t0.c0) AND (t0.c24)) WHEN ((t0.c24) ISNULL) THEN CASE WHEN vt1.c0 THEN t0.c24 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END WHEN NULL THEN ((vt1.c0)IS(t0.c0)) ELSE ((vt1.c0) ISNULL) END) ORDER BY ((t0.c0) IS TRUE) ASC  NULLS LAST, NULL ASC, t0.c24 COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOT NULL)  WHEN '-841997379' THEN ((t0.c24) BETWEEN (t0.c0) AND (t0.c24)) WHEN ((t0.c24) ISNULL) THEN CASE WHEN vt1.c0 THEN t0.c24 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END WHEN NULL THEN ((vt1.c0)IS(t0.c0)) ELSE ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c0) IS TRUE) ASC  NULLS LAST, NULL ASC, t0.c24 COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE ((t0.c0) NOT NULL)  WHEN '-841997379' THEN ((t0.c24) BETWEEN (t0.c0) AND (t0.c24)) WHEN ((t0.c24) ISNULL) THEN CASE WHEN vt1.c0 THEN t0.c24 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END WHEN NULL THEN ((vt1.c0)IS(t0.c0)) ELSE ((vt1.c0) ISNULL) END) ORDER BY ((t0.c0) IS TRUE) ASC  NULLS LAST, NULL ASC, t0.c24 COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (vt1.c0);
SELECT COUNT(*) FROM t0, v0 NATURAL JOIN vt1 WHERE ((((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((v0.c0) IS FALSE), 0.6187722059818668 COLLATE RTRIM))>((((t0.c24)<<(t0.c0)), (((NULL, v0.c0, t0.c0))<((v0.c0, vt1.c0, v0.c0))), ((t0.c24) BETWEEN (t0.c24) AND (0Xffffffffb76f9adc)))))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((v0.c0) IS FALSE), 0.6187722059818668 COLLATE RTRIM))>((((t0.c24)<<(t0.c0)), (((NULL, v0.c0, t0.c0))<((v0.c0, vt1.c0, v0.c0))), ((t0.c24) BETWEEN (t0.c24) AND (0xffffffffb76f9adc)))))) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt1 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 NATURAL JOIN vt1 WHERE ((((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((v0.c0) IS FALSE), 0.6187722059818668 COLLATE RTRIM))>((((t0.c24)<<(t0.c0)), (((NULL, v0.c0, t0.c0))<((v0.c0, vt1.c0, v0.c0))), ((t0.c24) BETWEEN (t0.c24) AND (0Xffffffffb76f9adc)))))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((v0.c0) IS FALSE), 0.6187722059818668 COLLATE RTRIM))>((((t0.c24)<<(t0.c0)), (((NULL, v0.c0, t0.c0))<((v0.c0, vt1.c0, v0.c0))), ((t0.c24) BETWEEN (t0.c24) AND (0xffffffffb76f9adc)))))) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt1 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 NATURAL JOIN vt1 WHERE ((((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((v0.c0) IS FALSE), 0.6187722059818668 COLLATE RTRIM))>((((t0.c24)<<(t0.c0)), (((NULL, v0.c0, t0.c0))<((v0.c0, vt1.c0, v0.c0))), ((t0.c24) BETWEEN (t0.c24) AND (0Xffffffffb76f9adc)))))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE (((x'da7a') BETWEEN (json_array(t0.c24, vt1.c0)) AND (((((t0.c24)OR(t0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'da7a') BETWEEN (json_array(t0.c24, vt1.c0)) AND (((((t0.c24)OR(t0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((x'da7a') BETWEEN (json_array(t0.c24, vt1.c0)) AND (((((t0.c24)OR(t0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'da7a') BETWEEN (json_array(t0.c24, vt1.c0)) AND (((((t0.c24)OR(t0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((x'da7a') BETWEEN (json_array(t0.c24, vt1.c0)) AND (((((t0.c24)OR(t0.c0)))AND(vt1.c0)))));
SELECT * FROM vt1, t0, v0 WHERE (((((t0.c24)AND(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c24)AND(v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, t0, v0);
SELECT * FROM vt1, t0, v0 WHERE (((((t0.c24)AND(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c24)AND(v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, t0, v0);
SELECT * FROM vt1, t0, v0 WHERE (((((t0.c24)AND(v0.c0))) NOT NULL));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY);
SELECT * FROM vt1, t0 WHERE (t0.c24) ORDER BY ((t0.c0)<>(((t0.c24)IS(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c24) IS TRUE)  as count FROM vt1, t0 ORDER BY ((t0.c0)!=(((t0.c24)IS(vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (t0.c24) ORDER BY ((t0.c0)<>(((t0.c24)IS(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c24) IS TRUE)  as count FROM vt1, t0 ORDER BY ((t0.c0)!=(((t0.c24)IS(vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (t0.c24) ORDER BY ((t0.c0)<>(((t0.c24)IS(vt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE (json_patch(t0.c0, (((t0.c24))<((t0.c0))))) ORDER BY ((((((((0.8090419469879284)AND((0.8727406269305849 IN ()))))AND(t0.c24 COLLATE RTRIM)))AND(CASE t0.c24  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c24 END)))OR(CAST(t0.c24 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(t0.c0, (((t0.c24))<((t0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((((0.8090419469879284)AND((0.8727406269305849 IN ()))))AND(t0.c24 COLLATE RTRIM)))AND(CASE t0.c24  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c24 END)))OR(CAST(t0.c24 AS REAL)))  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (json_patch(t0.c0, (((t0.c24))<((t0.c0))))) ORDER BY ((((((((0.8090419469879284)AND((0.8727406269305849 IN ()))))AND(t0.c24 COLLATE RTRIM)))AND(CASE t0.c24  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c24 END)))OR(CAST(t0.c24 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(t0.c0, (((t0.c24))<((t0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((((0.8090419469879284)AND((0.8727406269305849 IN ()))))AND(t0.c24 COLLATE RTRIM)))AND(CASE t0.c24  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c24 END)))OR(CAST(t0.c24 AS REAL)))  NULLS FIRST);
SELECT ALL * FROM vt1, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))) AND ((v0.c0)))) ORDER BY (((((((((~ (vt1.c0)))OR((- (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(v0.c0)))))OR(CAST('966520938' AS BLOB))))AND(((v0.c0)/(v0.c0)))) DESC, '-2143391104' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))) AND ((v0.c0)))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((((((~ (vt1.c0)))OR((- (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(v0.c0)))))OR(CAST('966520938' AS BLOB))))AND(((v0.c0)/(v0.c0)))) DESC, '-2143391104' DESC  NULLS FIRST);
SELECT ALL * FROM vt1, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))) AND ((v0.c0)))) ORDER BY (((((((((~ (vt1.c0)))OR((- (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(v0.c0)))))OR(CAST('966520938' AS BLOB))))AND(((v0.c0)/(v0.c0)))) DESC, '-2143391104' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))) AND ((v0.c0)))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((((((~ (vt1.c0)))OR((- (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(v0.c0)))))OR(CAST('966520938' AS BLOB))))AND(((v0.c0)/(v0.c0)))) DESC, '-2143391104' DESC  NULLS FIRST);
SELECT ALL * FROM vt1, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))) AND ((v0.c0)))) ORDER BY (((((((((~ (vt1.c0)))OR((- (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(v0.c0)))))OR(CAST('966520938' AS BLOB))))AND(((v0.c0)/(v0.c0)))) DESC, '-2143391104' DESC  NULLS FIRST;
SELECT * FROM vt1, t0 WHERE (((NULL IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((NULL IN ()) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((NULL IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((NULL IN ()) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((NULL IN ()) IN ()));
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN v0 ON (((NOT (v0.c0)))%(v0.c0)) WHERE ((((((((t0.c0, v0.c0, '-323868701')) BETWEEN ((t0.c0, t0.c24, NULL)) AND ((t0.c24, t0.c24, v0.c0))))OR(((v0.c0) NOTNULL))))AND(CASE WHEN vt1.c0 THEN 't.1-500000D+' WHEN vt1.c0 THEN t0.c24 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c24 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0, v0.c0, '-323868701')) BETWEEN ((t0.c0, t0.c24, NULL)) AND ((t0.c24, t0.c24, v0.c0))))OR(((v0.c0) NOTNULL))))AND(CASE WHEN vt1.c0 THEN 't.1-500000D+' WHEN vt1.c0 THEN t0.c24 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c24 END))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN v0 ON (((NOT (v0.c0)))%(v0.c0)));
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN v0 ON (((NOT (v0.c0)))%(v0.c0)) WHERE ((((((((t0.c0, v0.c0, '-323868701')) BETWEEN ((t0.c0, t0.c24, NULL)) AND ((t0.c24, t0.c24, v0.c0))))OR(((v0.c0) NOTNULL))))AND(CASE WHEN vt1.c0 THEN 't.1-500000D+' WHEN vt1.c0 THEN t0.c24 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c24 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0, v0.c0, '-323868701')) BETWEEN ((t0.c0, t0.c24, NULL)) AND ((t0.c24, t0.c24, v0.c0))))OR(((v0.c0) NOTNULL))))AND(CASE WHEN vt1.c0 THEN 't.1-500000D+' WHEN vt1.c0 THEN t0.c24 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c24 END))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN v0 ON (((NOT (v0.c0)))%(v0.c0)));
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN v0 ON (((NOT (v0.c0)))%(v0.c0)) WHERE ((((((((t0.c0, v0.c0, '-323868701')) BETWEEN ((t0.c0, t0.c24, NULL)) AND ((t0.c24, t0.c24, v0.c0))))OR(((v0.c0) NOTNULL))))AND(CASE WHEN vt1.c0 THEN 't.1-500000D+' WHEN vt1.c0 THEN t0.c24 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c24 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN ()))));
SELECT ALL * FROM t0, vt1 WHERE (((SQLITE_COMPILEOPTION_GET(t0.c0))||(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(t0.c0))||(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((SQLITE_COMPILEOPTION_GET(t0.c0))||(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(t0.c0))||(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((SQLITE_COMPILEOPTION_GET(t0.c0))||(((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM vt1, t0 WHERE (((vt1.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((((vt1.c0) ISNULL))||(TRIM(DISTINCT t0.c0))) DESC  NULLS FIRST, ((t0.c24 COLLATE RTRIM) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0))) AND (CASE NULL  WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c0) ISNULL))||(TRIM(DISTINCT t0.c0))) DESC  NULLS FIRST, ((t0.c24 COLLATE RTRIM) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0))) AND (CASE NULL  WHEN t0.c0 THEN t0.c0 END)) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((vt1.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((((vt1.c0) ISNULL))||(TRIM(DISTINCT t0.c0))) DESC  NULLS FIRST, ((t0.c24 COLLATE RTRIM) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0))) AND (CASE NULL  WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c0) ISNULL))||(TRIM(DISTINCT t0.c0))) DESC  NULLS FIRST, ((t0.c24 COLLATE RTRIM) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0))) AND (CASE NULL  WHEN t0.c0 THEN t0.c0 END)) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((vt1.c0 COLLATE BINARY) IS TRUE)) ORDER BY ((((vt1.c0) ISNULL))||(TRIM(DISTINCT t0.c0))) DESC  NULLS FIRST, ((t0.c24 COLLATE RTRIM) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0))) AND (CASE NULL  WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE ((((t0.c0) BETWEEN (v0.c0) AND (t0.c24)) IN (1714970230)));
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN (v0.c0) AND (t0.c24)) IN (1714970230))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE ((((t0.c0) BETWEEN (v0.c0) AND (t0.c24)) IN (1714970230)));
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN (v0.c0) AND (t0.c24)) IN (1714970230))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE ((((t0.c0) BETWEEN (v0.c0) AND (t0.c24)) IN (1714970230)));
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE RTRIM IN (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE RTRIM IN (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE RTRIM IN (v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1, t0 WHERE (((((((vt1.c0)OR(t0.c24)))AND(vt1.c0)))<=(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(t0.c24)))AND(vt1.c0)))<=(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((((vt1.c0)OR(t0.c24)))AND(vt1.c0)))<=(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(t0.c24)))AND(vt1.c0)))<=(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((((vt1.c0)OR(t0.c24)))AND(vt1.c0)))<=(((t0.c0) IS TRUE))));
SELECT * FROM t0, vt1 WHERE (SQLITE_COMPILEOPTION_USED((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ORDER BY ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((~ (t0.c0))) AND (json_array_length(t0.c24, 'B䧵NOP'))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((~ (t0.c0))) AND (json_array_length(t0.c24, 'B䧵NOP'))) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (SQLITE_COMPILEOPTION_USED((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ORDER BY ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((~ (t0.c0))) AND (json_array_length(t0.c24, 'B䧵NOP'))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((~ (t0.c0))) AND (json_array_length(t0.c24, 'B䧵NOP'))) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (SQLITE_COMPILEOPTION_USED((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) ORDER BY ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END) NOT BETWEEN ((~ (t0.c0))) AND (json_array_length(t0.c24, 'B䧵NOP'))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE (CASE WHEN t0.c24 COLLATE BINARY THEN '40' WHEN v0.c0 THEN (NOT (t0.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN v0.c0 ELSE (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c24 COLLATE BINARY THEN '40' WHEN v0.c0 THEN (NOT (t0.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN v0.c0 ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE (CASE WHEN t0.c24 COLLATE BINARY THEN '40' WHEN v0.c0 THEN (NOT (t0.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN v0.c0 ELSE (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c24 COLLATE BINARY THEN '40' WHEN v0.c0 THEN (NOT (t0.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN v0.c0 ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE (CASE WHEN t0.c24 COLLATE BINARY THEN '40' WHEN v0.c0 THEN (NOT (t0.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN v0.c0 ELSE (vt1.c0 IN ()) END);
SELECT ALL * FROM v0, t0, vt1 WHERE ((CASE NULL  WHEN vt1.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE NULL  WHEN vt1.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL * FROM v0, t0, vt1 WHERE ((CASE NULL  WHEN vt1.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE NULL  WHEN vt1.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL * FROM v0, t0, vt1 WHERE ((CASE NULL  WHEN vt1.c0 THEN v0.c0 END IN ()));
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (HEX(DISTINCT ((v0.c0)OR(v0.c0)))) ORDER BY (((vt1.c0)>=(v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((v0.c0)OR(v0.c0)))) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY (((vt1.c0)>=(v0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (HEX(DISTINCT ((v0.c0)OR(v0.c0)))) ORDER BY (((vt1.c0)>=(v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((v0.c0)OR(v0.c0)))) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY (((vt1.c0)>=(v0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (HEX(DISTINCT ((v0.c0)OR(v0.c0)))) ORDER BY (((vt1.c0)>=(v0.c0)) IN ())  NULLS FIRST;
SELECT * FROM vt1, t0 WHERE (((t0.c0)>>(0.8199945213632878)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>>(0.8199945213632878)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((t0.c0)>>(0.8199945213632878)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>>(0.8199945213632878)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((t0.c0)>>(0.8199945213632878)) COLLATE NOCASE);
SELECT * FROM vt1, v0, t0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<=(((t0.c0)<=(t0.c24)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<=(((t0.c0)<=(t0.c24))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT * FROM vt1, v0, t0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<=(((t0.c0)<=(t0.c24)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<=(((t0.c0)<=(t0.c24))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT * FROM vt1, v0, t0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<=(((t0.c0)<=(t0.c24)))));
SELECT ALL * FROM t0 WHERE ((t0.c24 IN ()) COLLATE RTRIM) ORDER BY load_extension((t0.c24 IN ()), t0.c0 COLLATE BINARY) ASC  NULLS LAST, ((((t0.c24) IS FALSE)) NOT BETWEEN (((t0.c24) IS FALSE)) AND ((t0.c0 IN (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((t0.c24 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY load_extension((t0.c24 IN ()), t0.c0 COLLATE BINARY) ASC  NULLS LAST, ((((t0.c24) IS FALSE)) NOT BETWEEN (((t0.c24) IS FALSE)) AND ((t0.c0 IN (t0.c0)))) DESC);
SELECT ALL * FROM t0 WHERE ((t0.c24 IN ()) COLLATE RTRIM) ORDER BY load_extension((t0.c24 IN ()), t0.c0 COLLATE BINARY) ASC  NULLS LAST, ((((t0.c24) IS FALSE)) NOT BETWEEN (((t0.c24) IS FALSE)) AND ((t0.c0 IN (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((t0.c24 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY load_extension((t0.c24 IN ()), t0.c0 COLLATE BINARY) ASC  NULLS LAST, ((((t0.c24) IS FALSE)) NOT BETWEEN (((t0.c24) IS FALSE)) AND ((t0.c0 IN (t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (((CASE WHEN t0.c0 THEN v0.c0 END)AND((((vt1.c0, v0.c0, v0.c0))>((vt1.c0, t0.c0, t0.c0)))))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN v0.c0 END)AND((((vt1.c0, v0.c0, v0.c0))>((vt1.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (((CASE WHEN t0.c0 THEN v0.c0 END)AND((((vt1.c0, v0.c0, v0.c0))>((vt1.c0, t0.c0, t0.c0)))))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN v0.c0 END)AND((((vt1.c0, v0.c0, v0.c0))>((vt1.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (((CASE WHEN t0.c0 THEN v0.c0 END)AND((((vt1.c0, v0.c0, v0.c0))>((vt1.c0, t0.c0, t0.c0)))))) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL * FROM vt1, t0 WHERE ((((x'e569'))<=((LOWER(t0.c0))))) ORDER BY ((CASE t0.c24  WHEN vt1.c0 THEN NULL WHEN 0.9484559417010979 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c0 END)&(CAST(t0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((x'e569'))<=((LOWER(t0.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CASE t0.c24  WHEN vt1.c0 THEN NULL WHEN 0.9484559417010979 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c0 END)&(CAST(t0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM vt1, t0 WHERE ((((x'e569'))<=((LOWER(t0.c0))))) ORDER BY ((CASE t0.c24  WHEN vt1.c0 THEN NULL WHEN 0.9484559417010979 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c0 END)&(CAST(t0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((x'e569'))<=((LOWER(t0.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CASE t0.c24  WHEN vt1.c0 THEN NULL WHEN 0.9484559417010979 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c0 END)&(CAST(t0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM vt1, t0 WHERE ((((x'e569'))<=((LOWER(t0.c0))))) ORDER BY ((CASE t0.c24  WHEN vt1.c0 THEN NULL WHEN 0.9484559417010979 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c0 END)&(CAST(t0.c0 AS INTEGER))) ASC;
SELECT * FROM t0 WHERE ('1834168684') ORDER BY CAST(CASE x''  WHEN t0.c24 THEN t0.c0 END AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1834168684') IS TRUE)  as count FROM t0 ORDER BY CAST(CASE x''  WHEN t0.c24 THEN t0.c0 END AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ('1834168684') ORDER BY CAST(CASE x''  WHEN t0.c24 THEN t0.c0 END AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1834168684') IS TRUE)  as count FROM t0 ORDER BY CAST(CASE x''  WHEN t0.c24 THEN t0.c0 END AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ('1834168684') ORDER BY CAST(CASE x''  WHEN t0.c24 THEN t0.c0 END AS NUMERIC) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((((8.31584972E8) NOT BETWEEN (t0.c0) AND (t0.c24)))OR(((((t0.c24)AND(t0.c24)))AND(t0.c24)))))AND(LIKELY(t0.c24)))) ORDER BY CAST(t0.c0 COLLATE NOCASE AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((((8.31584972E8) NOT BETWEEN (t0.c0) AND (t0.c24)))OR(((((t0.c24)AND(t0.c24)))AND(t0.c24)))))AND(LIKELY(t0.c24)))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 COLLATE NOCASE AS REAL));
SELECT COUNT(*) FROM t0 WHERE (((((((8.31584972E8) NOT BETWEEN (t0.c0) AND (t0.c24)))OR(((((t0.c24)AND(t0.c24)))AND(t0.c24)))))AND(LIKELY(t0.c24)))) ORDER BY CAST(t0.c0 COLLATE NOCASE AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((((8.31584972E8) NOT BETWEEN (t0.c0) AND (t0.c24)))OR(((((t0.c24)AND(t0.c24)))AND(t0.c24)))))AND(LIKELY(t0.c24)))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 COLLATE NOCASE AS REAL));
SELECT COUNT(*) FROM t0 WHERE (((((((8.31584972E8) NOT BETWEEN (t0.c0) AND (t0.c24)))OR(((((t0.c24)AND(t0.c24)))AND(t0.c24)))))AND(LIKELY(t0.c24)))) ORDER BY CAST(t0.c0 COLLATE NOCASE AS REAL);
SELECT ALL * FROM vt1 WHERE (('頻gtX+肋iHn' IN ((~ (vt1.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED(CAST(vt1.c0 AS INTEGER)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((('頻gtX+肋iHn' IN ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_USED(CAST(vt1.c0 AS INTEGER)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (('頻gtX+肋iHn' IN ((~ (vt1.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED(CAST(vt1.c0 AS INTEGER)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((('頻gtX+肋iHn' IN ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_USED(CAST(vt1.c0 AS INTEGER)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (('頻gtX+肋iHn' IN ((~ (vt1.c0))))) ORDER BY SQLITE_COMPILEOPTION_USED(CAST(vt1.c0 AS INTEGER)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN v0 ON CAST((((t0.c24, t0.c24, t0.c24)) NOT BETWEEN ((v0.c0, t0.c24, t0.c0)) AND ((v0.c0, v0.c0, vt1.c0))) AS REAL) WHERE (CASE WHEN ((-5.98634616E8)-(v0.c0)) THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((-5.98634616E8)-(v0.c0)) THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM t0, vt1 CROSS JOIN v0 ON CAST((((t0.c24, t0.c24, t0.c24)) NOT BETWEEN ((v0.c0, t0.c24, t0.c0)) AND ((v0.c0, v0.c0, vt1.c0))) AS REAL));
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN v0 ON CAST((((t0.c24, t0.c24, t0.c24)) NOT BETWEEN ((v0.c0, t0.c24, t0.c0)) AND ((v0.c0, v0.c0, vt1.c0))) AS REAL) WHERE (CASE WHEN ((-5.98634616E8)-(v0.c0)) THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((-5.98634616E8)-(v0.c0)) THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM t0, vt1 CROSS JOIN v0 ON CAST((((t0.c24, t0.c24, t0.c24)) NOT BETWEEN ((v0.c0, t0.c24, t0.c0)) AND ((v0.c0, v0.c0, vt1.c0))) AS REAL));
SELECT COUNT(*) FROM t0, vt1 CROSS JOIN v0 ON CAST((((t0.c24, t0.c24, t0.c24)) NOT BETWEEN ((v0.c0, t0.c24, t0.c0)) AND ((v0.c0, v0.c0, vt1.c0))) AS REAL) WHERE (CASE WHEN ((-5.98634616E8)-(v0.c0)) THEN (vt1.c0 IN ()) END);
SELECT * FROM v0, vt1, t0 WHERE ((~ (t0.c0 COLLATE NOCASE))) ORDER BY (- ('1870988661')) ASC, CASE WHEN ((0.5955337174649827)<>(vt1.c0)) THEN (t0.c0 IN ()) ELSE v0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY (- ('1870988661')) ASC, CASE WHEN ((0.5955337174649827)<>(vt1.c0)) THEN (t0.c0 IN ()) ELSE v0.c0 END DESC  NULLS LAST);
SELECT * FROM v0, vt1, t0 WHERE ((~ (t0.c0 COLLATE NOCASE))) ORDER BY (- ('1870988661')) ASC, CASE WHEN ((0.5955337174649827)<>(vt1.c0)) THEN (t0.c0 IN ()) ELSE v0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY (- ('1870988661')) ASC, CASE WHEN ((0.5955337174649827)<>(vt1.c0)) THEN (t0.c0 IN ()) ELSE v0.c0 END DESC  NULLS LAST);
SELECT * FROM v0, vt1, t0 WHERE ((~ (t0.c0 COLLATE NOCASE))) ORDER BY (- ('1870988661')) ASC, CASE WHEN ((0.5955337174649827)<>(vt1.c0)) THEN (t0.c0 IN ()) ELSE v0.c0 END DESC  NULLS LAST;
SELECT * FROM v0, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED, vt1);
SELECT * FROM v0, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED, vt1);
SELECT * FROM v0, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)/(v0.c0)))AND(v0.c0)))AND((v0.c0 IN ()))))OR(((v0.c0) IS TRUE))))AND(NULL))) ORDER BY ((v0.c0)|(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)/(v0.c0)))AND(v0.c0)))AND((v0.c0 IN ()))))OR(((v0.c0) IS TRUE))))AND(NULL))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)|(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)/(v0.c0)))AND(v0.c0)))AND((v0.c0 IN ()))))OR(((v0.c0) IS TRUE))))AND(NULL))) ORDER BY ((v0.c0)|(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)/(v0.c0)))AND(v0.c0)))AND((v0.c0 IN ()))))OR(((v0.c0) IS TRUE))))AND(NULL))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)|(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)/(v0.c0)))AND(v0.c0)))AND((v0.c0 IN ()))))OR(((v0.c0) IS TRUE))))AND(NULL))) ORDER BY ((v0.c0)|(CAST(v0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((x'8abd51a1')&((((t0.c24, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c24, t0.c0, t0.c24, t0.c0, t0.c24)) AND ((t0.c0, t0.c0, t0.c24, t0.c0, t0.c24))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'8abd51a1')&((((t0.c24, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c24, t0.c0, t0.c24, t0.c0, t0.c24)) AND ((t0.c0, t0.c0, t0.c24, t0.c0, t0.c24)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((x'8abd51a1')&((((t0.c24, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c24, t0.c0, t0.c24, t0.c0, t0.c24)) AND ((t0.c0, t0.c0, t0.c24, t0.c0, t0.c24))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'8abd51a1')&((((t0.c24, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c24, t0.c0, t0.c24, t0.c0, t0.c24)) AND ((t0.c0, t0.c0, t0.c24, t0.c0, t0.c24)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((x'8abd51a1')&((((t0.c24, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c24, t0.c0, t0.c24, t0.c0, t0.c24)) AND ((t0.c0, t0.c0, t0.c24, t0.c0, t0.c24))))));
SELECT * FROM t0 FULL OUTER JOIN v0 ON CASE WHEN t0.c24 THEN CASE WHEN t0.c24 THEN v0.c0 WHEN t0.c24 THEN v0.c0 WHEN x'' THEN t0.c0 ELSE v0.c0 END ELSE vt1.c0 END INNER JOIN vt1 ON ((t0.c24)GLOB(IFNULL(DISTINCT 0.951152589844318, t0.c24))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CASE WHEN t0.c24 THEN CASE WHEN t0.c24 THEN v0.c0 WHEN t0.c24 THEN v0.c0 WHEN x'' THEN t0.c0 ELSE v0.c0 END ELSE vt1.c0 END INNER JOIN vt1 ON ((t0.c24)GLOB(IFNULL(DISTINCT 0.951152589844318, t0.c24))));
SELECT * FROM t0 FULL OUTER JOIN v0 ON CASE WHEN t0.c24 THEN CASE WHEN t0.c24 THEN v0.c0 WHEN t0.c24 THEN v0.c0 WHEN x'' THEN t0.c0 ELSE v0.c0 END ELSE vt1.c0 END INNER JOIN vt1 ON ((t0.c24)GLOB(IFNULL(DISTINCT 0.951152589844318, t0.c24))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CASE WHEN t0.c24 THEN CASE WHEN t0.c24 THEN v0.c0 WHEN t0.c24 THEN v0.c0 WHEN x'' THEN t0.c0 ELSE v0.c0 END ELSE vt1.c0 END INNER JOIN vt1 ON ((t0.c24)GLOB(IFNULL(DISTINCT 0.951152589844318, t0.c24))));
SELECT ALL * FROM vt1, v0 NOT INDEXED WHERE ((((~ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) AND (x''))) ORDER BY ((((v0.c0)!=(vt1.c0)))-(TRIM(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) AND (x''))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((v0.c0)!=(vt1.c0)))-(TRIM(v0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1, v0 NOT INDEXED WHERE ((((~ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) AND (x''))) ORDER BY ((((v0.c0)!=(vt1.c0)))-(TRIM(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) AND (x''))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((v0.c0)!=(vt1.c0)))-(TRIM(v0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1, v0 NOT INDEXED WHERE ((((~ (vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) AND (x''))) ORDER BY ((((v0.c0)!=(vt1.c0)))-(TRIM(v0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((-257715623)AND(((vt1.c0) IS TRUE))))OR((('899102926') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((-257715623)AND(((vt1.c0) IS TRUE))))OR((('899102926') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((-257715623)AND(((vt1.c0) IS TRUE))))OR((('899102926') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((-257715623)AND(((vt1.c0) IS TRUE))))OR((('899102926') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((-257715623)AND(((vt1.c0) IS TRUE))))OR((('899102926') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1, t0 WHERE (((((vt1.c0)OR(t0.c24)))OR(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(t0.c24)))OR(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((vt1.c0)OR(t0.c24)))OR(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(t0.c24)))OR(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((vt1.c0)OR(t0.c24)))OR(vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, v0 WHERE ((((((v0.c0, t0.c24, v0.c0)) BETWEEN ((t0.c24, v0.c0, t0.c24)) AND (('-1028420948', t0.c24, t0.c24))))<<(v0.c0 COLLATE RTRIM))) ORDER BY ((((v0.c0)-(t0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, t0.c24, v0.c0)) BETWEEN ((t0.c24, v0.c0, t0.c24)) AND (('-1028420948', t0.c24, t0.c24))))<<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0)-(t0.c0))) IS TRUE));
SELECT COUNT(*) FROM t0, v0 WHERE ((((((v0.c0, t0.c24, v0.c0)) BETWEEN ((t0.c24, v0.c0, t0.c24)) AND (('-1028420948', t0.c24, t0.c24))))<<(v0.c0 COLLATE RTRIM))) ORDER BY ((((v0.c0)-(t0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, t0.c24, v0.c0)) BETWEEN ((t0.c24, v0.c0, t0.c24)) AND (('-1028420948', t0.c24, t0.c24))))<<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0)-(t0.c0))) IS TRUE));
SELECT COUNT(*) FROM t0, v0 WHERE ((((((v0.c0, t0.c24, v0.c0)) BETWEEN ((t0.c24, v0.c0, t0.c24)) AND (('-1028420948', t0.c24, t0.c24))))<<(v0.c0 COLLATE RTRIM))) ORDER BY ((((v0.c0)-(t0.c0))) IS TRUE);
SELECT ALL * FROM t0, v0 WHERE (CHAR((((v0.c0, t0.c24, v0.c0))<>((t0.c24, t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((CHAR((((v0.c0, t0.c24, v0.c0))!=((t0.c24, t0.c0, t0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CHAR((((v0.c0, t0.c24, v0.c0))<>((t0.c24, t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((CHAR((((v0.c0, t0.c24, v0.c0))!=((t0.c24, t0.c0, t0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CHAR((((v0.c0, t0.c24, v0.c0))<>((t0.c24, t0.c0, t0.c0)))));
SELECT * FROM v0, vt1, t0 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END) NOTNULL)) ORDER BY UNLIKELY((((vt1.c0))<((t0.c24)))) DESC  NULLS FIRST, ((t0.c0)IS(t0.c24)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END) NOTNULL)) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY UNLIKELY((((vt1.c0))<((t0.c24)))) DESC  NULLS FIRST, ((t0.c0)IS(t0.c24)) COLLATE RTRIM ASC);
SELECT * FROM v0, vt1, t0 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END) NOTNULL)) ORDER BY UNLIKELY((((vt1.c0))<((t0.c24)))) DESC  NULLS FIRST, ((t0.c0)IS(t0.c24)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END) NOTNULL)) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY UNLIKELY((((vt1.c0))<((t0.c24)))) DESC  NULLS FIRST, ((t0.c0)IS(t0.c24)) COLLATE RTRIM ASC);
SELECT * FROM v0, vt1, t0 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END) NOTNULL)) ORDER BY UNLIKELY((((vt1.c0))<((t0.c24)))) DESC  NULLS FIRST, ((t0.c0)IS(t0.c24)) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt1, t0 WHERE (TYPEOF(((('0.8199945213632878')) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((('0.8199945213632878')) BETWEEN ((t0.c0)) AND ((t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (TYPEOF(((('0.8199945213632878')) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((('0.8199945213632878')) BETWEEN ((t0.c0)) AND ((t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (TYPEOF(((('0.8199945213632878')) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0, vt1, t0);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0, vt1, t0);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (t0.c0);
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (NOT ((t0.c24 IN ()))) WHERE ((((t0.c24 IN ()))=(((v0.c0) NOT BETWEEN (891448652) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c24 IN ()))==(((v0.c0) NOT BETWEEN (891448652) AND (v0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (NOT ((t0.c24 IN ()))));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (NOT ((t0.c24 IN ()))) WHERE ((((t0.c24 IN ()))=(((v0.c0) NOT BETWEEN (891448652) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c24 IN ()))==(((v0.c0) NOT BETWEEN (891448652) AND (v0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (NOT ((t0.c24 IN ()))));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (NOT ((t0.c24 IN ()))) WHERE ((((t0.c24 IN ()))=(((v0.c0) NOT BETWEEN (891448652) AND (v0.c0)))));
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN t0.c24 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN t0.c24 COLLATE BINARY END) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN t0.c24 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN t0.c24 COLLATE BINARY END) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN t0.c24 COLLATE BINARY END);
SELECT * FROM vt1, t0 WHERE (CASE vt1.c0  WHEN ((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c24)) THEN ((vt1.c0)LIKE(vt1.c0)) ELSE CAST(t0.c24 AS NUMERIC) END) ORDER BY (((((((t0.c24)OR(vt1.c0)))OR(vt1.c0))))>=((t0.c24 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c24)) THEN ((vt1.c0)LIKE(vt1.c0)) ELSE CAST(t0.c24 AS NUMERIC) END) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((t0.c24)OR(vt1.c0)))OR(vt1.c0))))>=((t0.c24 COLLATE RTRIM)))  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (CASE vt1.c0  WHEN ((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c24)) THEN ((vt1.c0)LIKE(vt1.c0)) ELSE CAST(t0.c24 AS NUMERIC) END) ORDER BY (((((((t0.c24)OR(vt1.c0)))OR(vt1.c0))))>=((t0.c24 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c24)) THEN ((vt1.c0)LIKE(vt1.c0)) ELSE CAST(t0.c24 AS NUMERIC) END) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((t0.c24)OR(vt1.c0)))OR(vt1.c0))))>=((t0.c24 COLLATE RTRIM)))  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (CASE vt1.c0  WHEN ((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c24)) THEN ((vt1.c0)LIKE(vt1.c0)) ELSE CAST(t0.c24 AS NUMERIC) END) ORDER BY (((((((t0.c24)OR(vt1.c0)))OR(vt1.c0))))>=((t0.c24 COLLATE RTRIM)))  NULLS FIRST;
SELECT ALL * FROM v0, t0, vt1 WHERE ((((CASE WHEN x'cbc32024' THEN t0.c24 END))<=((((((((((v0.c0)OR(t0.c0)))AND(t0.c24)))AND(NULL)))AND(t0.c0)))))) ORDER BY ((((((t0.c24)OR('1300426124')))OR(v0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN x'cbc32024' THEN t0.c24 END))<=((((((((((v0.c0)OR(t0.c0)))AND(t0.c24)))AND(NULL)))AND(t0.c0)))))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY ((((((t0.c24)OR('1300426124')))OR(v0.c0))) NOTNULL) DESC);
SELECT ALL * FROM v0, t0, vt1 WHERE ((((CASE WHEN x'cbc32024' THEN t0.c24 END))<=((((((((((v0.c0)OR(t0.c0)))AND(t0.c24)))AND(NULL)))AND(t0.c0)))))) ORDER BY ((((((t0.c24)OR('1300426124')))OR(v0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN x'cbc32024' THEN t0.c24 END))<=((((((((((v0.c0)OR(t0.c0)))AND(t0.c24)))AND(NULL)))AND(t0.c0)))))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY ((((((t0.c24)OR('1300426124')))OR(v0.c0))) NOTNULL) DESC);
SELECT ALL * FROM v0, t0, vt1 WHERE ((((CASE WHEN x'cbc32024' THEN t0.c24 END))<=((((((((((v0.c0)OR(t0.c0)))AND(t0.c24)))AND(NULL)))AND(t0.c0)))))) ORDER BY ((((((t0.c24)OR('1300426124')))OR(v0.c0))) NOTNULL) DESC;
SELECT ALL * FROM t0, v0 WHERE ((((t0.c24 IN ())) IS FALSE)) ORDER BY CASE v0.c0  WHEN t0.c24 THEN t0.c0 END COLLATE RTRIM, ((((((((((x'768b')&(t0.c0)))AND(t0.c0 COLLATE NOCASE)))AND(((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0)))))OR(((t0.c24) NOT NULL))))OR(CAST(t0.c24 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c24 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, v0 ORDER BY CASE v0.c0  WHEN t0.c24 THEN t0.c0 END COLLATE RTRIM, ((((((((((x'768b')&(t0.c0)))AND(t0.c0 COLLATE NOCASE)))AND(((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0)))))OR(((t0.c24) NOT NULL))))OR(CAST(t0.c24 AS TEXT))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE ((((t0.c24 IN ())) IS FALSE)) ORDER BY CASE v0.c0  WHEN t0.c24 THEN t0.c0 END COLLATE RTRIM, ((((((((((x'768b')&(t0.c0)))AND(t0.c0 COLLATE NOCASE)))AND(((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0)))))OR(((t0.c24) NOT NULL))))OR(CAST(t0.c24 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c24 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, v0 ORDER BY CASE v0.c0  WHEN t0.c24 THEN t0.c0 END COLLATE RTRIM, ((((((((((x'768b')&(t0.c0)))AND(t0.c0 COLLATE NOCASE)))AND(((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0)))))OR(((t0.c24) NOT NULL))))OR(CAST(t0.c24 AS TEXT))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE ((((t0.c24 IN ())) IS FALSE)) ORDER BY CASE v0.c0  WHEN t0.c24 THEN t0.c0 END COLLATE RTRIM, ((((((((((x'768b')&(t0.c0)))AND(t0.c0 COLLATE NOCASE)))AND(((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0)))))OR(((t0.c24) NOT NULL))))OR(CAST(t0.c24 AS TEXT))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)-(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)-(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)-(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)-(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)-(v0.c0))) NOTNULL));
SELECT ALL * FROM vt1 WHERE (TYPEOF(DISTINCT CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (TYPEOF(DISTINCT CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (TYPEOF(DISTINCT CAST(vt1.c0 AS BLOB)));
SELECT ALL * FROM vt1 CROSS JOIN t0 ON ((((v0.c0)<>(vt1.c0)))%(CASE vt1.c0  WHEN t0.c24 THEN vt1.c0 WHEN NULL THEN t0.c24 WHEN vt1.c0 THEN 1331246581 END)) FULL OUTER JOIN v0 ON CHANGES() WHERE (CAST(((vt1.c0) IS TRUE) AS NUMERIC)) ORDER BY highlight(((((((((t0.c24)AND(v0.c0)))AND('')))AND(t0.c24)))OR(vt1.c0)), (v0.c0 IN (t0.c24)), '257904247', NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((v0.c0)!=(vt1.c0)))%(CASE vt1.c0  WHEN t0.c24 THEN vt1.c0 WHEN NULL THEN t0.c24 WHEN vt1.c0 THEN 1331246581 END)) FULL OUTER JOIN v0 ON CHANGES() ORDER BY highlight(((((((((t0.c24)AND(v0.c0)))AND('')))AND(t0.c24)))OR(vt1.c0)), (v0.c0 IN (t0.c24)), '257904247', NULL) DESC);
SELECT ALL * FROM vt1 CROSS JOIN t0 ON ((((v0.c0)<>(vt1.c0)))%(CASE vt1.c0  WHEN t0.c24 THEN vt1.c0 WHEN NULL THEN t0.c24 WHEN vt1.c0 THEN 1331246581 END)) FULL OUTER JOIN v0 ON CHANGES() WHERE (CAST(((vt1.c0) IS TRUE) AS NUMERIC)) ORDER BY highlight(((((((((t0.c24)AND(v0.c0)))AND('')))AND(t0.c24)))OR(vt1.c0)), (v0.c0 IN (t0.c24)), '257904247', NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((v0.c0)!=(vt1.c0)))%(CASE vt1.c0  WHEN t0.c24 THEN vt1.c0 WHEN NULL THEN t0.c24 WHEN vt1.c0 THEN 1331246581 END)) FULL OUTER JOIN v0 ON CHANGES() ORDER BY highlight(((((((((t0.c24)AND(v0.c0)))AND('')))AND(t0.c24)))OR(vt1.c0)), (v0.c0 IN (t0.c24)), '257904247', NULL) DESC);
SELECT ALL * FROM t0 WHERE ((((((('354778041')<(t0.c0)))AND((((t0.c24)) NOT BETWEEN (('0.6085382427815668')) AND ((t0.c24))))))AND(((t0.c24)/(t0.c24))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT (((((((('354778041')<(t0.c0)))AND((((t0.c24)) NOT BETWEEN (('0.6085382427815668')) AND ((t0.c24))))))AND(((t0.c24)/(t0.c24))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT ALL * FROM t0 WHERE ((((((('354778041')<(t0.c0)))AND((((t0.c24)) NOT BETWEEN (('0.6085382427815668')) AND ((t0.c24))))))AND(((t0.c24)/(t0.c24))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT (((((((('354778041')<(t0.c0)))AND((((t0.c24)) NOT BETWEEN (('0.6085382427815668')) AND ((t0.c24))))))AND(((t0.c24)/(t0.c24))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT ALL * FROM t0 WHERE ((((((('354778041')<(t0.c0)))AND((((t0.c24)) NOT BETWEEN (('0.6085382427815668')) AND ((t0.c24))))))AND(((t0.c24)/(t0.c24))))) ORDER BY t0.c0;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON t0.c0 LEFT OUTER JOIN v0 ON CAST((((t0.c0)) BETWEEN ((t0.c24)) AND ((t0.c0))) AS BLOB) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON t0.c0 LEFT OUTER JOIN v0 ON CAST((((t0.c0)) BETWEEN ((t0.c24)) AND ((t0.c0))) AS BLOB));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON t0.c0 LEFT OUTER JOIN v0 ON CAST((((t0.c0)) BETWEEN ((t0.c24)) AND ((t0.c0))) AS BLOB) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON t0.c0 LEFT OUTER JOIN v0 ON CAST((((t0.c0)) BETWEEN ((t0.c24)) AND ((t0.c0))) AS BLOB));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON t0.c0 LEFT OUTER JOIN v0 ON CAST((((t0.c0)) BETWEEN ((t0.c24)) AND ((t0.c0))) AS BLOB) WHERE (NULL);
SELECT ALL * FROM v0, vt1 WHERE (((((1.71497023E9) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((1.71497023E9) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((((1.71497023E9) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((1.71497023E9) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((((1.71497023E9) IS TRUE)) NOTNULL));
SELECT COUNT(*) FROM vt1, t0 WHERE (((NOT ('798659561')) IN (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((NOT ('798659561')) IN (x''))) IS TRUE)  as count FROM vt1, t0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, t0 WHERE (((NOT ('798659561')) IN (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((NOT ('798659561')) IN (x''))) IS TRUE)  as count FROM vt1, t0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, t0 WHERE (((NOT ('798659561')) IN (x'')));
SELECT ALL * FROM v0 CROSS JOIN t0 ON x'5b81' INNER JOIN vt1 ON (((((t0.c0) NOT NULL), t0.c0, CAST(vt1.c0 AS TEXT)))=(((vt1.c0 IN ()), ((vt1.c0) IS FALSE), x'69bb'))) WHERE (CAST(0.9209632441998524 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9209632441998524 AS TEXT)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON x'5b81' INNER JOIN vt1 ON (((((t0.c0) NOT NULL), t0.c0, CAST(vt1.c0 AS TEXT)))=(((vt1.c0 IN ()), ((vt1.c0) IS FALSE), x'69bb'))));
SELECT ALL * FROM v0 CROSS JOIN t0 ON x'5b81' INNER JOIN vt1 ON (((((t0.c0) NOT NULL), t0.c0, CAST(vt1.c0 AS TEXT)))=(((vt1.c0 IN ()), ((vt1.c0) IS FALSE), x'69bb'))) WHERE (CAST(0.9209632441998524 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9209632441998524 AS TEXT)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON x'5b81' INNER JOIN vt1 ON (((((t0.c0) NOT NULL), t0.c0, CAST(vt1.c0 AS TEXT)))=(((vt1.c0 IN ()), ((vt1.c0) IS FALSE), x'69bb'))));
SELECT ALL * FROM v0 CROSS JOIN t0 ON x'5b81' INNER JOIN vt1 ON (((((t0.c0) NOT NULL), t0.c0, CAST(vt1.c0 AS TEXT)))=(((vt1.c0 IN ()), ((vt1.c0) IS FALSE), x'69bb'))) WHERE (CAST(0.9209632441998524 AS TEXT));
SELECT ALL COUNT(*) FROM t0, v0 CROSS JOIN vt1 ON ((((CASE WHEN v0.c0 THEN t0.c0 END)OR(((vt1.c0) NOT NULL))))OR((~ (t0.c24)))) WHERE ((((((t0.c24)AND(NULL)))AND(v0.c0)) IN ())) ORDER BY (((NOT (v0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 ELSE v0.c0 END) AND ((('227198268')=(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c24)AND(NULL)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM t0, v0 CROSS JOIN vt1 ON ((((CASE WHEN v0.c0 THEN t0.c0 END)OR(((vt1.c0) NOT NULL))))OR((~ (t0.c24)))) ORDER BY (((NOT (v0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 ELSE v0.c0 END) AND ((('227198268')=(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, v0 CROSS JOIN vt1 ON ((((CASE WHEN v0.c0 THEN t0.c0 END)OR(((vt1.c0) NOT NULL))))OR((~ (t0.c24)))) WHERE ((((((t0.c24)AND(NULL)))AND(v0.c0)) IN ())) ORDER BY (((NOT (v0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 ELSE v0.c0 END) AND ((('227198268')=(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c24)AND(NULL)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM t0, v0 CROSS JOIN vt1 ON ((((CASE WHEN v0.c0 THEN t0.c0 END)OR(((vt1.c0) NOT NULL))))OR((~ (t0.c24)))) ORDER BY (((NOT (v0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 ELSE v0.c0 END) AND ((('227198268')=(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, v0 CROSS JOIN vt1 ON ((((CASE WHEN v0.c0 THEN t0.c0 END)OR(((vt1.c0) NOT NULL))))OR((~ (t0.c24)))) WHERE ((((((t0.c24)AND(NULL)))AND(v0.c0)) IN ())) ORDER BY (((NOT (v0.c0))) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 ELSE v0.c0 END) AND ((('227198268')=(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NULLIF(DISTINCT vt1.c0, vt1.c0))OR(((vt1.c0) NOTNULL))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(DISTINCT vt1.c0, vt1.c0))OR(((vt1.c0) NOTNULL))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NULLIF(DISTINCT vt1.c0, vt1.c0))OR(((vt1.c0) NOTNULL))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(DISTINCT vt1.c0, vt1.c0))OR(((vt1.c0) NOTNULL))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NULLIF(DISTINCT vt1.c0, vt1.c0))OR(((vt1.c0) NOTNULL))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE t0.c24 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE t0.c24 END) NOTNULL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE t0.c24 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE t0.c24 END) NOTNULL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE t0.c24 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE ((((v0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1, v0, t0);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE ((((v0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1, v0, t0);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE ((((v0.c0 IN ())) IS FALSE));
SELECT COUNT(*) FROM t0 WHERE (MAX(t0.c0 COLLATE BINARY, t0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((MAX(t0.c0 COLLATE BINARY, t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (MAX(t0.c0 COLLATE BINARY, t0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((MAX(t0.c0 COLLATE BINARY, t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (MAX(t0.c0 COLLATE BINARY, t0.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c24) ORDER BY (+ (HEX(DISTINCT v0.c0))) DESC  NULLS LAST, ((((t0.c0)OR(t0.c24)))AND(t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c24) IS TRUE)  as count FROM v0, t0 ORDER BY (+ (HEX(DISTINCT v0.c0))) DESC  NULLS LAST, ((((t0.c0)OR(t0.c24)))AND(t0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c24) ORDER BY (+ (HEX(DISTINCT v0.c0))) DESC  NULLS LAST, ((((t0.c0)OR(t0.c24)))AND(t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c24) IS TRUE)  as count FROM v0, t0 ORDER BY (+ (HEX(DISTINCT v0.c0))) DESC  NULLS LAST, ((((t0.c0)OR(t0.c24)))AND(t0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c24) ORDER BY (+ (HEX(DISTINCT v0.c0))) DESC  NULLS LAST, ((((t0.c0)OR(t0.c24)))AND(t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN (((v0.c0))>=((v0.c0))) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0)<(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN (((v0.c0))>=((v0.c0))) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0)<(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN (((v0.c0))>=((v0.c0))) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0)<(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN (((v0.c0))>=((v0.c0))) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0)<(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN (((v0.c0))>=((v0.c0))) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0)<(v0.c0)) END);
SELECT * FROM vt1, t0 WHERE (((('-|qgId') NOT BETWEEN (t0.c24) AND (t0.c24)) IN ())) ORDER BY ((((vt1.c0)||(t0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0)) AND (t0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('-|qgId') NOT BETWEEN (t0.c24) AND (t0.c24)) IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c0)||(t0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0)) AND (t0.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt1, t0 WHERE (((('-|qgId') NOT BETWEEN (t0.c24) AND (t0.c24)) IN ())) ORDER BY ((((vt1.c0)||(t0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0)) AND (t0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('-|qgId') NOT BETWEEN (t0.c24) AND (t0.c24)) IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c0)||(t0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0)) AND (t0.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt1, t0 WHERE (((('-|qgId') NOT BETWEEN (t0.c24) AND (t0.c24)) IN ())) ORDER BY ((((vt1.c0)||(t0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0)) AND (t0.c0 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN 0X6a9da00c END) BETWEEN (CAST('' AS REAL)) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN 0X6a9da00c END) BETWEEN (CAST('' AS REAL)) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN 0X6a9da00c END) BETWEEN (CAST('' AS REAL)) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN 0X6a9da00c END) BETWEEN (CAST('' AS REAL)) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN 0X6a9da00c END) BETWEEN (CAST('' AS REAL)) AND ((+ (vt1.c0)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((t0.c0)!=(t0.c0)), ((((t0.c24)OR(t0.c24)))OR(t0.c0)), CASE WHEN t0.c0 THEN 0.6182583256510964 END))<((TYPEOF(t0.c0), v0.c0, (((t0.c24))!=((0.5785354697492667)))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)!=(t0.c0)), ((((t0.c24)OR(t0.c24)))OR(t0.c0)), CASE WHEN t0.c0 THEN 0.6182583256510964 END))<((TYPEOF(t0.c0), v0.c0, (((t0.c24))!=((0.5785354697492667))))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((t0.c0)!=(t0.c0)), ((((t0.c24)OR(t0.c24)))OR(t0.c0)), CASE WHEN t0.c0 THEN 0.6182583256510964 END))<((TYPEOF(t0.c0), v0.c0, (((t0.c24))!=((0.5785354697492667)))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)!=(t0.c0)), ((((t0.c24)OR(t0.c24)))OR(t0.c0)), CASE WHEN t0.c0 THEN 0.6182583256510964 END))<((TYPEOF(t0.c0), v0.c0, (((t0.c24))!=((0.5785354697492667))))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((t0.c0)!=(t0.c0)), ((((t0.c24)OR(t0.c24)))OR(t0.c0)), CASE WHEN t0.c0 THEN 0.6182583256510964 END))<((TYPEOF(t0.c0), v0.c0, (((t0.c24))!=((0.5785354697492667)))))));
SELECT COUNT(*) FROM v0, t0 WHERE ((LIKELY(v0.c0) IN (t0.c24))) ORDER BY ((CAST('3HiiB^m9D' AS BLOB))&((((t0.c0))>=(('215003114')))));
SELECT SUM(count) FROM (SELECT (((LIKELY(v0.c0) IN (t0.c24))) IS TRUE)  as count FROM v0, t0 ORDER BY ((CAST('3HiiB^m9D' AS BLOB))&((((t0.c0))>=(('215003114'))))));
SELECT COUNT(*) FROM v0, t0 WHERE ((LIKELY(v0.c0) IN (t0.c24))) ORDER BY ((CAST('3HiiB^m9D' AS BLOB))&((((t0.c0))>=(('215003114')))));
SELECT SUM(count) FROM (SELECT (((LIKELY(v0.c0) IN (t0.c24))) IS TRUE)  as count FROM v0, t0 ORDER BY ((CAST('3HiiB^m9D' AS BLOB))&((((t0.c0))>=(('215003114'))))));
SELECT COUNT(*) FROM v0, t0 WHERE ((LIKELY(v0.c0) IN (t0.c24))) ORDER BY ((CAST('3HiiB^m9D' AS BLOB))&((((t0.c0))>=(('215003114')))));
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (('1457961984') BETWEEN (227198268) AND (((vt1.c0)IS NOT(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (('1457961984') BETWEEN (227198268) AND (((vt1.c0)IS NOT(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (('1457961984') BETWEEN (227198268) AND (((vt1.c0)IS NOT(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (('1457961984') BETWEEN (227198268) AND (((vt1.c0)IS NOT(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (('1457961984') BETWEEN (227198268) AND (((vt1.c0)IS NOT(vt1.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN x'7884' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c0 IN ()) THEN x'7884' END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN x'7884' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c0 IN ()) THEN x'7884' END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN x'7884' END);
SELECT ALL * FROM t0, v0 WHERE ((+ (CAST(t0.c24 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(t0.c24 AS INTEGER)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((+ (CAST(t0.c24 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(t0.c24 AS INTEGER)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((+ (CAST(t0.c24 AS INTEGER))));
SELECT ALL * FROM v0, vt1, t0 WHERE (0.8199945213632878) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8199945213632878) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt1, t0 WHERE (0.8199945213632878) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8199945213632878) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt1, t0 WHERE (0.8199945213632878) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((0.5986573564974998, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ())))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL), NULL)))) ORDER BY CASE WHEN x'' THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)+(vt1.c0)) END ASC  NULLS FIRST, CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN 0.49481444763461657 WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN LAST_INSERT_ROWID() THEN (vt1.c0 IN (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END;
SELECT SUM(count) FROM (SELECT (((((0.5986573564974998, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ())))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL), NULL)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN x'' THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)+(vt1.c0)) END ASC  NULLS FIRST, CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN 0.49481444763461657 WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN LAST_INSERT_ROWID() THEN (vt1.c0 IN (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END);
SELECT ALL * FROM vt1 WHERE ((((0.5986573564974998, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ())))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL), NULL)))) ORDER BY CASE WHEN x'' THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)+(vt1.c0)) END ASC  NULLS FIRST, CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN 0.49481444763461657 WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN LAST_INSERT_ROWID() THEN (vt1.c0 IN (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END;
SELECT SUM(count) FROM (SELECT (((((0.5986573564974998, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ())))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL), NULL)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN x'' THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)+(vt1.c0)) END ASC  NULLS FIRST, CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN 0.49481444763461657 WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN LAST_INSERT_ROWID() THEN (vt1.c0 IN (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END);
SELECT ALL * FROM vt1 WHERE ((((0.5986573564974998, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN ())))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL), NULL)))) ORDER BY CASE WHEN x'' THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0)+(vt1.c0)) END ASC  NULLS FIRST, CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN 0.49481444763461657 WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN LAST_INSERT_ROWID() THEN (vt1.c0 IN (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END;
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))=(((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (((vt1.c0) NOT BETWEEN (0X48e272f4) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))=(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (((vt1.c0) NOT BETWEEN (0X48e272f4) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))=(((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (((vt1.c0) NOT BETWEEN (0X48e272f4) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))=(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (((vt1.c0) NOT BETWEEN (0X48e272f4) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))=(((vt1.c0) NOTNULL)))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (((vt1.c0) NOT BETWEEN (0X48e272f4) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM t0, v0 WHERE (((((((v0.c0)<<(t0.c0)))OR('kF]z.~')))OR((('')>(t0.c24)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)<<(t0.c0)))OR('kF]z.~')))OR((('')>(t0.c24))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((((v0.c0)<<(t0.c0)))OR('kF]z.~')))OR((('')>(t0.c24)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)<<(t0.c0)))OR('kF]z.~')))OR((('')>(t0.c24))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((((v0.c0)<<(t0.c0)))OR('kF]z.~')))OR((('')>(t0.c24)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))>(((vt1.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)&(vt1.c0)))>(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))>(((vt1.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)&(vt1.c0)))>(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))>(((vt1.c0)GLOB(vt1.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)/(x'')))>(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0)AND((- (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(x'')))>(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND((- (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)/(x'')))>(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0)AND((- (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(x'')))>(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND((- (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)/(x'')))>(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0)AND((- (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT * FROM vt1, t0 NATURAL JOIN v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN v0);
SELECT * FROM vt1, t0 NATURAL JOIN v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN v0);
SELECT * FROM vt1, t0 NATURAL JOIN v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((CAST(x'' AS BLOB))AND(COALESCE(t0.c24, t0.c24))))OR(('7T □' IN ()))) WHERE (CASE NULL  WHEN CASE '0.49481444763461657'  WHEN t0.c24 THEN 'iT' WHEN t0.c24 THEN t0.c24 WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END THEN ((vt1.c0)/(vt1.c0)) ELSE ((t0.c0)||(t0.c24)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CASE '0.49481444763461657'  WHEN t0.c24 THEN 'iT' WHEN t0.c24 THEN t0.c24 WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END THEN ((vt1.c0)/(vt1.c0)) ELSE ((t0.c0)||(t0.c24)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((CAST(x'' AS BLOB))AND(COALESCE(t0.c24, t0.c24))))OR(('7T □' IN ()))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((CAST(x'' AS BLOB))AND(COALESCE(t0.c24, t0.c24))))OR(('7T □' IN ()))) WHERE (CASE NULL  WHEN CASE '0.49481444763461657'  WHEN t0.c24 THEN 'iT' WHEN t0.c24 THEN t0.c24 WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END THEN ((vt1.c0)/(vt1.c0)) ELSE ((t0.c0)||(t0.c24)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CASE '0.49481444763461657'  WHEN t0.c24 THEN 'iT' WHEN t0.c24 THEN t0.c24 WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END THEN ((vt1.c0)/(vt1.c0)) ELSE ((t0.c0)||(t0.c24)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((CAST(x'' AS BLOB))AND(COALESCE(t0.c24, t0.c24))))OR(('7T □' IN ()))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((CAST(x'' AS BLOB))AND(COALESCE(t0.c24, t0.c24))))OR(('7T □' IN ()))) WHERE (CASE NULL  WHEN CASE '0.49481444763461657'  WHEN t0.c24 THEN 'iT' WHEN t0.c24 THEN t0.c24 WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END THEN ((vt1.c0)/(vt1.c0)) ELSE ((t0.c0)||(t0.c24)) END);
SELECT * FROM t0, vt1 INDEXED BY i30, v0 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE)) IS TRUE)  as count FROM t0, vt1 INDEXED BY i30, v0);
SELECT * FROM t0, vt1 INDEXED BY i30, v0 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE)) IS TRUE)  as count FROM t0, vt1 INDEXED BY i30, v0);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)==(vt1.c0)) COLLATE NOCASE) ORDER BY ((((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR((~ (vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(load_extension(vt1.c0, vt1.c0))))OR(vt1.c0)))AND(((vt1.c0)*(vt1.c0)))) ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((((vt1.c0)||(vt1.c0))))), ((vt1.c0)>>(CAST(vt1.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)=(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR((~ (vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(load_extension(vt1.c0, vt1.c0))))OR(vt1.c0)))AND(((vt1.c0)*(vt1.c0)))) ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((((vt1.c0)||(vt1.c0))))), ((vt1.c0)>>(CAST(vt1.c0 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)==(vt1.c0)) COLLATE NOCASE) ORDER BY ((((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR((~ (vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(load_extension(vt1.c0, vt1.c0))))OR(vt1.c0)))AND(((vt1.c0)*(vt1.c0)))) ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((((vt1.c0)||(vt1.c0))))), ((vt1.c0)>>(CAST(vt1.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)=(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR((~ (vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(load_extension(vt1.c0, vt1.c0))))OR(vt1.c0)))AND(((vt1.c0)*(vt1.c0)))) ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((((vt1.c0)||(vt1.c0))))), ((vt1.c0)>>(CAST(vt1.c0 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)==(vt1.c0)) COLLATE NOCASE) ORDER BY ((((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))OR((~ (vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(load_extension(vt1.c0, vt1.c0))))OR(vt1.c0)))AND(((vt1.c0)*(vt1.c0)))) ASC  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((((vt1.c0)||(vt1.c0))))), ((vt1.c0)>>(CAST(vt1.c0 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE CAST('1457961984' AS NUMERIC)  WHEN v0.c0 THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) BETWEEN (0Xfffffffff3a28812) AND (v0.c0)) THEN (- (v0.c0)) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN ('7삃') AND (v0.c0)) ELSE (((v0.c0))<((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST('1457961984' AS NUMERIC)  WHEN v0.c0 THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) BETWEEN (0xfffffffff3a28812) AND (v0.c0)) THEN (- (v0.c0)) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN ('7삃') AND (v0.c0)) ELSE (((v0.c0))<((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE CAST('1457961984' AS NUMERIC)  WHEN v0.c0 THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) BETWEEN (0Xfffffffff3a28812) AND (v0.c0)) THEN (- (v0.c0)) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN ('7삃') AND (v0.c0)) ELSE (((v0.c0))<((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST('1457961984' AS NUMERIC)  WHEN v0.c0 THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) BETWEEN (0xfffffffff3a28812) AND (v0.c0)) THEN (- (v0.c0)) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN ('7삃') AND (v0.c0)) ELSE (((v0.c0))<((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE CAST('1457961984' AS NUMERIC)  WHEN v0.c0 THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) BETWEEN (0Xfffffffff3a28812) AND (v0.c0)) THEN (- (v0.c0)) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN ('7삃') AND (v0.c0)) ELSE (((v0.c0))<((v0.c0))) END);
SELECT ALL * FROM vt1 INDEXED BY i30 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0)/(vt1.c0)) THEN (- (vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ABS(vt1.c0) ELSE vt1.c0 END) ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) IS TRUE) ASC, (((NOT (vt1.c0)))*(((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0)/(vt1.c0)) THEN (- (vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ABS(vt1.c0) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1 INDEXED BY i30 ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) IS TRUE) ASC, (((NOT (vt1.c0)))*(((vt1.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1 INDEXED BY i30 WHERE (CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0)/(vt1.c0)) THEN (- (vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ABS(vt1.c0) ELSE vt1.c0 END) ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) IS TRUE) ASC, (((NOT (vt1.c0)))*(((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0)/(vt1.c0)) THEN (- (vt1.c0)) WHEN CAST(vt1.c0 AS REAL) THEN ABS(vt1.c0) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1 INDEXED BY i30 ORDER BY ((DATE(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) IS TRUE) ASC, (((NOT (vt1.c0)))*(((vt1.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (x'');
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((((0X782d240e)) BETWEEN ((t0.c0)) AND ((v0.c0)))) BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt1.c0) NOT NULL))) RIGHT OUTER JOIN v0 ON (((t0.c24)<=(t0.c24)) IN (TRIM(t0.c24), ((((((((vt1.c0)AND(vt1.c0)))AND(t0.c24)))AND(NULL)))OR(t0.c24)))) WHERE ('0.17040582237287316') ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (('0.17040582237287316') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((((0X782d240e)) BETWEEN ((t0.c0)) AND ((v0.c0)))) BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt1.c0) NOT NULL))) RIGHT OUTER JOIN v0 ON (((t0.c24)<=(t0.c24)) IN (TRIM(t0.c24), ((((((((vt1.c0)AND(vt1.c0)))AND(t0.c24)))AND(NULL)))OR(t0.c24)))) ORDER BY t0.c0 ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (((((0X782d240e)) BETWEEN ((t0.c0)) AND ((v0.c0)))) BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt1.c0) NOT NULL))) RIGHT OUTER JOIN v0 ON (((t0.c24)<=(t0.c24)) IN (TRIM(t0.c24), ((((((((vt1.c0)AND(vt1.c0)))AND(t0.c24)))AND(NULL)))OR(t0.c24)))) WHERE ('0.17040582237287316') ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (('0.17040582237287316') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((((0X782d240e)) BETWEEN ((t0.c0)) AND ((v0.c0)))) BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt1.c0) NOT NULL))) RIGHT OUTER JOIN v0 ON (((t0.c24)<=(t0.c24)) IN (TRIM(t0.c24), ((((((((vt1.c0)AND(vt1.c0)))AND(t0.c24)))AND(NULL)))OR(t0.c24)))) ORDER BY t0.c0 ASC);
SELECT ALL * FROM t0 WHERE ('F&%R.' COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('F&%R.' COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('F&%R.' COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('F&%R.' COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('F&%R.' COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) BETWEEN ((vt1.c0 IN ())) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1 INNER JOIN t0 ON CAST('' AS REAL) COLLATE NOCASE COLLATE NOCASE RIGHT OUTER JOIN v0 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) END WHERE (CAST((v0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CAST('' AS REAL) COLLATE NOCASE COLLATE NOCASE RIGHT OUTER JOIN v0 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) END);
SELECT ALL * FROM vt1 INNER JOIN t0 ON CAST('' AS REAL) COLLATE NOCASE COLLATE NOCASE RIGHT OUTER JOIN v0 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) END WHERE (CAST((v0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CAST('' AS REAL) COLLATE NOCASE COLLATE NOCASE RIGHT OUTER JOIN v0 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) END);
SELECT ALL * FROM vt1 INNER JOIN t0 ON CAST('' AS REAL) COLLATE NOCASE COLLATE NOCASE RIGHT OUTER JOIN v0 ON CASE WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) END WHERE (CAST((v0.c0 IN ()) AS REAL));
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE CASE 'kF]z.~'  WHEN v0.c0 THEN v0.c0 WHEN 0.8319539239899217 THEN vt1.c0 WHEN vt1.c0 THEN 'QWvT}F' END  WHEN v0.c0 THEN (((vt1.c0))<((v0.c0))) ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE 'kF]z.~'  WHEN v0.c0 THEN v0.c0 WHEN 0.8319539239899217 THEN vt1.c0 WHEN vt1.c0 THEN 'QWvT}F' END  WHEN v0.c0 THEN (((vt1.c0))<((v0.c0))) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE CASE 'kF]z.~'  WHEN v0.c0 THEN v0.c0 WHEN 0.8319539239899217 THEN vt1.c0 WHEN vt1.c0 THEN 'QWvT}F' END  WHEN v0.c0 THEN (((vt1.c0))<((v0.c0))) ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE 'kF]z.~'  WHEN v0.c0 THEN v0.c0 WHEN 0.8319539239899217 THEN vt1.c0 WHEN vt1.c0 THEN 'QWvT}F' END  WHEN v0.c0 THEN (((vt1.c0))<((v0.c0))) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE CASE 'kF]z.~'  WHEN v0.c0 THEN v0.c0 WHEN 0.8319539239899217 THEN vt1.c0 WHEN vt1.c0 THEN 'QWvT}F' END  WHEN v0.c0 THEN (((vt1.c0))<((v0.c0))) ELSE v0.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (CASE (+ (v0.c0))  WHEN ((t0.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN ((((((((((((NULL)OR(v0.c0)))AND(x'cde3')))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c24)) ELSE 0Xffffffff8071ad1e END) ORDER BY ((((((v0.c0)AND(vt1.c0)))AND(vt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE (+ (v0.c0))  WHEN ((t0.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN ((((((((((((NULL)OR(v0.c0)))AND(x'cde3')))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c24)) ELSE 0Xffffffff8071ad1e END) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY ((((((v0.c0)AND(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (CASE (+ (v0.c0))  WHEN ((t0.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN ((((((((((((NULL)OR(v0.c0)))AND(x'cde3')))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c24)) ELSE 0Xffffffff8071ad1e END) ORDER BY ((((((v0.c0)AND(vt1.c0)))AND(vt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE (+ (v0.c0))  WHEN ((t0.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN ((((((((((((NULL)OR(v0.c0)))AND(x'cde3')))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c24)) ELSE 0Xffffffff8071ad1e END) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY ((((((v0.c0)AND(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (CASE (+ (v0.c0))  WHEN ((t0.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN ((((((((((((NULL)OR(v0.c0)))AND(x'cde3')))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c24)) ELSE 0Xffffffff8071ad1e END) ORDER BY ((((((v0.c0)AND(vt1.c0)))AND(vt1.c0))) NOT NULL);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))<((((vt1.c0)/(vt1.c0)))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<((((vt1.c0)/(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))<((((vt1.c0)/(vt1.c0)))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<((((vt1.c0)/(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0))<((((vt1.c0)/(vt1.c0)))))) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))AND(NULL))))==((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)OR(vt1.c0)))AND(NULL))))==((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))AND(NULL))))==((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)OR(vt1.c0)))AND(NULL))))==((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))AND(NULL))))==((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c0)=(vt1.c0))))) ORDER BY (- (vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c0)=(vt1.c0))))) ORDER BY (- (vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c0)=(vt1.c0))))) ORDER BY (- (vt1.c0)) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((('0' COLLATE RTRIM)<<(CAST(t0.c24 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((('0' COLLATE RTRIM)<<(CAST(t0.c24 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((('0' COLLATE RTRIM)<<(CAST(t0.c24 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((('0' COLLATE RTRIM)<<(CAST(t0.c24 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((('0' COLLATE RTRIM)<<(CAST(t0.c24 AS BLOB))));
SELECT ALL * FROM v0, vt1, t0 WHERE (((NULLIF(DISTINCT vt1.c0, v0.c0))<(SQLITE_COMPILEOPTION_GET(-3.1220445E8))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT vt1.c0, v0.c0))<(SQLITE_COMPILEOPTION_GET(-3.1220445E8)))) IS TRUE)  as count FROM v0, vt1, t0);
SELECT ALL * FROM v0, vt1, t0 WHERE (((NULLIF(DISTINCT vt1.c0, v0.c0))<(SQLITE_COMPILEOPTION_GET(-3.1220445E8))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT vt1.c0, v0.c0))<(SQLITE_COMPILEOPTION_GET(-3.1220445E8)))) IS TRUE)  as count FROM v0, vt1, t0);
SELECT ALL * FROM v0, vt1, t0 WHERE (((NULLIF(DISTINCT vt1.c0, v0.c0))<(SQLITE_COMPILEOPTION_GET(-3.1220445E8))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE (('0.6228256248446676' IN ())) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (TOTAL_CHANGES()) AND (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(1.7976931348623157E308))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((('0.6228256248446676' IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (TOTAL_CHANGES()) AND (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(1.7976931348623157E308))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (('0.6228256248446676' IN ())) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (TOTAL_CHANGES()) AND (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(1.7976931348623157E308))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((('0.6228256248446676' IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (TOTAL_CHANGES()) AND (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(1.7976931348623157E308))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (('0.6228256248446676' IN ())) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (TOTAL_CHANGES()) AND (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(1.7976931348623157E308))))  NULLS LAST;
SELECT ALL * FROM vt1, v0 WHERE ('0.17040582237287316') ORDER BY ((((CAST(v0.c0 AS NUMERIC))OR(('-179018443' IN ()))))OR((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.17040582237287316') IS TRUE)  as count FROM vt1, v0 ORDER BY ((((CAST(v0.c0 AS NUMERIC))OR(('-179018443' IN ()))))OR((v0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt1, v0 WHERE ('0.17040582237287316') ORDER BY ((((CAST(v0.c0 AS NUMERIC))OR(('-179018443' IN ()))))OR((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.17040582237287316') IS TRUE)  as count FROM vt1, v0 ORDER BY ((((CAST(v0.c0 AS NUMERIC))OR(('-179018443' IN ()))))OR((v0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt1, v0 WHERE ('0.17040582237287316') ORDER BY ((((CAST(v0.c0 AS NUMERIC))OR(('-179018443' IN ()))))OR((v0.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1 WHERE ((+ (vt1.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((+ (vt1.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((+ (vt1.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (((JULIANDAY(t0.c0, t0.c24, t0.c24)) BETWEEN ((NOT (t0.c24))) AND (t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(t0.c0, t0.c24, t0.c24)) BETWEEN ((NOT (t0.c24))) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((JULIANDAY(t0.c0, t0.c24, t0.c24)) BETWEEN ((NOT (t0.c24))) AND (t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(t0.c0, t0.c24, t0.c24)) BETWEEN ((NOT (t0.c24))) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((JULIANDAY(t0.c0, t0.c24, t0.c24)) BETWEEN ((NOT (t0.c24))) AND (t0.c0 COLLATE RTRIM)));
SELECT * FROM vt1, v0 WHERE ((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) IN ()));
SELECT COUNT(*) FROM v0, t0 WHERE ((((((~ (v0.c0)))OR(((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c24)))))OR((NOT (t0.c0))))) ORDER BY CAST(((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c0)))OR(((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c24)))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((((~ (v0.c0)))OR(((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c24)))))OR((NOT (t0.c0))))) ORDER BY CAST(((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c0)))OR(((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c24)))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((((~ (v0.c0)))OR(((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c24)))))OR((NOT (t0.c0))))) ORDER BY CAST(((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN v0 ON (((t0.c0) NOT NULL) IN ((NOT ('')), (NOT (t0.c24)))) WHERE (((((((((((t0.c24) ISNULL))OR((vt1.c0 IN (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))OR(((v0.c0) ISNULL))))AND(((NULL) NOT BETWEEN (vt1.c0) AND (t0.c24))))) ORDER BY (t0.c0 IN (v0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c24) ISNULL))OR((vt1.c0 IN (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))OR(((v0.c0) ISNULL))))AND(((NULL) NOT BETWEEN (vt1.c0) AND (t0.c24))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN v0 ON (((t0.c0) NOT NULL) IN ((NOT ('')), (NOT (t0.c24)))) ORDER BY (t0.c0 IN (v0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN v0 ON (((t0.c0) NOT NULL) IN ((NOT ('')), (NOT (t0.c24)))) WHERE (((((((((((t0.c24) ISNULL))OR((vt1.c0 IN (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))OR(((v0.c0) ISNULL))))AND(((NULL) NOT BETWEEN (vt1.c0) AND (t0.c24))))) ORDER BY (t0.c0 IN (v0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c24) ISNULL))OR((vt1.c0 IN (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))OR(((v0.c0) ISNULL))))AND(((NULL) NOT BETWEEN (vt1.c0) AND (t0.c24))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN v0 ON (((t0.c0) NOT NULL) IN ((NOT ('')), (NOT (t0.c24)))) ORDER BY (t0.c0 IN (v0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN v0 ON (((t0.c0) NOT NULL) IN ((NOT ('')), (NOT (t0.c24)))) WHERE (((((((((((t0.c24) ISNULL))OR((vt1.c0 IN (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))))OR(((v0.c0) ISNULL))))AND(((NULL) NOT BETWEEN (vt1.c0) AND (t0.c24))))) ORDER BY (t0.c0 IN (v0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM t0, vt1, v0 WHERE ((- (((v0.c0)IS(t0.c24)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)IS(t0.c24))))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL * FROM t0, vt1, v0 WHERE ((- (((v0.c0)IS(t0.c24)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)IS(t0.c24))))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL * FROM t0, vt1, v0 WHERE ((- (((v0.c0)IS(t0.c24)))));
SELECT * FROM t0 FULL OUTER JOIN v0 ON CASE v0.c0  WHEN t0.c24 THEN v0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END COLLATE RTRIM INNER JOIN vt1 ON (((((t0.c24)/(v0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END, v0.c0))<((vt1.c0 COLLATE NOCASE, CAST(t0.c0 AS REAL), ((vt1.c0) IS FALSE)))) WHERE (CAST(0.9404654623902222 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9404654623902222 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CASE v0.c0  WHEN t0.c24 THEN v0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END COLLATE RTRIM INNER JOIN vt1 ON (((((t0.c24)/(v0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END, v0.c0))<((vt1.c0 COLLATE NOCASE, CAST(t0.c0 AS REAL), ((vt1.c0) IS FALSE)))));
SELECT * FROM t0 FULL OUTER JOIN v0 ON CASE v0.c0  WHEN t0.c24 THEN v0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END COLLATE RTRIM INNER JOIN vt1 ON (((((t0.c24)/(v0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END, v0.c0))<((vt1.c0 COLLATE NOCASE, CAST(t0.c0 AS REAL), ((vt1.c0) IS FALSE)))) WHERE (CAST(0.9404654623902222 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9404654623902222 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CASE v0.c0  WHEN t0.c24 THEN v0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END COLLATE RTRIM INNER JOIN vt1 ON (((((t0.c24)/(v0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END, v0.c0))<((vt1.c0 COLLATE NOCASE, CAST(t0.c0 AS REAL), ((vt1.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE (((NULLIF(v0.c0, NULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(v0.c0, NULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE (((NULLIF(v0.c0, NULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(v0.c0, NULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE (((NULLIF(v0.c0, NULL)) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND ((NOT (vt1.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((CASE WHEN 0.46087317110402004 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN t0.c0 THEN t0.c24 END)>>(((t0.c24)<>(t0.c24)))) WHERE (CASE ((t0.c0)<>(0.39556649610167827))  WHEN NULL THEN CAST(v0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)!=(0.39556649610167827))  WHEN NULL THEN CAST(v0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((CASE WHEN 0.46087317110402004 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN t0.c0 THEN t0.c24 END)>>(((t0.c24)!=(t0.c24)))));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((CASE WHEN 0.46087317110402004 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN t0.c0 THEN t0.c24 END)>>(((t0.c24)<>(t0.c24)))) WHERE (CASE ((t0.c0)<>(0.39556649610167827))  WHEN NULL THEN CAST(v0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)!=(0.39556649610167827))  WHEN NULL THEN CAST(v0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((CASE WHEN 0.46087317110402004 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN t0.c0 THEN t0.c24 END)>>(((t0.c24)!=(t0.c24)))));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((CASE WHEN 0.46087317110402004 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN t0.c0 THEN t0.c24 END)>>(((t0.c24)<>(t0.c24)))) WHERE (CASE ((t0.c0)<>(0.39556649610167827))  WHEN NULL THEN CAST(v0.c0 AS INTEGER) END);
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (TYPEOF((vt1.c0 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((vt1.c0 IN (t0.c0)))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (TYPEOF((vt1.c0 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((vt1.c0 IN (t0.c0)))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (TYPEOF((vt1.c0 IN (t0.c0))));
SELECT ALL * FROM v0, t0, vt1 WHERE ((((((t0.c0)>(t0.c24))))<=((CASE t0.c24  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) ORDER BY LIKELIHOOD(CASE vt1.c0  WHEN v0.c0 THEN NULL ELSE vt1.c0 END, 0.278645832796222) DESC, ((UNLIKELY(DISTINCT t0.c24))||(CASE WHEN t0.c24 THEN v0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)>(t0.c24))))<=((CASE t0.c24  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY LIKELIHOOD(CASE vt1.c0  WHEN v0.c0 THEN NULL ELSE vt1.c0 END, 0.278645832796222) DESC, ((UNLIKELY(DISTINCT t0.c24))||(CASE WHEN t0.c24 THEN v0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM v0, t0, vt1 WHERE ((((((t0.c0)>(t0.c24))))<=((CASE t0.c24  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) ORDER BY LIKELIHOOD(CASE vt1.c0  WHEN v0.c0 THEN NULL ELSE vt1.c0 END, 0.278645832796222) DESC, ((UNLIKELY(DISTINCT t0.c24))||(CASE WHEN t0.c24 THEN v0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)>(t0.c24))))<=((CASE t0.c24  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY LIKELIHOOD(CASE vt1.c0  WHEN v0.c0 THEN NULL ELSE vt1.c0 END, 0.278645832796222) DESC, ((UNLIKELY(DISTINCT t0.c24))||(CASE WHEN t0.c24 THEN v0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM v0, t0, vt1 WHERE ((((((t0.c0)>(t0.c24))))<=((CASE t0.c24  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) ORDER BY LIKELIHOOD(CASE vt1.c0  WHEN v0.c0 THEN NULL ELSE vt1.c0 END, 0.278645832796222) DESC, ((UNLIKELY(DISTINCT t0.c24))||(CASE WHEN t0.c24 THEN v0.c0 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((v0.c0)>=((+ (vt1.c0)))) LEFT OUTER JOIN v0 ON ((((t0.c24) NOT BETWEEN (vt1.c0) AND (t0.c24)))GLOB(t0.c24 COLLATE BINARY)) WHERE (((t0.c24) IS FALSE)) ORDER BY (~ (((vt1.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c24) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((v0.c0)>=((+ (vt1.c0)))) LEFT OUTER JOIN v0 ON ((((t0.c24) NOT BETWEEN (vt1.c0) AND (t0.c24)))GLOB(t0.c24 COLLATE BINARY)) ORDER BY (~ (((vt1.c0) NOT NULL)))  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((v0.c0)>=((+ (vt1.c0)))) LEFT OUTER JOIN v0 ON ((((t0.c24) NOT BETWEEN (vt1.c0) AND (t0.c24)))GLOB(t0.c24 COLLATE BINARY)) WHERE (((t0.c24) IS FALSE)) ORDER BY (~ (((vt1.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c24) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((v0.c0)>=((+ (vt1.c0)))) LEFT OUTER JOIN v0 ON ((((t0.c24) NOT BETWEEN (vt1.c0) AND (t0.c24)))GLOB(t0.c24 COLLATE BINARY)) ORDER BY (~ (((vt1.c0) NOT NULL)))  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((v0.c0)>=((+ (vt1.c0)))) LEFT OUTER JOIN v0 ON ((((t0.c24) NOT BETWEEN (vt1.c0) AND (t0.c24)))GLOB(t0.c24 COLLATE BINARY)) WHERE (((t0.c24) IS FALSE)) ORDER BY (~ (((vt1.c0) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE ((+ ((((t0.c24, t0.c24, t0.c0))==((t0.c24, t0.c24, t0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((t0.c24, t0.c24, t0.c0))=((t0.c24, t0.c24, t0.c0)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((+ ((((t0.c24, t0.c24, t0.c0))==((t0.c24, t0.c24, t0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((t0.c24, t0.c24, t0.c0))=((t0.c24, t0.c24, t0.c0)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((+ ((((t0.c24, t0.c24, t0.c0))==((t0.c24, t0.c24, t0.c0))))));
SELECT * FROM t0, vt1 LEFT OUTER JOIN v0 ON (- ((vt1.c0 IN ()))) WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN (('1451616536') NOT BETWEEN (vt1.c0) AND (t0.c0)) ELSE (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN (('1451616536') NOT BETWEEN (vt1.c0) AND (t0.c0)) ELSE (~ (vt1.c0)) END) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN v0 ON (- ((vt1.c0 IN ()))));
SELECT * FROM t0, vt1 LEFT OUTER JOIN v0 ON (- ((vt1.c0 IN ()))) WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN (('1451616536') NOT BETWEEN (vt1.c0) AND (t0.c0)) ELSE (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN (('1451616536') NOT BETWEEN (vt1.c0) AND (t0.c0)) ELSE (~ (vt1.c0)) END) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN v0 ON (- ((vt1.c0 IN ()))));
SELECT * FROM t0, vt1 LEFT OUTER JOIN v0 ON (- ((vt1.c0 IN ()))) WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN (('1451616536') NOT BETWEEN (vt1.c0) AND (t0.c0)) ELSE (~ (vt1.c0)) END);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON v0.c0 WHERE ('-284269130');
SELECT SUM(count) FROM (SELECT ALL (('-284269130') IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON v0.c0);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON v0.c0 WHERE ('-284269130');
SELECT SUM(count) FROM (SELECT ALL (('-284269130') IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON v0.c0);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON v0.c0 WHERE ('-284269130');
SELECT COUNT(*) FROM vt1, t0, v0 WHERE ('0.9154966266730168') ORDER BY (((t0.c0)) BETWEEN (((('0.996789724749393')<(t0.c24)))) AND (((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (('0.9154966266730168') IS TRUE)  as count FROM vt1, t0, v0 ORDER BY (((t0.c0)) BETWEEN (((('0.996789724749393')<(t0.c24)))) AND (((v0.c0 IN ())))));
SELECT COUNT(*) FROM vt1, t0, v0 WHERE ('0.9154966266730168') ORDER BY (((t0.c0)) BETWEEN (((('0.996789724749393')<(t0.c24)))) AND (((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (('0.9154966266730168') IS TRUE)  as count FROM vt1, t0, v0 ORDER BY (((t0.c0)) BETWEEN (((('0.996789724749393')<(t0.c24)))) AND (((v0.c0 IN ())))));
SELECT COUNT(*) FROM vt1, t0, v0 WHERE ('0.9154966266730168') ORDER BY (((t0.c0)) BETWEEN (((('0.996789724749393')<(t0.c24)))) AND (((v0.c0 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (TRIM((~ (vt1.c0)))) ORDER BY vt1.c0, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((PRINTF(vt1.c0), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c0)) AND (('-255247307', '-711211957', ((0.6409131343845986) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((~ (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((PRINTF(vt1.c0), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c0)) AND (('-255247307', '-711211957', ((0.6409131343845986) NOT NULL)))));
SELECT COUNT(*) FROM vt1 WHERE (TRIM((~ (vt1.c0)))) ORDER BY vt1.c0, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((PRINTF(vt1.c0), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c0)) AND (('-255247307', '-711211957', ((0.6409131343845986) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((~ (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((PRINTF(vt1.c0), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c0)) AND (('-255247307', '-711211957', ((0.6409131343845986) NOT NULL)))));
SELECT COUNT(*) FROM vt1 WHERE (TRIM((~ (vt1.c0)))) ORDER BY vt1.c0, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((PRINTF(vt1.c0), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), vt1.c0)) AND (('-255247307', '-711211957', ((0.6409131343845986) NOT NULL))));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c24 IN ()))*(((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(0xffffffffaf96bfb6)))AND(t0.c0)))) RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE ((((((t0.c24))>=((t0.c0))))/((- (v0.c0))))) ORDER BY ((t0.c24) NOTNULL) COLLATE RTRIM  NULLS LAST, UPPER((((t0.c24))!=((t0.c24)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c24))>=((t0.c0))))/((- (v0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (((t0.c24 IN ()))*(((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(0Xffffffffaf96bfb6)))AND(t0.c0)))) RIGHT OUTER JOIN vt1 ON vt1.c0 ORDER BY ((t0.c24) NOTNULL) COLLATE RTRIM  NULLS LAST, UPPER((((t0.c24))!=((t0.c24)))) ASC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c24 IN ()))*(((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(0xffffffffaf96bfb6)))AND(t0.c0)))) RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE ((((((t0.c24))>=((t0.c0))))/((- (v0.c0))))) ORDER BY ((t0.c24) NOTNULL) COLLATE RTRIM  NULLS LAST, UPPER((((t0.c24))!=((t0.c24)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c24))>=((t0.c0))))/((- (v0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (((t0.c24 IN ()))*(((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(0Xffffffffaf96bfb6)))AND(t0.c0)))) RIGHT OUTER JOIN vt1 ON vt1.c0 ORDER BY ((t0.c24) NOTNULL) COLLATE RTRIM  NULLS LAST, UPPER((((t0.c24))!=((t0.c24)))) ASC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON (((t0.c24 IN ()))*(((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(0xffffffffaf96bfb6)))AND(t0.c0)))) RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE ((((((t0.c24))>=((t0.c0))))/((- (v0.c0))))) ORDER BY ((t0.c24) NOTNULL) COLLATE RTRIM  NULLS LAST, UPPER((((t0.c24))!=((t0.c24)))) ASC  NULLS FIRST;
SELECT * FROM vt1, v0 NATURAL JOIN t0 WHERE (((IFNULL(DISTINCT v0.c0, t0.c24))/(((t0.c24) BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN (0.024136217564360463) AND ((((t0.c24, NULL, vt1.c0, vt1.c0, vt1.c0))<((t0.c0, t0.c24, vt1.c0, t0.c24, v0.c0))))) ASC, (NOT ('201086203')) ASC, 0Xffffffffdf2f7d0a  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT v0.c0, t0.c24))/(((t0.c24) BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt1, v0 NATURAL JOIN t0 ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN (0.024136217564360463) AND ((((t0.c24, NULL, vt1.c0, vt1.c0, vt1.c0))<((t0.c0, t0.c24, vt1.c0, t0.c24, v0.c0))))) ASC, (NOT ('201086203')) ASC, 0Xffffffffdf2f7d0a  NULLS FIRST);
SELECT * FROM vt1, v0 NATURAL JOIN t0 WHERE (((IFNULL(DISTINCT v0.c0, t0.c24))/(((t0.c24) BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN (0.024136217564360463) AND ((((t0.c24, NULL, vt1.c0, vt1.c0, vt1.c0))<((t0.c0, t0.c24, vt1.c0, t0.c24, v0.c0))))) ASC, (NOT ('201086203')) ASC, 0Xffffffffdf2f7d0a  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT v0.c0, t0.c24))/(((t0.c24) BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt1, v0 NATURAL JOIN t0 ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN (0.024136217564360463) AND ((((t0.c24, NULL, vt1.c0, vt1.c0, vt1.c0))<((t0.c0, t0.c24, vt1.c0, t0.c24, v0.c0))))) ASC, (NOT ('201086203')) ASC, 0Xffffffffdf2f7d0a  NULLS FIRST);
SELECT * FROM vt1, v0 NATURAL JOIN t0 WHERE (((IFNULL(DISTINCT v0.c0, t0.c24))/(((t0.c24) BETWEEN (vt1.c0) AND (t0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN (0.024136217564360463) AND ((((t0.c24, NULL, vt1.c0, vt1.c0, vt1.c0))<((t0.c0, t0.c24, vt1.c0, t0.c24, v0.c0))))) ASC, (NOT ('201086203')) ASC, 0Xffffffffdf2f7d0a  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t0, vt1, v0);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t0, vt1, v0);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL));
SELECT COUNT(*) FROM t0 WHERE (128111495);
SELECT SUM(count) FROM (SELECT ((128111495) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (128111495);
SELECT SUM(count) FROM (SELECT ((128111495) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (128111495);
SELECT * FROM vt1, v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) ORDER BY (((v0.c0)OR(vt1.c0)) IN (((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((v0.c0)OR(vt1.c0)) IN (((vt1.c0) NOT NULL))));
SELECT * FROM vt1, v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) ORDER BY (((v0.c0)OR(vt1.c0)) IN (((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((v0.c0)OR(vt1.c0)) IN (((vt1.c0) NOT NULL))));
SELECT * FROM vt1, v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) ORDER BY (((v0.c0)OR(vt1.c0)) IN (((vt1.c0) NOT NULL)));
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (CASE ((v0.c0)||(NULL))  WHEN (v0.c0 IN ()) THEN t0.c24 ELSE v0.c0 END) ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)||(NULL))  WHEN (v0.c0 IN ()) THEN t0.c24 ELSE v0.c0 END) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))))));
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (CASE ((v0.c0)||(NULL))  WHEN (v0.c0 IN ()) THEN t0.c24 ELSE v0.c0 END) ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)||(NULL))  WHEN (v0.c0 IN ()) THEN t0.c24 ELSE v0.c0 END) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))))));
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (CASE ((v0.c0)||(NULL))  WHEN (v0.c0 IN ()) THEN t0.c24 ELSE v0.c0 END) ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0)))));
SELECT ALL * FROM t0, v0 WHERE ((((+ (t0.c24))) BETWEEN (v0.c0) AND (((t0.c0) NOTNULL)))) ORDER BY (((((((t0.c24)OR(t0.c0)))AND(t0.c0)), (('1868044521')GLOB(t0.c0)), CAST(v0.c0 AS NUMERIC)))<>((json_array(t0.c24, v0.c0, v0.c0, t0.c24), ABS(t0.c0), t0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c24))) BETWEEN (v0.c0) AND (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((((((t0.c24)OR(t0.c0)))AND(t0.c0)), (('1868044521')GLOB(t0.c0)), CAST(v0.c0 AS NUMERIC)))<>((json_array(t0.c24, v0.c0, v0.c0, t0.c24), ABS(t0.c0), t0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE ((((+ (t0.c24))) BETWEEN (v0.c0) AND (((t0.c0) NOTNULL)))) ORDER BY (((((((t0.c24)OR(t0.c0)))AND(t0.c0)), (('1868044521')GLOB(t0.c0)), CAST(v0.c0 AS NUMERIC)))<>((json_array(t0.c24, v0.c0, v0.c0, t0.c24), ABS(t0.c0), t0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c24))) BETWEEN (v0.c0) AND (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((((((t0.c24)OR(t0.c0)))AND(t0.c0)), (('1868044521')GLOB(t0.c0)), CAST(v0.c0 AS NUMERIC)))<>((json_array(t0.c24, v0.c0, v0.c0, t0.c24), ABS(t0.c0), t0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c24 THEN t0.c0 END)OR(t0.c24)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c24 ELSE t0.c0 END))) ORDER BY ((((t0.c0) BETWEEN (t0.c24) AND (t0.c24))) NOT NULL) DESC  NULLS FIRST, ((NOT (t0.c0)) IN (((t0.c24) NOT NULL), 'r)~I'));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c24 THEN t0.c0 END)OR(t0.c24)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c24 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) BETWEEN (t0.c24) AND (t0.c24))) NOT NULL) DESC  NULLS FIRST, ((NOT (t0.c0)) IN (((t0.c24) NOT NULL), 'r)~I')));
SELECT ALL * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c24 THEN t0.c0 END)OR(t0.c24)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c24 ELSE t0.c0 END))) ORDER BY ((((t0.c0) BETWEEN (t0.c24) AND (t0.c24))) NOT NULL) DESC  NULLS FIRST, ((NOT (t0.c0)) IN (((t0.c24) NOT NULL), 'r)~I'));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c24 THEN t0.c0 END)OR(t0.c24)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c24 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) BETWEEN (t0.c24) AND (t0.c24))) NOT NULL) DESC  NULLS FIRST, ((NOT (t0.c0)) IN (((t0.c24) NOT NULL), 'r)~I')));
SELECT ALL * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c24 THEN t0.c0 END)OR(t0.c24)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c24 ELSE t0.c0 END))) ORDER BY ((((t0.c0) BETWEEN (t0.c24) AND (t0.c24))) NOT NULL) DESC  NULLS FIRST, ((NOT (t0.c0)) IN (((t0.c24) NOT NULL), 'r)~I'));
SELECT ALL * FROM vt1, v0 WHERE (IFNULL(DISTINCT ((vt1.c0)<(v0.c0)), TRIM(vt1.c0))) ORDER BY ((((v0.c0)GLOB(vt1.c0))) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (0.981766246942471));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt1.c0)<(v0.c0)), TRIM(vt1.c0))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((v0.c0)GLOB(vt1.c0))) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (0.981766246942471)));
SELECT ALL * FROM vt1, v0 WHERE (IFNULL(DISTINCT ((vt1.c0)<(v0.c0)), TRIM(vt1.c0))) ORDER BY ((((v0.c0)GLOB(vt1.c0))) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (0.981766246942471));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt1.c0)<(v0.c0)), TRIM(vt1.c0))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((v0.c0)GLOB(vt1.c0))) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (0.981766246942471)));
SELECT ALL * FROM vt1, v0 WHERE (IFNULL(DISTINCT ((vt1.c0)<(v0.c0)), TRIM(vt1.c0))) ORDER BY ((((v0.c0)GLOB(vt1.c0))) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (0.981766246942471));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((((((v0.c0)OR(v0.c0)))OR(t0.c24)))%(((t0.c24) NOTNULL))) FULL OUTER JOIN vt1 ON (((((t0.c24))<=((vt1.c0))))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c24)))) WHERE (x'') ORDER BY (((((((((NOT (t0.c0)))AND(((v0.c0) NOTNULL))))OR((NOT (t0.c0)))))AND(((v0.c0)+(t0.c24)))))AND((vt1.c0 IN ()))) DESC  NULLS LAST, (((((((((((((((NULL)OR(0.49481444763461657)))OR(v0.c0)))AND(v0.c0)))AND(t0.c24)))OR(t0.c24)))OR(v0.c0))))<((TRIM(v0.c0, t0.c24)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((((((v0.c0)OR(v0.c0)))OR(t0.c24)))%(((t0.c24) NOTNULL))) FULL OUTER JOIN vt1 ON (((((t0.c24))<=((vt1.c0))))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c24)))) ORDER BY (((((((((NOT (t0.c0)))AND(((v0.c0) NOTNULL))))OR((NOT (t0.c0)))))AND(((v0.c0)+(t0.c24)))))AND((vt1.c0 IN ()))) DESC  NULLS LAST, (((((((((((((((NULL)OR(0.49481444763461657)))OR(v0.c0)))AND(v0.c0)))AND(t0.c24)))OR(t0.c24)))OR(v0.c0))))<((TRIM(v0.c0, t0.c24)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((((((v0.c0)OR(v0.c0)))OR(t0.c24)))%(((t0.c24) NOTNULL))) FULL OUTER JOIN vt1 ON (((((t0.c24))<=((vt1.c0))))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c24)))) WHERE (x'') ORDER BY (((((((((NOT (t0.c0)))AND(((v0.c0) NOTNULL))))OR((NOT (t0.c0)))))AND(((v0.c0)+(t0.c24)))))AND((vt1.c0 IN ()))) DESC  NULLS LAST, (((((((((((((((NULL)OR(0.49481444763461657)))OR(v0.c0)))AND(v0.c0)))AND(t0.c24)))OR(t0.c24)))OR(v0.c0))))<((TRIM(v0.c0, t0.c24)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((((((v0.c0)OR(v0.c0)))OR(t0.c24)))%(((t0.c24) NOTNULL))) FULL OUTER JOIN vt1 ON (((((t0.c24))<=((vt1.c0))))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c24)))) ORDER BY (((((((((NOT (t0.c0)))AND(((v0.c0) NOTNULL))))OR((NOT (t0.c0)))))AND(((v0.c0)+(t0.c24)))))AND((vt1.c0 IN ()))) DESC  NULLS LAST, (((((((((((((((NULL)OR(0.49481444763461657)))OR(v0.c0)))AND(v0.c0)))AND(t0.c24)))OR(t0.c24)))OR(v0.c0))))<((TRIM(v0.c0, t0.c24)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOT NULL))AND((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT NULL))AND((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOT NULL))AND((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT NULL))AND((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOT NULL))AND((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((((vt1.c0) BETWEEN (0.44804041667660477) AND (vt1.c0))) NOT BETWEEN (LOWER(t0.c24)) AND ((((t0.c0)) BETWEEN ((x'd474')) AND ((vt1.c0))))) WHERE (LOWER(DISTINCT t0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT t0.c0)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((vt1.c0) BETWEEN (0.44804041667660477) AND (vt1.c0))) NOT BETWEEN (LOWER(t0.c24)) AND ((((t0.c0)) BETWEEN ((x'd474')) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((((vt1.c0) BETWEEN (0.44804041667660477) AND (vt1.c0))) NOT BETWEEN (LOWER(t0.c24)) AND ((((t0.c0)) BETWEEN ((x'd474')) AND ((vt1.c0))))) WHERE (LOWER(DISTINCT t0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT t0.c0)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((vt1.c0) BETWEEN (0.44804041667660477) AND (vt1.c0))) NOT BETWEEN (LOWER(t0.c24)) AND ((((t0.c0)) BETWEEN ((x'd474')) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t0 ON ((((vt1.c0) BETWEEN (0.44804041667660477) AND (vt1.c0))) NOT BETWEEN (LOWER(t0.c24)) AND ((((t0.c0)) BETWEEN ((x'd474')) AND ((vt1.c0))))) WHERE (LOWER(DISTINCT t0.c0));
SELECT * FROM t0 WHERE (((t0.c24)/('798659561'))) ORDER BY ((CASE t0.c24  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c24)/('798659561'))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c24  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE)  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c24)/('798659561'))) ORDER BY ((CASE t0.c24  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c24)/('798659561'))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c24  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE)  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c24)/('798659561'))) ORDER BY ((CASE t0.c24  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((vt1.c0 IN ())))) ORDER BY CAST(((v0.c0)<<(vt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((v0.c0)<<(vt1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((vt1.c0 IN ())))) ORDER BY CAST(((v0.c0)<<(vt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((v0.c0)<<(vt1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((vt1.c0 IN ())))) ORDER BY CAST(((v0.c0)<<(vt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (t0.c24))) NOT BETWEEN ('utc' COLLATE BINARY) AND (((vt1.c0) ISNULL))) CROSS JOIN t0 ON ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c24))) NOTNULL) WHERE (((((CASE WHEN t0.c24 THEN vt1.c0 END)OR(((t0.c0) NOT NULL))))OR(0.9413831268615266))) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, '0.19103687379147027' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c24 THEN vt1.c0 END)OR(((t0.c0) NOT NULL))))OR(0.9413831268615266))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (t0.c24))) NOT BETWEEN ('utc' COLLATE BINARY) AND (((vt1.c0) ISNULL))) CROSS JOIN t0 ON ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c24))) NOTNULL) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, '0.19103687379147027' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (t0.c24))) NOT BETWEEN ('utc' COLLATE BINARY) AND (((vt1.c0) ISNULL))) CROSS JOIN t0 ON ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c24))) NOTNULL) WHERE (((((CASE WHEN t0.c24 THEN vt1.c0 END)OR(((t0.c0) NOT NULL))))OR(0.9413831268615266))) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, '0.19103687379147027' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c24 THEN vt1.c0 END)OR(((t0.c0) NOT NULL))))OR(0.9413831268615266))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (t0.c24))) NOT BETWEEN ('utc' COLLATE BINARY) AND (((vt1.c0) ISNULL))) CROSS JOIN t0 ON ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c24))) NOTNULL) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, '0.19103687379147027' ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((((t0.c24)AND(t0.c24)))AND(t0.c0))) AND (CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((((t0.c24)AND(t0.c24)))AND(t0.c0))) AND (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((((t0.c24)AND(t0.c24)))AND(t0.c0))) AND (CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((((t0.c24)AND(t0.c24)))AND(t0.c0))) AND (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((((t0.c24)AND(t0.c24)))AND(t0.c0))) AND (CAST(t0.c0 AS REAL))));
SELECT COUNT(*) FROM v0, t0 WHERE ((((NOT (x'')))>(UPPER(DISTINCT t0.c24)))) ORDER BY CAST(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c24 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x'')))>(UPPER(DISTINCT t0.c24)))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c24 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((NOT (x'')))>(UPPER(DISTINCT t0.c24)))) ORDER BY CAST(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c24 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x'')))>(UPPER(DISTINCT t0.c24)))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c24 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((NOT (x'')))>(UPPER(DISTINCT t0.c24)))) ORDER BY CAST(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c24 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN v0.c0 THEN t0.c24 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE BINARY))>((((((v0.c0)AND(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE BINARY))>((((((v0.c0)AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE BINARY))>((((((v0.c0)AND(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE BINARY))>((((((v0.c0)AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE BINARY))>((((((v0.c0)AND(v0.c0)))AND(v0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (((((vt1.c0) NOT NULL))||((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL))||((~ (t0.c0))))) IS TRUE)  as count FROM v0, vt1, t0);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (((((vt1.c0) NOT NULL))||((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL))||((~ (t0.c0))))) IS TRUE)  as count FROM v0, vt1, t0);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE (((((vt1.c0) NOT NULL))||((~ (t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY t0.c0  NULLS FIRST;
SELECT * FROM t0 FULL OUTER JOIN v0 ON t0.c0 INNER JOIN vt1 ON (((~ (t0.c24)))AND(v0.c0)) WHERE ((((vt1.c0)) BETWEEN ((CAST(t0.c24 AS BLOB))) AND ((((t0.c24) NOT BETWEEN (t0.c24) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((CAST(t0.c24 AS BLOB))) AND ((((t0.c24) NOT BETWEEN (t0.c24) AND (vt1.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON t0.c0 INNER JOIN vt1 ON (((~ (t0.c24)))AND(v0.c0)));
SELECT * FROM t0 FULL OUTER JOIN v0 ON t0.c0 INNER JOIN vt1 ON (((~ (t0.c24)))AND(v0.c0)) WHERE ((((vt1.c0)) BETWEEN ((CAST(t0.c24 AS BLOB))) AND ((((t0.c24) NOT BETWEEN (t0.c24) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((CAST(t0.c24 AS BLOB))) AND ((((t0.c24) NOT BETWEEN (t0.c24) AND (vt1.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON t0.c0 INNER JOIN vt1 ON (((~ (t0.c24)))AND(v0.c0)));
SELECT * FROM t0 FULL OUTER JOIN v0 ON t0.c0 INNER JOIN vt1 ON (((~ (t0.c24)))AND(v0.c0)) WHERE ((((vt1.c0)) BETWEEN ((CAST(t0.c24 AS BLOB))) AND ((((t0.c24) NOT BETWEEN (t0.c24) AND (vt1.c0))))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CASE ((((((((vt1.c0)OR(t0.c24)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0))  WHEN CAST(t0.c24 AS INTEGER) THEN x'' WHEN vt1.c0 COLLATE RTRIM THEN ((t0.c24)==(NULL)) WHEN ((vt1.c0)<(t0.c0)) THEN (((t0.c24))<((vt1.c0))) ELSE vt1.c0 END WHERE (((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c0 END) IS TRUE)) ORDER BY ((((t0.c24)AND(vt1.c0)))<=((((vt1.c0))=((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CASE ((((((((vt1.c0)OR(t0.c24)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0))  WHEN CAST(t0.c24 AS INTEGER) THEN x'' WHEN vt1.c0 COLLATE RTRIM THEN ((t0.c24)==(NULL)) WHEN ((vt1.c0)<(t0.c0)) THEN (((t0.c24))<((vt1.c0))) ELSE vt1.c0 END ORDER BY ((((t0.c24)AND(vt1.c0)))<=((((vt1.c0))==((vt1.c0))))) DESC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CASE ((((((((vt1.c0)OR(t0.c24)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0))  WHEN CAST(t0.c24 AS INTEGER) THEN x'' WHEN vt1.c0 COLLATE RTRIM THEN ((t0.c24)==(NULL)) WHEN ((vt1.c0)<(t0.c0)) THEN (((t0.c24))<((vt1.c0))) ELSE vt1.c0 END WHERE (((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c0 END) IS TRUE)) ORDER BY ((((t0.c24)AND(vt1.c0)))<=((((vt1.c0))=((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CASE ((((((((vt1.c0)OR(t0.c24)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0))  WHEN CAST(t0.c24 AS INTEGER) THEN x'' WHEN vt1.c0 COLLATE RTRIM THEN ((t0.c24)==(NULL)) WHEN ((vt1.c0)<(t0.c0)) THEN (((t0.c24))<((vt1.c0))) ELSE vt1.c0 END ORDER BY ((((t0.c24)AND(vt1.c0)))<=((((vt1.c0))==((vt1.c0))))) DESC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CASE ((((((((vt1.c0)OR(t0.c24)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0))  WHEN CAST(t0.c24 AS INTEGER) THEN x'' WHEN vt1.c0 COLLATE RTRIM THEN ((t0.c24)==(NULL)) WHEN ((vt1.c0)<(t0.c0)) THEN (((t0.c24))<((vt1.c0))) ELSE vt1.c0 END WHERE (((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE t0.c0 END) IS TRUE)) ORDER BY ((((t0.c24)AND(vt1.c0)))<=((((vt1.c0))=((vt1.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c24)>=(((t0.c0) IS TRUE))) WHERE ((((NULL IN ())) NOT BETWEEN (((((t0.c0)OR(x'')))AND(t0.c0))) AND (((vt1.c0) NOT BETWEEN (t0.c24) AND (t0.c24))))) ORDER BY ((CASE t0.c24  WHEN vt1.c0 THEN vt1.c0 END)*(x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOT BETWEEN (((((t0.c0)OR(x'')))AND(t0.c0))) AND (((vt1.c0) NOT BETWEEN (t0.c24) AND (t0.c24))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c24)>=(((t0.c0) IS TRUE))) ORDER BY ((CASE t0.c24  WHEN vt1.c0 THEN vt1.c0 END)*(x'')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c24)>=(((t0.c0) IS TRUE))) WHERE ((((NULL IN ())) NOT BETWEEN (((((t0.c0)OR(x'')))AND(t0.c0))) AND (((vt1.c0) NOT BETWEEN (t0.c24) AND (t0.c24))))) ORDER BY ((CASE t0.c24  WHEN vt1.c0 THEN vt1.c0 END)*(x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOT BETWEEN (((((t0.c0)OR(x'')))AND(t0.c0))) AND (((vt1.c0) NOT BETWEEN (t0.c24) AND (t0.c24))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c24)>=(((t0.c0) IS TRUE))) ORDER BY ((CASE t0.c24  WHEN vt1.c0 THEN vt1.c0 END)*(x'')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c24)>=(((t0.c0) IS TRUE))) WHERE ((((NULL IN ())) NOT BETWEEN (((((t0.c0)OR(x'')))AND(t0.c0))) AND (((vt1.c0) NOT BETWEEN (t0.c24) AND (t0.c24))))) ORDER BY ((CASE t0.c24  WHEN vt1.c0 THEN vt1.c0 END)*(x'')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE (UPPER(((0.422357093758138) BETWEEN (v0.c0) AND (t0.c24)))) ORDER BY (((t0.c0)||(t0.c24)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(((0.422357093758138) BETWEEN (v0.c0) AND (t0.c24)))) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY (((t0.c0)||(t0.c24)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE (UPPER(((0.422357093758138) BETWEEN (v0.c0) AND (t0.c24)))) ORDER BY (((t0.c0)||(t0.c24)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(((0.422357093758138) BETWEEN (v0.c0) AND (t0.c24)))) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY (((t0.c0)||(t0.c24)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE (UPPER(((0.422357093758138) BETWEEN (v0.c0) AND (t0.c24)))) ORDER BY (((t0.c0)||(t0.c24)) IN ()) DESC  NULLS FIRST;
SELECT * FROM t0, v0 WHERE ((((t0.c24)|(t0.c0)) IN ())) ORDER BY ((((t0.c24)-(t0.c24))) BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c24)<=(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c24)|(t0.c0)) IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c24)-(t0.c24))) BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c24)<=(t0.c0)))));
SELECT * FROM t0, v0 WHERE ((((t0.c24)|(t0.c0)) IN ())) ORDER BY ((((t0.c24)-(t0.c24))) BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c24)<=(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c24)|(t0.c0)) IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c24)-(t0.c24))) BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c24)<=(t0.c0)))));
SELECT * FROM t0, v0 WHERE ((((t0.c24)|(t0.c0)) IN ())) ORDER BY ((((t0.c24)-(t0.c24))) BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c24)<=(t0.c0))));
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c24)) AND ((vt1.c0))) AS NUMERIC) LEFT OUTER JOIN vt1 ON (CAST(t0.c0 AS TEXT) IN ()) WHERE (((vt1.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c24)) AND ((vt1.c0))) AS NUMERIC) LEFT OUTER JOIN vt1 ON (CAST(t0.c0 AS TEXT) IN ()));
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c24)) AND ((vt1.c0))) AS NUMERIC) LEFT OUTER JOIN vt1 ON (CAST(t0.c0 AS TEXT) IN ()) WHERE (((vt1.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c24)) AND ((vt1.c0))) AS NUMERIC) LEFT OUTER JOIN vt1 ON (CAST(t0.c0 AS TEXT) IN ()));
SELECT COUNT(*) FROM v0, t0 WHERE (((((0.4550130253198439)IS(t0.c0))) IS FALSE)) ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((0.4550130253198439)IS(t0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL));
SELECT COUNT(*) FROM v0, t0 WHERE (((((0.4550130253198439)IS(t0.c0))) IS FALSE)) ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((0.4550130253198439)IS(t0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL));
SELECT COUNT(*) FROM v0, t0 WHERE (((((0.4550130253198439)IS(t0.c0))) IS FALSE)) ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL);
SELECT COUNT(*) FROM vt1, t0, v0 WHERE (((((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c24)))OR(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c24)))OR(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, t0, v0);
SELECT COUNT(*) FROM vt1, t0, v0 WHERE (((((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c24)))OR(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c24)))OR(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, t0, v0);
SELECT COUNT(*) FROM vt1, t0, v0 WHERE (((((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c24)))OR(vt1.c0))) NOT NULL));
SELECT * FROM v0, t0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (t0.c24 COLLATE BINARY) AND (((t0.c24) BETWEEN ('>%%KdO') AND (t0.c24)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) BETWEEN (t0.c24 COLLATE BINARY) AND (((t0.c24) BETWEEN ('>%%KdO') AND (t0.c24))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (t0.c24 COLLATE BINARY) AND (((t0.c24) BETWEEN ('>%%KdO') AND (t0.c24)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) BETWEEN (t0.c24 COLLATE BINARY) AND (((t0.c24) BETWEEN ('>%%KdO') AND (t0.c24))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (t0.c24 COLLATE BINARY) AND (((t0.c24) BETWEEN ('>%%KdO') AND (t0.c24)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((CAST(t0.c0 AS REAL))OR((t0.c0 IN ()))))OR(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))OR((t0.c0 IN ()))))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((CAST(t0.c0 AS REAL))OR((t0.c0 IN ()))))OR(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))OR((t0.c0 IN ()))))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((CAST(t0.c0 AS REAL))OR((t0.c0 IN ()))))OR(t0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0, t0 WHERE (CASE WHEN (((t0.c24, t0.c24, t0.c0))!=((t0.c24, v0.c0, t0.c0))) THEN ((t0.c24) NOT BETWEEN (t0.c0) AND (x'b46a')) WHEN t0.c0 COLLATE NOCASE THEN (t0.c24 IN (t0.c24)) WHEN 0.10127132265735006 THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c24, t0.c24, t0.c0))!=((t0.c24, v0.c0, t0.c0))) THEN ((t0.c24) NOT BETWEEN (t0.c0) AND (x'b46a')) WHEN t0.c0 COLLATE NOCASE THEN (t0.c24 IN (t0.c24)) WHEN 0.10127132265735006 THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CASE WHEN (((t0.c24, t0.c24, t0.c0))!=((t0.c24, v0.c0, t0.c0))) THEN ((t0.c24) NOT BETWEEN (t0.c0) AND (x'b46a')) WHEN t0.c0 COLLATE NOCASE THEN (t0.c24 IN (t0.c24)) WHEN 0.10127132265735006 THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c24, t0.c24, t0.c0))!=((t0.c24, v0.c0, t0.c0))) THEN ((t0.c24) NOT BETWEEN (t0.c0) AND (x'b46a')) WHEN t0.c0 COLLATE NOCASE THEN (t0.c24 IN (t0.c24)) WHEN 0.10127132265735006 THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CASE WHEN (((t0.c24, t0.c24, t0.c0))!=((t0.c24, v0.c0, t0.c0))) THEN ((t0.c24) NOT BETWEEN (t0.c0) AND (x'b46a')) WHEN t0.c0 COLLATE NOCASE THEN (t0.c24 IN (t0.c24)) WHEN 0.10127132265735006 THEN (v0.c0 IN ()) END);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0 WHERE ((~ (NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (NULL)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND ('-745019140')) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND ('-745019140')) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND ('-745019140')) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND ('-745019140')) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND ('-745019140')) COLLATE BINARY DESC;
SELECT * FROM t0 WHERE ((NOT (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (t0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c0)|(t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c24 END) AND ((vt1.c0 IN (t0.c24))))) ORDER BY ((((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 WHEN NULL THEN t0.c0 ELSE '1714970230' END)OR(((((((((t0.c24)AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c24)))))OR(((t0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)|(t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c24 END) AND ((vt1.c0 IN (t0.c24))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 WHEN NULL THEN t0.c0 ELSE '1714970230' END)OR(((((((((t0.c24)AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c24)))))OR(((t0.c0) NOT NULL))));
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c0)|(t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c24 END) AND ((vt1.c0 IN (t0.c24))))) ORDER BY ((((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 WHEN NULL THEN t0.c0 ELSE '1714970230' END)OR(((((((((t0.c24)AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c24)))))OR(((t0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)|(t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c24 END) AND ((vt1.c0 IN (t0.c24))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 WHEN NULL THEN t0.c0 ELSE '1714970230' END)OR(((((((((t0.c24)AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c24)))))OR(((t0.c0) NOT NULL))));
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c0)|(t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c24 END) AND ((vt1.c0 IN (t0.c24))))) ORDER BY ((((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 WHEN NULL THEN t0.c0 ELSE '1714970230' END)OR(((((((((t0.c24)AND(t0.c0)))OR(t0.c0)))AND(vt1.c0)))AND(t0.c24)))))OR(((t0.c0) NOT NULL)));
SELECT ALL * FROM t0 WHERE (LOWER((~ (t0.c24))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((~ (t0.c24)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (LOWER((~ (t0.c24))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((~ (t0.c24)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (LOWER((~ (t0.c24))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CASE WHEN t0.c24 THEN TRIM(t0.c0) WHEN ((((((((vt1.c0)AND(x'c911')))AND(t0.c24)))AND(t0.c0)))AND(x'')) THEN ((((t0.c24)AND(x'e4f3')))AND(t0.c0)) WHEN 0xffffffffb2973d42 THEN x'' END) ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (t0.c24) AND (NULL)) THEN MAX(vt1.c0, t0.c24, t0.c0, t0.c24) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c24 THEN TRIM(t0.c0) WHEN ((((((((vt1.c0)AND(x'c911')))AND(t0.c24)))AND(t0.c0)))AND(x'')) THEN ((((t0.c24)AND(x'e4f3')))AND(t0.c0)) WHEN 0Xffffffffb2973d42 THEN x'' END) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (t0.c24) AND (NULL)) THEN MAX(vt1.c0, t0.c24, t0.c0, t0.c24) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CASE WHEN t0.c24 THEN TRIM(t0.c0) WHEN ((((((((vt1.c0)AND(x'c911')))AND(t0.c24)))AND(t0.c0)))AND(x'')) THEN ((((t0.c24)AND(x'e4f3')))AND(t0.c0)) WHEN 0xffffffffb2973d42 THEN x'' END) ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (t0.c24) AND (NULL)) THEN MAX(vt1.c0, t0.c24, t0.c0, t0.c24) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c24 THEN TRIM(t0.c0) WHEN ((((((((vt1.c0)AND(x'c911')))AND(t0.c24)))AND(t0.c0)))AND(x'')) THEN ((((t0.c24)AND(x'e4f3')))AND(t0.c0)) WHEN 0Xffffffffb2973d42 THEN x'' END) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (t0.c24) AND (NULL)) THEN MAX(vt1.c0, t0.c24, t0.c0, t0.c24) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CASE WHEN t0.c24 THEN TRIM(t0.c0) WHEN ((((((((vt1.c0)AND(x'c911')))AND(t0.c24)))AND(t0.c0)))AND(x'')) THEN ((((t0.c24)AND(x'e4f3')))AND(t0.c0)) WHEN 0xffffffffb2973d42 THEN x'' END) ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (t0.c24) AND (NULL)) THEN MAX(vt1.c0, t0.c24, t0.c0, t0.c24) END;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL))GLOB('-1070719039'))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL))GLOB('-1070719039'))) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL))GLOB('-1070719039'))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL))GLOB('-1070719039'))) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL))GLOB('-1070719039'))) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY (((NOT (vt1.c0))) BETWEEN (UPPER(vt1.c0)) AND (((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS LAST, (((- (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0xffffffffedf3883f END) AND (ABS(DISTINCT vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY (((NOT (vt1.c0))) BETWEEN (UPPER(vt1.c0)) AND (((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS LAST, (((- (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0Xffffffffedf3883f END) AND (ABS(DISTINCT vt1.c0))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY (((NOT (vt1.c0))) BETWEEN (UPPER(vt1.c0)) AND (((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS LAST, (((- (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0xffffffffedf3883f END) AND (ABS(DISTINCT vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY (((NOT (vt1.c0))) BETWEEN (UPPER(vt1.c0)) AND (((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS LAST, (((- (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0Xffffffffedf3883f END) AND (ABS(DISTINCT vt1.c0))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY (((NOT (vt1.c0))) BETWEEN (UPPER(vt1.c0)) AND (((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS LAST, (((- (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0xffffffffedf3883f END) AND (ABS(DISTINCT vt1.c0))) ASC;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (NULL IN ()) WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ALL ((t0.c24) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (NULL IN ()));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (NULL IN ()) WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ALL ((t0.c24) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (NULL IN ()));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON (NULL IN ()) WHERE (t0.c24);
SELECT * FROM v0, vt1, t0 WHERE (CAST(TYPEOF(v0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(v0.c0) AS TEXT)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT * FROM v0, vt1, t0 WHERE (CAST(TYPEOF(v0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(v0.c0) AS TEXT)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT * FROM v0, vt1, t0 WHERE (CAST(TYPEOF(v0.c0) AS TEXT));
SELECT * FROM v0 WHERE ((((('KlA')AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE) ORDER BY CAST(((v0.c0)=(v0.c0)) AS BLOB) DESC, (x'e3bb' IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), LIKELIHOOD(v0.c0, 0.07781171690959965)))  NULLS LAST, x'' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((('KlA')AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)=(v0.c0)) AS BLOB) DESC, (x'e3bb' IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), LIKELIHOOD(v0.c0, 0.07781171690959965)))  NULLS LAST, x'' COLLATE RTRIM);
SELECT * FROM v0 WHERE ((((('KlA')AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE) ORDER BY CAST(((v0.c0)=(v0.c0)) AS BLOB) DESC, (x'e3bb' IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), LIKELIHOOD(v0.c0, 0.07781171690959965)))  NULLS LAST, x'' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((('KlA')AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)=(v0.c0)) AS BLOB) DESC, (x'e3bb' IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), LIKELIHOOD(v0.c0, 0.07781171690959965)))  NULLS LAST, x'' COLLATE RTRIM);
SELECT * FROM v0 WHERE ((((('KlA')AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE) ORDER BY CAST(((v0.c0)=(v0.c0)) AS BLOB) DESC, (x'e3bb' IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), LIKELIHOOD(v0.c0, 0.07781171690959965)))  NULLS LAST, x'' COLLATE RTRIM;
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((0Xa88fcf0)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((0Xa88fcf0)|(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((0Xa88fcf0)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((0Xa88fcf0)|(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((0Xa88fcf0)|(v0.c0)))));
SELECT COUNT(*) FROM vt1, v0 WHERE ((NOT (CASE v0.c0  WHEN '' THEN v0.c0 END))) ORDER BY UPPER(CAST(v0.c0 AS INTEGER)) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE v0.c0  WHEN '' THEN v0.c0 END))) IS TRUE)  as count FROM vt1, v0 ORDER BY UPPER(CAST(v0.c0 AS INTEGER)) DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE ((NOT (CASE v0.c0  WHEN '' THEN v0.c0 END))) ORDER BY UPPER(CAST(v0.c0 AS INTEGER)) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE v0.c0  WHEN '' THEN v0.c0 END))) IS TRUE)  as count FROM vt1, v0 ORDER BY UPPER(CAST(v0.c0 AS INTEGER)) DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE ((NOT (CASE v0.c0  WHEN '' THEN v0.c0 END))) ORDER BY UPPER(CAST(v0.c0 AS INTEGER)) DESC;
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0)IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0)IS NOT(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0)IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0)IS NOT(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0)IS NOT(v0.c0)))));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((vt1.c0) ISNULL) WHERE (((((((t0.c24)OR(vt1.c0)))OR(t0.c24)))OR(CASE t0.c0  WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN t0.c24 WHEN vt1.c0 THEN t0.c24 ELSE t0.c24 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c24)OR(vt1.c0)))OR(t0.c24)))OR(CASE t0.c0  WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN t0.c24 WHEN vt1.c0 THEN t0.c24 ELSE t0.c24 END))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((vt1.c0) ISNULL));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((vt1.c0) ISNULL) WHERE (((((((t0.c24)OR(vt1.c0)))OR(t0.c24)))OR(CASE t0.c0  WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN t0.c24 WHEN vt1.c0 THEN t0.c24 ELSE t0.c24 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c24)OR(vt1.c0)))OR(t0.c24)))OR(CASE t0.c0  WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN t0.c24 WHEN vt1.c0 THEN t0.c24 ELSE t0.c24 END))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((vt1.c0) ISNULL));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((vt1.c0) ISNULL) WHERE (((((((t0.c24)OR(vt1.c0)))OR(t0.c24)))OR(CASE t0.c0  WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN t0.c24 WHEN vt1.c0 THEN t0.c24 ELSE t0.c24 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((~ (vt1.c0)) IN (((vt1.c0) IS TRUE)))) ORDER BY (- ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c0)) IN (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY (- ((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((~ (vt1.c0)) IN (((vt1.c0) IS TRUE)))) ORDER BY (- ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c0)) IN (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY (- ((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((~ (vt1.c0)) IN (((vt1.c0) IS TRUE)))) ORDER BY (- ((vt1.c0 IN ())));
SELECT * FROM v0 WHERE (((((((((((v0.c0)OR('-1746253619')))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((v0.c0) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR('-1746253619')))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS TRUE) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((((((((v0.c0)OR('-1746253619')))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((v0.c0) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR('-1746253619')))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS TRUE) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((((((((v0.c0)OR('-1746253619')))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((v0.c0) IS TRUE) DESC  NULLS LAST;
SELECT ALL * FROM t0, vt1 NATURAL JOIN v0 WHERE ((((t0.c24, vt1.c0, t0.c0)) NOT BETWEEN ((rtreenode(t0.c0, t0.c0), ((t0.c0) NOT NULL), ((vt1.c0)LIKE(t0.c0)))) AND ((RTRIM(v0.c0), ((vt1.c0) NOTNULL), ((((t0.c24)OR(t0.c24)))AND(NULL))))));
SELECT SUM(count) FROM (SELECT (((((t0.c24, vt1.c0, t0.c0)) NOT BETWEEN ((rtreenode(t0.c0, t0.c0), ((t0.c0) NOT NULL), ((vt1.c0)LIKE(t0.c0)))) AND ((RTRIM(v0.c0), ((vt1.c0) NOTNULL), ((((t0.c24)OR(t0.c24)))AND(NULL)))))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN v0);
SELECT ALL * FROM t0, vt1 NATURAL JOIN v0 WHERE ((((t0.c24, vt1.c0, t0.c0)) NOT BETWEEN ((rtreenode(t0.c0, t0.c0), ((t0.c0) NOT NULL), ((vt1.c0)LIKE(t0.c0)))) AND ((RTRIM(v0.c0), ((vt1.c0) NOTNULL), ((((t0.c24)OR(t0.c24)))AND(NULL))))));
SELECT SUM(count) FROM (SELECT (((((t0.c24, vt1.c0, t0.c0)) NOT BETWEEN ((rtreenode(t0.c0, t0.c0), ((t0.c0) NOT NULL), ((vt1.c0)LIKE(t0.c0)))) AND ((RTRIM(v0.c0), ((vt1.c0) NOTNULL), ((((t0.c24)OR(t0.c24)))AND(NULL)))))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN v0);
SELECT ALL * FROM t0, vt1 NATURAL JOIN v0 WHERE ((((t0.c24, vt1.c0, t0.c0)) NOT BETWEEN ((rtreenode(t0.c0, t0.c0), ((t0.c0) NOT NULL), ((vt1.c0)LIKE(t0.c0)))) AND ((RTRIM(v0.c0), ((vt1.c0) NOTNULL), ((((t0.c24)OR(t0.c24)))AND(NULL))))));
SELECT * FROM v0, t0 WHERE (((v0.c0) NOTNULL) COLLATE RTRIM) ORDER BY UPPER(HEX(x'930a'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY UPPER(HEX(x'930a'))  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((v0.c0) NOTNULL) COLLATE RTRIM) ORDER BY UPPER(HEX(x'930a'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY UPPER(HEX(x'930a'))  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((v0.c0) NOTNULL) COLLATE RTRIM) ORDER BY UPPER(HEX(x'930a'))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ((t0.c24) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ((t0.c24) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c24);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON NULL FULL OUTER JOIN v0 ON ((((((((x'')AND((((t0.c24))<>((vt1.c0))))))OR((((t0.c24))<=((vt1.c0))))))AND((t0.c0 IN (t0.c24)))))OR((((v0.c0))<((t0.c0))))) WHERE (CAST((t0.c24 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c24 IN ()) AS BLOB)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON NULL FULL OUTER JOIN v0 ON ((((((((x'')AND((((t0.c24))<>((vt1.c0))))))OR((((t0.c24))<=((vt1.c0))))))AND((t0.c0 IN (t0.c24)))))OR((((v0.c0))<((t0.c0))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON NULL FULL OUTER JOIN v0 ON ((((((((x'')AND((((t0.c24))<>((vt1.c0))))))OR((((t0.c24))<=((vt1.c0))))))AND((t0.c0 IN (t0.c24)))))OR((((v0.c0))<((t0.c0))))) WHERE (CAST((t0.c24 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c24 IN ()) AS BLOB)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON NULL FULL OUTER JOIN v0 ON ((((((((x'')AND((((t0.c24))<>((vt1.c0))))))OR((((t0.c24))<=((vt1.c0))))))AND((t0.c0 IN (t0.c24)))))OR((((v0.c0))<((t0.c0))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON NULL FULL OUTER JOIN v0 ON ((((((((x'')AND((((t0.c24))<>((vt1.c0))))))OR((((t0.c24))<=((vt1.c0))))))AND((t0.c0 IN (t0.c24)))))OR((((v0.c0))<((t0.c0))))) WHERE (CAST((t0.c24 IN ()) AS BLOB));
SELECT ALL * FROM v0, vt1, t0 WHERE (UPPER(x'' COLLATE NOCASE)) ORDER BY vt1.c0, LIKELY(((v0.c0) BETWEEN (t0.c24) AND (t0.c24))), SQLITE_COMPILEOPTION_GET(NULL) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(x'' COLLATE NOCASE)) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY vt1.c0, LIKELY(((v0.c0) BETWEEN (t0.c24) AND (t0.c24))), SQLITE_COMPILEOPTION_GET(NULL) DESC);
SELECT ALL * FROM v0, vt1, t0 WHERE (UPPER(x'' COLLATE NOCASE)) ORDER BY vt1.c0, LIKELY(((v0.c0) BETWEEN (t0.c24) AND (t0.c24))), SQLITE_COMPILEOPTION_GET(NULL) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(x'' COLLATE NOCASE)) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY vt1.c0, LIKELY(((v0.c0) BETWEEN (t0.c24) AND (t0.c24))), SQLITE_COMPILEOPTION_GET(NULL) DESC);
SELECT ALL * FROM v0, vt1, t0 WHERE (UPPER(x'' COLLATE NOCASE)) ORDER BY vt1.c0, LIKELY(((v0.c0) BETWEEN (t0.c24) AND (t0.c24))), SQLITE_COMPILEOPTION_GET(NULL) DESC;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((CAST(t0.c24 AS REAL)))<((CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c24 THEN v0.c0 WHEN vt1.c0 THEN t0.c0 END))) RIGHT OUTER JOIN vt1 ON '' WHERE (((((STRFTIME(NULL, v0.c0, 0.9613758097644953))AND((0.2626630387010279 IN ()))))OR(0x5489c061))) ORDER BY ((((((((t0.c0)AND(t0.c24)))OR(t0.c0)))OR(vt1.c0)))OR(t0.c24)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((STRFTIME(NULL, v0.c0, 0.9613758097644953))AND((0.2626630387010279 IN ()))))OR(0x5489c061))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((CAST(t0.c24 AS REAL)))<((CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c24 THEN v0.c0 WHEN vt1.c0 THEN t0.c0 END))) RIGHT OUTER JOIN vt1 ON '' ORDER BY ((((((((t0.c0)AND(t0.c24)))OR(t0.c0)))OR(vt1.c0)))OR(t0.c24)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((CAST(t0.c24 AS REAL)))<((CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c24 THEN v0.c0 WHEN vt1.c0 THEN t0.c0 END))) RIGHT OUTER JOIN vt1 ON '' WHERE (((((STRFTIME(NULL, v0.c0, 0.9613758097644953))AND((0.2626630387010279 IN ()))))OR(0x5489c061))) ORDER BY ((((((((t0.c0)AND(t0.c24)))OR(t0.c0)))OR(vt1.c0)))OR(t0.c24)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((STRFTIME(NULL, v0.c0, 0.9613758097644953))AND((0.2626630387010279 IN ()))))OR(0x5489c061))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((CAST(t0.c24 AS REAL)))<((CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c24 THEN v0.c0 WHEN vt1.c0 THEN t0.c0 END))) RIGHT OUTER JOIN vt1 ON '' ORDER BY ((((((((t0.c0)AND(t0.c24)))OR(t0.c0)))OR(vt1.c0)))OR(t0.c24)) COLLATE RTRIM DESC);
SELECT * FROM vt1, v0, t0 WHERE (CAST(((vt1.c0)<=(t0.c24)) AS INTEGER)) ORDER BY ((((((((((vt1.c0)=(v0.c0)))OR(((vt1.c0)<=(vt1.c0)))))OR(((t0.c24)<>(t0.c0)))))AND(CASE t0.c24  WHEN t0.c0 THEN vt1.c0 END)))AND(((t0.c24)<(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)<=(t0.c24)) AS INTEGER)) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY ((((((((((vt1.c0)==(v0.c0)))OR(((vt1.c0)<=(vt1.c0)))))OR(((t0.c24)!=(t0.c0)))))AND(CASE t0.c24  WHEN t0.c0 THEN vt1.c0 END)))AND(((t0.c24)<(vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, v0, t0 WHERE (CAST(((vt1.c0)<=(t0.c24)) AS INTEGER)) ORDER BY ((((((((((vt1.c0)=(v0.c0)))OR(((vt1.c0)<=(vt1.c0)))))OR(((t0.c24)<>(t0.c0)))))AND(CASE t0.c24  WHEN t0.c0 THEN vt1.c0 END)))AND(((t0.c24)<(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)<=(t0.c24)) AS INTEGER)) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY ((((((((((vt1.c0)==(v0.c0)))OR(((vt1.c0)<=(vt1.c0)))))OR(((t0.c24)!=(t0.c0)))))AND(CASE t0.c24  WHEN t0.c0 THEN vt1.c0 END)))AND(((t0.c24)<(vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, v0, t0 WHERE (CAST(((vt1.c0)<=(t0.c24)) AS INTEGER)) ORDER BY ((((((((((vt1.c0)=(v0.c0)))OR(((vt1.c0)<=(vt1.c0)))))OR(((t0.c24)<>(t0.c0)))))AND(CASE t0.c24  WHEN t0.c0 THEN vt1.c0 END)))AND(((t0.c24)<(vt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0, v0 WHERE ((NOT (((t0.c24) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c24) IS FALSE)))) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL * FROM vt1, t0, v0 WHERE ((NOT (((t0.c24) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c24) IS FALSE)))) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL * FROM vt1, t0, v0 WHERE ((NOT (((t0.c24) IS FALSE))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON (v0.c0 COLLATE RTRIM IN ()) WHERE (CAST(v0.c0 AS BLOB) COLLATE RTRIM) ORDER BY ((((rtreenode(v0.c0, vt1.c0))AND(CASE v0.c0  WHEN v0.c0 THEN x'' WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((vt1.c0)IS(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON (v0.c0 COLLATE RTRIM IN ()) ORDER BY ((((rtreenode(v0.c0, vt1.c0))AND(CASE v0.c0  WHEN v0.c0 THEN x'' WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((vt1.c0)IS(v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON (v0.c0 COLLATE RTRIM IN ()) WHERE (CAST(v0.c0 AS BLOB) COLLATE RTRIM) ORDER BY ((((rtreenode(v0.c0, vt1.c0))AND(CASE v0.c0  WHEN v0.c0 THEN x'' WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((vt1.c0)IS(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON (v0.c0 COLLATE RTRIM IN ()) ORDER BY ((((rtreenode(v0.c0, vt1.c0))AND(CASE v0.c0  WHEN v0.c0 THEN x'' WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((vt1.c0)IS(v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON (v0.c0 COLLATE RTRIM IN ()) WHERE (CAST(v0.c0 AS BLOB) COLLATE RTRIM) ORDER BY ((((rtreenode(v0.c0, vt1.c0))AND(CASE v0.c0  WHEN v0.c0 THEN x'' WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(((vt1.c0)IS(v0.c0)))) ASC;
SELECT * FROM t0 INNER JOIN v0 ON LOWER(0Xffffffff85838f3d) WHERE (((v0.c0 COLLATE BINARY)!=(t0.c24)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)<>(t0.c24))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON LOWER(0xffffffff85838f3d));
SELECT * FROM t0 INNER JOIN v0 ON LOWER(0Xffffffff85838f3d) WHERE (((v0.c0 COLLATE BINARY)!=(t0.c24)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)<>(t0.c24))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON LOWER(0xffffffff85838f3d));
SELECT * FROM t0 INNER JOIN v0 ON LOWER(0Xffffffff85838f3d) WHERE (((v0.c0 COLLATE BINARY)!=(t0.c24)));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((+ (t0.c24)))<=(((vt1.c0) NOT NULL))) WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ((t0.c24) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((+ (t0.c24)))<=(((vt1.c0) NOT NULL))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((+ (t0.c24)))<=(((vt1.c0) NOT NULL))) WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ((t0.c24) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON (((+ (t0.c24)))<=(((vt1.c0) NOT NULL))));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON (((+ (t0.c24)))<=(((vt1.c0) NOT NULL))) WHERE (t0.c24);
SELECT COUNT(*) FROM t0, v0 WHERE (LIKE((v0.c0 IN ()), (((t0.c24)) NOT BETWEEN ((t0.c24)) AND ((t0.c24))), 'Q'));
SELECT SUM(count) FROM (SELECT ((LIKE((v0.c0 IN ()), (((t0.c24)) NOT BETWEEN ((t0.c24)) AND ((t0.c24))), 'Q')) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (LIKE((v0.c0 IN ()), (((t0.c24)) NOT BETWEEN ((t0.c24)) AND ((t0.c24))), 'Q'));
SELECT SUM(count) FROM (SELECT ((LIKE((v0.c0 IN ()), (((t0.c24)) NOT BETWEEN ((t0.c24)) AND ((t0.c24))), 'Q')) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (LIKE((v0.c0 IN ()), (((t0.c24)) NOT BETWEEN ((t0.c24)) AND ((t0.c24))), 'Q'));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0, '-47579552', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))<=((+ (0.8319539239899217))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, '-47579552', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))<=((+ (0.8319539239899217)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0, '-47579552', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))<=((+ (0.8319539239899217))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, '-47579552', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))<=((+ (0.8319539239899217)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0, '-47579552', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))<=((+ (0.8319539239899217))));
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((t0.c24)>(v0.c0)) THEN (v0.c0 IN ()) ELSE (v0.c0 IN ()) END) ORDER BY CAST(((((v0.c0)AND('7삃')))AND(0.45494561191638516)) AS BLOB)  NULLS FIRST, (((t0.c0)IS NOT(t0.c24)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c24)>(v0.c0)) THEN (v0.c0 IN ()) ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(((((v0.c0)AND('7삃')))AND(0.45494561191638516)) AS BLOB)  NULLS FIRST, (((t0.c0)IS NOT(t0.c24)) IN ())  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((t0.c24)>(v0.c0)) THEN (v0.c0 IN ()) ELSE (v0.c0 IN ()) END) ORDER BY CAST(((((v0.c0)AND('7삃')))AND(0.45494561191638516)) AS BLOB)  NULLS FIRST, (((t0.c0)IS NOT(t0.c24)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c24)>(v0.c0)) THEN (v0.c0 IN ()) ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(((((v0.c0)AND('7삃')))AND(0.45494561191638516)) AS BLOB)  NULLS FIRST, (((t0.c0)IS NOT(t0.c24)) IN ())  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((t0.c24)>(v0.c0)) THEN (v0.c0 IN ()) ELSE (v0.c0 IN ()) END) ORDER BY CAST(((((v0.c0)AND('7삃')))AND(0.45494561191638516)) AS BLOB)  NULLS FIRST, (((t0.c0)IS NOT(t0.c24)) IN ())  NULLS FIRST;
SELECT ALL * FROM v0, vt1 WHERE (TRIM(LIKELY(DISTINCT v0.c0), ((vt1.c0)!=(vt1.c0)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((TRIM(LIKELY(DISTINCT v0.c0), ((vt1.c0)!=(vt1.c0)))) IS TRUE)  as count FROM v0, vt1 ORDER BY vt1.c0);
SELECT ALL * FROM v0, vt1 WHERE (TRIM(LIKELY(DISTINCT v0.c0), ((vt1.c0)!=(vt1.c0)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((TRIM(LIKELY(DISTINCT v0.c0), ((vt1.c0)!=(vt1.c0)))) IS TRUE)  as count FROM v0, vt1 ORDER BY vt1.c0);
SELECT ALL * FROM v0, vt1 WHERE (TRIM(LIKELY(DISTINCT v0.c0), ((vt1.c0)!=(vt1.c0)))) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c24)))OR(t0.c24)))OR(t0.c24)))AND('0.6182583256510964')))OR((((t0.c0, t0.c24, t0.c0))<=((t0.c24, t0.c24, x'bea83c67'))))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(t0.c24)))OR(t0.c24)))OR(t0.c24)))AND('0.6182583256510964')))OR((((t0.c0, t0.c24, t0.c0))<=((t0.c24, t0.c24, x'bea83c67')))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c24)))OR(t0.c24)))OR(t0.c24)))AND('0.6182583256510964')))OR((((t0.c0, t0.c24, t0.c0))<=((t0.c24, t0.c24, x'bea83c67'))))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(t0.c24)))OR(t0.c24)))OR(t0.c24)))AND('0.6182583256510964')))OR((((t0.c0, t0.c24, t0.c0))<=((t0.c24, t0.c24, x'bea83c67')))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c24)))OR(t0.c24)))OR(t0.c24)))AND('0.6182583256510964')))OR((((t0.c0, t0.c24, t0.c0))<=((t0.c24, t0.c24, x'bea83c67'))))));
SELECT * FROM vt1 CROSS JOIN t0 ON (((+ ('~밀')))-(INSTR(vt1.c0, t0.c24))) LEFT OUTER JOIN v0 ON CAST(((t0.c0) IS FALSE) AS REAL) WHERE ('-323868701');
SELECT SUM(count) FROM (SELECT ALL (('-323868701') IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((+ ('~밀')))-(INSTR(vt1.c0, t0.c24))) LEFT OUTER JOIN v0 ON CAST(((t0.c0) IS FALSE) AS REAL));
SELECT * FROM vt1 CROSS JOIN t0 ON (((+ ('~밀')))-(INSTR(vt1.c0, t0.c24))) LEFT OUTER JOIN v0 ON CAST(((t0.c0) IS FALSE) AS REAL) WHERE ('-323868701');
SELECT SUM(count) FROM (SELECT ALL (('-323868701') IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((+ ('~밀')))-(INSTR(vt1.c0, t0.c24))) LEFT OUTER JOIN v0 ON CAST(((t0.c0) IS FALSE) AS REAL));
SELECT * FROM vt1 CROSS JOIN t0 ON (((+ ('~밀')))-(INSTR(vt1.c0, t0.c24))) LEFT OUTER JOIN v0 ON CAST(((t0.c0) IS FALSE) AS REAL) WHERE ('-323868701');
SELECT ALL * FROM vt1, v0 WHERE (((((v0.c0)AND(v0.c0)))+(((v0.c0)LIKE(0X359738ce))))) ORDER BY (((((v0.c0)*(vt1.c0)), '1300426124', ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), ((vt1.c0)/(vt1.c0)), '2087655778'))<((v0.c0, (vt1.c0 IN ()), ((vt1.c0) IS TRUE), CASE v0.c0  WHEN v0.c0 THEN NULL ELSE v0.c0 END, ((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)))AND(v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(v0.c0)))+(((v0.c0)LIKE(0X359738ce))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((v0.c0)*(vt1.c0)), '1300426124', ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), ((vt1.c0)/(vt1.c0)), '2087655778'))<((v0.c0, (vt1.c0 IN ()), ((vt1.c0) IS TRUE), CASE v0.c0  WHEN v0.c0 THEN NULL ELSE v0.c0 END, ((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)))AND(v0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0 WHERE (((((v0.c0)AND(v0.c0)))+(((v0.c0)LIKE(0X359738ce))))) ORDER BY (((((v0.c0)*(vt1.c0)), '1300426124', ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), ((vt1.c0)/(vt1.c0)), '2087655778'))<((v0.c0, (vt1.c0 IN ()), ((vt1.c0) IS TRUE), CASE v0.c0  WHEN v0.c0 THEN NULL ELSE v0.c0 END, ((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)))AND(v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(v0.c0)))+(((v0.c0)LIKE(0X359738ce))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((v0.c0)*(vt1.c0)), '1300426124', ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), ((vt1.c0)/(vt1.c0)), '2087655778'))<((v0.c0, (vt1.c0 IN ()), ((vt1.c0) IS TRUE), CASE v0.c0  WHEN v0.c0 THEN NULL ELSE v0.c0 END, ((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)))AND(v0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0 WHERE (((((v0.c0)AND(v0.c0)))+(((v0.c0)LIKE(0X359738ce))))) ORDER BY (((((v0.c0)*(vt1.c0)), '1300426124', ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), ((vt1.c0)/(vt1.c0)), '2087655778'))<((v0.c0, (vt1.c0 IN ()), ((vt1.c0) IS TRUE), CASE v0.c0  WHEN v0.c0 THEN NULL ELSE v0.c0 END, ((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)))AND(v0.c0))))) DESC  NULLS LAST;
SELECT * FROM t0, v0 WHERE (LIKELY(DISTINCT ((t0.c0)OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t0.c0)OR(v0.c0)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (LIKELY(DISTINCT ((t0.c0)OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t0.c0)OR(v0.c0)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (LIKELY(DISTINCT ((t0.c0)OR(v0.c0))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON (((vt1.c0 IN (vt1.c0))) BETWEEN ((v0.c0 IN ())) AND ((+ (vt1.c0)))) WHERE (CASE WHEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN vt1.c0 END) ORDER BY MIN((((v0.c0))>((0X6f5818e9))), ((vt1.c0)+(v0.c0)), (vt1.c0 IN ()), ((v0.c0)<(v0.c0)))  NULLS FIRST, 0.7370148166973799 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON (((vt1.c0 IN (vt1.c0))) BETWEEN ((v0.c0 IN ())) AND ((+ (vt1.c0)))) ORDER BY MIN((((v0.c0))>((0X6f5818e9))), ((vt1.c0)+(v0.c0)), (vt1.c0 IN ()), ((v0.c0)<(v0.c0)))  NULLS FIRST, 0.7370148166973799 ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON (((vt1.c0 IN (vt1.c0))) BETWEEN ((v0.c0 IN ())) AND ((+ (vt1.c0)))) WHERE (CASE WHEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN vt1.c0 END) ORDER BY MIN((((v0.c0))>((0X6f5818e9))), ((vt1.c0)+(v0.c0)), (vt1.c0 IN ()), ((v0.c0)<(v0.c0)))  NULLS FIRST, 0.7370148166973799 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON (((vt1.c0 IN (vt1.c0))) BETWEEN ((v0.c0 IN ())) AND ((+ (vt1.c0)))) ORDER BY MIN((((v0.c0))>((0X6f5818e9))), ((vt1.c0)+(v0.c0)), (vt1.c0 IN ()), ((v0.c0)<(v0.c0)))  NULLS FIRST, 0.7370148166973799 ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON (((vt1.c0 IN (vt1.c0))) BETWEEN ((v0.c0 IN ())) AND ((+ (vt1.c0)))) WHERE (CASE WHEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN vt1.c0 END) ORDER BY MIN((((v0.c0))>((0X6f5818e9))), ((vt1.c0)+(v0.c0)), (vt1.c0 IN ()), ((v0.c0)<(v0.c0)))  NULLS FIRST, 0.7370148166973799 ASC;
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON ((((t0.c24)IS(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN ('-191715616') AND (vt1.c0))) AND (((vt1.c0) IS TRUE))) WHERE (((((((t0.c24)OR(vt1.c0)))OR(t0.c0)))<>((- (t0.c24))))) ORDER BY (((((((t0.c24)) BETWEEN ((t0.c24)) AND ((t0.c24))))AND(((vt1.c0)|(vt1.c0)))))AND(CASE t0.c24  WHEN t0.c24 THEN vt1.c0 WHEN t0.c24 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN t0.c24 WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c24)OR(vt1.c0)))OR(t0.c0)))<>((- (t0.c24))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((t0.c24)IS(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN ('-191715616') AND (vt1.c0))) AND (((vt1.c0) IS TRUE))) ORDER BY (((((((t0.c24)) BETWEEN ((t0.c24)) AND ((t0.c24))))AND(((vt1.c0)|(vt1.c0)))))AND(CASE t0.c24  WHEN t0.c24 THEN vt1.c0 WHEN t0.c24 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN t0.c24 WHEN t0.c0 THEN t0.c0 END)) ASC);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON ((((t0.c24)IS(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN ('-191715616') AND (vt1.c0))) AND (((vt1.c0) IS TRUE))) WHERE (((((((t0.c24)OR(vt1.c0)))OR(t0.c0)))<>((- (t0.c24))))) ORDER BY (((((((t0.c24)) BETWEEN ((t0.c24)) AND ((t0.c24))))AND(((vt1.c0)|(vt1.c0)))))AND(CASE t0.c24  WHEN t0.c24 THEN vt1.c0 WHEN t0.c24 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN t0.c24 WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c24)OR(vt1.c0)))OR(t0.c0)))<>((- (t0.c24))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((t0.c24)IS(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN ('-191715616') AND (vt1.c0))) AND (((vt1.c0) IS TRUE))) ORDER BY (((((((t0.c24)) BETWEEN ((t0.c24)) AND ((t0.c24))))AND(((vt1.c0)|(vt1.c0)))))AND(CASE t0.c24  WHEN t0.c24 THEN vt1.c0 WHEN t0.c24 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN t0.c24 WHEN t0.c0 THEN t0.c0 END)) ASC);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON ((((t0.c24)IS(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN ('-191715616') AND (vt1.c0))) AND (((vt1.c0) IS TRUE))) WHERE (((((((t0.c24)OR(vt1.c0)))OR(t0.c0)))<>((- (t0.c24))))) ORDER BY (((((((t0.c24)) BETWEEN ((t0.c24)) AND ((t0.c24))))AND(((vt1.c0)|(vt1.c0)))))AND(CASE t0.c24  WHEN t0.c24 THEN vt1.c0 WHEN t0.c24 THEN vt1.c0 WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN t0.c24 WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON (((t0.c0 IN (v0.c0)))LIKE(((t0.c0) ISNULL))) WHERE (((CASE t0.c24  WHEN v0.c0 THEN t0.c24 END) BETWEEN (((v0.c0) IS FALSE)) AND (CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((TRIM(v0.c0, t0.c0))OR(CAST('' AS INTEGER))))AND(v0.c0 COLLATE BINARY)), ((t0.c24 COLLATE RTRIM)&(((v0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c24  WHEN v0.c0 THEN t0.c24 END) BETWEEN (((v0.c0) IS FALSE)) AND (CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((t0.c0 IN (v0.c0)))LIKE(((t0.c0) ISNULL))) ORDER BY ((((TRIM(v0.c0, t0.c0))OR(CAST('' AS INTEGER))))AND(v0.c0 COLLATE BINARY)), ((t0.c24 COLLATE RTRIM)&(((v0.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON (((t0.c0 IN (v0.c0)))LIKE(((t0.c0) ISNULL))) WHERE (((CASE t0.c24  WHEN v0.c0 THEN t0.c24 END) BETWEEN (((v0.c0) IS FALSE)) AND (CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((TRIM(v0.c0, t0.c0))OR(CAST('' AS INTEGER))))AND(v0.c0 COLLATE BINARY)), ((t0.c24 COLLATE RTRIM)&(((v0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c24  WHEN v0.c0 THEN t0.c24 END) BETWEEN (((v0.c0) IS FALSE)) AND (CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((t0.c0 IN (v0.c0)))LIKE(((t0.c0) ISNULL))) ORDER BY ((((TRIM(v0.c0, t0.c0))OR(CAST('' AS INTEGER))))AND(v0.c0 COLLATE BINARY)), ((t0.c24 COLLATE RTRIM)&(((v0.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON (((t0.c0 IN (v0.c0)))LIKE(((t0.c0) ISNULL))) WHERE (((CASE t0.c24  WHEN v0.c0 THEN t0.c24 END) BETWEEN (((v0.c0) IS FALSE)) AND (CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((((TRIM(v0.c0, t0.c0))OR(CAST('' AS INTEGER))))AND(v0.c0 COLLATE BINARY)), ((t0.c24 COLLATE RTRIM)&(((v0.c0) IS FALSE))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN (v0.c0 IN ()) THEN 0x6775bbdb WHEN ((v0.c0)<(v0.c0)) THEN CASE x'33582144'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS INTEGER)  WHEN (v0.c0 IN ()) THEN 0x6775bbdb WHEN ((v0.c0)<(v0.c0)) THEN CASE x'33582144'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN (v0.c0 IN ()) THEN 0x6775bbdb WHEN ((v0.c0)<(v0.c0)) THEN CASE x'33582144'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS INTEGER)  WHEN (v0.c0 IN ()) THEN 0x6775bbdb WHEN ((v0.c0)<(v0.c0)) THEN CASE x'33582144'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN (v0.c0 IN ()) THEN 0x6775bbdb WHEN ((v0.c0)<(v0.c0)) THEN CASE x'33582144'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT * FROM vt1 WHERE (LOWER(DISTINCT ((vt1.c0)>(vt1.c0)))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((8.99102926E8)IS(NULL)), vt1.c0 COLLATE NOCASE, (NOT (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY, vt1.c0, vt1.c0, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS REAL)))), CAST(json_array_length(vt1.c0, vt1.c0) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt1.c0)>(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((8.99102926E8)IS(NULL)), vt1.c0 COLLATE NOCASE, (NOT (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY, vt1.c0, vt1.c0, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS REAL)))), CAST(json_array_length(vt1.c0, vt1.c0) AS NUMERIC) ASC);
SELECT * FROM vt1 WHERE (LOWER(DISTINCT ((vt1.c0)>(vt1.c0)))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((8.99102926E8)IS(NULL)), vt1.c0 COLLATE NOCASE, (NOT (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY, vt1.c0, vt1.c0, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS REAL)))), CAST(json_array_length(vt1.c0, vt1.c0) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt1.c0)>(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((8.99102926E8)IS(NULL)), vt1.c0 COLLATE NOCASE, (NOT (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY, vt1.c0, vt1.c0, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS REAL)))), CAST(json_array_length(vt1.c0, vt1.c0) AS NUMERIC) ASC);
SELECT * FROM vt1 WHERE (LOWER(DISTINCT ((vt1.c0)>(vt1.c0)))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((8.99102926E8)IS(NULL)), vt1.c0 COLLATE NOCASE, (NOT (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY, vt1.c0, vt1.c0, ((vt1.c0)<(vt1.c0)), CAST(vt1.c0 AS REAL)))), CAST(json_array_length(vt1.c0, vt1.c0) AS NUMERIC) ASC;
SELECT * FROM vt1, t0, v0 WHERE (CAST(((v0.c0)LIKE(t0.c24)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)LIKE(t0.c24)) AS REAL)) IS TRUE)  as count FROM vt1, t0, v0);
SELECT * FROM vt1, t0, v0 WHERE (CAST(((v0.c0)LIKE(t0.c24)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)LIKE(t0.c24)) AS REAL)) IS TRUE)  as count FROM vt1, t0, v0);
SELECT * FROM vt1, t0, v0 WHERE (CAST(((v0.c0)LIKE(t0.c24)) AS REAL));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS INTEGER) WHERE ((CAST(t0.c24 AS NUMERIC) IN (((t0.c0)|(vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (NULL COLLATE NOCASE) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c24 AS NUMERIC) IN (((t0.c0)|(vt1.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS INTEGER) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (NULL COLLATE NOCASE) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS INTEGER) WHERE ((CAST(t0.c24 AS NUMERIC) IN (((t0.c0)|(vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (NULL COLLATE NOCASE) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c24 AS NUMERIC) IN (((t0.c0)|(vt1.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS INTEGER) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (NULL COLLATE NOCASE) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN vt1 ON CAST(((vt1.c0) IS FALSE) AS INTEGER) WHERE ((CAST(t0.c24 AS NUMERIC) IN (((t0.c0)|(vt1.c0))))) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (NULL COLLATE NOCASE) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (((t0.c24 COLLATE RTRIM)-((((vt1.c0, t0.c0, vt1.c0))!=((vt1.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c24 COLLATE RTRIM)-((((vt1.c0, t0.c0, vt1.c0))<>((vt1.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((t0.c24 COLLATE RTRIM)-((((vt1.c0, t0.c0, vt1.c0))!=((vt1.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c24 COLLATE RTRIM)-((((vt1.c0, t0.c0, vt1.c0))<>((vt1.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((t0.c24 COLLATE RTRIM)-((((vt1.c0, t0.c0, vt1.c0))!=((vt1.c0, t0.c0, t0.c0))))));
SELECT COUNT(*) FROM v0, vt1 WHERE (((((ABS(vt1.c0))AND((- (v0.c0)))))AND(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((ABS(vt1.c0))AND((- (v0.c0)))))AND(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (((((ABS(vt1.c0))AND((- (v0.c0)))))AND(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((ABS(vt1.c0))AND((- (v0.c0)))))AND(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (((((ABS(vt1.c0))AND((- (v0.c0)))))AND(CAST(vt1.c0 AS REAL))));
SELECT ALL * FROM v0, t0 WHERE ((((+ (t0.c24)))>>(t0.c0 COLLATE BINARY))) ORDER BY ((v0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c24)))>>(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c0 IN ()) IN ()));
SELECT ALL * FROM v0, t0 WHERE ((((+ (t0.c24)))>>(t0.c0 COLLATE BINARY))) ORDER BY ((v0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c24)))>>(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c0 IN ()) IN ()));
SELECT ALL * FROM v0, t0 WHERE ((((+ (t0.c24)))>>(t0.c0 COLLATE BINARY))) ORDER BY ((v0.c0 IN ()) IN ());
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE (((((((((((t0.c0)OR(t0.c24)))OR(t0.c0)))OR(t0.c24)))AND(t0.c0)))>=(CASE 0.44804041667660477  WHEN NULL THEN t0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(t0.c24)))OR(t0.c0)))OR(t0.c24)))AND(t0.c0)))>=(CASE 0.44804041667660477  WHEN NULL THEN t0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE (((((((((((t0.c0)OR(t0.c24)))OR(t0.c0)))OR(t0.c24)))AND(t0.c0)))>=(CASE 0.44804041667660477  WHEN NULL THEN t0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(t0.c24)))OR(t0.c0)))OR(t0.c24)))AND(t0.c0)))>=(CASE 0.44804041667660477  WHEN NULL THEN t0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE (((((((((((t0.c0)OR(t0.c24)))OR(t0.c0)))OR(t0.c24)))AND(t0.c0)))>=(CASE 0.44804041667660477  WHEN NULL THEN t0.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM t0 WHERE ((((((t0.c24))=(('\n率60'))))<=(0.4806275950635479))) ORDER BY (((((t0.c0)) BETWEEN (('-302806977')) AND ((t0.c0))))==(((t0.c24)<(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c24))==(('\n率60'))))<=(0.4806275950635479))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) BETWEEN (('-302806977')) AND ((t0.c0))))=(((t0.c24)<(t0.c0)))) ASC);
SELECT ALL * FROM t0 WHERE ((((((t0.c24))=(('\n率60'))))<=(0.4806275950635479))) ORDER BY (((((t0.c0)) BETWEEN (('-302806977')) AND ((t0.c0))))==(((t0.c24)<(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c24))==(('\n率60'))))<=(0.4806275950635479))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) BETWEEN (('-302806977')) AND ((t0.c0))))=(((t0.c24)<(t0.c0)))) ASC);
SELECT ALL * FROM t0 WHERE ((((((t0.c24))=(('\n率60'))))<=(0.4806275950635479))) ORDER BY (((((t0.c0)) BETWEEN (('-302806977')) AND ((t0.c0))))==(((t0.c24)<(t0.c0)))) ASC;
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ()))-(((vt1.c0)-(1.76749808E8)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))-(((vt1.c0)-(1.76749808E8))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ()))-(((vt1.c0)-(1.76749808E8)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))-(((vt1.c0)-(1.76749808E8))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ()))-(((vt1.c0)-(1.76749808E8)))));
SELECT * FROM vt1 WHERE (ABS(((vt1.c0)IS(vt1.c0)))) ORDER BY ((LIKELIHOOD(DISTINCT NULL, 0.4343465286442495)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c0)IS(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((LIKELIHOOD(DISTINCT NULL, 0.4343465286442495)) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (ABS(((vt1.c0)IS(vt1.c0)))) ORDER BY ((LIKELIHOOD(DISTINCT NULL, 0.4343465286442495)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c0)IS(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((LIKELIHOOD(DISTINCT NULL, 0.4343465286442495)) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (ABS(((vt1.c0)IS(vt1.c0)))) ORDER BY ((LIKELIHOOD(DISTINCT NULL, 0.4343465286442495)) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM v0 INNER JOIN vt1 ON (((+ (v0.c0))) BETWEEN ((((v0.c0))>((v0.c0)))) AND (((v0.c0) NOTNULL))) WHERE (((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON (((+ (v0.c0))) BETWEEN ((((v0.c0))>((v0.c0)))) AND (((v0.c0) NOTNULL))));
SELECT ALL * FROM v0 INNER JOIN vt1 ON (((+ (v0.c0))) BETWEEN ((((v0.c0))>((v0.c0)))) AND (((v0.c0) NOTNULL))) WHERE (((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON (((+ (v0.c0))) BETWEEN ((((v0.c0))>((v0.c0)))) AND (((v0.c0) NOTNULL))));
SELECT ALL * FROM v0 INNER JOIN vt1 ON (((+ (v0.c0))) BETWEEN ((((v0.c0))>((v0.c0)))) AND (((v0.c0) NOTNULL))) WHERE (((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, v0, t0 WHERE ((((0.11042333188196385 IN (v0.c0)))*(((v0.c0) BETWEEN (t0.c24) AND (t0.c0))))) ORDER BY (((v0.c0) NOT NULL) IN ())  NULLS LAST, CAST(COALESCE(v0.c0, t0.c24, vt1.c0, t0.c24, vt1.c0, v0.c0) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((0.11042333188196385 IN (v0.c0)))*(((v0.c0) BETWEEN (t0.c24) AND (t0.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED, v0, t0 ORDER BY (((v0.c0) NOT NULL) IN ())  NULLS LAST, CAST(COALESCE(v0.c0, t0.c24, vt1.c0, t0.c24, vt1.c0, v0.c0) AS NUMERIC));
SELECT ALL * FROM vt1, v0, t0 WHERE ((((0.11042333188196385 IN (v0.c0)))*(((v0.c0) BETWEEN (t0.c24) AND (t0.c0))))) ORDER BY (((v0.c0) NOT NULL) IN ())  NULLS LAST, CAST(COALESCE(v0.c0, t0.c24, vt1.c0, t0.c24, vt1.c0, v0.c0) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((0.11042333188196385 IN (v0.c0)))*(((v0.c0) BETWEEN (t0.c24) AND (t0.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED, v0, t0 ORDER BY (((v0.c0) NOT NULL) IN ())  NULLS LAST, CAST(COALESCE(v0.c0, t0.c24, vt1.c0, t0.c24, vt1.c0, v0.c0) AS NUMERIC));
SELECT ALL * FROM vt1, v0, t0 WHERE ((((0.11042333188196385 IN (v0.c0)))*(((v0.c0) BETWEEN (t0.c24) AND (t0.c0))))) ORDER BY (((v0.c0) NOT NULL) IN ())  NULLS LAST, CAST(COALESCE(v0.c0, t0.c24, vt1.c0, t0.c24, vt1.c0, v0.c0) AS NUMERIC);
SELECT ALL * FROM t0, vt1, v0 WHERE (rtreenode(t0.c24 COLLATE BINARY, CAST(v0.c0 AS BLOB))) ORDER BY CASE WHEN CASE t0.c24  WHEN t0.c24 THEN v0.c0 ELSE vt1.c0 END THEN (v0.c0 IN ()) WHEN (((t0.c24)) NOT BETWEEN ((vt1.c0)) AND ((t0.c24))) THEN (+ (vt1.c0)) WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)+(v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(t0.c24 COLLATE BINARY, CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY CASE WHEN CASE t0.c24  WHEN t0.c24 THEN v0.c0 ELSE vt1.c0 END THEN (v0.c0 IN ()) WHEN (((t0.c24)) NOT BETWEEN ((vt1.c0)) AND ((t0.c24))) THEN (+ (vt1.c0)) WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)+(v0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, v0 WHERE (rtreenode(t0.c24 COLLATE BINARY, CAST(v0.c0 AS BLOB))) ORDER BY CASE WHEN CASE t0.c24  WHEN t0.c24 THEN v0.c0 ELSE vt1.c0 END THEN (v0.c0 IN ()) WHEN (((t0.c24)) NOT BETWEEN ((vt1.c0)) AND ((t0.c24))) THEN (+ (vt1.c0)) WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)+(v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(t0.c24 COLLATE BINARY, CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY CASE WHEN CASE t0.c24  WHEN t0.c24 THEN v0.c0 ELSE vt1.c0 END THEN (v0.c0 IN ()) WHEN (((t0.c24)) NOT BETWEEN ((vt1.c0)) AND ((t0.c24))) THEN (+ (vt1.c0)) WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)+(v0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, v0 WHERE (rtreenode(t0.c24 COLLATE BINARY, CAST(v0.c0 AS BLOB))) ORDER BY CASE WHEN CASE t0.c24  WHEN t0.c24 THEN v0.c0 ELSE vt1.c0 END THEN (v0.c0 IN ()) WHEN (((t0.c24)) NOT BETWEEN ((vt1.c0)) AND ((t0.c24))) THEN (+ (vt1.c0)) WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)+(v0.c0)) END DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((NOT ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT ((+ (vt1.c0)))));
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (0x7f8aa27c) ORDER BY ((t0.c24)=(t0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0X7f8aa27c) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY ((t0.c24)=(t0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (0x7f8aa27c) ORDER BY ((t0.c24)=(t0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0X7f8aa27c) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY ((t0.c24)=(t0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE (0x7f8aa27c) ORDER BY ((t0.c24)=(t0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM vt1, v0 WHERE ((('HF澌)Ck矁') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('HF澌)Ck矁') NOTNULL)) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((('HF澌)Ck矁') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('HF澌)Ck矁') NOTNULL)) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((('HF澌)Ck矁') NOTNULL));
SELECT ALL * FROM vt1, t0 WHERE ((((t0.c24, t0.c24, t0.c0)) BETWEEN ((((9.66520938E8) NOT BETWEEN (t0.c0) AND (vt1.c0)), CASE vt1.c0  WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN 0.2743657829313272 WHEN t0.c24 THEN vt1.c0 END, ABS(t0.c0))) AND ((((t0.c24) BETWEEN (vt1.c0) AND (vt1.c0)), ((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c24)), CASE vt1.c0  WHEN t0.c24 THEN vt1.c0 ELSE t0.c24 END)))) ORDER BY ABS(0.8635530025509471) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c24, t0.c24, t0.c0)) BETWEEN ((((9.66520938E8) NOT BETWEEN (t0.c0) AND (vt1.c0)), CASE vt1.c0  WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN 0.2743657829313272 WHEN t0.c24 THEN vt1.c0 END, ABS(t0.c0))) AND ((((t0.c24) BETWEEN (vt1.c0) AND (vt1.c0)), ((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c24)), CASE vt1.c0  WHEN t0.c24 THEN vt1.c0 ELSE t0.c24 END)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ABS(0.8635530025509471) DESC);
SELECT ALL * FROM vt1, t0 WHERE ((((t0.c24, t0.c24, t0.c0)) BETWEEN ((((9.66520938E8) NOT BETWEEN (t0.c0) AND (vt1.c0)), CASE vt1.c0  WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN 0.2743657829313272 WHEN t0.c24 THEN vt1.c0 END, ABS(t0.c0))) AND ((((t0.c24) BETWEEN (vt1.c0) AND (vt1.c0)), ((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c24)), CASE vt1.c0  WHEN t0.c24 THEN vt1.c0 ELSE t0.c24 END)))) ORDER BY ABS(0.8635530025509471) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c24, t0.c24, t0.c0)) BETWEEN ((((9.66520938E8) NOT BETWEEN (t0.c0) AND (vt1.c0)), CASE vt1.c0  WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN 0.2743657829313272 WHEN t0.c24 THEN vt1.c0 END, ABS(t0.c0))) AND ((((t0.c24) BETWEEN (vt1.c0) AND (vt1.c0)), ((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c24)), CASE vt1.c0  WHEN t0.c24 THEN vt1.c0 ELSE t0.c24 END)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ABS(0.8635530025509471) DESC);
SELECT ALL * FROM vt1, t0 WHERE ((((t0.c24, t0.c24, t0.c0)) BETWEEN ((((9.66520938E8) NOT BETWEEN (t0.c0) AND (vt1.c0)), CASE vt1.c0  WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN 0.2743657829313272 WHEN t0.c24 THEN vt1.c0 END, ABS(t0.c0))) AND ((((t0.c24) BETWEEN (vt1.c0) AND (vt1.c0)), ((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c24)), CASE vt1.c0  WHEN t0.c24 THEN vt1.c0 ELSE t0.c24 END)))) ORDER BY ABS(0.8635530025509471) DESC;
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))AND(x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0)))AND(x'')) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))AND(x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0)))AND(x'')) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))AND(x'')) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, v0 INNER JOIN t0 ON (TYPEOF(v0.c0) IN ()) WHERE ((((((((((NOT (t0.c24)))OR(0.2893525534603977)))OR(t0.c24)))OR(((t0.c24) NOT BETWEEN (t0.c24) AND (vt1.c0)))))AND((t0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((NOT (t0.c24)))OR(0.2893525534603977)))OR(t0.c24)))OR(((t0.c24) NOT BETWEEN (t0.c24) AND (vt1.c0)))))AND((t0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt1, v0 INNER JOIN t0 ON (TYPEOF(v0.c0) IN ()));
SELECT COUNT(*) FROM vt1, v0 INNER JOIN t0 ON (TYPEOF(v0.c0) IN ()) WHERE ((((((((((NOT (t0.c24)))OR(0.2893525534603977)))OR(t0.c24)))OR(((t0.c24) NOT BETWEEN (t0.c24) AND (vt1.c0)))))AND((t0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((NOT (t0.c24)))OR(0.2893525534603977)))OR(t0.c24)))OR(((t0.c24) NOT BETWEEN (t0.c24) AND (vt1.c0)))))AND((t0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt1, v0 INNER JOIN t0 ON (TYPEOF(v0.c0) IN ()));
SELECT COUNT(*) FROM vt1, v0 INNER JOIN t0 ON (TYPEOF(v0.c0) IN ()) WHERE ((((((((((NOT (t0.c24)))OR(0.2893525534603977)))OR(t0.c24)))OR(((t0.c24) NOT BETWEEN (t0.c24) AND (vt1.c0)))))AND((t0.c0 IN (v0.c0)))));
SELECT ALL * FROM vt1, t0, v0 WHERE ((((t0.c0 IN ())) NOT NULL)) ORDER BY UNICODE(t0.c0) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY UNICODE(t0.c0) ASC);
SELECT ALL * FROM vt1, t0, v0 WHERE ((((t0.c0 IN ())) NOT NULL)) ORDER BY UNICODE(t0.c0) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY UNICODE(t0.c0) ASC);
SELECT ALL * FROM vt1, t0, v0 WHERE ((((t0.c0 IN ())) NOT NULL)) ORDER BY UNICODE(t0.c0) ASC;
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (((((t0.c24) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c24) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (((((t0.c24) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c24) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (((((t0.c24) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL));
SELECT * FROM v0, t0, vt1 WHERE (CAST(((t0.c24)>>(t0.c24)) AS BLOB)) ORDER BY (NOT (((t0.c24)&(NULL)))) DESC  NULLS LAST, ((((t0.c24)IS(vt1.c0))) IS FALSE), ((((((((v0.c0)AND(NULL)))AND(vt1.c0)))AND(v0.c0)))AND(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c24)>>(t0.c24)) AS BLOB)) IS TRUE)  as count FROM v0, t0, vt1 NOT INDEXED ORDER BY (NOT (((t0.c24)&(NULL)))) DESC  NULLS LAST, ((((t0.c24)IS(vt1.c0))) IS FALSE), ((((((((v0.c0)AND(NULL)))AND(vt1.c0)))AND(v0.c0)))AND(t0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM v0, t0, vt1 WHERE (CAST(((t0.c24)>>(t0.c24)) AS BLOB)) ORDER BY (NOT (((t0.c24)&(NULL)))) DESC  NULLS LAST, ((((t0.c24)IS(vt1.c0))) IS FALSE), ((((((((v0.c0)AND(NULL)))AND(vt1.c0)))AND(v0.c0)))AND(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c24)>>(t0.c24)) AS BLOB)) IS TRUE)  as count FROM v0, t0, vt1 NOT INDEXED ORDER BY (NOT (((t0.c24)&(NULL)))) DESC  NULLS LAST, ((((t0.c24)IS(vt1.c0))) IS FALSE), ((((((((v0.c0)AND(NULL)))AND(vt1.c0)))AND(v0.c0)))AND(t0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM v0, t0, vt1 WHERE (CAST(((t0.c24)>>(t0.c24)) AS BLOB)) ORDER BY (NOT (((t0.c24)&(NULL)))) DESC  NULLS LAST, ((((t0.c24)IS(vt1.c0))) IS FALSE), ((((((((v0.c0)AND(NULL)))AND(vt1.c0)))AND(v0.c0)))AND(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE (((CAST(NULL AS REAL)) NOTNULL)) ORDER BY ((NULL) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL)) NOTNULL)) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY ((NULL) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE (((CAST(NULL AS REAL)) NOTNULL)) ORDER BY ((NULL) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL)) NOTNULL)) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY ((NULL) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE (((CAST(NULL AS REAL)) NOTNULL)) ORDER BY ((NULL) NOTNULL) DESC;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON '-47579552' WHERE (((CASE t0.c0  WHEN t0.c24 THEN t0.c24 ELSE NULL END)&(((t0.c0) IS TRUE)))) ORDER BY ((json_type('')) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c24 THEN t0.c24 ELSE NULL END)&(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON '-47579552' ORDER BY ((json_type('')) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON '-47579552' WHERE (((CASE t0.c0  WHEN t0.c24 THEN t0.c24 ELSE NULL END)&(((t0.c0) IS TRUE)))) ORDER BY ((json_type('')) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c24 THEN t0.c24 ELSE NULL END)&(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON '-47579552' ORDER BY ((json_type('')) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON '-47579552' WHERE (((CASE t0.c0  WHEN t0.c24 THEN t0.c24 ELSE NULL END)&(((t0.c0) IS TRUE)))) ORDER BY ((json_type('')) ISNULL) ASC  NULLS LAST;
SELECT ALL * FROM v0, t0, vt1 WHERE ((- (((((t0.c24)OR(t0.c24)))AND(t0.c24)))));
SELECT SUM(count) FROM (SELECT (((- (((((t0.c24)OR(t0.c24)))AND(t0.c24))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL * FROM v0, t0, vt1 WHERE ((- (((((t0.c24)OR(t0.c24)))AND(t0.c24)))));
SELECT SUM(count) FROM (SELECT (((- (((((t0.c24)OR(t0.c24)))AND(t0.c24))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL * FROM v0, t0, vt1 WHERE ((- (((((t0.c24)OR(t0.c24)))AND(t0.c24)))));
SELECT COUNT(*) FROM vt1, t0 NATURAL JOIN v0 WHERE (CASE WHEN x'' THEN vt1.c0 COLLATE NOCASE END) ORDER BY (((t0.c24)) NOT BETWEEN ((((t0.c24)+(v0.c0)))) AND ((((t0.c0)>>(t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN v0 ORDER BY (((t0.c24)) NOT BETWEEN ((((t0.c24)+(v0.c0)))) AND ((((t0.c0)>>(t0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 NATURAL JOIN v0 WHERE (CASE WHEN x'' THEN vt1.c0 COLLATE NOCASE END) ORDER BY (((t0.c24)) NOT BETWEEN ((((t0.c24)+(v0.c0)))) AND ((((t0.c0)>>(t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN v0 ORDER BY (((t0.c24)) NOT BETWEEN ((((t0.c24)+(v0.c0)))) AND ((((t0.c0)>>(t0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 NATURAL JOIN v0 WHERE (CASE WHEN x'' THEN vt1.c0 COLLATE NOCASE END) ORDER BY (((t0.c24)) NOT BETWEEN ((((t0.c24)+(v0.c0)))) AND ((((t0.c0)>>(t0.c0))))) DESC  NULLS LAST;
SELECT * FROM v0, vt1 WHERE ((~ (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((~ (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((~ (((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE ((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0))  WHEN vt1.c0 COLLATE RTRIM THEN CAST(vt1.c0 AS BLOB) ELSE ((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0))  WHEN vt1.c0 COLLATE RTRIM THEN CAST(vt1.c0 AS BLOB) ELSE ((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE ((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0))  WHEN vt1.c0 COLLATE RTRIM THEN CAST(vt1.c0 AS BLOB) ELSE ((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0))  WHEN vt1.c0 COLLATE RTRIM THEN CAST(vt1.c0 AS BLOB) ELSE ((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE ((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0))  WHEN vt1.c0 COLLATE RTRIM THEN CAST(vt1.c0 AS BLOB) ELSE ((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS REAL)) BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN ()))) WHERE ((((((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c24)), ((v0.c0)>=(x'')), ((t0.c0)IS NOT('238398493'))))<((((t0.c0) IS FALSE), (NOT (t0.c0)), (~ (t0.c24)))))) ORDER BY ((t0.c24 COLLATE RTRIM)OR(((t0.c0)GLOB(t0.c24)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c24)), ((v0.c0)>=(x'')), ((t0.c0)IS NOT('238398493'))))<((((t0.c0) IS FALSE), (NOT (t0.c0)), (~ (t0.c24)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS REAL)) BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN ()))) ORDER BY ((t0.c24 COLLATE RTRIM)OR(((t0.c0)GLOB(t0.c24)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS REAL)) BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN ()))) WHERE ((((((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c24)), ((v0.c0)>=(x'')), ((t0.c0)IS NOT('238398493'))))<((((t0.c0) IS FALSE), (NOT (t0.c0)), (~ (t0.c24)))))) ORDER BY ((t0.c24 COLLATE RTRIM)OR(((t0.c0)GLOB(t0.c24)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c24)), ((v0.c0)>=(x'')), ((t0.c0)IS NOT('238398493'))))<((((t0.c0) IS FALSE), (NOT (t0.c0)), (~ (t0.c24)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS REAL)) BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN ()))) ORDER BY ((t0.c24 COLLATE RTRIM)OR(((t0.c0)GLOB(t0.c24)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS REAL)) BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN ()))) WHERE ((((((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c24)), ((v0.c0)>=(x'')), ((t0.c0)IS NOT('238398493'))))<((((t0.c0) IS FALSE), (NOT (t0.c0)), (~ (t0.c24)))))) ORDER BY ((t0.c24 COLLATE RTRIM)OR(((t0.c0)GLOB(t0.c24)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, v0 WHERE (CAST((- (v0.c0)) AS INTEGER)) ORDER BY (+ (((v0.c0) NOT BETWEEN ('2139791996') AND (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY (+ (((v0.c0) NOT BETWEEN ('2139791996') AND (v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, v0 WHERE (CAST((- (v0.c0)) AS INTEGER)) ORDER BY (+ (((v0.c0) NOT BETWEEN ('2139791996') AND (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY (+ (((v0.c0) NOT BETWEEN ('2139791996') AND (v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, v0 WHERE (CAST((- (v0.c0)) AS INTEGER)) ORDER BY (+ (((v0.c0) NOT BETWEEN ('2139791996') AND (v0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt1 WHERE (LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.01886402687422084));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.01886402687422084)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.01886402687422084));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.01886402687422084)) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.01886402687422084));
SELECT ALL * FROM v0 INNER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY WHERE ((- (((((v0.c0)OR(vt1.c0)))AND(t0.c0))))) ORDER BY (~ (((v0.c0) IS FALSE)))  NULLS FIRST, ((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((v0.c0)OR(vt1.c0)))AND(t0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY ORDER BY (~ (((v0.c0) IS FALSE)))  NULLS FIRST, ((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM v0 INNER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY WHERE ((- (((((v0.c0)OR(vt1.c0)))AND(t0.c0))))) ORDER BY (~ (((v0.c0) IS FALSE)))  NULLS FIRST, ((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((v0.c0)OR(vt1.c0)))AND(t0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY ORDER BY (~ (((v0.c0) IS FALSE)))  NULLS FIRST, ((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM v0 INNER JOIN t0 ON NULL RIGHT OUTER JOIN vt1 ON ((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY WHERE ((- (((((v0.c0)OR(vt1.c0)))AND(t0.c0))))) ORDER BY (~ (((v0.c0) IS FALSE)))  NULLS FIRST, ((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0)) COLLATE RTRIM ASC;
SELECT * FROM t0, vt1, v0 WHERE (NULL) ORDER BY ((((((((((((((t0.c0)AND(vt1.c0)))AND('>%%KDO')))OR(t0.c24)))OR(v0.c0)))OR(t0.c0)))OR(t0.c0)))-((NOT (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY ((((((((((((((t0.c0)AND(vt1.c0)))AND('>%%KDO')))OR(t0.c24)))OR(v0.c0)))OR(t0.c0)))OR(t0.c0)))-((NOT (v0.c0)))) DESC);
SELECT * FROM t0, vt1, v0 WHERE (NULL) ORDER BY ((((((((((((((t0.c0)AND(vt1.c0)))AND('>%%KDO')))OR(t0.c24)))OR(v0.c0)))OR(t0.c0)))OR(t0.c0)))-((NOT (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1, v0 ORDER BY ((((((((((((((t0.c0)AND(vt1.c0)))AND('>%%KDO')))OR(t0.c24)))OR(v0.c0)))OR(t0.c0)))OR(t0.c0)))-((NOT (v0.c0)))) DESC);
SELECT * FROM t0, vt1, v0 WHERE (NULL) ORDER BY ((((((((((((((t0.c0)AND(vt1.c0)))AND('>%%KDO')))OR(t0.c24)))OR(v0.c0)))OR(t0.c0)))OR(t0.c0)))-((NOT (v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)) BETWEEN ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(354778041)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(354778041)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 END))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)) BETWEEN ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(354778041)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(354778041)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 END))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)) BETWEEN ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(354778041)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 END))) DESC;
SELECT COUNT(*) FROM v0, t0, vt1 WHERE (((((v0.c0 COLLATE RTRIM)AND(CAST(t0.c0 AS BLOB))))OR(((vt1.c0) IS TRUE)))) ORDER BY (((t0.c24)) NOT BETWEEN ((v0.c0)) AND (((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)AND(CAST(t0.c0 AS BLOB))))OR(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY (((t0.c24)) NOT BETWEEN ((v0.c0)) AND (((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ASC);
SELECT COUNT(*) FROM v0, t0, vt1 WHERE (((((v0.c0 COLLATE RTRIM)AND(CAST(t0.c0 AS BLOB))))OR(((vt1.c0) IS TRUE)))) ORDER BY (((t0.c24)) NOT BETWEEN ((v0.c0)) AND (((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)AND(CAST(t0.c0 AS BLOB))))OR(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY (((t0.c24)) NOT BETWEEN ((v0.c0)) AND (((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ASC);
SELECT COUNT(*) FROM v0, t0, vt1 WHERE (((((v0.c0 COLLATE RTRIM)AND(CAST(t0.c0 AS BLOB))))OR(((vt1.c0) IS TRUE)))) ORDER BY (((t0.c24)) NOT BETWEEN ((v0.c0)) AND (((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ASC;
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE ((((((((vt1.c0, v0.c0, t0.c0))==((NULL, t0.c0, v0.c0))))AND(((t0.c24)%(t0.c0)))))AND(((((v0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, v0.c0, t0.c0))==((NULL, t0.c0, v0.c0))))AND(((t0.c24)%(t0.c0)))))AND(((((v0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE ((((((((vt1.c0, v0.c0, t0.c0))==((NULL, t0.c0, v0.c0))))AND(((t0.c24)%(t0.c0)))))AND(((((v0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, v0.c0, t0.c0))==((NULL, t0.c0, v0.c0))))AND(((t0.c24)%(t0.c0)))))AND(((((v0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE ((((((((vt1.c0, v0.c0, t0.c0))==((NULL, t0.c0, v0.c0))))AND(((t0.c24)%(t0.c0)))))AND(((((v0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT * FROM t0, v0 WHERE (TIME((((t0.c24))<=((v0.c0))), v0.c0, v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TIME((((t0.c24))<=((v0.c0))), v0.c0, v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (TIME((((t0.c24))<=((v0.c0))), v0.c0, v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TIME((((t0.c24))<=((v0.c0))), v0.c0, v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (TIME((((t0.c24))<=((v0.c0))), v0.c0, v0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM t0 WHERE (((((HEX(t0.c24))AND(((((t0.c0)OR(t0.c0)))AND(t0.c24)))))AND((- ('')))));
SELECT SUM(count) FROM (SELECT ((((((HEX(t0.c24))AND(((((t0.c0)OR(t0.c0)))AND(t0.c24)))))AND((- (''))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((HEX(t0.c24))AND(((((t0.c0)OR(t0.c0)))AND(t0.c24)))))AND((- ('')))));
SELECT SUM(count) FROM (SELECT ((((((HEX(t0.c24))AND(((((t0.c0)OR(t0.c0)))AND(t0.c24)))))AND((- (''))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((HEX(t0.c24))AND(((((t0.c0)OR(t0.c0)))AND(t0.c24)))))AND((- ('')))));
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (v0.c0);
SELECT * FROM t0, vt1 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN t0.c24 ELSE t0.c0 END)+((t0.c24 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN t0.c0 THEN t0.c24 ELSE t0.c0 END)+((t0.c24 IN ())))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN t0.c24 ELSE t0.c0 END)+((t0.c24 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN t0.c0 THEN t0.c24 ELSE t0.c0 END)+((t0.c24 IN ())))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN t0.c24 ELSE t0.c0 END)+((t0.c24 IN ()))));
SELECT COUNT(*) FROM t0, vt1, v0 WHERE ((~ (((t0.c24) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c24) NOT BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE ((~ (((t0.c24) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c24) NOT BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE ((~ (((t0.c24) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM t0, vt1 WHERE (((LIKELIHOOD(DISTINCT t0.c24, 0.2173093397387632))<=(CAST(t0.c24 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT t0.c24, 0.2173093397387632))<=(CAST(t0.c24 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((LIKELIHOOD(DISTINCT t0.c24, 0.2173093397387632))<=(CAST(t0.c24 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT t0.c24, 0.2173093397387632))<=(CAST(t0.c24 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((LIKELIHOOD(DISTINCT t0.c24, 0.2173093397387632))<=(CAST(t0.c24 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CAST((((vt1.c0))<((t0.c24))) AS TEXT)) ORDER BY ((((t0.c24 COLLATE RTRIM)AND((- (t0.c24)))))OR((- (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0))<((t0.c24))) AS TEXT)) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c24 COLLATE RTRIM)AND((- (t0.c24)))))OR((- (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CAST((((vt1.c0))<((t0.c24))) AS TEXT)) ORDER BY ((((t0.c24 COLLATE RTRIM)AND((- (t0.c24)))))OR((- (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0))<((t0.c24))) AS TEXT)) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c24 COLLATE RTRIM)AND((- (t0.c24)))))OR((- (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CAST((((vt1.c0))<((t0.c24))) AS TEXT)) ORDER BY ((((t0.c24 COLLATE RTRIM)AND((- (t0.c24)))))OR((- (vt1.c0)))) ASC;
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))||((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))||((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))||((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))||((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))||((vt1.c0 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((~ (((t0.c24)==(t0.c24))))) ORDER BY (((t0.c24, t0.c0, t0.c0, NULL, t0.c24))>((t0.c24, t0.c24, v0.c0, t0.c0, t0.c0))) COLLATE NOCASE DESC, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c24)==(t0.c24))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c24, t0.c0, t0.c0, NULL, t0.c24))>((t0.c24, t0.c24, v0.c0, t0.c0, t0.c0))) COLLATE NOCASE DESC, NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((~ (((t0.c24)==(t0.c24))))) ORDER BY (((t0.c24, t0.c0, t0.c0, NULL, t0.c24))>((t0.c24, t0.c24, v0.c0, t0.c0, t0.c0))) COLLATE NOCASE DESC, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c24)==(t0.c24))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c24, t0.c0, t0.c0, NULL, t0.c24))>((t0.c24, t0.c24, v0.c0, t0.c0, t0.c0))) COLLATE NOCASE DESC, NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((~ (((t0.c24)==(t0.c24))))) ORDER BY (((t0.c24, t0.c0, t0.c0, NULL, t0.c24))>((t0.c24, t0.c24, v0.c0, t0.c0, t0.c0))) COLLATE NOCASE DESC, NULL ASC  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON TYPEOF(UNLIKELY(DISTINCT t0.c0)) FULL OUTER JOIN t0 ON ((((0xffffffffbdff47b5) NOT BETWEEN (t0.c24) AND (v0.c0)))<=(1967301817)) WHERE (CASE WHEN ((((t0.c24)AND(x'')))OR(v0.c0)) THEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c0)) ELSE json_quote(v0.c0) END) ORDER BY ((t0.c24) NOT BETWEEN (((0.6243337884402305) IS TRUE)) AND (((v0.c0)<<(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c24)AND(x'')))OR(v0.c0)) THEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c0)) ELSE json_quote(v0.c0) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON TYPEOF(UNLIKELY(DISTINCT t0.c0)) FULL OUTER JOIN t0 ON ((((0xffffffffbdff47b5) NOT BETWEEN (t0.c24) AND (v0.c0)))<=(1967301817)) ORDER BY ((t0.c24) NOT BETWEEN (((0.6243337884402305) IS TRUE)) AND (((v0.c0)<<(v0.c0)))) ASC);
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON TYPEOF(UNLIKELY(DISTINCT t0.c0)) FULL OUTER JOIN t0 ON ((((0xffffffffbdff47b5) NOT BETWEEN (t0.c24) AND (v0.c0)))<=(1967301817)) WHERE (CASE WHEN ((((t0.c24)AND(x'')))OR(v0.c0)) THEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c0)) ELSE json_quote(v0.c0) END) ORDER BY ((t0.c24) NOT BETWEEN (((0.6243337884402305) IS TRUE)) AND (((v0.c0)<<(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c24)AND(x'')))OR(v0.c0)) THEN ((t0.c24) BETWEEN (t0.c24) AND (t0.c0)) ELSE json_quote(v0.c0) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON TYPEOF(UNLIKELY(DISTINCT t0.c0)) FULL OUTER JOIN t0 ON ((((0xffffffffbdff47b5) NOT BETWEEN (t0.c24) AND (v0.c0)))<=(1967301817)) ORDER BY ((t0.c24) NOT BETWEEN (((0.6243337884402305) IS TRUE)) AND (((v0.c0)<<(v0.c0)))) ASC);
SELECT * FROM v0, vt1 WHERE (UNLIKELY(DISTINCT ((((((((vt1.c0)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(v0.c0)))) ORDER BY (~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((((((((vt1.c0)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(v0.c0)))) IS TRUE)  as count FROM v0, vt1 ORDER BY (~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST);
SELECT * FROM v0, vt1 WHERE (UNLIKELY(DISTINCT ((((((((vt1.c0)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(v0.c0)))) ORDER BY (~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((((((((vt1.c0)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(v0.c0)))) IS TRUE)  as count FROM v0, vt1 ORDER BY (~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST);
SELECT * FROM v0, vt1 WHERE (UNLIKELY(DISTINCT ((((((((vt1.c0)OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(v0.c0)))) ORDER BY (~ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (NULL) ORDER BY CAST(load_extension(v0.c0) AS INTEGER), (((((t0.c24, t0.c0, x'34e4'))!=((t0.c24, t0.c24, t0.c24)))) NOT BETWEEN (CASE t0.c0  WHEN t0.c24 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END) AND ((- (v0.c0))))  NULLS FIRST, (((CAST(t0.c0 AS REAL), ((t0.c24)/(t0.c0)), COALESCE(DISTINCT vt1.c0, vt1.c0)))>=((CAST(v0.c0 AS REAL), (t0.c24 IN ()), HEX(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY CAST(load_extension(v0.c0) AS INTEGER), (((((t0.c24, t0.c0, x'34e4'))<>((t0.c24, t0.c24, t0.c24)))) NOT BETWEEN (CASE t0.c0  WHEN t0.c24 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END) AND ((- (v0.c0))))  NULLS FIRST, (((CAST(t0.c0 AS REAL), ((t0.c24)/(t0.c0)), COALESCE(DISTINCT vt1.c0, vt1.c0)))>=((CAST(v0.c0 AS REAL), (t0.c24 IN ()), HEX(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (NULL) ORDER BY CAST(load_extension(v0.c0) AS INTEGER), (((((t0.c24, t0.c0, x'34e4'))!=((t0.c24, t0.c24, t0.c24)))) NOT BETWEEN (CASE t0.c0  WHEN t0.c24 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END) AND ((- (v0.c0))))  NULLS FIRST, (((CAST(t0.c0 AS REAL), ((t0.c24)/(t0.c0)), COALESCE(DISTINCT vt1.c0, vt1.c0)))>=((CAST(v0.c0 AS REAL), (t0.c24 IN ()), HEX(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY CAST(load_extension(v0.c0) AS INTEGER), (((((t0.c24, t0.c0, x'34e4'))<>((t0.c24, t0.c24, t0.c24)))) NOT BETWEEN (CASE t0.c0  WHEN t0.c24 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END) AND ((- (v0.c0))))  NULLS FIRST, (((CAST(t0.c0 AS REAL), ((t0.c24)/(t0.c0)), COALESCE(DISTINCT vt1.c0, vt1.c0)))>=((CAST(v0.c0 AS REAL), (t0.c24 IN ()), HEX(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0, vt1 WHERE (NULL) ORDER BY CAST(load_extension(v0.c0) AS INTEGER), (((((t0.c24, t0.c0, x'34e4'))!=((t0.c24, t0.c24, t0.c24)))) NOT BETWEEN (CASE t0.c0  WHEN t0.c24 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END) AND ((- (v0.c0))))  NULLS FIRST, (((CAST(t0.c0 AS REAL), ((t0.c24)/(t0.c0)), COALESCE(DISTINCT vt1.c0, vt1.c0)))>=((CAST(v0.c0 AS REAL), (t0.c24 IN ()), HEX(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (x'') ORDER BY ((((v0.c0)-(t0.c0)))OR(CASE WHEN t0.c24 THEN '0\b^v' WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN v0.c0 ELSE t0.c24 END))  NULLS LAST, (~ (LIKELY(t0.c0)))  NULLS LAST, t0.c0  NULLS FIRST, (((t0.c24)<(t0.c24)) IN (x'f4ac' COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0)-(t0.c0)))OR(CASE WHEN t0.c24 THEN '0\b^v' WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN v0.c0 ELSE t0.c24 END))  NULLS LAST, (~ (LIKELY(t0.c0)))  NULLS LAST, t0.c0  NULLS FIRST, (((t0.c24)<(t0.c24)) IN (x'f4ac' COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (x'') ORDER BY ((((v0.c0)-(t0.c0)))OR(CASE WHEN t0.c24 THEN '0\b^v' WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN v0.c0 ELSE t0.c24 END))  NULLS LAST, (~ (LIKELY(t0.c0)))  NULLS LAST, t0.c0  NULLS FIRST, (((t0.c24)<(t0.c24)) IN (x'f4ac' COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0)-(t0.c0)))OR(CASE WHEN t0.c24 THEN '0\b^v' WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN v0.c0 ELSE t0.c24 END))  NULLS LAST, (~ (LIKELY(t0.c0)))  NULLS LAST, t0.c0  NULLS FIRST, (((t0.c24)<(t0.c24)) IN (x'f4ac' COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (x'') ORDER BY ((((v0.c0)-(t0.c0)))OR(CASE WHEN t0.c24 THEN '0\b^v' WHEN t0.c24 THEN t0.c24 WHEN t0.c24 THEN v0.c0 ELSE t0.c24 END))  NULLS LAST, (~ (LIKELY(t0.c0)))  NULLS LAST, t0.c0  NULLS FIRST, (((t0.c24)<(t0.c24)) IN (x'f4ac' COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN t0 ON vt1.c0 WHERE ((NOT (((('0.5517819457779639'))>=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((('0.5517819457779639'))>=((t0.c0)))))) IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN t0 ON vt1.c0);
SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN t0 ON vt1.c0 WHERE ((NOT (((('0.5517819457779639'))>=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((('0.5517819457779639'))>=((t0.c0)))))) IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN t0 ON vt1.c0);
SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN t0 ON vt1.c0 WHERE ((NOT (((('0.5517819457779639'))>=((t0.c0))))));
SELECT COUNT(*) FROM vt1, t0 WHERE ('2139791996');
SELECT SUM(count) FROM (SELECT ALL (('2139791996') IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ('2139791996');
SELECT SUM(count) FROM (SELECT ALL (('2139791996') IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ('2139791996');
SELECT * FROM v0, t0 WHERE (CASE WHEN t0.c24 COLLATE BINARY THEN ((v0.c0)/(t0.c24)) END) ORDER BY (((((v0.c0))==((t0.c0)))) IS FALSE)  NULLS LAST, JULIANDAY(((v0.c0) IS FALSE), ((v0.c0)GLOB(t0.c24)), t0.c0, (t0.c24 IN ()), (- (v0.c0))) DESC, CAST(((t0.c0)IS(0x6f5818e9)) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c24 COLLATE BINARY THEN ((v0.c0)/(t0.c24)) END) IS TRUE)  as count FROM v0, t0 ORDER BY (((((v0.c0))=((t0.c0)))) IS FALSE)  NULLS LAST, JULIANDAY(((v0.c0) IS FALSE), ((v0.c0)GLOB(t0.c24)), t0.c0, (t0.c24 IN ()), (- (v0.c0))) DESC, CAST(((t0.c0)IS(0X6f5818e9)) AS REAL));
SELECT * FROM v0, t0 WHERE (CASE WHEN t0.c24 COLLATE BINARY THEN ((v0.c0)/(t0.c24)) END) ORDER BY (((((v0.c0))==((t0.c0)))) IS FALSE)  NULLS LAST, JULIANDAY(((v0.c0) IS FALSE), ((v0.c0)GLOB(t0.c24)), t0.c0, (t0.c24 IN ()), (- (v0.c0))) DESC, CAST(((t0.c0)IS(0x6f5818e9)) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c24 COLLATE BINARY THEN ((v0.c0)/(t0.c24)) END) IS TRUE)  as count FROM v0, t0 ORDER BY (((((v0.c0))=((t0.c0)))) IS FALSE)  NULLS LAST, JULIANDAY(((v0.c0) IS FALSE), ((v0.c0)GLOB(t0.c24)), t0.c0, (t0.c24 IN ()), (- (v0.c0))) DESC, CAST(((t0.c0)IS(0X6f5818e9)) AS REAL));
SELECT * FROM v0, t0 WHERE (CASE WHEN t0.c24 COLLATE BINARY THEN ((v0.c0)/(t0.c24)) END) ORDER BY (((((v0.c0))==((t0.c0)))) IS FALSE)  NULLS LAST, JULIANDAY(((v0.c0) IS FALSE), ((v0.c0)GLOB(t0.c24)), t0.c0, (t0.c24 IN ()), (- (v0.c0))) DESC, CAST(((t0.c0)IS(0x6f5818e9)) AS REAL);
SELECT COUNT(*) FROM v0, vt1 WHERE (((0.2807260992886186)%((vt1.c0 IN (v0.c0, v0.c0))))) ORDER BY CAST(((((vt1.c0)AND(v0.c0)))OR(v0.c0)) AS BLOB)  NULLS FIRST, v0.c0 ASC, ((((vt1.c0)GLOB(v0.c0)))*(v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.2807260992886186)%((vt1.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((((vt1.c0)AND(v0.c0)))OR(v0.c0)) AS BLOB)  NULLS FIRST, v0.c0 ASC, ((((vt1.c0)GLOB(v0.c0)))*(v0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1 WHERE (((0.2807260992886186)%((vt1.c0 IN (v0.c0, v0.c0))))) ORDER BY CAST(((((vt1.c0)AND(v0.c0)))OR(v0.c0)) AS BLOB)  NULLS FIRST, v0.c0 ASC, ((((vt1.c0)GLOB(v0.c0)))*(v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.2807260992886186)%((vt1.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((((vt1.c0)AND(v0.c0)))OR(v0.c0)) AS BLOB)  NULLS FIRST, v0.c0 ASC, ((((vt1.c0)GLOB(v0.c0)))*(v0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1 WHERE (((0.2807260992886186)%((vt1.c0 IN (v0.c0, v0.c0))))) ORDER BY CAST(((((vt1.c0)AND(v0.c0)))OR(v0.c0)) AS BLOB)  NULLS FIRST, v0.c0 ASC, ((((vt1.c0)GLOB(v0.c0)))*(v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM vt1, v0 WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE ((v0.c0)LIKE(vt1.c0))  WHEN v0.c0 THEN CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN '\n率60' WHEN ((((vt1.c0)AND(v0.c0)))OR(v0.c0)) THEN (vt1.c0 IN ()) ELSE ((vt1.c0)%(vt1.c0)) END) ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN v0.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN '~밀' THEN vt1.c0 ELSE vt1.c0 END) AND (v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)LIKE(vt1.c0))  WHEN v0.c0 THEN CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN '\n率60' WHEN ((((vt1.c0)AND(v0.c0)))OR(v0.c0)) THEN (vt1.c0 IN ()) ELSE ((vt1.c0)%(vt1.c0)) END) IS TRUE)  as count FROM v0, vt1 ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN v0.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN '~밀' THEN vt1.c0 ELSE vt1.c0 END) AND (v0.c0)) DESC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE ((v0.c0)LIKE(vt1.c0))  WHEN v0.c0 THEN CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN '\n率60' WHEN ((((vt1.c0)AND(v0.c0)))OR(v0.c0)) THEN (vt1.c0 IN ()) ELSE ((vt1.c0)%(vt1.c0)) END) ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN v0.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN '~밀' THEN vt1.c0 ELSE vt1.c0 END) AND (v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)LIKE(vt1.c0))  WHEN v0.c0 THEN CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN '\n率60' WHEN ((((vt1.c0)AND(v0.c0)))OR(v0.c0)) THEN (vt1.c0 IN ()) ELSE ((vt1.c0)%(vt1.c0)) END) IS TRUE)  as count FROM v0, vt1 ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN v0.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN '~밀' THEN vt1.c0 ELSE vt1.c0 END) AND (v0.c0)) DESC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CASE ((v0.c0)LIKE(vt1.c0))  WHEN v0.c0 THEN CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN '\n率60' WHEN ((((vt1.c0)AND(v0.c0)))OR(v0.c0)) THEN (vt1.c0 IN ()) ELSE ((vt1.c0)%(vt1.c0)) END) ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN v0.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN '~밀' THEN vt1.c0 ELSE vt1.c0 END) AND (v0.c0)) DESC;
SELECT COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (((((t0.c24)OR(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c24)OR(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR((~ (t0.c0))))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt1 ON vt1.c0);
SELECT COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (((((t0.c24)OR(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c24)OR(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR((~ (t0.c0))))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt1 ON vt1.c0);
SELECT COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (((((t0.c24)OR(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR((~ (t0.c0)))));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)OR(t0.c0))))==(((((x'')) NOT BETWEEN ((t0.c24)) AND ((vt1.c0)))))) WHERE ((+ ((((t0.c0, vt1.c0, vt1.c0, t0.c0, t0.c24))==((t0.c24, vt1.c0, NULL, vt1.c0, t0.c24))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t0.c0, vt1.c0, vt1.c0, t0.c0, t0.c24))=((t0.c24, vt1.c0, NULL, vt1.c0, t0.c24)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)OR(t0.c0))))==(((((x'')) NOT BETWEEN ((t0.c24)) AND ((vt1.c0)))))));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)OR(t0.c0))))==(((((x'')) NOT BETWEEN ((t0.c24)) AND ((vt1.c0)))))) WHERE ((+ ((((t0.c0, vt1.c0, vt1.c0, t0.c0, t0.c24))==((t0.c24, vt1.c0, NULL, vt1.c0, t0.c24))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t0.c0, vt1.c0, vt1.c0, t0.c0, t0.c24))=((t0.c24, vt1.c0, NULL, vt1.c0, t0.c24)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)OR(t0.c0))))==(((((x'')) NOT BETWEEN ((t0.c24)) AND ((vt1.c0)))))));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)OR(t0.c0))))==(((((x'')) NOT BETWEEN ((t0.c24)) AND ((vt1.c0)))))) WHERE ((+ ((((t0.c0, vt1.c0, vt1.c0, t0.c0, t0.c24))==((t0.c24, vt1.c0, NULL, vt1.c0, t0.c24))))));
SELECT * FROM t0, v0 FULL OUTER JOIN vt1 ON (((ABS(DISTINCT v0.c0), CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE BINARY, ((v0.c0) ISNULL), TYPEOF(DISTINCT t0.c0)))>(((NOT (' p-\n')), t0.c24 COLLATE BINARY, ((t0.c24) NOT NULL), ((vt1.c0)<<(vt1.c0)), v0.c0 COLLATE BINARY))) WHERE (((((((((t0.c24)OR(t0.c0)))OR(vt1.c0)))OR((((t0.c24, t0.c24, v0.c0)) NOT BETWEEN ((t0.c0, v0.c0, 0.6722654313689499)) AND ((v0.c0, 2087655778, t0.c24))))))AND(((vt1.c0) IS FALSE)))) ORDER BY t0.c24  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c24)OR(t0.c0)))OR(vt1.c0)))OR((((t0.c24, t0.c24, v0.c0)) NOT BETWEEN ((t0.c0, v0.c0, 0.6722654313689499)) AND ((v0.c0, 2087655778, t0.c24))))))AND(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt1 ON (((ABS(DISTINCT v0.c0), CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE BINARY, ((v0.c0) ISNULL), TYPEOF(DISTINCT t0.c0)))>(((NOT (' p-\n')), t0.c24 COLLATE BINARY, ((t0.c24) NOT NULL), ((vt1.c0)<<(vt1.c0)), v0.c0 COLLATE BINARY))) ORDER BY t0.c24  NULLS FIRST);
SELECT * FROM t0, v0 FULL OUTER JOIN vt1 ON (((ABS(DISTINCT v0.c0), CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE BINARY, ((v0.c0) ISNULL), TYPEOF(DISTINCT t0.c0)))>(((NOT (' p-\n')), t0.c24 COLLATE BINARY, ((t0.c24) NOT NULL), ((vt1.c0)<<(vt1.c0)), v0.c0 COLLATE BINARY))) WHERE (((((((((t0.c24)OR(t0.c0)))OR(vt1.c0)))OR((((t0.c24, t0.c24, v0.c0)) NOT BETWEEN ((t0.c0, v0.c0, 0.6722654313689499)) AND ((v0.c0, 2087655778, t0.c24))))))AND(((vt1.c0) IS FALSE)))) ORDER BY t0.c24  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c24)OR(t0.c0)))OR(vt1.c0)))OR((((t0.c24, t0.c24, v0.c0)) NOT BETWEEN ((t0.c0, v0.c0, 0.6722654313689499)) AND ((v0.c0, 2087655778, t0.c24))))))AND(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt1 ON (((ABS(DISTINCT v0.c0), CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE BINARY, ((v0.c0) ISNULL), TYPEOF(DISTINCT t0.c0)))>(((NOT (' p-\n')), t0.c24 COLLATE BINARY, ((t0.c24) NOT NULL), ((vt1.c0)<<(vt1.c0)), v0.c0 COLLATE BINARY))) ORDER BY t0.c24  NULLS FIRST);
SELECT * FROM t0, v0 FULL OUTER JOIN vt1 ON (((ABS(DISTINCT v0.c0), CAST(t0.c0 AS NUMERIC), t0.c0 COLLATE BINARY, ((v0.c0) ISNULL), TYPEOF(DISTINCT t0.c0)))>(((NOT (' p-\n')), t0.c24 COLLATE BINARY, ((t0.c24) NOT NULL), ((vt1.c0)<<(vt1.c0)), v0.c0 COLLATE BINARY))) WHERE (((((((((t0.c24)OR(t0.c0)))OR(vt1.c0)))OR((((t0.c24, t0.c24, v0.c0)) NOT BETWEEN ((t0.c0, v0.c0, 0.6722654313689499)) AND ((v0.c0, 2087655778, t0.c24))))))AND(((vt1.c0) IS FALSE)))) ORDER BY t0.c24  NULLS FIRST;
SELECT * FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS NUMERIC));
SELECT * FROM t0, vt1 WHERE ((((~ (t0.c24))) NOT BETWEEN ((~ (x''))) AND (((((t0.c24)AND(t0.c24)))OR(t0.c24))))) ORDER BY json_object((vt1.c0 IN ()), ((t0.c0)/(t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c24))) NOT BETWEEN ((~ (x''))) AND (((((t0.c24)AND(t0.c24)))OR(t0.c24))))) IS TRUE)  as count FROM t0, vt1 ORDER BY json_object((vt1.c0 IN ()), ((t0.c0)/(t0.c0)))  NULLS LAST);
SELECT * FROM t0, vt1 WHERE ((((~ (t0.c24))) NOT BETWEEN ((~ (x''))) AND (((((t0.c24)AND(t0.c24)))OR(t0.c24))))) ORDER BY json_object((vt1.c0 IN ()), ((t0.c0)/(t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c24))) NOT BETWEEN ((~ (x''))) AND (((((t0.c24)AND(t0.c24)))OR(t0.c24))))) IS TRUE)  as count FROM t0, vt1 ORDER BY json_object((vt1.c0 IN ()), ((t0.c0)/(t0.c0)))  NULLS LAST);
SELECT * FROM t0, vt1 WHERE ((((~ (t0.c24))) NOT BETWEEN ((~ (x''))) AND (((((t0.c24)AND(t0.c24)))OR(t0.c24))))) ORDER BY json_object((vt1.c0 IN ()), ((t0.c0)/(t0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))>>(((vt1.c0) IS FALSE))) WHERE (CAST(v0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (~ (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))>>(((vt1.c0) IS FALSE))) ORDER BY (~ (x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))>>(((vt1.c0) IS FALSE))) WHERE (CAST(v0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (~ (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))>>(((vt1.c0) IS FALSE))) ORDER BY (~ (x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))>>(((vt1.c0) IS FALSE))) WHERE (CAST(v0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (~ (x''))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)<>(vt1.c0)))) AND ((((((((((v0.c0)AND(v0.c0)))AND('354778041')))AND(vt1.c0)))OR(v0.c0)))))) ORDER BY CAST(((vt1.c0)GLOB(vt1.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0)<>(vt1.c0)))) AND ((((((((((v0.c0)AND(v0.c0)))AND('354778041')))AND(vt1.c0)))OR(v0.c0)))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((vt1.c0)GLOB(vt1.c0)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)<>(vt1.c0)))) AND ((((((((((v0.c0)AND(v0.c0)))AND('354778041')))AND(vt1.c0)))OR(v0.c0)))))) ORDER BY CAST(((vt1.c0)GLOB(vt1.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0)<>(vt1.c0)))) AND ((((((((((v0.c0)AND(v0.c0)))AND('354778041')))AND(vt1.c0)))OR(v0.c0)))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((vt1.c0)GLOB(vt1.c0)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)<>(vt1.c0)))) AND ((((((((((v0.c0)AND(v0.c0)))AND('354778041')))AND(vt1.c0)))OR(v0.c0)))))) ORDER BY CAST(((vt1.c0)GLOB(vt1.c0)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM v0, t0, vt1 WHERE (CAST(t0.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL * FROM v0, t0, vt1 WHERE (CAST(t0.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL * FROM v0, t0, vt1 WHERE (CAST(t0.c0 COLLATE RTRIM AS TEXT));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY (((((((((((((((('g')OR(x'')))OR(vt1.c0)))OR(vt1.c0)))AND(x'')))AND(json(NULL))))OR((vt1.c0 IN ()))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST, (- (CAST('%\nyX''6s并' AS REAL)))  NULLS FIRST, ((vt1.c0)=(vt1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((((((('g')OR(x'')))OR(vt1.c0)))OR(vt1.c0)))AND(x'')))AND(json(NULL))))OR((vt1.c0 IN ()))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST, (- (CAST('%\nyX''6s并' AS REAL)))  NULLS FIRST, ((vt1.c0)=(vt1.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY (((((((((((((((('g')OR(x'')))OR(vt1.c0)))OR(vt1.c0)))AND(x'')))AND(json(NULL))))OR((vt1.c0 IN ()))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST, (- (CAST('%\nyX''6s并' AS REAL)))  NULLS FIRST, ((vt1.c0)=(vt1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((((((('g')OR(x'')))OR(vt1.c0)))OR(vt1.c0)))AND(x'')))AND(json(NULL))))OR((vt1.c0 IN ()))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST, (- (CAST('%\nyX''6s并' AS REAL)))  NULLS FIRST, ((vt1.c0)=(vt1.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY (((((((((((((((('g')OR(x'')))OR(vt1.c0)))OR(vt1.c0)))AND(x'')))AND(json(NULL))))OR((vt1.c0 IN ()))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST, (- (CAST('%\nyX''6s并' AS REAL)))  NULLS FIRST, ((vt1.c0)=(vt1.c0)) COLLATE NOCASE DESC;
SELECT ALL * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(HEX(v0.c0))))OR(v0.c0))) ORDER BY ((SQLITE_COMPILEOPTION_GET(v0.c0)) BETWEEN (((('1469590416'))>=((v0.c0)))) AND ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))))) ASC  NULLS FIRST, (((((((((v0.c0 IN ()))OR((((v0.c0))<=((v0.c0))))))OR(CAST(v0.c0 AS TEXT))))AND((('1598158173') ISNULL))))AND(((v0.c0)GLOB(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(HEX(v0.c0))))OR(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((SQLITE_COMPILEOPTION_GET(v0.c0)) BETWEEN (((('1469590416'))>=((v0.c0)))) AND ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))))) ASC  NULLS FIRST, (((((((((v0.c0 IN ()))OR((((v0.c0))<=((v0.c0))))))OR(CAST(v0.c0 AS TEXT))))AND((('1598158173') ISNULL))))AND(((v0.c0)GLOB(v0.c0)))));
SELECT ALL * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(HEX(v0.c0))))OR(v0.c0))) ORDER BY ((SQLITE_COMPILEOPTION_GET(v0.c0)) BETWEEN (((('1469590416'))>=((v0.c0)))) AND ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))))) ASC  NULLS FIRST, (((((((((v0.c0 IN ()))OR((((v0.c0))<=((v0.c0))))))OR(CAST(v0.c0 AS TEXT))))AND((('1598158173') ISNULL))))AND(((v0.c0)GLOB(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(HEX(v0.c0))))OR(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((SQLITE_COMPILEOPTION_GET(v0.c0)) BETWEEN (((('1469590416'))>=((v0.c0)))) AND ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))))) ASC  NULLS FIRST, (((((((((v0.c0 IN ()))OR((((v0.c0))<=((v0.c0))))))OR(CAST(v0.c0 AS TEXT))))AND((('1598158173') ISNULL))))AND(((v0.c0)GLOB(v0.c0)))));
SELECT ALL * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(HEX(v0.c0))))OR(v0.c0))) ORDER BY ((SQLITE_COMPILEOPTION_GET(v0.c0)) BETWEEN (((('1469590416'))>=((v0.c0)))) AND ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))))) ASC  NULLS FIRST, (((((((((v0.c0 IN ()))OR((((v0.c0))<=((v0.c0))))))OR(CAST(v0.c0 AS TEXT))))AND((('1598158173') ISNULL))))AND(((v0.c0)GLOB(v0.c0))));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY CAST((~ (v0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST((~ (v0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY CAST((~ (v0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST((~ (v0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY CAST((~ (v0.c0)) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, v0 WHERE (CASE ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((t0.c0)<<(t0.c24)) THEN ((((t0.c0)AND(t0.c24)))AND(t0.c24)) WHEN ((t0.c24) NOT NULL) THEN ((((t0.c0)OR(v0.c0)))OR(NULL)) WHEN (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN vt1.c0 COLLATE BINARY WHEN (t0.c24 IN (v0.c0)) THEN t0.c0 COLLATE NOCASE WHEN (((t0.c24))>((t0.c0))) THEN ((v0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((t0.c0)<<(t0.c24)) THEN ((((t0.c0)AND(t0.c24)))AND(t0.c24)) WHEN ((t0.c24) NOT NULL) THEN ((((t0.c0)OR(v0.c0)))OR(NULL)) WHEN (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN vt1.c0 COLLATE BINARY WHEN (t0.c24 IN (v0.c0)) THEN t0.c0 COLLATE NOCASE WHEN (((t0.c24))>((t0.c0))) THEN ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM vt1, t0, v0);
SELECT COUNT(*) FROM vt1, t0, v0 WHERE (CASE ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((t0.c0)<<(t0.c24)) THEN ((((t0.c0)AND(t0.c24)))AND(t0.c24)) WHEN ((t0.c24) NOT NULL) THEN ((((t0.c0)OR(v0.c0)))OR(NULL)) WHEN (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN vt1.c0 COLLATE BINARY WHEN (t0.c24 IN (v0.c0)) THEN t0.c0 COLLATE NOCASE WHEN (((t0.c24))>((t0.c0))) THEN ((v0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((t0.c0)<<(t0.c24)) THEN ((((t0.c0)AND(t0.c24)))AND(t0.c24)) WHEN ((t0.c24) NOT NULL) THEN ((((t0.c0)OR(v0.c0)))OR(NULL)) WHEN (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN vt1.c0 COLLATE BINARY WHEN (t0.c24 IN (v0.c0)) THEN t0.c0 COLLATE NOCASE WHEN (((t0.c24))>((t0.c0))) THEN ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM vt1, t0, v0);
SELECT COUNT(*) FROM vt1, t0, v0 WHERE (CASE ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((t0.c0)<<(t0.c24)) THEN ((((t0.c0)AND(t0.c24)))AND(t0.c24)) WHEN ((t0.c24) NOT NULL) THEN ((((t0.c0)OR(v0.c0)))OR(NULL)) WHEN (((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) THEN vt1.c0 COLLATE BINARY WHEN (t0.c24 IN (v0.c0)) THEN t0.c0 COLLATE NOCASE WHEN (((t0.c24))>((t0.c0))) THEN ((v0.c0) IS TRUE) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((v0.c0)<(v0.c0)))-(((v0.c0) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<(v0.c0)))-(((v0.c0) ISNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((v0.c0)<(v0.c0)))-(((v0.c0) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<(v0.c0)))-(((v0.c0) ISNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((v0.c0)<(v0.c0)))-(((v0.c0) ISNULL))) DESC  NULLS LAST;
SELECT * FROM v0, vt1 WHERE (((((vt1.c0)<<(vt1.c0)))+((+ (vt1.c0))))) ORDER BY CAST(((((((((vt1.c0)OR(NULL)))AND(v0.c0)))OR(NULL)))AND(vt1.c0)) AS NUMERIC), ((((((v0.c0) NOTNULL))OR(((vt1.c0)/(v0.c0)))))AND((- (NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<<(vt1.c0)))+((+ (vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((((((((vt1.c0)OR(NULL)))AND(v0.c0)))OR(NULL)))AND(vt1.c0)) AS NUMERIC), ((((((v0.c0) NOTNULL))OR(((vt1.c0)/(v0.c0)))))AND((- (NULL)))) DESC  NULLS LAST);
SELECT * FROM v0, vt1 WHERE (((((vt1.c0)<<(vt1.c0)))+((+ (vt1.c0))))) ORDER BY CAST(((((((((vt1.c0)OR(NULL)))AND(v0.c0)))OR(NULL)))AND(vt1.c0)) AS NUMERIC), ((((((v0.c0) NOTNULL))OR(((vt1.c0)/(v0.c0)))))AND((- (NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<<(vt1.c0)))+((+ (vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(((((((((vt1.c0)OR(NULL)))AND(v0.c0)))OR(NULL)))AND(vt1.c0)) AS NUMERIC), ((((((v0.c0) NOTNULL))OR(((vt1.c0)/(v0.c0)))))AND((- (NULL)))) DESC  NULLS LAST);
SELECT * FROM v0, vt1 WHERE (((((vt1.c0)<<(vt1.c0)))+((+ (vt1.c0))))) ORDER BY CAST(((((((((vt1.c0)OR(NULL)))AND(v0.c0)))OR(NULL)))AND(vt1.c0)) AS NUMERIC), ((((((v0.c0) NOTNULL))OR(((vt1.c0)/(v0.c0)))))AND((- (NULL)))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(t0.c24 AS BLOB))) ORDER BY CASE WHEN (t0.c24 IN ()) THEN (- (t0.c24)) ELSE ((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(CAST(t0.c24 AS BLOB))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c24 IN ()) THEN (- (t0.c24)) ELSE ((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(t0.c24 AS BLOB))) ORDER BY CASE WHEN (t0.c24 IN ()) THEN (- (t0.c24)) ELSE ((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(CAST(t0.c24 AS BLOB))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c24 IN ()) THEN (- (t0.c24)) ELSE ((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(t0.c24 AS BLOB))) ORDER BY CASE WHEN (t0.c24 IN ()) THEN (- (t0.c24)) ELSE ((t0.c24) NOT BETWEEN (t0.c24) AND (t0.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (NULLIF(v0.c0, v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULLIF(v0.c0, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULLIF(v0.c0, v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULLIF(v0.c0, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULLIF(v0.c0, v0.c0) COLLATE RTRIM);
SELECT ALL * FROM vt1, t0 WHERE (CAST((t0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CAST((t0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CAST((t0.c0 IN ()) AS INTEGER));
SELECT ALL * FROM t0 WHERE ((~ (t0.c24)) COLLATE RTRIM) ORDER BY (~ (((t0.c24)<<(t0.c24)))), CAST((t0.c0 IN ()) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t0.c24)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c24)<<(t0.c24)))), CAST((t0.c0 IN ()) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((~ (t0.c24)) COLLATE RTRIM) ORDER BY (~ (((t0.c24)<<(t0.c24)))), CAST((t0.c0 IN ()) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t0.c24)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c24)<<(t0.c24)))), CAST((t0.c0 IN ()) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((~ (t0.c24)) COLLATE RTRIM) ORDER BY (~ (((t0.c24)<<(t0.c24)))), CAST((t0.c0 IN ()) AS INTEGER)  NULLS FIRST;
SELECT * FROM v0 WHERE ((((((v0.c0)>=(v0.c0)), ('' IN ()), (((NULL, v0.c0, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))<((v0.c0 COLLATE BINARY, (('-278401521')=(v0.c0)), v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)>=(v0.c0)), ('' IN ()), (((NULL, v0.c0, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))<((v0.c0 COLLATE BINARY, (('-278401521')=(v0.c0)), v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)>=(v0.c0)), ('' IN ()), (((NULL, v0.c0, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))<((v0.c0 COLLATE BINARY, (('-278401521')=(v0.c0)), v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)>=(v0.c0)), ('' IN ()), (((NULL, v0.c0, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))<((v0.c0 COLLATE BINARY, (('-278401521')=(v0.c0)), v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)>=(v0.c0)), ('' IN ()), (((NULL, v0.c0, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))<((v0.c0 COLLATE BINARY, (('-278401521')=(v0.c0)), v0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM v0, vt1 NATURAL JOIN t0 WHERE (CAST(((t0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0, vt1 NATURAL JOIN t0 WHERE (CAST(((t0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0, vt1 NATURAL JOIN t0 WHERE (CAST(((t0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE ((((((- (v0.c0)))OR((v0.c0 IN ()))))AND(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((- (v0.c0)))OR((v0.c0 IN ()))))AND(((v0.c0) BETWEEN (v0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE ((((((- (v0.c0)))OR((v0.c0 IN ()))))AND(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((- (v0.c0)))OR((v0.c0 IN ()))))AND(((v0.c0) BETWEEN (v0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT ALL COUNT(*) FROM vt1, v0, t0 WHERE ((((((- (v0.c0)))OR((v0.c0 IN ()))))AND(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))));
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)IS(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)IS(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)IS(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)IS(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)IS(v0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON x'' LEFT OUTER JOIN v0 ON COALESCE(DISTINCT (NOT (vt1.c0)), '1802112637') WHERE (CASE WHEN t0.c24 COLLATE NOCASE THEN CAST(v0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c24 COLLATE NOCASE THEN CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON x'' LEFT OUTER JOIN v0 ON COALESCE(DISTINCT (NOT (vt1.c0)), '1802112637'));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON x'' LEFT OUTER JOIN v0 ON COALESCE(DISTINCT (NOT (vt1.c0)), '1802112637') WHERE (CASE WHEN t0.c24 COLLATE NOCASE THEN CAST(v0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c24 COLLATE NOCASE THEN CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON x'' LEFT OUTER JOIN v0 ON COALESCE(DISTINCT (NOT (vt1.c0)), '1802112637'));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON x'' LEFT OUTER JOIN v0 ON COALESCE(DISTINCT (NOT (vt1.c0)), '1802112637') WHERE (CASE WHEN t0.c24 COLLATE NOCASE THEN CAST(v0.c0 AS REAL) END);
SELECT ALL * FROM vt1 WHERE ((((0.9222111726299318)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((0.9222111726299318)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE ((((0.9222111726299318)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((0.9222111726299318)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE ((((0.9222111726299318)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((vt1.c0))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON ((((t0.c24)<=(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0, vt1.c0, t0.c24))<((t0.c24, t0.c24, t0.c0, v0.c0, t0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) FULL OUTER JOIN vt1 ON CASE CASE WHEN t0.c0 THEN t0.c24 END  WHEN ((vt1.c0) BETWEEN (v0.c0) AND (t0.c24)) THEN 295300273 WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE 0x2f9a93e9 END THEN ((8.08743815E8) BETWEEN (t0.c24) AND (vt1.c0)) WHEN (- (v0.c0)) THEN LOWER(DISTINCT t0.c24) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END END WHERE ((~ (CAST(t0.c24 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t0.c24 AS REAL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((t0.c24)<=(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0, vt1.c0, t0.c24))<((t0.c24, t0.c24, t0.c0, v0.c0, t0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) FULL OUTER JOIN vt1 ON CASE CASE WHEN t0.c0 THEN t0.c24 END  WHEN ((vt1.c0) BETWEEN (v0.c0) AND (t0.c24)) THEN 295300273 WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE 0x2f9a93e9 END THEN ((8.08743815E8) BETWEEN (t0.c24) AND (vt1.c0)) WHEN (- (v0.c0)) THEN LOWER(DISTINCT t0.c24) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END END);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON ((((t0.c24)<=(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0, vt1.c0, t0.c24))<((t0.c24, t0.c24, t0.c0, v0.c0, t0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) FULL OUTER JOIN vt1 ON CASE CASE WHEN t0.c0 THEN t0.c24 END  WHEN ((vt1.c0) BETWEEN (v0.c0) AND (t0.c24)) THEN 295300273 WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE 0x2f9a93e9 END THEN ((8.08743815E8) BETWEEN (t0.c24) AND (vt1.c0)) WHEN (- (v0.c0)) THEN LOWER(DISTINCT t0.c24) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END END WHERE ((~ (CAST(t0.c24 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t0.c24 AS REAL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((t0.c24)<=(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0, vt1.c0, t0.c24))<((t0.c24, t0.c24, t0.c0, v0.c0, t0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) FULL OUTER JOIN vt1 ON CASE CASE WHEN t0.c0 THEN t0.c24 END  WHEN ((vt1.c0) BETWEEN (v0.c0) AND (t0.c24)) THEN 295300273 WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE 0x2f9a93e9 END THEN ((8.08743815E8) BETWEEN (t0.c24) AND (vt1.c0)) WHEN (- (v0.c0)) THEN LOWER(DISTINCT t0.c24) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END END);
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED, v0 WHERE (((CAST(vt1.c0 AS INTEGER))AND(((t0.c24) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER))AND(((t0.c24) IS FALSE)))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED, v0 WHERE (((CAST(vt1.c0 AS INTEGER))AND(((t0.c24) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER))AND(((t0.c24) IS FALSE)))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED, v0 WHERE (((CAST(vt1.c0 AS INTEGER))AND(((t0.c24) IS FALSE))));
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (CAST(vt1.c0 AS TEXT))));
SELECT COUNT(*) FROM vt1 WHERE ((((('189672071')AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) ORDER BY (+ ((((vt1.c0))>=((vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('189672071')AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (+ ((((vt1.c0))>=((vt1.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((('189672071')AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) ORDER BY (+ ((((vt1.c0))>=((vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('189672071')AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (+ ((((vt1.c0))>=((vt1.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((('189672071')AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) ORDER BY (+ ((((vt1.c0))>=((vt1.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY json_type(LIKE(v0.c0, v0.c0, '\n')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY json_type(LIKE(v0.c0, v0.c0, '\n')) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY json_type(LIKE(v0.c0, v0.c0, '\n')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY json_type(LIKE(v0.c0, v0.c0, '\n')) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY json_type(LIKE(v0.c0, v0.c0, '\n')) ASC  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE (CAST(((t0.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CAST(((t0.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CAST(((t0.c0) IS TRUE) AS INTEGER));
SELECT * FROM t0 WHERE ((((- ('D쑋[>哷CF')))>=(CASE WHEN t0.c24 THEN t0.c24 END)));
SELECT SUM(count) FROM (SELECT (((((- ('D쑋[>哷CF')))>=(CASE WHEN t0.c24 THEN t0.c24 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((- ('D쑋[>哷CF')))>=(CASE WHEN t0.c24 THEN t0.c24 END)));
SELECT SUM(count) FROM (SELECT (((((- ('D쑋[>哷CF')))>=(CASE WHEN t0.c24 THEN t0.c24 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((- ('D쑋[>哷CF')))>=(CASE WHEN t0.c24 THEN t0.c24 END)));
SELECT * FROM v0 WHERE (CAST(((v0.c0)AND(1331246581)) AS TEXT)) ORDER BY (+ (v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)AND(1331246581)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0))  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(((v0.c0)AND(1331246581)) AS TEXT)) ORDER BY (+ (v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)AND(1331246581)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0))  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(((v0.c0)AND(1331246581)) AS TEXT)) ORDER BY (+ (v0.c0))  NULLS FIRST;
SELECT * FROM vt1, t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0)) AS NUMERIC)) ORDER BY ((ROUND(t0.c24, t0.c24))LIKE(t0.c24)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((ROUND(t0.c24, t0.c24))LIKE(t0.c24)) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0)) AS NUMERIC)) ORDER BY ((ROUND(t0.c24, t0.c24))LIKE(t0.c24)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((ROUND(t0.c24, t0.c24))LIKE(t0.c24)) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c24) AND (t0.c0)) AS NUMERIC)) ORDER BY ((ROUND(t0.c24, t0.c24))LIKE(t0.c24)) ASC  NULLS LAST;
SELECT * FROM t0, vt1 WHERE ((((CASE WHEN t0.c24 THEN t0.c24 ELSE vt1.c0 END, CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE vt1.c0 END, ((((((((t0.c0)OR(vt1.c0)))OR(t0.c24)))AND(t0.c0)))OR(t0.c24))))!=((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0))>((vt1.c0))), ((((vt1.c0)OR(t0.c24)))AND(vt1.c0)))))) ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN ((((vt1.c0)OR(t0.c24)))AND(t0.c0)) ELSE LIKELY(vt1.c0) END ASC, ((- (t0.c24)) IN (vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c24 THEN t0.c24 ELSE vt1.c0 END, CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE vt1.c0 END, ((((((((t0.c0)OR(vt1.c0)))OR(t0.c24)))AND(t0.c0)))OR(t0.c24))))!=((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0))>((vt1.c0))), ((((vt1.c0)OR(t0.c24)))AND(vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN ((((vt1.c0)OR(t0.c24)))AND(t0.c0)) ELSE LIKELY(vt1.c0) END ASC, ((- (t0.c24)) IN (vt1.c0 COLLATE BINARY)) ASC);
SELECT * FROM t0, vt1 WHERE ((((CASE WHEN t0.c24 THEN t0.c24 ELSE vt1.c0 END, CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE vt1.c0 END, ((((((((t0.c0)OR(vt1.c0)))OR(t0.c24)))AND(t0.c0)))OR(t0.c24))))!=((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0))>((vt1.c0))), ((((vt1.c0)OR(t0.c24)))AND(vt1.c0)))))) ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN ((((vt1.c0)OR(t0.c24)))AND(t0.c0)) ELSE LIKELY(vt1.c0) END ASC, ((- (t0.c24)) IN (vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c24 THEN t0.c24 ELSE vt1.c0 END, CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE vt1.c0 END, ((((((((t0.c0)OR(vt1.c0)))OR(t0.c24)))AND(t0.c0)))OR(t0.c24))))!=((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0))>((vt1.c0))), ((((vt1.c0)OR(t0.c24)))AND(vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN ((((vt1.c0)OR(t0.c24)))AND(t0.c0)) ELSE LIKELY(vt1.c0) END ASC, ((- (t0.c24)) IN (vt1.c0 COLLATE BINARY)) ASC);
SELECT * FROM t0, vt1 WHERE ((((CASE WHEN t0.c24 THEN t0.c24 ELSE vt1.c0 END, CASE t0.c24  WHEN t0.c24 THEN t0.c0 ELSE vt1.c0 END, ((((((((t0.c0)OR(vt1.c0)))OR(t0.c24)))AND(t0.c0)))OR(t0.c24))))!=((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0))>((vt1.c0))), ((((vt1.c0)OR(t0.c24)))AND(vt1.c0)))))) ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN ((((vt1.c0)OR(t0.c24)))AND(t0.c0)) ELSE LIKELY(vt1.c0) END ASC, ((- (t0.c24)) IN (vt1.c0 COLLATE BINARY)) ASC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CAST(t0.c24 AS TEXT))>(((t0.c0)<=(vt1.c0))))) ORDER BY '', ((t0.c24 COLLATE NOCASE)LIKE(((t0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c24 AS TEXT))>(((t0.c0)<=(vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY '', ((t0.c24 COLLATE NOCASE)LIKE(((t0.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CAST(t0.c24 AS TEXT))>(((t0.c0)<=(vt1.c0))))) ORDER BY '', ((t0.c24 COLLATE NOCASE)LIKE(((t0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c24 AS TEXT))>(((t0.c0)<=(vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY '', ((t0.c24 COLLATE NOCASE)LIKE(((t0.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CAST(t0.c24 AS TEXT))>(((t0.c0)<=(vt1.c0))))) ORDER BY '', ((t0.c24 COLLATE NOCASE)LIKE(((t0.c0) IS TRUE))) DESC;
SELECT * FROM v0, t0, vt1 WHERE (((((((((NULL)AND((((t0.c24)) BETWEEN ((t0.c24)) AND ((t0.c0))))))AND(CAST(v0.c0 AS NUMERIC))))OR(((((vt1.c0)AND(v0.c0)))OR(v0.c0)))))AND((~ (x'd50e'))))) ORDER BY 0.4227598751494426 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND((((t0.c24)) BETWEEN ((t0.c24)) AND ((t0.c0))))))AND(CAST(v0.c0 AS NUMERIC))))OR(((((vt1.c0)AND(v0.c0)))OR(v0.c0)))))AND((~ (x'd50e'))))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY 0.4227598751494426 ASC  NULLS FIRST);
SELECT * FROM v0, t0, vt1 WHERE (((((((((NULL)AND((((t0.c24)) BETWEEN ((t0.c24)) AND ((t0.c0))))))AND(CAST(v0.c0 AS NUMERIC))))OR(((((vt1.c0)AND(v0.c0)))OR(v0.c0)))))AND((~ (x'd50e'))))) ORDER BY 0.4227598751494426 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND((((t0.c24)) BETWEEN ((t0.c24)) AND ((t0.c0))))))AND(CAST(v0.c0 AS NUMERIC))))OR(((((vt1.c0)AND(v0.c0)))OR(v0.c0)))))AND((~ (x'd50e'))))) IS TRUE)  as count FROM v0, t0, vt1 ORDER BY 0.4227598751494426 ASC  NULLS FIRST);
SELECT * FROM v0, t0, vt1 WHERE (((((((((NULL)AND((((t0.c24)) BETWEEN ((t0.c24)) AND ((t0.c0))))))AND(CAST(v0.c0 AS NUMERIC))))OR(((((vt1.c0)AND(v0.c0)))OR(v0.c0)))))AND((~ (x'd50e'))))) ORDER BY 0.4227598751494426 ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ALL ((t0.c24) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (t0.c24);
SELECT SUM(count) FROM (SELECT ALL ((t0.c24) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (t0.c24);
SELECT ALL * FROM t0, v0, vt1 WHERE (0.9613758097644953);
SELECT SUM(count) FROM (SELECT ALL ((0.9613758097644953) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE (0.9613758097644953);
SELECT SUM(count) FROM (SELECT ALL ((0.9613758097644953) IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE (0.9613758097644953);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c0)OR(CAST(vt1.c0 AS INTEGER))))OR(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((IFNULL(DISTINCT vt1.c0, t0.c0)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(CAST(vt1.c0 AS INTEGER))))OR(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((IFNULL(DISTINCT vt1.c0, t0.c0)) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c0)OR(CAST(vt1.c0 AS INTEGER))))OR(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((IFNULL(DISTINCT vt1.c0, t0.c0)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(CAST(vt1.c0 AS INTEGER))))OR(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((IFNULL(DISTINCT vt1.c0, t0.c0)) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c0)OR(CAST(vt1.c0 AS INTEGER))))OR(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((IFNULL(DISTINCT vt1.c0, t0.c0)) NOT NULL)  NULLS FIRST;
SELECT * FROM t0, v0 WHERE (((CAST(t0.c24 AS BLOB))/(CAST(t0.c24 AS REAL)))) ORDER BY ((((((((((t0.c0)>>(t0.c0)))AND((((v0.c0))<((t0.c0))))))AND('')))AND((+ (t0.c24)))))OR((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c24 AS BLOB))/(CAST(t0.c24 AS REAL)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((((t0.c0)>>(t0.c0)))AND((((v0.c0))<((t0.c0))))))AND('')))AND((+ (t0.c24)))))OR((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((CAST(t0.c24 AS BLOB))/(CAST(t0.c24 AS REAL)))) ORDER BY ((((((((((t0.c0)>>(t0.c0)))AND((((v0.c0))<((t0.c0))))))AND('')))AND((+ (t0.c24)))))OR((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c24 AS BLOB))/(CAST(t0.c24 AS REAL)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((((t0.c0)>>(t0.c0)))AND((((v0.c0))<((t0.c0))))))AND('')))AND((+ (t0.c24)))))OR((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((CAST(t0.c24 AS BLOB))/(CAST(t0.c24 AS REAL)))) ORDER BY ((((((((((t0.c0)>>(t0.c0)))AND((((v0.c0))<((t0.c0))))))AND('')))AND((+ (t0.c24)))))OR((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((t0.c24) NOT BETWEEN (vt1.c0) AND (t0.c24)) IN ()) WHERE (((CASE WHEN t0.c24 THEN t0.c0 WHEN t0.c24 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0)OR(t0.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c24 THEN t0.c0 WHEN t0.c24 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0)OR(t0.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((t0.c24) NOT BETWEEN (vt1.c0) AND (t0.c24)) IN ()));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((t0.c24) NOT BETWEEN (vt1.c0) AND (t0.c24)) IN ()) WHERE (((CASE WHEN t0.c24 THEN t0.c0 WHEN t0.c24 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0)OR(t0.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c24 THEN t0.c0 WHEN t0.c24 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0)OR(t0.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((t0.c24) NOT BETWEEN (vt1.c0) AND (t0.c24)) IN ()));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((t0.c24) NOT BETWEEN (vt1.c0) AND (t0.c24)) IN ()) WHERE (((CASE WHEN t0.c24 THEN t0.c0 WHEN t0.c24 THEN t0.c0 WHEN t0.c24 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0)OR(t0.c0))) AND (vt1.c0)));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY (((NOT (t0.c0))) IS FALSE)  NULLS LAST, '831584972'  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c24) AND (t0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c0))) IS FALSE)  NULLS LAST, '831584972'  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c24) AND (t0.c0)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY (((NOT (t0.c0))) IS FALSE)  NULLS LAST, '831584972'  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c24) AND (t0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c0))) IS FALSE)  NULLS LAST, '831584972'  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c24) AND (t0.c0)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY (((NOT (t0.c0))) IS FALSE)  NULLS LAST, '831584972'  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c24) AND (t0.c0)) AS BLOB)  NULLS FIRST;
SELECT * FROM t0, vt1, v0 WHERE (x'') ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt1, v0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0, vt1, v0 WHERE (x'') ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt1, v0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0, vt1, v0 WHERE (x'') ORDER BY NULL  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE WHERE ((((vt1.c0) IS FALSE) IN ((('ja')-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS FALSE) IN ((('ja')-(vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE);
SELECT * FROM vt1 LEFT OUTER JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE WHERE ((((vt1.c0) IS FALSE) IN ((('ja')-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS FALSE) IN ((('ja')-(vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE);
SELECT * FROM vt1 LEFT OUTER JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE WHERE ((((vt1.c0) IS FALSE) IN ((('ja')-(vt1.c0)))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON TIME(((v0.c0)!=(vt1.c0)), v0.c0, ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN ()), x'', CAST(v0.c0 AS INTEGER)) WHERE (vt1.c0) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON TIME(((v0.c0)!=(vt1.c0)), v0.c0, ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN ()), x'', CAST(v0.c0 AS INTEGER)) ORDER BY x'' ASC);
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON TIME(((v0.c0)!=(vt1.c0)), v0.c0, ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN ()), x'', CAST(v0.c0 AS INTEGER)) WHERE (vt1.c0) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON TIME(((v0.c0)!=(vt1.c0)), v0.c0, ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN ()), x'', CAST(v0.c0 AS INTEGER)) ORDER BY x'' ASC);
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON TIME(((v0.c0)!=(vt1.c0)), v0.c0, ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (v0.c0 IN ()), x'', CAST(v0.c0 AS INTEGER)) WHERE (vt1.c0) ORDER BY x'' ASC;
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c24 COLLATE NOCASE) NOT BETWEEN (json_array(v0.c0, t0.c0)) AND (CAST(t0.c24 AS INTEGER))) FULL OUTER JOIN vt1 ON ((((t0.c0)AND(v0.c0)))AND(t0.c24)) COLLATE RTRIM COLLATE NOCASE WHERE (CASE ((0.3648917364639094) BETWEEN (v0.c0) AND (t0.c0))  WHEN 0.6115134361499301 THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c24 WHEN t0.c24 THEN v0.c0 WHEN t0.c24 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END ELSE ((t0.c24)==(t0.c24)) END) ORDER BY (+ (((vt1.c0)&(t0.c24)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((0.3648917364639094) BETWEEN (v0.c0) AND (t0.c0))  WHEN 0.6115134361499301 THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c24 WHEN t0.c24 THEN v0.c0 WHEN t0.c24 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END ELSE ((t0.c24)==(t0.c24)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c24 COLLATE NOCASE) NOT BETWEEN (json_array(v0.c0, t0.c0)) AND (CAST(t0.c24 AS INTEGER))) FULL OUTER JOIN vt1 ON ((((t0.c0)AND(v0.c0)))AND(t0.c24)) COLLATE RTRIM COLLATE NOCASE ORDER BY (+ (((vt1.c0)&(t0.c24)))) ASC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c24 COLLATE NOCASE) NOT BETWEEN (json_array(v0.c0, t0.c0)) AND (CAST(t0.c24 AS INTEGER))) FULL OUTER JOIN vt1 ON ((((t0.c0)AND(v0.c0)))AND(t0.c24)) COLLATE RTRIM COLLATE NOCASE WHERE (CASE ((0.3648917364639094) BETWEEN (v0.c0) AND (t0.c0))  WHEN 0.6115134361499301 THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c24 WHEN t0.c24 THEN v0.c0 WHEN t0.c24 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END ELSE ((t0.c24)==(t0.c24)) END) ORDER BY (+ (((vt1.c0)&(t0.c24)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((0.3648917364639094) BETWEEN (v0.c0) AND (t0.c0))  WHEN 0.6115134361499301 THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c24 WHEN t0.c24 THEN v0.c0 WHEN t0.c24 THEN v0.c0 WHEN v0.c0 THEN t0.c0 END ELSE ((t0.c24)==(t0.c24)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c24 COLLATE NOCASE) NOT BETWEEN (json_array(v0.c0, t0.c0)) AND (CAST(t0.c24 AS INTEGER))) FULL OUTER JOIN vt1 ON ((((t0.c0)AND(v0.c0)))AND(t0.c24)) COLLATE RTRIM COLLATE NOCASE ORDER BY (+ (((vt1.c0)&(t0.c24)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((0.6866822301253682) NOTNULL) THEN ((t0.c24)AND(t0.c24)) WHEN ((t0.c0)OR(t0.c0)) THEN ROUND(t0.c24, t0.c0) WHEN ((t0.c0)<<(t0.c24)) THEN t0.c0 ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c24)) END) ORDER BY ((((((((CASE WHEN t0.c24 THEN '' ELSE NULL END)AND(((t0.c24) BETWEEN (t0.c24) AND (t0.c0)))))OR(CASE t0.c24  WHEN t0.c24 THEN t0.c24 END)))OR(((t0.c0)OR(t0.c24)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((0.7183878621593849))))) ASC, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.6866822301253682) NOTNULL) THEN ((t0.c24)AND(t0.c24)) WHEN ((t0.c0)OR(t0.c0)) THEN ROUND(t0.c24, t0.c0) WHEN ((t0.c0)<<(t0.c24)) THEN t0.c0 ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c24)) END) IS TRUE)  as count FROM t0 ORDER BY ((((((((CASE WHEN t0.c24 THEN '' ELSE NULL END)AND(((t0.c24) BETWEEN (t0.c24) AND (t0.c0)))))OR(CASE t0.c24  WHEN t0.c24 THEN t0.c24 END)))OR(((t0.c0)OR(t0.c24)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((0.7183878621593849))))) ASC, ''  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((0.6866822301253682) NOTNULL) THEN ((t0.c24)AND(t0.c24)) WHEN ((t0.c0)OR(t0.c0)) THEN ROUND(t0.c24, t0.c0) WHEN ((t0.c0)<<(t0.c24)) THEN t0.c0 ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c24)) END) ORDER BY ((((((((CASE WHEN t0.c24 THEN '' ELSE NULL END)AND(((t0.c24) BETWEEN (t0.c24) AND (t0.c0)))))OR(CASE t0.c24  WHEN t0.c24 THEN t0.c24 END)))OR(((t0.c0)OR(t0.c24)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((0.7183878621593849))))) ASC, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.6866822301253682) NOTNULL) THEN ((t0.c24)AND(t0.c24)) WHEN ((t0.c0)OR(t0.c0)) THEN ROUND(t0.c24, t0.c0) WHEN ((t0.c0)<<(t0.c24)) THEN t0.c0 ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c24)) END) IS TRUE)  as count FROM t0 ORDER BY ((((((((CASE WHEN t0.c24 THEN '' ELSE NULL END)AND(((t0.c24) BETWEEN (t0.c24) AND (t0.c0)))))OR(CASE t0.c24  WHEN t0.c24 THEN t0.c24 END)))OR(((t0.c0)OR(t0.c24)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((0.7183878621593849))))) ASC, ''  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((0.6866822301253682) NOTNULL) THEN ((t0.c24)AND(t0.c24)) WHEN ((t0.c0)OR(t0.c0)) THEN ROUND(t0.c24, t0.c0) WHEN ((t0.c0)<<(t0.c24)) THEN t0.c0 ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c24)) END) ORDER BY ((((((((CASE WHEN t0.c24 THEN '' ELSE NULL END)AND(((t0.c24) BETWEEN (t0.c24) AND (t0.c0)))))OR(CASE t0.c24  WHEN t0.c24 THEN t0.c24 END)))OR(((t0.c0)OR(t0.c24)))))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((0.7183878621593849))))) ASC, ''  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (CAST(((vt1.c0)<(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (CAST(((vt1.c0)<(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt1, t0);
SELECT COUNT(*) FROM v0, vt1, t0 WHERE (CAST(((vt1.c0)<(t0.c0)) AS INTEGER));
SELECT ALL * FROM vt1, v0 WHERE (CASE ((vt1.c0)*(NULL))  WHEN (((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, v0.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) THEN vt1.c0 ELSE ((((((((x'8c33')OR(vt1.c0)))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)*(NULL))  WHEN (((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, v0.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) THEN vt1.c0 ELSE ((((((((x'8c33')OR(vt1.c0)))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (CASE ((vt1.c0)*(NULL))  WHEN (((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, v0.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) THEN vt1.c0 ELSE ((((((((x'8c33')OR(vt1.c0)))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)*(NULL))  WHEN (((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, v0.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) THEN vt1.c0 ELSE ((((((((x'8c33')OR(vt1.c0)))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (CASE ((vt1.c0)*(NULL))  WHEN (((vt1.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, v0.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) THEN vt1.c0 ELSE ((((((((x'8c33')OR(vt1.c0)))OR(v0.c0)))OR(v0.c0)))OR(vt1.c0)) END);
SELECT ALL * FROM vt1, v0 WHERE (CAST(((((((((((((vt1.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))AND(vt1.c0)))OR(v0.c0)) AS BLOB)) ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((vt1.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))AND(vt1.c0)))OR(v0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0))) IS TRUE) ASC);
SELECT ALL * FROM vt1, v0 WHERE (CAST(((((((((((((vt1.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))AND(vt1.c0)))OR(v0.c0)) AS BLOB)) ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((vt1.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))AND(vt1.c0)))OR(v0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0))) IS TRUE) ASC);
SELECT ALL * FROM vt1, v0 WHERE (CAST(((((((((((((vt1.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))AND(vt1.c0)))OR(v0.c0)) AS BLOB)) ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0))) IS TRUE) ASC;
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT * FROM t0, vt1, v0 WHERE ('') ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt1, v0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST);
SELECT * FROM t0, vt1, v0 WHERE ('') ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt1, v0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST);
SELECT * FROM t0, vt1, v0 WHERE ('') ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (((((((((0xb4e2a87)AND(('X,iGu' IN ()))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) IS FALSE))))OR(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0Xb4e2a87)AND(('X,iGu' IN ()))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) IS FALSE))))OR(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (((((((((0xb4e2a87)AND(('X,iGu' IN ()))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) IS FALSE))))OR(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0Xb4e2a87)AND(('X,iGu' IN ()))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) IS FALSE))))OR(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, v0, t0);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (((((((((0xb4e2a87)AND(('X,iGu' IN ()))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) IS FALSE))))OR(t0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, vt1, v0 WHERE ((((((((t0.c24)) BETWEEN ((v0.c0)) AND ((vt1.c0))))OR(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c24)) BETWEEN ((v0.c0)) AND ((vt1.c0))))OR(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE ((((((((t0.c24)) BETWEEN ((v0.c0)) AND ((vt1.c0))))OR(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c24)) BETWEEN ((v0.c0)) AND ((vt1.c0))))OR(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1, v0);
SELECT COUNT(*) FROM t0, vt1, v0 WHERE ((((((((t0.c24)) BETWEEN ((v0.c0)) AND ((vt1.c0))))OR(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END) ORDER BY CASE vt1.c0  WHEN ((NULL) IS FALSE) THEN (NOT (vt1.c0)) END DESC  NULLS LAST, x'', 'XQ' ASC  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0  WHEN ((NULL) IS FALSE) THEN (NOT (vt1.c0)) END DESC  NULLS LAST, x'', 'XQ' ASC  NULLS LAST, NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END) ORDER BY CASE vt1.c0  WHEN ((NULL) IS FALSE) THEN (NOT (vt1.c0)) END DESC  NULLS LAST, x'', 'XQ' ASC  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0  WHEN ((NULL) IS FALSE) THEN (NOT (vt1.c0)) END DESC  NULLS LAST, x'', 'XQ' ASC  NULLS LAST, NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END) ORDER BY CASE vt1.c0  WHEN ((NULL) IS FALSE) THEN (NOT (vt1.c0)) END DESC  NULLS LAST, x'', 'XQ' ASC  NULLS LAST, NULL;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c24)))OR(966520938)))OR(((t0.c0)!=(t0.c24))))) ORDER BY HEX(DISTINCT ((((((((t0.c0)AND(t0.c24)))OR(t0.c0)))OR(t0.c24)))OR(t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c24)))OR(966520938)))OR(((t0.c0)<>(t0.c24))))) IS TRUE)  as count FROM t0 ORDER BY HEX(DISTINCT ((((((((t0.c0)AND(t0.c24)))OR(t0.c0)))OR(t0.c24)))OR(t0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c24)))OR(966520938)))OR(((t0.c0)!=(t0.c24))))) ORDER BY HEX(DISTINCT ((((((((t0.c0)AND(t0.c24)))OR(t0.c0)))OR(t0.c24)))OR(t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c24)))OR(966520938)))OR(((t0.c0)<>(t0.c24))))) IS TRUE)  as count FROM t0 ORDER BY HEX(DISTINCT ((((((((t0.c0)AND(t0.c24)))OR(t0.c0)))OR(t0.c24)))OR(t0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c24)))OR(966520938)))OR(((t0.c0)!=(t0.c24))))) ORDER BY HEX(DISTINCT ((((((((t0.c0)AND(t0.c24)))OR(t0.c0)))OR(t0.c24)))OR(t0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, t0, v0 WHERE (HEX(((vt1.c0)GLOB(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt1.c0)GLOB(v0.c0)))) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL * FROM vt1, t0, v0 WHERE (HEX(((vt1.c0)GLOB(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt1.c0)GLOB(v0.c0)))) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL * FROM vt1, t0, v0 WHERE (HEX(((vt1.c0)GLOB(v0.c0))));
SELECT * FROM t0, vt1 INNER JOIN v0 ON (((+ (v0.c0)))AND(((t0.c24) BETWEEN (t0.c24) AND ('2139791996')))) WHERE (((((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT NULL)) ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOTNULL)) ASC  NULLS FIRST, (~ (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt1 INNER JOIN v0 ON (((+ (v0.c0)))AND(((t0.c24) BETWEEN (t0.c24) AND ('2139791996')))) ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOTNULL)) ASC  NULLS FIRST, (~ (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM t0, vt1 INNER JOIN v0 ON (((+ (v0.c0)))AND(((t0.c24) BETWEEN (t0.c24) AND ('2139791996')))) WHERE (((((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT NULL)) ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOTNULL)) ASC  NULLS FIRST, (~ (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt1 INNER JOIN v0 ON (((+ (v0.c0)))AND(((t0.c24) BETWEEN (t0.c24) AND ('2139791996')))) ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOTNULL)) ASC  NULLS FIRST, (~ (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM t0, vt1 INNER JOIN v0 ON (((+ (v0.c0)))AND(((t0.c24) BETWEEN (t0.c24) AND ('2139791996')))) WHERE (((((t0.c24) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT NULL)) ORDER BY TYPEOF(DISTINCT ((vt1.c0) NOTNULL)) ASC  NULLS FIRST, (~ (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT * FROM v0, t0, vt1 WHERE (CAST(CASE NULL  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE NULL  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0, t0, vt1);
SELECT * FROM v0, t0, vt1 WHERE (CAST(CASE NULL  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE NULL  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0, t0, vt1);
SELECT * FROM v0, t0, vt1 WHERE (CAST(CASE NULL  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END AS NUMERIC));
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON ((vt1.c0)%(vt1.c0)) COLLATE RTRIM CROSS JOIN t0 ON CAST((v0.c0 IN ()) AS BLOB) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0 INNER JOIN vt1 ON ((vt1.c0)%(vt1.c0)) COLLATE RTRIM CROSS JOIN t0 ON CAST((v0.c0 IN ()) AS BLOB));
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON ((vt1.c0)%(vt1.c0)) COLLATE RTRIM CROSS JOIN t0 ON CAST((v0.c0 IN ()) AS BLOB) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0 INNER JOIN vt1 ON ((vt1.c0)%(vt1.c0)) COLLATE RTRIM CROSS JOIN t0 ON CAST((v0.c0 IN ()) AS BLOB));
SELECT COUNT(*) FROM v0 INNER JOIN vt1 ON ((vt1.c0)%(vt1.c0)) COLLATE RTRIM CROSS JOIN t0 ON CAST((v0.c0 IN ()) AS BLOB) WHERE ('');
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) NOT NULL) IN ())) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) NOT NULL) IN ())) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) NOT NULL) IN ())) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT ALL * FROM vt1, v0, t0 WHERE ((((t0.c0)/(vt1.c0)) IN ())) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)/(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM vt1, v0, t0 WHERE ((((t0.c0)/(vt1.c0)) IN ())) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)/(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM vt1, v0, t0 WHERE ((((t0.c0)/(vt1.c0)) IN ())) ORDER BY v0.c0  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, vt1 WHERE ((+ (((((((((((((t0.c24)AND('?vMg')))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY (((((vt1.c0) IS FALSE), t0.c0 COLLATE BINARY, ((vt1.c0)>(vt1.c0))))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)), (- (NULL)), ((t0.c24)!=(v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((t0.c24)AND('?vMg')))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY (((((vt1.c0) IS FALSE), t0.c0 COLLATE BINARY, ((vt1.c0)>(vt1.c0))))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)), (- (NULL)), ((t0.c24)!=(v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE ((+ (((((((((((((t0.c24)AND('?vMg')))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY (((((vt1.c0) IS FALSE), t0.c0 COLLATE BINARY, ((vt1.c0)>(vt1.c0))))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)), (- (NULL)), ((t0.c24)!=(v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((t0.c24)AND('?vMg')))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY (((((vt1.c0) IS FALSE), t0.c0 COLLATE BINARY, ((vt1.c0)>(vt1.c0))))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)), (- (NULL)), ((t0.c24)!=(v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt1 WHERE ((+ (((((((((((((t0.c24)AND('?vMg')))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY (((((vt1.c0) IS FALSE), t0.c0 COLLATE BINARY, ((vt1.c0)>(vt1.c0))))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)), (- (NULL)), ((t0.c24)!=(v0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.6776667892632189 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.6776667892632189 END AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.6776667892632189 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.6776667892632189 END AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN 0.6776667892632189 END AS TEXT));
SELECT * FROM vt1, v0, t0 WHERE ((+ ((((v0.c0, t0.c0, t0.c24))<((v0.c0, vt1.c0, t0.c0)))))) ORDER BY (((t0.c0 IN ()))+(TRIM(DISTINCT vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((v0.c0, t0.c0, t0.c24))<((v0.c0, vt1.c0, t0.c0)))))) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY (((t0.c0 IN ()))+(TRIM(DISTINCT vt1.c0))) DESC  NULLS LAST);
SELECT * FROM vt1, v0, t0 WHERE ((+ ((((v0.c0, t0.c0, t0.c24))<((v0.c0, vt1.c0, t0.c0)))))) ORDER BY (((t0.c0 IN ()))+(TRIM(DISTINCT vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((v0.c0, t0.c0, t0.c24))<((v0.c0, vt1.c0, t0.c0)))))) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY (((t0.c0 IN ()))+(TRIM(DISTINCT vt1.c0))) DESC  NULLS LAST);
SELECT * FROM vt1, v0, t0 WHERE ((+ ((((v0.c0, t0.c0, t0.c24))<((v0.c0, vt1.c0, t0.c0)))))) ORDER BY (((t0.c0 IN ()))+(TRIM(DISTINCT vt1.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0 FULL OUTER JOIN t0 ON (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) WHERE (((IFNULL(t0.c24, t0.c0)) IS TRUE)) ORDER BY ((v0.c0) BETWEEN (UPPER(v0.c0)) AND (((vt1.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c24, t0.c0)) IS TRUE)) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN t0 ON (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) ORDER BY ((v0.c0) BETWEEN (UPPER(v0.c0)) AND (((vt1.c0) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 FULL OUTER JOIN t0 ON (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) WHERE (((IFNULL(t0.c24, t0.c0)) IS TRUE)) ORDER BY ((v0.c0) BETWEEN (UPPER(v0.c0)) AND (((vt1.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c24, t0.c0)) IS TRUE)) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN t0 ON (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) ORDER BY ((v0.c0) BETWEEN (UPPER(v0.c0)) AND (((vt1.c0) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 FULL OUTER JOIN t0 ON (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))) WHERE (((IFNULL(t0.c24, t0.c0)) IS TRUE)) ORDER BY ((v0.c0) BETWEEN (UPPER(v0.c0)) AND (((vt1.c0) NOTNULL)))  NULLS LAST;
SELECT ALL * FROM t0, vt1, v0 WHERE (CASE v0.c0  WHEN ((t0.c0) NOT BETWEEN (t0.c24) AND (vt1.c0)) THEN ((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN ((t0.c0) NOT BETWEEN (t0.c24) AND (vt1.c0)) THEN ((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) END) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL * FROM t0, vt1, v0 WHERE (CASE v0.c0  WHEN ((t0.c0) NOT BETWEEN (t0.c24) AND (vt1.c0)) THEN ((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN ((t0.c0) NOT BETWEEN (t0.c24) AND (vt1.c0)) THEN ((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) END) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL * FROM t0, vt1, v0 WHERE (CASE v0.c0  WHEN ((t0.c0) NOT BETWEEN (t0.c24) AND (vt1.c0)) THEN ((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) END);
SELECT * FROM vt1, t0 WHERE ((((t0.c24)<<(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c24)<<(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((t0.c24)<<(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c24)<<(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((t0.c24)<<(vt1.c0)) IN ()));
SELECT * FROM vt1, t0, v0 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (0.59421034436921)) THEN t0.c0 WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) WHEN (t0.c24 IN (t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((x'03b4')) AND ((v0.c0))) ELSE ((((t0.c24)OR(t0.c24)))AND(vt1.c0)) END) ORDER BY ((((((t0.c0)OR(t0.c24)))OR(t0.c24))) NOT BETWEEN ((((t0.c24, vt1.c0, t0.c0))==((0.970079314081821, t0.c0, t0.c0)))) AND (((vt1.c0)-('now6!')))), ((((v0.c0)IS(t0.c0))) NOT BETWEEN (((vt1.c0)<=(t0.c0))) AND ((t0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (0.59421034436921)) THEN t0.c0 WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) WHEN (t0.c24 IN (t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((x'03b4')) AND ((v0.c0))) ELSE ((((t0.c24)OR(t0.c24)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY ((((((t0.c0)OR(t0.c24)))OR(t0.c24))) NOT BETWEEN ((((t0.c24, vt1.c0, t0.c0))==((0.970079314081821, t0.c0, t0.c0)))) AND (((vt1.c0)-('now6!')))), ((((v0.c0)IS(t0.c0))) NOT BETWEEN (((vt1.c0)<=(t0.c0))) AND ((t0.c0 IN ())))  NULLS LAST);
SELECT * FROM vt1, t0, v0 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (0.59421034436921)) THEN t0.c0 WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) WHEN (t0.c24 IN (t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((x'03b4')) AND ((v0.c0))) ELSE ((((t0.c24)OR(t0.c24)))AND(vt1.c0)) END) ORDER BY ((((((t0.c0)OR(t0.c24)))OR(t0.c24))) NOT BETWEEN ((((t0.c24, vt1.c0, t0.c0))==((0.970079314081821, t0.c0, t0.c0)))) AND (((vt1.c0)-('now6!')))), ((((v0.c0)IS(t0.c0))) NOT BETWEEN (((vt1.c0)<=(t0.c0))) AND ((t0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (0.59421034436921)) THEN t0.c0 WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) WHEN (t0.c24 IN (t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((x'03b4')) AND ((v0.c0))) ELSE ((((t0.c24)OR(t0.c24)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY ((((((t0.c0)OR(t0.c24)))OR(t0.c24))) NOT BETWEEN ((((t0.c24, vt1.c0, t0.c0))==((0.970079314081821, t0.c0, t0.c0)))) AND (((vt1.c0)-('now6!')))), ((((v0.c0)IS(t0.c0))) NOT BETWEEN (((vt1.c0)<=(t0.c0))) AND ((t0.c0 IN ())))  NULLS LAST);
SELECT * FROM vt1, t0, v0 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (v0.c0) AND (0.59421034436921)) THEN t0.c0 WHEN vt1.c0 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) WHEN (t0.c24 IN (t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((x'03b4')) AND ((v0.c0))) ELSE ((((t0.c24)OR(t0.c24)))AND(vt1.c0)) END) ORDER BY ((((((t0.c0)OR(t0.c24)))OR(t0.c24))) NOT BETWEEN ((((t0.c24, vt1.c0, t0.c0))==((0.970079314081821, t0.c0, t0.c0)))) AND (((vt1.c0)-('now6!')))), ((((v0.c0)IS(t0.c0))) NOT BETWEEN (((vt1.c0)<=(t0.c0))) AND ((t0.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE (CASE vt1.c0  WHEN TRIM(vt1.c0) THEN '768374721' ELSE ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN TRIM(vt1.c0) THEN '768374721' ELSE ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CASE vt1.c0  WHEN TRIM(vt1.c0) THEN '768374721' ELSE ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN TRIM(vt1.c0) THEN '768374721' ELSE ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CASE vt1.c0  WHEN TRIM(vt1.c0) THEN '768374721' ELSE ((t0.c24) BETWEEN (t0.c24) AND (t0.c24)) END);
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN t0 ON ((v0.c0)<(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c24 END)) WHERE (LIKELY(DISTINCT (t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (t0.c0 IN ()))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN t0 ON ((v0.c0)<(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c24 END)));
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN t0 ON ((v0.c0)<(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c24 END)) WHERE (LIKELY(DISTINCT (t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (t0.c0 IN ()))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN t0 ON ((v0.c0)<(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c24 END)));
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN t0 ON ((v0.c0)<(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c24 END)) WHERE (LIKELY(DISTINCT (t0.c0 IN ())));
SELECT COUNT(*) FROM v0, vt1 RIGHT OUTER JOIN t0 ON PRINTF((((t0.c24)) NOT BETWEEN ((t0.c24)) AND ((vt1.c0))), x'', ((((v0.c0)AND(t0.c24)))OR(vt1.c0))) WHERE (NULL) ORDER BY (((((v0.c0, t0.c24, vt1.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, v0.c0, t0.c24))))<(((v0.c0)<<(t0.c0)))), CAST(((((t0.c24)AND(v0.c0)))AND(t0.c24)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN t0 ON PRINTF((((t0.c24)) NOT BETWEEN ((t0.c24)) AND ((vt1.c0))), x'', ((((v0.c0)AND(t0.c24)))OR(vt1.c0))) ORDER BY (((((v0.c0, t0.c24, vt1.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, v0.c0, t0.c24))))<(((v0.c0)<<(t0.c0)))), CAST(((((t0.c24)AND(v0.c0)))AND(t0.c24)) AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 RIGHT OUTER JOIN t0 ON PRINTF((((t0.c24)) NOT BETWEEN ((t0.c24)) AND ((vt1.c0))), x'', ((((v0.c0)AND(t0.c24)))OR(vt1.c0))) WHERE (NULL) ORDER BY (((((v0.c0, t0.c24, vt1.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, v0.c0, t0.c24))))<(((v0.c0)<<(t0.c0)))), CAST(((((t0.c24)AND(v0.c0)))AND(t0.c24)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN t0 ON PRINTF((((t0.c24)) NOT BETWEEN ((t0.c24)) AND ((vt1.c0))), x'', ((((v0.c0)AND(t0.c24)))OR(vt1.c0))) ORDER BY (((((v0.c0, t0.c24, vt1.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, v0.c0, t0.c24))))<(((v0.c0)<<(t0.c0)))), CAST(((((t0.c24)AND(v0.c0)))AND(t0.c24)) AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 RIGHT OUTER JOIN t0 ON PRINTF((((t0.c24)) NOT BETWEEN ((t0.c24)) AND ((vt1.c0))), x'', ((((v0.c0)AND(t0.c24)))OR(vt1.c0))) WHERE (NULL) ORDER BY (((((v0.c0, t0.c24, vt1.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, v0.c0, t0.c24))))<(((v0.c0)<<(t0.c0)))), CAST(((((t0.c24)AND(v0.c0)))AND(t0.c24)) AS INTEGER) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (((t0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL)) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (((t0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL)) IS TRUE)  as count FROM t0, vt1, v0);
SELECT ALL COUNT(*) FROM t0, vt1, v0 WHERE (((t0.c0) NOTNULL));
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END COLLATE NOCASE) ORDER BY ((vt1.c0 COLLATE NOCASE)*(vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)*(vt1.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END COLLATE NOCASE) ORDER BY ((vt1.c0 COLLATE NOCASE)*(vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)*(vt1.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END COLLATE NOCASE) ORDER BY ((vt1.c0 COLLATE NOCASE)*(vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT * FROM vt1 WHERE (((vt1.c0)AND(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)AND(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)AND(vt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE ((~ (CASE v0.c0  WHEN NULL THEN vt1.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE v0.c0  WHEN NULL THEN vt1.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM v0, vt1, t0);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE ((~ (CASE v0.c0  WHEN NULL THEN vt1.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE v0.c0  WHEN NULL THEN vt1.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM v0, vt1, t0);
SELECT ALL COUNT(*) FROM v0, vt1, t0 WHERE ((~ (CASE v0.c0  WHEN NULL THEN vt1.c0 ELSE t0.c0 END)));
SELECT * FROM vt1, t0 WHERE (t0.c0) ORDER BY (('')+((((vt1.c0)) BETWEEN ((t0.c24)) AND ((vt1.c0))))), 0Xb4e2a87 COLLATE RTRIM, CAST((~ (t0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0 ORDER BY (('')+((((vt1.c0)) BETWEEN ((t0.c24)) AND ((vt1.c0))))), 0xb4e2a87 COLLATE RTRIM, CAST((~ (t0.c0)) AS REAL) ASC);
SELECT * FROM vt1, t0 WHERE (t0.c0) ORDER BY (('')+((((vt1.c0)) BETWEEN ((t0.c24)) AND ((vt1.c0))))), 0Xb4e2a87 COLLATE RTRIM, CAST((~ (t0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0 ORDER BY (('')+((((vt1.c0)) BETWEEN ((t0.c24)) AND ((vt1.c0))))), 0xb4e2a87 COLLATE RTRIM, CAST((~ (t0.c0)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (((-118469197)>>((((t0.c0))>((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((-118469197)>>((((t0.c0))>((t0.c0)))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (((-118469197)>>((((t0.c0))>((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((-118469197)>>((((t0.c0))>((t0.c0)))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE (((-118469197)>>((((t0.c0))>((t0.c0))))));
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN t0 ON (((((v0.c0 IN ()))OR(LIKELY(DISTINCT t0.c24))))AND(((((t0.c24)OR(vt1.c0)))OR(v0.c0)))) WHERE (((((t0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))||(x''))) ORDER BY (((((((t0.c0))<>((vt1.c0))))AND((+ (v0.c0)))))AND(((0X6775bbdb) BETWEEN (vt1.c0) AND (t0.c0))))  NULLS FIRST, (((v0.c0 IN (t0.c0)))LIKE(vt1.c0)), (NULL IN (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c24 WHEN t0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))||(x''))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN t0 ON (((((v0.c0 IN ()))OR(LIKELY(DISTINCT t0.c24))))AND(((((t0.c24)OR(vt1.c0)))OR(v0.c0)))) ORDER BY (((((((t0.c0))<>((vt1.c0))))AND((+ (v0.c0)))))AND(((0x6775bbdb) BETWEEN (vt1.c0) AND (t0.c0))))  NULLS FIRST, (((v0.c0 IN (t0.c0)))LIKE(vt1.c0)), (NULL IN (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c24 WHEN t0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN t0 ON (((((v0.c0 IN ()))OR(LIKELY(DISTINCT t0.c24))))AND(((((t0.c24)OR(vt1.c0)))OR(v0.c0)))) WHERE (((((t0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))||(x''))) ORDER BY (((((((t0.c0))<>((vt1.c0))))AND((+ (v0.c0)))))AND(((0X6775bbdb) BETWEEN (vt1.c0) AND (t0.c0))))  NULLS FIRST, (((v0.c0 IN (t0.c0)))LIKE(vt1.c0)), (NULL IN (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c24 WHEN t0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))||(x''))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN t0 ON (((((v0.c0 IN ()))OR(LIKELY(DISTINCT t0.c24))))AND(((((t0.c24)OR(vt1.c0)))OR(v0.c0)))) ORDER BY (((((((t0.c0))<>((vt1.c0))))AND((+ (v0.c0)))))AND(((0x6775bbdb) BETWEEN (vt1.c0) AND (t0.c0))))  NULLS FIRST, (((v0.c0 IN (t0.c0)))LIKE(vt1.c0)), (NULL IN (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c24 WHEN t0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN t0 ON (((((v0.c0 IN ()))OR(LIKELY(DISTINCT t0.c24))))AND(((((t0.c24)OR(vt1.c0)))OR(v0.c0)))) WHERE (((((t0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))||(x''))) ORDER BY (((((((t0.c0))<>((vt1.c0))))AND((+ (v0.c0)))))AND(((0X6775bbdb) BETWEEN (vt1.c0) AND (t0.c0))))  NULLS FIRST, (((v0.c0 IN (t0.c0)))LIKE(vt1.c0)), (NULL IN (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c24 WHEN t0.c0 THEN v0.c0 END));
SELECT ALL * FROM t0 WHERE (0X1) ORDER BY ((((((t0.c24)OR(t0.c24)))OR(t0.c0))) NOT NULL)  NULLS LAST, ((((((t0.c0)OR(t0.c24)))OR(t0.c0)))!=((NOT (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0X1) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c24)OR(t0.c24)))OR(t0.c0))) NOT NULL)  NULLS LAST, ((((((t0.c0)OR(t0.c24)))OR(t0.c0)))<>((NOT (t0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (0X1) ORDER BY ((((((t0.c24)OR(t0.c24)))OR(t0.c0))) NOT NULL)  NULLS LAST, ((((((t0.c0)OR(t0.c24)))OR(t0.c0)))!=((NOT (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0X1) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c24)OR(t0.c24)))OR(t0.c0))) NOT NULL)  NULLS LAST, ((((((t0.c0)OR(t0.c24)))OR(t0.c0)))<>((NOT (t0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (0X1) ORDER BY ((((((t0.c24)OR(t0.c24)))OR(t0.c0))) NOT NULL)  NULLS LAST, ((((((t0.c0)OR(t0.c24)))OR(t0.c0)))!=((NOT (t0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0 NATURAL JOIN vt1 WHERE (((x'' IN ()) IN ())) ORDER BY (~ (((vt1.c0) NOT BETWEEN (0.6351854128410974) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN ()) IN ())) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt1 ORDER BY (~ (((vt1.c0) NOT BETWEEN (0.6351854128410974) AND (vt1.c0)))) DESC);
SELECT ALL * FROM t0, v0 NATURAL JOIN vt1 WHERE (((x'' IN ()) IN ())) ORDER BY (~ (((vt1.c0) NOT BETWEEN (0.6351854128410974) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN ()) IN ())) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt1 ORDER BY (~ (((vt1.c0) NOT BETWEEN (0.6351854128410974) AND (vt1.c0)))) DESC);
SELECT ALL * FROM t0, v0 NATURAL JOIN vt1 WHERE (((x'' IN ()) IN ())) ORDER BY (~ (((vt1.c0) NOT BETWEEN (0.6351854128410974) AND (vt1.c0)))) DESC;
SELECT COUNT(*) FROM vt1, v0 WHERE ((- (CAST(v0.c0 AS REAL)))) ORDER BY v0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, v0 ORDER BY v0.c0 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE ((- (CAST(v0.c0 AS REAL)))) ORDER BY v0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, v0 ORDER BY v0.c0 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE ((- (CAST(v0.c0 AS REAL)))) ORDER BY v0.c0 COLLATE BINARY  NULLS LAST;
SELECT * FROM v0, vt1, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, vt1, t0);
SELECT * FROM v0, vt1, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, vt1, t0);
SELECT * FROM v0, vt1, t0 WHERE ('');
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) BETWEEN (LTRIM(t0.c0, t0.c24)) AND (((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) BETWEEN (LTRIM(t0.c0, t0.c24)) AND (((t0.c0) BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) BETWEEN (LTRIM(t0.c0, t0.c24)) AND (((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) BETWEEN (LTRIM(t0.c0, t0.c24)) AND (((t0.c0) BETWEEN (vt1.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt1.c0))) BETWEEN (LTRIM(t0.c0, t0.c24)) AND (((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((+ (v0.c0))) IS TRUE)) ORDER BY TRIM(DISTINCT ((v0.c0)>(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT ((v0.c0)>(v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((+ (v0.c0))) IS TRUE)) ORDER BY TRIM(DISTINCT ((v0.c0)>(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT ((v0.c0)>(v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((+ (v0.c0))) IS TRUE)) ORDER BY TRIM(DISTINCT ((v0.c0)>(v0.c0)))  NULLS LAST;
SELECT * FROM vt1, t0 WHERE (((t0.c24)<=(t0.c0 COLLATE NOCASE))) ORDER BY ((((((NULL)AND(t0.c24)))AND(t0.c0))) NOT BETWEEN (ABS(vt1.c0)) AND (CAST(vt1.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c24)<=(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((NULL)AND(t0.c24)))AND(t0.c0))) NOT BETWEEN (ABS(vt1.c0)) AND (CAST(vt1.c0 AS BLOB)))  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (((t0.c24)<=(t0.c0 COLLATE NOCASE))) ORDER BY ((((((NULL)AND(t0.c24)))AND(t0.c0))) NOT BETWEEN (ABS(vt1.c0)) AND (CAST(vt1.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c24)<=(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((NULL)AND(t0.c24)))AND(t0.c0))) NOT BETWEEN (ABS(vt1.c0)) AND (CAST(vt1.c0 AS BLOB)))  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (((t0.c24)<=(t0.c0 COLLATE NOCASE))) ORDER BY ((((((NULL)AND(t0.c24)))AND(t0.c0))) NOT BETWEEN (ABS(vt1.c0)) AND (CAST(vt1.c0 AS BLOB)))  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (CAST((~ (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (CAST((~ (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (CAST((~ (t0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE (vt1.c0) ORDER BY (((~ (v0.c0)))>>(t0.c24 COLLATE BINARY))  NULLS FIRST, CASE WHEN LOWER(v0.c0) THEN ((((t0.c24)AND(t0.c0)))AND(t0.c24)) END ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY (((~ (v0.c0)))>>(t0.c24 COLLATE BINARY))  NULLS FIRST, CASE WHEN LOWER(v0.c0) THEN ((((t0.c24)AND(t0.c0)))AND(t0.c24)) END ASC);
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE (vt1.c0) ORDER BY (((~ (v0.c0)))>>(t0.c24 COLLATE BINARY))  NULLS FIRST, CASE WHEN LOWER(v0.c0) THEN ((((t0.c24)AND(t0.c0)))AND(t0.c24)) END ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, t0, v0 ORDER BY (((~ (v0.c0)))>>(t0.c24 COLLATE BINARY))  NULLS FIRST, CASE WHEN LOWER(v0.c0) THEN ((((t0.c24)AND(t0.c0)))AND(t0.c24)) END ASC);
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE (vt1.c0) ORDER BY (((~ (v0.c0)))>>(t0.c24 COLLATE BINARY))  NULLS FIRST, CASE WHEN LOWER(v0.c0) THEN ((((t0.c24)AND(t0.c0)))AND(t0.c24)) END ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON t0.c0 WHERE (((CAST(t0.c24 AS INTEGER))OR(t0.c24 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c24 AS INTEGER))OR(t0.c24 COLLATE RTRIM))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON t0.c0);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON t0.c0 WHERE (((CAST(t0.c24 AS INTEGER))OR(t0.c24 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c24 AS INTEGER))OR(t0.c24 COLLATE RTRIM))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON t0.c0);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON t0.c0 WHERE (((CAST(t0.c24 AS INTEGER))OR(t0.c24 COLLATE RTRIM)));
SELECT ALL * FROM v0, t0 NOT INDEXED WHERE (t0.c0 COLLATE NOCASE) ORDER BY ABS(t0.c24 COLLATE RTRIM) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 ORDER BY ABS(t0.c24 COLLATE RTRIM) DESC  NULLS LAST);
SELECT ALL * FROM v0, t0 NOT INDEXED WHERE (t0.c0 COLLATE NOCASE) ORDER BY ABS(t0.c24 COLLATE RTRIM) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 ORDER BY ABS(t0.c24 COLLATE RTRIM) DESC  NULLS LAST);
SELECT ALL * FROM v0, t0 NOT INDEXED WHERE (t0.c0 COLLATE NOCASE) ORDER BY ABS(t0.c24 COLLATE RTRIM) DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0 INNER JOIN v0 ON json_type((t0.c24 IN ())) WHERE (((((+ (v0.c0))))>((x'96aa'))));
SELECT SUM(count) FROM (SELECT ((((((+ (v0.c0))))>((x'96aa')))) IS TRUE)  as count FROM vt1, t0 INNER JOIN v0 ON json_type((t0.c24 IN ())));
SELECT ALL * FROM vt1, t0 INNER JOIN v0 ON json_type((t0.c24 IN ())) WHERE (((((+ (v0.c0))))>((x'96aa'))));
SELECT SUM(count) FROM (SELECT ((((((+ (v0.c0))))>((x'96aa')))) IS TRUE)  as count FROM vt1, t0 INNER JOIN v0 ON json_type((t0.c24 IN ())));
SELECT ALL * FROM vt1, t0 INNER JOIN v0 ON json_type((t0.c24 IN ())) WHERE (((((+ (v0.c0))))>((x'96aa'))));
SELECT ALL * FROM t0, v0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, v0, vt1);
SELECT ALL * FROM t0, v0, vt1 WHERE ('');
SELECT ALL * FROM v0, t0, vt1 WHERE ((NOT ((+ (t0.c24)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t0.c24))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL * FROM v0, t0, vt1 WHERE ((NOT ((+ (t0.c24)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t0.c24))))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL * FROM v0, t0, vt1 WHERE ((NOT ((+ (t0.c24)))));
SELECT COUNT(*) FROM t0, v0, vt1 WHERE (IFNULL(DISTINCT CASE 0.16181462576973904  WHEN t0.c24 THEN t0.c0 END, (NOT (v0.c0)))) ORDER BY ((((vt1.c0)*(t0.c24)))<=(CAST(vt1.c0 AS REAL))) ASC  NULLS LAST, (+ (((v0.c0) BETWEEN (t0.c0) AND (t0.c24))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT CASE 0.16181462576973904  WHEN t0.c24 THEN t0.c0 END, (NOT (v0.c0)))) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY ((((vt1.c0)*(t0.c24)))<=(CAST(vt1.c0 AS REAL))) ASC  NULLS LAST, (+ (((v0.c0) BETWEEN (t0.c0) AND (t0.c24)))));
SELECT COUNT(*) FROM t0, v0, vt1 WHERE (IFNULL(DISTINCT CASE 0.16181462576973904  WHEN t0.c24 THEN t0.c0 END, (NOT (v0.c0)))) ORDER BY ((((vt1.c0)*(t0.c24)))<=(CAST(vt1.c0 AS REAL))) ASC  NULLS LAST, (+ (((v0.c0) BETWEEN (t0.c0) AND (t0.c24))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT CASE 0.16181462576973904  WHEN t0.c24 THEN t0.c0 END, (NOT (v0.c0)))) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY ((((vt1.c0)*(t0.c24)))<=(CAST(vt1.c0 AS REAL))) ASC  NULLS LAST, (+ (((v0.c0) BETWEEN (t0.c0) AND (t0.c24)))));
SELECT COUNT(*) FROM t0, v0, vt1 WHERE (IFNULL(DISTINCT CASE 0.16181462576973904  WHEN t0.c24 THEN t0.c0 END, (NOT (v0.c0)))) ORDER BY ((((vt1.c0)*(t0.c24)))<=(CAST(vt1.c0 AS REAL))) ASC  NULLS LAST, (+ (((v0.c0) BETWEEN (t0.c0) AND (t0.c24))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (((((x'')AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) ORDER BY 0.48565947954948663 COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY 0.48565947954948663 COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (((((x'')AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) ORDER BY 0.48565947954948663 COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0, t0 ORDER BY 0.48565947954948663 COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, t0 WHERE (((((x'')AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) ORDER BY 0.48565947954948663 COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)OR(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)OR(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)OR(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)OR(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)OR(vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((v0.c0)OR(t0.c24)))OR(t0.c24)))AND((((('')OR(t0.c24)))AND(t0.c24)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(t0.c24)))OR(t0.c24)))AND((((('')OR(t0.c24)))AND(t0.c24))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((v0.c0)OR(t0.c24)))OR(t0.c24)))AND((((('')OR(t0.c24)))AND(t0.c24)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(t0.c24)))OR(t0.c24)))AND((((('')OR(t0.c24)))AND(t0.c24))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((v0.c0)OR(t0.c24)))OR(t0.c24)))AND((((('')OR(t0.c24)))AND(t0.c24)))));
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM vt1 INDEXED BY i30 WHERE ((~ (']\n'))) ORDER BY ((ABS(DISTINCT vt1.c0))AND(((vt1.c0)/(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (']\n'))) IS TRUE)  as count FROM vt1 INDEXED BY i30 ORDER BY ((ABS(DISTINCT vt1.c0))AND(((vt1.c0)/(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INDEXED BY i30 WHERE ((~ (']\n'))) ORDER BY ((ABS(DISTINCT vt1.c0))AND(((vt1.c0)/(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (']\n'))) IS TRUE)  as count FROM vt1 INDEXED BY i30 ORDER BY ((ABS(DISTINCT vt1.c0))AND(((vt1.c0)/(vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1, v0 WHERE ((((+ (vt1.c0)))<>(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))<>(vt1.c0))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((+ (vt1.c0)))<>(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))<>(vt1.c0))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((+ (vt1.c0)))<>(vt1.c0)));
SELECT ALL * FROM v0, vt1, t0 WHERE ((((t0.c24)) BETWEEN ((((((t0.c0)AND(v0.c0)))AND(t0.c24)))) AND ((((t0.c0)IS NOT(0.8489867222703629)))))) ORDER BY ((NULL COLLATE NOCASE) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c24)) BETWEEN ((((((t0.c0)AND(v0.c0)))AND(t0.c24)))) AND ((((t0.c0)IS NOT(0.8489867222703629)))))) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY ((NULL COLLATE NOCASE) ISNULL) DESC);
SELECT ALL * FROM v0, vt1, t0 WHERE ((((t0.c24)) BETWEEN ((((((t0.c0)AND(v0.c0)))AND(t0.c24)))) AND ((((t0.c0)IS NOT(0.8489867222703629)))))) ORDER BY ((NULL COLLATE NOCASE) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c24)) BETWEEN ((((((t0.c0)AND(v0.c0)))AND(t0.c24)))) AND ((((t0.c0)IS NOT(0.8489867222703629)))))) IS TRUE)  as count FROM v0, vt1, t0 ORDER BY ((NULL COLLATE NOCASE) ISNULL) DESC);
SELECT ALL * FROM v0, vt1, t0 WHERE ((((t0.c24)) BETWEEN ((((((t0.c0)AND(v0.c0)))AND(t0.c24)))) AND ((((t0.c0)IS NOT(0.8489867222703629)))))) ORDER BY ((NULL COLLATE NOCASE) ISNULL) DESC;
