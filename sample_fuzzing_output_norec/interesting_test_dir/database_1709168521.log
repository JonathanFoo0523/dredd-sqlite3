-- Time: 2024/06/09 15:27:01
-- Database: database21
-- Database version: 3.40.0
-- seed value: 1709168521
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
UPDATE vt0 SET (c1)=(NULL); -- 0ms;
DROP TABLE vt0; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL rt1 SET c0=-924487748 WHERE CAST(((rt1.c2)<=(rt1.c2)) AS BLOB); -- 0ms;
UPDATE rt1 SET c0='-1869967199', c2=NULL; -- 0ms;
UPDATE rt1 SET (c0, c2, c1)=(0.6019145507950152, '191684752', x''); -- 0ms;
PRAGMA main.incremental_vacuum; -- 1ms;
ANALYZE temp; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (x'38c5'), (0.7427330615454715), (NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET c1='-924487748'; -- 1ms;
REINDEX RTRIM; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt1(c2, c0, c1) VALUES (0.6019145507950152, '', ']7⟰<2OQS6'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt1 SET (c1)=(0.6620996517715828) WHERE CASE WHEN ((rt1.c2) IS FALSE) THEN ('' IN (rt1.c2)) ELSE SUBSTR(rt1.c2, rt1.c0) END; -- 1ms;
UPDATE rt1 SET c0=NULL WHERE ((CASE WHEN rt1.c2 THEN rt1.c1 END)OR(((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))); -- 0ms;
PRAGMA temp.journal_mode; -- 1ms;
INSERT OR IGNORE INTO rt1 VALUES (1841259344, -1.869967199E9, '1841259344'), (1.841259344E9, (x'3d07' IN ()), NULL), (0.6945552481678765, '-874881851', -1.869967199E9); -- 1ms;
REINDEX  rt1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR ABORT INTO rt1(c2) VALUES (0.6945552481678765), (NULL), ('675424527'); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=x'' WHERE (NOT ((rt1.c1 IN ()))); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (0.7427330615454715, '/z]'); -- 0ms;
UPDATE OR IGNORE rt1 SET c2='+x)- CSV*', c1=NULL WHERE (((~ (rt1.c2))) NOTNULL); -- 0ms;
PRAGMA main.secure_delete = FAST; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(0.6945552481678765); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 151966609); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '24342'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '27608'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43958'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c1=0x186ff253; -- 0ms;
UPDATE rt1 SET (c0, c0, c1)=(0X2842290f, -1203054315, 0.15146547045154668); -- 0ms;
ANALYZE temp; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c0, c2)=(48159592, NULL, 0X6dbf6350); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL, c1=NULL; -- 0ms;
UPDATE rt1 SET (c1)=('J'); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=689661538, c2=x''; -- 1ms;
COMMIT; -- 2ms;
UPDATE OR ABORT rt1 SET c0=x'', c0='675424527', c0=NULL; -- 1ms;
UPDATE rt1 SET (c1, c1)=('', -482062795) WHERE ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))) IS TRUE); -- 0ms;
DELETE FROM rt1; -- 2ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
UPDATE rt1 SET (c2)=(x''); -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
UPDATE OR REPLACE rt1 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(NULL) WHERE (((CAST(rt1.c1 AS REAL)))<=((CAST(rt1.c0 AS NUMERIC)))); -- 0ms;
UPDATE OR IGNORE rt1 SET c2=798612710 WHERE rt1.c2; -- 1ms;
UPDATE OR FAIL rt1 SET c2=0.6945552481678765 WHERE json_type(((('191684752', rt1.c0, rt1.c0))<((rt1.c2, rt1.c2, rt1.c0)))); -- 0ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0, c2) VALUES ('늰F|	fQDw', '8|	'' #\!%'), ('-924487748', -1.805244432E9), (0Xffffffffc4b32656, x''); -- 2ms;
INSERT OR ABORT INTO rt1(c1, c0) VALUES (x'', ']7⟰<2oqs6'), ('0.6019145507950152', -685220647), (48159592, x''); -- 0ms;
INSERT OR REPLACE INTO rt1(c1) VALUES (x''), (x'eb535ec2'), (x'e28b'); -- 3ms;
PRAGMA mmap_size; -- 0ms;
VACUUM main; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE rt1 SET c0='1552829293', c1='-970780082'; -- 2ms;
INSERT OR ABORT INTO rt1 VALUES (x'cb51', 0.2899518562190747, x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1) VALUES ('0.6019145507950152', x'', 0.8563247287720166), ('-0.0', '늰F|	fQDw', NULL), ('', x'', x''); -- 0ms;
COMMIT; -- 0ms;
PRAGMA temp.journal_mode; -- 1ms;
PRAGMA temp.recursive_triggers; -- 0ms;
UPDATE OR ABORT rt1 SET (c0, c2)=(x'', 0.706391781230904); -- 0ms;
UPDATE rt1 SET c0=x'0a8a' WHERE (((rt1.c1)>=(rt1.c1)) IN (CAST(rt1.c2 AS REAL))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1) VALUES (x'ab85', 0x291b6662, 0Xffffffffcbc4d813); -- 6ms;
PRAGMA temp.recursive_triggers; -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c1)=(NULL, 0.04975798656874142); -- 0ms;
END; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=460153039'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))AND(((7.9861271E8) IS TRUE))))OR((((NULL, x'', '', 0Xffffffffc6f5b2b0, x'23dd')) BETWEEN ((0.6019145507950152, 0.3481887389070534, -1818806475, -1896479245, 0.6468088629672797)) AND ((NULL, NULL, x'e4b1', x'e477', x''))))); -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES ('xE''7b<[', '-491198807', x''), ('Q邙9xIZe?', x'', NULL), (NULL, x'', ',R['); -- 0ms;
REINDEX  rt1; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c0)=(0.29198629108262786, 0.6945552481678765) WHERE ((((rt1.c1)<(rt1.c0))) NOT NULL); -- 1ms;
ANALYZE temp; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INTEGER , c1 BLOB UNIQUE CHECK ( (((((c2)) BETWEEN (('1070477286')) AND ((c1))))IS NOT(((c0)>=(c2))))) , c2 BLOB ); -- 0ms;
CREATE UNIQUE INDEX i12 ON t0(x'',((c0)*(CASE c1  WHEN c0 THEN c2 END)),((c1) BETWEEN (((c0)||(0.521321354526881))) AND ((~ (c0)))) COLLATE NOCASE ASC) WHERE ((c1)<>(c0)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(0Xffffffffa78d1a82))) NOT BETWEEN ((('1403031705')*(0.829281344680715))) AND ('')); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt1 WHERE (((((NULL)%(x'')))>=(CAST(rt1.c2 AS BLOB)))) ORDER BY rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)%(x'')))>=(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((NULL)%(x'')))>=(CAST(rt1.c2 AS BLOB)))) ORDER BY rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)%(x'')))>=(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((NULL)%(x'')))>=(CAST(rt1.c2 AS BLOB)))) ORDER BY rt1.c1  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))))<((((rt1.c2)+(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))))<((((rt1.c2)+(rt1.c2)))))) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT * FROM rt1 WHERE ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))))<((((rt1.c2)+(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))))<((((rt1.c2)+(rt1.c2)))))) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT * FROM rt1 WHERE ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))))<((((rt1.c2)+(rt1.c2))))));
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1) ISNULL) AS INTEGER));
SELECT COUNT(*) FROM t0 WHERE ((NOT (t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c1))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c1))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (t0.c1)));
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c1);
SELECT * FROM t0 WHERE ((NOT ((t0.c2 IN ())))) ORDER BY ((('-259143934')) BETWEEN ((((t0.c1)=(t0.c0)))) AND ((((t0.c1)+(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c2 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((('-259143934')) BETWEEN ((((t0.c1)=(t0.c0)))) AND ((((t0.c1)+(t0.c0)))))  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT ((t0.c2 IN ())))) ORDER BY ((('-259143934')) BETWEEN ((((t0.c1)=(t0.c0)))) AND ((((t0.c1)+(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c2 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((('-259143934')) BETWEEN ((((t0.c1)=(t0.c0)))) AND ((((t0.c1)+(t0.c0)))))  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT ((t0.c2 IN ())))) ORDER BY ((('-259143934')) BETWEEN ((((t0.c1)=(t0.c0)))) AND ((((t0.c1)+(t0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))OR(0.0029860966970783887))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))) AND (-325791539 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))OR(0.0029860966970783887))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))) AND (-325791539 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))OR(0.0029860966970783887))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))) AND (-325791539 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))OR(0.0029860966970783887))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))) AND (-325791539 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))OR(0.0029860966970783887))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))) AND (-325791539 COLLATE NOCASE)));
SELECT * FROM rt1, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY t0.c1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY t0.c1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY t0.c1;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1)+(rt1.c1)) COLLATE BINARY) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)OR(((NULL) BETWEEN (rt0.c1) AND (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)+(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)OR(((NULL) BETWEEN (rt0.c1) AND (rt1.c2)))) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1)+(rt1.c1)) COLLATE BINARY) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)OR(((NULL) BETWEEN (rt0.c1) AND (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)+(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)OR(((NULL) BETWEEN (rt0.c1) AND (rt1.c2)))) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1)+(rt1.c1)) COLLATE BINARY) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)OR(((NULL) BETWEEN (rt0.c1) AND (rt1.c2)))) ASC;
SELECT ALL * FROM t0, rt1 WHERE ((((~ (0.6945552481678765))) BETWEEN (((t0.c1)%(t0.c1))) AND (t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (0.6945552481678765))) BETWEEN (((t0.c1)%(t0.c1))) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((~ (0.6945552481678765))) BETWEEN (((t0.c1)%(t0.c1))) AND (t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (0.6945552481678765))) BETWEEN (((t0.c1)%(t0.c1))) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((~ (0.6945552481678765))) BETWEEN (((t0.c1)%(t0.c1))) AND (t0.c0 COLLATE RTRIM)));
SELECT * FROM t0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ('');
SELECT * FROM rt0, t0 WHERE (x'cd55a9c9a10c');
SELECT SUM(count) FROM (SELECT ALL ((x'cd55a9c9a10c') IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (x'cd55a9c9a10c');
SELECT SUM(count) FROM (SELECT ALL ((x'cd55a9c9a10c') IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (x'cd55a9c9a10c');
SELECT * FROM rt0 WHERE ((+ (((rt0.c1)-(x'f4b14e82'))))) ORDER BY (+ (((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)-(x'f4b14e82'))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c2) ISNULL))));
SELECT * FROM rt0 WHERE ((+ (((rt0.c1)-(x'f4b14e82'))))) ORDER BY (+ (((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)-(x'f4b14e82'))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c2) ISNULL))));
SELECT * FROM rt0 WHERE ((+ (((rt0.c1)-(x'f4b14e82'))))) ORDER BY (+ (((rt0.c2) ISNULL)));
SELECT COUNT(*) FROM rt1 WHERE (((json_array_length(rt1.c0, rt1.c0))<>((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) ORDER BY ((rt1.c2)>(rt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((((((rt1.c2) IS TRUE))AND(((rt1.c0)==(rt1.c0)))))AND(((NULL)>>(rt1.c2)))) ASC  NULLS LAST, ((rt1.c2 COLLATE NOCASE) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((json_array_length(rt1.c0, rt1.c0))<>((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)>(rt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((((((rt1.c2) IS TRUE))AND(((rt1.c0)=(rt1.c0)))))AND(((NULL)>>(rt1.c2)))) ASC  NULLS LAST, ((rt1.c2 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE (((json_array_length(rt1.c0, rt1.c0))<>((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) ORDER BY ((rt1.c2)>(rt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((((((rt1.c2) IS TRUE))AND(((rt1.c0)==(rt1.c0)))))AND(((NULL)>>(rt1.c2)))) ASC  NULLS LAST, ((rt1.c2 COLLATE NOCASE) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((json_array_length(rt1.c0, rt1.c0))<>((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)>(rt1.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((((((rt1.c2) IS TRUE))AND(((rt1.c0)=(rt1.c0)))))AND(((NULL)>>(rt1.c2)))) ASC  NULLS LAST, ((rt1.c2 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt1.c1) BETWEEN (rt0.c1) AND (t0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt0.c1) AND (t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt1.c1) BETWEEN (rt0.c1) AND (t0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt0.c1) AND (t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt1.c1) BETWEEN (rt0.c1) AND (t0.c1))) IS FALSE));
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN '-685220647' ELSE rt0.c0 END THEN (NOT (rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END, 0.29958102217962834 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN '-685220647' ELSE rt0.c0 END THEN (NOT (rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END, 0.29958102217962834 DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN '-685220647' ELSE rt0.c0 END THEN (NOT (rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END, 0.29958102217962834 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN '-685220647' ELSE rt0.c0 END THEN (NOT (rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END, 0.29958102217962834 DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN '-685220647' ELSE rt0.c0 END THEN (NOT (rt0.c2)) ELSE rt0.c1 COLLATE RTRIM END, 0.29958102217962834 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))) WHERE ('?W\n㐬' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('?W\n㐬' COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))) WHERE ('?W\n㐬' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('?W\n㐬' COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))))) WHERE ('?W\n㐬' COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (((((0.47723899437511186)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY TRIM('0.47723899437511186') COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((0.47723899437511186)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM('0.47723899437511186') COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (((((0.47723899437511186)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY TRIM('0.47723899437511186') COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((0.47723899437511186)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM('0.47723899437511186') COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (((((0.47723899437511186)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY TRIM('0.47723899437511186') COLLATE BINARY;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt1.c2 AS TEXT))AND(NULL COLLATE BINARY)))OR('-200951783')))AND(((NULL) BETWEEN (rt1.c1) AND (t0.c0)))))AND(((rt1.c0) BETWEEN (rt0.c2) AND (t0.c2)))) CROSS JOIN t0 ON CASE t0.c0  WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END COLLATE RTRIM WHERE ((~ (((rt1.c1)&(NULL)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c1)&(NULL))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt1.c2 AS TEXT))AND(NULL COLLATE BINARY)))OR('-200951783')))AND(((NULL) BETWEEN (rt1.c1) AND (t0.c0)))))AND(((rt1.c0) BETWEEN (rt0.c2) AND (t0.c2)))) CROSS JOIN t0 ON CASE t0.c0  WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt1.c2 AS TEXT))AND(NULL COLLATE BINARY)))OR('-200951783')))AND(((NULL) BETWEEN (rt1.c1) AND (t0.c0)))))AND(((rt1.c0) BETWEEN (rt0.c2) AND (t0.c2)))) CROSS JOIN t0 ON CASE t0.c0  WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END COLLATE RTRIM WHERE ((~ (((rt1.c1)&(NULL)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c1)&(NULL))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(rt1.c2 AS TEXT))AND(NULL COLLATE BINARY)))OR('-200951783')))AND(((NULL) BETWEEN (rt1.c1) AND (t0.c0)))))AND(((rt1.c0) BETWEEN (rt0.c2) AND (t0.c2)))) CROSS JOIN t0 ON CASE t0.c0  WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((t0.c2 COLLATE NOCASE)|(218327388))) ORDER BY (t0.c2 IN ()) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE)|(218327388))) IS TRUE)  as count FROM t0 ORDER BY (t0.c2 IN ()) COLLATE RTRIM DESC);
SELECT ALL * FROM t0 WHERE (((t0.c2 COLLATE NOCASE)|(218327388))) ORDER BY (t0.c2 IN ()) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE)|(218327388))) IS TRUE)  as count FROM t0 ORDER BY (t0.c2 IN ()) COLLATE RTRIM DESC);
SELECT ALL * FROM t0 WHERE (((t0.c2 COLLATE NOCASE)|(218327388))) ORDER BY (t0.c2 IN ()) COLLATE RTRIM DESC;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON t0.c0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN (('')) AND ((((((rt1.c1)OR(rt1.c2)))OR(rt0.c0))))) WHERE (json_insert(((((((((rt0.c0)AND(t0.c1)))AND(t0.c2)))OR(rt1.c2)))AND(x'')), ((rt1.c0)LIKE(rt0.c2)), ((t0.c2) BETWEEN (t0.c2) AND ('㽳Gz')))) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN ((((rt1.c0, t0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt1.c0)) AND ((rt0.c0, -387112008, t0.c1)))) AND (((rt1.c2)LIKE(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((((((((rt0.c0)AND(t0.c1)))AND(t0.c2)))OR(rt1.c2)))AND(x'')), ((rt1.c0)LIKE(rt0.c2)), ((t0.c2) BETWEEN (t0.c2) AND ('㽳Gz')))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON t0.c0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN (('')) AND ((((((rt1.c1)OR(rt1.c2)))OR(rt0.c0))))) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN ((((rt1.c0, t0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt1.c0)) AND ((rt0.c0, -387112008, t0.c1)))) AND (((rt1.c2)LIKE(rt0.c0)))) ASC);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON t0.c0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN (('')) AND ((((((rt1.c1)OR(rt1.c2)))OR(rt0.c0))))) WHERE (json_insert(((((((((rt0.c0)AND(t0.c1)))AND(t0.c2)))OR(rt1.c2)))AND(x'')), ((rt1.c0)LIKE(rt0.c2)), ((t0.c2) BETWEEN (t0.c2) AND ('㽳Gz')))) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN ((((rt1.c0, t0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt1.c0)) AND ((rt0.c0, -387112008, t0.c1)))) AND (((rt1.c2)LIKE(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((((((((rt0.c0)AND(t0.c1)))AND(t0.c2)))OR(rt1.c2)))AND(x'')), ((rt1.c0)LIKE(rt0.c2)), ((t0.c2) BETWEEN (t0.c2) AND ('㽳Gz')))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON t0.c0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN (('')) AND ((((((rt1.c1)OR(rt1.c2)))OR(rt0.c0))))) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN ((((rt1.c0, t0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt1.c0)) AND ((rt0.c0, -387112008, t0.c1)))) AND (((rt1.c2)LIKE(rt0.c0)))) ASC);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON t0.c0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN (('')) AND ((((((rt1.c1)OR(rt1.c2)))OR(rt0.c0))))) WHERE (json_insert(((((((((rt0.c0)AND(t0.c1)))AND(t0.c2)))OR(rt1.c2)))AND(x'')), ((rt1.c0)LIKE(rt0.c2)), ((t0.c2) BETWEEN (t0.c2) AND ('㽳Gz')))) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN ((((rt1.c0, t0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt1.c0)) AND ((rt0.c0, -387112008, t0.c1)))) AND (((rt1.c2)LIKE(rt0.c0)))) ASC;
SELECT ALL * FROM t0, rt1, rt0 WHERE (((CASE WHEN t0.c1 THEN rt1.c2 WHEN rt1.c1 THEN t0.c1 WHEN rt0.c0 THEN t0.c0 END) NOT BETWEEN (((((NULL)AND(rt1.c2)))OR(rt1.c2))) AND (t0.c2))) ORDER BY ((t0.c1 COLLATE RTRIM) IS TRUE) DESC, UPPER(DISTINCT (('0.521321354526881') NOT BETWEEN (rt0.c2) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN rt1.c2 WHEN rt1.c1 THEN t0.c1 WHEN rt0.c0 THEN t0.c0 END) NOT BETWEEN (((((NULL)AND(rt1.c2)))OR(rt1.c2))) AND (t0.c2))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((t0.c1 COLLATE RTRIM) IS TRUE) DESC, UPPER(DISTINCT (('0.521321354526881') NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT ALL * FROM t0, rt1, rt0 WHERE (((CASE WHEN t0.c1 THEN rt1.c2 WHEN rt1.c1 THEN t0.c1 WHEN rt0.c0 THEN t0.c0 END) NOT BETWEEN (((((NULL)AND(rt1.c2)))OR(rt1.c2))) AND (t0.c2))) ORDER BY ((t0.c1 COLLATE RTRIM) IS TRUE) DESC, UPPER(DISTINCT (('0.521321354526881') NOT BETWEEN (rt0.c2) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN rt1.c2 WHEN rt1.c1 THEN t0.c1 WHEN rt0.c0 THEN t0.c0 END) NOT BETWEEN (((((NULL)AND(rt1.c2)))OR(rt1.c2))) AND (t0.c2))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((t0.c1 COLLATE RTRIM) IS TRUE) DESC, UPPER(DISTINCT (('0.521321354526881') NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT ALL * FROM t0, rt1, rt0 WHERE (((CASE WHEN t0.c1 THEN rt1.c2 WHEN rt1.c1 THEN t0.c1 WHEN rt0.c0 THEN t0.c0 END) NOT BETWEEN (((((NULL)AND(rt1.c2)))OR(rt1.c2))) AND (t0.c2))) ORDER BY ((t0.c1 COLLATE RTRIM) IS TRUE) DESC, UPPER(DISTINCT (('0.521321354526881') NOT BETWEEN (rt0.c2) AND (rt0.c1)));
SELECT ALL * FROM t0, rt1 WHERE ((t0.c1 IN ()) COLLATE RTRIM) ORDER BY rt1.c1 ASC, LIKE(((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)), (((t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c1, t0.c1)) AND ((t0.c2, 'U8!', t0.c2))), '⿦') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1 ORDER BY rt1.c1 ASC, LIKE(((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)), (((t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c1, t0.c1)) AND ((t0.c2, 'U8!', t0.c2))), '⿦') DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE ((t0.c1 IN ()) COLLATE RTRIM) ORDER BY rt1.c1 ASC, LIKE(((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)), (((t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c1, t0.c1)) AND ((t0.c2, 'U8!', t0.c2))), '⿦') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1 ORDER BY rt1.c1 ASC, LIKE(((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)), (((t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c1, t0.c1)) AND ((t0.c2, 'U8!', t0.c2))), '⿦') DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE ((t0.c1 IN ()) COLLATE RTRIM) ORDER BY rt1.c1 ASC, LIKE(((rt1.c2) BETWEEN (rt1.c1) AND (t0.c0)), (((t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((t0.c0, rt1.c1, t0.c1)) AND ((t0.c2, 'U8!', t0.c2))), '⿦') DESC  NULLS LAST;
SELECT * FROM rt1, t0, rt0 WHERE (t0.c1) ORDER BY ((t0.c1 COLLATE BINARY)>(((rt0.c2)<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((t0.c1 COLLATE BINARY)>(((rt0.c2)<(rt0.c0)))));
SELECT * FROM rt1, t0, rt0 WHERE (t0.c1) ORDER BY ((t0.c1 COLLATE BINARY)>(((rt0.c2)<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((t0.c1 COLLATE BINARY)>(((rt0.c2)<(rt0.c0)))));
SELECT * FROM rt1, t0, rt0 WHERE (t0.c1) ORDER BY ((t0.c1 COLLATE BINARY)>(((rt0.c2)<(rt0.c0))));
SELECT * FROM rt1, t0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (t0.c0);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD(DISTINCT rt1.c2, 0.7853672015102118));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt1.c2, 0.7853672015102118)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD(DISTINCT rt1.c2, 0.7853672015102118));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt1.c2, 0.7853672015102118)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD(DISTINCT rt1.c2, 0.7853672015102118));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER)) ORDER BY (~ (((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER)) ORDER BY (~ (((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER)) ORDER BY (~ (((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST;
SELECT * FROM rt0 WHERE ((((CAST(rt0.c1 AS TEXT)))<((((rt0.c0)>=(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS TEXT)))<((((rt0.c0)>=(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CAST(rt0.c1 AS TEXT)))<((((rt0.c0)>=(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS TEXT)))<((((rt0.c0)>=(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CAST(rt0.c1 AS TEXT)))<((((rt0.c0)>=(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)))&(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)))&(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)))&(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)))&(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)))&(CAST(t0.c0 AS REAL))));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((((((((((((((((t0.c2)AND(rt1.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR((t0.c0 IN ()))))AND(HEX(rt1.c0))))AND(0Xffffffffc4e24f76)))AND(rt0.c0))) ORDER BY (CAST(rt1.c1 AS TEXT) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c2)AND(rt1.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR((t0.c0 IN ()))))AND(HEX(rt1.c0))))AND(0xffffffffc4e24f76)))AND(rt0.c0))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (CAST(rt1.c1 AS TEXT) IN ()) DESC);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((((((((((((((((t0.c2)AND(rt1.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR((t0.c0 IN ()))))AND(HEX(rt1.c0))))AND(0Xffffffffc4e24f76)))AND(rt0.c0))) ORDER BY (CAST(rt1.c1 AS TEXT) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c2)AND(rt1.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR((t0.c0 IN ()))))AND(HEX(rt1.c0))))AND(0xffffffffc4e24f76)))AND(rt0.c0))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (CAST(rt1.c1 AS TEXT) IN ()) DESC);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((((((((((((((((t0.c2)AND(rt1.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR((t0.c0 IN ()))))AND(HEX(rt1.c0))))AND(0Xffffffffc4e24f76)))AND(rt0.c0))) ORDER BY (CAST(rt1.c1 AS TEXT) IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (NULL COLLATE NOCASE)) FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt1.c0)))AND(rt0.c1)) COLLATE BINARY WHERE ((((rt1.c2 IN ()))LIKE((rt1.c0 IN (rt0.c1, rt0.c1))))) ORDER BY rt0.c1 ASC, ((0.7065491408860007)LIKE((~ (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))LIKE((rt1.c0 IN (rt0.c1, rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (NULL COLLATE NOCASE)) FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt1.c0)))AND(rt0.c1)) COLLATE BINARY ORDER BY rt0.c1 ASC, ((0.7065491408860007)LIKE((~ (rt1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (NULL COLLATE NOCASE)) FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt1.c0)))AND(rt0.c1)) COLLATE BINARY WHERE ((((rt1.c2 IN ()))LIKE((rt1.c0 IN (rt0.c1, rt0.c1))))) ORDER BY rt0.c1 ASC, ((0.7065491408860007)LIKE((~ (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))LIKE((rt1.c0 IN (rt0.c1, rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (NULL COLLATE NOCASE)) FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt1.c0)))AND(rt0.c1)) COLLATE BINARY ORDER BY rt0.c1 ASC, ((0.7065491408860007)LIKE((~ (rt1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (NULL COLLATE NOCASE)) FULL OUTER JOIN rt1 ON ((((rt1.c0)OR(rt1.c0)))AND(rt0.c1)) COLLATE BINARY WHERE ((((rt1.c2 IN ()))LIKE((rt1.c0 IN (rt0.c1, rt0.c1))))) ORDER BY rt0.c1 ASC, ((0.7065491408860007)LIKE((~ (rt1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)>=(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (- (((4.09989715E8)<(rt0.c2)))) DESC, ((0.8563247287720166) ISNULL) ASC  NULLS FIRST, (NOT (rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)>=(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (- (((4.09989715E8)<(rt0.c2)))) DESC, ((0.8563247287720166) ISNULL) ASC  NULLS FIRST, (NOT (rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)>=(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (- (((4.09989715E8)<(rt0.c2)))) DESC, ((0.8563247287720166) ISNULL) ASC  NULLS FIRST, (NOT (rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)>=(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (- (((4.09989715E8)<(rt0.c2)))) DESC, ((0.8563247287720166) ISNULL) ASC  NULLS FIRST, (NOT (rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)>=(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (- (((4.09989715E8)<(rt0.c2)))) DESC, ((0.8563247287720166) ISNULL) ASC  NULLS FIRST, (NOT (rt0.c0));
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((((rt0.c2)OR(rt0.c1)))OR(NULL)) THEN CAST(rt0.c2 AS NUMERIC) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 COLLATE NOCASE WHEN json_extract(rt0.c2, rt0.c2) THEN (NOT (rt0.c1)) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c2)<>(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((((rt0.c2)OR(rt0.c1)))OR(NULL)) THEN CAST(rt0.c2 AS NUMERIC) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 COLLATE NOCASE WHEN json_extract(rt0.c2, rt0.c2) THEN (NOT (rt0.c1)) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c2)!=(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((((rt0.c2)OR(rt0.c1)))OR(NULL)) THEN CAST(rt0.c2 AS NUMERIC) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 COLLATE NOCASE WHEN json_extract(rt0.c2, rt0.c2) THEN (NOT (rt0.c1)) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c2)<>(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((((rt0.c2)OR(rt0.c1)))OR(NULL)) THEN CAST(rt0.c2 AS NUMERIC) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 COLLATE NOCASE WHEN json_extract(rt0.c2, rt0.c2) THEN (NOT (rt0.c1)) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c2)!=(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((rt0.c2 COLLATE RTRIM)>=(CASE WHEN rt1.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)>=(CASE WHEN rt1.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((rt0.c2 COLLATE RTRIM)>=(CASE WHEN rt1.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)>=(CASE WHEN rt1.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((rt0.c2 COLLATE RTRIM)>=(CASE WHEN rt1.c2 THEN rt0.c1 END)));
SELECT COUNT(*) FROM t0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_VERSION());
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN rt0 ON (x'0585d756' COLLATE BINARY IN (((rt1.c2) BETWEEN (x'') AND (rt0.c0)), ((rt0.c0) NOT NULL))) WHERE (((LENGTH(rt1.c1))<=((((t0.c2))>=((rt1.c0)))))) ORDER BY (((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((rt1.c2, '1070477286', t0.c0)) AND ((rt0.c0, ((rt1.c2) ISNULL), (((rt0.c0))<>((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(rt1.c1))<=((((t0.c2))>=((rt1.c0)))))) IS TRUE)  as count FROM rt1, t0 CROSS JOIN rt0 ON (x'0585d756' COLLATE BINARY IN (((rt1.c2) BETWEEN (x'') AND (rt0.c0)), ((rt0.c0) NOT NULL))) ORDER BY (((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((rt1.c2, '1070477286', t0.c0)) AND ((rt0.c0, ((rt1.c2) ISNULL), (((rt0.c0))!=((rt1.c2)))))));
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN rt0 ON (x'0585d756' COLLATE BINARY IN (((rt1.c2) BETWEEN (x'') AND (rt0.c0)), ((rt0.c0) NOT NULL))) WHERE (((LENGTH(rt1.c1))<=((((t0.c2))>=((rt1.c0)))))) ORDER BY (((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((rt1.c2, '1070477286', t0.c0)) AND ((rt0.c0, ((rt1.c2) ISNULL), (((rt0.c0))<>((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(rt1.c1))<=((((t0.c2))>=((rt1.c0)))))) IS TRUE)  as count FROM rt1, t0 CROSS JOIN rt0 ON (x'0585d756' COLLATE BINARY IN (((rt1.c2) BETWEEN (x'') AND (rt0.c0)), ((rt0.c0) NOT NULL))) ORDER BY (((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((rt1.c2, '1070477286', t0.c0)) AND ((rt0.c0, ((rt1.c2) ISNULL), (((rt0.c0))!=((rt1.c2)))))));
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN rt0 ON (x'0585d756' COLLATE BINARY IN (((rt1.c2) BETWEEN (x'') AND (rt0.c0)), ((rt0.c0) NOT NULL))) WHERE (((LENGTH(rt1.c1))<=((((t0.c2))>=((rt1.c0)))))) ORDER BY (((rt1.c2, rt1.c1, rt0.c2)) BETWEEN ((rt1.c2, '1070477286', t0.c0)) AND ((rt0.c0, ((rt1.c2) ISNULL), (((rt0.c0))<>((rt1.c2))))));
SELECT COUNT(*) FROM rt1 WHERE (CAST((~ (rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST((~ (rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST((~ (rt1.c2)) AS NUMERIC));
SELECT ALL * FROM rt0, rt1, t0 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1, t0 NOT INDEXED);
SELECT ALL * FROM rt0, rt1, t0 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1, t0 NOT INDEXED);
SELECT ALL * FROM rt0, rt1, t0 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)<=(rt0.c1))))) ORDER BY NULLIF(SQLITE_COMPILEOPTION_USED(rt0.c1), (((rt0.c1))!=((rt0.c0))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)<=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(SQLITE_COMPILEOPTION_USED(rt0.c1), (((rt0.c1))!=((rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)<=(rt0.c1))))) ORDER BY NULLIF(SQLITE_COMPILEOPTION_USED(rt0.c1), (((rt0.c1))!=((rt0.c0))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)<=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(SQLITE_COMPILEOPTION_USED(rt0.c1), (((rt0.c1))!=((rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)<=(rt0.c1))))) ORDER BY NULLIF(SQLITE_COMPILEOPTION_USED(rt0.c1), (((rt0.c1))!=((rt0.c0))));
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((((((((0.9517581228288513)OR(x'6dde')))AND(t0.c0)))AND(t0.c1)))OR(rt0.c1)) THEN (rt0.c1 IN ()) WHEN load_extension(rt0.c0, rt0.c2) THEN ((t0.c1)>=(t0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2)AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((0.9517581228288513)OR(x'6dde')))AND(t0.c0)))AND(t0.c1)))OR(rt0.c1)) THEN (rt0.c1 IN ()) WHEN load_extension(rt0.c0, rt0.c2) THEN ((t0.c1)>=(t0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2)AND(rt0.c1)) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((((((((0.9517581228288513)OR(x'6dde')))AND(t0.c0)))AND(t0.c1)))OR(rt0.c1)) THEN (rt0.c1 IN ()) WHEN load_extension(rt0.c0, rt0.c2) THEN ((t0.c1)>=(t0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2)AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((0.9517581228288513)OR(x'6dde')))AND(t0.c0)))AND(t0.c1)))OR(rt0.c1)) THEN (rt0.c1 IN ()) WHEN load_extension(rt0.c0, rt0.c2) THEN ((t0.c1)>=(t0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2)AND(rt0.c1)) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((((((((0.9517581228288513)OR(x'6dde')))AND(t0.c0)))AND(t0.c1)))OR(rt0.c1)) THEN (rt0.c1 IN ()) WHEN load_extension(rt0.c0, rt0.c2) THEN ((t0.c1)>=(t0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2)AND(rt0.c1)) END);
SELECT * FROM rt0, t0, rt1 WHERE (x'') ORDER BY (((rt0.c2, t0.c0, rt1.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 END, ((((((((t0.c0)OR(x'')))AND(t0.c1)))AND(rt0.c1)))AND('佶''d#z')), (+ (rt1.c2)))) AND ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), (NOT ('57768940')), CAST(rt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 NOT INDEXED, t0, rt1 ORDER BY (((rt0.c2, t0.c0, rt1.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 END, ((((((((t0.c0)OR(x'')))AND(t0.c1)))AND(rt0.c1)))AND('佶''d#z')), (+ (rt1.c2)))) AND ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), (NOT ('57768940')), CAST(rt1.c1 AS INTEGER)))));
SELECT * FROM rt0, t0, rt1 WHERE (x'') ORDER BY (((rt0.c2, t0.c0, rt1.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 END, ((((((((t0.c0)OR(x'')))AND(t0.c1)))AND(rt0.c1)))AND('佶''d#z')), (+ (rt1.c2)))) AND ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), (NOT ('57768940')), CAST(rt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 NOT INDEXED, t0, rt1 ORDER BY (((rt0.c2, t0.c0, rt1.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 END, ((((((((t0.c0)OR(x'')))AND(t0.c1)))AND(rt0.c1)))AND('佶''d#z')), (+ (rt1.c2)))) AND ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), (NOT ('57768940')), CAST(rt1.c1 AS INTEGER)))));
SELECT * FROM rt0, t0, rt1 WHERE (x'') ORDER BY (((rt0.c2, t0.c0, rt1.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 END, ((((((((t0.c0)OR(x'')))AND(t0.c1)))AND(rt0.c1)))AND('佶''d#z')), (+ (rt1.c2)))) AND ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), (NOT ('57768940')), CAST(rt1.c1 AS INTEGER))));
SELECT ALL * FROM rt0, rt1 NATURAL JOIN t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN t0);
SELECT ALL * FROM rt0, rt1 NATURAL JOIN t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN t0);
SELECT ALL * FROM rt0, rt1 NATURAL JOIN t0 WHERE (t0.c2);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON NULL LEFT OUTER JOIN t0 ON ((rt0.c2) NOT BETWEEN (CASE WHEN t0.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN t0.c0 ELSE t0.c1 END) AND ((('-542249740')<(rt0.c1)))) WHERE (((((x'')<(t0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')<(t0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON NULL LEFT OUTER JOIN t0 ON ((rt0.c2) NOT BETWEEN (CASE WHEN t0.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN t0.c0 ELSE t0.c1 END) AND ((('-542249740')<(rt0.c1)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON NULL LEFT OUTER JOIN t0 ON ((rt0.c2) NOT BETWEEN (CASE WHEN t0.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN t0.c0 ELSE t0.c1 END) AND ((('-542249740')<(rt0.c1)))) WHERE (((((x'')<(t0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')<(t0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON NULL LEFT OUTER JOIN t0 ON ((rt0.c2) NOT BETWEEN (CASE WHEN t0.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN t0.c0 ELSE t0.c1 END) AND ((('-542249740')<(rt0.c1)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON NULL LEFT OUTER JOIN t0 ON ((rt0.c2) NOT BETWEEN (CASE WHEN t0.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN t0.c0 ELSE t0.c1 END) AND ((('-542249740')<(rt0.c1)))) WHERE (((((x'')<(t0.c2))) IS FALSE));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((rt1.c1) NOTNULL)) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((t0.c1)<=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOTNULL)) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((t0.c1)<=(rt1.c1))))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((rt1.c1) NOTNULL)) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((t0.c1)<=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOTNULL)) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((t0.c1)<=(rt1.c1))))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((rt1.c1) NOTNULL)) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((t0.c1)<=(rt1.c1)))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON TIME(t0.c0 COLLATE BINARY, (((t0.c0))<((''))), ((rt1.c1)&(rt1.c2))) CROSS JOIN t0 ON (((rt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE RTRIM WHERE ((((rt0.c2)/(rt0.c0)) IN ())) ORDER BY ((((0.1169567853056086)) BETWEEN ((t0.c0)) AND ((0.8335935942913506))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)/(rt0.c0)) IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON TIME(t0.c0 COLLATE BINARY, (((t0.c0))<((''))), ((rt1.c1)&(rt1.c2))) CROSS JOIN t0 ON (((rt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE RTRIM ORDER BY ((((0.1169567853056086)) BETWEEN ((t0.c0)) AND ((0.8335935942913506))) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON TIME(t0.c0 COLLATE BINARY, (((t0.c0))<((''))), ((rt1.c1)&(rt1.c2))) CROSS JOIN t0 ON (((rt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE RTRIM WHERE ((((rt0.c2)/(rt0.c0)) IN ())) ORDER BY ((((0.1169567853056086)) BETWEEN ((t0.c0)) AND ((0.8335935942913506))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)/(rt0.c0)) IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON TIME(t0.c0 COLLATE BINARY, (((t0.c0))<((''))), ((rt1.c1)&(rt1.c2))) CROSS JOIN t0 ON (((rt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE RTRIM ORDER BY ((((0.1169567853056086)) BETWEEN ((t0.c0)) AND ((0.8335935942913506))) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN (NOT (t0.c0)) ELSE rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOT NULL) THEN (NOT (t0.c0)) ELSE rt1.c1 END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN (NOT (t0.c0)) ELSE rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOT NULL) THEN (NOT (t0.c0)) ELSE rt1.c1 END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN (NOT (t0.c0)) ELSE rt1.c1 END);
SELECT * FROM t0 INDEXED BY i12 INNER JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN ((rt1.c1 IN ())) AND ((~ (rt1.c0)))) WHERE (CASE WHEN SUBSTR(rt1.c1, t0.c1) THEN (rt1.c1 IN ()) ELSE ((rt1.c2)>(rt1.c1)) END) ORDER BY ((NULL) NOT BETWEEN (((t0.c1)&(rt1.c1))) AND (((((((((rt1.c0)OR(rt1.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))) DESC, CAST(rt1.c1 AS TEXT) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN SUBSTR(rt1.c1, t0.c1) THEN (rt1.c1 IN ()) ELSE ((rt1.c2)>(rt1.c1)) END) IS TRUE)  as count FROM t0 INDEXED BY i12 INNER JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN ((rt1.c1 IN ())) AND ((~ (rt1.c0)))) ORDER BY ((NULL) NOT BETWEEN (((t0.c1)&(rt1.c1))) AND (((((((((rt1.c0)OR(rt1.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))) DESC, CAST(rt1.c1 AS TEXT) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM t0 INDEXED BY i12 INNER JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN ((rt1.c1 IN ())) AND ((~ (rt1.c0)))) WHERE (CASE WHEN SUBSTR(rt1.c1, t0.c1) THEN (rt1.c1 IN ()) ELSE ((rt1.c2)>(rt1.c1)) END) ORDER BY ((NULL) NOT BETWEEN (((t0.c1)&(rt1.c1))) AND (((((((((rt1.c0)OR(rt1.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))) DESC, CAST(rt1.c1 AS TEXT) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN SUBSTR(rt1.c1, t0.c1) THEN (rt1.c1 IN ()) ELSE ((rt1.c2)>(rt1.c1)) END) IS TRUE)  as count FROM t0 INDEXED BY i12 INNER JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN ((rt1.c1 IN ())) AND ((~ (rt1.c0)))) ORDER BY ((NULL) NOT BETWEEN (((t0.c1)&(rt1.c1))) AND (((((((((rt1.c0)OR(rt1.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))) DESC, CAST(rt1.c1 AS TEXT) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((~ (x''))) ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))-(((rt1.c1)*(rt1.c1)))) ASC  NULLS LAST, ((NULL)%(((((rt1.c0)AND(rt1.c0)))OR(x'3ca5')))), ((((rt1.c0) ISNULL))*(CAST(0.3921468894201058 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (x''))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))-(((rt1.c1)*(rt1.c1)))) ASC  NULLS LAST, ((NULL)%(((((rt1.c0)AND(rt1.c0)))OR(x'3ca5')))), ((((rt1.c0) ISNULL))*(CAST(0.3921468894201058 AS INTEGER))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((~ (x''))) ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))-(((rt1.c1)*(rt1.c1)))) ASC  NULLS LAST, ((NULL)%(((((rt1.c0)AND(rt1.c0)))OR(x'3ca5')))), ((((rt1.c0) ISNULL))*(CAST(0.3921468894201058 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (x''))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))-(((rt1.c1)*(rt1.c1)))) ASC  NULLS LAST, ((NULL)%(((((rt1.c0)AND(rt1.c0)))OR(x'3ca5')))), ((((rt1.c0) ISNULL))*(CAST(0.3921468894201058 AS INTEGER))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((~ (x''))) ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))-(((rt1.c1)*(rt1.c1)))) ASC  NULLS LAST, ((NULL)%(((((rt1.c0)AND(rt1.c0)))OR(x'3ca5')))), ((((rt1.c0) ISNULL))*(CAST(0.3921468894201058 AS INTEGER))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c1)))AND(rt0.c0)))AND(t0.c1)) COLLATE RTRIM FULL OUTER JOIN rt0 ON ((rt1.c2 COLLATE RTRIM)+(TRIM(DISTINCT t0.c0, rt0.c0))) WHERE ((((((rt1.c0, rt0.c0, rt1.c1))>=((rt0.c0, rt0.c0, rt1.c2)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE rt0.c1  WHEN rt0.c2 THEN '99530231' ELSE rt1.c1 END))) ORDER BY (((rt1.c2, rt0.c0, rt1.c2))<=((rt0.c1, 0.20247428698433811, t0.c2))) COLLATE RTRIM ASC, (NOT (t0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0, rt0.c0, rt1.c1))>=((rt0.c0, rt0.c0, rt1.c2)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE rt0.c1  WHEN rt0.c2 THEN '99530231' ELSE rt1.c1 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c1)))AND(rt0.c0)))AND(t0.c1)) COLLATE RTRIM FULL OUTER JOIN rt0 ON ((rt1.c2 COLLATE RTRIM)+(TRIM(DISTINCT t0.c0, rt0.c0))) ORDER BY (((rt1.c2, rt0.c0, rt1.c2))<=((rt0.c1, 0.20247428698433811, t0.c2))) COLLATE RTRIM ASC, (NOT (t0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c1)))AND(rt0.c0)))AND(t0.c1)) COLLATE RTRIM FULL OUTER JOIN rt0 ON ((rt1.c2 COLLATE RTRIM)+(TRIM(DISTINCT t0.c0, rt0.c0))) WHERE ((((((rt1.c0, rt0.c0, rt1.c1))>=((rt0.c0, rt0.c0, rt1.c2)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE rt0.c1  WHEN rt0.c2 THEN '99530231' ELSE rt1.c1 END))) ORDER BY (((rt1.c2, rt0.c0, rt1.c2))<=((rt0.c1, 0.20247428698433811, t0.c2))) COLLATE RTRIM ASC, (NOT (t0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0, rt0.c0, rt1.c1))>=((rt0.c0, rt0.c0, rt1.c2)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (CASE rt0.c1  WHEN rt0.c2 THEN '99530231' ELSE rt1.c1 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c0)AND(rt0.c0)))OR(rt1.c1)))AND(rt0.c0)))AND(t0.c1)) COLLATE RTRIM FULL OUTER JOIN rt0 ON ((rt1.c2 COLLATE RTRIM)+(TRIM(DISTINCT t0.c0, rt0.c0))) ORDER BY (((rt1.c2, rt0.c0, rt1.c2))<=((rt0.c1, 0.20247428698433811, t0.c2))) COLLATE RTRIM ASC, (NOT (t0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN (~ (t0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(t0.c2 AS TEXT) WHEN CASE WHEN rt0.c0 THEN x'' ELSE t0.c1 END THEN LOWER(DISTINCT 0.3481887389070534) ELSE rt0.c2 COLLATE RTRIM END) ORDER BY CAST((t0.c2 IN ()) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (t0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(t0.c2 AS TEXT) WHEN CASE WHEN rt0.c0 THEN x'' ELSE t0.c1 END THEN LOWER(DISTINCT 0.3481887389070534) ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((t0.c2 IN ()) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN (~ (t0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(t0.c2 AS TEXT) WHEN CASE WHEN rt0.c0 THEN x'' ELSE t0.c1 END THEN LOWER(DISTINCT 0.3481887389070534) ELSE rt0.c2 COLLATE RTRIM END) ORDER BY CAST((t0.c2 IN ()) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (t0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(t0.c2 AS TEXT) WHEN CASE WHEN rt0.c0 THEN x'' ELSE t0.c1 END THEN LOWER(DISTINCT 0.3481887389070534) ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((t0.c2 IN ()) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN (~ (t0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(t0.c2 AS TEXT) WHEN CASE WHEN rt0.c0 THEN x'' ELSE t0.c1 END THEN LOWER(DISTINCT 0.3481887389070534) ELSE rt0.c2 COLLATE RTRIM END) ORDER BY CAST((t0.c2 IN ()) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 NOT INDEXED RIGHT OUTER JOIN t0 ON ((TOTAL_CHANGES()) BETWEEN (CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (CASE WHEN rt1.c1 THEN t0.c0 ELSE t0.c1 END)) WHERE (('798612710' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('798612710' IN ())) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON ((TOTAL_CHANGES()) BETWEEN (CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (CASE WHEN rt1.c1 THEN t0.c0 ELSE t0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, rt1 NOT INDEXED RIGHT OUTER JOIN t0 ON ((TOTAL_CHANGES()) BETWEEN (CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (CASE WHEN rt1.c1 THEN t0.c0 ELSE t0.c1 END)) WHERE (('798612710' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('798612710' IN ())) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON ((TOTAL_CHANGES()) BETWEEN (CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (CASE WHEN rt1.c1 THEN t0.c0 ELSE t0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, rt1 NOT INDEXED RIGHT OUTER JOIN t0 ON ((TOTAL_CHANGES()) BETWEEN (CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (CASE WHEN rt1.c1 THEN t0.c0 ELSE t0.c1 END)) WHERE (('798612710' IN ()));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN HEX(DISTINCT rt1.c0) THEN ((rt1.c1)|(rt1.c0)) WHEN CAST(0.7055474495865458 AS NUMERIC) THEN ((((0.915463259213265)OR(rt0.c1)))OR(rt1.c1)) WHEN (t0.c2 IN ()) THEN CASE WHEN 'L,+?As#w' THEN t0.c1 ELSE rt1.c1 END WHEN CASE rt0.c1  WHEN x'7b39' THEN '-924487748' END THEN (t0.c1 IN ()) WHEN TRIM(rt0.c1) THEN t0.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT rt1.c0) THEN ((rt1.c1)|(rt1.c0)) WHEN CAST(0.7055474495865458 AS NUMERIC) THEN ((((0.915463259213265)OR(rt0.c1)))OR(rt1.c1)) WHEN (t0.c2 IN ()) THEN CASE WHEN 'L,+?As#w' THEN t0.c1 ELSE rt1.c1 END WHEN CASE rt0.c1  WHEN x'7b39' THEN '-924487748' END THEN (t0.c1 IN ()) WHEN TRIM(rt0.c1) THEN t0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN HEX(DISTINCT rt1.c0) THEN ((rt1.c1)|(rt1.c0)) WHEN CAST(0.7055474495865458 AS NUMERIC) THEN ((((0.915463259213265)OR(rt0.c1)))OR(rt1.c1)) WHEN (t0.c2 IN ()) THEN CASE WHEN 'L,+?As#w' THEN t0.c1 ELSE rt1.c1 END WHEN CASE rt0.c1  WHEN x'7b39' THEN '-924487748' END THEN (t0.c1 IN ()) WHEN TRIM(rt0.c1) THEN t0.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT rt1.c0) THEN ((rt1.c1)|(rt1.c0)) WHEN CAST(0.7055474495865458 AS NUMERIC) THEN ((((0.915463259213265)OR(rt0.c1)))OR(rt1.c1)) WHEN (t0.c2 IN ()) THEN CASE WHEN 'L,+?As#w' THEN t0.c1 ELSE rt1.c1 END WHEN CASE rt0.c1  WHEN x'7b39' THEN '-924487748' END THEN (t0.c1 IN ()) WHEN TRIM(rt0.c1) THEN t0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN HEX(DISTINCT rt1.c0) THEN ((rt1.c1)|(rt1.c0)) WHEN CAST(0.7055474495865458 AS NUMERIC) THEN ((((0.915463259213265)OR(rt0.c1)))OR(rt1.c1)) WHEN (t0.c2 IN ()) THEN CASE WHEN 'L,+?As#w' THEN t0.c1 ELSE rt1.c1 END WHEN CASE rt0.c1  WHEN x'7b39' THEN '-924487748' END THEN (t0.c1 IN ()) WHEN TRIM(rt0.c1) THEN t0.c2 COLLATE BINARY END);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)*(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)*(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)*(rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (CASE CAST(t0.c0 AS NUMERIC)  WHEN (+ (rt1.c2)) THEN ((((rt0.c0)AND(t0.c1)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c0 AS NUMERIC)  WHEN (+ (rt1.c2)) THEN ((((rt0.c0)AND(t0.c1)))OR(rt0.c2)) END) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (CASE CAST(t0.c0 AS NUMERIC)  WHEN (+ (rt1.c2)) THEN ((((rt0.c0)AND(t0.c1)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c0 AS NUMERIC)  WHEN (+ (rt1.c2)) THEN ((((rt0.c0)AND(t0.c1)))OR(rt0.c2)) END) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (CASE CAST(t0.c0 AS NUMERIC)  WHEN (+ (rt1.c2)) THEN ((((rt0.c0)AND(t0.c1)))OR(rt0.c2)) END);
SELECT * FROM rt1 WHERE (LIKELY(((rt1.c2)/(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt1.c2)/(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LIKELY(((rt1.c2)/(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt1.c2)/(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LIKELY(((rt1.c2)/(rt1.c1))));
SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE NOCASE) ISNULL));
SELECT * FROM rt1, rt0 WHERE (CAST(((x'') IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST(((x'') IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST(((x'') IS FALSE) AS TEXT));
SELECT * FROM rt1, t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, rt1 INDEXED BY i12 WHERE (((CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN '-2118715432' END)%(CASE rt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c1 THEN -1610611315 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0.07434766816639593 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN '-2118715432' END)%(CASE rt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c1 THEN -1610611315 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0.07434766816639593 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt0, rt1 INDEXED BY i12);
SELECT ALL COUNT(*) FROM rt0, rt1 INDEXED BY i12 WHERE (((CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN '-2118715432' END)%(CASE rt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c1 THEN -1610611315 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0.07434766816639593 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN '-2118715432' END)%(CASE rt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c1 THEN -1610611315 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0.07434766816639593 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt0, rt1 INDEXED BY i12);
SELECT COUNT(*) FROM rt0 WHERE (((((('YXP/*h%|' IN ()))OR(CAST(rt0.c1 AS INTEGER))))OR(0X20861708))) ORDER BY CASE ABS(DISTINCT rt0.c0)  WHEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, NULL, rt0.c1))) THEN (rt0.c1 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((('YXP/*h%|' IN ()))OR(CAST(rt0.c1 AS INTEGER))))OR(0x20861708))) IS TRUE)  as count FROM rt0 ORDER BY CASE ABS(DISTINCT rt0.c0)  WHEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, NULL, rt0.c1))) THEN (rt0.c1 IN ()) END DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((('YXP/*h%|' IN ()))OR(CAST(rt0.c1 AS INTEGER))))OR(0X20861708))) ORDER BY CASE ABS(DISTINCT rt0.c0)  WHEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, NULL, rt0.c1))) THEN (rt0.c1 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((('YXP/*h%|' IN ()))OR(CAST(rt0.c1 AS INTEGER))))OR(0x20861708))) IS TRUE)  as count FROM rt0 ORDER BY CASE ABS(DISTINCT rt0.c0)  WHEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, NULL, rt0.c1))) THEN (rt0.c1 IN ()) END DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((('YXP/*h%|' IN ()))OR(CAST(rt0.c1 AS INTEGER))))OR(0X20861708))) ORDER BY CASE ABS(DISTINCT rt0.c0)  WHEN (((rt0.c0, rt0.c2, rt0.c1))<=((rt0.c0, NULL, rt0.c1))) THEN (rt0.c1 IN ()) END DESC;
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (1.070477286E9) AND (((rt1.c0)>=(rt1.c2))))) ORDER BY (((0.7065491408860007 IN ())) BETWEEN ((rt0.c2 IN ())) AND ((- (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) BETWEEN (1.070477286E9) AND (((rt1.c0)>=(rt1.c2))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((0.7065491408860007 IN ())) BETWEEN ((rt0.c2 IN ())) AND ((- (rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (1.070477286E9) AND (((rt1.c0)>=(rt1.c2))))) ORDER BY (((0.7065491408860007 IN ())) BETWEEN ((rt0.c2 IN ())) AND ((- (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) BETWEEN (1.070477286E9) AND (((rt1.c0)>=(rt1.c2))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((0.7065491408860007 IN ())) BETWEEN ((rt0.c2 IN ())) AND ((- (rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (1.070477286E9) AND (((rt1.c0)>=(rt1.c2))))) ORDER BY (((0.7065491408860007 IN ())) BETWEEN ((rt0.c2 IN ())) AND ((- (rt1.c1))))  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (CASE CASE rt0.c0  WHEN t0.c2 THEN 'i\|' WHEN t0.c0 THEN NULL WHEN t0.c0 THEN rt0.c1 END  WHEN UNLIKELY(rt0.c1) THEN (NOT (t0.c1)) WHEN (((t0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c2))) THEN ((t0.c2)<>(t0.c0)) WHEN CAST(x'7a79' AS INTEGER) THEN CASE WHEN rt0.c0 THEN x'' END ELSE ((((rt0.c0)AND(t0.c2)))AND(rt0.c1)) END) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c0  WHEN t0.c2 THEN 'i\|' WHEN t0.c0 THEN NULL WHEN t0.c0 THEN rt0.c1 END  WHEN UNLIKELY(rt0.c1) THEN (NOT (t0.c1)) WHEN (((t0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c2))) THEN ((t0.c2)!=(t0.c0)) WHEN CAST(x'7a79' AS INTEGER) THEN CASE WHEN rt0.c0 THEN x'' END ELSE ((((rt0.c0)AND(t0.c2)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c2);
SELECT * FROM rt0, t0 WHERE (CASE CASE rt0.c0  WHEN t0.c2 THEN 'i\|' WHEN t0.c0 THEN NULL WHEN t0.c0 THEN rt0.c1 END  WHEN UNLIKELY(rt0.c1) THEN (NOT (t0.c1)) WHEN (((t0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c2))) THEN ((t0.c2)<>(t0.c0)) WHEN CAST(x'7a79' AS INTEGER) THEN CASE WHEN rt0.c0 THEN x'' END ELSE ((((rt0.c0)AND(t0.c2)))AND(rt0.c1)) END) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c0  WHEN t0.c2 THEN 'i\|' WHEN t0.c0 THEN NULL WHEN t0.c0 THEN rt0.c1 END  WHEN UNLIKELY(rt0.c1) THEN (NOT (t0.c1)) WHEN (((t0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c2))) THEN ((t0.c2)!=(t0.c0)) WHEN CAST(x'7a79' AS INTEGER) THEN CASE WHEN rt0.c0 THEN x'' END ELSE ((((rt0.c0)AND(t0.c2)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c2);
SELECT * FROM rt0, t0 WHERE (CASE CASE rt0.c0  WHEN t0.c2 THEN 'i\|' WHEN t0.c0 THEN NULL WHEN t0.c0 THEN rt0.c1 END  WHEN UNLIKELY(rt0.c1) THEN (NOT (t0.c1)) WHEN (((t0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c2))) THEN ((t0.c2)<>(t0.c0)) WHEN CAST(x'7a79' AS INTEGER) THEN CASE WHEN rt0.c0 THEN x'' END ELSE ((((rt0.c0)AND(t0.c2)))AND(rt0.c1)) END) ORDER BY t0.c2;
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((load_extension(rt1.c0)) BETWEEN (t0.c0) AND (CAST(t0.c1 AS TEXT))) LEFT OUTER JOIN t0 ON 0.9552886219935922 COLLATE NOCASE WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1)))) BETWEEN (((rt0.c0)AND(t0.c0))) AND (rt1.c2))) ORDER BY ((((t0.c1) IS TRUE)) BETWEEN (((t0.c0) IS TRUE)) AND (CASE t0.c0  WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1)))) BETWEEN (((rt0.c0)AND(t0.c0))) AND (rt1.c2))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((load_extension(rt1.c0)) BETWEEN (t0.c0) AND (CAST(t0.c1 AS TEXT))) LEFT OUTER JOIN t0 ON 0.9552886219935922 COLLATE NOCASE ORDER BY ((((t0.c1) IS TRUE)) BETWEEN (((t0.c0) IS TRUE)) AND (CASE t0.c0  WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((load_extension(rt1.c0)) BETWEEN (t0.c0) AND (CAST(t0.c1 AS TEXT))) LEFT OUTER JOIN t0 ON 0.9552886219935922 COLLATE NOCASE WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1)))) BETWEEN (((rt0.c0)AND(t0.c0))) AND (rt1.c2))) ORDER BY ((((t0.c1) IS TRUE)) BETWEEN (((t0.c0) IS TRUE)) AND (CASE t0.c0  WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1)))) BETWEEN (((rt0.c0)AND(t0.c0))) AND (rt1.c2))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((load_extension(rt1.c0)) BETWEEN (t0.c0) AND (CAST(t0.c1 AS TEXT))) LEFT OUTER JOIN t0 ON 0.9552886219935922 COLLATE NOCASE ORDER BY ((((t0.c1) IS TRUE)) BETWEEN (((t0.c0) IS TRUE)) AND (CASE t0.c0  WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)));
SELECT COUNT(*) FROM rt1, t0 WHERE (((t0.c2 IN ('')) IN ())) ORDER BY ((((rt1.c2) ISNULL)) IS TRUE) ASC, (- ((((t0.c0))!=((t0.c2))))) DESC, ((((t0.c2) NOT NULL))+((- (rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 IN ('')) IN ())) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((rt1.c2) ISNULL)) IS TRUE) ASC, (- ((((t0.c0))!=((t0.c2))))) DESC, ((((t0.c2) NOT NULL))+((- (rt1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0 WHERE (((t0.c2 IN ('')) IN ())) ORDER BY ((((rt1.c2) ISNULL)) IS TRUE) ASC, (- ((((t0.c0))!=((t0.c2))))) DESC, ((((t0.c2) NOT NULL))+((- (rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 IN ('')) IN ())) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((rt1.c2) ISNULL)) IS TRUE) ASC, (- ((((t0.c0))!=((t0.c2))))) DESC, ((((t0.c2) NOT NULL))+((- (rt1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0 WHERE (((t0.c2 IN ('')) IN ())) ORDER BY ((((rt1.c2) ISNULL)) IS TRUE) ASC, (- ((((t0.c0))!=((t0.c2))))) DESC, ((((t0.c2) NOT NULL))+((- (rt1.c1)))) DESC  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN rt1 ON (~ (json_array_length(rt1.c1, rt0.c0))) WHERE (CAST(((rt0.c2)OR(rt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)OR(rt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (~ (json_array_length(rt1.c1, rt0.c0))));
SELECT * FROM rt0 CROSS JOIN rt1 ON (~ (json_array_length(rt1.c1, rt0.c0))) WHERE (CAST(((rt0.c2)OR(rt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)OR(rt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (~ (json_array_length(rt1.c1, rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((rt0.c1)!=(rt0.c1 COLLATE RTRIM))) ORDER BY ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST, (((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), (- (rt0.c1)), (rt0.c2 IN ()), ((rt0.c1)>>(rt0.c2)), rt0.c0 COLLATE RTRIM)) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN '1057675761' THEN '1139661853' WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), CAST(rt0.c2 AS TEXT), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)), rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)!=(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST, (((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), (- (rt0.c1)), (rt0.c2 IN ()), ((rt0.c1)>>(rt0.c2)), rt0.c0 COLLATE RTRIM)) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN '1057675761' THEN '1139661853' WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), CAST(rt0.c2 AS TEXT), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)), rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)!=(rt0.c1 COLLATE RTRIM))) ORDER BY ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST, (((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), (- (rt0.c1)), (rt0.c2 IN ()), ((rt0.c1)>>(rt0.c2)), rt0.c0 COLLATE RTRIM)) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN '1057675761' THEN '1139661853' WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), CAST(rt0.c2 AS TEXT), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)), rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)!=(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST, (((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), (- (rt0.c1)), (rt0.c2 IN ()), ((rt0.c1)>>(rt0.c2)), rt0.c0 COLLATE RTRIM)) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN '1057675761' THEN '1139661853' WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), CAST(rt0.c2 AS TEXT), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)), rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)!=(rt0.c1 COLLATE RTRIM))) ORDER BY ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST, (((rt0.c1, rt0.c0, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), (- (rt0.c1)), (rt0.c2 IN ()), ((rt0.c1)>>(rt0.c2)), rt0.c0 COLLATE RTRIM)) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN '1057675761' THEN '1139661853' WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), CAST(rt0.c2 AS TEXT), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)), rt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((+ (rt0.c2)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((+ (rt0.c2)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((+ (rt0.c2)))>>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2)OR(t0.c1)))OR(t0.c1)) IN ())) ORDER BY load_extension(((t0.c2) ISNULL), ((t0.c0)||(t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2)OR(t0.c1)))OR(t0.c1)) IN ())) IS TRUE)  as count FROM t0 ORDER BY load_extension(((t0.c2) ISNULL), ((t0.c0)||(t0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2)OR(t0.c1)))OR(t0.c1)) IN ())) ORDER BY load_extension(((t0.c2) ISNULL), ((t0.c0)||(t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2)OR(t0.c1)))OR(t0.c1)) IN ())) IS TRUE)  as count FROM t0 ORDER BY load_extension(((t0.c2) ISNULL), ((t0.c0)||(t0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2)OR(t0.c1)))OR(t0.c1)) IN ())) ORDER BY load_extension(((t0.c2) ISNULL), ((t0.c0)||(t0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c1) IS FALSE))>=(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY DATETIME((((t0.c2, t0.c0, rt0.c0))>=((t0.c1, t0.c0, t0.c1))), CASE WHEN 0xffffffffec94d0cd THEN t0.c0 WHEN rt0.c2 THEN t0.c2 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR('-1695231546')))OR(t0.c2)), t0.c2, ((t0.c0) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) IS FALSE))>=(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY DATETIME((((t0.c2, t0.c0, rt0.c0))>=((t0.c1, t0.c0, t0.c1))), CASE WHEN 0xffffffffec94d0cd THEN t0.c0 WHEN rt0.c2 THEN t0.c2 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR('-1695231546')))OR(t0.c2)), t0.c2, ((t0.c0) IS TRUE)) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c1) IS FALSE))>=(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY DATETIME((((t0.c2, t0.c0, rt0.c0))>=((t0.c1, t0.c0, t0.c1))), CASE WHEN 0xffffffffec94d0cd THEN t0.c0 WHEN rt0.c2 THEN t0.c2 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR('-1695231546')))OR(t0.c2)), t0.c2, ((t0.c0) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) IS FALSE))>=(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY DATETIME((((t0.c2, t0.c0, rt0.c0))>=((t0.c1, t0.c0, t0.c1))), CASE WHEN 0xffffffffec94d0cd THEN t0.c0 WHEN rt0.c2 THEN t0.c2 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR('-1695231546')))OR(t0.c2)), t0.c2, ((t0.c0) IS TRUE)) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c1) IS FALSE))>=(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY DATETIME((((t0.c2, t0.c0, rt0.c0))>=((t0.c1, t0.c0, t0.c1))), CASE WHEN 0xffffffffec94d0cd THEN t0.c0 WHEN rt0.c2 THEN t0.c2 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END, ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR('-1695231546')))OR(t0.c2)), t0.c2, ((t0.c0) IS TRUE)) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN rt1 ON ((rt0.c2)GLOB(t0.c1)) COLLATE NOCASE WHERE ((rt1.c0 COLLATE RTRIM IN (rt0.c2 COLLATE NOCASE))) ORDER BY ((((t0.c2) BETWEEN (t0.c1) AND (rt1.c1)))<(CAST(rt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((rt1.c0 COLLATE RTRIM IN (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 INNER JOIN rt1 ON ((rt0.c2)GLOB(t0.c1)) COLLATE NOCASE ORDER BY ((((t0.c2) BETWEEN (t0.c1) AND (rt1.c1)))<(CAST(rt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN rt1 ON ((rt0.c2)GLOB(t0.c1)) COLLATE NOCASE WHERE ((rt1.c0 COLLATE RTRIM IN (rt0.c2 COLLATE NOCASE))) ORDER BY ((((t0.c2) BETWEEN (t0.c1) AND (rt1.c1)))<(CAST(rt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((rt1.c0 COLLATE RTRIM IN (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 INNER JOIN rt1 ON ((rt0.c2)GLOB(t0.c1)) COLLATE NOCASE ORDER BY ((((t0.c2) BETWEEN (t0.c1) AND (rt1.c1)))<(CAST(rt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN rt1 ON ((rt0.c2)GLOB(t0.c1)) COLLATE NOCASE WHERE ((rt1.c0 COLLATE RTRIM IN (rt0.c2 COLLATE NOCASE))) ORDER BY ((((t0.c2) BETWEEN (t0.c1) AND (rt1.c1)))<(CAST(rt1.c0 AS REAL)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1, rt1.c1, rt1.c2)) BETWEEN ((CAST(rt0.c2 AS NUMERIC), '545658632', ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), ((((((((-2103164466)AND(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt1.c1, rt1.c2)) BETWEEN ((CAST(rt0.c2 AS NUMERIC), '545658632', ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), ((((((((-2103164466)AND(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1, rt1.c1, rt1.c2)) BETWEEN ((CAST(rt0.c2 AS NUMERIC), '545658632', ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), ((((((((-2103164466)AND(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt1.c1, rt1.c2)) BETWEEN ((CAST(rt0.c2 AS NUMERIC), '545658632', ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), ((((((((-2103164466)AND(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1, rt1.c1, rt1.c2)) BETWEEN ((CAST(rt0.c2 AS NUMERIC), '545658632', ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), ((((((((-2103164466)AND(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)))AND(rt0.c0))))));
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((rt1.c0 IN ()) AS TEXT) WHERE ((((rt0.c2))>=((((t0.c0)%(rt1.c0)))))) ORDER BY CAST(t0.c0 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))>=((((t0.c0)%(rt1.c0)))))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((rt1.c0 IN ()) AS TEXT) ORDER BY CAST(t0.c0 AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((rt1.c0 IN ()) AS TEXT) WHERE ((((rt0.c2))>=((((t0.c0)%(rt1.c0)))))) ORDER BY CAST(t0.c0 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))>=((((t0.c0)%(rt1.c0)))))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((rt1.c0 IN ()) AS TEXT) ORDER BY CAST(t0.c0 AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((rt1.c0 IN ()) AS TEXT) WHERE ((((rt0.c2))>=((((t0.c0)%(rt1.c0)))))) ORDER BY CAST(t0.c0 AS TEXT) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)-(rt0.c0)))LIKE(LOWER(rt0.c1)))) ORDER BY CASE WHEN ('VC' IN ()) THEN ((((rt0.c0)OR(rt0.c0)))AND(x'2a9e')) WHEN (rt0.c1 IN ()) THEN rt0.c1 WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE '1708699022' END THEN (- (rt0.c0)) END, ((ABS(DISTINCT rt0.c2))>=(rt0.c2));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)-(rt0.c0)))LIKE(LOWER(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ('VC' IN ()) THEN ((((rt0.c0)OR(rt0.c0)))AND(x'2a9e')) WHEN (rt0.c1 IN ()) THEN rt0.c1 WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE '1708699022' END THEN (- (rt0.c0)) END, ((ABS(DISTINCT rt0.c2))>=(rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)-(rt0.c0)))LIKE(LOWER(rt0.c1)))) ORDER BY CASE WHEN ('VC' IN ()) THEN ((((rt0.c0)OR(rt0.c0)))AND(x'2a9e')) WHEN (rt0.c1 IN ()) THEN rt0.c1 WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE '1708699022' END THEN (- (rt0.c0)) END, ((ABS(DISTINCT rt0.c2))>=(rt0.c2));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)-(rt0.c0)))LIKE(LOWER(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ('VC' IN ()) THEN ((((rt0.c0)OR(rt0.c0)))AND(x'2a9e')) WHEN (rt0.c1 IN ()) THEN rt0.c1 WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE '1708699022' END THEN (- (rt0.c0)) END, ((ABS(DISTINCT rt0.c2))>=(rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)-(rt0.c0)))LIKE(LOWER(rt0.c1)))) ORDER BY CASE WHEN ('VC' IN ()) THEN ((((rt0.c0)OR(rt0.c0)))AND(x'2a9e')) WHEN (rt0.c1 IN ()) THEN rt0.c1 WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE '1708699022' END THEN (- (rt0.c0)) END, ((ABS(DISTINCT rt0.c2))>=(rt0.c2));
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)==(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)==(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)==(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)==(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)==(rt0.c1)));
SELECT * FROM rt1, rt0, t0 WHERE (TRIM(DATE(rt1.c0, rt0.c0, rt1.c1), ((t0.c2)+(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DATE(rt1.c0, rt0.c0, rt1.c1), ((t0.c2)+(rt1.c0)))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (TRIM(DATE(rt1.c0, rt0.c0, rt1.c1), ((t0.c2)+(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DATE(rt1.c0, rt0.c0, rt1.c1), ((t0.c2)+(rt1.c0)))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (TRIM(DATE(rt1.c0, rt0.c0, rt1.c1), ((t0.c2)+(rt1.c0))));
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (((rt0.c2))==((t0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (((rt0.c2))==((t0.c2))) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (((rt0.c2))==((t0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (((rt0.c2))==((t0.c2))) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (((rt0.c2))==((t0.c2))) END);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (t0.c0) ORDER BY rt0.c1 DESC  NULLS LAST, ((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) COLLATE RTRIM DESC, (rt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY rt0.c1 DESC  NULLS LAST, ((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) COLLATE RTRIM DESC, (rt0.c0 IN ()) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (t0.c0) ORDER BY rt0.c1 DESC  NULLS LAST, ((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) COLLATE RTRIM DESC, (rt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY rt0.c1 DESC  NULLS LAST, ((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) COLLATE RTRIM DESC, (rt0.c0 IN ()) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (t0.c0) ORDER BY rt0.c1 DESC  NULLS LAST, ((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) COLLATE RTRIM DESC, (rt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN rt1 ON (CAST(rt1.c2 AS REAL) IN ()) WHERE (COALESCE(DISTINCT ((t0.c0) NOTNULL), ((t0.c0) NOT NULL))) ORDER BY TIME(LIKELY(rt0.c2), (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), ((rt0.c1) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((t0.c0) NOTNULL), ((t0.c0) NOT NULL))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON (CAST(rt1.c2 AS REAL) IN ()) ORDER BY TIME(LIKELY(rt0.c2), (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), ((rt0.c1) IS TRUE))  NULLS LAST);
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN rt1 ON (CAST(rt1.c2 AS REAL) IN ()) WHERE (COALESCE(DISTINCT ((t0.c0) NOTNULL), ((t0.c0) NOT NULL))) ORDER BY TIME(LIKELY(rt0.c2), (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), ((rt0.c1) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((t0.c0) NOTNULL), ((t0.c0) NOT NULL))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON (CAST(rt1.c2 AS REAL) IN ()) ORDER BY TIME(LIKELY(rt0.c2), (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), ((rt0.c1) IS TRUE))  NULLS LAST);
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN rt1 ON (CAST(rt1.c2 AS REAL) IN ()) WHERE (COALESCE(DISTINCT ((t0.c0) NOTNULL), ((t0.c0) NOT NULL))) ORDER BY TIME(LIKELY(rt0.c2), (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), ((rt0.c1) IS TRUE))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN NULL WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END) NOT NULL)) ORDER BY (((- (t0.c0)))/(((((t0.c1)OR(t0.c1)))AND(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c1  WHEN t0.c2 THEN NULL WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c0)))/(((((t0.c1)OR(t0.c1)))AND(t0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN NULL WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END) NOT NULL)) ORDER BY (((- (t0.c0)))/(((((t0.c1)OR(t0.c1)))AND(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c1  WHEN t0.c2 THEN NULL WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((- (t0.c0)))/(((((t0.c1)OR(t0.c1)))AND(t0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN NULL WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END) NOT NULL)) ORDER BY (((- (t0.c0)))/(((((t0.c1)OR(t0.c1)))AND(t0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON NULLIF(((((t0.c2)AND(rt1.c0)))AND(t0.c0)), CASE rt1.c2  WHEN t0.c1 THEN t0.c0 ELSE rt0.c1 END) LEFT OUTER JOIN rt0 ON ((((t0.c0) NOT BETWEEN (rt0.c2) AND (x''))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (t0.c0)) WHERE ((((- (rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt1.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON NULLIF(((((t0.c2)AND(rt1.c0)))AND(t0.c0)), CASE rt1.c2  WHEN t0.c1 THEN t0.c0 ELSE rt0.c1 END) LEFT OUTER JOIN rt0 ON ((((t0.c0) NOT BETWEEN (rt0.c2) AND (x''))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (t0.c0)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON NULLIF(((((t0.c2)AND(rt1.c0)))AND(t0.c0)), CASE rt1.c2  WHEN t0.c1 THEN t0.c0 ELSE rt0.c1 END) LEFT OUTER JOIN rt0 ON ((((t0.c0) NOT BETWEEN (rt0.c2) AND (x''))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (t0.c0)) WHERE ((((- (rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt1.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON NULLIF(((((t0.c2)AND(rt1.c0)))AND(t0.c0)), CASE rt1.c2  WHEN t0.c1 THEN t0.c0 ELSE rt0.c1 END) LEFT OUTER JOIN rt0 ON ((((t0.c0) NOT BETWEEN (rt0.c2) AND (x''))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (t0.c0)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON NULLIF(((((t0.c2)AND(rt1.c0)))AND(t0.c0)), CASE rt1.c2  WHEN t0.c1 THEN t0.c0 ELSE rt0.c1 END) LEFT OUTER JOIN rt0 ON ((((t0.c0) NOT BETWEEN (rt0.c2) AND (x''))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (t0.c0)) WHERE ((((- (rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt1.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(t0.c2 AS NUMERIC) COLLATE BINARY) ORDER BY CAST(((t0.c2) NOT BETWEEN (0.7343372279902496) AND (rt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(((t0.c2) NOT BETWEEN (0.7343372279902496) AND (rt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(t0.c2 AS NUMERIC) COLLATE BINARY) ORDER BY CAST(((t0.c2) NOT BETWEEN (0.7343372279902496) AND (rt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(((t0.c2) NOT BETWEEN (0.7343372279902496) AND (rt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(t0.c2 AS NUMERIC) COLLATE BINARY) ORDER BY CAST(((t0.c2) NOT BETWEEN (0.7343372279902496) AND (rt1.c0)) AS BLOB);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (CASE DATETIME(t0.c2, rt0.c2, rt0.c0)  WHEN ((((t0.c1)AND(t0.c2)))OR(rt0.c2)) THEN ((t0.c0)IS NOT(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE DATETIME(t0.c2, rt0.c2, rt0.c0)  WHEN ((((t0.c1)AND(t0.c2)))OR(rt0.c2)) THEN ((t0.c0)IS NOT(rt0.c1)) END) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (CASE DATETIME(t0.c2, rt0.c2, rt0.c0)  WHEN ((((t0.c1)AND(t0.c2)))OR(rt0.c2)) THEN ((t0.c0)IS NOT(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE DATETIME(t0.c2, rt0.c2, rt0.c0)  WHEN ((((t0.c1)AND(t0.c2)))OR(rt0.c2)) THEN ((t0.c0)IS NOT(rt0.c1)) END) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (CASE DATETIME(t0.c2, rt0.c2, rt0.c0)  WHEN ((((t0.c1)AND(t0.c2)))OR(rt0.c2)) THEN ((t0.c0)IS NOT(rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN 0.33033761252157046 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN 0.33033761252157046 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN 0.33033761252157046 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN 0.33033761252157046 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN 0.33033761252157046 THEN rt1.c2 END)));
SELECT ALL * FROM rt1 WHERE ((IFNULL(rt1.c1, rt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((IFNULL(rt1.c1, rt1.c0) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((IFNULL(rt1.c1, rt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((IFNULL(rt1.c1, rt1.c0) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((IFNULL(rt1.c1, rt1.c0) IN ()));
SELECT ALL COUNT(*) FROM rt1, t0 INDEXED BY i12, rt0 WHERE ((rt1.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 INDEXED BY i12, rt0);
SELECT ALL COUNT(*) FROM rt1, t0 INDEXED BY i12, rt0 WHERE ((rt1.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 INDEXED BY i12, rt0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY((((rt0.c2))<>((rt0.c2))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((rt0.c2))<>((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY((((rt0.c2))<>((rt0.c2))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((rt0.c2))<>((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY((((rt0.c2))<>((rt0.c2))))) ORDER BY rt0.c1  NULLS LAST;
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (0xffffffffcc0c1d77);
SELECT SUM(count) FROM (SELECT ((0Xffffffffcc0c1d77) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (0xffffffffcc0c1d77);
SELECT SUM(count) FROM (SELECT ((0Xffffffffcc0c1d77) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (0xffffffffcc0c1d77);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((highlight(rt0.c2, rt1.c0, t0.c2, rt1.c0))<=(((t0.c2) BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY ((GLOB(t0.c1, rt0.c0))IS NOT(((rt0.c0) BETWEEN (rt1.c0) AND (t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((highlight(rt0.c2, rt1.c0, t0.c2, rt1.c0))<=(((t0.c2) BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((GLOB(t0.c1, rt0.c0))IS NOT(((rt0.c0) BETWEEN (rt1.c0) AND (t0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((highlight(rt0.c2, rt1.c0, t0.c2, rt1.c0))<=(((t0.c2) BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY ((GLOB(t0.c1, rt0.c0))IS NOT(((rt0.c0) BETWEEN (rt1.c0) AND (t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((highlight(rt0.c2, rt1.c0, t0.c2, rt1.c0))<=(((t0.c2) BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((GLOB(t0.c1, rt0.c0))IS NOT(((rt0.c0) BETWEEN (rt1.c0) AND (t0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((highlight(rt0.c2, rt1.c0, t0.c2, rt1.c0))<=(((t0.c2) BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY ((GLOB(t0.c1, rt0.c0))IS NOT(((rt0.c0) BETWEEN (rt1.c0) AND (t0.c1)))) ASC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (NULLIF(DISTINCT (NOT (rt1.c1)), CASE rt1.c1  WHEN rt1.c0 THEN t0.c2 WHEN 0xffffffffc854e0e3 THEN x'' WHEN t0.c0 THEN rt1.c1 END)) ORDER BY ((((t0.c0)AND(rt1.c0)))+(CAST(t0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (NOT (rt1.c1)), CASE rt1.c1  WHEN rt1.c0 THEN t0.c2 WHEN 0Xffffffffc854e0e3 THEN x'' WHEN t0.c0 THEN rt1.c1 END)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((t0.c0)AND(rt1.c0)))+(CAST(t0.c1 AS INTEGER))));
SELECT * FROM rt1, t0 WHERE (NULLIF(DISTINCT (NOT (rt1.c1)), CASE rt1.c1  WHEN rt1.c0 THEN t0.c2 WHEN 0xffffffffc854e0e3 THEN x'' WHEN t0.c0 THEN rt1.c1 END)) ORDER BY ((((t0.c0)AND(rt1.c0)))+(CAST(t0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (NOT (rt1.c1)), CASE rt1.c1  WHEN rt1.c0 THEN t0.c2 WHEN 0Xffffffffc854e0e3 THEN x'' WHEN t0.c0 THEN rt1.c1 END)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((t0.c0)AND(rt1.c0)))+(CAST(t0.c1 AS INTEGER))));
SELECT * FROM rt1, t0 WHERE (NULLIF(DISTINCT (NOT (rt1.c1)), CASE rt1.c1  WHEN rt1.c0 THEN t0.c2 WHEN 0xffffffffc854e0e3 THEN x'' WHEN t0.c0 THEN rt1.c1 END)) ORDER BY ((((t0.c0)AND(rt1.c0)))+(CAST(t0.c1 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(CASE WHEN t0.c2 THEN rt0.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c2 THEN rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(CASE WHEN t0.c2 THEN rt0.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c2 THEN rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(CASE WHEN t0.c2 THEN rt0.c2 END AS BLOB));
SELECT ALL * FROM t0 INNER JOIN rt1 ON (((1259524346, rt1.c1, rt1.c2))<((rt1.c1, t0.c1, t0.c1))) COLLATE BINARY WHERE ('0.7427330615454715');
SELECT SUM(count) FROM (SELECT (('0.7427330615454715') IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((1259524346, rt1.c1, rt1.c2))<((rt1.c1, t0.c1, t0.c1))) COLLATE BINARY);
SELECT ALL * FROM t0 INNER JOIN rt1 ON (((1259524346, rt1.c1, rt1.c2))<((rt1.c1, t0.c1, t0.c1))) COLLATE BINARY WHERE ('0.7427330615454715');
SELECT SUM(count) FROM (SELECT (('0.7427330615454715') IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((1259524346, rt1.c1, rt1.c2))<((rt1.c1, t0.c1, t0.c1))) COLLATE BINARY);
SELECT ALL * FROM t0 INNER JOIN rt1 ON (((1259524346, rt1.c1, rt1.c2))<((rt1.c1, t0.c1, t0.c1))) COLLATE BINARY WHERE ('0.7427330615454715');
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (CASE WHEN t0.c2 THEN t0.c1 END) AND ((((t0.c1))<((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL)) BETWEEN (CASE WHEN t0.c2 THEN t0.c1 END) AND ((((t0.c1))<((t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (CASE WHEN t0.c2 THEN t0.c1 END) AND ((((t0.c1))<((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL)) BETWEEN (CASE WHEN t0.c2 THEN t0.c1 END) AND ((((t0.c1))<((t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (CASE WHEN t0.c2 THEN t0.c1 END) AND ((((t0.c1))<((t0.c0))))));
SELECT ALL * FROM rt1, rt0, t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c2)) BETWEEN (('1031090501')) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2)) BETWEEN (('1031090501')) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c2)) BETWEEN (('1031090501')) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2)) BETWEEN (('1031090501')) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c2)) BETWEEN (('1031090501')) AND ((rt0.c0))))));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON x'' LEFT OUTER JOIN rt1 ON (~ (t0.c2)) WHERE ((((rt0.c2 IN (rt1.c1))) NOTNULL)) ORDER BY ((((rt0.c1)GLOB(0.8951444649746385)))<=(((rt0.c2)OR('')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt1.c1))) NOTNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON x'' LEFT OUTER JOIN rt1 ON (~ (t0.c2)) ORDER BY ((((rt0.c1)GLOB(0.8951444649746385)))<=(((rt0.c2)OR('')))) ASC  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON x'' LEFT OUTER JOIN rt1 ON (~ (t0.c2)) WHERE ((((rt0.c2 IN (rt1.c1))) NOTNULL)) ORDER BY ((((rt0.c1)GLOB(0.8951444649746385)))<=(((rt0.c2)OR('')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt1.c1))) NOTNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON x'' LEFT OUTER JOIN rt1 ON (~ (t0.c2)) ORDER BY ((((rt0.c1)GLOB(0.8951444649746385)))<=(((rt0.c2)OR('')))) ASC  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON x'' LEFT OUTER JOIN rt1 ON (~ (t0.c2)) WHERE ((((rt0.c2 IN (rt1.c1))) NOTNULL)) ORDER BY ((((rt0.c1)GLOB(0.8951444649746385)))<=(((rt0.c2)OR('')))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON CAST(t0.c0 AS BLOB) FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt0.c2) IS TRUE) END WHERE (NULL) ORDER BY ((x'' COLLATE BINARY)==(SQLITE_VERSION())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON CAST(t0.c0 AS BLOB) FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt0.c2) IS TRUE) END ORDER BY ((x'' COLLATE BINARY)==(SQLITE_VERSION())) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON CAST(t0.c0 AS BLOB) FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt0.c2) IS TRUE) END WHERE (NULL) ORDER BY ((x'' COLLATE BINARY)==(SQLITE_VERSION())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON CAST(t0.c0 AS BLOB) FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt0.c2) IS TRUE) END ORDER BY ((x'' COLLATE BINARY)==(SQLITE_VERSION())) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON CAST(t0.c0 AS BLOB) FULL OUTER JOIN rt0 ON CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt0.c2) IS TRUE) END WHERE (NULL) ORDER BY ((x'' COLLATE BINARY)==(SQLITE_VERSION())) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (NULL) ORDER BY (((- (x''))) BETWEEN (((t0.c1) NOT NULL)) AND (UPPER(t0.c2)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((- (x''))) BETWEEN (((t0.c1) NOT NULL)) AND (UPPER(t0.c2))));
SELECT * FROM t0 WHERE (NULL) ORDER BY (((- (x''))) BETWEEN (((t0.c1) NOT NULL)) AND (UPPER(t0.c2)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((- (x''))) BETWEEN (((t0.c1) NOT NULL)) AND (UPPER(t0.c2))));
SELECT * FROM t0 WHERE (NULL) ORDER BY (((- (x''))) BETWEEN (((t0.c1) NOT NULL)) AND (UPPER(t0.c2)));
SELECT ALL * FROM rt1, rt0, t0 WHERE (((((t0.c0)OR((t0.c0 IN (t0.c2)))))OR(NULL))) ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))OR(t0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR((t0.c0 IN (t0.c2)))))OR(NULL))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))OR(t0.c0)) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((((t0.c0)OR((t0.c0 IN (t0.c2)))))OR(NULL))) ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))OR(t0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR((t0.c0 IN (t0.c2)))))OR(NULL))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))OR(t0.c0)) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((((t0.c0)OR((t0.c0 IN (t0.c2)))))OR(NULL))) ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))OR(t0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE ((~ (((t0.c2)&(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c2)&(t0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((~ (((t0.c2)&(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c2)&(t0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((~ (((t0.c2)&(t0.c1)))));
SELECT * FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt0.c2) AND (t0.c2))) BETWEEN (((t0.c1)-(t0.c1))) AND ((('617568449')+(rt1.c0)))) WHERE (((((t0.c1) IS TRUE))+(x'')));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) IS TRUE))+(x''))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt0.c2) AND (t0.c2))) BETWEEN (((t0.c1)-(t0.c1))) AND ((('617568449')+(rt1.c0)))));
SELECT * FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt0.c2) AND (t0.c2))) BETWEEN (((t0.c1)-(t0.c1))) AND ((('617568449')+(rt1.c0)))) WHERE (((((t0.c1) IS TRUE))+(x'')));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) IS TRUE))+(x''))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt0.c2) AND (t0.c2))) BETWEEN (((t0.c1)-(t0.c1))) AND ((('617568449')+(rt1.c0)))));
SELECT * FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2) NOT BETWEEN (rt0.c2) AND (t0.c2))) BETWEEN (((t0.c1)-(t0.c1))) AND ((('617568449')+(rt1.c0)))) WHERE (((((t0.c1) IS TRUE))+(x'')));
SELECT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON rt1.c1 WHERE (TYPEOF(DISTINCT (+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (+ (t0.c0)))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON rt1.c1);
SELECT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON rt1.c1 WHERE (TYPEOF(DISTINCT (+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (+ (t0.c0)))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON rt1.c1);
SELECT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON rt1.c1 WHERE (TYPEOF(DISTINCT (+ (t0.c0))));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CASE t0.c2  WHEN CASE WHEN t0.c0 THEN rt1.c2 END THEN ((rt1.c2)%('57768940')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN CASE WHEN t0.c0 THEN rt1.c2 END THEN ((rt1.c2)%('57768940')) END) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CASE t0.c2  WHEN CASE WHEN t0.c0 THEN rt1.c2 END THEN ((rt1.c2)%('57768940')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN CASE WHEN t0.c0 THEN rt1.c2 END THEN ((rt1.c2)%('57768940')) END) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CASE t0.c2  WHEN CASE WHEN t0.c0 THEN rt1.c2 END THEN ((rt1.c2)%('57768940')) END);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN rt1 WHERE (((t0.c0) BETWEEN (NULLIF(DISTINCT rt0.c2, t0.c2)) AND (x'92d0')));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (NULLIF(DISTINCT rt0.c2, t0.c2)) AND (x'92d0'))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN rt1 WHERE (((t0.c0) BETWEEN (NULLIF(DISTINCT rt0.c2, t0.c2)) AND (x'92d0')));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (NULLIF(DISTINCT rt0.c2, t0.c2)) AND (x'92d0'))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN rt1 WHERE (((t0.c0) BETWEEN (NULLIF(DISTINCT rt0.c2, t0.c2)) AND (x'92d0')));
SELECT COUNT(*) FROM t0, rt1 FULL OUTER JOIN rt0 ON (((((rt0.c1 IN ()))AND(((rt1.c2) NOTNULL))))AND(t0.c0)) WHERE (CASE ((t0.c2) NOT BETWEEN (rt0.c1) AND ('-2103298838'))  WHEN SQLITE_COMPILEOPTION_USED(rt0.c2) THEN ((rt1.c0)||(t0.c1)) WHEN ',X*I49BHS' THEN ((rt1.c1) ISNULL) WHEN CASE t0.c1  WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END THEN (((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END) ORDER BY t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2) NOT BETWEEN (rt0.c1) AND ('-2103298838'))  WHEN SQLITE_COMPILEOPTION_USED(rt0.c2) THEN ((rt1.c0)||(t0.c1)) WHEN ',X*I49BHS' THEN ((rt1.c1) ISNULL) WHEN CASE t0.c1  WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END THEN (((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN rt0 ON (((((rt0.c1 IN ()))AND(((rt1.c2) NOTNULL))))AND(t0.c0)) ORDER BY t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 FULL OUTER JOIN rt0 ON (((((rt0.c1 IN ()))AND(((rt1.c2) NOTNULL))))AND(t0.c0)) WHERE (CASE ((t0.c2) NOT BETWEEN (rt0.c1) AND ('-2103298838'))  WHEN SQLITE_COMPILEOPTION_USED(rt0.c2) THEN ((rt1.c0)||(t0.c1)) WHEN ',X*I49BHS' THEN ((rt1.c1) ISNULL) WHEN CASE t0.c1  WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END THEN (((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END) ORDER BY t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2) NOT BETWEEN (rt0.c1) AND ('-2103298838'))  WHEN SQLITE_COMPILEOPTION_USED(rt0.c2) THEN ((rt1.c0)||(t0.c1)) WHEN ',X*I49BHS' THEN ((rt1.c1) ISNULL) WHEN CASE t0.c1  WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END THEN (((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN rt0 ON (((((rt0.c1 IN ()))AND(((rt1.c2) NOTNULL))))AND(t0.c0)) ORDER BY t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 FULL OUTER JOIN rt0 ON (((((rt0.c1 IN ()))AND(((rt1.c2) NOTNULL))))AND(t0.c0)) WHERE (CASE ((t0.c2) NOT BETWEEN (rt0.c1) AND ('-2103298838'))  WHEN SQLITE_COMPILEOPTION_USED(rt0.c2) THEN ((rt1.c0)||(t0.c1)) WHEN ',X*I49BHS' THEN ((rt1.c1) ISNULL) WHEN CASE t0.c1  WHEN rt1.c2 THEN t0.c0 ELSE t0.c0 END THEN (((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) END) ORDER BY t0.c2  NULLS FIRST;
SELECT ALL * FROM rt0, t0 INNER JOIN rt1 ON (UNICODE(x'') IN ()) WHERE ((('') NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c2) AND (rt1.c2))) AND ((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c2) AND (rt1.c2))) AND ((- (rt1.c2))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt1 ON (UNICODE(x'') IN ()));
SELECT ALL * FROM rt0, t0 INNER JOIN rt1 ON (UNICODE(x'') IN ()) WHERE ((('') NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c2) AND (rt1.c2))) AND ((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c2) AND (rt1.c2))) AND ((- (rt1.c2))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt1 ON (UNICODE(x'') IN ()));
SELECT ALL * FROM rt0, t0 INNER JOIN rt1 ON (UNICODE(x'') IN ()) WHERE ((('') NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c2) AND (rt1.c2))) AND ((- (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON CAST((rt0.c1 IN ()) AS BLOB) INNER JOIN rt1 ON (~ ((- (t0.c0)))) WHERE (t0.c1) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ((((0.09992683199359498, rt1.c2, rt1.c0)) BETWEEN ((t0.c0, rt0.c2, 0X65d8ad8e)) AND ((rt0.c1, rt0.c0, t0.c2))), LIKELIHOOD(t0.c2, 0.284143530521766))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0 NOT INDEXED CROSS JOIN t0 ON CAST((rt0.c1 IN ()) AS BLOB) INNER JOIN rt1 ON (~ ((- (t0.c0)))) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ((((0.09992683199359498, rt1.c2, rt1.c0)) BETWEEN ((t0.c0, rt0.c2, 0X65d8ad8e)) AND ((rt0.c1, rt0.c0, t0.c2))), LIKELIHOOD(t0.c2, 0.284143530521766))) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON CAST((rt0.c1 IN ()) AS BLOB) INNER JOIN rt1 ON (~ ((- (t0.c0)))) WHERE (t0.c1) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ((((0.09992683199359498, rt1.c2, rt1.c0)) BETWEEN ((t0.c0, rt0.c2, 0X65d8ad8e)) AND ((rt0.c1, rt0.c0, t0.c2))), LIKELIHOOD(t0.c2, 0.284143530521766))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0 NOT INDEXED CROSS JOIN t0 ON CAST((rt0.c1 IN ()) AS BLOB) INNER JOIN rt1 ON (~ ((- (t0.c0)))) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ((((0.09992683199359498, rt1.c2, rt1.c0)) BETWEEN ((t0.c0, rt0.c2, 0X65d8ad8e)) AND ((rt0.c1, rt0.c0, t0.c2))), LIKELIHOOD(t0.c2, 0.284143530521766))) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON CAST((rt0.c1 IN ()) AS BLOB) INNER JOIN rt1 ON (~ ((- (t0.c0)))) WHERE (t0.c1) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ((((0.09992683199359498, rt1.c2, rt1.c0)) BETWEEN ((t0.c0, rt0.c2, 0X65d8ad8e)) AND ((rt0.c1, rt0.c0, t0.c2))), LIKELIHOOD(t0.c2, 0.284143530521766))) DESC;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((t0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((t0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((t0.c1 IN ()) IN ()));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((0.4865534584823247, rt0.c0, rt0.c2)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((0.4865534584823247, rt0.c0, rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((0.4865534584823247, rt0.c0, rt0.c2)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((0.4865534584823247, rt0.c0, rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((0.4865534584823247, rt0.c0, rt0.c2)))) IS TRUE));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt0.c2)IS(rt0.c2))) NOT BETWEEN (rt0.c0) AND (((t0.c2) NOT NULL))) RIGHT OUTER JOIN t0 ON (((((rt1.c0) NOTNULL)))=(((('218327388')LIKE(t0.c0))))) WHERE (((json_valid(rt1.c1)) NOT NULL)) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt1.c1)) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt0.c2)IS(rt0.c2))) NOT BETWEEN (rt0.c0) AND (((t0.c2) NOT NULL))) RIGHT OUTER JOIN t0 ON (((((rt1.c0) NOTNULL)))==(((('218327388')LIKE(t0.c0))))) ORDER BY rt0.c0 ASC);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt0.c2)IS(rt0.c2))) NOT BETWEEN (rt0.c0) AND (((t0.c2) NOT NULL))) RIGHT OUTER JOIN t0 ON (((((rt1.c0) NOTNULL)))=(((('218327388')LIKE(t0.c0))))) WHERE (((json_valid(rt1.c1)) NOT NULL)) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt1.c1)) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt0.c2)IS(rt0.c2))) NOT BETWEEN (rt0.c0) AND (((t0.c2) NOT NULL))) RIGHT OUTER JOIN t0 ON (((((rt1.c0) NOTNULL)))==(((('218327388')LIKE(t0.c0))))) ORDER BY rt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((TRIM('ᴁK', rt0.c0) IN ())) ORDER BY CAST((NOT (rt0.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((TRIM('ᴁK', rt0.c0) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST((NOT (rt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE ((TRIM('ᴁK', rt0.c0) IN ())) ORDER BY CAST((NOT (rt0.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((TRIM('ᴁK', rt0.c0) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST((NOT (rt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE ((TRIM('ᴁK', rt0.c0) IN ())) ORDER BY CAST((NOT (rt0.c1)) AS BLOB);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2)AND('-1818806475'))) AND ((rt0.c0 IN (rt0.c2))))) ORDER BY CAST((+ (rt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2)AND('-1818806475'))) AND ((rt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c1)) AS INTEGER)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2)AND('-1818806475'))) AND ((rt0.c0 IN (rt0.c2))))) ORDER BY CAST((+ (rt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2)AND('-1818806475'))) AND ((rt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c1)) AS INTEGER)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2)AND('-1818806475'))) AND ((rt0.c0 IN (rt0.c2))))) ORDER BY CAST((+ (rt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((x'', rt1.c2, rt0.c1)) BETWEEN (((rt1.c1 IN ()), NULL, (- (t0.c2)))) AND ((-3.25791539E8, ((t0.c2)+(rt0.c0)), ((rt0.c1)||(rt0.c0)))))) ORDER BY CASE WHEN (t0.c2 IN ('665287667', t0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt1.c1)) ELSE CASE WHEN x'' THEN rt0.c1 ELSE 0.6620996517715828 END END;
SELECT SUM(count) FROM (SELECT (((((x'', rt1.c2, rt0.c1)) BETWEEN (((rt1.c1 IN ()), NULL, (- (t0.c2)))) AND ((-3.25791539E8, ((t0.c2)+(rt0.c0)), ((rt0.c1)||(rt0.c0)))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CASE WHEN (t0.c2 IN ('665287667', t0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt1.c1)) ELSE CASE WHEN x'' THEN rt0.c1 ELSE 0.6620996517715828 END END);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((x'', rt1.c2, rt0.c1)) BETWEEN (((rt1.c1 IN ()), NULL, (- (t0.c2)))) AND ((-3.25791539E8, ((t0.c2)+(rt0.c0)), ((rt0.c1)||(rt0.c0)))))) ORDER BY CASE WHEN (t0.c2 IN ('665287667', t0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt1.c1)) ELSE CASE WHEN x'' THEN rt0.c1 ELSE 0.6620996517715828 END END;
SELECT SUM(count) FROM (SELECT (((((x'', rt1.c2, rt0.c1)) BETWEEN (((rt1.c1 IN ()), NULL, (- (t0.c2)))) AND ((-3.25791539E8, ((t0.c2)+(rt0.c0)), ((rt0.c1)||(rt0.c0)))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CASE WHEN (t0.c2 IN ('665287667', t0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt1.c1)) ELSE CASE WHEN x'' THEN rt0.c1 ELSE 0.6620996517715828 END END);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((x'', rt1.c2, rt0.c1)) BETWEEN (((rt1.c1 IN ()), NULL, (- (t0.c2)))) AND ((-3.25791539E8, ((t0.c2)+(rt0.c0)), ((rt0.c1)||(rt0.c0)))))) ORDER BY CASE WHEN (t0.c2 IN ('665287667', t0.c2)) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt1.c1)) ELSE CASE WHEN x'' THEN rt0.c1 ELSE 0.6620996517715828 END END;
SELECT * FROM t0, rt1 WHERE (((((((rt1.c1) BETWEEN (t0.c1) AND (rt1.c0)))AND(((t0.c0) NOTNULL))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) BETWEEN (t0.c1) AND (rt1.c0)))AND(((t0.c0) NOTNULL))))AND(NULL))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((((rt1.c1) BETWEEN (t0.c1) AND (rt1.c0)))AND(((t0.c0) NOTNULL))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) BETWEEN (t0.c1) AND (rt1.c0)))AND(((t0.c0) NOTNULL))))AND(NULL))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((((rt1.c1) BETWEEN (t0.c1) AND (rt1.c0)))AND(((t0.c0) NOTNULL))))AND(NULL)));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2) IS TRUE) AS BLOB)) ORDER BY RTRIM(((rt1.c2) NOTNULL))  NULLS LAST, (((((((('-929894939')AND(((rt1.c0)+(rt1.c2)))))AND(COALESCE(rt1.c1, rt1.c2, rt1.c2, rt1.c2))))AND((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))AND(860159245)) ASC, (((rt1.c0)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((((rt1.c2)>(rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY RTRIM(((rt1.c2) NOTNULL))  NULLS LAST, (((((((('-929894939')AND(((rt1.c0)+(rt1.c2)))))AND(COALESCE(rt1.c1, rt1.c2, rt1.c2, rt1.c2))))AND((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))AND(860159245)) ASC, (((rt1.c0)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((((rt1.c2)>(rt1.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2) IS TRUE) AS BLOB)) ORDER BY RTRIM(((rt1.c2) NOTNULL))  NULLS LAST, (((((((('-929894939')AND(((rt1.c0)+(rt1.c2)))))AND(COALESCE(rt1.c1, rt1.c2, rt1.c2, rt1.c2))))AND((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))AND(860159245)) ASC, (((rt1.c0)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((((rt1.c2)>(rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY RTRIM(((rt1.c2) NOTNULL))  NULLS LAST, (((((((('-929894939')AND(((rt1.c0)+(rt1.c2)))))AND(COALESCE(rt1.c1, rt1.c2, rt1.c2, rt1.c2))))AND((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))AND(860159245)) ASC, (((rt1.c0)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((((rt1.c2)>(rt1.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2) IS TRUE) AS BLOB)) ORDER BY RTRIM(((rt1.c2) NOTNULL))  NULLS LAST, (((((((('-929894939')AND(((rt1.c0)+(rt1.c2)))))AND(COALESCE(rt1.c1, rt1.c2, rt1.c2, rt1.c2))))AND((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))AND(860159245)) ASC, (((rt1.c0)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((((rt1.c2)>(rt1.c1)))))  NULLS FIRST;
SELECT * FROM rt1, t0, rt0 WHERE ((- (t0.c0)));
SELECT SUM(count) FROM (SELECT (((- (t0.c0))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE ((- (t0.c0)));
SELECT SUM(count) FROM (SELECT (((- (t0.c0))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE ((- (t0.c0)));
SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOTNULL))OR(CAST(t0.c0 AS REAL))))OR(((0.1922285699587044) BETWEEN (t0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) NOTNULL))OR(CAST(t0.c0 AS REAL))))OR(((0.1922285699587044) BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOTNULL))OR(CAST(t0.c0 AS REAL))))OR(((0.1922285699587044) BETWEEN (t0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) NOTNULL))OR(CAST(t0.c0 AS REAL))))OR(((0.1922285699587044) BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOTNULL))OR(CAST(t0.c0 AS REAL))))OR(((0.1922285699587044) BETWEEN (t0.c0) AND (t0.c2)))));
SELECT * FROM rt0 WHERE (((((rt0.c1)>(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)>(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)>(rt0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED, t0 WHERE ((((rt1.c1) NOTNULL) IN ())) ORDER BY ((CAST(rt1.c1 AS BLOB)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(rt0.c0 AS INTEGER))), ((((rt1.c0) NOT BETWEEN (0.4821920740051078) AND (rt1.c2))) NOT BETWEEN ((+ (rt1.c1))) AND (((rt0.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((CAST(rt1.c1 AS BLOB)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(rt0.c0 AS INTEGER))), ((((rt1.c0) NOT BETWEEN (0.4821920740051078) AND (rt1.c2))) NOT BETWEEN ((+ (rt1.c1))) AND (((rt0.c1) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED, t0 WHERE ((((rt1.c1) NOTNULL) IN ())) ORDER BY ((CAST(rt1.c1 AS BLOB)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(rt0.c0 AS INTEGER))), ((((rt1.c0) NOT BETWEEN (0.4821920740051078) AND (rt1.c2))) NOT BETWEEN ((+ (rt1.c1))) AND (((rt0.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((CAST(rt1.c1 AS BLOB)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(rt0.c0 AS INTEGER))), ((((rt1.c0) NOT BETWEEN (0.4821920740051078) AND (rt1.c2))) NOT BETWEEN ((+ (rt1.c1))) AND (((rt0.c1) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED, t0 WHERE ((((rt1.c1) NOTNULL) IN ())) ORDER BY ((CAST(rt1.c1 AS BLOB)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(rt0.c0 AS INTEGER))), ((((rt1.c0) NOT BETWEEN (0.4821920740051078) AND (rt1.c2))) NOT BETWEEN ((+ (rt1.c1))) AND (((rt0.c1) ISNULL)))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT ALL * FROM t0, rt0 LEFT OUTER JOIN rt1 ON 0.19300824098391556 COLLATE NOCASE WHERE (((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON 0.19300824098391556 COLLATE NOCASE);
SELECT ALL * FROM t0, rt0 LEFT OUTER JOIN rt1 ON 0.19300824098391556 COLLATE NOCASE WHERE (((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON 0.19300824098391556 COLLATE NOCASE);
SELECT ALL * FROM t0, rt0 LEFT OUTER JOIN rt1 ON 0.19300824098391556 COLLATE NOCASE WHERE (((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((((((((((~ (rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c0)))))AND('-1161798630')))OR(((rt1.c2)+(rt1.c2)))))AND(((rt1.c2)<(rt0.c2)))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c2)))))OR(((rt0.c2) NOT NULL))) WHERE ((rt1.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((((((((((~ (rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c0)))))AND('-1161798630')))OR(((rt1.c2)+(rt1.c2)))))AND(((rt1.c2)<(rt0.c2)))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c2)))))OR(((rt0.c2) NOT NULL))));
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((((((((((~ (rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c0)))))AND('-1161798630')))OR(((rt1.c2)+(rt1.c2)))))AND(((rt1.c2)<(rt0.c2)))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c2)))))OR(((rt0.c2) NOT NULL))) WHERE ((rt1.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((((((((((~ (rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c0)))))AND('-1161798630')))OR(((rt1.c2)+(rt1.c2)))))AND(((rt1.c2)<(rt0.c2)))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c2)))))OR(((rt0.c2) NOT NULL))));
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((((((((((~ (rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c0)))))AND('-1161798630')))OR(((rt1.c2)+(rt1.c2)))))AND(((rt1.c2)<(rt0.c2)))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c2)))))OR(((rt0.c2) NOT NULL))) WHERE ((rt1.c1 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (0.6753100890717599)))IS NOT((rt0.c1 IN ())))) ORDER BY CAST(json_valid(rt0.c2) AS BLOB) DESC, 0.11493203244223682 ASC;
SELECT SUM(count) FROM (SELECT (((((+ (0.6753100890717599)))IS NOT((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(json_valid(rt0.c2) AS BLOB) DESC, 0.11493203244223682 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (0.6753100890717599)))IS NOT((rt0.c1 IN ())))) ORDER BY CAST(json_valid(rt0.c2) AS BLOB) DESC, 0.11493203244223682 ASC;
SELECT SUM(count) FROM (SELECT (((((+ (0.6753100890717599)))IS NOT((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(json_valid(rt0.c2) AS BLOB) DESC, 0.11493203244223682 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (0.6753100890717599)))IS NOT((rt0.c1 IN ())))) ORDER BY CAST(json_valid(rt0.c2) AS BLOB) DESC, 0.11493203244223682 ASC;
SELECT * FROM rt0, t0 WHERE (CAST(((((rt0.c0)OR(rt0.c2)))AND(t0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c2)))AND(t0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(((((rt0.c0)OR(rt0.c2)))AND(t0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c2)))AND(t0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(((((rt0.c0)OR(rt0.c2)))AND(t0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((((rt0.c2)AND(0.6573950250445396)))OR(1561861258))) IS FALSE)) ORDER BY ((((rt1.c1)>(rt0.c1))) NOT NULL) ASC, MIN((rt1.c0 IN ()), t0.c1, ((t0.c0)||(rt0.c0)), LIKELIHOOD(DISTINCT t0.c2, 0.7988427309164021)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(0.6573950250445396)))OR(1561861258))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((rt1.c1)>(rt0.c1))) NOT NULL) ASC, MIN((rt1.c0 IN ()), t0.c1, ((t0.c0)||(rt0.c0)), LIKELIHOOD(DISTINCT t0.c2, 0.7988427309164021)) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((((rt0.c2)AND(0.6573950250445396)))OR(1561861258))) IS FALSE)) ORDER BY ((((rt1.c1)>(rt0.c1))) NOT NULL) ASC, MIN((rt1.c0 IN ()), t0.c1, ((t0.c0)||(rt0.c0)), LIKELIHOOD(DISTINCT t0.c2, 0.7988427309164021)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(0.6573950250445396)))OR(1561861258))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((rt1.c1)>(rt0.c1))) NOT NULL) ASC, MIN((rt1.c0 IN ()), t0.c1, ((t0.c0)||(rt0.c0)), LIKELIHOOD(DISTINCT t0.c2, 0.7988427309164021)) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((((rt0.c2)AND(0.6573950250445396)))OR(1561861258))) IS FALSE)) ORDER BY ((((rt1.c1)>(rt0.c1))) NOT NULL) ASC, MIN((rt1.c0 IN ()), t0.c1, ((t0.c0)||(rt0.c0)), LIKELIHOOD(DISTINCT t0.c2, 0.7988427309164021)) ASC;
SELECT ALL * FROM t0 WHERE ((((((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))AND(((((((((t0.c2)AND(t0.c1)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))))AND(NULL COLLATE BINARY))) ORDER BY (('-377558375') BETWEEN (t0.c2 COLLATE NOCASE) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((NULL))))) ASC  NULLS LAST, (((t0.c1 IN ())) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))AND(((((((((t0.c2)AND(t0.c1)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))))AND(NULL COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (('-377558375') BETWEEN (t0.c2 COLLATE NOCASE) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((NULL))))) ASC  NULLS LAST, (((t0.c1 IN ())) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))AND(((((((((t0.c2)AND(t0.c1)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))))AND(NULL COLLATE BINARY))) ORDER BY (('-377558375') BETWEEN (t0.c2 COLLATE NOCASE) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((NULL))))) ASC  NULLS LAST, (((t0.c1 IN ())) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))AND(((((((((t0.c2)AND(t0.c1)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))))AND(NULL COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (('-377558375') BETWEEN (t0.c2 COLLATE NOCASE) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((NULL))))) ASC  NULLS LAST, (((t0.c1 IN ())) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))AND(((((((((t0.c2)AND(t0.c1)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))))AND(NULL COLLATE BINARY))) ORDER BY (('-377558375') BETWEEN (t0.c2 COLLATE NOCASE) AND ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((NULL))))) ASC  NULLS LAST, (((t0.c1 IN ())) IS FALSE) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt1, rt0 WHERE (CAST(((('57768940')) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((('57768940')) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (CAST(((('57768940')) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((('57768940')) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (CAST(((('57768940')) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))) AS NUMERIC));
SELECT * FROM t0 WHERE (CASE CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE -1645611625 END  WHEN ((t0.c1)<(NULL)) THEN (+ (t0.c1)) ELSE CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END END) ORDER BY (CAST(t0.c0 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE -1645611625 END  WHEN ((t0.c1)<(NULL)) THEN (+ (t0.c1)) ELSE CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END END) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c0 AS REAL) IN ()));
SELECT * FROM t0 WHERE (CASE CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE -1645611625 END  WHEN ((t0.c1)<(NULL)) THEN (+ (t0.c1)) ELSE CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END END) ORDER BY (CAST(t0.c0 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE -1645611625 END  WHEN ((t0.c1)<(NULL)) THEN (+ (t0.c1)) ELSE CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END END) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c0 AS REAL) IN ()));
SELECT * FROM t0 WHERE (CASE CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE -1645611625 END  WHEN ((t0.c1)<(NULL)) THEN (+ (t0.c1)) ELSE CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END END) ORDER BY (CAST(t0.c0 AS REAL) IN ());
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (CAST(((rt1.c0)IS(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)IS(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (CAST(((rt1.c0)IS(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)IS(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (CAST(((rt1.c0)IS(rt0.c1)) AS REAL));
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED CROSS JOIN t0 ON ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt1.c0)))AND(((((((((rt1.c1)OR(rt1.c2)))OR(t0.c2)))AND(rt0.c2)))AND(rt0.c0)))))AND(UNICODE(rt0.c0))))AND((t0.c0 IN ()))))AND(CASE WHEN rt0.c1 THEN rt1.c2 END)) WHERE (CASE CASE WHEN t0.c2 THEN t0.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c1 WHEN t0.c2 THEN '' END  WHEN (rt0.c0 IN ()) THEN ((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) ELSE 0.6926068175485491 END) ORDER BY (('-1833724612') IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c2 THEN t0.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c1 WHEN t0.c2 THEN '' END  WHEN (rt0.c0 IN ()) THEN ((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) ELSE 0.6926068175485491 END) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt1.c0)))AND(((((((((rt1.c1)OR(rt1.c2)))OR(t0.c2)))AND(rt0.c2)))AND(rt0.c0)))))AND(UNICODE(rt0.c0))))AND((t0.c0 IN ()))))AND(CASE WHEN rt0.c1 THEN rt1.c2 END)) ORDER BY (('-1833724612') IS TRUE) DESC);
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED CROSS JOIN t0 ON ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt1.c0)))AND(((((((((rt1.c1)OR(rt1.c2)))OR(t0.c2)))AND(rt0.c2)))AND(rt0.c0)))))AND(UNICODE(rt0.c0))))AND((t0.c0 IN ()))))AND(CASE WHEN rt0.c1 THEN rt1.c2 END)) WHERE (CASE CASE WHEN t0.c2 THEN t0.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c1 WHEN t0.c2 THEN '' END  WHEN (rt0.c0 IN ()) THEN ((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) ELSE 0.6926068175485491 END) ORDER BY (('-1833724612') IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c2 THEN t0.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c1 WHEN t0.c2 THEN '' END  WHEN (rt0.c0 IN ()) THEN ((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) ELSE 0.6926068175485491 END) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt1.c0)))AND(((((((((rt1.c1)OR(rt1.c2)))OR(t0.c2)))AND(rt0.c2)))AND(rt0.c0)))))AND(UNICODE(rt0.c0))))AND((t0.c0 IN ()))))AND(CASE WHEN rt0.c1 THEN rt1.c2 END)) ORDER BY (('-1833724612') IS TRUE) DESC);
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED CROSS JOIN t0 ON ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt1.c0)))AND(((((((((rt1.c1)OR(rt1.c2)))OR(t0.c2)))AND(rt0.c2)))AND(rt0.c0)))))AND(UNICODE(rt0.c0))))AND((t0.c0 IN ()))))AND(CASE WHEN rt0.c1 THEN rt1.c2 END)) WHERE (CASE CASE WHEN t0.c2 THEN t0.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c1 WHEN t0.c2 THEN '' END  WHEN (rt0.c0 IN ()) THEN ((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) ELSE 0.6926068175485491 END) ORDER BY (('-1833724612') IS TRUE) DESC;
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((t0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ())) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((t0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ())) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((t0.c1 IN ()));
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.7616192783392923) ORDER BY (~ (TYPEOF(DISTINCT rt0.c1))) ASC, (((rt1.c0 IN (rt0.c0)))%('0.4821920740051078'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.7616192783392923) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ (TYPEOF(DISTINCT rt0.c1))) ASC, (((rt1.c0 IN (rt0.c0)))%('0.4821920740051078'))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.7616192783392923) ORDER BY (~ (TYPEOF(DISTINCT rt0.c1))) ASC, (((rt1.c0 IN (rt0.c0)))%('0.4821920740051078'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.7616192783392923) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ (TYPEOF(DISTINCT rt0.c1))) ASC, (((rt1.c0 IN (rt0.c0)))%('0.4821920740051078'))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.7616192783392923) ORDER BY (~ (TYPEOF(DISTINCT rt0.c1))) ASC, (((rt1.c0 IN (rt0.c0)))%('0.4821920740051078'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (0.2899518562190747))) NOTNULL)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (0.2899518562190747))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (0.2899518562190747))) NOTNULL)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (0.2899518562190747))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (0.2899518562190747))) NOTNULL)) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((t0.c0)%(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)%(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((t0.c0)%(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)%(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((t0.c0)%(rt0.c1)) AS REAL));
SELECT ALL * FROM rt0, rt1, t0 WHERE (IFNULL(rt0.c0 COLLATE BINARY, 0.4164987710540271));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c0 COLLATE BINARY, 0.4164987710540271)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (IFNULL(rt0.c0 COLLATE BINARY, 0.4164987710540271));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c0 COLLATE BINARY, 0.4164987710540271)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (IFNULL(rt0.c0 COLLATE BINARY, 0.4164987710540271));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))==(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))==(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))==(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))==(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))==(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))));
SELECT ALL * FROM t0, rt1 WHERE ((((- (t0.c2))) NOT BETWEEN ((('') BETWEEN (rt1.c0) AND (rt1.c2))) AND (((rt1.c0) BETWEEN (t0.c0) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c2))) NOT BETWEEN ((('') BETWEEN (rt1.c0) AND (rt1.c2))) AND (((rt1.c0) BETWEEN (t0.c0) AND (t0.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((- (t0.c2))) NOT BETWEEN ((('') BETWEEN (rt1.c0) AND (rt1.c2))) AND (((rt1.c0) BETWEEN (t0.c0) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c2))) NOT BETWEEN ((('') BETWEEN (rt1.c0) AND (rt1.c2))) AND (((rt1.c0) BETWEEN (t0.c0) AND (t0.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((- (t0.c2))) NOT BETWEEN ((('') BETWEEN (rt1.c0) AND (rt1.c2))) AND (((rt1.c0) BETWEEN (t0.c0) AND (t0.c1)))));
SELECT * FROM t0 WHERE (CAST(0.40143982795927347 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(0.40143982795927347 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(0.40143982795927347 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(0.40143982795927347 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(0.40143982795927347 COLLATE RTRIM AS BLOB));
SELECT ALL * FROM rt0, rt1, t0 WHERE ((((rt0.c1 IN (t0.c0, t0.c0))) NOT NULL)) ORDER BY ((MIN(rt0.c1, rt0.c0))<(((rt0.c2) NOTNULL))) ASC, (+ (t0.c2)) COLLATE RTRIM, ((CAST(rt0.c0 AS INTEGER)) NOT NULL), LENGTH(CASE WHEN rt1.c2 THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (t0.c0, t0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((MIN(rt0.c1, rt0.c0))<(((rt0.c2) NOTNULL))) ASC, (+ (t0.c2)) COLLATE RTRIM, ((CAST(rt0.c0 AS INTEGER)) NOT NULL), LENGTH(CASE WHEN rt1.c2 THEN rt1.c2 END));
SELECT ALL * FROM rt0, rt1, t0 WHERE ((((rt0.c1 IN (t0.c0, t0.c0))) NOT NULL)) ORDER BY ((MIN(rt0.c1, rt0.c0))<(((rt0.c2) NOTNULL))) ASC, (+ (t0.c2)) COLLATE RTRIM, ((CAST(rt0.c0 AS INTEGER)) NOT NULL), LENGTH(CASE WHEN rt1.c2 THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (t0.c0, t0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((MIN(rt0.c1, rt0.c0))<(((rt0.c2) NOTNULL))) ASC, (+ (t0.c2)) COLLATE RTRIM, ((CAST(rt0.c0 AS INTEGER)) NOT NULL), LENGTH(CASE WHEN rt1.c2 THEN rt1.c2 END));
SELECT ALL * FROM rt0, rt1, t0 WHERE ((((rt0.c1 IN (t0.c0, t0.c0))) NOT NULL)) ORDER BY ((MIN(rt0.c1, rt0.c0))<(((rt0.c2) NOTNULL))) ASC, (+ (t0.c2)) COLLATE RTRIM, ((CAST(rt0.c0 AS INTEGER)) NOT NULL), LENGTH(CASE WHEN rt1.c2 THEN rt1.c2 END);
SELECT COUNT(*) FROM t0, rt1 WHERE (((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)>=(((t0.c0) BETWEEN (rt1.c0) AND (t0.c2))))) ORDER BY ((CAST('-1229342711' AS REAL)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)>=(((t0.c0) BETWEEN (rt1.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((CAST('-1229342711' AS REAL)) NOTNULL));
SELECT COUNT(*) FROM t0, rt1 WHERE (((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)>=(((t0.c0) BETWEEN (rt1.c0) AND (t0.c2))))) ORDER BY ((CAST('-1229342711' AS REAL)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)>=(((t0.c0) BETWEEN (rt1.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((CAST('-1229342711' AS REAL)) NOTNULL));
SELECT COUNT(*) FROM t0, rt1 WHERE (((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)>=(((t0.c0) BETWEEN (rt1.c0) AND (t0.c2))))) ORDER BY ((CAST('-1229342711' AS REAL)) NOTNULL);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((CAST(rt1.c1 AS TEXT)) NOT BETWEEN ((t0.c0 IN ())) AND (((rt1.c2)+(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT)) NOT BETWEEN ((t0.c0 IN ())) AND (((rt1.c2)+(rt1.c0))))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((CAST(rt1.c1 AS TEXT)) NOT BETWEEN ((t0.c0 IN ())) AND (((rt1.c2)+(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT)) NOT BETWEEN ((t0.c0 IN ())) AND (((rt1.c2)+(rt1.c0))))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((CAST(rt1.c1 AS TEXT)) NOT BETWEEN ((t0.c0 IN ())) AND (((rt1.c2)+(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt1.c0 END WHERE ((~ ((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt1.c0))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt1.c0 END);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt1.c0 END WHERE ((~ ((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt1.c0))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt1.c0 END);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt1.c0 END WHERE ((~ ((+ (rt1.c0)))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((rt1.c2)>(t0.c1)) COLLATE NOCASE) ORDER BY (((t0.c1)LIKE(t0.c0)) IN ())  NULLS LAST, CAST(CAST(t0.c1 AS INTEGER) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1 ORDER BY (((t0.c1)LIKE(t0.c0)) IN ())  NULLS LAST, CAST(CAST(t0.c1 AS INTEGER) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((rt1.c2)>(t0.c1)) COLLATE NOCASE) ORDER BY (((t0.c1)LIKE(t0.c0)) IN ())  NULLS LAST, CAST(CAST(t0.c1 AS INTEGER) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1 ORDER BY (((t0.c1)LIKE(t0.c0)) IN ())  NULLS LAST, CAST(CAST(t0.c1 AS INTEGER) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((rt1.c2)>(t0.c1)) COLLATE NOCASE) ORDER BY (((t0.c1)LIKE(t0.c0)) IN ())  NULLS LAST, CAST(CAST(t0.c1 AS INTEGER) AS BLOB) ASC;
SELECT ALL * FROM t0, rt1 WHERE ((CAST(rt1.c0 AS REAL) IN (((rt1.c1) NOT BETWEEN (0.5529251847161286) AND (t0.c1))))) ORDER BY (+ (((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))) ASC, (((t0.c0 IN ())) BETWEEN ((NOT (rt1.c2))) AND ((((t0.c2))==((t0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c0 AS REAL) IN (((rt1.c1) NOT BETWEEN (0.5529251847161286) AND (t0.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (+ (((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))) ASC, (((t0.c0 IN ())) BETWEEN ((NOT (rt1.c2))) AND ((((t0.c2))=((t0.c1)))))  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE ((CAST(rt1.c0 AS REAL) IN (((rt1.c1) NOT BETWEEN (0.5529251847161286) AND (t0.c1))))) ORDER BY (+ (((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))) ASC, (((t0.c0 IN ())) BETWEEN ((NOT (rt1.c2))) AND ((((t0.c2))==((t0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c0 AS REAL) IN (((rt1.c1) NOT BETWEEN (0.5529251847161286) AND (t0.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (+ (((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))) ASC, (((t0.c0 IN ())) BETWEEN ((NOT (rt1.c2))) AND ((((t0.c2))=((t0.c1)))))  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE ((CAST(rt1.c0 AS REAL) IN (((rt1.c1) NOT BETWEEN (0.5529251847161286) AND (t0.c1))))) ORDER BY (+ (((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))) ASC, (((t0.c0 IN ())) BETWEEN ((NOT (rt1.c2))) AND ((((t0.c2))==((t0.c1)))))  NULLS FIRST;
SELECT ALL * FROM rt1, t0 INNER JOIN rt0 ON CASE ((((rt1.c0)OR(x'4923')))OR(rt1.c1))  WHEN '786409023' THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c1))) ELSE (- ('fX')) END WHERE ((((rt1.c1, NULL, NULL)) BETWEEN ((load_extension(rt1.c0), 0.7616192783392923, ((t0.c0)IS(t0.c1)))) AND ((CAST(rt0.c0 AS INTEGER), ((rt1.c2)!=(rt0.c0)), (((rt0.c2)) BETWEEN ((t0.c1)) AND ((rt1.c2))))))) ORDER BY (+ (((t0.c1) NOT BETWEEN (0Xe4eb8bc) AND (rt0.c1)))), '-935618754' DESC, ((rt0.c2 COLLATE NOCASE) BETWEEN ('U1丵.-饰w') AND ((((rt0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, NULL, NULL)) BETWEEN ((load_extension(rt1.c0), 0.7616192783392923, ((t0.c0)IS(t0.c1)))) AND ((CAST(rt0.c0 AS INTEGER), ((rt1.c2)<>(rt0.c0)), (((rt0.c2)) BETWEEN ((t0.c1)) AND ((rt1.c2))))))) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt0 ON CASE ((((rt1.c0)OR(x'4923')))OR(rt1.c1))  WHEN '786409023' THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c1))) ELSE (- ('fX')) END ORDER BY (+ (((t0.c1) NOT BETWEEN (0Xe4eb8bc) AND (rt0.c1)))), '-935618754' DESC, ((rt0.c2 COLLATE NOCASE) BETWEEN ('U1丵.-饰w') AND ((((rt0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))) ASC);
SELECT ALL * FROM rt1, t0 INNER JOIN rt0 ON CASE ((((rt1.c0)OR(x'4923')))OR(rt1.c1))  WHEN '786409023' THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c1))) ELSE (- ('fX')) END WHERE ((((rt1.c1, NULL, NULL)) BETWEEN ((load_extension(rt1.c0), 0.7616192783392923, ((t0.c0)IS(t0.c1)))) AND ((CAST(rt0.c0 AS INTEGER), ((rt1.c2)!=(rt0.c0)), (((rt0.c2)) BETWEEN ((t0.c1)) AND ((rt1.c2))))))) ORDER BY (+ (((t0.c1) NOT BETWEEN (0Xe4eb8bc) AND (rt0.c1)))), '-935618754' DESC, ((rt0.c2 COLLATE NOCASE) BETWEEN ('U1丵.-饰w') AND ((((rt0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, NULL, NULL)) BETWEEN ((load_extension(rt1.c0), 0.7616192783392923, ((t0.c0)IS(t0.c1)))) AND ((CAST(rt0.c0 AS INTEGER), ((rt1.c2)<>(rt0.c0)), (((rt0.c2)) BETWEEN ((t0.c1)) AND ((rt1.c2))))))) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt0 ON CASE ((((rt1.c0)OR(x'4923')))OR(rt1.c1))  WHEN '786409023' THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c1))) ELSE (- ('fX')) END ORDER BY (+ (((t0.c1) NOT BETWEEN (0Xe4eb8bc) AND (rt0.c1)))), '-935618754' DESC, ((rt0.c2 COLLATE NOCASE) BETWEEN ('U1丵.-饰w') AND ((((rt0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))) ASC);
SELECT ALL * FROM rt1, t0 INNER JOIN rt0 ON CASE ((((rt1.c0)OR(x'4923')))OR(rt1.c1))  WHEN '786409023' THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c1))) ELSE (- ('fX')) END WHERE ((((rt1.c1, NULL, NULL)) BETWEEN ((load_extension(rt1.c0), 0.7616192783392923, ((t0.c0)IS(t0.c1)))) AND ((CAST(rt0.c0 AS INTEGER), ((rt1.c2)!=(rt0.c0)), (((rt0.c2)) BETWEEN ((t0.c1)) AND ((rt1.c2))))))) ORDER BY (+ (((t0.c1) NOT BETWEEN (0Xe4eb8bc) AND (rt0.c1)))), '-935618754' DESC, ((rt0.c2 COLLATE NOCASE) BETWEEN ('U1丵.-饰w') AND ((((rt0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))) ASC;
SELECT * FROM t0, rt0 WHERE (UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c1 END)) ORDER BY CAST(COALESCE(t0.c1, t0.c2) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c1 END)) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(COALESCE(t0.c1, t0.c2) AS NUMERIC)  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c1 END)) ORDER BY CAST(COALESCE(t0.c1, t0.c2) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c1 END)) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(COALESCE(t0.c1, t0.c2) AS NUMERIC)  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c1 END)) ORDER BY CAST(COALESCE(t0.c1, t0.c2) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY ((HEX(DISTINCT rt1.c1))/(0.36532560239874967));
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((HEX(DISTINCT rt1.c1))/(0.36532560239874967)));
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY ((HEX(DISTINCT rt1.c1))/(0.36532560239874967));
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((HEX(DISTINCT rt1.c1))/(0.36532560239874967)));
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (t0.c0 COLLATE RTRIM) ORDER BY ((HEX(DISTINCT rt1.c1))/(0.36532560239874967));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((-536716159)>=((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((-536716159)>=((- (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((-536716159)>=((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((-536716159)>=((- (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((-536716159)>=((- (rt1.c2)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c1)))AND(rt0.c2)))AND(((rt0.c0)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN (rt0.c1)))AND(rt0.c2)))AND(((rt0.c0)+(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c1)))AND(rt0.c2)))AND(((rt0.c0)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN (rt0.c1)))AND(rt0.c2)))AND(((rt0.c0)+(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c1)))AND(rt0.c2)))AND(((rt0.c0)+(rt0.c1)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON x'9254' WHERE ((rt1.c2 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE CAST(rt1.c2 AS NUMERIC)  WHEN (rt0.c2 IN ()) THEN CASE WHEN '-2105148928' THEN rt1.c0 ELSE rt1.c2 END ELSE rt1.c0 COLLATE RTRIM END ASC  NULLS LAST, CASE WHEN rt0.c0 THEN ((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ()) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0 NOT INDEXED RIGHT OUTER JOIN rt1 ON x'9254' ORDER BY CASE CAST(rt1.c2 AS NUMERIC)  WHEN (rt0.c2 IN ()) THEN CASE WHEN '-2105148928' THEN rt1.c0 ELSE rt1.c2 END ELSE rt1.c0 COLLATE RTRIM END ASC  NULLS LAST, CASE WHEN rt0.c0 THEN ((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON x'9254' WHERE ((rt1.c2 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE CAST(rt1.c2 AS NUMERIC)  WHEN (rt0.c2 IN ()) THEN CASE WHEN '-2105148928' THEN rt1.c0 ELSE rt1.c2 END ELSE rt1.c0 COLLATE RTRIM END ASC  NULLS LAST, CASE WHEN rt0.c0 THEN ((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ()) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0 NOT INDEXED RIGHT OUTER JOIN rt1 ON x'9254' ORDER BY CASE CAST(rt1.c2 AS NUMERIC)  WHEN (rt0.c2 IN ()) THEN CASE WHEN '-2105148928' THEN rt1.c0 ELSE rt1.c2 END ELSE rt1.c0 COLLATE RTRIM END ASC  NULLS LAST, CASE WHEN rt0.c0 THEN ((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON x'9254' WHERE ((rt1.c2 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE CAST(rt1.c2 AS NUMERIC)  WHEN (rt0.c2 IN ()) THEN CASE WHEN '-2105148928' THEN rt1.c0 ELSE rt1.c2 END ELSE rt1.c0 COLLATE RTRIM END ASC  NULLS LAST, CASE WHEN rt0.c0 THEN ((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((CASE rt1.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt1.c2 WHEN t0.c0 THEN rt0.c1 ELSE rt1.c1 END) NOT NULL) RIGHT OUTER JOIN rt0 ON CASE SUBSTR(rt1.c2, rt1.c1)  WHEN ((((((((t0.c2)AND(rt0.c0)))OR(rt1.c2)))OR(rt0.c2)))OR(t0.c0)) THEN t0.c0 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END END WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN '0.1169567853056086' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END)AND(((rt0.c0)>=(rt1.c1)))))AND(LIKE(t0.c0, t0.c0, 'c')))) ORDER BY 0.8969847519823777  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c0 THEN t0.c0 WHEN '0.1169567853056086' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END)AND(((rt0.c0)>=(rt1.c1)))))AND(LIKE(t0.c0, t0.c0, 'c')))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((CASE rt1.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt1.c2 WHEN t0.c0 THEN rt0.c1 ELSE rt1.c1 END) NOT NULL) RIGHT OUTER JOIN rt0 ON CASE SUBSTR(rt1.c2, rt1.c1)  WHEN ((((((((t0.c2)AND(rt0.c0)))OR(rt1.c2)))OR(rt0.c2)))OR(t0.c0)) THEN t0.c0 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END END ORDER BY 0.8969847519823777  NULLS FIRST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((CASE rt1.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt1.c2 WHEN t0.c0 THEN rt0.c1 ELSE rt1.c1 END) NOT NULL) RIGHT OUTER JOIN rt0 ON CASE SUBSTR(rt1.c2, rt1.c1)  WHEN ((((((((t0.c2)AND(rt0.c0)))OR(rt1.c2)))OR(rt0.c2)))OR(t0.c0)) THEN t0.c0 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END END WHERE (((((CASE WHEN t0.c0 THEN t0.c0 WHEN '0.1169567853056086' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END)AND(((rt0.c0)>=(rt1.c1)))))AND(LIKE(t0.c0, t0.c0, 'c')))) ORDER BY 0.8969847519823777  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c0 THEN t0.c0 WHEN '0.1169567853056086' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END)AND(((rt0.c0)>=(rt1.c1)))))AND(LIKE(t0.c0, t0.c0, 'c')))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((CASE rt1.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN rt1.c2 WHEN t0.c0 THEN rt0.c1 ELSE rt1.c1 END) NOT NULL) RIGHT OUTER JOIN rt0 ON CASE SUBSTR(rt1.c2, rt1.c1)  WHEN ((((((((t0.c2)AND(rt0.c0)))OR(rt1.c2)))OR(rt0.c2)))OR(t0.c0)) THEN t0.c0 COLLATE BINARY ELSE CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END END ORDER BY 0.8969847519823777  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0 NOT INDEXED, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0 NOT INDEXED, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0 NOT INDEXED, rt0 WHERE (x'');
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON CAST(-1.805244432E9 AS NUMERIC) LEFT OUTER JOIN rt0 ON (((t0.c0)LIKE(t0.c0)) IN (((((rt0.c2)AND(t0.c0)))OR(t0.c1)))) WHERE (((t0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON CAST(-1.805244432E9 AS NUMERIC) LEFT OUTER JOIN rt0 ON (((t0.c0)LIKE(t0.c0)) IN (((((rt0.c2)AND(t0.c0)))OR(t0.c1)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON CAST(-1.805244432E9 AS NUMERIC) LEFT OUTER JOIN rt0 ON (((t0.c0)LIKE(t0.c0)) IN (((((rt0.c2)AND(t0.c0)))OR(t0.c1)))) WHERE (((t0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON CAST(-1.805244432E9 AS NUMERIC) LEFT OUTER JOIN rt0 ON (((t0.c0)LIKE(t0.c0)) IN (((((rt0.c2)AND(t0.c0)))OR(t0.c1)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON CAST(-1.805244432E9 AS NUMERIC) LEFT OUTER JOIN rt0 ON (((t0.c0)LIKE(t0.c0)) IN (((((rt0.c2)AND(t0.c0)))OR(t0.c1)))) WHERE (((t0.c0 COLLATE NOCASE) IS FALSE));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (DATE(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)), ((((t0.c2)AND(rt1.c0)))OR(rt1.c1)), t0.c2));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)), ((((t0.c2)AND(rt1.c0)))OR(rt1.c1)), t0.c2)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (DATE(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)), ((((t0.c2)AND(rt1.c0)))OR(rt1.c1)), t0.c2));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)), ((((t0.c2)AND(rt1.c0)))OR(rt1.c1)), t0.c2)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (DATE(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)), ((((t0.c2)AND(rt1.c0)))OR(rt1.c1)), t0.c2));
SELECT * FROM t0 WHERE (CAST(t0.c2 AS REAL)) ORDER BY (((t0.c0, t0.c0, t0.c2)) BETWEEN ((STRFTIME(t0.c1, t0.c2, t0.c2), CAST(t0.c2 AS NUMERIC), t0.c2 COLLATE BINARY)) AND ((0Xffffffff81b6f7d8, ((((t0.c0)AND('')))AND(x'65cd')), (~ (0xfffffffffd99163e))))), (((((t0.c2, t0.c0, t0.c2))<((t0.c0, t0.c2, t0.c2))))*((t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c2)) BETWEEN ((STRFTIME(t0.c1, t0.c2, t0.c2), CAST(t0.c2 AS NUMERIC), t0.c2 COLLATE BINARY)) AND ((0Xffffffff81b6f7d8, ((((t0.c0)AND('')))AND(x'65cd')), (~ (0xfffffffffd99163e))))), (((((t0.c2, t0.c0, t0.c2))<((t0.c0, t0.c2, t0.c2))))*((t0.c2 IN ()))));
SELECT * FROM t0 WHERE (CAST(t0.c2 AS REAL)) ORDER BY (((t0.c0, t0.c0, t0.c2)) BETWEEN ((STRFTIME(t0.c1, t0.c2, t0.c2), CAST(t0.c2 AS NUMERIC), t0.c2 COLLATE BINARY)) AND ((0Xffffffff81b6f7d8, ((((t0.c0)AND('')))AND(x'65cd')), (~ (0xfffffffffd99163e))))), (((((t0.c2, t0.c0, t0.c2))<((t0.c0, t0.c2, t0.c2))))*((t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c2)) BETWEEN ((STRFTIME(t0.c1, t0.c2, t0.c2), CAST(t0.c2 AS NUMERIC), t0.c2 COLLATE BINARY)) AND ((0Xffffffff81b6f7d8, ((((t0.c0)AND('')))AND(x'65cd')), (~ (0xfffffffffd99163e))))), (((((t0.c2, t0.c0, t0.c2))<((t0.c0, t0.c2, t0.c2))))*((t0.c2 IN ()))));
SELECT * FROM t0 WHERE (CAST(t0.c2 AS REAL)) ORDER BY (((t0.c0, t0.c0, t0.c2)) BETWEEN ((STRFTIME(t0.c1, t0.c2, t0.c2), CAST(t0.c2 AS NUMERIC), t0.c2 COLLATE BINARY)) AND ((0Xffffffff81b6f7d8, ((((t0.c0)AND('')))AND(x'65cd')), (~ (0xfffffffffd99163e))))), (((((t0.c2, t0.c0, t0.c2))<((t0.c0, t0.c2, t0.c2))))*((t0.c2 IN ())));
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((((rt1.c1)%(rt0.c1))) NOTNULL) WHERE (CAST((((rt1.c1))>((rt1.c2))) AS REAL)) ORDER BY 0Xffffffff8cbae0a5 ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1))>((rt1.c2))) AS REAL)) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((((rt1.c1)%(rt0.c1))) NOTNULL) ORDER BY 0xffffffff8cbae0a5 ASC);
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((((rt1.c1)%(rt0.c1))) NOTNULL) WHERE (CAST((((rt1.c1))>((rt1.c2))) AS REAL)) ORDER BY 0Xffffffff8cbae0a5 ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1))>((rt1.c2))) AS REAL)) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((((rt1.c1)%(rt0.c1))) NOTNULL) ORDER BY 0xffffffff8cbae0a5 ASC);
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((((rt1.c1)%(rt0.c1))) NOTNULL) WHERE (CAST((((rt1.c1))>((rt1.c2))) AS REAL)) ORDER BY 0Xffffffff8cbae0a5 ASC;
SELECT * FROM rt0 WHERE (QUOTE(0.6468088629672797));
SELECT SUM(count) FROM (SELECT ((QUOTE(0.6468088629672797)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (QUOTE(0.6468088629672797));
SELECT SUM(count) FROM (SELECT ((QUOTE(0.6468088629672797)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (QUOTE(0.6468088629672797));
SELECT * FROM rt1 FULL OUTER JOIN t0 ON (((rt1.c0 IN ())) BETWEEN (NULL) AND (((t0.c2)||(rt1.c0)))) WHERE (TRIM((t0.c2 IN ()), ((rt1.c1) BETWEEN (t0.c1) AND ('-316932796'))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((t0.c2 IN ()), ((rt1.c1) BETWEEN (t0.c1) AND ('-316932796')))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON (((rt1.c0 IN ())) BETWEEN (NULL) AND (((t0.c2)||(rt1.c0)))));
SELECT * FROM rt1 FULL OUTER JOIN t0 ON (((rt1.c0 IN ())) BETWEEN (NULL) AND (((t0.c2)||(rt1.c0)))) WHERE (TRIM((t0.c2 IN ()), ((rt1.c1) BETWEEN (t0.c1) AND ('-316932796'))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((t0.c2 IN ()), ((rt1.c1) BETWEEN (t0.c1) AND ('-316932796')))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON (((rt1.c0 IN ())) BETWEEN (NULL) AND (((t0.c2)||(rt1.c0)))));
SELECT * FROM rt1 FULL OUTER JOIN t0 ON (((rt1.c0 IN ())) BETWEEN (NULL) AND (((t0.c2)||(rt1.c0)))) WHERE (TRIM((t0.c2 IN ()), ((rt1.c1) BETWEEN (t0.c1) AND ('-316932796'))));
SELECT * FROM t0, rt0, rt1 WHERE ((NOT ((('99530231') NOT BETWEEN (t0.c0) AND (x'ce28')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((('99530231') NOT BETWEEN (t0.c0) AND (x'ce28'))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE ((NOT ((('99530231') NOT BETWEEN (t0.c0) AND (x'ce28')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((('99530231') NOT BETWEEN (t0.c0) AND (x'ce28'))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE ((NOT ((('99530231') NOT BETWEEN (t0.c0) AND (x'ce28')))));
SELECT * FROM t0, rt1, rt0 WHERE (((((rt0.c2)<<(rt0.c1)))IS(CAST(rt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(rt0.c1)))IS(CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (((((rt0.c2)<<(rt0.c1)))IS(CAST(rt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(rt0.c1)))IS(CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (((((rt0.c2)<<(rt0.c1)))IS(CAST(rt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (NULL) ORDER BY (((rt0.c0) ISNULL) IN (CASE WHEN rt1.c1 THEN rt1.c1 WHEN 0Xffffffffc4e24f76 THEN 0x2f99dce6 WHEN rt0.c1 THEN rt0.c2 END)) DESC, (- (rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c0) ISNULL) IN (CASE WHEN rt1.c1 THEN rt1.c1 WHEN 0xffffffffc4e24f76 THEN 0x2f99dce6 WHEN rt0.c1 THEN rt0.c2 END)) DESC, (- (rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (NULL) ORDER BY (((rt0.c0) ISNULL) IN (CASE WHEN rt1.c1 THEN rt1.c1 WHEN 0Xffffffffc4e24f76 THEN 0x2f99dce6 WHEN rt0.c1 THEN rt0.c2 END)) DESC, (- (rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c0) ISNULL) IN (CASE WHEN rt1.c1 THEN rt1.c1 WHEN 0xffffffffc4e24f76 THEN 0x2f99dce6 WHEN rt0.c1 THEN rt0.c2 END)) DESC, (- (rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (NULL) ORDER BY (((rt0.c0) ISNULL) IN (CASE WHEN rt1.c1 THEN rt1.c1 WHEN 0Xffffffffc4e24f76 THEN 0x2f99dce6 WHEN rt0.c1 THEN rt0.c2 END)) DESC, (- (rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (STRFTIME((NOT (t0.c1)), (- (t0.c0)), ((t0.c0)>>(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((NOT (t0.c1)), (- (t0.c0)), ((t0.c0)>>(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (STRFTIME((NOT (t0.c1)), (- (t0.c0)), ((t0.c0)>>(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((NOT (t0.c1)), (- (t0.c0)), ((t0.c0)>>(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (STRFTIME((NOT (t0.c1)), (- (t0.c0)), ((t0.c0)>>(t0.c1))));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((t0.c1)+(rt1.c2))) BETWEEN (rt1.c1 COLLATE NOCASE) AND (CASE WHEN rt0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)+(rt1.c2))) BETWEEN (rt1.c1 COLLATE NOCASE) AND (CASE WHEN rt0.c0 THEN NULL END))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((t0.c1)+(rt1.c2))) BETWEEN (rt1.c1 COLLATE NOCASE) AND (CASE WHEN rt0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)+(rt1.c2))) BETWEEN (rt1.c1 COLLATE NOCASE) AND (CASE WHEN rt0.c0 THEN NULL END))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((t0.c1)+(rt1.c2))) BETWEEN (rt1.c1 COLLATE NOCASE) AND (CASE WHEN rt0.c0 THEN NULL END)));
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((NOT ((rt1.c1 IN (rt0.c2))))) ORDER BY rt0.c0  NULLS LAST, (NULLIF(rt0.c0, rt0.c0) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt1.c1 IN (rt0.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c0  NULLS LAST, (NULLIF(rt0.c0, rt0.c0) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((NOT ((rt1.c1 IN (rt0.c2))))) ORDER BY rt0.c0  NULLS LAST, (NULLIF(rt0.c0, rt0.c0) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt1.c1 IN (rt0.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c0  NULLS LAST, (NULLIF(rt0.c0, rt0.c0) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((NOT ((rt1.c1 IN (rt0.c2))))) ORDER BY rt0.c0  NULLS LAST, (NULLIF(rt0.c0, rt0.c0) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 INDEXED BY i12, rt1 WHERE (((((((((((t0.c2)<(t0.c2)))OR((('i㑐') NOT NULL))))AND(t0.c0)))OR(((((t0.c1)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c2))))) ORDER BY ((((t0.c0)/(rt0.c0)))LIKE((((t0.c2))==((rt0.c0))))) ASC  NULLS FIRST, (((((rt0.c1)) NOT BETWEEN ((0X43eddc1d)) AND ((rt1.c2)))) IS TRUE)  NULLS FIRST, (NOT (CASE t0.c1  WHEN t0.c2 THEN t0.c2 ELSE x'5c16' END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)<(t0.c2)))OR((('i㑐') NOT NULL))))AND(t0.c0)))OR(((((t0.c1)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i12, rt1 ORDER BY ((((t0.c0)/(rt0.c0)))LIKE((((t0.c2))==((rt0.c0))))) ASC  NULLS FIRST, (((((rt0.c1)) NOT BETWEEN ((0x43eddc1d)) AND ((rt1.c2)))) IS TRUE)  NULLS FIRST, (NOT (CASE t0.c1  WHEN t0.c2 THEN t0.c2 ELSE x'5c16' END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 INDEXED BY i12, rt1 WHERE (((((((((((t0.c2)<(t0.c2)))OR((('i㑐') NOT NULL))))AND(t0.c0)))OR(((((t0.c1)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c2))))) ORDER BY ((((t0.c0)/(rt0.c0)))LIKE((((t0.c2))==((rt0.c0))))) ASC  NULLS FIRST, (((((rt0.c1)) NOT BETWEEN ((0X43eddc1d)) AND ((rt1.c2)))) IS TRUE)  NULLS FIRST, (NOT (CASE t0.c1  WHEN t0.c2 THEN t0.c2 ELSE x'5c16' END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)<(t0.c2)))OR((('i㑐') NOT NULL))))AND(t0.c0)))OR(((((t0.c1)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i12, rt1 ORDER BY ((((t0.c0)/(rt0.c0)))LIKE((((t0.c2))==((rt0.c0))))) ASC  NULLS FIRST, (((((rt0.c1)) NOT BETWEEN ((0x43eddc1d)) AND ((rt1.c2)))) IS TRUE)  NULLS FIRST, (NOT (CASE t0.c1  WHEN t0.c2 THEN t0.c2 ELSE x'5c16' END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN rt1 ON SQLITE_COMPILEOPTION_USED(((t0.c2)=(rt1.c0))) WHERE (CASE ((rt0.c1) IS FALSE)  WHEN ((t0.c1)<>(rt0.c2)) THEN ((((t0.c1)OR(rt1.c1)))OR(rt1.c2)) ELSE ((((rt0.c1)OR(t0.c0)))AND(rt0.c1)) END) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) IS FALSE)  WHEN ((t0.c1)!=(rt0.c2)) THEN ((((t0.c1)OR(rt1.c1)))OR(rt1.c2)) ELSE ((((rt0.c1)OR(t0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt1 ON SQLITE_COMPILEOPTION_USED(((t0.c2)==(rt1.c0))) ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN rt1 ON SQLITE_COMPILEOPTION_USED(((t0.c2)=(rt1.c0))) WHERE (CASE ((rt0.c1) IS FALSE)  WHEN ((t0.c1)<>(rt0.c2)) THEN ((((t0.c1)OR(rt1.c1)))OR(rt1.c2)) ELSE ((((rt0.c1)OR(t0.c0)))AND(rt0.c1)) END) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) IS FALSE)  WHEN ((t0.c1)!=(rt0.c2)) THEN ((((t0.c1)OR(rt1.c1)))OR(rt1.c2)) ELSE ((((rt0.c1)OR(t0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt1 ON SQLITE_COMPILEOPTION_USED(((t0.c2)==(rt1.c0))) ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN rt1 ON SQLITE_COMPILEOPTION_USED(((t0.c2)=(rt1.c0))) WHERE (CASE ((rt0.c1) IS FALSE)  WHEN ((t0.c1)<>(rt0.c2)) THEN ((((t0.c1)OR(rt1.c1)))OR(rt1.c2)) ELSE ((((rt0.c1)OR(t0.c0)))AND(rt0.c1)) END) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c1, t0.c1)))&(CAST(t0.c1 AS TEXT)))) ORDER BY ((t0.c2 IN ()) IN ((t0.c2 IN (x'a797')))), (((('s?Lkb⿦/')OR(t0.c2 COLLATE NOCASE)))OR((t0.c0 IN ())))  NULLS LAST, ((NULL) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (t0.c1, t0.c1)))&(CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 IN ()) IN ((t0.c2 IN (x'a797')))), (((('s?Lkb⿦/')OR(t0.c2 COLLATE NOCASE)))OR((t0.c0 IN ())))  NULLS LAST, ((NULL) ISNULL) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c1, t0.c1)))&(CAST(t0.c1 AS TEXT)))) ORDER BY ((t0.c2 IN ()) IN ((t0.c2 IN (x'a797')))), (((('s?Lkb⿦/')OR(t0.c2 COLLATE NOCASE)))OR((t0.c0 IN ())))  NULLS LAST, ((NULL) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (t0.c1, t0.c1)))&(CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 IN ()) IN ((t0.c2 IN (x'a797')))), (((('s?Lkb⿦/')OR(t0.c2 COLLATE NOCASE)))OR((t0.c0 IN ())))  NULLS LAST, ((NULL) ISNULL) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c1, t0.c1)))&(CAST(t0.c1 AS TEXT)))) ORDER BY ((t0.c2 IN ()) IN ((t0.c2 IN (x'a797')))), (((('s?Lkb⿦/')OR(t0.c2 COLLATE NOCASE)))OR((t0.c0 IN ())))  NULLS LAST, ((NULL) ISNULL) ASC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((COALESCE(DISTINCT rt1.c1, rt0.c1)) BETWEEN (((rt0.c0)OR(rt0.c2))) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT rt1.c1, rt0.c1)) BETWEEN (((rt0.c0)OR(rt0.c2))) AND (rt1.c2))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((COALESCE(DISTINCT rt1.c1, rt0.c1)) BETWEEN (((rt0.c0)OR(rt0.c2))) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT rt1.c1, rt0.c1)) BETWEEN (((rt0.c0)OR(rt0.c2))) AND (rt1.c2))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((COALESCE(DISTINCT rt1.c1, rt0.c1)) BETWEEN (((rt0.c0)OR(rt0.c2))) AND (rt1.c2)));
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (0.48083549832426853);
SELECT SUM(count) FROM (SELECT ALL ((0.48083549832426853) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (0.48083549832426853);
SELECT SUM(count) FROM (SELECT ALL ((0.48083549832426853) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (0.48083549832426853);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN 0.8610907694817913 THEN 0.3936207369182364 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.8610907694817913 THEN 0.3936207369182364 END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN 0.8610907694817913 THEN 0.3936207369182364 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.8610907694817913 THEN 0.3936207369182364 END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN 0.8610907694817913 THEN 0.3936207369182364 END);
SELECT ALL * FROM rt1, t0, rt0 WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY ((((t0.c1) IS FALSE)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (0.20430490939138912));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((t0.c1) IS FALSE)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (0.20430490939138912)));
SELECT ALL * FROM rt1, t0, rt0 WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY ((((t0.c1) IS FALSE)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (0.20430490939138912));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((t0.c1) IS FALSE)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (0.20430490939138912)));
SELECT ALL * FROM rt1, t0, rt0 WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY ((((t0.c1) IS FALSE)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (0.20430490939138912));
SELECT * FROM t0 INDEXED BY i12 WHERE (((((t0.c0) ISNULL))OR(-4.91198807E8))) ORDER BY '-933961501'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))OR(-4.91198807E8))) IS TRUE)  as count FROM t0 INDEXED BY i12 ORDER BY '-933961501'  NULLS FIRST);
SELECT * FROM t0 INDEXED BY i12 WHERE (((((t0.c0) ISNULL))OR(-4.91198807E8))) ORDER BY '-933961501'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))OR(-4.91198807E8))) IS TRUE)  as count FROM t0 INDEXED BY i12 ORDER BY '-933961501'  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (CASE CASE rt1.c0  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c1 END  WHEN ((rt0.c1)<=(rt1.c2)) THEN CAST(rt1.c2 AS INTEGER) ELSE ((rt1.c0)*(rt0.c0)) END) ORDER BY ((((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))OR(rt1.c1 COLLATE RTRIM)) DESC  NULLS FIRST, rt0.c1 ASC, CAST(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt1.c0  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c1 END  WHEN ((rt0.c1)<=(rt1.c2)) THEN CAST(rt1.c2 AS INTEGER) ELSE ((rt1.c0)*(rt0.c0)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))OR(rt1.c1 COLLATE RTRIM)) DESC  NULLS FIRST, rt0.c1 ASC, CAST(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 END AS BLOB) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (CASE CASE rt1.c0  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c1 END  WHEN ((rt0.c1)<=(rt1.c2)) THEN CAST(rt1.c2 AS INTEGER) ELSE ((rt1.c0)*(rt0.c0)) END) ORDER BY ((((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))OR(rt1.c1 COLLATE RTRIM)) DESC  NULLS FIRST, rt0.c1 ASC, CAST(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt1.c0  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c1 END  WHEN ((rt0.c1)<=(rt1.c2)) THEN CAST(rt1.c2 AS INTEGER) ELSE ((rt1.c0)*(rt0.c0)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))OR(rt1.c1 COLLATE RTRIM)) DESC  NULLS FIRST, rt0.c1 ASC, CAST(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 END AS BLOB) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (CASE CASE rt1.c0  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c1 END  WHEN ((rt0.c1)<=(rt1.c2)) THEN CAST(rt1.c2 AS INTEGER) ELSE ((rt1.c0)*(rt0.c0)) END) ORDER BY ((((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))OR(rt1.c1 COLLATE RTRIM)) DESC  NULLS FIRST, rt0.c1 ASC, CAST(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 END AS BLOB) ASC;
SELECT ALL * FROM rt1 WHERE ('-199892476') ORDER BY HEX((~ (rt1.c0))) ASC, (((((rt1.c1))>=((rt1.c1)))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))) AND (((rt1.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (('-199892476') IS TRUE)  as count FROM rt1 ORDER BY HEX((~ (rt1.c0))) ASC, (((((rt1.c1))>=((rt1.c1)))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))) AND (((rt1.c1) IS FALSE))));
SELECT ALL * FROM rt1 WHERE ('-199892476') ORDER BY HEX((~ (rt1.c0))) ASC, (((((rt1.c1))>=((rt1.c1)))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))) AND (((rt1.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (('-199892476') IS TRUE)  as count FROM rt1 ORDER BY HEX((~ (rt1.c0))) ASC, (((((rt1.c1))>=((rt1.c1)))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))) AND (((rt1.c1) IS FALSE))));
SELECT ALL * FROM rt1 WHERE ('-199892476') ORDER BY HEX((~ (rt1.c0))) ASC, (((((rt1.c1))>=((rt1.c1)))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))) AND (((rt1.c1) IS FALSE)));
SELECT * FROM rt0, t0 WHERE (((t0.c1)>>(t0.c2)) COLLATE BINARY) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ((((t0.c1)>>(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c1);
SELECT * FROM rt0, t0 WHERE (((t0.c1)>>(t0.c2)) COLLATE BINARY) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ((((t0.c1)>>(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c1);
SELECT * FROM rt0, t0 WHERE (((t0.c1)>>(t0.c2)) COLLATE BINARY) ORDER BY t0.c1;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (CAST(((t0.c0)|(t0.c1)) AS TEXT)) ORDER BY ((((((0.34367266446354783)AND(rt0.c2)))OR(t0.c1)))-(((t0.c1)IS NOT(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)|(t0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((((0.34367266446354783)AND(rt0.c2)))OR(t0.c1)))-(((t0.c1)IS NOT(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (CAST(((t0.c0)|(t0.c1)) AS TEXT)) ORDER BY ((((((0.34367266446354783)AND(rt0.c2)))OR(t0.c1)))-(((t0.c1)IS NOT(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)|(t0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((((0.34367266446354783)AND(rt0.c2)))OR(t0.c1)))-(((t0.c1)IS NOT(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (CAST(((t0.c0)|(t0.c1)) AS TEXT)) ORDER BY ((((((0.34367266446354783)AND(rt0.c2)))OR(t0.c1)))-(((t0.c1)IS NOT(rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c1))>((rt0.c0))) IN (load_extension(rt1.c1, rt0.c1), ((rt1.c0)IS NOT(rt0.c0))))) ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c2 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1))>((rt0.c0))) IN (load_extension(rt1.c1, rt0.c1), ((rt1.c0)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c2 END AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c1))>((rt0.c0))) IN (load_extension(rt1.c1, rt0.c1), ((rt1.c0)IS NOT(rt0.c0))))) ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c2 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1))>((rt0.c0))) IN (load_extension(rt1.c1, rt0.c1), ((rt1.c0)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c2 END AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (json_remove(NULL, 0.4525195761734494));
SELECT SUM(count) FROM (SELECT ((json_remove(NULL, 0.4525195761734494)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (json_remove(NULL, 0.4525195761734494));
SELECT SUM(count) FROM (SELECT ((json_remove(NULL, 0.4525195761734494)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (json_remove(NULL, 0.4525195761734494));
SELECT * FROM t0, rt1, rt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c0)))AND(rt0.c1)))OR(rt0.c2)) IN ()) WHERE ((((rt0.c0) NOTNULL) IN ())) ORDER BY (~ (((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt1.c1)))) DESC, '';
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c0)))AND(rt0.c1)))OR(rt0.c2)) IN ()) ORDER BY (~ (((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt1.c1)))) DESC, '');
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c0)))AND(rt0.c1)))OR(rt0.c2)) IN ()) WHERE ((((rt0.c0) NOTNULL) IN ())) ORDER BY (~ (((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt1.c1)))) DESC, '';
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c0)))AND(rt0.c1)))OR(rt0.c2)) IN ()) ORDER BY (~ (((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt1.c1)))) DESC, '');
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c0)))AND(rt0.c1)))OR(rt0.c2)) IN ()) WHERE ((((rt0.c0) NOTNULL) IN ())) ORDER BY (~ (((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt1.c1)))) DESC, '';
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((~ (rt0.c2)) IN ()) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c0) IS FALSE) THEN ((((((((rt0.c1)OR(t0.c0)))OR(rt1.c1)))OR(rt0.c0)))OR(0xc53342c)) WHEN rt0.c2 THEN CASE WHEN t0.c1 THEN x'' END WHEN DATE(t0.c2, rt1.c1, x'b566', rt0.c2, t0.c1, rt0.c0, rt1.c0) THEN ((t0.c2)%(rt0.c2)) ELSE (((t0.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c2))) END WHERE ((NOT (CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((~ (rt0.c2)) IN ()) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c0) IS FALSE) THEN ((((((((rt0.c1)OR(t0.c0)))OR(rt1.c1)))OR(rt0.c0)))OR(0Xc53342c)) WHEN rt0.c2 THEN CASE WHEN t0.c1 THEN x'' END WHEN DATE(t0.c2, rt1.c1, x'b566', rt0.c2, t0.c1, rt0.c0, rt1.c0) THEN ((t0.c2)%(rt0.c2)) ELSE (((t0.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c2))) END);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((~ (rt0.c2)) IN ()) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c0) IS FALSE) THEN ((((((((rt0.c1)OR(t0.c0)))OR(rt1.c1)))OR(rt0.c0)))OR(0xc53342c)) WHEN rt0.c2 THEN CASE WHEN t0.c1 THEN x'' END WHEN DATE(t0.c2, rt1.c1, x'b566', rt0.c2, t0.c1, rt0.c0, rt1.c0) THEN ((t0.c2)%(rt0.c2)) ELSE (((t0.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c2))) END WHERE ((NOT (CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((~ (rt0.c2)) IN ()) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c0) IS FALSE) THEN ((((((((rt0.c1)OR(t0.c0)))OR(rt1.c1)))OR(rt0.c0)))OR(0Xc53342c)) WHEN rt0.c2 THEN CASE WHEN t0.c1 THEN x'' END WHEN DATE(t0.c2, rt1.c1, x'b566', rt0.c2, t0.c1, rt0.c0, rt1.c0) THEN ((t0.c2)%(rt0.c2)) ELSE (((t0.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c2))) END);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((~ (rt0.c2)) IN ()) LEFT OUTER JOIN rt1 ON CASE WHEN ((t0.c0) IS FALSE) THEN ((((((((rt0.c1)OR(t0.c0)))OR(rt1.c1)))OR(rt0.c0)))OR(0xc53342c)) WHEN rt0.c2 THEN CASE WHEN t0.c1 THEN x'' END WHEN DATE(t0.c2, rt1.c1, x'b566', rt0.c2, t0.c1, rt0.c0, rt1.c0) THEN ((t0.c2)%(rt0.c2)) ELSE (((t0.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c2))) END WHERE ((NOT (CAST(rt0.c2 AS REAL))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON t0.c0 CROSS JOIN t0 ON (- (NULL)) WHERE (CAST('-1987837112' AS REAL)) ORDER BY (((+ (rt1.c0))) NOT BETWEEN ((((NULL))>((rt1.c1)))) AND (HEX(t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1987837112' AS REAL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON t0.c0 CROSS JOIN t0 ON (- (NULL)) ORDER BY (((+ (rt1.c0))) NOT BETWEEN ((((NULL))>((rt1.c1)))) AND (HEX(t0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON t0.c0 CROSS JOIN t0 ON (- (NULL)) WHERE (CAST('-1987837112' AS REAL)) ORDER BY (((+ (rt1.c0))) NOT BETWEEN ((((NULL))>((rt1.c1)))) AND (HEX(t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1987837112' AS REAL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON t0.c0 CROSS JOIN t0 ON (- (NULL)) ORDER BY (((+ (rt1.c0))) NOT BETWEEN ((((NULL))>((rt1.c1)))) AND (HEX(t0.c0))) ASC  NULLS FIRST);
SELECT * FROM t0, rt1 WHERE (((((rt1.c2)%(0.46662188953564654)))>(CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)%(0.46662188953564654)))>(CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((rt1.c2)%(0.46662188953564654)))>(CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)%(0.46662188953564654)))>(CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((rt1.c2)%(0.46662188953564654)))>(CAST(rt1.c0 AS REAL))));
SELECT ALL * FROM rt1, rt0 CROSS JOIN t0 ON ((rt0.c1) ISNULL) COLLATE BINARY WHERE (CASE NULL  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN rt1.c2 WHEN t0.c2 THEN rt1.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN rt1.c2 WHEN t0.c2 THEN rt1.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON ((rt0.c1) ISNULL) COLLATE BINARY);
SELECT ALL * FROM rt1, rt0 CROSS JOIN t0 ON ((rt0.c1) ISNULL) COLLATE BINARY WHERE (CASE NULL  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN rt1.c2 WHEN t0.c2 THEN rt1.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN rt1.c2 WHEN t0.c2 THEN rt1.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON ((rt0.c1) ISNULL) COLLATE BINARY);
SELECT ALL * FROM rt1, rt0 CROSS JOIN t0 ON ((rt0.c1) ISNULL) COLLATE BINARY WHERE (CASE NULL  WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN rt1.c2 WHEN t0.c2 THEN rt1.c2 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((- (CASE WHEN t0.c2 THEN rt1.c1 END))) ORDER BY '1031090501'  NULLS FIRST, ((((0.6839003051387622)GLOB(rt0.c2))) ISNULL) DESC, (((((((((((rt0.c2)OR(rt1.c0)))AND(t0.c1)))OR(rt1.c0)))OR(t0.c2)), (((('')OR(t0.c2)))OR(rt1.c1)), (((NULL)) BETWEEN ((rt0.c0)) AND ((t0.c1)))))<(((rt0.c2 IN ()), SQLITE_COMPILEOPTION_USED(rt0.c1), t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t0.c2 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY '1031090501'  NULLS FIRST, ((((0.6839003051387622)GLOB(rt0.c2))) ISNULL) DESC, (((((((((((rt0.c2)OR(rt1.c0)))AND(t0.c1)))OR(rt1.c0)))OR(t0.c2)), (((('')OR(t0.c2)))OR(rt1.c1)), (((NULL)) BETWEEN ((rt0.c0)) AND ((t0.c1)))))<(((rt0.c2 IN ()), SQLITE_COMPILEOPTION_USED(rt0.c1), t0.c0))) ASC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((- (CASE WHEN t0.c2 THEN rt1.c1 END))) ORDER BY '1031090501'  NULLS FIRST, ((((0.6839003051387622)GLOB(rt0.c2))) ISNULL) DESC, (((((((((((rt0.c2)OR(rt1.c0)))AND(t0.c1)))OR(rt1.c0)))OR(t0.c2)), (((('')OR(t0.c2)))OR(rt1.c1)), (((NULL)) BETWEEN ((rt0.c0)) AND ((t0.c1)))))<(((rt0.c2 IN ()), SQLITE_COMPILEOPTION_USED(rt0.c1), t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t0.c2 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY '1031090501'  NULLS FIRST, ((((0.6839003051387622)GLOB(rt0.c2))) ISNULL) DESC, (((((((((((rt0.c2)OR(rt1.c0)))AND(t0.c1)))OR(rt1.c0)))OR(t0.c2)), (((('')OR(t0.c2)))OR(rt1.c1)), (((NULL)) BETWEEN ((rt0.c0)) AND ((t0.c1)))))<(((rt0.c2 IN ()), SQLITE_COMPILEOPTION_USED(rt0.c1), t0.c0))) ASC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((- (CASE WHEN t0.c2 THEN rt1.c1 END))) ORDER BY '1031090501'  NULLS FIRST, ((((0.6839003051387622)GLOB(rt0.c2))) ISNULL) DESC, (((((((((((rt0.c2)OR(rt1.c0)))AND(t0.c1)))OR(rt1.c0)))OR(t0.c2)), (((('')OR(t0.c2)))OR(rt1.c1)), (((NULL)) BETWEEN ((rt0.c0)) AND ((t0.c1)))))<(((rt0.c2 IN ()), SQLITE_COMPILEOPTION_USED(rt0.c1), t0.c0))) ASC;
SELECT * FROM rt1 WHERE ((((((rt1.c0)) BETWEEN ((x'ab03')) AND ((rt1.c0))))IS NOT(((((rt1.c1)OR(rt1.c2)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) BETWEEN ((x'ab03')) AND ((rt1.c0))))IS NOT(((((rt1.c1)OR(rt1.c2)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c0)) BETWEEN ((x'ab03')) AND ((rt1.c0))))IS NOT(((((rt1.c1)OR(rt1.c2)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) BETWEEN ((x'ab03')) AND ((rt1.c0))))IS NOT(((((rt1.c1)OR(rt1.c2)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c0)) BETWEEN ((x'ab03')) AND ((rt1.c0))))IS NOT(((((rt1.c1)OR(rt1.c2)))OR(rt1.c0)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS FALSE)) IS TRUE)) ORDER BY (NOT ((rt0.c0 IN ()))) ASC  NULLS LAST, LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((rt0.c0 IN ()))) ASC  NULLS LAST, LAST_INSERT_ROWID());
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS FALSE)) IS TRUE)) ORDER BY (NOT ((rt0.c0 IN ()))) ASC  NULLS LAST, LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((rt0.c0 IN ()))) ASC  NULLS LAST, LAST_INSERT_ROWID());
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS FALSE)) IS TRUE)) ORDER BY (NOT ((rt0.c0 IN ()))) ASC  NULLS LAST, LAST_INSERT_ROWID();
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (((((t0.c2)AND(rt1.c1)))AND(t0.c2)) IN ()) WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((((t0.c2)AND(rt1.c1)))AND(t0.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (((((t0.c2)AND(rt1.c1)))AND(t0.c2)) IN ()) WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((((t0.c2)AND(rt1.c1)))AND(t0.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (((((t0.c2)AND(rt1.c1)))AND(t0.c2)) IN ()) WHERE (t0.c1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM)==((('665287667')>>(rt1.c1))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (0xffffffffabc9e031))) AND ((+ (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM)==((('665287667')>>(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (0xffffffffabc9e031))) AND ((+ (rt1.c0))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM)==((('665287667')>>(rt1.c1))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (0xffffffffabc9e031))) AND ((+ (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM)==((('665287667')>>(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (0xffffffffabc9e031))) AND ((+ (rt1.c0))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM)==((('665287667')>>(rt1.c1))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (0xffffffffabc9e031))) AND ((+ (rt1.c0))))  NULLS LAST;
SELECT ALL * FROM rt0, t0, rt1 WHERE ((NOT (CASE WHEN t0.c1 THEN rt1.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t0.c1 THEN rt1.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((NOT (CASE WHEN t0.c1 THEN rt1.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t0.c1 THEN rt1.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((NOT (CASE WHEN t0.c1 THEN rt1.c1 ELSE rt0.c2 END)));
SELECT * FROM rt1 WHERE (NULL) ORDER BY CASE WHEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END THEN rt1.c0 ELSE ((rt1.c2) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END THEN rt1.c0 ELSE ((rt1.c2) NOT NULL) END);
SELECT * FROM rt1 WHERE (NULL) ORDER BY CASE WHEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END THEN rt1.c0 ELSE ((rt1.c2) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END THEN rt1.c0 ELSE ((rt1.c2) NOT NULL) END);
SELECT * FROM rt1 WHERE (NULL) ORDER BY CASE WHEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END THEN rt1.c0 ELSE ((rt1.c2) NOT NULL) END;
SELECT * FROM rt1, rt0, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE ('');
SELECT COUNT(*) FROM rt1 WHERE (json_array_length('409989715'));
SELECT SUM(count) FROM (SELECT ((json_array_length('409989715')) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (json_array_length('409989715'));
SELECT SUM(count) FROM (SELECT ((json_array_length('409989715')) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (json_array_length('409989715'));
SELECT * FROM rt0, rt1, t0 WHERE (((rt1.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c2)/(rt0.c1))) AND ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c2)/(rt0.c1))) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((rt1.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c2)/(rt0.c1))) AND ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c2)/(rt0.c1))) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((rt1.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c2)/(rt0.c1))) AND ((+ (rt0.c1)))));
SELECT * FROM t0, rt0 WHERE (t0.c0) ORDER BY CAST(LOWER(DISTINCT rt0.c0) AS TEXT), 0.8610907694817913 ASC, (((rt0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))) AND ((t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(LOWER(DISTINCT rt0.c0) AS TEXT), 0.8610907694817913 ASC, (((rt0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))) AND ((t0.c2))) DESC);
SELECT * FROM t0, rt0 WHERE (t0.c0) ORDER BY CAST(LOWER(DISTINCT rt0.c0) AS TEXT), 0.8610907694817913 ASC, (((rt0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))) AND ((t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(LOWER(DISTINCT rt0.c0) AS TEXT), 0.8610907694817913 ASC, (((rt0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))) AND ((t0.c2))) DESC);
SELECT * FROM t0, rt0 WHERE (t0.c0) ORDER BY CAST(LOWER(DISTINCT rt0.c0) AS TEXT), 0.8610907694817913 ASC, (((rt0.c0)) NOT BETWEEN ((((((((((t0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))) AND ((t0.c2))) DESC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(-9.94892202E8 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(-9.94892202E8 AS INTEGER)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(-9.94892202E8 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(-9.94892202E8 AS INTEGER)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(-9.94892202E8 AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((((((((((t0.c2)AND(rt1.c1)))AND(NULL)))OR(0.009809972274884893)))AND(rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(t0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)AND(rt1.c1)))AND(NULL)))OR(0.009809972274884893)))AND(rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((((((((((t0.c2)AND(rt1.c1)))AND(NULL)))OR(0.009809972274884893)))AND(rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(t0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)AND(rt1.c1)))AND(NULL)))OR(0.009809972274884893)))AND(rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((((((((((t0.c2)AND(rt1.c1)))AND(NULL)))OR(0.009809972274884893)))AND(rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(t0.c1 AS TEXT))));
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)>=(IFNULL(rt1.c0, rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)>=(IFNULL(rt1.c0, rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)>=(IFNULL(rt1.c0, rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)>=(IFNULL(rt1.c0, rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)>=(IFNULL(rt1.c0, rt1.c2))));
SELECT ALL * FROM rt0, t0 WHERE ((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(t0.c0)))OR(rt0.c0))))>((CAST(rt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(t0.c0)))OR(rt0.c0))))>((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(t0.c0)))OR(rt0.c0))))>((CAST(rt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(t0.c0)))OR(rt0.c0))))>((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(t0.c0)))OR(rt0.c0))))>((CAST(rt0.c1 AS TEXT)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((0Xfffffffff08dc702) NOT NULL)) NOT NULL) LEFT OUTER JOIN rt1 ON (((t0.c2) BETWEEN (rt1.c1) AND (t0.c0)) IN ()) WHERE ((((rt1.c1 COLLATE RTRIM, ((rt0.c0)AND(rt0.c1)), ((t0.c2)+(rt1.c0))))<=((CAST(rt1.c0 AS TEXT), '', CAST(x'' AS NUMERIC))))) ORDER BY CAST(((rt1.c2)OR(rt1.c0)) AS TEXT)  NULLS LAST, ((((((((((rt0.c1)AND(0.24010217571801418)))OR(rt0.c0)))AND(rt0.c1)))OR(rt1.c1)))>(((rt0.c0) NOT BETWEEN (0.39189788657673674) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 COLLATE RTRIM, ((rt0.c0)AND(rt0.c1)), ((t0.c2)+(rt1.c0))))<=((CAST(rt1.c0 AS TEXT), '', CAST(x'' AS NUMERIC))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((0xfffffffff08dc702) NOT NULL)) NOT NULL) LEFT OUTER JOIN rt1 ON (((t0.c2) BETWEEN (rt1.c1) AND (t0.c0)) IN ()) ORDER BY CAST(((rt1.c2)OR(rt1.c0)) AS TEXT)  NULLS LAST, ((((((((((rt0.c1)AND(0.24010217571801418)))OR(rt0.c0)))AND(rt0.c1)))OR(rt1.c1)))>(((rt0.c0) NOT BETWEEN (0.39189788657673674) AND (t0.c0)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((0Xfffffffff08dc702) NOT NULL)) NOT NULL) LEFT OUTER JOIN rt1 ON (((t0.c2) BETWEEN (rt1.c1) AND (t0.c0)) IN ()) WHERE ((((rt1.c1 COLLATE RTRIM, ((rt0.c0)AND(rt0.c1)), ((t0.c2)+(rt1.c0))))<=((CAST(rt1.c0 AS TEXT), '', CAST(x'' AS NUMERIC))))) ORDER BY CAST(((rt1.c2)OR(rt1.c0)) AS TEXT)  NULLS LAST, ((((((((((rt0.c1)AND(0.24010217571801418)))OR(rt0.c0)))AND(rt0.c1)))OR(rt1.c1)))>(((rt0.c0) NOT BETWEEN (0.39189788657673674) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 COLLATE RTRIM, ((rt0.c0)AND(rt0.c1)), ((t0.c2)+(rt1.c0))))<=((CAST(rt1.c0 AS TEXT), '', CAST(x'' AS NUMERIC))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((0xfffffffff08dc702) NOT NULL)) NOT NULL) LEFT OUTER JOIN rt1 ON (((t0.c2) BETWEEN (rt1.c1) AND (t0.c0)) IN ()) ORDER BY CAST(((rt1.c2)OR(rt1.c0)) AS TEXT)  NULLS LAST, ((((((((((rt0.c1)AND(0.24010217571801418)))OR(rt0.c0)))AND(rt0.c1)))OR(rt1.c1)))>(((rt0.c0) NOT BETWEEN (0.39189788657673674) AND (t0.c0)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((0Xfffffffff08dc702) NOT NULL)) NOT NULL) LEFT OUTER JOIN rt1 ON (((t0.c2) BETWEEN (rt1.c1) AND (t0.c0)) IN ()) WHERE ((((rt1.c1 COLLATE RTRIM, ((rt0.c0)AND(rt0.c1)), ((t0.c2)+(rt1.c0))))<=((CAST(rt1.c0 AS TEXT), '', CAST(x'' AS NUMERIC))))) ORDER BY CAST(((rt1.c2)OR(rt1.c0)) AS TEXT)  NULLS LAST, ((((((((((rt0.c1)AND(0.24010217571801418)))OR(rt0.c0)))AND(rt0.c1)))OR(rt1.c1)))>(((rt0.c0) NOT BETWEEN (0.39189788657673674) AND (t0.c0))));
SELECT * FROM t0, rt1 WHERE (CASE WHEN ((((t0.c2)OR(rt1.c2)))OR(rt1.c1)) THEN ((((t0.c1)AND(rt1.c1)))OR(rt1.c1)) ELSE t0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c2)OR(rt1.c2)))OR(rt1.c1)) THEN ((((t0.c1)AND(rt1.c1)))OR(rt1.c1)) ELSE t0.c1 END) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CASE WHEN ((((t0.c2)OR(rt1.c2)))OR(rt1.c1)) THEN ((((t0.c1)AND(rt1.c1)))OR(rt1.c1)) ELSE t0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c2)OR(rt1.c2)))OR(rt1.c1)) THEN ((((t0.c1)AND(rt1.c1)))OR(rt1.c1)) ELSE t0.c1 END) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CASE WHEN ((((t0.c2)OR(rt1.c2)))OR(rt1.c1)) THEN ((((t0.c1)AND(rt1.c1)))OR(rt1.c1)) ELSE t0.c1 END);
SELECT * FROM rt1, rt0, t0 WHERE (CASE WHEN (((t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((rt0.c0, rt1.c2, rt0.c1))) THEN rt1.c1 COLLATE NOCASE ELSE TRIM(rt0.c0, rt0.c2) END) ORDER BY ((((rt1.c1, rt1.c2, '0Kb{}'))>((rt1.c0, rt0.c2, rt1.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((rt0.c0, rt1.c2, rt0.c1))) THEN rt1.c1 COLLATE NOCASE ELSE TRIM(rt0.c0, rt0.c2) END) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((rt1.c1, rt1.c2, '0Kb{}'))>((rt1.c0, rt0.c2, rt1.c0))) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt1, rt0, t0 WHERE (CASE WHEN (((t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((rt0.c0, rt1.c2, rt0.c1))) THEN rt1.c1 COLLATE NOCASE ELSE TRIM(rt0.c0, rt0.c2) END) ORDER BY ((((rt1.c1, rt1.c2, '0Kb{}'))>((rt1.c0, rt0.c2, rt1.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((rt0.c0, rt1.c2, rt0.c1))) THEN rt1.c1 COLLATE NOCASE ELSE TRIM(rt0.c0, rt0.c2) END) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((rt1.c1, rt1.c2, '0Kb{}'))>((rt1.c0, rt0.c2, rt1.c0))) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt1, rt0, t0 WHERE (CASE WHEN (((t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((rt0.c0, rt1.c2, rt0.c1))) THEN rt1.c1 COLLATE NOCASE ELSE TRIM(rt0.c0, rt0.c2) END) ORDER BY ((((rt1.c1, rt1.c2, '0Kb{}'))>((rt1.c0, rt0.c2, rt1.c0))) IN ()) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((- ((~ (x'e008acd7'))))) ORDER BY (((rt1.c1 IN ())) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((~ (x'e008acd7'))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN ())) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((- ((~ (x'e008acd7'))))) ORDER BY (((rt1.c1 IN ())) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((~ (x'e008acd7'))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN ())) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((- ((~ (x'e008acd7'))))) ORDER BY (((rt1.c1 IN ())) NOTNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (((((((('0.7693323836376492')OR((((t0.c1))>((t0.c0))))))OR(((rt1.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))))OR(((rt1.c2)GLOB(rt1.c0)))))OR(ABS(DISTINCT rt1.c1))) WHERE (((CASE rt1.c0  WHEN x'' THEN t0.c2 ELSE rt1.c2 END) NOT BETWEEN ((t0.c2 IN ())) AND (CASE rt1.c2  WHEN rt1.c0 THEN t0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c0  WHEN x'' THEN t0.c2 ELSE rt1.c2 END) NOT BETWEEN ((t0.c2 IN ())) AND (CASE rt1.c2  WHEN rt1.c0 THEN t0.c1 END))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((((((('0.7693323836376492')OR((((t0.c1))>((t0.c0))))))OR(((rt1.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))))OR(((rt1.c2)GLOB(rt1.c0)))))OR(ABS(DISTINCT rt1.c1))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (((((((('0.7693323836376492')OR((((t0.c1))>((t0.c0))))))OR(((rt1.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))))OR(((rt1.c2)GLOB(rt1.c0)))))OR(ABS(DISTINCT rt1.c1))) WHERE (((CASE rt1.c0  WHEN x'' THEN t0.c2 ELSE rt1.c2 END) NOT BETWEEN ((t0.c2 IN ())) AND (CASE rt1.c2  WHEN rt1.c0 THEN t0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c0  WHEN x'' THEN t0.c2 ELSE rt1.c2 END) NOT BETWEEN ((t0.c2 IN ())) AND (CASE rt1.c2  WHEN rt1.c0 THEN t0.c1 END))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((((((('0.7693323836376492')OR((((t0.c1))>((t0.c0))))))OR(((rt1.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))))OR(((rt1.c2)GLOB(rt1.c0)))))OR(ABS(DISTINCT rt1.c1))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (((((((('0.7693323836376492')OR((((t0.c1))>((t0.c0))))))OR(((rt1.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))))OR(((rt1.c2)GLOB(rt1.c0)))))OR(ABS(DISTINCT rt1.c1))) WHERE (((CASE rt1.c0  WHEN x'' THEN t0.c2 ELSE rt1.c2 END) NOT BETWEEN ((t0.c2 IN ())) AND (CASE rt1.c2  WHEN rt1.c0 THEN t0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, t0 NATURAL JOIN rt1 WHERE (((rt1.c0)<=(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<=(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0, t0 NATURAL JOIN rt1 WHERE (((rt1.c0)<=(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<=(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0, t0 NATURAL JOIN rt1 WHERE (((rt1.c0)<=(rt0.c2)) COLLATE BINARY);
SELECT * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)AND(((t0.c2)AND(t0.c0)))))AND(t0.c1)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE NOCASE)AND(((t0.c2)AND(t0.c0)))))AND(t0.c1))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)AND(((t0.c2)AND(t0.c0)))))AND(t0.c1)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE NOCASE)AND(((t0.c2)AND(t0.c0)))))AND(t0.c1))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)AND(((t0.c2)AND(t0.c0)))))AND(t0.c1)));
SELECT * FROM rt1, t0, rt0 WHERE (((t0.c2) BETWEEN (rt0.c2) AND (t0.c1)) COLLATE BINARY) ORDER BY (+ ((((rt0.c1))>=((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((t0.c2) BETWEEN (rt0.c2) AND (t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (+ ((((rt0.c1))>=((rt1.c2))))));
SELECT * FROM rt1, t0, rt0 WHERE (((t0.c2) BETWEEN (rt0.c2) AND (t0.c1)) COLLATE BINARY) ORDER BY (+ ((((rt0.c1))>=((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((t0.c2) BETWEEN (rt0.c2) AND (t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (+ ((((rt0.c1))>=((rt1.c2))))));
SELECT * FROM rt1, t0, rt0 WHERE (((t0.c2) BETWEEN (rt0.c2) AND (t0.c1)) COLLATE BINARY) ORDER BY (+ ((((rt0.c1))>=((rt1.c2)))));
SELECT ALL * FROM rt1, t0 WHERE (CASE UPPER(DISTINCT t0.c0)  WHEN (('568238165') BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0)LIKE(t0.c0)) WHEN (('Mb!')+(t0.c1)) THEN CASE WHEN rt1.c0 THEN 0.17864702245869968 END WHEN (t0.c0 IN (rt1.c1)) THEN ((t0.c2)IS NOT(t0.c1)) ELSE CAST(t0.c2 AS NUMERIC) END) ORDER BY (((((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))OR(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE UPPER(DISTINCT t0.c0)  WHEN (('568238165') BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0)LIKE(t0.c0)) WHEN (('Mb!')+(t0.c1)) THEN CASE WHEN rt1.c0 THEN 0.17864702245869968 END WHEN (t0.c0 IN (rt1.c1)) THEN ((t0.c2)IS NOT(t0.c1)) ELSE CAST(t0.c2 AS NUMERIC) END) IS TRUE)  as count FROM rt1, t0 ORDER BY (((((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))OR(NULL))  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE (CASE UPPER(DISTINCT t0.c0)  WHEN (('568238165') BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0)LIKE(t0.c0)) WHEN (('Mb!')+(t0.c1)) THEN CASE WHEN rt1.c0 THEN 0.17864702245869968 END WHEN (t0.c0 IN (rt1.c1)) THEN ((t0.c2)IS NOT(t0.c1)) ELSE CAST(t0.c2 AS NUMERIC) END) ORDER BY (((((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))OR(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE UPPER(DISTINCT t0.c0)  WHEN (('568238165') BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0)LIKE(t0.c0)) WHEN (('Mb!')+(t0.c1)) THEN CASE WHEN rt1.c0 THEN 0.17864702245869968 END WHEN (t0.c0 IN (rt1.c1)) THEN ((t0.c2)IS NOT(t0.c1)) ELSE CAST(t0.c2 AS NUMERIC) END) IS TRUE)  as count FROM rt1, t0 ORDER BY (((((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))OR(NULL))  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE (CASE UPPER(DISTINCT t0.c0)  WHEN (('568238165') BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0)LIKE(t0.c0)) WHEN (('Mb!')+(t0.c1)) THEN CASE WHEN rt1.c0 THEN 0.17864702245869968 END WHEN (t0.c0 IN (rt1.c1)) THEN ((t0.c2)IS NOT(t0.c1)) ELSE CAST(t0.c2 AS NUMERIC) END) ORDER BY (((((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))OR(NULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON t0.c2 LEFT OUTER JOIN rt0 ON t0.c0 WHERE ((((NOT (t0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2))) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON t0.c2 LEFT OUTER JOIN rt0 ON t0.c0);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON t0.c2 LEFT OUTER JOIN rt0 ON t0.c0 WHERE ((((NOT (t0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2))) IS FALSE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON t0.c2 LEFT OUTER JOIN rt0 ON t0.c0);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON t0.c2 LEFT OUTER JOIN rt0 ON t0.c0 WHERE ((((NOT (t0.c2))) IS FALSE));
SELECT * FROM t0 WHERE ((- ((((t0.c1, t0.c0, t0.c1))=((t0.c0, t0.c1, t0.c2)))))) ORDER BY t0.c1 COLLATE RTRIM ASC  NULLS LAST, UNLIKELY(t0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- ((((t0.c1, t0.c0, t0.c1))=((t0.c0, t0.c1, t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 COLLATE RTRIM ASC  NULLS LAST, UNLIKELY(t0.c1 COLLATE NOCASE));
SELECT * FROM t0 WHERE ((- ((((t0.c1, t0.c0, t0.c1))=((t0.c0, t0.c1, t0.c2)))))) ORDER BY t0.c1 COLLATE RTRIM ASC  NULLS LAST, UNLIKELY(t0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- ((((t0.c1, t0.c0, t0.c1))=((t0.c0, t0.c1, t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 COLLATE RTRIM ASC  NULLS LAST, UNLIKELY(t0.c1 COLLATE NOCASE));
SELECT * FROM t0 WHERE ((- ((((t0.c1, t0.c0, t0.c1))=((t0.c0, t0.c1, t0.c2)))))) ORDER BY t0.c1 COLLATE RTRIM ASC  NULLS LAST, UNLIKELY(t0.c1 COLLATE NOCASE);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((((rt1.c2, t0.c0, rt0.c2)) BETWEEN ((TRIM(rt1.c1), t0.c2, rt1.c2)) AND ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c2)), 879987118, rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2, t0.c0, rt0.c2)) BETWEEN ((TRIM(rt1.c1), t0.c2, rt1.c2)) AND ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c2)), 879987118, rt1.c0)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((((rt1.c2, t0.c0, rt0.c2)) BETWEEN ((TRIM(rt1.c1), t0.c2, rt1.c2)) AND ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c2)), 879987118, rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2, t0.c0, rt0.c2)) BETWEEN ((TRIM(rt1.c1), t0.c2, rt1.c2)) AND ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c2)), 879987118, rt1.c0)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((((rt1.c2, t0.c0, rt0.c2)) BETWEEN ((TRIM(rt1.c1), t0.c2, rt1.c2)) AND ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c2)), 879987118, rt1.c0))));
SELECT ALL * FROM rt1, rt0, t0 WHERE (((((rt0.c1) NOT BETWEEN (t0.c2) AND (rt1.c2)))|(((rt1.c2)<(rt1.c0))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (t0.c2) AND (rt1.c2)))|(((rt1.c2)<(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY NULL);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((((rt0.c1) NOT BETWEEN (t0.c2) AND (rt1.c2)))|(((rt1.c2)<(rt1.c0))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (t0.c2) AND (rt1.c2)))|(((rt1.c2)<(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY NULL);
SELECT ALL * FROM rt1, rt0, t0 WHERE (((((rt0.c1) NOT BETWEEN (t0.c2) AND (rt1.c2)))|(((rt1.c2)<(rt1.c0))))) ORDER BY NULL;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT ALL * FROM t0 WHERE (load_extension(((t0.c1)IS NOT(x''))));
SELECT SUM(count) FROM (SELECT ((load_extension(((t0.c1)IS NOT(x'')))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (load_extension(((t0.c1)IS NOT(x''))));
SELECT SUM(count) FROM (SELECT ((load_extension(((t0.c1)IS NOT(x'')))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (load_extension(((t0.c1)IS NOT(x''))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (0.23305197920036103);
SELECT SUM(count) FROM (SELECT ALL ((0.23305197920036103) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (0.23305197920036103);
SELECT SUM(count) FROM (SELECT ALL ((0.23305197920036103) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (0.23305197920036103);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY 0.19963720161552478  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY 0.19963720161552478  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY 0.19963720161552478  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY 0.19963720161552478  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY 0.19963720161552478  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (0x73815eb7) ORDER BY CASE WHEN (~ (rt0.c1)) THEN (rt0.c0 IN ()) ELSE ((rt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((0X73815eb7) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (~ (rt0.c1)) THEN (rt0.c0 IN ()) ELSE ((rt0.c0) NOT NULL) END);
SELECT COUNT(*) FROM rt0 WHERE (0x73815eb7) ORDER BY CASE WHEN (~ (rt0.c1)) THEN (rt0.c0 IN ()) ELSE ((rt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((0X73815eb7) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (~ (rt0.c1)) THEN (rt0.c0 IN ()) ELSE ((rt0.c0) NOT NULL) END);
SELECT COUNT(*) FROM rt0 WHERE (0x73815eb7) ORDER BY CASE WHEN (~ (rt0.c1)) THEN (rt0.c0 IN ()) ELSE ((rt0.c0) NOT NULL) END;
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (((CAST(rt1.c1 AS TEXT), ((rt0.c0) NOT BETWEEN ('rB,y-x2') AND (rt0.c2)), ((t0.c0) NOT NULL)))=((((NULL) BETWEEN (rt0.c2) AND (rt1.c1)), ((t0.c1) ISNULL), ((rt0.c0) BETWEEN ('!~hh ') AND (t0.c1))))) CROSS JOIN rt1 ON CAST(COALESCE(t0.c1, rt0.c0) AS BLOB) WHERE (((CASE WHEN t0.c1 THEN t0.c1 END)IS(rt1.c2 COLLATE BINARY))) ORDER BY (((((rt0.c0))>((rt0.c0))))*(TRIM(t0.c2)))  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((t0.c2 COLLATE NOCASE)))  NULLS FIRST, ((CASE rt0.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN t0.c1 END)IS(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((CAST(rt1.c1 AS TEXT), ((rt0.c0) NOT BETWEEN ('rB,y-x2') AND (rt0.c2)), ((t0.c0) NOT NULL)))=((((NULL) BETWEEN (rt0.c2) AND (rt1.c1)), ((t0.c1) ISNULL), ((rt0.c0) BETWEEN ('!~hh ') AND (t0.c1))))) CROSS JOIN rt1 ON CAST(COALESCE(t0.c1, rt0.c0) AS BLOB) ORDER BY (((((rt0.c0))>((rt0.c0))))*(TRIM(t0.c2)))  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((t0.c2 COLLATE NOCASE)))  NULLS FIRST, ((CASE rt0.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (((CAST(rt1.c1 AS TEXT), ((rt0.c0) NOT BETWEEN ('rB,y-x2') AND (rt0.c2)), ((t0.c0) NOT NULL)))=((((NULL) BETWEEN (rt0.c2) AND (rt1.c1)), ((t0.c1) ISNULL), ((rt0.c0) BETWEEN ('!~hh ') AND (t0.c1))))) CROSS JOIN rt1 ON CAST(COALESCE(t0.c1, rt0.c0) AS BLOB) WHERE (((CASE WHEN t0.c1 THEN t0.c1 END)IS(rt1.c2 COLLATE BINARY))) ORDER BY (((((rt0.c0))>((rt0.c0))))*(TRIM(t0.c2)))  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((t0.c2 COLLATE NOCASE)))  NULLS FIRST, ((CASE rt0.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN t0.c1 END)IS(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((CAST(rt1.c1 AS TEXT), ((rt0.c0) NOT BETWEEN ('rB,y-x2') AND (rt0.c2)), ((t0.c0) NOT NULL)))=((((NULL) BETWEEN (rt0.c2) AND (rt1.c1)), ((t0.c1) ISNULL), ((rt0.c0) BETWEEN ('!~hh ') AND (t0.c1))))) CROSS JOIN rt1 ON CAST(COALESCE(t0.c1, rt0.c0) AS BLOB) ORDER BY (((((rt0.c0))>((rt0.c0))))*(TRIM(t0.c2)))  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((t0.c2 COLLATE NOCASE)))  NULLS FIRST, ((CASE rt0.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END) ISNULL));
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) NOT BETWEEN (((rt1.c2)OR(rt1.c0))) AND (((rt1.c2) BETWEEN (t0.c1) AND (t0.c2))))) ORDER BY ((((((((t0.c2)OR(rt1.c0)))OR('')))OR(NULLIF(DISTINCT t0.c0, rt1.c0))))OR(((NULL)!=(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) NOT BETWEEN (((rt1.c2)OR(rt1.c0))) AND (((rt1.c2) BETWEEN (t0.c1) AND (t0.c2))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((((t0.c2)OR(rt1.c0)))OR('')))OR(NULLIF(DISTINCT t0.c0, rt1.c0))))OR(((NULL)!=(t0.c1))))  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) NOT BETWEEN (((rt1.c2)OR(rt1.c0))) AND (((rt1.c2) BETWEEN (t0.c1) AND (t0.c2))))) ORDER BY ((((((((t0.c2)OR(rt1.c0)))OR('')))OR(NULLIF(DISTINCT t0.c0, rt1.c0))))OR(((NULL)!=(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) NOT BETWEEN (((rt1.c2)OR(rt1.c0))) AND (((rt1.c2) BETWEEN (t0.c1) AND (t0.c2))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((((t0.c2)OR(rt1.c0)))OR('')))OR(NULLIF(DISTINCT t0.c0, rt1.c0))))OR(((NULL)!=(t0.c1))))  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) NOT BETWEEN (((rt1.c2)OR(rt1.c0))) AND (((rt1.c2) BETWEEN (t0.c1) AND (t0.c2))))) ORDER BY ((((((((t0.c2)OR(rt1.c0)))OR('')))OR(NULLIF(DISTINCT t0.c0, rt1.c0))))OR(((NULL)!=(t0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((((((((((rt1.c1))<((rt1.c2))))OR(rt1.c0)))AND(((rt1.c0)-(rt1.c2)))))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c1))<((rt1.c2))))OR(rt1.c0)))AND(((rt1.c0)-(rt1.c2)))))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE NULL END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((((((((rt1.c1))<((rt1.c2))))OR(rt1.c0)))AND(((rt1.c0)-(rt1.c2)))))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c1))<((rt1.c2))))OR(rt1.c0)))AND(((rt1.c0)-(rt1.c2)))))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE NULL END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((((((((rt1.c1))<((rt1.c2))))OR(rt1.c0)))AND(((rt1.c0)-(rt1.c2)))))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE NULL END)));
SELECT ALL * FROM rt1 WHERE (((rt1.c2)%(rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)%(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c2)%(rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)%(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c2)%(rt1.c0 COLLATE BINARY)));
SELECT * FROM rt1, t0 INDEXED BY i12 WHERE ((- (((rt1.c1)&(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c1)&(rt1.c1))))) IS TRUE)  as count FROM rt1, t0 INDEXED BY i12);
SELECT * FROM rt1, t0 INDEXED BY i12 WHERE ((- (((rt1.c1)&(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c1)&(rt1.c1))))) IS TRUE)  as count FROM rt1, t0 INDEXED BY i12);
SELECT ALL * FROM t0, rt1 NATURAL JOIN rt0 WHERE (CAST(((t0.c0)%(0.09092687808899325)) AS NUMERIC)) ORDER BY CAST(((rt0.c1) IS FALSE) AS TEXT)  NULLS FIRST, ((((UNLIKELY(rt0.c1))AND('1259524346')))OR((('1475624819')|(x'6b67')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)%(0.09092687808899325)) AS NUMERIC)) IS TRUE)  as count FROM t0 NOT INDEXED, rt1 NATURAL JOIN rt0 ORDER BY CAST(((rt0.c1) IS FALSE) AS TEXT)  NULLS FIRST, ((((UNLIKELY(rt0.c1))AND('1259524346')))OR((('1475624819')|(x'6b67')))) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1 NATURAL JOIN rt0 WHERE (CAST(((t0.c0)%(0.09092687808899325)) AS NUMERIC)) ORDER BY CAST(((rt0.c1) IS FALSE) AS TEXT)  NULLS FIRST, ((((UNLIKELY(rt0.c1))AND('1259524346')))OR((('1475624819')|(x'6b67')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)%(0.09092687808899325)) AS NUMERIC)) IS TRUE)  as count FROM t0 NOT INDEXED, rt1 NATURAL JOIN rt0 ORDER BY CAST(((rt0.c1) IS FALSE) AS TEXT)  NULLS FIRST, ((((UNLIKELY(rt0.c1))AND('1259524346')))OR((('1475624819')|(x'6b67')))) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1 NATURAL JOIN rt0 WHERE (CAST(((t0.c0)%(0.09092687808899325)) AS NUMERIC)) ORDER BY CAST(((rt0.c1) IS FALSE) AS TEXT)  NULLS FIRST, ((((UNLIKELY(rt0.c1))AND('1259524346')))OR((('1475624819')|(x'6b67')))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ()))AND(COALESCE(rt1.c1, rt1.c1, rt1.c0, rt1.c0, rt1.c2, '/*Lk9')))) ORDER BY (((((rt1.c0) NOTNULL)))>=((0xffffffffb6b9b809 COLLATE BINARY))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))AND(COALESCE(rt1.c1, rt1.c1, rt1.c0, rt1.c0, rt1.c2, '/*Lk9')))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0) NOTNULL)))>=((0xffffffffb6b9b809 COLLATE BINARY))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ()))AND(COALESCE(rt1.c1, rt1.c1, rt1.c0, rt1.c0, rt1.c2, '/*Lk9')))) ORDER BY (((((rt1.c0) NOTNULL)))>=((0xffffffffb6b9b809 COLLATE BINARY))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))AND(COALESCE(rt1.c1, rt1.c1, rt1.c0, rt1.c0, rt1.c2, '/*Lk9')))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0) NOTNULL)))>=((0xffffffffb6b9b809 COLLATE BINARY))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ()))AND(COALESCE(rt1.c1, rt1.c1, rt1.c0, rt1.c0, rt1.c2, '/*Lk9')))) ORDER BY (((((rt1.c0) NOTNULL)))>=((0xffffffffb6b9b809 COLLATE BINARY))) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((((((((rt1.c2)AND(rt1.c1)))AND(t0.c0)))OR(rt1.c0)))AND(rt1.c0)))IS NOT(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)AND(rt1.c1)))AND(t0.c0)))OR(rt1.c0)))AND(rt1.c0)))IS NOT(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((((((((rt1.c2)AND(rt1.c1)))AND(t0.c0)))OR(rt1.c0)))AND(rt1.c0)))IS NOT(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)AND(rt1.c1)))AND(t0.c0)))OR(rt1.c0)))AND(rt1.c0)))IS NOT(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((((((((rt1.c2)AND(rt1.c1)))AND(t0.c0)))OR(rt1.c0)))AND(rt1.c0)))IS NOT(((rt1.c1) NOT NULL))));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN (- ('')) THEN rt0.c2 END) ORDER BY (((- (rt1.c0)))|(load_extension(t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- ('')) THEN rt0.c2 END) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((- (rt1.c0)))|(load_extension(t0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN (- ('')) THEN rt0.c2 END) ORDER BY (((- (rt1.c0)))|(load_extension(t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- ('')) THEN rt0.c2 END) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((- (rt1.c0)))|(load_extension(t0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN (- ('')) THEN rt0.c2 END) ORDER BY (((- (rt1.c0)))|(load_extension(t0.c0))) DESC  NULLS FIRST;
SELECT * FROM rt1 NOT INDEXED WHERE (((((((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(x'6afc')))OR(rt1.c1)))+(rt1.c2 COLLATE NOCASE))) ORDER BY ((((rt1.c0)-(rt1.c1)))AND(rt1.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(x'6afc')))OR(rt1.c1)))+(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)-(rt1.c1)))AND(rt1.c2 COLLATE RTRIM)) ASC);
SELECT * FROM rt1 NOT INDEXED WHERE (((((((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(x'6afc')))OR(rt1.c1)))+(rt1.c2 COLLATE NOCASE))) ORDER BY ((((rt1.c0)-(rt1.c1)))AND(rt1.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(x'6afc')))OR(rt1.c1)))+(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)-(rt1.c1)))AND(rt1.c2 COLLATE RTRIM)) ASC);
SELECT * FROM rt1 NOT INDEXED WHERE (((((((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(x'6afc')))OR(rt1.c1)))+(rt1.c2 COLLATE NOCASE))) ORDER BY ((((rt1.c0)-(rt1.c1)))AND(rt1.c2 COLLATE RTRIM)) ASC;
SELECT * FROM rt0 WHERE (x'') ORDER BY rt0.c2 ASC, (('[꘿.8#')LIKE(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC, (('[꘿.8#')LIKE(rt0.c2)) ASC);
SELECT * FROM rt0 WHERE (x'') ORDER BY rt0.c2 ASC, (('[꘿.8#')LIKE(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC, (('[꘿.8#')LIKE(rt0.c2)) ASC);
SELECT * FROM rt0 WHERE (x'') ORDER BY rt0.c2 ASC, (('[꘿.8#')LIKE(rt0.c2)) ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c0 COLLATE RTRIM))>=((CAST(rt0.c1 AS TEXT))))) ORDER BY CAST(LOWER(DISTINCT rt0.c1) AS REAL)  NULLS LAST, rt1.c0 ASC, (~ (((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)))OR(rt1.c1)))AND(0.4686466177266597)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 COLLATE RTRIM))>=((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(LOWER(DISTINCT rt0.c1) AS REAL)  NULLS LAST, rt1.c0 ASC, (~ (((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)))OR(rt1.c1)))AND(0.4686466177266597)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c0 COLLATE RTRIM))>=((CAST(rt0.c1 AS TEXT))))) ORDER BY CAST(LOWER(DISTINCT rt0.c1) AS REAL)  NULLS LAST, rt1.c0 ASC, (~ (((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)))OR(rt1.c1)))AND(0.4686466177266597)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 COLLATE RTRIM))>=((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(LOWER(DISTINCT rt0.c1) AS REAL)  NULLS LAST, rt1.c0 ASC, (~ (((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)))OR(rt1.c1)))AND(0.4686466177266597)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c0 COLLATE RTRIM))>=((CAST(rt0.c1 AS TEXT))))) ORDER BY CAST(LOWER(DISTINCT rt0.c1) AS REAL)  NULLS LAST, rt1.c0 ASC, (~ (((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c0)))OR(rt1.c1)))AND(0.4686466177266597)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)>(t0.c1)) THEN ((t0.c0) ISNULL) WHEN (((t0.c1))<=((t0.c0))) THEN (- (t0.c0)) WHEN CAST(t0.c2 AS TEXT) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)>(t0.c1)) THEN ((t0.c0) ISNULL) WHEN (((t0.c1))<=((t0.c0))) THEN (- (t0.c0)) WHEN CAST(t0.c2 AS TEXT) THEN NULL END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)>(t0.c1)) THEN ((t0.c0) ISNULL) WHEN (((t0.c1))<=((t0.c0))) THEN (- (t0.c0)) WHEN CAST(t0.c2 AS TEXT) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)>(t0.c1)) THEN ((t0.c0) ISNULL) WHEN (((t0.c1))<=((t0.c0))) THEN (- (t0.c0)) WHEN CAST(t0.c2 AS TEXT) THEN NULL END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)>(t0.c1)) THEN ((t0.c0) ISNULL) WHEN (((t0.c1))<=((t0.c0))) THEN (- (t0.c0)) WHEN CAST(t0.c2 AS TEXT) THEN NULL END);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR('-445728344')))OR(rt0.c0)))>(rt0.c1)), ((((((rt0.c0))<((rt0.c1)))))>((((rt0.c0)<(rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR('-445728344')))OR(rt0.c0)))>(rt0.c1)), ((((((rt0.c0))<((rt0.c1)))))>((((rt0.c0)<(rt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR('-445728344')))OR(rt0.c0)))>(rt0.c1)), ((((((rt0.c0))<((rt0.c1)))))>((((rt0.c0)<(rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR('-445728344')))OR(rt0.c0)))>(rt0.c1)), ((((((rt0.c0))<((rt0.c1)))))>((((rt0.c0)<(rt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR('-445728344')))OR(rt0.c0)))>(rt0.c1)), ((((((rt0.c0))<((rt0.c1)))))>((((rt0.c0)<(rt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM t0, rt1 WHERE (((CAST(NULL AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL)) IS TRUE)) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (((CAST(NULL AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL)) IS TRUE)) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (((CAST(NULL AS REAL)) IS TRUE));
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((t0.c0) IS FALSE)) ISNULL)) ORDER BY (NOT (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST, (((('0.40143982795927347')OR(CASE WHEN rt1.c2 THEN t0.c1 WHEN rt1.c2 THEN rt0.c1 WHEN t0.c1 THEN t0.c1 END)))AND(0.940295216050275)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (NOT (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST, (((('0.40143982795927347')OR(CASE WHEN rt1.c2 THEN t0.c1 WHEN rt1.c2 THEN rt0.c1 WHEN t0.c1 THEN t0.c1 END)))AND(0.940295216050275)) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((t0.c0) IS FALSE)) ISNULL)) ORDER BY (NOT (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST, (((('0.40143982795927347')OR(CASE WHEN rt1.c2 THEN t0.c1 WHEN rt1.c2 THEN rt0.c1 WHEN t0.c1 THEN t0.c1 END)))AND(0.940295216050275)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (NOT (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST, (((('0.40143982795927347')OR(CASE WHEN rt1.c2 THEN t0.c1 WHEN rt1.c2 THEN rt0.c1 WHEN t0.c1 THEN t0.c1 END)))AND(0.940295216050275)) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((t0.c0) IS FALSE)) ISNULL)) ORDER BY (NOT (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST, (((('0.40143982795927347')OR(CASE WHEN rt1.c2 THEN t0.c1 WHEN rt1.c2 THEN rt0.c1 WHEN t0.c1 THEN t0.c1 END)))AND(0.940295216050275)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 NOT INDEXED WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 NOT INDEXED WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 NOT INDEXED WHERE ('');
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (t0.c1))) AND (((((rt0.c1)OR(t0.c2)))OR(t0.c2))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (t0.c1))) AND (((((rt0.c1)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY x'' ASC);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (t0.c1))) AND (((((rt0.c1)OR(t0.c2)))OR(t0.c2))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (t0.c1))) AND (((((rt0.c1)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY x'' ASC);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (t0.c1))) AND (((((rt0.c1)OR(t0.c2)))OR(t0.c2))))) ORDER BY x'' ASC;
SELECT * FROM rt0, rt1, t0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (rt1.c2);
SELECT * FROM rt0 WHERE (((((rt0.c1)<(rt0.c1)))<<((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c1)))<<((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)<(rt0.c1)))<<((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c1)))<<((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)<(rt0.c1)))<<((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c0 AS BLOB) AS INTEGER) WHERE ((((CASE WHEN rt1.c1 THEN rt0.c1 END))>=((CASE WHEN rt0.c0 THEN rt0.c1 END)))) ORDER BY (((rt1.c0) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt1.c1 THEN rt0.c1 END))>=((CASE WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c0 AS BLOB) AS INTEGER) ORDER BY (((rt1.c0) NOT NULL) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c0 AS BLOB) AS INTEGER) WHERE ((((CASE WHEN rt1.c1 THEN rt0.c1 END))>=((CASE WHEN rt0.c0 THEN rt0.c1 END)))) ORDER BY (((rt1.c0) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt1.c1 THEN rt0.c1 END))>=((CASE WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c0 AS BLOB) AS INTEGER) ORDER BY (((rt1.c0) NOT NULL) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c0 AS BLOB) AS INTEGER) WHERE ((((CASE WHEN rt1.c1 THEN rt0.c1 END))>=((CASE WHEN rt0.c0 THEN rt0.c1 END)))) ORDER BY (((rt1.c0) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON ((((t0.c0)>>(t0.c2))) IS FALSE) WHERE (((((t0.c1, rt1.c1, t0.c1)) NOT BETWEEN (('m2ZNVԢcf,', rt1.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c1))) IN ((+ (rt1.c2)), ((((t0.c1)AND(t0.c1)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1, rt1.c1, t0.c1)) NOT BETWEEN (('m2ZNVԢcf,', rt1.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c1))) IN ((+ (rt1.c2)), ((((t0.c1)AND(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((((t0.c0)>>(t0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON ((((t0.c0)>>(t0.c2))) IS FALSE) WHERE (((((t0.c1, rt1.c1, t0.c1)) NOT BETWEEN (('m2ZNVԢcf,', rt1.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c1))) IN ((+ (rt1.c2)), ((((t0.c1)AND(t0.c1)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1, rt1.c1, t0.c1)) NOT BETWEEN (('m2ZNVԢcf,', rt1.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c1))) IN ((+ (rt1.c2)), ((((t0.c1)AND(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((((t0.c0)>>(t0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt1 ON ((((t0.c0)>>(t0.c2))) IS FALSE) WHERE (((((t0.c1, rt1.c1, t0.c1)) NOT BETWEEN (('m2ZNVԢcf,', rt1.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c1))) IN ((+ (rt1.c2)), ((((t0.c1)AND(t0.c1)))OR(t0.c1)))));
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2)))) NOT BETWEEN (((t0.c0)>(t0.c1))) AND ((+ (t0.c0))))) ORDER BY ((CAST(t0.c1 AS TEXT))AND((rt0.c2 IN ()))) ASC  NULLS LAST, CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c2)) THEN CAST(t0.c1 AS INTEGER) WHEN rt0.c0 THEN ((((t0.c0)AND(t0.c2)))AND(rt0.c2)) WHEN ((((rt0.c2)AND(t0.c1)))OR(rt0.c2)) THEN ((rt0.c2) BETWEEN (x'') AND (t0.c0)) ELSE UNLIKELY(rt0.c1) END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2)))) NOT BETWEEN (((t0.c0)>(t0.c1))) AND ((+ (t0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((CAST(t0.c1 AS TEXT))AND((rt0.c2 IN ()))) ASC  NULLS LAST, CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c2)) THEN CAST(t0.c1 AS INTEGER) WHEN rt0.c0 THEN ((((t0.c0)AND(t0.c2)))AND(rt0.c2)) WHEN ((((rt0.c2)AND(t0.c1)))OR(rt0.c2)) THEN ((rt0.c2) BETWEEN (x'') AND (t0.c0)) ELSE UNLIKELY(rt0.c1) END);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2)))) NOT BETWEEN (((t0.c0)>(t0.c1))) AND ((+ (t0.c0))))) ORDER BY ((CAST(t0.c1 AS TEXT))AND((rt0.c2 IN ()))) ASC  NULLS LAST, CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c2)) THEN CAST(t0.c1 AS INTEGER) WHEN rt0.c0 THEN ((((t0.c0)AND(t0.c2)))AND(rt0.c2)) WHEN ((((rt0.c2)AND(t0.c1)))OR(rt0.c2)) THEN ((rt0.c2) BETWEEN (x'') AND (t0.c0)) ELSE UNLIKELY(rt0.c1) END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2)))) NOT BETWEEN (((t0.c0)>(t0.c1))) AND ((+ (t0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((CAST(t0.c1 AS TEXT))AND((rt0.c2 IN ()))) ASC  NULLS LAST, CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c2)) THEN CAST(t0.c1 AS INTEGER) WHEN rt0.c0 THEN ((((t0.c0)AND(t0.c2)))AND(rt0.c2)) WHEN ((((rt0.c2)AND(t0.c1)))OR(rt0.c2)) THEN ((rt0.c2) BETWEEN (x'') AND (t0.c0)) ELSE UNLIKELY(rt0.c1) END);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END  WHEN ((t0.c2)>=(t0.c0)) THEN LIKELIHOOD(DISTINCT t0.c2, 0.7991893704046027) END) ORDER BY ((((((((CAST(t0.c2 AS TEXT))OR(((t0.c2) IS FALSE))))OR((t0.c1 IN ()))))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c0 END)))OR((t0.c1 IN (t0.c2))));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END  WHEN ((t0.c2)>=(t0.c0)) THEN LIKELIHOOD(DISTINCT t0.c2, 0.7991893704046027) END) IS TRUE)  as count FROM t0 ORDER BY ((((((((CAST(t0.c2 AS TEXT))OR(((t0.c2) IS FALSE))))OR((t0.c1 IN ()))))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c0 END)))OR((t0.c1 IN (t0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END  WHEN ((t0.c2)>=(t0.c0)) THEN LIKELIHOOD(DISTINCT t0.c2, 0.7991893704046027) END) ORDER BY ((((((((CAST(t0.c2 AS TEXT))OR(((t0.c2) IS FALSE))))OR((t0.c1 IN ()))))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c0 END)))OR((t0.c1 IN (t0.c2))));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END  WHEN ((t0.c2)>=(t0.c0)) THEN LIKELIHOOD(DISTINCT t0.c2, 0.7991893704046027) END) IS TRUE)  as count FROM t0 ORDER BY ((((((((CAST(t0.c2 AS TEXT))OR(((t0.c2) IS FALSE))))OR((t0.c1 IN ()))))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c0 END)))OR((t0.c1 IN (t0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END  WHEN ((t0.c2)>=(t0.c0)) THEN LIKELIHOOD(DISTINCT t0.c2, 0.7991893704046027) END) ORDER BY ((((((((CAST(t0.c2 AS TEXT))OR(((t0.c2) IS FALSE))))OR((t0.c1 IN ()))))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c0 END)))OR((t0.c1 IN (t0.c2))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) IS TRUE)) NOT NULL) WHERE ((((~ (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) IS TRUE)) NOT NULL));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) IS TRUE)) NOT NULL) WHERE ((((~ (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) IS TRUE)) NOT NULL));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) IS TRUE)) NOT NULL) WHERE ((((~ (t0.c0))) ISNULL));
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY ((((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((- (rt1.c2))) AND (x'5138')) ASC  NULLS FIRST, ((rt1.c2)/(CAST(rt1.c2 AS TEXT)))  NULLS FIRST, LIKELY(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((- (rt1.c2))) AND (x'5138')) ASC  NULLS FIRST, ((rt1.c2)/(CAST(rt1.c2 AS TEXT)))  NULLS FIRST, LIKELY(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY ((((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((- (rt1.c2))) AND (x'5138')) ASC  NULLS FIRST, ((rt1.c2)/(CAST(rt1.c2 AS TEXT)))  NULLS FIRST, LIKELY(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((- (rt1.c2))) AND (x'5138')) ASC  NULLS FIRST, ((rt1.c2)/(CAST(rt1.c2 AS TEXT)))  NULLS FIRST, LIKELY(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY ((((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((- (rt1.c2))) AND (x'5138')) ASC  NULLS FIRST, ((rt1.c2)/(CAST(rt1.c2 AS TEXT)))  NULLS FIRST, LIKELY(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c2, t0.c1 COLLATE RTRIM))<=((t0.c2, ((t0.c0)*(t0.c2)), t0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c2, t0.c1 COLLATE RTRIM))<=((t0.c2, ((t0.c0)*(t0.c2)), t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c2, t0.c1 COLLATE RTRIM))<=((t0.c2, ((t0.c0)*(t0.c2)), t0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c2, t0.c1 COLLATE RTRIM))<=((t0.c2, ((t0.c0)*(t0.c2)), t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c2, t0.c1 COLLATE RTRIM))<=((t0.c2, ((t0.c0)*(t0.c2)), t0.c0 COLLATE RTRIM))));
SELECT * FROM rt1, t0 WHERE (CASE ((t0.c2)-(t0.c2))  WHEN (((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN rt1.c1 COLLATE RTRIM ELSE (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2)-(t0.c2))  WHEN (((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN rt1.c1 COLLATE RTRIM ELSE (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (CASE ((t0.c2)-(t0.c2))  WHEN (((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN rt1.c1 COLLATE RTRIM ELSE (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2)-(t0.c2))  WHEN (((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN rt1.c1 COLLATE RTRIM ELSE (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (CASE ((t0.c2)-(t0.c2))  WHEN (((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN rt1.c1 COLLATE RTRIM ELSE (rt1.c1 IN ()) END);
SELECT * FROM rt0, rt1 CROSS JOIN t0 ON (((((rt1.c0)AND(t0.c0)))OR(t0.c2)) IN ()) WHERE ((((('')OR(UNLIKELY(rt0.c2))))OR(CAST(t0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((('')OR(UNLIKELY(rt0.c2))))OR(CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON (((((rt1.c0)AND(t0.c0)))OR(t0.c2)) IN ()));
SELECT * FROM rt0, rt1 CROSS JOIN t0 ON (((((rt1.c0)AND(t0.c0)))OR(t0.c2)) IN ()) WHERE ((((('')OR(UNLIKELY(rt0.c2))))OR(CAST(t0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((('')OR(UNLIKELY(rt0.c2))))OR(CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON (((((rt1.c0)AND(t0.c0)))OR(t0.c2)) IN ()));
SELECT * FROM rt0, rt1 CROSS JOIN t0 ON (((((rt1.c0)AND(t0.c0)))OR(t0.c2)) IN ()) WHERE ((((('')OR(UNLIKELY(rt0.c2))))OR(CAST(t0.c1 AS NUMERIC))));
SELECT ALL * FROM t0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ('');
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2 COLLATE NOCASE)<(((t0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)<(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2 COLLATE NOCASE)<(((t0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)<(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2 COLLATE NOCASE)<(((t0.c2) IS TRUE))));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (((NOT (rt1.c0))) BETWEEN ((('')&(rt0.c1))) AND ((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON TYPEOF(rt1.c2 COLLATE NOCASE) WHERE (((((((((rt1.c1)OR(t0.c2)))AND(t0.c0)))AND((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, t0.c0, -1.896479245E9)) AND ((rt0.c1, t0.c1, rt1.c2))))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1)OR(t0.c2)))AND(t0.c0)))AND((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, t0.c0, -1.896479245E9)) AND ((rt0.c1, t0.c1, rt1.c2))))))OR(x''))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((NOT (rt1.c0))) BETWEEN ((('')&(rt0.c1))) AND ((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON TYPEOF(rt1.c2 COLLATE NOCASE));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (((NOT (rt1.c0))) BETWEEN ((('')&(rt0.c1))) AND ((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON TYPEOF(rt1.c2 COLLATE NOCASE) WHERE (((((((((rt1.c1)OR(t0.c2)))AND(t0.c0)))AND((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, t0.c0, -1.896479245E9)) AND ((rt0.c1, t0.c1, rt1.c2))))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1)OR(t0.c2)))AND(t0.c0)))AND((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, t0.c0, -1.896479245E9)) AND ((rt0.c1, t0.c1, rt1.c2))))))OR(x''))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((NOT (rt1.c0))) BETWEEN ((('')&(rt0.c1))) AND ((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON TYPEOF(rt1.c2 COLLATE NOCASE));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (((NOT (rt1.c0))) BETWEEN ((('')&(rt0.c1))) AND ((rt0.c2 IN ()))) FULL OUTER JOIN t0 ON TYPEOF(rt1.c2 COLLATE NOCASE) WHERE (((((((((rt1.c1)OR(t0.c2)))AND(t0.c0)))AND((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, t0.c0, -1.896479245E9)) AND ((rt0.c1, t0.c1, rt1.c2))))))OR(x'')));
SELECT ALL * FROM rt0, t0 NOT INDEXED WHERE (CAST(t0.c1 COLLATE RTRIM AS BLOB)) ORDER BY (~ (((t0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))), (~ (((rt0.c2)!=(-536716159))))  NULLS FIRST, (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE t0.c0 END))<((TYPEOF(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ (((t0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))), (~ (((rt0.c2)!=(-536716159))))  NULLS FIRST, (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE t0.c0 END))<((TYPEOF(DISTINCT rt0.c2)))));
SELECT ALL * FROM rt0, t0 NOT INDEXED WHERE (CAST(t0.c1 COLLATE RTRIM AS BLOB)) ORDER BY (~ (((t0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))), (~ (((rt0.c2)!=(-536716159))))  NULLS FIRST, (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE t0.c0 END))<((TYPEOF(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ (((t0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))), (~ (((rt0.c2)!=(-536716159))))  NULLS FIRST, (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE t0.c0 END))<((TYPEOF(DISTINCT rt0.c2)))));
SELECT ALL * FROM rt0, t0 NOT INDEXED WHERE (CAST(t0.c1 COLLATE RTRIM AS BLOB)) ORDER BY (~ (((t0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))), (~ (((rt0.c2)!=(-536716159))))  NULLS FIRST, (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE t0.c0 END))<((TYPEOF(DISTINCT rt0.c2))));
SELECT COUNT(*) FROM rt1, t0 WHERE (IFNULL(DISTINCT (rt1.c1 IN ()), TRIM(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (rt1.c1 IN ()), TRIM(t0.c2))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (IFNULL(DISTINCT (rt1.c1 IN ()), TRIM(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (rt1.c1 IN ()), TRIM(t0.c2))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (IFNULL(DISTINCT (rt1.c1 IN ()), TRIM(t0.c2)));
SELECT ALL * FROM rt1, rt0, t0 WHERE ((((((rt0.c2)) BETWEEN ((t0.c1)) AND ((rt0.c2)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((t0.c1)) AND ((rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE ((((((rt0.c2)) BETWEEN ((t0.c1)) AND ((rt0.c2)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((t0.c1)) AND ((rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL * FROM rt1, rt0, t0 WHERE ((((((rt0.c2)) BETWEEN ((t0.c1)) AND ((rt0.c2)))) IS TRUE));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((((((((((rt1.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt1.c0)))OR(rt0.c2)))) AND (((+ (rt1.c1))))) WHERE (((((rt0.c2)<<(rt0.c0))) IS TRUE)) ORDER BY (- (LOWER(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((((((((((rt1.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt1.c0)))OR(rt0.c2)))) AND (((+ (rt1.c1))))) ORDER BY (- (LOWER(rt0.c2))) DESC);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((((((((((rt1.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt1.c0)))OR(rt0.c2)))) AND (((+ (rt1.c1))))) WHERE (((((rt0.c2)<<(rt0.c0))) IS TRUE)) ORDER BY (- (LOWER(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((((((((((rt1.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt1.c0)))OR(rt0.c2)))) AND (((+ (rt1.c1))))) ORDER BY (- (LOWER(rt0.c2))) DESC);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((((((((((rt1.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt1.c0)))OR(rt0.c2)))) AND (((+ (rt1.c1))))) WHERE (((((rt0.c2)<<(rt0.c0))) IS TRUE)) ORDER BY (- (LOWER(rt0.c2))) DESC;
SELECT ALL * FROM t0, rt0 WHERE (COALESCE(DISTINCT (t0.c2 IN ()), (-2046538357 IN (t0.c0)))) ORDER BY (((rt0.c2) NOT NULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (t0.c2 IN ()), (-2046538357 IN (t0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c2) NOT NULL) IN ()) DESC);
SELECT ALL * FROM t0, rt0 WHERE (COALESCE(DISTINCT (t0.c2 IN ()), (-2046538357 IN (t0.c0)))) ORDER BY (((rt0.c2) NOT NULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (t0.c2 IN ()), (-2046538357 IN (t0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c2) NOT NULL) IN ()) DESC);
SELECT ALL * FROM t0, rt0 WHERE (COALESCE(DISTINCT (t0.c2 IN ()), (-2046538357 IN (t0.c0)))) ORDER BY (((rt0.c2) NOT NULL) IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ('949381777') ORDER BY CAST((((rt0.c1, rt0.c1, rt0.c0))==((rt0.c2, rt0.c0, rt0.c0))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('949381777') IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c1, rt0.c1, rt0.c0))==((rt0.c2, rt0.c0, rt0.c0))) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('949381777') ORDER BY CAST((((rt0.c1, rt0.c1, rt0.c0))==((rt0.c2, rt0.c0, rt0.c0))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('949381777') IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c1, rt0.c1, rt0.c0))==((rt0.c2, rt0.c0, rt0.c0))) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('949381777') ORDER BY CAST((((rt0.c1, rt0.c1, rt0.c0))==((rt0.c2, rt0.c0, rt0.c0))) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((((~ (rt0.c2))) ISNULL)) ORDER BY (((t0.c0) IS TRUE) IN ()) ASC  NULLS FIRST, (((rt0.c0))<=((rt0.c2))) COLLATE BINARY DESC  NULLS FIRST, t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((t0.c0) IS TRUE) IN ()) ASC  NULLS FIRST, (((rt0.c0))<=((rt0.c2))) COLLATE BINARY DESC  NULLS FIRST, t0.c2  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((~ (rt0.c2))) ISNULL)) ORDER BY (((t0.c0) IS TRUE) IN ()) ASC  NULLS FIRST, (((rt0.c0))<=((rt0.c2))) COLLATE BINARY DESC  NULLS FIRST, t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((t0.c0) IS TRUE) IN ()) ASC  NULLS FIRST, (((rt0.c0))<=((rt0.c2))) COLLATE BINARY DESC  NULLS FIRST, t0.c2  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((~ (rt0.c2))) ISNULL)) ORDER BY (((t0.c0) IS TRUE) IN ()) ASC  NULLS FIRST, (((rt0.c0))<=((rt0.c2))) COLLATE BINARY DESC  NULLS FIRST, t0.c2  NULLS LAST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON CASE WHEN (~ (0.08433122951739214)) THEN (t0.c0 IN ()) END RIGHT OUTER JOIN rt0 ON ((t0.c1)IS(rt1.c0)) COLLATE BINARY COLLATE NOCASE WHERE ('%');
SELECT SUM(count) FROM (SELECT ALL (('%') IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON CASE WHEN (~ (0.08433122951739214)) THEN (t0.c0 IN ()) END RIGHT OUTER JOIN rt0 ON ((t0.c1)IS(rt1.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON CASE WHEN (~ (0.08433122951739214)) THEN (t0.c0 IN ()) END RIGHT OUTER JOIN rt0 ON ((t0.c1)IS(rt1.c0)) COLLATE BINARY COLLATE NOCASE WHERE ('%');
SELECT SUM(count) FROM (SELECT ALL (('%') IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON CASE WHEN (~ (0.08433122951739214)) THEN (t0.c0 IN ()) END RIGHT OUTER JOIN rt0 ON ((t0.c1)IS(rt1.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON CASE WHEN (~ (0.08433122951739214)) THEN (t0.c0 IN ()) END RIGHT OUTER JOIN rt0 ON ((t0.c1)IS(rt1.c0)) COLLATE BINARY COLLATE NOCASE WHERE ('%');
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON ((rt0.c2 COLLATE NOCASE)%(rt0.c2 COLLATE BINARY)) WHERE (CAST(TRIM(rt1.c0) AS NUMERIC)) ORDER BY ((((((((rt1.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM, ((((((((((rt1.c1)<(rt1.c2)))OR(rt1.c0 COLLATE NOCASE)))OR(rt0.c2 COLLATE NOCASE)))OR(CAST(rt1.c1 AS INTEGER))))AND((- (rt0.c1)))) DESC, ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt1.c0) AS NUMERIC)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((rt0.c2 COLLATE NOCASE)%(rt0.c2 COLLATE BINARY)) ORDER BY ((((((((rt1.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM, ((((((((((rt1.c1)<(rt1.c2)))OR(rt1.c0 COLLATE NOCASE)))OR(rt0.c2 COLLATE NOCASE)))OR(CAST(rt1.c1 AS INTEGER))))AND((- (rt0.c1)))) DESC, ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON ((rt0.c2 COLLATE NOCASE)%(rt0.c2 COLLATE BINARY)) WHERE (CAST(TRIM(rt1.c0) AS NUMERIC)) ORDER BY ((((((((rt1.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM, ((((((((((rt1.c1)<(rt1.c2)))OR(rt1.c0 COLLATE NOCASE)))OR(rt0.c2 COLLATE NOCASE)))OR(CAST(rt1.c1 AS INTEGER))))AND((- (rt0.c1)))) DESC, ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt1.c0) AS NUMERIC)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((rt0.c2 COLLATE NOCASE)%(rt0.c2 COLLATE BINARY)) ORDER BY ((((((((rt1.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM, ((((((((((rt1.c1)<(rt1.c2)))OR(rt1.c0 COLLATE NOCASE)))OR(rt0.c2 COLLATE NOCASE)))OR(CAST(rt1.c1 AS INTEGER))))AND((- (rt0.c1)))) DESC, ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON ((rt0.c2 COLLATE NOCASE)%(rt0.c2 COLLATE BINARY)) WHERE (CAST(TRIM(rt1.c0) AS NUMERIC)) ORDER BY ((((((((rt1.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM, ((((((((((rt1.c1)<(rt1.c2)))OR(rt1.c0 COLLATE NOCASE)))OR(rt0.c2 COLLATE NOCASE)))OR(CAST(rt1.c1 AS INTEGER))))AND((- (rt0.c1)))) DESC, ((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM ASC;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (json_extract(rt1.c2, rt0.c2) IN (x'', (~ (rt1.c1)), ((((((((((((rt0.c0)OR(t0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(t0.c0)))AND(rt1.c2)))OR(t0.c1)))) FULL OUTER JOIN rt0 ON (((((rt1.c2)) NOT BETWEEN ((t0.c1)) AND ((rt0.c0))))+(HEX(DISTINCT t0.c1))) WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((((rt0.c1)AND(t0.c0)))OR(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c2 IN ()) THEN ((((rt0.c1)AND(t0.c0)))OR(rt1.c0)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (json_extract(rt1.c2, rt0.c2) IN (x'', (~ (rt1.c1)), ((((((((((((rt0.c0)OR(t0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(t0.c0)))AND(rt1.c2)))OR(t0.c1)))) FULL OUTER JOIN rt0 ON (((((rt1.c2)) NOT BETWEEN ((t0.c1)) AND ((rt0.c0))))+(HEX(DISTINCT t0.c1))));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (json_extract(rt1.c2, rt0.c2) IN (x'', (~ (rt1.c1)), ((((((((((((rt0.c0)OR(t0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(t0.c0)))AND(rt1.c2)))OR(t0.c1)))) FULL OUTER JOIN rt0 ON (((((rt1.c2)) NOT BETWEEN ((t0.c1)) AND ((rt0.c0))))+(HEX(DISTINCT t0.c1))) WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((((rt0.c1)AND(t0.c0)))OR(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c2 IN ()) THEN ((((rt0.c1)AND(t0.c0)))OR(rt1.c0)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (json_extract(rt1.c2, rt0.c2) IN (x'', (~ (rt1.c1)), ((((((((((((rt0.c0)OR(t0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(t0.c0)))AND(rt1.c2)))OR(t0.c1)))) FULL OUTER JOIN rt0 ON (((((rt1.c2)) NOT BETWEEN ((t0.c1)) AND ((rt0.c0))))+(HEX(DISTINCT t0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1)|(rt0.c2)) WHEN CAST(NULL AS NUMERIC) THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(NULL AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1)|(rt0.c2)) WHEN CAST(NULL AS NUMERIC) THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(NULL AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1)|(rt0.c2)) WHEN CAST(NULL AS NUMERIC) THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(NULL AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1)|(rt0.c2)) WHEN CAST(NULL AS NUMERIC) THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(NULL AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1)|(rt0.c2)) WHEN CAST(NULL AS NUMERIC) THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(NULL AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 END END);
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c1)))>((+ (rt1.c2))))) ORDER BY (((rt1.c2, rt1.c0, rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((((rt1.c1)<=(rt1.c2)), (NOT (rt1.c0)), 'sm', CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END, (rt1.c0 IN ()))) AND ((((rt1.c0)OR(rt1.c0)), ((rt1.c1) IS FALSE), ((-1984261025) IS TRUE), '-359328627', ((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c1)))>((+ (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2, rt1.c0, rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((((rt1.c1)<=(rt1.c2)), (NOT (rt1.c0)), 'sm', CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END, (rt1.c0 IN ()))) AND ((((rt1.c0)OR(rt1.c0)), ((rt1.c1) IS FALSE), ((-1984261025) IS TRUE), '-359328627', ((rt1.c2) ISNULL)))));
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c1)))>((+ (rt1.c2))))) ORDER BY (((rt1.c2, rt1.c0, rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((((rt1.c1)<=(rt1.c2)), (NOT (rt1.c0)), 'sm', CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END, (rt1.c0 IN ()))) AND ((((rt1.c0)OR(rt1.c0)), ((rt1.c1) IS FALSE), ((-1984261025) IS TRUE), '-359328627', ((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c1)))>((+ (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2, rt1.c0, rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((((rt1.c1)<=(rt1.c2)), (NOT (rt1.c0)), 'sm', CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END, (rt1.c0 IN ()))) AND ((((rt1.c0)OR(rt1.c0)), ((rt1.c1) IS FALSE), ((-1984261025) IS TRUE), '-359328627', ((rt1.c2) ISNULL)))));
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c1)))>((+ (rt1.c2))))) ORDER BY (((rt1.c2, rt1.c0, rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((((rt1.c1)<=(rt1.c2)), (NOT (rt1.c0)), 'sm', CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END, (rt1.c0 IN ()))) AND ((((rt1.c0)OR(rt1.c0)), ((rt1.c1) IS FALSE), ((-1984261025) IS TRUE), '-359328627', ((rt1.c2) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i12, t0, rt1 WHERE ((((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c2 END))>=((ABS(DISTINCT t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c2 END))>=((ABS(DISTINCT t0.c0))))) IS TRUE)  as count FROM rt0 INDEXED BY i12, t0, rt1);
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i12, t0, rt1 WHERE ((((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c2 END))>=((ABS(DISTINCT t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c2 END))>=((ABS(DISTINCT t0.c0))))) IS TRUE)  as count FROM rt0 INDEXED BY i12, t0, rt1);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (rt1.c2);
SELECT COUNT(*) FROM rt1, rt0 INDEXED BY i12, t0 WHERE (CAST(t0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 AS TEXT)) IS TRUE)  as count FROM rt1, rt0 INDEXED BY i12, t0);
SELECT COUNT(*) FROM rt1, rt0 INDEXED BY i12, t0 WHERE (CAST(t0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 AS TEXT)) IS TRUE)  as count FROM rt1, rt0 INDEXED BY i12, t0);
SELECT ALL * FROM rt0, t0 WHERE (COALESCE(DISTINCT ((((((((rt0.c2)AND(t0.c1)))OR(t0.c0)))OR(0x5d181c8a)))AND(rt0.c0)), ((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((((((rt0.c2)AND(t0.c1)))OR(t0.c0)))OR(0X5d181c8a)))AND(rt0.c0)), ((rt0.c2) NOTNULL))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (COALESCE(DISTINCT ((((((((rt0.c2)AND(t0.c1)))OR(t0.c0)))OR(0x5d181c8a)))AND(rt0.c0)), ((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((((((rt0.c2)AND(t0.c1)))OR(t0.c0)))OR(0X5d181c8a)))AND(rt0.c0)), ((rt0.c2) NOTNULL))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (COALESCE(DISTINCT ((((((((rt0.c2)AND(t0.c1)))OR(t0.c0)))OR(0x5d181c8a)))AND(rt0.c0)), ((rt0.c2) NOTNULL)));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE ((t0.c1)IS(rt0.c0))  WHEN TRIM(DISTINCT rt0.c1) THEN ((rt1.c0)==(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1)IS(rt0.c0))  WHEN TRIM(DISTINCT rt0.c1) THEN ((rt1.c0)==(rt1.c2)) END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE ((t0.c1)IS(rt0.c0))  WHEN TRIM(DISTINCT rt0.c1) THEN ((rt1.c0)==(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1)IS(rt0.c0))  WHEN TRIM(DISTINCT rt0.c1) THEN ((rt1.c0)==(rt1.c2)) END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE ((t0.c1)IS(rt0.c0))  WHEN TRIM(DISTINCT rt0.c1) THEN ((rt1.c0)==(rt1.c2)) END);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE ((((rt0.c1)AND(rt0.c1)))OR(t0.c2))  WHEN ((t0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)=(t0.c0)) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c1)AND(rt0.c1)))OR(t0.c2))  WHEN ((t0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)==(t0.c0)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE ((((rt0.c1)AND(rt0.c1)))OR(t0.c2))  WHEN ((t0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)=(t0.c0)) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c1)AND(rt0.c1)))OR(t0.c2))  WHEN ((t0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)==(t0.c0)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE ((((rt0.c1)AND(rt0.c1)))OR(t0.c2))  WHEN ((t0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)=(t0.c0)) END) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (0Xffffffffbe064154);
SELECT SUM(count) FROM (SELECT ((0Xffffffffbe064154) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0Xffffffffbe064154);
SELECT SUM(count) FROM (SELECT ((0Xffffffffbe064154) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0Xffffffffbe064154);
SELECT * FROM rt0 CROSS JOIN t0 ON (((rt1.c0)) NOT BETWEEN (((rt1.c2 IN ()))) AND ((((((rt0.c0)AND(rt0.c1)))OR(t0.c1))))) INNER JOIN rt1 ON (~ (CASE rt1.c2  WHEN '' THEN t0.c1 ELSE rt0.c2 END)) WHERE (CASE WHEN t0.c0 THEN t0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 THEN t0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((rt1.c0)) NOT BETWEEN (((rt1.c2 IN ()))) AND ((((((rt0.c0)AND(rt0.c1)))OR(t0.c1))))) INNER JOIN rt1 ON (~ (CASE rt1.c2  WHEN '' THEN t0.c1 ELSE rt0.c2 END)));
SELECT * FROM rt0 CROSS JOIN t0 ON (((rt1.c0)) NOT BETWEEN (((rt1.c2 IN ()))) AND ((((((rt0.c0)AND(rt0.c1)))OR(t0.c1))))) INNER JOIN rt1 ON (~ (CASE rt1.c2  WHEN '' THEN t0.c1 ELSE rt0.c2 END)) WHERE (CASE WHEN t0.c0 THEN t0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 THEN t0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((rt1.c0)) NOT BETWEEN (((rt1.c2 IN ()))) AND ((((((rt0.c0)AND(rt0.c1)))OR(t0.c1))))) INNER JOIN rt1 ON (~ (CASE rt1.c2  WHEN '' THEN t0.c1 ELSE rt0.c2 END)));
SELECT * FROM rt0 CROSS JOIN t0 ON (((rt1.c0)) NOT BETWEEN (((rt1.c2 IN ()))) AND ((((((rt0.c0)AND(rt0.c1)))OR(t0.c1))))) INNER JOIN rt1 ON (~ (CASE rt1.c2  WHEN '' THEN t0.c1 ELSE rt0.c2 END)) WHERE (CASE WHEN t0.c0 THEN t0.c2 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))*(((((((((-1871122928)AND(rt0.c1)))AND(rt0.c2)))AND(rt1.c1)))AND(0.8396426661130812))))) ORDER BY LTRIM(rt0.c0, (('4') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))*(((((((((-1871122928)AND(rt0.c1)))AND(rt0.c2)))AND(rt1.c1)))AND(0.8396426661130812))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY LTRIM(rt0.c0, (('4') IS FALSE)));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))*(((((((((-1871122928)AND(rt0.c1)))AND(rt0.c2)))AND(rt1.c1)))AND(0.8396426661130812))))) ORDER BY LTRIM(rt0.c0, (('4') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))*(((((((((-1871122928)AND(rt0.c1)))AND(rt0.c2)))AND(rt1.c1)))AND(0.8396426661130812))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY LTRIM(rt0.c0, (('4') IS FALSE)));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))*(((((((((-1871122928)AND(rt0.c1)))AND(rt0.c2)))AND(rt1.c1)))AND(0.8396426661130812))))) ORDER BY LTRIM(rt0.c0, (('4') IS FALSE));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (0Xfffffffffd99163e) ORDER BY ABS(CAST(rt0.c1 AS BLOB))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xfffffffffd99163e) IS TRUE)  as count FROM rt0, rt1 ORDER BY ABS(CAST(rt0.c1 AS BLOB))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (0Xfffffffffd99163e) ORDER BY ABS(CAST(rt0.c1 AS BLOB))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xfffffffffd99163e) IS TRUE)  as count FROM rt0, rt1 ORDER BY ABS(CAST(rt0.c1 AS BLOB))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (0Xfffffffffd99163e) ORDER BY ABS(CAST(rt0.c1 AS BLOB))  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE ((((rt1.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((((rt0.c1)>(rt1.c0)), NULL, (NOT (rt0.c0)))) AND ((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)), (+ (rt1.c2)), rt1.c0 COLLATE BINARY)))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((((rt0.c1)>(rt1.c0)), NULL, (NOT (rt0.c0)))) AND ((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)), (+ (rt1.c2)), rt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c2  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((((rt0.c1)>(rt1.c0)), NULL, (NOT (rt0.c0)))) AND ((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)), (+ (rt1.c2)), rt1.c0 COLLATE BINARY)))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((((rt0.c1)>(rt1.c0)), NULL, (NOT (rt0.c0)))) AND ((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)), (+ (rt1.c2)), rt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c2  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((((rt0.c1)>(rt1.c0)), NULL, (NOT (rt0.c0)))) AND ((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)), (+ (rt1.c2)), rt1.c0 COLLATE BINARY)))) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((t0.c1) IS TRUE))&(694212158)) WHERE (CASE ((rt1.c2)/(rt1.c0))  WHEN '1031090501' THEN (((t0.c0, rt1.c2, t0.c0)) BETWEEN ((rt1.c1, t0.c1, rt1.c2)) AND ((rt1.c0, t0.c1, rt1.c2))) ELSE ((((((((t0.c0)AND(rt1.c0)))AND(rt1.c0)))AND(t0.c1)))OR(14284399)) END) ORDER BY (- (json_remove(t0.c0, t0.c0))), (((t0.c1, rt1.c1, rt1.c2)) BETWEEN ((load_extension(rt1.c2, t0.c1), ((((((((t0.c1)OR(x'')))AND(t0.c1)))OR(rt1.c1)))AND(t0.c2)), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) AND ((NULL, rt1.c2 COLLATE RTRIM, '279482148'))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)/(rt1.c0))  WHEN '1031090501' THEN (((t0.c0, rt1.c2, t0.c0)) BETWEEN ((rt1.c1, t0.c1, rt1.c2)) AND ((rt1.c0, t0.c1, rt1.c2))) ELSE ((((((((t0.c0)AND(rt1.c0)))AND(rt1.c0)))AND(t0.c1)))OR(14284399)) END) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((((t0.c1) IS TRUE))&(694212158)) ORDER BY (- (json_remove(t0.c0, t0.c0))), (((t0.c1, rt1.c1, rt1.c2)) BETWEEN ((load_extension(rt1.c2, t0.c1), ((((((((t0.c1)OR(x'')))AND(t0.c1)))OR(rt1.c1)))AND(t0.c2)), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) AND ((NULL, rt1.c2 COLLATE RTRIM, '279482148'))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((t0.c1) IS TRUE))&(694212158)) WHERE (CASE ((rt1.c2)/(rt1.c0))  WHEN '1031090501' THEN (((t0.c0, rt1.c2, t0.c0)) BETWEEN ((rt1.c1, t0.c1, rt1.c2)) AND ((rt1.c0, t0.c1, rt1.c2))) ELSE ((((((((t0.c0)AND(rt1.c0)))AND(rt1.c0)))AND(t0.c1)))OR(14284399)) END) ORDER BY (- (json_remove(t0.c0, t0.c0))), (((t0.c1, rt1.c1, rt1.c2)) BETWEEN ((load_extension(rt1.c2, t0.c1), ((((((((t0.c1)OR(x'')))AND(t0.c1)))OR(rt1.c1)))AND(t0.c2)), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) AND ((NULL, rt1.c2 COLLATE RTRIM, '279482148'))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)/(rt1.c0))  WHEN '1031090501' THEN (((t0.c0, rt1.c2, t0.c0)) BETWEEN ((rt1.c1, t0.c1, rt1.c2)) AND ((rt1.c0, t0.c1, rt1.c2))) ELSE ((((((((t0.c0)AND(rt1.c0)))AND(rt1.c0)))AND(t0.c1)))OR(14284399)) END) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((((t0.c1) IS TRUE))&(694212158)) ORDER BY (- (json_remove(t0.c0, t0.c0))), (((t0.c1, rt1.c1, rt1.c2)) BETWEEN ((load_extension(rt1.c2, t0.c1), ((((((((t0.c1)OR(x'')))AND(t0.c1)))OR(rt1.c1)))AND(t0.c2)), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) AND ((NULL, rt1.c2 COLLATE RTRIM, '279482148'))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((t0.c1) IS TRUE))&(694212158)) WHERE (CASE ((rt1.c2)/(rt1.c0))  WHEN '1031090501' THEN (((t0.c0, rt1.c2, t0.c0)) BETWEEN ((rt1.c1, t0.c1, rt1.c2)) AND ((rt1.c0, t0.c1, rt1.c2))) ELSE ((((((((t0.c0)AND(rt1.c0)))AND(rt1.c0)))AND(t0.c1)))OR(14284399)) END) ORDER BY (- (json_remove(t0.c0, t0.c0))), (((t0.c1, rt1.c1, rt1.c2)) BETWEEN ((load_extension(rt1.c2, t0.c1), ((((((((t0.c1)OR(x'')))AND(t0.c1)))OR(rt1.c1)))AND(t0.c2)), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) AND ((NULL, rt1.c2 COLLATE RTRIM, '279482148'))) ASC  NULLS LAST;
SELECT * FROM t0, rt1, rt0 WHERE (t0.c0) ORDER BY (((- (rt1.c0)))-(TRIM(x''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt1, rt0 NOT INDEXED ORDER BY (((- (rt1.c0)))-(TRIM(x''))) DESC  NULLS FIRST);
SELECT * FROM t0, rt1, rt0 WHERE (t0.c0) ORDER BY (((- (rt1.c0)))-(TRIM(x''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt1, rt0 NOT INDEXED ORDER BY (((- (rt1.c0)))-(TRIM(x''))) DESC  NULLS FIRST);
SELECT * FROM t0, rt1, rt0 WHERE (t0.c0) ORDER BY (((- (rt1.c0)))-(TRIM(x''))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (((rt1.c0, '176920944', rt1.c1)) BETWEEN ((CASE WHEN rt1.c1 THEN rt1.c2 WHEN t0.c0 THEN rt1.c1 WHEN t0.c0 THEN t0.c1 ELSE rt1.c1 END, (((rt1.c2))<=((t0.c2))), CAST(rt1.c2 AS INTEGER))) AND (((- (rt1.c1)), ((((x'74ba')OR(t0.c1)))AND(t0.c2)), 0.9715101491470932))) WHERE ((((((rt1.c1 IN (t0.c2)))OR(((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND(t0.c2)))))OR(((t0.c0)GLOB(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1 IN (t0.c2)))OR(((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND(t0.c2)))))OR(((t0.c0)GLOB(rt1.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON (((rt1.c0, '176920944', rt1.c1)) BETWEEN ((CASE WHEN rt1.c1 THEN rt1.c2 WHEN t0.c0 THEN rt1.c1 WHEN t0.c0 THEN t0.c1 ELSE rt1.c1 END, (((rt1.c2))<=((t0.c2))), CAST(rt1.c2 AS INTEGER))) AND (((- (rt1.c1)), ((((x'74ba')OR(t0.c1)))AND(t0.c2)), 0.9715101491470932))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (((rt1.c0, '176920944', rt1.c1)) BETWEEN ((CASE WHEN rt1.c1 THEN rt1.c2 WHEN t0.c0 THEN rt1.c1 WHEN t0.c0 THEN t0.c1 ELSE rt1.c1 END, (((rt1.c2))<=((t0.c2))), CAST(rt1.c2 AS INTEGER))) AND (((- (rt1.c1)), ((((x'74ba')OR(t0.c1)))AND(t0.c2)), 0.9715101491470932))) WHERE ((((((rt1.c1 IN (t0.c2)))OR(((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND(t0.c2)))))OR(((t0.c0)GLOB(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1 IN (t0.c2)))OR(((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND(t0.c2)))))OR(((t0.c0)GLOB(rt1.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON (((rt1.c0, '176920944', rt1.c1)) BETWEEN ((CASE WHEN rt1.c1 THEN rt1.c2 WHEN t0.c0 THEN rt1.c1 WHEN t0.c0 THEN t0.c1 ELSE rt1.c1 END, (((rt1.c2))<=((t0.c2))), CAST(rt1.c2 AS INTEGER))) AND (((- (rt1.c1)), ((((x'74ba')OR(t0.c1)))AND(t0.c2)), 0.9715101491470932))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (((rt1.c0, '176920944', rt1.c1)) BETWEEN ((CASE WHEN rt1.c1 THEN rt1.c2 WHEN t0.c0 THEN rt1.c1 WHEN t0.c0 THEN t0.c1 ELSE rt1.c1 END, (((rt1.c2))<=((t0.c2))), CAST(rt1.c2 AS INTEGER))) AND (((- (rt1.c1)), ((((x'74ba')OR(t0.c1)))AND(t0.c2)), 0.9715101491470932))) WHERE ((((((rt1.c1 IN (t0.c2)))OR(((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND(t0.c2)))))OR(((t0.c0)GLOB(rt1.c2)))));
SELECT * FROM rt1, t0 WHERE (CASE (t0.c0 IN ())  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN CAST(rt1.c2 AS REAL) WHEN rt1.c1 THEN CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END WHEN (NOT (rt1.c0)) THEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) END) ORDER BY (~ (t0.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN ())  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN CAST(rt1.c2 AS REAL) WHEN rt1.c1 THEN CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END WHEN (NOT (rt1.c0)) THEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) END) IS TRUE)  as count FROM rt1, t0 ORDER BY (~ (t0.c1)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM rt1, t0 WHERE (CASE (t0.c0 IN ())  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN CAST(rt1.c2 AS REAL) WHEN rt1.c1 THEN CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END WHEN (NOT (rt1.c0)) THEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) END) ORDER BY (~ (t0.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN ())  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN CAST(rt1.c2 AS REAL) WHEN rt1.c1 THEN CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END WHEN (NOT (rt1.c0)) THEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) END) IS TRUE)  as count FROM rt1, t0 ORDER BY (~ (t0.c1)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM rt1, t0 WHERE (CASE (t0.c0 IN ())  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN CAST(rt1.c2 AS REAL) WHEN rt1.c1 THEN CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END WHEN (NOT (rt1.c0)) THEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) END) ORDER BY (~ (t0.c1)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY CAST(((x'')AND(t0.c2)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY CAST(((x'')AND(t0.c2)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY CAST(((x'')AND(t0.c2)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY CAST(((x'')AND(t0.c2)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY CAST(((x'')AND(t0.c2)) AS REAL) DESC;
SELECT ALL * FROM t0, rt0 LEFT OUTER JOIN rt1 ON (((((t0.c2))<((t0.c0))))>>(json_type(rt0.c1))) WHERE ('J-');
SELECT SUM(count) FROM (SELECT (('J-') IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON (((((t0.c2))<((t0.c0))))>>(json_type(rt0.c1))));
SELECT ALL * FROM t0, rt0 LEFT OUTER JOIN rt1 ON (((((t0.c2))<((t0.c0))))>>(json_type(rt0.c1))) WHERE ('J-');
SELECT SUM(count) FROM (SELECT (('J-') IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON (((((t0.c2))<((t0.c0))))>>(json_type(rt0.c1))));
SELECT ALL * FROM t0, rt0 LEFT OUTER JOIN rt1 ON (((((t0.c2))<((t0.c0))))>>(json_type(rt0.c1))) WHERE ('J-');
SELECT ALL * FROM t0, rt0 NATURAL JOIN rt1 WHERE (CASE ((rt0.c2)<=(rt1.c1))  WHEN (((rt0.c1)) NOT BETWEEN ((t0.c2)) AND (('-1412833231'))) THEN rt0.c0 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c2 COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN ']7⟰<2OQS6' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY (- (CAST(rt1.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)<=(rt1.c1))  WHEN (((rt0.c1)) NOT BETWEEN ((t0.c2)) AND (('-1412833231'))) THEN rt0.c0 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c2 COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN ']7⟰<2OQS6' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN rt1 ORDER BY (- (CAST(rt1.c0 AS REAL))) DESC);
SELECT ALL * FROM t0, rt0 NATURAL JOIN rt1 WHERE (CASE ((rt0.c2)<=(rt1.c1))  WHEN (((rt0.c1)) NOT BETWEEN ((t0.c2)) AND (('-1412833231'))) THEN rt0.c0 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c2 COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN ']7⟰<2OQS6' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY (- (CAST(rt1.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)<=(rt1.c1))  WHEN (((rt0.c1)) NOT BETWEEN ((t0.c2)) AND (('-1412833231'))) THEN rt0.c0 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c2 COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN ']7⟰<2OQS6' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN rt1 ORDER BY (- (CAST(rt1.c0 AS REAL))) DESC);
SELECT ALL * FROM t0, rt0 NATURAL JOIN rt1 WHERE (CASE ((rt0.c2)<=(rt1.c1))  WHEN (((rt0.c1)) NOT BETWEEN ((t0.c2)) AND (('-1412833231'))) THEN rt0.c0 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c2 COLLATE BINARY THEN CASE t0.c1  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN ']7⟰<2OQS6' WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY (- (CAST(rt1.c0 AS REAL))) DESC;
SELECT ALL * FROM rt0, t0 WHERE ((~ (rt0.c1 COLLATE NOCASE))) ORDER BY (((t0.c1)*(t0.c1)) IN (((t0.c1) ISNULL))), CAST((t0.c0 IN ()) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((t0.c1)*(t0.c1)) IN (((t0.c1) ISNULL))), CAST((t0.c0 IN ()) AS INTEGER) DESC);
SELECT ALL * FROM rt0, t0 WHERE ((~ (rt0.c1 COLLATE NOCASE))) ORDER BY (((t0.c1)*(t0.c1)) IN (((t0.c1) ISNULL))), CAST((t0.c0 IN ()) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((t0.c1)*(t0.c1)) IN (((t0.c1) ISNULL))), CAST((t0.c0 IN ()) AS INTEGER) DESC);
SELECT ALL * FROM rt0, t0 WHERE ((~ (rt0.c1 COLLATE NOCASE))) ORDER BY (((t0.c1)*(t0.c1)) IN (((t0.c1) ISNULL))), CAST((t0.c0 IN ()) AS INTEGER) DESC;
SELECT ALL * FROM rt1, rt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((((t0.c1)OR(t0.c2)))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c1 END)))) ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST, CASE WHEN CASE WHEN t0.c1 THEN rt0.c2 END THEN CASE rt1.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN ((((t0.c1)OR(t0.c2)))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c1 END)))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST, CASE WHEN CASE WHEN t0.c1 THEN rt0.c2 END THEN CASE rt1.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END END);
SELECT ALL * FROM rt1, rt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((((t0.c1)OR(t0.c2)))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c1 END)))) ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST, CASE WHEN CASE WHEN t0.c1 THEN rt0.c2 END THEN CASE rt1.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN ((((t0.c1)OR(t0.c2)))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c1 END)))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST, CASE WHEN CASE WHEN t0.c1 THEN rt0.c2 END THEN CASE rt1.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END END);
SELECT ALL * FROM rt1, rt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((((t0.c1)OR(t0.c2)))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c1 END)))) ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST, CASE WHEN CASE WHEN t0.c1 THEN rt0.c2 END THEN CASE rt1.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END END;
SELECT ALL * FROM rt1, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ('');
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c0)))) IS FALSE) WHERE (((CAST(0Xfffffffffd4c7ad8 AS NUMERIC))*(CAST(t0.c2 AS TEXT)))) ORDER BY (json(rt0.c1) IN (x'c11e')) ASC  NULLS FIRST, highlight('_2', ((rt0.c1)>=(rt0.c0)), ((rt0.c1)>(rt0.c0)), ((rt0.c2)&(x'a620')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0Xfffffffffd4c7ad8 AS NUMERIC))*(CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c0)))) IS FALSE) ORDER BY (json(rt0.c1) IN (x'c11e')) ASC  NULLS FIRST, highlight('_2', ((rt0.c1)>=(rt0.c0)), ((rt0.c1)>(rt0.c0)), ((rt0.c2)&(x'a620')))  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c0)))) IS FALSE) WHERE (((CAST(0Xfffffffffd4c7ad8 AS NUMERIC))*(CAST(t0.c2 AS TEXT)))) ORDER BY (json(rt0.c1) IN (x'c11e')) ASC  NULLS FIRST, highlight('_2', ((rt0.c1)>=(rt0.c0)), ((rt0.c1)>(rt0.c0)), ((rt0.c2)&(x'a620')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0Xfffffffffd4c7ad8 AS NUMERIC))*(CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c0)))) IS FALSE) ORDER BY (json(rt0.c1) IN (x'c11e')) ASC  NULLS FIRST, highlight('_2', ((rt0.c1)>=(rt0.c0)), ((rt0.c1)>(rt0.c0)), ((rt0.c2)&(x'a620')))  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c0)))) IS FALSE) WHERE (((CAST(0Xfffffffffd4c7ad8 AS NUMERIC))*(CAST(t0.c2 AS TEXT)))) ORDER BY (json(rt0.c1) IN (x'c11e')) ASC  NULLS FIRST, highlight('_2', ((rt0.c1)>=(rt0.c0)), ((rt0.c1)>(rt0.c0)), ((rt0.c2)&(x'a620')))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((rt0.c1) BETWEEN ((~ (rt1.c0))) AND (((t0.c0) NOT BETWEEN (x'0a44e429') AND (rt1.c2)))) WHERE (((((((724225)OR(t0.c0)))AND(rt1.c0)))IS NOT(1205994267)));
SELECT SUM(count) FROM (SELECT ALL ((((((((724225)OR(t0.c0)))AND(rt1.c0)))IS NOT(1205994267))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((rt0.c1) BETWEEN ((~ (rt1.c0))) AND (((t0.c0) NOT BETWEEN (x'0a44e429') AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((rt0.c1) BETWEEN ((~ (rt1.c0))) AND (((t0.c0) NOT BETWEEN (x'0a44e429') AND (rt1.c2)))) WHERE (((((((724225)OR(t0.c0)))AND(rt1.c0)))IS NOT(1205994267)));
SELECT SUM(count) FROM (SELECT ALL ((((((((724225)OR(t0.c0)))AND(rt1.c0)))IS NOT(1205994267))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((rt0.c1) BETWEEN ((~ (rt1.c0))) AND (((t0.c0) NOT BETWEEN (x'0a44e429') AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN rt1 ON ((rt0.c1) BETWEEN ((~ (rt1.c0))) AND (((t0.c0) NOT BETWEEN (x'0a44e429') AND (rt1.c2)))) WHERE (((((((724225)OR(t0.c0)))AND(rt1.c0)))IS NOT(1205994267)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON '1475624819' WHERE ((((rt0.c0)IS(t0.c2)) IN ((((rt0.c1, t0.c1, rt0.c1))==((rt0.c0, t0.c2, rt0.c1))), ((((rt0.c1)AND(rt0.c2)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)IS(t0.c2)) IN ((((rt0.c1, t0.c1, rt0.c1))==((rt0.c0, t0.c2, rt0.c1))), ((((rt0.c1)AND(rt0.c2)))OR(t0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON '1475624819');
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON '1475624819' WHERE ((((rt0.c0)IS(t0.c2)) IN ((((rt0.c1, t0.c1, rt0.c1))==((rt0.c0, t0.c2, rt0.c1))), ((((rt0.c1)AND(rt0.c2)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)IS(t0.c2)) IN ((((rt0.c1, t0.c1, rt0.c1))==((rt0.c0, t0.c2, rt0.c1))), ((((rt0.c1)AND(rt0.c2)))OR(t0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON '1475624819');
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON '1475624819' WHERE ((((rt0.c0)IS(t0.c2)) IN ((((rt0.c1, t0.c1, rt0.c1))==((rt0.c0, t0.c2, rt0.c1))), ((((rt0.c1)AND(rt0.c2)))OR(t0.c1)))));
SELECT ALL * FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((rt1.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c2))) IN ()) WHERE (((SQLITE_SOURCE_ID()) BETWEEN (((((rt1.c1)OR(rt0.c2)))AND(rt1.c1))) AND (t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID()) BETWEEN (((((rt1.c1)OR(rt0.c2)))AND(rt1.c1))) AND (t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((rt1.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c2))) IN ()));
SELECT ALL * FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((rt1.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c2))) IN ()) WHERE (((SQLITE_SOURCE_ID()) BETWEEN (((((rt1.c1)OR(rt0.c2)))AND(rt1.c1))) AND (t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID()) BETWEEN (((((rt1.c1)OR(rt0.c2)))AND(rt1.c1))) AND (t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((rt1.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c2))) IN ()));
SELECT ALL * FROM rt0, rt1 FULL OUTER JOIN t0 ON ((((rt1.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c2))) IN ()) WHERE (((SQLITE_SOURCE_ID()) BETWEEN (((((rt1.c1)OR(rt0.c2)))AND(rt1.c1))) AND (t0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR((~ (rt0.c0)))))OR(((rt0.c2)=(0.3225574321148702)))))OR('-2103164466')))OR(((rt0.c2)/(rt0.c2))))) ORDER BY ((((((((((rt0.c0) NOTNULL))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)))AND(LTRIM(rt0.c1))))OR(rt0.c1 COLLATE RTRIM)))OR((NOT (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt0.c2)))OR((~ (rt0.c0)))))OR(((rt0.c2)=(0.3225574321148702)))))OR('-2103164466')))OR(((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0) NOTNULL))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)))AND(LTRIM(rt0.c1))))OR(rt0.c1 COLLATE RTRIM)))OR((NOT (rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR((~ (rt0.c0)))))OR(((rt0.c2)=(0.3225574321148702)))))OR('-2103164466')))OR(((rt0.c2)/(rt0.c2))))) ORDER BY ((((((((((rt0.c0) NOTNULL))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)))AND(LTRIM(rt0.c1))))OR(rt0.c1 COLLATE RTRIM)))OR((NOT (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt0.c2)))OR((~ (rt0.c0)))))OR(((rt0.c2)=(0.3225574321148702)))))OR('-2103164466')))OR(((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0) NOTNULL))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)))AND(LTRIM(rt0.c1))))OR(rt0.c1 COLLATE RTRIM)))OR((NOT (rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR((~ (rt0.c0)))))OR(((rt0.c2)=(0.3225574321148702)))))OR('-2103164466')))OR(((rt0.c2)/(rt0.c2))))) ORDER BY ((((((((((rt0.c0) NOTNULL))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)))AND(LTRIM(rt0.c1))))OR(rt0.c1 COLLATE RTRIM)))OR((NOT (rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (LIKE((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c1))), x'7067', 's')) ORDER BY rt1.c2 DESC  NULLS LAST, (NOT ((rt0.c2 IN ())))  NULLS LAST, ((((((((UPPER(DISTINCT rt0.c2))AND(((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(x'')))AND(((rt0.c2) IS TRUE))))OR((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c1))), x'7067', 's')) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c2 DESC  NULLS LAST, (NOT ((rt0.c2 IN ())))  NULLS LAST, ((((((((UPPER(DISTINCT rt0.c2))AND(((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(x'')))AND(((rt0.c2) IS TRUE))))OR((rt0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (LIKE((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c1))), x'7067', 's')) ORDER BY rt1.c2 DESC  NULLS LAST, (NOT ((rt0.c2 IN ())))  NULLS LAST, ((((((((UPPER(DISTINCT rt0.c2))AND(((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(x'')))AND(((rt0.c2) IS TRUE))))OR((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c1))), x'7067', 's')) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c2 DESC  NULLS LAST, (NOT ((rt0.c2 IN ())))  NULLS LAST, ((((((((UPPER(DISTINCT rt0.c2))AND(((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(x'')))AND(((rt0.c2) IS TRUE))))OR((rt0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (LIKE((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c1))), x'7067', 's')) ORDER BY rt1.c2 DESC  NULLS LAST, (NOT ((rt0.c2 IN ())))  NULLS LAST, ((((((((UPPER(DISTINCT rt0.c2))AND(((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(x'')))AND(((rt0.c2) IS TRUE))))OR((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((~ (t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c1))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c1))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (t0.c1)));
SELECT COUNT(*) FROM t0 WHERE (((t0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2 IN ()) IN ()));
SELECT COUNT(*) FROM rt1, rt0 WHERE (ABS(DISTINCT rt0.c1)) ORDER BY CAST((+ (rt0.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt0.c1)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((+ (rt0.c1)) AS REAL) DESC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (ABS(DISTINCT rt0.c1)) ORDER BY CAST((+ (rt0.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt0.c1)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((+ (rt0.c1)) AS REAL) DESC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (ABS(DISTINCT rt0.c1)) ORDER BY CAST((+ (rt0.c1)) AS REAL) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c0))) ISNULL)) ORDER BY ((((((t0.c1) ISNULL))AND((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, '', NULL))))))OR(((t0.c0)>>(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1) ISNULL))AND((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, '', NULL))))))OR(((t0.c0)>>(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c0))) ISNULL)) ORDER BY ((((((t0.c1) ISNULL))AND((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, '', NULL))))))OR(((t0.c0)>>(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1) ISNULL))AND((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, '', NULL))))))OR(((t0.c0)>>(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c0))) ISNULL)) ORDER BY ((((((t0.c1) ISNULL))AND((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, '', NULL))))))OR(((t0.c0)>>(t0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((- (rt1.c1))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END) AND (rt1.c0))) ORDER BY CASE rt1.c2  WHEN (NOT (rt1.c2)) THEN rt1.c1 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END) AND (rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c2  WHEN (NOT (rt1.c2)) THEN rt1.c1 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt1 WHERE ((((- (rt1.c1))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END) AND (rt1.c0))) ORDER BY CASE rt1.c2  WHEN (NOT (rt1.c2)) THEN rt1.c1 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END) AND (rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c2  WHEN (NOT (rt1.c2)) THEN rt1.c1 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt1 WHERE ((((- (rt1.c1))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END) AND (rt1.c0))) ORDER BY CASE rt1.c2  WHEN (NOT (rt1.c2)) THEN rt1.c1 COLLATE NOCASE END;
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c1 IN ()))<(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))<(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c1 IN ()))<(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))<(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c1 IN ()))<(rt1.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((((rt0.c0)<<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)<<(rt0.c2)) IN ())) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((((rt0.c0)<<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)<<(rt0.c2)) IN ())) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((((rt0.c0)<<(rt0.c2)) IN ()));
SELECT * FROM t0, rt1 WHERE (rt1.c1) ORDER BY ((COALESCE(t0.c2, rt1.c2))-(((((rt1.c2)AND(t0.c1)))AND(rt1.c0)))), ((((((t0.c1)%(t0.c0)))AND(CASE WHEN rt1.c2 THEN t0.c0 END)))OR(ABS(rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0, rt1 ORDER BY ((COALESCE(t0.c2, rt1.c2))-(((((rt1.c2)AND(t0.c1)))AND(rt1.c0)))), ((((((t0.c1)%(t0.c0)))AND(CASE WHEN rt1.c2 THEN t0.c0 END)))OR(ABS(rt1.c1)))  NULLS LAST);
SELECT * FROM t0, rt1 WHERE (rt1.c1) ORDER BY ((COALESCE(t0.c2, rt1.c2))-(((((rt1.c2)AND(t0.c1)))AND(rt1.c0)))), ((((((t0.c1)%(t0.c0)))AND(CASE WHEN rt1.c2 THEN t0.c0 END)))OR(ABS(rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0, rt1 ORDER BY ((COALESCE(t0.c2, rt1.c2))-(((((rt1.c2)AND(t0.c1)))AND(rt1.c0)))), ((((((t0.c1)%(t0.c0)))AND(CASE WHEN rt1.c2 THEN t0.c0 END)))OR(ABS(rt1.c1)))  NULLS LAST);
SELECT * FROM t0, rt1 WHERE (rt1.c1) ORDER BY ((COALESCE(t0.c2, rt1.c2))-(((((rt1.c2)AND(t0.c1)))AND(rt1.c0)))), ((((((t0.c1)%(t0.c0)))AND(CASE WHEN rt1.c2 THEN t0.c0 END)))OR(ABS(rt1.c1)))  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 NATURAL JOIN rt0 WHERE (((((rt0.c1)AND(rt1.c1))) BETWEEN ((t0.c0 IN ())) AND (((rt0.c1)<(rt0.c2))))) ORDER BY ((NULL) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(rt1.c1))) BETWEEN ((t0.c0 IN ())) AND (((rt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM rt1, t0 NATURAL JOIN rt0 ORDER BY ((NULL) IS TRUE));
SELECT COUNT(*) FROM rt1, t0 NATURAL JOIN rt0 WHERE (((((rt0.c1)AND(rt1.c1))) BETWEEN ((t0.c0 IN ())) AND (((rt0.c1)<(rt0.c2))))) ORDER BY ((NULL) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(rt1.c1))) BETWEEN ((t0.c0 IN ())) AND (((rt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM rt1, t0 NATURAL JOIN rt0 ORDER BY ((NULL) IS TRUE));
SELECT COUNT(*) FROM rt1, t0 NATURAL JOIN rt0 WHERE (((((rt0.c1)AND(rt1.c1))) BETWEEN ((t0.c0 IN ())) AND (((rt0.c1)<(rt0.c2))))) ORDER BY ((NULL) IS TRUE);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (NULL);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)<<(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)<<(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)<<(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)<<(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)<<(rt1.c2)) IN ()));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((((((((((0.24975883863801918)AND(t0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))) NOT NULL) CROSS JOIN rt1 ON ((CAST(t0.c2 AS INTEGER))GLOB(LIKELY(DISTINCT rt0.c2))) WHERE (((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL)) ORDER BY rt0.c2 DESC, (((((((rt0.c0))!=((rt0.c2))))AND((~ (rt1.c0)))))AND(SUBSTR(rt0.c2, rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((((((((0.24975883863801918)AND(t0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))) NOT NULL) CROSS JOIN rt1 ON ((CAST(t0.c2 AS INTEGER))GLOB(LIKELY(DISTINCT rt0.c2))) ORDER BY rt0.c2 DESC, (((((((rt0.c0))<>((rt0.c2))))AND((~ (rt1.c0)))))AND(SUBSTR(rt0.c2, rt1.c2))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((((((((((0.24975883863801918)AND(t0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))) NOT NULL) CROSS JOIN rt1 ON ((CAST(t0.c2 AS INTEGER))GLOB(LIKELY(DISTINCT rt0.c2))) WHERE (((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL)) ORDER BY rt0.c2 DESC, (((((((rt0.c0))!=((rt0.c2))))AND((~ (rt1.c0)))))AND(SUBSTR(rt0.c2, rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((((((((0.24975883863801918)AND(t0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))) NOT NULL) CROSS JOIN rt1 ON ((CAST(t0.c2 AS INTEGER))GLOB(LIKELY(DISTINCT rt0.c2))) ORDER BY rt0.c2 DESC, (((((((rt0.c0))<>((rt0.c2))))AND((~ (rt1.c0)))))AND(SUBSTR(rt0.c2, rt1.c2))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((t0.c2, '878058753', t0.c2)) NOT BETWEEN ((t0.c2, rt0.c1, t0.c1)) AND ((t0.c0, '1080810464', t0.c2))))LIKE(((rt0.c1)<(rt0.c1))))) ORDER BY ((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0))) IS TRUE) DESC  NULLS LAST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c0)OR(t0.c2)))AND(rt0.c0))) AND (((t0.c2)<(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, '878058753', t0.c2)) NOT BETWEEN ((t0.c2, rt0.c1, t0.c1)) AND ((t0.c0, '1080810464', t0.c2))))LIKE(((rt0.c1)<(rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0))) IS TRUE) DESC  NULLS LAST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c0)OR(t0.c2)))AND(rt0.c0))) AND (((t0.c2)<(t0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((t0.c2, '878058753', t0.c2)) NOT BETWEEN ((t0.c2, rt0.c1, t0.c1)) AND ((t0.c0, '1080810464', t0.c2))))LIKE(((rt0.c1)<(rt0.c1))))) ORDER BY ((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0))) IS TRUE) DESC  NULLS LAST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c0)OR(t0.c2)))AND(rt0.c0))) AND (((t0.c2)<(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, '878058753', t0.c2)) NOT BETWEEN ((t0.c2, rt0.c1, t0.c1)) AND ((t0.c0, '1080810464', t0.c2))))LIKE(((rt0.c1)<(rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0))) IS TRUE) DESC  NULLS LAST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c0)OR(t0.c2)))AND(rt0.c0))) AND (((t0.c2)<(t0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((((t0.c2, '878058753', t0.c2)) NOT BETWEEN ((t0.c2, rt0.c1, t0.c1)) AND ((t0.c0, '1080810464', t0.c2))))LIKE(((rt0.c1)<(rt0.c1))))) ORDER BY ((((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0))) IS TRUE) DESC  NULLS LAST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((rt0.c0)OR(t0.c2)))AND(rt0.c0))) AND (((t0.c2)<(t0.c1))))  NULLS LAST;
SELECT * FROM t0 NOT INDEXED WHERE (x'afdc2ae7') ORDER BY 154749033 DESC;
SELECT SUM(count) FROM (SELECT ((x'afdc2ae7') IS TRUE)  as count FROM t0 ORDER BY 154749033 DESC);
SELECT * FROM t0 NOT INDEXED WHERE (x'afdc2ae7') ORDER BY 154749033 DESC;
SELECT SUM(count) FROM (SELECT ((x'afdc2ae7') IS TRUE)  as count FROM t0 ORDER BY 154749033 DESC);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((('-316932796')>(NULL)));
SELECT SUM(count) FROM (SELECT (((('-316932796')>(NULL))) IS TRUE)  as count FROM rt0, rt1, t0 NOT INDEXED);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((('-316932796')>(NULL)));
SELECT SUM(count) FROM (SELECT (((('-316932796')>(NULL))) IS TRUE)  as count FROM rt0, rt1, t0 NOT INDEXED);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((('-316932796')>(NULL)));
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)OR(NULL)))AND(UPPER(DISTINCT rt1.c0))) CROSS JOIN t0 ON 'OjKGK{QjW' WHERE (x'') ORDER BY CASE rt0.c1  WHEN rt1.c2 THEN t0.c1 END COLLATE NOCASE DESC, json_type(t0.c0) COLLATE RTRIM DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)OR(NULL)))AND(UPPER(DISTINCT rt1.c0))) CROSS JOIN t0 ON 'OjKGK{QjW' ORDER BY CASE rt0.c1  WHEN rt1.c2 THEN t0.c1 END COLLATE NOCASE DESC, json_type(t0.c0) COLLATE RTRIM DESC  NULLS FIRST, NULL);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)OR(NULL)))AND(UPPER(DISTINCT rt1.c0))) CROSS JOIN t0 ON 'OjKGK{QjW' WHERE (x'') ORDER BY CASE rt0.c1  WHEN rt1.c2 THEN t0.c1 END COLLATE NOCASE DESC, json_type(t0.c0) COLLATE RTRIM DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)OR(NULL)))AND(UPPER(DISTINCT rt1.c0))) CROSS JOIN t0 ON 'OjKGK{QjW' ORDER BY CASE rt0.c1  WHEN rt1.c2 THEN t0.c1 END COLLATE NOCASE DESC, json_type(t0.c0) COLLATE RTRIM DESC  NULLS FIRST, NULL);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)OR(NULL)))AND(UPPER(DISTINCT rt1.c0))) CROSS JOIN t0 ON 'OjKGK{QjW' WHERE (x'') ORDER BY CASE rt0.c1  WHEN rt1.c2 THEN t0.c1 END COLLATE NOCASE DESC, json_type(t0.c0) COLLATE RTRIM DESC  NULLS FIRST, NULL;
SELECT * FROM t0 WHERE (((0.5566998775312186 COLLATE BINARY) IS FALSE)) ORDER BY CASE WHEN '1628599843' THEN t0.c0 WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c1)))AND(t0.c0)) THEN ((('/nI&#[T'))<=((t0.c1))) WHEN (+ (t0.c0)) THEN ((t0.c2)*(t0.c0)) END DESC, CAST((((t0.c0, t0.c2, x'')) NOT BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, t0.c2))) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.5566998775312186 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN '1628599843' THEN t0.c0 WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c1)))AND(t0.c0)) THEN ((('/nI&#[T'))<=((t0.c1))) WHEN (+ (t0.c0)) THEN ((t0.c2)*(t0.c0)) END DESC, CAST((((t0.c0, t0.c2, x'')) NOT BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, t0.c2))) AS REAL) ASC);
SELECT * FROM t0 WHERE (((0.5566998775312186 COLLATE BINARY) IS FALSE)) ORDER BY CASE WHEN '1628599843' THEN t0.c0 WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c1)))AND(t0.c0)) THEN ((('/nI&#[T'))<=((t0.c1))) WHEN (+ (t0.c0)) THEN ((t0.c2)*(t0.c0)) END DESC, CAST((((t0.c0, t0.c2, x'')) NOT BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, t0.c2))) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.5566998775312186 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN '1628599843' THEN t0.c0 WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c1)))AND(t0.c0)) THEN ((('/nI&#[T'))<=((t0.c1))) WHEN (+ (t0.c0)) THEN ((t0.c2)*(t0.c0)) END DESC, CAST((((t0.c0, t0.c2, x'')) NOT BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, t0.c2))) AS REAL) ASC);
SELECT * FROM t0 WHERE (((0.5566998775312186 COLLATE BINARY) IS FALSE)) ORDER BY CASE WHEN '1628599843' THEN t0.c0 WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c1)))AND(t0.c0)) THEN ((('/nI&#[T'))<=((t0.c1))) WHEN (+ (t0.c0)) THEN ((t0.c2)*(t0.c0)) END DESC, CAST((((t0.c0, t0.c2, x'')) NOT BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, t0.c2))) AS REAL) ASC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c1) ORDER BY CASE WHEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END THEN (t0.c0 IN ()) ELSE 0.5705586780563419 COLLATE RTRIM END ASC, CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (1))  WHEN ((((t0.c1)AND(rt0.c1)))AND(t0.c1)) THEN (('NGj9J/-H') ISNULL) ELSE SQLITE_VERSION() END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END THEN (t0.c0 IN ()) ELSE 0.5705586780563419 COLLATE RTRIM END ASC, CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (1))  WHEN ((((t0.c1)AND(rt0.c1)))AND(t0.c1)) THEN (('NGj9J/-H') ISNULL) ELSE SQLITE_VERSION() END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c1) ORDER BY CASE WHEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END THEN (t0.c0 IN ()) ELSE 0.5705586780563419 COLLATE RTRIM END ASC, CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (1))  WHEN ((((t0.c1)AND(rt0.c1)))AND(t0.c1)) THEN (('NGj9J/-H') ISNULL) ELSE SQLITE_VERSION() END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END THEN (t0.c0 IN ()) ELSE 0.5705586780563419 COLLATE RTRIM END ASC, CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (1))  WHEN ((((t0.c1)AND(rt0.c1)))AND(t0.c1)) THEN (('NGj9J/-H') ISNULL) ELSE SQLITE_VERSION() END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c1) ORDER BY CASE WHEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END THEN (t0.c0 IN ()) ELSE 0.5705586780563419 COLLATE RTRIM END ASC, CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (1))  WHEN ((((t0.c1)AND(rt0.c1)))AND(t0.c1)) THEN (('NGj9J/-H') ISNULL) ELSE SQLITE_VERSION() END DESC  NULLS LAST;
SELECT * FROM rt1, t0, rt0 WHERE (((((((((((t0.c1)OR(rt1.c2)))AND(t0.c2)))AND(rt1.c1)))OR(rt0.c1))) NOT BETWEEN ((rt1.c2 IN ())) AND (SQLITE_COMPILEOPTION_USED(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c1)OR(rt1.c2)))AND(t0.c2)))AND(rt1.c1)))OR(rt0.c1))) NOT BETWEEN ((rt1.c2 IN ())) AND (SQLITE_COMPILEOPTION_USED(rt1.c1)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (((((((((((t0.c1)OR(rt1.c2)))AND(t0.c2)))AND(rt1.c1)))OR(rt0.c1))) NOT BETWEEN ((rt1.c2 IN ())) AND (SQLITE_COMPILEOPTION_USED(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c1)OR(rt1.c2)))AND(t0.c2)))AND(rt1.c1)))OR(rt0.c1))) NOT BETWEEN ((rt1.c2 IN ())) AND (SQLITE_COMPILEOPTION_USED(rt1.c1)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (((((((((((t0.c1)OR(rt1.c2)))AND(t0.c2)))AND(rt1.c1)))OR(rt0.c1))) NOT BETWEEN ((rt1.c2 IN ())) AND (SQLITE_COMPILEOPTION_USED(rt1.c1))));
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (((rt0.c0))<>((t0.c2)))  WHEN ((rt0.c2)AND(t0.c2)) THEN CAST(rt0.c2 AS TEXT) ELSE t0.c0 END) ORDER BY (((+ (t0.c2))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0))<>((t0.c2)))  WHEN ((rt0.c2)AND(t0.c2)) THEN CAST(rt0.c2 AS TEXT) ELSE t0.c0 END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((+ (t0.c2))) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (((rt0.c0))<>((t0.c2)))  WHEN ((rt0.c2)AND(t0.c2)) THEN CAST(rt0.c2 AS TEXT) ELSE t0.c0 END) ORDER BY (((+ (t0.c2))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0))<>((t0.c2)))  WHEN ((rt0.c2)AND(t0.c2)) THEN CAST(rt0.c2 AS TEXT) ELSE t0.c0 END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((+ (t0.c2))) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (((rt0.c0))<>((t0.c2)))  WHEN ((rt0.c2)AND(t0.c2)) THEN CAST(rt0.c2 AS TEXT) ELSE t0.c0 END) ORDER BY (((+ (t0.c2))) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 INDEXED BY i12 WHERE (((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) ORDER BY ((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (rt1.c0 COLLATE NOCASE) AND (((rt1.c1)>(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 INDEXED BY i12 ORDER BY ((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (rt1.c0 COLLATE NOCASE) AND (((rt1.c1)>(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 INDEXED BY i12 WHERE (((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) ORDER BY ((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (rt1.c0 COLLATE NOCASE) AND (((rt1.c1)>(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 INDEXED BY i12 ORDER BY ((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (rt1.c0 COLLATE NOCASE) AND (((rt1.c1)>(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((((rt1.c2))<=((rt0.c2))))+(rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))<=((rt0.c2))))+(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((((rt1.c2))<=((rt0.c2))))+(rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))<=((rt0.c2))))+(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((((rt1.c2))<=((rt0.c2))))+(rt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((0.02222012063320944) NOTNULL))>>(rt1.c2 COLLATE BINARY))) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.02222012063320944) NOTNULL))>>(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((0.02222012063320944) NOTNULL))>>(rt1.c2 COLLATE BINARY))) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.02222012063320944) NOTNULL))>>(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((0.02222012063320944) NOTNULL))>>(rt1.c2 COLLATE BINARY))) ORDER BY (NOT (CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2 COLLATE BINARY);
SELECT * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE NOCASE IN (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE NOCASE IN (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (rt0.c2)));
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, t0 WHERE ((+ (((rt0.c2)<<('-316932796')))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)<<('-316932796'))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, t0 WHERE ((+ (((rt0.c2)<<('-316932796')))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)<<('-316932796'))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1 NOT INDEXED, t0 WHERE ((+ (((rt0.c2)<<('-316932796')))));
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE ((((-1121160540, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1) NOTNULL), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), rt0.c0)) AND (((~ (rt0.c1)), (((('638585550')OR(x'2d13')))AND(rt0.c0)), ((rt0.c1)GLOB('B鲒jQ(')))))) ORDER BY rt0.c1, (((((+ (rt0.c1)))AND(((rt0.c2) IS FALSE))))OR(rt0.c2)) DESC, LIKE(CAST(rt0.c1 AS TEXT), '-1395919390') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((-1121160540, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1) NOTNULL), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), rt0.c0)) AND (((~ (rt0.c1)), (((('638585550')OR(x'2d13')))AND(rt0.c0)), ((rt0.c1)GLOB('B鲒jQ(')))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, (((((+ (rt0.c1)))AND(((rt0.c2) IS FALSE))))OR(rt0.c2)) DESC, LIKE(CAST(rt0.c1 AS TEXT), '-1395919390') DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((-1121160540, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1) NOTNULL), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), rt0.c0)) AND (((~ (rt0.c1)), (((('638585550')OR(x'2d13')))AND(rt0.c0)), ((rt0.c1)GLOB('B鲒jQ(')))))) ORDER BY rt0.c1, (((((+ (rt0.c1)))AND(((rt0.c2) IS FALSE))))OR(rt0.c2)) DESC, LIKE(CAST(rt0.c1 AS TEXT), '-1395919390') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((-1121160540, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1) NOTNULL), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), rt0.c0)) AND (((~ (rt0.c1)), (((('638585550')OR(x'2d13')))AND(rt0.c0)), ((rt0.c1)GLOB('B鲒jQ(')))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, (((((+ (rt0.c1)))AND(((rt0.c2) IS FALSE))))OR(rt0.c2)) DESC, LIKE(CAST(rt0.c1 AS TEXT), '-1395919390') DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((-1121160540, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1) NOTNULL), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), rt0.c0)) AND (((~ (rt0.c1)), (((('638585550')OR(x'2d13')))AND(rt0.c0)), ((rt0.c1)GLOB('B鲒jQ(')))))) ORDER BY rt0.c1, (((((+ (rt0.c1)))AND(((rt0.c2) IS FALSE))))OR(rt0.c2)) DESC, LIKE(CAST(rt0.c1 AS TEXT), '-1395919390') DESC  NULLS FIRST;
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((((t0.c0) NOT BETWEEN (rt0.c0) AND (-2.103298838E9)))AND(((0X4675d733)|(t0.c0)))))OR(((t0.c0)|(t0.c1)))) WHERE ((('9y') NOT BETWEEN (((rt0.c1) NOT NULL)) AND (t0.c1))) ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR(((((t0.c2)OR(2143766718)))AND(rt0.c2)))))AND(((((t0.c1)OR(rt0.c0)))OR(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((('9y') NOT BETWEEN (((rt0.c1) NOT NULL)) AND (t0.c1))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((((t0.c0) NOT BETWEEN (rt0.c0) AND (-2.103298838E9)))AND(((0x4675d733)|(t0.c0)))))OR(((t0.c0)|(t0.c1)))) ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR(((((t0.c2)OR(2143766718)))AND(rt0.c2)))))AND(((((t0.c1)OR(rt0.c0)))OR(t0.c1)))) ASC);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((((t0.c0) NOT BETWEEN (rt0.c0) AND (-2.103298838E9)))AND(((0X4675d733)|(t0.c0)))))OR(((t0.c0)|(t0.c1)))) WHERE ((('9y') NOT BETWEEN (((rt0.c1) NOT NULL)) AND (t0.c1))) ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR(((((t0.c2)OR(2143766718)))AND(rt0.c2)))))AND(((((t0.c1)OR(rt0.c0)))OR(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((('9y') NOT BETWEEN (((rt0.c1) NOT NULL)) AND (t0.c1))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((((t0.c0) NOT BETWEEN (rt0.c0) AND (-2.103298838E9)))AND(((0x4675d733)|(t0.c0)))))OR(((t0.c0)|(t0.c1)))) ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR(((((t0.c2)OR(2143766718)))AND(rt0.c2)))))AND(((((t0.c1)OR(rt0.c0)))OR(t0.c1)))) ASC);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((((t0.c0) NOT BETWEEN (rt0.c0) AND (-2.103298838E9)))AND(((0X4675d733)|(t0.c0)))))OR(((t0.c0)|(t0.c1)))) WHERE ((('9y') NOT BETWEEN (((rt0.c1) NOT NULL)) AND (t0.c1))) ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR(((((t0.c2)OR(2143766718)))AND(rt0.c2)))))AND(((((t0.c1)OR(rt0.c0)))OR(t0.c1)))) ASC;
SELECT COUNT(*) FROM t0, rt1 WHERE (rt1.c2) ORDER BY (NOT (((t0.c1)AND(t0.c1))));
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM t0, rt1 ORDER BY (NOT (((t0.c1)AND(t0.c1)))));
SELECT COUNT(*) FROM t0, rt1 WHERE (rt1.c2) ORDER BY (NOT (((t0.c1)AND(t0.c1))));
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM t0, rt1 ORDER BY (NOT (((t0.c1)AND(t0.c1)))));
SELECT COUNT(*) FROM t0, rt1 WHERE (rt1.c2) ORDER BY (NOT (((t0.c1)AND(t0.c1))));
SELECT ALL COUNT(*) FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN (t0.c1 IN ()) THEN CAST(rt1.c0 AS INTEGER) WHEN t0.c1 COLLATE RTRIM THEN ((rt1.c1) ISNULL) WHEN ((t0.c2)>=('-1412833231')) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0)) END WHERE (rt0.c0) ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt1.c2 AS REAL))) AND ((CAST(t0.c2 AS INTEGER)))), ((rt1.c2) NOTNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN (t0.c1 IN ()) THEN CAST(rt1.c0 AS INTEGER) WHEN t0.c1 COLLATE RTRIM THEN ((rt1.c1) ISNULL) WHEN ((t0.c2)>=('-1412833231')) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0)) END ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt1.c2 AS REAL))) AND ((CAST(t0.c2 AS INTEGER)))), ((rt1.c2) NOTNULL) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN (t0.c1 IN ()) THEN CAST(rt1.c0 AS INTEGER) WHEN t0.c1 COLLATE RTRIM THEN ((rt1.c1) ISNULL) WHEN ((t0.c2)>=('-1412833231')) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0)) END WHERE (rt0.c0) ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt1.c2 AS REAL))) AND ((CAST(t0.c2 AS INTEGER)))), ((rt1.c2) NOTNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN (t0.c1 IN ()) THEN CAST(rt1.c0 AS INTEGER) WHEN t0.c1 COLLATE RTRIM THEN ((rt1.c1) ISNULL) WHEN ((t0.c2)>=('-1412833231')) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0)) END ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt1.c2 AS REAL))) AND ((CAST(t0.c2 AS INTEGER)))), ((rt1.c2) NOTNULL) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN (t0.c1 IN ()) THEN CAST(rt1.c0 AS INTEGER) WHEN t0.c1 COLLATE RTRIM THEN ((rt1.c1) ISNULL) WHEN ((t0.c2)>=('-1412833231')) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c0)) END WHERE (rt0.c0) ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt1.c2 AS REAL))) AND ((CAST(t0.c2 AS INTEGER)))), ((rt1.c2) NOTNULL) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((SQLITE_SOURCE_ID(), ((rt1.c1) BETWEEN (rt1.c2) AND (t0.c1)), json_object(rt1.c0, rt1.c2, rt1.c2, rt0.c1)))!=(((rt0.c1 IN ()), ((t0.c0)%(rt1.c2)), ((rt1.c2)GLOB(t0.c1)))))) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((SQLITE_SOURCE_ID(), ((rt1.c1) BETWEEN (rt1.c2) AND (t0.c1)), json_object(rt1.c0, rt1.c2, rt1.c2, rt0.c1)))!=(((rt0.c1 IN ()), ((t0.c0)%(rt1.c2)), ((rt1.c2)GLOB(t0.c1)))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CAST(rt1.c1 COLLATE RTRIM AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((SQLITE_SOURCE_ID(), ((rt1.c1) BETWEEN (rt1.c2) AND (t0.c1)), json_object(rt1.c0, rt1.c2, rt1.c2, rt0.c1)))!=(((rt0.c1 IN ()), ((t0.c0)%(rt1.c2)), ((rt1.c2)GLOB(t0.c1)))))) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((SQLITE_SOURCE_ID(), ((rt1.c1) BETWEEN (rt1.c2) AND (t0.c1)), json_object(rt1.c0, rt1.c2, rt1.c2, rt0.c1)))!=(((rt0.c1 IN ()), ((t0.c0)%(rt1.c2)), ((rt1.c2)GLOB(t0.c1)))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CAST(rt1.c1 COLLATE RTRIM AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((SQLITE_SOURCE_ID(), ((rt1.c1) BETWEEN (rt1.c2) AND (t0.c1)), json_object(rt1.c0, rt1.c2, rt1.c2, rt0.c1)))!=(((rt0.c1 IN ()), ((t0.c0)%(rt1.c2)), ((rt1.c2)GLOB(t0.c1)))))) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE ('') ORDER BY (((((((((((rt0.c0)OR(rt1.c0)))AND(rt0.c2)))AND(rt1.c1)))AND(rt0.c1)), (~ (rt1.c2)), rt0.c1))<=((((0.4712489934117038)%(rt0.c1)), 0.6926068175485491, ((((rt1.c1)AND(rt0.c1)))OR(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((((((((rt0.c0)OR(rt1.c0)))AND(rt0.c2)))AND(rt1.c1)))AND(rt0.c1)), (~ (rt1.c2)), rt0.c1))<=((((0.4712489934117038)%(rt0.c1)), 0.6926068175485491, ((((rt1.c1)AND(rt0.c1)))OR(rt0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ('') ORDER BY (((((((((((rt0.c0)OR(rt1.c0)))AND(rt0.c2)))AND(rt1.c1)))AND(rt0.c1)), (~ (rt1.c2)), rt0.c1))<=((((0.4712489934117038)%(rt0.c1)), 0.6926068175485491, ((((rt1.c1)AND(rt0.c1)))OR(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((((((((rt0.c0)OR(rt1.c0)))AND(rt0.c2)))AND(rt1.c1)))AND(rt0.c1)), (~ (rt1.c2)), rt0.c1))<=((((0.4712489934117038)%(rt0.c1)), 0.6926068175485491, ((((rt1.c1)AND(rt0.c1)))OR(rt0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ('') ORDER BY (((((((((((rt0.c0)OR(rt1.c0)))AND(rt0.c2)))AND(rt1.c1)))AND(rt0.c1)), (~ (rt1.c2)), rt0.c1))<=((((0.4712489934117038)%(rt0.c1)), 0.6926068175485491, ((((rt1.c1)AND(rt0.c1)))OR(rt0.c2)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(NULL)))%(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c2)))AND(NULL)))%(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(NULL)))%(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c2)))AND(NULL)))%(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(NULL)))%(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE TIME(t0.c0, t0.c0, t0.c2)  WHEN CAST(t0.c1 AS BLOB) THEN (((x'', t0.c1, t0.c2)) BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, x''))) ELSE ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE TIME(t0.c0, t0.c0, t0.c2)  WHEN CAST(t0.c1 AS BLOB) THEN (((x'', t0.c1, t0.c2)) BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, x''))) ELSE ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE TIME(t0.c0, t0.c0, t0.c2)  WHEN CAST(t0.c1 AS BLOB) THEN (((x'', t0.c1, t0.c2)) BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, x''))) ELSE ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE TIME(t0.c0, t0.c0, t0.c2)  WHEN CAST(t0.c1 AS BLOB) THEN (((x'', t0.c1, t0.c2)) BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, x''))) ELSE ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE TIME(t0.c0, t0.c0, t0.c2)  WHEN CAST(t0.c1 AS BLOB) THEN (((x'', t0.c1, t0.c2)) BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, x''))) ELSE ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN ((x'c5f9')%(rt0.c2)) THEN rt0.c2 WHEN json_array_length(rt1.c0, rt0.c2) THEN (NOT (rt1.c0)) WHEN (rt0.c0 IN ()) THEN (rt0.c0 IN ()) ELSE rt0.c1 END) ORDER BY rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'c5f9')%(rt0.c2)) THEN rt0.c2 WHEN json_array_length(rt1.c0, rt0.c2) THEN (NOT (rt1.c0)) WHEN (rt0.c0 IN ()) THEN (rt0.c0 IN ()) ELSE rt0.c1 END) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c1 DESC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN ((x'c5f9')%(rt0.c2)) THEN rt0.c2 WHEN json_array_length(rt1.c0, rt0.c2) THEN (NOT (rt1.c0)) WHEN (rt0.c0 IN ()) THEN (rt0.c0 IN ()) ELSE rt0.c1 END) ORDER BY rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'c5f9')%(rt0.c2)) THEN rt0.c2 WHEN json_array_length(rt1.c0, rt0.c2) THEN (NOT (rt1.c0)) WHEN (rt0.c0 IN ()) THEN (rt0.c0 IN ()) ELSE rt0.c1 END) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c1 DESC);
SELECT * FROM t0 WHERE (json_valid(((((t0.c0)AND(t0.c0)))OR(t0.c1)))) ORDER BY t0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(((((t0.c0)AND(t0.c0)))OR(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (json_valid(((((t0.c0)AND(t0.c0)))OR(t0.c1)))) ORDER BY t0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(((((t0.c0)AND(t0.c0)))OR(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (json_valid(((((t0.c0)AND(t0.c0)))OR(t0.c1)))) ORDER BY t0.c2 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1);
SELECT * FROM rt1, rt0, t0 WHERE (((0.10718571281537692)<(t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((0.10718571281537692)<(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((0.10718571281537692)<(t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((0.10718571281537692)<(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((0.10718571281537692)<(t0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, rt1 WHERE (TYPEOF(((t0.c2)<=(rt1.c2)))) ORDER BY ((((t0.c1)>>(0.6879865871561985)))*((((rt1.c2, t0.c1, t0.c2)) BETWEEN ((rt1.c2, t0.c2, rt1.c2)) AND ((rt1.c2, t0.c1, t0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((t0.c2)<=(rt1.c2)))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((t0.c1)>>(0.6879865871561985)))*((((rt1.c2, t0.c1, t0.c2)) BETWEEN ((rt1.c2, t0.c2, rt1.c2)) AND ((rt1.c2, t0.c1, t0.c1))))) ASC);
SELECT COUNT(*) FROM t0, rt1 WHERE (TYPEOF(((t0.c2)<=(rt1.c2)))) ORDER BY ((((t0.c1)>>(0.6879865871561985)))*((((rt1.c2, t0.c1, t0.c2)) BETWEEN ((rt1.c2, t0.c2, rt1.c2)) AND ((rt1.c2, t0.c1, t0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((t0.c2)<=(rt1.c2)))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((t0.c1)>>(0.6879865871561985)))*((((rt1.c2, t0.c1, t0.c2)) BETWEEN ((rt1.c2, t0.c2, rt1.c2)) AND ((rt1.c2, t0.c1, t0.c1))))) ASC);
SELECT COUNT(*) FROM t0, rt1 WHERE (TYPEOF(((t0.c2)<=(rt1.c2)))) ORDER BY ((((t0.c1)>>(0.6879865871561985)))*((((rt1.c2, t0.c1, t0.c2)) BETWEEN ((rt1.c2, t0.c2, rt1.c2)) AND ((rt1.c2, t0.c1, t0.c1))))) ASC;
SELECT * FROM t0, rt0, rt1 WHERE (((rt1.c0)AND(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)AND(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (((rt1.c0)AND(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)AND(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (((rt1.c0)AND(((rt1.c1) NOT NULL))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((((t0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, t0.c0, rt0.c0))))AND(((((rt0.c1)AND(t0.c2)))OR(t0.c1)))))OR(((rt0.c2)OR(rt0.c0))))) ORDER BY (t0.c2 IN ()) COLLATE NOCASE  NULLS FIRST, (((t0.c2 IN ())) NOT BETWEEN (rt0.c1) AND (HEX(''))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((t0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, t0.c0, rt0.c0))))AND(((((rt0.c1)AND(t0.c2)))OR(t0.c1)))))OR(((rt0.c2)OR(rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (t0.c2 IN ()) COLLATE NOCASE  NULLS FIRST, (((t0.c2 IN ())) NOT BETWEEN (rt0.c1) AND (HEX(''))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((((t0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, t0.c0, rt0.c0))))AND(((((rt0.c1)AND(t0.c2)))OR(t0.c1)))))OR(((rt0.c2)OR(rt0.c0))))) ORDER BY (t0.c2 IN ()) COLLATE NOCASE  NULLS FIRST, (((t0.c2 IN ())) NOT BETWEEN (rt0.c1) AND (HEX(''))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((t0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, t0.c0, rt0.c0))))AND(((((rt0.c1)AND(t0.c2)))OR(t0.c1)))))OR(((rt0.c2)OR(rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (t0.c2 IN ()) COLLATE NOCASE  NULLS FIRST, (((t0.c2 IN ())) NOT BETWEEN (rt0.c1) AND (HEX(''))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((((t0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c1, t0.c0, rt0.c0))))AND(((((rt0.c1)AND(t0.c2)))OR(t0.c1)))))OR(((rt0.c2)OR(rt0.c0))))) ORDER BY (t0.c2 IN ()) COLLATE NOCASE  NULLS FIRST, (((t0.c2 IN ())) NOT BETWEEN (rt0.c1) AND (HEX(''))) ASC;
SELECT ALL * FROM rt1 INDEXED BY i12 INNER JOIN t0 ON ((t0.c2 COLLATE NOCASE)&(((t0.c1) ISNULL))) WHERE (((CASE rt1.c1  WHEN t0.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 END) NOT BETWEEN ((~ (t0.c1))) AND ((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN t0.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 END) NOT BETWEEN ((~ (t0.c1))) AND ((- (rt1.c1))))) IS TRUE)  as count FROM rt1 INDEXED BY i12 INNER JOIN t0 ON ((t0.c2 COLLATE NOCASE)&(((t0.c1) ISNULL))));
SELECT ALL * FROM rt1 INDEXED BY i12 INNER JOIN t0 ON ((t0.c2 COLLATE NOCASE)&(((t0.c1) ISNULL))) WHERE (((CASE rt1.c1  WHEN t0.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 END) NOT BETWEEN ((~ (t0.c1))) AND ((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN t0.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 END) NOT BETWEEN ((~ (t0.c1))) AND ((- (rt1.c1))))) IS TRUE)  as count FROM rt1 INDEXED BY i12 INNER JOIN t0 ON ((t0.c2 COLLATE NOCASE)&(((t0.c1) ISNULL))));
SELECT * FROM rt1 WHERE (CASE WHEN ((NULL)AND(rt1.c1)) THEN (NOT (rt1.c0)) END) ORDER BY CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)AND(rt1.c1)) THEN (NOT (rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CASE WHEN ((NULL)AND(rt1.c1)) THEN (NOT (rt1.c0)) END) ORDER BY CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)AND(rt1.c1)) THEN (NOT (rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CASE WHEN ((NULL)AND(rt1.c1)) THEN (NOT (rt1.c0)) END) ORDER BY CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c2 AS INTEGER)) ISNULL));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((t0.c2)>(t0.c1))) NOT BETWEEN (t0.c2) AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(t0.c1))) NOT BETWEEN (t0.c2) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((t0.c2)>(t0.c1))) NOT BETWEEN (t0.c2) AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(t0.c1))) NOT BETWEEN (t0.c2) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((t0.c2)>(t0.c1))) NOT BETWEEN (t0.c2) AND (CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM rt1 WHERE ((((((((((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0))))AND(((rt1.c1)||(rt1.c1)))))AND((~ (rt1.c1)))))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)))AND(CASE WHEN rt1.c1 THEN 2098748442 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0))))AND(((rt1.c1)||(rt1.c1)))))AND((~ (rt1.c1)))))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)))AND(CASE WHEN rt1.c1 THEN 2098748442 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0))))AND(((rt1.c1)||(rt1.c1)))))AND((~ (rt1.c1)))))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)))AND(CASE WHEN rt1.c1 THEN 2098748442 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0))))AND(((rt1.c1)||(rt1.c1)))))AND((~ (rt1.c1)))))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)))AND(CASE WHEN rt1.c1 THEN 2098748442 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((((((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0))))AND(((rt1.c1)||(rt1.c1)))))AND((~ (rt1.c1)))))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)))AND(CASE WHEN rt1.c1 THEN 2098748442 ELSE rt1.c2 END)));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) IS FALSE) WHERE (((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 END)*((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 END)*((NOT (rt0.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) IS FALSE));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) IS FALSE) WHERE (((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 END)*((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 END)*((NOT (rt0.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) IS FALSE));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((rt1.c1 COLLATE NOCASE) IS FALSE) WHERE (((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 END)*((NOT (rt0.c1)))));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON CAST(CAST(0.3225574321148702 AS INTEGER) AS REAL) FULL OUTER JOIN rt1 ON ((CASE t0.c1  WHEN rt0.c1 THEN t0.c0 END) IS TRUE) WHERE (((t0.c2 COLLATE NOCASE)&(((rt0.c2)<=(t0.c2))))) ORDER BY ((((t0.c0 COLLATE RTRIM)OR('-2103164466')))OR(((((((((((((rt0.c0)AND(t0.c1)))AND(t0.c0)))AND(rt1.c0)))OR(t0.c0)))AND(rt0.c2)))OR(t0.c0))))  NULLS LAST, CASE ((rt0.c2)>>(rt0.c2))  WHEN LIKELIHOOD(rt1.c0, 0.7628353083726448) THEN COALESCE(DISTINCT t0.c1, -9.70780082E8) WHEN (rt1.c0 IN ()) THEN -296651224 COLLATE NOCASE WHEN LIKELY(DISTINCT rt1.c0) THEN CAST(rt0.c2 AS INTEGER) WHEN ((rt1.c2)/(t0.c1)) THEN ((rt0.c1)IS NOT(rt1.c2)) WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1))) THEN CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt1.c2 THEN rt0.c2 END END  NULLS LAST, (('252759015')!=(((rt1.c2)||(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE)&(((rt0.c2)<=(t0.c2))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CAST(CAST(0.3225574321148702 AS INTEGER) AS REAL) FULL OUTER JOIN rt1 ON ((CASE t0.c1  WHEN rt0.c1 THEN t0.c0 END) IS TRUE) ORDER BY ((((t0.c0 COLLATE RTRIM)OR('-2103164466')))OR(((((((((((((rt0.c0)AND(t0.c1)))AND(t0.c0)))AND(rt1.c0)))OR(t0.c0)))AND(rt0.c2)))OR(t0.c0))))  NULLS LAST, CASE ((rt0.c2)>>(rt0.c2))  WHEN LIKELIHOOD(rt1.c0, 0.7628353083726448) THEN COALESCE(DISTINCT t0.c1, -9.70780082E8) WHEN (rt1.c0 IN ()) THEN -296651224 COLLATE NOCASE WHEN LIKELY(DISTINCT rt1.c0) THEN CAST(rt0.c2 AS INTEGER) WHEN ((rt1.c2)/(t0.c1)) THEN ((rt0.c1)IS NOT(rt1.c2)) WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1))) THEN CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt1.c2 THEN rt0.c2 END END  NULLS LAST, (('252759015')!=(((rt1.c2)||(rt0.c1))))  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON CAST(CAST(0.3225574321148702 AS INTEGER) AS REAL) FULL OUTER JOIN rt1 ON ((CASE t0.c1  WHEN rt0.c1 THEN t0.c0 END) IS TRUE) WHERE (((t0.c2 COLLATE NOCASE)&(((rt0.c2)<=(t0.c2))))) ORDER BY ((((t0.c0 COLLATE RTRIM)OR('-2103164466')))OR(((((((((((((rt0.c0)AND(t0.c1)))AND(t0.c0)))AND(rt1.c0)))OR(t0.c0)))AND(rt0.c2)))OR(t0.c0))))  NULLS LAST, CASE ((rt0.c2)>>(rt0.c2))  WHEN LIKELIHOOD(rt1.c0, 0.7628353083726448) THEN COALESCE(DISTINCT t0.c1, -9.70780082E8) WHEN (rt1.c0 IN ()) THEN -296651224 COLLATE NOCASE WHEN LIKELY(DISTINCT rt1.c0) THEN CAST(rt0.c2 AS INTEGER) WHEN ((rt1.c2)/(t0.c1)) THEN ((rt0.c1)IS NOT(rt1.c2)) WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1))) THEN CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt1.c2 THEN rt0.c2 END END  NULLS LAST, (('252759015')!=(((rt1.c2)||(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE)&(((rt0.c2)<=(t0.c2))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CAST(CAST(0.3225574321148702 AS INTEGER) AS REAL) FULL OUTER JOIN rt1 ON ((CASE t0.c1  WHEN rt0.c1 THEN t0.c0 END) IS TRUE) ORDER BY ((((t0.c0 COLLATE RTRIM)OR('-2103164466')))OR(((((((((((((rt0.c0)AND(t0.c1)))AND(t0.c0)))AND(rt1.c0)))OR(t0.c0)))AND(rt0.c2)))OR(t0.c0))))  NULLS LAST, CASE ((rt0.c2)>>(rt0.c2))  WHEN LIKELIHOOD(rt1.c0, 0.7628353083726448) THEN COALESCE(DISTINCT t0.c1, -9.70780082E8) WHEN (rt1.c0 IN ()) THEN -296651224 COLLATE NOCASE WHEN LIKELY(DISTINCT rt1.c0) THEN CAST(rt0.c2 AS INTEGER) WHEN ((rt1.c2)/(t0.c1)) THEN ((rt0.c1)IS NOT(rt1.c2)) WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1))) THEN CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt1.c2 THEN rt0.c2 END END  NULLS LAST, (('252759015')!=(((rt1.c2)||(rt0.c1))))  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON CAST(CAST(0.3225574321148702 AS INTEGER) AS REAL) FULL OUTER JOIN rt1 ON ((CASE t0.c1  WHEN rt0.c1 THEN t0.c0 END) IS TRUE) WHERE (((t0.c2 COLLATE NOCASE)&(((rt0.c2)<=(t0.c2))))) ORDER BY ((((t0.c0 COLLATE RTRIM)OR('-2103164466')))OR(((((((((((((rt0.c0)AND(t0.c1)))AND(t0.c0)))AND(rt1.c0)))OR(t0.c0)))AND(rt0.c2)))OR(t0.c0))))  NULLS LAST, CASE ((rt0.c2)>>(rt0.c2))  WHEN LIKELIHOOD(rt1.c0, 0.7628353083726448) THEN COALESCE(DISTINCT t0.c1, -9.70780082E8) WHEN (rt1.c0 IN ()) THEN -296651224 COLLATE NOCASE WHEN LIKELY(DISTINCT rt1.c0) THEN CAST(rt0.c2 AS INTEGER) WHEN ((rt1.c2)/(t0.c1)) THEN ((rt0.c1)IS NOT(rt1.c2)) WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c1))) THEN CASE WHEN t0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN rt1.c2 THEN rt0.c2 END END  NULLS LAST, (('252759015')!=(((rt1.c2)||(rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN rt1.c0 COLLATE BINARY THEN ABS(t0.c0) ELSE ((rt0.c1)|(rt0.c0)) END CROSS JOIN rt1 ON ((NULL)>>(CAST(rt0.c0 AS INTEGER))) WHERE (((t0.c0)==(IFNULL(rt1.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)==(IFNULL(rt1.c2, rt0.c1)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN rt1.c0 COLLATE BINARY THEN ABS(t0.c0) ELSE ((rt0.c1)|(rt0.c0)) END CROSS JOIN rt1 ON ((NULL)>>(CAST(rt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN rt1.c0 COLLATE BINARY THEN ABS(t0.c0) ELSE ((rt0.c1)|(rt0.c0)) END CROSS JOIN rt1 ON ((NULL)>>(CAST(rt0.c0 AS INTEGER))) WHERE (((t0.c0)==(IFNULL(rt1.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)==(IFNULL(rt1.c2, rt0.c1)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN rt1.c0 COLLATE BINARY THEN ABS(t0.c0) ELSE ((rt0.c1)|(rt0.c0)) END CROSS JOIN rt1 ON ((NULL)>>(CAST(rt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE ((((t0.c1)OR(rt1.c0)))OR(rt1.c0))  WHEN ((((t0.c2)AND(t0.c0)))AND(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE (((rt1.c1))!=((rt1.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c1)OR(rt1.c0)))OR(rt1.c0))  WHEN ((((t0.c2)AND(t0.c0)))AND(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE (((rt1.c1))<>((rt1.c2))) END) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE ((((t0.c1)OR(rt1.c0)))OR(rt1.c0))  WHEN ((((t0.c2)AND(t0.c0)))AND(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE (((rt1.c1))!=((rt1.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c1)OR(rt1.c0)))OR(rt1.c0))  WHEN ((((t0.c2)AND(t0.c0)))AND(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE (((rt1.c1))<>((rt1.c2))) END) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE ((((t0.c1)OR(rt1.c0)))OR(rt1.c0))  WHEN ((((t0.c2)AND(t0.c0)))AND(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE (((rt1.c1))!=((rt1.c2))) END);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY CASE (t0.c2 IN ())  WHEN ((t0.c0) IS TRUE) THEN t0.c1 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c2 IN ())  WHEN ((t0.c0) IS TRUE) THEN t0.c1 COLLATE RTRIM END DESC);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY CASE (t0.c2 IN ())  WHEN ((t0.c0) IS TRUE) THEN t0.c1 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c2 IN ())  WHEN ((t0.c0) IS TRUE) THEN t0.c1 COLLATE RTRIM END DESC);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY CASE (t0.c2 IN ())  WHEN ((t0.c0) IS TRUE) THEN t0.c1 COLLATE RTRIM END DESC;
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON CAST(((rt0.c0)<(t0.c1)) AS TEXT) CROSS JOIN rt0 ON (((CAST(rt0.c0 AS REAL)))<=(((t0.c1 IN ())))) WHERE (CAST(((t0.c1) IS FALSE) AS INTEGER)) ORDER BY rt0.c0 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CAST(((rt0.c0)<(t0.c1)) AS TEXT) CROSS JOIN rt0 ON (((CAST(rt0.c0 AS REAL)))<=(((t0.c1 IN ())))) ORDER BY rt0.c0 COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON CAST(((rt0.c0)<(t0.c1)) AS TEXT) CROSS JOIN rt0 ON (((CAST(rt0.c0 AS REAL)))<=(((t0.c1 IN ())))) WHERE (CAST(((t0.c1) IS FALSE) AS INTEGER)) ORDER BY rt0.c0 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CAST(((rt0.c0)<(t0.c1)) AS TEXT) CROSS JOIN rt0 ON (((CAST(rt0.c0 AS REAL)))<=(((t0.c1 IN ())))) ORDER BY rt0.c0 COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON CAST(((rt0.c0)<(t0.c1)) AS TEXT) CROSS JOIN rt0 ON (((CAST(rt0.c0 AS REAL)))<=(((t0.c1 IN ())))) WHERE (CAST(((t0.c1) IS FALSE) AS INTEGER)) ORDER BY rt0.c0 COLLATE NOCASE  NULLS FIRST;
SELECT * FROM t0 WHERE ((~ (t0.c1))) ORDER BY '-1539163269', ((((((t0.c0) IS TRUE))AND(((t0.c0) IS TRUE))))OR(t0.c0 COLLATE RTRIM))  NULLS LAST, ((-2103298838)<=(((((t0.c1)OR(t0.c1)))AND(t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t0.c1))) IS TRUE)  as count FROM t0 ORDER BY '-1539163269', ((((((t0.c0) IS TRUE))AND(((t0.c0) IS TRUE))))OR(t0.c0 COLLATE RTRIM))  NULLS LAST, ((-2103298838)<=(((((t0.c1)OR(t0.c1)))AND(t0.c2)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((~ (t0.c1))) ORDER BY '-1539163269', ((((((t0.c0) IS TRUE))AND(((t0.c0) IS TRUE))))OR(t0.c0 COLLATE RTRIM))  NULLS LAST, ((-2103298838)<=(((((t0.c1)OR(t0.c1)))AND(t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t0.c1))) IS TRUE)  as count FROM t0 ORDER BY '-1539163269', ((((((t0.c0) IS TRUE))AND(((t0.c0) IS TRUE))))OR(t0.c0 COLLATE RTRIM))  NULLS LAST, ((-2103298838)<=(((((t0.c1)OR(t0.c1)))AND(t0.c2)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((~ (t0.c1))) ORDER BY '-1539163269', ((((((t0.c0) IS TRUE))AND(((t0.c0) IS TRUE))))OR(t0.c0 COLLATE RTRIM))  NULLS LAST, ((-2103298838)<=(((((t0.c1)OR(t0.c1)))AND(t0.c2)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)IS(((rt1.c0)||(0xffffffffd7086b74))))) ORDER BY (NOT (((rt1.c1)GLOB(rt1.c2))))  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c0 ELSE 0.32451175813441446 END)<<('s_'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)IS(((rt1.c0)||(0Xffffffffd7086b74))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c1)GLOB(rt1.c2))))  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c0 ELSE 0.32451175813441446 END)<<('s_'))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)IS(((rt1.c0)||(0xffffffffd7086b74))))) ORDER BY (NOT (((rt1.c1)GLOB(rt1.c2))))  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c0 ELSE 0.32451175813441446 END)<<('s_'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)IS(((rt1.c0)||(0Xffffffffd7086b74))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c1)GLOB(rt1.c2))))  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c0 ELSE 0.32451175813441446 END)<<('s_'))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)IS(((rt1.c0)||(0xffffffffd7086b74))))) ORDER BY (NOT (((rt1.c1)GLOB(rt1.c2))))  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c0 ELSE 0.32451175813441446 END)<<('s_'))  NULLS FIRST;
SELECT * FROM t0, rt1 WHERE (TYPEOF(DISTINCT CAST(rt1.c2 AS REAL))) ORDER BY ((((((((t0.c2)AND(rt1.c2)))OR(t0.c1)))OR((('Y誏{ꏃso[z8')||(t0.c2)))))AND(((NULL) NOT BETWEEN (rt1.c0) AND (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CAST(rt1.c2 AS REAL))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((((t0.c2)AND(rt1.c2)))OR(t0.c1)))OR((('Y誏{ꏃso[z8')||(t0.c2)))))AND(((NULL) NOT BETWEEN (rt1.c0) AND (t0.c1)))) DESC);
SELECT * FROM t0, rt1 WHERE (TYPEOF(DISTINCT CAST(rt1.c2 AS REAL))) ORDER BY ((((((((t0.c2)AND(rt1.c2)))OR(t0.c1)))OR((('Y誏{ꏃso[z8')||(t0.c2)))))AND(((NULL) NOT BETWEEN (rt1.c0) AND (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CAST(rt1.c2 AS REAL))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((((t0.c2)AND(rt1.c2)))OR(t0.c1)))OR((('Y誏{ꏃso[z8')||(t0.c2)))))AND(((NULL) NOT BETWEEN (rt1.c0) AND (t0.c1)))) DESC);
SELECT * FROM t0, rt1 WHERE (TYPEOF(DISTINCT CAST(rt1.c2 AS REAL))) ORDER BY ((((((((t0.c2)AND(rt1.c2)))OR(t0.c1)))OR((('Y誏{ꏃso[z8')||(t0.c2)))))AND(((NULL) NOT BETWEEN (rt1.c0) AND (t0.c1)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (+ (rt0.c1 COLLATE RTRIM)), NULLIF(rt0.c2 COLLATE BINARY, (((rt0.c0))=((rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1 COLLATE RTRIM)), NULLIF(rt0.c2 COLLATE BINARY, (((rt0.c0))==((rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (+ (rt0.c1 COLLATE RTRIM)), NULLIF(rt0.c2 COLLATE BINARY, (((rt0.c0))=((rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1 COLLATE RTRIM)), NULLIF(rt0.c2 COLLATE BINARY, (((rt0.c0))==((rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (+ (rt0.c1 COLLATE RTRIM)), NULLIF(rt0.c2 COLLATE BINARY, (((rt0.c0))=((rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (1.057675761E9) ORDER BY (('-1970446949') IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((1.057675761E9) IS TRUE)  as count FROM t0 ORDER BY (('-1970446949') IS TRUE) ASC);
SELECT COUNT(*) FROM t0 WHERE (1.057675761E9) ORDER BY (('-1970446949') IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((1.057675761E9) IS TRUE)  as count FROM t0 ORDER BY (('-1970446949') IS TRUE) ASC);
SELECT COUNT(*) FROM t0 WHERE (1.057675761E9) ORDER BY (('-1970446949') IS TRUE) ASC;
SELECT * FROM rt1, t0 WHERE (NULL) ORDER BY CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB) ASC  NULLS LAST);
SELECT * FROM rt1, t0 WHERE (NULL) ORDER BY CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB) ASC  NULLS LAST);
SELECT * FROM rt1, t0 WHERE (NULL) ORDER BY CAST(CAST(rt1.c1 AS NUMERIC) AS BLOB) ASC  NULLS LAST;
SELECT * FROM rt0, rt1, t0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (rt1.c1);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((x'' COLLATE NOCASE)) AND (((rt0.c2 IN ()))))) ORDER BY CAST(((t0.c1) NOTNULL) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((x'' COLLATE NOCASE)) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((t0.c1) NOTNULL) AS TEXT) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((x'' COLLATE NOCASE)) AND (((rt0.c2 IN ()))))) ORDER BY CAST(((t0.c1) NOTNULL) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((x'' COLLATE NOCASE)) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((t0.c1) NOTNULL) AS TEXT) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((x'' COLLATE NOCASE)) AND (((rt0.c2 IN ()))))) ORDER BY CAST(((t0.c1) NOTNULL) AS TEXT) ASC;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY (+ (((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1))))  NULLS FIRST, CASE rtreenode(rt1.c2, rt1.c1)  WHEN ((rt1.c2)||(rt1.c0)) THEN (((rt1.c0))>((rt1.c2))) WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN rt1.c1 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (+ (((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1))))  NULLS FIRST, CASE rtreenode(rt1.c2, rt1.c1)  WHEN ((rt1.c2)||(rt1.c0)) THEN (((rt1.c0))>((rt1.c2))) WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN rt1.c1 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY (+ (((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1))))  NULLS FIRST, CASE rtreenode(rt1.c2, rt1.c1)  WHEN ((rt1.c2)||(rt1.c0)) THEN (((rt1.c0))>((rt1.c2))) WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN rt1.c1 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (+ (((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1))))  NULLS FIRST, CASE rtreenode(rt1.c2, rt1.c1)  WHEN ((rt1.c2)||(rt1.c0)) THEN (((rt1.c0))>((rt1.c2))) WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN rt1.c1 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY (+ (((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1))))  NULLS FIRST, CASE rtreenode(rt1.c2, rt1.c1)  WHEN ((rt1.c2)||(rt1.c0)) THEN (((rt1.c0))>((rt1.c2))) WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN rt1.c1 END ASC  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE ((((('561698105') ISNULL))*(LOWER(8.78058753E8)))) ORDER BY (+ ((((x'f3c2')) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('561698105') ISNULL))*(LOWER(8.78058753E8)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (+ ((((x'f3c2')) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))))  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((('561698105') ISNULL))*(LOWER(8.78058753E8)))) ORDER BY (+ ((((x'f3c2')) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('561698105') ISNULL))*(LOWER(8.78058753E8)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (+ ((((x'f3c2')) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))))  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((('561698105') ISNULL))*(LOWER(8.78058753E8)))) ORDER BY (+ ((((x'f3c2')) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c1, '_iD]'))OR((((rt0.c1, 0.06512841685507509, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt0.c1, '_iD]'))OR((((rt0.c1, 0.06512841685507509, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c1, '_iD]'))OR((((rt0.c1, 0.06512841685507509, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt0.c1, '_iD]'))OR((((rt0.c1, 0.06512841685507509, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c1, '_iD]'))OR((((rt0.c1, 0.06512841685507509, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))))));
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN x'' ELSE t0.c2 END) BETWEEN (t0.c1 COLLATE NOCASE) AND (((((t0.c0)OR(t0.c2)))OR(t0.c2))))) ORDER BY (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN (((NOT (t0.c2)), x'8230', t0.c0)) AND ((0X27a77bf3, LIKELY(t0.c2), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN x'' ELSE t0.c2 END) BETWEEN (t0.c1 COLLATE NOCASE) AND (((((t0.c0)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN (((NOT (t0.c2)), x'8230', t0.c0)) AND ((0X27a77bf3, LIKELY(t0.c2), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN x'' ELSE t0.c2 END) BETWEEN (t0.c1 COLLATE NOCASE) AND (((((t0.c0)OR(t0.c2)))OR(t0.c2))))) ORDER BY (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN (((NOT (t0.c2)), x'8230', t0.c0)) AND ((0X27a77bf3, LIKELY(t0.c2), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN x'' ELSE t0.c2 END) BETWEEN (t0.c1 COLLATE NOCASE) AND (((((t0.c0)OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN (((NOT (t0.c2)), x'8230', t0.c0)) AND ((0X27a77bf3, LIKELY(t0.c2), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN x'' ELSE t0.c2 END) BETWEEN (t0.c1 COLLATE NOCASE) AND (((((t0.c0)OR(t0.c2)))OR(t0.c2))))) ORDER BY (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN (((NOT (t0.c2)), x'8230', t0.c0)) AND ((0X27a77bf3, LIKELY(t0.c2), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((HEX(t0.c1))<<(((t0.c1)IS(t0.c2)))) WHERE ('1829034951');
SELECT SUM(count) FROM (SELECT ALL (('1829034951') IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((HEX(t0.c1))<<(((t0.c1)IS(t0.c2)))));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((HEX(t0.c1))<<(((t0.c1)IS(t0.c2)))) WHERE ('1829034951');
SELECT SUM(count) FROM (SELECT ALL (('1829034951') IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((HEX(t0.c1))<<(((t0.c1)IS(t0.c2)))));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((HEX(t0.c1))<<(((t0.c1)IS(t0.c2)))) WHERE ('1829034951');
SELECT * FROM rt0, rt1, t0 WHERE (('' IN (CAST(t0.c2 AS BLOB)))) ORDER BY ((- (rt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN (CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((- (rt1.c1)) IN ())  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE (('' IN (CAST(t0.c2 AS BLOB)))) ORDER BY ((- (rt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN (CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((- (rt1.c1)) IN ())  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE (('' IN (CAST(t0.c2 AS BLOB)))) ORDER BY ((- (rt1.c1)) IN ())  NULLS LAST;
SELECT * FROM t0 WHERE (((((0.4305436748613083) IS FALSE)) IS TRUE)) ORDER BY (544611863 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((0.4305436748613083) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (544611863 IN ()));
SELECT * FROM t0 WHERE (((((0.4305436748613083) IS FALSE)) IS TRUE)) ORDER BY (544611863 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((0.4305436748613083) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (544611863 IN ()));
SELECT * FROM t0 WHERE (((((0.4305436748613083) IS FALSE)) IS TRUE)) ORDER BY (544611863 IN ());
SELECT * FROM t0 WHERE (((t0.c2) BETWEEN (0.49567878539290744) AND (t0.c2)) COLLATE BINARY) ORDER BY NULLIF(t0.c2, ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))), '839519479' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) BETWEEN (0.49567878539290744) AND (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY NULLIF(t0.c2, ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))), '839519479' DESC);
SELECT * FROM t0 WHERE (((t0.c2) BETWEEN (0.49567878539290744) AND (t0.c2)) COLLATE BINARY) ORDER BY NULLIF(t0.c2, ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))), '839519479' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) BETWEEN (0.49567878539290744) AND (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY NULLIF(t0.c2, ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))), '839519479' DESC);
SELECT * FROM t0 WHERE (((t0.c2) BETWEEN (0.49567878539290744) AND (t0.c2)) COLLATE BINARY) ORDER BY NULLIF(t0.c2, ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))), '839519479' DESC;
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1) ORDER BY (~ (CASE WHEN t0.c0 THEN rt0.c2 END)) DESC, (((NOT (rt0.c2))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY (~ (CASE WHEN t0.c0 THEN rt0.c2 END)) DESC, (((NOT (rt0.c2))) ISNULL)  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1) ORDER BY (~ (CASE WHEN t0.c0 THEN rt0.c2 END)) DESC, (((NOT (rt0.c2))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY (~ (CASE WHEN t0.c0 THEN rt0.c2 END)) DESC, (((NOT (rt0.c2))) ISNULL)  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1) ORDER BY (~ (CASE WHEN t0.c0 THEN rt0.c2 END)) DESC, (((NOT (rt0.c2))) ISNULL)  NULLS LAST;
SELECT * FROM t0, rt1, rt0 WHERE (json_extract(((rt0.c2)/(rt1.c0)), (((rt0.c1, t0.c0, t0.c2))!=((rt0.c0, rt1.c2, rt0.c2))))) ORDER BY (((((-1115427248) NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c0, (rt1.c2 IN (rt1.c1, rt0.c0)), ((t0.c1)<=(rt1.c1)), ((rt1.c1) IS FALSE)))<>(((NOT (rt1.c2)), '-542249740', rt0.c1 COLLATE RTRIM, HEX(rt1.c2), ((((rt0.c0)OR(x'')))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((rt0.c2)/(rt1.c0)), (((rt0.c1, t0.c0, t0.c2))<>((rt0.c0, rt1.c2, rt0.c2))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((((-1115427248) NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c0, (rt1.c2 IN (rt1.c1, rt0.c0)), ((t0.c1)<=(rt1.c1)), ((rt1.c1) IS FALSE)))!=(((NOT (rt1.c2)), '-542249740', rt0.c1 COLLATE RTRIM, HEX(rt1.c2), ((((rt0.c0)OR(x'')))AND(rt1.c1))))));
SELECT * FROM t0, rt1, rt0 WHERE (json_extract(((rt0.c2)/(rt1.c0)), (((rt0.c1, t0.c0, t0.c2))!=((rt0.c0, rt1.c2, rt0.c2))))) ORDER BY (((((-1115427248) NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c0, (rt1.c2 IN (rt1.c1, rt0.c0)), ((t0.c1)<=(rt1.c1)), ((rt1.c1) IS FALSE)))<>(((NOT (rt1.c2)), '-542249740', rt0.c1 COLLATE RTRIM, HEX(rt1.c2), ((((rt0.c0)OR(x'')))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((rt0.c2)/(rt1.c0)), (((rt0.c1, t0.c0, t0.c2))<>((rt0.c0, rt1.c2, rt0.c2))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((((-1115427248) NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c0, (rt1.c2 IN (rt1.c1, rt0.c0)), ((t0.c1)<=(rt1.c1)), ((rt1.c1) IS FALSE)))!=(((NOT (rt1.c2)), '-542249740', rt0.c1 COLLATE RTRIM, HEX(rt1.c2), ((((rt0.c0)OR(x'')))AND(rt1.c1))))));
SELECT * FROM t0, rt1, rt0 WHERE (json_extract(((rt0.c2)/(rt1.c0)), (((rt0.c1, t0.c0, t0.c2))!=((rt0.c0, rt1.c2, rt0.c2))))) ORDER BY (((((-1115427248) NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c0, (rt1.c2 IN (rt1.c1, rt0.c0)), ((t0.c1)<=(rt1.c1)), ((rt1.c1) IS FALSE)))<>(((NOT (rt1.c2)), '-542249740', rt0.c1 COLLATE RTRIM, HEX(rt1.c2), ((((rt0.c0)OR(x'')))AND(rt1.c1)))));
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c2)AND(rt0.c0)))AND(rt0.c0))) BETWEEN ((((0.5069107348885603, rt0.c1, rt0.c1))>((rt0.c0, rt1.c1, rt1.c1)))) AND (rt0.c2 COLLATE BINARY))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt0.c0)))AND(rt0.c0))) BETWEEN ((((0.5069107348885603, rt0.c1, rt0.c1))>((rt0.c0, rt1.c1, rt1.c1)))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c2 ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c2)AND(rt0.c0)))AND(rt0.c0))) BETWEEN ((((0.5069107348885603, rt0.c1, rt0.c1))>((rt0.c0, rt1.c1, rt1.c1)))) AND (rt0.c2 COLLATE BINARY))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt0.c0)))AND(rt0.c0))) BETWEEN ((((0.5069107348885603, rt0.c1, rt0.c1))>((rt0.c0, rt1.c1, rt1.c1)))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c2 ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt1.c2)AND(rt0.c0)))AND(rt0.c0))) BETWEEN ((((0.5069107348885603, rt0.c1, rt0.c1))>((rt0.c0, rt1.c1, rt1.c1)))) AND (rt0.c2 COLLATE BINARY))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c0) ORDER BY ((((((((((((CASE rt1.c0  WHEN rt1.c1 THEN '/*Lk9' END)OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c1 END)))AND(rt0.c1 COLLATE NOCASE)))OR((((rt1.c0))<>((NULL))))))AND(rt1.c0)))AND((((rt1.c0))>=((rt0.c1))))))OR(((rt0.c0) IS FALSE))), rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((((((CASE rt1.c0  WHEN rt1.c1 THEN '/*Lk9' END)OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c1 END)))AND(rt0.c1 COLLATE NOCASE)))OR((((rt1.c0))!=((NULL))))))AND(rt1.c0)))AND((((rt1.c0))>=((rt0.c1))))))OR(((rt0.c0) IS FALSE))), rt0.c0  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c0) ORDER BY ((((((((((((CASE rt1.c0  WHEN rt1.c1 THEN '/*Lk9' END)OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c1 END)))AND(rt0.c1 COLLATE NOCASE)))OR((((rt1.c0))<>((NULL))))))AND(rt1.c0)))AND((((rt1.c0))>=((rt0.c1))))))OR(((rt0.c0) IS FALSE))), rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((((((CASE rt1.c0  WHEN rt1.c1 THEN '/*Lk9' END)OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c1 END)))AND(rt0.c1 COLLATE NOCASE)))OR((((rt1.c0))!=((NULL))))))AND(rt1.c0)))AND((((rt1.c0))>=((rt0.c1))))))OR(((rt0.c0) IS FALSE))), rt0.c0  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c0) ORDER BY ((((((((((((CASE rt1.c0  WHEN rt1.c1 THEN '/*Lk9' END)OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c1 END)))AND(rt0.c1 COLLATE NOCASE)))OR((((rt1.c0))<>((NULL))))))AND(rt1.c0)))AND((((rt1.c0))>=((rt0.c1))))))OR(((rt0.c0) IS FALSE))), rt0.c0  NULLS LAST;
SELECT * FROM rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) ISNULL)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY NULL  NULLS LAST);
SELECT * FROM rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) ISNULL)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY NULL  NULLS LAST);
SELECT * FROM rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) ISNULL)) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(t0.c1 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c1 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c1 AS BLOB) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (((rt1.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1) NOTNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKELY((((rt1.c2, rt1.c2, rt1.c0)) BETWEEN (('', rt1.c2, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c2))))) ORDER BY (NOT (rt1.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((LIKELY((((rt1.c2, rt1.c2, rt1.c0)) BETWEEN (('', rt1.c2, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (rt1.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKELY((((rt1.c2, rt1.c2, rt1.c0)) BETWEEN (('', rt1.c2, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c2))))) ORDER BY (NOT (rt1.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((LIKELY((((rt1.c2, rt1.c2, rt1.c0)) BETWEEN (('', rt1.c2, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (rt1.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKELY((((rt1.c2, rt1.c2, rt1.c0)) BETWEEN (('', rt1.c2, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c2))))) ORDER BY (NOT (rt1.c2)) COLLATE NOCASE;
SELECT * FROM rt1, t0, rt0 WHERE ((((rt0.c1)>(rt0.c2)) IN ())) ORDER BY LOWER(DISTINCT (t0.c0 IN (rt1.c0))) ASC, CAST((- (t0.c2)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)>(rt0.c2)) IN ())) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY LOWER(DISTINCT (t0.c0 IN (rt1.c0))) ASC, CAST((- (t0.c2)) AS REAL) DESC  NULLS LAST);
SELECT * FROM rt1, t0, rt0 WHERE ((((rt0.c1)>(rt0.c2)) IN ())) ORDER BY LOWER(DISTINCT (t0.c0 IN (rt1.c0))) ASC, CAST((- (t0.c2)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)>(rt0.c2)) IN ())) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY LOWER(DISTINCT (t0.c0 IN (rt1.c0))) ASC, CAST((- (t0.c2)) AS REAL) DESC  NULLS LAST);
SELECT * FROM rt1, t0, rt0 WHERE ((((rt0.c1)>(rt0.c2)) IN ())) ORDER BY LOWER(DISTINCT (t0.c0 IN (rt1.c0))) ASC, CAST((- (t0.c2)) AS REAL) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c1 IN (rt1.c2))) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 END) AND (((t0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN (rt1.c2))) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 END) AND (((t0.c2) NOTNULL)))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c1 IN (rt1.c2))) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 END) AND (((t0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN (rt1.c2))) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 END) AND (((t0.c2) NOTNULL)))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c1 IN (rt1.c2))) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 END) AND (((t0.c2) NOTNULL))));
SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY rt0.c2 DESC;
SELECT * FROM rt1, rt0 WHERE ((+ ((((rt0.c2))>=((rt0.c0)))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c2))>=((rt0.c0)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((+ ((((rt0.c2))>=((rt0.c0)))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c2))>=((rt0.c0)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((+ ((((rt0.c2))>=((rt0.c0)))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(CAST(rt1.c1 AS TEXT) AS BLOB)) ORDER BY ((CAST(rt1.c0 AS NUMERIC))!=(((t0.c0)==(rt0.c0)))) DESC, CAST(((t0.c2)IS NOT(t0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS TEXT) AS BLOB)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((CAST(rt1.c0 AS NUMERIC))!=(((t0.c0)==(rt0.c0)))) DESC, CAST(((t0.c2)IS NOT(t0.c1)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(CAST(rt1.c1 AS TEXT) AS BLOB)) ORDER BY ((CAST(rt1.c0 AS NUMERIC))!=(((t0.c0)==(rt0.c0)))) DESC, CAST(((t0.c2)IS NOT(t0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS TEXT) AS BLOB)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((CAST(rt1.c0 AS NUMERIC))!=(((t0.c0)==(rt0.c0)))) DESC, CAST(((t0.c2)IS NOT(t0.c1)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(CAST(rt1.c1 AS TEXT) AS BLOB)) ORDER BY ((CAST(rt1.c0 AS NUMERIC))!=(((t0.c0)==(rt0.c0)))) DESC, CAST(((t0.c2)IS NOT(t0.c1)) AS BLOB) ASC;
SELECT * FROM rt0, t0 WHERE (rt0.c0) ORDER BY (((((((t0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c1, rt0.c2)) AND ((rt0.c1, t0.c2, rt0.c2))))OR(CASE WHEN rt0.c2 THEN t0.c0 END)))OR((- (rt0.c0)))) DESC  NULLS FIRST, ((((rt0.c1)&(rt0.c1))) BETWEEN (rt0.c1) AND (((t0.c0)AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((((t0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c1, rt0.c2)) AND ((rt0.c1, t0.c2, rt0.c2))))OR(CASE WHEN rt0.c2 THEN t0.c0 END)))OR((- (rt0.c0)))) DESC  NULLS FIRST, ((((rt0.c1)&(rt0.c1))) BETWEEN (rt0.c1) AND (((t0.c0)AND(rt0.c0)))));
SELECT * FROM rt0, t0 WHERE (rt0.c0) ORDER BY (((((((t0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c1, rt0.c2)) AND ((rt0.c1, t0.c2, rt0.c2))))OR(CASE WHEN rt0.c2 THEN t0.c0 END)))OR((- (rt0.c0)))) DESC  NULLS FIRST, ((((rt0.c1)&(rt0.c1))) BETWEEN (rt0.c1) AND (((t0.c0)AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((((t0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c1, rt0.c2)) AND ((rt0.c1, t0.c2, rt0.c2))))OR(CASE WHEN rt0.c2 THEN t0.c0 END)))OR((- (rt0.c0)))) DESC  NULLS FIRST, ((((rt0.c1)&(rt0.c1))) BETWEEN (rt0.c1) AND (((t0.c0)AND(rt0.c0)))));
SELECT * FROM rt0, t0 WHERE (rt0.c0) ORDER BY (((((((t0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c1, rt0.c2)) AND ((rt0.c1, t0.c2, rt0.c2))))OR(CASE WHEN rt0.c2 THEN t0.c0 END)))OR((- (rt0.c0)))) DESC  NULLS FIRST, ((((rt0.c1)&(rt0.c1))) BETWEEN (rt0.c1) AND (((t0.c0)AND(rt0.c0))));
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((((rt1.c1)<<(rt1.c1)))) AND ((((rt1.c2)GLOB(rt1.c0)))))) ORDER BY json_array(((rt1.c2) NOTNULL), ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((((rt1.c1)<<(rt1.c1)))) AND ((((rt1.c2)GLOB(rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY json_array(((rt1.c2) NOTNULL), ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((((rt1.c1)<<(rt1.c1)))) AND ((((rt1.c2)GLOB(rt1.c0)))))) ORDER BY json_array(((rt1.c2) NOTNULL), ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((((rt1.c1)<<(rt1.c1)))) AND ((((rt1.c2)GLOB(rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY json_array(((rt1.c2) NOTNULL), ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((((rt1.c1)<<(rt1.c1)))) AND ((((rt1.c2)GLOB(rt1.c0)))))) ORDER BY json_array(((rt1.c2) NOTNULL), ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0))) ASC  NULLS FIRST;
SELECT * FROM rt1, rt0, t0 WHERE (rt0.c1) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY NULL DESC);
SELECT * FROM rt1, rt0, t0 WHERE (rt0.c1) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY NULL DESC);
SELECT * FROM rt1, rt0, t0 WHERE (rt0.c1) ORDER BY NULL DESC;
SELECT ALL * FROM t0 WHERE (CASE ((((((((((((t0.c2)AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN x'e5d8' THEN t0.c1 WHEN t0.c0 THEN t0.c2 END THEN (t0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((((((t0.c2)AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN x'e5d8' THEN t0.c1 WHEN t0.c0 THEN t0.c2 END THEN (t0.c2 IN ()) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((((((((((((t0.c2)AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN x'e5d8' THEN t0.c1 WHEN t0.c0 THEN t0.c2 END THEN (t0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((((((t0.c2)AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN x'e5d8' THEN t0.c1 WHEN t0.c0 THEN t0.c2 END THEN (t0.c2 IN ()) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((((((((((((t0.c2)AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN x'e5d8' THEN t0.c1 WHEN t0.c0 THEN t0.c2 END THEN (t0.c2 IN ()) END);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((CAST(rt1.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS REAL) IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((CAST(rt1.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS REAL) IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((CAST(rt1.c2 AS REAL) IN ()));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((- (rt1.c1 COLLATE RTRIM))) ORDER BY LTRIM(((0.0617125428187717)==(rt0.c2)), (- (rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY LTRIM(((0.0617125428187717)=(rt0.c2)), (- (rt0.c0))) ASC);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((- (rt1.c1 COLLATE RTRIM))) ORDER BY LTRIM(((0.0617125428187717)==(rt0.c2)), (- (rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY LTRIM(((0.0617125428187717)=(rt0.c2)), (- (rt0.c0))) ASC);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((- (rt1.c1 COLLATE RTRIM))) ORDER BY LTRIM(((0.0617125428187717)==(rt0.c2)), (- (rt0.c0))) ASC;
SELECT * FROM rt1, rt0 WHERE (LIKELY(DISTINCT rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (LIKELY(DISTINCT rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (LIKELY(DISTINCT rt1.c2 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((rt1.c0) BETWEEN (rt1.c2) AND (1524625209)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) BETWEEN (rt1.c2) AND (1524625209)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 NATURAL JOIN t0);
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((rt1.c0) BETWEEN (rt1.c2) AND (1524625209)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) BETWEEN (rt1.c2) AND (1524625209)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 NATURAL JOIN t0);
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (((rt1.c0) BETWEEN (rt1.c2) AND (1524625209)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)IS NOT('')))|(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS NOT('')))|(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)IS NOT('')))|(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS NOT('')))|(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)IS NOT('')))|(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY rt1.c1  NULLS FIRST;
SELECT * FROM rt0 WHERE ('⨍wGy倏') ORDER BY ((((0X3721165f) NOTNULL))IS(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), COALESCE(TRIM(rt0.c2), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(x'')), ((rt0.c0)IS(rt0.c0)), rt0.c2 COLLATE RTRIM) ASC, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('⨍wGy倏') IS TRUE)  as count FROM rt0 ORDER BY ((((0x3721165f) NOTNULL))IS(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), COALESCE(TRIM(rt0.c2), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(x'')), ((rt0.c0)IS(rt0.c0)), rt0.c2 COLLATE RTRIM) ASC, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE ('⨍wGy倏') ORDER BY ((((0X3721165f) NOTNULL))IS(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), COALESCE(TRIM(rt0.c2), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(x'')), ((rt0.c0)IS(rt0.c0)), rt0.c2 COLLATE RTRIM) ASC, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('⨍wGy倏') IS TRUE)  as count FROM rt0 ORDER BY ((((0x3721165f) NOTNULL))IS(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), COALESCE(TRIM(rt0.c2), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(x'')), ((rt0.c0)IS(rt0.c0)), rt0.c2 COLLATE RTRIM) ASC, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE ('⨍wGy倏') ORDER BY ((((0X3721165f) NOTNULL))IS(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), COALESCE(TRIM(rt0.c2), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(x'')), ((rt0.c0)IS(rt0.c0)), rt0.c2 COLLATE RTRIM) ASC, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)<<(t0.c1)))GLOB((+ (t0.c2))))) ORDER BY ((((((t0.c2)+(t0.c1)))AND(((t0.c1) NOT NULL))))AND(((t0.c2) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)<<(t0.c1)))GLOB((+ (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2)+(t0.c1)))AND(((t0.c1) NOT NULL))))AND(((t0.c2) IS FALSE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)<<(t0.c1)))GLOB((+ (t0.c2))))) ORDER BY ((((((t0.c2)+(t0.c1)))AND(((t0.c1) NOT NULL))))AND(((t0.c2) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)<<(t0.c1)))GLOB((+ (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2)+(t0.c1)))AND(((t0.c1) NOT NULL))))AND(((t0.c2) IS FALSE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)<<(t0.c1)))GLOB((+ (t0.c2))))) ORDER BY ((((((t0.c2)+(t0.c1)))AND(((t0.c1) NOT NULL))))AND(((t0.c2) IS FALSE))) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (((('-1229342711' IN ()))<>(((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1229342711' IN ()))!=(((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((('-1229342711' IN ()))<>(((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1229342711' IN ()))!=(((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((('-1229342711' IN ()))<>(((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END) NOTNULL)) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c1 END) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END) NOTNULL)) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c1 END) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END) NOTNULL)) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c2 END)IS NOT(IFNULL(rt1.c1, rt1.c1)))) ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOT BETWEEN ((((rt1.c1))<=((rt1.c2)))) AND (NULLIF(rt1.c1, rt1.c0))), (+ (((rt1.c2)<<(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c2 END)IS NOT(IFNULL(rt1.c1, rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOT BETWEEN ((((rt1.c1))<=((rt1.c2)))) AND (NULLIF(rt1.c1, rt1.c0))), (+ (((rt1.c2)<<(rt1.c2)))));
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c2 END)IS NOT(IFNULL(rt1.c1, rt1.c1)))) ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOT BETWEEN ((((rt1.c1))<=((rt1.c2)))) AND (NULLIF(rt1.c1, rt1.c0))), (+ (((rt1.c2)<<(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c2 END)IS NOT(IFNULL(rt1.c1, rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOT BETWEEN ((((rt1.c1))<=((rt1.c2)))) AND (NULLIF(rt1.c1, rt1.c0))), (+ (((rt1.c2)<<(rt1.c2)))));
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c2 END)IS NOT(IFNULL(rt1.c1, rt1.c1)))) ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOT BETWEEN ((((rt1.c1))<=((rt1.c2)))) AND (NULLIF(rt1.c1, rt1.c0))), (+ (((rt1.c2)<<(rt1.c2))));
SELECT ALL * FROM rt1, t0 WHERE ((NOT (CAST(rt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((NOT (CAST(rt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((NOT (CAST(rt1.c0 AS TEXT))));
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0)>>('g+Y]'))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>('g+Y]'))) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0)>>('g+Y]'))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>('g+Y]'))) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0)>>('g+Y]'))) ISNULL));
SELECT ALL * FROM rt0, rt1, t0 WHERE ((((~ (rt0.c2)))IS(rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))IS(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((((~ (rt0.c2)))IS(rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))IS(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((((~ (rt0.c2)))IS(rt1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((-1833724612)AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND(rt1.c1))) ORDER BY (- (((rt1.c1)=(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((-1833724612)AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY (- (((rt1.c1)=(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((-1833724612)AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND(rt1.c1))) ORDER BY (- (((rt1.c1)=(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((-1833724612)AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY (- (((rt1.c1)=(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((-1833724612)AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND(rt1.c1))) ORDER BY (- (((rt1.c1)=(rt1.c2))));
SELECT COUNT(*) FROM rt0, t0 WHERE (TRIM(DISTINCT ((rt0.c1)*(t0.c0)))) ORDER BY t0.c2 DESC, rt0.c1 ASC, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c1)*(t0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c2 DESC, rt0.c1 ASC, x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (TRIM(DISTINCT ((rt0.c1)*(t0.c0)))) ORDER BY t0.c2 DESC, rt0.c1 ASC, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c1)*(t0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c2 DESC, rt0.c1 ASC, x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (TRIM(DISTINCT ((rt0.c1)*(t0.c0)))) ORDER BY t0.c2 DESC, rt0.c1 ASC, x'' DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) ORDER BY ((((rt0.c2) IS FALSE))-((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))  NULLS LAST, ((json_quote(rt0.c0))<=(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE))-((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))  NULLS LAST, ((json_quote(rt0.c0))<=(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) ORDER BY ((((rt0.c2) IS FALSE))-((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))  NULLS LAST, ((json_quote(rt0.c0))<=(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE))-((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))  NULLS LAST, ((json_quote(rt0.c0))<=(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) ORDER BY ((((rt0.c2) IS FALSE))-((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))  NULLS LAST, ((json_quote(rt0.c0))<=(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))));
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((((((((((t0.c1, x'13b2', rt1.c0))!=((rt1.c1, rt0.c2, rt0.c2))))OR(t0.c2 COLLATE NOCASE)))OR(NULLIF(rt1.c0, rt0.c1))))AND(((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND(((rt0.c2)!=(t0.c0))))) ORDER BY (t0.c0 COLLATE NOCASE IN (((((rt0.c1)OR(t0.c2)))AND(rt0.c2)), ((x'') IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c1, x'13b2', rt1.c0))!=((rt1.c1, rt0.c2, rt0.c2))))OR(t0.c2 COLLATE NOCASE)))OR(NULLIF(rt1.c0, rt0.c1))))AND(((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND(((rt0.c2)<>(t0.c0))))) IS TRUE)  as count FROM rt1 NOT INDEXED, t0, rt0 ORDER BY (t0.c0 COLLATE NOCASE IN (((((rt0.c1)OR(t0.c2)))AND(rt0.c2)), ((x'') IS TRUE))));
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((((((((((t0.c1, x'13b2', rt1.c0))!=((rt1.c1, rt0.c2, rt0.c2))))OR(t0.c2 COLLATE NOCASE)))OR(NULLIF(rt1.c0, rt0.c1))))AND(((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND(((rt0.c2)!=(t0.c0))))) ORDER BY (t0.c0 COLLATE NOCASE IN (((((rt0.c1)OR(t0.c2)))AND(rt0.c2)), ((x'') IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c1, x'13b2', rt1.c0))!=((rt1.c1, rt0.c2, rt0.c2))))OR(t0.c2 COLLATE NOCASE)))OR(NULLIF(rt1.c0, rt0.c1))))AND(((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND(((rt0.c2)<>(t0.c0))))) IS TRUE)  as count FROM rt1 NOT INDEXED, t0, rt0 ORDER BY (t0.c0 COLLATE NOCASE IN (((((rt0.c1)OR(t0.c2)))AND(rt0.c2)), ((x'') IS TRUE))));
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((((((((((t0.c1, x'13b2', rt1.c0))!=((rt1.c1, rt0.c2, rt0.c2))))OR(t0.c2 COLLATE NOCASE)))OR(NULLIF(rt1.c0, rt0.c1))))AND(((t0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND(((rt0.c2)!=(t0.c0))))) ORDER BY (t0.c0 COLLATE NOCASE IN (((((rt0.c1)OR(t0.c2)))AND(rt0.c2)), ((x'') IS TRUE)));
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i12 NATURAL JOIN rt1 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (CASE t0.c2  WHEN rt0.c1 THEN t0.c1 ELSE rt1.c1 END) AND (((t0.c2) IS FALSE)))) ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))) AND (((rt1.c0)<=(t0.c2))))  NULLS LAST, rt1.c2 ASC  NULLS FIRST, LIKELY((~ (t0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0))) NOT BETWEEN (CASE t0.c2  WHEN rt0.c1 THEN t0.c1 ELSE rt1.c1 END) AND (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, t0 INDEXED BY i12 NATURAL JOIN rt1 ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))) AND (((rt1.c0)<=(t0.c2))))  NULLS LAST, rt1.c2 ASC  NULLS FIRST, LIKELY((~ (t0.c1))) DESC);
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i12 NATURAL JOIN rt1 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (CASE t0.c2  WHEN rt0.c1 THEN t0.c1 ELSE rt1.c1 END) AND (((t0.c2) IS FALSE)))) ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))) AND (((rt1.c0)<=(t0.c2))))  NULLS LAST, rt1.c2 ASC  NULLS FIRST, LIKELY((~ (t0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0))) NOT BETWEEN (CASE t0.c2  WHEN rt0.c1 THEN t0.c1 ELSE rt1.c1 END) AND (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, t0 INDEXED BY i12 NATURAL JOIN rt1 ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))) AND (((rt1.c0)<=(t0.c2))))  NULLS LAST, rt1.c2 ASC  NULLS FIRST, LIKELY((~ (t0.c1))) DESC);
SELECT ALL * FROM rt1, rt0, t0 WHERE (CAST((((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2))) AS REAL)) ORDER BY (((rt0.c0) NOT NULL) IN ()) DESC  NULLS LAST, CASE WHEN CAST(0.31850688575325126 AS TEXT) THEN (t0.c1 IN (t0.c0)) END, rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2))) AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((rt0.c0) NOT NULL) IN ()) DESC  NULLS LAST, CASE WHEN CAST(0.31850688575325126 AS TEXT) THEN (t0.c1 IN (t0.c0)) END, rt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (CAST((((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2))) AS REAL)) ORDER BY (((rt0.c0) NOT NULL) IN ()) DESC  NULLS LAST, CASE WHEN CAST(0.31850688575325126 AS TEXT) THEN (t0.c1 IN (t0.c0)) END, rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2))) AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((rt0.c0) NOT NULL) IN ()) DESC  NULLS LAST, CASE WHEN CAST(0.31850688575325126 AS TEXT) THEN (t0.c1 IN (t0.c0)) END, rt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (CAST((((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2))) AS REAL)) ORDER BY (((rt0.c0) NOT NULL) IN ()) DESC  NULLS LAST, CASE WHEN CAST(0.31850688575325126 AS TEXT) THEN (t0.c1 IN (t0.c0)) END, rt0.c0 ASC  NULLS LAST;
SELECT * FROM t0 WHERE ('IxtiIo') ORDER BY CASE WHEN ((((((((t0.c1)OR(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0)) THEN CAST(t0.c2 AS BLOB) ELSE CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 END END DESC  NULLS LAST, CASE WHEN ((t0.c1)*(t0.c2)) THEN x'' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('IxtiIo') IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((((((t0.c1)OR(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0)) THEN CAST(t0.c2 AS BLOB) ELSE CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 END END DESC  NULLS LAST, CASE WHEN ((t0.c1)*(t0.c2)) THEN x'' END DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ('IxtiIo') ORDER BY CASE WHEN ((((((((t0.c1)OR(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0)) THEN CAST(t0.c2 AS BLOB) ELSE CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 END END DESC  NULLS LAST, CASE WHEN ((t0.c1)*(t0.c2)) THEN x'' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('IxtiIo') IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((((((t0.c1)OR(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0)) THEN CAST(t0.c2 AS BLOB) ELSE CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 END END DESC  NULLS LAST, CASE WHEN ((t0.c1)*(t0.c2)) THEN x'' END DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ('IxtiIo') ORDER BY CASE WHEN ((((((((t0.c1)OR(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0)) THEN CAST(t0.c2 AS BLOB) ELSE CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 END END DESC  NULLS LAST, CASE WHEN ((t0.c1)*(t0.c2)) THEN x'' END DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c2 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c2 AS TEXT) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c2 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c2 AS TEXT) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c2 AS TEXT) AS BLOB));
SELECT COUNT(*) FROM t0, rt0 WHERE (((((t0.c2) IS TRUE))IS NOT((t0.c2 IN (t0.c2))))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE))IS NOT((t0.c2 IN (t0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((t0.c2) IS TRUE))IS NOT((t0.c2 IN (t0.c2))))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE))IS NOT((t0.c2 IN (t0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((t0.c2) IS TRUE))IS NOT((t0.c2 IN (t0.c2))))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)IS(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)IS(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)IS(rt0.c0)) COLLATE RTRIM);
SELECT * FROM t0 INNER JOIN rt1 ON (((+ (rt1.c1)))%((((''))==((rt1.c1))))) LEFT OUTER JOIN rt0 ON ((rt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CASE WHEN rt0.c0 THEN rt1.c2 WHEN t0.c2 THEN t0.c2 WHEN rt1.c1 THEN rt0.c1 ELSE x'' END)) WHERE ((('6') BETWEEN (((t0.c1)-(rt0.c2))) AND (UPPER(DISTINCT 0xffffffffbffbbcf9)))) ORDER BY (x'' IN ()) COLLATE RTRIM, ((rt0.c1 COLLATE RTRIM)>>((- (rt1.c2))))  NULLS LAST, CASE WHEN t0.c0 COLLATE BINARY THEN (((rt1.c2, t0.c0, rt0.c0))>((rt1.c1, t0.c1, rt0.c1))) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((('6') BETWEEN (((t0.c1)-(rt0.c2))) AND (UPPER(DISTINCT 0Xffffffffbffbbcf9)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((+ (rt1.c1)))%((((''))=((rt1.c1))))) LEFT OUTER JOIN rt0 ON ((rt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CASE WHEN rt0.c0 THEN rt1.c2 WHEN t0.c2 THEN t0.c2 WHEN rt1.c1 THEN rt0.c1 ELSE x'' END)) ORDER BY (x'' IN ()) COLLATE RTRIM, ((rt0.c1 COLLATE RTRIM)>>((- (rt1.c2))))  NULLS LAST, CASE WHEN t0.c0 COLLATE BINARY THEN (((rt1.c2, t0.c0, rt0.c0))>((rt1.c1, t0.c1, rt0.c1))) END DESC);
SELECT * FROM t0 INNER JOIN rt1 ON (((+ (rt1.c1)))%((((''))==((rt1.c1))))) LEFT OUTER JOIN rt0 ON ((rt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CASE WHEN rt0.c0 THEN rt1.c2 WHEN t0.c2 THEN t0.c2 WHEN rt1.c1 THEN rt0.c1 ELSE x'' END)) WHERE ((('6') BETWEEN (((t0.c1)-(rt0.c2))) AND (UPPER(DISTINCT 0xffffffffbffbbcf9)))) ORDER BY (x'' IN ()) COLLATE RTRIM, ((rt0.c1 COLLATE RTRIM)>>((- (rt1.c2))))  NULLS LAST, CASE WHEN t0.c0 COLLATE BINARY THEN (((rt1.c2, t0.c0, rt0.c0))>((rt1.c1, t0.c1, rt0.c1))) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((('6') BETWEEN (((t0.c1)-(rt0.c2))) AND (UPPER(DISTINCT 0Xffffffffbffbbcf9)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((+ (rt1.c1)))%((((''))=((rt1.c1))))) LEFT OUTER JOIN rt0 ON ((rt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CASE WHEN rt0.c0 THEN rt1.c2 WHEN t0.c2 THEN t0.c2 WHEN rt1.c1 THEN rt0.c1 ELSE x'' END)) ORDER BY (x'' IN ()) COLLATE RTRIM, ((rt0.c1 COLLATE RTRIM)>>((- (rt1.c2))))  NULLS LAST, CASE WHEN t0.c0 COLLATE BINARY THEN (((rt1.c2, t0.c0, rt0.c0))>((rt1.c1, t0.c1, rt0.c1))) END DESC);
SELECT * FROM t0 INNER JOIN rt1 ON (((+ (rt1.c1)))%((((''))==((rt1.c1))))) LEFT OUTER JOIN rt0 ON ((rt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CASE WHEN rt0.c0 THEN rt1.c2 WHEN t0.c2 THEN t0.c2 WHEN rt1.c1 THEN rt0.c1 ELSE x'' END)) WHERE ((('6') BETWEEN (((t0.c1)-(rt0.c2))) AND (UPPER(DISTINCT 0xffffffffbffbbcf9)))) ORDER BY (x'' IN ()) COLLATE RTRIM, ((rt0.c1 COLLATE RTRIM)>>((- (rt1.c2))))  NULLS LAST, CASE WHEN t0.c0 COLLATE BINARY THEN (((rt1.c2, t0.c0, rt0.c0))>((rt1.c1, t0.c1, rt0.c1))) END DESC;
SELECT ALL * FROM rt0, t0 CROSS JOIN rt1 ON rt0.c1 WHERE (((t0.c2)GLOB(rt0.c1)) COLLATE RTRIM) ORDER BY ((+ (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)GLOB(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 CROSS JOIN rt1 ON rt0.c1 ORDER BY ((+ (rt0.c0)) IN ()));
SELECT ALL * FROM rt0, t0 CROSS JOIN rt1 ON rt0.c1 WHERE (((t0.c2)GLOB(rt0.c1)) COLLATE RTRIM) ORDER BY ((+ (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)GLOB(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 CROSS JOIN rt1 ON rt0.c1 ORDER BY ((+ (rt0.c0)) IN ()));
SELECT ALL * FROM rt0, t0 CROSS JOIN rt1 ON rt0.c1 WHERE (((t0.c2)GLOB(rt0.c1)) COLLATE RTRIM) ORDER BY ((+ (rt0.c0)) IN ());
SELECT * FROM rt1 CROSS JOIN t0 ON (((rt1.c0) NOTNULL) IN ()) RIGHT OUTER JOIN rt0 ON ((rt1.c2)/(rt0.c0)) COLLATE RTRIM WHERE ((((NOT (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((rt1.c0) NOTNULL) IN ()) RIGHT OUTER JOIN rt0 ON ((rt1.c2)/(rt0.c0)) COLLATE RTRIM);
SELECT * FROM rt1 CROSS JOIN t0 ON (((rt1.c0) NOTNULL) IN ()) RIGHT OUTER JOIN rt0 ON ((rt1.c2)/(rt0.c0)) COLLATE RTRIM WHERE ((((NOT (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((rt1.c0) NOTNULL) IN ()) RIGHT OUTER JOIN rt0 ON ((rt1.c2)/(rt0.c0)) COLLATE RTRIM);
SELECT * FROM rt1 CROSS JOIN t0 ON (((rt1.c0) NOTNULL) IN ()) RIGHT OUTER JOIN rt0 ON ((rt1.c2)/(rt0.c0)) COLLATE RTRIM WHERE ((((NOT (rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY t0.c0 ASC  NULLS LAST, ((((CAST(rt1.c0 AS INTEGER))OR(((rt1.c1) IS TRUE))))OR(((t0.c0)OR(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 ORDER BY t0.c0 ASC  NULLS LAST, ((((CAST(rt1.c0 AS INTEGER))OR(((rt1.c1) IS TRUE))))OR(((t0.c0)OR(rt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY t0.c0 ASC  NULLS LAST, ((((CAST(rt1.c0 AS INTEGER))OR(((rt1.c1) IS TRUE))))OR(((t0.c0)OR(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 ORDER BY t0.c0 ASC  NULLS LAST, ((((CAST(rt1.c0 AS INTEGER))OR(((rt1.c1) IS TRUE))))OR(((t0.c0)OR(rt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY t0.c0 ASC  NULLS LAST, ((((CAST(rt1.c0 AS INTEGER))OR(((rt1.c1) IS TRUE))))OR(((t0.c0)OR(rt1.c2)))) DESC;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON t0.c1 LEFT OUTER JOIN rt0 ON CAST((((rt1.c0))<>((rt1.c2))) AS INTEGER) WHERE ((NOT (((t0.c0)<=(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0)<=(NULL))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON t0.c1 LEFT OUTER JOIN rt0 ON CAST((((rt1.c0))<>((rt1.c2))) AS INTEGER));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON t0.c1 LEFT OUTER JOIN rt0 ON CAST((((rt1.c0))<>((rt1.c2))) AS INTEGER) WHERE ((NOT (((t0.c0)<=(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0)<=(NULL))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON t0.c1 LEFT OUTER JOIN rt0 ON CAST((((rt1.c0))<>((rt1.c2))) AS INTEGER));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON t0.c1 LEFT OUTER JOIN rt0 ON CAST((((rt1.c0))<>((rt1.c2))) AS INTEGER) WHERE ((NOT (((t0.c0)<=(NULL)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CAST(x'' AS BLOB)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c2 WHEN NULL THEN rt0.c2 END) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS BLOB)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c2 WHEN NULL THEN rt0.c2 END) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CAST(x'' AS BLOB)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c2 WHEN NULL THEN rt0.c2 END) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS BLOB)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c2 WHEN NULL THEN rt0.c2 END) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CAST(x'' AS BLOB)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c2 WHEN NULL THEN rt0.c2 END) AND ((rt0.c1 IN ()))));
SELECT ALL * FROM t0, rt0 WHERE (CAST((x'' IN ()) AS REAL)) ORDER BY (LENGTH(t0.c2) IN (CAST(t0.c1 AS INTEGER), t0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (LENGTH(t0.c2) IN (CAST(t0.c1 AS INTEGER), t0.c1)) ASC);
SELECT ALL * FROM t0, rt0 WHERE (CAST((x'' IN ()) AS REAL)) ORDER BY (LENGTH(t0.c2) IN (CAST(t0.c1 AS INTEGER), t0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (LENGTH(t0.c2) IN (CAST(t0.c1 AS INTEGER), t0.c1)) ASC);
SELECT ALL * FROM t0, rt0 WHERE (CAST((x'' IN ()) AS REAL)) ORDER BY (LENGTH(t0.c2) IN (CAST(t0.c1 AS INTEGER), t0.c1)) ASC;
SELECT * FROM t0 FULL OUTER JOIN rt1 ON (~ ((((x'', t0.c2, t0.c1))<>((t0.c0, t0.c2, rt1.c0))))) WHERE (((((((0.7238892105987733) NOT BETWEEN (rt1.c2) AND (rt1.c2)))AND(((rt1.c0) NOTNULL))))OR(((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((0.7238892105987733) NOT BETWEEN (rt1.c2) AND (rt1.c2)))AND(((rt1.c0) NOTNULL))))OR(((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (~ ((((x'', t0.c2, t0.c1))!=((t0.c0, t0.c2, rt1.c0))))));
SELECT * FROM t0 FULL OUTER JOIN rt1 ON (~ ((((x'', t0.c2, t0.c1))<>((t0.c0, t0.c2, rt1.c0))))) WHERE (((((((0.7238892105987733) NOT BETWEEN (rt1.c2) AND (rt1.c2)))AND(((rt1.c0) NOTNULL))))OR(((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((0.7238892105987733) NOT BETWEEN (rt1.c2) AND (rt1.c2)))AND(((rt1.c0) NOTNULL))))OR(((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (~ ((((x'', t0.c2, t0.c1))!=((t0.c0, t0.c2, rt1.c0))))));
SELECT * FROM t0 FULL OUTER JOIN rt1 ON (~ ((((x'', t0.c2, t0.c1))<>((t0.c0, t0.c2, rt1.c0))))) WHERE (((((((0.7238892105987733) NOT BETWEEN (rt1.c2) AND (rt1.c2)))AND(((rt1.c0) NOTNULL))))OR(((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON t0.c0 CROSS JOIN rt1 ON '-784420437' WHERE (CASE WHEN rt1.c0 THEN ((((((((rt1.c2)OR(rt0.c2)))AND(rt1.c2)))AND(t0.c0)))AND(t0.c0)) ELSE (NOT (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN ((((((((rt1.c2)OR(rt0.c2)))AND(rt1.c2)))AND(t0.c0)))AND(t0.c0)) ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON t0.c0 CROSS JOIN rt1 ON '-784420437');
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON t0.c0 CROSS JOIN rt1 ON '-784420437' WHERE (CASE WHEN rt1.c0 THEN ((((((((rt1.c2)OR(rt0.c2)))AND(rt1.c2)))AND(t0.c0)))AND(t0.c0)) ELSE (NOT (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN ((((((((rt1.c2)OR(rt0.c2)))AND(rt1.c2)))AND(t0.c0)))AND(t0.c0)) ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON t0.c0 CROSS JOIN rt1 ON '-784420437');
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON t0.c0 CROSS JOIN rt1 ON '-784420437' WHERE (CASE WHEN rt1.c0 THEN ((((((((rt1.c2)OR(rt0.c2)))AND(rt1.c2)))AND(t0.c0)))AND(t0.c0)) ELSE (NOT (rt0.c0)) END);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST(rt1.c0 COLLATE NOCASE AS NUMERIC) CROSS JOIN t0 ON ((((((((rt1.c1)OR(CAST(t0.c2 AS REAL))))OR(((t0.c2) ISNULL))))OR(((t0.c1) NOTNULL))))OR((rt1.c2 IN ()))) WHERE (((((((rt0.c2)AND(rt0.c1)))OR(t0.c2)))IS(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c1)))OR(t0.c2)))IS(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST(rt1.c0 COLLATE NOCASE AS NUMERIC) CROSS JOIN t0 ON ((((((((rt1.c1)OR(CAST(t0.c2 AS REAL))))OR(((t0.c2) ISNULL))))OR(((t0.c1) NOTNULL))))OR((rt1.c2 IN ()))));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST(rt1.c0 COLLATE NOCASE AS NUMERIC) CROSS JOIN t0 ON ((((((((rt1.c1)OR(CAST(t0.c2 AS REAL))))OR(((t0.c2) ISNULL))))OR(((t0.c1) NOTNULL))))OR((rt1.c2 IN ()))) WHERE (((((((rt0.c2)AND(rt0.c1)))OR(t0.c2)))IS(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c1)))OR(t0.c2)))IS(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST(rt1.c0 COLLATE NOCASE AS NUMERIC) CROSS JOIN t0 ON ((((((((rt1.c1)OR(CAST(t0.c2 AS REAL))))OR(((t0.c2) ISNULL))))OR(((t0.c1) NOTNULL))))OR((rt1.c2 IN ()))));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST(rt1.c0 COLLATE NOCASE AS NUMERIC) CROSS JOIN t0 ON ((((((((rt1.c1)OR(CAST(t0.c2 AS REAL))))OR(((t0.c2) ISNULL))))OR(((t0.c1) NOTNULL))))OR((rt1.c2 IN ()))) WHERE (((((((rt0.c2)AND(rt0.c1)))OR(t0.c2)))IS(CAST(NULL AS INTEGER))));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((+ ('{''R..')))OR(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((+ ('{''R..')))OR(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((+ ('{''R..')))OR(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((+ ('{''R..')))OR(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((+ ('{''R..')))OR(rt1.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((- (CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((- (CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((- (CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY ((((t0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))=(((t0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) DESC  NULLS LAST, ((((rt1.c1))!=((t0.c2))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((t0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))=(((t0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) DESC  NULLS LAST, ((((rt1.c1))<>((t0.c2))) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY ((((t0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))=(((t0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) DESC  NULLS LAST, ((((rt1.c1))!=((t0.c2))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((t0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))=(((t0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) DESC  NULLS LAST, ((((rt1.c1))<>((t0.c2))) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY ((((t0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))=(((t0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)))) DESC  NULLS LAST, ((((rt1.c1))!=((t0.c2))) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1 NOT INDEXED, rt0 WHERE (((((NULL) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1 NOT INDEXED, rt0 WHERE (((((NULL) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1 NOT INDEXED, rt0 WHERE (((((NULL) NOTNULL)) NOTNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (CAST(rt1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (CAST(rt1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (CAST(rt1.c2 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))AND(0.5694821959544208)))AND(rt0.c0 COLLATE BINARY)))AND(UNLIKELY(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))AND(0.5694821959544208)))AND(rt0.c0 COLLATE BINARY)))AND(UNLIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))AND(0.5694821959544208)))AND(rt0.c0 COLLATE BINARY)))AND(UNLIKELY(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))AND(0.5694821959544208)))AND(rt0.c0 COLLATE BINARY)))AND(UNLIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))AND(0.5694821959544208)))AND(rt0.c0 COLLATE BINARY)))AND(UNLIKELY(rt0.c2))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(rt1.c2 AS TEXT) COLLATE BINARY) ORDER BY ((('k☇>䑂]eaK{')) BETWEEN ((((t0.c2)=(rt1.c2)))) AND (((t0.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 ORDER BY ((('k☇>䑂]eaK{')) BETWEEN ((((t0.c2)==(rt1.c2)))) AND (((t0.c0 IN ())))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(rt1.c2 AS TEXT) COLLATE BINARY) ORDER BY ((('k☇>䑂]eaK{')) BETWEEN ((((t0.c2)=(rt1.c2)))) AND (((t0.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 ORDER BY ((('k☇>䑂]eaK{')) BETWEEN ((((t0.c2)==(rt1.c2)))) AND (((t0.c0 IN ())))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(rt1.c2 AS TEXT) COLLATE BINARY) ORDER BY ((('k☇>䑂]eaK{')) BETWEEN ((((t0.c2)=(rt1.c2)))) AND (((t0.c0 IN ())))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((0Xffffffffb366fab3)AND(rt0.c0)))AND(rt0.c2)))AND('0.4712489934117038')))AND(-1121160540))))>=((CAST(rt0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((((((((0Xffffffffb366fab3)AND(rt0.c0)))AND(rt0.c2)))AND('0.4712489934117038')))AND(-1121160540))))>=((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((0Xffffffffb366fab3)AND(rt0.c0)))AND(rt0.c2)))AND('0.4712489934117038')))AND(-1121160540))))>=((CAST(rt0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((((((((0Xffffffffb366fab3)AND(rt0.c0)))AND(rt0.c2)))AND('0.4712489934117038')))AND(-1121160540))))>=((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((0Xffffffffb366fab3)AND(rt0.c0)))AND(rt0.c2)))AND('0.4712489934117038')))AND(-1121160540))))>=((CAST(rt0.c2 AS BLOB)))));
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt0.c2)<=(t0.c0))) NOTNULL)) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY rt1.c1 DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt0.c2)<=(t0.c0))) NOTNULL)) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY rt1.c1 DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt0.c2)<=(t0.c0))) NOTNULL)) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c0 COLLATE NOCASE)) AND (((((rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, 0.3382574100318897))))))) ORDER BY NULL DESC  NULLS FIRST, (((rt1.c1 IN ()))&(((rt1.c1)>>(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((rt1.c0 COLLATE NOCASE)) AND (((((rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, 0.3382574100318897))))))) IS TRUE)  as count FROM rt1 ORDER BY NULL DESC  NULLS FIRST, (((rt1.c1 IN ()))&(((rt1.c1)>>(rt1.c1)))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c0 COLLATE NOCASE)) AND (((((rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, 0.3382574100318897))))))) ORDER BY NULL DESC  NULLS FIRST, (((rt1.c1 IN ()))&(((rt1.c1)>>(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((rt1.c0 COLLATE NOCASE)) AND (((((rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, 0.3382574100318897))))))) IS TRUE)  as count FROM rt1 ORDER BY NULL DESC  NULLS FIRST, (((rt1.c1 IN ()))&(((rt1.c1)>>(rt1.c1)))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c0 COLLATE NOCASE)) AND (((((rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, 0.3382574100318897))))))) ORDER BY NULL DESC  NULLS FIRST, (((rt1.c1 IN ()))&(((rt1.c1)>>(rt1.c1))));
SELECT * FROM rt1, rt0 WHERE ((((((rt0.c1, rt1.c0, rt0.c1))==((rt0.c1, rt1.c0, 0.7065491408860007))))GLOB(0.8665203673023236))) ORDER BY (((rt0.c1, rt0.c0, rt1.c1)) BETWEEN ((rt0.c0, CAST(rt0.c0 AS NUMERIC), rt0.c2)) AND ((rt0.c2 COLLATE BINARY, ((rt1.c1)LIKE(rt1.c1)), rt1.c1 COLLATE NOCASE))) ASC, ((rt1.c0)>(((rt0.c1) IS TRUE)))  NULLS LAST, (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt1.c0, rt0.c1))=((rt0.c1, rt1.c0, 0.7065491408860007))))GLOB(0.8665203673023236))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c1, rt0.c0, rt1.c1)) BETWEEN ((rt0.c0, CAST(rt0.c0 AS NUMERIC), rt0.c2)) AND ((rt0.c2 COLLATE BINARY, ((rt1.c1)LIKE(rt1.c1)), rt1.c1 COLLATE NOCASE))) ASC, ((rt1.c0)>(((rt0.c1) IS TRUE)))  NULLS LAST, (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END IN ()));
SELECT * FROM rt1, rt0 WHERE ((((((rt0.c1, rt1.c0, rt0.c1))==((rt0.c1, rt1.c0, 0.7065491408860007))))GLOB(0.8665203673023236))) ORDER BY (((rt0.c1, rt0.c0, rt1.c1)) BETWEEN ((rt0.c0, CAST(rt0.c0 AS NUMERIC), rt0.c2)) AND ((rt0.c2 COLLATE BINARY, ((rt1.c1)LIKE(rt1.c1)), rt1.c1 COLLATE NOCASE))) ASC, ((rt1.c0)>(((rt0.c1) IS TRUE)))  NULLS LAST, (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt1.c0, rt0.c1))=((rt0.c1, rt1.c0, 0.7065491408860007))))GLOB(0.8665203673023236))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c1, rt0.c0, rt1.c1)) BETWEEN ((rt0.c0, CAST(rt0.c0 AS NUMERIC), rt0.c2)) AND ((rt0.c2 COLLATE BINARY, ((rt1.c1)LIKE(rt1.c1)), rt1.c1 COLLATE NOCASE))) ASC, ((rt1.c0)>(((rt0.c1) IS TRUE)))  NULLS LAST, (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END IN ()));
SELECT * FROM rt1, rt0 WHERE ((((((rt0.c1, rt1.c0, rt0.c1))==((rt0.c1, rt1.c0, 0.7065491408860007))))GLOB(0.8665203673023236))) ORDER BY (((rt0.c1, rt0.c0, rt1.c1)) BETWEEN ((rt0.c0, CAST(rt0.c0 AS NUMERIC), rt0.c2)) AND ((rt0.c2 COLLATE BINARY, ((rt1.c1)LIKE(rt1.c1)), rt1.c1 COLLATE NOCASE))) ASC, ((rt1.c0)>(((rt0.c1) IS TRUE)))  NULLS LAST, (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END IN ());
SELECT * FROM rt1, rt0, t0 WHERE ((((t0.c2 IN (rt0.c2))) IS TRUE)) ORDER BY (NOT (rt1.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (NOT (rt1.c1)) COLLATE NOCASE);
SELECT * FROM rt1, rt0, t0 WHERE ((((t0.c2 IN (rt0.c2))) IS TRUE)) ORDER BY (NOT (rt1.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (NOT (rt1.c1)) COLLATE NOCASE);
SELECT * FROM rt1, rt0, t0 WHERE ((((t0.c2 IN (rt0.c2))) IS TRUE)) ORDER BY (NOT (rt1.c1)) COLLATE NOCASE;
SELECT ALL * FROM t0, rt1, rt0 WHERE (((rt1.c2 COLLATE RTRIM)%(((((rt0.c2)AND(t0.c2)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)%(((((rt0.c2)AND(t0.c2)))OR(t0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((rt1.c2 COLLATE RTRIM)%(((((rt0.c2)AND(t0.c2)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)%(((((rt0.c2)AND(t0.c2)))OR(t0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((rt1.c2 COLLATE RTRIM)%(((((rt0.c2)AND(t0.c2)))OR(t0.c0)))));
SELECT ALL * FROM rt1, t0, rt0 WHERE (CASE WHEN ((((((((((((t0.c1)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c0)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))) END) ORDER BY ((((rt0.c2) ISNULL)) IS TRUE)  NULLS LAST, ((NULL)-(((t0.c1) ISNULL))) DESC, ((((((rt1.c1)OR(rt1.c1)))AND(t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((((((t0.c1)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c0)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))) END) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((rt0.c2) ISNULL)) IS TRUE)  NULLS LAST, ((NULL)-(((t0.c1) ISNULL))) DESC, ((((((rt1.c1)OR(rt1.c1)))AND(t0.c0))) IS FALSE));
SELECT ALL * FROM rt1, t0, rt0 WHERE (CASE WHEN ((((((((((((t0.c1)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c0)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))) END) ORDER BY ((((rt0.c2) ISNULL)) IS TRUE)  NULLS LAST, ((NULL)-(((t0.c1) ISNULL))) DESC, ((((((rt1.c1)OR(rt1.c1)))AND(t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((((((t0.c1)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c0)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))) END) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((rt0.c2) ISNULL)) IS TRUE)  NULLS LAST, ((NULL)-(((t0.c1) ISNULL))) DESC, ((((((rt1.c1)OR(rt1.c1)))AND(t0.c0))) IS FALSE));
SELECT ALL * FROM rt1, t0, rt0 WHERE (CASE WHEN ((((((((((((t0.c1)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c0)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))) END) ORDER BY ((((rt0.c2) ISNULL)) IS TRUE)  NULLS LAST, ((NULL)-(((t0.c1) ISNULL))) DESC, ((((((rt1.c1)OR(rt1.c1)))AND(t0.c0))) IS FALSE);
SELECT * FROM rt1 WHERE (((((((rt1.c1) ISNULL))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)))AND((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) ISNULL))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)))AND((~ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c1) ISNULL))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)))AND((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) ISNULL))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)))AND((~ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c1) ISNULL))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)))AND((~ (rt1.c1)))));
SELECT * FROM t0 WHERE (json_quote(((t0.c2)!=(t0.c1))));
SELECT SUM(count) FROM (SELECT ((json_quote(((t0.c2)<>(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (json_quote(((t0.c2)!=(t0.c1))));
SELECT SUM(count) FROM (SELECT ((json_quote(((t0.c2)<>(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (json_quote(((t0.c2)!=(t0.c1))));
SELECT ALL COUNT(*) FROM rt1, t0 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN rt1.c1 END)AND(((rt0.c1)+(rt1.c0)))))OR(x'')) WHERE ((+ (rt1.c1))) ORDER BY (((x'' IN ())) BETWEEN (CASE WHEN rt1.c1 THEN t0.c2 ELSE rt1.c1 END) AND (((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c1))) IS TRUE)  as count FROM rt1, t0 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN rt1.c1 END)AND(((rt0.c1)+(rt1.c0)))))OR(x'')) ORDER BY (((x'' IN ())) BETWEEN (CASE WHEN rt1.c1 THEN t0.c2 ELSE rt1.c1 END) AND (((rt0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM rt1, t0 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN rt1.c1 END)AND(((rt0.c1)+(rt1.c0)))))OR(x'')) WHERE ((+ (rt1.c1))) ORDER BY (((x'' IN ())) BETWEEN (CASE WHEN rt1.c1 THEN t0.c2 ELSE rt1.c1 END) AND (((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c1))) IS TRUE)  as count FROM rt1, t0 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN rt1.c1 END)AND(((rt0.c1)+(rt1.c0)))))OR(x'')) ORDER BY (((x'' IN ())) BETWEEN (CASE WHEN rt1.c1 THEN t0.c2 ELSE rt1.c1 END) AND (((rt0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM rt1, t0 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN rt1.c1 END)AND(((rt0.c1)+(rt1.c0)))))OR(x'')) WHERE ((+ (rt1.c1))) ORDER BY (((x'' IN ())) BETWEEN (CASE WHEN rt1.c1 THEN t0.c2 ELSE rt1.c1 END) AND (((rt0.c2) IS TRUE)));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON CAST(CAST(t0.c2 AS BLOB) AS BLOB) RIGHT OUTER JOIN rt0 ON ((((rt1.c2)OR(t0.c0))) NOT BETWEEN ((rt0.c0 IN (t0.c2))) AND (CAST(rt0.c2 AS BLOB))) WHERE (CAST(ABS(rt1.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt1.c1) AS BLOB)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON CAST(CAST(t0.c2 AS BLOB) AS BLOB) RIGHT OUTER JOIN rt0 ON ((((rt1.c2)OR(t0.c0))) NOT BETWEEN ((rt0.c0 IN (t0.c2))) AND (CAST(rt0.c2 AS BLOB))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON CAST(CAST(t0.c2 AS BLOB) AS BLOB) RIGHT OUTER JOIN rt0 ON ((((rt1.c2)OR(t0.c0))) NOT BETWEEN ((rt0.c0 IN (t0.c2))) AND (CAST(rt0.c2 AS BLOB))) WHERE (CAST(ABS(rt1.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt1.c1) AS BLOB)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON CAST(CAST(t0.c2 AS BLOB) AS BLOB) RIGHT OUTER JOIN rt0 ON ((((rt1.c2)OR(t0.c0))) NOT BETWEEN ((rt0.c0 IN (t0.c2))) AND (CAST(rt0.c2 AS BLOB))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON CAST(CAST(t0.c2 AS BLOB) AS BLOB) RIGHT OUTER JOIN rt0 ON ((((rt1.c2)OR(t0.c0))) NOT BETWEEN ((rt0.c0 IN (t0.c2))) AND (CAST(rt0.c2 AS BLOB))) WHERE (CAST(ABS(rt1.c1) AS BLOB));
SELECT ALL * FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) BETWEEN (CASE t0.c0  WHEN t0.c2 THEN NULL ELSE t0.c2 END) AND (t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) BETWEEN (CASE t0.c0  WHEN t0.c2 THEN NULL ELSE t0.c2 END) AND (t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) BETWEEN (CASE t0.c0  WHEN t0.c2 THEN NULL ELSE t0.c2 END) AND (t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) BETWEEN (CASE t0.c0  WHEN t0.c2 THEN NULL ELSE t0.c2 END) AND (t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) BETWEEN (CASE t0.c0  WHEN t0.c2 THEN NULL ELSE t0.c2 END) AND (t0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2)>=(t0.c2)) COLLATE BINARY) ORDER BY ((MIN('697689928', t0.c1, t0.c1, t0.c2, t0.c0, t0.c2))%(((0.829281344680715) BETWEEN (t0.c1) AND (-1.39591939E9))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)>=(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((MIN('697689928', t0.c1, t0.c1, t0.c2, t0.c0, t0.c2))%(((0.829281344680715) BETWEEN (t0.c1) AND (-1.39591939E9)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2)>=(t0.c2)) COLLATE BINARY) ORDER BY ((MIN('697689928', t0.c1, t0.c1, t0.c2, t0.c0, t0.c2))%(((0.829281344680715) BETWEEN (t0.c1) AND (-1.39591939E9))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)>=(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((MIN('697689928', t0.c1, t0.c1, t0.c2, t0.c0, t0.c2))%(((0.829281344680715) BETWEEN (t0.c1) AND (-1.39591939E9)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2)>=(t0.c2)) COLLATE BINARY) ORDER BY ((MIN('697689928', t0.c1, t0.c1, t0.c2, t0.c0, t0.c2))%(((0.829281344680715) BETWEEN (t0.c1) AND (-1.39591939E9))));
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE DESC  NULLS LAST, ((((t0.c0)LIKE(t0.c1)))<<(CAST(t0.c0 AS NUMERIC))), ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)>((((t0.c2, t0.c0, t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c0, t0.c2, t0.c0)) AND ((t0.c0, 724225.0, t0.c1, t0.c0, t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE DESC  NULLS LAST, ((((t0.c0)LIKE(t0.c1)))<<(CAST(t0.c0 AS NUMERIC))), ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)>((((t0.c2, t0.c0, t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c0, t0.c2, t0.c0)) AND ((t0.c0, 724225.0, t0.c1, t0.c0, t0.c2))))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE DESC  NULLS LAST, ((((t0.c0)LIKE(t0.c1)))<<(CAST(t0.c0 AS NUMERIC))), ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)>((((t0.c2, t0.c0, t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c0, t0.c2, t0.c0)) AND ((t0.c0, 724225.0, t0.c1, t0.c0, t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE DESC  NULLS LAST, ((((t0.c0)LIKE(t0.c1)))<<(CAST(t0.c0 AS NUMERIC))), ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)>((((t0.c2, t0.c0, t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c0, t0.c2, t0.c0)) AND ((t0.c0, 724225.0, t0.c1, t0.c0, t0.c2))))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c0) IS TRUE) COLLATE NOCASE DESC  NULLS LAST, ((((t0.c0)LIKE(t0.c1)))<<(CAST(t0.c0 AS NUMERIC))), ((CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)>((((t0.c2, t0.c0, t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c0, t0.c2, t0.c0)) AND ((t0.c0, 724225.0, t0.c1, t0.c0, t0.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((40920410) IS FALSE) WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 WHEN t0.c2 THEN -445728344 WHEN NULL THEN t0.c2 ELSE t0.c2 END  WHEN 0Xa8b9970 THEN ((rt0.c2) ISNULL) END) ORDER BY ABS(DISTINCT CAST(t0.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 WHEN t0.c2 THEN -445728344 WHEN NULL THEN t0.c2 ELSE t0.c2 END  WHEN 0xa8b9970 THEN ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((40920410) IS FALSE) ORDER BY ABS(DISTINCT CAST(t0.c1 AS REAL)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((40920410) IS FALSE) WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 WHEN t0.c2 THEN -445728344 WHEN NULL THEN t0.c2 ELSE t0.c2 END  WHEN 0Xa8b9970 THEN ((rt0.c2) ISNULL) END) ORDER BY ABS(DISTINCT CAST(t0.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 WHEN t0.c2 THEN -445728344 WHEN NULL THEN t0.c2 ELSE t0.c2 END  WHEN 0xa8b9970 THEN ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((40920410) IS FALSE) ORDER BY ABS(DISTINCT CAST(t0.c1 AS REAL)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((40920410) IS FALSE) WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 WHEN t0.c2 THEN -445728344 WHEN NULL THEN t0.c2 ELSE t0.c2 END  WHEN 0Xa8b9970 THEN ((rt0.c2) ISNULL) END) ORDER BY ABS(DISTINCT CAST(t0.c1 AS REAL));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON TRIM(CAST(rt1.c1 AS TEXT)) LEFT OUTER JOIN rt1 ON CASE WHEN ((rt1.c1)OR(rt1.c0)) THEN CAST(rt0.c2 AS BLOB) WHEN CASE 'Cg'  WHEN '-1984261025' THEN rt1.c2 ELSE rt1.c2 END THEN rt1.c1 COLLATE BINARY WHEN t0.c1 COLLATE RTRIM THEN ((t0.c0) IS FALSE) WHEN rt0.c1 THEN CAST(rt1.c1 AS BLOB) WHEN CASE WHEN t0.c2 THEN t0.c0 END THEN (NOT (rt1.c0)) ELSE ((t0.c1) ISNULL) END WHERE (CAST(((t0.c2)<<(rt0.c0)) AS BLOB)) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)<<(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON TRIM(CAST(rt1.c1 AS TEXT)) LEFT OUTER JOIN rt1 ON CASE WHEN ((rt1.c1)OR(rt1.c0)) THEN CAST(rt0.c2 AS BLOB) WHEN CASE 'Cg'  WHEN '-1984261025' THEN rt1.c2 ELSE rt1.c2 END THEN rt1.c1 COLLATE BINARY WHEN t0.c1 COLLATE RTRIM THEN ((t0.c0) IS FALSE) WHEN rt0.c1 THEN CAST(rt1.c1 AS BLOB) WHEN CASE WHEN t0.c2 THEN t0.c0 END THEN (NOT (rt1.c0)) ELSE ((t0.c1) ISNULL) END ORDER BY rt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON TRIM(CAST(rt1.c1 AS TEXT)) LEFT OUTER JOIN rt1 ON CASE WHEN ((rt1.c1)OR(rt1.c0)) THEN CAST(rt0.c2 AS BLOB) WHEN CASE 'Cg'  WHEN '-1984261025' THEN rt1.c2 ELSE rt1.c2 END THEN rt1.c1 COLLATE BINARY WHEN t0.c1 COLLATE RTRIM THEN ((t0.c0) IS FALSE) WHEN rt0.c1 THEN CAST(rt1.c1 AS BLOB) WHEN CASE WHEN t0.c2 THEN t0.c0 END THEN (NOT (rt1.c0)) ELSE ((t0.c1) ISNULL) END WHERE (CAST(((t0.c2)<<(rt0.c0)) AS BLOB)) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)<<(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON TRIM(CAST(rt1.c1 AS TEXT)) LEFT OUTER JOIN rt1 ON CASE WHEN ((rt1.c1)OR(rt1.c0)) THEN CAST(rt0.c2 AS BLOB) WHEN CASE 'Cg'  WHEN '-1984261025' THEN rt1.c2 ELSE rt1.c2 END THEN rt1.c1 COLLATE BINARY WHEN t0.c1 COLLATE RTRIM THEN ((t0.c0) IS FALSE) WHEN rt0.c1 THEN CAST(rt1.c1 AS BLOB) WHEN CASE WHEN t0.c2 THEN t0.c0 END THEN (NOT (rt1.c0)) ELSE ((t0.c1) ISNULL) END ORDER BY rt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((('2016847598', CASE t0.c0  WHEN 'Qm' THEN '0.31850688575325126' ELSE t0.c0 END, ((t0.c0)%(t0.c2))))>(((~ (t0.c2)), ABS(DISTINCT t0.c2), (0.6343334109617333 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((('2016847598', CASE t0.c0  WHEN 'Qm' THEN '0.31850688575325126' ELSE t0.c0 END, ((t0.c0)%(t0.c2))))>(((~ (t0.c2)), ABS(DISTINCT t0.c2), (0.6343334109617333 IN ()))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((('2016847598', CASE t0.c0  WHEN 'Qm' THEN '0.31850688575325126' ELSE t0.c0 END, ((t0.c0)%(t0.c2))))>(((~ (t0.c2)), ABS(DISTINCT t0.c2), (0.6343334109617333 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((('2016847598', CASE t0.c0  WHEN 'Qm' THEN '0.31850688575325126' ELSE t0.c0 END, ((t0.c0)%(t0.c2))))>(((~ (t0.c2)), ABS(DISTINCT t0.c2), (0.6343334109617333 IN ()))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((('2016847598', CASE t0.c0  WHEN 'Qm' THEN '0.31850688575325126' ELSE t0.c0 END, ((t0.c0)%(t0.c2))))>(((~ (t0.c2)), ABS(DISTINCT t0.c2), (0.6343334109617333 IN ())))));
SELECT * FROM rt1, t0, rt0 WHERE (1.841259344E9) ORDER BY ((t0.c1 IN (rt0.c2)) IN ()) ASC, CAST(((((rt0.c2)AND(t0.c2)))OR(t0.c2)) AS REAL) DESC, ((((CASE rt1.c0  WHEN t0.c1 THEN t0.c1 END)AND(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c1 WHEN rt1.c2 THEN rt1.c1 END)))AND((('-2103298838')!=(t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1.841259344E9) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((t0.c1 IN (rt0.c2)) IN ()) ASC, CAST(((((rt0.c2)AND(t0.c2)))OR(t0.c2)) AS REAL) DESC, ((((CASE rt1.c0  WHEN t0.c1 THEN t0.c1 END)AND(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c1 WHEN rt1.c2 THEN rt1.c1 END)))AND((('-2103298838')!=(t0.c2)))) DESC  NULLS FIRST);
SELECT * FROM rt1, t0, rt0 WHERE (1.841259344E9) ORDER BY ((t0.c1 IN (rt0.c2)) IN ()) ASC, CAST(((((rt0.c2)AND(t0.c2)))OR(t0.c2)) AS REAL) DESC, ((((CASE rt1.c0  WHEN t0.c1 THEN t0.c1 END)AND(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c1 WHEN rt1.c2 THEN rt1.c1 END)))AND((('-2103298838')!=(t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1.841259344E9) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((t0.c1 IN (rt0.c2)) IN ()) ASC, CAST(((((rt0.c2)AND(t0.c2)))OR(t0.c2)) AS REAL) DESC, ((((CASE rt1.c0  WHEN t0.c1 THEN t0.c1 END)AND(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c1 WHEN rt1.c2 THEN rt1.c1 END)))AND((('-2103298838')!=(t0.c2)))) DESC  NULLS FIRST);
SELECT * FROM rt1, t0, rt0 WHERE (1.841259344E9) ORDER BY ((t0.c1 IN (rt0.c2)) IN ()) ASC, CAST(((((rt0.c2)AND(t0.c2)))OR(t0.c2)) AS REAL) DESC, ((((CASE rt1.c0  WHEN t0.c1 THEN t0.c1 END)AND(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c1 WHEN rt1.c2 THEN rt1.c1 END)))AND((('-2103298838')!=(t0.c2)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY ((((t0.c0) IS TRUE))IS(UNLIKELY(rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((t0.c0) IS TRUE))IS(UNLIKELY(rt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY ((((t0.c0) IS TRUE))IS(UNLIKELY(rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((t0.c0) IS TRUE))IS(UNLIKELY(rt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY ((((t0.c0) IS TRUE))IS(UNLIKELY(rt1.c0)))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CASE ((((t0.c0)AND(x'3cbed15b')))OR(1.7976931348623157E308))  WHEN ((x'')||(t0.c0)) THEN CAST(t0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)AND(x'3cbed15b')))OR(1.7976931348623157E308))  WHEN ((x'')||(t0.c0)) THEN CAST(t0.c2 AS NUMERIC) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ((((t0.c0)AND(x'3cbed15b')))OR(1.7976931348623157E308))  WHEN ((x'')||(t0.c0)) THEN CAST(t0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)AND(x'3cbed15b')))OR(1.7976931348623157E308))  WHEN ((x'')||(t0.c0)) THEN CAST(t0.c2 AS NUMERIC) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ((((t0.c0)AND(x'3cbed15b')))OR(1.7976931348623157E308))  WHEN ((x'')||(t0.c0)) THEN CAST(t0.c2 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt1.c1) ORDER BY (NOT (rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (NOT (rt0.c2 COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt1.c1) ORDER BY (NOT (rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (NOT (rt0.c2 COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt1.c1) ORDER BY (NOT (rt0.c2 COLLATE NOCASE)) DESC;
SELECT ALL * FROM rt0, rt1 WHERE (((((1.708699022E9)AND(((rt0.c1)OR(rt1.c1)))))OR(((((rt0.c2)OR(rt1.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((1.708699022E9)AND(((rt0.c1)OR(rt1.c1)))))OR(((((rt0.c2)OR(rt1.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((1.708699022E9)AND(((rt0.c1)OR(rt1.c1)))))OR(((((rt0.c2)OR(rt1.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((1.708699022E9)AND(((rt0.c1)OR(rt1.c1)))))OR(((((rt0.c2)OR(rt1.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((1.708699022E9)AND(((rt0.c1)OR(rt1.c1)))))OR(((((rt0.c2)OR(rt1.c2)))OR(rt0.c0)))));
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (CAST((NOT (rt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (CAST((NOT (rt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (CAST((NOT (rt1.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 WHERE (LOWER(((rt1.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt1.c1) ISNULL))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (LOWER(((rt1.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt1.c1) ISNULL))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (LOWER(((rt1.c1) ISNULL)));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST((~ (rt0.c0)) AS INTEGER)) ORDER BY (((rt1.c0 IN (rt1.c2)))IS NOT(CAST(x'' AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((rt1.c0 IN (rt1.c2)))IS NOT(CAST(x'' AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST((~ (rt0.c0)) AS INTEGER)) ORDER BY (((rt1.c0 IN (rt1.c2)))IS NOT(CAST(x'' AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((rt1.c0 IN (rt1.c2)))IS NOT(CAST(x'' AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CAST((~ (rt0.c0)) AS INTEGER)) ORDER BY (((rt1.c0 IN (rt1.c2)))IS NOT(CAST(x'' AS NUMERIC)))  NULLS LAST;
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt1.c0 COLLATE RTRIM)OR((((t0.c0, t0.c0, NULL, rt1.c0, rt1.c0))<>((rt0.c1, rt0.c2, t0.c1, rt1.c1, rt0.c1))))))OR('31417438')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 COLLATE RTRIM)OR((((t0.c0, t0.c0, NULL, rt1.c0, rt1.c0))<>((rt0.c1, rt0.c2, t0.c1, rt1.c1, rt0.c1))))))OR('31417438'))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt1.c0 COLLATE RTRIM)OR((((t0.c0, t0.c0, NULL, rt1.c0, rt1.c0))<>((rt0.c1, rt0.c2, t0.c1, rt1.c1, rt0.c1))))))OR('31417438')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 COLLATE RTRIM)OR((((t0.c0, t0.c0, NULL, rt1.c0, rt1.c0))<>((rt0.c1, rt0.c2, t0.c1, rt1.c1, rt0.c1))))))OR('31417438'))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt1.c0 COLLATE RTRIM)OR((((t0.c0, t0.c0, NULL, rt1.c0, rt1.c0))<>((rt0.c1, rt0.c2, t0.c1, rt1.c1, rt0.c1))))))OR('31417438')));
SELECT * FROM rt0, t0 WHERE (((((((((0Xffffffffc6f5b2b0)AND(CASE WHEN t0.c2 THEN t0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END)))AND(CASE t0.c1  WHEN rt0.c2 THEN t0.c2 ELSE rt0.c0 END)))AND(((rt0.c1)&(rt0.c2)))))OR(IFNULL(rt0.c1, t0.c2)))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((0xffffffffc6f5b2b0)AND(CASE WHEN t0.c2 THEN t0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END)))AND(CASE t0.c1  WHEN rt0.c2 THEN t0.c2 ELSE rt0.c0 END)))AND(((rt0.c1)&(rt0.c2)))))OR(IFNULL(rt0.c1, t0.c2)))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (((((((((0Xffffffffc6f5b2b0)AND(CASE WHEN t0.c2 THEN t0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END)))AND(CASE t0.c1  WHEN rt0.c2 THEN t0.c2 ELSE rt0.c0 END)))AND(((rt0.c1)&(rt0.c2)))))OR(IFNULL(rt0.c1, t0.c2)))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((0xffffffffc6f5b2b0)AND(CASE WHEN t0.c2 THEN t0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END)))AND(CASE t0.c1  WHEN rt0.c2 THEN t0.c2 ELSE rt0.c0 END)))AND(((rt0.c1)&(rt0.c2)))))OR(IFNULL(rt0.c1, t0.c2)))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (((((((((0Xffffffffc6f5b2b0)AND(CASE WHEN t0.c2 THEN t0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END)))AND(CASE t0.c1  WHEN rt0.c2 THEN t0.c2 ELSE rt0.c0 END)))AND(((rt0.c1)&(rt0.c2)))))OR(IFNULL(rt0.c1, t0.c2)))) ORDER BY rt0.c2  NULLS LAST;
SELECT * FROM rt0 WHERE (((TIME(rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0))&(((rt0.c0) NOTNULL)))) ORDER BY (~ (rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((TIME(rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0))&(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE (((TIME(rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0))&(((rt0.c0) NOTNULL)))) ORDER BY (~ (rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((TIME(rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0))&(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE (((TIME(rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c0))&(((rt0.c0) NOTNULL)))) ORDER BY (~ (rt0.c1 COLLATE RTRIM));
SELECT * FROM rt1, t0 WHERE (TRIM(rt1.c1 COLLATE NOCASE, rt1.c0));
SELECT SUM(count) FROM (SELECT ((TRIM(rt1.c1 COLLATE NOCASE, rt1.c0)) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (TRIM(rt1.c1 COLLATE NOCASE, rt1.c0));
SELECT SUM(count) FROM (SELECT ((TRIM(rt1.c1 COLLATE NOCASE, rt1.c0)) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (TRIM(rt1.c1 COLLATE NOCASE, rt1.c0));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c2) ORDER BY (((t0.c1)) NOT BETWEEN (((~ (NULL)))) AND (((((t0.c1)) BETWEEN (('-150921468')) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((t0.c1)) NOT BETWEEN (((~ (NULL)))) AND (((((t0.c1)) BETWEEN (('-150921468')) AND ((t0.c0)))))));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c2) ORDER BY (((t0.c1)) NOT BETWEEN (((~ (NULL)))) AND (((((t0.c1)) BETWEEN (('-150921468')) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((t0.c1)) NOT BETWEEN (((~ (NULL)))) AND (((((t0.c1)) BETWEEN (('-150921468')) AND ((t0.c0)))))));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c2) ORDER BY (((t0.c1)) NOT BETWEEN (((~ (NULL)))) AND (((((t0.c1)) BETWEEN (('-150921468')) AND ((t0.c0))))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED FULL OUTER JOIN t0 ON ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((rt0.c1 IN ())) AND (LOWER(DISTINCT rt0.c0))) WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CASE WHEN rt0.c1 THEN 48159592 END) AND ((((-1.7976931348623157E308, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((rt0.c0, 'x2탍t/+!V', rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CASE WHEN rt0.c1 THEN 48159592 END) AND ((((-1.7976931348623157E308, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((rt0.c0, 'x2탍t/+!V', rt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((rt0.c1 IN ())) AND (LOWER(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED FULL OUTER JOIN t0 ON ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((rt0.c1 IN ())) AND (LOWER(DISTINCT rt0.c0))) WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CASE WHEN rt0.c1 THEN 48159592 END) AND ((((-1.7976931348623157E308, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((rt0.c0, 'x2탍t/+!V', rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CASE WHEN rt0.c1 THEN 48159592 END) AND ((((-1.7976931348623157E308, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((rt0.c0, 'x2탍t/+!V', rt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((rt0.c1 IN ())) AND (LOWER(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED FULL OUTER JOIN t0 ON ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((rt0.c1 IN ())) AND (LOWER(DISTINCT rt0.c0))) WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CASE WHEN rt0.c1 THEN 48159592 END) AND ((((-1.7976931348623157E308, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((rt0.c0, 'x2탍t/+!V', rt0.c0))))));
SELECT * FROM rt1, t0, rt0 WHERE (((0.6440532818866083)GLOB((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.6440532818866083)GLOB((t0.c0 IN ())))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (((0.6440532818866083)GLOB((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.6440532818866083)GLOB((t0.c0 IN ())))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (((0.6440532818866083)GLOB((t0.c0 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY (((NOT (t0.c0)))<(CAST(t0.c2 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c0)))<(CAST(t0.c2 AS BLOB))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY (((NOT (t0.c0)))<(CAST(t0.c2 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c0)))<(CAST(t0.c2 AS BLOB))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY (((NOT (t0.c0)))<(CAST(t0.c2 AS BLOB))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((((rt1.c2) ISNULL), CASE rt1.c0  WHEN rt1.c1 THEN x'fafb' END, (((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c1))))) AND ((((rt1.c2) IS FALSE), (NOT (rt1.c0)), rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((((rt1.c2) ISNULL), CASE rt1.c0  WHEN rt1.c1 THEN x'fafb' END, (((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c1))))) AND ((((rt1.c2) IS FALSE), (NOT (rt1.c0)), rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((((rt1.c2) ISNULL), CASE rt1.c0  WHEN rt1.c1 THEN x'fafb' END, (((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c1))))) AND ((((rt1.c2) IS FALSE), (NOT (rt1.c0)), rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((((rt1.c2) ISNULL), CASE rt1.c0  WHEN rt1.c1 THEN x'fafb' END, (((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c1))))) AND ((((rt1.c2) IS FALSE), (NOT (rt1.c0)), rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((((rt1.c2) ISNULL), CASE rt1.c0  WHEN rt1.c1 THEN x'fafb' END, (((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c1))))) AND ((((rt1.c2) IS FALSE), (NOT (rt1.c0)), rt1.c1))));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((rt1.c0))>=((rt0.c0))) IN (((((t0.c1)AND(rt1.c0)))OR(rt0.c2))))) ORDER BY ((CAST(t0.c2 AS BLOB)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0))>=((rt0.c0))) IN (((((t0.c1)AND(rt1.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((CAST(t0.c2 AS BLOB)) IS TRUE));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((rt1.c0))>=((rt0.c0))) IN (((((t0.c1)AND(rt1.c0)))OR(rt0.c2))))) ORDER BY ((CAST(t0.c2 AS BLOB)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0))>=((rt0.c0))) IN (((((t0.c1)AND(rt1.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((CAST(t0.c2 AS BLOB)) IS TRUE));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((rt1.c0))>=((rt0.c0))) IN (((((t0.c1)AND(rt1.c0)))OR(rt0.c2))))) ORDER BY ((CAST(t0.c2 AS BLOB)) IS TRUE);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((rt1.c1 IN (t0.c0, 0x27a77bf3))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c2))) AND (CASE rt1.c1  WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (t0.c0, 0x27a77bf3))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c2))) AND (CASE rt1.c1  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((rt1.c1 IN (t0.c0, 0x27a77bf3))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c2))) AND (CASE rt1.c1  WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (t0.c0, 0x27a77bf3))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c2))) AND (CASE rt1.c1  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((rt1.c1 IN (t0.c0, 0x27a77bf3))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c2))) AND (CASE rt1.c1  WHEN rt0.c0 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (UPPER(x'') COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(x'') COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (UPPER(x'') COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(x'') COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (UPPER(x'') COLLATE NOCASE);
SELECT * FROM t0, rt0 WHERE (LOWER(DISTINCT t0.c0) COLLATE NOCASE) ORDER BY 0.6783047253209271  NULLS LAST, t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.6783047253209271  NULLS LAST, t0.c1 DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (LOWER(DISTINCT t0.c0) COLLATE NOCASE) ORDER BY 0.6783047253209271  NULLS LAST, t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.6783047253209271  NULLS LAST, t0.c1 DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (LOWER(DISTINCT t0.c0) COLLATE NOCASE) ORDER BY 0.6783047253209271  NULLS LAST, t0.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((rt1.c2))>((rt1.c0))))+(rt0.c1)) WHERE ((((((rt0.c2 IN ()))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c1)LIKE(rt1.c2))))) ORDER BY (((((((((((rt1.c2))>=(('0.33033761252157046'))))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)))OR(CAST(1.19413277E9 AS TEXT))))OR(CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c0 END))  NULLS FIRST, (((~ (rt1.c0))) BETWEEN (((((((((rt0.c2)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0))) AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c1)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((rt1.c2))>((rt1.c0))))+(rt0.c1)) ORDER BY (((((((((((rt1.c2))>=(('0.33033761252157046'))))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)))OR(CAST(1.19413277E9 AS TEXT))))OR(CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c0 END))  NULLS FIRST, (((~ (rt1.c0))) BETWEEN (((((((((rt0.c2)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0))) AND (rt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((rt1.c2))>((rt1.c0))))+(rt0.c1)) WHERE ((((((rt0.c2 IN ()))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c1)LIKE(rt1.c2))))) ORDER BY (((((((((((rt1.c2))>=(('0.33033761252157046'))))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)))OR(CAST(1.19413277E9 AS TEXT))))OR(CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c0 END))  NULLS FIRST, (((~ (rt1.c0))) BETWEEN (((((((((rt0.c2)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0))) AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c1)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((rt1.c2))>((rt1.c0))))+(rt0.c1)) ORDER BY (((((((((((rt1.c2))>=(('0.33033761252157046'))))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)))OR(CAST(1.19413277E9 AS TEXT))))OR(CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c0 END))  NULLS FIRST, (((~ (rt1.c0))) BETWEEN (((((((((rt0.c2)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0))) AND (rt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (((((rt1.c2))>((rt1.c0))))+(rt0.c1)) WHERE ((((((rt0.c2 IN ()))OR(rt1.c1 COLLATE NOCASE)))AND(((rt1.c1)LIKE(rt1.c2))))) ORDER BY (((((((((((rt1.c2))>=(('0.33033761252157046'))))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)))OR(CAST(1.19413277E9 AS TEXT))))OR(CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c0 END))  NULLS FIRST, (((~ (rt1.c0))) BETWEEN (((((((((rt0.c2)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0))) AND (rt0.c0 COLLATE NOCASE));
SELECT * FROM rt1, t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)|(''))) AND (UPPER(rt1.c2)))) ORDER BY (('-1106886316')*(rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)|(''))) AND (UPPER(rt1.c2)))) IS TRUE)  as count FROM rt1, t0 ORDER BY (('-1106886316')*(rt1.c0))  NULLS LAST);
SELECT * FROM rt1, t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)|(''))) AND (UPPER(rt1.c2)))) ORDER BY (('-1106886316')*(rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)|(''))) AND (UPPER(rt1.c2)))) IS TRUE)  as count FROM rt1, t0 ORDER BY (('-1106886316')*(rt1.c0))  NULLS LAST);
SELECT * FROM rt1, t0 WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)|(''))) AND (UPPER(rt1.c2)))) ORDER BY (('-1106886316')*(rt1.c0))  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 FULL OUTER JOIN rt0 ON ((((((((((((CAST(t0.c0 AS TEXT))OR((('WP,AL\rt') NOT BETWEEN (rt1.c0) AND ('O,!%j')))))AND((((t0.c1))==((''))))))OR(rt1.c1)))OR(((rt1.c2)IS(rt1.c0)))))OR(CAST(rt1.c2 AS NUMERIC))))OR(((rt1.c1)OR(rt0.c0)))) WHERE (CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 END COLLATE RTRIM) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN LIKELIHOOD(rt0.c2, 0.8460085608684711) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0 FULL OUTER JOIN rt0 ON ((((((((((((CAST(t0.c0 AS TEXT))OR((('WP,AL\rt') NOT BETWEEN (rt1.c0) AND ('O,!%j')))))AND((((t0.c1))=((''))))))OR(rt1.c1)))OR(((rt1.c2)IS(rt1.c0)))))OR(CAST(rt1.c2 AS NUMERIC))))OR(((rt1.c1)OR(rt0.c0)))) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN LIKELIHOOD(rt0.c2, 0.8460085608684711) END ASC);
SELECT COUNT(*) FROM rt1, t0 FULL OUTER JOIN rt0 ON ((((((((((((CAST(t0.c0 AS TEXT))OR((('WP,AL\rt') NOT BETWEEN (rt1.c0) AND ('O,!%j')))))AND((((t0.c1))==((''))))))OR(rt1.c1)))OR(((rt1.c2)IS(rt1.c0)))))OR(CAST(rt1.c2 AS NUMERIC))))OR(((rt1.c1)OR(rt0.c0)))) WHERE (CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 END COLLATE RTRIM) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN LIKELIHOOD(rt0.c2, 0.8460085608684711) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0 FULL OUTER JOIN rt0 ON ((((((((((((CAST(t0.c0 AS TEXT))OR((('WP,AL\rt') NOT BETWEEN (rt1.c0) AND ('O,!%j')))))AND((((t0.c1))=((''))))))OR(rt1.c1)))OR(((rt1.c2)IS(rt1.c0)))))OR(CAST(rt1.c2 AS NUMERIC))))OR(((rt1.c1)OR(rt0.c0)))) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN LIKELIHOOD(rt0.c2, 0.8460085608684711) END ASC);
SELECT COUNT(*) FROM rt1, t0 FULL OUTER JOIN rt0 ON ((((((((((((CAST(t0.c0 AS TEXT))OR((('WP,AL\rt') NOT BETWEEN (rt1.c0) AND ('O,!%j')))))AND((((t0.c1))==((''))))))OR(rt1.c1)))OR(((rt1.c2)IS(rt1.c0)))))OR(CAST(rt1.c2 AS NUMERIC))))OR(((rt1.c1)OR(rt0.c0)))) WHERE (CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 END COLLATE RTRIM) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN LIKELIHOOD(rt0.c2, 0.8460085608684711) END ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((x'')>>(CAST(rt1.c1 AS NUMERIC)))) ORDER BY LIKELY(((rt1.c2)-(rt1.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>(CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY LIKELY(((rt1.c2)-(rt1.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((x'')>>(CAST(rt1.c1 AS NUMERIC)))) ORDER BY LIKELY(((rt1.c2)-(rt1.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>(CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY LIKELY(((rt1.c2)-(rt1.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((x'')>>(CAST(rt1.c1 AS NUMERIC)))) ORDER BY LIKELY(((rt1.c2)-(rt1.c2))) ASC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ((~ (CASE WHEN t0.c1 THEN 0.9666041703634785 WHEN rt1.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c1 END))) ORDER BY ((rt1.c0 COLLATE BINARY) NOTNULL);
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t0.c1 THEN 0.9666041703634785 WHEN rt1.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c1 END))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((rt1.c0 COLLATE BINARY) NOTNULL));
SELECT * FROM rt1, t0 WHERE ((~ (CASE WHEN t0.c1 THEN 0.9666041703634785 WHEN rt1.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c1 END))) ORDER BY ((rt1.c0 COLLATE BINARY) NOTNULL);
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t0.c1 THEN 0.9666041703634785 WHEN rt1.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c1 END))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((rt1.c0 COLLATE BINARY) NOTNULL));
SELECT * FROM rt1, t0 WHERE ((~ (CASE WHEN t0.c1 THEN 0.9666041703634785 WHEN rt1.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c1 END))) ORDER BY ((rt1.c0 COLLATE BINARY) NOTNULL);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c1))))=(((t0.c2 IN ())))) CROSS JOIN rt1 ON 1960737673 WHERE (CAST((((rt1.c2))>((rt1.c2))) AS TEXT)) ORDER BY ((((rt0.c2)IS NOT(rt1.c0))) NOT BETWEEN ((NOT (rt1.c2))) AND ((~ (',X*I49BHS'))))  NULLS LAST, ((((((rt0.c1))>=((t0.c1)))))>=(((NOT (t0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c2))>((rt1.c2))) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c1))))==(((t0.c2 IN ())))) CROSS JOIN rt1 ON 1960737673 ORDER BY ((((rt0.c2)IS NOT(rt1.c0))) NOT BETWEEN ((NOT (rt1.c2))) AND ((~ (',X*I49BHS'))))  NULLS LAST, ((((((rt0.c1))>=((t0.c1)))))>=(((NOT (t0.c1))))) DESC  NULLS FIRST);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c1))))=(((t0.c2 IN ())))) CROSS JOIN rt1 ON 1960737673 WHERE (CAST((((rt1.c2))>((rt1.c2))) AS TEXT)) ORDER BY ((((rt0.c2)IS NOT(rt1.c0))) NOT BETWEEN ((NOT (rt1.c2))) AND ((~ (',X*I49BHS'))))  NULLS LAST, ((((((rt0.c1))>=((t0.c1)))))>=(((NOT (t0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c2))>((rt1.c2))) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c1))))==(((t0.c2 IN ())))) CROSS JOIN rt1 ON 1960737673 ORDER BY ((((rt0.c2)IS NOT(rt1.c0))) NOT BETWEEN ((NOT (rt1.c2))) AND ((~ (',X*I49BHS'))))  NULLS LAST, ((((((rt0.c1))>=((t0.c1)))))>=(((NOT (t0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((CAST(0.2520920515730577 AS TEXT)) ISNULL) WHERE (t0.c0) ORDER BY (((x'')) BETWEEN ((((t0.c0)<(t0.c1)))) AND (((NOT (t0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((CAST(0.2520920515730577 AS TEXT)) ISNULL) ORDER BY (((x'')) BETWEEN ((((t0.c0)<(t0.c1)))) AND (((NOT (t0.c1)))))  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((CAST(0.2520920515730577 AS TEXT)) ISNULL) WHERE (t0.c0) ORDER BY (((x'')) BETWEEN ((((t0.c0)<(t0.c1)))) AND (((NOT (t0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((CAST(0.2520920515730577 AS TEXT)) ISNULL) ORDER BY (((x'')) BETWEEN ((((t0.c0)<(t0.c1)))) AND (((NOT (t0.c1)))))  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((CAST(0.2520920515730577 AS TEXT)) ISNULL) WHERE (t0.c0) ORDER BY (((x'')) BETWEEN ((((t0.c0)<(t0.c1)))) AND (((NOT (t0.c1)))))  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c0)) BETWEEN (((t0.c0 IN ()))) AND ((((t0.c1) IS TRUE))))) ORDER BY ((((rt1.c1) NOTNULL))*(CAST(t0.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN (((t0.c0 IN ()))) AND ((((t0.c1) IS TRUE))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((rt1.c1) NOTNULL))*(CAST(t0.c1 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c0)) BETWEEN (((t0.c0 IN ()))) AND ((((t0.c1) IS TRUE))))) ORDER BY ((((rt1.c1) NOTNULL))*(CAST(t0.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN (((t0.c0 IN ()))) AND ((((t0.c1) IS TRUE))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((rt1.c1) NOTNULL))*(CAST(t0.c1 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c0)) BETWEEN (((t0.c0 IN ()))) AND ((((t0.c1) IS TRUE))))) ORDER BY ((((rt1.c1) NOTNULL))*(CAST(t0.c1 AS BLOB))) ASC;
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((((t0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0))))<=((LTRIM(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0))))<=((LTRIM(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((((t0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0))))<=((LTRIM(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0))))<=((LTRIM(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((((t0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0))))<=((LTRIM(rt1.c2)))));
SELECT * FROM t0 WHERE (((('-2103298838')) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) COLLATE RTRIM) ORDER BY (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 END, (((t0.c1))<=((t0.c1))), CAST(t0.c0 AS NUMERIC)))>=(((((t0.c2, NULL, t0.c2))<>((t0.c0, t0.c0, t0.c2))), ((t0.c1) ISNULL), 0X2f27ff12)))  NULLS LAST, t0.c1;
SELECT SUM(count) FROM (SELECT ((((('-2103298838')) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 END, (((t0.c1))<=((t0.c1))), CAST(t0.c0 AS NUMERIC)))>=(((((t0.c2, NULL, t0.c2))<>((t0.c0, t0.c0, t0.c2))), ((t0.c1) ISNULL), 0X2f27ff12)))  NULLS LAST, t0.c1);
SELECT * FROM t0 WHERE (((('-2103298838')) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) COLLATE RTRIM) ORDER BY (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 END, (((t0.c1))<=((t0.c1))), CAST(t0.c0 AS NUMERIC)))>=(((((t0.c2, NULL, t0.c2))<>((t0.c0, t0.c0, t0.c2))), ((t0.c1) ISNULL), 0X2f27ff12)))  NULLS LAST, t0.c1;
SELECT SUM(count) FROM (SELECT ((((('-2103298838')) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 END, (((t0.c1))<=((t0.c1))), CAST(t0.c0 AS NUMERIC)))>=(((((t0.c2, NULL, t0.c2))<>((t0.c0, t0.c0, t0.c2))), ((t0.c1) ISNULL), 0X2f27ff12)))  NULLS LAST, t0.c1);
SELECT * FROM t0 WHERE (((('-2103298838')) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) COLLATE RTRIM) ORDER BY (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 END, (((t0.c1))<=((t0.c1))), CAST(t0.c0 AS NUMERIC)))>=(((((t0.c2, NULL, t0.c2))<>((t0.c0, t0.c0, t0.c2))), ((t0.c1) ISNULL), 0X2f27ff12)))  NULLS LAST, t0.c1;
SELECT ALL * FROM t0, rt1 WHERE ((+ ((NOT (t0.c1))))) ORDER BY ((((((((t0.c2)AND(t0.c1)))OR(rt1.c0)))AND(t0.c1)))AND(t0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t0.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((((t0.c2)AND(t0.c1)))OR(rt1.c0)))AND(t0.c1)))AND(t0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM t0, rt1 WHERE ((+ ((NOT (t0.c1))))) ORDER BY ((((((((t0.c2)AND(t0.c1)))OR(rt1.c0)))AND(t0.c1)))AND(t0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t0.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((((t0.c2)AND(t0.c1)))OR(rt1.c0)))AND(t0.c1)))AND(t0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM t0, rt1 WHERE ((+ ((NOT (t0.c1))))) ORDER BY ((((((((t0.c2)AND(t0.c1)))OR(rt1.c0)))AND(t0.c1)))AND(t0.c0)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED, rt0 WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED, rt0 WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED, rt0 WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c2)))<<('-874881851')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c2)))<<('-874881851'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c2)))<<('-874881851')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c2)))<<('-874881851'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c2)))<<('-874881851')));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0)<=(rt1.c2)))IS(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt1.c2)))IS(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0)<=(rt1.c2)))IS(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt1.c2)))IS(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0)<=(rt1.c2)))IS(rt1.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (UPPER(DISTINCT (('')|(t0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (('')|(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (UPPER(DISTINCT (('')|(t0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (('')|(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (UPPER(DISTINCT (('')|(t0.c0))));
SELECT * FROM rt0, rt1 INDEXED BY i12 WHERE (((((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((rt0.c1))>((rt1.c1))))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((NULL)))))) ORDER BY ((((rt0.c2)OR(rt1.c0))) NOT BETWEEN (((rt1.c2)-(NULL))) AND (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((rt0.c1))>((rt1.c1))))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((NULL)))))) IS TRUE)  as count FROM rt0, rt1 INDEXED BY i12 ORDER BY ((((rt0.c2)OR(rt1.c0))) NOT BETWEEN (((rt1.c2)-(NULL))) AND (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS LAST);
SELECT * FROM rt0, rt1 INDEXED BY i12 WHERE (((((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((rt0.c1))>((rt1.c1))))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((NULL)))))) ORDER BY ((((rt0.c2)OR(rt1.c0))) NOT BETWEEN (((rt1.c2)-(NULL))) AND (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((rt0.c1))>((rt1.c1))))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((NULL)))))) IS TRUE)  as count FROM rt0, rt1 INDEXED BY i12 ORDER BY ((((rt0.c2)OR(rt1.c0))) NOT BETWEEN (((rt1.c2)-(NULL))) AND (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((- (t0.c1)))LIKE(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c1)))LIKE(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((- (t0.c1)))LIKE(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c1)))LIKE(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((- (t0.c1)))LIKE(CAST(rt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN ((t0.c2) IS FALSE) THEN ((t0.c0)<>(rt1.c1)) ELSE ((rt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2) IS FALSE) THEN ((t0.c0)<>(rt1.c1)) ELSE ((rt0.c0) IS TRUE) END) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN ((t0.c2) IS FALSE) THEN ((t0.c0)<>(rt1.c1)) ELSE ((rt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2) IS FALSE) THEN ((t0.c0)<>(rt1.c1)) ELSE ((rt0.c0) IS TRUE) END) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN ((t0.c2) IS FALSE) THEN ((t0.c0)<>(rt1.c1)) ELSE ((rt0.c0) IS TRUE) END);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN 0Xffffffffffcc8c6c THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ((+ ('x2탍t/+!V'))) AND (-3.59328627E8)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0xffffffffffcc8c6c THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ((+ ('x2탍t/+!V'))) AND (-3.59328627E8))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN 0Xffffffffffcc8c6c THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ((+ ('x2탍t/+!V'))) AND (-3.59328627E8)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0xffffffffffcc8c6c THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ((+ ('x2탍t/+!V'))) AND (-3.59328627E8))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN 0Xffffffffffcc8c6c THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ((+ ('x2탍t/+!V'))) AND (-3.59328627E8)));
SELECT COUNT(*) FROM rt0 WHERE (COALESCE((((rt0.c1))<((rt0.c0))), LOWER(rt0.c2))) ORDER BY CASE WHEN TRIM(DISTINCT rt0.c2) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((rt0.c1))<((rt0.c0))), LOWER(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN TRIM(DISTINCT rt0.c2) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (COALESCE((((rt0.c1))<((rt0.c0))), LOWER(rt0.c2))) ORDER BY CASE WHEN TRIM(DISTINCT rt0.c2) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((rt0.c1))<((rt0.c0))), LOWER(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN TRIM(DISTINCT rt0.c2) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (COALESCE((((rt0.c1))<((rt0.c0))), LOWER(rt0.c2))) ORDER BY CASE WHEN TRIM(DISTINCT rt0.c2) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END END  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (CAST(((rt1.c2) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (CAST(((rt1.c2) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (CAST(((rt1.c2) ISNULL) AS NUMERIC));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c2)<<(rt0.c1)))OR(rt0.c0)))OR(0.4145459700518833))) ORDER BY -933961501  NULLS FIRST, CAST((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, x'')) AND ((rt1.c2, rt1.c2, rt0.c2))) AS TEXT), CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)<<(rt0.c1)))OR(rt0.c0)))OR(0.4145459700518833))) IS TRUE)  as count FROM rt1, rt0 ORDER BY -933961501  NULLS FIRST, CAST((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, x'')) AND ((rt1.c2, rt1.c2, rt0.c2))) AS TEXT), CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END AS INTEGER));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c2)<<(rt0.c1)))OR(rt0.c0)))OR(0.4145459700518833))) ORDER BY -933961501  NULLS FIRST, CAST((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, x'')) AND ((rt1.c2, rt1.c2, rt0.c2))) AS TEXT), CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)<<(rt0.c1)))OR(rt0.c0)))OR(0.4145459700518833))) IS TRUE)  as count FROM rt1, rt0 ORDER BY -933961501  NULLS FIRST, CAST((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, x'')) AND ((rt1.c2, rt1.c2, rt0.c2))) AS TEXT), CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c0 END AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt1.c0)OR(t0.c0)))>=(((x'') NOT BETWEEN (t0.c0) AND (rt0.c0)))) CROSS JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (QUOTE(t0.c0)) AND ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c1))))) WHERE (((((rt1.c2)OR('1031090501')))OR(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)OR('1031090501')))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((rt1.c0)OR(t0.c0)))>=(((x'') NOT BETWEEN (t0.c0) AND (rt0.c0)))) CROSS JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (QUOTE(t0.c0)) AND ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt1.c0)OR(t0.c0)))>=(((x'') NOT BETWEEN (t0.c0) AND (rt0.c0)))) CROSS JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (QUOTE(t0.c0)) AND ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c1))))) WHERE (((((rt1.c2)OR('1031090501')))OR(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)OR('1031090501')))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((rt1.c0)OR(t0.c0)))>=(((x'') NOT BETWEEN (t0.c0) AND (rt0.c0)))) CROSS JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (QUOTE(t0.c0)) AND ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT * FROM t0 WHERE ((((t0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c0 COLLATE BINARY, ((t0.c1) IS TRUE), t0.c0 COLLATE BINARY)) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), (- (t0.c0)), (+ (t0.c2)))))) ORDER BY ((CAST(t0.c1 AS INTEGER))|(CASE NULL  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN '(6' THEN t0.c2 ELSE t0.c2 END))  NULLS LAST, LIKELY(DISTINCT CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c0 COLLATE BINARY, ((t0.c1) IS TRUE), t0.c0 COLLATE BINARY)) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), (- (t0.c0)), (+ (t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS INTEGER))|(CASE NULL  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN '(6' THEN t0.c2 ELSE t0.c2 END))  NULLS LAST, LIKELY(DISTINCT CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c0 COLLATE BINARY, ((t0.c1) IS TRUE), t0.c0 COLLATE BINARY)) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), (- (t0.c0)), (+ (t0.c2)))))) ORDER BY ((CAST(t0.c1 AS INTEGER))|(CASE NULL  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN '(6' THEN t0.c2 ELSE t0.c2 END))  NULLS LAST, LIKELY(DISTINCT CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c0 COLLATE BINARY, ((t0.c1) IS TRUE), t0.c0 COLLATE BINARY)) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), (- (t0.c0)), (+ (t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS INTEGER))|(CASE NULL  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN '(6' THEN t0.c2 ELSE t0.c2 END))  NULLS LAST, LIKELY(DISTINCT CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c0 COLLATE BINARY, ((t0.c1) IS TRUE), t0.c0 COLLATE BINARY)) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), (- (t0.c0)), (+ (t0.c2)))))) ORDER BY ((CAST(t0.c1 AS INTEGER))|(CASE NULL  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN '(6' THEN t0.c2 ELSE t0.c2 END))  NULLS LAST, LIKELY(DISTINCT CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE ('-873450403') ORDER BY 568238165  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-873450403') IS TRUE)  as count FROM rt1, rt0 ORDER BY 568238165  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE ('-873450403') ORDER BY 568238165  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-873450403') IS TRUE)  as count FROM rt1, rt0 ORDER BY 568238165  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((- (t0.c0))) BETWEEN (TRIM(1416796563)) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0))) BETWEEN (TRIM(1416796563)) AND (t0.c2))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c0))) BETWEEN (TRIM(1416796563)) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0))) BETWEEN (TRIM(1416796563)) AND (t0.c2))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c0))) BETWEEN (TRIM(1416796563)) AND (t0.c2)));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)OR(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN t0 ON t0.c2 WHERE (CASE WHEN ((t0.c2) NOT NULL) THEN (+ (NULL)) WHEN (- (rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c1 THEN t0.c2 END WHEN (((rt0.c0))<>((rt1.c2))) THEN t0.c1 COLLATE NOCASE ELSE ((t0.c2) NOT BETWEEN (x'') AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2) NOT NULL) THEN (+ (NULL)) WHEN (- (rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c1 THEN t0.c2 END WHEN (((rt0.c0))!=((rt1.c2))) THEN t0.c1 COLLATE NOCASE ELSE ((t0.c2) NOT BETWEEN (x'') AND (rt1.c0)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)OR(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN t0 ON t0.c2);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)OR(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN t0 ON t0.c2 WHERE (CASE WHEN ((t0.c2) NOT NULL) THEN (+ (NULL)) WHEN (- (rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c1 THEN t0.c2 END WHEN (((rt0.c0))<>((rt1.c2))) THEN t0.c1 COLLATE NOCASE ELSE ((t0.c2) NOT BETWEEN (x'') AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2) NOT NULL) THEN (+ (NULL)) WHEN (- (rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c1 THEN t0.c2 END WHEN (((rt0.c0))!=((rt1.c2))) THEN t0.c1 COLLATE NOCASE ELSE ((t0.c2) NOT BETWEEN (x'') AND (rt1.c0)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)OR(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN t0 ON t0.c2);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)OR(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN t0 ON t0.c2 WHERE (CASE WHEN ((t0.c2) NOT NULL) THEN (+ (NULL)) WHEN (- (rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c1 THEN t0.c2 END WHEN (((rt0.c0))<>((rt1.c2))) THEN t0.c1 COLLATE NOCASE ELSE ((t0.c2) NOT BETWEEN (x'') AND (rt1.c0)) END);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((rt1.c2)GLOB(rt1.c1)) IN ()) WHERE ('YXP/*h%H');
SELECT SUM(count) FROM (SELECT ALL (('YXP/*h%H') IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((rt1.c2)GLOB(rt1.c1)) IN ()));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((rt1.c2)GLOB(rt1.c1)) IN ()) WHERE ('YXP/*h%H');
SELECT SUM(count) FROM (SELECT ALL (('YXP/*h%H') IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((rt1.c2)GLOB(rt1.c1)) IN ()));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((rt1.c2)GLOB(rt1.c1)) IN ()) WHERE ('YXP/*h%H');
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((x'')) AND ((((rt0.c2)>>(rt0.c0)))))) ORDER BY ((((rt0.c1)*(rt0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((x'')) AND ((((rt0.c2)>>(rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c1)*(rt0.c1))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((x'')) AND ((((rt0.c2)>>(rt0.c0)))))) ORDER BY ((((rt0.c1)*(rt0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((x'')) AND ((((rt0.c2)>>(rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c1)*(rt0.c1))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((x'')) AND ((((rt0.c2)>>(rt0.c0)))))) ORDER BY ((((rt0.c1)*(rt0.c1))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (CAST(((rt0.c0)-(rt0.c0)) AS REAL)) ORDER BY (((((rt1.c0)OR(NULL)))AND(t0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)-(rt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((((rt1.c0)OR(NULL)))AND(t0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (CAST(((rt0.c0)-(rt0.c0)) AS REAL)) ORDER BY (((((rt1.c0)OR(NULL)))AND(t0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)-(rt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((((rt1.c0)OR(NULL)))AND(t0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (CAST(((rt0.c0)-(rt0.c0)) AS REAL)) ORDER BY (((((rt1.c0)OR(NULL)))AND(t0.c0)) IN ()) DESC;
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((((rt1.c0)/(t0.c1)))OR((((0.0617125428187717)) NOT BETWEEN ((t0.c2)) AND ((rt1.c0))))))AND(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)/(t0.c1)))OR((((0.0617125428187717)) NOT BETWEEN ((t0.c2)) AND ((rt1.c0))))))AND(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((((rt1.c0)/(t0.c1)))OR((((0.0617125428187717)) NOT BETWEEN ((t0.c2)) AND ((rt1.c0))))))AND(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)/(t0.c1)))OR((((0.0617125428187717)) NOT BETWEEN ((t0.c2)) AND ((rt1.c0))))))AND(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((((rt1.c0)/(t0.c1)))OR((((0.0617125428187717)) NOT BETWEEN ((t0.c2)) AND ((rt1.c0))))))AND(CAST(rt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((((((t0.c1)OR(1323814646)))OR(rt0.c1)))GLOB((rt0.c1 IN ())))) ORDER BY ((((t0.c0)AND(t0.c2)))AND(t0.c0)) COLLATE RTRIM, ((((t0.c1))!=((rt1.c2))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)OR(1323814646)))OR(rt0.c1)))GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((t0.c0)AND(t0.c2)))AND(t0.c0)) COLLATE RTRIM, ((((t0.c1))<>((rt1.c2))) IN ()));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((((((t0.c1)OR(1323814646)))OR(rt0.c1)))GLOB((rt0.c1 IN ())))) ORDER BY ((((t0.c0)AND(t0.c2)))AND(t0.c0)) COLLATE RTRIM, ((((t0.c1))!=((rt1.c2))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)OR(1323814646)))OR(rt0.c1)))GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((t0.c0)AND(t0.c2)))AND(t0.c0)) COLLATE RTRIM, ((((t0.c1))<>((rt1.c2))) IN ()));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((((((t0.c1)OR(1323814646)))OR(rt0.c1)))GLOB((rt0.c1 IN ())))) ORDER BY ((((t0.c0)AND(t0.c2)))AND(t0.c0)) COLLATE RTRIM, ((((t0.c1))!=((rt1.c2))) IN ());
SELECT * FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS INTEGER));
SELECT ALL * FROM t0, rt1 WHERE (LIKELY(t0.c1));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(t0.c1)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (LIKELY(t0.c1));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(t0.c1)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (LIKELY(t0.c1));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ()))>(((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))))) ORDER BY (NOT (CAST(t0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))>(((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (CAST(t0.c0 AS BLOB))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ()))>(((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))))) ORDER BY (NOT (CAST(t0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))>(((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (CAST(t0.c0 AS BLOB))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ()))>(((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2))))) ORDER BY (NOT (CAST(t0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON CASE WHEN NULL COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) ELSE ((rt0.c2)&(rt0.c0)) END WHERE ((+ (rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1 INNER JOIN rt0 ON CASE WHEN NULL COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) ELSE ((rt0.c2)&(rt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON CASE WHEN NULL COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) ELSE ((rt0.c2)&(rt0.c0)) END WHERE ((+ (rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1 INNER JOIN rt0 ON CASE WHEN NULL COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) ELSE ((rt0.c2)&(rt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON CASE WHEN NULL COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)) ELSE ((rt0.c2)&(rt0.c0)) END WHERE ((+ (rt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((((((rt1.c0, rt0.c2, t0.c1))<=((rt0.c0, t0.c2, rt0.c2))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0, rt0.c2, t0.c1))<=((rt0.c0, t0.c2, rt0.c2))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((((((rt1.c0, rt0.c2, t0.c1))<=((rt0.c0, t0.c2, rt0.c2))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0, rt0.c2, t0.c1))<=((rt0.c0, t0.c2, rt0.c2))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((((((rt1.c0, rt0.c2, t0.c1))<=((rt0.c0, t0.c2, rt0.c2))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON rt1.c0 COLLATE RTRIM LEFT OUTER JOIN rt1 ON 0.1436681281244524 WHERE (((NULLIF(rt1.c0, rt1.c0))OR((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt1.c0, rt1.c0))OR((t0.c1 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON rt1.c0 COLLATE RTRIM LEFT OUTER JOIN rt1 ON 0.1436681281244524);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON rt1.c0 COLLATE RTRIM LEFT OUTER JOIN rt1 ON 0.1436681281244524 WHERE (((NULLIF(rt1.c0, rt1.c0))OR((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt1.c0, rt1.c0))OR((t0.c1 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON rt1.c0 COLLATE RTRIM LEFT OUTER JOIN rt1 ON 0.1436681281244524);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED WHERE (((((t0.c2)OR(t0.c2))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c2 END) AND (((((t0.c1)OR(rt0.c1)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)OR(t0.c2))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c2 END) AND (((((t0.c1)OR(rt0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED WHERE (((((t0.c2)OR(t0.c2))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c2 END) AND (((((t0.c1)OR(rt0.c1)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)OR(t0.c2))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c2 END) AND (((((t0.c1)OR(rt0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED WHERE (((((t0.c2)OR(t0.c2))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c2 END) AND (((((t0.c1)OR(rt0.c1)))AND(t0.c0)))));
SELECT ALL * FROM rt1 WHERE (((((CAST(rt1.c2 AS TEXT))OR(CAST(rt1.c0 AS NUMERIC))))OR(((rt1.c1) NOTNULL)))) ORDER BY (((+ (rt1.c0)))|(rt1.c0))  NULLS FIRST, ((rt1.c1 IN ()) IN ()), ((CAST(NULL AS NUMERIC)) BETWEEN (((rt1.c2)AND(rt1.c2))) AND (CASE WHEN rt1.c0 THEN rt1.c2 END)), ((((rt1.c2)>>(rt1.c0)))IS((((rt1.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c2 AS TEXT))OR(CAST(rt1.c0 AS NUMERIC))))OR(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY (((+ (rt1.c0)))|(rt1.c0))  NULLS FIRST, ((rt1.c1 IN ()) IN ()), ((CAST(NULL AS NUMERIC)) BETWEEN (((rt1.c2)AND(rt1.c2))) AND (CASE WHEN rt1.c0 THEN rt1.c2 END)), ((((rt1.c2)>>(rt1.c0)))IS((((rt1.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))))));
SELECT ALL * FROM rt1 WHERE (((((CAST(rt1.c2 AS TEXT))OR(CAST(rt1.c0 AS NUMERIC))))OR(((rt1.c1) NOTNULL)))) ORDER BY (((+ (rt1.c0)))|(rt1.c0))  NULLS FIRST, ((rt1.c1 IN ()) IN ()), ((CAST(NULL AS NUMERIC)) BETWEEN (((rt1.c2)AND(rt1.c2))) AND (CASE WHEN rt1.c0 THEN rt1.c2 END)), ((((rt1.c2)>>(rt1.c0)))IS((((rt1.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c2 AS TEXT))OR(CAST(rt1.c0 AS NUMERIC))))OR(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY (((+ (rt1.c0)))|(rt1.c0))  NULLS FIRST, ((rt1.c1 IN ()) IN ()), ((CAST(NULL AS NUMERIC)) BETWEEN (((rt1.c2)AND(rt1.c2))) AND (CASE WHEN rt1.c0 THEN rt1.c2 END)), ((((rt1.c2)>>(rt1.c0)))IS((((rt1.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2))))));
SELECT ALL * FROM rt1 WHERE (((((CAST(rt1.c2 AS TEXT))OR(CAST(rt1.c0 AS NUMERIC))))OR(((rt1.c1) NOTNULL)))) ORDER BY (((+ (rt1.c0)))|(rt1.c0))  NULLS FIRST, ((rt1.c1 IN ()) IN ()), ((CAST(NULL AS NUMERIC)) BETWEEN (((rt1.c2)AND(rt1.c2))) AND (CASE WHEN rt1.c0 THEN rt1.c2 END)), ((((rt1.c2)>>(rt1.c0)))IS((((rt1.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c0) NOT NULL));
SELECT * FROM rt0 WHERE (NULL) ORDER BY (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), ((rt0.c2)OR(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((((((((((x'8228')OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)), (rt0.c0 IN ()), CAST(rt0.c1 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), ((rt0.c2)OR(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((((((((((x'8228')OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)), (rt0.c0 IN ()), CAST(rt0.c1 AS REAL)))) DESC);
SELECT * FROM rt0 WHERE (NULL) ORDER BY (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), ((rt0.c2)OR(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((((((((((x'8228')OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)), (rt0.c0 IN ()), CAST(rt0.c1 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), ((rt0.c2)OR(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((((((((((x'8228')OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)), (rt0.c0 IN ()), CAST(rt0.c1 AS REAL)))) DESC);
SELECT * FROM rt0 WHERE (NULL) ORDER BY (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), ((rt0.c2)OR(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((((((((((x'8228')OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)), (rt0.c0 IN ()), CAST(rt0.c1 AS REAL)))) DESC;
SELECT * FROM t0, rt1 WHERE (CAST(CAST(rt1.c0 AS INTEGER) AS NUMERIC)) ORDER BY ((((rt1.c0)&('-491198807'))) NOTNULL) DESC  NULLS LAST, ((((rt1.c1) NOT BETWEEN (t0.c0) AND (x'')))IS(((t0.c2)!=(t0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((rt1.c0)&('-491198807'))) NOTNULL) DESC  NULLS LAST, ((((rt1.c1) NOT BETWEEN (t0.c0) AND (x'')))IS(((t0.c2)!=(t0.c1)))) DESC  NULLS LAST);
SELECT * FROM t0, rt1 WHERE (CAST(CAST(rt1.c0 AS INTEGER) AS NUMERIC)) ORDER BY ((((rt1.c0)&('-491198807'))) NOTNULL) DESC  NULLS LAST, ((((rt1.c1) NOT BETWEEN (t0.c0) AND (x'')))IS(((t0.c2)!=(t0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((rt1.c0)&('-491198807'))) NOTNULL) DESC  NULLS LAST, ((((rt1.c1) NOT BETWEEN (t0.c0) AND (x'')))IS(((t0.c2)!=(t0.c1)))) DESC  NULLS LAST);
SELECT * FROM t0, rt1 WHERE (CAST(CAST(rt1.c0 AS INTEGER) AS NUMERIC)) ORDER BY ((((rt1.c0)&('-491198807'))) NOTNULL) DESC  NULLS LAST, ((((rt1.c1) NOT BETWEEN (t0.c0) AND (x'')))IS(((t0.c2)!=(t0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((0x47e2031b IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((0x47e2031b IN ()) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((0x47e2031b IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((0x47e2031b IN ()) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((0x47e2031b IN ()) AS TEXT));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (((('FALSE')OR(rt0.c0)))LIKE(rt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((('FALSE')OR(rt0.c0)))LIKE(rt0.c0 COLLATE NOCASE)) ASC);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (((('FALSE')OR(rt0.c0)))LIKE(rt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((('FALSE')OR(rt0.c0)))LIKE(rt0.c0 COLLATE NOCASE)) ASC);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (((('FALSE')OR(rt0.c0)))LIKE(rt0.c0 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c0)LIKE(rt0.c1))))) ORDER BY ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM  NULLS FIRST, ((LTRIM(rt0.c0, rt0.c2))+(((rt0.c2)|(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM  NULLS FIRST, ((LTRIM(rt0.c0, rt0.c2))+(((rt0.c2)|(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c0)LIKE(rt0.c1))))) ORDER BY ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM  NULLS FIRST, ((LTRIM(rt0.c0, rt0.c2))+(((rt0.c2)|(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM  NULLS FIRST, ((LTRIM(rt0.c0, rt0.c2))+(((rt0.c2)|(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c0)LIKE(rt0.c1))))) ORDER BY ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE RTRIM  NULLS FIRST, ((LTRIM(rt0.c0, rt0.c2))+(((rt0.c2)|(rt0.c2)))) ASC;
SELECT ALL * FROM t0, rt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (t0.c2);
SELECT ALL * FROM rt1 WHERE (('&Q' COLLATE BINARY IN ())) ORDER BY CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((('&Q' COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) AS BLOB));
SELECT ALL * FROM rt1 WHERE (('&Q' COLLATE BINARY IN ())) ORDER BY CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((('&Q' COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) AS BLOB));
SELECT ALL * FROM rt1 WHERE (('&Q' COLLATE BINARY IN ())) ORDER BY CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) AS BLOB);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.7427330615454715) ORDER BY (rt0.c0 COLLATE NOCASE IN ((rt0.c1 IN ()))) DESC  NULLS LAST, ((((((0Xffffffff9607ed4f)OR('cz')))OR(rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (NULL)) DESC  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ((0.7427330615454715) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 COLLATE NOCASE IN ((rt0.c1 IN ()))) DESC  NULLS LAST, ((((((0Xffffffff9607ed4f)OR('cz')))OR(rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (NULL)) DESC  NULLS FIRST, rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.7427330615454715) ORDER BY (rt0.c0 COLLATE NOCASE IN ((rt0.c1 IN ()))) DESC  NULLS LAST, ((((((0Xffffffff9607ed4f)OR('cz')))OR(rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (NULL)) DESC  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ((0.7427330615454715) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 COLLATE NOCASE IN ((rt0.c1 IN ()))) DESC  NULLS LAST, ((((((0Xffffffff9607ed4f)OR('cz')))OR(rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (NULL)) DESC  NULLS FIRST, rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.7427330615454715) ORDER BY (rt0.c0 COLLATE NOCASE IN ((rt0.c1 IN ()))) DESC  NULLS LAST, ((((((0Xffffffff9607ed4f)OR('cz')))OR(rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (NULL)) DESC  NULLS FIRST, rt0.c0;
SELECT ALL * FROM rt0, t0 WHERE (((CASE t0.c2  WHEN 'k|F꯵~Y' THEN rt0.c1 END)||(((t0.c2) ISNULL)))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)<<(((t0.c2) NOT NULL))), ((((t0.c2) NOT NULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN 'k|F꯵~Y' THEN rt0.c1 END)||(((t0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)<<(((t0.c2) NOT NULL))), ((((t0.c2) NOT NULL)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((CASE t0.c2  WHEN 'k|F꯵~Y' THEN rt0.c1 END)||(((t0.c2) ISNULL)))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)<<(((t0.c2) NOT NULL))), ((((t0.c2) NOT NULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN 'k|F꯵~Y' THEN rt0.c1 END)||(((t0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)<<(((t0.c2) NOT NULL))), ((((t0.c2) NOT NULL)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((CASE t0.c2  WHEN 'k|F꯵~Y' THEN rt0.c1 END)||(((t0.c2) ISNULL)))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)<<(((t0.c2) NOT NULL))), ((((t0.c2) NOT NULL)) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON CAST(t0.c2 AS INTEGER) WHERE (((((rt1.c2) NOT NULL))=(t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT NULL))=(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON CAST(t0.c2 AS INTEGER));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON CAST(t0.c2 AS INTEGER) WHERE (((((rt1.c2) NOT NULL))=(t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT NULL))=(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON CAST(t0.c2 AS INTEGER));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON CAST(t0.c2 AS INTEGER) WHERE (((((rt1.c2) NOT NULL))=(t0.c1 COLLATE BINARY)));
SELECT * FROM t0, rt0 FULL OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c0, 0.08180630011070666) COLLATE BINARY WHERE (((rt0.c0)AND(rt0.c0)) COLLATE BINARY) ORDER BY CAST(((t0.c0)<(t0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c0, 0.08180630011070666) COLLATE BINARY ORDER BY CAST(((t0.c0)<(t0.c2)) AS BLOB));
SELECT * FROM t0, rt0 FULL OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c0, 0.08180630011070666) COLLATE BINARY WHERE (((rt0.c0)AND(rt0.c0)) COLLATE BINARY) ORDER BY CAST(((t0.c0)<(t0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c0, 0.08180630011070666) COLLATE BINARY ORDER BY CAST(((t0.c0)<(t0.c2)) AS BLOB));
SELECT * FROM t0, rt0 FULL OUTER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c0, 0.08180630011070666) COLLATE BINARY WHERE (((rt0.c0)AND(rt0.c0)) COLLATE BINARY) ORDER BY CAST(((t0.c0)<(t0.c2)) AS BLOB);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)%(0.41967255756456245)))<=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (((((((((((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c1))>=((0.29198629108262786, rt0.c2, '?w\n㐬', rt0.c2, rt0.c1))))OR(((rt0.c1)GLOB(rt0.c2)))))OR((~ (rt0.c0)))))OR(((rt0.c2)IS(rt0.c2)))))AND(((rt0.c1)-(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)%(0.41967255756456245)))<=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c1))>=((0.29198629108262786, rt0.c2, '?w\n㐬', rt0.c2, rt0.c1))))OR(((rt0.c1)GLOB(rt0.c2)))))OR((~ (rt0.c0)))))OR(((rt0.c2)IS(rt0.c2)))))AND(((rt0.c1)-(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)%(0.41967255756456245)))<=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (((((((((((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c1))>=((0.29198629108262786, rt0.c2, '?w\n㐬', rt0.c2, rt0.c1))))OR(((rt0.c1)GLOB(rt0.c2)))))OR((~ (rt0.c0)))))OR(((rt0.c2)IS(rt0.c2)))))AND(((rt0.c1)-(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)%(0.41967255756456245)))<=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c1))>=((0.29198629108262786, rt0.c2, '?w\n㐬', rt0.c2, rt0.c1))))OR(((rt0.c1)GLOB(rt0.c2)))))OR((~ (rt0.c0)))))OR(((rt0.c2)IS(rt0.c2)))))AND(((rt0.c1)-(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)%(0.41967255756456245)))<=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (((((((((((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c1))>=((0.29198629108262786, rt0.c2, '?w\n㐬', rt0.c2, rt0.c1))))OR(((rt0.c1)GLOB(rt0.c2)))))OR((~ (rt0.c0)))))OR(((rt0.c2)IS(rt0.c2)))))AND(((rt0.c1)-(rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1 WHERE (STRFTIME(IFNULL(DISTINCT rt1.c0, rt1.c2), t0.c0, (rt1.c1 IN ()), ((((((((rt1.c2)OR(t0.c2)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)), UNLIKELY(t0.c2)));
SELECT SUM(count) FROM (SELECT ((STRFTIME(IFNULL(DISTINCT rt1.c0, rt1.c2), t0.c0, (rt1.c1 IN ()), ((((((((rt1.c2)OR(t0.c2)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)), UNLIKELY(t0.c2))) IS TRUE)  as count FROM t0 NOT INDEXED, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (STRFTIME(IFNULL(DISTINCT rt1.c0, rt1.c2), t0.c0, (rt1.c1 IN ()), ((((((((rt1.c2)OR(t0.c2)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)), UNLIKELY(t0.c2)));
SELECT SUM(count) FROM (SELECT ((STRFTIME(IFNULL(DISTINCT rt1.c0, rt1.c2), t0.c0, (rt1.c1 IN ()), ((((((((rt1.c2)OR(t0.c2)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)), UNLIKELY(t0.c2))) IS TRUE)  as count FROM t0 NOT INDEXED, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (STRFTIME(IFNULL(DISTINCT rt1.c0, rt1.c2), t0.c0, (rt1.c1 IN ()), ((((((((rt1.c2)OR(t0.c2)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)), UNLIKELY(t0.c2)));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN ((-9.24487748E8)<>('J~﫴6e䡩輤r!')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS BLOB) THEN ((-9.24487748E8)!=('J~﫴6e䡩輤r!')) END) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN ((-9.24487748E8)<>('J~﫴6e䡩輤r!')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS BLOB) THEN ((-9.24487748E8)!=('J~﫴6e䡩輤r!')) END) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN ((-9.24487748E8)<>('J~﫴6e䡩輤r!')) END);
SELECT * FROM rt1 WHERE ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)) IN (HEX(DISTINCT rt1.c1), rt1.c2 COLLATE RTRIM))) ORDER BY ((((rt1.c1 COLLATE BINARY)OR((NOT (rt1.c0)))))OR(rt1.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)) IN (HEX(DISTINCT rt1.c1), rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1 COLLATE BINARY)OR((NOT (rt1.c0)))))OR(rt1.c2 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM rt1 WHERE ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)) IN (HEX(DISTINCT rt1.c1), rt1.c2 COLLATE RTRIM))) ORDER BY ((((rt1.c1 COLLATE BINARY)OR((NOT (rt1.c0)))))OR(rt1.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)) IN (HEX(DISTINCT rt1.c1), rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1 COLLATE BINARY)OR((NOT (rt1.c0)))))OR(rt1.c2 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM rt1 WHERE ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)) IN (HEX(DISTINCT rt1.c1), rt1.c2 COLLATE RTRIM))) ORDER BY ((((rt1.c1 COLLATE BINARY)OR((NOT (rt1.c0)))))OR(rt1.c2 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1 WHERE ('-2103164466' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('-2103164466' COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ('-2103164466' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('-2103164466' COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ('-2103164466' COLLATE RTRIM);
SELECT * FROM t0 WHERE (GLOB(((t0.c1) ISNULL), 0Xffffffff92b3953c COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((t0.c1) ISNULL), 0xffffffff92b3953c COLLATE NOCASE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (GLOB(((t0.c1) ISNULL), 0Xffffffff92b3953c COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((t0.c1) ISNULL), 0xffffffff92b3953c COLLATE NOCASE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (GLOB(((t0.c1) ISNULL), 0Xffffffff92b3953c COLLATE NOCASE));
SELECT * FROM rt1, rt0, t0 WHERE ('-1772888488');
SELECT SUM(count) FROM (SELECT (('-1772888488') IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE ('-1772888488');
SELECT SUM(count) FROM (SELECT (('-1772888488') IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE ('-1772888488');
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c0) NOTNULL))));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN rt1 ON PRINTF(((rt1.c1)>=(rt0.c2))) WHERE (((((t0.c0)AND(t0.c2))) BETWEEN (((rt0.c2) NOT BETWEEN (t0.c2) AND (rt1.c0))) AND ((NOT (rt0.c2))))) ORDER BY rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(t0.c2))) BETWEEN (((rt0.c2) NOT BETWEEN (t0.c2) AND (rt1.c0))) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN rt1 ON PRINTF(((rt1.c1)>=(rt0.c2))) ORDER BY rt1.c0  NULLS LAST);
SELECT * FROM t0, rt0 RIGHT OUTER JOIN rt1 ON PRINTF(((rt1.c1)>=(rt0.c2))) WHERE (((((t0.c0)AND(t0.c2))) BETWEEN (((rt0.c2) NOT BETWEEN (t0.c2) AND (rt1.c0))) AND ((NOT (rt0.c2))))) ORDER BY rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(t0.c2))) BETWEEN (((rt0.c2) NOT BETWEEN (t0.c2) AND (rt1.c0))) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN rt1 ON PRINTF(((rt1.c1)>=(rt0.c2))) ORDER BY rt1.c0  NULLS LAST);
SELECT * FROM t0, rt0 RIGHT OUTER JOIN rt1 ON PRINTF(((rt1.c1)>=(rt0.c2))) WHERE (((((t0.c0)AND(t0.c2))) BETWEEN (((rt0.c2) NOT BETWEEN (t0.c2) AND (rt1.c0))) AND ((NOT (rt0.c2))))) ORDER BY rt1.c0  NULLS LAST;
SELECT ALL * FROM rt1, t0 INNER JOIN rt0 ON (((t0.c0 IN ())) NOT BETWEEN (((rt0.c0)>>(rt0.c1))) AND (rt1.c1)) WHERE (CAST(((rt1.c2)*(t0.c0)) AS NUMERIC)) ORDER BY ((rt1.c0) NOT NULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)*(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt0 ON (((t0.c0 IN ())) NOT BETWEEN (((rt0.c0)>>(rt0.c1))) AND (rt1.c1)) ORDER BY ((rt1.c0) NOT NULL) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt1, t0 INNER JOIN rt0 ON (((t0.c0 IN ())) NOT BETWEEN (((rt0.c0)>>(rt0.c1))) AND (rt1.c1)) WHERE (CAST(((rt1.c2)*(t0.c0)) AS NUMERIC)) ORDER BY ((rt1.c0) NOT NULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)*(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt0 ON (((t0.c0 IN ())) NOT BETWEEN (((rt0.c0)>>(rt0.c1))) AND (rt1.c1)) ORDER BY ((rt1.c0) NOT NULL) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt1, t0 INNER JOIN rt0 ON (((t0.c0 IN ())) NOT BETWEEN (((rt0.c0)>>(rt0.c1))) AND (rt1.c1)) WHERE (CAST(((rt1.c2)*(t0.c0)) AS NUMERIC)) ORDER BY ((rt1.c0) NOT NULL) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (0.8792652277659678) ORDER BY (- (((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((0.8792652277659678) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (- (((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1)))));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (0.8792652277659678) ORDER BY (- (((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((0.8792652277659678) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (- (((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1)))));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (0.8792652277659678) ORDER BY (- (((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1))));
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY 0xffffffff96ca7951  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY 0xffffffff96ca7951  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY 0xffffffff96ca7951  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY 0xffffffff96ca7951  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) ORDER BY 0xffffffff96ca7951  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c1)%(t0.c1))) NOT BETWEEN (CAST(t0.c1 AS BLOB)) AND (CAST(t0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)%(t0.c1))) NOT BETWEEN (CAST(t0.c1 AS BLOB)) AND (CAST(t0.c1 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1)%(t0.c1))) NOT BETWEEN (CAST(t0.c1 AS BLOB)) AND (CAST(t0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)%(t0.c1))) NOT BETWEEN (CAST(t0.c1 AS BLOB)) AND (CAST(t0.c1 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1)%(t0.c1))) NOT BETWEEN (CAST(t0.c1 AS BLOB)) AND (CAST(t0.c1 AS BLOB))));
SELECT * FROM rt1 WHERE (((rt1.c1)LIKE(rt1.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c1)LIKE(rt1.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c1)LIKE(rt1.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c1)LIKE(rt1.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c1)LIKE(rt1.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((~ (((t0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((~ (((t0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((~ (((t0.c2) IS FALSE))));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((((rt1.c0, rt1.c0, rt1.c0))==((rt1.c0, t0.c2, rt1.c1)))))<((((((t0.c1)AND(rt1.c1)))AND(rt1.c2))))) WHERE (((rt1.c1 COLLATE NOCASE)-(((rt1.c2)>>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE)-(((rt1.c2)>>(rt1.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((((((rt1.c0, rt1.c0, rt1.c0))=((rt1.c0, t0.c2, rt1.c1)))))<((((((t0.c1)AND(rt1.c1)))AND(rt1.c2))))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((((rt1.c0, rt1.c0, rt1.c0))==((rt1.c0, t0.c2, rt1.c1)))))<((((((t0.c1)AND(rt1.c1)))AND(rt1.c2))))) WHERE (((rt1.c1 COLLATE NOCASE)-(((rt1.c2)>>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE)-(((rt1.c2)>>(rt1.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((((((rt1.c0, rt1.c0, rt1.c0))=((rt1.c0, t0.c2, rt1.c1)))))<((((((t0.c1)AND(rt1.c1)))AND(rt1.c2))))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON ((((((rt1.c0, rt1.c0, rt1.c0))==((rt1.c0, t0.c2, rt1.c1)))))<((((((t0.c1)AND(rt1.c1)))AND(rt1.c2))))) WHERE (((rt1.c1 COLLATE NOCASE)-(((rt1.c2)>>(rt1.c1)))));
