-- Time: 2024/06/09 23:54:48
-- Database: database33
-- Database version: 3.40.0
-- seed value: 4207558833
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
UPDATE OR ABORT rt0 SET (c2)=(NULL) WHERE ((((rt0.c1)GLOB(rt0.c4)))==(rt0.c4 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE rt0 SET c3='99044424'; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 0.20835994463129426, 'WfN', CASE ((('-970261115'))<>((NULL)))  WHEN CAST(NULL AS REAL) THEN (('wfn') BETWEEN (x'') AND ('{\n]2!~u.')) ELSE '-1283401747' END, 0.3010449036430811); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3) VALUES (-970261115, 0.7809687868037101), (0.061354699242638366, '-1283401747'), (NULL, x''), ('years', ''), (NULL, -970261115); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, NULL, x'', x'', '-423734803'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='', c4=NULL; -- 0ms;
UPDATE rt0 SET c3='99044424'; -- 0ms;
UPDATE OR ABORT rt0 SET c2=0x2ff680f0; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'') WHERE ((rt0.c2 COLLATE BINARY)OR(((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c4)))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3, c2)=(0.3010449036430811, x'e177') WHERE ((((((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END)AND(((rt0.c1) IS FALSE))))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND ('99044424')))))OR((((rt0.c1, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, ')+qzUa', rt0.c3))))))AND(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'4c5c', c1=0.39497292894730085; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c2, c1)=('-708577944', '{\n]2!~u.', x'') WHERE (((((((((((((~ (rt0.c4)))AND(rt0.c3)))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))))AND(rt0.c0 COLLATE NOCASE)))OR((((rt0.c4))==((rt0.c1))))))OR((- (rt0.c4)))); -- 4ms;
PRAGMA incremental_vacuum(-1177954561); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES ('813226279'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES ('0.061354699242638366'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c0, c4) VALUES (NULL, NULL, NULL, 0x1d68a483); -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES ('-1283401747', ''); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES ('-2101491462', NULL, NULL); -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2, c0, c1) VALUES (NULL, 0X2ff680f0, x'9c17', 0.9745086209715759); -- 0ms;
DELETE FROM vt0 WHERE ('-1308793169' IN ((~ (vt0.c0)), ((vt0.c0) IS FALSE))); -- 0ms;
UPDATE OR FAIL rt0 SET c4=NULL WHERE CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0) VALUES (NULL, NULL), (NULL, 0.28009644238872355), (0xffffffffea66bc7d, 0.9916766047718245); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1177954561'); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2, c4) VALUES (-513464177, 0.7071530762975622, -1.177954561E9); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c3, c4) VALUES (-708577944, x'', NULL, 0.2076832857308758); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c0, c2) VALUES (x'', 0xffffffffb380d7ed, 0.3512307300933234, 0xffffffffb047594a); -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.9916766047718245) WHERE (((((rt0.c2 IN ()))OR((rt0.c3 IN ()))))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'', x'92bb'); -- 0ms;
PRAGMA journal_mode = DELETE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL), (x'93df'), (NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=-1934465612; -- 0ms;
UPDATE OR ABORT vt0 SET c0=x'', c0='1973555353' WHERE ((((vt0.c0) IS TRUE)) IS TRUE); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=''; -- 0ms;
DROP TABLE rt0; -- 12ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt0 SET (c3, c0)=(x'', 0.2076832857308758); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4, +c5 BLOB ); -- 4ms;
PRAGMA temp.cache_size = 0; -- 0ms;
PRAGMA main.busy_timeout = 10000; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c0=-2.101491462E9 WHERE (((t0.c0 IN (t0.c0, x''))) BETWEEN (((x'') NOT BETWEEN (t0.c0) AND (t0.c0))) AND ((~ (t0.c0)))); -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
PRAGMA main.auto_vacuum; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1822765702 sz=99044424 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-487003578 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN '1967487233' THEN -1308793169 WHEN NULL THEN 0.4709356841265947 WHEN '-487003578' THEN ')+qzUa' END THEN ((((0.8795057047214672)AND(NULL)))OR('')) WHEN ((NULL)==('-708577944')) THEN CASE x''  WHEN NULL THEN -4.23734803E8 END WHEN (x'5967' IN ()) THEN CASE WHEN '771638920' THEN 0Xffffffffd8bc2191 END ELSE (((('暯wG/PM}F')OR('')))AND(x'')) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.7027040804342648 IN ())) NOT BETWEEN (((0.4427203931625071) IS FALSE)) AND ((('0.7809687868037101') NOT BETWEEN (x'') AND ('-2007089760')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')&(NULL)) AS INTEGER); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (('731442628')||(x'7283')), ((x'cfea4dfc') IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('Mz*G2GE0')=(0.4709356841265947)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1385543345 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=771638920 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'g{}yc\r%{%|J'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1469189985 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=239258042 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>((0.9915664979324319)))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-734268130'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1920642249'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-788276081 sz=-306787563 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'2b2e' IN ())) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((- (0Xffffffff9c021ec2))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-142613457 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1337501366 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-142613457 sz=-408370772 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1928620555 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=292048323 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')%(x'e702')))!=(((2079208855) NOT BETWEEN (NULL) AND (-1920642249)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=311796055 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1465775630 0 sz=564180218 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-89743723 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1572728264 sz=804684016 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1477736266 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((('')AND(x'ffc6')))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(2.079208855E9, 0X3c5a7a03)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN ((((1461524377))==((NULL)))) AND ((('0.9916766047718245') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1076184091 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xffffffffc424c762, -1645076284, 0.49301936827052195)) NOT BETWEEN ((0.7006789744659037, x'2639', 0x6ca53286)) AND ((0.7006789744659037, '>G쓾B}', x''))))!=((('')=('1551969336')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT CASE '270837342'  WHEN '' THEN NULL WHEN NULL THEN '-970261115' WHEN '-408370772' THEN '<<-km(?' END, 0.7307404023794893); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1155302928 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'2926'))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (CAST(x'' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '813226279'  WHEN 0x38d42be3 THEN x'd008' ELSE NULL END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1350895218 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-70258964 sz=1469189985 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-471918498 sz=155212483 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-708577944 sz=-372545609'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Rz') NOT BETWEEN (x'') AND ('7*H1''(Ed')))OR(x'1c9990d1')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8689989245045399, NULL, 430268276))<((NULL, '\nd', x''))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE -1262856438; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=292048323 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1203375113 684446480 sz=780850151 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1002577452 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1437203340 sz=1906994000 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1262856438 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT ('640145581' IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1964693255' COLLATE NOCASE) NOT BETWEEN (x'd58e') AND ((x'2dbe' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -2051488038 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-89743723 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-658759279 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT))%(CAST(x'1a8c' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '421600845 1461524377'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1264462375 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6990615678454859 IN ()))<((('1684832728')&(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1138591948'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-1350895218 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE UNLIKELY('-372545609')  WHEN '' THEN ((x'd246') NOT BETWEEN (0.7000189215089714) AND (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') BETWEEN (NULL) AND (x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'' IN (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (''))))<=((((0.44145106851010596) BETWEEN ('-2007089760') AND ('t'''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-970261115 551892453 sz=1418310407 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1314777127'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((INSTR(0.630474138074754, NULL))&(((x'7b9f2803') NOT BETWEEN ('-2101491462') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN x'' ELSE 0.10072121552005298 END) BETWEEN (((((((((-7.08577944E8)OR('')))AND(0X424e3da4)))AND('2126266840')))AND(NULL))) AND (((((x'')OR('80')))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=430268276 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)|(311796055))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND(0.6544370580860918))))>=(((('2079208855') BETWEEN (NULL) AND ('SB'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT ('0.9745086209715759'))))>((((('Q鋽<AH')) NOT BETWEEN ((x'')) AND (('P[l^د')))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.44218374239140434) NOT BETWEEN (x'') AND (x'd1a8')) AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=50202159 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT x'', 0.8147548230337553 COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL)AND(NULL)))OR('684446480')))AND('-1002577452')))OR(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1656183273 noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '767371091 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL))>((x''))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=292048323 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.9759261600798057)!=(1.461524377E9)))AND(CAST(x'' AS INTEGER))))AND((x'' IN ()))))OR(('5a)''' IN ()))))AND(0.5213780347566443 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-70258964 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=405405263 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>(('UDk|_pjn')))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('77002024')<<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT NULL)  WHEN ('}5dw*v{bN' IN (NULL)) THEN x'' COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1740994326 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1268231023 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-825717 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=475568234 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1111110313 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((('421600845'))<>(('1425323541')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 493397123 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-362365827 sz=-658759279 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1354455773' IN ())))=(((('') IS FALSE)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=395829206 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '668561893 -2139901141 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=215854937'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '1597305341' THEN '!w5D]헙L!' END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-780408487 sz=551892453 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1264462375 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (x'ff98' IN (0.26538781120135824))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=795025490 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND(NULL))) NOT BETWEEN ((+ (NULL))) AND (((x'') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1383104415 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('77002024' AS REAL))OR(json_insert(0.013240842978244016, '*[', 0.8754537931117986))))AND((((x'd487'))<>((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE('qxvJ|jP', -766878746))+(((((((((NULL)OR(0.21216794409145856)))OR(-2029075120)))OR(x'')))AND('1656183273')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2126266840 0 sz=435312352 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-2061524936 0 sz=0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '551892453 0 sz=1217258482'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1145224749 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>=('-1407608411')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.47066311688763496) IS TRUE))AND(CAST('%' AS REAL))))OR((0.4254173893929333 IN (0.9442236897229056)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1645076284 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1138591948 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=953428963 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '767371091'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=494785515 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=579646928 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'95ab' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1920642249 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (('-1560591085') IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '437393001 0 sz=0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS TEXT))AND(CASE 1076184091  WHEN '-970261115' THEN '-213303157' WHEN 'VaD똕f3r7' THEN 0.12371839549581909 WHEN x'' THEN x'14ab' WHEN 0.7519181399100556 THEN '1742190835' WHEN '1469189985' THEN '-1177954561' END)))AND(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1906994000'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', 5.64180218E8, x'a42e'))>=((x'', x'', '')))) NOT BETWEEN (('-643322345' IN (0.42792228208829997))) AND (((((NULL)OR(x'')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2027490368 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1111110313'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LOWER(0.8512905981103559) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2425507867454012) IS FALSE))|(COALESCE(0Xffffffffad8f8061, 0.471476239261568))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=869082742'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((~ ('i#* ')))AND((x'' IN (NULL)))))AND(((x'') BETWEEN ('>G쓾B}') AND (0.8473740872155006)))))AND('1572728264')))OR(CASE '>W'  WHEN 'c' THEN 0.03080158105236186 ELSE x'' END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1677582654 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 0Xfffffffff634238d  WHEN x'' THEN x'' WHEN NULL THEN '851915383' WHEN x'2acb' THEN x'' END THEN ((((x'0ab533b6')AND(4.21600845E8)))OR('ST.Y댇')) ELSE (('1595043366') IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2021712209 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((292048323)OR(NULL)))AND('')) THEN json_type(NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1660289238'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-335709545 sz=1617274831 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((((0.4163909133520234) IS FALSE))) AND ((CAST(0.4673343987571489 AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(NULL AS REAL)))<>((((((NULL)OR(0.6874058539685598)))OR(0.9287057793611926))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1439877902 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2080265737 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-90907021 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE INSTR((((0.8492117293285579))<((''))), (((NULL)) BETWEEN (('9Z3}1N9P?')) AND (('1176423513')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1479428690 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(778109399)))*(((('0.4163909133520234')) NOT BETWEEN ((0.12618650109155416)) AND ((''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')==(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)<<(((x'2225') NOT BETWEEN ('Q!') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1743625532' IN ())) BETWEEN (0X28cbd310) AND ((('2145572686')GLOB(0.16258365614163128)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN 555810941 COLLATE BINARY THEN (- (NULL)) ELSE (1.155302928E9 IN ('-1')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=767371091 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=813226279 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')GLOB('207423431')), ((0.6815909523440201)*(NULL)), CASE 0.2249554560840341  WHEN 0.5749365611857202 THEN x'' END))==((((-1029363782)>>(x'')), (('C*')||(NULL)), ((x'') IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-788276081 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1112423844 sz=1815615204 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1624774538 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(']5' COLLATE RTRIM AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-106944521 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2085510857 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')AND(NULL)) THEN ((((x'0b70')AND(NULL)))AND('y1Y|')) WHEN (((NULL)) BETWEEN ((NULL)) AND (('1418310407'))) THEN CASE -1.177954561E9  WHEN -1.111110313E9 THEN -30696992 END WHEN ('1132203908' IN ()) THEN UNLIKELY(NULL) ELSE ((0.763003188999493) BETWEEN (0x181064a7) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1928620555 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(NULL)))OR(1.385543345E9)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1585653330 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-658759279 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND((('裓') NOT NULL))))OR((((x'e0d7')) BETWEEN (('50202159')) AND (('*['))))))OR(((x'') IS FALSE))))AND((('1967487233') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(DATETIME(NULL, x'', x'', '615562184', '1296319923', 0.013638945316601814, 0.4163909133520234) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1799002310 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1805591463 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))%(-1396689988)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1364151910 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1076184091 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-426001375'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=668561893 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=731442628 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=187339585 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (8.13226279E8 IN (0.7809687868037101)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1597305341 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7241649676102282; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-70258964 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=159106339'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1933498115 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=668561893 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.013240842978244016) NOTNULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1155036290 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((((0.5749365611857202)AND(0.7516081558386123)))OR('6-G>N,x')), TRIM(-2117168447)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2461')IS(-2083949224))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-467299647 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(7.31442628E8 AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=-1917310538'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-2139901141 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1366180063 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1827549936'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1328832351 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN ((0.3394460628760041)) AND (('-1111110313'))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') ISNULL)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER('-2007089760')) BETWEEN ((- (x''))) AND ('-1387119177')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6676973436414777, x'', x'')) NOT BETWEEN ((x'bc10', x'', '#ED\n?z/\')) AND ((0.47066311688763496, '', x''))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('X/')) BETWEEN ((CASE '1m'  WHEN NULL THEN 0xffffffffbdc5cd57 WHEN '0.6815909523440201' THEN '' WHEN 554623940 THEN 'nsC>' END)) AND (('1138591948'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffb039c3ed)) NOT BETWEEN ((((NULL) BETWEEN ('-1562076604') AND (NULL)))) AND ((((NULL) NOT BETWEEN (0.3538781806234602) AND (0.8435790649933319))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-487003578 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN 0.3394460628760041 WHEN NULL THEN 0xffffffffc810a405 WHEN -758040180 THEN x'8aaa' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0X6220419a) NOT BETWEEN ('') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-34748665 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=77002024 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1245753412 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=214863731 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.967487233E9)) NOT BETWEEN ((((0.98149460608956)IS(0.8976551408264399)))) AND (((+ (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffff870ec550)LIKE(CAST(0.8860044245912753 AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=771638920 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.4266843342442922  WHEN 0 THEN '*''' END COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('-1495920288' AS REAL) THEN (('-2099282686')<('E.Y8)y~')) ELSE ((0.8623705322879787)=('-39642812')) END; -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((0.17084607275441044)!=('922706358')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.29086892478296256; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') ISNULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(json_object('39607425', NULL), 0.4361876571850454); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0Xffffffff9655c8b4)<<(-70258964)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1337501366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((0.8296452674420666)*('uf＝La'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN 0.6717901992378462 WHEN 'v{M' THEN 'Oj' WHEN NULL THEN x'' ELSE '' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1787069066 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1241630420 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1264462375 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(0.36688695344202793))) NOT BETWEEN ((((0.053793398823406724, NULL, NULL)) BETWEEN (('0.4709356841265947', NULL, 0.8689989245045399)) AND ((x'', 929968178, x'')))) AND ((-1.645076284E9 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-602447471 sz=-658759279 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1268231023 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) IS FALSE))OR((- (1.551969336E9)))))AND(((591601835) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-183351318 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=430268276 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6287421447926065)) NOT BETWEEN (('Y')) AND ((NULL))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.0746613808010751  WHEN x'0813' THEN '292048323' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1625170549 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1050615604 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-480778648 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.4266843342442922' IN ())))<=(((('0.3010449036430811')<=(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'd69b' IN ()))AND((+ (x'')))))AND(('-1350895218' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-78786577'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE SQLITE_COMPILEOPTION_USED(0X649e491e)  WHEN (('\n+zKBK') IS FALSE) THEN '-1350895218' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((('0.4673343987571489', 0.1944007238595724, NULL, '', NULL))<=(('0.6544370580860918', 2126266840, x'0b6f', NULL, x'433a'))))) AND ((((((NULL)AND(7.7002024E7)))AND(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-892772718 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-70258964 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1677582654 sz=1314777127 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1751853518 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 -85425579'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1806181406 sz=-829252210 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 'B_\1!(+?' COLLATE RTRIM  WHEN (('0.0') NOT BETWEEN (0X50b95fa4) AND ('-1262856438')) THEN (NULL IN (NULL)) WHEN '구8C^j' THEN (~ ('0.39497292894730085')) WHEN ((('-1783699922', 0xffffffffb9c9d6ff, 0.09061836242074839)) BETWEEN ((0.985329571481487, '-1184730002', 0.4311546168092979)) AND ((NULL, 0.20587288654400826, '9Z3}1N9P?'))) THEN ((((0.7372315139133606)OR('o\+%')))AND('-1934465612')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1057456956 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')IS(0.04482035709295229)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-788276081'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=297124501'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1143399067 sz=-72321828 unordered'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1885235293'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'b2f5'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ((((((((x'')AND(0x21a0b4fa)))OR('')))OR(-1637031987)))OR('-1452227535')), 0.8615878111682757); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1271390661 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-196922371 2010444860'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=2144797190 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT -970261115 COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>>(NULL)) IN (UNLIKELY(DISTINCT '0.20587288654400826'), (((-2.00708976E9))>((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffbce786e3; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1859008776'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1518090052 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2067353012 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 270280401'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('155212483') AND (NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1337501366' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' IN ('EL')) IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN NULL THEN 0.602832459476375 ELSE '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1934465612 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE NULL  WHEN NULL THEN 0.6676973436414777 WHEN '551892453' THEN x'' WHEN x'e36b' THEN '\n+zkbk' ELSE -1177954561 END))<((((('237162614'))>((NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=421600845 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-184191113'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.7857766345233632 THEN '1388711059' ELSE NULL END)>=(((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-70258964 0 sz=-89743723'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1064591931 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX((((('0.471476239261568')OR(0.6729044355662498)))OR(0.11912809010059855))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9839669045627013, '', x'5f23')) BETWEEN ((x'', '', 0Xffffffff8073b32b)) AND (('', '', 0.48783782820738997))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT NULL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-875380830'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.6566622810685036 COLLATE NOCASE AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1645076284 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)OR('1190509857')))OR(x'0cc7'))))>((x'' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '6'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=480646245 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('705691761'))) BETWEEN ((0.07690773258513295 IN ('9223372036854775807', 1.551969336E9))) AND (((NULL)>>(0Xffffffffc424c762)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-780408487 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((x'e846')OR('%')))AND('-2029075120'))  WHEN (('') IS TRUE) THEN ((((((((((((x'')OR('Jབ')))OR(0X5814774a)))AND('')))OR(x'')))OR(NULL)))OR(x'')) ELSE (x'' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', x'', NULL, 0.85744498995562, NULL)) NOT BETWEEN ((NULL, CAST(NULL AS REAL), CAST(x'f290' AS REAL), (~ (0.017829621502381543)), ((0.1197164372000934) NOT BETWEEN ('-1350895218') AND ('qPfE猝3')))) AND ((((x'') NOT NULL), (('797588422')/(x'')), (('j焲KP') NOTNULL), '8৲7xB', ((0.9949983048691758)/('~QZNxh1('))))); -- 7ms;
DELETE FROM sqlite_stat1 WHERE (('')GLOB((NOT ('-780408487')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-576548288 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((1429112553)) NOT BETWEEN (('')) AND ((0.6797722584853835))) THEN ((-4.87003578E8)>>(-835814387)) ELSE CASE x''  WHEN 0.13244508524680332 THEN x'' ELSE x'' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2095614858 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.928620555E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-699999813'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '771638920 2068002533 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.604086962836438)) BETWEEN ((((0.6182323182527322) NOT NULL))) AND ((((((-1.177954561E9)AND('1830149572')))OR(0.927098164941197))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((((NULL)AND(NULL)))AND('1684832728'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-487003578 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '767371091 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('{)}') IS FALSE))-(((-1380722446)/(-1420614681)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=804684016'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-411702116 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-487003578 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1604372558 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 sz=-476528419 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1767816052 sz=2103916660 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x''))) NOT BETWEEN (401242199 COLLATE RTRIM) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1461524377 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (0.07690773258513295)))AND('37322449' COLLATE BINARY)))AND(CASE WHEN '-852147326' THEN '-2133085649' ELSE 0.7241649676102282 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 unordered noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1469189985 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1350895218 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '10774220 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((')u' COLLATE RTRIM)LIKE(((NULL)<(0.3416463623445708)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))*(CAST('' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('215854937')AND('B6')))OR(x'')) THEN ((((NULL)AND(NULL)))OR(0.33189414907019765)) WHEN CAST(NULL AS TEXT) THEN ((((((((x'')OR(0.39497292894730085)))OR(0.8299937774045969)))AND(NULL)))AND(x'c6451c3ec657')) WHEN ((((x'')AND(-1.308793169E9)))AND(NULL)) THEN CAST(1177142672 AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('!咑2''Ể%{᡼', NULL, x'ef49957d')) BETWEEN (((('1298514702')<(x'67ca')), (~ (-4.71918498E8)), ((NULL) NOT BETWEEN ('1138591948') AND (x'')))) AND ((CASE WHEN x'' THEN '564180218' WHEN x'' THEN '*ꅗ]L몬o' WHEN '-1677582654' THEN 0.6881628186977293 END, ('!	彴' IN (NULL)), ((x'')>>(''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1925596901 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN '-1199153652' THEN '1343628716' ELSE NULL END THEN CAST('Yw''' AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))>>((0.9586930136803722 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(((NULL)IS('6궙fz'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-766878746 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1516955698 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('684446480')) BETWEEN ((('' IN ()))) AND (((3.11796055E8 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 870656628 sz=1902850210 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1735156658 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'', 0.09061836242074839, NULL)) BETWEEN ((0.33180304838811636, 0Xffffffffd24a5be6, -1337501366)) AND (('e.y8)y~', 0xffffffffb1fd66af, 0.924015207461391))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1177954561 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1785541577 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1580949905 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('[') NOT BETWEEN (NULL) AND (-1.337501366E9)))); -- 4ms;
DELETE FROM sqlite_stat1 WHERE '-1398724384'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-423734803 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=50202159 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=643412608'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-170169141 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1664583506'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=668561893 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=879985700 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 2 sz=-1384271716 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-1366036207') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.06178350760294915) BETWEEN ('-184960581') AND (x'')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('况q')))*((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1205388827 sz=-375275474 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('x/')OR(x'')))OR('405405263'))  WHEN ('845119186' IN (x'', '1349923520')) THEN ((((0x3af12aba)AND(NULL)))AND(0.385970874540875)) WHEN (('wz%.Q鋽5%-')OR(0.9174109093921787)) THEN 0.061354699242638366 WHEN ((((0.9293240643178494)OR(-372545609)))AND(0.27683785930671534)) THEN ((0.22877585718411297)LIKE('3(༯l%')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1055873904 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-788276081 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=430268276 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR('1294751778')))AND(NULL))) NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (x'187a' COLLATE BINARY)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-204048584 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1677582654 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 -1763875573 sz=-268640633'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=395829206 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE)) BETWEEN (((NULL) NOT BETWEEN (NULL) AND (0.7066221128677974))) AND (CAST('' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1173134134 0 sz=430268276 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('uMDJM|%')) BETWEEN (((x'' IN ()))) AND ((((((0.5521896130972107)AND('')))OR('1487296466'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(((x'8493')>=(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(('' IN ()))))OR(CAST('-1674438628' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND('-2021233222')))AND(0.07690773258513295)))LIKE((((NULL)) NOT BETWEEN ((x'')) AND (('-1340464602'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE -1308793169; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) BETWEEN (0.6459429991900648) AND (x'0c8e')))OR(NULL)))AND(0.7033805341076339)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1144281200 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=356283814'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1369698139'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-9223372036854775808 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2040470486 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=690031197 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-129505690 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN ('') AND ('1973555353')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-157860446)) NOT BETWEEN (('1758182675')) AND (('1112423844'))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=953428963'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 -1000853498'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '268310309 sz=1461524377'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.3447587672221095))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('')OR(NULL)))OR('V>')))AND(NULL)))AND(0Xffffffffb468c0d1)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1370651873 sz=9223372036854775807 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(-639115183, NULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=783926571 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=560877324'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)>(x'4091'))  WHEN ((((0.8790458202011351)OR('-1920642249')))OR(NULL)) THEN (+ ('NSC>')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-999358548 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((x'2223')AND(0.18184236958028233)))OR(NULL)))OR(0.10236618170082668)))AND('M<cﶅU'))  WHEN ((('-1539451004'))<((''))) THEN '' WHEN ((0xffffffff8a11610d)OR('')) THEN (((((((('50202159')OR(NULL)))AND(x'')))AND('1122897862')))AND(x'9620')) WHEN ((NULL)<>('.X0')) THEN CASE WHEN NULL THEN 'J3' ELSE 0.559037213345651 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 1300146155 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.9235998988960682 COLLATE NOCASE  WHEN ((NULL)%(-7.66878746E8)) THEN ((('239258042')) NOT BETWEEN (('0.4311546168092979')) AND ((0.5226045709704182))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2023828318 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-908096108 -84486093 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8549935052620493, NULL, '1656183273'))>=(('-1202602902', x'', x''))))+(((('-2139901141')) BETWEEN (('-244046148')) AND ((7.80850151E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1822765702'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('!T?')<<(x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (((NULL, x'5abba656', NULL))!=((x'', '', NULL))), x'4566'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X2a09cea4 COLLATE RTRIM)=(CAST(x'' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 5ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN ((x'')=(NULL)) ELSE (((-1381358363)) BETWEEN ((6.10780414E8)) AND (('2071772995'))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-1926134116 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1175327123 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('TvWBUi' COLLATE RTRIM AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('239258042')) BETWEEN (('1707507741' COLLATE NOCASE)) AND ((CASE -7.80408487E8  WHEN x'' THEN 0xffffffffea66bc7d WHEN '' THEN NULL WHEN NULL THEN '5' END))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-457788244'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-428786320 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE DATETIME((0.7519181399100556 IN ()), CAST(NULL AS INTEGER), ((NULL) NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1337501366 sz=-165552862 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1987003720 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.584831696068574 THEN NULL END AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=767371091 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4 sz=-487003578 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-416124914'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME(((x'') NOT BETWEEN (NULL) AND ('붼,{v9}%')), CASE WHEN NULL THEN 0.901625405589883 WHEN '99044424' THEN NULL WHEN 0Xffffffffff4479ae THEN '1992891482' WHEN NULL THEN NULL WHEN NULL THEN '3q⓯' END, CASE WHEN 0.8340602081875907 THEN x'' WHEN '181686479' THEN 0.7370121312069476 WHEN '-1699576847' THEN x'' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')OR('0.4311546168092979')))OR(NULL)))AND(x'')))OR(NULL)) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'190c') NOTNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-762842055 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')AND('*Q')))OR(x'')))+((('') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8576460070111455) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2086474123' COLLATE BINARY) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('' AS INTEGER) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-766878746 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1533788850 0 sz=-702799852 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '551892453'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=767371091 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>>(NULL)))IS NOT(LIKE('In茒c', x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM((((x'', -1.283401747E9, 0.013240842978244016)) NOT BETWEEN ((-2.02907512E9, '-1264462375', NULL)) AND ((0.6248953941813638, 0x264cc0a5, '-660439160')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1477862212 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'f207435d' THEN NULL ELSE NULL END)%(0.2908641624963296)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)-((((0.6116849843609165))<(('249625692'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-89743723 sz=813226279 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1357043349 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((0.5631074118948018) NOT BETWEEN (0.7430099645368518) AND ('&BzqU0M/D')), CAST('-423734803' AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER))GLOB(GLOB(0xffffffffa1921189, '|Q'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5926524975070411 AS BLOB)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1323965693 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('292048323') NOT BETWEEN (NULL) AND (x'')))||(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2080184016 sz=-1559234765 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'c*' COLLATE RTRIM THEN (+ (NULL)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1182142137 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1934465612 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1212248080 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1295773803', x'', x'')) NOT BETWEEN ((((((NULL)OR(x'490e')))OR('')), ((0.20247666090276872) NOT BETWEEN (0.5675343398329031) AND ('')), (~ (0.6797722584853835)))) AND ((((0.7597180908986096) NOT BETWEEN (0xffffffffb2eee9f7) AND (-2.00708976E9)), ((0.46480213396582504) NOT NULL), COALESCE(x'c9a6', '-970261115')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '410736791 sz=68454114'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-482648758 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-825717 sz=677113598 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((x'')) AND (('-1220046083'))))IS NOT('215854937')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((1497507621)) BETWEEN ((0Xffffffffcb0b9438)) AND ((0.9915664979324319))) THEN (('767371091') NOT NULL) WHEN ((x'')==('-734330938')) THEN json(NULL) WHEN ((NULL)IS NOT(x'')) THEN ((((((((NULL)AND(x'6e69')))AND(NULL)))AND(x'e627')))OR(NULL)) ELSE ((0.9916766047718245)*(0Xcc1d633)) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((NULL)) AND ((((NULL)>('-2007669456'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1012562435 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE NULL  WHEN 962791375 THEN x'' ELSE 0x1797dfd6 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE x''  WHEN NULL THEN 0.6204734761453439 WHEN x'97f8d878' THEN 2.15854937E8 WHEN 0.004525763269285332 THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '470309578 sz=-1004222622 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1572728264 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 401464580 1138591948 sz=-199653139 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((('') NOT BETWEEN (NULL) AND ('ad}PHF'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1229412932'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=270837342 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=2060101665'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((('g*') BETWEEN ('years') AND (0.7561050497155597))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1472663821 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')||('')))>(CASE WHEN '-191320893' THEN 1094482479 ELSE '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-362365827') BETWEEN (NULL) AND (0.2850595587939987)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1180664020 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-540534007 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-306787563 2 sz=668561893 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND ('2104452528')))|('99044424')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2056110042 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=264397235 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '	(t/g.' COLLATE BINARY  WHEN CASE NULL  WHEN 0.3538781806234602 THEN ' k\n' WHEN '' THEN 0.5087700439930645 WHEN NULL THEN '-|T' END THEN (NOT ('?C狙fS_bA7')) WHEN LIKE(x'', -1531703544) THEN (('a\na.eja') NOT BETWEEN ('e.y8)y~') AND (x'')) WHEN (- ('0.44145106851010596')) THEN CAST(0.2076832857308758 AS NUMERIC) ELSE CASE '328315433'  WHEN '' THEN x'' ELSE 'MApݥ' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'eb5a') NOT NULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.076184091E9) NOT BETWEEN (x'49d8') AND (NULL)))=((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1076184091 sz=612411322 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.7320204590689127 COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((CASE x''  WHEN '731442628' THEN 'H(Q' WHEN 0x4e5de827 THEN 943979940 WHEN '-766878746' THEN x'81a5' ELSE 0.9361154733523808 END, (('H') NOTNULL), ((0X3520328d) IS TRUE)))=((CAST(x'' AS INTEGER), json_valid('0.9287057793611926'), ((x'') ISNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'997e') NOTNULL))<((~ (0.32287651166664344)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=99044424'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1437203340 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1995548875 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1112649457 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(CAST(x'' AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX((~ (x'')), (0.7006789744659037 IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=640136914 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1194116035 -306787563 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -454687763; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-228690276 0 sz=-825717'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0.826606695659686 AS INTEGER))OR(((NULL)LIKE('kM')))))OR(((0.9759261600798057) NOT BETWEEN ('-513464177') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('5쵗6i')))=((('') IS TRUE))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) BETWEEN (highlight('', x'b49a', x'', x'')) AND (TRIM(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-970261115'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-761306394 sz=-640317704 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-151955331 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1928620555 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((99044424)) BETWEEN ((((559424461) BETWEEN ('') AND (0.7938091394937579)))) AND (((((0x5e74c48, x'ba5e', 430268276)) BETWEEN ((x'', 0.48783782820738997, NULL)) AND ((x'', '', ']I{z43FU\n')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=898164501 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.06540636231810781) ISNULL))LIKE(((NULL)-(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL))) NOT BETWEEN (((2020394003)||(x''))) AND (((0.2425507867454012)>>(0.7301633331383045)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-766878746 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-734820038 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=155212483'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1308793169 1597305341 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('aW') NOT BETWEEN (0.16382289459437427) AND (x'035a'))) NOT BETWEEN (((((NULL)OR(-1.264462375E9)))AND(NULL))) AND (CAST(0.23890460771296296 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('c')AND('闵ṍ' COLLATE BINARY)))AND((('5')IS NOT(0.20996960546651577)))))AND((0.2509714663500652 IN ()))))AND(CAST(x'' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1893088190 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (-1408017293) AND (NULL)))>((((((((('1964693255')AND(1844495396)))OR(x'')))OR(1.55212483E8)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1418839909 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2079058475'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.9383644881016808  WHEN (+ ('-1934465612')) THEN (NULL IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2003535986 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=127768630 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS(0.40171605933799404))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-408370772 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'' IN ()) THEN LIKE(0.8860044245912753, NULL, '|') ELSE ((0.2728754598701444)LIKE(0.29819811907730154)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((x'') IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 547448771 sz=1138591948 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=473302063'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('ey5''uCHlz')<>('-1177954561')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1476922010 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (('50202159' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))<>(CASE WHEN '' THEN '292048323' ELSE '-9908600' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1005211708 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)) BETWEEN (('')) AND (('-1383104415'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('杞	')/(0xffffffffad8f8061)))IS NOT(((x'')&(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 0 sz=-1511453758 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1656183273'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'a413'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-408370772'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('3*HB') BETWEEN (0.6729044355662498) AND ('1]%zg_s*')))<=((('.X0')>=(0.4709356841265947)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((x'') NOT BETWEEN ('l') AND (0X1024a65e)))) AND (('0.8795057047214672' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 2.079208855E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1308793169 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')) NOT BETWEEN ((x'')) AND (('b2)a'))) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1781237591'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Kk') NOT BETWEEN (x'') AND ('-1934465612')))%(((x'')AND(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-545418686 sz=1727249680 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('') IS TRUE))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((1.973555353E9 COLLATE BINARY) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=610780414 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-89743723'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=332506627 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (x'')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((('(F喤~|4''1꧑')<>(x'')), ((((813226279)OR(NULL)))OR(0.5530497968263488))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-600980558 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 1935082345'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-306787563'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=769239585'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-589071818 0 sz=77002024 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '239258042 -1699312128'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2086307381 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'ed7e03f1')OR('0.12371839549581909')))AND(0.6357549773884108)))OR(NULL)))AND('/q}LuZ}')))AND('')))AND('TRUE'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1253146000'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.3054327445396291 COLLATE NOCASE  WHEN (('구8C^j')|(-1.46577563E9)) THEN (x'b608' IN ()) WHEN (('-788276081') BETWEEN ('') AND ('1964693255')) THEN (((((((('-708577944')AND('687924590')))OR(0.44167835094675345)))AND(x'7e0a')))AND(0.3169789847901545)) WHEN (('') BETWEEN (0.6526878758665685) AND (NULL)) THEN '722499393' COLLATE BINARY WHEN json_extract(-606328097, '', '-1205009303', 0.3374170709302763) THEN (((('-1177954561')OR(x'')))AND(2.92048323E8)) WHEN ((((((((x'f2f44799')AND(1076608464)))AND(NULL)))OR(0.05282143244406534)))AND(0.056736410621597955)) THEN (('FALSE')IS NOT(x'')) ELSE (x'' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-918918996 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0Xffffffffb64127fb) BETWEEN ('V**B年') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('-1582209874')AND(x'437b')))OR(0.13244508524680332)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (((0.3858678932498423) NOT BETWEEN (1.656183273E9) AND (''))) AND (0.024860570973028184)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2068873748 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')>>('&jux')))OR(((x'4195')IS('')))))OR(CAST(0.9704295875182563 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1476981348 sz=-1333377624'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=171978486 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN (x'', x'')))AND(CASE x''  WHEN '' THEN NULL ELSE NULL END)))AND(((((NULL)AND(804684016)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1627294891 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1469189985 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6685139635074957)>(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.6550108621235863 COLLATE BINARY AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('M),d')) NOT BETWEEN ((759380049)) AND (('813226279'))))OR('^g')))OR((- ('i>zm')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULLIF(NULL, 0.17062068176764966))AND(((x'') NOT BETWEEN ('ad}PHF') AND (x'6cfe')))))OR(((0.6886950042832102)/('t')))))AND((((0.6920583315834777)) NOT BETWEEN ((0.6127288898377357)) AND ((0.3627954717895915))))))AND((('{)}')*('s%J ''1')))))OR(((NULL) BETWEEN ('1024746597') AND ('U2')))))OR(CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('430268276' IN ())))=(((('구8C^j')IS(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('426933723')) BETWEEN (('1793578583')) AND ((NULL))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (0.6899747398923096)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=929199035 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((- ('551892453')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-118088856 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA temp.auto_vacuum = INCREMENTAL; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(978765257); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2)=(8.13226279E8) WHERE SQLITE_VERSION() COLLATE NOCASE; -- 0ms;
UPDATE vt0 SET (c0, c0)=(9223372036854775807, 0.13190340783261) WHERE CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)OR('615936527')))OR(vt0.c0)) WHEN ((vt0.c0)&(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)>(vt0.c0)) ELSE (NOT (vt0.c0)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2103633876 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-817157537'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.22753808267920006) IS FALSE) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('2091298757' IN ()))&(((0.770633552053319) NOT BETWEEN ('') AND ('a\na.eja')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE '' COLLATE RTRIM  WHEN UPPER(DISTINCT x'13da') THEN ((x'c757') NOT BETWEEN (-1.264462375E9) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1686012493 sz=-551672424'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'56ad') BETWEEN (0.39497292894730085) AND (x'3f01'))  WHEN (NOT (0x646c81d8)) THEN CAST('2079208855' AS INTEGER) WHEN COALESCE(DISTINCT x'a222', x'', NULL, 5.0202159E7) THEN LIKELIHOOD(x'0e66', 0.6081628479295408) WHEN ((x'')/('827847541')) THEN (- ('5\r%JK훿1ⶢ')) ELSE ((x'') BETWEEN (NULL) AND (0.3137526600622097)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((QUOTE(-1.337501366E9)))>=((CASE ''  WHEN '-1354455773' THEN 'my/' ELSE '610780414' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (7.9502549E8))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1758133559 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-655843317 sz=-377001385 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 150476666 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-2033347613'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX((+ (0.4865936868557056))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('1292124927') AND (NULL))) BETWEEN (((0.013638945316601814) BETWEEN ('Oc') AND ('-2075773330'))) AND (CAST(0.7711279921829652 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-2139901141'; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.26700033342491747) NOTNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1162309807 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-862755355 sz=-1465775630 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=953428963'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('n')) NOT BETWEEN (('䇞Q' COLLATE BINARY)) AND ((((0.8435849630844923)&(0.02234385087145252))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- ('n+'))  WHEN ((((NULL)OR(0.2507530095388082)))OR('1062783735')) THEN x'61d2' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-1920642249'  WHEN x'' THEN x'' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.06908375797508937)||(0.013638945316601814)))OR(CAST('' AS REAL))))OR(((((NULL)AND('551892453')))AND(x'')))))AND(((((NULL)OR(0xffffffffea66bc7d)))OR(x'ce9a')))))AND('-443607951')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-553617253 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '825189592 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1767516869 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.1334182108606432 AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-734268130'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1004222622 -1622620477 sz=-1004222622 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1780848550 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1333956173 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8689989245045399)OR(NULL)))OR(1.418310407E9)))GLOB(CAST(0x4e5de827 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1418310407 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1956716194 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||('117121075')))&(CAST(x'' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1817937037 sz=-1055737285 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1244977787 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('') NOTNULL)  WHEN ((x'750f')IS('300705538')) THEN (('0.630474138074754') ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8985417823626891; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-140251168 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1929151556 sz=-1177954561 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((ABS('1045640112')) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-685371673 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.16538684899631273 IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1731539131 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2000125087 sz=-1851681536 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1118381340'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.8330561528787055 AS INTEGER))&(TYPEOF(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')<<(NULL)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((((0.0)) NOT BETWEEN ((395829206)) AND ((NULL))), (((('-682918252')AND('')))AND(0.8002306737015225))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(NULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=-1400960986 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')OR(0.8649496302719629)))OR('-708577944')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1262856438 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(('588359534' IN (NULL, x'')), (0xffffffffe8847a38 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=492254537 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-89743723' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=594574411 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1359771035 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2041997976 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-227372865' THEN x'' WHEN x'9d70' THEN x'8197' WHEN 0.702686687210364 THEN 0.7785831316788707 END) BETWEEN ((NULL IN ())) AND (CASE 0.3451000213990353  WHEN x'd68f' THEN 0.4145200785520118 ELSE 0X75457901 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-481993688 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '395829206 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=316376826'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x''))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((NULL)LIKE(x'475eb6cb')), rtreenode(0X43dd88cc, x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1821063882 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2032301417 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=771638920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=551892453 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-2051488038 sz=-816820325 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-408370772 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-766878746'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF(DISTINCT '240675490', 0.3342104991148269) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2010519762 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1462198331 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '353931065 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=887065488'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1677582654 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM((((('-728242366')AND(NULL)))AND(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=77002024'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(NULL, 0.8145369231488339)) NOT BETWEEN (((((x'7f5e')OR('1461524377')))OR(0Xffffffffb9c9d6ff))) AND ((1805033161 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0.1455309775657313)OR('-206858810')))AND(x'594d'))  WHEN ((NULL) NOT BETWEEN ('|Q') AND (x'6ead')) THEN (x'' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')OR(-1.383104415E9)))AND(0.3505774318620829)))AND(x'')))OR(x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('.X0')/(x'')))OR((((0.27860906202777114, '-1645076284', NULL))>(('-306787563', 0xffffffff9992e90e, '217061212'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-2059372806 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-918833815 sz=-1190787707'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '99044424 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((14158889)/(x'5e24')))+(x'219a' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=959001982 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT ('鎙z摎H'))))!=(((((''))<((']]')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) BETWEEN (((x'')>>('0.9949983048691758'))) AND (((1477736266) BETWEEN ('G/') AND (0.07254820645656279)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6287421447926065, 0xffffffffb845f3f7, '-1195920632'))>(('', NULL, 0.5785962605638134))))<=((((NULL))<((x'6868'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') IS TRUE)  WHEN ((0.8689989245045399)>=('0.4311546168092979')) THEN (('') NOT BETWEEN ('-1375109669') AND (0.7653847980717899)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1273296702 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')-(0.2249554560840341)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1702909862 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=292048323 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=506782648'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1002577452 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER))LIKE(((x'918d') NOT BETWEEN ('-691967107') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1069758224'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=574803697 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((- ('1469189985')))OR(x'' COLLATE NOCASE)))OR(CAST(-2104603779 AS TEXT))))AND((((x''))>=((NULL))))))AND(('-1934465612' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.84257192203317; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=405405263 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)AND(0.28170839732976294)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0.6766597064890582) AND (NULL))) NOT BETWEEN (CAST(1.425323541E9 AS REAL)) AND (((-608880968)*('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1406052802 sz=-1123724659'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2029075120'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove(((498758280) NOT BETWEEN ('-527590115') AND (-1220046083)), (- (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('?S\*o') ISNULL))LIKE(((x'')<>('59SL')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=120382897 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.4719636581227692 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((CAST('-39421627' AS NUMERIC))) AND ((CAST(0.032936942230945676 AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1684832728'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=751572297 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('玣S(똕w#|' AS NUMERIC))AND((((('350294464')AND('')))AND('-1354455773')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '996099716 2027697454 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-547587829 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1953936872 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '844238661 sz=-1744713152 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2039322460 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1323884953 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<>(x'd8da'))) NOT BETWEEN ((('-1964677596')+(0.8243402246579334))) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-113962051 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-1439262990'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-998396589 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'0fbd')%('1967487233')))+(((((x'')OR('-1729472201')))OR('Q(3m ')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=216340977'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1629006289 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=1375362525 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-821223670 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1465974985'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1330578076'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=601424338 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-533353439'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1984649916 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('1964693255')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(SQLITE_COMPILEOPTION_USED(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1677164589 0 1551969336 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('VguO' IN (0.9930076587409374, NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.38020661258572874)-(NULL))) NOT BETWEEN (CASE WHEN 0.3009465761525888 THEN 0.9865668186894263 END) AND (x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1175007348'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-126714961 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1934790405'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '650487389 310086801 sz=2099297177 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8480934389029371) NOT BETWEEN ('➜''En7N9') AND (x'82a9ffab'))) NOT BETWEEN (x'' COLLATE RTRIM) AND ((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 2 sz=610780414 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '1314777127' THEN 0.07616660410138199 ELSE 7.80850151E8 END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('813226279')GLOB(0.005516740387038421)))OR(((((NULL)AND(1822765702)))AND(0X571d1799)))))OR(COALESCE(DISTINCT NULL, NULL, '', 0x5fe2ef24, '0.7071530762975622', NULL))))OR(NULL COLLATE BINARY)))AND(((-1.43720334E9)+(1713485630)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CASE '311796055'  WHEN '' THEN '311796055' WHEN 'v' THEN x'f2fc09c2' WHEN -55090814 THEN '-970261115' ELSE x'f2c5' END)) AND (((((0.2304570930475629, 5.0202159E7, '')) NOT BETWEEN ((0.8065965809235308, '1998283776', 0x4848ac93)) AND ((NULL, -4.08370772E8, x'')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=935154422 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1184051746 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('ꇙ') NOT NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1196939016 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('eᆅ(PeF' COLLATE BINARY)OR((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '41936450 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1649328238 -734268130 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=901164827 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=361850237 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-1535047996 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1777976506 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1012562435'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(NULL, 0.38488926689879066); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)||('?'))  WHEN (('2820258') IS TRUE) THEN ((x'') NOT NULL) ELSE (((('-372545609')AND('G -H')))OR(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((x'')AND(2.39258042E8)))AND(0.03080158105236186)))OR(NULL)))AND(-1.177954561E9))  WHEN NULL THEN (((0x75457901, '544329277', '-177997218')) BETWEEN (('', NULL, '0.4163909133520234')) AND ((1401204440, 0.31385236690341256, x''))) WHEN TYPEOF(0.5222074657798162) THEN ((x'0636') IS FALSE) WHEN ((((((((0xfffffffffff3668b)OR(0.7685636800491082)))OR('8\n#	')))AND(NULL)))AND('oHz')) THEN TYPEOF(NULL) ELSE (- (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('77002024') ISNULL)) BETWEEN ((((((((('-1928620555')AND(-142613457)))AND(0x4938fe71)))AND(NULL)))AND(-1199750642))) AND (((NULL)GLOB('KgL\n')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=866852099 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1337501366 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ('Ru*' IN ()), CASE NULL  WHEN NULL THEN 0.2048664539558398 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1946306153 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-583238214 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1803822445 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1316949921 sz=-1177954561'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1 sz=845010575'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-2110938357')) BETWEEN ((0Xffffffff9a6c428d)) AND (('0.39497292894730085'))))&((-1.383104415E9 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-357119529 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=693336763 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1789012371 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=405405263'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1354455773 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1203375113')LIKE(0X4504d33b))))>=((0.48783782820738997))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1213792959 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1220046083 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('1069535101')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9213536298183747; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1337501366 -1380803056 sz=458643361 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=668561893 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1184030724 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)<>('l騷'))  WHEN (NOT (NULL)) THEN (~ (NULL)) ELSE (((0.6874058539685598, NULL, NULL)) NOT BETWEEN ((0.255914384582393, NULL, '0!')) AND (('-1002577452', x'', '}?'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=555186678'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(1822765702))<((NOT ('-1220046083')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT '-1499281457'))%(CASE NULL  WHEN NULL THEN x'' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=475568234 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1231870475'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE RTRIM)OR(((NULL)IS NOT(x'')))))AND((((NULL, x'', x'', '姩Bﵭj', '0.9949983048691758')) BETWEEN ((NULL, 0.30063993327564575, NULL, 0xffffffffb46575d7, NULL)) AND ((NULL, '-2101491462', 1928763044, '', ''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1023085953', 0.8063840874447455, '-1934465612')) NOT BETWEEN ((NULL, NULL, (0.7590275587814164 IN (NULL)))) AND (((- (0.5896273295196675)), (NULL IN ()), 0.7071530762975622 COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (0.5287233751646115)) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-274018771 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=953428963 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.42792228208829997, NULL, '99044424')) NOT BETWEEN ((x'', NULL, x'7c6c')) AND (('	nsa', 0x5cad438a, NULL))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1057266235 sz=239258042'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-212982929')-(NULL)) THEN COALESCE(DISTINCT -1437203340, NULL, x'1ef9', 0.3983451539596241, x'', 1830564155) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (0xffffffffad8f8061)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-968809489'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'94c1'))<((NULL))))!=(((NULL) BETWEEN (NULL) AND ('bZ')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Ogh')OR((0X4025441b IN ()))))AND(((0.3816992042472357)>>(0.8512905981103559)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((0.3256295462804917)OR('K0CM70,䱈S')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.3227880278401637 IN ()))OR((NOT (0.2249554560840341)))))AND(x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')==(0.8976551408264399))) BETWEEN (CASE WHEN '-750479658' THEN NULL END) AND (((x'') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-367810016) NOTNULL) THEN (((0.8536204754825074, 0.5617164120204979, -9223372036854775808, '-282510366', 'Ra'))<>((x'', 0.6019618601518796, '#ED\n?z/\', x'', '-372545609'))) WHEN (+ (-1220046083)) THEN (((0.523596477887058)) BETWEEN ((NULL)) AND ((''))) WHEN CAST(NULL AS REAL) THEN (('8]')==('&%	H(⁒9D')) ELSE (('0.49301936827052195') NOT BETWEEN ('0.6566622810685036') AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'd6ad')AND(NULL)))OR(546790687)) THEN (('-992949702')IS NOT(0.5213780347566443)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('')))AND(CASE WHEN 0.7342173801383997 THEN 0Xffffffffdfe57030 END)))OR(-1.7976931348623157E308 COLLATE BINARY)))OR((x'' IN ()))))AND(((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((('2126266840')>=('ퟭ')), 0.6797261930813192); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1464751868'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1202924310'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.44362606950798444)) NOT BETWEEN (((('>%莦.,') IS FALSE))) AND (((NULL IN (1155697089))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2126266840 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))<(((((((((0x6bf30cf3)OR(NULL)))OR(NULL)))AND(0Xfffffffff2e00193)))AND('e<4lA5>')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1920642249'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (7.9502549E8)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1507848972'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1262856438 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT -1.268231023E9 COLLATE RTRIM, ((((0.49405655547144134)AND(NULL)))OR(0.03183048232232577))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((NULL)-(-1804788961)), (('-1508581530') BETWEEN (NULL) AND ('-1465775630'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1935625334 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0.5524788042836123)) NOT BETWEEN ((668561893)) AND ((x'a996'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1e500)AND(x'')))AND(x'0551')))<>(((0.5244002453523007) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(('?~' IN ()), CASE WHEN 0.05694146261198707 THEN x'a5e1' ELSE 5.51892453E8 END, '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-7.88276081E8)) NOT BETWEEN ((x'')) AND (('0.927098164941197')))) NOT BETWEEN ((('-370219547')*('-773539029'))) AND ((((532366547, 'LjE)+7', x'6531', '569876248', 'lQ')) BETWEEN ((NULL, x'8987', 0Xffffffffdc610d75, 0X646c81d8, x'')) AND (('395829206', '1477736266', NULL, x'', 0X24611e1f))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0.26363780779747836  WHEN NULL THEN '-1203375113' END)AND(((0.7516081558386123)/(31056543)))))AND((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CASE WHEN NULL THEN NULL WHEN ')' THEN '()' WHEN '0.3416463623445708' THEN 0.9003790887973329 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X39568c7) BETWEEN ('U^8P') AND (x'')))+((0.4645202824467636 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-1268231023 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE NULL  WHEN x'' THEN '\n' ELSE 'wEo逪_?M' END)OR(((6.68561893E8)OR('0.602832459476375')))))OR((x'' IN ()))))AND(((0.5808063149697619) NOT NULL))))OR(CAST('771638920' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2051488038 1469189985 sz=493397123'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) ISNULL) IN (CASE 0.17729797928980762  WHEN x'' THEN '0.4427203931625071' WHEN NULL THEN 0.4338150198143138 WHEN '-658759279' THEN -1209282443 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=468183132'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((((NULL)OR('-2035918123')))OR(x'')), COALESCE(NULL, '-1262856438'), '\'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-851942092 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=358342807 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=668561893'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1623550694'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')+(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((NULL) ISNULL), (('')GLOB('簵x'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(((((0Xffffffffaefe154f)OR(NULL)))AND('-261236294'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (75938410) AND (x'')))>=(0.474156049044534)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1353329863 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-581970562 sz=1964693255'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1382367594 0'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffa4e9805e) BETWEEN (NULL) AND (0X2dfe4688)) IN (((x'') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-188478193 884897326 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'e88c' COLLATE NOCASE)OR((((((((('Nj>z^')AND('1m')))AND(464106490)))OR('<蠡')))OR('2034589645')))))OR((- (0.9697873178833264)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.7241649676102282' COLLATE RTRIM)&(((0Xffffffffea354231) NOT BETWEEN ('-1734126592') AND ('-2077981738')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- ((('421600845') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1906994000 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0X6d320566 IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0.7187927899628739  WHEN '1936480100' THEN x'9e6a' END)AND(CAST(x'' AS TEXT))))AND(((x'70b2')/(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-658759279 sz=-178333664'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<=((0.715443373658008))))OR(highlight(NULL, x'', 0xffffffffe165288f, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2007738585'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('368205105')||(0.861590271238899))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-2044342576'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=473092393 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=407378537 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1304140468 sz=-2007089760 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-910448836 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((-187298550 IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('-1561780694' IN (x'', 0.33573700979688703)) THEN (~ (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT 0.5154189957132264, 0.19508898566379151); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-576839030'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((632665923)<(0.8962053368031345)))>=((((('-60388100')OR(0.03193251893755056)))AND(2.079208855E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((((((('鉭LCe')AND('fse+qFy\n5')))AND(NULL)))AND(x'b0e18727')))OR(x'')) THEN ((0xffffffffb31372a0) BETWEEN ('-734268130') AND (x'f8c1f897')) WHEN (NULL IN ()) THEN (('ph')OR(NULL)) WHEN 0X1d177207 THEN CAST(x'' AS BLOB) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.425323541E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2131971367'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1437203340 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1437203340 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=-306787563 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '352739460 sz=1155302928 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1928620555 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')*(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1291918964 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1974756390 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')OR(x'')))AND(0.3512307300933234)))AND(x'28cd806e')))AND(x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1465775630 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=514093760 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT ''))AND((((((((((((('')OR(x'')))OR(NULL)))OR(NULL)))OR('G<|6P5<dh')))AND(0Xffffffffa4af0725)))OR(0.053793398823406724)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (x''))) NOT BETWEEN (((-2.051488038E9)*('TRUE'))) AND ((- (x'ca2fc5b0')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((x'28d0' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1187619365 311796055'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-235296018'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '%	J7U<ItJ'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_extract(0Xffffffffea66bc7d, '-825717') AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1284489694 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=1553409601 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((160776912, 0.4311546168092979, NULL)) BETWEEN (((('\r-r!')%('	u')), ((800674207) NOT BETWEEN ('0.927098164941197') AND (NULL)), ((x'afc4') NOT BETWEEN (NULL) AND (2143622738)))) AND ((((NULL)==(x'')), load_extension(0.8077026884767274, NULL), (((('1292401653')AND(0.9949983048691758)))OR('dB\nn'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('') BETWEEN (CASE WHEN '-480122276' THEN -1365966501 END) AND (CAST('886334616' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2116883226 4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-876236535 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((0.9646931453906579))>=((x'0352'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 9223372036854775807 sz=-1852435959 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-970261115')OR(-1264462375)))AND(CASE ''  WHEN 0.640454643554175 THEN 0.2425507867454012 END)))AND(((-1719531787) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1757150643 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1993101802 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('0.7071530762975622' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((~ ('77002024')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 7.80850151E8 THEN '' ELSE -658759279 END)||((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN NULL END)GLOB((((NULL, 0.07230705369159296, x'4d03')) NOT BETWEEN (('463299282', x'', '')) AND ((NULL, '-1220046083', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X1c58986a))<>(('-734268130')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1677582654'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(NULL AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.25683673013410613)OR(767371091)))OR(NULL))) NOT BETWEEN ((('KM') NOT BETWEEN (0.4311546168092979) AND ('498185442'))) AND ((('	') NOT BETWEEN ('') AND (276228181)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '558114041 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-471918498'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2098342671 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight(CASE WHEN 0.15163846490684163 THEN '953428963' END, NULL, (1.967487233E9 IN ()), 0.4245347049677376); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1464713202 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN '' THEN '1P' ELSE NULL END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('' AS INTEGER) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=379247677 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)OR('1321641461')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1354455773'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND (x''))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (x'63bd')) IN ((((0.16387708728655936)) NOT BETWEEN (('')) AND ((9.53428963E8))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=995366511 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -756177447'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2080429842 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1418310407 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-9.70261115E8 AS NUMERIC)) NOT BETWEEN ((('80') BETWEEN (0.15296804417892618) AND (0.9930289855090068))) AND (((NULL)OR('-1283401747')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')AND(x'')))AND(x'2dc6'))) NOT BETWEEN ((('521445948') NOTNULL)) AND (TRIM(DISTINCT x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=-970261115 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((NULL) IS FALSE), x'df58', (((-1398993296, '-1437203340', 'd#0	RNk~')) NOT BETWEEN ((x'', 1462724485, NULL)) AND (('-306787563', 360519182, NULL))), (((x'', x'924a', x'')) NOT BETWEEN ((x'', x'', x'cef0')) AND ((0Xffffffffff7db453, 0.8291445171642191, '')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '0.3512307300933234' THEN x'46d6' END)IS NOT(((x'') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1920642249 sz=405405263 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6566622810685036; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 sz=-1871118643'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.985329571481487)LIKE('-497168482')))/(((x'c6dc')<<(0Xffffffffbfd58f21)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffe95b9515) BETWEEN ('610780414') AND (NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=632421140 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=96674335 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (-1.220046083E9)))-(((0xffffffffcd6b4cd3)<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1800803762'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-368625634 noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.7519181399100556 AS TEXT) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0X1cda0806) NOTNULL) THEN (((0.8484509312162646, x'', x'35df', x'', 'P0⢏')) BETWEEN ((981734273, NULL, NULL, x'', '<')) AND ((x'', 0X4a301c1e, 1385543345, x'', '1924122426'))) WHEN ((((0X28927bc4)OR('>')))AND(1.822765702E9)) THEN (-1354455773 IN (NULL)) WHEN ((0x2f632052)GLOB(0.4752075345508546)) THEN (((((((('1365140137')OR('(!Fr8}MH')))AND('-2007089760')))AND(0.6874058539685598)))AND(x'edc7')) ELSE ((('XUs+'))>=(('䟤/uTY栏Bq['))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.7440112963505234 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-825717'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT 0.9565521234157766))<>(((('', '', 0xffffffffa98d0037))=(('-70682507', 0.8941196842527299, NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('483153799')) BETWEEN ((((x'deb8')>>(x'')))) AND ((('X)7\r(4s^\' IN (0.3164088624128757))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-552834263 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('r{K}') BETWEEN (x'0141') AND (NULL)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1603977662 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKE(NULL, NULL, '-') IN (((NULL)*(0.3033338689528897)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-70258964 1469189985 sz=1684832728 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)-('430268276')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0Xffffffffcd9aa40a  WHEN 0.9782750018366224 THEN 'aQlyj' ELSE '-408370772' END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1301667683'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1007285106'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffa9d66b3c)AND(x'')))<(((NULL) NOT BETWEEN ('sbm') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1226205152 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-291260586') ISNULL) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1203375113 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '551892453 1906994000 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-607761088 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1426038015'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2034585466 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2.15854937E8)AND(-2.139901141E9)))||(CASE WHEN '421600845' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)<<(x''))  WHEN LIKE(x'', 'z^') THEN (~ (x'')) WHEN CASE NULL  WHEN -1.740994326E9 THEN 0.10072121552005298 ELSE -2144434105 END THEN LAST_INSERT_ROWID() WHEN CAST(NULL AS REAL) THEN ((NULL) IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '395829206 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1822765702 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=744285767 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1337501366 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', NULL, x'', '裪d2', '')) BETWEEN ((CASE WHEN '-397755016' THEN '-2074525638' ELSE '-1203375113' END, (+ (0.7447428103770399)), ((NULL)<>('IsQeN')), (~ (NULL)), ((0x1797dfd6) BETWEEN (x'') AND ('fLr.W,2B')))) AND ((CAST(0.32972147510513394 AS REAL), (((('jvb!R]g')OR('.g')))OR(NULL)), ((((NULL)AND('-1101482396')))OR(x'')), x'3631', NULL COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS NUMERIC); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.6925808431779424 THEN NULL ELSE x'' END)<>(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '609799160 0 sz=-1004222622'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1572728264 50202159'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1740994326 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2069186560 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(CASE WHEN 1e500 THEN x'' ELSE '.1J-馌y㛈u' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 -372545609 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1398390546 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-116466771 0 sz=81138832 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=640145581 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1853575103 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('447639460')>(x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '640145581 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -364072933 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=77002024 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-2113247882 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1523169686 sz=-1232159984 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '722114648 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) NOT BETWEEN ((+ (NULL))) AND ((- (0.2076832857308758)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -1437203340 sz=430268276 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-859872402 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-309833193 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-839848670 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1437203340 -135968325 sz=-852226980 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(SQLITE_COMPILEOPTION_GET(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1314777127 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-952502676 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-96789172 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1314777127'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1158251322'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-724201295 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2051488038 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=76178811'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=69288508'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6925099921760357; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')*(NULL)))OR(CAST(0.602832459476375 AS INTEGER))))OR((('Q3<q(') BETWEEN (0.515208549483003) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-788276081 sz=-1464850287 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(LIKELIHOOD(DISTINCT NULL, 0.7518993532450842), ((((0x7dd9d6ae)AND('7ꖛY#〟q[''弼')))OR('ML'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELY(DISTINCT NULL) AS REAL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('B8OP6BO?&')) NOT BETWEEN ((0xffffffffdc3f1109)) AND ((NULL))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=70768244 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))>>(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-174057554'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-984138023 2 sz=731442628 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((0.8316325368514721) ISNULL))) AND ((NULL COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-678383560 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1678243530 sz=875771832'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 2 sz=-1111110313 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=372948155 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1595568719 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1844068026 -703134507 sz=640145581 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1465775630 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4944897911915047 COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-306787563 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'03d87aab' IN (0.7609583256785132))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('493397123' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN ('-487003578') AND (0.3794472354597661)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1337501366 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '!&hOAuhY'  WHEN 0.08937489801543219 THEN -8.9743723E7 WHEN NULL THEN 314177492 WHEN '0.7000189215089714' THEN x'' WHEN 0Xffffffffe62a7f31 THEN NULL WHEN '2012396882' THEN x'' ELSE 0.3844381670012743 END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS INTEGER) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4337774629485611 COLLATE BINARY)&((('')>(1.55212483E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1442014454 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '857926164 -1264462375 noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1418310407 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.9536857840953608)) BETWEEN ((2088512182)) AND ((0xffffffff9afe8eac))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1077358594 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '930464710 sz=-1406594227 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-540578395 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('529713341' IN ()) THEN (('~OQ0|]c擸n') NOT BETWEEN (NULL) AND (x'2f40')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN (+ (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-996104388) IS TRUE) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('475568234')OR(1112423844)))OR('-62287105')))OR('215854937')))AND(0.2249554560840341)))<=(((-1705957403) BETWEEN (NULL) AND (0.9391478152818096)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((732951229) IS TRUE) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1166944598 sz=-1465775630 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=678899114 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1000955199 sz=-1221809452'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'f901')) NOT BETWEEN ((0xffffffffa4f13895)) AND ((''))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x''))==((NULL)))  WHEN (~ (x'')) THEN LENGTH(0.8754537931117986) ELSE json_extract(0x7df748ad, 0X24e95062) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('' IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=151394378 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('o6W56' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1012562435 sz=1718006258 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1756162304589759 IN ())) NOT BETWEEN (((1.469189985E9)IS NOT(0.3113479375937914))) AND (((x'') NOT BETWEEN (x'c71f') AND (0.8232762541739042)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=816132465 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1653789017 sz=58190928 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'ecc541ae') BETWEEN (NULL) AND ('-1422183132')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN TRIM(DISTINCT 'nHUZ这\nR', '-408370772') THEN ((0X493ffc25)&('斴76')) WHEN (~ (NULL)) THEN CAST('731442628' AS TEXT) WHEN (((0x4a93cbd2, 0.4677577572313609, 0.602832459476375)) BETWEEN ((NULL, -467886080, '1425323541')) AND ((NULL, NULL, ''))) THEN (NOT (0.5591337604667003)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2079208855 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<=(('13190258'))))>>(((x'') NOT BETWEEN (0.28009644238872355) AND ('-788276081')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS REAL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-211959725 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1182710528'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=969154507 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '0.6544370580860918'  WHEN '' THEN 'LtvA' WHEN x'' THEN x'' WHEN '-1337501366' THEN '-1345299254' ELSE 0x4432463 END IN (((('795025490')) NOT BETWEEN ((4.93397123E8)) AND ((-3.72545609E8))), (((x'7af4', -1.203375113E9, '1576847634')) NOT BETWEEN ((NULL, '_bDAE1O', NULL)) AND (('0.4163909133520234', '', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1376214272 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1283127205 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1 sz=813226279 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN NULL THEN x'14040b92' WHEN '麕藆u(R\np[' THEN '0.4427203931625071' WHEN 'QPFE猝3' THEN '1597305341' END)!=((((0x27034873))<(('}s'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1725044019 sz=953428963'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-2139901141 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-703572545 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((x'')>>('564180218'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.03834691409767843)+('a體')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=2095722359 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1427248175 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1158279697 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR(x'57c3')))AND(0.9639417868355317)))>>(CASE '332761957'  WHEN 0.7977529207497248 THEN x'badd' ELSE '-1272322250' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-503671872 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1548756447 sz=944512874'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((highlight('-142613457', -1.46577563E9, 0xffffffffa1bd4f58, '>\n'))/((((x'', NULL, x'', 0.3929917177290715, 0.6640982628721133)) NOT BETWEEN ((x'', '-788886154', 0Xffffffffe9cb67b7, NULL, NULL)) AND ((NULL, -1453188529, NULL, '1671038644', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1470531912 sz=1112423844 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1503710931 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('1656183273')*(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -724725490 sz=905184249 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1967487233 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS BLOB)  WHEN ((NULL) ISNULL) THEN CASE WHEN NULL THEN 1793607516 END ELSE CASE WHEN '-766878746' THEN '' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1926908385 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') ISNULL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1021980949; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6362683081311372)<=(NULL)))<<((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-9223372036854775808 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ()))<<(((x'')IS(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)/(0.5849668281023173)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TOTAL_CHANGES() IN ((('') NOT BETWEEN (x'') AND ('-2007089760')), ((0xffffffffbf8e69fe)LIKE('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=255057289 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1948315029 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((+ ('yV')))OR(('%b*sW{)o' IN ()))))OR(((x'b3bb')*('R3')))))AND(CASE WHEN NULL THEN 239258042 WHEN 0xfffffffff1cfe3fd THEN '767371091' WHEN '-658759279' THEN x'' END)))OR(((1076184091) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1002577452 sz=-1847653133 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '259067995 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=252373892 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1659944724 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-729788650 unordered noskipscan'); -- 3ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0, c3) VALUES ('1572728264', '0.6182323182527322', x'0560', ' -4K	''i'), (NULL, -6.58759279E8, 0.24606189470870998, '-194784725'), ('', 0.7857766345233632, x'462d', x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64219'); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.7809687868037101), (NULL), (x''); -- 0ms;
REINDEX BINARY; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(0.6878897773906563) WHERE NULL; -- 0ms;
UPDATE rt0 SET c2=-769256363 WHERE rt0.c0 COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL; -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('c!g|~^'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
PRAGMA secure_delete; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2, c1, c0) VALUES (NULL, 0.1999285169505849, NULL, x''); -- 2ms;
UPDATE OR FAIL rt0 SET c0='-1220046083' WHERE CAST(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)) AS INTEGER); -- 0ms;
UPDATE OR IGNORE rt1 SET c5=0.07690773258513295 WHERE (((((rt1.c2) IS FALSE)))<=((UPPER(rt1.c0)))); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (''), (''), (0.013240842978244016), (NULL), (0X4282b07d); -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES (-803144463); -- 1ms;
PRAGMA temp.secure_delete = FAST; -- 0ms;
UPDATE OR IGNORE rt1 SET c3=0.5443632876603427; -- 1ms;
UPDATE OR IGNORE rt0 SET (c3, c0)=(0.5518812675466814, 'nd'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(0.9916766047718245) WHERE ((NULL)||(COALESCE(DISTINCT rt1.c4, rt1.c5, rt1.c0, rt1.c5))); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0))) BETWEEN ((rt1.c0 IN ())) AND ((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0))) BETWEEN ((rt1.c0 IN ())) AND ((+ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0))) BETWEEN ((rt1.c0 IN ())) AND ((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0))) BETWEEN ((rt1.c0 IN ())) AND ((+ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c0))) BETWEEN ((rt1.c0 IN ())) AND ((+ (rt1.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((+ (x'91f4')))|(((rt0.c0)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (x'91f4')))|(((rt0.c0)||(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (x'91f4')))|(((rt0.c0)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (x'91f4')))|(((rt0.c0)||(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (x'91f4')))|(((rt0.c0)||(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((NULLIF(rt1.c4, rt0.c4))>(vt0.c0 COLLATE RTRIM))) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS BLOB), (((NOT (rt1.c4)))+((((vt0.c0))<((rt1.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt1.c4, rt0.c4))>(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CAST(rt1.c1 COLLATE RTRIM AS BLOB), (((NOT (rt1.c4)))+((((vt0.c0))<((rt1.c4)))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((NULLIF(rt1.c4, rt0.c4))>(vt0.c0 COLLATE RTRIM))) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS BLOB), (((NOT (rt1.c4)))+((((vt0.c0))<((rt1.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt1.c4, rt0.c4))>(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CAST(rt1.c1 COLLATE RTRIM AS BLOB), (((NOT (rt1.c4)))+((((vt0.c0))<((rt1.c4)))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((NULLIF(rt1.c4, rt0.c4))>(vt0.c0 COLLATE RTRIM))) ORDER BY CAST(rt1.c1 COLLATE RTRIM AS BLOB), (((NOT (rt1.c4)))+((((vt0.c0))<((rt1.c4)))))  NULLS FIRST;
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (((rt1.c3)+(((0x7ba48b0c)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3)+(((0X7ba48b0c)IS NOT(vt0.c0))))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (((rt1.c3)+(((0x7ba48b0c)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3)+(((0X7ba48b0c)IS NOT(vt0.c0))))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (((rt1.c3)+(((0x7ba48b0c)IS NOT(vt0.c0)))));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c4)<=(rt1.c5))) NOT BETWEEN ((~ (rt1.c1))) AND ((- (0X75cf1a33))))) ORDER BY ((rt1.c3) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)<=(rt1.c5))) NOT BETWEEN ((~ (rt1.c1))) AND ((- (0X75cf1a33))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c3) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c0)));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c4)<=(rt1.c5))) NOT BETWEEN ((~ (rt1.c1))) AND ((- (0X75cf1a33))))) ORDER BY ((rt1.c3) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)<=(rt1.c5))) NOT BETWEEN ((~ (rt1.c1))) AND ((- (0X75cf1a33))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c3) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c0)));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c4)<=(rt1.c5))) NOT BETWEEN ((~ (rt1.c1))) AND ((- (0X75cf1a33))))) ORDER BY ((rt1.c3) BETWEEN (CAST(rt1.c0 AS REAL)) AND (rt1.c0));
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((~ (((rt0.c2) ISNULL)))) ORDER BY CAST(((rt1.c2) IS FALSE) AS TEXT), NULLIF(DISTINCT (- ('')), (+ (rt0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CAST(((rt1.c2) IS FALSE) AS TEXT), NULLIF(DISTINCT (- ('')), (+ (rt0.c4)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((~ (((rt0.c2) ISNULL)))) ORDER BY CAST(((rt1.c2) IS FALSE) AS TEXT), NULLIF(DISTINCT (- ('')), (+ (rt0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CAST(((rt1.c2) IS FALSE) AS TEXT), NULLIF(DISTINCT (- ('')), (+ (rt0.c4)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((~ (((rt0.c2) ISNULL)))) ORDER BY CAST(((rt1.c2) IS FALSE) AS TEXT), NULLIF(DISTINCT (- ('')), (+ (rt0.c4)))  NULLS FIRST;
SELECT * FROM rt1 WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c5);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)&(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)&(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)&(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)&(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)&(rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((((rt0.c2, rt0.c3, rt1.c3)) BETWEEN ((UPPER(rt0.c0), ((rt0.c1)|(rt1.c3)), (~ ('-825717')))) AND ((((((((((((((x'')OR(rt0.c4)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c4)))AND(rt1.c2)))AND(rt0.c0)), (((0.2402511405107839))>((rt1.c2))), ((rt0.c3) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c3, rt1.c3)) BETWEEN ((UPPER(rt0.c0), ((rt0.c1)|(rt1.c3)), (~ ('-825717')))) AND ((((((((((((((x'')OR(rt0.c4)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c4)))AND(rt1.c2)))AND(rt0.c0)), (((0.2402511405107839))>((rt1.c2))), ((rt0.c3) ISNULL))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((((rt0.c2, rt0.c3, rt1.c3)) BETWEEN ((UPPER(rt0.c0), ((rt0.c1)|(rt1.c3)), (~ ('-825717')))) AND ((((((((((((((x'')OR(rt0.c4)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c4)))AND(rt1.c2)))AND(rt0.c0)), (((0.2402511405107839))>((rt1.c2))), ((rt0.c3) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c3, rt1.c3)) BETWEEN ((UPPER(rt0.c0), ((rt0.c1)|(rt1.c3)), (~ ('-825717')))) AND ((((((((((((((x'')OR(rt0.c4)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c4)))AND(rt1.c2)))AND(rt0.c0)), (((0.2402511405107839))>((rt1.c2))), ((rt0.c3) ISNULL))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((((rt0.c2, rt0.c3, rt1.c3)) BETWEEN ((UPPER(rt0.c0), ((rt0.c1)|(rt1.c3)), (~ ('-825717')))) AND ((((((((((((((x'')OR(rt0.c4)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c4)))AND(rt1.c2)))AND(rt0.c0)), (((0.2402511405107839))>((rt1.c2))), ((rt0.c3) ISNULL)))));
SELECT * FROM rt1 INNER JOIN vt0 ON rt0.c4 CROSS JOIN rt0 ON (((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt1.c2, '', '569587744')) AND ((rt0.c2, rt1.c1, rt1.c2))))+(CAST(rt0.c0 AS BLOB))) WHERE (((684446480)IS NOT(CAST('803590511' AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((684446480)IS NOT(CAST('803590511' AS REAL)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON rt0.c4 CROSS JOIN rt0 ON (((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt1.c2, '', '569587744')) AND ((rt0.c2, rt1.c1, rt1.c2))))+(CAST(rt0.c0 AS BLOB))));
SELECT * FROM rt1 INNER JOIN vt0 ON rt0.c4 CROSS JOIN rt0 ON (((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt1.c2, '', '569587744')) AND ((rt0.c2, rt1.c1, rt1.c2))))+(CAST(rt0.c0 AS BLOB))) WHERE (((684446480)IS NOT(CAST('803590511' AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((684446480)IS NOT(CAST('803590511' AS REAL)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON rt0.c4 CROSS JOIN rt0 ON (((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt1.c2, '', '569587744')) AND ((rt0.c2, rt1.c1, rt1.c2))))+(CAST(rt0.c0 AS BLOB))));
SELECT * FROM rt1 INNER JOIN vt0 ON rt0.c4 CROSS JOIN rt0 ON (((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt1.c2, '', '569587744')) AND ((rt0.c2, rt1.c1, rt1.c2))))+(CAST(rt0.c0 AS BLOB))) WHERE (((684446480)IS NOT(CAST('803590511' AS REAL))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c5)OR(rt1.c0)))AND(vt0.c0))) IS TRUE)) ORDER BY ABS(DISTINCT (- (rt1.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c5)OR(rt1.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ABS(DISTINCT (- (rt1.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c5)OR(rt1.c0)))AND(vt0.c0))) IS TRUE)) ORDER BY ABS(DISTINCT (- (rt1.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c5)OR(rt1.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ABS(DISTINCT (- (rt1.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c5)OR(rt1.c0)))AND(vt0.c0))) IS TRUE)) ORDER BY ABS(DISTINCT (- (rt1.c1))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((('-250355811') IS FALSE)) BETWEEN (UNLIKELY(rt0.c4)) AND (rt1.c4)) LEFT OUTER JOIN rt1 ON ((rt1.c3) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((('-481337814')IS NOT(rt1.c5)))) WHERE (((((((((((rt1.c0)AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c2)))AND(rt0.c1)))||(rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c2)))AND(rt0.c1)))||(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((('-250355811') IS FALSE)) BETWEEN (UNLIKELY(rt0.c4)) AND (rt1.c4)) LEFT OUTER JOIN rt1 ON ((rt1.c3) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((('-481337814')IS NOT(rt1.c5)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((('-250355811') IS FALSE)) BETWEEN (UNLIKELY(rt0.c4)) AND (rt1.c4)) LEFT OUTER JOIN rt1 ON ((rt1.c3) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((('-481337814')IS NOT(rt1.c5)))) WHERE (((((((((((rt1.c0)AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c2)))AND(rt0.c1)))||(rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c2)))AND(rt0.c1)))||(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((('-250355811') IS FALSE)) BETWEEN (UNLIKELY(rt0.c4)) AND (rt1.c4)) LEFT OUTER JOIN rt1 ON ((rt1.c3) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((('-481337814')IS NOT(rt1.c5)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((('-250355811') IS FALSE)) BETWEEN (UNLIKELY(rt0.c4)) AND (rt1.c4)) LEFT OUTER JOIN rt1 ON ((rt1.c3) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((('-481337814')IS NOT(rt1.c5)))) WHERE (((((((((((rt1.c0)AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c2)))AND(rt0.c1)))||(rt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (RTRIM(HEX(DISTINCT rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(HEX(DISTINCT rt1.c0))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (RTRIM(HEX(DISTINCT rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(HEX(DISTINCT rt1.c0))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (RTRIM(HEX(DISTINCT rt1.c0)));
SELECT ALL * FROM vt0, rt0 WHERE ((TRIM(rt0.c1) IN ())) ORDER BY ((((vt0.c0)OR(vt0.c0)))IS NOT(((rt0.c4)<(rt0.c1))))  NULLS FIRST, ((((UNLIKELY(rt0.c2))OR(((rt0.c2)LIKE(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END));
SELECT SUM(count) FROM (SELECT (((TRIM(rt0.c1) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))IS NOT(((rt0.c4)<(rt0.c1))))  NULLS FIRST, ((((UNLIKELY(rt0.c2))OR(((rt0.c2)LIKE(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END)));
SELECT ALL * FROM vt0, rt0 WHERE ((TRIM(rt0.c1) IN ())) ORDER BY ((((vt0.c0)OR(vt0.c0)))IS NOT(((rt0.c4)<(rt0.c1))))  NULLS FIRST, ((((UNLIKELY(rt0.c2))OR(((rt0.c2)LIKE(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END));
SELECT SUM(count) FROM (SELECT (((TRIM(rt0.c1) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))IS NOT(((rt0.c4)<(rt0.c1))))  NULLS FIRST, ((((UNLIKELY(rt0.c2))OR(((rt0.c2)LIKE(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END)));
SELECT ALL * FROM vt0, rt0 WHERE ((TRIM(rt0.c1) IN ())) ORDER BY ((((vt0.c0)OR(vt0.c0)))IS NOT(((rt0.c4)<(rt0.c1))))  NULLS FIRST, ((((UNLIKELY(rt0.c2))OR(((rt0.c2)LIKE(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END));
SELECT * FROM rt1 WHERE ((((rt1.c5 IN ()))>>(((((rt1.c4)OR(rt1.c2)))OR(1580427192))))) ORDER BY LOWER(DISTINCT (rt1.c2 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c5 IN ()))>>(((((rt1.c4)OR(rt1.c2)))OR(1580427192))))) IS TRUE)  as count FROM rt1 ORDER BY LOWER(DISTINCT (rt1.c2 IN ()))  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c5 IN ()))>>(((((rt1.c4)OR(rt1.c2)))OR(1580427192))))) ORDER BY LOWER(DISTINCT (rt1.c2 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c5 IN ()))>>(((((rt1.c4)OR(rt1.c2)))OR(1580427192))))) IS TRUE)  as count FROM rt1 ORDER BY LOWER(DISTINCT (rt1.c2 IN ()))  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c5 IN ()))>>(((((rt1.c4)OR(rt1.c2)))OR(1580427192))))) ORDER BY LOWER(DISTINCT (rt1.c2 IN ()))  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (CASE WHEN (rt1.c4 IN ()) THEN CAST(rt1.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c4 IN ()) THEN CAST(rt1.c0 AS INTEGER) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN (rt1.c4 IN ()) THEN CAST(rt1.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c4 IN ()) THEN CAST(rt1.c0 AS INTEGER) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN (rt1.c4 IN ()) THEN CAST(rt1.c0 AS INTEGER) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE ((NOT (((0.09061836242074839) NOTNULL)))) ORDER BY ((0.1334902800454978) NOT NULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0.09061836242074839) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 ORDER BY ((0.1334902800454978) NOT NULL) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE ((NOT (((0.09061836242074839) NOTNULL)))) ORDER BY ((0.1334902800454978) NOT NULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0.09061836242074839) NOTNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 ORDER BY ((0.1334902800454978) NOT NULL) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE ((NOT (((0.09061836242074839) NOTNULL)))) ORDER BY ((0.1334902800454978) NOT NULL) COLLATE RTRIM ASC;
SELECT ALL * FROM rt1 WHERE (((((((rt1.c3)GLOB(rt1.c4)))AND((((rt1.c4))!=((rt1.c5))))))AND(rt1.c4 COLLATE RTRIM))) ORDER BY CAST(((rt1.c4) ISNULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)GLOB(rt1.c4)))AND((((rt1.c4))<>((rt1.c5))))))AND(rt1.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c4) ISNULL) AS NUMERIC));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c3)GLOB(rt1.c4)))AND((((rt1.c4))!=((rt1.c5))))))AND(rt1.c4 COLLATE RTRIM))) ORDER BY CAST(((rt1.c4) ISNULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)GLOB(rt1.c4)))AND((((rt1.c4))<>((rt1.c5))))))AND(rt1.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c4) ISNULL) AS NUMERIC));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c3)GLOB(rt1.c4)))AND((((rt1.c4))!=((rt1.c5))))))AND(rt1.c4 COLLATE RTRIM))) ORDER BY CAST(((rt1.c4) ISNULL) AS NUMERIC);
SELECT * FROM vt0 INNER JOIN rt1 ON (rt1.c5 IN ()) COLLATE RTRIM LEFT OUTER JOIN rt0 ON (((NOT (rt1.c3))) IS FALSE) WHERE (CAST(((((((((rt0.c4)AND(rt1.c4)))AND(rt0.c4)))AND(rt1.c2)))OR(rt0.c4)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c4)AND(rt1.c4)))AND(rt0.c4)))AND(rt1.c2)))OR(rt0.c4)) AS BLOB)) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (rt1.c5 IN ()) COLLATE RTRIM LEFT OUTER JOIN rt0 ON (((NOT (rt1.c3))) IS FALSE));
SELECT * FROM vt0 INNER JOIN rt1 ON (rt1.c5 IN ()) COLLATE RTRIM LEFT OUTER JOIN rt0 ON (((NOT (rt1.c3))) IS FALSE) WHERE (CAST(((((((((rt0.c4)AND(rt1.c4)))AND(rt0.c4)))AND(rt1.c2)))OR(rt0.c4)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c4)AND(rt1.c4)))AND(rt0.c4)))AND(rt1.c2)))OR(rt0.c4)) AS BLOB)) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (rt1.c5 IN ()) COLLATE RTRIM LEFT OUTER JOIN rt0 ON (((NOT (rt1.c3))) IS FALSE));
SELECT * FROM vt0 INNER JOIN rt1 ON (rt1.c5 IN ()) COLLATE RTRIM LEFT OUTER JOIN rt0 ON (((NOT (rt1.c3))) IS FALSE) WHERE (CAST(((((((((rt0.c4)AND(rt1.c4)))AND(rt0.c4)))AND(rt1.c2)))OR(rt0.c4)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((x'369d' IN ()));
SELECT SUM(count) FROM (SELECT (((x'369d' IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((x'369d' IN ()));
SELECT SUM(count) FROM (SELECT (((x'369d' IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((x'369d' IN ()));
SELECT * FROM rt1, rt0 WHERE (CAST((+ (rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST((+ (rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST((+ (rt1.c1)) AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c4) NOT BETWEEN (NULL) AND (rt1.c5)))==(((rt1.c3) NOT BETWEEN (0.8526884166021172) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT BETWEEN (NULL) AND (rt1.c5)))=(((rt1.c3) NOT BETWEEN (0.8526884166021172) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c4) NOT BETWEEN (NULL) AND (rt1.c5)))==(((rt1.c3) NOT BETWEEN (0.8526884166021172) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT BETWEEN (NULL) AND (rt1.c5)))=(((rt1.c3) NOT BETWEEN (0.8526884166021172) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c4) NOT BETWEEN (NULL) AND (rt1.c5)))==(((rt1.c3) NOT BETWEEN (0.8526884166021172) AND (rt1.c0)))));
SELECT * FROM vt0, rt1, rt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (SQLITE_SOURCE_ID());
SELECT COUNT(*) FROM rt1, rt0 WHERE (HEX(DISTINCT 'v.* e|4'));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT 'v.* e|4')) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (HEX(DISTINCT 'v.* e|4'));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT 'v.* e|4')) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (HEX(DISTINCT 'v.* e|4'));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (rt0.c4 IN (((rt1.c2) ISNULL))) RIGHT OUTER JOIN vt0 ON rt0.c3 WHERE (((((CAST(rt0.c2 AS REAL))AND((~ (rt0.c0)))))AND(0.3625106936477892))) ORDER BY (((rt0.c0, rt0.c4, rt1.c4)) NOT BETWEEN ((HEX(rt0.c0), ((rt1.c2) NOTNULL), ((((rt0.c3)AND(rt1.c3)))OR(rt0.c2)))) AND ((LOWER(rt1.c4), rt0.c3, rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS REAL))AND((~ (rt0.c0)))))AND(0.3625106936477892))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (rt0.c4 IN (((rt1.c2) ISNULL))) RIGHT OUTER JOIN vt0 ON rt0.c3 ORDER BY (((rt0.c0, rt0.c4, rt1.c4)) NOT BETWEEN ((HEX(rt0.c0), ((rt1.c2) NOTNULL), ((((rt0.c3)AND(rt1.c3)))OR(rt0.c2)))) AND ((LOWER(rt1.c4), rt0.c3, rt0.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (rt0.c4 IN (((rt1.c2) ISNULL))) RIGHT OUTER JOIN vt0 ON rt0.c3 WHERE (((((CAST(rt0.c2 AS REAL))AND((~ (rt0.c0)))))AND(0.3625106936477892))) ORDER BY (((rt0.c0, rt0.c4, rt1.c4)) NOT BETWEEN ((HEX(rt0.c0), ((rt1.c2) NOTNULL), ((((rt0.c3)AND(rt1.c3)))OR(rt0.c2)))) AND ((LOWER(rt1.c4), rt0.c3, rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS REAL))AND((~ (rt0.c0)))))AND(0.3625106936477892))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (rt0.c4 IN (((rt1.c2) ISNULL))) RIGHT OUTER JOIN vt0 ON rt0.c3 ORDER BY (((rt0.c0, rt0.c4, rt1.c4)) NOT BETWEEN ((HEX(rt0.c0), ((rt1.c2) NOTNULL), ((((rt0.c3)AND(rt1.c3)))OR(rt0.c2)))) AND ((LOWER(rt1.c4), rt0.c3, rt0.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (rt0.c4 IN (((rt1.c2) ISNULL))) RIGHT OUTER JOIN vt0 ON rt0.c3 WHERE (((((CAST(rt0.c2 AS REAL))AND((~ (rt0.c0)))))AND(0.3625106936477892))) ORDER BY (((rt0.c0, rt0.c4, rt1.c4)) NOT BETWEEN ((HEX(rt0.c0), ((rt1.c2) NOTNULL), ((((rt0.c3)AND(rt1.c3)))OR(rt0.c2)))) AND ((LOWER(rt1.c4), rt0.c3, rt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0, rt1 INNER JOIN vt0 ON ((((rt1.c1)*(rt0.c3))) BETWEEN (((rt1.c2)-(rt0.c0))) AND (((vt0.c0)<<(rt0.c2)))) WHERE (((((UPPER(x''))OR(CASE WHEN 0x1c1aa0eb THEN rt1.c5 ELSE rt1.c0 END)))AND((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(x''))OR(CASE WHEN 0X1c1aa0eb THEN rt1.c5 ELSE rt1.c0 END)))AND((NOT (NULL))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt0 ON ((((rt1.c1)*(rt0.c3))) BETWEEN (((rt1.c2)-(rt0.c0))) AND (((vt0.c0)<<(rt0.c2)))));
SELECT * FROM rt0, rt1 INNER JOIN vt0 ON ((((rt1.c1)*(rt0.c3))) BETWEEN (((rt1.c2)-(rt0.c0))) AND (((vt0.c0)<<(rt0.c2)))) WHERE (((((UPPER(x''))OR(CASE WHEN 0x1c1aa0eb THEN rt1.c5 ELSE rt1.c0 END)))AND((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(x''))OR(CASE WHEN 0X1c1aa0eb THEN rt1.c5 ELSE rt1.c0 END)))AND((NOT (NULL))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt0 ON ((((rt1.c1)*(rt0.c3))) BETWEEN (((rt1.c2)-(rt0.c0))) AND (((vt0.c0)<<(rt0.c2)))));
SELECT * FROM rt0, rt1 INNER JOIN vt0 ON ((((rt1.c1)*(rt0.c3))) BETWEEN (((rt1.c2)-(rt0.c0))) AND (((vt0.c0)<<(rt0.c2)))) WHERE (((((UPPER(x''))OR(CASE WHEN 0x1c1aa0eb THEN rt1.c5 ELSE rt1.c0 END)))AND((NOT (NULL)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3)IS NOT(rt1.c5))) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND (CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)IS NOT(rt1.c5))) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND (CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3)IS NOT(rt1.c5))) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND (CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)IS NOT(rt1.c5))) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND (CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3)IS NOT(rt1.c5))) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND (CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c0 END)));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((((rt0.c3)IS NOT(rt0.c2))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c3 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) AND (CASE rt1.c4  WHEN rt0.c2 THEN rt1.c0 END))) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)>=(rt0.c4))) AND (((rt0.c2) BETWEEN (rt0.c3) AND ('rYNgT')))), (((((rt0.c4)) BETWEEN ((rt1.c5)) AND ((rt1.c2))))<<(CAST(rt1.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS NOT(rt0.c2))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c3 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) AND (CASE rt1.c4  WHEN rt0.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)>=(rt0.c4))) AND (((rt0.c2) BETWEEN (rt0.c3) AND ('rYNgT')))), (((((rt0.c4)) BETWEEN ((rt1.c5)) AND ((rt1.c2))))<<(CAST(rt1.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((((rt0.c3)IS NOT(rt0.c2))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c3 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) AND (CASE rt1.c4  WHEN rt0.c2 THEN rt1.c0 END))) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)>=(rt0.c4))) AND (((rt0.c2) BETWEEN (rt0.c3) AND ('rYNgT')))), (((((rt0.c4)) BETWEEN ((rt1.c5)) AND ((rt1.c2))))<<(CAST(rt1.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS NOT(rt0.c2))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c3 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) AND (CASE rt1.c4  WHEN rt0.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)>=(rt0.c4))) AND (((rt0.c2) BETWEEN (rt0.c3) AND ('rYNgT')))), (((((rt0.c4)) BETWEEN ((rt1.c5)) AND ((rt1.c2))))<<(CAST(rt1.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((((rt0.c3)IS NOT(rt0.c2))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c5 THEN rt1.c3 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END) AND (CASE rt1.c4  WHEN rt0.c2 THEN rt1.c0 END))) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)>=(rt0.c4))) AND (((rt0.c2) BETWEEN (rt0.c3) AND ('rYNgT')))), (((((rt0.c4)) BETWEEN ((rt1.c5)) AND ((rt1.c2))))<<(CAST(rt1.c2 AS BLOB)));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((0.42529118977232505) NOT BETWEEN (((rt0.c1) BETWEEN (0.6001806541588424) AND (0.08847215286516596))) AND (((rt0.c2)*(rt0.c0)))) WHERE (CASE WHEN ((rt0.c3)<>(rt0.c2)) THEN rt1.c1 ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)<>(rt0.c2)) THEN rt1.c1 ELSE rt0.c2 END) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((0.42529118977232505) NOT BETWEEN (((rt0.c1) BETWEEN (0.6001806541588424) AND (0.08847215286516596))) AND (((rt0.c2)*(rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((0.42529118977232505) NOT BETWEEN (((rt0.c1) BETWEEN (0.6001806541588424) AND (0.08847215286516596))) AND (((rt0.c2)*(rt0.c0)))) WHERE (CASE WHEN ((rt0.c3)<>(rt0.c2)) THEN rt1.c1 ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)<>(rt0.c2)) THEN rt1.c1 ELSE rt0.c2 END) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((0.42529118977232505) NOT BETWEEN (((rt0.c1) BETWEEN (0.6001806541588424) AND (0.08847215286516596))) AND (((rt0.c2)*(rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((0.42529118977232505) NOT BETWEEN (((rt0.c1) BETWEEN (0.6001806541588424) AND (0.08847215286516596))) AND (((rt0.c2)*(rt0.c0)))) WHERE (CASE WHEN ((rt0.c3)<>(rt0.c2)) THEN rt1.c1 ELSE rt0.c2 END);
SELECT ALL * FROM rt0 WHERE (CASE (~ (rt0.c4))  WHEN CAST(1.155302928E9 AS INTEGER) THEN CASE WHEN rt0.c4 THEN x'' END END) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) AND ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END))) ASC  NULLS FIRST, (- ((((rt0.c4, rt0.c3, rt0.c4))>((rt0.c3, rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c4))  WHEN CAST(1.155302928E9 AS INTEGER) THEN CASE WHEN rt0.c4 THEN x'' END END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) AND ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END))) ASC  NULLS FIRST, (- ((((rt0.c4, rt0.c3, rt0.c4))>((rt0.c3, rt0.c2, rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (CASE (~ (rt0.c4))  WHEN CAST(1.155302928E9 AS INTEGER) THEN CASE WHEN rt0.c4 THEN x'' END END) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) AND ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END))) ASC  NULLS FIRST, (- ((((rt0.c4, rt0.c3, rt0.c4))>((rt0.c3, rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c4))  WHEN CAST(1.155302928E9 AS INTEGER) THEN CASE WHEN rt0.c4 THEN x'' END END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) AND ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END))) ASC  NULLS FIRST, (- ((((rt0.c4, rt0.c3, rt0.c4))>((rt0.c3, rt0.c2, rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (CASE (~ (rt0.c4))  WHEN CAST(1.155302928E9 AS INTEGER) THEN CASE WHEN rt0.c4 THEN x'' END END) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) AND ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END))) ASC  NULLS FIRST, (- ((((rt0.c4, rt0.c3, rt0.c4))>((rt0.c3, rt0.c2, rt0.c2)))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON NULL WHERE (ABS(CAST(rt1.c3 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(rt1.c3 AS REAL))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON NULL WHERE (ABS(CAST(rt1.c3 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(rt1.c3 AS REAL))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON NULL WHERE (ABS(CAST(rt1.c3 AS REAL)));
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c0) NOT NULL)))>((((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c5)))))) ORDER BY CASE ((rt1.c4) NOT NULL)  WHEN ((((((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c5)))OR(rt1.c2)) THEN ((rt1.c0) ISNULL) ELSE CAST(rt1.c1 AS BLOB) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) NOT NULL)))>((((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c5)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((rt1.c4) NOT NULL)  WHEN ((((((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c5)))OR(rt1.c2)) THEN ((rt1.c0) ISNULL) ELSE CAST(rt1.c1 AS BLOB) END  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c0) NOT NULL)))>((((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c5)))))) ORDER BY CASE ((rt1.c4) NOT NULL)  WHEN ((((((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c5)))OR(rt1.c2)) THEN ((rt1.c0) ISNULL) ELSE CAST(rt1.c1 AS BLOB) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) NOT NULL)))>((((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c5)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((rt1.c4) NOT NULL)  WHEN ((((((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c5)))OR(rt1.c2)) THEN ((rt1.c0) ISNULL) ELSE CAST(rt1.c1 AS BLOB) END  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c0) NOT NULL)))>((((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c5)))))) ORDER BY CASE ((rt1.c4) NOT NULL)  WHEN ((((((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c5)))OR(rt1.c2)) THEN ((rt1.c0) ISNULL) ELSE CAST(rt1.c1 AS BLOB) END  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c5)<<(rt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5)<<(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c5)<<(rt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5)<<(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c5)<<(rt1.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c4)OR(vt0.c0)))OR(rt0.c1))) IS TRUE)) ORDER BY ((((((rt0.c1) IS FALSE))AND('930642498')))AND(((rt0.c2)IS NOT(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(vt0.c0)))OR(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1) IS FALSE))AND('930642498')))AND(((rt0.c2)IS NOT(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c4)OR(vt0.c0)))OR(rt0.c1))) IS TRUE)) ORDER BY ((((((rt0.c1) IS FALSE))AND('930642498')))AND(((rt0.c2)IS NOT(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(vt0.c0)))OR(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1) IS FALSE))AND('930642498')))AND(((rt0.c2)IS NOT(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c4)OR(vt0.c0)))OR(rt0.c1))) IS TRUE)) ORDER BY ((((((rt0.c1) IS FALSE))AND('930642498')))AND(((rt0.c2)IS NOT(rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c0) ORDER BY ((((rt1.c5) NOT NULL))OR(((rt1.c1)>(rt1.c5))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c5) NOT NULL))OR(((rt1.c1)>(rt1.c5)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c0) ORDER BY ((((rt1.c5) NOT NULL))OR(((rt1.c1)>(rt1.c5))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c5) NOT NULL))OR(((rt1.c1)>(rt1.c5)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c0) ORDER BY ((((rt1.c5) NOT NULL))OR(((rt1.c1)>(rt1.c5))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE (('-1e500')<<(rt0.c4))  WHEN (((rt1.c2))==((rt1.c0))) THEN ((rt1.c4)|(rt1.c3)) END WHERE (x'') ORDER BY ((((NOT (rt1.c4))))<((((rt0.c1)/(rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE (('-1e500')<<(rt0.c4))  WHEN (((rt1.c2))=((rt1.c0))) THEN ((rt1.c4)|(rt1.c3)) END ORDER BY ((((NOT (rt1.c4))))<((((rt0.c1)/(rt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE (('-1e500')<<(rt0.c4))  WHEN (((rt1.c2))==((rt1.c0))) THEN ((rt1.c4)|(rt1.c3)) END WHERE (x'') ORDER BY ((((NOT (rt1.c4))))<((((rt0.c1)/(rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE (('-1e500')<<(rt0.c4))  WHEN (((rt1.c2))=((rt1.c0))) THEN ((rt1.c4)|(rt1.c3)) END ORDER BY ((((NOT (rt1.c4))))<((((rt0.c1)/(rt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE (('-1e500')<<(rt0.c4))  WHEN (((rt1.c2))==((rt1.c0))) THEN ((rt1.c4)|(rt1.c3)) END WHERE (x'') ORDER BY ((((NOT (rt1.c4))))<((((rt0.c1)/(rt0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON (((((+ (rt0.c2)))AND(((rt1.c1)<>(rt0.c0)))))OR(CASE rt0.c0  WHEN x'6fb4' THEN rt0.c2 END)) WHERE (((((CAST(rt1.c3 AS NUMERIC))OR(((((rt1.c2)OR(rt0.c4)))OR(rt1.c0)))))OR(0x7ef84ed0))) ORDER BY ((((((((rt1.c3)OR(HEX(rt0.c2))))AND(((rt1.c5)!=(rt1.c1)))))AND(rt1.c3)))OR(((rt0.c2) NOT NULL)))  NULLS FIRST, (+ (((rt0.c2)==(0.7761825335293352))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c3 AS NUMERIC))OR(((((rt1.c2)OR(rt0.c4)))OR(rt1.c0)))))OR(0x7ef84ed0))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON (((((+ (rt0.c2)))AND(((rt1.c1)!=(rt0.c0)))))OR(CASE rt0.c0  WHEN x'6fb4' THEN rt0.c2 END)) ORDER BY ((((((((rt1.c3)OR(HEX(rt0.c2))))AND(((rt1.c5)<>(rt1.c1)))))AND(rt1.c3)))OR(((rt0.c2) NOT NULL)))  NULLS FIRST, (+ (((rt0.c2)=(0.7761825335293352)))));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON (((((+ (rt0.c2)))AND(((rt1.c1)<>(rt0.c0)))))OR(CASE rt0.c0  WHEN x'6fb4' THEN rt0.c2 END)) WHERE (((((CAST(rt1.c3 AS NUMERIC))OR(((((rt1.c2)OR(rt0.c4)))OR(rt1.c0)))))OR(0x7ef84ed0))) ORDER BY ((((((((rt1.c3)OR(HEX(rt0.c2))))AND(((rt1.c5)!=(rt1.c1)))))AND(rt1.c3)))OR(((rt0.c2) NOT NULL)))  NULLS FIRST, (+ (((rt0.c2)==(0.7761825335293352))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c3 AS NUMERIC))OR(((((rt1.c2)OR(rt0.c4)))OR(rt1.c0)))))OR(0x7ef84ed0))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON (((((+ (rt0.c2)))AND(((rt1.c1)!=(rt0.c0)))))OR(CASE rt0.c0  WHEN x'6fb4' THEN rt0.c2 END)) ORDER BY ((((((((rt1.c3)OR(HEX(rt0.c2))))AND(((rt1.c5)<>(rt1.c1)))))AND(rt1.c3)))OR(((rt0.c2) NOT NULL)))  NULLS FIRST, (+ (((rt0.c2)=(0.7761825335293352)))));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON (((((+ (rt0.c2)))AND(((rt1.c1)<>(rt0.c0)))))OR(CASE rt0.c0  WHEN x'6fb4' THEN rt0.c2 END)) WHERE (((((CAST(rt1.c3 AS NUMERIC))OR(((((rt1.c2)OR(rt0.c4)))OR(rt1.c0)))))OR(0x7ef84ed0))) ORDER BY ((((((((rt1.c3)OR(HEX(rt0.c2))))AND(((rt1.c5)!=(rt1.c1)))))AND(rt1.c3)))OR(((rt0.c2) NOT NULL)))  NULLS FIRST, (+ (((rt0.c2)==(0.7761825335293352))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON 0.5270178311945375 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON 0.5270178311945375);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON 0.5270178311945375 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON 0.5270178311945375);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON 0.5270178311945375 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((('g')AND((rt1.c5 IN ()))))AND(TRIM(vt0.c0, vt0.c0))) WHERE (LAST_INSERT_ROWID()) ORDER BY ((vt0.c0)IS(rt1.c0));
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((('g')AND((rt1.c5 IN ()))))AND(TRIM(vt0.c0, vt0.c0))) ORDER BY ((vt0.c0)IS(rt1.c0)));
SELECT ALL COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((('g')AND((rt1.c5 IN ()))))AND(TRIM(vt0.c0, vt0.c0))) WHERE (LAST_INSERT_ROWID()) ORDER BY ((vt0.c0)IS(rt1.c0));
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((('g')AND((rt1.c5 IN ()))))AND(TRIM(vt0.c0, vt0.c0))) ORDER BY ((vt0.c0)IS(rt1.c0)));
SELECT ALL COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON (((('g')AND((rt1.c5 IN ()))))AND(TRIM(vt0.c0, vt0.c0))) WHERE (LAST_INSERT_ROWID()) ORDER BY ((vt0.c0)IS(rt1.c0));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (LIKELIHOOD(DISTINCT ((rt1.c4) NOTNULL), 0.13177065564834234));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt1.c4) NOTNULL), 0.13177065564834234)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (LIKELIHOOD(DISTINCT ((rt1.c4) NOTNULL), 0.13177065564834234));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt1.c4) NOTNULL), 0.13177065564834234)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (LIKELIHOOD(DISTINCT ((rt1.c4) NOTNULL), 0.13177065564834234));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CHAR(rt1.c5 COLLATE BINARY) CROSS JOIN rt1 ON 0.33034751711955923 WHERE ((CASE rt0.c2  WHEN rt0.c3 THEN '-318970597' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c3 THEN '-318970597' END IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CHAR(rt1.c5 COLLATE BINARY) CROSS JOIN rt1 ON 0.33034751711955923);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CHAR(rt1.c5 COLLATE BINARY) CROSS JOIN rt1 ON 0.33034751711955923 WHERE ((CASE rt0.c2  WHEN rt0.c3 THEN '-318970597' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c3 THEN '-318970597' END IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CHAR(rt1.c5 COLLATE BINARY) CROSS JOIN rt1 ON 0.33034751711955923);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CHAR(rt1.c5 COLLATE BINARY) CROSS JOIN rt1 ON 0.33034751711955923 WHERE ((CASE rt0.c2  WHEN rt0.c3 THEN '-318970597' END IN ()));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (TRIM(DISTINCT rt1.c2, rt0.c0)) AND ((~ (vt0.c0)))) FULL OUTER JOIN rt1 ON ((((((rt1.c0)&(rt1.c4)))AND(((rt1.c2)LIKE(rt1.c4)))))OR(((((rt1.c5)OR(rt1.c1)))OR(rt1.c5)))) WHERE (rt1.c3) ORDER BY (~ ((- (rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (TRIM(DISTINCT rt1.c2, rt0.c0)) AND ((~ (vt0.c0)))) FULL OUTER JOIN rt1 ON ((((((rt1.c0)&(rt1.c4)))AND(((rt1.c2)LIKE(rt1.c4)))))OR(((((rt1.c5)OR(rt1.c1)))OR(rt1.c5)))) ORDER BY (~ ((- (rt0.c4)))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (TRIM(DISTINCT rt1.c2, rt0.c0)) AND ((~ (vt0.c0)))) FULL OUTER JOIN rt1 ON ((((((rt1.c0)&(rt1.c4)))AND(((rt1.c2)LIKE(rt1.c4)))))OR(((((rt1.c5)OR(rt1.c1)))OR(rt1.c5)))) WHERE (rt1.c3) ORDER BY (~ ((- (rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (TRIM(DISTINCT rt1.c2, rt0.c0)) AND ((~ (vt0.c0)))) FULL OUTER JOIN rt1 ON ((((((rt1.c0)&(rt1.c4)))AND(((rt1.c2)LIKE(rt1.c4)))))OR(((((rt1.c5)OR(rt1.c1)))OR(rt1.c5)))) ORDER BY (~ ((- (rt0.c4)))) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((0Xffffffff8da0506c))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((0xffffffff8da0506c)))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((0Xffffffff8da0506c))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((0xffffffff8da0506c)))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((0Xffffffff8da0506c))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY NULL  NULLS LAST, (~ (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'f179' END)IS(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST, (~ (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'f179' END)IS(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY NULL  NULLS LAST, (~ (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'f179' END)IS(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST, (~ (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'f179' END)IS(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY NULL  NULLS LAST, (~ (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'f179' END)IS(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ('-471918498');
SELECT SUM(count) FROM (SELECT ALL (('-471918498') IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ('-471918498');
SELECT SUM(count) FROM (SELECT ALL (('-471918498') IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ('-471918498');
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((x''))==((((rt1.c4)<<(rt1.c5))))) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt0.c0 END)>=('-766878746')) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((x''))=((((rt1.c4)<<(rt1.c5))))) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt0.c0 END)>=('-766878746')));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((x''))==((((rt1.c4)<<(rt1.c5))))) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt0.c0 END)>=('-766878746')) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((x''))=((((rt1.c4)<<(rt1.c5))))) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt0.c0 END)>=('-766878746')));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((x''))==((((rt1.c4)<<(rt1.c5))))) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN vt0.c0 END)>=('-766878746')) WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c1)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)&(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c1)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)&(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c1)&(vt0.c0)))));
SELECT * FROM rt1, rt0 WHERE (CAST((rt0.c1 IN (rt1.c0)) AS BLOB)) ORDER BY (((rt1.c0) NOTNULL) IN (((rt1.c3)<=(rt1.c0)), ((((rt1.c2)AND(NULL)))AND(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c0) NOTNULL) IN (((rt1.c3)<=(rt1.c0)), ((((rt1.c2)AND(NULL)))AND(rt1.c3)))));
SELECT * FROM rt1, rt0 WHERE (CAST((rt0.c1 IN (rt1.c0)) AS BLOB)) ORDER BY (((rt1.c0) NOTNULL) IN (((rt1.c3)<=(rt1.c0)), ((((rt1.c2)AND(NULL)))AND(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c0) NOTNULL) IN (((rt1.c3)<=(rt1.c0)), ((((rt1.c2)AND(NULL)))AND(rt1.c3)))));
SELECT * FROM rt1, rt0 WHERE (CAST((rt0.c1 IN (rt1.c0)) AS BLOB)) ORDER BY (((rt1.c0) NOTNULL) IN (((rt1.c3)<=(rt1.c0)), ((((rt1.c2)AND(NULL)))AND(rt1.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((LOWER(DISTINCT NULL))LIKE(((rt0.c1)-(rt0.c1))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c2)>>(rt0.c4))) AND (((rt0.c1)|(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT NULL))LIKE(((rt0.c1)-(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c2)>>(rt0.c4))) AND (((rt0.c1)|(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((LOWER(DISTINCT NULL))LIKE(((rt0.c1)-(rt0.c1))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c2)>>(rt0.c4))) AND (((rt0.c1)|(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT NULL))LIKE(((rt0.c1)-(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c2)>>(rt0.c4))) AND (((rt0.c1)|(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((LOWER(DISTINCT NULL))LIKE(((rt0.c1)-(rt0.c1))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c2)>>(rt0.c4))) AND (((rt0.c1)|(rt0.c4))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('829612858');
SELECT SUM(count) FROM (SELECT (('829612858') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('829612858');
SELECT SUM(count) FROM (SELECT (('829612858') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('829612858');
SELECT COUNT(*) FROM vt0 WHERE (x'2a0f') ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'2a0f') IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (x'2a0f') ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'2a0f') IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (x'2a0f') ORDER BY (CAST(vt0.c0 AS NUMERIC) IN (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB)) ORDER BY (vt0.c0 IN (((vt0.c0)AND('Ei똕')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (((vt0.c0)AND('Ei똕')))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB)) ORDER BY (vt0.c0 IN (((vt0.c0)AND('Ei똕')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (((vt0.c0)AND('Ei똕')))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB)) ORDER BY (vt0.c0 IN (((vt0.c0)AND('Ei똕')))) DESC;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((CASE WHEN rt0.c3 THEN '1258988980' ELSE rt0.c4 END)AND((('-825717')<(rt0.c0)))))OR(json_array(rt0.c3, rt0.c0))) WHERE (((rt0.c0 COLLATE BINARY)|(((rt0.c0)=(rt0.c3))))) ORDER BY STRFTIME(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(rt0.c4)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)|(((rt0.c0)=(rt0.c3))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((CASE WHEN rt0.c3 THEN '1258988980' ELSE rt0.c4 END)AND((('-825717')<(rt0.c0)))))OR(json_array(rt0.c3, rt0.c0))) ORDER BY STRFTIME(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(rt0.c4)))AND(rt0.c0))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((CASE WHEN rt0.c3 THEN '1258988980' ELSE rt0.c4 END)AND((('-825717')<(rt0.c0)))))OR(json_array(rt0.c3, rt0.c0))) WHERE (((rt0.c0 COLLATE BINARY)|(((rt0.c0)=(rt0.c3))))) ORDER BY STRFTIME(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(rt0.c4)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)|(((rt0.c0)=(rt0.c3))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((CASE WHEN rt0.c3 THEN '1258988980' ELSE rt0.c4 END)AND((('-825717')<(rt0.c0)))))OR(json_array(rt0.c3, rt0.c0))) ORDER BY STRFTIME(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(rt0.c4)))AND(rt0.c0))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((CASE WHEN rt0.c3 THEN '1258988980' ELSE rt0.c4 END)AND((('-825717')<(rt0.c0)))))OR(json_array(rt0.c3, rt0.c0))) WHERE (((rt0.c0 COLLATE BINARY)|(((rt0.c0)=(rt0.c3))))) ORDER BY STRFTIME(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(rt0.c4)))AND(rt0.c0)));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON CAST((~ (vt0.c0)) AS TEXT) WHERE ((((((((((((rt0.c2, rt0.c2, rt0.c1, rt1.c5, rt1.c5)) NOT BETWEEN (('-752415683', rt1.c0, rt0.c2, '1155302928', rt1.c5)) AND (('NC', rt0.c1, rt0.c2, rt1.c5, x'8845'))))OR(((rt1.c1)<>(rt1.c3)))))AND((rt0.c0 IN ()))))AND(rt0.c3 COLLATE RTRIM)))AND(CAST('953428963' AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2, rt0.c2, rt0.c1, rt1.c5, rt1.c5)) NOT BETWEEN (('-752415683', rt1.c0, rt0.c2, '1155302928', rt1.c5)) AND (('NC', rt0.c1, rt0.c2, rt1.c5, x'8845'))))OR(((rt1.c1)!=(rt1.c3)))))AND((rt0.c0 IN ()))))AND(rt0.c3 COLLATE RTRIM)))AND(CAST('953428963' AS TEXT)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON CAST((~ (vt0.c0)) AS TEXT));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON CAST((~ (vt0.c0)) AS TEXT) WHERE ((((((((((((rt0.c2, rt0.c2, rt0.c1, rt1.c5, rt1.c5)) NOT BETWEEN (('-752415683', rt1.c0, rt0.c2, '1155302928', rt1.c5)) AND (('NC', rt0.c1, rt0.c2, rt1.c5, x'8845'))))OR(((rt1.c1)<>(rt1.c3)))))AND((rt0.c0 IN ()))))AND(rt0.c3 COLLATE RTRIM)))AND(CAST('953428963' AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2, rt0.c2, rt0.c1, rt1.c5, rt1.c5)) NOT BETWEEN (('-752415683', rt1.c0, rt0.c2, '1155302928', rt1.c5)) AND (('NC', rt0.c1, rt0.c2, rt1.c5, x'8845'))))OR(((rt1.c1)!=(rt1.c3)))))AND((rt0.c0 IN ()))))AND(rt0.c3 COLLATE RTRIM)))AND(CAST('953428963' AS TEXT)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON CAST((~ (vt0.c0)) AS TEXT));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON CAST((~ (vt0.c0)) AS TEXT) WHERE ((((((((((((rt0.c2, rt0.c2, rt0.c1, rt1.c5, rt1.c5)) NOT BETWEEN (('-752415683', rt1.c0, rt0.c2, '1155302928', rt1.c5)) AND (('NC', rt0.c1, rt0.c2, rt1.c5, x'8845'))))OR(((rt1.c1)<>(rt1.c3)))))AND((rt0.c0 IN ()))))AND(rt0.c3 COLLATE RTRIM)))AND(CAST('953428963' AS TEXT))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST('' AS NUMERIC))<>(((rt1.c4)<<(rt0.c4)))) RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c4, rt0.c0, rt1.c3))) END WHERE (CAST(rt0.c0 AS BLOB) COLLATE BINARY) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST('' AS NUMERIC))!=(((rt1.c4)<<(rt0.c4)))) RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c4, rt0.c0, rt1.c3))) END ORDER BY rt1.c1);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST('' AS NUMERIC))<>(((rt1.c4)<<(rt0.c4)))) RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c4, rt0.c0, rt1.c3))) END WHERE (CAST(rt0.c0 AS BLOB) COLLATE BINARY) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST('' AS NUMERIC))!=(((rt1.c4)<<(rt0.c4)))) RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c4, rt0.c0, rt1.c3))) END ORDER BY rt1.c1);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (+ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c4 END)) WHERE ((rt0.c2 IN (CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST((- (rt0.c3)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (+ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c4 END)) ORDER BY CAST((- (rt0.c3)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (+ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c4 END)) WHERE ((rt0.c2 IN (CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST((- (rt0.c3)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (+ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c4 END)) ORDER BY CAST((- (rt0.c3)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (+ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c4 END)) WHERE ((rt0.c2 IN (CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST((- (rt0.c3)) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE (NOT (rt1.c0))  WHEN ((rt1.c1) NOTNULL) THEN 7.80850151E8 WHEN CAST(rt1.c5 AS NUMERIC) THEN (((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) WHEN rt1.c4 THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt1.c0))  WHEN ((rt1.c1) NOTNULL) THEN 7.80850151E8 WHEN CAST(rt1.c5 AS NUMERIC) THEN (((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) WHEN rt1.c4 THEN rt1.c2 END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE (NOT (rt1.c0))  WHEN ((rt1.c1) NOTNULL) THEN 7.80850151E8 WHEN CAST(rt1.c5 AS NUMERIC) THEN (((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) WHEN rt1.c4 THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt1.c0))  WHEN ((rt1.c1) NOTNULL) THEN 7.80850151E8 WHEN CAST(rt1.c5 AS NUMERIC) THEN (((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) WHEN rt1.c4 THEN rt1.c2 END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE (NOT (rt1.c0))  WHEN ((rt1.c1) NOTNULL) THEN 7.80850151E8 WHEN CAST(rt1.c5 AS NUMERIC) THEN (((rt1.c5)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) WHEN rt1.c4 THEN rt1.c2 END);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (ABS(DISTINCT (+ (rt1.c1)))) ORDER BY ((~ (rt0.c4)) IN ())  NULLS LAST, CAST(rt1.c2 AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (+ (rt1.c1)))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((~ (rt0.c4)) IN ())  NULLS LAST, CAST(rt1.c2 AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (ABS(DISTINCT (+ (rt1.c1)))) ORDER BY ((~ (rt0.c4)) IN ())  NULLS LAST, CAST(rt1.c2 AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (+ (rt1.c1)))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((~ (rt0.c4)) IN ())  NULLS LAST, CAST(rt1.c2 AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (ABS(DISTINCT (+ (rt1.c1)))) ORDER BY ((~ (rt0.c4)) IN ())  NULLS LAST, CAST(rt1.c2 AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((0Xffffffffdae6538c)IS NOT(4.30268276E8))) ORDER BY (((((rt1.c4, '', rt1.c3)) BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c0, rt1.c0, rt1.c2))))=(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((0xffffffffdae6538c)IS NOT(4.30268276E8))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c4, '', rt1.c3)) BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c0, rt1.c0, rt1.c2))))=(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 END)) ASC);
SELECT ALL * FROM rt1 WHERE (((0Xffffffffdae6538c)IS NOT(4.30268276E8))) ORDER BY (((((rt1.c4, '', rt1.c3)) BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c0, rt1.c0, rt1.c2))))=(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((0xffffffffdae6538c)IS NOT(4.30268276E8))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c4, '', rt1.c3)) BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c0, rt1.c0, rt1.c2))))=(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 END)) ASC);
SELECT ALL * FROM rt1 WHERE (((0Xffffffffdae6538c)IS NOT(4.30268276E8))) ORDER BY (((((rt1.c4, '', rt1.c3)) BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c0, rt1.c0, rt1.c2))))=(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 END)) ASC;
SELECT ALL * FROM rt0, vt0 NATURAL JOIN rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt0.c2)) AS BLOB)) ORDER BY ((CASE rt0.c1  WHEN rt1.c3 THEN rt1.c4 END) NOT BETWEEN (((rt1.c0)/(rt1.c4))) AND (((rt1.c2)LIKE(4.93397123E8)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN rt1 ORDER BY ((CASE rt0.c1  WHEN rt1.c3 THEN rt1.c4 END) NOT BETWEEN (((rt1.c0)/(rt1.c4))) AND (((rt1.c2)LIKE(4.93397123E8)))) DESC);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt0.c2)) AS BLOB)) ORDER BY ((CASE rt0.c1  WHEN rt1.c3 THEN rt1.c4 END) NOT BETWEEN (((rt1.c0)/(rt1.c4))) AND (((rt1.c2)LIKE(4.93397123E8)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN rt1 ORDER BY ((CASE rt0.c1  WHEN rt1.c3 THEN rt1.c4 END) NOT BETWEEN (((rt1.c0)/(rt1.c4))) AND (((rt1.c2)LIKE(4.93397123E8)))) DESC);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt0.c2)) AS BLOB)) ORDER BY ((CASE rt0.c1  WHEN rt1.c3 THEN rt1.c4 END) NOT BETWEEN (((rt1.c0)/(rt1.c4))) AND (((rt1.c2)LIKE(4.93397123E8)))) DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON CASE CASE rt1.c4  WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c1 END  WHEN ((rt1.c0) NOTNULL) THEN rt0.c2 COLLATE RTRIM WHEN CASE rt0.c4  WHEN x'7283' THEN rt0.c3 ELSE rt0.c4 END THEN CASE WHEN x'' THEN rt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN 0.029869890674352417 THEN rt1.c3 END WHEN rt0.c2 COLLATE RTRIM THEN (('239421950')IS(NULL)) ELSE (((rt0.c4, '', rt1.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c4, rt1.c1, rt1.c5))) END LEFT OUTER JOIN rt0 ON ((LAST_INSERT_ROWID())>>('l4qvrxG')) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c0)))/(CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c0)))/(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON CASE CASE rt1.c4  WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c1 END  WHEN ((rt1.c0) NOTNULL) THEN rt0.c2 COLLATE RTRIM WHEN CASE rt0.c4  WHEN x'7283' THEN rt0.c3 ELSE rt0.c4 END THEN CASE WHEN x'' THEN rt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN 0.029869890674352417 THEN rt1.c3 END WHEN rt0.c2 COLLATE RTRIM THEN (('239421950')IS(NULL)) ELSE (((rt0.c4, '', rt1.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c4, rt1.c1, rt1.c5))) END LEFT OUTER JOIN rt0 ON ((LAST_INSERT_ROWID())>>('l4qvrxG')));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON CASE CASE rt1.c4  WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c1 END  WHEN ((rt1.c0) NOTNULL) THEN rt0.c2 COLLATE RTRIM WHEN CASE rt0.c4  WHEN x'7283' THEN rt0.c3 ELSE rt0.c4 END THEN CASE WHEN x'' THEN rt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN 0.029869890674352417 THEN rt1.c3 END WHEN rt0.c2 COLLATE RTRIM THEN (('239421950')IS(NULL)) ELSE (((rt0.c4, '', rt1.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c4, rt1.c1, rt1.c5))) END LEFT OUTER JOIN rt0 ON ((LAST_INSERT_ROWID())>>('l4qvrxG')) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c0)))/(CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c0)))/(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON CASE CASE rt1.c4  WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c1 END  WHEN ((rt1.c0) NOTNULL) THEN rt0.c2 COLLATE RTRIM WHEN CASE rt0.c4  WHEN x'7283' THEN rt0.c3 ELSE rt0.c4 END THEN CASE WHEN x'' THEN rt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN 0.029869890674352417 THEN rt1.c3 END WHEN rt0.c2 COLLATE RTRIM THEN (('239421950')IS(NULL)) ELSE (((rt0.c4, '', rt1.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c4, rt1.c1, rt1.c5))) END LEFT OUTER JOIN rt0 ON ((LAST_INSERT_ROWID())>>('l4qvrxG')));
SELECT ALL COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON (rt1.c1 IN ((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))) WHERE (((CAST(rt0.c1 AS NUMERIC))+(CAST(rt0.c2 AS TEXT)))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt1.c2 END AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))+(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN rt0 ON (rt1.c1 IN ((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt1.c2 END AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON (rt1.c1 IN ((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))) WHERE (((CAST(rt0.c1 AS NUMERIC))+(CAST(rt0.c2 AS TEXT)))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt1.c2 END AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))+(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN rt0 ON (rt1.c1 IN ((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt1.c2 END AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON (rt1.c1 IN ((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))) WHERE (((CAST(rt0.c1 AS NUMERIC))+(CAST(rt0.c2 AS TEXT)))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt1.c2 END AS REAL) DESC;
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY CAST(-1.354455773E9 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(-1.354455773E9 AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY CAST(-1.354455773E9 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(-1.354455773E9 AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY CAST(-1.354455773E9 AS REAL)  NULLS LAST;
SELECT * FROM rt0 WHERE (-2051488038);
SELECT SUM(count) FROM (SELECT ((-2051488038) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (-2051488038);
SELECT SUM(count) FROM (SELECT ((-2051488038) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (-2051488038);
SELECT * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON INSTR((~ ('0.8976551408264399')), ((rt1.c2)=(rt1.c4))) WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON INSTR((~ ('0.8976551408264399')), ((rt1.c2)==(rt1.c4))));
SELECT * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON INSTR((~ ('0.8976551408264399')), ((rt1.c2)=(rt1.c4))) WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON INSTR((~ ('0.8976551408264399')), ((rt1.c2)==(rt1.c4))));
SELECT * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON INSTR((~ ('0.8976551408264399')), ((rt1.c2)=(rt1.c4))) WHERE (((NULL) NOTNULL));
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt0.c4 IN (rt1.c2, rt1.c3)))AND(((rt0.c1)>>(1.112423844E9)))))AND(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4 IN (rt1.c2, rt1.c3)))AND(((rt0.c1)>>(1.112423844E9)))))AND(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt0.c4 IN (rt1.c2, rt1.c3)))AND(((rt0.c1)>>(1.112423844E9)))))AND(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4 IN (rt1.c2, rt1.c3)))AND(((rt0.c1)>>(1.112423844E9)))))AND(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt0.c4 IN (rt1.c2, rt1.c3)))AND(((rt0.c1)>>(1.112423844E9)))))AND(rt0.c2 COLLATE RTRIM)));
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1))) NOT BETWEEN ((((rt1.c5, rt0.c0, NULL, rt1.c3, rt1.c5))=(('Y)3V', rt1.c1, rt1.c4, rt0.c0, rt0.c4)))) AND ((((rt1.c4))>((rt0.c2))))) WHERE (CASE WHEN (rt0.c3 IN ()) THEN (NOT (rt1.c3)) WHEN (+ (rt0.c4)) THEN 'YX' WHEN rt0.c0 THEN ((rt0.c2)==(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c3 IN ()) THEN (NOT (rt1.c3)) WHEN (+ (rt0.c4)) THEN 'YX' WHEN rt0.c0 THEN ((rt0.c2)==(NULL)) END) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1))) NOT BETWEEN ((((rt1.c5, rt0.c0, NULL, rt1.c3, rt1.c5))=(('Y)3V', rt1.c1, rt1.c4, rt0.c0, rt0.c4)))) AND ((((rt1.c4))>((rt0.c2))))));
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1))) NOT BETWEEN ((((rt1.c5, rt0.c0, NULL, rt1.c3, rt1.c5))=(('Y)3V', rt1.c1, rt1.c4, rt0.c0, rt0.c4)))) AND ((((rt1.c4))>((rt0.c2))))) WHERE (CASE WHEN (rt0.c3 IN ()) THEN (NOT (rt1.c3)) WHEN (+ (rt0.c4)) THEN 'YX' WHEN rt0.c0 THEN ((rt0.c2)==(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c3 IN ()) THEN (NOT (rt1.c3)) WHEN (+ (rt0.c4)) THEN 'YX' WHEN rt0.c0 THEN ((rt0.c2)==(NULL)) END) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1))) NOT BETWEEN ((((rt1.c5, rt0.c0, NULL, rt1.c3, rt1.c5))=(('Y)3V', rt1.c1, rt1.c4, rt0.c0, rt0.c4)))) AND ((((rt1.c4))>((rt0.c2))))));
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1))) NOT BETWEEN ((((rt1.c5, rt0.c0, NULL, rt1.c3, rt1.c5))=(('Y)3V', rt1.c1, rt1.c4, rt0.c0, rt0.c4)))) AND ((((rt1.c4))>((rt0.c2))))) WHERE (CASE WHEN (rt0.c3 IN ()) THEN (NOT (rt1.c3)) WHEN (+ (rt0.c4)) THEN 'YX' WHEN rt0.c0 THEN ((rt0.c2)==(NULL)) END);
SELECT ALL * FROM rt1 WHERE (CASE CASE WHEN 0xffffffffcfe50948 THEN rt1.c0 ELSE rt1.c3 END  WHEN x'' COLLATE BINARY THEN (+ (rt1.c4)) ELSE ((rt1.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN 0xffffffffcfe50948 THEN rt1.c0 ELSE rt1.c3 END  WHEN x'' COLLATE BINARY THEN (+ (rt1.c4)) ELSE ((rt1.c2) NOT NULL) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE CASE WHEN 0xffffffffcfe50948 THEN rt1.c0 ELSE rt1.c3 END  WHEN x'' COLLATE BINARY THEN (+ (rt1.c4)) ELSE ((rt1.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN 0xffffffffcfe50948 THEN rt1.c0 ELSE rt1.c3 END  WHEN x'' COLLATE BINARY THEN (+ (rt1.c4)) ELSE ((rt1.c2) NOT NULL) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE CASE WHEN 0xffffffffcfe50948 THEN rt1.c0 ELSE rt1.c3 END  WHEN x'' COLLATE BINARY THEN (+ (rt1.c4)) ELSE ((rt1.c2) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt0.c4) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt0.c4) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt0.c4) IS TRUE)) IS TRUE));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0, vt0, rt1 WHERE (SUBSTR((NOT (rt1.c3)), HEX(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((NOT (rt1.c3)), HEX(DISTINCT vt0.c0))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (SUBSTR((NOT (rt1.c3)), HEX(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((NOT (rt1.c3)), HEX(DISTINCT vt0.c0))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (SUBSTR((NOT (rt1.c3)), HEX(DISTINCT vt0.c0)));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY json_valid((~ (rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY json_valid((~ (rt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY json_valid((~ (rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY json_valid((~ (rt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY json_valid((~ (rt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE CAST(rt0.c3 AS NUMERIC)  WHEN (- (rt0.c4)) THEN rt1.c5 COLLATE RTRIM ELSE ((rt0.c4)>>(rt0.c1)) END) ORDER BY ((vt0.c0 COLLATE NOCASE)<<(CASE WHEN rt0.c0 THEN rt0.c2 END)), rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c3 AS NUMERIC)  WHEN (- (rt0.c4)) THEN rt1.c5 COLLATE RTRIM ELSE ((rt0.c4)>>(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<<(CASE WHEN rt0.c0 THEN rt0.c2 END)), rt1.c1);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE CAST(rt0.c3 AS NUMERIC)  WHEN (- (rt0.c4)) THEN rt1.c5 COLLATE RTRIM ELSE ((rt0.c4)>>(rt0.c1)) END) ORDER BY ((vt0.c0 COLLATE NOCASE)<<(CASE WHEN rt0.c0 THEN rt0.c2 END)), rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c3 AS NUMERIC)  WHEN (- (rt0.c4)) THEN rt1.c5 COLLATE RTRIM ELSE ((rt0.c4)>>(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<<(CASE WHEN rt0.c0 THEN rt0.c2 END)), rt1.c1);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE CAST(rt0.c3 AS NUMERIC)  WHEN (- (rt0.c4)) THEN rt1.c5 COLLATE RTRIM ELSE ((rt0.c4)>>(rt0.c1)) END) ORDER BY ((vt0.c0 COLLATE NOCASE)<<(CASE WHEN rt0.c0 THEN rt0.c2 END)), rt1.c1;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON CAST(rt1.c2 COLLATE BINARY AS BLOB) INNER JOIN rt1 ON CAST((- (rt1.c0)) AS TEXT) WHERE (((((rt1.c3) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(rt1.c2 COLLATE BINARY AS BLOB) INNER JOIN rt1 ON CAST((- (rt1.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON CAST(rt1.c2 COLLATE BINARY AS BLOB) INNER JOIN rt1 ON CAST((- (rt1.c0)) AS TEXT) WHERE (((((rt1.c3) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(rt1.c2 COLLATE BINARY AS BLOB) INNER JOIN rt1 ON CAST((- (rt1.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON CAST(rt1.c2 COLLATE BINARY AS BLOB) INNER JOIN rt1 ON CAST((- (rt1.c0)) AS TEXT) WHERE (((((rt1.c3) ISNULL)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt1.c2)OR(x'')))OR(((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c0)))))AND(CASE WHEN rt1.c4 THEN rt0.c4 ELSE rt1.c2 END)) CROSS JOIN rt1 ON LIKE(((rt1.c1) ISNULL), '426441346') WHERE (CASE WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt1.c3 END THEN NULL ELSE ((rt0.c4)*(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt1.c3 END THEN NULL ELSE ((rt0.c4)*(rt0.c2)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt1.c2)OR(x'')))OR(((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c0)))))AND(CASE WHEN rt1.c4 THEN rt0.c4 ELSE rt1.c2 END)) CROSS JOIN rt1 ON LIKE(((rt1.c1) ISNULL), '426441346'));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt1.c2)OR(x'')))OR(((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c0)))))AND(CASE WHEN rt1.c4 THEN rt0.c4 ELSE rt1.c2 END)) CROSS JOIN rt1 ON LIKE(((rt1.c1) ISNULL), '426441346') WHERE (CASE WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt1.c3 END THEN NULL ELSE ((rt0.c4)*(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt1.c3 END THEN NULL ELSE ((rt0.c4)*(rt0.c2)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt1.c2)OR(x'')))OR(((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c0)))))AND(CASE WHEN rt1.c4 THEN rt0.c4 ELSE rt1.c2 END)) CROSS JOIN rt1 ON LIKE(((rt1.c1) ISNULL), '426441346'));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((- (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((- (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((- (rt0.c2)) IN ()));
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (rt0.c0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((rt1.c5 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c5 IN ())) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((rt1.c5 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c5 IN ())) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((rt1.c5 IN ()));
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((('1138591948' COLLATE NOCASE)OR(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c1 AS BLOB)))) ORDER BY ((CAST(rt1.c1 AS BLOB)) ISNULL)  NULLS LAST, (((((rt1.c4, rt1.c5, 0Xffffffff8acfa63e)) BETWEEN ((rt1.c3, vt0.c0, rt1.c4)) AND ((rt0.c0, rt1.c5, rt0.c1)))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((('1138591948' COLLATE NOCASE)OR(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((CAST(rt1.c1 AS BLOB)) ISNULL)  NULLS LAST, (((((rt1.c4, rt1.c5, 0xffffffff8acfa63e)) BETWEEN ((rt1.c3, vt0.c0, rt1.c4)) AND ((rt0.c0, rt1.c5, rt0.c1)))) NOT NULL));
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((('1138591948' COLLATE NOCASE)OR(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c1 AS BLOB)))) ORDER BY ((CAST(rt1.c1 AS BLOB)) ISNULL)  NULLS LAST, (((((rt1.c4, rt1.c5, 0Xffffffff8acfa63e)) BETWEEN ((rt1.c3, vt0.c0, rt1.c4)) AND ((rt0.c0, rt1.c5, rt0.c1)))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((('1138591948' COLLATE NOCASE)OR(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((CAST(rt1.c1 AS BLOB)) ISNULL)  NULLS LAST, (((((rt1.c4, rt1.c5, 0xffffffff8acfa63e)) BETWEEN ((rt1.c3, vt0.c0, rt1.c4)) AND ((rt0.c0, rt1.c5, rt0.c1)))) NOT NULL));
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((('1138591948' COLLATE NOCASE)OR(rt1.c3 COLLATE RTRIM)))OR(CAST(rt1.c1 AS BLOB)))) ORDER BY ((CAST(rt1.c1 AS BLOB)) ISNULL)  NULLS LAST, (((((rt1.c4, rt1.c5, 0Xffffffff8acfa63e)) BETWEEN ((rt1.c3, vt0.c0, rt1.c4)) AND ((rt0.c0, rt1.c5, rt0.c1)))) NOT NULL);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((x'')>=((((rt0.c2, rt0.c2, vt0.c0))>((rt0.c3, rt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((x'')>=((((rt0.c2, rt0.c2, vt0.c0))>((rt0.c3, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((x'')>=((((rt0.c2, rt0.c2, vt0.c0))>((rt0.c3, rt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((x'')>=((((rt0.c2, rt0.c2, vt0.c0))>((rt0.c3, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((x'')>=((((rt0.c2, rt0.c2, vt0.c0))>((rt0.c3, rt0.c0, rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'ba243844')OR(((rt0.c0)!=(rt0.c2))))) ORDER BY ((((rt0.c1)AND(rt0.c4)))OR(rt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'ba243844')OR(((rt0.c0)!=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)AND(rt0.c4)))OR(rt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'ba243844')OR(((rt0.c0)!=(rt0.c2))))) ORDER BY ((((rt0.c1)AND(rt0.c4)))OR(rt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'ba243844')OR(((rt0.c0)!=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)AND(rt0.c4)))OR(rt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'ba243844')OR(((rt0.c0)!=(rt0.c2))))) ORDER BY ((((rt0.c1)AND(rt0.c4)))OR(rt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON NULL COLLATE RTRIM FULL OUTER JOIN vt0 ON ((((rt0.c4) BETWEEN (rt1.c0) AND (NULL))) NOT BETWEEN (CASE rt1.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END) AND ((rt1.c4 IN ()))) WHERE (rt0.c4) ORDER BY rt0.c0  NULLS LAST, (((+ (rt1.c2)))GLOB(rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON NULL COLLATE RTRIM FULL OUTER JOIN vt0 ON ((((rt0.c4) BETWEEN (rt1.c0) AND (NULL))) NOT BETWEEN (CASE rt1.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END) AND ((rt1.c4 IN ()))) ORDER BY rt0.c0  NULLS LAST, (((+ (rt1.c2)))GLOB(rt0.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON NULL COLLATE RTRIM FULL OUTER JOIN vt0 ON ((((rt0.c4) BETWEEN (rt1.c0) AND (NULL))) NOT BETWEEN (CASE rt1.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END) AND ((rt1.c4 IN ()))) WHERE (rt0.c4) ORDER BY rt0.c0  NULLS LAST, (((+ (rt1.c2)))GLOB(rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON NULL COLLATE RTRIM FULL OUTER JOIN vt0 ON ((((rt0.c4) BETWEEN (rt1.c0) AND (NULL))) NOT BETWEEN (CASE rt1.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END) AND ((rt1.c4 IN ()))) ORDER BY rt0.c0  NULLS LAST, (((+ (rt1.c2)))GLOB(rt0.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON NULL COLLATE RTRIM FULL OUTER JOIN vt0 ON ((((rt0.c4) BETWEEN (rt1.c0) AND (NULL))) NOT BETWEEN (CASE rt1.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END) AND ((rt1.c4 IN ()))) WHERE (rt0.c4) ORDER BY rt0.c0  NULLS LAST, (((+ (rt1.c2)))GLOB(rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT * FROM rt1, rt0, vt0 WHERE (rt1.c4) ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c1)IS NOT(rt1.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)) ASC, '-513464177' ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c1)IS NOT(rt1.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)) ASC, '-513464177' ASC);
SELECT * FROM rt1, rt0, vt0 WHERE (rt1.c4) ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c1)IS NOT(rt1.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)) ASC, '-513464177' ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c1)IS NOT(rt1.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)) ASC, '-513464177' ASC);
SELECT * FROM rt1, rt0, vt0 WHERE (rt1.c4) ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c1)IS NOT(rt1.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)) ASC, '-513464177' ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (LENGTH(((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c5))));
SELECT SUM(count) FROM (SELECT ((LENGTH(((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c5)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (LENGTH(((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c5))));
SELECT SUM(count) FROM (SELECT ((LENGTH(((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c5)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (LENGTH(((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c5))));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c5) ISNULL) COLLATE BINARY) ORDER BY (((rt1.c2))<((rt1.c2))) COLLATE NOCASE ASC, ((((((((rt1.c5)AND(rt1.c1)))AND(rt1.c2)))OR('')))OR(rt1.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c5) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2))<((rt1.c2))) COLLATE NOCASE ASC, ((((((((rt1.c5)AND(rt1.c1)))AND(rt1.c2)))OR('')))OR(rt1.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c5) ISNULL) COLLATE BINARY) ORDER BY (((rt1.c2))<((rt1.c2))) COLLATE NOCASE ASC, ((((((((rt1.c5)AND(rt1.c1)))AND(rt1.c2)))OR('')))OR(rt1.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c5) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2))<((rt1.c2))) COLLATE NOCASE ASC, ((((((((rt1.c5)AND(rt1.c1)))AND(rt1.c2)))OR('')))OR(rt1.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c5) ISNULL) COLLATE BINARY) ORDER BY (((rt1.c2))<((rt1.c2))) COLLATE NOCASE ASC, ((((((((rt1.c5)AND(rt1.c1)))AND(rt1.c2)))OR('')))OR(rt1.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) NOTNULL)) BETWEEN (NULL) AND ((('-362365827') NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL)) BETWEEN (NULL) AND ((('-362365827') NOTNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) NOTNULL)) BETWEEN (NULL) AND ((('-362365827') NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL)) BETWEEN (NULL) AND ((('-362365827') NOTNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) NOTNULL)) BETWEEN (NULL) AND ((('-362365827') NOTNULL))));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY '311796055' DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY '311796055' DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY '311796055' DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY '311796055' DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY '311796055' DESC;
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c4, rt0.c0)) BETWEEN (('-1905757047', ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)), rt0.c3)) AND ((((rt0.c0)IS(vt0.c0)), (((x'ecbc'))<>((vt0.c0))), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)))))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c4, rt0.c0)) BETWEEN (('-1905757047', ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)), rt0.c3)) AND ((((rt0.c0)IS(vt0.c0)), (((x'ecbc'))!=((vt0.c0))), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE NOCASE);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c4, rt0.c0)) BETWEEN (('-1905757047', ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)), rt0.c3)) AND ((((rt0.c0)IS(vt0.c0)), (((x'ecbc'))<>((vt0.c0))), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)))))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c4, rt0.c0)) BETWEEN (('-1905757047', ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)), rt0.c3)) AND ((((rt0.c0)IS(vt0.c0)), (((x'ecbc'))!=((vt0.c0))), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE NOCASE);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c4, rt0.c0)) BETWEEN (('-1905757047', ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)), rt0.c3)) AND ((((rt0.c0)IS(vt0.c0)), (((x'ecbc'))<>((vt0.c0))), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)))))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE NOCASE;
SELECT * FROM rt1, rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt1.c2)))AND(CAST(rt0.c4 AS NUMERIC))))OR((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt1.c2)))AND(CAST(rt0.c4 AS NUMERIC))))OR((rt0.c3 IN ())))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt1.c2)))AND(CAST(rt0.c4 AS NUMERIC))))OR((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt1.c2)))AND(CAST(rt0.c4 AS NUMERIC))))OR((rt0.c3 IN ())))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt1.c2)))AND(CAST(rt0.c4 AS NUMERIC))))OR((rt0.c3 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) IS TRUE))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c4 COLLATE RTRIM)))OR(CHAR(rt0.c2, rt0.c0, rt0.c4))))OR((((rt0.c0))>((rt0.c2))))))OR(((rt0.c2) IS TRUE)))) ORDER BY ((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(((rt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) IS TRUE))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c4 COLLATE RTRIM)))OR(CHAR(rt0.c2, rt0.c0, rt0.c4))))OR((((rt0.c0))>((rt0.c2))))))OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(((rt0.c0) ISNULL))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) IS TRUE))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c4 COLLATE RTRIM)))OR(CHAR(rt0.c2, rt0.c0, rt0.c4))))OR((((rt0.c0))>((rt0.c2))))))OR(((rt0.c2) IS TRUE)))) ORDER BY ((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(((rt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) IS TRUE))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c4 COLLATE RTRIM)))OR(CHAR(rt0.c2, rt0.c0, rt0.c4))))OR((((rt0.c0))>((rt0.c2))))))OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(((rt0.c0) ISNULL))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(((rt0.c2) IS TRUE))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(rt0.c4 COLLATE RTRIM)))OR(CHAR(rt0.c2, rt0.c0, rt0.c4))))OR((((rt0.c0))>((rt0.c2))))))OR(((rt0.c2) IS TRUE)))) ORDER BY ((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(((rt0.c0) ISNULL))) ASC;
SELECT * FROM rt1 INNER JOIN vt0 ON vt0.c0 WHERE (CASE rt1.c1  WHEN ((rt1.c2) NOT BETWEEN (rt1.c3) AND (0Xffffffffb4a1d5d9)) THEN (NOT (rt1.c5)) WHEN ((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c2)) THEN (rt1.c0 IN (rt1.c3)) WHEN rt1.c0 THEN (((rt1.c1, -1262856438, rt1.c4)) BETWEEN ((rt1.c0, rt1.c5, rt1.c1)) AND ((rt1.c4, rt1.c3, rt1.c4))) END) ORDER BY ((((((rt1.c1) NOT BETWEEN (0.7542658121900139) AND (rt1.c4)))OR(((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c3)))OR(vt0.c0)))OR(rt1.c5)))))OR((((x'', rt1.c2, vt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c4)) AND ((rt1.c5, rt1.c5, rt1.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN ((rt1.c2) NOT BETWEEN (rt1.c3) AND (0Xffffffffb4a1d5d9)) THEN (NOT (rt1.c5)) WHEN ((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c2)) THEN (rt1.c0 IN (rt1.c3)) WHEN rt1.c0 THEN (((rt1.c1, -1262856438, rt1.c4)) BETWEEN ((rt1.c0, rt1.c5, rt1.c1)) AND ((rt1.c4, rt1.c3, rt1.c4))) END) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON vt0.c0 ORDER BY ((((((rt1.c1) NOT BETWEEN (0.7542658121900139) AND (rt1.c4)))OR(((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c3)))OR(vt0.c0)))OR(rt1.c5)))))OR((((x'', rt1.c2, vt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c4)) AND ((rt1.c5, rt1.c5, rt1.c3))))) DESC  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN vt0 ON vt0.c0 WHERE (CASE rt1.c1  WHEN ((rt1.c2) NOT BETWEEN (rt1.c3) AND (0Xffffffffb4a1d5d9)) THEN (NOT (rt1.c5)) WHEN ((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c2)) THEN (rt1.c0 IN (rt1.c3)) WHEN rt1.c0 THEN (((rt1.c1, -1262856438, rt1.c4)) BETWEEN ((rt1.c0, rt1.c5, rt1.c1)) AND ((rt1.c4, rt1.c3, rt1.c4))) END) ORDER BY ((((((rt1.c1) NOT BETWEEN (0.7542658121900139) AND (rt1.c4)))OR(((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c3)))OR(vt0.c0)))OR(rt1.c5)))))OR((((x'', rt1.c2, vt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c4)) AND ((rt1.c5, rt1.c5, rt1.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN ((rt1.c2) NOT BETWEEN (rt1.c3) AND (0Xffffffffb4a1d5d9)) THEN (NOT (rt1.c5)) WHEN ((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c2)) THEN (rt1.c0 IN (rt1.c3)) WHEN rt1.c0 THEN (((rt1.c1, -1262856438, rt1.c4)) BETWEEN ((rt1.c0, rt1.c5, rt1.c1)) AND ((rt1.c4, rt1.c3, rt1.c4))) END) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON vt0.c0 ORDER BY ((((((rt1.c1) NOT BETWEEN (0.7542658121900139) AND (rt1.c4)))OR(((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c3)))OR(vt0.c0)))OR(rt1.c5)))))OR((((x'', rt1.c2, vt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c4)) AND ((rt1.c5, rt1.c5, rt1.c3))))) DESC  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN vt0 ON vt0.c0 WHERE (CASE rt1.c1  WHEN ((rt1.c2) NOT BETWEEN (rt1.c3) AND (0Xffffffffb4a1d5d9)) THEN (NOT (rt1.c5)) WHEN ((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c2)) THEN (rt1.c0 IN (rt1.c3)) WHEN rt1.c0 THEN (((rt1.c1, -1262856438, rt1.c4)) BETWEEN ((rt1.c0, rt1.c5, rt1.c1)) AND ((rt1.c4, rt1.c3, rt1.c4))) END) ORDER BY ((((((rt1.c1) NOT BETWEEN (0.7542658121900139) AND (rt1.c4)))OR(((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c3)))OR(vt0.c0)))OR(rt1.c5)))))OR((((x'', rt1.c2, vt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c4)) AND ((rt1.c5, rt1.c5, rt1.c3))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY RIGHT OUTER JOIN rt1 ON (((('-991954165') BETWEEN (0X27ea74e4) AND (rt0.c3))) IS TRUE) WHERE (CAST((0.7163998863472711 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((0.7163998863472711 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY RIGHT OUTER JOIN rt1 ON (((('-991954165') BETWEEN (0x27ea74e4) AND (rt0.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY RIGHT OUTER JOIN rt1 ON (((('-991954165') BETWEEN (0X27ea74e4) AND (rt0.c3))) IS TRUE) WHERE (CAST((0.7163998863472711 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((0.7163998863472711 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY RIGHT OUTER JOIN rt1 ON (((('-991954165') BETWEEN (0x27ea74e4) AND (rt0.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY RIGHT OUTER JOIN rt1 ON (((('-991954165') BETWEEN (0X27ea74e4) AND (rt0.c3))) IS TRUE) WHERE (CAST((0.7163998863472711 IN ()) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0))<>((vt0.c0)))  WHEN CAST(vt0.c0 AS TEXT) THEN x'' WHEN (((vt0.c0))>=((vt0.c0))) THEN json_valid(vt0.c0) WHEN ((vt0.c0) IS TRUE) THEN ((0.4649948917713401) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))!=((vt0.c0)))  WHEN CAST(vt0.c0 AS TEXT) THEN x'' WHEN (((vt0.c0))>=((vt0.c0))) THEN json_valid(vt0.c0) WHEN ((vt0.c0) IS TRUE) THEN ((0.4649948917713401) ISNULL) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0))<>((vt0.c0)))  WHEN CAST(vt0.c0 AS TEXT) THEN x'' WHEN (((vt0.c0))>=((vt0.c0))) THEN json_valid(vt0.c0) WHEN ((vt0.c0) IS TRUE) THEN ((0.4649948917713401) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))!=((vt0.c0)))  WHEN CAST(vt0.c0 AS TEXT) THEN x'' WHEN (((vt0.c0))>=((vt0.c0))) THEN json_valid(vt0.c0) WHEN ((vt0.c0) IS TRUE) THEN ((0.4649948917713401) ISNULL) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0))<>((vt0.c0)))  WHEN CAST(vt0.c0 AS TEXT) THEN x'' WHEN (((vt0.c0))>=((vt0.c0))) THEN json_valid(vt0.c0) WHEN ((vt0.c0) IS TRUE) THEN ((0.4649948917713401) ISNULL) END);
SELECT * FROM vt0, rt0, rt1 WHERE (CASE WHEN x'522e' THEN (rt0.c1 IN (rt1.c5)) END) ORDER BY (((rt0.c3, (((rt1.c3, '-1', rt0.c3)) BETWEEN ((rt1.c5, 0.4266843342442922, rt1.c3)) AND ((rt1.c1, rt1.c3, rt0.c0))), ((((vt0.c0)OR(rt1.c2)))AND(rt1.c3))))>=((((rt0.c3)AND(rt0.c0)), 0X496f528, CAST(rt0.c2 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'522e' THEN (rt0.c1 IN (rt1.c5)) END) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, rt1 ORDER BY (((rt0.c3, (((rt1.c3, '-1', rt0.c3)) BETWEEN ((rt1.c5, 0.4266843342442922, rt1.c3)) AND ((rt1.c1, rt1.c3, rt0.c0))), ((((vt0.c0)OR(rt1.c2)))AND(rt1.c3))))>=((((rt0.c3)AND(rt0.c0)), 0x496f528, CAST(rt0.c2 AS TEXT)))) DESC);
SELECT * FROM vt0, rt0, rt1 WHERE (CASE WHEN x'522e' THEN (rt0.c1 IN (rt1.c5)) END) ORDER BY (((rt0.c3, (((rt1.c3, '-1', rt0.c3)) BETWEEN ((rt1.c5, 0.4266843342442922, rt1.c3)) AND ((rt1.c1, rt1.c3, rt0.c0))), ((((vt0.c0)OR(rt1.c2)))AND(rt1.c3))))>=((((rt0.c3)AND(rt0.c0)), 0X496f528, CAST(rt0.c2 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'522e' THEN (rt0.c1 IN (rt1.c5)) END) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, rt1 ORDER BY (((rt0.c3, (((rt1.c3, '-1', rt0.c3)) BETWEEN ((rt1.c5, 0.4266843342442922, rt1.c3)) AND ((rt1.c1, rt1.c3, rt0.c0))), ((((vt0.c0)OR(rt1.c2)))AND(rt1.c3))))>=((((rt0.c3)AND(rt0.c0)), 0x496f528, CAST(rt0.c2 AS TEXT)))) DESC);
SELECT * FROM vt0, rt0, rt1 WHERE (CASE WHEN x'522e' THEN (rt0.c1 IN (rt1.c5)) END) ORDER BY (((rt0.c3, (((rt1.c3, '-1', rt0.c3)) BETWEEN ((rt1.c5, 0.4266843342442922, rt1.c3)) AND ((rt1.c1, rt1.c3, rt0.c0))), ((((vt0.c0)OR(rt1.c2)))AND(rt1.c3))))>=((((rt0.c3)AND(rt0.c0)), 0X496f528, CAST(rt0.c2 AS TEXT)))) DESC;
SELECT * FROM vt0, rt0, rt1 WHERE ('155212483') ORDER BY (- (LTRIM(rt1.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('155212483') IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (- (LTRIM(rt1.c3))) DESC);
SELECT * FROM vt0, rt0, rt1 WHERE ('155212483') ORDER BY (- (LTRIM(rt1.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('155212483') IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (- (LTRIM(rt1.c3))) DESC);
SELECT * FROM vt0, rt0, rt1 WHERE ('155212483') ORDER BY (- (LTRIM(rt1.c3))) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c4) NOT NULL))>(((x'')*(rt0.c0))))) ORDER BY CAST(((vt0.c0)>>(rt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT NULL))>(((x'')*(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((vt0.c0)>>(rt0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c4) NOT NULL))>(((x'')*(rt0.c0))))) ORDER BY CAST(((vt0.c0)>>(rt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT NULL))>(((x'')*(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((vt0.c0)>>(rt0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c4) NOT NULL))>(((x'')*(rt0.c0))))) ORDER BY CAST(((vt0.c0)>>(rt0.c0)) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((- ((rt1.c0 IN (rt1.c2))))) ORDER BY LIKELY(DISTINCT '') DESC  NULLS LAST, ((((((rt1.c1) BETWEEN (rt1.c0) AND ('2034688030')))OR(((rt1.c4)-(vt0.c0)))))OR((rt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((- ((rt1.c0 IN (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY LIKELY(DISTINCT '') DESC  NULLS LAST, ((((((rt1.c1) BETWEEN (rt1.c0) AND ('2034688030')))OR(((rt1.c4)-(vt0.c0)))))OR((rt1.c2 IN ()))) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((- ((rt1.c0 IN (rt1.c2))))) ORDER BY LIKELY(DISTINCT '') DESC  NULLS LAST, ((((((rt1.c1) BETWEEN (rt1.c0) AND ('2034688030')))OR(((rt1.c4)-(vt0.c0)))))OR((rt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((- ((rt1.c0 IN (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY LIKELY(DISTINCT '') DESC  NULLS LAST, ((((((rt1.c1) BETWEEN (rt1.c0) AND ('2034688030')))OR(((rt1.c4)-(vt0.c0)))))OR((rt1.c2 IN ()))) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((- ((rt1.c0 IN (rt1.c2))))) ORDER BY LIKELY(DISTINCT '') DESC  NULLS LAST, ((((((rt1.c1) BETWEEN (rt1.c0) AND ('2034688030')))OR(((rt1.c4)-(vt0.c0)))))OR((rt1.c2 IN ()))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) IS TRUE));
SELECT ALL * FROM rt1, rt0 WHERE ((~ (0.013240842978244016)));
SELECT SUM(count) FROM (SELECT ALL (((~ (0.013240842978244016))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((~ (0.013240842978244016)));
SELECT SUM(count) FROM (SELECT ALL (((~ (0.013240842978244016))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((~ (0.013240842978244016)));
SELECT * FROM rt1, rt0 NATURAL JOIN vt0 WHERE (((UNLIKELY(DISTINCT rt1.c1)) NOT BETWEEN ((rt1.c0 IN ())) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt1.c1)) NOT BETWEEN ((rt1.c0 IN ())) AND (rt0.c3))) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN vt0);
SELECT * FROM rt1, rt0 NATURAL JOIN vt0 WHERE (((UNLIKELY(DISTINCT rt1.c1)) NOT BETWEEN ((rt1.c0 IN ())) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt1.c1)) NOT BETWEEN ((rt1.c0 IN ())) AND (rt0.c3))) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN vt0);
SELECT * FROM rt1, rt0 NATURAL JOIN vt0 WHERE (((UNLIKELY(DISTINCT rt1.c1)) NOT BETWEEN ((rt1.c0 IN ())) AND (rt0.c3)));
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (- (('-1353273013' IN ()))) WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 END) NOTNULL)) ORDER BY '.hUW';
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt1.c1 END) NOTNULL)) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (- (('-1353273013' IN ()))) ORDER BY '.hUW');
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (- (('-1353273013' IN ()))) WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 END) NOTNULL)) ORDER BY '.hUW';
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt1.c1 END) NOTNULL)) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (- (('-1353273013' IN ()))) ORDER BY '.hUW');
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (- (('-1353273013' IN ()))) WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 END) NOTNULL)) ORDER BY '.hUW';
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (CAST(((rt0.c4) NOTNULL) AS TEXT)) ORDER BY rt0.c0, (((rt0.c4)OR(rt0.c1)) IN ()), ((((rt0.c3) BETWEEN (rt1.c1) AND (rt1.c4))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt0, rt0, rt1 NOT INDEXED ORDER BY rt0.c0, (((rt0.c4)OR(rt0.c1)) IN ()), ((((rt0.c3) BETWEEN (rt1.c1) AND (rt1.c4))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (CAST(((rt0.c4) NOTNULL) AS TEXT)) ORDER BY rt0.c0, (((rt0.c4)OR(rt0.c1)) IN ()), ((((rt0.c3) BETWEEN (rt1.c1) AND (rt1.c4))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt0, rt0, rt1 NOT INDEXED ORDER BY rt0.c0, (((rt0.c4)OR(rt0.c1)) IN ()), ((((rt0.c3) BETWEEN (rt1.c1) AND (rt1.c4))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (CAST(((rt0.c4) NOTNULL) AS TEXT)) ORDER BY rt0.c0, (((rt0.c4)OR(rt0.c1)) IN ()), ((((rt0.c3) BETWEEN (rt1.c1) AND (rt1.c4))) NOT NULL) DESC;
SELECT * FROM rt1, vt0, rt0 WHERE (((((NULL)>(rt0.c3))) BETWEEN ((('1155302928')>(rt0.c2))) AND ('-240077910')));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)>(rt0.c3))) BETWEEN ((('1155302928')>(rt0.c2))) AND ('-240077910'))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (((((NULL)>(rt0.c3))) BETWEEN ((('1155302928')>(rt0.c2))) AND ('-240077910')));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)>(rt0.c3))) BETWEEN ((('1155302928')>(rt0.c2))) AND ('-240077910'))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (((((NULL)>(rt0.c3))) BETWEEN ((('1155302928')>(rt0.c2))) AND ('-240077910')));
SELECT * FROM vt0 WHERE ((+ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((((rt1.c3)AND(vt0.c0)))OR(rt1.c0)) AS INTEGER)) ORDER BY (((rt1.c2)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) AND ((((rt1.c5) BETWEEN (NULL) AND (rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c3)AND(vt0.c0)))OR(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) AND ((((rt1.c5) BETWEEN (NULL) AND (rt1.c2))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((((rt1.c3)AND(vt0.c0)))OR(rt1.c0)) AS INTEGER)) ORDER BY (((rt1.c2)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) AND ((((rt1.c5) BETWEEN (NULL) AND (rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c3)AND(vt0.c0)))OR(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) AND ((((rt1.c5) BETWEEN (NULL) AND (rt1.c2))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((((rt1.c3)AND(vt0.c0)))OR(rt1.c0)) AS INTEGER)) ORDER BY (((rt1.c2)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) AND ((((rt1.c5) BETWEEN (NULL) AND (rt1.c2))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN vt0 ON ((((rt1.c5)LIKE(rt1.c0)))IS NOT(((rt1.c5)-(rt1.c2)))) WHERE (((rt0.c3)AND(rt1.c5)) COLLATE RTRIM) ORDER BY (((rt0.c0)AND(-2.101491462E9)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)AND(rt1.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt0 ON ((((rt1.c5)LIKE(rt1.c0)))IS NOT(((rt1.c5)-(rt1.c2)))) ORDER BY (((rt0.c0)AND(-2.101491462E9)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN vt0 ON ((((rt1.c5)LIKE(rt1.c0)))IS NOT(((rt1.c5)-(rt1.c2)))) WHERE (((rt0.c3)AND(rt1.c5)) COLLATE RTRIM) ORDER BY (((rt0.c0)AND(-2.101491462E9)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)AND(rt1.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt0 ON ((((rt1.c5)LIKE(rt1.c0)))IS NOT(((rt1.c5)-(rt1.c2)))) ORDER BY (((rt0.c0)AND(-2.101491462E9)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN vt0 ON ((((rt1.c5)LIKE(rt1.c0)))IS NOT(((rt1.c5)-(rt1.c2)))) WHERE (((rt0.c3)AND(rt1.c5)) COLLATE RTRIM) ORDER BY (((rt0.c0)AND(-2.101491462E9)) IN ()) DESC;
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((((((rt0.c1) NOT NULL))OR(((x'253d')<(rt1.c4)))))AND(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c4)))OR(rt0.c2)))AND(rt0.c3))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT NULL))OR(((x'253d')<(rt1.c4)))))AND(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c4)))OR(rt0.c2)))AND(rt0.c3))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((((((rt0.c1) NOT NULL))OR(((x'253d')<(rt1.c4)))))AND(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c4)))OR(rt0.c2)))AND(rt0.c3))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT NULL))OR(((x'253d')<(rt1.c4)))))AND(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c4)))OR(rt0.c2)))AND(rt0.c3))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((((((rt0.c1) NOT NULL))OR(((x'253d')<(rt1.c4)))))AND(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c4)))OR(rt0.c2)))AND(rt0.c3))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, rt1 WHERE (CASE WHEN rt1.c4 THEN rt0.c1 ELSE rt1.c2 END COLLATE BINARY) ORDER BY CAST(LIKE(rt1.c2, rt0.c1, '|') AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c4 THEN rt0.c1 ELSE rt1.c2 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY CAST(LIKE(rt1.c2, rt0.c1, '|') AS NUMERIC) DESC);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (CASE WHEN rt1.c4 THEN rt0.c1 ELSE rt1.c2 END COLLATE BINARY) ORDER BY CAST(LIKE(rt1.c2, rt0.c1, '|') AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c4 THEN rt0.c1 ELSE rt1.c2 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY CAST(LIKE(rt1.c2, rt0.c1, '|') AS NUMERIC) DESC);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (CASE WHEN rt1.c4 THEN rt0.c1 ELSE rt1.c2 END COLLATE BINARY) ORDER BY CAST(LIKE(rt1.c2, rt0.c1, '|') AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)AND(CAST(rt0.c2 AS TEXT))))OR(((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(CAST(rt0.c2 AS TEXT))))OR(((((rt0.c1)OR(rt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)AND(CAST(rt0.c2 AS TEXT))))OR(((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(CAST(rt0.c2 AS TEXT))))OR(((((rt0.c1)OR(rt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)AND(CAST(rt0.c2 AS TEXT))))OR(((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))));
SELECT * FROM rt1, vt0 WHERE (((((UNLIKELY(rt1.c5))OR(((((rt1.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END))) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (rt1.c4) AND (((rt1.c1)>=(rt1.c4)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(rt1.c5))OR(((((rt1.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (rt1.c4) AND (((rt1.c1)>=(rt1.c4)))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((UNLIKELY(rt1.c5))OR(((((rt1.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END))) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (rt1.c4) AND (((rt1.c1)>=(rt1.c4)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(rt1.c5))OR(((((rt1.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (rt1.c4) AND (((rt1.c1)>=(rt1.c4)))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((UNLIKELY(rt1.c5))OR(((((rt1.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END))) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (rt1.c4) AND (((rt1.c1)>=(rt1.c4)))) ASC  NULLS LAST;
SELECT * FROM vt0, rt0, rt1 WHERE (((((rt0.c2)>=(rt1.c0)))>=(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(rt1.c0)))>=(rt1.c2))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (((((rt0.c2)>=(rt1.c0)))>=(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(rt1.c0)))>=(rt1.c2))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (((((rt0.c2)>=(rt1.c0)))>=(rt1.c2)));
SELECT * FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (('-372545609', (rt0.c1 IN (rt0.c0)), (+ (rt0.c0)), rt0.c2, (((((((('1906994000')OR(rt0.c3)))OR(rt0.c3)))AND(0.9287057793611926)))OR(rt0.c4)))) AND (((rt0.c1 IN (rt0.c3)), ((rt0.c1) ISNULL), ((((rt0.c0)AND(rt0.c1)))OR(NULL)), (+ (rt0.c4)), rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (('-372545609', (rt0.c1 IN (rt0.c0)), (+ (rt0.c0)), rt0.c2, (((((((('1906994000')OR(rt0.c3)))OR(rt0.c3)))AND(0.9287057793611926)))OR(rt0.c4)))) AND (((rt0.c1 IN (rt0.c3)), ((rt0.c1) ISNULL), ((((rt0.c0)AND(rt0.c1)))OR(NULL)), (+ (rt0.c4)), rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (('-372545609', (rt0.c1 IN (rt0.c0)), (+ (rt0.c0)), rt0.c2, (((((((('1906994000')OR(rt0.c3)))OR(rt0.c3)))AND(0.9287057793611926)))OR(rt0.c4)))) AND (((rt0.c1 IN (rt0.c3)), ((rt0.c1) ISNULL), ((((rt0.c0)AND(rt0.c1)))OR(NULL)), (+ (rt0.c4)), rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (('-372545609', (rt0.c1 IN (rt0.c0)), (+ (rt0.c0)), rt0.c2, (((((((('1906994000')OR(rt0.c3)))OR(rt0.c3)))AND(0.9287057793611926)))OR(rt0.c4)))) AND (((rt0.c1 IN (rt0.c3)), ((rt0.c1) ISNULL), ((((rt0.c0)AND(rt0.c1)))OR(NULL)), (+ (rt0.c4)), rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (('-372545609', (rt0.c1 IN (rt0.c0)), (+ (rt0.c0)), rt0.c2, (((((((('1906994000')OR(rt0.c3)))OR(rt0.c3)))AND(0.9287057793611926)))OR(rt0.c4)))) AND (((rt0.c1 IN (rt0.c3)), ((rt0.c1) ISNULL), ((((rt0.c0)AND(rt0.c1)))OR(NULL)), (+ (rt0.c4)), rt0.c1))));
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS INTEGER) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS INTEGER) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS REAL));
SELECT COUNT(*) FROM rt1 WHERE (json_array_length(rt1.c3, rt1.c2) COLLATE BINARY) ORDER BY ((rt1.c0)<>(rt1.c4)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((json_array_length(rt1.c3, rt1.c2) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)<>(rt1.c4)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE (json_array_length(rt1.c3, rt1.c2) COLLATE BINARY) ORDER BY ((rt1.c0)<>(rt1.c4)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((json_array_length(rt1.c3, rt1.c2) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)<>(rt1.c4)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE (json_array_length(rt1.c3, rt1.c2) COLLATE BINARY) ORDER BY ((rt1.c0)<>(rt1.c4)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.3416463623445708) ORDER BY ((((((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR((~ (0.5039424675950418)))) ASC  NULLS LAST, CASE rt0.c0  WHEN (~ (rt0.c2)) THEN '礁_B1Gwv' END ASC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.3416463623445708) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR((~ (0.5039424675950418)))) ASC  NULLS LAST, CASE rt0.c0  WHEN (~ (rt0.c2)) THEN '礁_B1Gwv' END ASC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.3416463623445708) ORDER BY ((((((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR((~ (0.5039424675950418)))) ASC  NULLS LAST, CASE rt0.c0  WHEN (~ (rt0.c2)) THEN '礁_B1Gwv' END ASC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.3416463623445708) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR((~ (0.5039424675950418)))) ASC  NULLS LAST, CASE rt0.c0  WHEN (~ (rt0.c2)) THEN '礁_B1Gwv' END ASC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.3416463623445708) ORDER BY ((((((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR((~ (0.5039424675950418)))) ASC  NULLS LAST, CASE rt0.c0  WHEN (~ (rt0.c2)) THEN '礁_B1Gwv' END ASC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN rt1 ON ((((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c3))) IS FALSE) WHERE (rt0.c4) ORDER BY (CASE WHEN rt0.c2 THEN rt1.c5 ELSE rt0.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0, rt0 INNER JOIN rt1 ON ((((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c3))) IS FALSE) ORDER BY (CASE WHEN rt0.c2 THEN rt1.c5 ELSE rt0.c0 END IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN rt1 ON ((((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c3))) IS FALSE) WHERE (rt0.c4) ORDER BY (CASE WHEN rt0.c2 THEN rt1.c5 ELSE rt0.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0, rt0 INNER JOIN rt1 ON ((((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c3))) IS FALSE) ORDER BY (CASE WHEN rt0.c2 THEN rt1.c5 ELSE rt0.c0 END IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN rt1 ON ((((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c3))) IS FALSE) WHERE (rt0.c4) ORDER BY (CASE WHEN rt0.c2 THEN rt1.c5 ELSE rt0.c0 END IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON rt1.c5 WHERE (((rt1.c2) BETWEEN (CASE rt1.c2  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN x'' THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 END) AND (((rt1.c1)IS(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN (CASE rt1.c2  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN x'' THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 END) AND (((rt1.c1)IS(rt1.c3))))) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt1 ON rt1.c5);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON rt1.c5 WHERE (((rt1.c2) BETWEEN (CASE rt1.c2  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN x'' THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 END) AND (((rt1.c1)IS(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN (CASE rt1.c2  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN x'' THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 END) AND (((rt1.c1)IS(rt1.c3))))) IS TRUE)  as count FROM vt0 NOT INDEXED RIGHT OUTER JOIN rt1 ON rt1.c5);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON rt1.c5 WHERE (((rt1.c2) BETWEEN (CASE rt1.c2  WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN x'' THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 END) AND (((rt1.c1)IS(rt1.c3)))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((((((rt0.c2)AND(rt1.c0)))OR(rt0.c2)) IN (((((((((rt1.c5)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt1.c0)))OR(rt0.c2)) IN (((((((((rt1.c5)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((((((rt0.c2)AND(rt1.c0)))OR(rt0.c2)) IN (((((((((rt1.c5)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt1.c0)))OR(rt0.c2)) IN (((((((((rt1.c5)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((((((rt0.c2)AND(rt1.c0)))OR(rt0.c2)) IN (((((((((rt1.c5)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)))AND(rt1.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END)) AND (((+ (rt1.c0))))) FULL OUTER JOIN rt1 ON x'' WHERE (CASE ((vt0.c0)%(rt1.c2))  WHEN x'' THEN TRIM(rt0.c0) END) ORDER BY ((rt1.c0) NOTNULL) DESC  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c0)))AND(NULL)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)%(rt1.c2))  WHEN x'' THEN TRIM(rt0.c0) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END)) AND (((+ (rt1.c0))))) FULL OUTER JOIN rt1 ON x'' ORDER BY ((rt1.c0) NOTNULL) DESC  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c0)))AND(NULL)) AS NUMERIC) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END)) AND (((+ (rt1.c0))))) FULL OUTER JOIN rt1 ON x'' WHERE (CASE ((vt0.c0)%(rt1.c2))  WHEN x'' THEN TRIM(rt0.c0) END) ORDER BY ((rt1.c0) NOTNULL) DESC  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c0)))AND(NULL)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)%(rt1.c2))  WHEN x'' THEN TRIM(rt0.c0) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END)) AND (((+ (rt1.c0))))) FULL OUTER JOIN rt1 ON x'' ORDER BY ((rt1.c0) NOTNULL) DESC  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c0)))AND(NULL)) AS NUMERIC) DESC);
SELECT ALL * FROM vt0, rt1 WHERE (LOWER(rt1.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (LOWER(rt1.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (LOWER(rt1.c1) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN (rt0.c1 IN (NULL)) END) ORDER BY (('~*')<=(NULLIF(rt1.c5, 1.964693255E9)))  NULLS FIRST, ((rt0.c1 IN ()) IN ())  NULLS FIRST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN (rt0.c1 IN (NULL)) END) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (('~*')<=(NULLIF(rt1.c5, 1.964693255E9)))  NULLS FIRST, ((rt0.c1 IN ()) IN ())  NULLS FIRST, rt0.c1 ASC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN (rt0.c1 IN (NULL)) END) ORDER BY (('~*')<=(NULLIF(rt1.c5, 1.964693255E9)))  NULLS FIRST, ((rt0.c1 IN ()) IN ())  NULLS FIRST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN (rt0.c1 IN (NULL)) END) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (('~*')<=(NULLIF(rt1.c5, 1.964693255E9)))  NULLS FIRST, ((rt0.c1 IN ()) IN ())  NULLS FIRST, rt0.c1 ASC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN (rt0.c1 IN (NULL)) END) ORDER BY (('~*')<=(NULLIF(rt1.c5, 1.964693255E9)))  NULLS FIRST, ((rt0.c1 IN ()) IN ())  NULLS FIRST, rt0.c1 ASC;
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt1.c2 IN (vt0.c0, rt0.c3)))OR(((rt0.c1)>=(rt0.c3))))) ORDER BY '0.471476239261568'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (vt0.c0, rt0.c3)))OR(((rt0.c1)>=(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY '0.471476239261568'  NULLS LAST);
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt1.c2 IN (vt0.c0, rt0.c3)))OR(((rt0.c1)>=(rt0.c3))))) ORDER BY '0.471476239261568'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (vt0.c0, rt0.c3)))OR(((rt0.c1)>=(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY '0.471476239261568'  NULLS LAST);
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt1.c2 IN (vt0.c0, rt0.c3)))OR(((rt0.c1)>=(rt0.c3))))) ORDER BY '0.471476239261568'  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (0.36994741288543476);
SELECT SUM(count) FROM (SELECT ALL ((0.36994741288543476) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.36994741288543476);
SELECT SUM(count) FROM (SELECT ALL ((0.36994741288543476) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.36994741288543476);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((NULL) NOT BETWEEN (rt1.c3) AND (rt0.c0)))<>(((rt0.c4)=(rt0.c3))))) ORDER BY (IFNULL(DISTINCT rt1.c3, rt1.c5) IN ((((rt1.c0, rt1.c4, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1, vt0.c0)) AND ((rt0.c1, rt1.c1, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (rt1.c3) AND (rt0.c0)))<>(((rt0.c4)=(rt0.c3))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (IFNULL(DISTINCT rt1.c3, rt1.c5) IN ((((rt1.c0, rt1.c4, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1, vt0.c0)) AND ((rt0.c1, rt1.c1, vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((NULL) NOT BETWEEN (rt1.c3) AND (rt0.c0)))<>(((rt0.c4)=(rt0.c3))))) ORDER BY (IFNULL(DISTINCT rt1.c3, rt1.c5) IN ((((rt1.c0, rt1.c4, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1, vt0.c0)) AND ((rt0.c1, rt1.c1, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (rt1.c3) AND (rt0.c0)))<>(((rt0.c4)=(rt0.c3))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (IFNULL(DISTINCT rt1.c3, rt1.c5) IN ((((rt1.c0, rt1.c4, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1, vt0.c0)) AND ((rt0.c1, rt1.c1, vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((NULL) NOT BETWEEN (rt1.c3) AND (rt0.c0)))<>(((rt0.c4)=(rt0.c3))))) ORDER BY (IFNULL(DISTINCT rt1.c3, rt1.c5) IN ((((rt1.c0, rt1.c4, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1, vt0.c0)) AND ((rt0.c1, rt1.c1, vt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE NULLIF(rt0.c1, -708577944)  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((0.9279674412089431)&(rt0.c1)) ELSE ((rt0.c2)|(rt0.c1)) END) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(rt0.c1, -708577944)  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((0.9279674412089431)&(rt0.c1)) ELSE ((rt0.c2)|(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE NULLIF(rt0.c1, -708577944)  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((0.9279674412089431)&(rt0.c1)) ELSE ((rt0.c2)|(rt0.c1)) END) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(rt0.c1, -708577944)  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((0.9279674412089431)&(rt0.c1)) ELSE ((rt0.c2)|(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE NULLIF(rt0.c1, -708577944)  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN ((0.9279674412089431)&(rt0.c1)) ELSE ((rt0.c2)|(rt0.c1)) END) ORDER BY rt0.c1  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE ((((rt0.c3)-(rt0.c2)) IN (((rt0.c4) BETWEEN (rt0.c3) AND (rt1.c0))))) ORDER BY ((rt1.c2) IS TRUE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)-(rt0.c2)) IN (((rt0.c4) BETWEEN (rt0.c3) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2) IS TRUE) COLLATE BINARY);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c3)-(rt0.c2)) IN (((rt0.c4) BETWEEN (rt0.c3) AND (rt1.c0))))) ORDER BY ((rt1.c2) IS TRUE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)-(rt0.c2)) IN (((rt0.c4) BETWEEN (rt0.c3) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2) IS TRUE) COLLATE BINARY);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c3)-(rt0.c2)) IN (((rt0.c4) BETWEEN (rt0.c3) AND (rt1.c0))))) ORDER BY ((rt1.c2) IS TRUE) COLLATE BINARY;
SELECT ALL * FROM rt1 WHERE ((TRIM(DISTINCT x'') IN ((((rt1.c3, rt1.c1, rt1.c1))<((rt1.c4, rt1.c5, rt1.c2))), ((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5)))));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT x'') IN ((((rt1.c3, rt1.c1, rt1.c1))<((rt1.c4, rt1.c5, rt1.c2))), ((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((TRIM(DISTINCT x'') IN ((((rt1.c3, rt1.c1, rt1.c1))<((rt1.c4, rt1.c5, rt1.c2))), ((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5)))));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT x'') IN ((((rt1.c3, rt1.c1, rt1.c1))<((rt1.c4, rt1.c5, rt1.c2))), ((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((TRIM(DISTINCT x'') IN ((((rt1.c3, rt1.c1, rt1.c1))<((rt1.c4, rt1.c5, rt1.c2))), ((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5)))));
SELECT ALL * FROM rt0, vt0 INNER JOIN rt1 ON (SQLITE_COMPILEOPTION_GET(NULL) IN ((((rt0.c0))<>((rt0.c2))))) WHERE (((rt1.c3) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON (SQLITE_COMPILEOPTION_GET(NULL) IN ((((rt0.c0))!=((rt0.c2))))));
SELECT ALL * FROM rt0, vt0 INNER JOIN rt1 ON (SQLITE_COMPILEOPTION_GET(NULL) IN ((((rt0.c0))<>((rt0.c2))))) WHERE (((rt1.c3) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON (SQLITE_COMPILEOPTION_GET(NULL) IN ((((rt0.c0))!=((rt0.c2))))));
SELECT ALL * FROM rt0, vt0 INNER JOIN rt1 ON (SQLITE_COMPILEOPTION_GET(NULL) IN ((((rt0.c0))<>((rt0.c2))))) WHERE (((rt1.c3) NOT NULL) COLLATE RTRIM);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE ((((1.964693255E9 IN ())) NOT BETWEEN (0.685058874676471) AND (UNLIKELY(vt0.c0)))) ORDER BY ((((vt0.c0)/(rt1.c1)))>>(NULL COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((1.964693255E9 IN ())) NOT BETWEEN (0.685058874676471) AND (UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY ((((vt0.c0)/(rt1.c1)))>>(NULL COLLATE BINARY)));
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE ((((1.964693255E9 IN ())) NOT BETWEEN (0.685058874676471) AND (UNLIKELY(vt0.c0)))) ORDER BY ((((vt0.c0)/(rt1.c1)))>>(NULL COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((1.964693255E9 IN ())) NOT BETWEEN (0.685058874676471) AND (UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY ((((vt0.c0)/(rt1.c1)))>>(NULL COLLATE BINARY)));
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE ((((1.964693255E9 IN ())) NOT BETWEEN (0.685058874676471) AND (UNLIKELY(vt0.c0)))) ORDER BY ((((vt0.c0)/(rt1.c1)))>>(NULL COLLATE BINARY));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)IS(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)IS(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)IS(rt0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE ((NOT (rt1.c2)) COLLATE NOCASE) ORDER BY CAST(((rt0.c0)GLOB(rt1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, vt0 NOT INDEXED ORDER BY CAST(((rt0.c0)GLOB(rt1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE ((NOT (rt1.c2)) COLLATE NOCASE) ORDER BY CAST(((rt0.c0)GLOB(rt1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, vt0 NOT INDEXED ORDER BY CAST(((rt0.c0)GLOB(rt1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE ((NOT (rt1.c2)) COLLATE NOCASE) ORDER BY CAST(((rt0.c0)GLOB(rt1.c0)) AS REAL);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))==((rt0.c3)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))==((rt0.c3)))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))==((rt0.c3)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))==((rt0.c3)))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))==((rt0.c3)))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (rt1.c4)) COLLATE RTRIM) ORDER BY (((rt1.c2)) BETWEEN ((rt1.c2)) AND (('215854937'))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)) BETWEEN ((rt1.c2)) AND (('215854937'))) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (rt1.c4)) COLLATE RTRIM) ORDER BY (((rt1.c2)) BETWEEN ((rt1.c2)) AND (('215854937'))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)) BETWEEN ((rt1.c2)) AND (('215854937'))) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (rt1.c4)) COLLATE RTRIM) ORDER BY (((rt1.c2)) BETWEEN ((rt1.c2)) AND (('215854937'))) COLLATE RTRIM DESC;
SELECT ALL * FROM rt0, rt1 INNER JOIN vt0 ON ((((0.3470469462518896, rt0.c4, rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c1, rt1.c0, -645921598)) AND ((rt1.c4, rt1.c4, rt1.c3, rt0.c3, rt0.c0))) IN (((rt0.c2)=(rt1.c2)), ((vt0.c0)|(rt1.c5)))) WHERE ((((rt1.c2)<=(rt1.c0)) IN ())) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)<=(rt1.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt0 ON ((((0.3470469462518896, rt0.c4, rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c1, rt1.c0, -645921598)) AND ((rt1.c4, rt1.c4, rt1.c3, rt0.c3, rt0.c0))) IN (((rt0.c2)=(rt1.c2)), ((vt0.c0)|(rt1.c5)))) ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 INNER JOIN vt0 ON ((((0.3470469462518896, rt0.c4, rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c1, rt1.c0, -645921598)) AND ((rt1.c4, rt1.c4, rt1.c3, rt0.c3, rt0.c0))) IN (((rt0.c2)=(rt1.c2)), ((vt0.c0)|(rt1.c5)))) WHERE ((((rt1.c2)<=(rt1.c0)) IN ())) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)<=(rt1.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt0 ON ((((0.3470469462518896, rt0.c4, rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c1, rt1.c0, -645921598)) AND ((rt1.c4, rt1.c4, rt1.c3, rt0.c3, rt0.c0))) IN (((rt0.c2)=(rt1.c2)), ((vt0.c0)|(rt1.c5)))) ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 INNER JOIN vt0 ON ((((0.3470469462518896, rt0.c4, rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c1, rt1.c0, -645921598)) AND ((rt1.c4, rt1.c4, rt1.c3, rt0.c3, rt0.c0))) IN (((rt0.c2)=(rt1.c2)), ((vt0.c0)|(rt1.c5)))) WHERE ((((rt1.c2)<=(rt1.c0)) IN ())) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((('1175431901' IN (rt0.c1)))>>(((((((((rt0.c4)OR('')))OR(vt0.c0)))OR(0.5764551795364186)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((('1175431901' IN (rt0.c1)))>>(((((((((rt0.c4)OR('')))OR(vt0.c0)))OR(0.5764551795364186)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((('1175431901' IN (rt0.c1)))>>(((((((((rt0.c4)OR('')))OR(vt0.c0)))OR(0.5764551795364186)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((('1175431901' IN (rt0.c1)))>>(((((((((rt0.c4)OR('')))OR(vt0.c0)))OR(0.5764551795364186)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((('1175431901' IN (rt0.c1)))>>(((((((((rt0.c4)OR('')))OR(vt0.c0)))OR(0.5764551795364186)))OR(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CASE WHEN TRIM(DISTINCT rt0.c3) THEN ((rt1.c4)+(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(DISTINCT rt0.c3) THEN ((rt1.c4)+(rt1.c3)) END) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CASE WHEN TRIM(DISTINCT rt0.c3) THEN ((rt1.c4)+(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(DISTINCT rt0.c3) THEN ((rt1.c4)+(rt1.c3)) END) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CASE WHEN TRIM(DISTINCT rt0.c3) THEN ((rt1.c4)+(rt1.c3)) END);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (~ (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (~ (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (~ (vt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(DISTINCT ((rt0.c2) ISNULL))) ORDER BY ((CAST(rt0.c4 AS NUMERIC)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c2) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c4 AS NUMERIC)) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(DISTINCT ((rt0.c2) ISNULL))) ORDER BY ((CAST(rt0.c4 AS NUMERIC)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c2) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c4 AS NUMERIC)) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(DISTINCT ((rt0.c2) ISNULL))) ORDER BY ((CAST(rt0.c4 AS NUMERIC)) NOTNULL) ASC;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c3)==(rt0.c1)) THEN IFNULL(DISTINCT rt0.c1, rt0.c4) WHEN (((NULL, rt0.c1, rt0.c4)) BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, 0X5814774a))) THEN ((x'9646a633')*(rt0.c2)) WHEN (((rt0.c2, rt0.c4, rt0.c3))>((rt0.c0, '', rt0.c2))) THEN json_quote(rt0.c3) END) ORDER BY (~ ((0.21580534914324923 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)=(rt0.c1)) THEN IFNULL(DISTINCT rt0.c1, rt0.c4) WHEN (((NULL, rt0.c1, rt0.c4)) BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, 0x5814774a))) THEN ((x'9646a633')*(rt0.c2)) WHEN (((rt0.c2, rt0.c4, rt0.c3))>((rt0.c0, '', rt0.c2))) THEN json_quote(rt0.c3) END) IS TRUE)  as count FROM rt0 ORDER BY (~ ((0.21580534914324923 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c3)==(rt0.c1)) THEN IFNULL(DISTINCT rt0.c1, rt0.c4) WHEN (((NULL, rt0.c1, rt0.c4)) BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, 0X5814774a))) THEN ((x'9646a633')*(rt0.c2)) WHEN (((rt0.c2, rt0.c4, rt0.c3))>((rt0.c0, '', rt0.c2))) THEN json_quote(rt0.c3) END) ORDER BY (~ ((0.21580534914324923 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)=(rt0.c1)) THEN IFNULL(DISTINCT rt0.c1, rt0.c4) WHEN (((NULL, rt0.c1, rt0.c4)) BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, 0x5814774a))) THEN ((x'9646a633')*(rt0.c2)) WHEN (((rt0.c2, rt0.c4, rt0.c3))>((rt0.c0, '', rt0.c2))) THEN json_quote(rt0.c3) END) IS TRUE)  as count FROM rt0 ORDER BY (~ ((0.21580534914324923 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c3)==(rt0.c1)) THEN IFNULL(DISTINCT rt0.c1, rt0.c4) WHEN (((NULL, rt0.c1, rt0.c4)) BETWEEN ((rt0.c4, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c1, 0X5814774a))) THEN ((x'9646a633')*(rt0.c2)) WHEN (((rt0.c2, rt0.c4, rt0.c3))>((rt0.c0, '', rt0.c2))) THEN json_quote(rt0.c3) END) ORDER BY (~ ((0.21580534914324923 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE WHERE (CAST(((rt0.c3)<<(rt0.c1)) AS TEXT)) ORDER BY 0.1723758539868645 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)<<(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE ORDER BY 0.1723758539868645 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE WHERE (CAST(((rt0.c3)<<(rt0.c1)) AS TEXT)) ORDER BY 0.1723758539868645 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)<<(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE ORDER BY 0.1723758539868645 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE WHERE (CAST(((rt0.c3)<<(rt0.c1)) AS TEXT)) ORDER BY 0.1723758539868645 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST('' AS TEXT) WHERE (CAST(((rt0.c4)&(rt0.c1)) AS NUMERIC)) ORDER BY 0.6555369739804522 DESC  NULLS FIRST, ((((((((((((((((rt0.c4)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(CASE WHEN rt0.c1 THEN 0.017829621502381543 ELSE rt0.c1 END)))OR(((((rt0.c2)OR(rt0.c4)))OR('LQ(QrzSs')))))AND(((rt0.c3)%(rt0.c4)))))AND(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4)&(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST('' AS TEXT) ORDER BY 0.6555369739804522 DESC  NULLS FIRST, ((((((((((((((((rt0.c4)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(CASE WHEN rt0.c1 THEN 0.017829621502381543 ELSE rt0.c1 END)))OR(((((rt0.c2)OR(rt0.c4)))OR('LQ(QrzSs')))))AND(((rt0.c3)%(rt0.c4)))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST('' AS TEXT) WHERE (CAST(((rt0.c4)&(rt0.c1)) AS NUMERIC)) ORDER BY 0.6555369739804522 DESC  NULLS FIRST, ((((((((((((((((rt0.c4)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(CASE WHEN rt0.c1 THEN 0.017829621502381543 ELSE rt0.c1 END)))OR(((((rt0.c2)OR(rt0.c4)))OR('LQ(QrzSs')))))AND(((rt0.c3)%(rt0.c4)))))AND(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4)&(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST('' AS TEXT) ORDER BY 0.6555369739804522 DESC  NULLS FIRST, ((((((((((((((((rt0.c4)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(CASE WHEN rt0.c1 THEN 0.017829621502381543 ELSE rt0.c1 END)))OR(((((rt0.c2)OR(rt0.c4)))OR('LQ(QrzSs')))))AND(((rt0.c3)%(rt0.c4)))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST('' AS TEXT) WHERE (CAST(((rt0.c4)&(rt0.c1)) AS NUMERIC)) ORDER BY 0.6555369739804522 DESC  NULLS FIRST, ((((((((((((((((rt0.c4)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(CASE WHEN rt0.c1 THEN 0.017829621502381543 ELSE rt0.c1 END)))OR(((((rt0.c2)OR(rt0.c4)))OR('LQ(QrzSs')))))AND(((rt0.c3)%(rt0.c4)))))AND(CAST(vt0.c0 AS INTEGER)));
SELECT ALL * FROM vt0, rt1 WHERE (((((((((((rt1.c5) NOTNULL))AND((((rt1.c1))<>((rt1.c1))))))AND(vt0.c0 COLLATE BINARY)))AND(TRIM(rt1.c4))))OR((vt0.c0 IN ())))) ORDER BY CASE WHEN (~ (rt1.c1)) THEN rt1.c5 COLLATE BINARY WHEN ((rt1.c1)OR(rt1.c2)) THEN (((rt1.c0))==((rt1.c0))) WHEN ((rt1.c2)<>(rt1.c5)) THEN rt1.c4 COLLATE RTRIM ELSE (~ (rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c5) NOTNULL))AND((((rt1.c1))!=((rt1.c1))))))AND(vt0.c0 COLLATE BINARY)))AND(TRIM(rt1.c4))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN (~ (rt1.c1)) THEN rt1.c5 COLLATE BINARY WHEN ((rt1.c1)OR(rt1.c2)) THEN (((rt1.c0))=((rt1.c0))) WHEN ((rt1.c2)!=(rt1.c5)) THEN rt1.c4 COLLATE RTRIM ELSE (~ (rt1.c2)) END  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((((rt1.c5) NOTNULL))AND((((rt1.c1))<>((rt1.c1))))))AND(vt0.c0 COLLATE BINARY)))AND(TRIM(rt1.c4))))OR((vt0.c0 IN ())))) ORDER BY CASE WHEN (~ (rt1.c1)) THEN rt1.c5 COLLATE BINARY WHEN ((rt1.c1)OR(rt1.c2)) THEN (((rt1.c0))==((rt1.c0))) WHEN ((rt1.c2)<>(rt1.c5)) THEN rt1.c4 COLLATE RTRIM ELSE (~ (rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c5) NOTNULL))AND((((rt1.c1))!=((rt1.c1))))))AND(vt0.c0 COLLATE BINARY)))AND(TRIM(rt1.c4))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN (~ (rt1.c1)) THEN rt1.c5 COLLATE BINARY WHEN ((rt1.c1)OR(rt1.c2)) THEN (((rt1.c0))=((rt1.c0))) WHEN ((rt1.c2)!=(rt1.c5)) THEN rt1.c4 COLLATE RTRIM ELSE (~ (rt1.c2)) END  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((((rt1.c5) NOTNULL))AND((((rt1.c1))<>((rt1.c1))))))AND(vt0.c0 COLLATE BINARY)))AND(TRIM(rt1.c4))))OR((vt0.c0 IN ())))) ORDER BY CASE WHEN (~ (rt1.c1)) THEN rt1.c5 COLLATE BINARY WHEN ((rt1.c1)OR(rt1.c2)) THEN (((rt1.c0))==((rt1.c0))) WHEN ((rt1.c2)<>(rt1.c5)) THEN rt1.c4 COLLATE RTRIM ELSE (~ (rt1.c2)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c4, '', rt0.c3, rt1.c2, rt0.c0)) BETWEEN (((~ (rt1.c4)), (NOT (rt0.c3)), rt1.c5, (+ (rt1.c5)), rt1.c4)) AND ((rt0.c4 COLLATE NOCASE, LTRIM(rt1.c0), CAST(rt1.c5 AS NUMERIC), (+ (rt1.c2)), (((rt1.c3))<((0.051983443441305455)))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4, '', rt0.c3, rt1.c2, rt0.c0)) BETWEEN (((~ (rt1.c4)), (NOT (rt0.c3)), rt1.c5, (+ (rt1.c5)), rt1.c4)) AND ((rt0.c4 COLLATE NOCASE, LTRIM(rt1.c0), CAST(rt1.c5 AS NUMERIC), (+ (rt1.c2)), (((rt1.c3))<((0.051983443441305455))))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c4, '', rt0.c3, rt1.c2, rt0.c0)) BETWEEN (((~ (rt1.c4)), (NOT (rt0.c3)), rt1.c5, (+ (rt1.c5)), rt1.c4)) AND ((rt0.c4 COLLATE NOCASE, LTRIM(rt1.c0), CAST(rt1.c5 AS NUMERIC), (+ (rt1.c2)), (((rt1.c3))<((0.051983443441305455)))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4, '', rt0.c3, rt1.c2, rt0.c0)) BETWEEN (((~ (rt1.c4)), (NOT (rt0.c3)), rt1.c5, (+ (rt1.c5)), rt1.c4)) AND ((rt0.c4 COLLATE NOCASE, LTRIM(rt1.c0), CAST(rt1.c5 AS NUMERIC), (+ (rt1.c2)), (((rt1.c3))<((0.051983443441305455))))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c4, '', rt0.c3, rt1.c2, rt0.c0)) BETWEEN (((~ (rt1.c4)), (NOT (rt0.c3)), rt1.c5, (+ (rt1.c5)), rt1.c4)) AND ((rt0.c4 COLLATE NOCASE, LTRIM(rt1.c0), CAST(rt1.c5 AS NUMERIC), (+ (rt1.c2)), (((rt1.c3))<((0.051983443441305455)))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c2 IN (NULL)) THEN (((rt1.c3, rt1.c3, rt1.c0)) BETWEEN (('{k7|*An쏥', rt1.c2, rt1.c1)) AND ((rt1.c4, rt1.c5, rt1.c4))) END) ORDER BY (((rt1.c5)) BETWEEN ((((('start of year')) NOT BETWEEN ((rt1.c3)) AND ((''))))) AND ((CHAR(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c2 IN (NULL)) THEN (((rt1.c3, rt1.c3, rt1.c0)) BETWEEN (('{k7|*An쏥', rt1.c2, rt1.c1)) AND ((rt1.c4, rt1.c5, rt1.c4))) END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c5)) BETWEEN ((((('start of year')) NOT BETWEEN ((rt1.c3)) AND ((''))))) AND ((CHAR(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c2 IN (NULL)) THEN (((rt1.c3, rt1.c3, rt1.c0)) BETWEEN (('{k7|*An쏥', rt1.c2, rt1.c1)) AND ((rt1.c4, rt1.c5, rt1.c4))) END) ORDER BY (((rt1.c5)) BETWEEN ((((('start of year')) NOT BETWEEN ((rt1.c3)) AND ((''))))) AND ((CHAR(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c2 IN (NULL)) THEN (((rt1.c3, rt1.c3, rt1.c0)) BETWEEN (('{k7|*An쏥', rt1.c2, rt1.c1)) AND ((rt1.c4, rt1.c5, rt1.c4))) END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c5)) BETWEEN ((((('start of year')) NOT BETWEEN ((rt1.c3)) AND ((''))))) AND ((CHAR(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c2 IN (NULL)) THEN (((rt1.c3, rt1.c3, rt1.c0)) BETWEEN (('{k7|*An쏥', rt1.c2, rt1.c1)) AND ((rt1.c4, rt1.c5, rt1.c4))) END) ORDER BY (((rt1.c5)) BETWEEN ((((('start of year')) NOT BETWEEN ((rt1.c3)) AND ((''))))) AND ((CHAR(rt1.c0)))) DESC;
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c3 THEN rt1.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c3 THEN rt1.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c3 THEN rt1.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c3 THEN rt1.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c3 THEN rt1.c2 COLLATE BINARY END);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1 IN ()))AND((((rt1.c0, NULL, rt1.c4, rt1.c1, rt1.c1)) BETWEEN ((rt1.c3, x'', rt1.c5, rt1.c0, x'')) AND ((rt1.c1, x'', rt1.c4, rt1.c3, rt1.c1))))))OR((x'' IN (rt1.c1, rt1.c1))))) ORDER BY CASE WHEN rt1.c5 THEN ((rt1.c3)|(rt1.c5)) ELSE rt1.c5 END DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1 IN ()))AND((((rt1.c0, NULL, rt1.c4, rt1.c1, rt1.c1)) BETWEEN ((rt1.c3, x'', rt1.c5, rt1.c0, x'')) AND ((rt1.c1, x'', rt1.c4, rt1.c3, rt1.c1))))))OR((x'' IN (rt1.c1, rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c5 THEN ((rt1.c3)|(rt1.c5)) ELSE rt1.c5 END DESC);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1 IN ()))AND((((rt1.c0, NULL, rt1.c4, rt1.c1, rt1.c1)) BETWEEN ((rt1.c3, x'', rt1.c5, rt1.c0, x'')) AND ((rt1.c1, x'', rt1.c4, rt1.c3, rt1.c1))))))OR((x'' IN (rt1.c1, rt1.c1))))) ORDER BY CASE WHEN rt1.c5 THEN ((rt1.c3)|(rt1.c5)) ELSE rt1.c5 END DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1 IN ()))AND((((rt1.c0, NULL, rt1.c4, rt1.c1, rt1.c1)) BETWEEN ((rt1.c3, x'', rt1.c5, rt1.c0, x'')) AND ((rt1.c1, x'', rt1.c4, rt1.c3, rt1.c1))))))OR((x'' IN (rt1.c1, rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c5 THEN ((rt1.c3)|(rt1.c5)) ELSE rt1.c5 END DESC);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1 IN ()))AND((((rt1.c0, NULL, rt1.c4, rt1.c1, rt1.c1)) BETWEEN ((rt1.c3, x'', rt1.c5, rt1.c0, x'')) AND ((rt1.c1, x'', rt1.c4, rt1.c3, rt1.c1))))))OR((x'' IN (rt1.c1, rt1.c1))))) ORDER BY CASE WHEN rt1.c5 THEN ((rt1.c3)|(rt1.c5)) ELSE rt1.c5 END DESC;
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL * FROM rt0, vt0 INNER JOIN rt1 ON (('Wc') NOT NULL) WHERE (((((vt0.c0))>=((rt1.c3))) IN ())) ORDER BY (- (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))>=((rt1.c3))) IN ())) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON (('Wc') NOT NULL) ORDER BY (- (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 INNER JOIN rt1 ON (('Wc') NOT NULL) WHERE (((((vt0.c0))>=((rt1.c3))) IN ())) ORDER BY (- (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))>=((rt1.c3))) IN ())) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON (('Wc') NOT NULL) ORDER BY (- (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 INNER JOIN rt1 ON (('Wc') NOT NULL) WHERE (((((vt0.c0))>=((rt1.c3))) IN ())) ORDER BY (- (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3)))) ASC  NULLS FIRST;
SELECT * FROM rt1, rt0, vt0 WHERE ((- (((rt0.c3) NOTNULL)))) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c4 END)GLOB(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) DESC, HEX(rt0.c3 COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c4 END)GLOB(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) DESC, HEX(rt0.c3 COLLATE BINARY) ASC  NULLS LAST);
SELECT * FROM rt1, rt0, vt0 WHERE ((- (((rt0.c3) NOTNULL)))) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c4 END)GLOB(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) DESC, HEX(rt0.c3 COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c4 END)GLOB(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) DESC, HEX(rt0.c3 COLLATE BINARY) ASC  NULLS LAST);
SELECT * FROM rt1, rt0, vt0 WHERE ((- (((rt0.c3) NOTNULL)))) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c4 END)GLOB(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) DESC, HEX(rt0.c3 COLLATE BINARY) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c5 AS BLOB) THEN '-1807002643' END) ORDER BY (((NOT (rt1.c2))) BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c4 END) AND (CAST(rt1.c3 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c5 AS BLOB) THEN '-1807002643' END) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((NOT (rt1.c2))) BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c4 END) AND (CAST(rt1.c3 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c5 AS BLOB) THEN '-1807002643' END) ORDER BY (((NOT (rt1.c2))) BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c4 END) AND (CAST(rt1.c3 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c5 AS BLOB) THEN '-1807002643' END) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((NOT (rt1.c2))) BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c4 END) AND (CAST(rt1.c3 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c5 AS BLOB) THEN '-1807002643' END) ORDER BY (((NOT (rt1.c2))) BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c4 END) AND (CAST(rt1.c3 AS NUMERIC)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST(((rt0.c3) IS FALSE) AS NUMERIC)) ORDER BY (((((rt0.c4, rt0.c2, rt1.c0)) BETWEEN ((rt0.c0, rt1.c2, rt1.c1)) AND ((rt0.c1, x'', vt0.c0)))) BETWEEN (rt0.c1) AND (CAST(rt1.c3 AS REAL))), CAST((((rt0.c1))=((rt1.c1))) AS INTEGER), ABS(DISTINCT ((rt0.c0) NOT NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (((((rt0.c4, rt0.c2, rt1.c0)) BETWEEN ((rt0.c0, rt1.c2, rt1.c1)) AND ((rt0.c1, x'', vt0.c0)))) BETWEEN (rt0.c1) AND (CAST(rt1.c3 AS REAL))), CAST((((rt0.c1))==((rt1.c1))) AS INTEGER), ABS(DISTINCT ((rt0.c0) NOT NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST(((rt0.c3) IS FALSE) AS NUMERIC)) ORDER BY (((((rt0.c4, rt0.c2, rt1.c0)) BETWEEN ((rt0.c0, rt1.c2, rt1.c1)) AND ((rt0.c1, x'', vt0.c0)))) BETWEEN (rt0.c1) AND (CAST(rt1.c3 AS REAL))), CAST((((rt0.c1))=((rt1.c1))) AS INTEGER), ABS(DISTINCT ((rt0.c0) NOT NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (((((rt0.c4, rt0.c2, rt1.c0)) BETWEEN ((rt0.c0, rt1.c2, rt1.c1)) AND ((rt0.c1, x'', vt0.c0)))) BETWEEN (rt0.c1) AND (CAST(rt1.c3 AS REAL))), CAST((((rt0.c1))==((rt1.c1))) AS INTEGER), ABS(DISTINCT ((rt0.c0) NOT NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST(((rt0.c3) IS FALSE) AS NUMERIC)) ORDER BY (((((rt0.c4, rt0.c2, rt1.c0)) BETWEEN ((rt0.c0, rt1.c2, rt1.c1)) AND ((rt0.c1, x'', vt0.c0)))) BETWEEN (rt0.c1) AND (CAST(rt1.c3 AS REAL))), CAST((((rt0.c1))=((rt1.c1))) AS INTEGER), ABS(DISTINCT ((rt0.c0) NOT NULL))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((((NULL)) BETWEEN ((rt0.c2)) AND ((rt1.c3))) IN (CAST(rt0.c1 AS INTEGER), ((((-708577944)OR(rt1.c5)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)) BETWEEN ((rt0.c2)) AND ((rt1.c3))) IN (CAST(rt0.c1 AS INTEGER), ((((-708577944)OR(rt1.c5)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((((NULL)) BETWEEN ((rt0.c2)) AND ((rt1.c3))) IN (CAST(rt0.c1 AS INTEGER), ((((-708577944)OR(rt1.c5)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)) BETWEEN ((rt0.c2)) AND ((rt1.c3))) IN (CAST(rt0.c1 AS INTEGER), ((((-708577944)OR(rt1.c5)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((((NULL)) BETWEEN ((rt0.c2)) AND ((rt1.c3))) IN (CAST(rt0.c1 AS INTEGER), ((((-708577944)OR(rt1.c5)))OR(vt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE NOCASE) ORDER BY ((1.138591948E9) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((1.138591948E9) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE NOCASE) ORDER BY ((1.138591948E9) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((1.138591948E9) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE NOCASE) ORDER BY ((1.138591948E9) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE ((((CAST(0.2855937022999102 AS INTEGER)))<((((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c0)))))) ORDER BY CAST(rt1.c3 COLLATE NOCASE AS REAL)  NULLS FIRST, (- (rt1.c5))  NULLS FIRST, ((rt1.c3)&(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(0.2855937022999102 AS INTEGER)))<((((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(rt1.c3 COLLATE NOCASE AS REAL)  NULLS FIRST, (- (rt1.c5))  NULLS FIRST, ((rt1.c3)&(x''))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((CAST(0.2855937022999102 AS INTEGER)))<((((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c0)))))) ORDER BY CAST(rt1.c3 COLLATE NOCASE AS REAL)  NULLS FIRST, (- (rt1.c5))  NULLS FIRST, ((rt1.c3)&(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(0.2855937022999102 AS INTEGER)))<((((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(rt1.c3 COLLATE NOCASE AS REAL)  NULLS FIRST, (- (rt1.c5))  NULLS FIRST, ((rt1.c3)&(x''))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((CAST(0.2855937022999102 AS INTEGER)))<((((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c0)))))) ORDER BY CAST(rt1.c3 COLLATE NOCASE AS REAL)  NULLS FIRST, (- (rt1.c5))  NULLS FIRST, ((rt1.c3)&(x''))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('');
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE ('I/CoOa~*') ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT)  NULLS LAST, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (('I/CoOa~*') IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT)  NULLS LAST, rt0.c0 DESC);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE ('I/CoOa~*') ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT)  NULLS LAST, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (('I/CoOa~*') IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT)  NULLS LAST, rt0.c0 DESC);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE ('I/CoOa~*') ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT)  NULLS LAST, rt0.c0 DESC;
SELECT ALL * FROM rt1, rt0, vt0 WHERE (HEX(rt0.c3 COLLATE RTRIM)) ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (HEX(rt0.c3 COLLATE RTRIM)) ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (HEX(rt0.c3 COLLATE RTRIM)) ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((NOT (((((rt1.c2)OR(rt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt1.c2)OR(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((NOT (((((rt1.c2)OR(rt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt1.c2)OR(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((NOT (((((rt1.c2)OR(rt0.c0)))AND(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (CASE LOWER(rt0.c4)  WHEN rt0.c0 THEN '0.4709356841265947' WHEN (~ (rt0.c0)) THEN (- (rt0.c2)) WHEN LIKELIHOOD(rt0.c1, 0.9979473193744106) THEN (((((((('Y﹏[D')OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c3)) END) ORDER BY (CAST(rt0.c4 AS BLOB) IN ()), ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END) BETWEEN ('') AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(rt0.c4)  WHEN rt0.c0 THEN '0.4709356841265947' WHEN (~ (rt0.c0)) THEN (- (rt0.c2)) WHEN LIKELIHOOD(rt0.c1, 0.9979473193744106) THEN (((((((('Y﹏[D')OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c4 AS BLOB) IN ()), ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END) BETWEEN ('') AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 END)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE LOWER(rt0.c4)  WHEN rt0.c0 THEN '0.4709356841265947' WHEN (~ (rt0.c0)) THEN (- (rt0.c2)) WHEN LIKELIHOOD(rt0.c1, 0.9979473193744106) THEN (((((((('Y﹏[D')OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c3)) END) ORDER BY (CAST(rt0.c4 AS BLOB) IN ()), ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END) BETWEEN ('') AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(rt0.c4)  WHEN rt0.c0 THEN '0.4709356841265947' WHEN (~ (rt0.c0)) THEN (- (rt0.c2)) WHEN LIKELIHOOD(rt0.c1, 0.9979473193744106) THEN (((((((('Y﹏[D')OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c4 AS BLOB) IN ()), ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END) BETWEEN ('') AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 END)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE LOWER(rt0.c4)  WHEN rt0.c0 THEN '0.4709356841265947' WHEN (~ (rt0.c0)) THEN (- (rt0.c2)) WHEN LIKELIHOOD(rt0.c1, 0.9979473193744106) THEN (((((((('Y﹏[D')OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c3)) END) ORDER BY (CAST(rt0.c4 AS BLOB) IN ()), ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END) BETWEEN ('') AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 NATURAL JOIN rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c5 THEN vt0.c0 END)AND(CASE rt1.c1  WHEN '' THEN rt1.c1 ELSE rt1.c1 END)))OR((rt0.c0 IN ('mn71<威'))))) ORDER BY (((((rt1.c0)AND(rt1.c4)))OR(rt1.c4)) IN (((rt1.c5) NOTNULL))) ASC, (((('Iy') BETWEEN (rt1.c4) AND (rt0.c3))) BETWEEN ((rt1.c4 IN ())) AND (json_valid(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c5 THEN vt0.c0 END)AND(CASE rt1.c1  WHEN '' THEN rt1.c1 ELSE rt1.c1 END)))OR((rt0.c0 IN ('mn71<威'))))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN rt0 ORDER BY (((((rt1.c0)AND(rt1.c4)))OR(rt1.c4)) IN (((rt1.c5) NOTNULL))) ASC, (((('Iy') BETWEEN (rt1.c4) AND (rt0.c3))) BETWEEN ((rt1.c4 IN ())) AND (json_valid(rt1.c4))));
SELECT COUNT(*) FROM vt0, rt1 NATURAL JOIN rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c5 THEN vt0.c0 END)AND(CASE rt1.c1  WHEN '' THEN rt1.c1 ELSE rt1.c1 END)))OR((rt0.c0 IN ('mn71<威'))))) ORDER BY (((((rt1.c0)AND(rt1.c4)))OR(rt1.c4)) IN (((rt1.c5) NOTNULL))) ASC, (((('Iy') BETWEEN (rt1.c4) AND (rt0.c3))) BETWEEN ((rt1.c4 IN ())) AND (json_valid(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c5 THEN vt0.c0 END)AND(CASE rt1.c1  WHEN '' THEN rt1.c1 ELSE rt1.c1 END)))OR((rt0.c0 IN ('mn71<威'))))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN rt0 ORDER BY (((((rt1.c0)AND(rt1.c4)))OR(rt1.c4)) IN (((rt1.c5) NOTNULL))) ASC, (((('Iy') BETWEEN (rt1.c4) AND (rt0.c3))) BETWEEN ((rt1.c4 IN ())) AND (json_valid(rt1.c4))));
SELECT COUNT(*) FROM vt0, rt1 NATURAL JOIN rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c5 THEN vt0.c0 END)AND(CASE rt1.c1  WHEN '' THEN rt1.c1 ELSE rt1.c1 END)))OR((rt0.c0 IN ('mn71<威'))))) ORDER BY (((((rt1.c0)AND(rt1.c4)))OR(rt1.c4)) IN (((rt1.c5) NOTNULL))) ASC, (((('Iy') BETWEEN (rt1.c4) AND (rt0.c3))) BETWEEN ((rt1.c4 IN ())) AND (json_valid(rt1.c4)));
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt1.c5)=(rt1.c4)) IN (rt1.c5 COLLATE RTRIM, ((NULL)<<(rt0.c2))))) ORDER BY HEX(DISTINCT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c5)=(rt1.c4)) IN (rt1.c5 COLLATE RTRIM, ((NULL)<<(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY HEX(DISTINCT NULL) ASC);
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt1.c5)=(rt1.c4)) IN (rt1.c5 COLLATE RTRIM, ((NULL)<<(rt0.c2))))) ORDER BY HEX(DISTINCT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c5)=(rt1.c4)) IN (rt1.c5 COLLATE RTRIM, ((NULL)<<(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY HEX(DISTINCT NULL) ASC);
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt1.c5)=(rt1.c4)) IN (rt1.c5 COLLATE RTRIM, ((NULL)<<(rt0.c2))))) ORDER BY HEX(DISTINCT NULL) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))/(x''))) ORDER BY CASE WHEN '-1372039458' COLLATE NOCASE THEN x'' WHEN (('1996507794') BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END WHEN CAST(0.32815284622049146 AS BLOB) THEN LIKE(rt0.c4, rt0.c3) ELSE (- (rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))/(x''))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN '-1372039458' COLLATE NOCASE THEN x'' WHEN (('1996507794') BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END WHEN CAST(0.32815284622049146 AS BLOB) THEN LIKE(rt0.c4, rt0.c3) ELSE (- (rt0.c2)) END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))/(x''))) ORDER BY CASE WHEN '-1372039458' COLLATE NOCASE THEN x'' WHEN (('1996507794') BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END WHEN CAST(0.32815284622049146 AS BLOB) THEN LIKE(rt0.c4, rt0.c3) ELSE (- (rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))/(x''))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN '-1372039458' COLLATE NOCASE THEN x'' WHEN (('1996507794') BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END WHEN CAST(0.32815284622049146 AS BLOB) THEN LIKE(rt0.c4, rt0.c3) ELSE (- (rt0.c2)) END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))/(x''))) ORDER BY CASE WHEN '-1372039458' COLLATE NOCASE THEN x'' WHEN (('1996507794') BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END WHEN CAST(0.32815284622049146 AS BLOB) THEN LIKE(rt0.c4, rt0.c3) ELSE (- (rt0.c2)) END ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c4)>=(x'')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4)>=(x'')) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c4)>=(x'')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4)>=(x'')) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c4)>=(x'')) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((~ (rt1.c3)))OR(load_extension(rt0.c1))))OR(((0.937196128258323)LIKE(rt0.c0))))) ORDER BY '1303845794' ASC, MAX(TRIM(NULL), (((rt1.c4))<=((rt1.c4))), rt0.c3 COLLATE RTRIM, ((rt0.c2)<(rt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt1.c3)))OR(load_extension(rt0.c1))))OR(((0.937196128258323)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY '1303845794' ASC, MAX(TRIM(NULL), (((rt1.c4))<=((rt1.c4))), rt0.c3 COLLATE RTRIM, ((rt0.c2)<(rt1.c0))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((~ (rt1.c3)))OR(load_extension(rt0.c1))))OR(((0.937196128258323)LIKE(rt0.c0))))) ORDER BY '1303845794' ASC, MAX(TRIM(NULL), (((rt1.c4))<=((rt1.c4))), rt0.c3 COLLATE RTRIM, ((rt0.c2)<(rt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt1.c3)))OR(load_extension(rt0.c1))))OR(((0.937196128258323)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY '1303845794' ASC, MAX(TRIM(NULL), (((rt1.c4))<=((rt1.c4))), rt0.c3 COLLATE RTRIM, ((rt0.c2)<(rt1.c0))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((~ (rt1.c3)))OR(load_extension(rt0.c1))))OR(((0.937196128258323)LIKE(rt0.c0))))) ORDER BY '1303845794' ASC, MAX(TRIM(NULL), (((rt1.c4))<=((rt1.c4))), rt0.c3 COLLATE RTRIM, ((rt0.c2)<(rt1.c0))) ASC;
SELECT * FROM rt1 WHERE (LIKELY(DISTINCT ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c5))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c5)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LIKELY(DISTINCT ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c5))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c5)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LIKELY(DISTINCT ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c5))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)%(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (CAST(rt0.c2 AS BLOB)))) ORDER BY CAST(((rt0.c4) NOT NULL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)%(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4) NOT NULL) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)%(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (CAST(rt0.c2 AS BLOB)))) ORDER BY CAST(((rt0.c4) NOT NULL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)%(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4) NOT NULL) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)%(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (CAST(rt0.c2 AS BLOB)))) ORDER BY CAST(((rt0.c4) NOT NULL) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM rt1 INNER JOIN vt0 ON 'Y' WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON 'Y');
SELECT ALL * FROM rt1 INNER JOIN vt0 ON 'Y' WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON 'Y');
SELECT ALL * FROM rt1 INNER JOIN vt0 ON 'Y' WHERE (NULL COLLATE RTRIM);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON IFNULL(DISTINCT INSTR(rt0.c4, 0.9942075881437683), vt0.c0 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON 'el' WHERE (CAST(rt1.c5 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c5 AS INTEGER)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON IFNULL(DISTINCT INSTR(rt0.c4, 0.9942075881437683), vt0.c0 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON 'el');
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON IFNULL(DISTINCT INSTR(rt0.c4, 0.9942075881437683), vt0.c0 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON 'el' WHERE (CAST(rt1.c5 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c5 AS INTEGER)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON IFNULL(DISTINCT INSTR(rt0.c4, 0.9942075881437683), vt0.c0 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON 'el');
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (TRIM(CASE WHEN rt1.c5 THEN rt0.c1 WHEN x'29c1' THEN rt1.c1 WHEN rt0.c2 THEN rt1.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN rt1.c5 THEN rt0.c1 WHEN x'29c1' THEN rt1.c1 WHEN rt0.c2 THEN rt1.c3 END)) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (TRIM(CASE WHEN rt1.c5 THEN rt0.c1 WHEN x'29c1' THEN rt1.c1 WHEN rt0.c2 THEN rt1.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN rt1.c5 THEN rt0.c1 WHEN x'29c1' THEN rt1.c1 WHEN rt0.c2 THEN rt1.c3 END)) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (TRIM(CASE WHEN rt1.c5 THEN rt0.c1 WHEN x'29c1' THEN rt1.c1 WHEN rt0.c2 THEN rt1.c3 END));
SELECT * FROM rt1 WHERE ((NOT (((rt1.c4) NOTNULL)))) ORDER BY CAST(rt1.c5 COLLATE NOCASE AS TEXT), CASE WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c5 COLLATE NOCASE AS TEXT), CASE WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c0 END COLLATE RTRIM DESC);
SELECT * FROM rt1 WHERE ((NOT (((rt1.c4) NOTNULL)))) ORDER BY CAST(rt1.c5 COLLATE NOCASE AS TEXT), CASE WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c5 COLLATE NOCASE AS TEXT), CASE WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c0 END COLLATE RTRIM DESC);
SELECT * FROM rt1 WHERE ((NOT (((rt1.c4) NOTNULL)))) ORDER BY CAST(rt1.c5 COLLATE NOCASE AS TEXT), CASE WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c0 END COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON TYPEOF(DISTINCT rt0.c2 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON ((NULL COLLATE BINARY) IS TRUE) WHERE ((((~ (rt1.c4)))>(CAST(rt0.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c4)))>(CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON TYPEOF(DISTINCT rt0.c2 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON ((NULL COLLATE BINARY) IS TRUE));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON TYPEOF(DISTINCT rt0.c2 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON ((NULL COLLATE BINARY) IS TRUE) WHERE ((((~ (rt1.c4)))>(CAST(rt0.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c4)))>(CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON TYPEOF(DISTINCT rt0.c2 COLLATE NOCASE) RIGHT OUTER JOIN rt0 ON ((NULL COLLATE BINARY) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c1)AND(rt0.c3)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c1)AND(rt0.c3)))AND(NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c1)AND(rt0.c3)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c1)AND(rt0.c3)))AND(NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c1)AND(rt0.c3)))AND(NULL)))));
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c4))>=((rt0.c4)))))>((rt0.c3)))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4))>=((rt0.c4)))))>((rt0.c3)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c4))>=((rt0.c4)))))>((rt0.c3)))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4))>=((rt0.c4)))))>((rt0.c3)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c4))>=((rt0.c4)))))>((rt0.c3)))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT rt1.c4, 0.35579168010701656) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT rt1.c4, 0.35579168010701656) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT rt1.c4, 0.35579168010701656) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT rt1.c4, 0.35579168010701656) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT rt1.c4, 0.35579168010701656) COLLATE RTRIM);
SELECT * FROM vt0, rt1, rt0 WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY DESC, (- (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY DESC, (- (NULL)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY DESC, (- (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY DESC, (- (NULL)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY DESC, (- (NULL)) DESC;
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE ((~ ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((x'' IN ())))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE ((~ ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((x'' IN ())))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE ((~ ((x'' IN ()))));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3))) ISNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ('');
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)+(rt0.c1)))OR(((((x'')OR(rt0.c1)))OR(-420870505)))))OR(((rt0.c4)OR(rt0.c3)))))AND(((rt0.c0) NOTNULL))))OR(((rt0.c0)&(0.072721896017793)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)+(rt0.c1)))OR(((((x'')OR(rt0.c1)))OR(-420870505)))))OR(((rt0.c4)OR(rt0.c3)))))AND(((rt0.c0) NOTNULL))))OR(((rt0.c0)&(0.072721896017793))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)+(rt0.c1)))OR(((((x'')OR(rt0.c1)))OR(-420870505)))))OR(((rt0.c4)OR(rt0.c3)))))AND(((rt0.c0) NOTNULL))))OR(((rt0.c0)&(0.072721896017793)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)+(rt0.c1)))OR(((((x'')OR(rt0.c1)))OR(-420870505)))))OR(((rt0.c4)OR(rt0.c3)))))AND(((rt0.c0) NOTNULL))))OR(((rt0.c0)&(0.072721896017793))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)+(rt0.c1)))OR(((((x'')OR(rt0.c1)))OR(-420870505)))))OR(((rt0.c4)OR(rt0.c3)))))AND(((rt0.c0) NOTNULL))))OR(((rt0.c0)&(0.072721896017793)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')AND(rt0.c1)))LIKE(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND(rt0.c1)))LIKE(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')AND(rt0.c1)))LIKE(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND(rt0.c1)))LIKE(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'')AND(rt0.c1)))LIKE(CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (vt0.c0);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(x'067a' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'067a' AS TEXT)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(x'067a' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'067a' AS TEXT)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(x'067a' AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT json_array_length(rt0.c4), 0.2072814907065551)) ORDER BY ((((rt0.c2) NOTNULL))|((NOT (rt0.c1)))), ((((rt0.c0) NOT NULL))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT json_array_length(rt0.c4), 0.2072814907065551)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL))|((NOT (rt0.c1)))), ((((rt0.c0) NOT NULL))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT json_array_length(rt0.c4), 0.2072814907065551)) ORDER BY ((((rt0.c2) NOTNULL))|((NOT (rt0.c1)))), ((((rt0.c0) NOT NULL))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT json_array_length(rt0.c4), 0.2072814907065551)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL))|((NOT (rt0.c1)))), ((((rt0.c0) NOT NULL))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT json_array_length(rt0.c4), 0.2072814907065551)) ORDER BY ((((rt0.c2) NOTNULL))|((NOT (rt0.c1)))), ((((rt0.c0) NOT NULL))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (LIKELY(DISTINCT ((((((((rt1.c4)AND(rt0.c0)))OR(rt0.c1)))AND(0.0189507965059742)))OR('260839449'))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((((((rt1.c4)AND(rt0.c0)))OR(rt0.c1)))AND(0.0189507965059742)))OR('260839449')))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (LIKELY(DISTINCT ((((((((rt1.c4)AND(rt0.c0)))OR(rt0.c1)))AND(0.0189507965059742)))OR('260839449'))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((((((rt1.c4)AND(rt0.c0)))OR(rt0.c1)))AND(0.0189507965059742)))OR('260839449')))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (LIKELY(DISTINCT ((((((((rt1.c4)AND(rt0.c0)))OR(rt0.c1)))AND(0.0189507965059742)))OR('260839449'))));
SELECT COUNT(*) FROM rt0 WHERE (((ROUND(rt0.c0, rt0.c4)) NOT BETWEEN (((rt0.c1)OR(0.06608149319266843))) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((ROUND(rt0.c0, rt0.c4)) NOT BETWEEN (((rt0.c1)OR(0.06608149319266843))) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((ROUND(rt0.c0, rt0.c4)) NOT BETWEEN (((rt0.c1)OR(0.06608149319266843))) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((ROUND(rt0.c0, rt0.c4)) NOT BETWEEN (((rt0.c1)OR(0.06608149319266843))) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((ROUND(rt0.c0, rt0.c4)) NOT BETWEEN (((rt0.c1)OR(0.06608149319266843))) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST((((rt1.c1, rt0.c3, rt0.c1))<((vt0.c0, rt1.c1, rt0.c4))) AS TEXT)) ORDER BY (((rt1.c5)) BETWEEN (((((rt1.c4, rt1.c3, vt0.c0)) BETWEEN ((rt1.c2, '+咑%mf', vt0.c0)) AND ((rt1.c3, rt0.c1, vt0.c0))))) AND ((((x'') NOTNULL)))), (('-513464177')<=((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c4))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1, rt0.c3, rt0.c1))<((vt0.c0, rt1.c1, rt0.c4))) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((rt1.c5)) BETWEEN (((((rt1.c4, rt1.c3, vt0.c0)) BETWEEN ((rt1.c2, '+咑%mf', vt0.c0)) AND ((rt1.c3, rt0.c1, vt0.c0))))) AND ((((x'') NOTNULL)))), (('-513464177')<=((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c4))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST((((rt1.c1, rt0.c3, rt0.c1))<((vt0.c0, rt1.c1, rt0.c4))) AS TEXT)) ORDER BY (((rt1.c5)) BETWEEN (((((rt1.c4, rt1.c3, vt0.c0)) BETWEEN ((rt1.c2, '+咑%mf', vt0.c0)) AND ((rt1.c3, rt0.c1, vt0.c0))))) AND ((((x'') NOTNULL)))), (('-513464177')<=((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c4))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1, rt0.c3, rt0.c1))<((vt0.c0, rt1.c1, rt0.c4))) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((rt1.c5)) BETWEEN (((((rt1.c4, rt1.c3, vt0.c0)) BETWEEN ((rt1.c2, '+咑%mf', vt0.c0)) AND ((rt1.c3, rt0.c1, vt0.c0))))) AND ((((x'') NOTNULL)))), (('-513464177')<=((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c4))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST((((rt1.c1, rt0.c3, rt0.c1))<((vt0.c0, rt1.c1, rt0.c4))) AS TEXT)) ORDER BY (((rt1.c5)) BETWEEN (((((rt1.c4, rt1.c3, vt0.c0)) BETWEEN ((rt1.c2, '+咑%mf', vt0.c0)) AND ((rt1.c3, rt0.c1, vt0.c0))))) AND ((((x'') NOTNULL)))), (('-513464177')<=((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c4))))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((~ ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ ((- (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((('i#* ')AND(0x4e5de827))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((~ (vt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((('i#* ')AND(0X4e5de827))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((('i#* ')AND(0x4e5de827))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((~ (vt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((('i#* ')AND(0X4e5de827))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((('i#* ')AND(0x4e5de827))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((~ (vt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.32147502104424974 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0, vt0.c0, 0.061354699242638366, '155212483', vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (((('1773257512')OR('-1465775630')))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.32147502104424974 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0, vt0.c0, 0.061354699242638366, '155212483', vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (((('1773257512')OR('-1465775630')))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.32147502104424974 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0, vt0.c0, 0.061354699242638366, '155212483', vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (((('1773257512')OR('-1465775630')))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.32147502104424974 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0, vt0.c0, 0.061354699242638366, '155212483', vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (((('1773257512')OR('-1465775630')))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.32147502104424974 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0, vt0.c0, 0.061354699242638366, '155212483', vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE (((('1773257512')OR('-1465775630')))OR(vt0.c0)) END);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c1 END))) ORDER BY CASE ''  WHEN ((vt0.c0) IS TRUE) THEN (rt1.c5 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CASE ''  WHEN ((vt0.c0) IS TRUE) THEN (rt1.c5 IN ()) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c1 END))) ORDER BY CASE ''  WHEN ((vt0.c0) IS TRUE) THEN (rt1.c5 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CASE ''  WHEN ((vt0.c0) IS TRUE) THEN (rt1.c5 IN ()) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c1 END))) ORDER BY CASE ''  WHEN ((vt0.c0) IS TRUE) THEN (rt1.c5 IN ()) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((rt1.c0) NOTNULL) COLLATE NOCASE) ORDER BY ((((((((((rt1.c1)OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c1)))OR(rt0.c1)))/(((rt1.c3)&(rt0.c3)))) DESC, ((((rt0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4))) IS TRUE), json_patch(CASE rt0.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END, CAST(rt1.c1 AS NUMERIC)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((((((((((rt1.c1)OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c1)))OR(rt0.c1)))/(((rt1.c3)&(rt0.c3)))) DESC, ((((rt0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4))) IS TRUE), json_patch(CASE rt0.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END, CAST(rt1.c1 AS NUMERIC)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((rt1.c0) NOTNULL) COLLATE NOCASE) ORDER BY ((((((((((rt1.c1)OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c1)))OR(rt0.c1)))/(((rt1.c3)&(rt0.c3)))) DESC, ((((rt0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4))) IS TRUE), json_patch(CASE rt0.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END, CAST(rt1.c1 AS NUMERIC)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((((((((((rt1.c1)OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c1)))OR(rt0.c1)))/(((rt1.c3)&(rt0.c3)))) DESC, ((((rt0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4))) IS TRUE), json_patch(CASE rt0.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END, CAST(rt1.c1 AS NUMERIC)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((rt1.c0) NOTNULL) COLLATE NOCASE) ORDER BY ((((((((((rt1.c1)OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c1)))OR(rt0.c1)))/(((rt1.c3)&(rt0.c3)))) DESC, ((((rt0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4))) IS TRUE), json_patch(CASE rt0.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END, CAST(rt1.c1 AS NUMERIC)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c4 COLLATE RTRIM) NOT BETWEEN (TOTAL_CHANGES()) AND (CAST(0X25c94dd6 AS REAL)))) ORDER BY (CAST(rt0.c1 AS INTEGER) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE RTRIM) NOT BETWEEN (TOTAL_CHANGES()) AND (CAST(0X25c94dd6 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c1 AS INTEGER) IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c4 COLLATE RTRIM) NOT BETWEEN (TOTAL_CHANGES()) AND (CAST(0X25c94dd6 AS REAL)))) ORDER BY (CAST(rt0.c1 AS INTEGER) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE RTRIM) NOT BETWEEN (TOTAL_CHANGES()) AND (CAST(0X25c94dd6 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c1 AS INTEGER) IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c4 COLLATE RTRIM) NOT BETWEEN (TOTAL_CHANGES()) AND (CAST(0X25c94dd6 AS REAL)))) ORDER BY (CAST(rt0.c1 AS INTEGER) IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE (rt1.c0 IN ())  WHEN (((rt0.c1, rt1.c2, rt1.c5)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c4, rt1.c4, rt1.c5))) THEN CAST(vt0.c0 AS BLOB) WHEN CASE rt0.c2  WHEN NULL THEN rt1.c4 END THEN 1242541163 WHEN rt1.c1 COLLATE BINARY THEN json_valid(rt1.c1) END INNER JOIN rt1 ON vt0.c0 WHERE (LOWER(((rt1.c3)<<(rt0.c1)))) ORDER BY (((+ (rt1.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt1.c3)<<(rt0.c1)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE (rt1.c0 IN ())  WHEN (((rt0.c1, rt1.c2, rt1.c5)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c4, rt1.c4, rt1.c5))) THEN CAST(vt0.c0 AS BLOB) WHEN CASE rt0.c2  WHEN NULL THEN rt1.c4 END THEN 1242541163 WHEN rt1.c1 COLLATE BINARY THEN json_valid(rt1.c1) END INNER JOIN rt1 ON vt0.c0 ORDER BY (((+ (rt1.c0))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE (rt1.c0 IN ())  WHEN (((rt0.c1, rt1.c2, rt1.c5)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c4, rt1.c4, rt1.c5))) THEN CAST(vt0.c0 AS BLOB) WHEN CASE rt0.c2  WHEN NULL THEN rt1.c4 END THEN 1242541163 WHEN rt1.c1 COLLATE BINARY THEN json_valid(rt1.c1) END INNER JOIN rt1 ON vt0.c0 WHERE (LOWER(((rt1.c3)<<(rt0.c1)))) ORDER BY (((+ (rt1.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt1.c3)<<(rt0.c1)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE (rt1.c0 IN ())  WHEN (((rt0.c1, rt1.c2, rt1.c5)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c4, rt1.c4, rt1.c5))) THEN CAST(vt0.c0 AS BLOB) WHEN CASE rt0.c2  WHEN NULL THEN rt1.c4 END THEN 1242541163 WHEN rt1.c1 COLLATE BINARY THEN json_valid(rt1.c1) END INNER JOIN rt1 ON vt0.c0 ORDER BY (((+ (rt1.c0))) ISNULL) ASC);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((rt0.c2)<>(rt1.c2)) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)!=(rt1.c2)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((rt0.c2)<>(rt1.c2)) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)!=(rt1.c2)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((rt0.c2)<>(rt1.c2)) COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT (((rt0.c1))<((rt0.c0)))) RIGHT OUTER JOIN rt0 ON ((rt0.c4) ISNULL) WHERE (CAST(UPPER(DISTINCT rt0.c3) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT rt0.c3) AS TEXT)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT (((rt0.c1))<((rt0.c0)))) RIGHT OUTER JOIN rt0 ON ((rt0.c4) ISNULL));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT (((rt0.c1))<((rt0.c0)))) RIGHT OUTER JOIN rt0 ON ((rt0.c4) ISNULL) WHERE (CAST(UPPER(DISTINCT rt0.c3) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT rt0.c3) AS TEXT)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT (((rt0.c1))<((rt0.c0)))) RIGHT OUTER JOIN rt0 ON ((rt0.c4) ISNULL));
SELECT ALL * FROM rt0 WHERE ((NOT ((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT ((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT ((- (rt0.c3)))));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN ('') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) BETWEEN ('') AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN ('') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) BETWEEN ('') AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN ('') AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c1 COLLATE BINARY) ISNULL) WHERE (((((rt1.c3)*(rt1.c3))) BETWEEN (CASE vt0.c0  WHEN rt1.c0 THEN 'IT*c>e!' END) AND (CAST(rt1.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)*(rt1.c3))) BETWEEN (CASE vt0.c0  WHEN rt1.c0 THEN 'IT*c>e!' END) AND (CAST(rt1.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c1 COLLATE BINARY) ISNULL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c1 COLLATE BINARY) ISNULL) WHERE (((((rt1.c3)*(rt1.c3))) BETWEEN (CASE vt0.c0  WHEN rt1.c0 THEN 'IT*c>e!' END) AND (CAST(rt1.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)*(rt1.c3))) BETWEEN (CASE vt0.c0  WHEN rt1.c0 THEN 'IT*c>e!' END) AND (CAST(rt1.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c1 COLLATE BINARY) ISNULL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c1 COLLATE BINARY) ISNULL) WHERE (((((rt1.c3)*(rt1.c3))) BETWEEN (CASE vt0.c0  WHEN rt1.c0 THEN 'IT*c>e!' END) AND (CAST(rt1.c4 AS NUMERIC))));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((((((((rt0.c0)AND(rt0.c2)))AND(0Xffffffffb197c6b6)))AND(((rt0.c1) ISNULL))))AND(CASE '-705332896'  WHEN rt0.c0 THEN rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0)AND(rt0.c2)))AND(0xffffffffb197c6b6)))AND(((rt0.c1) ISNULL))))AND(CASE '-705332896'  WHEN rt0.c0 THEN rt0.c3 END)) DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((((((((rt0.c0)AND(rt0.c2)))AND(0Xffffffffb197c6b6)))AND(((rt0.c1) ISNULL))))AND(CASE '-705332896'  WHEN rt0.c0 THEN rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0)AND(rt0.c2)))AND(0xffffffffb197c6b6)))AND(((rt0.c1) ISNULL))))AND(CASE '-705332896'  WHEN rt0.c0 THEN rt0.c3 END)) DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((((((((rt0.c0)AND(rt0.c2)))AND(0Xffffffffb197c6b6)))AND(((rt0.c1) ISNULL))))AND(CASE '-705332896'  WHEN rt0.c0 THEN rt0.c3 END)) DESC;
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)) AS BLOB)) ORDER BY (rt0.c1 IN (rt0.c1, rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN (rt0.c1, rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)) AS BLOB)) ORDER BY (rt0.c1 IN (rt0.c1, rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN (rt0.c1, rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)) AS BLOB)) ORDER BY (rt0.c1 IN (rt0.c1, rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))IS(rt0.c0 COLLATE RTRIM))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (rt0.c1 COLLATE BINARY) AND ((+ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))IS(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (rt0.c1 COLLATE BINARY) AND ((+ (rt0.c0)))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))IS(rt0.c0 COLLATE RTRIM))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (rt0.c1 COLLATE BINARY) AND ((+ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))IS(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (rt0.c1 COLLATE BINARY) AND ((+ (rt0.c0)))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))IS(rt0.c0 COLLATE RTRIM))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (rt0.c1 COLLATE BINARY) AND ((+ (rt0.c0)))) ASC;
SELECT ALL * FROM rt1, rt0, vt0 WHERE ('1385543345') ORDER BY (((NOT (rt1.c3))) IS FALSE), (+ (LIKELIHOOD(rt1.c2, 0.47996780683926643)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1385543345') IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((NOT (rt1.c3))) IS FALSE), (+ (LIKELIHOOD(rt1.c2, 0.47996780683926643)))  NULLS LAST);
SELECT ALL * FROM rt1, rt0, vt0 WHERE ('1385543345') ORDER BY (((NOT (rt1.c3))) IS FALSE), (+ (LIKELIHOOD(rt1.c2, 0.47996780683926643)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1385543345') IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((NOT (rt1.c3))) IS FALSE), (+ (LIKELIHOOD(rt1.c2, 0.47996780683926643)))  NULLS LAST);
SELECT ALL * FROM rt1, rt0, vt0 WHERE ('1385543345') ORDER BY (((NOT (rt1.c3))) IS FALSE), (+ (LIKELIHOOD(rt1.c2, 0.47996780683926643)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c2 THEN NULL WHEN rt1.c5 THEN rt1.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c2 THEN NULL WHEN rt1.c5 THEN rt1.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c2 THEN NULL WHEN rt1.c5 THEN rt1.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c2 THEN NULL WHEN rt1.c5 THEN rt1.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c2 THEN NULL WHEN rt1.c5 THEN rt1.c2 END AS INTEGER));
SELECT ALL * FROM rt1, rt0, vt0 WHERE (NULLIF(CAST(rt0.c0 AS BLOB), ((vt0.c0)/(vt0.c0)))) ORDER BY (- (CASE WHEN rt1.c0 THEN x'' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(rt0.c0 AS BLOB), ((vt0.c0)/(vt0.c0)))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (- (CASE WHEN rt1.c0 THEN x'' END))  NULLS LAST);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (NULLIF(CAST(rt0.c0 AS BLOB), ((vt0.c0)/(vt0.c0)))) ORDER BY (- (CASE WHEN rt1.c0 THEN x'' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(rt0.c0 AS BLOB), ((vt0.c0)/(vt0.c0)))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (- (CASE WHEN rt1.c0 THEN x'' END))  NULLS LAST);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (NULLIF(CAST(rt0.c0 AS BLOB), ((vt0.c0)/(vt0.c0)))) ORDER BY (- (CASE WHEN rt1.c0 THEN x'' END))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS NOT((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)IS NOT((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS NOT((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)IS NOT((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)IS NOT((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) END);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (UPPER(CASE WHEN x'9837' THEN rt1.c4 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c3 END)) ORDER BY (rt1.c4 IN ()) COLLATE BINARY, ((rt1.c4) IS TRUE) COLLATE RTRIM  NULLS LAST, CAST(((0.3416463623445708) BETWEEN (rt0.c4) AND (rt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((UPPER(CASE WHEN x'9837' THEN rt1.c4 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c3 END)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (rt1.c4 IN ()) COLLATE BINARY, ((rt1.c4) IS TRUE) COLLATE RTRIM  NULLS LAST, CAST(((0.3416463623445708) BETWEEN (rt0.c4) AND (rt0.c2)) AS BLOB));
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (UPPER(CASE WHEN x'9837' THEN rt1.c4 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c3 END)) ORDER BY (rt1.c4 IN ()) COLLATE BINARY, ((rt1.c4) IS TRUE) COLLATE RTRIM  NULLS LAST, CAST(((0.3416463623445708) BETWEEN (rt0.c4) AND (rt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((UPPER(CASE WHEN x'9837' THEN rt1.c4 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c3 END)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (rt1.c4 IN ()) COLLATE BINARY, ((rt1.c4) IS TRUE) COLLATE RTRIM  NULLS LAST, CAST(((0.3416463623445708) BETWEEN (rt0.c4) AND (rt0.c2)) AS BLOB));
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (UPPER(CASE WHEN x'9837' THEN rt1.c4 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c3 END)) ORDER BY (rt1.c4 IN ()) COLLATE BINARY, ((rt1.c4) IS TRUE) COLLATE RTRIM  NULLS LAST, CAST(((0.3416463623445708) BETWEEN (rt0.c4) AND (rt0.c2)) AS BLOB);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((LIKELY(rt1.c0))AND((((rt1.c2))=((rt1.c4))))))AND(((rt1.c2) NOTNULL))))AND(((rt1.c2)IS NOT(rt1.c5)))))OR(((rt1.c4)+(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((LIKELY(rt1.c0))AND((((rt1.c2))==((rt1.c4))))))AND(((rt1.c2) NOTNULL))))AND(((rt1.c2)IS NOT(rt1.c5)))))OR(((rt1.c4)+(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((LIKELY(rt1.c0))AND((((rt1.c2))=((rt1.c4))))))AND(((rt1.c2) NOTNULL))))AND(((rt1.c2)IS NOT(rt1.c5)))))OR(((rt1.c4)+(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((LIKELY(rt1.c0))AND((((rt1.c2))==((rt1.c4))))))AND(((rt1.c2) NOTNULL))))AND(((rt1.c2)IS NOT(rt1.c5)))))OR(((rt1.c4)+(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((LIKELY(rt1.c0))AND((((rt1.c2))=((rt1.c4))))))AND(((rt1.c2) NOTNULL))))AND(((rt1.c2)IS NOT(rt1.c5)))))OR(((rt1.c4)+(rt1.c2)))));
SELECT ALL * FROM vt0, rt1, rt0 WHERE (CAST(((rt1.c3)||(0.6729044355662498)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3)||(0.6729044355662498)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (CAST(((rt1.c3)||(0.6729044355662498)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3)||(0.6729044355662498)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (CAST(((rt1.c3)||(0.6729044355662498)) AS INTEGER));
SELECT * FROM rt1 WHERE ((((((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c2)), LIKELIHOOD(rt1.c2, 0.15899688031281256), NULL))<>((((rt1.c0)/(rt1.c5)), ((((0.4351456984492099)AND(rt1.c2)))OR(rt1.c5)), ((rt1.c4) IS TRUE))))) ORDER BY ((((((rt1.c4) IS TRUE))AND((- (rt1.c3)))))OR(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c2)), LIKELIHOOD(rt1.c2, 0.15899688031281256), NULL))!=((((rt1.c0)/(rt1.c5)), ((((0.4351456984492099)AND(rt1.c2)))OR(rt1.c5)), ((rt1.c4) IS TRUE))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c4) IS TRUE))AND((- (rt1.c3)))))OR(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 END)) ASC);
SELECT * FROM rt1 WHERE ((((((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c2)), LIKELIHOOD(rt1.c2, 0.15899688031281256), NULL))<>((((rt1.c0)/(rt1.c5)), ((((0.4351456984492099)AND(rt1.c2)))OR(rt1.c5)), ((rt1.c4) IS TRUE))))) ORDER BY ((((((rt1.c4) IS TRUE))AND((- (rt1.c3)))))OR(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c2)), LIKELIHOOD(rt1.c2, 0.15899688031281256), NULL))!=((((rt1.c0)/(rt1.c5)), ((((0.4351456984492099)AND(rt1.c2)))OR(rt1.c5)), ((rt1.c4) IS TRUE))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c4) IS TRUE))AND((- (rt1.c3)))))OR(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 END)) ASC);
SELECT * FROM rt1 WHERE ((((((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c2)), LIKELIHOOD(rt1.c2, 0.15899688031281256), NULL))<>((((rt1.c0)/(rt1.c5)), ((((0.4351456984492099)AND(rt1.c2)))OR(rt1.c5)), ((rt1.c4) IS TRUE))))) ORDER BY ((((((rt1.c4) IS TRUE))AND((- (rt1.c3)))))OR(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 END)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(DISTINCT ((vt0.c0) NOT BETWEEN (0Xefe153f) AND (vt0.c0)), (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt0.c0) NOT BETWEEN (0xefe153f) AND (vt0.c0)), (NOT (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(DISTINCT ((vt0.c0) NOT BETWEEN (0Xefe153f) AND (vt0.c0)), (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt0.c0) NOT BETWEEN (0xefe153f) AND (vt0.c0)), (NOT (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(DISTINCT ((vt0.c0) NOT BETWEEN (0Xefe153f) AND (vt0.c0)), (NOT (vt0.c0))));
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((rt1.c1 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((rt1.c1 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((rt1.c1 COLLATE BINARY) ISNULL));
SELECT * FROM rt1 WHERE ((~ (rt1.c0)) COLLATE BINARY) ORDER BY (((((((((rt1.c4 IN ()))OR((- (rt1.c4)))))AND((((''))<=((rt1.c5))))))AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 END)))OR(((rt1.c4) IS FALSE))) DESC, CASE ((((((((rt1.c3)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1))  WHEN '395829206' THEN (- (rt1.c3)) END;
SELECT SUM(count) FROM (SELECT (((~ (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (((((((((rt1.c4 IN ()))OR((- (rt1.c4)))))AND((((''))<=((rt1.c5))))))AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 END)))OR(((rt1.c4) IS FALSE))) DESC, CASE ((((((((rt1.c3)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1))  WHEN '395829206' THEN (- (rt1.c3)) END);
SELECT * FROM rt1 WHERE ((~ (rt1.c0)) COLLATE BINARY) ORDER BY (((((((((rt1.c4 IN ()))OR((- (rt1.c4)))))AND((((''))<=((rt1.c5))))))AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 END)))OR(((rt1.c4) IS FALSE))) DESC, CASE ((((((((rt1.c3)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1))  WHEN '395829206' THEN (- (rt1.c3)) END;
SELECT SUM(count) FROM (SELECT (((~ (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (((((((((rt1.c4 IN ()))OR((- (rt1.c4)))))AND((((''))<=((rt1.c5))))))AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 END)))OR(((rt1.c4) IS FALSE))) DESC, CASE ((((((((rt1.c3)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1))  WHEN '395829206' THEN (- (rt1.c3)) END);
SELECT * FROM rt1 WHERE ((~ (rt1.c0)) COLLATE BINARY) ORDER BY (((((((((rt1.c4 IN ()))OR((- (rt1.c4)))))AND((((''))<=((rt1.c5))))))AND(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 END)))OR(((rt1.c4) IS FALSE))) DESC, CASE ((((((((rt1.c3)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1))  WHEN '395829206' THEN (- (rt1.c3)) END;
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (0.13793227140977893))) ORDER BY (0.5285914511404968 IN ()) DESC  NULLS FIRST, (('-800248469') ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (0.13793227140977893))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (0.5285914511404968 IN ()) DESC  NULLS FIRST, (('-800248469') ISNULL) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (0.13793227140977893))) ORDER BY (0.5285914511404968 IN ()) DESC  NULLS FIRST, (('-800248469') ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (0.13793227140977893))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (0.5285914511404968 IN ()) DESC  NULLS FIRST, (('-800248469') ISNULL) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (0.13793227140977893))) ORDER BY (0.5285914511404968 IN ()) DESC  NULLS FIRST, (('-800248469') ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2) BETWEEN (rt1.c3) AND ('匷<悯mB')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) BETWEEN (rt1.c3) AND ('匷<悯mB')) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2) BETWEEN (rt1.c3) AND ('匷<悯mB')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) BETWEEN (rt1.c3) AND ('匷<悯mB')) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2) BETWEEN (rt1.c3) AND ('匷<悯mB')) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (('1517665187')/(rt0.c3)) THEN rt0.c2 ELSE rt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('1517665187')/(rt0.c3)) THEN rt0.c2 ELSE rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (('1517665187')/(rt0.c3)) THEN rt0.c2 ELSE rt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('1517665187')/(rt0.c3)) THEN rt0.c2 ELSE rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (('1517665187')/(rt0.c3)) THEN rt0.c2 ELSE rt0.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN (vt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (x'6031' COLLATE RTRIM) ORDER BY CASE WHEN (((rt1.c1, rt1.c1, 0.3251169500581802, rt0.c3, rt1.c2))>=((rt0.c4, rt1.c1, rt1.c0, rt0.c2, rt0.c2))) THEN rt1.c3 WHEN CAST(rt1.c4 AS BLOB) THEN NULL WHEN (((rt1.c0, rt1.c2, rt0.c0)) BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt0.c2, rt1.c1, rt1.c4))) THEN rt1.c0 END  NULLS FIRST, NULLIF((rt1.c2 IN (rt1.c5)), (+ (rt1.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'6031' COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN (((rt1.c1, rt1.c1, 0.3251169500581802, rt0.c3, rt1.c2))>=((rt0.c4, rt1.c1, rt1.c0, rt0.c2, rt0.c2))) THEN rt1.c3 WHEN CAST(rt1.c4 AS BLOB) THEN NULL WHEN (((rt1.c0, rt1.c2, rt0.c0)) BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt0.c2, rt1.c1, rt1.c4))) THEN rt1.c0 END  NULLS FIRST, NULLIF((rt1.c2 IN (rt1.c5)), (+ (rt1.c4)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (x'6031' COLLATE RTRIM) ORDER BY CASE WHEN (((rt1.c1, rt1.c1, 0.3251169500581802, rt0.c3, rt1.c2))>=((rt0.c4, rt1.c1, rt1.c0, rt0.c2, rt0.c2))) THEN rt1.c3 WHEN CAST(rt1.c4 AS BLOB) THEN NULL WHEN (((rt1.c0, rt1.c2, rt0.c0)) BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt0.c2, rt1.c1, rt1.c4))) THEN rt1.c0 END  NULLS FIRST, NULLIF((rt1.c2 IN (rt1.c5)), (+ (rt1.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'6031' COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN (((rt1.c1, rt1.c1, 0.3251169500581802, rt0.c3, rt1.c2))>=((rt0.c4, rt1.c1, rt1.c0, rt0.c2, rt0.c2))) THEN rt1.c3 WHEN CAST(rt1.c4 AS BLOB) THEN NULL WHEN (((rt1.c0, rt1.c2, rt0.c0)) BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt0.c2, rt1.c1, rt1.c4))) THEN rt1.c0 END  NULLS FIRST, NULLIF((rt1.c2 IN (rt1.c5)), (+ (rt1.c4)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (x'6031' COLLATE RTRIM) ORDER BY CASE WHEN (((rt1.c1, rt1.c1, 0.3251169500581802, rt0.c3, rt1.c2))>=((rt0.c4, rt1.c1, rt1.c0, rt0.c2, rt0.c2))) THEN rt1.c3 WHEN CAST(rt1.c4 AS BLOB) THEN NULL WHEN (((rt1.c0, rt1.c2, rt0.c0)) BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt0.c2, rt1.c1, rt1.c4))) THEN rt1.c0 END  NULLS FIRST, NULLIF((rt1.c2 IN (rt1.c5)), (+ (rt1.c4)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0)) BETWEEN ((CASE rt1.c1  WHEN '-672931861' THEN 0.9868059777042335 ELSE rt1.c5 END)) AND ((CASE rt1.c5  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c5 END)))) ORDER BY (((((((('KCA凭')AND(NULL)))AND(rt1.c5)))AND(((rt1.c4) NOT NULL))))OR((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5))))), ((((rt1.c0) NOT BETWEEN ('0.6182323182527322') AND (vt0.c0)))|((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE rt1.c1  WHEN '-672931861' THEN 0.9868059777042335 ELSE rt1.c5 END)) AND ((CASE rt1.c5  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c5 END)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((('KCA凭')AND(NULL)))AND(rt1.c5)))AND(((rt1.c4) NOT NULL))))OR((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5))))), ((((rt1.c0) NOT BETWEEN ('0.6182323182527322') AND (vt0.c0)))|((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0)) BETWEEN ((CASE rt1.c1  WHEN '-672931861' THEN 0.9868059777042335 ELSE rt1.c5 END)) AND ((CASE rt1.c5  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c5 END)))) ORDER BY (((((((('KCA凭')AND(NULL)))AND(rt1.c5)))AND(((rt1.c4) NOT NULL))))OR((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5))))), ((((rt1.c0) NOT BETWEEN ('0.6182323182527322') AND (vt0.c0)))|((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE rt1.c1  WHEN '-672931861' THEN 0.9868059777042335 ELSE rt1.c5 END)) AND ((CASE rt1.c5  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c5 END)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((('KCA凭')AND(NULL)))AND(rt1.c5)))AND(((rt1.c4) NOT NULL))))OR((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5))))), ((((rt1.c0) NOT BETWEEN ('0.6182323182527322') AND (vt0.c0)))|((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0)) BETWEEN ((CASE rt1.c1  WHEN '-672931861' THEN 0.9868059777042335 ELSE rt1.c5 END)) AND ((CASE rt1.c5  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c5 END)))) ORDER BY (((((((('KCA凭')AND(NULL)))AND(rt1.c5)))AND(((rt1.c4) NOT NULL))))OR((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5))))), ((((rt1.c0) NOT BETWEEN ('0.6182323182527322') AND (vt0.c0)))|((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, x'd59e', vt0.c0)) BETWEEN (((~ (vt0.c0)), CASE vt0.c0  WHEN 0.8459320912758832 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) NOT NULL), (vt0.c0 IN (vt0.c0)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, x'd59e', vt0.c0)) BETWEEN (((~ (vt0.c0)), CASE vt0.c0  WHEN 0.8459320912758832 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) NOT NULL), (vt0.c0 IN (vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, x'd59e', vt0.c0)) BETWEEN (((~ (vt0.c0)), CASE vt0.c0  WHEN 0.8459320912758832 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) NOT NULL), (vt0.c0 IN (vt0.c0)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, x'd59e', vt0.c0)) BETWEEN (((~ (vt0.c0)), CASE vt0.c0  WHEN 0.8459320912758832 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) NOT NULL), (vt0.c0 IN (vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, x'd59e', vt0.c0)) BETWEEN (((~ (vt0.c0)), CASE vt0.c0  WHEN 0.8459320912758832 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) NOT NULL), (vt0.c0 IN (vt0.c0)), vt0.c0))));
SELECT ALL * FROM rt1 WHERE (CASE rt1.c5 COLLATE BINARY  WHEN rt1.c3 COLLATE BINARY THEN CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c5 END WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN ((rt1.c5)+(rt1.c3)) WHEN ((((rt1.c2)OR(rt1.c0)))AND(x'')) THEN rt1.c0 COLLATE BINARY ELSE rt1.c2 END) ORDER BY (~ (rt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c5 COLLATE BINARY  WHEN rt1.c3 COLLATE BINARY THEN CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c5 END WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN ((rt1.c5)+(rt1.c3)) WHEN ((((rt1.c2)OR(rt1.c0)))AND(x'')) THEN rt1.c0 COLLATE BINARY ELSE rt1.c2 END) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c0)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CASE rt1.c5 COLLATE BINARY  WHEN rt1.c3 COLLATE BINARY THEN CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c5 END WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN ((rt1.c5)+(rt1.c3)) WHEN ((((rt1.c2)OR(rt1.c0)))AND(x'')) THEN rt1.c0 COLLATE BINARY ELSE rt1.c2 END) ORDER BY (~ (rt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c5 COLLATE BINARY  WHEN rt1.c3 COLLATE BINARY THEN CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c5 END WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN ((rt1.c5)+(rt1.c3)) WHEN ((((rt1.c2)OR(rt1.c0)))AND(x'')) THEN rt1.c0 COLLATE BINARY ELSE rt1.c2 END) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c0)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CASE rt1.c5 COLLATE BINARY  WHEN rt1.c3 COLLATE BINARY THEN CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c5 END WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN ((rt1.c5)+(rt1.c3)) WHEN ((((rt1.c2)OR(rt1.c0)))AND(x'')) THEN rt1.c0 COLLATE BINARY ELSE rt1.c2 END) ORDER BY (~ (rt1.c0)) ASC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (((NOT (rt1.c4)) IN ())) ORDER BY 0.8689989245045399  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c4)) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.8689989245045399  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (((NOT (rt1.c4)) IN ())) ORDER BY 0.8689989245045399  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c4)) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.8689989245045399  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (((NOT (rt1.c4)) IN ())) ORDER BY 0.8689989245045399  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (- (((rt0.c3)IS NOT(vt0.c0)))) WHERE ((((vt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c4)*(vt0.c0)), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((rt0.c2)>('')), CASE WHEN rt0.c2 THEN rt0.c2 END, (((NULL)) BETWEEN ((x'')) AND ((0.47066311688763496)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c4)*(vt0.c0)), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((rt0.c2)>('')), CASE WHEN rt0.c2 THEN rt0.c2 END, (((NULL)) BETWEEN ((x'')) AND ((0.47066311688763496))))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- (((rt0.c3)IS NOT(vt0.c0)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (- (((rt0.c3)IS NOT(vt0.c0)))) WHERE ((((vt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c4)*(vt0.c0)), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((rt0.c2)>('')), CASE WHEN rt0.c2 THEN rt0.c2 END, (((NULL)) BETWEEN ((x'')) AND ((0.47066311688763496)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c4)*(vt0.c0)), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((rt0.c2)>('')), CASE WHEN rt0.c2 THEN rt0.c2 END, (((NULL)) BETWEEN ((x'')) AND ((0.47066311688763496))))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- (((rt0.c3)IS NOT(vt0.c0)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (- (((rt0.c3)IS NOT(vt0.c0)))) WHERE ((((vt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c4)*(vt0.c0)), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) AND ((((rt0.c2)>('')), CASE WHEN rt0.c2 THEN rt0.c2 END, (((NULL)) BETWEEN ((x'')) AND ((0.47066311688763496)))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (~ (((0.757387988121718) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) FULL OUTER JOIN rt1 ON rt0.c3 WHERE ((((rt0.c3)) BETWEEN ((IFNULL(DISTINCT rt1.c3, vt0.c0))) AND ((((rt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((IFNULL(DISTINCT rt1.c3, vt0.c0))) AND ((((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (~ (((0.757387988121718) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) FULL OUTER JOIN rt1 ON rt0.c3);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (~ (((0.757387988121718) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) FULL OUTER JOIN rt1 ON rt0.c3 WHERE ((((rt0.c3)) BETWEEN ((IFNULL(DISTINCT rt1.c3, vt0.c0))) AND ((((rt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((IFNULL(DISTINCT rt1.c3, vt0.c0))) AND ((((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (~ (((0.757387988121718) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) FULL OUTER JOIN rt1 ON rt0.c3);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c2) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c2) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c2) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (json_object((((rt1.c4, rt1.c1, vt0.c0)) BETWEEN ((vt0.c0, rt0.c1, '1830654683')) AND ((rt0.c1, rt0.c1, x''))), (((rt0.c2))=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_object((((rt1.c4, rt1.c1, vt0.c0)) BETWEEN ((vt0.c0, rt0.c1, '1830654683')) AND ((rt0.c1, rt0.c1, x''))), (((rt0.c2))=((vt0.c0))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (json_object((((rt1.c4, rt1.c1, vt0.c0)) BETWEEN ((vt0.c0, rt0.c1, '1830654683')) AND ((rt0.c1, rt0.c1, x''))), (((rt0.c2))=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_object((((rt1.c4, rt1.c1, vt0.c0)) BETWEEN ((vt0.c0, rt0.c1, '1830654683')) AND ((rt0.c1, rt0.c1, x''))), (((rt0.c2))=((vt0.c0))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (json_object((((rt1.c4, rt1.c1, vt0.c0)) BETWEEN ((vt0.c0, rt0.c1, '1830654683')) AND ((rt0.c1, rt0.c1, x''))), (((rt0.c2))=((vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt1.c3)/(rt1.c0))) BETWEEN ((~ (rt0.c0))) AND (((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c0)))) INNER JOIN rt1 ON ((((((rt1.c2))<((rt1.c1)))))<=(((((rt0.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0)))))) WHERE (((rt1.c3 COLLATE RTRIM)*((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE RTRIM)*((- (rt1.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt1.c3)/(rt1.c0))) BETWEEN ((~ (rt0.c0))) AND (((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c0)))) INNER JOIN rt1 ON ((((((rt1.c2))<((rt1.c1)))))<=(((((rt0.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0)))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt1.c3)/(rt1.c0))) BETWEEN ((~ (rt0.c0))) AND (((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c0)))) INNER JOIN rt1 ON ((((((rt1.c2))<((rt1.c1)))))<=(((((rt0.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0)))))) WHERE (((rt1.c3 COLLATE RTRIM)*((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE RTRIM)*((- (rt1.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt1.c3)/(rt1.c0))) BETWEEN ((~ (rt0.c0))) AND (((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c0)))) INNER JOIN rt1 ON ((((((rt1.c2))<((rt1.c1)))))<=(((((rt0.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0)))))));
SELECT * FROM vt0, rt1 WHERE ((+ (CAST(rt1.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((+ (CAST(rt1.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((+ (CAST(rt1.c3 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (+ (CAST(rt1.c3 AS BLOB))) WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (+ (CAST(rt1.c3 AS BLOB))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (+ (CAST(rt1.c3 AS BLOB))) WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (+ (CAST(rt1.c3 AS BLOB))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (+ (CAST(rt1.c3 AS BLOB))) WHERE (rt1.c5);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CAST('(i' AS REAL)) IS FALSE)) ORDER BY CASE WHEN SQLITE_SOURCE_ID() THEN ((rt1.c2) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ((((CAST('(i' AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN SQLITE_SOURCE_ID() THEN ((rt1.c2) IS FALSE) END);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CAST('(i' AS REAL)) IS FALSE)) ORDER BY CASE WHEN SQLITE_SOURCE_ID() THEN ((rt1.c2) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ((((CAST('(i' AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN SQLITE_SOURCE_ID() THEN ((rt1.c2) IS FALSE) END);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CAST('(i' AS REAL)) IS FALSE)) ORDER BY CASE WHEN SQLITE_SOURCE_ID() THEN ((rt1.c2) IS FALSE) END;
SELECT ALL * FROM rt1, vt0 WHERE (0.6610750404064838) ORDER BY json_type((((rt1.c0, rt1.c1, rt1.c4)) BETWEEN ((rt1.c3, rt1.c4, rt1.c1)) AND ((rt1.c4, x'', rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((0.6610750404064838) IS TRUE)  as count FROM rt1, vt0 ORDER BY json_type((((rt1.c0, rt1.c1, rt1.c4)) BETWEEN ((rt1.c3, rt1.c4, rt1.c1)) AND ((rt1.c4, x'', rt1.c2)))));
SELECT ALL * FROM rt1, vt0 WHERE (0.6610750404064838) ORDER BY json_type((((rt1.c0, rt1.c1, rt1.c4)) BETWEEN ((rt1.c3, rt1.c4, rt1.c1)) AND ((rt1.c4, x'', rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((0.6610750404064838) IS TRUE)  as count FROM rt1, vt0 ORDER BY json_type((((rt1.c0, rt1.c1, rt1.c4)) BETWEEN ((rt1.c3, rt1.c4, rt1.c1)) AND ((rt1.c4, x'', rt1.c2)))));
SELECT ALL * FROM rt1, vt0 WHERE (0.6610750404064838) ORDER BY json_type((((rt1.c0, rt1.c1, rt1.c4)) BETWEEN ((rt1.c3, rt1.c4, rt1.c1)) AND ((rt1.c4, x'', rt1.c2))));
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c3) ORDER BY TYPEOF(DISTINCT ((((((((((((rt1.c1)AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0, rt1 ORDER BY TYPEOF(DISTINCT ((((((((((((rt1.c1)AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c0))));
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c3) ORDER BY TYPEOF(DISTINCT ((((((((((((rt1.c1)AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0, rt1 ORDER BY TYPEOF(DISTINCT ((((((((((((rt1.c1)AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c0))));
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c3) ORDER BY TYPEOF(DISTINCT ((((((((((((rt1.c1)AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) ISNULL) WHERE (((rt1.c0)-(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)-(rt1.c0))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) ISNULL));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) ISNULL) WHERE (((rt1.c0)-(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)-(rt1.c0))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) ISNULL));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2 COLLATE BINARY) ISNULL) WHERE (((rt1.c0)-(rt1.c0)));
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt0.c0)IS NOT(rt1.c4)) IN (((rt0.c4) IS TRUE), (+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)IS NOT(rt1.c4)) IN (((rt0.c4) IS TRUE), (+ (rt0.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt0.c0)IS NOT(rt1.c4)) IN (((rt0.c4) IS TRUE), (+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)IS NOT(rt1.c4)) IN (((rt0.c4) IS TRUE), (+ (rt0.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt0.c0)IS NOT(rt1.c4)) IN (((rt0.c4) IS TRUE), (+ (rt0.c1)))));
SELECT * FROM rt1 WHERE (((((rt1.c3)AND(rt1.c2)))|((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)AND(rt1.c2)))|((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c3)AND(rt1.c2)))|((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)AND(rt1.c2)))|((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c3)AND(rt1.c2)))|((rt1.c4 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((rt1.c0)OR(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0)OR(rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((rt1.c0)OR(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0)OR(rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((rt1.c0)OR(rt1.c4)))));
SELECT * FROM rt0, rt1 WHERE (((rt1.c1 COLLATE RTRIM)-((((NULL, rt0.c1, rt1.c0)) NOT BETWEEN ((rt1.c4, rt0.c4, x'')) AND ((rt1.c3, rt1.c3, rt0.c2)))))) ORDER BY COALESCE(DISTINCT (((rt1.c5, rt1.c3, rt0.c3))<=((rt1.c4, rt1.c3, rt1.c0))), rt1.c5) DESC  NULLS FIRST, (((rt0.c4 IN ())) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM)-((((NULL, rt0.c1, rt1.c0)) NOT BETWEEN ((rt1.c4, rt0.c4, x'')) AND ((rt1.c3, rt1.c3, rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY COALESCE(DISTINCT (((rt1.c5, rt1.c3, rt0.c3))<=((rt1.c4, rt1.c3, rt1.c0))), rt1.c5) DESC  NULLS FIRST, (((rt0.c4 IN ())) IS FALSE)  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (((rt1.c1 COLLATE RTRIM)-((((NULL, rt0.c1, rt1.c0)) NOT BETWEEN ((rt1.c4, rt0.c4, x'')) AND ((rt1.c3, rt1.c3, rt0.c2)))))) ORDER BY COALESCE(DISTINCT (((rt1.c5, rt1.c3, rt0.c3))<=((rt1.c4, rt1.c3, rt1.c0))), rt1.c5) DESC  NULLS FIRST, (((rt0.c4 IN ())) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM)-((((NULL, rt0.c1, rt1.c0)) NOT BETWEEN ((rt1.c4, rt0.c4, x'')) AND ((rt1.c3, rt1.c3, rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY COALESCE(DISTINCT (((rt1.c5, rt1.c3, rt0.c3))<=((rt1.c4, rt1.c3, rt1.c0))), rt1.c5) DESC  NULLS FIRST, (((rt0.c4 IN ())) IS FALSE)  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (((rt1.c1 COLLATE RTRIM)-((((NULL, rt0.c1, rt1.c0)) NOT BETWEEN ((rt1.c4, rt0.c4, x'')) AND ((rt1.c3, rt1.c3, rt0.c2)))))) ORDER BY COALESCE(DISTINCT (((rt1.c5, rt1.c3, rt0.c3))<=((rt1.c4, rt1.c3, rt1.c0))), rt1.c5) DESC  NULLS FIRST, (((rt0.c4 IN ())) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE 0.31092433018668075 END, rt0.c4 COLLATE BINARY, (rt1.c5 IN (rt0.c0)), CAST(rt1.c3 AS TEXT), rt0.c2))>((rt0.c4 COLLATE BINARY, ((('qX')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))), CASE rt0.c4  WHEN rt1.c1 THEN rt0.c4 WHEN rt1.c5 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CAST(rt0.c2 AS NUMERIC))))) ORDER BY ((NULL)>(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c5 THEN NULL WHEN rt1.c1 THEN x'' WHEN 0.5888312270369063 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE 0.31092433018668075 END, rt0.c4 COLLATE BINARY, (rt1.c5 IN (rt0.c0)), CAST(rt1.c3 AS TEXT), rt0.c2))>((rt0.c4 COLLATE BINARY, ((('qX')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))), CASE rt0.c4  WHEN rt1.c1 THEN rt0.c4 WHEN rt1.c5 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((NULL)>(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c5 THEN NULL WHEN rt1.c1 THEN x'' WHEN 0.5888312270369063 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE 0.31092433018668075 END, rt0.c4 COLLATE BINARY, (rt1.c5 IN (rt0.c0)), CAST(rt1.c3 AS TEXT), rt0.c2))>((rt0.c4 COLLATE BINARY, ((('qX')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))), CASE rt0.c4  WHEN rt1.c1 THEN rt0.c4 WHEN rt1.c5 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CAST(rt0.c2 AS NUMERIC))))) ORDER BY ((NULL)>(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c5 THEN NULL WHEN rt1.c1 THEN x'' WHEN 0.5888312270369063 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE 0.31092433018668075 END, rt0.c4 COLLATE BINARY, (rt1.c5 IN (rt0.c0)), CAST(rt1.c3 AS TEXT), rt0.c2))>((rt0.c4 COLLATE BINARY, ((('qX')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))), CASE rt0.c4  WHEN rt1.c1 THEN rt0.c4 WHEN rt1.c5 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((NULL)>(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c5 THEN NULL WHEN rt1.c1 THEN x'' WHEN 0.5888312270369063 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE 0.31092433018668075 END, rt0.c4 COLLATE BINARY, (rt1.c5 IN (rt0.c0)), CAST(rt1.c3 AS TEXT), rt0.c2))>((rt0.c4 COLLATE BINARY, ((('qX')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))), CASE rt0.c4  WHEN rt1.c1 THEN rt0.c4 WHEN rt1.c5 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CAST(rt0.c2 AS NUMERIC))))) ORDER BY ((NULL)>(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c5 THEN NULL WHEN rt1.c1 THEN x'' WHEN 0.5888312270369063 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c2 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((((((x'')AND(rt1.c1)))OR(rt1.c4)))OR(vt0.c0)))OR(rt0.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(rt1.c1)))OR(rt1.c4)))OR(vt0.c0)))OR(rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((((((x'')AND(rt1.c1)))OR(rt1.c4)))OR(vt0.c0)))OR(rt0.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(rt1.c1)))OR(rt1.c4)))OR(vt0.c0)))OR(rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((((((x'')AND(rt1.c1)))OR(rt1.c4)))OR(vt0.c0)))OR(rt0.c4)) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c1) NOTNULL)))) ORDER BY ((rt0.c1) NOT NULL)  NULLS LAST, ((CAST(rt0.c4 AS NUMERIC)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT NULL)  NULLS LAST, ((CAST(rt0.c4 AS NUMERIC)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c1) NOTNULL)))) ORDER BY ((rt0.c1) NOT NULL)  NULLS LAST, ((CAST(rt0.c4 AS NUMERIC)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT NULL)  NULLS LAST, ((CAST(rt0.c4 AS NUMERIC)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c1) NOTNULL)))) ORDER BY ((rt0.c1) NOT NULL)  NULLS LAST, ((CAST(rt0.c4 AS NUMERIC)) ISNULL)  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE (((((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c5)))OR(rt1.c1)))OR(rt1.c4)))%(((((((((rt1.c3)OR('')))AND(0.6544370580860918)))AND(rt1.c2)))OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c5)))OR(rt1.c1)))OR(rt1.c4)))%(((((((((rt1.c3)OR('')))AND(0.6544370580860918)))AND(rt1.c2)))OR(rt1.c3))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c5)))OR(rt1.c1)))OR(rt1.c4)))%(((((((((rt1.c3)OR('')))AND(0.6544370580860918)))AND(rt1.c2)))OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c5)))OR(rt1.c1)))OR(rt1.c4)))%(((((((((rt1.c3)OR('')))AND(0.6544370580860918)))AND(rt1.c2)))OR(rt1.c3))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c5)))OR(rt1.c1)))OR(rt1.c4)))%(((((((((rt1.c3)OR('')))AND(0.6544370580860918)))AND(rt1.c2)))OR(rt1.c3)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))+(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))+(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))+(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))+(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))+(CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'' COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))AND((rt0.c3 IN ()))))AND(CAST(rt0.c4 AS REAL)))) ORDER BY (NOT (rt0.c4 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))AND((rt0.c3 IN ()))))AND(CAST(rt0.c4 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c4 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))AND((rt0.c3 IN ()))))AND(CAST(rt0.c4 AS REAL)))) ORDER BY (NOT (rt0.c4 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))AND((rt0.c3 IN ()))))AND(CAST(rt0.c4 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c4 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))AND((rt0.c3 IN ()))))AND(CAST(rt0.c4 AS REAL)))) ORDER BY (NOT (rt0.c4 COLLATE NOCASE));
SELECT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON (CAST(rt0.c4 AS INTEGER) IN ()) WHERE (LIKELIHOOD(DISTINCT (rt0.c2 IN ()), 0.1955941272072419));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (rt0.c2 IN ()), 0.1955941272072419)) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON (CAST(rt0.c4 AS INTEGER) IN ()));
SELECT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON (CAST(rt0.c4 AS INTEGER) IN ()) WHERE (LIKELIHOOD(DISTINCT (rt0.c2 IN ()), 0.1955941272072419));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (rt0.c2 IN ()), 0.1955941272072419)) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON (CAST(rt0.c4 AS INTEGER) IN ()));
SELECT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON (CAST(rt0.c4 AS INTEGER) IN ()) WHERE (LIKELIHOOD(DISTINCT (rt0.c2 IN ()), 0.1955941272072419));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))<((vt0.c0)))) ORDER BY ((vt0.c0 COLLATE BINARY)!=((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))<((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)<>((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))<((vt0.c0)))) ORDER BY ((vt0.c0 COLLATE BINARY)!=((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))<((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)<>((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))<((vt0.c0)))) ORDER BY ((vt0.c0 COLLATE BINARY)!=((vt0.c0 IN ())));
SELECT * FROM rt1, rt0 FULL OUTER JOIN vt0 ON ((UPPER(vt0.c0))%((rt1.c5 IN ()))) WHERE (NULLIF(DISTINCT CAST(vt0.c0 AS REAL), NULL)) ORDER BY (NULL IN (((rt1.c2)%(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CAST(vt0.c0 AS REAL), NULL)) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt0 ON ((UPPER(vt0.c0))%((rt1.c5 IN ()))) ORDER BY (NULL IN (((rt1.c2)%(rt1.c1)))) ASC);
SELECT * FROM rt1, rt0 FULL OUTER JOIN vt0 ON ((UPPER(vt0.c0))%((rt1.c5 IN ()))) WHERE (NULLIF(DISTINCT CAST(vt0.c0 AS REAL), NULL)) ORDER BY (NULL IN (((rt1.c2)%(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CAST(vt0.c0 AS REAL), NULL)) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt0 ON ((UPPER(vt0.c0))%((rt1.c5 IN ()))) ORDER BY (NULL IN (((rt1.c2)%(rt1.c1)))) ASC);
SELECT * FROM rt1, rt0 FULL OUTER JOIN vt0 ON ((UPPER(vt0.c0))%((rt1.c5 IN ()))) WHERE (NULLIF(DISTINCT CAST(vt0.c0 AS REAL), NULL)) ORDER BY (NULL IN (((rt1.c2)%(rt1.c1)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c3 AS BLOB)))) ORDER BY (((((((((((((((rt0.c3, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c4))))AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))))AND((NOT (rt0.c0)))))OR(((rt0.c1) NOT NULL))))AND((rt0.c4 IN ()))))AND(((rt0.c3)|(rt0.c2)))))OR(rt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((((((rt0.c3, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c4))))AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))))AND((NOT (rt0.c0)))))OR(((rt0.c1) NOT NULL))))AND((rt0.c4 IN ()))))AND(((rt0.c3)|(rt0.c2)))))OR(rt0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c3 AS BLOB)))) ORDER BY (((((((((((((((rt0.c3, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c4))))AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))))AND((NOT (rt0.c0)))))OR(((rt0.c1) NOT NULL))))AND((rt0.c4 IN ()))))AND(((rt0.c3)|(rt0.c2)))))OR(rt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((((((rt0.c3, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c4))))AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))))AND((NOT (rt0.c0)))))OR(((rt0.c1) NOT NULL))))AND((rt0.c4 IN ()))))AND(((rt0.c3)|(rt0.c2)))))OR(rt0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c3 AS BLOB)))) ORDER BY (((((((((((((((rt0.c3, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c4))))AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))))AND((NOT (rt0.c0)))))OR(((rt0.c1) NOT NULL))))AND((rt0.c4 IN ()))))AND(((rt0.c3)|(rt0.c2)))))OR(rt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT * FROM rt0 WHERE ((((+ (rt0.c3)))&((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))&((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c3)))&((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))&((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c3)))&((+ (rt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ((NULL) IS FALSE)  WHEN ((rt0.c4) NOTNULL) THEN (~ (rt0.c2)) END) ORDER BY (((- (rt0.c1))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) IS FALSE)  WHEN ((rt0.c4) NOTNULL) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((- (rt0.c1))) ISNULL) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ((NULL) IS FALSE)  WHEN ((rt0.c4) NOTNULL) THEN (~ (rt0.c2)) END) ORDER BY (((- (rt0.c1))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) IS FALSE)  WHEN ((rt0.c4) NOTNULL) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((- (rt0.c1))) ISNULL) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ((NULL) IS FALSE)  WHEN ((rt0.c4) NOTNULL) THEN (~ (rt0.c2)) END) ORDER BY (((- (rt0.c1))) ISNULL) ASC;
SELECT * FROM rt1, vt0, rt0 WHERE ('1076184091') ORDER BY UNLIKELY(CAST(rt1.c0 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1076184091') IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY UNLIKELY(CAST(rt1.c0 AS NUMERIC)) DESC);
SELECT * FROM rt1, vt0, rt0 WHERE ('1076184091') ORDER BY UNLIKELY(CAST(rt1.c0 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1076184091') IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY UNLIKELY(CAST(rt1.c0 AS NUMERIC)) DESC);
SELECT * FROM rt1, vt0, rt0 WHERE ('1076184091') ORDER BY UNLIKELY(CAST(rt1.c0 AS NUMERIC)) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c0)) BETWEEN ((+ (vt0.c0))) AND ('Q化'))) ORDER BY (vt0.c0 IN ()), (((CAST(vt0.c0 AS TEXT)))>(('8c5훿읢'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt0.c0)) BETWEEN ((+ (vt0.c0))) AND ('Q化'))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()), (((CAST(vt0.c0 AS TEXT)))>(('8c5훿읢'))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c0)) BETWEEN ((+ (vt0.c0))) AND ('Q化'))) ORDER BY (vt0.c0 IN ()), (((CAST(vt0.c0 AS TEXT)))>(('8c5훿읢'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt0.c0)) BETWEEN ((+ (vt0.c0))) AND ('Q化'))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()), (((CAST(vt0.c0 AS TEXT)))>(('8c5훿읢'))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c0)) BETWEEN ((+ (vt0.c0))) AND ('Q化'))) ORDER BY (vt0.c0 IN ()), (((CAST(vt0.c0 AS TEXT)))>(('8c5훿읢'))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('-897804812')OR(vt0.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c4))) AND (json_array_length(rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-897804812')OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c4))) AND (json_array_length(rt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('-897804812')OR(vt0.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c4))) AND (json_array_length(rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-897804812')OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c4))) AND (json_array_length(rt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('-897804812')OR(vt0.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c4))) AND (json_array_length(rt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)) COLLATE NOCASE COLLATE BINARY) ORDER BY (NOT (((rt0.c2)<<(rt0.c0)))) ASC  NULLS FIRST, (((0Xffffffff8a8765c3, 0.7967591457204236, NULL)) NOT BETWEEN (((rt1.c0 IN (rt0.c1)), ((rt0.c1)<(rt1.c5)), rt0.c4 COLLATE BINARY)) AND ((ABS(rt1.c4), ((rt1.c1)>>(rt1.c0)), (- (rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (NOT (((rt0.c2)<<(rt0.c0)))) ASC  NULLS FIRST, (((0Xffffffff8a8765c3, 0.7967591457204236, NULL)) NOT BETWEEN (((rt1.c0 IN (rt0.c1)), ((rt0.c1)<(rt1.c5)), rt0.c4 COLLATE BINARY)) AND ((ABS(rt1.c4), ((rt1.c1)>>(rt1.c0)), (- (rt1.c1))))) ASC);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)) COLLATE NOCASE COLLATE BINARY) ORDER BY (NOT (((rt0.c2)<<(rt0.c0)))) ASC  NULLS FIRST, (((0Xffffffff8a8765c3, 0.7967591457204236, NULL)) NOT BETWEEN (((rt1.c0 IN (rt0.c1)), ((rt0.c1)<(rt1.c5)), rt0.c4 COLLATE BINARY)) AND ((ABS(rt1.c4), ((rt1.c1)>>(rt1.c0)), (- (rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (NOT (((rt0.c2)<<(rt0.c0)))) ASC  NULLS FIRST, (((0Xffffffff8a8765c3, 0.7967591457204236, NULL)) NOT BETWEEN (((rt1.c0 IN (rt0.c1)), ((rt0.c1)<(rt1.c5)), rt0.c4 COLLATE BINARY)) AND ((ABS(rt1.c4), ((rt1.c1)>>(rt1.c0)), (- (rt1.c1))))) ASC);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)) COLLATE NOCASE COLLATE BINARY) ORDER BY (NOT (((rt0.c2)<<(rt0.c0)))) ASC  NULLS FIRST, (((0Xffffffff8a8765c3, 0.7967591457204236, NULL)) NOT BETWEEN (((rt1.c0 IN (rt0.c1)), ((rt0.c1)<(rt1.c5)), rt0.c4 COLLATE BINARY)) AND ((ABS(rt1.c4), ((rt1.c1)>>(rt1.c0)), (- (rt1.c1))))) ASC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN '99044424' THEN '1425323541' WHEN rt0.c0 THEN 0xffffffffd6622ad3 WHEN rt0.c1 THEN 'v>' ELSE rt0.c1 END)==(((rt0.c3)=(rt0.c3)))) WHERE (CASE WHEN ((rt0.c3)<=(x'')) THEN rt0.c4 COLLATE RTRIM WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c1)>(rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 WHEN ((rt0.c0) IS TRUE) THEN vt0.c0 COLLATE NOCASE WHEN (((rt0.c0))>((rt0.c2))) THEN CAST(rt0.c1 AS REAL) ELSE ((rt0.c0)<=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)<=(x'')) THEN rt0.c4 COLLATE RTRIM WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c1)>(rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 WHEN ((rt0.c0) IS TRUE) THEN vt0.c0 COLLATE NOCASE WHEN (((rt0.c0))>((rt0.c2))) THEN CAST(rt0.c1 AS REAL) ELSE ((rt0.c0)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN '99044424' THEN '1425323541' WHEN rt0.c0 THEN 0xffffffffd6622ad3 WHEN rt0.c1 THEN 'v>' ELSE rt0.c1 END)=(((rt0.c3)==(rt0.c3)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN '99044424' THEN '1425323541' WHEN rt0.c0 THEN 0xffffffffd6622ad3 WHEN rt0.c1 THEN 'v>' ELSE rt0.c1 END)==(((rt0.c3)=(rt0.c3)))) WHERE (CASE WHEN ((rt0.c3)<=(x'')) THEN rt0.c4 COLLATE RTRIM WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c1)>(rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 WHEN ((rt0.c0) IS TRUE) THEN vt0.c0 COLLATE NOCASE WHEN (((rt0.c0))>((rt0.c2))) THEN CAST(rt0.c1 AS REAL) ELSE ((rt0.c0)<=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)<=(x'')) THEN rt0.c4 COLLATE RTRIM WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c1)>(rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 WHEN ((rt0.c0) IS TRUE) THEN vt0.c0 COLLATE NOCASE WHEN (((rt0.c0))>((rt0.c2))) THEN CAST(rt0.c1 AS REAL) ELSE ((rt0.c0)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN '99044424' THEN '1425323541' WHEN rt0.c0 THEN 0xffffffffd6622ad3 WHEN rt0.c1 THEN 'v>' ELSE rt0.c1 END)=(((rt0.c3)==(rt0.c3)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c1  WHEN '99044424' THEN '1425323541' WHEN rt0.c0 THEN 0xffffffffd6622ad3 WHEN rt0.c1 THEN 'v>' ELSE rt0.c1 END)==(((rt0.c3)=(rt0.c3)))) WHERE (CASE WHEN ((rt0.c3)<=(x'')) THEN rt0.c4 COLLATE RTRIM WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c1)>(rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 WHEN ((rt0.c0) IS TRUE) THEN vt0.c0 COLLATE NOCASE WHEN (((rt0.c0))>((rt0.c2))) THEN CAST(rt0.c1 AS REAL) ELSE ((rt0.c0)<=(rt0.c2)) END);
SELECT * FROM rt0, rt1, vt0 WHERE ((~ (((rt1.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE ((~ (((rt1.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE ((~ (((rt1.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((((rt0.c0)==(rt1.c5)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)=(rt1.c5)) IN ())) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((((rt0.c0)==(rt1.c5)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)=(rt1.c5)) IN ())) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((((rt0.c0)==(rt1.c5)) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('1532724033') ORDER BY rt0.c1  NULLS FIRST, CASE (rt0.c2 IN (rt0.c3, rt0.c3))  WHEN rt0.c2 THEN ((0.7044809275442565) NOT NULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1532724033') IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1  NULLS FIRST, CASE (rt0.c2 IN (rt0.c3, rt0.c3))  WHEN rt0.c2 THEN ((0.7044809275442565) NOT NULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('1532724033') ORDER BY rt0.c1  NULLS FIRST, CASE (rt0.c2 IN (rt0.c3, rt0.c3))  WHEN rt0.c2 THEN ((0.7044809275442565) NOT NULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1532724033') IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1  NULLS FIRST, CASE (rt0.c2 IN (rt0.c3, rt0.c3))  WHEN rt0.c2 THEN ((0.7044809275442565) NOT NULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('1532724033') ORDER BY rt0.c1  NULLS FIRST, CASE (rt0.c2 IN (rt0.c3, rt0.c3))  WHEN rt0.c2 THEN ((0.7044809275442565) NOT NULL) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((('610780414' IN (rt0.c1)))>(((rt0.c4) NOT BETWEEN (rt1.c3) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((('610780414' IN (rt0.c1)))>(((rt0.c4) NOT BETWEEN (rt1.c3) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((('610780414' IN (rt0.c1)))>(((rt0.c4) NOT BETWEEN (rt1.c3) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((('610780414' IN (rt0.c1)))>(((rt0.c4) NOT BETWEEN (rt1.c3) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((('610780414' IN (rt0.c1)))>(((rt0.c4) NOT BETWEEN (rt1.c3) AND (rt0.c3)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE BINARY) ORDER BY (NOT (rt0.c0)) DESC  NULLS FIRST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c0)) DESC  NULLS FIRST, rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE BINARY) ORDER BY (NOT (rt0.c0)) DESC  NULLS FIRST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c0)) DESC  NULLS FIRST, rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE BINARY) ORDER BY (NOT (rt0.c0)) DESC  NULLS FIRST, rt0.c2 DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (('|f' IN ()));
SELECT SUM(count) FROM (SELECT ((('|f' IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (('|f' IN ()));
SELECT SUM(count) FROM (SELECT ((('|f' IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (('|f' IN ()));
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (rt1.c0) ORDER BY ((rt0.c3) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((rt0.c3) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (rt1.c0) ORDER BY ((rt0.c3) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((rt0.c3) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (rt1.c0) ORDER BY ((rt0.c3) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM rt1 CROSS JOIN rt0 ON rt1.c0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 IN (rt1.c1, '953428963'))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c4)/(rt1.c0)))) WHERE ((((rt0.c4)>(rt1.c4)) IN ())) ORDER BY ((vt0.c0)<=(rt1.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((rt0.c4)>(rt1.c4)) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON rt1.c0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 IN (rt1.c1, '953428963'))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c4)/(rt1.c0)))) ORDER BY ((vt0.c0)<=(rt1.c1)) COLLATE RTRIM);
SELECT * FROM rt1 CROSS JOIN rt0 ON rt1.c0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 IN (rt1.c1, '953428963'))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c4)/(rt1.c0)))) WHERE ((((rt0.c4)>(rt1.c4)) IN ())) ORDER BY ((vt0.c0)<=(rt1.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((rt0.c4)>(rt1.c4)) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON rt1.c0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 IN (rt1.c1, '953428963'))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c4)/(rt1.c0)))) ORDER BY ((vt0.c0)<=(rt1.c1)) COLLATE RTRIM);
SELECT * FROM rt1 CROSS JOIN rt0 ON rt1.c0 RIGHT OUTER JOIN vt0 ON (((rt0.c2 IN (rt1.c1, '953428963'))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c4)/(rt1.c0)))) WHERE ((((rt0.c4)>(rt1.c4)) IN ())) ORDER BY ((vt0.c0)<=(rt1.c1)) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((rt1.c5) IS TRUE)) IS FALSE) CROSS JOIN rt1 ON CAST(('' IN ()) AS REAL) WHERE (CAST(CASE 0.4727847181596829  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY CAST((rt1.c1 IN (rt0.c4)) AS NUMERIC) ASC  NULLS FIRST, CAST(rt0.c3 AS INTEGER)  NULLS FIRST, ((((((((rt1.c3)AND(rt1.c1)))OR(rt0.c1)))AND(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c2 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE 0.4727847181596829  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt1.c5) IS TRUE)) IS FALSE) CROSS JOIN rt1 ON CAST(('' IN ()) AS REAL) ORDER BY CAST((rt1.c1 IN (rt0.c4)) AS NUMERIC) ASC  NULLS FIRST, CAST(rt0.c3 AS INTEGER)  NULLS FIRST, ((((((((rt1.c3)AND(rt1.c1)))OR(rt0.c1)))AND(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c2 AS REAL))) ASC);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((rt1.c5) IS TRUE)) IS FALSE) CROSS JOIN rt1 ON CAST(('' IN ()) AS REAL) WHERE (CAST(CASE 0.4727847181596829  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY CAST((rt1.c1 IN (rt0.c4)) AS NUMERIC) ASC  NULLS FIRST, CAST(rt0.c3 AS INTEGER)  NULLS FIRST, ((((((((rt1.c3)AND(rt1.c1)))OR(rt0.c1)))AND(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c2 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE 0.4727847181596829  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt1.c5) IS TRUE)) IS FALSE) CROSS JOIN rt1 ON CAST(('' IN ()) AS REAL) ORDER BY CAST((rt1.c1 IN (rt0.c4)) AS NUMERIC) ASC  NULLS FIRST, CAST(rt0.c3 AS INTEGER)  NULLS FIRST, ((((((((rt1.c3)AND(rt1.c1)))OR(rt0.c1)))AND(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c2 AS REAL))) ASC);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((rt1.c5) IS TRUE)) IS FALSE) CROSS JOIN rt1 ON CAST(('' IN ()) AS REAL) WHERE (CAST(CASE 0.4727847181596829  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY CAST((rt1.c1 IN (rt0.c4)) AS NUMERIC) ASC  NULLS FIRST, CAST(rt0.c3 AS INTEGER)  NULLS FIRST, ((((((((rt1.c3)AND(rt1.c1)))OR(rt0.c1)))AND(rt0.c2 COLLATE RTRIM)))OR(CAST(rt0.c2 AS REAL))) ASC;
SELECT ALL * FROM rt1 WHERE (((rt1.c3 COLLATE NOCASE) BETWEEN (rt1.c2) AND ((((rt1.c3)) BETWEEN ((rt1.c5)) AND ((rt1.c5)))))) ORDER BY ((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (json_insert(rt1.c4, rt1.c0, '*Q', rt1.c5, '3뀧')) AND (((rt1.c4)<=(rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE) BETWEEN (rt1.c2) AND ((((rt1.c3)) BETWEEN ((rt1.c5)) AND ((rt1.c5)))))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (json_insert(rt1.c4, rt1.c0, '*Q', rt1.c5, '3뀧')) AND (((rt1.c4)<=(rt1.c3))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c3 COLLATE NOCASE) BETWEEN (rt1.c2) AND ((((rt1.c3)) BETWEEN ((rt1.c5)) AND ((rt1.c5)))))) ORDER BY ((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (json_insert(rt1.c4, rt1.c0, '*Q', rt1.c5, '3뀧')) AND (((rt1.c4)<=(rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE) BETWEEN (rt1.c2) AND ((((rt1.c3)) BETWEEN ((rt1.c5)) AND ((rt1.c5)))))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (json_insert(rt1.c4, rt1.c0, '*Q', rt1.c5, '3뀧')) AND (((rt1.c4)<=(rt1.c3))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c3 COLLATE NOCASE) BETWEEN (rt1.c2) AND ((((rt1.c3)) BETWEEN ((rt1.c5)) AND ((rt1.c5)))))) ORDER BY ((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (json_insert(rt1.c4, rt1.c0, '*Q', rt1.c5, '3뀧')) AND (((rt1.c4)<=(rt1.c3))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c2)AND((rt1.c4 IN ()))))OR(json_type(rt1.c4)))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c5)))<<(((rt1.c4)*(rt1.c1)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT CAST(rt1.c3 AS BLOB), 0.6060320883833386);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND((rt1.c4 IN ()))))OR(json_type(rt1.c4)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c5)))<<(((rt1.c4)*(rt1.c1)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT CAST(rt1.c3 AS BLOB), 0.6060320883833386));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2)AND((rt1.c4 IN ()))))OR(json_type(rt1.c4)))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c5)))<<(((rt1.c4)*(rt1.c1)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT CAST(rt1.c3 AS BLOB), 0.6060320883833386);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND((rt1.c4 IN ()))))OR(json_type(rt1.c4)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c5)))<<(((rt1.c4)*(rt1.c1)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT CAST(rt1.c3 AS BLOB), 0.6060320883833386));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2)AND((rt1.c4 IN ()))))OR(json_type(rt1.c4)))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c5)))<<(((rt1.c4)*(rt1.c1)))) DESC  NULLS FIRST, LIKELIHOOD(DISTINCT CAST(rt1.c3 AS BLOB), 0.6060320883833386);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- ((((rt1.c2))!=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c2))!=((vt0.c0)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- ((((rt1.c2))!=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c2))!=((vt0.c0)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- ((((rt1.c2))!=((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)LIKE(NULL)), (((vt0.c0))>((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))>((((((vt0.c0)OR(vt0.c0)))AND('')), CASE vt0.c0  WHEN vt0.c0 THEN '1562874674' ELSE vt0.c0 END, x''))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)LIKE(NULL)), (((vt0.c0))>((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))>((((((vt0.c0)OR(vt0.c0)))AND('')), CASE vt0.c0  WHEN vt0.c0 THEN '1562874674' ELSE vt0.c0 END, x'')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)LIKE(NULL)), (((vt0.c0))>((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))>((((((vt0.c0)OR(vt0.c0)))AND('')), CASE vt0.c0  WHEN vt0.c0 THEN '1562874674' ELSE vt0.c0 END, x''))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)LIKE(NULL)), (((vt0.c0))>((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))>((((((vt0.c0)OR(vt0.c0)))AND('')), CASE vt0.c0  WHEN vt0.c0 THEN '1562874674' ELSE vt0.c0 END, x'')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)LIKE(NULL)), (((vt0.c0))>((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))>((((((vt0.c0)OR(vt0.c0)))AND('')), CASE vt0.c0  WHEN vt0.c0 THEN '1562874674' ELSE vt0.c0 END, x''))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULLIF(vt0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULLIF(vt0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULLIF(vt0.c0, vt0.c0) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)|(x'95d4')) IN (load_extension(rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)|(x'95d4')) IN (load_extension(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)|(x'95d4')) IN (load_extension(rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)|(x'95d4')) IN (load_extension(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((rt1.c5) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c5) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((rt1.c5) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c5) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((rt1.c5) IS TRUE) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c2)&(x'7f4710a9'))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY CASE ((rt0.c2)|(x'8cdd'))  WHEN rt0.c0 THEN x'' ELSE (- (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1))) BETWEEN (((rt0.c2)&(x'7f4710a9'))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c2)|(x'8cdd'))  WHEN rt0.c0 THEN x'' ELSE (- (rt0.c2)) END DESC);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c2)&(x'7f4710a9'))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY CASE ((rt0.c2)|(x'8cdd'))  WHEN rt0.c0 THEN x'' ELSE (- (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1))) BETWEEN (((rt0.c2)&(x'7f4710a9'))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c2)|(x'8cdd'))  WHEN rt0.c0 THEN x'' ELSE (- (rt0.c2)) END DESC);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c2)&(x'7f4710a9'))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY CASE ((rt0.c2)|(x'8cdd'))  WHEN rt0.c0 THEN x'' ELSE (- (rt0.c2)) END DESC;
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((json_type('g{}yc\r%{%|J'))) AND ((TRIM(DISTINCT rt0.c3)))) CROSS JOIN rt0 ON UPPER(DISTINCT CASE WHEN rt0.c3 THEN rt1.c3 ELSE rt1.c1 END) WHERE ((NOT (DATETIME(rt0.c0, rt0.c4, rt1.c4))));
SELECT SUM(count) FROM (SELECT (((NOT (DATETIME(rt0.c0, rt0.c4, rt1.c4)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((json_type('g{}yc\r%{%|J'))) AND ((TRIM(DISTINCT rt0.c3)))) CROSS JOIN rt0 ON UPPER(DISTINCT CASE WHEN rt0.c3 THEN rt1.c3 ELSE rt1.c1 END));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((json_type('g{}yc\r%{%|J'))) AND ((TRIM(DISTINCT rt0.c3)))) CROSS JOIN rt0 ON UPPER(DISTINCT CASE WHEN rt0.c3 THEN rt1.c3 ELSE rt1.c1 END) WHERE ((NOT (DATETIME(rt0.c0, rt0.c4, rt1.c4))));
SELECT SUM(count) FROM (SELECT (((NOT (DATETIME(rt0.c0, rt0.c4, rt1.c4)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((json_type('g{}yc\r%{%|J'))) AND ((TRIM(DISTINCT rt0.c3)))) CROSS JOIN rt0 ON UPPER(DISTINCT CASE WHEN rt0.c3 THEN rt1.c3 ELSE rt1.c1 END));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((json_type('g{}yc\r%{%|J'))) AND ((TRIM(DISTINCT rt0.c3)))) CROSS JOIN rt0 ON UPPER(DISTINCT CASE WHEN rt0.c3 THEN rt1.c3 ELSE rt1.c1 END) WHERE ((NOT (DATETIME(rt0.c0, rt0.c4, rt1.c4))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c1 COLLATE BINARY)OR((rt1.c5 IN ()))))OR(((((rt1.c3)OR(rt1.c4)))AND(rt1.c1)))))AND(((rt1.c4) IS FALSE))))OR(highlight(rt1.c5, vt0.c0, rt1.c4, rt1.c5))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1 COLLATE BINARY)OR((rt1.c5 IN ()))))OR(((((rt1.c3)OR(rt1.c4)))AND(rt1.c1)))))AND(((rt1.c4) IS FALSE))))OR(highlight(rt1.c5, vt0.c0, rt1.c4, rt1.c5)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c1 COLLATE BINARY)OR((rt1.c5 IN ()))))OR(((((rt1.c3)OR(rt1.c4)))AND(rt1.c1)))))AND(((rt1.c4) IS FALSE))))OR(highlight(rt1.c5, vt0.c0, rt1.c4, rt1.c5))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1 COLLATE BINARY)OR((rt1.c5 IN ()))))OR(((((rt1.c3)OR(rt1.c4)))AND(rt1.c1)))))AND(((rt1.c4) IS FALSE))))OR(highlight(rt1.c5, vt0.c0, rt1.c4, rt1.c5)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c1 COLLATE BINARY)OR((rt1.c5 IN ()))))OR(((((rt1.c3)OR(rt1.c4)))AND(rt1.c1)))))AND(((rt1.c4) IS FALSE))))OR(highlight(rt1.c5, vt0.c0, rt1.c4, rt1.c5))));
SELECT * FROM rt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0);
SELECT * FROM rt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0);
SELECT * FROM rt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY ((rt1.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY ((rt1.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY ((rt1.c0) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (NULL) ORDER BY LOWER(((((x'')AND(NULL)))OR(rt1.c0))) ASC, CAST(IFNULL(rt1.c5, rt1.c4) AS REAL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt1 ORDER BY LOWER(((((x'')AND(NULL)))OR(rt1.c0))) ASC, CAST(IFNULL(rt1.c5, rt1.c4) AS REAL));
SELECT COUNT(*) FROM vt0, rt1 WHERE (NULL) ORDER BY LOWER(((((x'')AND(NULL)))OR(rt1.c0))) ASC, CAST(IFNULL(rt1.c5, rt1.c4) AS REAL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt1 ORDER BY LOWER(((((x'')AND(NULL)))OR(rt1.c0))) ASC, CAST(IFNULL(rt1.c5, rt1.c4) AS REAL));
SELECT COUNT(*) FROM vt0, rt1 WHERE (NULL) ORDER BY LOWER(((((x'')AND(NULL)))OR(rt1.c0))) ASC, CAST(IFNULL(rt1.c5, rt1.c4) AS REAL);
SELECT COUNT(*) FROM vt0, rt1 WHERE (TRIM(CASE WHEN rt1.c0 THEN rt1.c1 WHEN 0.40976481804252385 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c5 END)) ORDER BY ((rt1.c4)&(CASE WHEN rt1.c4 THEN rt1.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN rt1.c0 THEN rt1.c1 WHEN 0.40976481804252385 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c5 END)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c4)&(CASE WHEN rt1.c4 THEN rt1.c3 END)) ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (TRIM(CASE WHEN rt1.c0 THEN rt1.c1 WHEN 0.40976481804252385 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c5 END)) ORDER BY ((rt1.c4)&(CASE WHEN rt1.c4 THEN rt1.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN rt1.c0 THEN rt1.c1 WHEN 0.40976481804252385 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c5 END)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c4)&(CASE WHEN rt1.c4 THEN rt1.c3 END)) ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (TRIM(CASE WHEN rt1.c0 THEN rt1.c1 WHEN 0.40976481804252385 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c5 END)) ORDER BY ((rt1.c4)&(CASE WHEN rt1.c4 THEN rt1.c3 END)) ASC;
SELECT * FROM vt0 CROSS JOIN rt1 ON vt0.c0 WHERE (CAST(((0.8689989245045399) NOT NULL) AS REAL)) ORDER BY ((((CAST(x'' AS BLOB))OR((NOT (rt1.c3)))))AND((rt1.c0 IN ()))), (((vt0.c0 IN ())) NOT BETWEEN (((rt1.c5)IS(vt0.c0))) AND (((rt1.c3) BETWEEN (rt1.c3) AND (7.7002024E7)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((0.8689989245045399) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON vt0.c0 ORDER BY ((((CAST(x'' AS BLOB))OR((NOT (rt1.c3)))))AND((rt1.c0 IN ()))), (((vt0.c0 IN ())) NOT BETWEEN (((rt1.c5)IS(vt0.c0))) AND (((rt1.c3) BETWEEN (rt1.c3) AND (7.7002024E7)))) ASC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt1 ON vt0.c0 WHERE (CAST(((0.8689989245045399) NOT NULL) AS REAL)) ORDER BY ((((CAST(x'' AS BLOB))OR((NOT (rt1.c3)))))AND((rt1.c0 IN ()))), (((vt0.c0 IN ())) NOT BETWEEN (((rt1.c5)IS(vt0.c0))) AND (((rt1.c3) BETWEEN (rt1.c3) AND (7.7002024E7)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((0.8689989245045399) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON vt0.c0 ORDER BY ((((CAST(x'' AS BLOB))OR((NOT (rt1.c3)))))AND((rt1.c0 IN ()))), (((vt0.c0 IN ())) NOT BETWEEN (((rt1.c5)IS(vt0.c0))) AND (((rt1.c3) BETWEEN (rt1.c3) AND (7.7002024E7)))) ASC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (~ (((rt1.c2)OR(rt1.c2)))) RIGHT OUTER JOIN rt1 ON CASE rt1.c1  WHEN ((((rt0.c3)OR(rt1.c5)))OR(rt0.c1)) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c4)>>(rt0.c2)) THEN UPPER(rt1.c4) WHEN (- (rt1.c3)) THEN CAST(rt1.c3 AS NUMERIC) END WHERE (((NULL IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN ()) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (~ (((rt1.c2)OR(rt1.c2)))) RIGHT OUTER JOIN rt1 ON CASE rt1.c1  WHEN ((((rt0.c3)OR(rt1.c5)))OR(rt0.c1)) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c4)>>(rt0.c2)) THEN UPPER(rt1.c4) WHEN (- (rt1.c3)) THEN CAST(rt1.c3 AS NUMERIC) END);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (~ (((rt1.c2)OR(rt1.c2)))) RIGHT OUTER JOIN rt1 ON CASE rt1.c1  WHEN ((((rt0.c3)OR(rt1.c5)))OR(rt0.c1)) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c4)>>(rt0.c2)) THEN UPPER(rt1.c4) WHEN (- (rt1.c3)) THEN CAST(rt1.c3 AS NUMERIC) END WHERE (((NULL IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN ()) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (~ (((rt1.c2)OR(rt1.c2)))) RIGHT OUTER JOIN rt1 ON CASE rt1.c1  WHEN ((((rt0.c3)OR(rt1.c5)))OR(rt0.c1)) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c4)>>(rt0.c2)) THEN UPPER(rt1.c4) WHEN (- (rt1.c3)) THEN CAST(rt1.c3 AS NUMERIC) END);
SELECT ALL * FROM vt0 WHERE ('_齝U,pUc') ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>=('uyd')) ASC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))GLOB(((vt0.c0)||(vt0.c0))))  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (('_齝U,pUc') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>=('uyd')) ASC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))GLOB(((vt0.c0)||(vt0.c0))))  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 WHERE ('_齝U,pUc') ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>=('uyd')) ASC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))GLOB(((vt0.c0)||(vt0.c0))))  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (('_齝U,pUc') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>=('uyd')) ASC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))GLOB(((vt0.c0)||(vt0.c0))))  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 WHERE ('_齝U,pUc') ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>=('uyd')) ASC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))GLOB(((vt0.c0)||(vt0.c0))))  NULLS FIRST, (vt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS FALSE))LIKE(UPPER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))LIKE(UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS FALSE))LIKE(UPPER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))LIKE(UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS FALSE))LIKE(UPPER(DISTINCT rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c3 COLLATE NOCASE IN ())) ORDER BY SQLITE_COMPILEOPTION_USED(CAST(rt0.c0 AS REAL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_COMPILEOPTION_USED(CAST(rt0.c0 AS REAL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c3 COLLATE NOCASE IN ())) ORDER BY SQLITE_COMPILEOPTION_USED(CAST(rt0.c0 AS REAL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_COMPILEOPTION_USED(CAST(rt0.c0 AS REAL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c3 COLLATE NOCASE IN ())) ORDER BY SQLITE_COMPILEOPTION_USED(CAST(rt0.c0 AS REAL))  NULLS FIRST;
SELECT * FROM rt1 WHERE (HEX(rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((HEX(rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (HEX(rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((HEX(rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (HEX(rt1.c2 COLLATE NOCASE));
SELECT * FROM vt0, rt1 WHERE (((rt1.c2 COLLATE RTRIM)>=(CAST(rt1.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)>=(CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((rt1.c2 COLLATE RTRIM)>=(CAST(rt1.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)>=(CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((rt1.c2 COLLATE RTRIM)>=(CAST(rt1.c3 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) NOTNULL)))) ORDER BY ((('-aW', rt0.c4, rt0.c2)) NOT BETWEEN ((((rt0.c4)OR(rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 WHEN ')t' THEN rt0.c3 WHEN 4.30268276E8 THEN '' ELSE rt0.c1 END)) AND (((rt0.c3 IN (rt0.c2, rt0.c0)), (((rt0.c0)) BETWEEN (('')) AND ((rt0.c4))), (NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((('-aW', rt0.c4, rt0.c2)) NOT BETWEEN ((((rt0.c4)OR(rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 WHEN ')t' THEN rt0.c3 WHEN 4.30268276E8 THEN '' ELSE rt0.c1 END)) AND (((rt0.c3 IN (rt0.c2, rt0.c0)), (((rt0.c0)) BETWEEN (('')) AND ((rt0.c4))), (NOT (rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) NOTNULL)))) ORDER BY ((('-aW', rt0.c4, rt0.c2)) NOT BETWEEN ((((rt0.c4)OR(rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 WHEN ')t' THEN rt0.c3 WHEN 4.30268276E8 THEN '' ELSE rt0.c1 END)) AND (((rt0.c3 IN (rt0.c2, rt0.c0)), (((rt0.c0)) BETWEEN (('')) AND ((rt0.c4))), (NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((('-aW', rt0.c4, rt0.c2)) NOT BETWEEN ((((rt0.c4)OR(rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 WHEN ')t' THEN rt0.c3 WHEN 4.30268276E8 THEN '' ELSE rt0.c1 END)) AND (((rt0.c3 IN (rt0.c2, rt0.c0)), (((rt0.c0)) BETWEEN (('')) AND ((rt0.c4))), (NOT (rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) NOTNULL)))) ORDER BY ((('-aW', rt0.c4, rt0.c2)) NOT BETWEEN ((((rt0.c4)OR(rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c0 WHEN ')t' THEN rt0.c3 WHEN 4.30268276E8 THEN '' ELSE rt0.c1 END)) AND (((rt0.c3 IN (rt0.c2, rt0.c0)), (((rt0.c0)) BETWEEN (('')) AND ((rt0.c4))), (NOT (rt0.c1)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((rt1.c1 IN (rt1.c2)) COLLATE BINARY) ORDER BY rt1.c4  NULLS FIRST, ((((rt1.c1)AND(rt1.c5)))AND(rt1.c3)) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c4  NULLS FIRST, ((((rt1.c1)AND(rt1.c5)))AND(rt1.c3)) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((rt1.c1 IN (rt1.c2)) COLLATE BINARY) ORDER BY rt1.c4  NULLS FIRST, ((((rt1.c1)AND(rt1.c5)))AND(rt1.c3)) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c4  NULLS FIRST, ((((rt1.c1)AND(rt1.c5)))AND(rt1.c3)) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((rt1.c1 IN (rt1.c2)) COLLATE BINARY) ORDER BY rt1.c4  NULLS FIRST, ((((rt1.c1)AND(rt1.c5)))AND(rt1.c3)) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt1.c1 COLLATE NOCASE)|(((rt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE)|(((rt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt1.c1 COLLATE NOCASE)|(((rt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE)|(((rt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt1.c1 COLLATE NOCASE)|(((rt0.c0)<=(rt0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0 COLLATE BINARY))=((CAST(rt1.c3 AS BLOB)))) FULL OUTER JOIN vt0 ON CAST((x'' IN ()) AS BLOB) WHERE (NULL) ORDER BY (+ (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0 COLLATE BINARY))=((CAST(rt1.c3 AS BLOB)))) FULL OUTER JOIN vt0 ON CAST((x'' IN ()) AS BLOB) ORDER BY (+ (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0 COLLATE BINARY))=((CAST(rt1.c3 AS BLOB)))) FULL OUTER JOIN vt0 ON CAST((x'' IN ()) AS BLOB) WHERE (NULL) ORDER BY (+ (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0 COLLATE BINARY))=((CAST(rt1.c3 AS BLOB)))) FULL OUTER JOIN vt0 ON CAST((x'' IN ()) AS BLOB) ORDER BY (+ (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c0 END)) DESC);
SELECT * FROM rt1, vt0 WHERE (((331905094)GLOB(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c2 END))) ORDER BY CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((331905094)GLOB(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((331905094)GLOB(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c2 END))) ORDER BY CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((331905094)GLOB(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((331905094)GLOB(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c2 END))) ORDER BY CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 END COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM rt0, rt1, vt0 WHERE (((((rt0.c3)+(rt0.c1))) ISNULL)) ORDER BY ((rt0.c3)+(rt1.c4)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)+(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((rt0.c3)+(rt1.c4)) COLLATE RTRIM DESC);
SELECT * FROM rt0, rt1, vt0 WHERE (((((rt0.c3)+(rt0.c1))) ISNULL)) ORDER BY ((rt0.c3)+(rt1.c4)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)+(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((rt0.c3)+(rt1.c4)) COLLATE RTRIM DESC);
SELECT * FROM rt0, rt1, vt0 WHERE (((((rt0.c3)+(rt0.c1))) ISNULL)) ORDER BY ((rt0.c3)+(rt1.c4)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3 COLLATE NOCASE) NOTNULL)) ORDER BY (~ (CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY (~ (CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3 COLLATE NOCASE) NOTNULL)) ORDER BY (~ (CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY (~ (CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3 COLLATE NOCASE) NOTNULL)) ORDER BY (~ (CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 END))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN '-314896343' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY ((((vt0.c0)%(vt0.c0)))<<(0.7730151954453716)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN '-314896343' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c0)))<<(0.7730151954453716)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN '-314896343' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY ((((vt0.c0)%(vt0.c0)))<<(0.7730151954453716)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN '-314896343' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c0)))<<(0.7730151954453716)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN '-314896343' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY ((((vt0.c0)%(vt0.c0)))<<(0.7730151954453716)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c4)AND(rt1.c2)))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))))) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)AND(rt1.c2)))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c4)AND(rt1.c2)))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))))) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)AND(rt1.c2)))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c4)AND(rt1.c2)))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2))))) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE (CAST((rt1.c2 IN (rt1.c5)) AS TEXT)) ORDER BY LIKELIHOOD('XS', 0.9230521956764407) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN (rt1.c5)) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY LIKELIHOOD('XS', 0.9230521956764407) COLLATE RTRIM);
SELECT ALL * FROM rt1, vt0 WHERE (CAST((rt1.c2 IN (rt1.c5)) AS TEXT)) ORDER BY LIKELIHOOD('XS', 0.9230521956764407) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN (rt1.c5)) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY LIKELIHOOD('XS', 0.9230521956764407) COLLATE RTRIM);
SELECT ALL * FROM rt1, vt0 WHERE (CAST((rt1.c2 IN (rt1.c5)) AS TEXT)) ORDER BY LIKELIHOOD('XS', 0.9230521956764407) COLLATE RTRIM;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c5))) NOT NULL) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c5))) NOT NULL));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c5))) NOT NULL) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c5))) NOT NULL));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c5))) NOT NULL) WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CAST((('8)U22*') BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((('8)U22*') BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CAST((('8)U22*') BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((('8)U22*') BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CAST((('8)U22*') BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c4)))OR(((rt0.c2) IS FALSE))))OR(((rt0.c1) BETWEEN ('-70258964') AND (rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)))OR(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c4)))OR(((rt0.c2) IS FALSE))))OR(((rt0.c1) BETWEEN ('-70258964') AND (rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)))OR(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c4)))OR(((rt0.c2) IS FALSE))))OR(((rt0.c1) BETWEEN ('-70258964') AND (rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)))OR(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c4)))OR(((rt0.c2) IS FALSE))))OR(((rt0.c1) BETWEEN ('-70258964') AND (rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)))OR(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c4)))OR(((rt0.c2) IS FALSE))))OR(((rt0.c1) BETWEEN ('-70258964') AND (rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)))OR(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)))));
SELECT ALL * FROM rt1 WHERE ((CASE rt1.c5  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c5 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c5  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c5 END IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((CASE rt1.c5  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c5 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c5  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c5 END IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((CASE rt1.c5  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c5 END IN ()));
SELECT * FROM rt0 WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN (((rt0.c3, rt0.c4, rt0.c4)) BETWEEN ((rt0.c1, rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))) THEN (('2-')GLOB(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE NOCASE  WHEN (((rt0.c3, rt0.c4, rt0.c4)) BETWEEN ((rt0.c1, rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))) THEN (('2-')GLOB(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN (((rt0.c3, rt0.c4, rt0.c4)) BETWEEN ((rt0.c1, rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))) THEN (('2-')GLOB(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE NOCASE  WHEN (((rt0.c3, rt0.c4, rt0.c4)) BETWEEN ((rt0.c1, rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))) THEN (('2-')GLOB(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN (((rt0.c3, rt0.c4, rt0.c4)) BETWEEN ((rt0.c1, rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))) THEN (('2-')GLOB(rt0.c1)) END);
SELECT * FROM rt1, vt0, rt0 WHERE (((((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c1)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c1)))AND(NULL))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (((((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c1)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c1)))AND(NULL))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (((((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c1)))AND(NULL)));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY COALESCE(DISTINCT rt0.c4 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT rt0.c4 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY COALESCE(DISTINCT rt0.c4 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT rt0.c4 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY COALESCE(DISTINCT rt0.c4 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ('993855645');
SELECT SUM(count) FROM (SELECT ALL (('993855645') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('993855645');
SELECT SUM(count) FROM (SELECT ALL (('993855645') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('993855645');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) ORDER BY LOWER(DISTINCT vt0.c0);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT vt0.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) ORDER BY LOWER(DISTINCT vt0.c0);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT vt0.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL)) ORDER BY LOWER(DISTINCT vt0.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON 0x44dc8610 WHERE (((('ST.Y댇'))>=((((rt1.c4)/(rt1.c5))))));
SELECT SUM(count) FROM (SELECT ALL ((((('ST.Y댇'))>=((((rt1.c4)/(rt1.c5)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON 0x44dc8610);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON 0x44dc8610 WHERE (((('ST.Y댇'))>=((((rt1.c4)/(rt1.c5))))));
SELECT SUM(count) FROM (SELECT ALL ((((('ST.Y댇'))>=((((rt1.c4)/(rt1.c5)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON 0x44dc8610);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON 0x44dc8610 WHERE (((('ST.Y댇'))>=((((rt1.c4)/(rt1.c5))))));
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c2)!=(rt0.c1))) NOT NULL) INNER JOIN vt0 ON rt1.c1 COLLATE RTRIM WHERE (((rt0.c3) NOT NULL)) ORDER BY (((((((((((((~ (rt0.c3)))OR(((((rt1.c4)AND(rt0.c0)))OR(0x1d68a483)))))OR((((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))))))AND((rt0.c2 IN (rt1.c4, rt0.c3)))))AND(((rt1.c3) NOTNULL))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (0.7385260375482497)))))AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt0.c2)!=(rt0.c1))) NOT NULL) INNER JOIN vt0 ON rt1.c1 COLLATE RTRIM ORDER BY (((((((((((((~ (rt0.c3)))OR(((((rt1.c4)AND(rt0.c0)))OR(0x1d68a483)))))OR((((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))))))AND((rt0.c2 IN (rt1.c4, rt0.c3)))))AND(((rt1.c3) NOTNULL))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (0.7385260375482497)))))AND(NULL))  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c2)!=(rt0.c1))) NOT NULL) INNER JOIN vt0 ON rt1.c1 COLLATE RTRIM WHERE (((rt0.c3) NOT NULL)) ORDER BY (((((((((((((~ (rt0.c3)))OR(((((rt1.c4)AND(rt0.c0)))OR(0x1d68a483)))))OR((((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))))))AND((rt0.c2 IN (rt1.c4, rt0.c3)))))AND(((rt1.c3) NOTNULL))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (0.7385260375482497)))))AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt0.c2)!=(rt0.c1))) NOT NULL) INNER JOIN vt0 ON rt1.c1 COLLATE RTRIM ORDER BY (((((((((((((~ (rt0.c3)))OR(((((rt1.c4)AND(rt0.c0)))OR(0x1d68a483)))))OR((((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))))))AND((rt0.c2 IN (rt1.c4, rt0.c3)))))AND(((rt1.c3) NOTNULL))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (0.7385260375482497)))))AND(NULL))  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c2)!=(rt0.c1))) NOT NULL) INNER JOIN vt0 ON rt1.c1 COLLATE RTRIM WHERE (((rt0.c3) NOT NULL)) ORDER BY (((((((((((((~ (rt0.c3)))OR(((((rt1.c4)AND(rt0.c0)))OR(0x1d68a483)))))OR((((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))))))AND((rt0.c2 IN (rt1.c4, rt0.c3)))))AND(((rt1.c3) NOTNULL))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (0.7385260375482497)))))AND(NULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)IS NOT('')) COLLATE RTRIM WHERE (CASE ((rt0.c0) NOTNULL)  WHEN (rt0.c2 IN ()) THEN ((rt0.c4)<=(rt0.c1)) WHEN (((rt0.c2))>((x''))) THEN (rt0.c0 IN ()) WHEN (((rt0.c0, vt0.c0, rt0.c4))!=((vt0.c0, rt0.c1, rt0.c1))) THEN (rt0.c0 IN ()) WHEN ((rt0.c1)%(rt0.c1)) THEN (rt0.c2 IN ()) WHEN (rt0.c1 IN ()) THEN ((vt0.c0)IS(rt0.c1)) END) ORDER BY TYPEOF(((0.02556604253065664)/(rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOTNULL)  WHEN (rt0.c2 IN ()) THEN ((rt0.c4)<=(rt0.c1)) WHEN (((rt0.c2))>((x''))) THEN (rt0.c0 IN ()) WHEN (((rt0.c0, vt0.c0, rt0.c4))!=((vt0.c0, rt0.c1, rt0.c1))) THEN (rt0.c0 IN ()) WHEN ((rt0.c1)%(rt0.c1)) THEN (rt0.c2 IN ()) WHEN (rt0.c1 IN ()) THEN ((vt0.c0)IS(rt0.c1)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)IS NOT('')) COLLATE RTRIM ORDER BY TYPEOF(((0.02556604253065664)/(rt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)IS NOT('')) COLLATE RTRIM WHERE (CASE ((rt0.c0) NOTNULL)  WHEN (rt0.c2 IN ()) THEN ((rt0.c4)<=(rt0.c1)) WHEN (((rt0.c2))>((x''))) THEN (rt0.c0 IN ()) WHEN (((rt0.c0, vt0.c0, rt0.c4))!=((vt0.c0, rt0.c1, rt0.c1))) THEN (rt0.c0 IN ()) WHEN ((rt0.c1)%(rt0.c1)) THEN (rt0.c2 IN ()) WHEN (rt0.c1 IN ()) THEN ((vt0.c0)IS(rt0.c1)) END) ORDER BY TYPEOF(((0.02556604253065664)/(rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOTNULL)  WHEN (rt0.c2 IN ()) THEN ((rt0.c4)<=(rt0.c1)) WHEN (((rt0.c2))>((x''))) THEN (rt0.c0 IN ()) WHEN (((rt0.c0, vt0.c0, rt0.c4))!=((vt0.c0, rt0.c1, rt0.c1))) THEN (rt0.c0 IN ()) WHEN ((rt0.c1)%(rt0.c1)) THEN (rt0.c2 IN ()) WHEN (rt0.c1 IN ()) THEN ((vt0.c0)IS(rt0.c1)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)IS NOT('')) COLLATE RTRIM ORDER BY TYPEOF(((0.02556604253065664)/(rt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)IS NOT('')) COLLATE RTRIM WHERE (CASE ((rt0.c0) NOTNULL)  WHEN (rt0.c2 IN ()) THEN ((rt0.c4)<=(rt0.c1)) WHEN (((rt0.c2))>((x''))) THEN (rt0.c0 IN ()) WHEN (((rt0.c0, vt0.c0, rt0.c4))!=((vt0.c0, rt0.c1, rt0.c1))) THEN (rt0.c0 IN ()) WHEN ((rt0.c1)%(rt0.c1)) THEN (rt0.c2 IN ()) WHEN (rt0.c1 IN ()) THEN ((vt0.c0)IS(rt0.c1)) END) ORDER BY TYPEOF(((0.02556604253065664)/(rt0.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE ((((rt1.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE ((((rt1.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE ((((rt1.c0) IS TRUE) IN ()));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) WHERE ((((~ (rt0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c4))) ISNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) WHERE ((((~ (rt0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c4))) ISNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) WHERE ((((~ (rt0.c4))) ISNULL));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (UNLIKELY(DISTINCT UNICODE(x'')));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT UNICODE(x''))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (UNLIKELY(DISTINCT UNICODE(x'')));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT UNICODE(x''))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (UNLIKELY(DISTINCT UNICODE(x'')));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (rt0.c4 IN ()) COLLATE NOCASE WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c3 AS BLOB) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN CASE WHEN rt0.c2 THEN 0Xffffffffe3642015 WHEN rt0.c4 THEN NULL WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((rt0.c2)&(rt0.c2)) THEN rt0.c0 END) ORDER BY ((rt0.c2) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c3 AS BLOB) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN CASE WHEN rt0.c2 THEN 0xffffffffe3642015 WHEN rt0.c4 THEN NULL WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((rt0.c2)&(rt0.c2)) THEN rt0.c0 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (rt0.c4 IN ()) COLLATE NOCASE ORDER BY ((rt0.c2) NOTNULL) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (rt0.c4 IN ()) COLLATE NOCASE WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c3 AS BLOB) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN CASE WHEN rt0.c2 THEN 0Xffffffffe3642015 WHEN rt0.c4 THEN NULL WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((rt0.c2)&(rt0.c2)) THEN rt0.c0 END) ORDER BY ((rt0.c2) NOTNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c3 AS BLOB) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN CASE WHEN rt0.c2 THEN 0xffffffffe3642015 WHEN rt0.c4 THEN NULL WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((rt0.c2)&(rt0.c2)) THEN rt0.c0 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (rt0.c4 IN ()) COLLATE NOCASE ORDER BY ((rt0.c2) NOTNULL) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (rt0.c4 IN ()) COLLATE NOCASE WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c3 AS BLOB) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) WHEN CASE WHEN rt0.c2 THEN 0Xffffffffe3642015 WHEN rt0.c4 THEN NULL WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((rt0.c2)&(rt0.c2)) THEN rt0.c0 END) ORDER BY ((rt0.c2) NOTNULL) COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY (- (((((vt0.c0)AND(vt0.c0)))OR(1.597305341E9))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (- (((((vt0.c0)AND(vt0.c0)))OR(1.597305341E9)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY (- (((((vt0.c0)AND(vt0.c0)))OR(1.597305341E9))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (- (((((vt0.c0)AND(vt0.c0)))OR(1.597305341E9)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY (- (((((vt0.c0)AND(vt0.c0)))OR(1.597305341E9))));
SELECT * FROM vt0, rt0, rt1 WHERE (CAST((('')-(rt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((('')-(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (CAST((('')-(rt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((('')-(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (CAST((('')-(rt1.c2)) AS INTEGER));
SELECT * FROM rt1 INNER JOIN rt0 ON ((((rt0.c4)<=(rt0.c3))) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))) AND (((NULL) IS TRUE))) RIGHT OUTER JOIN vt0 ON ((((rt1.c5) BETWEEN (rt0.c3) AND (rt1.c1))) IS FALSE) WHERE (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3)))OR((('1012562435') IS TRUE)))) ORDER BY (((((0.4526437128433295)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0)))) IS TRUE) DESC, rt1.c2 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3)))OR((('1012562435') IS TRUE)))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((((rt0.c4)<=(rt0.c3))) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))) AND (((NULL) IS TRUE))) RIGHT OUTER JOIN vt0 ON ((((rt1.c5) BETWEEN (rt0.c3) AND (rt1.c1))) IS FALSE) ORDER BY (((((0.4526437128433295)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0)))) IS TRUE) DESC, rt1.c2 COLLATE BINARY);
SELECT * FROM rt1 INNER JOIN rt0 ON ((((rt0.c4)<=(rt0.c3))) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))) AND (((NULL) IS TRUE))) RIGHT OUTER JOIN vt0 ON ((((rt1.c5) BETWEEN (rt0.c3) AND (rt1.c1))) IS FALSE) WHERE (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3)))OR((('1012562435') IS TRUE)))) ORDER BY (((((0.4526437128433295)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0)))) IS TRUE) DESC, rt1.c2 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3)))OR((('1012562435') IS TRUE)))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((((rt0.c4)<=(rt0.c3))) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))) AND (((NULL) IS TRUE))) RIGHT OUTER JOIN vt0 ON ((((rt1.c5) BETWEEN (rt0.c3) AND (rt1.c1))) IS FALSE) ORDER BY (((((0.4526437128433295)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0)))) IS TRUE) DESC, rt1.c2 COLLATE BINARY);
SELECT * FROM rt1 INNER JOIN rt0 ON ((((rt0.c4)<=(rt0.c3))) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))) AND (((NULL) IS TRUE))) RIGHT OUTER JOIN vt0 ON ((((rt1.c5) BETWEEN (rt0.c3) AND (rt1.c1))) IS FALSE) WHERE (((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3)))OR((('1012562435') IS TRUE)))) ORDER BY (((((0.4526437128433295)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0)))) IS TRUE) DESC, rt1.c2 COLLATE BINARY;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) ISNULL) AS INTEGER));
SELECT ALL * FROM rt1, vt0, rt0 WHERE ('475568234') ORDER BY (NOT (CASE WHEN rt0.c4 THEN rt1.c5 END)), ((- (rt1.c5)) IN ()) DESC  NULLS LAST, CASE WHEN rt0.c1 COLLATE BINARY THEN json_valid(rt0.c2) WHEN (NOT (rt0.c4)) THEN rt1.c1 WHEN ((rt1.c4) IS FALSE) THEN (rt1.c1 IN (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('475568234') IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (NOT (CASE WHEN rt0.c4 THEN rt1.c5 END)), ((- (rt1.c5)) IN ()) DESC  NULLS LAST, CASE WHEN rt0.c1 COLLATE BINARY THEN json_valid(rt0.c2) WHEN (NOT (rt0.c4)) THEN rt1.c1 WHEN ((rt1.c4) IS FALSE) THEN (rt1.c1 IN (vt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ('475568234') ORDER BY (NOT (CASE WHEN rt0.c4 THEN rt1.c5 END)), ((- (rt1.c5)) IN ()) DESC  NULLS LAST, CASE WHEN rt0.c1 COLLATE BINARY THEN json_valid(rt0.c2) WHEN (NOT (rt0.c4)) THEN rt1.c1 WHEN ((rt1.c4) IS FALSE) THEN (rt1.c1 IN (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('475568234') IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (NOT (CASE WHEN rt0.c4 THEN rt1.c5 END)), ((- (rt1.c5)) IN ()) DESC  NULLS LAST, CASE WHEN rt0.c1 COLLATE BINARY THEN json_valid(rt0.c2) WHEN (NOT (rt0.c4)) THEN rt1.c1 WHEN ((rt1.c4) IS FALSE) THEN (rt1.c1 IN (vt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ('475568234') ORDER BY (NOT (CASE WHEN rt0.c4 THEN rt1.c5 END)), ((- (rt1.c5)) IN ()) DESC  NULLS LAST, CASE WHEN rt0.c1 COLLATE BINARY THEN json_valid(rt0.c2) WHEN (NOT (rt0.c4)) THEN rt1.c1 WHEN ((rt1.c4) IS FALSE) THEN (rt1.c1 IN (vt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c3)=(rt1.c1)))) AND ((rt1.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((rt1.c3)=(rt1.c1)))) AND ((rt1.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c3)=(rt1.c1)))) AND ((rt1.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((rt1.c3)=(rt1.c1)))) AND ((rt1.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c3)=(rt1.c1)))) AND ((rt1.c2 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3 IN ()), ((((rt0.c3)AND(rt0.c4)))OR(rt0.c4)), '-658759279'))>((rt0.c4 COLLATE BINARY, (rt0.c2 IN (rt0.c3)), CAST(0.03713063203080924 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN ()), ((((rt0.c3)AND(rt0.c4)))OR(rt0.c4)), '-658759279'))>((rt0.c4 COLLATE BINARY, (rt0.c2 IN (rt0.c3)), CAST(0.03713063203080924 AS TEXT))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3 IN ()), ((((rt0.c3)AND(rt0.c4)))OR(rt0.c4)), '-658759279'))>((rt0.c4 COLLATE BINARY, (rt0.c2 IN (rt0.c3)), CAST(0.03713063203080924 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN ()), ((((rt0.c3)AND(rt0.c4)))OR(rt0.c4)), '-658759279'))>((rt0.c4 COLLATE BINARY, (rt0.c2 IN (rt0.c3)), CAST(0.03713063203080924 AS TEXT))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3 IN ()), ((((rt0.c3)AND(rt0.c4)))OR(rt0.c4)), '-658759279'))>((rt0.c4 COLLATE BINARY, (rt0.c2 IN (rt0.c3)), CAST(0.03713063203080924 AS TEXT)))));
SELECT ALL COUNT(*) FROM vt0, rt1 NOT INDEXED, rt0 WHERE ((((x''))<=((CASE rt0.c1  WHEN rt0.c4 THEN vt0.c0 ELSE rt1.c3 END))));
SELECT SUM(count) FROM (SELECT (((((x''))<=((CASE rt0.c1  WHEN rt0.c4 THEN vt0.c0 ELSE rt1.c3 END)))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1 NOT INDEXED, rt0 WHERE ((((x''))<=((CASE rt0.c1  WHEN rt0.c4 THEN vt0.c0 ELSE rt1.c3 END))));
SELECT SUM(count) FROM (SELECT (((((x''))<=((CASE rt0.c1  WHEN rt0.c4 THEN vt0.c0 ELSE rt1.c3 END)))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1 NOT INDEXED, rt0 WHERE ((((x''))<=((CASE rt0.c1  WHEN rt0.c4 THEN vt0.c0 ELSE rt1.c3 END))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0)+(((rt0.c0) NOTNULL))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0)+(((rt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0)+(((rt0.c0) NOTNULL))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0)+(((rt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0)+(((rt0.c0) NOTNULL))) WHERE (rt0.c3);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c3)))AND(rt1.c2)))LIKE((~ (rt1.c2))))) ORDER BY CAST(((rt1.c5)|(rt1.c4)) AS TEXT), ((TRIM(DISTINCT rt1.c0)) BETWEEN (rt1.c4) AND ((((rt1.c0))<=((rt1.c2))))), ((((rt1.c1) IS TRUE)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c3)))AND(rt1.c2)))LIKE((~ (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c5)|(rt1.c4)) AS TEXT), ((TRIM(DISTINCT rt1.c0)) BETWEEN (rt1.c4) AND ((((rt1.c0))<=((rt1.c2))))), ((((rt1.c1) IS TRUE)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c3)))AND(rt1.c2)))LIKE((~ (rt1.c2))))) ORDER BY CAST(((rt1.c5)|(rt1.c4)) AS TEXT), ((TRIM(DISTINCT rt1.c0)) BETWEEN (rt1.c4) AND ((((rt1.c0))<=((rt1.c2))))), ((((rt1.c1) IS TRUE)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c3)))AND(rt1.c2)))LIKE((~ (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c5)|(rt1.c4)) AS TEXT), ((TRIM(DISTINCT rt1.c0)) BETWEEN (rt1.c4) AND ((((rt1.c0))<=((rt1.c2))))), ((((rt1.c1) IS TRUE)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c3)))AND(rt1.c2)))LIKE((~ (rt1.c2))))) ORDER BY CAST(((rt1.c5)|(rt1.c4)) AS TEXT), ((TRIM(DISTINCT rt1.c0)) BETWEEN (rt1.c4) AND ((((rt1.c0))<=((rt1.c2))))), ((((rt1.c1) IS TRUE)) IS FALSE)  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (((rt1.c3 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((rt1.c3 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((rt1.c3 COLLATE RTRIM) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)AND(vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END END) ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)AND(vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)AND(vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END END) ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)AND(vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)AND(vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END END) ORDER BY (~ (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (ROUND(rt0.c1, rt1.c1) IN (x'ede4' COLLATE NOCASE)) FULL OUTER JOIN vt0 ON (((CASE WHEN rt0.c1 THEN '-1511782774' ELSE rt0.c0 END))>=((((0.36735015516765634)OR(rt1.c4))))) WHERE (((rt0.c2)|(rt1.c1)) COLLATE RTRIM) ORDER BY ((((CAST(rt1.c5 AS REAL))OR(((0.9689059373601502) BETWEEN (rt1.c0) AND (rt1.c4)))))OR(((((0.7409503635207136)OR(rt0.c3)))AND(rt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)|(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (ROUND(rt0.c1, rt1.c1) IN (x'ede4' COLLATE NOCASE)) FULL OUTER JOIN vt0 ON (((CASE WHEN rt0.c1 THEN '-1511782774' ELSE rt0.c0 END))>=((((0.36735015516765634)OR(rt1.c4))))) ORDER BY ((((CAST(rt1.c5 AS REAL))OR(((0.9689059373601502) BETWEEN (rt1.c0) AND (rt1.c4)))))OR(((((0.7409503635207136)OR(rt0.c3)))AND(rt1.c3)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (ROUND(rt0.c1, rt1.c1) IN (x'ede4' COLLATE NOCASE)) FULL OUTER JOIN vt0 ON (((CASE WHEN rt0.c1 THEN '-1511782774' ELSE rt0.c0 END))>=((((0.36735015516765634)OR(rt1.c4))))) WHERE (((rt0.c2)|(rt1.c1)) COLLATE RTRIM) ORDER BY ((((CAST(rt1.c5 AS REAL))OR(((0.9689059373601502) BETWEEN (rt1.c0) AND (rt1.c4)))))OR(((((0.7409503635207136)OR(rt0.c3)))AND(rt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)|(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (ROUND(rt0.c1, rt1.c1) IN (x'ede4' COLLATE NOCASE)) FULL OUTER JOIN vt0 ON (((CASE WHEN rt0.c1 THEN '-1511782774' ELSE rt0.c0 END))>=((((0.36735015516765634)OR(rt1.c4))))) ORDER BY ((((CAST(rt1.c5 AS REAL))OR(((0.9689059373601502) BETWEEN (rt1.c0) AND (rt1.c4)))))OR(((((0.7409503635207136)OR(rt0.c3)))AND(rt1.c3)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (ROUND(rt0.c1, rt1.c1) IN (x'ede4' COLLATE NOCASE)) FULL OUTER JOIN vt0 ON (((CASE WHEN rt0.c1 THEN '-1511782774' ELSE rt0.c0 END))>=((((0.36735015516765634)OR(rt1.c4))))) WHERE (((rt0.c2)|(rt1.c1)) COLLATE RTRIM) ORDER BY ((((CAST(rt1.c5 AS REAL))OR(((0.9689059373601502) BETWEEN (rt1.c0) AND (rt1.c4)))))OR(((((0.7409503635207136)OR(rt0.c3)))AND(rt1.c3)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY ((rt0.c1)LIKE(CASE x''  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1)LIKE(CASE x''  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY ((rt0.c1)LIKE(CASE x''  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1)LIKE(CASE x''  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY ((rt0.c1)LIKE(CASE x''  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END))  NULLS LAST;
SELECT * FROM rt1 WHERE (CASE WHEN ((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c4)))OR('1162814210')))OR(rt1.c0)) THEN (((rt1.c2, rt1.c1, rt1.c4)) BETWEEN ((rt1.c5, rt1.c2, x'508e')) AND ((x'', rt1.c3, rt1.c0))) END) ORDER BY (~ (rt1.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c4)))OR('1162814210')))OR(rt1.c0)) THEN (((rt1.c2, rt1.c1, rt1.c4)) BETWEEN ((rt1.c5, rt1.c2, x'508e')) AND ((x'', rt1.c3, rt1.c0))) END) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c2)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt1 WHERE (CASE WHEN ((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c4)))OR('1162814210')))OR(rt1.c0)) THEN (((rt1.c2, rt1.c1, rt1.c4)) BETWEEN ((rt1.c5, rt1.c2, x'508e')) AND ((x'', rt1.c3, rt1.c0))) END) ORDER BY (~ (rt1.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c4)))OR('1162814210')))OR(rt1.c0)) THEN (((rt1.c2, rt1.c1, rt1.c4)) BETWEEN ((rt1.c5, rt1.c2, x'508e')) AND ((x'', rt1.c3, rt1.c0))) END) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c2)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt1 WHERE (CASE WHEN ((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c4)))OR('1162814210')))OR(rt1.c0)) THEN (((rt1.c2, rt1.c1, rt1.c4)) BETWEEN ((rt1.c5, rt1.c2, x'508e')) AND ((x'', rt1.c3, rt1.c0))) END) ORDER BY (~ (rt1.c2)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c4) NOT BETWEEN (-6.58759279E8) AND (rt0.c1)))OR((((rt0.c2, rt0.c1, rt1.c5, rt0.c3, vt0.c0))>=((rt1.c3, rt0.c2, rt1.c5, rt0.c4, rt1.c5))))))OR((rt1.c5 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4) NOT BETWEEN (-6.58759279E8) AND (rt0.c1)))OR((((rt0.c2, rt0.c1, rt1.c5, rt0.c3, vt0.c0))>=((rt1.c3, rt0.c2, rt1.c5, rt0.c4, rt1.c5))))))OR((rt1.c5 IN ())))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM rt1, vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c4) NOT BETWEEN (-6.58759279E8) AND (rt0.c1)))OR((((rt0.c2, rt0.c1, rt1.c5, rt0.c3, vt0.c0))>=((rt1.c3, rt0.c2, rt1.c5, rt0.c4, rt1.c5))))))OR((rt1.c5 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4) NOT BETWEEN (-6.58759279E8) AND (rt0.c1)))OR((((rt0.c2, rt0.c1, rt1.c5, rt0.c3, vt0.c0))>=((rt1.c3, rt0.c2, rt1.c5, rt0.c4, rt1.c5))))))OR((rt1.c5 IN ())))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM rt1, vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c4) NOT BETWEEN (-6.58759279E8) AND (rt0.c1)))OR((((rt0.c2, rt0.c1, rt1.c5, rt0.c3, vt0.c0))>=((rt1.c3, rt0.c2, rt1.c5, rt0.c4, rt1.c5))))))OR((rt1.c5 IN ()))));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((NULL))))|(((((((((rt0.c4)OR(rt1.c5)))OR(rt1.c2)))OR(rt1.c4)))AND(0.8578204981038015)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((NULL))))|(((((((((rt0.c4)OR(rt1.c5)))OR(rt1.c2)))OR(rt1.c4)))AND(0.8578204981038015))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((NULL))))|(((((((((rt0.c4)OR(rt1.c5)))OR(rt1.c2)))OR(rt1.c4)))AND(0.8578204981038015)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((NULL))))|(((((((((rt0.c4)OR(rt1.c5)))OR(rt1.c2)))OR(rt1.c4)))AND(0.8578204981038015))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((NULL))))|(((((((((rt0.c4)OR(rt1.c5)))OR(rt1.c2)))OR(rt1.c4)))AND(0.8578204981038015)))));
SELECT COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (NULL) AND (NULL)))GLOB(((('804684016')) BETWEEN ((rt0.c4)) AND ((rt1.c1))))) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (NULL) AND (NULL)))GLOB(((('804684016')) BETWEEN ((rt0.c4)) AND ((rt1.c1))))));
SELECT COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (NULL) AND (NULL)))GLOB(((('804684016')) BETWEEN ((rt0.c4)) AND ((rt1.c1))))) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (NULL) AND (NULL)))GLOB(((('804684016')) BETWEEN ((rt0.c4)) AND ((rt1.c1))))));
SELECT COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (NULL) AND (NULL)))GLOB(((('804684016')) BETWEEN ((rt0.c4)) AND ((rt1.c1))))) WHERE (rt1.c3);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((~ ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((~ ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((~ ((- (rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (TRIM((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM((rt0.c3 IN ()))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (TRIM((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM((rt0.c3 IN ()))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (TRIM((rt0.c3 IN ())));
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (COALESCE(DISTINCT (x'' IN ()), ((rt1.c0)*(rt0.c3)))) ORDER BY x'b395'  NULLS FIRST, ((NOT (rt0.c4)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (x'' IN ()), ((rt1.c0)*(rt0.c3)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY x'b395'  NULLS FIRST, ((NOT (rt0.c4)) IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (COALESCE(DISTINCT (x'' IN ()), ((rt1.c0)*(rt0.c3)))) ORDER BY x'b395'  NULLS FIRST, ((NOT (rt0.c4)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (x'' IN ()), ((rt1.c0)*(rt0.c3)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY x'b395'  NULLS FIRST, ((NOT (rt0.c4)) IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (COALESCE(DISTINCT (x'' IN ()), ((rt1.c0)*(rt0.c3)))) ORDER BY x'b395'  NULLS FIRST, ((NOT (rt0.c4)) IN ()) DESC;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, '놙nꙞu⢏䋛RL#')))) BETWEEN (HEX(vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))>>(CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, '놙nꙞu⢏䋛RL#')))) BETWEEN (HEX(vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))>>(CAST(vt0.c0 AS INTEGER)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, '놙nꙞu⢏䋛RL#')))) BETWEEN (HEX(vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))>>(CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, '놙nꙞu⢏䋛RL#')))) BETWEEN (HEX(vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))>>(CAST(vt0.c0 AS INTEGER)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, '놙nꙞu⢏䋛RL#')))) BETWEEN (HEX(vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))>>(CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((0.7239392677004185) IS TRUE) COLLATE BINARY) ORDER BY (((rt1.c0, rt0.c4, 0.7863028128346277)) BETWEEN ((((rt0.c3)<=(rt0.c1)), ((((((((rt1.c1)AND(rt0.c4)))OR(rt1.c1)))OR(rt1.c2)))OR(rt0.c2)), CASE rt0.c0  WHEN '1385543345' THEN rt0.c1 END)) AND ((TRIM(rt1.c4), vt0.c0 COLLATE BINARY, (((rt0.c2))!=((rt1.c4)))))), (rt0.c2 COLLATE BINARY IN ()) ASC, CAST(rt1.c3 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((0.7239392677004185) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((rt1.c0, rt0.c4, 0.7863028128346277)) BETWEEN ((((rt0.c3)<=(rt0.c1)), ((((((((rt1.c1)AND(rt0.c4)))OR(rt1.c1)))OR(rt1.c2)))OR(rt0.c2)), CASE rt0.c0  WHEN '1385543345' THEN rt0.c1 END)) AND ((TRIM(rt1.c4), vt0.c0 COLLATE BINARY, (((rt0.c2))<>((rt1.c4)))))), (rt0.c2 COLLATE BINARY IN ()) ASC, CAST(rt1.c3 AS TEXT));
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((0.7239392677004185) IS TRUE) COLLATE BINARY) ORDER BY (((rt1.c0, rt0.c4, 0.7863028128346277)) BETWEEN ((((rt0.c3)<=(rt0.c1)), ((((((((rt1.c1)AND(rt0.c4)))OR(rt1.c1)))OR(rt1.c2)))OR(rt0.c2)), CASE rt0.c0  WHEN '1385543345' THEN rt0.c1 END)) AND ((TRIM(rt1.c4), vt0.c0 COLLATE BINARY, (((rt0.c2))!=((rt1.c4)))))), (rt0.c2 COLLATE BINARY IN ()) ASC, CAST(rt1.c3 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((0.7239392677004185) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((rt1.c0, rt0.c4, 0.7863028128346277)) BETWEEN ((((rt0.c3)<=(rt0.c1)), ((((((((rt1.c1)AND(rt0.c4)))OR(rt1.c1)))OR(rt1.c2)))OR(rt0.c2)), CASE rt0.c0  WHEN '1385543345' THEN rt0.c1 END)) AND ((TRIM(rt1.c4), vt0.c0 COLLATE BINARY, (((rt0.c2))<>((rt1.c4)))))), (rt0.c2 COLLATE BINARY IN ()) ASC, CAST(rt1.c3 AS TEXT));
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((0.7239392677004185) IS TRUE) COLLATE BINARY) ORDER BY (((rt1.c0, rt0.c4, 0.7863028128346277)) BETWEEN ((((rt0.c3)<=(rt0.c1)), ((((((((rt1.c1)AND(rt0.c4)))OR(rt1.c1)))OR(rt1.c2)))OR(rt0.c2)), CASE rt0.c0  WHEN '1385543345' THEN rt0.c1 END)) AND ((TRIM(rt1.c4), vt0.c0 COLLATE BINARY, (((rt0.c2))!=((rt1.c4)))))), (rt0.c2 COLLATE BINARY IN ()) ASC, CAST(rt1.c3 AS TEXT);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (~ (((rt1.c4) IS FALSE))) WHERE (((((((((((((0.6729044355662498)OR(rt0.c2)))AND(rt1.c5)))AND((rt0.c0 IN ()))))OR(((rt0.c1)GLOB(0.7873862679003036)))))AND(CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c4 THEN 0.5454751928060745 WHEN NULL THEN rt1.c5 ELSE rt1.c3 END)))AND(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) ORDER BY rt0.c0, CASE rt1.c2  WHEN ((rt0.c2)/(-70258964)) THEN LIKELY(rt1.c5) END ASC, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((0.6729044355662498)OR(rt0.c2)))AND(rt1.c5)))AND((rt0.c0 IN ()))))OR(((rt0.c1)GLOB(0.7873862679003036)))))AND(CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c4 THEN 0.5454751928060745 WHEN NULL THEN rt1.c5 ELSE rt1.c3 END)))AND(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (~ (((rt1.c4) IS FALSE))) ORDER BY rt0.c0, CASE rt1.c2  WHEN ((rt0.c2)/(-70258964)) THEN LIKELY(rt1.c5) END ASC, rt0.c0);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (~ (((rt1.c4) IS FALSE))) WHERE (((((((((((((0.6729044355662498)OR(rt0.c2)))AND(rt1.c5)))AND((rt0.c0 IN ()))))OR(((rt0.c1)GLOB(0.7873862679003036)))))AND(CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c4 THEN 0.5454751928060745 WHEN NULL THEN rt1.c5 ELSE rt1.c3 END)))AND(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) ORDER BY rt0.c0, CASE rt1.c2  WHEN ((rt0.c2)/(-70258964)) THEN LIKELY(rt1.c5) END ASC, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((0.6729044355662498)OR(rt0.c2)))AND(rt1.c5)))AND((rt0.c0 IN ()))))OR(((rt0.c1)GLOB(0.7873862679003036)))))AND(CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c4 THEN 0.5454751928060745 WHEN NULL THEN rt1.c5 ELSE rt1.c3 END)))AND(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (~ (((rt1.c4) IS FALSE))) ORDER BY rt0.c0, CASE rt1.c2  WHEN ((rt0.c2)/(-70258964)) THEN LIKELY(rt1.c5) END ASC, rt0.c0);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (~ (((rt1.c4) IS FALSE))) WHERE (((((((((((((0.6729044355662498)OR(rt0.c2)))AND(rt1.c5)))AND((rt0.c0 IN ()))))OR(((rt0.c1)GLOB(0.7873862679003036)))))AND(CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c4 THEN 0.5454751928060745 WHEN NULL THEN rt1.c5 ELSE rt1.c3 END)))AND(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) ORDER BY rt0.c0, CASE rt1.c2  WHEN ((rt0.c2)/(-70258964)) THEN LIKELY(rt1.c5) END ASC, rt0.c0;
SELECT ALL * FROM rt1, vt0 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))))%((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))))%((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))))%((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))))%((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))))%((rt1.c1 IN ()))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c2))) NOT BETWEEN (((rt1.c0)*(rt1.c0))) AND (CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c2))) NOT BETWEEN (((rt1.c0)*(rt1.c0))) AND (CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c2))) NOT BETWEEN (((rt1.c0)*(rt1.c0))) AND (CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c2))) NOT BETWEEN (((rt1.c0)*(rt1.c0))) AND (CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c2))) NOT BETWEEN (((rt1.c0)*(rt1.c0))) AND (CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)));
SELECT * FROM rt1, vt0, rt0 WHERE (CASE HEX(DISTINCT rt1.c4)  WHEN ((vt0.c0)<<(rt0.c1)) THEN INSTR(rt1.c4, rt1.c3) END) ORDER BY ((((vt0.c0)/(rt0.c4)))&((NOT (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE HEX(DISTINCT rt1.c4)  WHEN ((vt0.c0)<<(rt0.c1)) THEN INSTR(rt1.c4, rt1.c3) END) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((vt0.c0)/(rt0.c4)))&((NOT (rt0.c1)))));
SELECT * FROM rt1, vt0, rt0 WHERE (CASE HEX(DISTINCT rt1.c4)  WHEN ((vt0.c0)<<(rt0.c1)) THEN INSTR(rt1.c4, rt1.c3) END) ORDER BY ((((vt0.c0)/(rt0.c4)))&((NOT (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE HEX(DISTINCT rt1.c4)  WHEN ((vt0.c0)<<(rt0.c1)) THEN INSTR(rt1.c4, rt1.c3) END) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((vt0.c0)/(rt0.c4)))&((NOT (rt0.c1)))));
SELECT * FROM rt1, vt0, rt0 WHERE (CASE HEX(DISTINCT rt1.c4)  WHEN ((vt0.c0)<<(rt0.c1)) THEN INSTR(rt1.c4, rt1.c3) END) ORDER BY ((((vt0.c0)/(rt0.c4)))&((NOT (rt0.c1))));
SELECT ALL COUNT(*) FROM rt1 WHERE (TYPEOF(rt1.c5 COLLATE RTRIM)) ORDER BY CASE ((rt1.c5) IS TRUE)  WHEN ((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c1 END ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c5)) END;
SELECT SUM(count) FROM (SELECT ((TYPEOF(rt1.c5 COLLATE RTRIM)) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c5) IS TRUE)  WHEN ((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c1 END ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c5)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (TYPEOF(rt1.c5 COLLATE RTRIM)) ORDER BY CASE ((rt1.c5) IS TRUE)  WHEN ((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c1 END ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c5)) END;
SELECT SUM(count) FROM (SELECT ((TYPEOF(rt1.c5 COLLATE RTRIM)) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c5) IS TRUE)  WHEN ((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c1 END ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c5)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (TYPEOF(rt1.c5 COLLATE RTRIM)) ORDER BY CASE ((rt1.c5) IS TRUE)  WHEN ((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c1 END ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c5)) END;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c3 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c3 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c3 AS BLOB)) ISNULL));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY (((((((((rt1.c5 IN (rt1.c0)))OR(((rt1.c1)<<(NULL)))))OR(STRFTIME(NULL, rt1.c2, rt1.c0))))AND(UNICODE(rt1.c3))))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (((((((((rt1.c5 IN (rt1.c0)))OR(((rt1.c1)<<(NULL)))))OR(STRFTIME(NULL, rt1.c2, rt1.c0))))AND(UNICODE(rt1.c3))))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY (((((((((rt1.c5 IN (rt1.c0)))OR(((rt1.c1)<<(NULL)))))OR(STRFTIME(NULL, rt1.c2, rt1.c0))))AND(UNICODE(rt1.c3))))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (((((((((rt1.c5 IN (rt1.c0)))OR(((rt1.c1)<<(NULL)))))OR(STRFTIME(NULL, rt1.c2, rt1.c0))))AND(UNICODE(rt1.c3))))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY (((((((((rt1.c5 IN (rt1.c0)))OR(((rt1.c1)<<(NULL)))))OR(STRFTIME(NULL, rt1.c2, rt1.c0))))AND(UNICODE(rt1.c3))))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3))));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN rt1 ON (NOT (rt0.c3)) WHERE ((((((((((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt0.c2))))AND(('CPfV舷g' IN ()))))OR(((0.8835863598109516)IS(rt0.c3)))))OR(CASE WHEN vt0.c0 THEN rt1.c5 END)))AND(((rt1.c4)%(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt0.c2))))AND(('CPfV舷g' IN ()))))OR(((0.8835863598109516)IS(rt0.c3)))))OR(CASE WHEN vt0.c0 THEN rt1.c5 END)))AND(((rt1.c4)%(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN rt1 ON (NOT (rt0.c3)));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN rt1 ON (NOT (rt0.c3)) WHERE ((((((((((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt0.c2))))AND(('CPfV舷g' IN ()))))OR(((0.8835863598109516)IS(rt0.c3)))))OR(CASE WHEN vt0.c0 THEN rt1.c5 END)))AND(((rt1.c4)%(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt0.c2))))AND(('CPfV舷g' IN ()))))OR(((0.8835863598109516)IS(rt0.c3)))))OR(CASE WHEN vt0.c0 THEN rt1.c5 END)))AND(((rt1.c4)%(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN rt1 ON (NOT (rt0.c3)));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN rt1 ON (NOT (rt0.c3)) WHERE ((((((((((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt0.c2))))AND(('CPfV舷g' IN ()))))OR(((0.8835863598109516)IS(rt0.c3)))))OR(CASE WHEN vt0.c0 THEN rt1.c5 END)))AND(((rt1.c4)%(rt0.c4)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((x'')OR('')))OR(CAST(rt1.c5 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR('')))OR(CAST(rt1.c5 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((x'')OR('')))OR(CAST(rt1.c5 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR('')))OR(CAST(rt1.c5 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((x'')OR('')))OR(CAST(rt1.c5 AS BLOB))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c4)))%(((NULL) IS FALSE)))) ORDER BY ((CAST(rt1.c4 AS TEXT)) NOT BETWEEN (CASE rt1.c3  WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c2 END) AND (rt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c4)))%(((NULL) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CAST(rt1.c4 AS TEXT)) NOT BETWEEN (CASE rt1.c3  WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c2 END) AND (rt1.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c4)))%(((NULL) IS FALSE)))) ORDER BY ((CAST(rt1.c4 AS TEXT)) NOT BETWEEN (CASE rt1.c3  WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c2 END) AND (rt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c4)))%(((NULL) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CAST(rt1.c4 AS TEXT)) NOT BETWEEN (CASE rt1.c3  WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c2 END) AND (rt1.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c4)))%(((NULL) IS FALSE)))) ORDER BY ((CAST(rt1.c4 AS TEXT)) NOT BETWEEN (CASE rt1.c3  WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c2 END) AND (rt1.c1)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (' *');
SELECT SUM(count) FROM (SELECT ((' *') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (' *');
SELECT SUM(count) FROM (SELECT ((' *') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (' *');
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((CAST(vt0.c0 AS REAL))IS(((0.4607062816529316) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))IS(((0.4607062816529316) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((CAST(vt0.c0 AS REAL))IS(((0.4607062816529316) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))IS(((0.4607062816529316) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((CAST(vt0.c0 AS REAL))IS(((0.4607062816529316) IS FALSE)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ (LIKELIHOOD(vt0.c0, 0.8347025184133015)))) ORDER BY ((((rt0.c4)+(vt0.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (LIKELIHOOD(vt0.c0, 0.8347025184133015)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c4)+(vt0.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ (LIKELIHOOD(vt0.c0, 0.8347025184133015)))) ORDER BY ((((rt0.c4)+(vt0.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (LIKELIHOOD(vt0.c0, 0.8347025184133015)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c4)+(vt0.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ (LIKELIHOOD(vt0.c0, 0.8347025184133015)))) ORDER BY ((((rt0.c4)+(vt0.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3 COLLATE RTRIM))<>((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 COLLATE RTRIM))!=((rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3 COLLATE RTRIM))<>((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 COLLATE RTRIM))!=((rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3 COLLATE RTRIM))<>((rt0.c2))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c4)) AS BLOB)) ORDER BY (((rt1.c5, rt1.c2, rt1.c2)) NOT BETWEEN ((0.60342577258658, ((rt1.c4)|(rt1.c0)), ((((0.40135089883895125)OR(vt0.c0)))AND(rt1.c5)))) AND (((- (rt1.c5)), (('1138591948')!=(rt1.c5)), (((rt1.c5)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c4)) AS BLOB)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c5, rt1.c2, rt1.c2)) NOT BETWEEN ((0.60342577258658, ((rt1.c4)|(rt1.c0)), ((((0.40135089883895125)OR(vt0.c0)))AND(rt1.c5)))) AND (((- (rt1.c5)), (('1138591948')!=(rt1.c5)), (((rt1.c5)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c4)) AS BLOB)) ORDER BY (((rt1.c5, rt1.c2, rt1.c2)) NOT BETWEEN ((0.60342577258658, ((rt1.c4)|(rt1.c0)), ((((0.40135089883895125)OR(vt0.c0)))AND(rt1.c5)))) AND (((- (rt1.c5)), (('1138591948')!=(rt1.c5)), (((rt1.c5)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c4)) AS BLOB)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c5, rt1.c2, rt1.c2)) NOT BETWEEN ((0.60342577258658, ((rt1.c4)|(rt1.c0)), ((((0.40135089883895125)OR(vt0.c0)))AND(rt1.c5)))) AND (((- (rt1.c5)), (('1138591948')!=(rt1.c5)), (((rt1.c5)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c4)) AS BLOB)) ORDER BY (((rt1.c5, rt1.c2, rt1.c2)) NOT BETWEEN ((0.60342577258658, ((rt1.c4)|(rt1.c0)), ((((0.40135089883895125)OR(vt0.c0)))AND(rt1.c5)))) AND (((- (rt1.c5)), (('1138591948')!=(rt1.c5)), (((rt1.c5)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (+ (rt1.c4 COLLATE RTRIM)) LEFT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt0.c2 THEN rt1.c5 ELSE rt0.c2 END THEN ((0.9302748028865538) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END WHERE (rt0.c0) ORDER BY ((((CASE rt1.c4  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c3 END)AND(((((((((rt1.c4)AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt1.c1)))))AND((~ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (+ (rt1.c4 COLLATE RTRIM)) LEFT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt0.c2 THEN rt1.c5 ELSE rt0.c2 END THEN ((0.9302748028865538) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END ORDER BY ((((CASE rt1.c4  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c3 END)AND(((((((((rt1.c4)AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt1.c1)))))AND((~ (rt1.c2)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (+ (rt1.c4 COLLATE RTRIM)) LEFT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt0.c2 THEN rt1.c5 ELSE rt0.c2 END THEN ((0.9302748028865538) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END WHERE (rt0.c0) ORDER BY ((((CASE rt1.c4  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c3 END)AND(((((((((rt1.c4)AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt1.c1)))))AND((~ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (+ (rt1.c4 COLLATE RTRIM)) LEFT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt0.c2 THEN rt1.c5 ELSE rt0.c2 END THEN ((0.9302748028865538) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END ORDER BY ((((CASE rt1.c4  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c3 END)AND(((((((((rt1.c4)AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt1.c1)))))AND((~ (rt1.c2)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (+ (rt1.c4 COLLATE RTRIM)) LEFT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt0.c2 THEN rt1.c5 ELSE rt0.c2 END THEN ((0.9302748028865538) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END WHERE (rt0.c0) ORDER BY ((((CASE rt1.c4  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c3 END)AND(((((((((rt1.c4)AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt1.c1)))))AND((~ (rt1.c2))));
SELECT * FROM vt0 CROSS JOIN rt1 ON CAST(((rt1.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)) AS NUMERIC) WHERE (CASE WHEN UPPER(DISTINCT rt1.c3) THEN rt1.c2 COLLATE RTRIM WHEN -1.350895218E9 THEN (- (1182130550)) WHEN UPPER(rt1.c1) THEN CAST(rt1.c4 AS NUMERIC) END) ORDER BY (((rt1.c0 IN (rt1.c5)))<<(x'edc4')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(DISTINCT rt1.c3) THEN rt1.c2 COLLATE RTRIM WHEN -1.350895218E9 THEN (- (1182130550)) WHEN UPPER(rt1.c1) THEN CAST(rt1.c4 AS NUMERIC) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CAST(((rt1.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)) AS NUMERIC) ORDER BY (((rt1.c0 IN (rt1.c5)))<<(x'edc4')) DESC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt1 ON CAST(((rt1.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)) AS NUMERIC) WHERE (CASE WHEN UPPER(DISTINCT rt1.c3) THEN rt1.c2 COLLATE RTRIM WHEN -1.350895218E9 THEN (- (1182130550)) WHEN UPPER(rt1.c1) THEN CAST(rt1.c4 AS NUMERIC) END) ORDER BY (((rt1.c0 IN (rt1.c5)))<<(x'edc4')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(DISTINCT rt1.c3) THEN rt1.c2 COLLATE RTRIM WHEN -1.350895218E9 THEN (- (1182130550)) WHEN UPPER(rt1.c1) THEN CAST(rt1.c4 AS NUMERIC) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CAST(((rt1.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)) AS NUMERIC) ORDER BY (((rt1.c0 IN (rt1.c5)))<<(x'edc4')) DESC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt1 ON CAST(((rt1.c3) NOT BETWEEN (rt1.c2) AND (vt0.c0)) AS NUMERIC) WHERE (CASE WHEN UPPER(DISTINCT rt1.c3) THEN rt1.c2 COLLATE RTRIM WHEN -1.350895218E9 THEN (- (1182130550)) WHEN UPPER(rt1.c1) THEN CAST(rt1.c4 AS NUMERIC) END) ORDER BY (((rt1.c0 IN (rt1.c5)))<<(x'edc4')) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (NULL);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))LIKE(((rt0.c3)|(rt0.c4))))) ORDER BY ((((((rt0.c2)OR(rt0.c3)))AND(NULL))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))LIKE(((rt0.c3)|(rt0.c4))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY ((((((rt0.c2)OR(rt0.c3)))AND(NULL))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c0) IS FALSE))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))LIKE(((rt0.c3)|(rt0.c4))))) ORDER BY ((((((rt0.c2)OR(rt0.c3)))AND(NULL))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))LIKE(((rt0.c3)|(rt0.c4))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY ((((((rt0.c2)OR(rt0.c3)))AND(NULL))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c0) IS FALSE))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))LIKE(((rt0.c3)|(rt0.c4))))) ORDER BY ((((((rt0.c2)OR(rt0.c3)))AND(NULL))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c0) IS FALSE)));
SELECT * FROM rt1, vt0, rt0 WHERE (((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) IN ())) ORDER BY ABS(((rt1.c5)>=(rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) IN ())) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ABS(((rt1.c5)>=(rt0.c2))) ASC  NULLS FIRST);
SELECT * FROM rt1, vt0, rt0 WHERE (((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) IN ())) ORDER BY ABS(((rt1.c5)>=(rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) IN ())) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ABS(((rt1.c5)>=(rt0.c2))) ASC  NULLS FIRST);
SELECT * FROM rt1, vt0, rt0 WHERE (((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) IN ())) ORDER BY ABS(((rt1.c5)>=(rt0.c2))) ASC  NULLS FIRST;
SELECT * FROM rt1, rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (CASE ((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))  WHEN ((x'd7b0') IS TRUE) THEN ((x'')&(rt1.c5)) END) ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))  WHEN ((x'd7b0') IS TRUE) THEN ((x'')&(rt1.c5)) END) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN vt0 ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt1, rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (CASE ((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))  WHEN ((x'd7b0') IS TRUE) THEN ((x'')&(rt1.c5)) END) ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))  WHEN ((x'd7b0') IS TRUE) THEN ((x'')&(rt1.c5)) END) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN vt0 ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt1, rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (CASE ((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1))  WHEN ((x'd7b0') IS TRUE) THEN ((x'')&(rt1.c5)) END) ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))));
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CASE WHEN ((rt1.c0)<<('')) THEN ((rt1.c1)>=(vt0.c0)) ELSE HEX(DISTINCT x'') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)<<('')) THEN ((rt1.c1)>=(vt0.c0)) ELSE HEX(DISTINCT x'') END) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CASE WHEN ((rt1.c0)<<('')) THEN ((rt1.c1)>=(vt0.c0)) ELSE HEX(DISTINCT x'') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)<<('')) THEN ((rt1.c1)>=(vt0.c0)) ELSE HEX(DISTINCT x'') END) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CASE WHEN ((rt1.c0)<<('')) THEN ((rt1.c1)>=(vt0.c0)) ELSE HEX(DISTINCT x'') END);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((TOTAL_CHANGES()) IS TRUE) WHERE (((((rt1.c1)!=(rt0.c0)))!=(LIKELY(rt0.c3)))) ORDER BY ((((CASE rt1.c5  WHEN rt1.c5 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c3 WHEN 0xffffffffebb786ed THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c4 END)AND((NOT (rt1.c5)))))AND((x'' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)!=(rt0.c0)))!=(LIKELY(rt0.c3)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((TOTAL_CHANGES()) IS TRUE) ORDER BY ((((CASE rt1.c5  WHEN rt1.c5 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c3 WHEN 0xffffffffebb786ed THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c4 END)AND((NOT (rt1.c5)))))AND((x'' IN ()))) ASC);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((TOTAL_CHANGES()) IS TRUE) WHERE (((((rt1.c1)!=(rt0.c0)))!=(LIKELY(rt0.c3)))) ORDER BY ((((CASE rt1.c5  WHEN rt1.c5 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c3 WHEN 0xffffffffebb786ed THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c4 END)AND((NOT (rt1.c5)))))AND((x'' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)!=(rt0.c0)))!=(LIKELY(rt0.c3)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((TOTAL_CHANGES()) IS TRUE) ORDER BY ((((CASE rt1.c5  WHEN rt1.c5 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c3 WHEN 0xffffffffebb786ed THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c4 END)AND((NOT (rt1.c5)))))AND((x'' IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c3) IS FALSE) THEN x'' END) ORDER BY CAST(CASE rt1.c0  WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c0 END AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c3) IS FALSE) THEN x'' END) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0 ORDER BY CAST(CASE rt1.c0  WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c0 END AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c3) IS FALSE) THEN x'' END) ORDER BY CAST(CASE rt1.c0  WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c0 END AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c3) IS FALSE) THEN x'' END) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0 ORDER BY CAST(CASE rt1.c0  WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c0 END AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c3) IS FALSE) THEN x'' END) ORDER BY CAST(CASE rt1.c0  WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c0 END AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM);
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((rt1.c1 IN (rt0.c2))) BETWEEN ((((rt0.c4))>=(('270837342')))) AND (((0X976a4a6) NOT BETWEEN (rt1.c4) AND ('wz%.Q鋽5%-')))) WHERE ((((~ (rt0.c1)))<(rt1.c3 COLLATE NOCASE))) ORDER BY (((rt0.c0 IN ()))<<(((rt1.c5) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))<(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((rt1.c1 IN (rt0.c2))) BETWEEN ((((rt0.c4))>=(('270837342')))) AND (((0X976a4a6) NOT BETWEEN (rt1.c4) AND ('wz%.Q鋽5%-')))) ORDER BY (((rt0.c0 IN ()))<<(((rt1.c5) IS FALSE)))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((rt1.c1 IN (rt0.c2))) BETWEEN ((((rt0.c4))>=(('270837342')))) AND (((0X976a4a6) NOT BETWEEN (rt1.c4) AND ('wz%.Q鋽5%-')))) WHERE ((((~ (rt0.c1)))<(rt1.c3 COLLATE NOCASE))) ORDER BY (((rt0.c0 IN ()))<<(((rt1.c5) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))<(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((rt1.c1 IN (rt0.c2))) BETWEEN ((((rt0.c4))>=(('270837342')))) AND (((0X976a4a6) NOT BETWEEN (rt1.c4) AND ('wz%.Q鋽5%-')))) ORDER BY (((rt0.c0 IN ()))<<(((rt1.c5) IS FALSE)))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (((rt1.c1 IN (rt0.c2))) BETWEEN ((((rt0.c4))>=(('270837342')))) AND (((0X976a4a6) NOT BETWEEN (rt1.c4) AND ('wz%.Q鋽5%-')))) WHERE ((((~ (rt0.c1)))<(rt1.c3 COLLATE NOCASE))) ORDER BY (((rt0.c0 IN ()))<<(((rt1.c5) IS FALSE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt0.c1)>=(rt0.c0))) NOT BETWEEN ((~ (rt1.c2))) AND (((rt1.c3)>=(rt1.c2))))) ORDER BY (~ (rt1.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt0.c0))) NOT BETWEEN ((~ (rt1.c2))) AND (((rt1.c3)>=(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (~ (rt1.c1)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt0.c1)>=(rt0.c0))) NOT BETWEEN ((~ (rt1.c2))) AND (((rt1.c3)>=(rt1.c2))))) ORDER BY (~ (rt1.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt0.c0))) NOT BETWEEN ((~ (rt1.c2))) AND (((rt1.c3)>=(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (~ (rt1.c1)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt0.c1)>=(rt0.c0))) NOT BETWEEN ((~ (rt1.c2))) AND (((rt1.c3)>=(rt1.c2))))) ORDER BY (~ (rt1.c1)) COLLATE RTRIM DESC;
SELECT * FROM rt1 WHERE ((NOT (((rt1.c2) IS TRUE)))) ORDER BY CAST(TYPEOF(rt1.c3) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(TYPEOF(rt1.c3) AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((NOT (((rt1.c2) IS TRUE)))) ORDER BY CAST(TYPEOF(rt1.c3) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(TYPEOF(rt1.c3) AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((NOT (((rt1.c2) IS TRUE)))) ORDER BY CAST(TYPEOF(rt1.c3) AS TEXT) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (('' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (('' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (('' IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c3, rt0.c3, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, vt0.c0, 1.314777127E9, vt0.c0, rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c3, rt0.c3, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, vt0.c0, 1.314777127E9, vt0.c0, rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c3, rt0.c3, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, vt0.c0, 1.314777127E9, vt0.c0, rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c3, rt0.c3, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, vt0.c0, 1.314777127E9, vt0.c0, rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c3, rt0.c3, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, vt0.c0, 1.314777127E9, vt0.c0, rt0.c0))) COLLATE RTRIM);
SELECT * FROM rt1, vt0 WHERE (((((((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))OR(rt1.c3)))OR(((rt1.c5)>=(rt1.c0)))))OR((vt0.c0 IN ()))))AND(rt1.c5)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))OR(rt1.c3)))OR(((rt1.c5)>=(rt1.c0)))))OR((vt0.c0 IN ()))))AND(rt1.c5))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))OR(rt1.c3)))OR(((rt1.c5)>=(rt1.c0)))))OR((vt0.c0 IN ()))))AND(rt1.c5)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))OR(rt1.c3)))OR(((rt1.c5)>=(rt1.c0)))))OR((vt0.c0 IN ()))))AND(rt1.c5))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))OR(rt1.c3)))OR(((rt1.c5)>=(rt1.c0)))))OR((vt0.c0 IN ()))))AND(rt1.c5)));
SELECT ALL COUNT(*) FROM rt0 WHERE (0Xffffffffe11bd21d);
SELECT SUM(count) FROM (SELECT ((0Xffffffffe11bd21d) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0Xffffffffe11bd21d);
SELECT SUM(count) FROM (SELECT ((0Xffffffffe11bd21d) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0Xffffffffe11bd21d);
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON CAST((~ (rt1.c3)) AS TEXT) CROSS JOIN vt0 ON ((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), rt1.c3 COLLATE NOCASE, (((rt0.c0, 0.3756571087849081, rt1.c2))>((rt0.c2, rt0.c0, rt1.c3)))))>=(((('1272137092')>>(rt0.c3)), (((rt1.c0, rt0.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c3, rt1.c0)) AND ((rt0.c2, rt0.c2, vt0.c0))), ((rt1.c5)LIKE(rt1.c2))))) WHERE ((((((rt1.c3))>=((rt0.c0))))-((+ (NULL)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3))>=((rt0.c0))))-((+ (NULL))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST((~ (rt1.c3)) AS TEXT) CROSS JOIN vt0 ON ((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), rt1.c3 COLLATE NOCASE, (((rt0.c0, 0.3756571087849081, rt1.c2))>((rt0.c2, rt0.c0, rt1.c3)))))>=(((('1272137092')>>(rt0.c3)), (((rt1.c0, rt0.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c3, rt1.c0)) AND ((rt0.c2, rt0.c2, vt0.c0))), ((rt1.c5)LIKE(rt1.c2))))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON CAST((~ (rt1.c3)) AS TEXT) CROSS JOIN vt0 ON ((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), rt1.c3 COLLATE NOCASE, (((rt0.c0, 0.3756571087849081, rt1.c2))>((rt0.c2, rt0.c0, rt1.c3)))))>=(((('1272137092')>>(rt0.c3)), (((rt1.c0, rt0.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c3, rt1.c0)) AND ((rt0.c2, rt0.c2, vt0.c0))), ((rt1.c5)LIKE(rt1.c2))))) WHERE ((((((rt1.c3))>=((rt0.c0))))-((+ (NULL)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3))>=((rt0.c0))))-((+ (NULL))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST((~ (rt1.c3)) AS TEXT) CROSS JOIN vt0 ON ((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), rt1.c3 COLLATE NOCASE, (((rt0.c0, 0.3756571087849081, rt1.c2))>((rt0.c2, rt0.c0, rt1.c3)))))>=(((('1272137092')>>(rt0.c3)), (((rt1.c0, rt0.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c3, rt1.c0)) AND ((rt0.c2, rt0.c2, vt0.c0))), ((rt1.c5)LIKE(rt1.c2))))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON CAST((~ (rt1.c3)) AS TEXT) CROSS JOIN vt0 ON ((((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), rt1.c3 COLLATE NOCASE, (((rt0.c0, 0.3756571087849081, rt1.c2))>((rt0.c2, rt0.c0, rt1.c3)))))>=(((('1272137092')>>(rt0.c3)), (((rt1.c0, rt0.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c3, rt1.c0)) AND ((rt0.c2, rt0.c2, vt0.c0))), ((rt1.c5)LIKE(rt1.c2))))) WHERE ((((((rt1.c3))>=((rt0.c0))))-((+ (NULL)))));
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((((rt1.c5)||(rt1.c0)))IS NOT(CAST(rt1.c2 AS REAL)))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ((((((rt1.c5)||(rt1.c0)))IS NOT(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY rt1.c1);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((((rt1.c5)||(rt1.c0)))IS NOT(CAST(rt1.c2 AS REAL)))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ((((((rt1.c5)||(rt1.c0)))IS NOT(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY rt1.c1);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((((rt1.c5)||(rt1.c0)))IS NOT(CAST(rt1.c2 AS REAL)))) ORDER BY rt1.c1;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (- ((+ (rt0.c1)))) WHERE ((((rt1.c1 IN (rt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (- ((+ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (- ((+ (rt0.c1)))) WHERE ((((rt1.c1 IN (rt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (- ((+ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (- ((+ (rt0.c1)))) WHERE ((((rt1.c1 IN (rt1.c1))) NOT NULL));
SELECT * FROM rt0, vt0 NATURAL JOIN rt1 WHERE ((((rt0.c3) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN rt1);
SELECT * FROM rt0, vt0 NATURAL JOIN rt1 WHERE ((((rt0.c3) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN rt1);
SELECT * FROM rt0, vt0 NATURAL JOIN rt1 WHERE ((((rt0.c3) NOT NULL) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt1 INNER JOIN rt0 ON rt0.c3 WHERE (rt1.c5 COLLATE BINARY) ORDER BY 0.807122874634882;
SELECT SUM(count) FROM (SELECT ((rt1.c5 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 INNER JOIN rt0 ON rt0.c3 ORDER BY 0.807122874634882);
SELECT ALL COUNT(*) FROM vt0, rt1 INNER JOIN rt0 ON rt0.c3 WHERE (rt1.c5 COLLATE BINARY) ORDER BY 0.807122874634882;
SELECT SUM(count) FROM (SELECT ((rt1.c5 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 INNER JOIN rt0 ON rt0.c3 ORDER BY 0.807122874634882);
SELECT ALL COUNT(*) FROM vt0, rt1 INNER JOIN rt0 ON rt0.c3 WHERE (rt1.c5 COLLATE BINARY) ORDER BY 0.807122874634882;
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND (((~ (rt0.c1)))))) ORDER BY (rt0.c2 IN (rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND (((~ (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN (rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND (((~ (rt0.c1)))))) ORDER BY (rt0.c2 IN (rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND (((~ (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN (rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND (((~ (rt0.c1)))))) ORDER BY (rt0.c2 IN (rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0  NULLS LAST, ((((vt0.c0)>(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST, ((((vt0.c0)>(vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0  NULLS LAST, ((((vt0.c0)>(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST, ((((vt0.c0)>(vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0  NULLS LAST, ((((vt0.c0)>(vt0.c0))) ISNULL);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ('w''') ORDER BY ((CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c1 END) ISNULL), ABS(DISTINCT ((rt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (('w''') IS TRUE)  as count FROM rt1, vt0 NOT INDEXED, rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c1 END) ISNULL), ABS(DISTINCT ((rt0.c1) IS TRUE)));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ('w''') ORDER BY ((CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c1 END) ISNULL), ABS(DISTINCT ((rt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (('w''') IS TRUE)  as count FROM rt1, vt0 NOT INDEXED, rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c1 END) ISNULL), ABS(DISTINCT ((rt0.c1) IS TRUE)));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ('w''') ORDER BY ((CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c1 END) ISNULL), ABS(DISTINCT ((rt0.c1) IS TRUE));
SELECT * FROM vt0, rt0, rt1 WHERE ((((((rt1.c4))<=((rt0.c3))))<<(((rt1.c1)-('-362365827'))))) ORDER BY CAST('BR' AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c4))<=((rt0.c3))))<<(((rt1.c1)-('-362365827'))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY CAST('BR' AS REAL)  NULLS FIRST);
SELECT * FROM vt0, rt0, rt1 WHERE ((((((rt1.c4))<=((rt0.c3))))<<(((rt1.c1)-('-362365827'))))) ORDER BY CAST('BR' AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c4))<=((rt0.c3))))<<(((rt1.c1)-('-362365827'))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY CAST('BR' AS REAL)  NULLS FIRST);
SELECT * FROM vt0, rt0, rt1 WHERE ((((((rt1.c4))<=((rt0.c3))))<<(((rt1.c1)-('-362365827'))))) ORDER BY CAST('BR' AS REAL)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(IFNULL(rt0.c3, rt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(rt0.c3, rt0.c0) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(IFNULL(rt0.c3, rt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(rt0.c3, rt0.c0) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(IFNULL(rt0.c3, rt0.c0) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (~ ((rt1.c5 IN (rt1.c2)))) WHERE (CAST(json_object(rt0.c1, rt1.c3) AS INTEGER)) ORDER BY CASE ((rt1.c1) NOT BETWEEN ('Y^') AND (rt0.c4))  WHEN rt1.c2 THEN ((rt1.c3)+(0.30725179844191464)) WHEN ((rt1.c1)&(vt0.c0)) THEN ((rt1.c3)==(rt0.c4)) WHEN (rt0.c2 IN ()) THEN (((rt1.c1, rt0.c0, rt0.c4)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c3)) AND ((rt1.c5, rt0.c3, rt1.c2))) ELSE ((((rt0.c0)AND(rt0.c1)))AND(rt1.c1)) END  NULLS LAST, CAST(((rt1.c1)|(rt1.c4)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_object(rt0.c1, rt1.c3) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (~ ((rt1.c5 IN (rt1.c2)))) ORDER BY CASE ((rt1.c1) NOT BETWEEN ('Y^') AND (rt0.c4))  WHEN rt1.c2 THEN ((rt1.c3)+(0.30725179844191464)) WHEN ((rt1.c1)&(vt0.c0)) THEN ((rt1.c3)==(rt0.c4)) WHEN (rt0.c2 IN ()) THEN (((rt1.c1, rt0.c0, rt0.c4)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c3)) AND ((rt1.c5, rt0.c3, rt1.c2))) ELSE ((((rt0.c0)AND(rt0.c1)))AND(rt1.c1)) END  NULLS LAST, CAST(((rt1.c1)|(rt1.c4)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (~ ((rt1.c5 IN (rt1.c2)))) WHERE (CAST(json_object(rt0.c1, rt1.c3) AS INTEGER)) ORDER BY CASE ((rt1.c1) NOT BETWEEN ('Y^') AND (rt0.c4))  WHEN rt1.c2 THEN ((rt1.c3)+(0.30725179844191464)) WHEN ((rt1.c1)&(vt0.c0)) THEN ((rt1.c3)==(rt0.c4)) WHEN (rt0.c2 IN ()) THEN (((rt1.c1, rt0.c0, rt0.c4)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c3)) AND ((rt1.c5, rt0.c3, rt1.c2))) ELSE ((((rt0.c0)AND(rt0.c1)))AND(rt1.c1)) END  NULLS LAST, CAST(((rt1.c1)|(rt1.c4)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_object(rt0.c1, rt1.c3) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (~ ((rt1.c5 IN (rt1.c2)))) ORDER BY CASE ((rt1.c1) NOT BETWEEN ('Y^') AND (rt0.c4))  WHEN rt1.c2 THEN ((rt1.c3)+(0.30725179844191464)) WHEN ((rt1.c1)&(vt0.c0)) THEN ((rt1.c3)==(rt0.c4)) WHEN (rt0.c2 IN ()) THEN (((rt1.c1, rt0.c0, rt0.c4)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c3)) AND ((rt1.c5, rt0.c3, rt1.c2))) ELSE ((((rt0.c0)AND(rt0.c1)))AND(rt1.c1)) END  NULLS LAST, CAST(((rt1.c1)|(rt1.c4)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (~ ((rt1.c5 IN (rt1.c2)))) WHERE (CAST(json_object(rt0.c1, rt1.c3) AS INTEGER)) ORDER BY CASE ((rt1.c1) NOT BETWEEN ('Y^') AND (rt0.c4))  WHEN rt1.c2 THEN ((rt1.c3)+(0.30725179844191464)) WHEN ((rt1.c1)&(vt0.c0)) THEN ((rt1.c3)==(rt0.c4)) WHEN (rt0.c2 IN ()) THEN (((rt1.c1, rt0.c0, rt0.c4)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c3)) AND ((rt1.c5, rt0.c3, rt1.c2))) ELSE ((((rt0.c0)AND(rt0.c1)))AND(rt1.c1)) END  NULLS LAST, CAST(((rt1.c1)|(rt1.c4)) AS INTEGER);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((NOT (((((rt1.c3)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt1.c3)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY '' ASC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((NOT (((((rt1.c3)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt1.c3)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY '' ASC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((NOT (((((rt1.c3)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY '' ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (rt1.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE ((~ (((((x'e256')AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((x'e256')AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ (((((x'e256')AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((x'e256')AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ (((((x'e256')AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM rt0, rt1 NOT INDEXED WHERE (CAST(NULL AS INTEGER) COLLATE BINARY) ORDER BY (((rt1.c3, rt0.c3, '-1645076284')) BETWEEN ((CAST(rt1.c2 AS TEXT), CASE rt1.c1  WHEN rt1.c5 THEN rt0.c3 END, (rt0.c0 IN (rt0.c4)))) AND ((LIKELY(rt1.c3), rt1.c4, ((((rt0.c3)OR(rt1.c4)))OR(rt1.c2))))), (+ (CAST('771638920' AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c3, rt0.c3, '-1645076284')) BETWEEN ((CAST(rt1.c2 AS TEXT), CASE rt1.c1  WHEN rt1.c5 THEN rt0.c3 END, (rt0.c0 IN (rt0.c4)))) AND ((LIKELY(rt1.c3), rt1.c4, ((((rt0.c3)OR(rt1.c4)))OR(rt1.c2))))), (+ (CAST('771638920' AS INTEGER)))  NULLS LAST);
SELECT * FROM rt0, rt1 NOT INDEXED WHERE (CAST(NULL AS INTEGER) COLLATE BINARY) ORDER BY (((rt1.c3, rt0.c3, '-1645076284')) BETWEEN ((CAST(rt1.c2 AS TEXT), CASE rt1.c1  WHEN rt1.c5 THEN rt0.c3 END, (rt0.c0 IN (rt0.c4)))) AND ((LIKELY(rt1.c3), rt1.c4, ((((rt0.c3)OR(rt1.c4)))OR(rt1.c2))))), (+ (CAST('771638920' AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c3, rt0.c3, '-1645076284')) BETWEEN ((CAST(rt1.c2 AS TEXT), CASE rt1.c1  WHEN rt1.c5 THEN rt0.c3 END, (rt0.c0 IN (rt0.c4)))) AND ((LIKELY(rt1.c3), rt1.c4, ((((rt0.c3)OR(rt1.c4)))OR(rt1.c2))))), (+ (CAST('771638920' AS INTEGER)))  NULLS LAST);
SELECT * FROM rt0, rt1 NOT INDEXED WHERE (CAST(NULL AS INTEGER) COLLATE BINARY) ORDER BY (((rt1.c3, rt0.c3, '-1645076284')) BETWEEN ((CAST(rt1.c2 AS TEXT), CASE rt1.c1  WHEN rt1.c5 THEN rt0.c3 END, (rt0.c0 IN (rt0.c4)))) AND ((LIKELY(rt1.c3), rt1.c4, ((((rt0.c3)OR(rt1.c4)))OR(rt1.c2))))), (+ (CAST('771638920' AS INTEGER)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST((('1385543345')<=(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('1385543345')<=(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST((('1385543345')<=(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('1385543345')<=(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST((('1385543345')<=(rt0.c3)) AS INTEGER));
SELECT ALL * FROM rt1 WHERE ((((((x'b262')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5)))) NOT BETWEEN (((rt1.c5)||(rt1.c1))) AND (((rt1.c4)%(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'b262')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5)))) NOT BETWEEN (((rt1.c5)||(rt1.c1))) AND (((rt1.c4)%(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((x'b262')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5)))) NOT BETWEEN (((rt1.c5)||(rt1.c1))) AND (((rt1.c4)%(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'b262')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5)))) NOT BETWEEN (((rt1.c5)||(rt1.c1))) AND (((rt1.c4)%(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((x'b262')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5)))) NOT BETWEEN (((rt1.c5)||(rt1.c1))) AND (((rt1.c4)%(rt1.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY (((((((-1268231023, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.013240842978244016, vt0.c0))))OR(((vt0.c0)&(vt0.c0)))))OR((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY (((((((-1268231023, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.013240842978244016, vt0.c0))))OR(((vt0.c0)&(vt0.c0)))))OR((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY (((((((-1268231023, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.013240842978244016, vt0.c0))))OR(((vt0.c0)&(vt0.c0)))))OR((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY (((((((-1268231023, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.013240842978244016, vt0.c0))))OR(((vt0.c0)&(vt0.c0)))))OR((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY (((((((-1268231023, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.013240842978244016, vt0.c0))))OR(((vt0.c0)&(vt0.c0)))))OR((+ (vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN rt1 ON (((rt0.c3 IN ()))=(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END)) WHERE (((rt0.c3)LIKE(rt0.c0)) COLLATE NOCASE) ORDER BY CAST(0.8391255469110589 AS NUMERIC) ASC, ((rt0.c1) BETWEEN (((((rt0.c4)AND(vt0.c0)))AND(rt0.c1))) AND (((rt0.c0)!=(x'')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)LIKE(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 INNER JOIN rt1 ON (((rt0.c3 IN ()))=(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END)) ORDER BY CAST(0.8391255469110589 AS NUMERIC) ASC, ((rt0.c1) BETWEEN (((((rt0.c4)AND(vt0.c0)))AND(rt0.c1))) AND (((rt0.c0)<>(x'')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN rt1 ON (((rt0.c3 IN ()))=(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END)) WHERE (((rt0.c3)LIKE(rt0.c0)) COLLATE NOCASE) ORDER BY CAST(0.8391255469110589 AS NUMERIC) ASC, ((rt0.c1) BETWEEN (((((rt0.c4)AND(vt0.c0)))AND(rt0.c1))) AND (((rt0.c0)!=(x'')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)LIKE(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 INNER JOIN rt1 ON (((rt0.c3 IN ()))=(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END)) ORDER BY CAST(0.8391255469110589 AS NUMERIC) ASC, ((rt0.c1) BETWEEN (((((rt0.c4)AND(vt0.c0)))AND(rt0.c1))) AND (((rt0.c0)<>(x'')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN rt1 ON (((rt0.c3 IN ()))=(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END)) WHERE (((rt0.c3)LIKE(rt0.c0)) COLLATE NOCASE) ORDER BY CAST(0.8391255469110589 AS NUMERIC) ASC, ((rt0.c1) BETWEEN (((((rt0.c4)AND(vt0.c0)))AND(rt0.c1))) AND (((rt0.c0)!=(x'')))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c3) ORDER BY -1350895218 ASC, (((((('O枷{퐸}8Pl') NOT NULL))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)))AND((((('-188419890')OR(x'0b17')))OR(rt1.c1)))) ASC  NULLS LAST, ((NULL)/(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, rt1 ORDER BY -1350895218 ASC, (((((('O枷{퐸}8Pl') NOT NULL))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)))AND((((('-188419890')OR(x'0b17')))OR(rt1.c1)))) ASC  NULLS LAST, ((NULL)/(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c3) ORDER BY -1350895218 ASC, (((((('O枷{퐸}8Pl') NOT NULL))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)))AND((((('-188419890')OR(x'0b17')))OR(rt1.c1)))) ASC  NULLS LAST, ((NULL)/(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, rt1 ORDER BY -1350895218 ASC, (((((('O枷{퐸}8Pl') NOT NULL))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END)))AND((((('-188419890')OR(x'0b17')))OR(rt1.c1)))) ASC  NULLS LAST, ((NULL)/(CAST(rt1.c0 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4 IN ()))<>(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ()))!=(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4 IN ()))<>(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ()))!=(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4 IN ()))<>(rt0.c3 COLLATE BINARY)));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)>>(rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1))) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(CASE rt0.c1  WHEN x'' THEN rt0.c2 END)))OR(rt0.c3 COLLATE NOCASE)))OR(LIKELIHOOD(rt0.c1, 0.23753134680330434))))AND(rt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>>(rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(CASE rt0.c1  WHEN x'' THEN rt0.c2 END)))OR(rt0.c3 COLLATE NOCASE)))OR(LIKELIHOOD(rt0.c1, 0.23753134680330434))))AND(rt0.c0 COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)>>(rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1))) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(CASE rt0.c1  WHEN x'' THEN rt0.c2 END)))OR(rt0.c3 COLLATE NOCASE)))OR(LIKELIHOOD(rt0.c1, 0.23753134680330434))))AND(rt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>>(rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(CASE rt0.c1  WHEN x'' THEN rt0.c2 END)))OR(rt0.c3 COLLATE NOCASE)))OR(LIKELIHOOD(rt0.c1, 0.23753134680330434))))AND(rt0.c0 COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)>>(rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1))) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(CASE rt0.c1  WHEN x'' THEN rt0.c2 END)))OR(rt0.c3 COLLATE NOCASE)))OR(LIKELIHOOD(rt0.c1, 0.23753134680330434))))AND(rt0.c0 COLLATE RTRIM)) DESC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c2 WHEN 'T}' THEN rt1.c4 ELSE rt1.c1 END) NOT NULL)) ORDER BY 0X32f6aa5a;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c2 WHEN 'T}' THEN rt1.c4 ELSE rt1.c1 END) NOT NULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY 0X32f6aa5a);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c2 WHEN 'T}' THEN rt1.c4 ELSE rt1.c1 END) NOT NULL)) ORDER BY 0X32f6aa5a;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c2 WHEN 'T}' THEN rt1.c4 ELSE rt1.c1 END) NOT NULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY 0X32f6aa5a);
SELECT * FROM rt0, rt1 WHERE (((((((rt1.c2)AND(rt0.c2)))AND(rt0.c4))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt0.c2)))AND(rt0.c4))) IS FALSE)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((((rt1.c2)AND(rt0.c2)))AND(rt0.c4))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt0.c2)))AND(rt0.c4))) IS FALSE)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((((rt1.c2)AND(rt0.c2)))AND(rt0.c4))) IS FALSE));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt0.c4) ISNULL))/(((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) ISNULL))/(((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt0.c4) ISNULL))/(((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) ISNULL))/(((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((rt0.c4) ISNULL))/(((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c2)))));
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))) NOT NULL) ASC);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))) NOT NULL) ASC);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))) NOT NULL) ASC;
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((((((((rt1.c2)OR(rt1.c5)))OR(rt0.c0)))AND(((rt1.c2) ISNULL))))OR(rt0.c4))) ORDER BY (('270837342')+(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)OR(rt1.c5)))OR(rt0.c0)))AND(((rt1.c2) ISNULL))))OR(rt0.c4))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (('270837342')+(NULL))  NULLS LAST);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((((((((rt1.c2)OR(rt1.c5)))OR(rt0.c0)))AND(((rt1.c2) ISNULL))))OR(rt0.c4))) ORDER BY (('270837342')+(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)OR(rt1.c5)))OR(rt0.c0)))AND(((rt1.c2) ISNULL))))OR(rt0.c4))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (('270837342')+(NULL))  NULLS LAST);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((((((((rt1.c2)OR(rt1.c5)))OR(rt0.c0)))AND(((rt1.c2) ISNULL))))OR(rt0.c4))) ORDER BY (('270837342')+(NULL))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((((((rt1.c1 IN ()))AND(((rt0.c1) BETWEEN (NULL) AND (vt0.c0)))))AND(CASE rt1.c5  WHEN rt0.c1 THEN rt1.c5 ELSE 'c,' END)))OR((~ (rt0.c4)))))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(rt1.c5))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c1 IN ()))AND(((rt0.c1) BETWEEN (NULL) AND (vt0.c0)))))AND(CASE rt1.c5  WHEN rt0.c1 THEN rt1.c5 ELSE 'c,' END)))OR((~ (rt0.c4)))))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(rt1.c5))))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((((((rt1.c1 IN ()))AND(((rt0.c1) BETWEEN (NULL) AND (vt0.c0)))))AND(CASE rt1.c5  WHEN rt0.c1 THEN rt1.c5 ELSE 'c,' END)))OR((~ (rt0.c4)))))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(rt1.c5))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c1 IN ()))AND(((rt0.c1) BETWEEN (NULL) AND (vt0.c0)))))AND(CASE rt1.c5  WHEN rt0.c1 THEN rt1.c5 ELSE 'c,' END)))OR((~ (rt0.c4)))))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(rt1.c5))))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((((((rt1.c1 IN ()))AND(((rt0.c1) BETWEEN (NULL) AND (vt0.c0)))))AND(CASE rt1.c5  WHEN rt0.c1 THEN rt1.c5 ELSE 'c,' END)))OR((~ (rt0.c4)))))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(rt1.c5))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((rt0.c1)&(rt1.c4)))AND(CAST(rt0.c0 AS BLOB))))OR((~ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)&(rt1.c4)))AND(CAST(rt0.c0 AS BLOB))))OR((~ (rt1.c3))))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((rt0.c1)&(rt1.c4)))AND(CAST(rt0.c0 AS BLOB))))OR((~ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)&(rt1.c4)))AND(CAST(rt0.c0 AS BLOB))))OR((~ (rt1.c3))))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((rt0.c1)&(rt1.c4)))AND(CAST(rt0.c0 AS BLOB))))OR((~ (rt1.c3)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c4 IN ())) ORDER BY CASE '-1102447814'  WHEN rt1.c2 THEN rt1.c4 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((rt1.c4 IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE '-1102447814'  WHEN rt1.c2 THEN rt1.c4 END COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c4 IN ())) ORDER BY CASE '-1102447814'  WHEN rt1.c2 THEN rt1.c4 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((rt1.c4 IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE '-1102447814'  WHEN rt1.c2 THEN rt1.c4 END COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c4 IN ())) ORDER BY CASE '-1102447814'  WHEN rt1.c2 THEN rt1.c4 END COLLATE RTRIM ASC;
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c2)<=(rt1.c4)), ((rt1.c1) ISNULL), (+ (rt1.c1))))!=((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END, rt1.c4, MAX(rt1.c2, rt1.c4, rt1.c3, rt1.c0))))) ORDER BY (((((((rt1.c1, 'U\n', rt1.c5))!=((rt1.c2, rt1.c4, rt1.c1))))AND(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((NOT (rt1.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)<=(rt1.c4)), ((rt1.c1) ISNULL), (+ (rt1.c1))))<>((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END, rt1.c4, MAX(rt1.c2, rt1.c4, rt1.c3, rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((((((rt1.c1, 'U\n', rt1.c5))!=((rt1.c2, rt1.c4, rt1.c1))))AND(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((NOT (rt1.c3)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c2)<=(rt1.c4)), ((rt1.c1) ISNULL), (+ (rt1.c1))))!=((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END, rt1.c4, MAX(rt1.c2, rt1.c4, rt1.c3, rt1.c0))))) ORDER BY (((((((rt1.c1, 'U\n', rt1.c5))!=((rt1.c2, rt1.c4, rt1.c1))))AND(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((NOT (rt1.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)<=(rt1.c4)), ((rt1.c1) ISNULL), (+ (rt1.c1))))<>((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END, rt1.c4, MAX(rt1.c2, rt1.c4, rt1.c3, rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((((((rt1.c1, 'U\n', rt1.c5))!=((rt1.c2, rt1.c4, rt1.c1))))AND(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((NOT (rt1.c3)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c2)<=(rt1.c4)), ((rt1.c1) ISNULL), (+ (rt1.c1))))!=((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END, rt1.c4, MAX(rt1.c2, rt1.c4, rt1.c3, rt1.c0))))) ORDER BY (((((((rt1.c1, 'U\n', rt1.c5))!=((rt1.c2, rt1.c4, rt1.c1))))AND(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((NOT (rt1.c3)))) ASC  NULLS LAST;
SELECT * FROM rt0, vt0, rt1 WHERE (CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN NULL WHEN rt0.c4 THEN rt1.c3 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN NULL WHEN rt0.c4 THEN rt1.c3 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN NULL WHEN rt0.c4 THEN rt1.c3 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN NULL WHEN rt0.c4 THEN rt1.c3 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN NULL WHEN rt0.c4 THEN rt1.c3 END COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c3 AS TEXT)) NOT NULL)) ORDER BY rt1.c0 DESC  NULLS FIRST, ((CAST(rt1.c1 AS BLOB))<=((+ (rt1.c0)))), ((CAST(rt1.c2 AS BLOB)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 DESC  NULLS FIRST, ((CAST(rt1.c1 AS BLOB))<=((+ (rt1.c0)))), ((CAST(rt1.c2 AS BLOB)) NOT NULL) ASC);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c3 AS TEXT)) NOT NULL)) ORDER BY rt1.c0 DESC  NULLS FIRST, ((CAST(rt1.c1 AS BLOB))<=((+ (rt1.c0)))), ((CAST(rt1.c2 AS BLOB)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 DESC  NULLS FIRST, ((CAST(rt1.c1 AS BLOB))<=((+ (rt1.c0)))), ((CAST(rt1.c2 AS BLOB)) NOT NULL) ASC);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c3 AS TEXT)) NOT NULL)) ORDER BY rt1.c0 DESC  NULLS FIRST, ((CAST(rt1.c1 AS BLOB))<=((+ (rt1.c0)))), ((CAST(rt1.c2 AS BLOB)) NOT NULL) ASC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))>>(((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))>>(((x'') NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))>>(((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))>>(((x'') NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))>>(((x'') NOT NULL))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)&(rt0.c2))) NOT BETWEEN (SUBSTR(rt0.c3, rt0.c3)) AND ((rt0.c0 IN ())))) ORDER BY (rt0.c4 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)&(rt0.c2))) NOT BETWEEN (SUBSTR(rt0.c3, rt0.c3)) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c4 IN ()));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)&(rt0.c2))) NOT BETWEEN (SUBSTR(rt0.c3, rt0.c3)) AND ((rt0.c0 IN ())))) ORDER BY (rt0.c4 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)&(rt0.c2))) NOT BETWEEN (SUBSTR(rt0.c3, rt0.c3)) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c4 IN ()));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)&(rt0.c2))) NOT BETWEEN (SUBSTR(rt0.c3, rt0.c3)) AND ((rt0.c0 IN ())))) ORDER BY (rt0.c4 IN ());
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN ((((rt1.c0, rt0.c2, '.s_c')) NOT BETWEEN ((rt0.c4, rt1.c5, rt1.c2)) AND ((rt1.c0, rt0.c2, rt1.c4)))) AND (NULLIF(rt1.c4, rt0.c3)))) ORDER BY rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN ((((rt1.c0, rt0.c2, '.s_c')) NOT BETWEEN ((rt0.c4, rt1.c5, rt1.c2)) AND ((rt1.c0, rt0.c2, rt1.c4)))) AND (NULLIF(rt1.c4, rt0.c3)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY rt1.c3 ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN ((((rt1.c0, rt0.c2, '.s_c')) NOT BETWEEN ((rt0.c4, rt1.c5, rt1.c2)) AND ((rt1.c0, rt0.c2, rt1.c4)))) AND (NULLIF(rt1.c4, rt0.c3)))) ORDER BY rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN ((((rt1.c0, rt0.c2, '.s_c')) NOT BETWEEN ((rt0.c4, rt1.c5, rt1.c2)) AND ((rt1.c0, rt0.c2, rt1.c4)))) AND (NULLIF(rt1.c4, rt0.c3)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY rt1.c3 ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN ((((rt1.c0, rt0.c2, '.s_c')) NOT BETWEEN ((rt0.c4, rt1.c5, rt1.c2)) AND ((rt1.c0, rt0.c2, rt1.c4)))) AND (NULLIF(rt1.c4, rt0.c3)))) ORDER BY rt1.c3 ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((rt1.c5)<(rt1.c1))  WHEN (NOT (rt1.c3)) THEN ((rt1.c4)GLOB(rt1.c0)) END) ORDER BY CASE WHEN IFNULL(DISTINCT rt1.c2, rt1.c2) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1)) END, ((((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c0)))<=(((rt1.c0)=(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c5)<(rt1.c1))  WHEN (NOT (rt1.c3)) THEN ((rt1.c4)GLOB(rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN IFNULL(DISTINCT rt1.c2, rt1.c2) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1)) END, ((((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c0)))<=(((rt1.c0)=(rt1.c3)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((rt1.c5)<(rt1.c1))  WHEN (NOT (rt1.c3)) THEN ((rt1.c4)GLOB(rt1.c0)) END) ORDER BY CASE WHEN IFNULL(DISTINCT rt1.c2, rt1.c2) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1)) END, ((((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c0)))<=(((rt1.c0)=(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c5)<(rt1.c1))  WHEN (NOT (rt1.c3)) THEN ((rt1.c4)GLOB(rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN IFNULL(DISTINCT rt1.c2, rt1.c2) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1)) END, ((((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c0)))<=(((rt1.c0)=(rt1.c3)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((rt1.c5)<(rt1.c1))  WHEN (NOT (rt1.c3)) THEN ((rt1.c4)GLOB(rt1.c0)) END) ORDER BY CASE WHEN IFNULL(DISTINCT rt1.c2, rt1.c2) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1)) END, ((((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c0)))<=(((rt1.c0)=(rt1.c3))));
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((('0.9949983048691758')AND('-423734803')))AND(((rt1.c2) NOTNULL)))) ORDER BY ((rt0.c4 COLLATE BINARY)IS NOT((((rt0.c4))!=((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('0.9949983048691758')AND('-423734803')))AND(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((rt0.c4 COLLATE BINARY)IS NOT((((rt0.c4))!=((rt0.c0)))))  NULLS LAST);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((('0.9949983048691758')AND('-423734803')))AND(((rt1.c2) NOTNULL)))) ORDER BY ((rt0.c4 COLLATE BINARY)IS NOT((((rt0.c4))!=((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('0.9949983048691758')AND('-423734803')))AND(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((rt0.c4 COLLATE BINARY)IS NOT((((rt0.c4))!=((rt0.c0)))))  NULLS LAST);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((('0.9949983048691758')AND('-423734803')))AND(((rt1.c2) NOTNULL)))) ORDER BY ((rt0.c4 COLLATE BINARY)IS NOT((((rt0.c4))!=((rt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((rt1.c5)<(x'')) AS TEXT)) ORDER BY (((rt1.c5) NOT BETWEEN (256183442) AND (rt1.c2)) IN (rt1.c1 COLLATE BINARY, ((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c1)))) DESC, CASE NULLIF(vt0.c0, rt1.c3)  WHEN CASE WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c4 END THEN rt1.c1 COLLATE RTRIM WHEN COALESCE(NULL, rt1.c5) THEN (- (rt1.c1)) WHEN IFNULL(NULL, rt1.c1) THEN ((rt1.c4)OR(vt0.c0)) ELSE ((rt1.c5) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c5)<(x'')) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c5) NOT BETWEEN (256183442) AND (rt1.c2)) IN (rt1.c1 COLLATE BINARY, ((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c1)))) DESC, CASE NULLIF(vt0.c0, rt1.c3)  WHEN CASE WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c4 END THEN rt1.c1 COLLATE RTRIM WHEN COALESCE(NULL, rt1.c5) THEN (- (rt1.c1)) WHEN IFNULL(NULL, rt1.c1) THEN ((rt1.c4)OR(vt0.c0)) ELSE ((rt1.c5) IS TRUE) END DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((rt1.c5)<(x'')) AS TEXT)) ORDER BY (((rt1.c5) NOT BETWEEN (256183442) AND (rt1.c2)) IN (rt1.c1 COLLATE BINARY, ((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c1)))) DESC, CASE NULLIF(vt0.c0, rt1.c3)  WHEN CASE WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c4 END THEN rt1.c1 COLLATE RTRIM WHEN COALESCE(NULL, rt1.c5) THEN (- (rt1.c1)) WHEN IFNULL(NULL, rt1.c1) THEN ((rt1.c4)OR(vt0.c0)) ELSE ((rt1.c5) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c5)<(x'')) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c5) NOT BETWEEN (256183442) AND (rt1.c2)) IN (rt1.c1 COLLATE BINARY, ((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c1)))) DESC, CASE NULLIF(vt0.c0, rt1.c3)  WHEN CASE WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c4 END THEN rt1.c1 COLLATE RTRIM WHEN COALESCE(NULL, rt1.c5) THEN (- (rt1.c1)) WHEN IFNULL(NULL, rt1.c1) THEN ((rt1.c4)OR(vt0.c0)) ELSE ((rt1.c5) IS TRUE) END DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((rt1.c5)<(x'')) AS TEXT)) ORDER BY (((rt1.c5) NOT BETWEEN (256183442) AND (rt1.c2)) IN (rt1.c1 COLLATE BINARY, ((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c1)))) DESC, CASE NULLIF(vt0.c0, rt1.c3)  WHEN CASE WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c4 END THEN rt1.c1 COLLATE RTRIM WHEN COALESCE(NULL, rt1.c5) THEN (- (rt1.c1)) WHEN IFNULL(NULL, rt1.c1) THEN ((rt1.c4)OR(vt0.c0)) ELSE ((rt1.c5) IS TRUE) END DESC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (NULL IN (rt1.c4, vt0.c0)) THEN ((rt1.c5) IS TRUE) END) ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c5) AND (NULL))  WHEN rt1.c1 THEN (NOT (rt1.c5)) END ASC, LOWER(DISTINCT rt1.c5 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NULL IN (rt1.c4, vt0.c0)) THEN ((rt1.c5) IS TRUE) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c5) AND (NULL))  WHEN rt1.c1 THEN (NOT (rt1.c5)) END ASC, LOWER(DISTINCT rt1.c5 COLLATE NOCASE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (NULL IN (rt1.c4, vt0.c0)) THEN ((rt1.c5) IS TRUE) END) ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c5) AND (NULL))  WHEN rt1.c1 THEN (NOT (rt1.c5)) END ASC, LOWER(DISTINCT rt1.c5 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NULL IN (rt1.c4, vt0.c0)) THEN ((rt1.c5) IS TRUE) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c5) AND (NULL))  WHEN rt1.c1 THEN (NOT (rt1.c5)) END ASC, LOWER(DISTINCT rt1.c5 COLLATE NOCASE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (NULL IN (rt1.c4, vt0.c0)) THEN ((rt1.c5) IS TRUE) END) ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c5) AND (NULL))  WHEN rt1.c1 THEN (NOT (rt1.c5)) END ASC, LOWER(DISTINCT rt1.c5 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT * FROM rt1, rt0, vt0 WHERE ((((~ (rt0.c4))) NOT NULL)) ORDER BY (((((((((((((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c4))))OR(x'd853')))OR((rt0.c1 IN ()))))OR(((vt0.c0) BETWEEN (-3.72545609E8) AND (rt1.c4)))))OR(CASE rt0.c2  WHEN rt1.c5 THEN rt0.c4 END)))AND(((rt1.c5) NOT NULL))))OR(((rt0.c3)>(rt1.c4))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c4))) NOT NULL)) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((((((((((((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c4))))OR(x'd853')))OR((rt0.c1 IN ()))))OR(((vt0.c0) BETWEEN (-3.72545609E8) AND (rt1.c4)))))OR(CASE rt0.c2  WHEN rt1.c5 THEN rt0.c4 END)))AND(((rt1.c5) NOT NULL))))OR(((rt0.c3)>(rt1.c4)))));
SELECT * FROM rt1, rt0, vt0 WHERE ((((~ (rt0.c4))) NOT NULL)) ORDER BY (((((((((((((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c4))))OR(x'd853')))OR((rt0.c1 IN ()))))OR(((vt0.c0) BETWEEN (-3.72545609E8) AND (rt1.c4)))))OR(CASE rt0.c2  WHEN rt1.c5 THEN rt0.c4 END)))AND(((rt1.c5) NOT NULL))))OR(((rt0.c3)>(rt1.c4))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c4))) NOT NULL)) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((((((((((((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c4))))OR(x'd853')))OR((rt0.c1 IN ()))))OR(((vt0.c0) BETWEEN (-3.72545609E8) AND (rt1.c4)))))OR(CASE rt0.c2  WHEN rt1.c5 THEN rt0.c4 END)))AND(((rt1.c5) NOT NULL))))OR(((rt0.c3)>(rt1.c4)))));
SELECT * FROM rt1, rt0, vt0 WHERE ((((~ (rt0.c4))) NOT NULL)) ORDER BY (((((((((((((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c4))))OR(x'd853')))OR((rt0.c1 IN ()))))OR(((vt0.c0) BETWEEN (-3.72545609E8) AND (rt1.c4)))))OR(CASE rt0.c2  WHEN rt1.c5 THEN rt0.c4 END)))AND(((rt1.c5) NOT NULL))))OR(((rt0.c3)>(rt1.c4))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ((vt0.c0 IN ()), ((x'') IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ((vt0.c0 IN ()), ((x'') IS TRUE)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ((vt0.c0 IN ()), ((x'') IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ((vt0.c0 IN ()), ((x'') IS TRUE)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ((vt0.c0 IN ()), ((x'') IS TRUE))));
SELECT ALL * FROM rt0, vt0, rt1 WHERE (x'b7e6') ORDER BY ((((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(x'')) ASC, ((rt0.c4 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((x'b7e6') IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(x'')) ASC, ((rt0.c4 IN ()) IN ()) ASC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (x'b7e6') ORDER BY ((((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(x'')) ASC, ((rt0.c4 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((x'b7e6') IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(x'')) ASC, ((rt0.c4 IN ()) IN ()) ASC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (x'b7e6') ORDER BY ((((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(x'')) ASC, ((rt0.c4 IN ()) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (CAST(0.03681760651941157 AS TEXT)) ORDER BY CASE WHEN rt1.c3 COLLATE BINARY THEN ((vt0.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ((CAST(0.03681760651941157 AS TEXT)) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CASE WHEN rt1.c3 COLLATE BINARY THEN ((vt0.c0) IS FALSE) END);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (CAST(0.03681760651941157 AS TEXT)) ORDER BY CASE WHEN rt1.c3 COLLATE BINARY THEN ((vt0.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ((CAST(0.03681760651941157 AS TEXT)) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CASE WHEN rt1.c3 COLLATE BINARY THEN ((vt0.c0) IS FALSE) END);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (CAST(0.03681760651941157 AS TEXT)) ORDER BY CASE WHEN rt1.c3 COLLATE BINARY THEN ((vt0.c0) IS FALSE) END;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (rt0.c3 COLLATE RTRIM IN ()) INNER JOIN vt0 ON ((((((rt1.c2)AND(rt0.c4)))OR(rt1.c3)))+(rt1.c5 COLLATE RTRIM)) WHERE ((((CAST(rt1.c5 AS REAL)))<=((CASE rt0.c0  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 END)))) ORDER BY ((UNLIKELY(DISTINCT rt0.c3)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c5))) AND (((rt0.c2)<=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c5 AS REAL)))<=((CASE rt0.c0  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 END)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (rt0.c3 COLLATE RTRIM IN ()) INNER JOIN vt0 ON ((((((rt1.c2)AND(rt0.c4)))OR(rt1.c3)))+(rt1.c5 COLLATE RTRIM)) ORDER BY ((UNLIKELY(DISTINCT rt0.c3)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c5))) AND (((rt0.c2)<=(vt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (rt0.c3 COLLATE RTRIM IN ()) INNER JOIN vt0 ON ((((((rt1.c2)AND(rt0.c4)))OR(rt1.c3)))+(rt1.c5 COLLATE RTRIM)) WHERE ((((CAST(rt1.c5 AS REAL)))<=((CASE rt0.c0  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 END)))) ORDER BY ((UNLIKELY(DISTINCT rt0.c3)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c5))) AND (((rt0.c2)<=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c5 AS REAL)))<=((CASE rt0.c0  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 END)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (rt0.c3 COLLATE RTRIM IN ()) INNER JOIN vt0 ON ((((((rt1.c2)AND(rt0.c4)))OR(rt1.c3)))+(rt1.c5 COLLATE RTRIM)) ORDER BY ((UNLIKELY(DISTINCT rt0.c3)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c5))) AND (((rt0.c2)<=(vt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (rt0.c3 COLLATE RTRIM IN ()) INNER JOIN vt0 ON ((((((rt1.c2)AND(rt0.c4)))OR(rt1.c3)))+(rt1.c5 COLLATE RTRIM)) WHERE ((((CAST(rt1.c5 AS REAL)))<=((CASE rt0.c0  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 END)))) ORDER BY ((UNLIKELY(DISTINCT rt0.c3)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c5))) AND (((rt0.c2)<=(vt0.c0)))) DESC;
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CASE WHEN 0.8781621998116032 THEN 0.8307992356569707 COLLATE BINARY WHEN (((rt1.c5))!=((rt1.c3))) THEN rt1.c2 WHEN rt1.c2 COLLATE BINARY THEN ((x'')||(rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.8781621998116032 THEN 0.8307992356569707 COLLATE BINARY WHEN (((rt1.c5))<>((rt1.c3))) THEN rt1.c2 WHEN rt1.c2 COLLATE BINARY THEN ((x'')||(rt1.c4)) END) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CASE WHEN 0.8781621998116032 THEN 0.8307992356569707 COLLATE BINARY WHEN (((rt1.c5))!=((rt1.c3))) THEN rt1.c2 WHEN rt1.c2 COLLATE BINARY THEN ((x'')||(rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.8781621998116032 THEN 0.8307992356569707 COLLATE BINARY WHEN (((rt1.c5))<>((rt1.c3))) THEN rt1.c2 WHEN rt1.c2 COLLATE BINARY THEN ((x'')||(rt1.c4)) END) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CASE WHEN 0.8781621998116032 THEN 0.8307992356569707 COLLATE BINARY WHEN (((rt1.c5))!=((rt1.c3))) THEN rt1.c2 WHEN rt1.c2 COLLATE BINARY THEN ((x'')||(rt1.c4)) END);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c4)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c4)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c4)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c4)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c4)LIKE(rt0.c0)))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.7000189215089714);
SELECT SUM(count) FROM (SELECT ALL ((0.7000189215089714) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.7000189215089714);
SELECT SUM(count) FROM (SELECT ALL ((0.7000189215089714) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.7000189215089714);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c4)) IN ()));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE (x'815b') ORDER BY (((0.6403628269906131, rt1.c1, vt0.c0)) NOT BETWEEN (((((rt1.c5, rt1.c4, rt1.c2)) BETWEEN ((rt1.c3, rt1.c5, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c5))), ((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c3)), CASE WHEN rt1.c0 THEN rt1.c4 END)) AND ((0.5861055113669771 COLLATE NOCASE, CAST(rt1.c5 AS INTEGER), (((vt0.c0))<((rt1.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'815b') IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() ORDER BY (((0.6403628269906131, rt1.c1, vt0.c0)) NOT BETWEEN (((((rt1.c5, rt1.c4, rt1.c2)) BETWEEN ((rt1.c3, rt1.c5, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c5))), ((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c3)), CASE WHEN rt1.c0 THEN rt1.c4 END)) AND ((0.5861055113669771 COLLATE NOCASE, CAST(rt1.c5 AS INTEGER), (((vt0.c0))<((rt1.c0))))))  NULLS FIRST);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE (x'815b') ORDER BY (((0.6403628269906131, rt1.c1, vt0.c0)) NOT BETWEEN (((((rt1.c5, rt1.c4, rt1.c2)) BETWEEN ((rt1.c3, rt1.c5, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c5))), ((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c3)), CASE WHEN rt1.c0 THEN rt1.c4 END)) AND ((0.5861055113669771 COLLATE NOCASE, CAST(rt1.c5 AS INTEGER), (((vt0.c0))<((rt1.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'815b') IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() ORDER BY (((0.6403628269906131, rt1.c1, vt0.c0)) NOT BETWEEN (((((rt1.c5, rt1.c4, rt1.c2)) BETWEEN ((rt1.c3, rt1.c5, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c5))), ((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c3)), CASE WHEN rt1.c0 THEN rt1.c4 END)) AND ((0.5861055113669771 COLLATE NOCASE, CAST(rt1.c5 AS INTEGER), (((vt0.c0))<((rt1.c0))))))  NULLS FIRST);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE (x'815b') ORDER BY (((0.6403628269906131, rt1.c1, vt0.c0)) NOT BETWEEN (((((rt1.c5, rt1.c4, rt1.c2)) BETWEEN ((rt1.c3, rt1.c5, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c5))), ((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c3)), CASE WHEN rt1.c0 THEN rt1.c4 END)) AND ((0.5861055113669771 COLLATE NOCASE, CAST(rt1.c5 AS INTEGER), (((vt0.c0))<((rt1.c0))))))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2)) AND ((x'', rt0.c4, rt0.c0)))) IS FALSE)) ORDER BY HEX(DISTINCT '0.09061836242074839') DESC  NULLS FIRST, CASE (((rt0.c2))>((rt0.c4)))  WHEN (((rt0.c0))>=((rt0.c2))) THEN (rt0.c3 IN (rt0.c3)) ELSE json_valid(rt0.c0) END ASC  NULLS LAST, COALESCE(DISTINCT (+ (rt0.c0)), (((rt0.c2))<=((rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2)) AND ((x'', rt0.c4, rt0.c0)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT '0.09061836242074839') DESC  NULLS FIRST, CASE (((rt0.c2))>((rt0.c4)))  WHEN (((rt0.c0))>=((rt0.c2))) THEN (rt0.c3 IN (rt0.c3)) ELSE json_valid(rt0.c0) END ASC  NULLS LAST, COALESCE(DISTINCT (+ (rt0.c0)), (((rt0.c2))<=((rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2)) AND ((x'', rt0.c4, rt0.c0)))) IS FALSE)) ORDER BY HEX(DISTINCT '0.09061836242074839') DESC  NULLS FIRST, CASE (((rt0.c2))>((rt0.c4)))  WHEN (((rt0.c0))>=((rt0.c2))) THEN (rt0.c3 IN (rt0.c3)) ELSE json_valid(rt0.c0) END ASC  NULLS LAST, COALESCE(DISTINCT (+ (rt0.c0)), (((rt0.c2))<=((rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2)) AND ((x'', rt0.c4, rt0.c0)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT '0.09061836242074839') DESC  NULLS FIRST, CASE (((rt0.c2))>((rt0.c4)))  WHEN (((rt0.c0))>=((rt0.c2))) THEN (rt0.c3 IN (rt0.c3)) ELSE json_valid(rt0.c0) END ASC  NULLS LAST, COALESCE(DISTINCT (+ (rt0.c0)), (((rt0.c2))<=((rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2)) AND ((x'', rt0.c4, rt0.c0)))) IS FALSE)) ORDER BY HEX(DISTINCT '0.09061836242074839') DESC  NULLS FIRST, CASE (((rt0.c2))>((rt0.c4)))  WHEN (((rt0.c0))>=((rt0.c2))) THEN (rt0.c3 IN (rt0.c3)) ELSE json_valid(rt0.c0) END ASC  NULLS LAST, COALESCE(DISTINCT (+ (rt0.c0)), (((rt0.c2))<=((rt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (((((0.6240336155062435) BETWEEN (rt0.c3) AND (rt1.c1)))IS(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.6240336155062435) BETWEEN (rt0.c3) AND (rt1.c1)))IS(rt0.c2))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((0.6240336155062435) BETWEEN (rt0.c3) AND (rt1.c1)))IS(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.6240336155062435) BETWEEN (rt0.c3) AND (rt1.c1)))IS(rt0.c2))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((((0.6240336155062435) BETWEEN (rt0.c3) AND (rt1.c1)))IS(rt0.c2)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt0.c2)&(rt1.c3))  WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c3 ELSE NULL END THEN ((rt1.c3)LIKE(0.3547374397829298)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)&(rt1.c3))  WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c3 ELSE NULL END THEN ((rt1.c3)LIKE(0.3547374397829298)) ELSE NULL END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt0.c2)&(rt1.c3))  WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c3 ELSE NULL END THEN ((rt1.c3)LIKE(0.3547374397829298)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)&(rt1.c3))  WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c3 ELSE NULL END THEN ((rt1.c3)LIKE(0.3547374397829298)) ELSE NULL END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt0.c2)&(rt1.c3))  WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c3 ELSE NULL END THEN ((rt1.c3)LIKE(0.3547374397829298)) ELSE NULL END);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS NUMERIC))>=((NOT (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS NUMERIC))>=((NOT (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS NUMERIC))>=((NOT (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS NUMERIC))>=((NOT (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS NUMERIC))>=((NOT (rt1.c2)))));
SELECT * FROM rt0, rt1, vt0 WHERE (((((((((((rt1.c0) NOT NULL))OR(((((rt0.c1)OR(rt1.c5)))OR(rt1.c4)))))OR(rt1.c1 COLLATE RTRIM)))OR((((rt1.c5, rt0.c1, rt0.c1))<((rt0.c3, rt1.c4, rt1.c3))))))OR(LIKELIHOOD(rt1.c1, 0.7055610811504391))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c0) NOT NULL))OR(((((rt0.c1)OR(rt1.c5)))OR(rt1.c4)))))OR(rt1.c1 COLLATE RTRIM)))OR((((rt1.c5, rt0.c1, rt0.c1))<((rt0.c3, rt1.c4, rt1.c3))))))OR(LIKELIHOOD(rt1.c1, 0.7055610811504391)))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (((((((((((rt1.c0) NOT NULL))OR(((((rt0.c1)OR(rt1.c5)))OR(rt1.c4)))))OR(rt1.c1 COLLATE RTRIM)))OR((((rt1.c5, rt0.c1, rt0.c1))<((rt0.c3, rt1.c4, rt1.c3))))))OR(LIKELIHOOD(rt1.c1, 0.7055610811504391))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c0) NOT NULL))OR(((((rt0.c1)OR(rt1.c5)))OR(rt1.c4)))))OR(rt1.c1 COLLATE RTRIM)))OR((((rt1.c5, rt0.c1, rt0.c1))<((rt0.c3, rt1.c4, rt1.c3))))))OR(LIKELIHOOD(rt1.c1, 0.7055610811504391)))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (((((((((((rt1.c0) NOT NULL))OR(((((rt0.c1)OR(rt1.c5)))OR(rt1.c4)))))OR(rt1.c1 COLLATE RTRIM)))OR((((rt1.c5, rt0.c1, rt0.c1))<((rt0.c3, rt1.c4, rt1.c3))))))OR(LIKELIHOOD(rt1.c1, 0.7055610811504391))));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4)) THEN ((rt1.c2) ISNULL) WHEN CASE rt0.c3  WHEN rt1.c4 THEN rt0.c4 END THEN ((((rt1.c5)AND(vt0.c0)))OR('')) WHEN NULL THEN ((rt0.c2) IS TRUE) END) ORDER BY UNLIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))  NULLS LAST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4)) THEN ((rt1.c2) ISNULL) WHEN CASE rt0.c3  WHEN rt1.c4 THEN rt0.c4 END THEN ((((rt1.c5)AND(vt0.c0)))OR('')) WHEN NULL THEN ((rt0.c2) IS TRUE) END) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY UNLIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))  NULLS LAST, x''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4)) THEN ((rt1.c2) ISNULL) WHEN CASE rt0.c3  WHEN rt1.c4 THEN rt0.c4 END THEN ((((rt1.c5)AND(vt0.c0)))OR('')) WHEN NULL THEN ((rt0.c2) IS TRUE) END) ORDER BY UNLIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))  NULLS LAST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4)) THEN ((rt1.c2) ISNULL) WHEN CASE rt0.c3  WHEN rt1.c4 THEN rt0.c4 END THEN ((((rt1.c5)AND(vt0.c0)))OR('')) WHEN NULL THEN ((rt0.c2) IS TRUE) END) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY UNLIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))  NULLS LAST, x''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4)) THEN ((rt1.c2) ISNULL) WHEN CASE rt0.c3  WHEN rt1.c4 THEN rt0.c4 END THEN ((((rt1.c5)AND(vt0.c0)))OR('')) WHEN NULL THEN ((rt0.c2) IS TRUE) END) ORDER BY UNLIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))  NULLS LAST, x''  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)==(0.8623705322879787)) IN ())) ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))AND(0.7662501635545657)) ASC  NULLS FIRST, ((((rt0.c2)<=(rt0.c1))) BETWEEN (((rt0.c3)AND(rt0.c2))) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)==(0.8623705322879787)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))AND(0.7662501635545657)) ASC  NULLS FIRST, ((((rt0.c2)<=(rt0.c1))) BETWEEN (((rt0.c3)AND(rt0.c2))) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)==(0.8623705322879787)) IN ())) ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))AND(0.7662501635545657)) ASC  NULLS FIRST, ((((rt0.c2)<=(rt0.c1))) BETWEEN (((rt0.c3)AND(rt0.c2))) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)==(0.8623705322879787)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))AND(0.7662501635545657)) ASC  NULLS FIRST, ((((rt0.c2)<=(rt0.c1))) BETWEEN (((rt0.c3)AND(rt0.c2))) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)==(0.8623705322879787)) IN ())) ORDER BY ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))AND(0.7662501635545657)) ASC  NULLS FIRST, ((((rt0.c2)<=(rt0.c1))) BETWEEN (((rt0.c3)AND(rt0.c2))) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (rt1.c2);
SELECT * FROM vt0 WHERE (CAST((('1572728264') NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((('1572728264') NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((('1572728264') NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((('1572728264') NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((('1572728264') NOTNULL) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ('-379602505');
SELECT SUM(count) FROM (SELECT ALL (('-379602505') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('-379602505');
SELECT SUM(count) FROM (SELECT ALL (('-379602505') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('-379602505');
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) IS TRUE)) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((vt0.c0)IS NOT(((vt0.c0)+(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((vt0.c0)IS NOT(((vt0.c0)+(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) IS TRUE)) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((vt0.c0)IS NOT(((vt0.c0)+(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((vt0.c0)IS NOT(((vt0.c0)+(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) IS TRUE)) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((vt0.c0)IS NOT(((vt0.c0)+(vt0.c0)))) DESC;
SELECT * FROM rt0 WHERE (CASE ((rt0.c4)==(rt0.c1))  WHEN rt0.c0 THEN (rt0.c1 IN ()) WHEN (~ (rt0.c0)) THEN HEX(rt0.c2) WHEN rt0.c0 COLLATE RTRIM THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4)==(rt0.c1))  WHEN rt0.c0 THEN (rt0.c1 IN ()) WHEN (~ (rt0.c0)) THEN HEX(rt0.c2) WHEN rt0.c0 COLLATE RTRIM THEN rt0.c1 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c4)==(rt0.c1))  WHEN rt0.c0 THEN (rt0.c1 IN ()) WHEN (~ (rt0.c0)) THEN HEX(rt0.c2) WHEN rt0.c0 COLLATE RTRIM THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4)==(rt0.c1))  WHEN rt0.c0 THEN (rt0.c1 IN ()) WHEN (~ (rt0.c0)) THEN HEX(rt0.c2) WHEN rt0.c0 COLLATE RTRIM THEN rt0.c1 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c4)==(rt0.c1))  WHEN rt0.c0 THEN (rt0.c1 IN ()) WHEN (~ (rt0.c0)) THEN HEX(rt0.c2) WHEN rt0.c0 COLLATE RTRIM THEN rt0.c1 END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN ((vt0.c0)-(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN ((vt0.c0)-(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN ((vt0.c0)-(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN ((vt0.c0)-(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN ((vt0.c0)-(vt0.c0)) END);
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2)=(rt0.c3)) COLLATE NOCASE FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)LIKE(rt0.c3)) THEN rt1.c4 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c3)))AND(rt1.c1)) THEN ((((rt0.c2)OR(rt0.c3)))AND(rt1.c1)) WHEN ((rt1.c4) ISNULL) THEN vt0.c0 ELSE CASE NULL  WHEN rt1.c4 THEN rt0.c0 ELSE rt0.c2 END END WHERE (((0.934200401032982 COLLATE RTRIM)%(CASE WHEN rt0.c0 THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0.934200401032982 COLLATE RTRIM)%(CASE WHEN rt0.c0 THEN rt1.c4 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2)=(rt0.c3)) COLLATE NOCASE FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)LIKE(rt0.c3)) THEN rt1.c4 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c3)))AND(rt1.c1)) THEN ((((rt0.c2)OR(rt0.c3)))AND(rt1.c1)) WHEN ((rt1.c4) ISNULL) THEN vt0.c0 ELSE CASE NULL  WHEN rt1.c4 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2)=(rt0.c3)) COLLATE NOCASE FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)LIKE(rt0.c3)) THEN rt1.c4 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c3)))AND(rt1.c1)) THEN ((((rt0.c2)OR(rt0.c3)))AND(rt1.c1)) WHEN ((rt1.c4) ISNULL) THEN vt0.c0 ELSE CASE NULL  WHEN rt1.c4 THEN rt0.c0 ELSE rt0.c2 END END WHERE (((0.934200401032982 COLLATE RTRIM)%(CASE WHEN rt0.c0 THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0.934200401032982 COLLATE RTRIM)%(CASE WHEN rt0.c0 THEN rt1.c4 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt0.c2)=(rt0.c3)) COLLATE NOCASE FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)LIKE(rt0.c3)) THEN rt1.c4 COLLATE NOCASE WHEN ((((rt0.c0)AND(rt0.c3)))AND(rt1.c1)) THEN ((((rt0.c2)OR(rt0.c3)))AND(rt1.c1)) WHEN ((rt1.c4) ISNULL) THEN vt0.c0 ELSE CASE NULL  WHEN rt1.c4 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((((((((rt0.c1)AND(rt0.c4)))AND(x'')))OR(rt0.c3)))AND(rt1.c4))) NOTNULL)) ORDER BY (((((((((((rt0.c4))<>((rt1.c3))))AND(((((((((((((rt1.c4)AND(rt0.c0)))OR(rt1.c3)))AND(rt1.c4)))AND(rt0.c3)))AND(NULL)))OR(rt1.c4)))))OR(CAST(rt1.c2 AS REAL))))OR(rt1.c4 COLLATE NOCASE)))AND(((((((((rt1.c5)OR(rt0.c3)))OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c4)))AND(x'')))OR(rt0.c3)))AND(rt1.c4))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (((((((((((rt0.c4))!=((rt1.c3))))AND(((((((((((((rt1.c4)AND(rt0.c0)))OR(rt1.c3)))AND(rt1.c4)))AND(rt0.c3)))AND(NULL)))OR(rt1.c4)))))OR(CAST(rt1.c2 AS REAL))))OR(rt1.c4 COLLATE NOCASE)))AND(((((((((rt1.c5)OR(rt0.c3)))OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((((((((rt0.c1)AND(rt0.c4)))AND(x'')))OR(rt0.c3)))AND(rt1.c4))) NOTNULL)) ORDER BY (((((((((((rt0.c4))<>((rt1.c3))))AND(((((((((((((rt1.c4)AND(rt0.c0)))OR(rt1.c3)))AND(rt1.c4)))AND(rt0.c3)))AND(NULL)))OR(rt1.c4)))))OR(CAST(rt1.c2 AS REAL))))OR(rt1.c4 COLLATE NOCASE)))AND(((((((((rt1.c5)OR(rt0.c3)))OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c4)))AND(x'')))OR(rt0.c3)))AND(rt1.c4))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (((((((((((rt0.c4))!=((rt1.c3))))AND(((((((((((((rt1.c4)AND(rt0.c0)))OR(rt1.c3)))AND(rt1.c4)))AND(rt0.c3)))AND(NULL)))OR(rt1.c4)))))OR(CAST(rt1.c2 AS REAL))))OR(rt1.c4 COLLATE NOCASE)))AND(((((((((rt1.c5)OR(rt0.c3)))OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((((((((rt0.c1)AND(rt0.c4)))AND(x'')))OR(rt0.c3)))AND(rt1.c4))) NOTNULL)) ORDER BY (((((((((((rt0.c4))<>((rt1.c3))))AND(((((((((((((rt1.c4)AND(rt0.c0)))OR(rt1.c3)))AND(rt1.c4)))AND(rt0.c3)))AND(NULL)))OR(rt1.c4)))))OR(CAST(rt1.c2 AS REAL))))OR(rt1.c4 COLLATE NOCASE)))AND(((((((((rt1.c5)OR(rt0.c3)))OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c1)))) DESC;
SELECT * FROM rt1 WHERE (CAST(rt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(rt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(rt1.c0 AS INTEGER));
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (rt1.c3) ORDER BY ((((rt0.c4) IS FALSE))%(CASE rt1.c3  WHEN rt0.c3 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((rt0.c4) IS FALSE))%(CASE rt1.c3  WHEN rt0.c3 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (rt1.c3) ORDER BY ((((rt0.c4) IS FALSE))%(CASE rt1.c3  WHEN rt0.c3 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((rt0.c4) IS FALSE))%(CASE rt1.c3  WHEN rt0.c3 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (rt1.c3) ORDER BY ((((rt0.c4) IS FALSE))%(CASE rt1.c3  WHEN rt0.c3 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (CHANGES());
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((0.6260895417885725))>((NULL)))) BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c0))) AND (rt1.c2))) ORDER BY CAST(((rt0.c1) NOT NULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((((0.6260895417885725))>((NULL)))) BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c0))) AND (rt1.c2))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((rt0.c1) NOT NULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((0.6260895417885725))>((NULL)))) BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c0))) AND (rt1.c2))) ORDER BY CAST(((rt0.c1) NOT NULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((((0.6260895417885725))>((NULL)))) BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c0))) AND (rt1.c2))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((rt0.c1) NOT NULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((0.6260895417885725))>((NULL)))) BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c0))) AND (rt1.c2))) ORDER BY CAST(((rt0.c1) NOT NULL) AS NUMERIC);
SELECT * FROM rt1 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c4 AS TEXT) THEN ((1684832728)IS NOT(rt0.c0)) WHEN CAST(rt1.c3 AS BLOB) THEN CASE WHEN rt0.c4 THEN 0.8511556572240319 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 ELSE '' END WHEN ((rt0.c0)||(rt1.c3)) THEN CAST(rt1.c4 AS TEXT) WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN (NOT (rt1.c3)) WHEN vt0.c0 COLLATE NOCASE THEN ((((rt0.c0)AND(rt1.c3)))AND(rt0.c4)) END FULL OUTER JOIN vt0 ON ((((((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c1)))AND(rt0.c3 COLLATE BINARY)))OR(((((((((rt1.c1)AND(rt0.c0)))AND(vt0.c0)))OR(rt1.c3)))OR(rt0.c1)))) WHERE (((UPPER(rt1.c4)) ISNULL)) ORDER BY ((((vt0.c0) NOTNULL))GLOB(rt0.c3 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(rt1.c4)) ISNULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c4 AS TEXT) THEN ((1684832728)IS NOT(rt0.c0)) WHEN CAST(rt1.c3 AS BLOB) THEN CASE WHEN rt0.c4 THEN 0.8511556572240319 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 ELSE '' END WHEN ((rt0.c0)||(rt1.c3)) THEN CAST(rt1.c4 AS TEXT) WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN (NOT (rt1.c3)) WHEN vt0.c0 COLLATE NOCASE THEN ((((rt0.c0)AND(rt1.c3)))AND(rt0.c4)) END FULL OUTER JOIN vt0 ON ((((((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c1)))AND(rt0.c3 COLLATE BINARY)))OR(((((((((rt1.c1)AND(rt0.c0)))AND(vt0.c0)))OR(rt1.c3)))OR(rt0.c1)))) ORDER BY ((((vt0.c0) NOTNULL))GLOB(rt0.c3 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c4 AS TEXT) THEN ((1684832728)IS NOT(rt0.c0)) WHEN CAST(rt1.c3 AS BLOB) THEN CASE WHEN rt0.c4 THEN 0.8511556572240319 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 ELSE '' END WHEN ((rt0.c0)||(rt1.c3)) THEN CAST(rt1.c4 AS TEXT) WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN (NOT (rt1.c3)) WHEN vt0.c0 COLLATE NOCASE THEN ((((rt0.c0)AND(rt1.c3)))AND(rt0.c4)) END FULL OUTER JOIN vt0 ON ((((((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c1)))AND(rt0.c3 COLLATE BINARY)))OR(((((((((rt1.c1)AND(rt0.c0)))AND(vt0.c0)))OR(rt1.c3)))OR(rt0.c1)))) WHERE (((UPPER(rt1.c4)) ISNULL)) ORDER BY ((((vt0.c0) NOTNULL))GLOB(rt0.c3 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(rt1.c4)) ISNULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c4 AS TEXT) THEN ((1684832728)IS NOT(rt0.c0)) WHEN CAST(rt1.c3 AS BLOB) THEN CASE WHEN rt0.c4 THEN 0.8511556572240319 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 ELSE '' END WHEN ((rt0.c0)||(rt1.c3)) THEN CAST(rt1.c4 AS TEXT) WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN (NOT (rt1.c3)) WHEN vt0.c0 COLLATE NOCASE THEN ((((rt0.c0)AND(rt1.c3)))AND(rt0.c4)) END FULL OUTER JOIN vt0 ON ((((((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c1)))AND(rt0.c3 COLLATE BINARY)))OR(((((((((rt1.c1)AND(rt0.c0)))AND(vt0.c0)))OR(rt1.c3)))OR(rt0.c1)))) ORDER BY ((((vt0.c0) NOTNULL))GLOB(rt0.c3 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (NULL) ORDER BY CAST(rt0.c0 AS INTEGER) ASC, CAST(CASE rt1.c0  WHEN rt0.c3 THEN rt0.c4 END AS TEXT)  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c3 ELSE vt0.c0 END) BETWEEN ((rt0.c3 IN ())) AND (((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY CAST(rt0.c0 AS INTEGER) ASC, CAST(CASE rt1.c0  WHEN rt0.c3 THEN rt0.c4 END AS TEXT)  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c3 ELSE vt0.c0 END) BETWEEN ((rt0.c3 IN ())) AND (((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (NULL) ORDER BY CAST(rt0.c0 AS INTEGER) ASC, CAST(CASE rt1.c0  WHEN rt0.c3 THEN rt0.c4 END AS TEXT)  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c3 ELSE vt0.c0 END) BETWEEN ((rt0.c3 IN ())) AND (((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY CAST(rt0.c0 AS INTEGER) ASC, CAST(CASE rt1.c0  WHEN rt0.c3 THEN rt0.c4 END AS TEXT)  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c3 ELSE vt0.c0 END) BETWEEN ((rt0.c3 IN ())) AND (((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (NULL) ORDER BY CAST(rt0.c0 AS INTEGER) ASC, CAST(CASE rt1.c0  WHEN rt0.c3 THEN rt0.c4 END AS TEXT)  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c0 THEN rt1.c3 ELSE vt0.c0 END) BETWEEN ((rt0.c3 IN ())) AND (((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt1.c2)))) ASC;
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((((((((rt0.c3)AND(rt0.c2)))OR(rt1.c5)))AND(rt0.c3)))OR(rt1.c5)))<<(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)AND(rt0.c2)))OR(rt1.c5)))AND(rt0.c3)))OR(rt1.c5)))<<(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((((((((rt0.c3)AND(rt0.c2)))OR(rt1.c5)))AND(rt0.c3)))OR(rt1.c5)))<<(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)AND(rt0.c2)))OR(rt1.c5)))AND(rt0.c3)))OR(rt1.c5)))<<(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((((((((rt0.c3)AND(rt0.c2)))OR(rt1.c5)))AND(rt0.c3)))OR(rt1.c5)))<<(CAST(rt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0, rt1 INNER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((rt0.c1)*(rt1.c4)))) AND ((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) WHERE ((((CASE WHEN vt0.c0 THEN rt0.c1 END))<(('0.7006789744659037'))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c0 THEN rt0.c1 END))<(('0.7006789744659037')))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((rt0.c1)*(rt1.c4)))) AND ((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))))));
SELECT COUNT(*) FROM vt0, rt1 INNER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((rt0.c1)*(rt1.c4)))) AND ((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) WHERE ((((CASE WHEN vt0.c0 THEN rt0.c1 END))<(('0.7006789744659037'))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c0 THEN rt0.c1 END))<(('0.7006789744659037')))) IS TRUE)  as count FROM vt0, rt1 INNER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((rt0.c1)*(rt1.c4)))) AND ((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))))));
SELECT COUNT(*) FROM vt0, rt1 INNER JOIN rt0 ON (((vt0.c0)) BETWEEN ((((rt0.c1)*(rt1.c4)))) AND ((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) WHERE ((((CASE WHEN vt0.c0 THEN rt0.c1 END))<(('0.7006789744659037'))));
SELECT ALL COUNT(*) FROM rt1 WHERE ('f?ExnI(#') ORDER BY ((((UPPER(rt1.c5))AND(rt1.c1)))AND(((((((((rt1.c3)AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c5))));
SELECT SUM(count) FROM (SELECT ALL (('f?ExnI(#') IS TRUE)  as count FROM rt1 ORDER BY ((((UPPER(rt1.c5))AND(rt1.c1)))AND(((((((((rt1.c3)AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c5)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ('f?ExnI(#') ORDER BY ((((UPPER(rt1.c5))AND(rt1.c1)))AND(((((((((rt1.c3)AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c5))));
SELECT SUM(count) FROM (SELECT ALL (('f?ExnI(#') IS TRUE)  as count FROM rt1 ORDER BY ((((UPPER(rt1.c5))AND(rt1.c1)))AND(((((((((rt1.c3)AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c5)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ('f?ExnI(#') ORDER BY ((((UPPER(rt1.c5))AND(rt1.c1)))AND(((((((((rt1.c3)AND(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c5))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((rt1.c5)+(rt1.c5)))AND(UNICODE(rt1.c5))))AND((rt1.c3 IN ()))) RIGHT OUTER JOIN rt0 ON LIKELIHOOD(((rt1.c5) IS TRUE), 0.8196894777225745) WHERE (CAST(json_remove(rt0.c4, vt0.c0, rt1.c1, rt1.c0, rt1.c0, rt0.c1) AS TEXT)) ORDER BY (UPPER(rt0.c1) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(json_remove(rt0.c4, vt0.c0, rt1.c1, rt1.c0, rt1.c0, rt0.c1) AS TEXT)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((rt1.c5)+(rt1.c5)))AND(UNICODE(rt1.c5))))AND((rt1.c3 IN ()))) RIGHT OUTER JOIN rt0 ON LIKELIHOOD(((rt1.c5) IS TRUE), 0.8196894777225745) ORDER BY (UPPER(rt0.c1) IN ()) ASC);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((rt1.c5)+(rt1.c5)))AND(UNICODE(rt1.c5))))AND((rt1.c3 IN ()))) RIGHT OUTER JOIN rt0 ON LIKELIHOOD(((rt1.c5) IS TRUE), 0.8196894777225745) WHERE (CAST(json_remove(rt0.c4, vt0.c0, rt1.c1, rt1.c0, rt1.c0, rt0.c1) AS TEXT)) ORDER BY (UPPER(rt0.c1) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(json_remove(rt0.c4, vt0.c0, rt1.c1, rt1.c0, rt1.c0, rt0.c1) AS TEXT)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((rt1.c5)+(rt1.c5)))AND(UNICODE(rt1.c5))))AND((rt1.c3 IN ()))) RIGHT OUTER JOIN rt0 ON LIKELIHOOD(((rt1.c5) IS TRUE), 0.8196894777225745) ORDER BY (UPPER(rt0.c1) IN ()) ASC);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((rt1.c5)+(rt1.c5)))AND(UNICODE(rt1.c5))))AND((rt1.c3 IN ()))) RIGHT OUTER JOIN rt0 ON LIKELIHOOD(((rt1.c5) IS TRUE), 0.8196894777225745) WHERE (CAST(json_remove(rt0.c4, vt0.c0, rt1.c1, rt1.c0, rt1.c0, rt0.c1) AS TEXT)) ORDER BY (UPPER(rt0.c1) IN ()) ASC;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((rt1.c1)>=(TRIM(DISTINCT rt0.c3))) CROSS JOIN rt0 ON (((rt1.c4 IN ())) NOTNULL) WHERE (((((NULL)<(rt1.c1)))<(((((rt1.c0)OR(rt0.c4)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)<(rt1.c1)))<(((((rt1.c0)OR(rt0.c4)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((rt1.c1)>=(TRIM(DISTINCT rt0.c3))) CROSS JOIN rt0 ON (((rt1.c4 IN ())) NOTNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((rt1.c1)>=(TRIM(DISTINCT rt0.c3))) CROSS JOIN rt0 ON (((rt1.c4 IN ())) NOTNULL) WHERE (((((NULL)<(rt1.c1)))<(((((rt1.c0)OR(rt0.c4)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)<(rt1.c1)))<(((((rt1.c0)OR(rt0.c4)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((rt1.c1)>=(TRIM(DISTINCT rt0.c3))) CROSS JOIN rt0 ON (((rt1.c4 IN ())) NOTNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((rt1.c1)>=(TRIM(DISTINCT rt0.c3))) CROSS JOIN rt0 ON (((rt1.c4 IN ())) NOTNULL) WHERE (((((NULL)<(rt1.c1)))<(((((rt1.c0)OR(rt0.c4)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((- (rt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))))OR(0.5883928903990162))) ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0.42792228208829997 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END) IS FALSE) ASC  NULLS FIRST, (((((rt0.c3))<>((rt0.c1)))) NOT BETWEEN ((((rt0.c2))<(('1155302928')))) AND (((((rt0.c1)AND(rt0.c4)))OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))))OR(0.5883928903990162))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0.42792228208829997 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END) IS FALSE) ASC  NULLS FIRST, (((((rt0.c3))<>((rt0.c1)))) NOT BETWEEN ((((rt0.c2))<(('1155302928')))) AND (((((rt0.c1)AND(rt0.c4)))OR(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((- (rt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))))OR(0.5883928903990162))) ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0.42792228208829997 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END) IS FALSE) ASC  NULLS FIRST, (((((rt0.c3))<>((rt0.c1)))) NOT BETWEEN ((((rt0.c2))<(('1155302928')))) AND (((((rt0.c1)AND(rt0.c4)))OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))))OR(0.5883928903990162))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0.42792228208829997 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END) IS FALSE) ASC  NULLS FIRST, (((((rt0.c3))<>((rt0.c1)))) NOT BETWEEN ((((rt0.c2))<(('1155302928')))) AND (((((rt0.c1)AND(rt0.c4)))OR(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((- (rt0.c2)))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))))OR(0.5883928903990162))) ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0.42792228208829997 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END) IS FALSE) ASC  NULLS FIRST, (((((rt0.c3))<>((rt0.c1)))) NOT BETWEEN ((((rt0.c2))<(('1155302928')))) AND (((((rt0.c1)AND(rt0.c4)))OR(rt0.c2)))) DESC;
SELECT COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON ((rt0.c3)IS NOT(((('-67201627')) NOT BETWEEN ((rt1.c1)) AND ((NULL))))) WHERE (((((((rt1.c1)>=(rt1.c4)))AND(CAST(rt0.c2 AS BLOB))))OR((- (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)>=(rt1.c4)))AND(CAST(rt0.c2 AS BLOB))))OR((- (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON ((rt0.c3)IS NOT(((('-67201627')) NOT BETWEEN ((rt1.c1)) AND ((NULL))))));
SELECT COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON ((rt0.c3)IS NOT(((('-67201627')) NOT BETWEEN ((rt1.c1)) AND ((NULL))))) WHERE (((((((rt1.c1)>=(rt1.c4)))AND(CAST(rt0.c2 AS BLOB))))OR((- (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)>=(rt1.c4)))AND(CAST(rt0.c2 AS BLOB))))OR((- (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON ((rt0.c3)IS NOT(((('-67201627')) NOT BETWEEN ((rt1.c1)) AND ((NULL))))));
SELECT COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON ((rt0.c3)IS NOT(((('-67201627')) NOT BETWEEN ((rt1.c1)) AND ((NULL))))) WHERE (((((((rt1.c1)>=(rt1.c4)))AND(CAST(rt0.c2 AS BLOB))))OR((- (rt1.c3)))));
SELECT * FROM vt0, rt1, rt0 WHERE ((~ (((0.9435743620875546) NOT NULL)))) ORDER BY ((((rt1.c4) BETWEEN (0.902563843594114) AND (rt0.c3)))<(rt1.c3))  NULLS LAST, ((((((rt0.c1)-(rt0.c1)))AND(PRINTF(rt0.c3))))AND(SQLITE_VERSION()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((0.9435743620875546) NOT NULL)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((((rt1.c4) BETWEEN (0.902563843594114) AND (rt0.c3)))<(rt1.c3))  NULLS LAST, ((((((rt0.c1)-(rt0.c1)))AND(PRINTF(rt0.c3))))AND(SQLITE_VERSION()))  NULLS FIRST);
SELECT * FROM vt0, rt1, rt0 WHERE ((~ (((0.9435743620875546) NOT NULL)))) ORDER BY ((((rt1.c4) BETWEEN (0.902563843594114) AND (rt0.c3)))<(rt1.c3))  NULLS LAST, ((((((rt0.c1)-(rt0.c1)))AND(PRINTF(rt0.c3))))AND(SQLITE_VERSION()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((0.9435743620875546) NOT NULL)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((((rt1.c4) BETWEEN (0.902563843594114) AND (rt0.c3)))<(rt1.c3))  NULLS LAST, ((((((rt0.c1)-(rt0.c1)))AND(PRINTF(rt0.c3))))AND(SQLITE_VERSION()))  NULLS FIRST);
SELECT * FROM vt0, rt1, rt0 WHERE ((~ (((0.9435743620875546) NOT NULL)))) ORDER BY ((((rt1.c4) BETWEEN (0.902563843594114) AND (rt0.c3)))<(rt1.c3))  NULLS LAST, ((((((rt0.c1)-(rt0.c1)))AND(PRINTF(rt0.c3))))AND(SQLITE_VERSION()))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c2)GLOB(rt1.c2))) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (((rt0.c2)GLOB(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)GLOB(rt1.c2))) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (((rt0.c2)GLOB(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c2)GLOB(rt1.c2))) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (((rt0.c2)GLOB(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)GLOB(rt1.c2))) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (((rt0.c2)GLOB(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c2)GLOB(rt1.c2))) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (((rt0.c2)GLOB(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(rt1.c0 AS NUMERIC) IN ((((0xfffffffff25c3fc5)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c0 AS NUMERIC) IN ((((0xfffffffff25c3fc5)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(rt1.c0 AS NUMERIC) IN ((((0xfffffffff25c3fc5)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c0 AS NUMERIC) IN ((((0xfffffffff25c3fc5)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(rt1.c0 AS NUMERIC) IN ((((0xfffffffff25c3fc5)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (~ (((((rt0.c3)OR(rt0.c2)))OR(vt0.c0)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (~ (((((rt0.c3)OR(rt0.c2)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (~ (((((rt0.c3)OR(rt0.c2)))OR(vt0.c0)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (~ (((((rt0.c3)OR(rt0.c2)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (~ (((((rt0.c3)OR(rt0.c2)))OR(vt0.c0)))) WHERE (x'');
SELECT * FROM vt0 WHERE (GLOB(CASE x'e32b'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((((vt0.c0)>(0.921455501067076))) NOT BETWEEN ((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (((((vt0.c0)OR(vt0.c0)))AND('-1262276821'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(CASE x'e32b'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(0.921455501067076))) NOT BETWEEN ((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (((((vt0.c0)OR(vt0.c0)))AND('-1262276821'))))  NULLS LAST);
SELECT * FROM vt0 WHERE (GLOB(CASE x'e32b'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((((vt0.c0)>(0.921455501067076))) NOT BETWEEN ((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (((((vt0.c0)OR(vt0.c0)))AND('-1262276821'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(CASE x'e32b'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(0.921455501067076))) NOT BETWEEN ((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (((((vt0.c0)OR(vt0.c0)))AND('-1262276821'))))  NULLS LAST);
SELECT * FROM vt0 WHERE (GLOB(CASE x'e32b'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((((vt0.c0)>(0.921455501067076))) NOT BETWEEN ((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (((((vt0.c0)OR(vt0.c0)))AND('-1262276821'))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (COALESCE(DISTINCT CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN 0Xac00153 THEN rt0.c3 END, rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN 0Xac00153 THEN rt0.c3 END, rt0.c2)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (COALESCE(DISTINCT CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN 0Xac00153 THEN rt0.c3 END, rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN 0Xac00153 THEN rt0.c3 END, rt0.c2)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (COALESCE(DISTINCT CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN 0Xac00153 THEN rt0.c3 END, rt0.c2));
SELECT * FROM rt1, rt0 WHERE (((((rt0.c3) ISNULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (((x'') BETWEEN (rt1.c4) AND (rt1.c3))))) ORDER BY (((((rt1.c2)IS NOT(rt1.c5))))>((((rt0.c1) BETWEEN ('*C') AND (rt1.c0))))), '-2051488038' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) ISNULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (((x'') BETWEEN (rt1.c4) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt1.c2)IS NOT(rt1.c5))))>((((rt0.c1) BETWEEN ('*C') AND (rt1.c0))))), '-2051488038' COLLATE RTRIM);
SELECT * FROM rt1, rt0 WHERE (((((rt0.c3) ISNULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (((x'') BETWEEN (rt1.c4) AND (rt1.c3))))) ORDER BY (((((rt1.c2)IS NOT(rt1.c5))))>((((rt0.c1) BETWEEN ('*C') AND (rt1.c0))))), '-2051488038' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) ISNULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (((x'') BETWEEN (rt1.c4) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt1.c2)IS NOT(rt1.c5))))>((((rt0.c1) BETWEEN ('*C') AND (rt1.c0))))), '-2051488038' COLLATE RTRIM);
SELECT * FROM rt1, rt0 WHERE (((((rt0.c3) ISNULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (((x'') BETWEEN (rt1.c4) AND (rt1.c3))))) ORDER BY (((((rt1.c2)IS NOT(rt1.c5))))>((((rt0.c1) BETWEEN ('*C') AND (rt1.c0))))), '-2051488038' COLLATE RTRIM;
SELECT ALL * FROM vt0, rt1 WHERE ((((0.4680686791122215, NULL, rt1.c2)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END, TRIM(DISTINCT rt1.c0), (('-1354455773')|(0.122247959592092)))) AND (((~ (rt1.c0)), '-1218626200' COLLATE BINARY, '?蓧?LX')))) ORDER BY CASE ((((rt1.c4)OR(rt1.c3)))AND(rt1.c1))  WHEN TYPEOF(DISTINCT rt1.c5) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ALL (((((0.4680686791122215, NULL, rt1.c2)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END, TRIM(DISTINCT rt1.c0), (('-1354455773')|(0.122247959592092)))) AND (((~ (rt1.c0)), '-1218626200' COLLATE BINARY, '?蓧?LX')))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((((rt1.c4)OR(rt1.c3)))AND(rt1.c1))  WHEN TYPEOF(DISTINCT rt1.c5) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT ALL * FROM vt0, rt1 WHERE ((((0.4680686791122215, NULL, rt1.c2)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END, TRIM(DISTINCT rt1.c0), (('-1354455773')|(0.122247959592092)))) AND (((~ (rt1.c0)), '-1218626200' COLLATE BINARY, '?蓧?LX')))) ORDER BY CASE ((((rt1.c4)OR(rt1.c3)))AND(rt1.c1))  WHEN TYPEOF(DISTINCT rt1.c5) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ALL (((((0.4680686791122215, NULL, rt1.c2)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END, TRIM(DISTINCT rt1.c0), (('-1354455773')|(0.122247959592092)))) AND (((~ (rt1.c0)), '-1218626200' COLLATE BINARY, '?蓧?LX')))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((((rt1.c4)OR(rt1.c3)))AND(rt1.c1))  WHEN TYPEOF(DISTINCT rt1.c5) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT ALL * FROM vt0, rt1 WHERE ((((0.4680686791122215, NULL, rt1.c2)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END, TRIM(DISTINCT rt1.c0), (('-1354455773')|(0.122247959592092)))) AND (((~ (rt1.c0)), '-1218626200' COLLATE BINARY, '?蓧?LX')))) ORDER BY CASE ((((rt1.c4)OR(rt1.c3)))AND(rt1.c1))  WHEN TYPEOF(DISTINCT rt1.c5) THEN vt0.c0 ELSE CAST(vt0.c0 AS INTEGER) END;
SELECT ALL * FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON (((((x'ba09')>(rt0.c0))))==((((rt0.c0)IS(rt1.c5))))) FULL OUTER JOIN rt1 ON ((rt0.c1) BETWEEN (((rt0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5))) AND ((- (rt1.c3)))) WHERE (((rt0.c3) IS TRUE)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS TRUE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((x'ba09')>(rt0.c0))))=((((rt0.c0)IS(rt1.c5))))) FULL OUTER JOIN rt1 ON ((rt0.c1) BETWEEN (((rt0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5))) AND ((- (rt1.c3)))) ORDER BY vt0.c0);
SELECT ALL * FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON (((((x'ba09')>(rt0.c0))))==((((rt0.c0)IS(rt1.c5))))) FULL OUTER JOIN rt1 ON ((rt0.c1) BETWEEN (((rt0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5))) AND ((- (rt1.c3)))) WHERE (((rt0.c3) IS TRUE)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS TRUE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((x'ba09')>(rt0.c0))))=((((rt0.c0)IS(rt1.c5))))) FULL OUTER JOIN rt1 ON ((rt0.c1) BETWEEN (((rt0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c5))) AND ((- (rt1.c3)))) ORDER BY vt0.c0);
SELECT * FROM rt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c1))))&(LIKELIHOOD(DISTINCT rt0.c0, 0.9237228614548229))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c1))))&(LIKELIHOOD(DISTINCT rt0.c0, 0.9237228614548229)))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c1))))&(LIKELIHOOD(DISTINCT rt0.c0, 0.9237228614548229))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c1))))&(LIKELIHOOD(DISTINCT rt0.c0, 0.9237228614548229)))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c1))))&(LIKELIHOOD(DISTINCT rt0.c0, 0.9237228614548229))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('|o')%(vt0.c0)))>('-734268130')));
SELECT SUM(count) FROM (SELECT ALL (((((('|o')%(vt0.c0)))>('-734268130'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('|o')%(vt0.c0)))>('-734268130')));
SELECT SUM(count) FROM (SELECT ALL (((((('|o')%(vt0.c0)))>('-734268130'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('|o')%(vt0.c0)))>('-734268130')));
SELECT ALL * FROM vt0 WHERE (json_array_length(((vt0.c0)-(vt0.c0)), (((('Ekhy')OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ('\n#' COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((vt0.c0)-(vt0.c0)), (((('Ekhy')OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ('\n#' COLLATE RTRIM IN ()));
SELECT ALL * FROM vt0 WHERE (json_array_length(((vt0.c0)-(vt0.c0)), (((('Ekhy')OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ('\n#' COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((vt0.c0)-(vt0.c0)), (((('Ekhy')OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ('\n#' COLLATE RTRIM IN ()));
SELECT * FROM rt1 WHERE ((((((rt1.c4 IN (rt1.c3, rt1.c5)))OR(((rt1.c5)OR('y539')))))OR((~ (rt1.c2))))) ORDER BY NULL, ((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (0.730665226837474)))AND(((rt1.c2) IS FALSE))))OR(json(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4 IN (rt1.c3, rt1.c5)))OR(((rt1.c5)OR('y539')))))OR((~ (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY NULL, ((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (0.730665226837474)))AND(((rt1.c2) IS FALSE))))OR(json(rt1.c4))));
SELECT * FROM rt1 WHERE ((((((rt1.c4 IN (rt1.c3, rt1.c5)))OR(((rt1.c5)OR('y539')))))OR((~ (rt1.c2))))) ORDER BY NULL, ((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (0.730665226837474)))AND(((rt1.c2) IS FALSE))))OR(json(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4 IN (rt1.c3, rt1.c5)))OR(((rt1.c5)OR('y539')))))OR((~ (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY NULL, ((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (0.730665226837474)))AND(((rt1.c2) IS FALSE))))OR(json(rt1.c4))));
SELECT * FROM rt1 WHERE ((((((rt1.c4 IN (rt1.c3, rt1.c5)))OR(((rt1.c5)OR('y539')))))OR((~ (rt1.c2))))) ORDER BY NULL, ((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (0.730665226837474)))AND(((rt1.c2) IS FALSE))))OR(json(rt1.c4)));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c4 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c4 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY (- (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY (- (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY (- (((vt0.c0) NOTNULL)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1) ORDER BY CASE WHEN (((rt1.c4))<(('-526511545'))) THEN ROUND(rt1.c0, rt1.c5) WHEN json_array_length(rt1.c1, vt0.c0) THEN x'4c8f' WHEN ((rt1.c4)LIKE(rt1.c0)) THEN ((vt0.c0)+(vt0.c0)) ELSE ((((rt1.c1)AND(rt1.c0)))AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN (((rt1.c4))<(('-526511545'))) THEN ROUND(rt1.c0, rt1.c5) WHEN json_array_length(rt1.c1, vt0.c0) THEN x'4c8f' WHEN ((rt1.c4)LIKE(rt1.c0)) THEN ((vt0.c0)+(vt0.c0)) ELSE ((((rt1.c1)AND(rt1.c0)))AND(vt0.c0)) END);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1) ORDER BY CASE WHEN (((rt1.c4))<(('-526511545'))) THEN ROUND(rt1.c0, rt1.c5) WHEN json_array_length(rt1.c1, vt0.c0) THEN x'4c8f' WHEN ((rt1.c4)LIKE(rt1.c0)) THEN ((vt0.c0)+(vt0.c0)) ELSE ((((rt1.c1)AND(rt1.c0)))AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN (((rt1.c4))<(('-526511545'))) THEN ROUND(rt1.c0, rt1.c5) WHEN json_array_length(rt1.c1, vt0.c0) THEN x'4c8f' WHEN ((rt1.c4)LIKE(rt1.c0)) THEN ((vt0.c0)+(vt0.c0)) ELSE ((((rt1.c1)AND(rt1.c0)))AND(vt0.c0)) END);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1) ORDER BY CASE WHEN (((rt1.c4))<(('-526511545'))) THEN ROUND(rt1.c0, rt1.c5) WHEN json_array_length(rt1.c1, vt0.c0) THEN x'4c8f' WHEN ((rt1.c4)LIKE(rt1.c0)) THEN ((vt0.c0)+(vt0.c0)) ELSE ((((rt1.c1)AND(rt1.c0)))AND(vt0.c0)) END;
SELECT * FROM rt1, vt0 WHERE (CAST(((((rt1.c5)AND(rt1.c3)))AND(rt1.c2)) AS REAL)) ORDER BY 0.6717901992378462 ASC, (((rt1.c5 COLLATE NOCASE))<=(((('') IS FALSE)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c5)AND(rt1.c3)))AND(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY 0.6717901992378462 ASC, (((rt1.c5 COLLATE NOCASE))<=(((('') IS FALSE)))) DESC);
SELECT * FROM rt1, vt0 WHERE (CAST(((((rt1.c5)AND(rt1.c3)))AND(rt1.c2)) AS REAL)) ORDER BY 0.6717901992378462 ASC, (((rt1.c5 COLLATE NOCASE))<=(((('') IS FALSE)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c5)AND(rt1.c3)))AND(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY 0.6717901992378462 ASC, (((rt1.c5 COLLATE NOCASE))<=(((('') IS FALSE)))) DESC);
SELECT * FROM rt1, vt0 WHERE (CAST(((((rt1.c5)AND(rt1.c3)))AND(rt1.c2)) AS REAL)) ORDER BY 0.6717901992378462 ASC, (((rt1.c5 COLLATE NOCASE))<=(((('') IS FALSE)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (0.053793398823406724) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (0.053793398823406724) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (0.053793398823406724) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (0.053793398823406724) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (0.053793398823406724) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN ())) NOT BETWEEN (((rt1.c3)<=(rt1.c1))) AND (x''))) ORDER BY (~ (((rt1.c3)IS NOT(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN ())) NOT BETWEEN (((rt1.c3)<=(rt1.c1))) AND (x''))) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c3)IS NOT(rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN ())) NOT BETWEEN (((rt1.c3)<=(rt1.c1))) AND (x''))) ORDER BY (~ (((rt1.c3)IS NOT(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN ())) NOT BETWEEN (((rt1.c3)<=(rt1.c1))) AND (x''))) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c3)IS NOT(rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN ())) NOT BETWEEN (((rt1.c3)<=(rt1.c1))) AND (x''))) ORDER BY (~ (((rt1.c3)IS NOT(rt1.c2)))) ASC  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (HEX(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (HEX(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (HEX(CAST(vt0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (CASE WHEN rt1.c2 THEN rt0.c1 END IN ()) RIGHT OUTER JOIN rt0 ON (NOT (rt1.c3)) COLLATE NOCASE COLLATE NOCASE WHERE (((((rt0.c4) NOTNULL)) NOT BETWEEN ((((rt1.c4))<((rt1.c5)))) AND (((((rt1.c0)AND(0Xffffffffa8a209f2)))OR(rt0.c2))))) ORDER BY 'YEARS' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOTNULL)) NOT BETWEEN ((((rt1.c4))<((rt1.c5)))) AND (((((rt1.c0)AND(0Xffffffffa8a209f2)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (CASE WHEN rt1.c2 THEN rt0.c1 END IN ()) RIGHT OUTER JOIN rt0 ON (NOT (rt1.c3)) COLLATE NOCASE COLLATE NOCASE ORDER BY 'YEARS' ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (CASE WHEN rt1.c2 THEN rt0.c1 END IN ()) RIGHT OUTER JOIN rt0 ON (NOT (rt1.c3)) COLLATE NOCASE COLLATE NOCASE WHERE (((((rt0.c4) NOTNULL)) NOT BETWEEN ((((rt1.c4))<((rt1.c5)))) AND (((((rt1.c0)AND(0Xffffffffa8a209f2)))OR(rt0.c2))))) ORDER BY 'YEARS' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOTNULL)) NOT BETWEEN ((((rt1.c4))<((rt1.c5)))) AND (((((rt1.c0)AND(0Xffffffffa8a209f2)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (CASE WHEN rt1.c2 THEN rt0.c1 END IN ()) RIGHT OUTER JOIN rt0 ON (NOT (rt1.c3)) COLLATE NOCASE COLLATE NOCASE ORDER BY 'YEARS' ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (CASE WHEN rt1.c2 THEN rt0.c1 END IN ()) RIGHT OUTER JOIN rt0 ON (NOT (rt1.c3)) COLLATE NOCASE COLLATE NOCASE WHERE (((((rt0.c4) NOTNULL)) NOT BETWEEN ((((rt1.c4))<((rt1.c5)))) AND (((((rt1.c0)AND(0Xffffffffa8a209f2)))OR(rt0.c2))))) ORDER BY 'YEARS' ASC;
SELECT ALL * FROM rt1, vt0 WHERE (((CASE rt1.c5  WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c0 END)%(CAST(rt1.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c5  WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c0 END)%(CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CASE rt1.c5  WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c0 END)%(CAST(rt1.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c5  WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c0 END)%(CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CASE rt1.c5  WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c0 END)%(CAST(rt1.c3 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)>>(rt1.c5)))OR(vt0.c0 COLLATE RTRIM)) WHERE (((rt1.c5)*(CAST(NULL AS NUMERIC)))) ORDER BY (((rt0.c1 COLLATE BINARY))<>((UPPER(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c5)*(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)>>(rt1.c5)))OR(vt0.c0 COLLATE RTRIM)) ORDER BY (((rt0.c1 COLLATE BINARY))!=((UPPER(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)>>(rt1.c5)))OR(vt0.c0 COLLATE RTRIM)) WHERE (((rt1.c5)*(CAST(NULL AS NUMERIC)))) ORDER BY (((rt0.c1 COLLATE BINARY))<>((UPPER(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c5)*(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)>>(rt1.c5)))OR(vt0.c0 COLLATE RTRIM)) ORDER BY (((rt0.c1 COLLATE BINARY))!=((UPPER(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c2)>>(rt1.c5)))OR(vt0.c0 COLLATE RTRIM)) WHERE (((rt1.c5)*(CAST(NULL AS NUMERIC)))) ORDER BY (((rt0.c1 COLLATE BINARY))<>((UPPER(rt0.c3))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((json_object(rt0.c0, rt1.c4))OR((rt0.c2 IN (rt1.c0)))))AND(rt1.c3))) ORDER BY ((rt1.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((json_object(rt0.c0, rt1.c4))OR((rt0.c2 IN (rt1.c0)))))AND(rt1.c3))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((rt1.c0) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((json_object(rt0.c0, rt1.c4))OR((rt0.c2 IN (rt1.c0)))))AND(rt1.c3))) ORDER BY ((rt1.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((json_object(rt0.c0, rt1.c4))OR((rt0.c2 IN (rt1.c0)))))AND(rt1.c3))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((rt1.c0) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((json_object(rt0.c0, rt1.c4))OR((rt0.c2 IN (rt1.c0)))))AND(rt1.c3))) ORDER BY ((rt1.c0) NOTNULL);
SELECT COUNT(*) FROM rt1, vt0 WHERE (ABS((~ (rt1.c0)))) ORDER BY (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS((~ (rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (ABS((~ (rt1.c0)))) ORDER BY (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS((~ (rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (ABS((~ (rt1.c0)))) ORDER BY (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((((((((((((rt0.c3, rt0.c4, rt0.c0))==((rt0.c4, rt0.c2, vt0.c0))))OR(rt0.c2 COLLATE NOCASE)))AND((~ (rt0.c3)))))OR((- (rt0.c3)))))OR((rt0.c0 IN ()))))AND((('1962887935') ISNULL))))AND((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((rt0.c3, rt0.c4, rt0.c0))=((rt0.c4, rt0.c2, vt0.c0))))OR(rt0.c2 COLLATE NOCASE)))AND((~ (rt0.c3)))))OR((- (rt0.c3)))))OR((rt0.c0 IN ()))))AND((('1962887935') ISNULL))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((((((((((((rt0.c3, rt0.c4, rt0.c0))==((rt0.c4, rt0.c2, vt0.c0))))OR(rt0.c2 COLLATE NOCASE)))AND((~ (rt0.c3)))))OR((- (rt0.c3)))))OR((rt0.c0 IN ()))))AND((('1962887935') ISNULL))))AND((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((rt0.c3, rt0.c4, rt0.c0))=((rt0.c4, rt0.c2, vt0.c0))))OR(rt0.c2 COLLATE NOCASE)))AND((~ (rt0.c3)))))OR((- (rt0.c3)))))OR((rt0.c0 IN ()))))AND((('1962887935') ISNULL))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((((((((((((rt0.c3, rt0.c4, rt0.c0))==((rt0.c4, rt0.c2, vt0.c0))))OR(rt0.c2 COLLATE NOCASE)))AND((~ (rt0.c3)))))OR((- (rt0.c3)))))OR((rt0.c0 IN ()))))AND((('1962887935') ISNULL))))AND((rt0.c2 IN ()))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))%((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((NULL))))) LEFT OUTER JOIN rt1 ON x'' WHERE (x'') ORDER BY ((NULL) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))%((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((NULL))))) LEFT OUTER JOIN rt1 ON x'' ORDER BY ((NULL) IS TRUE));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))%((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((NULL))))) LEFT OUTER JOIN rt1 ON x'' WHERE (x'') ORDER BY ((NULL) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))%((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((NULL))))) LEFT OUTER JOIN rt1 ON x'' ORDER BY ((NULL) IS TRUE));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))%((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((NULL))))) LEFT OUTER JOIN rt1 ON x'' WHERE (x'') ORDER BY ((NULL) IS TRUE);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((NOT (rt0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((NOT (rt0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((NOT (rt0.c4 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt1.c4) ORDER BY CAST(((NULL)>=(rt0.c1)) AS INTEGER)  NULLS LAST, 1.7976931348623157E308 ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((NULL)>=(rt0.c1)) AS INTEGER)  NULLS LAST, 1.7976931348623157E308 ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt1.c4) ORDER BY CAST(((NULL)>=(rt0.c1)) AS INTEGER)  NULLS LAST, 1.7976931348623157E308 ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((NULL)>=(rt0.c1)) AS INTEGER)  NULLS LAST, 1.7976931348623157E308 ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt1.c4) ORDER BY CAST(((NULL)>=(rt0.c1)) AS INTEGER)  NULLS LAST, 1.7976931348623157E308 ASC;
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN CAST(rt1.c2 AS INTEGER) THEN x'5ce1' END) ORDER BY ((CASE WHEN x'' THEN vt0.c0 END)/((((rt1.c2))==(('1551969336')))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c2 AS INTEGER) THEN x'5ce1' END) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CASE WHEN x'' THEN vt0.c0 END)/((((rt1.c2))=(('1551969336'))))));
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN CAST(rt1.c2 AS INTEGER) THEN x'5ce1' END) ORDER BY ((CASE WHEN x'' THEN vt0.c0 END)/((((rt1.c2))==(('1551969336')))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c2 AS INTEGER) THEN x'5ce1' END) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CASE WHEN x'' THEN vt0.c0 END)/((((rt1.c2))=(('1551969336'))))));
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN CAST(rt1.c2 AS INTEGER) THEN x'5ce1' END) ORDER BY ((CASE WHEN x'' THEN vt0.c0 END)/((((rt1.c2))==(('1551969336')))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((1.967487233E9)OR(rt0.c2)))AND(x'')))OR((NOT (rt0.c2)))))OR(((rt0.c2)LIKE(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((1.967487233E9)OR(rt0.c2)))AND(x'')))OR((NOT (rt0.c2)))))OR(((rt0.c2)LIKE(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((1.967487233E9)OR(rt0.c2)))AND(x'')))OR((NOT (rt0.c2)))))OR(((rt0.c2)LIKE(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((1.967487233E9)OR(rt0.c2)))AND(x'')))OR((NOT (rt0.c2)))))OR(((rt0.c2)LIKE(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((1.967487233E9)OR(rt0.c2)))AND(x'')))OR((NOT (rt0.c2)))))OR(((rt0.c2)LIKE(rt0.c4)))));
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt1.c4))<>((rt1.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4))!=((rt1.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt1.c4))<>((rt1.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4))!=((rt1.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt1.c4))<>((rt1.c2))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE ('1469189985') ORDER BY ((((rt1.c4)<>(rt1.c1)))|((rt1.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1469189985') IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)!=(rt1.c1)))|((rt1.c3 IN ()))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ('1469189985') ORDER BY ((((rt1.c4)<>(rt1.c1)))|((rt1.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1469189985') IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)!=(rt1.c1)))|((rt1.c3 IN ()))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ('1469189985') ORDER BY ((((rt1.c4)<>(rt1.c1)))|((rt1.c3 IN ()))) DESC;
SELECT * FROM rt1 WHERE ((((((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c5))))=((((rt1.c2) NOTNULL))))) ORDER BY LAST_INSERT_ROWID(), 0.740300973619703  NULLS LAST, ((rt1.c3)IS(rt1.c2)) COLLATE RTRIM COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c5))))=((((rt1.c2) NOTNULL))))) IS TRUE)  as count FROM rt1 ORDER BY LAST_INSERT_ROWID(), 0.740300973619703  NULLS LAST, ((rt1.c3)IS(rt1.c2)) COLLATE RTRIM COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c5))))=((((rt1.c2) NOTNULL))))) ORDER BY LAST_INSERT_ROWID(), 0.740300973619703  NULLS LAST, ((rt1.c3)IS(rt1.c2)) COLLATE RTRIM COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c5))))=((((rt1.c2) NOTNULL))))) IS TRUE)  as count FROM rt1 ORDER BY LAST_INSERT_ROWID(), 0.740300973619703  NULLS LAST, ((rt1.c3)IS(rt1.c2)) COLLATE RTRIM COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((((rt1.c5) BETWEEN (rt1.c2) AND (rt1.c5))))=((((rt1.c2) NOTNULL))))) ORDER BY LAST_INSERT_ROWID(), 0.740300973619703  NULLS LAST, ((rt1.c3)IS(rt1.c2)) COLLATE RTRIM COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM rt1, rt0 INNER JOIN vt0 ON CAST(((rt1.c0) BETWEEN (x'') AND (rt1.c3)) AS NUMERIC) WHERE (((x'e9880aa4')<(((rt0.c2)*(rt0.c3))))) ORDER BY x'' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((x'e9880aa4')<(((rt0.c2)*(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN vt0 ON CAST(((rt1.c0) BETWEEN (x'') AND (rt1.c3)) AS NUMERIC) ORDER BY x'' COLLATE NOCASE);
SELECT * FROM rt1, rt0 INNER JOIN vt0 ON CAST(((rt1.c0) BETWEEN (x'') AND (rt1.c3)) AS NUMERIC) WHERE (((x'e9880aa4')<(((rt0.c2)*(rt0.c3))))) ORDER BY x'' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((x'e9880aa4')<(((rt0.c2)*(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN vt0 ON CAST(((rt1.c0) BETWEEN (x'') AND (rt1.c3)) AS NUMERIC) ORDER BY x'' COLLATE NOCASE);
SELECT * FROM rt1, rt0 INNER JOIN vt0 ON CAST(((rt1.c0) BETWEEN (x'') AND (rt1.c3)) AS NUMERIC) WHERE (((x'e9880aa4')<(((rt0.c2)*(rt0.c3))))) ORDER BY x'' COLLATE NOCASE;
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((- (rt1.c3)) IN ())) ORDER BY (((((rt0.c2) IS FALSE), IFNULL(rt0.c1, rt0.c1), CAST(rt0.c1 AS BLOB)))!=((((NULL)>(rt1.c4)), ((rt1.c2)*(rt0.c0)), json_quote(rt1.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (rt1.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((((rt0.c2) IS FALSE), IFNULL(rt0.c1, rt0.c1), CAST(rt0.c1 AS BLOB)))!=((((NULL)>(rt1.c4)), ((rt1.c2)*(rt0.c0)), json_quote(rt1.c4))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((- (rt1.c3)) IN ())) ORDER BY (((((rt0.c2) IS FALSE), IFNULL(rt0.c1, rt0.c1), CAST(rt0.c1 AS BLOB)))!=((((NULL)>(rt1.c4)), ((rt1.c2)*(rt0.c0)), json_quote(rt1.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (rt1.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((((rt0.c2) IS FALSE), IFNULL(rt0.c1, rt0.c1), CAST(rt0.c1 AS BLOB)))!=((((NULL)>(rt1.c4)), ((rt1.c2)*(rt0.c0)), json_quote(rt1.c4))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((- (rt1.c3)) IN ())) ORDER BY (((((rt0.c2) IS FALSE), IFNULL(rt0.c1, rt0.c1), CAST(rt0.c1 AS BLOB)))!=((((NULL)>(rt1.c4)), ((rt1.c2)*(rt0.c0)), json_quote(rt1.c4))))  NULLS FIRST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0)AND('h|H㶠3OTqq')) COLLATE RTRIM WHERE (JULIANDAY(((rt1.c1) NOT BETWEEN ('o') AND (rt1.c4)), ((rt0.c1) NOTNULL), (~ (rt0.c3)))) ORDER BY TYPEOF(CHAR(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((rt1.c1) NOT BETWEEN ('o') AND (rt1.c4)), ((rt0.c1) NOTNULL), (~ (rt0.c3)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0)AND('h|H㶠3OTqq')) COLLATE RTRIM ORDER BY TYPEOF(CHAR(rt0.c2)) ASC);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0)AND('h|H㶠3OTqq')) COLLATE RTRIM WHERE (JULIANDAY(((rt1.c1) NOT BETWEEN ('o') AND (rt1.c4)), ((rt0.c1) NOTNULL), (~ (rt0.c3)))) ORDER BY TYPEOF(CHAR(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((rt1.c1) NOT BETWEEN ('o') AND (rt1.c4)), ((rt0.c1) NOTNULL), (~ (rt0.c3)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0)AND('h|H㶠3OTqq')) COLLATE RTRIM ORDER BY TYPEOF(CHAR(rt0.c2)) ASC);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0)AND('h|H㶠3OTqq')) COLLATE RTRIM WHERE (JULIANDAY(((rt1.c1) NOT BETWEEN ('o') AND (rt1.c4)), ((rt0.c1) NOTNULL), (~ (rt0.c3)))) ORDER BY TYPEOF(CHAR(rt0.c2)) ASC;
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (vt0.c0) ORDER BY NULLIF(NULL, (rt1.c3 IN (rt0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY NULLIF(NULL, (rt1.c3 IN (rt0.c3))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (vt0.c0) ORDER BY NULLIF(NULL, (rt1.c3 IN (rt0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY NULLIF(NULL, (rt1.c3 IN (rt0.c3))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (vt0.c0) ORDER BY NULLIF(NULL, (rt1.c3 IN (rt0.c3))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c3 IN ()));
SELECT * FROM rt1 WHERE (((('e\n', rt1.c2, rt1.c2)) NOT BETWEEN ((((rt1.c4)%(rt1.c3)), ABS(DISTINCT rt1.c5), CASE x''  WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c1 END)) AND ((SUBSTR(x'', rt1.c3), rt1.c5, (rt1.c3 IN ()))))) ORDER BY 0.1688887834824403  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('e\n', rt1.c2, rt1.c2)) NOT BETWEEN ((((rt1.c4)%(rt1.c3)), ABS(DISTINCT rt1.c5), CASE x''  WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c1 END)) AND ((SUBSTR(x'', rt1.c3), rt1.c5, (rt1.c3 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY 0.1688887834824403  NULLS FIRST);
SELECT * FROM rt1 WHERE (((('e\n', rt1.c2, rt1.c2)) NOT BETWEEN ((((rt1.c4)%(rt1.c3)), ABS(DISTINCT rt1.c5), CASE x''  WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c1 END)) AND ((SUBSTR(x'', rt1.c3), rt1.c5, (rt1.c3 IN ()))))) ORDER BY 0.1688887834824403  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('e\n', rt1.c2, rt1.c2)) NOT BETWEEN ((((rt1.c4)%(rt1.c3)), ABS(DISTINCT rt1.c5), CASE x''  WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c1 END)) AND ((SUBSTR(x'', rt1.c3), rt1.c5, (rt1.c3 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY 0.1688887834824403  NULLS FIRST);
SELECT * FROM rt1 WHERE (((('e\n', rt1.c2, rt1.c2)) NOT BETWEEN ((((rt1.c4)%(rt1.c3)), ABS(DISTINCT rt1.c5), CASE x''  WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c1 END)) AND ((SUBSTR(x'', rt1.c3), rt1.c5, (rt1.c3 IN ()))))) ORDER BY 0.1688887834824403  NULLS FIRST;
SELECT * FROM rt0, vt0, rt1 WHERE (((((+ (rt0.c4))))<>((CAST(rt1.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ((((((+ (rt0.c4))))<>((CAST(rt1.c2 AS BLOB))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (((((+ (rt0.c4))))<>((CAST(rt1.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ((((((+ (rt0.c4))))<>((CAST(rt1.c2 AS BLOB))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (((((+ (rt0.c4))))<>((CAST(rt1.c2 AS BLOB)))));
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((+ (rt1.c0)) IN (((rt1.c1)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c0)) IN (((rt1.c1)+(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((+ (rt1.c0)) IN (((rt1.c1)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c0)) IN (((rt1.c1)+(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((+ (rt1.c0)) IN (((rt1.c1)+(vt0.c0)))));
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((rt1.c2) NOT BETWEEN (((((rt1.c3)OR(rt1.c0)))AND(rt1.c4))) AND ((rt1.c3 IN ())))) ORDER BY ((((json_type(NULL))OR(((rt1.c2)>(rt1.c3)))))OR(((rt1.c0)>=(rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOT BETWEEN (((((rt1.c3)OR(rt1.c0)))AND(rt1.c4))) AND ((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((json_type(NULL))OR(((rt1.c2)>(rt1.c3)))))OR(((rt1.c0)>=(rt1.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((rt1.c2) NOT BETWEEN (((((rt1.c3)OR(rt1.c0)))AND(rt1.c4))) AND ((rt1.c3 IN ())))) ORDER BY ((((json_type(NULL))OR(((rt1.c2)>(rt1.c3)))))OR(((rt1.c0)>=(rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOT BETWEEN (((((rt1.c3)OR(rt1.c0)))AND(rt1.c4))) AND ((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((json_type(NULL))OR(((rt1.c2)>(rt1.c3)))))OR(((rt1.c0)>=(rt1.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((rt1.c2) NOT BETWEEN (((((rt1.c3)OR(rt1.c0)))AND(rt1.c4))) AND ((rt1.c3 IN ())))) ORDER BY ((((json_type(NULL))OR(((rt1.c2)>(rt1.c3)))))OR(((rt1.c0)>=(rt1.c3))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC)) ORDER BY CAST(((rt0.c3)>(rt0.c3)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3)>(rt0.c3)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC)) ORDER BY CAST(((rt0.c3)>(rt0.c3)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3)>(rt0.c3)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC)) ORDER BY CAST(((rt0.c3)>(rt0.c3)) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN vt0 WHERE (json_array_length((((rt1.c4, x'45be', rt1.c0)) BETWEEN ((rt0.c1, 0.85744498995562, rt1.c2)) AND ((rt1.c1, rt0.c3, vt0.c0))), ((rt0.c0)|(rt0.c2)))) ORDER BY (((rt1.c0 IN ())) NOT NULL) DESC  NULLS LAST, ((json_valid(rt1.c3)) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND ((vt0.c0 IN (x'9211'))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((((rt1.c4, x'45be', rt1.c0)) BETWEEN ((rt0.c1, 0.85744498995562, rt1.c2)) AND ((rt1.c1, rt0.c3, vt0.c0))), ((rt0.c0)|(rt0.c2)))) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN vt0 ORDER BY (((rt1.c0 IN ())) NOT NULL) DESC  NULLS LAST, ((json_valid(rt1.c3)) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND ((vt0.c0 IN (x'9211')))));
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN vt0 WHERE (json_array_length((((rt1.c4, x'45be', rt1.c0)) BETWEEN ((rt0.c1, 0.85744498995562, rt1.c2)) AND ((rt1.c1, rt0.c3, vt0.c0))), ((rt0.c0)|(rt0.c2)))) ORDER BY (((rt1.c0 IN ())) NOT NULL) DESC  NULLS LAST, ((json_valid(rt1.c3)) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND ((vt0.c0 IN (x'9211'))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((((rt1.c4, x'45be', rt1.c0)) BETWEEN ((rt0.c1, 0.85744498995562, rt1.c2)) AND ((rt1.c1, rt0.c3, vt0.c0))), ((rt0.c0)|(rt0.c2)))) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN vt0 ORDER BY (((rt1.c0 IN ())) NOT NULL) DESC  NULLS LAST, ((json_valid(rt1.c3)) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND ((vt0.c0 IN (x'9211')))));
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN vt0 WHERE (json_array_length((((rt1.c4, x'45be', rt1.c0)) BETWEEN ((rt0.c1, 0.85744498995562, rt1.c2)) AND ((rt1.c1, rt0.c3, vt0.c0))), ((rt0.c0)|(rt0.c2)))) ORDER BY (((rt1.c0 IN ())) NOT NULL) DESC  NULLS LAST, ((json_valid(rt1.c3)) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND ((vt0.c0 IN (x'9211'))));
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((COALESCE(rt1.c4, rt1.c3)) BETWEEN ((rt0.c4 IN ())) AND ((((rt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c4)))))) ORDER BY (((rt1.c1)OR(rt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt1.c4, rt1.c3)) BETWEEN ((rt0.c4 IN ())) AND ((((rt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c4)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY (((rt1.c1)OR(rt1.c0)) IN ()));
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((COALESCE(rt1.c4, rt1.c3)) BETWEEN ((rt0.c4 IN ())) AND ((((rt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c4)))))) ORDER BY (((rt1.c1)OR(rt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt1.c4, rt1.c3)) BETWEEN ((rt0.c4 IN ())) AND ((((rt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c4)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY (((rt1.c1)OR(rt1.c0)) IN ()));
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((COALESCE(rt1.c4, rt1.c3)) BETWEEN ((rt0.c4 IN ())) AND ((((rt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c4)))))) ORDER BY (((rt1.c1)OR(rt1.c0)) IN ());
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((NOT (rt1.c3 COLLATE BINARY))) ORDER BY (((rt0.c2, rt1.c0, rt0.c1)) NOT BETWEEN (('G6' COLLATE NOCASE, ((((rt1.c3)OR(rt0.c0)))OR(rt1.c4)), '>W' COLLATE BINARY)) AND ((((((rt1.c0)AND(rt0.c1)))AND(rt1.c3)), CAST(rt0.c2 AS REAL), CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c3 THEN NULL END))), (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))<(((rt1.c5)-(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((rt0.c2, rt1.c0, rt0.c1)) NOT BETWEEN (('G6' COLLATE NOCASE, ((((rt1.c3)OR(rt0.c0)))OR(rt1.c4)), '>W' COLLATE BINARY)) AND ((((((rt1.c0)AND(rt0.c1)))AND(rt1.c3)), CAST(rt0.c2 AS REAL), CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c3 THEN NULL END))), (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))<(((rt1.c5)-(rt0.c3))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((NOT (rt1.c3 COLLATE BINARY))) ORDER BY (((rt0.c2, rt1.c0, rt0.c1)) NOT BETWEEN (('G6' COLLATE NOCASE, ((((rt1.c3)OR(rt0.c0)))OR(rt1.c4)), '>W' COLLATE BINARY)) AND ((((((rt1.c0)AND(rt0.c1)))AND(rt1.c3)), CAST(rt0.c2 AS REAL), CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c3 THEN NULL END))), (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))<(((rt1.c5)-(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((rt0.c2, rt1.c0, rt0.c1)) NOT BETWEEN (('G6' COLLATE NOCASE, ((((rt1.c3)OR(rt0.c0)))OR(rt1.c4)), '>W' COLLATE BINARY)) AND ((((((rt1.c0)AND(rt0.c1)))AND(rt1.c3)), CAST(rt0.c2 AS REAL), CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c3 THEN NULL END))), (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))<(((rt1.c5)-(rt0.c3))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((NOT (rt1.c3 COLLATE BINARY))) ORDER BY (((rt0.c2, rt1.c0, rt0.c1)) NOT BETWEEN (('G6' COLLATE NOCASE, ((((rt1.c3)OR(rt0.c0)))OR(rt1.c4)), '>W' COLLATE BINARY)) AND ((((((rt1.c0)AND(rt0.c1)))AND(rt1.c3)), CAST(rt0.c2 AS REAL), CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c3 THEN NULL END))), (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))<(((rt1.c5)-(rt0.c3))))  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (0.8840092783181767);
SELECT SUM(count) FROM (SELECT ((0.8840092783181767) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (0.8840092783181767);
SELECT SUM(count) FROM (SELECT ((0.8840092783181767) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (0.8840092783181767);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT rt0.c3));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c3)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT rt0.c3));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c3)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT rt0.c3));
SELECT * FROM rt0 CROSS JOIN vt0 ON (NOT (((((NULL)OR(rt1.c5)))AND(rt0.c4)))) LEFT OUTER JOIN rt1 ON (((((((rt0.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))))AND(((rt0.c2)<>(rt1.c4)))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 END)) WHERE (((((((rt0.c0)AND(rt0.c0)))OR(((rt0.c3)>=(rt1.c0)))))OR(((((vt0.c0)OR(rt0.c0)))AND(rt1.c3))))) ORDER BY ((((rt1.c2)-(rt0.c0)))<((NOT (rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(((rt0.c3)>=(rt1.c0)))))OR(((((vt0.c0)OR(rt0.c0)))AND(rt1.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (NOT (((((NULL)OR(rt1.c5)))AND(rt0.c4)))) LEFT OUTER JOIN rt1 ON (((((((rt0.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))))AND(((rt0.c2)!=(rt1.c4)))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 END)) ORDER BY ((((rt1.c2)-(rt0.c0)))<((NOT (rt1.c1)))) DESC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON (NOT (((((NULL)OR(rt1.c5)))AND(rt0.c4)))) LEFT OUTER JOIN rt1 ON (((((((rt0.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))))AND(((rt0.c2)<>(rt1.c4)))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 END)) WHERE (((((((rt0.c0)AND(rt0.c0)))OR(((rt0.c3)>=(rt1.c0)))))OR(((((vt0.c0)OR(rt0.c0)))AND(rt1.c3))))) ORDER BY ((((rt1.c2)-(rt0.c0)))<((NOT (rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(((rt0.c3)>=(rt1.c0)))))OR(((((vt0.c0)OR(rt0.c0)))AND(rt1.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (NOT (((((NULL)OR(rt1.c5)))AND(rt0.c4)))) LEFT OUTER JOIN rt1 ON (((((((rt0.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))))AND(((rt0.c2)!=(rt1.c4)))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 END)) ORDER BY ((((rt1.c2)-(rt0.c0)))<((NOT (rt1.c1)))) DESC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON (NOT (((((NULL)OR(rt1.c5)))AND(rt0.c4)))) LEFT OUTER JOIN rt1 ON (((((((rt0.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))))AND(((rt0.c2)<>(rt1.c4)))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 END)) WHERE (((((((rt0.c0)AND(rt0.c0)))OR(((rt0.c3)>=(rt1.c0)))))OR(((((vt0.c0)OR(rt0.c0)))AND(rt1.c3))))) ORDER BY ((((rt1.c2)-(rt0.c0)))<((NOT (rt1.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt1.c1)!=(rt0.c3))) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END) AND (767371091)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)!=(rt0.c3))) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END) AND (767371091))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt1.c1)!=(rt0.c3))) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END) AND (767371091)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)!=(rt0.c3))) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END) AND (767371091))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt1.c1)!=(rt0.c3))) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END) AND (767371091)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2, rt0.c2, rt0.c0))==((0.6443363998286303, rt0.c1, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, rt0.c2, rt0.c0))=((0.6443363998286303, rt0.c1, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2, rt0.c2, rt0.c0))==((0.6443363998286303, rt0.c1, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, rt0.c2, rt0.c0))=((0.6443363998286303, rt0.c1, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2, rt0.c2, rt0.c0))==((0.6443363998286303, rt0.c1, rt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c3)))  WHEN ((rt0.c0) IS TRUE) THEN ((0.6162124163760897)<(rt0.c3)) END) ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c2) AND (x''))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c3)))  WHEN ((rt0.c0) IS TRUE) THEN ((0.6162124163760897)<(rt0.c3)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c2) AND (x''))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c3)))  WHEN ((rt0.c0) IS TRUE) THEN ((0.6162124163760897)<(rt0.c3)) END) ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c2) AND (x''))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c3)))  WHEN ((rt0.c0) IS TRUE) THEN ((0.6162124163760897)<(rt0.c3)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c2) AND (x''))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c3)))  WHEN ((rt0.c0) IS TRUE) THEN ((0.6162124163760897)<(rt0.c3)) END) ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c2) AND (x''))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (((IFNULL(rt0.c3, rt1.c5))||(CASE WHEN rt0.c4 THEN 1973555353 END)));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c3, rt1.c5))||(CASE WHEN rt0.c4 THEN 1973555353 END))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (((IFNULL(rt0.c3, rt1.c5))||(CASE WHEN rt0.c4 THEN 1973555353 END)));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c3, rt1.c5))||(CASE WHEN rt0.c4 THEN 1973555353 END))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (((IFNULL(rt0.c3, rt1.c5))||(CASE WHEN rt0.c4 THEN 1973555353 END)));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (rt1.c3);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt1, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt1, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) IS TRUE))IS(rt0.c1))) ORDER BY (((vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((NULL, (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.8780578459378505))), rt0.c2)) AND ((((rt0.c4)<<(rt0.c3)), x'', CAST(rt0.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))IS(rt0.c1))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((NULL, (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.8780578459378505))), rt0.c2)) AND ((((rt0.c4)<<(rt0.c3)), x'', CAST(rt0.c0 AS REAL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) IS TRUE))IS(rt0.c1))) ORDER BY (((vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((NULL, (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.8780578459378505))), rt0.c2)) AND ((((rt0.c4)<<(rt0.c3)), x'', CAST(rt0.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))IS(rt0.c1))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((NULL, (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.8780578459378505))), rt0.c2)) AND ((((rt0.c4)<<(rt0.c3)), x'', CAST(rt0.c0 AS REAL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) IS TRUE))IS(rt0.c1))) ORDER BY (((vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((NULL, (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.8780578459378505))), rt0.c2)) AND ((((rt0.c4)<<(rt0.c3)), x'', CAST(rt0.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (TRIM(((rt0.c0) NOT NULL), CASE WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c0 END)) ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c1) IS TRUE) WHEN ((rt1.c4)GLOB(rt0.c0)) THEN (rt0.c2 IN (rt1.c2)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (rt1.c3 IN ()) ELSE ((vt0.c0)>>('D/76\JI')) END DESC, CAST((+ (rt0.c2)) AS TEXT) ASC  NULLS FIRST, rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c0) NOT NULL), CASE WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c1) IS TRUE) WHEN ((rt1.c4)GLOB(rt0.c0)) THEN (rt0.c2 IN (rt1.c2)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (rt1.c3 IN ()) ELSE ((vt0.c0)>>('D/76\JI')) END DESC, CAST((+ (rt0.c2)) AS TEXT) ASC  NULLS FIRST, rt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (TRIM(((rt0.c0) NOT NULL), CASE WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c0 END)) ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c1) IS TRUE) WHEN ((rt1.c4)GLOB(rt0.c0)) THEN (rt0.c2 IN (rt1.c2)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (rt1.c3 IN ()) ELSE ((vt0.c0)>>('D/76\JI')) END DESC, CAST((+ (rt0.c2)) AS TEXT) ASC  NULLS FIRST, rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c0) NOT NULL), CASE WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c1) IS TRUE) WHEN ((rt1.c4)GLOB(rt0.c0)) THEN (rt0.c2 IN (rt1.c2)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (rt1.c3 IN ()) ELSE ((vt0.c0)>>('D/76\JI')) END DESC, CAST((+ (rt0.c2)) AS TEXT) ASC  NULLS FIRST, rt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (TRIM(((rt0.c0) NOT NULL), CASE WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c0 END)) ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c1) IS TRUE) WHEN ((rt1.c4)GLOB(rt0.c0)) THEN (rt0.c2 IN (rt1.c2)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (rt1.c3 IN ()) ELSE ((vt0.c0)>>('D/76\JI')) END DESC, CAST((+ (rt0.c2)) AS TEXT) ASC  NULLS FIRST, rt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (ROUND(CAST(rt1.c1 AS TEXT), CASE rt1.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c4 WHEN rt1.c4 THEN 5.0202159E7 END));
SELECT SUM(count) FROM (SELECT ((ROUND(CAST(rt1.c1 AS TEXT), CASE rt1.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c4 WHEN rt1.c4 THEN 5.0202159E7 END)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (ROUND(CAST(rt1.c1 AS TEXT), CASE rt1.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c4 WHEN rt1.c4 THEN 5.0202159E7 END));
SELECT SUM(count) FROM (SELECT ((ROUND(CAST(rt1.c1 AS TEXT), CASE rt1.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c4 WHEN rt1.c4 THEN 5.0202159E7 END)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (ROUND(CAST(rt1.c1 AS TEXT), CASE rt1.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c4 WHEN rt1.c4 THEN 5.0202159E7 END));
