-- Time: 2024/06/10 06:02:52
-- Database: database14
-- Database version: 3.40.0
-- seed value: 3992318914
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, +c5 TEXT ); -- 2ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, ); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT x'4fb2' COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'')AND(CASE NULL  WHEN '-197282986' THEN '1126425351' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-831306992'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-831306992 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2805334532824604) NOTNULL)) BETWEEN (CAST('0D' AS TEXT)) AND (((0.7682765200124154)/(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=465636337 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('c]D<S7H82' COLLATE NOCASE) NOT BETWEEN ((x'' IN ())) AND (((('')) NOT BETWEEN ((NULL)) AND ((-1938216448))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1374557534'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 sz=1329378188 unordered'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE 0.8226225996410368; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1126425351 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'0303' COLLATE NOCASE)%((('?2㩕yKd') NOT BETWEEN ('') AND (0.8495819882597856)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1417630084 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 -1658505131 sz=-1371620375 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-950848031 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (1126425351) AND (0x58e56ee4))) NOT BETWEEN (((NULL)GLOB('1145639901'))) AND (json(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1374557534 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')IS NOT('\r)'))) BETWEEN (NULL) AND (CAST('961310193' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.41179231951604545; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=961310193 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1872279545 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '541332080 sz=-1938216448'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=-197282986'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-446570780 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 1927755093'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) ISNULL))AND(NULL)))OR((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '1242642594'  WHEN '-1809134451' THEN 0X58e56ee4 WHEN '1491431140' THEN x'' WHEN x'' THEN '1126425351' END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-92141984 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1986076994'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(0.8226225996410368, NULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-122597933'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1813753628 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '557488346 sz=-1255767408 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1262056564 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1 WHERE (((0.42728330435725725)) BETWEEN ((((x'39b8')>=(0.9719002070086685)))) AND ((((NULL) BETWEEN (NULL) AND (x'102c'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1731228804 2 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1504971249 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_USED(x'')) BETWEEN (CASE WHEN 0.9468868183553033 THEN '|DLb\?' ELSE 0.4938190921840301 END) AND (((x'ed577a18') BETWEEN (1.126425351E9) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=258344941 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-197282986 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-831306992' IN (CAST(x'' AS NUMERIC), 0.9884611240537702 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))AND(((x'') NOT BETWEEN (NULL) AND (NULL)))))AND(UNLIKELY('2052461646'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1256598263 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('') BETWEEN (x'') AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(-9.50848031E8 AS INTEGER))OR((((('i)H*?')AND(x'')))AND(0.6188046553266422)))))OR((~ ('29123876')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1467942496 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=804119789 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1760038920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1491431140 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=619058481 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1927755093 sz=1896804495 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-344580680 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1733810894 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1809134451 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1927755093'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6188046553266422; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE RTRIM AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 7ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1329378188 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-979034832 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1868133197'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'd152') IS TRUE) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-950848031 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-77799767 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-551129467 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('|['))>=((x''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=285931640 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1799226045 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=2128307183'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.41179231951604545) IS FALSE))<<((((('0.41179231951604545')OR(0.5144813886950713)))AND(0.9468868183553033)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1938216448 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-979034832 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('1233983666')))>(TYPEOF(DISTINCT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '465636337 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1696249678 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'' IN (1491431140, NULL)))AND(((0x16f16f1c) IS FALSE))))OR(x'ea4f' COLLATE RTRIM)))OR((x'' IN ()))))OR((NULL IN (0.3229920581606933)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2039826019 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) NOT BETWEEN (0.11200782850964441) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x6f59734d) NOT BETWEEN (NULL) AND (x''))) BETWEEN (CAST('Y[cQL' AS INTEGER)) AND (((('E', '-9223372036854775808', -1638994723))=(('J+CJ[D}m', 0xffffffffd4044f95, ']2MY'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=617987962 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) NOT BETWEEN ('1799226045') AND (3.84921372E8))))<=((0.14533134732142305))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1841802550 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'2f95' AS NUMERIC))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1287325730 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN NULL THEN '{wGv}7s' WHEN x'' THEN -1765447667 WHEN '\rU' THEN NULL WHEN '' THEN NULL WHEN 0.7266968977810379 THEN 0.5144813886950713 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=961310193 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1262056564 sz=1767607148 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1701688520 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4423183591151576) NOT NULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1422367586 sz=-950848031 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4423183591151576, 'd#~,8?', 0.08241269859097944)) NOT BETWEEN (((('0.8226225996410368') IS TRUE), ((((x'')AND('-1648596368')))AND('0.41179231951604545')), '\rU')) AND ((((x'')<>('1799226045')), (('-737914987') IS TRUE), ('LO' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '352912803 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)OR('384921372')))AND('1374557534')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT 'E'))+(CAST(x'' AS INTEGER))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-390952766 sz=1733810894 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN '742702901' THEN 1513200837 END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN '-77799767' THEN 0Xffffffffab38649e ELSE x'' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3648668959165967)|(NULL))) BETWEEN ((((NULL)) NOT BETWEEN ((0.8373655071516567)) AND (('|[')))) AND (((0.011638384594718332) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' IN (x'', 0.023104563528038025)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1262056564 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1842360645 -1287325730 sz=336395280'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'')AND('TzC\n')))AND(0xffffffff86b32e3b)))OR(0.43260613051691665)))OR('')))AND(1e500)))AND('-1872279545'))) ISNULL); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=950731721 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1049310104 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=950731721'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-559519323 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-620558973 0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-884062447'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1575331849)<>(x'317b')))-(((NULL) BETWEEN (0.42125978615919146) AND (0.5431785578399805)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=557488346 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'6569' IN ()) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1205914797 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1014528872'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'a9b65ff1'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1648596368 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1071375451'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((IFNULL(442852094, x''))AND(CAST('-131693348' AS REAL))))AND(((((((((1.896804495E9)OR(x'')))AND(x'')))OR(0X10ddd916)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1765447667 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '898472865 sz=-586138064 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') NOTNULL))AND((('') NOT BETWEEN ('{Qᕞ6^c⏼턬w') AND ('-831306992')))))AND(CAST('璄h120L' AS BLOB))))OR(((('1491431140')) BETWEEN ((NULL)) AND ((NULL))))))AND(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)|(0.17706852613330681)) IN (x'8316')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-20295432'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'e331'))==((x''))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('384921372') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATE('￿Hl%f', x'', x'fc4a1043')) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1683363581 0 sz=-1637021695'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.9046643409866503)OR(x'505a'))  WHEN x'' THEN (('784308869')>(NULL)) WHEN (+ (NULL)) THEN (NOT (NULL)) WHEN CAST('䵖|gj' AS TEXT) THEN (((0.5399093754964452, 0x68e81008, x'1786'))!=((NULL, 0.6373488138672054, NULL))) ELSE '0.2805334532824604' COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-607134099 sz=-1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(((NULL)&('435020128')), UNLIKELY(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=742702901 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1357626156'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1637021695'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((LIKELY('-979034832'))AND(MIN(x'', -1, x'', '|DLb\?'))))AND(NULL)))AND(CASE WHEN x'' THEN x'' END)))AND(TRIM(DISTINCT ''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'50fc' THEN '280790811' WHEN NULL THEN 1126425351 WHEN 'Sw,''W\G	' THEN '0.8226225996410368' END)|(CAST('*亢?U' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1497038178 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')) BETWEEN (('C뗻+<')) AND ((0.6766649325894003)))))==(((('131094370') IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=950731721'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-620558973 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-2077004463 -854104606 603154950 sz=1449160275 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=672526677'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (1511369228)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1696249678 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1730740751 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1903531693 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-2035435948 2 sz=1196804025'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') IS FALSE))AND(((0.45502747974282465) BETWEEN (0.21691116828881296) AND ('')))))OR(CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)<=((((0.12094986174485789, 'ᕞ^', '-559519323', NULL, 'X7')) BETWEEN ((0.1688453337516792, '-747389398', '-1379571661', -2.0295432E7, NULL)) AND ((NULL, x'52790438cd98', '0.6766649325894003', NULL, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1287325730 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=619058481'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=652099944 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2a19')OR(-709107086)))OR(0X2046dd6a)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '12554476 sz=557488346 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((LIKELY(NULL))) AND ((CAST('l^' AS BLOB)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1700606892')AND('䵖>gj')))OR(0.9582856117542269)))IS((0.5431785578399805 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((1256598263) NOT BETWEEN (NULL) AND (NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (NULL) AND (NULL)))<(((NULL)==(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE -1.028834731E9  WHEN 0X5d1a0ae3 THEN x'3f5c' END)AND(0.21252239009379392)))OR(CAST('' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '465636337 sz=665600173 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0X3d046ee1 IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 sz=-321532464'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -1516250910'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '43874145 0 sz=-607134099'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))%(CASE WHEN -197282986 THEN '-607134099' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((COALESCE(x'bee5', 0.300495036221591))OR('' COLLATE NOCASE)))AND(0.38714054109032525)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('c]D<S7H82')<=(x'57135200')) IN ((('<),')>>(x'')), (~ (x'e8b3')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))AND((('')>(x'')))))AND((('')=(0.3790331457376884)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1094835861 sz=1598497298 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffd7c505c6; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((('-728566271'))==(('-1071375451')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, -1.986076994E9)) NOT BETWEEN ((((0.011638384594718332)/(-929232661)), (~ (336395280)), CASE WHEN NULL THEN x'' WHEN '-1548417405' THEN '-1765447667' WHEN 0xffffffffbd06c640 THEN x'' ELSE x'' END)) AND ((('P' IN ()), ((x'')<<(x'')), ((NULL)<<('-1357626156'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((NULL)IS(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'b4917121'  WHEN '' THEN NULL ELSE '' END)&((+ ('1鮡b')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '557488346'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'98bb' IN ()) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1504971249)%('OV㸰R'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2098421396 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-2039826019 -1287325730 sz=428464688 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1628595523 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(x'')) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))LIKE(x'')); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (x'')) AS NUMERIC); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1417630084 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.5752012743945218)AND('F0*[w9]f')))AND(NULL)))AND(NULL)))OR(0.5752012743945218)) IN (0.7940934217483763)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '155138467 sz=-131693348 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-2010142646' IN ()))<((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.733810894E9; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x1bc10bf1)LIKE(NULL))))<=(('1105835167'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1491431140'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||(x'9fbc'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*('1149270605')))IS('1265192278' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (NULL) AND (0.4600165092072559)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN (0.7880762103537877)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2039826019 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1329378188 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-287282444 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1242350614'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-185567506'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1094129606 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1003687617 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-593340058 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((0.7104373392935907)) BETWEEN ((1002248873)) AND (('1117905125'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1813753628 sz=935807427 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((((x'', '181868553', x'737b')) BETWEEN ((-4.4657078E8, 'c]D<S7H82', 0.8474842181303524)) AND ((NULL, 0.5840486999777267, '졮9')))); -- 7ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATETIME('630452928', NULL, 1259022621, 0.23295905542120865, NULL))GLOB(((((8.98472865E8)OR(0.10433570056730157)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '9]AD?툰K_'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS(x'04f8'))) NOT BETWEEN (((NULL) NOTNULL)) AND ('&k' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-718201653 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 29123876 sz=1197059893'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')GLOB(((('zjz')) BETWEEN (('-909888065')) AND (('-1255767408'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1792933485'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1255541769 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=-772085047 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('143931874')AND('')))AND(NULL))) BETWEEN (((NULL) NOT BETWEEN (x'') AND ('669741283'))) AND (((NULL)==('')))); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.1688258851803971) ISNULL))AND(((x'')<(0X407d3732)))))OR(SQLITE_VERSION())))AND(1437512941)))OR(('1145639901' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '285931640 sz=-1875082971 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('?2㩕yKd')) BETWEEN ((NULL)) AND ((NULL)))))<((((x'') ISNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 0.3255176803035358  WHEN 0.8973944741468874 THEN 0.5431785578399805 WHEN 0.752561029204514 THEN 0Xffffffffd1e0e59b WHEN NULL THEN 0xffffffff96c5680d ELSE '}''5' END  WHEN ((0.5270220463076424) ISNULL) THEN ((0.9468868183553033)>=('tKe/fB	En')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1255767408'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))&(((0.41179231951604545) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1063757414 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-790203658 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-575562900'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((1.049310104E9) IS FALSE) THEN (('~2瞲(P)K)')GLOB(0x270c526e)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=465636337'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(1716793414 AS NUMERIC))AND(DATETIME('465636337', NULL, x'5c27d34e'))))AND((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2127550997 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1513007543 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-559471739') BETWEEN (NULL) AND (x''))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN NULL THEN 0.21691116828881296 END THEN (((0.017407470192048136, 0x432ae111, x''))>((0.7496575230151132, x'', 0xffffffffb5268290))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=950731721 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '811829653 sz=776352164 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2083549907 sz=-214783514'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8320158147464316)|('-131693348'))) NOT BETWEEN (x'') AND (CAST('-526941931' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('3 96E䠇괶')/(((x'') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('-1986076994')))>((- (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1594871116' IN (CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')>=('')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=301076856 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1212628799 sz=1145639901'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-344580680 sz=-1683363581 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')AND(x'')))OR(x'ec78')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=373664492 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '846960551 258344941 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2136047579 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=185084553 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE RTRIM AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=898472865 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)LIKE(NULL))  WHEN ((0.017407470192048136)>(435020128)) THEN ('Z836Kl᭡' IN ()) ELSE ((((((((0.1206580060219743)AND(x'')))OR(NULL)))OR(NULL)))OR('1126883601')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1311048154 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(NULL)))AND('1357165250')))AND((((x'baa2', 0.752561029204514, x'e022')) BETWEEN (('', '280790811', NULL)) AND ((x'', 0.8701039947912788, x''))))))AND('DM')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1283828759 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=995242216 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '516845931 sz=-536364515 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=194139598'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(x''))) NOT BETWEEN (((('', 0.2678720275756321, 2.82974486E8, x'fa8e', '1491431140')) BETWEEN ((x'9b1e', x'', 1.374557534E9, '1294948916', NULL)) AND (('-831306992', 0.7999516697425713, x'', 0.7574847254449057, 1800767606)))) AND ((((((((('-1975051425')OR(NULL)))OR(NULL)))OR(x'8f93')))AND('-1769073434')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.7094792020118202  WHEN ABS(0xffffffffdd103e30) THEN CASE WHEN '䌐W' THEN NULL WHEN NULL THEN NULL WHEN 0.9689367221661247 THEN 0.8370360104300338 ELSE 0.4139257696609461 END WHEN ((0.44890087315603466)IS('hl<')) THEN ((NULL)%(-757003023)) WHEN CAST('258344941' AS INTEGER) THEN CAST('-167965960' AS REAL) WHEN ((2.80790811E8) BETWEEN ('-586138064') AND (0X77b557d9)) THEN (((x'2b12'))>(('-858364414'))) WHEN (((453461551)) NOT BETWEEN (('￿')) AND (('7d|٠ᶔd'))) THEN ((x'edbd') BETWEEN (-9.50848031E8) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN 4.35020128E8 WHEN NULL THEN NULL WHEN 0.2704988638668232 THEN 0.6356913076013586 ELSE x'04d0' END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')+(0xffffffff899edebe))))==(((((('^9]\r')OR(x'6d30')))AND(''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1683363581 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.05234200205738826)>=(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-922277396 sz=-1066995815 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 0 sz=-1819881819 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1152479352 sz=-131693348 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0.7139926828061898)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1242642594 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((277261326))>=((x'6531'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1733810894')<('')))AND((((NULL)) NOT BETWEEN ((NULL)) AND ((-1211325198))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.256598263E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=500161299'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2931774072524428 COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-760600867 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=742702901 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOTNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN ',Tᮥ^^[+' THEN NULL END)>=((0.2974473104048241 IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1749057256'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=846373074 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN (x'')) THEN ((4.35020128E8)>(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1442100940 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0Xffffffffe5fe75f1 AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1799226045' IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1927755093 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((NULL))==((x'f8ebdee6'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1049310104 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=442852094 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=336395280 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('}''5' AS TEXT) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=287987551'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1451980533 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1810779810 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=2116224074'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1772686643'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffeae4530e IN ()))LIKE((('-590971598')*(0.4084747296748803)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) NOT BETWEEN (((((',')OR(x'')))AND(NULL))) AND (((x'')>=(1256598263)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(0Xffffffffc038909e, NULL COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1083612788 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5354622609886; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=619058481 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOT BETWEEN (NULL) AND (0Xffffffffdd9f3117)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.23295905542120865; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) NOT BETWEEN (0.7752491425563577 COLLATE NOCASE) AND (((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '601081910 sz=-1450480078'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1781496168 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=-1393727991'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1810779810 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'5568')==('?2㩕yKd'))  WHEN LIKELIHOOD(NULL, 0.37601563352166134) THEN (+ ('213512546')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-8.84062447E8, 1796983087, '1145639901')) NOT BETWEEN (((((x'')) BETWEEN ((NULL)) AND ((x''))), (('⹞CiTqRZ') BETWEEN (x'') AND (1321007345)), ((0.6677810789315887)/('')))) AND ((((0xffffffffcb4e4711)>(x'a788')), (((''))!=(('4᧫'))), ('907366566' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1733810894 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')+('4d')))||(CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-737914987 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((+ ('-197282986')))OR(((((x'4d6f')AND(x'')))OR('983722420')))))AND((((NULL))!=((NULL))))))AND(CAST(0.07010909057044068 AS TEXT))))OR((((525599643, '', '')) NOT BETWEEN ((0.3631675259564514, 0.6198908997236672, '465636337')) AND ((NULL, '', x''))))))AND(((((NULL)AND('26539312')))AND('	U')))))OR(LIKELIHOOD(DISTINCT 0.3944478035178124, 0.7339778546514745))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1809134451 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((x'') BETWEEN (0.2270878673652138) AND (NULL)))) AND (('-1801974590'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-446570780 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (('0.7940934217483763' IN (0.8671848535805499, x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('1805454651' AS TEXT) AS REAL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((~ ('-2006185636')))OR(json_patch(0.9884611240537702, '{놭혌*'))))OR(((('106034969', NULL, x''))<>((0X7edb63ef, 6.17987962E8, ''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2146544157 sz=510040936 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CAST(x'9d89' AS INTEGER))) AND ((((((NULL)AND(0.8495819882597856)))OR(''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 -1809134451 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-344580680 sz=-631653670'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))<((('t>')LIKE(0Xffffffff882d19bf)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((INSTR('128899631', NULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1993304411 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1810779810 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '1617862045'  WHEN 0.03248189274960689 THEN 0.5594601475559235 WHEN x'b1fa' THEN NULL WHEN 0Xffffffff9aeda2ff THEN NULL END)AND(0.40068641951524164)))AND(((x'bbdc')-(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('WG') BETWEEN (NULL) AND (' Rh/H\n')))OR(x'' COLLATE NOCASE)))OR(CASE WHEN 0.589470513200477 THEN x'166b' WHEN 'c(1 3fB' THEN 0X57ae81b7 WHEN -174688007 THEN '961310193' ELSE '-1376026365' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))/('285931640')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1017308143 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-1648596368'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL))>>(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))AND((((('1927755093')OR(0X24bcdb52)))AND('U,XD*q')))))OR((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((NULL) NOT BETWEEN (x'') AND (NULL)))OR(CASE ''  WHEN NULL THEN '0.2704988638668232' ELSE x'' END)))OR(((NULL)<<(0X509f6894)))))AND(CAST(0.799071705213861 AS REAL))))AND(((x'')OR(-1728734953)))))AND(LOWER(DISTINCT 0.576028900301255))))OR(((((3.52912803E8)AND('.\n^')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1648596368 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=282974486'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=557488346'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((+ (0Xffffffff899edebe)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('0.8671848535805499') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-446570780 sz=771268104 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 0 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')) NOT BETWEEN ((x'')) AND ((''))))+((('-1504971249')<('-1737965873')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=83264477 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'uM1e500000ZU|s'  WHEN 0.07982972209445871 THEN x'' WHEN 'l+4K䜑K&' THEN NULL WHEN 0.3873074353034809 THEN 0.891985632946037 ELSE '950731721' END)=('-1071375451' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=135179125 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN '384921372' THEN 0.2622417151051848 ELSE x'afb3' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((+ (-1.97282986E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-731562819 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=658152159 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1126425351 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)AND(x'')))OR(NULL)))AND(0.4764771985629902)))AND(x'')))OR('-1255767408')))AND((NULL IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1393551909 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX(0Xffffffffe1171c48 COLLATE RTRIM, CASE WHEN 'ol|^릝ZqoA' THEN 0.6725779232732291 ELSE 'L,' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1422367586 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6341171671196922, '1497038178', x'')) BETWEEN ((0.40068641951524164, '0.14533134732142305', '_tm᝜+P젮]j')) AND ((NULL, -324160539, '-620558973'))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=1606423818 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-394048145 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=384921372 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=278338837 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('435020128')+(0.039673285561699134)) IN (((x'') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((NULL)) BETWEEN ((1850226074)) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffe8b288c2) ISNULL))==(NULLIF(x'4897', '#B'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 sz=-1887607946'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '977874946 -994299375 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 sz=557488346'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(CAST('0.023104563528038025' AS BLOB), (0xffffffff9f64cc48 IN ()), (((0x1bc6524, NULL, x''))>=((x'', NULL, '-417318564'))), UNLIKELY(DISTINCT '2128307183'), CASE NULL  WHEN NULL THEN '' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=784308869 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1626962127 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-131693348) BETWEEN (NULL) AND (NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)OR(NULL)))OR(NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1565646251'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-607134099 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('') NOT BETWEEN (x'') AND (0x577f0660)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-524935592'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-93334590'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '~0E'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.10636103520587592 IN ('#쾞#H\nz#騈')))OR((('0h') NOT BETWEEN (x'70e7') AND (0.6312926028965384)))))AND(((0.2974473104048241)-(0.5697711126844808)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((0.8933858895445095)) BETWEEN (('379993881')) AND ((NULL))))AND(CASE x'ce08'  WHEN x'' THEN 1760038920 WHEN NULL THEN '' WHEN '' THEN '{}٠4' END)))AND(((1.868133197E9) IS TRUE))))OR(((x'') NOT NULL))))AND('E' COLLATE BINARY)))OR((1e500 IN (-1.262056564E9, '-1648596368')))))AND(NULLIF(x'', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '738371165 0 sz=1352045209 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-935792851'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((9.50731721E8) ISNULL))OR(((-1.071375451E9)<('0.6356913076013586')))))OR('352912803' COLLATE BINARY)))AND(((x'') NOT BETWEEN (0X3f11a1ee) AND ('-1284688769')))))OR((x'' IN ()))))OR((NOT (NULL)))))AND(((((((((0.861526660581768)AND(x'')))OR(x'')))OR(1.256598263E9)))AND('拾㍓K*j%')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1197458961 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1860297877 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (CAST('-586138064' AS NUMERIC)) AND (((NULL)>>(x'a7d4')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1060773159 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.03248189274960689)OR(CAST(x'' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR(((0.23295905542120865)|('^BX7!?xB')), ((0x2490a0d6)IS NOT(NULL)), ((NULL) ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-467209372'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1400187456 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1081457146 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1417630084'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=784308869'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1658448815'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1850587694 sz=1731228804 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffe60b579f)) NOT BETWEEN ((0.6766649325894003)) AND ((x''))) COLLATE RTRIM COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-77799767 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-122597933 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '465636337 -1220993113 sz=213078613 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-2123729278'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'')))IS(('ff' IN ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ABS(DISTINCT -813986441), ((0.8370360104300338) ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-634909049 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 0 sz=541332080 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(((((NULL)AND(0.4825011703939217)))AND(0.8272922678700227))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1357626156 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0Xffffffff89d3e22e AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 230391785 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(0.5726091889953476)) BETWEEN (TYPEOF(NULL)) AND (((NULL)<<(x'')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=('(ସl	P)D'))) BETWEEN (CAST(x'' AS INTEGER)) AND (json_insert(0.0, 0.8933858895445095, '-O]j', '0.9046643409866503', -2.0295432E7))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '472275669' THEN ((NULL) IS FALSE) WHEN CAST('0.576028900301255' AS REAL) THEN ((('', '1692994903', x'298f'))!=((x'', '', NULL))) WHEN ((((NULL)OR(0.4047124122137741)))OR(NULL)) THEN (NOT ('-1040629777')) ELSE ('-1071375451' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0X51ee155e))<>((x''))) THEN 0.44128382408142375 WHEN CAST(-559519323 AS REAL) THEN ((0.7907519325903394)+(0.4392988469635597)) WHEN CASE WHEN '' THEN 0.7538081002757142 END THEN (~ (x'd07c')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-92141984, CHANGES(), CASE '\r'  WHEN '1126883601' THEN x'' END))<>((((((((((x'c32e')AND(0.1979657380035732)))OR(-742422740)))AND(NULL)))OR(NULL)), CASE 0.4384732482163344  WHEN x'' THEN 0.943158756795327 ELSE '1181264014' END, (('-1658505131')+(x'7ce1'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1132838356 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '384921372 0 sz=842922043 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(861182938)))OR((+ (x'')))))OR(((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1018596877 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1940261852 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1842360645'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (NULL))  WHEN ((1547688754)GLOB(0.7067599290142317)) THEN LOWER('-1014528872') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7641791312173606)) NOT BETWEEN ((((0.37005318002095866) BETWEEN (NULL) AND (0.16248442600550383)))) AND (((((('x}')AND('')))OR(1.76003892E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=285931640'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-77799767'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=206186964'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=139880108'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1513200837 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1872279545 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1497038178 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2128307183 0 sz=-1658505131 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((('')OR('')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '950731721 -2043468809 sz=129115132 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('<),' COLLATE NOCASE) BETWEEN (((1979752124) IS FALSE)) AND ((((NULL))==((0.694362097355678))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8789733310708904 IN (x'', 0.21196811956591022)))IS NOT(((1.242642594E9) NOT BETWEEN (0.6656255415267738) AND ('u랄_fn4-U}')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -607134099'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1287325730 sz=742702901 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(0.1688258851803971))|(CAST(NULL AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT NULL) IN ((NULL IN ()), CAST(0xffffffffce556858 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1641205146 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1733810894 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 sz=1411651493 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.31407385344012917)|('0|3X2xXxL'))) BETWEEN (NULL) AND (UNLIKELY(DISTINCT x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN x'' THEN x'' END)+(0.9500775434697337 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(('1268575181' IN ()), CAST(NULL AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1319957921'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=929089706 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=961310193 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -419217185; -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE('-1637021695', (('y\r(')<>(0.1206580060219743)), (('Zd') BETWEEN (NULL) AND ('336395280'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X16f16f1c, 0.07982972209445871, x'4cc9')) BETWEEN ((CASE -1233206140  WHEN NULL THEN 0.5298538696970219 END, ('217234338' IN ()), (('iU') BETWEEN (0.7495213446611453) AND (0.752561029204514)))) AND (((0.10636103520587592 IN ()), (NULL IN (x'')), CAST(0x2fede4ed AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=723186329 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL))<((NULL))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1696249678 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-49118078 4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2006102196 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0.8103765643577834 AS NUMERIC))AND((('')GLOB(NULL)))))AND(CASE x''  WHEN 0.4537790226796389 THEN 0.7145270008898167 WHEN NULL THEN x'' WHEN 0.7576176590275923 THEN '-1563958742' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1190818292 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1245091769 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1986076994 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1657309892 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1348694105 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1287325730 0 sz=1407429001 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (0.4918270991327621)))+((NOT ('wOnda>\nd')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-356628856 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR((('') BETWEEN ('') AND (NULL)))))OR(CAST(0.6771092019155966 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-729980650 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-2102566645 sz=-2010962351 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('/*1b0' COLLATE BINARY)OR(((x'fc5d') NOT BETWEEN (-1861857983) AND ('')))))AND(((0.2926170412816408) IS FALSE))))OR(((('|aa__|')) NOT BETWEEN ((NULL)) AND ((0.3396555105117961))))))AND(0.14156744232989082 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1979679657 sz=-863177803 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ')I溅&*m診'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.5522411741504166)&('Fry\r')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0X2fede4ed))>=((x''))))OR((('') BETWEEN (-1.683363581E9) AND (NULL)))))AND(((((0.10636103520587592)OR(x'')))OR('1989224885')))))OR(CASE WHEN x'' THEN '1Gz&91ҭ' WHEN 0.5324113402971348 THEN x'' WHEN '1431329149' THEN '' END)))OR((('') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1733810894 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2052461646 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((('4')AND(1613307226)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1017167237 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')LIKE(0.24623589082611175)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')%(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8726081471057666)<(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1765447667 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-9.79034832E8 AS INTEGER)) NOT BETWEEN (((NULL)<>(0X3ae0751e))) AND ((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=293461878'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1832532843'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '541332080 sz=1265192278 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1028834731'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(DISTINCT NULL, 0.5183067941837456)) BETWEEN ((NOT (NULL))) AND ((((NULL)) BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-884062447'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '914750372 sz=-1014528872 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('(ସl	p)d' AS REAL)  WHEN ((NULL) NOT NULL) THEN ((((NULL)AND(NULL)))AND(0.4022612223111178)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0x19ede160 COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6172982332163515) IS FALSE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1091252747 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=2091289822 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-966118018 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('쭐]~p5Q浫|z'))) BETWEEN ((NOT (x''))) AND (CASE ''  WHEN 0.07982972209445871 THEN 0.4423183591151576 ELSE 'Z|X6' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-696176223 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2004570880 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('1467942496')>>('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(((x'')>=('-1504971249'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2002550770 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x''))<((x''))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(-1375638646 AS NUMERIC) IN (CASE WHEN NULL THEN 0.2061460139256962 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1799226045 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x''))<((x''))) IN (('1333051711' IN (1.126883601E9)), CAST(x'' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2006222266 258344941 sz=1325686977'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '223085227 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1614303489 sz=1491431140 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'1af8'))<=((x'')))))>=((CAST(0.5399093754964452 AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=457436913'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\{{h	~d')||('◮vod')) IN (CAST(x'' AS BLOB), ((0.3508056584036031)>(-1.97282986E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1079977154 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-845778545 -256685892 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((((((('-1205914797')AND(0.2961322887997715)))OR(0.9805527350150199)))AND(0.21696379453809234)))OR('-633515368')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1126425351' IN ()))OR(((('-405847123'))<((x'2e8c'))))))AND(UNICODE(0.21121549131114337))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-20295432 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=1799226045 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1456840787 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 0 sz=-117032233 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((((((2.82974486E8)OR(x'')))AND('0.8320158147464316')))AND(x'')))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(x'734e'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.6198908997236672 IN ()) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8987311988607645, 0.9107998520217704, x'6fd8', '0|3X2xXxL', 0xffffffff8b7972b4)) BETWEEN ((((x'')&(0.8230220904853237)), HEX(NULL), CASE WHEN '-2007826927' THEN 1.731228804E9 ELSE NULL END, CASE WHEN '352912803' THEN NULL END, (NULL IN ()))) AND ((((x'4db3') BETWEEN (0.946559131376318) AND (NULL)), IFNULL(DISTINCT x'4187', '0.4764771985629902'), (((0.039673285561699134))<(('610329246'))), (('-586138064') NOT NULL), CAST(NULL AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1472355085'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2041290585 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((json_quote(0.08399123822636456))OR(CASE WHEN -8.84062447E8 THEN NULL ELSE '0.7266968977810379' END)))AND(((((((((NULL)AND(x'')))OR(0.9721590868765687)))OR(NULL)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT ((325325517)|(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -125116794 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.2788427266204879; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (NULL) AND ('Ah')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-2063409635 COLLATE BINARY)IS(IFNULL('1513200837', -1.071375451E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1411996902 sz=-228691252'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1329378188 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'e.'  WHEN NULL THEN '-8385235' WHEN '1903225619' THEN 'Bt' WHEN NULL THEN NULL ELSE 0.799071705213861 END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-569571131 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=804119789'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffff8c792a00; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(NULL COLLATE NOCASE, ((0.9018229177787818) NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE '\n'  WHEN -1511974501 THEN 0xffffffff83c49094 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.3125640356283066)||(NULL))  WHEN CASE NULL  WHEN '1050272992' THEN 0xffffffffff94baed END THEN (((0X593afd62, x'', 1.242642594E9))<>((NULL, 0.589470513200477, NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1417630084'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)<<(((NULL) BETWEEN (x'be3c') AND (1.3109437E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1063687147 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1997847487 unordered noskipscan'); -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 INTEGER , +c4 TEXT ); -- 1ms;
INSERT OR FAIL INTO vt1(c0) VALUES (0.5662824132205931), (NULL), (0.6312926028965384); -- 0ms;
END; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.legacy_file_format = false; -- 0ms;
PRAGMA main.cache_spill = -2343835265146796801; -- 0ms;
INSERT OR IGNORE INTO rt0(c5, c2, c4) VALUES (NULL, NULL, x'7eaa'), ('-229567335', 'D(5k', NULL), ('F0*[W9]F', 0.6837473866871816, 1937042499); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0.3598961059478605); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3, c1, c1)=(NULL, 0.8847398686261357, x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 14); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.10112371334413817), ('ᴰFFAA\naZ,'), (0.5697711126844808); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=352912803,9');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 76274491); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('X7'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '60975'); -- 0ms;
PRAGMA soft_heap_limit = 9154552390201615052; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((x'') NOTNULL), (- ('550281268'))); -- 0ms;
END; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1228147209,14');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 7); -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1467942496' COLLATE BINARY)>>(NULL)); -- 0ms;
VACUUM; -- 1ms;
PRAGMA application_id = -6203013473913728842; -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '52510'); -- 0ms;
DELETE FROM rt0 WHERE (- (rt0.c4)); -- 0ms;
REINDEX; -- 1ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2098927975); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
END TRANSACTION; -- 0ms;
END; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE rt1; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1306083500); -- 11ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE temp; -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (((CAST(rt0.c2 AS BLOB))&(rt1.c0 COLLATE NOCASE))) ORDER BY CASE NULL  WHEN (((rt1.c2))>=((rt0.c1))) THEN rt1.c4 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB))&(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CASE NULL  WHEN (((rt1.c2))>=((rt0.c1))) THEN rt1.c4 END DESC);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (((CAST(rt0.c2 AS BLOB))&(rt1.c0 COLLATE NOCASE))) ORDER BY CASE NULL  WHEN (((rt1.c2))>=((rt0.c1))) THEN rt1.c4 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB))&(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CASE NULL  WHEN (((rt1.c2))>=((rt0.c1))) THEN rt1.c4 END DESC);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (((CAST(rt0.c2 AS BLOB))&(rt1.c0 COLLATE NOCASE))) ORDER BY CASE NULL  WHEN (((rt1.c2))>=((rt0.c1))) THEN rt1.c4 END DESC;
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((((rt1.c3) IS FALSE)) NOT BETWEEN (((rt0.c4) NOT NULL)) AND ((((rt1.c0)) BETWEEN ((rt0.c4)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS FALSE)) NOT BETWEEN (((rt0.c4) NOT NULL)) AND ((((rt1.c0)) BETWEEN ((rt0.c4)) AND ((rt1.c0)))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((((rt1.c3) IS FALSE)) NOT BETWEEN (((rt0.c4) NOT NULL)) AND ((((rt1.c0)) BETWEEN ((rt0.c4)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS FALSE)) NOT BETWEEN (((rt0.c4) NOT NULL)) AND ((((rt1.c0)) BETWEEN ((rt0.c4)) AND ((rt1.c0)))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((((rt1.c3) IS FALSE)) NOT BETWEEN (((rt0.c4) NOT NULL)) AND ((((rt1.c0)) BETWEEN ((rt0.c4)) AND ((rt1.c0))))));
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3) ISNULL) IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) ISNULL) IN (NULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3) ISNULL) IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) ISNULL) IN (NULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3) ISNULL) IN (NULL)));
SELECT * FROM vt1, rt0, rt1 WHERE (TRIM(DISTINCT ((vt1.c0)<=(rt1.c2)), (((rt1.c4, rt0.c4, rt1.c4))<>((rt0.c2, x'', rt0.c0))))) ORDER BY (+ (PRINTF(rt0.c3, rt0.c5, rt0.c4))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt1.c0)<=(rt1.c2)), (((rt1.c4, rt0.c4, rt1.c4))<>((rt0.c2, x'', rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (+ (PRINTF(rt0.c3, rt0.c5, rt0.c4))) ASC);
SELECT * FROM vt1, rt0, rt1 WHERE (TRIM(DISTINCT ((vt1.c0)<=(rt1.c2)), (((rt1.c4, rt0.c4, rt1.c4))<>((rt0.c2, x'', rt0.c0))))) ORDER BY (+ (PRINTF(rt0.c3, rt0.c5, rt0.c4))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt1.c0)<=(rt1.c2)), (((rt1.c4, rt0.c4, rt1.c4))<>((rt0.c2, x'', rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (+ (PRINTF(rt0.c3, rt0.c5, rt0.c4))) ASC);
SELECT * FROM vt1, rt0, rt1 WHERE (TRIM(DISTINCT ((vt1.c0)<=(rt1.c2)), (((rt1.c4, rt0.c4, rt1.c4))<>((rt0.c2, x'', rt0.c0))))) ORDER BY (+ (PRINTF(rt0.c3, rt0.c5, rt0.c4))) ASC;
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (RTRIM(LIKELIHOOD(rt1.c0, 0.11971336700740631))) ORDER BY ABS(((rt0.c5)IS(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((RTRIM(LIKELIHOOD(rt1.c0, 0.11971336700740631))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ABS(((rt0.c5)IS(rt0.c2))));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (RTRIM(LIKELIHOOD(rt1.c0, 0.11971336700740631))) ORDER BY ABS(((rt0.c5)IS(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((RTRIM(LIKELIHOOD(rt1.c0, 0.11971336700740631))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ABS(((rt0.c5)IS(rt0.c2))));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (RTRIM(LIKELIHOOD(rt1.c0, 0.11971336700740631))) ORDER BY ABS(((rt0.c5)IS(rt0.c2)));
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((((rt1.c2 IN ())))==(((- (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 IN ())))=(((- (rt1.c1)))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((((rt1.c2 IN ())))==(((- (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 IN ())))=(((- (rt1.c1)))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((((rt1.c2 IN ())))==(((- (rt1.c1))))));
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)OR(0.04052283032707871)))AND(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((x'')) AND ((((vt1.c0)>=(vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(0.04052283032707871)))AND(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((x'')) AND ((((vt1.c0)>=(vt1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)OR(0.04052283032707871)))AND(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((x'')) AND ((((vt1.c0)>=(vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(0.04052283032707871)))AND(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((x'')) AND ((((vt1.c0)>=(vt1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)OR(0.04052283032707871)))AND(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((x'')) AND ((((vt1.c0)>=(vt1.c0))))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END)&(((rt1.c1)>>(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END)&(((rt1.c1)>>(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END)&(((rt1.c1)>>(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END)&(((rt1.c1)>>(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END)&(((rt1.c1)>>(rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (TRIM(rt1.c2)) ORDER BY ((CAST(rt1.c3 AS NUMERIC))LIKE((rt1.c0 IN (rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(rt1.c2)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c3 AS NUMERIC))LIKE((rt1.c0 IN (rt1.c3)))) DESC);
SELECT ALL * FROM rt1 WHERE (TRIM(rt1.c2)) ORDER BY ((CAST(rt1.c3 AS NUMERIC))LIKE((rt1.c0 IN (rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(rt1.c2)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c3 AS NUMERIC))LIKE((rt1.c0 IN (rt1.c3)))) DESC);
SELECT ALL * FROM rt1 WHERE (TRIM(rt1.c2)) ORDER BY ((CAST(rt1.c3 AS NUMERIC))LIKE((rt1.c0 IN (rt1.c3)))) DESC;
SELECT * FROM rt1, vt1, rt0 WHERE (CAST(rt1.c4 AS REAL)) ORDER BY (((((rt1.c1)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))%(((vt1.c0) IS FALSE))) ASC, ((~ (rt1.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 AS REAL)) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (((((rt1.c1)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))%(((vt1.c0) IS FALSE))) ASC, ((~ (rt1.c2)) IN ())  NULLS FIRST);
SELECT * FROM rt1, vt1, rt0 WHERE (CAST(rt1.c4 AS REAL)) ORDER BY (((((rt1.c1)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))%(((vt1.c0) IS FALSE))) ASC, ((~ (rt1.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 AS REAL)) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (((((rt1.c1)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))%(((vt1.c0) IS FALSE))) ASC, ((~ (rt1.c2)) IN ())  NULLS FIRST);
SELECT * FROM rt1, vt1, rt0 WHERE (CAST(rt1.c4 AS REAL)) ORDER BY (((((rt1.c1)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))%(((vt1.c0) IS FALSE))) ASC, ((~ (rt1.c2)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((('h0t}x{18') IS TRUE))OR((NULL IN ()))))OR((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((('h0t}x{18') IS TRUE))OR((NULL IN ()))))OR((rt0.c4 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((('h0t}x{18') IS TRUE))OR((NULL IN ()))))OR((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((('h0t}x{18') IS TRUE))OR((NULL IN ()))))OR((rt0.c4 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((('h0t}x{18') IS TRUE))OR((NULL IN ()))))OR((rt0.c4 IN ()))));
SELECT * FROM rt0, rt1 WHERE (CASE rt1.c0  WHEN CASE WHEN rt1.c0 THEN rt0.c4 END THEN json_array_length(rt0.c5, rt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN CASE WHEN rt1.c0 THEN rt0.c4 END THEN json_array_length(rt0.c5, rt0.c1) END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE rt1.c0  WHEN CASE WHEN rt1.c0 THEN rt0.c4 END THEN json_array_length(rt0.c5, rt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN CASE WHEN rt1.c0 THEN rt0.c4 END THEN json_array_length(rt0.c5, rt0.c1) END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE rt1.c0  WHEN CASE WHEN rt1.c0 THEN rt0.c4 END THEN json_array_length(rt0.c5, rt0.c1) END);
SELECT ALL * FROM rt0, vt1 WHERE ((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END IN ())) ORDER BY COALESCE(DISTINCT (((rt0.c3))<=((rt0.c0))), ((((((((rt0.c5)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c5)))AND(rt0.c4))) ASC, vt1.c0;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY COALESCE(DISTINCT (((rt0.c3))<=((rt0.c0))), ((((((((rt0.c5)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c5)))AND(rt0.c4))) ASC, vt1.c0);
SELECT ALL * FROM rt0, vt1 WHERE ((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END IN ())) ORDER BY COALESCE(DISTINCT (((rt0.c3))<=((rt0.c0))), ((((((((rt0.c5)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c5)))AND(rt0.c4))) ASC, vt1.c0;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY COALESCE(DISTINCT (((rt0.c3))<=((rt0.c0))), ((((((((rt0.c5)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c5)))AND(rt0.c4))) ASC, vt1.c0);
SELECT ALL * FROM rt0, vt1 WHERE ((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END IN ())) ORDER BY COALESCE(DISTINCT (((rt0.c3))<=((rt0.c0))), ((((((((rt0.c5)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c5)))AND(rt0.c4))) ASC, vt1.c0;
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c5, 0.13148748527393772) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c5, 0.13148748527393772) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c5, 0.13148748527393772) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c5, 0.13148748527393772) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c5, 0.13148748527393772) COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE ('-1059122408') ORDER BY ((((('617987962'))<=((rt0.c5))))OR(CAST(rt0.c4 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (('-1059122408') IS TRUE)  as count FROM rt0 ORDER BY ((((('617987962'))<=((rt0.c5))))OR(CAST(rt0.c4 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE ('-1059122408') ORDER BY ((((('617987962'))<=((rt0.c5))))OR(CAST(rt0.c4 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (('-1059122408') IS TRUE)  as count FROM rt0 ORDER BY ((((('617987962'))<=((rt0.c5))))OR(CAST(rt0.c4 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE ('-1059122408') ORDER BY ((((('617987962'))<=((rt0.c5))))OR(CAST(rt0.c4 AS REAL)));
SELECT * FROM vt1, rt1, rt0 WHERE (-293762461) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL ((-293762461) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY rt1.c3 DESC);
SELECT * FROM vt1, rt1, rt0 WHERE (-293762461) ORDER BY rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL ((-293762461) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY rt1.c3 DESC);
SELECT * FROM vt1, rt1, rt0 WHERE (-293762461) ORDER BY rt1.c3 DESC;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1, rt0, rt1 WHERE (CAST((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) AS BLOB)) ORDER BY (((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) COLLATE NOCASE, ((NULL) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) AS BLOB)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) COLLATE NOCASE, ((NULL) ISNULL));
SELECT * FROM vt1, rt0, rt1 WHERE (CAST((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) AS BLOB)) ORDER BY (((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) COLLATE NOCASE, ((NULL) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) AS BLOB)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) COLLATE NOCASE, ((NULL) ISNULL));
SELECT * FROM vt1, rt0, rt1 WHERE (CAST((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0))) AS BLOB)) ORDER BY (((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) COLLATE NOCASE, ((NULL) ISNULL);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) IS TRUE));
SELECT * FROM rt1, vt1 WHERE (CAST(((rt1.c1) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (CAST(((rt1.c1) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (CAST(((rt1.c1) IS FALSE) AS TEXT));
SELECT * FROM rt0 CROSS JOIN vt1 ON (NOT ((((rt1.c4))>((rt0.c1))))) FULL OUTER JOIN rt1 ON COALESCE(DISTINCT load_extension(-1422367586, rt1.c4), ((rt0.c3)=(rt1.c0))) WHERE (((((rt1.c0) IS FALSE)) BETWEEN (CHANGES()) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS FALSE)) BETWEEN (CHANGES()) AND (rt1.c1))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (NOT ((((rt1.c4))>((rt0.c1))))) FULL OUTER JOIN rt1 ON COALESCE(DISTINCT load_extension(-1422367586, rt1.c4), ((rt0.c3)==(rt1.c0))));
SELECT * FROM rt0 CROSS JOIN vt1 ON (NOT ((((rt1.c4))>((rt0.c1))))) FULL OUTER JOIN rt1 ON COALESCE(DISTINCT load_extension(-1422367586, rt1.c4), ((rt0.c3)=(rt1.c0))) WHERE (((((rt1.c0) IS FALSE)) BETWEEN (CHANGES()) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS FALSE)) BETWEEN (CHANGES()) AND (rt1.c1))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (NOT ((((rt1.c4))>((rt0.c1))))) FULL OUTER JOIN rt1 ON COALESCE(DISTINCT load_extension(-1422367586, rt1.c4), ((rt0.c3)==(rt1.c0))));
SELECT ALL * FROM rt1, rt0, vt1 WHERE (TRIM(DISTINCT rt1.c0 COLLATE NOCASE, (rt1.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt1.c0 COLLATE NOCASE, (rt1.c3 IN ()))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (TRIM(DISTINCT rt1.c0 COLLATE NOCASE, (rt1.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt1.c0 COLLATE NOCASE, (rt1.c3 IN ()))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (TRIM(DISTINCT rt1.c0 COLLATE NOCASE, (rt1.c3 IN ())));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE ((+ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY '615308181' ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY '615308181' ASC);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE ((+ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY '615308181' ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY '615308181' ASC);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE ((+ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY '615308181' ASC;
SELECT ALL * FROM rt1, rt0, vt1 WHERE (TYPEOF(CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END)) ORDER BY ((((((rt0.c5) NOT BETWEEN (rt1.c2) AND (vt1.c0)))OR(CAST(rt1.c0 AS TEXT))))OR(((rt0.c3)|(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END)) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((((((rt0.c5) NOT BETWEEN (rt1.c2) AND (vt1.c0)))OR(CAST(rt1.c0 AS TEXT))))OR(((rt0.c3)|(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (TYPEOF(CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END)) ORDER BY ((((((rt0.c5) NOT BETWEEN (rt1.c2) AND (vt1.c0)))OR(CAST(rt1.c0 AS TEXT))))OR(((rt0.c3)|(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END)) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((((((rt0.c5) NOT BETWEEN (rt1.c2) AND (vt1.c0)))OR(CAST(rt1.c0 AS TEXT))))OR(((rt0.c3)|(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (TYPEOF(CASE WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c1 END)) ORDER BY ((((((rt0.c5) NOT BETWEEN (rt1.c2) AND (vt1.c0)))OR(CAST(rt1.c0 AS TEXT))))OR(((rt0.c3)|(rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (0.7139926828061898) ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((0.7139926828061898) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.7139926828061898) ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((0.7139926828061898) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.7139926828061898) ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))) NOT NULL) ASC;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c4) ISNULL)) BETWEEN ((rt0.c2 IN ())) AND ((((rt1.c3))<>((rt0.c0))))) WHERE ((((rt1.c0) ISNULL) IN (CAST(rt0.c3 AS BLOB), ((rt0.c4) NOTNULL)))) ORDER BY 1181775515 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0) ISNULL) IN (CAST(rt0.c3 AS BLOB), ((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c4) ISNULL)) BETWEEN ((rt0.c2 IN ())) AND ((((rt1.c3))<>((rt0.c0))))) ORDER BY 1181775515 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c4) ISNULL)) BETWEEN ((rt0.c2 IN ())) AND ((((rt1.c3))<>((rt0.c0))))) WHERE ((((rt1.c0) ISNULL) IN (CAST(rt0.c3 AS BLOB), ((rt0.c4) NOTNULL)))) ORDER BY 1181775515 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0) ISNULL) IN (CAST(rt0.c3 AS BLOB), ((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c4) ISNULL)) BETWEEN ((rt0.c2 IN ())) AND ((((rt1.c3))<>((rt0.c0))))) ORDER BY 1181775515 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)!=(rt1.c4))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<>(rt1.c4))) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)!=(rt1.c4))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<>(rt1.c4))) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)!=(rt1.c4))) NOTNULL));
SELECT * FROM vt1, rt0, rt1 WHERE ((((((((((- (rt1.c2)))AND(((((((((((((rt0.c5)OR(rt1.c3)))OR(rt1.c2)))AND('-92141984')))AND(rt1.c0)))OR(vt1.c0)))OR(rt0.c1)))))OR('-1637021695')))OR(((rt1.c2) NOTNULL))))OR(((((rt1.c1)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt1.c2)))AND(((((((((((((rt0.c5)OR(rt1.c3)))OR(rt1.c2)))AND('-92141984')))AND(rt1.c0)))OR(vt1.c0)))OR(rt0.c1)))))OR('-1637021695')))OR(((rt1.c2) NOTNULL))))OR(((((rt1.c1)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE ((((((((((- (rt1.c2)))AND(((((((((((((rt0.c5)OR(rt1.c3)))OR(rt1.c2)))AND('-92141984')))AND(rt1.c0)))OR(vt1.c0)))OR(rt0.c1)))))OR('-1637021695')))OR(((rt1.c2) NOTNULL))))OR(((((rt1.c1)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt1.c2)))AND(((((((((((((rt0.c5)OR(rt1.c3)))OR(rt1.c2)))AND('-92141984')))AND(rt1.c0)))OR(vt1.c0)))OR(rt0.c1)))))OR('-1637021695')))OR(((rt1.c2) NOTNULL))))OR(((((rt1.c1)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE ((((((((((- (rt1.c2)))AND(((((((((((((rt0.c5)OR(rt1.c3)))OR(rt1.c2)))AND('-92141984')))AND(rt1.c0)))OR(vt1.c0)))OR(rt0.c1)))))OR('-1637021695')))OR(((rt1.c2) NOTNULL))))OR(((((rt1.c1)OR(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0)AND(((vt1.c0) ISNULL))))OR(SQLITE_COMPILEOPTION_GET(rt0.c3)))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(((vt1.c0) ISNULL))))OR(SQLITE_COMPILEOPTION_GET(rt0.c3)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0)AND(((vt1.c0) ISNULL))))OR(SQLITE_COMPILEOPTION_GET(rt0.c3)))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(((vt1.c0) ISNULL))))OR(SQLITE_COMPILEOPTION_GET(rt0.c3)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0)AND(((vt1.c0) ISNULL))))OR(SQLITE_COMPILEOPTION_GET(rt0.c3)))) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL * FROM rt0, vt1, rt1 WHERE (((((rt1.c4)<=(vt1.c0)))IS NOT(CAST(NULL AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)<=(vt1.c0)))IS NOT(CAST(NULL AS REAL)))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL * FROM rt0, vt1, rt1 WHERE (((((rt1.c4)<=(vt1.c0)))IS NOT(CAST(NULL AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)<=(vt1.c0)))IS NOT(CAST(NULL AS REAL)))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL * FROM rt0, vt1, rt1 WHERE (((((rt1.c4)<=(vt1.c0)))IS NOT(CAST(NULL AS REAL))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c3 IN ()) COLLATE BINARY) ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)OR(vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)OR(vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c3 IN ()) COLLATE BINARY) ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)OR(vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)OR(vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c3 IN ()) COLLATE BINARY) ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0 COLLATE RTRIM)OR(vt1.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c3) IS TRUE)) IS TRUE)) ORDER BY UNLIKELY(DISTINCT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY UNLIKELY(DISTINCT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c3) IS TRUE)) IS TRUE)) ORDER BY UNLIKELY(DISTINCT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY UNLIKELY(DISTINCT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c3) IS TRUE)) IS TRUE)) ORDER BY UNLIKELY(DISTINCT NULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((CASE rt0.c4  WHEN rt0.c5 THEN rt0.c3 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c4  WHEN rt0.c5 THEN rt0.c3 END IN ())) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((CASE rt0.c4  WHEN rt0.c5 THEN rt0.c3 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c4  WHEN rt0.c5 THEN rt0.c3 END IN ())) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((CASE rt0.c4  WHEN rt0.c5 THEN rt0.c3 END IN ()));
SELECT * FROM rt1, vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))OR(LIKE(rt1.c3, rt1.c3))))OR(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))OR(LIKE(rt1.c3, rt1.c3))))OR(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))OR(LIKE(rt1.c3, rt1.c3))))OR(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))OR(LIKE(rt1.c3, rt1.c3))))OR(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))OR(LIKE(rt1.c3, rt1.c3))))OR(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LOWER((((0.22765247479396233)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((LOWER((((0.22765247479396233)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LOWER((((0.22765247479396233)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((LOWER((((0.22765247479396233)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LOWER((((0.22765247479396233)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT * FROM rt1 WHERE (((((CAST(x'' AS BLOB))OR(CAST(rt1.c0 AS BLOB))))AND(NULL))) ORDER BY x'a512', ((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0))) AND ((NOT (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(x'' AS BLOB))OR(CAST(rt1.c0 AS BLOB))))AND(NULL))) IS TRUE)  as count FROM rt1 ORDER BY x'a512', ((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0))) AND ((NOT (rt1.c0)))) ASC);
SELECT * FROM rt1 WHERE (((((CAST(x'' AS BLOB))OR(CAST(rt1.c0 AS BLOB))))AND(NULL))) ORDER BY x'a512', ((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0))) AND ((NOT (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(x'' AS BLOB))OR(CAST(rt1.c0 AS BLOB))))AND(NULL))) IS TRUE)  as count FROM rt1 ORDER BY x'a512', ((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0))) AND ((NOT (rt1.c0)))) ASC);
SELECT * FROM rt1 WHERE (((((CAST(x'' AS BLOB))OR(CAST(rt1.c0 AS BLOB))))AND(NULL))) ORDER BY x'a512', ((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0))) AND ((NOT (rt1.c0)))) ASC;
SELECT * FROM rt0 WHERE ((((((rt0.c5 IN (rt0.c1)))AND(((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)))))AND(((rt0.c5) NOT BETWEEN (rt0.c2) AND (x''))))) ORDER BY ((NOT (rt0.c5)) IN ()), CAST(x'' AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5 IN (rt0.c1)))AND(((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)))))AND(((rt0.c5) NOT BETWEEN (rt0.c2) AND (x''))))) IS TRUE)  as count FROM rt0 ORDER BY ((NOT (rt0.c5)) IN ()), CAST(x'' AS INTEGER));
SELECT * FROM rt0 WHERE ((((((rt0.c5 IN (rt0.c1)))AND(((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)))))AND(((rt0.c5) NOT BETWEEN (rt0.c2) AND (x''))))) ORDER BY ((NOT (rt0.c5)) IN ()), CAST(x'' AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5 IN (rt0.c1)))AND(((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)))))AND(((rt0.c5) NOT BETWEEN (rt0.c2) AND (x''))))) IS TRUE)  as count FROM rt0 ORDER BY ((NOT (rt0.c5)) IN ()), CAST(x'' AS INTEGER));
SELECT * FROM rt0 WHERE ((((((rt0.c5 IN (rt0.c1)))AND(((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)))))AND(((rt0.c5) NOT BETWEEN (rt0.c2) AND (x''))))) ORDER BY ((NOT (rt0.c5)) IN ()), CAST(x'' AS INTEGER);
SELECT ALL * FROM rt1 WHERE (-1.637021695E9) ORDER BY (NOT (ABS('e3.q릝#^'))) ASC, ((CAST(rt1.c4 AS BLOB)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((-1.637021695E9) IS TRUE)  as count FROM rt1 ORDER BY (NOT (ABS('e3.q릝#^'))) ASC, ((CAST(rt1.c4 AS BLOB)) IS FALSE) ASC);
SELECT ALL * FROM rt1 WHERE (-1.637021695E9) ORDER BY (NOT (ABS('e3.q릝#^'))) ASC, ((CAST(rt1.c4 AS BLOB)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((-1.637021695E9) IS TRUE)  as count FROM rt1 ORDER BY (NOT (ABS('e3.q릝#^'))) ASC, ((CAST(rt1.c4 AS BLOB)) IS FALSE) ASC);
SELECT ALL * FROM rt1 WHERE (-1.637021695E9) ORDER BY (NOT (ABS('e3.q릝#^'))) ASC, ((CAST(rt1.c4 AS BLOB)) IS FALSE) ASC;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((rt0.c0)>=(((((rt0.c2)OR(rt0.c4)))OR(rt0.c0)))) WHERE (((((((rt0.c2)OR(rt0.c4)))OR(rt0.c5)))||(rt0.c2))) ORDER BY (((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3)), (NOT (rt0.c2)), ((rt0.c2)>>(rt0.c1))))=(((((rt0.c0, x'2fca', rt0.c4))<((rt0.c3, rt0.c4, vt1.c0))), ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c3)), -822712735))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c5)))||(rt0.c2))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((rt0.c0)>=(((((rt0.c2)OR(rt0.c4)))OR(rt0.c0)))) ORDER BY (((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3)), (NOT (rt0.c2)), ((rt0.c2)>>(rt0.c1))))=(((((rt0.c0, x'2fca', rt0.c4))<((rt0.c3, rt0.c4, vt1.c0))), ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c3)), -822712735))) DESC);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((rt0.c0)>=(((((rt0.c2)OR(rt0.c4)))OR(rt0.c0)))) WHERE (((((((rt0.c2)OR(rt0.c4)))OR(rt0.c5)))||(rt0.c2))) ORDER BY (((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3)), (NOT (rt0.c2)), ((rt0.c2)>>(rt0.c1))))=(((((rt0.c0, x'2fca', rt0.c4))<((rt0.c3, rt0.c4, vt1.c0))), ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c3)), -822712735))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c5)))||(rt0.c2))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((rt0.c0)>=(((((rt0.c2)OR(rt0.c4)))OR(rt0.c0)))) ORDER BY (((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3)), (NOT (rt0.c2)), ((rt0.c2)>>(rt0.c1))))=(((((rt0.c0, x'2fca', rt0.c4))<((rt0.c3, rt0.c4, vt1.c0))), ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c3)), -822712735))) DESC);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((rt0.c0)>=(((((rt0.c2)OR(rt0.c4)))OR(rt0.c0)))) WHERE (((((((rt0.c2)OR(rt0.c4)))OR(rt0.c5)))||(rt0.c2))) ORDER BY (((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3)), (NOT (rt0.c2)), ((rt0.c2)>>(rt0.c1))))=(((((rt0.c0, x'2fca', rt0.c4))<((rt0.c3, rt0.c4, vt1.c0))), ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c3)), -822712735))) DESC;
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c2)AND(rt0.c5)))AND(vt1.c0)))&(x'b0f55c91'))) ORDER BY ((110482658 COLLATE RTRIM)AND(((((((((rt0.c3)OR(rt0.c5)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c5)))AND(vt1.c0)))&(x'b0f55c91'))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((110482658 COLLATE RTRIM)AND(((((((((rt0.c3)OR(rt0.c5)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c0)))) DESC);
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c2)AND(rt0.c5)))AND(vt1.c0)))&(x'b0f55c91'))) ORDER BY ((110482658 COLLATE RTRIM)AND(((((((((rt0.c3)OR(rt0.c5)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c5)))AND(vt1.c0)))&(x'b0f55c91'))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((110482658 COLLATE RTRIM)AND(((((((((rt0.c3)OR(rt0.c5)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c0)))) DESC);
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c2)AND(rt0.c5)))AND(vt1.c0)))&(x'b0f55c91'))) ORDER BY ((110482658 COLLATE RTRIM)AND(((((((((rt0.c3)OR(rt0.c5)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c0)))) DESC;
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (rt1.c4);
SELECT * FROM rt1, vt1 FULL OUTER JOIN rt0 ON ((rt1.c0) NOT BETWEEN (x'') AND (((rt0.c5)+(rt1.c2)))) WHERE (CAST((vt1.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN rt0 ON ((rt1.c0) NOT BETWEEN (x'') AND (((rt0.c5)+(rt1.c2)))));
SELECT * FROM rt1, vt1 FULL OUTER JOIN rt0 ON ((rt1.c0) NOT BETWEEN (x'') AND (((rt0.c5)+(rt1.c2)))) WHERE (CAST((vt1.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN rt0 ON ((rt1.c0) NOT BETWEEN (x'') AND (((rt0.c5)+(rt1.c2)))));
SELECT * FROM rt1, vt1 FULL OUTER JOIN rt0 ON ((rt1.c0) NOT BETWEEN (x'') AND (((rt0.c5)+(rt1.c2)))) WHERE (CAST((vt1.c0 IN ()) AS REAL));
SELECT COUNT(*) FROM vt1, rt1 WHERE (rt1.c3) ORDER BY CAST(CASE rt1.c2  WHEN rt1.c2 THEN vt1.c0 END AS BLOB)  NULLS LAST, (((rt1.c4 COLLATE BINARY))>=((CHANGES()))) ASC, ((((vt1.c0)AND(rt1.c2))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(CASE rt1.c2  WHEN rt1.c2 THEN vt1.c0 END AS BLOB)  NULLS LAST, (((rt1.c4 COLLATE BINARY))>=((CHANGES()))) ASC, ((((vt1.c0)AND(rt1.c2))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (rt1.c3) ORDER BY CAST(CASE rt1.c2  WHEN rt1.c2 THEN vt1.c0 END AS BLOB)  NULLS LAST, (((rt1.c4 COLLATE BINARY))>=((CHANGES()))) ASC, ((((vt1.c0)AND(rt1.c2))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(CASE rt1.c2  WHEN rt1.c2 THEN vt1.c0 END AS BLOB)  NULLS LAST, (((rt1.c4 COLLATE BINARY))>=((CHANGES()))) ASC, ((((vt1.c0)AND(rt1.c2))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (rt1.c3) ORDER BY CAST(CASE rt1.c2  WHEN rt1.c2 THEN vt1.c0 END AS BLOB)  NULLS LAST, (((rt1.c4 COLLATE BINARY))>=((CHANGES()))) ASC, ((((vt1.c0)AND(rt1.c2))) IS TRUE)  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c5)) AS REAL)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c5)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c5)) AS REAL)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c5)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c5)) AS REAL)) ORDER BY NULL ASC;
SELECT * FROM vt1 WHERE (CASE vt1.c0  WHEN ((((vt1.c0)OR(vt1.c0)))OR(x'')) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS REAL), (+ (vt1.c0)))) AND ((vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((((vt1.c0)OR(vt1.c0)))OR(x'')) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS REAL), (+ (vt1.c0)))) AND ((vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE vt1.c0  WHEN ((((vt1.c0)OR(vt1.c0)))OR(x'')) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS REAL), (+ (vt1.c0)))) AND ((vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((((vt1.c0)OR(vt1.c0)))OR(x'')) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS REAL), (+ (vt1.c0)))) AND ((vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE vt1.c0  WHEN ((((vt1.c0)OR(vt1.c0)))OR(x'')) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS REAL), (+ (vt1.c0)))) AND ((vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON (~ ((((rt1.c0)) NOT BETWEEN ((rt0.c5)) AND ((vt1.c0))))) FULL OUTER JOIN rt0 ON ((((+ (-1746664135)), (NOT (rt0.c0)), ((rt0.c3) NOT NULL)))<>(((~ (x'')), ((rt1.c3) ISNULL), ((rt0.c0)IS(rt0.c0))))) WHERE ((((rt0.c3)) BETWEEN (((('-427653115') NOT BETWEEN (rt0.c0) AND (rt1.c3)))) AND ((vt1.c0)))) ORDER BY CAST(RTRIM('9]AD?툰K_') AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN (((('-427653115') NOT BETWEEN (rt0.c0) AND (rt1.c3)))) AND ((vt1.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON (~ ((((rt1.c0)) NOT BETWEEN ((rt0.c5)) AND ((vt1.c0))))) FULL OUTER JOIN rt0 ON ((((+ (-1746664135)), (NOT (rt0.c0)), ((rt0.c3) NOT NULL)))<>(((~ (x'')), ((rt1.c3) ISNULL), ((rt0.c0)IS(rt0.c0))))) ORDER BY CAST(RTRIM('9]AD?툰K_') AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON (~ ((((rt1.c0)) NOT BETWEEN ((rt0.c5)) AND ((vt1.c0))))) FULL OUTER JOIN rt0 ON ((((+ (-1746664135)), (NOT (rt0.c0)), ((rt0.c3) NOT NULL)))<>(((~ (x'')), ((rt1.c3) ISNULL), ((rt0.c0)IS(rt0.c0))))) WHERE ((((rt0.c3)) BETWEEN (((('-427653115') NOT BETWEEN (rt0.c0) AND (rt1.c3)))) AND ((vt1.c0)))) ORDER BY CAST(RTRIM('9]AD?툰K_') AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN (((('-427653115') NOT BETWEEN (rt0.c0) AND (rt1.c3)))) AND ((vt1.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON (~ ((((rt1.c0)) NOT BETWEEN ((rt0.c5)) AND ((vt1.c0))))) FULL OUTER JOIN rt0 ON ((((+ (-1746664135)), (NOT (rt0.c0)), ((rt0.c3) NOT NULL)))<>(((~ (x'')), ((rt1.c3) ISNULL), ((rt0.c0)IS(rt0.c0))))) ORDER BY CAST(RTRIM('9]AD?툰K_') AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((COALESCE(DISTINCT vt1.c0, '-243330544'))>=(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt1.c0, '-243330544'))>=(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((COALESCE(DISTINCT vt1.c0, '-243330544'))>=(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt1.c0, '-243330544'))>=(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((COALESCE(DISTINCT vt1.c0, '-243330544'))>=(((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (rt0.c4) ORDER BY (- ((rt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (- ((rt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (rt0.c4) ORDER BY (- ((rt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (- ((rt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (rt0.c4) ORDER BY (- ((rt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 IN ()) IN (COALESCE(vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (COALESCE(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 IN ()) IN (COALESCE(vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (COALESCE(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 IN ()) IN (COALESCE(vt1.c0, vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((NULL) NOT NULL))) ORDER BY (((((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS NUMERIC))))OR(((((((((vt1.c0)OR('-1092179627')))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((NULL) NOT NULL))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS NUMERIC))))OR(((((((((vt1.c0)OR('-1092179627')))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((NULL) NOT NULL))) ORDER BY (((((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS NUMERIC))))OR(((((((((vt1.c0)OR('-1092179627')))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((NULL) NOT NULL))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS NUMERIC))))OR(((((((((vt1.c0)OR('-1092179627')))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((NULL) NOT NULL))) ORDER BY (((((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS NUMERIC))))OR(((((((((vt1.c0)OR('-1092179627')))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c3))) BETWEEN ((- (rt0.c3))) AND ((rt0.c5 IN (rt0.c5, rt0.c5))))) ORDER BY CASE WHEN ((rt0.c4) IS FALSE) THEN rt0.c3 COLLATE NOCASE END, CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c5 END THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ((rt0.c3)-(rt0.c1)) END DESC  NULLS LAST, CASE WHEN ((((rt0.c5)AND(rt0.c2)))OR(rt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c1 END ELSE (('m^') IS FALSE) END;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3))) BETWEEN ((- (rt0.c3))) AND ((rt0.c5 IN (rt0.c5, rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c4) IS FALSE) THEN rt0.c3 COLLATE NOCASE END, CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c5 END THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ((rt0.c3)-(rt0.c1)) END DESC  NULLS LAST, CASE WHEN ((((rt0.c5)AND(rt0.c2)))OR(rt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c1 END ELSE (('m^') IS FALSE) END);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c3))) BETWEEN ((- (rt0.c3))) AND ((rt0.c5 IN (rt0.c5, rt0.c5))))) ORDER BY CASE WHEN ((rt0.c4) IS FALSE) THEN rt0.c3 COLLATE NOCASE END, CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c5 END THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ((rt0.c3)-(rt0.c1)) END DESC  NULLS LAST, CASE WHEN ((((rt0.c5)AND(rt0.c2)))OR(rt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c1 END ELSE (('m^') IS FALSE) END;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3))) BETWEEN ((- (rt0.c3))) AND ((rt0.c5 IN (rt0.c5, rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c4) IS FALSE) THEN rt0.c3 COLLATE NOCASE END, CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c5 END THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ((rt0.c3)-(rt0.c1)) END DESC  NULLS LAST, CASE WHEN ((((rt0.c5)AND(rt0.c2)))OR(rt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c1 END ELSE (('m^') IS FALSE) END);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c3))) BETWEEN ((- (rt0.c3))) AND ((rt0.c5 IN (rt0.c5, rt0.c5))))) ORDER BY CASE WHEN ((rt0.c4) IS FALSE) THEN rt0.c3 COLLATE NOCASE END, CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c5 END THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) ELSE ((rt0.c3)-(rt0.c1)) END DESC  NULLS LAST, CASE WHEN ((((rt0.c5)AND(rt0.c2)))OR(rt0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c1 END ELSE (('m^') IS FALSE) END;
SELECT * FROM rt1, rt0, vt1 WHERE (CASE WHEN 0.214271921331454 THEN SQLITE_COMPILEOPTION_GET(rt1.c2) ELSE ((rt0.c0)<(rt0.c4)) END) ORDER BY (UPPER(DISTINCT rt1.c4) IN ()), ((rt1.c2)|(rt1.c4)) COLLATE NOCASE  NULLS FIRST, (((rt0.c3 IN (rt1.c4, rt0.c1)))>=(((rt0.c4)-(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.214271921331454 THEN SQLITE_COMPILEOPTION_GET(rt1.c2) ELSE ((rt0.c0)<(rt0.c4)) END) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (UPPER(DISTINCT rt1.c4) IN ()), ((rt1.c2)|(rt1.c4)) COLLATE NOCASE  NULLS FIRST, (((rt0.c3 IN (rt1.c4, rt0.c1)))>=(((rt0.c4)-(rt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, vt1 WHERE (CASE WHEN 0.214271921331454 THEN SQLITE_COMPILEOPTION_GET(rt1.c2) ELSE ((rt0.c0)<(rt0.c4)) END) ORDER BY (UPPER(DISTINCT rt1.c4) IN ()), ((rt1.c2)|(rt1.c4)) COLLATE NOCASE  NULLS FIRST, (((rt0.c3 IN (rt1.c4, rt0.c1)))>=(((rt0.c4)-(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.214271921331454 THEN SQLITE_COMPILEOPTION_GET(rt1.c2) ELSE ((rt0.c0)<(rt0.c4)) END) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (UPPER(DISTINCT rt1.c4) IN ()), ((rt1.c2)|(rt1.c4)) COLLATE NOCASE  NULLS FIRST, (((rt0.c3 IN (rt1.c4, rt0.c1)))>=(((rt0.c4)-(rt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, vt1 WHERE (CASE WHEN 0.214271921331454 THEN SQLITE_COMPILEOPTION_GET(rt1.c2) ELSE ((rt0.c0)<(rt0.c4)) END) ORDER BY (UPPER(DISTINCT rt1.c4) IN ()), ((rt1.c2)|(rt1.c4)) COLLATE NOCASE  NULLS FIRST, (((rt0.c3 IN (rt1.c4, rt0.c1)))>=(((rt0.c4)-(rt1.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, vt1, rt0 WHERE ((((((rt0.c5)%(rt0.c4)), vt1.c0, ((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c2)), ((((rt1.c3)OR(rt1.c3)))AND(x'')), json_object(vt1.c0, '-1594150910')))==(((((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt1.c3))), (((rt0.c3))=((rt1.c1))), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)), (- ('''xS')), ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)%(rt0.c4)), vt1.c0, ((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c2)), ((((rt1.c3)OR(rt1.c3)))AND(x'')), json_object(vt1.c0, '-1594150910')))=(((((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt1.c3))), (((rt0.c3))=((rt1.c1))), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)), (- ('''xS')), ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE ((((((rt0.c5)%(rt0.c4)), vt1.c0, ((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c2)), ((((rt1.c3)OR(rt1.c3)))AND(x'')), json_object(vt1.c0, '-1594150910')))==(((((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt1.c3))), (((rt0.c3))=((rt1.c1))), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)), (- ('''xS')), ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)%(rt0.c4)), vt1.c0, ((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c2)), ((((rt1.c3)OR(rt1.c3)))AND(x'')), json_object(vt1.c0, '-1594150910')))=(((((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt1.c3))), (((rt0.c3))=((rt1.c1))), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)), (- ('''xS')), ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE ((((((rt0.c5)%(rt0.c4)), vt1.c0, ((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c4)))AND(rt0.c2)))OR(rt1.c2)), ((((rt1.c3)OR(rt1.c3)))AND(x'')), json_object(vt1.c0, '-1594150910')))==(((((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt1.c3))), (((rt0.c3))=((rt1.c1))), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c4)), (- ('''xS')), ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))))) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON HEX(DISTINCT rt1.c3) WHERE (rt1.c4) ORDER BY ((((((((((((((((rt1.c3)AND(rt1.c0)))AND('a?I)oa2')))AND(((rt1.c4)LIKE(rt1.c0)))))OR(CAST(x'' AS NUMERIC))))AND(((('157290920', rt1.c3, rt1.c3))<=((rt1.c2, rt1.c4, rt1.c1))))))AND(rt1.c3)))AND((((rt1.c3))>((vt1.c0))))))AND(LIKELIHOOD(DISTINCT rt1.c2, 0.7202255845640817)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON HEX(DISTINCT rt1.c3) ORDER BY ((((((((((((((((rt1.c3)AND(rt1.c0)))AND('a?I)oa2')))AND(((rt1.c4)LIKE(rt1.c0)))))OR(CAST(x'' AS NUMERIC))))AND(((('157290920', rt1.c3, rt1.c3))<=((rt1.c2, rt1.c4, rt1.c1))))))AND(rt1.c3)))AND((((rt1.c3))>((vt1.c0))))))AND(LIKELIHOOD(DISTINCT rt1.c2, 0.7202255845640817)))  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON HEX(DISTINCT rt1.c3) WHERE (rt1.c4) ORDER BY ((((((((((((((((rt1.c3)AND(rt1.c0)))AND('a?I)oa2')))AND(((rt1.c4)LIKE(rt1.c0)))))OR(CAST(x'' AS NUMERIC))))AND(((('157290920', rt1.c3, rt1.c3))<=((rt1.c2, rt1.c4, rt1.c1))))))AND(rt1.c3)))AND((((rt1.c3))>((vt1.c0))))))AND(LIKELIHOOD(DISTINCT rt1.c2, 0.7202255845640817)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON HEX(DISTINCT rt1.c3) ORDER BY ((((((((((((((((rt1.c3)AND(rt1.c0)))AND('a?I)oa2')))AND(((rt1.c4)LIKE(rt1.c0)))))OR(CAST(x'' AS NUMERIC))))AND(((('157290920', rt1.c3, rt1.c3))<=((rt1.c2, rt1.c4, rt1.c1))))))AND(rt1.c3)))AND((((rt1.c3))>((vt1.c0))))))AND(LIKELIHOOD(DISTINCT rt1.c2, 0.7202255845640817)))  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON HEX(DISTINCT rt1.c3) WHERE (rt1.c4) ORDER BY ((((((((((((((((rt1.c3)AND(rt1.c0)))AND('a?I)oa2')))AND(((rt1.c4)LIKE(rt1.c0)))))OR(CAST(x'' AS NUMERIC))))AND(((('157290920', rt1.c3, rt1.c3))<=((rt1.c2, rt1.c4, rt1.c1))))))AND(rt1.c3)))AND((((rt1.c3))>((vt1.c0))))))AND(LIKELIHOOD(DISTINCT rt1.c2, 0.7202255845640817)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CASE ((((rt0.c3)OR(rt0.c2)))OR(rt0.c4))  WHEN rt0.c2 COLLATE BINARY THEN 0.40068641951524164 ELSE (((rt0.c3))<((rt0.c4))) END, (((((rt0.c2))>((rt0.c5)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c3)OR(rt0.c2)))OR(rt0.c4))  WHEN rt0.c2 COLLATE BINARY THEN 0.40068641951524164 ELSE (((rt0.c3))<((rt0.c4))) END, (((((rt0.c2))>((rt0.c5)))) ISNULL) DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CASE ((((rt0.c3)OR(rt0.c2)))OR(rt0.c4))  WHEN rt0.c2 COLLATE BINARY THEN 0.40068641951524164 ELSE (((rt0.c3))<((rt0.c4))) END, (((((rt0.c2))>((rt0.c5)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c3)OR(rt0.c2)))OR(rt0.c4))  WHEN rt0.c2 COLLATE BINARY THEN 0.40068641951524164 ELSE (((rt0.c3))<((rt0.c4))) END, (((((rt0.c2))>((rt0.c5)))) ISNULL) DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CASE ((((rt0.c3)OR(rt0.c2)))OR(rt0.c4))  WHEN rt0.c2 COLLATE BINARY THEN 0.40068641951524164 ELSE (((rt0.c3))<((rt0.c4))) END, (((((rt0.c2))>((rt0.c5)))) ISNULL) DESC;
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (json(((rt0.c0) IS TRUE))) ORDER BY json(((rt1.c0)<>(rt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json(((rt0.c0) IS TRUE))) IS TRUE)  as count FROM rt0, rt1 ORDER BY json(((rt1.c0)!=(rt1.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (json(((rt0.c0) IS TRUE))) ORDER BY json(((rt1.c0)<>(rt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json(((rt0.c0) IS TRUE))) IS TRUE)  as count FROM rt0, rt1 ORDER BY json(((rt1.c0)!=(rt1.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (json(((rt0.c0) IS TRUE))) ORDER BY json(((rt1.c0)<>(rt1.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((rt1.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c2) IS TRUE));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (((((rt0.c4)OR(0.06350469480260879)))AND(rt0.c0))))) ORDER BY UNLIKELY(vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c4)OR(0.06350469480260879)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY UNLIKELY(vt1.c0) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (((((rt0.c4)OR(0.06350469480260879)))AND(rt0.c0))))) ORDER BY UNLIKELY(vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c4)OR(0.06350469480260879)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY UNLIKELY(vt1.c0) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (((((rt0.c4)OR(0.06350469480260879)))AND(rt0.c0))))) ORDER BY UNLIKELY(vt1.c0) DESC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((((ABS('-849212484'))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))))AND(((rt0.c2)LIKE(vt1.c0)))) WHERE (((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c0 END)))OR(CAST(vt1.c0 AS TEXT)))) ORDER BY ((vt1.c0) NOTNULL) DESC, SQLITE_COMPILEOPTION_GET(CAST(rt0.c3 AS REAL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c0 END)))OR(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((ABS('-849212484'))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))))AND(((rt0.c2)LIKE(vt1.c0)))) ORDER BY ((vt1.c0) NOTNULL) DESC, SQLITE_COMPILEOPTION_GET(CAST(rt0.c3 AS REAL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((((ABS('-849212484'))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))))AND(((rt0.c2)LIKE(vt1.c0)))) WHERE (((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c0 END)))OR(CAST(vt1.c0 AS TEXT)))) ORDER BY ((vt1.c0) NOTNULL) DESC, SQLITE_COMPILEOPTION_GET(CAST(rt0.c3 AS REAL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c0 END)))OR(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((((ABS('-849212484'))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))))AND(((rt0.c2)LIKE(vt1.c0)))) ORDER BY ((vt1.c0) NOTNULL) DESC, SQLITE_COMPILEOPTION_GET(CAST(rt0.c3 AS REAL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((((ABS('-849212484'))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))))AND(((rt0.c2)LIKE(vt1.c0)))) WHERE (((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c4)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c0 END)))OR(CAST(vt1.c0 AS TEXT)))) ORDER BY ((vt1.c0) NOTNULL) DESC, SQLITE_COMPILEOPTION_GET(CAST(rt0.c3 AS REAL)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt1 WHERE ((((rt1.c4 IN ())) BETWEEN (((rt1.c4)<>(rt1.c3))) AND (('Y6' IN ())))) ORDER BY ((((rt1.c3)OR(((rt1.c0) BETWEEN (rt1.c1) AND (vt1.c0)))))AND((+ (rt1.c0)))) DESC, ((CASE WHEN rt1.c2 THEN 'x4\' END)GLOB(((rt1.c2)>=('1455862515'))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN ())) BETWEEN (((rt1.c4)!=(rt1.c3))) AND (('Y6' IN ())))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((rt1.c3)OR(((rt1.c0) BETWEEN (rt1.c1) AND (vt1.c0)))))AND((+ (rt1.c0)))) DESC, ((CASE WHEN rt1.c2 THEN 'x4\' END)GLOB(((rt1.c2)>=('1455862515')))));
SELECT COUNT(*) FROM rt1, vt1 WHERE ((((rt1.c4 IN ())) BETWEEN (((rt1.c4)<>(rt1.c3))) AND (('Y6' IN ())))) ORDER BY ((((rt1.c3)OR(((rt1.c0) BETWEEN (rt1.c1) AND (vt1.c0)))))AND((+ (rt1.c0)))) DESC, ((CASE WHEN rt1.c2 THEN 'x4\' END)GLOB(((rt1.c2)>=('1455862515'))));
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN ())) BETWEEN (((rt1.c4)!=(rt1.c3))) AND (('Y6' IN ())))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((rt1.c3)OR(((rt1.c0) BETWEEN (rt1.c1) AND (vt1.c0)))))AND((+ (rt1.c0)))) DESC, ((CASE WHEN rt1.c2 THEN 'x4\' END)GLOB(((rt1.c2)>=('1455862515')))));
SELECT COUNT(*) FROM rt1, vt1 WHERE ((((rt1.c4 IN ())) BETWEEN (((rt1.c4)<>(rt1.c3))) AND (('Y6' IN ())))) ORDER BY ((((rt1.c3)OR(((rt1.c0) BETWEEN (rt1.c1) AND (vt1.c0)))))AND((+ (rt1.c0)))) DESC, ((CASE WHEN rt1.c2 THEN 'x4\' END)GLOB(((rt1.c2)>=('1455862515'))));
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD(((-1525459405) BETWEEN (rt1.c1) AND (rt1.c1)), 0.0056325695421290956));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((-1525459405) BETWEEN (rt1.c1) AND (rt1.c1)), 0.0056325695421290956)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD(((-1525459405) BETWEEN (rt1.c1) AND (rt1.c1)), 0.0056325695421290956));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((-1525459405) BETWEEN (rt1.c1) AND (rt1.c1)), 0.0056325695421290956)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD(((-1525459405) BETWEEN (rt1.c1) AND (rt1.c1)), 0.0056325695421290956));
SELECT ALL COUNT(*) FROM vt1 WHERE (0.44770563937756347);
SELECT SUM(count) FROM (SELECT ALL ((0.44770563937756347) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.44770563937756347);
SELECT SUM(count) FROM (SELECT ALL ((0.44770563937756347) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.44770563937756347);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt0.c2)) BETWEEN (('1767607148')) AND ((NULL))) IN ())) ORDER BY ((TRIM(rt1.c2)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) BETWEEN (('1767607148')) AND ((NULL))) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY ((TRIM(rt1.c2)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt0.c2)) BETWEEN (('1767607148')) AND ((NULL))) IN ())) ORDER BY ((TRIM(rt1.c2)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) BETWEEN (('1767607148')) AND ((NULL))) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY ((TRIM(rt1.c2)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt0.c2)) BETWEEN (('1767607148')) AND ((NULL))) IN ())) ORDER BY ((TRIM(rt1.c2)) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)*(((rt0.c4) NOTNULL)))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c4, 0.02536039193729145)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)*(((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c4, 0.02536039193729145)) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)*(((rt0.c4) NOTNULL)))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c4, 0.02536039193729145)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)*(((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c4, 0.02536039193729145)) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)*(((rt0.c4) NOTNULL)))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c4, 0.02536039193729145)) NOTNULL);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ((~ (((rt0.c1) NOT NULL)))) ORDER BY (((('')AND(rt1.c1)))AND('')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (((('')AND(rt1.c1)))AND('')) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ((~ (((rt0.c1) NOT NULL)))) ORDER BY (((('')AND(rt1.c1)))AND('')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (((('')AND(rt1.c1)))AND('')) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ((~ (((rt0.c1) NOT NULL)))) ORDER BY (((('')AND(rt1.c1)))AND('')) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c3))>=((rt1.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3))>=((rt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c3))>=((rt1.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3))>=((rt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c3))>=((rt1.c1))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, rt1 LEFT OUTER JOIN rt0 ON CASE rt1.c0 COLLATE BINARY  WHEN rt1.c1 THEN (+ (rt0.c3)) WHEN '嵄KH&h}' COLLATE BINARY THEN x'' WHEN rt1.c3 THEN LTRIM(rt1.c0) END WHERE (HEX(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)))) ORDER BY CAST(0.19141557575533208 AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)))) IS TRUE)  as count FROM vt1, rt1 LEFT OUTER JOIN rt0 ON CASE rt1.c0 COLLATE BINARY  WHEN rt1.c1 THEN (+ (rt0.c3)) WHEN '嵄KH&h}' COLLATE BINARY THEN x'' WHEN rt1.c3 THEN LTRIM(rt1.c0) END ORDER BY CAST(0.19141557575533208 AS BLOB) ASC);
SELECT COUNT(*) FROM vt1, rt1 LEFT OUTER JOIN rt0 ON CASE rt1.c0 COLLATE BINARY  WHEN rt1.c1 THEN (+ (rt0.c3)) WHEN '嵄KH&h}' COLLATE BINARY THEN x'' WHEN rt1.c3 THEN LTRIM(rt1.c0) END WHERE (HEX(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)))) ORDER BY CAST(0.19141557575533208 AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)))) IS TRUE)  as count FROM vt1, rt1 LEFT OUTER JOIN rt0 ON CASE rt1.c0 COLLATE BINARY  WHEN rt1.c1 THEN (+ (rt0.c3)) WHEN '嵄KH&h}' COLLATE BINARY THEN x'' WHEN rt1.c3 THEN LTRIM(rt1.c0) END ORDER BY CAST(0.19141557575533208 AS BLOB) ASC);
SELECT COUNT(*) FROM vt1, rt1 LEFT OUTER JOIN rt0 ON CASE rt1.c0 COLLATE BINARY  WHEN rt1.c1 THEN (+ (rt0.c3)) WHEN '嵄KH&h}' COLLATE BINARY THEN x'' WHEN rt1.c3 THEN LTRIM(rt1.c0) END WHERE (HEX(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)))) ORDER BY CAST(0.19141557575533208 AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (json_array(((vt1.c0)*(vt1.c0)), COALESCE(vt1.c0, vt1.c0))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), x'0a92'  NULLS FIRST, (((((+ (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN 0.49164336439392675 END));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((vt1.c0)*(vt1.c0)), COALESCE(vt1.c0, vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))!=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), x'0a92'  NULLS FIRST, (((((+ (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN 0.49164336439392675 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (json_array(((vt1.c0)*(vt1.c0)), COALESCE(vt1.c0, vt1.c0))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), x'0a92'  NULLS FIRST, (((((+ (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN 0.49164336439392675 END));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((vt1.c0)*(vt1.c0)), COALESCE(vt1.c0, vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))!=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), x'0a92'  NULLS FIRST, (((((+ (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN 0.49164336439392675 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (json_array(((vt1.c0)*(vt1.c0)), COALESCE(vt1.c0, vt1.c0))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), x'0a92'  NULLS FIRST, (((((+ (vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN 0.49164336439392675 END));
SELECT ALL * FROM rt0, rt1 WHERE ((- (CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((- (CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((- (CAST(rt1.c0 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c5, rt0.c4, rt0.c1)) NOT BETWEEN ((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c2 ELSE NULL END, ((rt0.c2)==(rt0.c5)), (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c5))))) AND ((((((((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c5)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c1)))AND(0.8373655071516567)), rt0.c3 COLLATE NOCASE, SUBSTR(rt0.c5, rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5, rt0.c4, rt0.c1)) NOT BETWEEN ((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c2 ELSE NULL END, ((rt0.c2)==(rt0.c5)), (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c5))))) AND ((((((((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c5)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c1)))AND(0.8373655071516567)), rt0.c3 COLLATE NOCASE, SUBSTR(rt0.c5, rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c5, rt0.c4, rt0.c1)) NOT BETWEEN ((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c2 ELSE NULL END, ((rt0.c2)==(rt0.c5)), (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c5))))) AND ((((((((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c5)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c1)))AND(0.8373655071516567)), rt0.c3 COLLATE NOCASE, SUBSTR(rt0.c5, rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5, rt0.c4, rt0.c1)) NOT BETWEEN ((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c2 ELSE NULL END, ((rt0.c2)==(rt0.c5)), (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c5))))) AND ((((((((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c5)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c1)))AND(0.8373655071516567)), rt0.c3 COLLATE NOCASE, SUBSTR(rt0.c5, rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c5, rt0.c4, rt0.c1)) NOT BETWEEN ((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c2 ELSE NULL END, ((rt0.c2)==(rt0.c5)), (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c5))))) AND ((((((((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c5)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c1)))AND(0.8373655071516567)), rt0.c3 COLLATE NOCASE, SUBSTR(rt0.c5, rt0.c4)))));
SELECT ALL * FROM rt1 WHERE ((NOT (((x'ab5a')=(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((NOT (((x'ab5a')=(rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (((x'ab5a')=(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((NOT (((x'ab5a')=(rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (((x'ab5a')=(rt1.c4)))));
SELECT * FROM rt0 INNER JOIN rt1 ON '435020128' FULL OUTER JOIN vt1 ON ((rt0.c4)<(rt1.c1)) COLLATE BINARY COLLATE BINARY WHERE (rt0.c5) ORDER BY ((json_insert(rt1.c2, rt1.c3, -1.028834731E9, rt0.c2, rt0.c0, rt0.c5, 0xfffffffff024c4be)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON '435020128' FULL OUTER JOIN vt1 ON ((rt0.c4)<(rt1.c1)) COLLATE BINARY COLLATE BINARY ORDER BY ((json_insert(rt1.c2, rt1.c3, -1.028834731E9, rt0.c2, rt0.c0, rt0.c5, 0Xfffffffff024c4be)) NOT NULL)  NULLS LAST);
SELECT * FROM rt0 INNER JOIN rt1 ON '435020128' FULL OUTER JOIN vt1 ON ((rt0.c4)<(rt1.c1)) COLLATE BINARY COLLATE BINARY WHERE (rt0.c5) ORDER BY ((json_insert(rt1.c2, rt1.c3, -1.028834731E9, rt0.c2, rt0.c0, rt0.c5, 0xfffffffff024c4be)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON '435020128' FULL OUTER JOIN vt1 ON ((rt0.c4)<(rt1.c1)) COLLATE BINARY COLLATE BINARY ORDER BY ((json_insert(rt1.c2, rt1.c3, -1.028834731E9, rt0.c2, rt0.c0, rt0.c5, 0Xfffffffff024c4be)) NOT NULL)  NULLS LAST);
SELECT * FROM rt0 INNER JOIN rt1 ON '435020128' FULL OUTER JOIN vt1 ON ((rt0.c4)<(rt1.c1)) COLLATE BINARY COLLATE BINARY WHERE (rt0.c5) ORDER BY ((json_insert(rt1.c2, rt1.c3, -1.028834731E9, rt0.c2, rt0.c0, rt0.c5, 0xfffffffff024c4be)) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c4 COLLATE NOCASE))>(((((rt1.c1, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c0, rt0.c3, rt1.c4)) AND ((rt0.c2, rt0.c0, rt1.c2))))))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt0.c4)))) ISNULL)  NULLS FIRST, CASE TOTAL_CHANGES()  WHEN ((rt1.c4)LIKE(rt1.c2)) THEN ((rt1.c2) IS TRUE) WHEN NULL COLLATE NOCASE THEN ((rt1.c0) NOT NULL) WHEN UPPER(rt0.c0) THEN CASE WHEN rt1.c1 THEN rt0.c1 END WHEN ((((((((rt1.c2)AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5))) WHEN rt0.c2 THEN (rt0.c0 IN (rt1.c3)) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c4 COLLATE NOCASE))>(((((rt1.c1, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c0, rt0.c3, rt1.c4)) AND ((rt0.c2, rt0.c0, rt1.c2))))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt0.c4)))) ISNULL)  NULLS FIRST, CASE TOTAL_CHANGES()  WHEN ((rt1.c4)LIKE(rt1.c2)) THEN ((rt1.c2) IS TRUE) WHEN NULL COLLATE NOCASE THEN ((rt1.c0) NOT NULL) WHEN UPPER(rt0.c0) THEN CASE WHEN rt1.c1 THEN rt0.c1 END WHEN ((((((((rt1.c2)AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5))) WHEN rt0.c2 THEN (rt0.c0 IN (rt1.c3)) END DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c4 COLLATE NOCASE))>(((((rt1.c1, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c0, rt0.c3, rt1.c4)) AND ((rt0.c2, rt0.c0, rt1.c2))))))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt0.c4)))) ISNULL)  NULLS FIRST, CASE TOTAL_CHANGES()  WHEN ((rt1.c4)LIKE(rt1.c2)) THEN ((rt1.c2) IS TRUE) WHEN NULL COLLATE NOCASE THEN ((rt1.c0) NOT NULL) WHEN UPPER(rt0.c0) THEN CASE WHEN rt1.c1 THEN rt0.c1 END WHEN ((((((((rt1.c2)AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5))) WHEN rt0.c2 THEN (rt0.c0 IN (rt1.c3)) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c4 COLLATE NOCASE))>(((((rt1.c1, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c0, rt0.c3, rt1.c4)) AND ((rt0.c2, rt0.c0, rt1.c2))))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt0.c4)))) ISNULL)  NULLS FIRST, CASE TOTAL_CHANGES()  WHEN ((rt1.c4)LIKE(rt1.c2)) THEN ((rt1.c2) IS TRUE) WHEN NULL COLLATE NOCASE THEN ((rt1.c0) NOT NULL) WHEN UPPER(rt0.c0) THEN CASE WHEN rt1.c1 THEN rt0.c1 END WHEN ((((((((rt1.c2)AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5))) WHEN rt0.c2 THEN (rt0.c0 IN (rt1.c3)) END DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c4 COLLATE NOCASE))>(((((rt1.c1, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c0, rt0.c3, rt1.c4)) AND ((rt0.c2, rt0.c0, rt1.c2))))))) ORDER BY (((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt0.c4)))) ISNULL)  NULLS FIRST, CASE TOTAL_CHANGES()  WHEN ((rt1.c4)LIKE(rt1.c2)) THEN ((rt1.c2) IS TRUE) WHEN NULL COLLATE NOCASE THEN ((rt1.c0) NOT NULL) WHEN UPPER(rt0.c0) THEN CASE WHEN rt1.c1 THEN rt0.c1 END WHEN ((((((((rt1.c2)AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5))) WHEN rt0.c2 THEN (rt0.c0 IN (rt1.c3)) END DESC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt1, rt0 WHERE ((((NULL))<=((CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c5 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c0 END)))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=((CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c5 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c2 ASC);
SELECT ALL * FROM rt1, rt0 WHERE ((((NULL))<=((CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c5 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c0 END)))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=((CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c5 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c2 ASC);
SELECT ALL * FROM rt1, rt0 WHERE ((((NULL))<=((CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c5 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c0 END)))) ORDER BY rt1.c2 ASC;
SELECT * FROM vt1 CROSS JOIN rt1 ON LIKELIHOOD(x'a9c3', 0.21956566205323047) WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL)) ORDER BY ABS(DISTINCT rt1.c2) COLLATE RTRIM DESC, rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON LIKELIHOOD(x'a9c3', 0.21956566205323047) ORDER BY ABS(DISTINCT rt1.c2) COLLATE RTRIM DESC, rt1.c1  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN rt1 ON LIKELIHOOD(x'a9c3', 0.21956566205323047) WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL)) ORDER BY ABS(DISTINCT rt1.c2) COLLATE RTRIM DESC, rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON LIKELIHOOD(x'a9c3', 0.21956566205323047) ORDER BY ABS(DISTINCT rt1.c2) COLLATE RTRIM DESC, rt1.c1  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN rt1 ON LIKELIHOOD(x'a9c3', 0.21956566205323047) WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL)) ORDER BY ABS(DISTINCT rt1.c2) COLLATE RTRIM DESC, rt1.c1  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE (rt1.c1 IN ())  WHEN ' Rh/H\n' THEN (~ (rt0.c1)) ELSE DATE(rt0.c0, rt1.c2, rt1.c3) END) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN ())  WHEN ' Rh/H\n' THEN (~ (rt0.c1)) ELSE DATE(rt0.c0, rt1.c2, rt1.c3) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c3 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE (rt1.c1 IN ())  WHEN ' Rh/H\n' THEN (~ (rt0.c1)) ELSE DATE(rt0.c0, rt1.c2, rt1.c3) END) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN ())  WHEN ' Rh/H\n' THEN (~ (rt0.c1)) ELSE DATE(rt0.c0, rt1.c2, rt1.c3) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c3 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE (rt1.c1 IN ())  WHEN ' Rh/H\n' THEN (~ (rt0.c1)) ELSE DATE(rt0.c0, rt1.c2, rt1.c3) END) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON UPPER(DISTINCT rt0.c2) WHERE (((((rt1.c3) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON UPPER(DISTINCT rt0.c2));
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON UPPER(DISTINCT rt0.c2) WHERE (((((rt1.c3) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON UPPER(DISTINCT rt0.c2));
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON UPPER(DISTINCT rt0.c2) WHERE (((((rt1.c3) NOT NULL)) NOTNULL));
SELECT * FROM vt1, rt0 CROSS JOIN rt1 ON ((CAST(rt0.c4 AS INTEGER)) NOTNULL) WHERE ((+ (CAST(rt0.c1 AS REAL)))) ORDER BY ((((rt1.c1) IS TRUE))==(((rt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN rt1 ON ((CAST(rt0.c4 AS INTEGER)) NOTNULL) ORDER BY ((((rt1.c1) IS TRUE))=(((rt0.c0) ISNULL)))  NULLS LAST);
SELECT * FROM vt1, rt0 CROSS JOIN rt1 ON ((CAST(rt0.c4 AS INTEGER)) NOTNULL) WHERE ((+ (CAST(rt0.c1 AS REAL)))) ORDER BY ((((rt1.c1) IS TRUE))==(((rt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN rt1 ON ((CAST(rt0.c4 AS INTEGER)) NOTNULL) ORDER BY ((((rt1.c1) IS TRUE))=(((rt0.c0) ISNULL)))  NULLS LAST);
SELECT * FROM vt1, rt0 CROSS JOIN rt1 ON ((CAST(rt0.c4 AS INTEGER)) NOTNULL) WHERE ((+ (CAST(rt0.c1 AS REAL)))) ORDER BY ((((rt1.c1) IS TRUE))==(((rt0.c0) ISNULL)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (LOWER(DISTINCT rt0.c4)))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (LOWER(DISTINCT rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (LOWER(DISTINCT rt0.c4)))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (LOWER(DISTINCT rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (LOWER(DISTINCT rt0.c4)))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt1.c2)AND(rt0.c2)))GLOB(((rt1.c2)OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)AND(rt0.c2)))GLOB(((rt1.c2)OR(rt1.c2))))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt1.c2)AND(rt0.c2)))GLOB(((rt1.c2)OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)AND(rt0.c2)))GLOB(((rt1.c2)OR(rt1.c2))))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt1.c2)AND(rt0.c2)))GLOB(((rt1.c2)OR(rt1.c2)))));
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((rt0.c4 IN ())) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt0.c3) AND (rt1.c1))) AND (((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c5)))OR(rt1.c4)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt0.c3) AND (rt1.c1))) AND (((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c5)))OR(rt1.c4)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((rt0.c4 IN ())) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt0.c3) AND (rt1.c1))) AND (((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c5)))OR(rt1.c4)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt0.c3) AND (rt1.c1))) AND (((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c5)))OR(rt1.c4)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((rt0.c4 IN ())) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt0.c3) AND (rt1.c1))) AND (((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c5)))OR(rt1.c4)))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((CASE rt1.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c2 END)||(CASE rt0.c0  WHEN rt1.c4 THEN rt0.c5 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c2 END)||(CASE rt0.c0  WHEN rt1.c4 THEN rt0.c5 END))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((CASE rt1.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c2 END)||(CASE rt0.c0  WHEN rt1.c4 THEN rt0.c5 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c2 END)||(CASE rt0.c0  WHEN rt1.c4 THEN rt0.c5 END))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((CASE rt1.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c2 END)||(CASE rt0.c0  WHEN rt1.c4 THEN rt0.c5 END)));
SELECT * FROM rt1, rt0, vt1 WHERE ((~ (((rt1.c2)+('O ')))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c2)+('O '))))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE ((~ (((rt1.c2)+('O ')))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c2)+('O '))))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE ((~ (((rt1.c2)+('O ')))));
SELECT ALL * FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((0.11200782850964441)IS((rt0.c2 IN ()))) WHERE (rt0.c2 COLLATE BINARY) ORDER BY (- (CAST(rt1.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((0.11200782850964441)IS((rt0.c2 IN ()))) ORDER BY (- (CAST(rt1.c1 AS REAL))) DESC);
SELECT ALL * FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((0.11200782850964441)IS((rt0.c2 IN ()))) WHERE (rt0.c2 COLLATE BINARY) ORDER BY (- (CAST(rt1.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((0.11200782850964441)IS((rt0.c2 IN ()))) ORDER BY (- (CAST(rt1.c1 AS REAL))) DESC);
SELECT ALL * FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((0.11200782850964441)IS((rt0.c2 IN ()))) WHERE (rt0.c2 COLLATE BINARY) ORDER BY (- (CAST(rt1.c1 AS REAL))) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c3))<>((rt0.c1))))<(((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c0))))) ORDER BY (+ (((((rt0.c4)OR(rt0.c5)))AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))!=((rt0.c1))))<(((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (((((rt0.c4)OR(rt0.c5)))AND(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c3))<>((rt0.c1))))<(((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c0))))) ORDER BY (+ (((((rt0.c4)OR(rt0.c5)))AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))!=((rt0.c1))))<(((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (((((rt0.c4)OR(rt0.c5)))AND(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c3))<>((rt0.c1))))<(((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c0))))) ORDER BY (+ (((((rt0.c4)OR(rt0.c5)))AND(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((('')<<(rt0.c1))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c5 THEN rt0.c2 END) AND ((- (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((('')<<(rt0.c1))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c5 THEN rt0.c2 END) AND ((- (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((('')<<(rt0.c1))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c5 THEN rt0.c2 END) AND ((- (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((('')<<(rt0.c1))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c5 THEN rt0.c2 END) AND ((- (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((('')<<(rt0.c1))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c5 THEN rt0.c2 END) AND ((- (rt0.c4)))));
SELECT COUNT(*) FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON CHANGES() WHERE ((- (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1 RIGHT OUTER JOIN rt0 ON CHANGES());
SELECT COUNT(*) FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON CHANGES() WHERE ((- (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1 RIGHT OUTER JOIN rt0 ON CHANGES());
SELECT COUNT(*) FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON CHANGES() WHERE ((- (CAST(rt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)||(vt1.c0))))<((NULL))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)||(vt1.c0))))<((NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)||(vt1.c0))))<((NULL))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)||(vt1.c0))))<((NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)||(vt1.c0))))<((NULL))));
SELECT * FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c4)))) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c4)LIKE('j2')))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c4)))) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c4)LIKE('j2'))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c4)))) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c4)LIKE('j2')))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c4)))) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c4)LIKE('j2'))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c4)))) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c4)LIKE('j2')))));
SELECT ALL * FROM rt1, vt1 WHERE (CAST((rt1.c3 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c3 IN ()) AS BLOB)) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (CAST((rt1.c3 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c3 IN ()) AS BLOB)) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (CAST((rt1.c3 IN ()) AS BLOB));
SELECT ALL * FROM vt1, rt1 WHERE (CAST((0xffffffffc2ad3a55 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((0Xffffffffc2ad3a55 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (CAST((0xffffffffc2ad3a55 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((0Xffffffffc2ad3a55 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (CAST((0xffffffffc2ad3a55 IN ()) AS TEXT));
SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (UPPER(DISTINCT vt1.c0)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (UPPER(DISTINCT vt1.c0)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (UPPER(DISTINCT vt1.c0)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (UPPER(DISTINCT vt1.c0)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (UPPER(DISTINCT vt1.c0)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (((((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END)AND((+ (rt0.c0)))))OR(rt0.c2)))OR(LIKELY(rt0.c1))))AND((((rt0.c4, rt0.c5, '')) BETWEEN ((rt0.c2, rt0.c4, -1013859407)) AND ((rt0.c3, 0.033340809628195966, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END)AND((+ (rt0.c0)))))OR(rt0.c2)))OR(LIKELY(rt0.c1))))AND((((rt0.c4, rt0.c5, '')) BETWEEN ((rt0.c2, rt0.c4, -1013859407)) AND ((rt0.c3, 0.033340809628195966, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END)AND((+ (rt0.c0)))))OR(rt0.c2)))OR(LIKELY(rt0.c1))))AND((((rt0.c4, rt0.c5, '')) BETWEEN ((rt0.c2, rt0.c4, -1013859407)) AND ((rt0.c3, 0.033340809628195966, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END)AND((+ (rt0.c0)))))OR(rt0.c2)))OR(LIKELY(rt0.c1))))AND((((rt0.c4, rt0.c5, '')) BETWEEN ((rt0.c2, rt0.c4, -1013859407)) AND ((rt0.c3, 0.033340809628195966, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END)AND((+ (rt0.c0)))))OR(rt0.c2)))OR(LIKELY(rt0.c1))))AND((((rt0.c4, rt0.c5, '')) BETWEEN ((rt0.c2, rt0.c4, -1013859407)) AND ((rt0.c3, 0.033340809628195966, rt0.c3))))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c5) NOT BETWEEN (vt1.c0) AND (rt0.c4))) NOT NULL)) ORDER BY CASE WHEN (((rt0.c1))>=((rt0.c2))) THEN CAST(rt0.c1 AS BLOB) ELSE ((rt0.c0) BETWEEN (0.7112424017783398) AND (rt0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) NOT BETWEEN (vt1.c0) AND (rt0.c4))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN (((rt0.c1))>=((rt0.c2))) THEN CAST(rt0.c1 AS BLOB) ELSE ((rt0.c0) BETWEEN (0.7112424017783398) AND (rt0.c3)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c5) NOT BETWEEN (vt1.c0) AND (rt0.c4))) NOT NULL)) ORDER BY CASE WHEN (((rt0.c1))>=((rt0.c2))) THEN CAST(rt0.c1 AS BLOB) ELSE ((rt0.c0) BETWEEN (0.7112424017783398) AND (rt0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) NOT BETWEEN (vt1.c0) AND (rt0.c4))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN (((rt0.c1))>=((rt0.c2))) THEN CAST(rt0.c1 AS BLOB) ELSE ((rt0.c0) BETWEEN (0.7112424017783398) AND (rt0.c3)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c5) NOT BETWEEN (vt1.c0) AND (rt0.c4))) NOT NULL)) ORDER BY CASE WHEN (((rt0.c1))>=((rt0.c2))) THEN CAST(rt0.c1 AS BLOB) ELSE ((rt0.c0) BETWEEN (0.7112424017783398) AND (rt0.c3)) END  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c5 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c5 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c5 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (((((+ (rt0.c3)))OR(CAST(rt0.c3 AS INTEGER))))AND(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c3)))) WHERE (CASE WHEN CAST(rt1.c3 AS BLOB) THEN ((rt1.c4) NOT BETWEEN (rt0.c5) AND (rt0.c4)) END) ORDER BY (CASE '0.4600165092072559'  WHEN NULL THEN rt0.c4 ELSE rt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c3 AS BLOB) THEN ((rt1.c4) NOT BETWEEN (rt0.c5) AND (rt0.c4)) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((((+ (rt0.c3)))OR(CAST(rt0.c3 AS INTEGER))))AND(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c3)))) ORDER BY (CASE '0.4600165092072559'  WHEN NULL THEN rt0.c4 ELSE rt0.c0 END IN ()));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (((((+ (rt0.c3)))OR(CAST(rt0.c3 AS INTEGER))))AND(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c3)))) WHERE (CASE WHEN CAST(rt1.c3 AS BLOB) THEN ((rt1.c4) NOT BETWEEN (rt0.c5) AND (rt0.c4)) END) ORDER BY (CASE '0.4600165092072559'  WHEN NULL THEN rt0.c4 ELSE rt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c3 AS BLOB) THEN ((rt1.c4) NOT BETWEEN (rt0.c5) AND (rt0.c4)) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((((+ (rt0.c3)))OR(CAST(rt0.c3 AS INTEGER))))AND(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c3)))) ORDER BY (CASE '0.4600165092072559'  WHEN NULL THEN rt0.c4 ELSE rt0.c0 END IN ()));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (((((+ (rt0.c3)))OR(CAST(rt0.c3 AS INTEGER))))AND(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c3)))) WHERE (CASE WHEN CAST(rt1.c3 AS BLOB) THEN ((rt1.c4) NOT BETWEEN (rt0.c5) AND (rt0.c4)) END) ORDER BY (CASE '0.4600165092072559'  WHEN NULL THEN rt0.c4 ELSE rt0.c0 END IN ());
SELECT * FROM vt1, rt0 NATURAL JOIN rt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN rt1);
SELECT * FROM vt1, rt0 NATURAL JOIN rt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN rt1);
SELECT * FROM vt1, rt0 NATURAL JOIN rt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM rt1 WHERE ((~ (rt1.c4)));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c4))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((~ (rt1.c4)));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c4))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((~ (rt1.c4)));
SELECT COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt1 ON CAST(((rt0.c5) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER) WHERE (((((rt0.c0)<=(rt0.c4))) NOT BETWEEN ((((rt0.c3))<((rt0.c4)))) AND (rt0.c5 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(rt0.c4))) NOT BETWEEN ((((rt0.c3))<((rt0.c4)))) AND (rt0.c5 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt1 ON CAST(((rt0.c5) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt1 ON CAST(((rt0.c5) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER) WHERE (((((rt0.c0)<=(rt0.c4))) NOT BETWEEN ((((rt0.c3))<((rt0.c4)))) AND (rt0.c5 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(rt0.c4))) NOT BETWEEN ((((rt0.c3))<((rt0.c4)))) AND (rt0.c5 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt1 ON CAST(((rt0.c5) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt1 ON CAST(((rt0.c5) NOT BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER) WHERE (((((rt0.c0)<=(rt0.c4))) NOT BETWEEN ((((rt0.c3))<((rt0.c4)))) AND (rt0.c5 COLLATE NOCASE)));
SELECT * FROM rt1, vt1, rt0 WHERE ((((rt0.c0 IN (rt0.c2, 0.5946241590455658))) NOT BETWEEN (ABS(vt1.c0)) AND ((((((((((((('Mk')AND(rt1.c3)))OR(rt0.c4)))OR(rt0.c4)))OR(rt1.c0)))OR(rt1.c3)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2, 0.5946241590455658))) NOT BETWEEN (ABS(vt1.c0)) AND ((((((((((((('Mk')AND(rt1.c3)))OR(rt0.c4)))OR(rt0.c4)))OR(rt1.c0)))OR(rt1.c3)))OR(rt0.c2))))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE ((((rt0.c0 IN (rt0.c2, 0.5946241590455658))) NOT BETWEEN (ABS(vt1.c0)) AND ((((((((((((('Mk')AND(rt1.c3)))OR(rt0.c4)))OR(rt0.c4)))OR(rt1.c0)))OR(rt1.c3)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2, 0.5946241590455658))) NOT BETWEEN (ABS(vt1.c0)) AND ((((((((((((('Mk')AND(rt1.c3)))OR(rt0.c4)))OR(rt0.c4)))OR(rt1.c0)))OR(rt1.c3)))OR(rt0.c2))))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE ((((rt0.c0 IN (rt0.c2, 0.5946241590455658))) NOT BETWEEN (ABS(vt1.c0)) AND ((((((((((((('Mk')AND(rt1.c3)))OR(rt0.c4)))OR(rt0.c4)))OR(rt1.c0)))OR(rt1.c3)))OR(rt0.c2)))));
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c5 THEN rt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c5 THEN rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c5 THEN rt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c5 THEN rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c5 THEN rt0.c1 END COLLATE BINARY);
SELECT * FROM rt1, rt0, vt1 WHERE (0.2434016122758581);
SELECT SUM(count) FROM (SELECT ALL ((0.2434016122758581) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (0.2434016122758581);
SELECT SUM(count) FROM (SELECT ALL ((0.2434016122758581) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (0.2434016122758581);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((rt0.c5)AND(rt1.c1)))OR(rt1.c2)))AND((((rt1.c2))<=((rt1.c1))))))AND(((rt1.c3) NOTNULL))) WHERE (((CASE WHEN rt1.c0 THEN rt0.c2 END) NOT NULL)) ORDER BY (NOT ((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt0.c2 END) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((rt0.c5)AND(rt1.c1)))OR(rt1.c2)))AND((((rt1.c2))<=((rt1.c1))))))AND(((rt1.c3) NOTNULL))) ORDER BY (NOT ((+ (rt0.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((rt0.c5)AND(rt1.c1)))OR(rt1.c2)))AND((((rt1.c2))<=((rt1.c1))))))AND(((rt1.c3) NOTNULL))) WHERE (((CASE WHEN rt1.c0 THEN rt0.c2 END) NOT NULL)) ORDER BY (NOT ((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt0.c2 END) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((rt0.c5)AND(rt1.c1)))OR(rt1.c2)))AND((((rt1.c2))<=((rt1.c1))))))AND(((rt1.c3) NOTNULL))) ORDER BY (NOT ((+ (rt0.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((rt0.c5)AND(rt1.c1)))OR(rt1.c2)))AND((((rt1.c2))<=((rt1.c1))))))AND(((rt1.c3) NOTNULL))) WHERE (((CASE WHEN rt1.c0 THEN rt0.c2 END) NOT NULL)) ORDER BY (NOT ((+ (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c2))) BETWEEN ((rt0.c3 IN ('1927755093', rt0.c2, rt0.c3))) AND (CASE WHEN 0xffffffffa9d690b3 THEN rt0.c0 ELSE rt0.c3 END))) ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (0xffffffffc3878498)) THEN LIKE(rt0.c2, rt0.c2) ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c2))) BETWEEN ((rt0.c3 IN ('1927755093', rt0.c2, rt0.c3))) AND (CASE WHEN 0xffffffffa9d690b3 THEN rt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (0xffffffffc3878498)) THEN LIKE(rt0.c2, rt0.c2) ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c2))) BETWEEN ((rt0.c3 IN ('1927755093', rt0.c2, rt0.c3))) AND (CASE WHEN 0xffffffffa9d690b3 THEN rt0.c0 ELSE rt0.c3 END))) ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (0xffffffffc3878498)) THEN LIKE(rt0.c2, rt0.c2) ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c2))) BETWEEN ((rt0.c3 IN ('1927755093', rt0.c2, rt0.c3))) AND (CASE WHEN 0xffffffffa9d690b3 THEN rt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (0xffffffffc3878498)) THEN LIKE(rt0.c2, rt0.c2) ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c2))) BETWEEN ((rt0.c3 IN ('1927755093', rt0.c2, rt0.c3))) AND (CASE WHEN 0xffffffffa9d690b3 THEN rt0.c0 ELSE rt0.c3 END))) ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (0xffffffffc3878498)) THEN LIKE(rt0.c2, rt0.c2) ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5))) END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 NOT INDEXED INNER JOIN vt1 ON CAST(((((rt0.c3)OR(vt1.c0)))OR(rt0.c2)) AS INTEGER) WHERE (((0.8474842181303524)IS NOT(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((0.8474842181303524)IS NOT(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST(((((rt0.c3)OR(vt1.c0)))OR(rt0.c2)) AS INTEGER));
SELECT COUNT(*) FROM rt0 NOT INDEXED INNER JOIN vt1 ON CAST(((((rt0.c3)OR(vt1.c0)))OR(rt0.c2)) AS INTEGER) WHERE (((0.8474842181303524)IS NOT(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((0.8474842181303524)IS NOT(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST(((((rt0.c3)OR(vt1.c0)))OR(rt0.c2)) AS INTEGER));
SELECT COUNT(*) FROM rt0 NOT INDEXED INNER JOIN vt1 ON CAST(((((rt0.c3)OR(vt1.c0)))OR(rt0.c2)) AS INTEGER) WHERE (((0.8474842181303524)IS NOT(rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((rt1.c4 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c4 IN ())) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((rt1.c4 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c4 IN ())) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((rt1.c4 IN ()));
SELECT ALL * FROM vt1, rt0, rt1 WHERE ((NOT (((rt1.c4)IS(rt1.c2))))) ORDER BY (- (CASE rt0.c4  WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c4)IS(rt1.c2))))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (- (CASE rt0.c4  WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, rt1 WHERE ((NOT (((rt1.c4)IS(rt1.c2))))) ORDER BY (- (CASE rt0.c4  WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c4)IS(rt1.c2))))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (- (CASE rt0.c4  WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, rt1 WHERE ((NOT (((rt1.c4)IS(rt1.c2))))) ORDER BY (- (CASE rt0.c4  WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 INNER JOIN rt1 ON rt1.c0 WHERE ((+ (CASE 0.6536405105569226  WHEN rt1.c2 THEN rt0.c0 WHEN 0.7093351140196277 THEN rt1.c1 WHEN '0.2931774072524428' THEN rt1.c3 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE 0.6536405105569226  WHEN rt1.c2 THEN rt0.c0 WHEN 0.7093351140196277 THEN rt1.c1 WHEN '0.2931774072524428' THEN rt1.c3 ELSE rt0.c3 END))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN rt1 ON rt1.c0);
SELECT COUNT(*) FROM vt1, rt0 INNER JOIN rt1 ON rt1.c0 WHERE ((+ (CASE 0.6536405105569226  WHEN rt1.c2 THEN rt0.c0 WHEN 0.7093351140196277 THEN rt1.c1 WHEN '0.2931774072524428' THEN rt1.c3 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE 0.6536405105569226  WHEN rt1.c2 THEN rt0.c0 WHEN 0.7093351140196277 THEN rt1.c1 WHEN '0.2931774072524428' THEN rt1.c3 ELSE rt0.c3 END))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN rt1 ON rt1.c0);
SELECT COUNT(*) FROM vt1, rt0 INNER JOIN rt1 ON rt1.c0 WHERE ((+ (CASE 0.6536405105569226  WHEN rt1.c2 THEN rt0.c0 WHEN 0.7093351140196277 THEN rt1.c1 WHEN '0.2931774072524428' THEN rt1.c3 ELSE rt0.c3 END)));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((+ (0x66b6bf16)));
SELECT SUM(count) FROM (SELECT (((+ (0X66b6bf16))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((+ (0x66b6bf16)));
SELECT SUM(count) FROM (SELECT (((+ (0X66b6bf16))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((+ (0x66b6bf16)));
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))<(rt0.c2 COLLATE RTRIM))) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))<(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY rt1.c1 ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))<(rt0.c2 COLLATE RTRIM))) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))<(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY rt1.c1 ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((((rt1.c1)OR(rt1.c0)))AND(vt1.c0)))<(rt0.c2 COLLATE RTRIM))) ORDER BY rt1.c1 ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c1 COLLATE RTRIM);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3))  WHEN ((((rt1.c1)AND(rt1.c3)))AND(rt0.c5)) THEN (rt1.c4 IN ()) ELSE 0.8391307708579301 END CROSS JOIN rt1 ON CASE IFNULL(rt1.c0, rt0.c2)  WHEN CAST(rt1.c0 AS NUMERIC) THEN CAST(rt1.c2 AS INTEGER) ELSE ROUND(rt1.c1, 'z') END WHERE ((x'' IN (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c5 WHEN '\{{h	~d' THEN rt0.c3 WHEN vt1.c0 THEN 0.7949622256655923 END)));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c5 WHEN '\{{h	~d' THEN rt0.c3 WHEN vt1.c0 THEN 0.7949622256655923 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3))  WHEN ((((rt1.c1)AND(rt1.c3)))AND(rt0.c5)) THEN (rt1.c4 IN ()) ELSE 0.8391307708579301 END CROSS JOIN rt1 ON CASE IFNULL(rt1.c0, rt0.c2)  WHEN CAST(rt1.c0 AS NUMERIC) THEN CAST(rt1.c2 AS INTEGER) ELSE ROUND(rt1.c1, 'z') END);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3))  WHEN ((((rt1.c1)AND(rt1.c3)))AND(rt0.c5)) THEN (rt1.c4 IN ()) ELSE 0.8391307708579301 END CROSS JOIN rt1 ON CASE IFNULL(rt1.c0, rt0.c2)  WHEN CAST(rt1.c0 AS NUMERIC) THEN CAST(rt1.c2 AS INTEGER) ELSE ROUND(rt1.c1, 'z') END WHERE ((x'' IN (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c5 WHEN '\{{h	~d' THEN rt0.c3 WHEN vt1.c0 THEN 0.7949622256655923 END)));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c5 WHEN '\{{h	~d' THEN rt0.c3 WHEN vt1.c0 THEN 0.7949622256655923 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c3))  WHEN ((((rt1.c1)AND(rt1.c3)))AND(rt0.c5)) THEN (rt1.c4 IN ()) ELSE 0.8391307708579301 END CROSS JOIN rt1 ON CASE IFNULL(rt1.c0, rt0.c2)  WHEN CAST(rt1.c0 AS NUMERIC) THEN CAST(rt1.c2 AS INTEGER) ELSE ROUND(rt1.c1, 'z') END);
SELECT * FROM rt0, vt1 WHERE (0.38714054109032525);
SELECT SUM(count) FROM (SELECT ALL ((0.38714054109032525) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (0.38714054109032525);
SELECT SUM(count) FROM (SELECT ALL ((0.38714054109032525) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (0.38714054109032525);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN rt1.c4 THEN ((((((((rt1.c4)OR(rt1.c2)))OR(vt1.c0)))OR(rt1.c1)))OR(vt1.c0)) WHEN '0.8671848535805499' THEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c0)) WHEN x'' THEN CAST(vt1.c0 AS NUMERIC) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY (+ (vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c4 THEN ((((((((rt1.c4)OR(rt1.c2)))OR(vt1.c0)))OR(rt1.c1)))OR(vt1.c0)) WHEN '0.8671848535805499' THEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c0)) WHEN x'' THEN CAST(vt1.c0 AS NUMERIC) ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt1, vt1 ORDER BY (+ (vt1.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN rt1.c4 THEN ((((((((rt1.c4)OR(rt1.c2)))OR(vt1.c0)))OR(rt1.c1)))OR(vt1.c0)) WHEN '0.8671848535805499' THEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c0)) WHEN x'' THEN CAST(vt1.c0 AS NUMERIC) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY (+ (vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c4 THEN ((((((((rt1.c4)OR(rt1.c2)))OR(vt1.c0)))OR(rt1.c1)))OR(vt1.c0)) WHEN '0.8671848535805499' THEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c0)) WHEN x'' THEN CAST(vt1.c0 AS NUMERIC) ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt1, vt1 ORDER BY (+ (vt1.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN rt1.c4 THEN ((((((((rt1.c4)OR(rt1.c2)))OR(vt1.c0)))OR(rt1.c1)))OR(vt1.c0)) WHEN '0.8671848535805499' THEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c0)) WHEN x'' THEN CAST(vt1.c0 AS NUMERIC) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY (+ (vt1.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((ROUND(0.2724439388790918, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((ROUND(0.2724439388790918, rt0.c2) IN ())) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((ROUND(0.2724439388790918, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((ROUND(0.2724439388790918, rt0.c2) IN ())) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((ROUND(0.2724439388790918, rt0.c2) IN ()));
SELECT * FROM vt1 WHERE ('MU');
SELECT SUM(count) FROM (SELECT (('MU') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('MU');
SELECT SUM(count) FROM (SELECT (('MU') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('MU');
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END)GLOB(NULL))) ORDER BY (~ ((((vt1.c0, rt0.c4, rt0.c2))=((vt1.c0, rt0.c0, rt0.c5))))) ASC  NULLS FIRST, ((rt0.c5 COLLATE BINARY)<(CASE rt0.c5  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END)GLOB(NULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (~ ((((vt1.c0, rt0.c4, rt0.c2))==((vt1.c0, rt0.c0, rt0.c5))))) ASC  NULLS FIRST, ((rt0.c5 COLLATE BINARY)<(CASE rt0.c5  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END)GLOB(NULL))) ORDER BY (~ ((((vt1.c0, rt0.c4, rt0.c2))=((vt1.c0, rt0.c0, rt0.c5))))) ASC  NULLS FIRST, ((rt0.c5 COLLATE BINARY)<(CASE rt0.c5  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END)GLOB(NULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (~ ((((vt1.c0, rt0.c4, rt0.c2))==((vt1.c0, rt0.c0, rt0.c5))))) ASC  NULLS FIRST, ((rt0.c5 COLLATE BINARY)<(CASE rt0.c5  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END)GLOB(NULL))) ORDER BY (~ ((((vt1.c0, rt0.c4, rt0.c2))=((vt1.c0, rt0.c0, rt0.c5))))) ASC  NULLS FIRST, ((rt0.c5 COLLATE BINARY)<(CASE rt0.c5  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((((((((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))AND(((rt1.c1)LIKE(rt1.c4)))))AND((rt1.c0 IN ()))))OR(CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN vt1.c0 THEN rt1.c2 END)))AND(((rt1.c2) BETWEEN (0x1272d12c) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))AND(((rt1.c1)LIKE(rt1.c4)))))AND((rt1.c0 IN ()))))OR(CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN vt1.c0 THEN rt1.c2 END)))AND(((rt1.c2) BETWEEN (0X1272d12c) AND (rt1.c3))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((((((((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))AND(((rt1.c1)LIKE(rt1.c4)))))AND((rt1.c0 IN ()))))OR(CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN vt1.c0 THEN rt1.c2 END)))AND(((rt1.c2) BETWEEN (0x1272d12c) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))AND(((rt1.c1)LIKE(rt1.c4)))))AND((rt1.c0 IN ()))))OR(CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN vt1.c0 THEN rt1.c2 END)))AND(((rt1.c2) BETWEEN (0X1272d12c) AND (rt1.c3))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((((((((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))AND(((rt1.c1)LIKE(rt1.c4)))))AND((rt1.c0 IN ()))))OR(CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN vt1.c0 THEN rt1.c2 END)))AND(((rt1.c2) BETWEEN (0x1272d12c) AND (rt1.c3)))));
SELECT COUNT(*) FROM vt1, rt1 CROSS JOIN rt0 ON ((((rt0.c0)>=(rt0.c0)))*(((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c3)))) WHERE (CAST(((rt1.c4) BETWEEN (rt0.c4) AND (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4) BETWEEN (rt0.c4) AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt1, rt1 CROSS JOIN rt0 ON ((((rt0.c0)>=(rt0.c0)))*(((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c3)))));
SELECT COUNT(*) FROM vt1, rt1 CROSS JOIN rt0 ON ((((rt0.c0)>=(rt0.c0)))*(((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c3)))) WHERE (CAST(((rt1.c4) BETWEEN (rt0.c4) AND (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4) BETWEEN (rt0.c4) AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt1, rt1 CROSS JOIN rt0 ON ((((rt0.c0)>=(rt0.c0)))*(((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c3)))));
SELECT COUNT(*) FROM vt1, rt1 CROSS JOIN rt0 ON ((((rt0.c0)>=(rt0.c0)))*(((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c3)))) WHERE (CAST(((rt1.c4) BETWEEN (rt0.c4) AND (rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN (NOT (rt1.c0)) THEN (rt1.c0 IN ()) WHEN (- (rt0.c4)) THEN (x'' IN (rt0.c3, rt0.c5)) WHEN '-/.1680-7491155506042559762T8852703689526715209-7633686326573554020:-2229323970789705068 1032TtQ' THEN ((rt1.c2)!=(rt1.c0)) WHEN CASE WHEN rt1.c0 THEN rt1.c0 END THEN json_array(rt0.c4, rt0.c0) WHEN (NOT (rt1.c2)) THEN (((rt0.c3, rt0.c2, rt1.c3))>((rt0.c2, rt0.c1, x'8703'))) ELSE ((rt0.c1)OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt1.c0)) THEN (rt1.c0 IN ()) WHEN (- (rt0.c4)) THEN (x'' IN (rt0.c3, rt0.c5)) WHEN '-/.1680-7491155506042559762T8852703689526715209-7633686326573554020:-2229323970789705068 1032TtQ' THEN ((rt1.c2)<>(rt1.c0)) WHEN CASE WHEN rt1.c0 THEN rt1.c0 END THEN json_array(rt0.c4, rt0.c0) WHEN (NOT (rt1.c2)) THEN (((rt0.c3, rt0.c2, rt1.c3))>((rt0.c2, rt0.c1, x'8703'))) ELSE ((rt0.c1)OR(rt0.c2)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN (NOT (rt1.c0)) THEN (rt1.c0 IN ()) WHEN (- (rt0.c4)) THEN (x'' IN (rt0.c3, rt0.c5)) WHEN '-/.1680-7491155506042559762T8852703689526715209-7633686326573554020:-2229323970789705068 1032TtQ' THEN ((rt1.c2)!=(rt1.c0)) WHEN CASE WHEN rt1.c0 THEN rt1.c0 END THEN json_array(rt0.c4, rt0.c0) WHEN (NOT (rt1.c2)) THEN (((rt0.c3, rt0.c2, rt1.c3))>((rt0.c2, rt0.c1, x'8703'))) ELSE ((rt0.c1)OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt1.c0)) THEN (rt1.c0 IN ()) WHEN (- (rt0.c4)) THEN (x'' IN (rt0.c3, rt0.c5)) WHEN '-/.1680-7491155506042559762T8852703689526715209-7633686326573554020:-2229323970789705068 1032TtQ' THEN ((rt1.c2)<>(rt1.c0)) WHEN CASE WHEN rt1.c0 THEN rt1.c0 END THEN json_array(rt0.c4, rt0.c0) WHEN (NOT (rt1.c2)) THEN (((rt0.c3, rt0.c2, rt1.c3))>((rt0.c2, rt0.c1, x'8703'))) ELSE ((rt0.c1)OR(rt0.c2)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN (NOT (rt1.c0)) THEN (rt1.c0 IN ()) WHEN (- (rt0.c4)) THEN (x'' IN (rt0.c3, rt0.c5)) WHEN '-/.1680-7491155506042559762T8852703689526715209-7633686326573554020:-2229323970789705068 1032TtQ' THEN ((rt1.c2)!=(rt1.c0)) WHEN CASE WHEN rt1.c0 THEN rt1.c0 END THEN json_array(rt0.c4, rt0.c0) WHEN (NOT (rt1.c2)) THEN (((rt0.c3, rt0.c2, rt1.c3))>((rt0.c2, rt0.c1, x'8703'))) ELSE ((rt0.c1)OR(rt0.c2)) END);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c1 END)<(((rt1.c3)>=(rt0.c3))))) ORDER BY ((((rt1.c2 COLLATE BINARY)OR(ABS(rt1.c4))))OR(rt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c1 END)<(((rt1.c3)>=(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((((rt1.c2 COLLATE BINARY)OR(ABS(rt1.c4))))OR(rt1.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c1 END)<(((rt1.c3)>=(rt0.c3))))) ORDER BY ((((rt1.c2 COLLATE BINARY)OR(ABS(rt1.c4))))OR(rt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c1 END)<(((rt1.c3)>=(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((((rt1.c2 COLLATE BINARY)OR(ABS(rt1.c4))))OR(rt1.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c1 END)<(((rt1.c3)>=(rt0.c3))))) ORDER BY ((((rt1.c2 COLLATE BINARY)OR(ABS(rt1.c4))))OR(rt1.c0 COLLATE BINARY)) ASC;
SELECT * FROM vt1, rt1 WHERE ((((0.44048008756505863 IN ()))<=(CASE vt1.c0  WHEN rt1.c4 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((0.44048008756505863 IN ()))<=(CASE vt1.c0  WHEN rt1.c4 THEN rt1.c1 END))) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE ((((0.44048008756505863 IN ()))<=(CASE vt1.c0  WHEN rt1.c4 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((0.44048008756505863 IN ()))<=(CASE vt1.c0  WHEN rt1.c4 THEN rt1.c1 END))) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE ((((0.44048008756505863 IN ()))<=(CASE vt1.c0  WHEN rt1.c4 THEN rt1.c1 END)));
SELECT ALL * FROM rt0 NOT INDEXED, vt1 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0 NOT INDEXED, vt1 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0 NOT INDEXED, vt1 WHERE (rt0.c4);
SELECT * FROM rt1, vt1, rt0 WHERE (((((rt1.c1)IS(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)IS(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE (((((rt1.c1)IS(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)IS(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE (((((rt1.c1)IS(rt0.c2))) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE (((0.035438434597719226) NOTNULL)) ORDER BY LIKE(((vt1.c0)%(vt1.c0)), (vt1.c0 IN ()), '-') DESC  NULLS FIRST, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (0xb605944)) DESC  NULLS LAST, (((vt1.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ((((0.035438434597719226) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY LIKE(((vt1.c0)%(vt1.c0)), (vt1.c0 IN ()), '-') DESC  NULLS FIRST, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (0xb605944)) DESC  NULLS LAST, (((vt1.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (((0.035438434597719226) NOTNULL)) ORDER BY LIKE(((vt1.c0)%(vt1.c0)), (vt1.c0 IN ()), '-') DESC  NULLS FIRST, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (0xb605944)) DESC  NULLS LAST, (((vt1.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ((((0.035438434597719226) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY LIKE(((vt1.c0)%(vt1.c0)), (vt1.c0 IN ()), '-') DESC  NULLS FIRST, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (0xb605944)) DESC  NULLS LAST, (((vt1.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (((0.035438434597719226) NOTNULL)) ORDER BY LIKE(((vt1.c0)%(vt1.c0)), (vt1.c0 IN ()), '-') DESC  NULLS FIRST, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (0xb605944)) DESC  NULLS LAST, (((vt1.c0) IS FALSE) IN ());
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c5))=((vt1.c0)))) NOT BETWEEN (vt1.c0) AND (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c5))==((vt1.c0)))) NOT BETWEEN (vt1.c0) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c5))=((vt1.c0)))) NOT BETWEEN (vt1.c0) AND (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c5))==((vt1.c0)))) NOT BETWEEN (vt1.c0) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c5))=((vt1.c0)))) NOT BETWEEN (vt1.c0) AND (((vt1.c0) IS FALSE))));
SELECT * FROM rt1, vt1, rt0 WHERE (((LIKE(vt1.c0, rt1.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt1.c0, rt1.c0)) NOT NULL)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE (((LIKE(vt1.c0, rt1.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt1.c0, rt1.c0)) NOT NULL)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE (((LIKE(vt1.c0, rt1.c0)) NOT NULL));
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (CASE rt1.c2 COLLATE BINARY  WHEN rt0.c3 THEN ((NULL) NOT BETWEEN (vt1.c0) AND (rt1.c2)) WHEN ((rt0.c0)+(rt1.c4)) THEN CASE rt0.c3  WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c4 END WHEN ((((((((rt0.c5)OR(rt0.c0)))AND(rt1.c2)))OR(rt0.c0)))OR(rt0.c4)) THEN (((rt1.c4))<>((rt0.c1))) ELSE CAST(rt0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2 COLLATE BINARY  WHEN rt0.c3 THEN ((NULL) NOT BETWEEN (vt1.c0) AND (rt1.c2)) WHEN ((rt0.c0)+(rt1.c4)) THEN CASE rt0.c3  WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c4 END WHEN ((((((((rt0.c5)OR(rt0.c0)))AND(rt1.c2)))OR(rt0.c0)))OR(rt0.c4)) THEN (((rt1.c4))!=((rt0.c1))) ELSE CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (CASE rt1.c2 COLLATE BINARY  WHEN rt0.c3 THEN ((NULL) NOT BETWEEN (vt1.c0) AND (rt1.c2)) WHEN ((rt0.c0)+(rt1.c4)) THEN CASE rt0.c3  WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c4 END WHEN ((((((((rt0.c5)OR(rt0.c0)))AND(rt1.c2)))OR(rt0.c0)))OR(rt0.c4)) THEN (((rt1.c4))<>((rt0.c1))) ELSE CAST(rt0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c2 COLLATE BINARY  WHEN rt0.c3 THEN ((NULL) NOT BETWEEN (vt1.c0) AND (rt1.c2)) WHEN ((rt0.c0)+(rt1.c4)) THEN CASE rt0.c3  WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c4 END WHEN ((((((((rt0.c5)OR(rt0.c0)))AND(rt1.c2)))OR(rt0.c0)))OR(rt0.c4)) THEN (((rt1.c4))!=((rt0.c1))) ELSE CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (CASE rt1.c2 COLLATE BINARY  WHEN rt0.c3 THEN ((NULL) NOT BETWEEN (vt1.c0) AND (rt1.c2)) WHEN ((rt0.c0)+(rt1.c4)) THEN CASE rt0.c3  WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c4 END WHEN ((((((((rt0.c5)OR(rt0.c0)))AND(rt1.c2)))OR(rt0.c0)))OR(rt0.c4)) THEN (((rt1.c4))<>((rt0.c1))) ELSE CAST(rt0.c2 AS BLOB) END);
SELECT COUNT(*) FROM rt1, vt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (rt1.c0);
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM))) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN ((('')+(vt1.c0))) AND (TRIM(vt1.c0, vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN ((('')+(vt1.c0))) AND (TRIM(vt1.c0, vt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM))) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN ((('')+(vt1.c0))) AND (TRIM(vt1.c0, vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN ((('')+(vt1.c0))) AND (TRIM(vt1.c0, vt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM))) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN ((('')+(vt1.c0))) AND (TRIM(vt1.c0, vt1.c0))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE ((+ (CAST(rt0.c4 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c4 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (CAST(rt0.c4 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c4 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (CAST(rt0.c4 AS INTEGER))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c5)))<>(((rt0.c5)IS NOT(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c5)))!=(((rt0.c5)IS NOT(rt0.c4)))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c5)))<>(((rt0.c5)IS NOT(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c5)))!=(((rt0.c5)IS NOT(rt0.c4)))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c5)))<>(((rt0.c5)IS NOT(rt0.c4))));
SELECT * FROM rt1, rt0 WHERE ('f _>');
SELECT SUM(count) FROM (SELECT (('f _>') IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ('f _>');
SELECT SUM(count) FROM (SELECT (('f _>') IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ('f _>');
SELECT * FROM rt0 WHERE (((((((rt0.c3)IS NOT(rt0.c0)))AND(((rt0.c0) IS FALSE))))AND(((1265192278)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)IS NOT(rt0.c0)))AND(((rt0.c0) IS FALSE))))AND(((1265192278)*(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c3)IS NOT(rt0.c0)))AND(((rt0.c0) IS FALSE))))AND(((1265192278)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)IS NOT(rt0.c0)))AND(((rt0.c0) IS FALSE))))AND(((1265192278)*(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c3)IS NOT(rt0.c0)))AND(((rt0.c0) IS FALSE))))AND(((1265192278)*(rt0.c2)))));
SELECT ALL * FROM rt0, vt1 WHERE ((('T') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('T') IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((('T') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('T') IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((('T') IS FALSE));
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c0)))AND(CASE 0.5507200304032844  WHEN rt1.c4 THEN rt1.c3 END))) ORDER BY (- (((rt1.c4)/(rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c0)))AND(CASE 0.5507200304032844  WHEN rt1.c4 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (- (((rt1.c4)/(rt1.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c0)))AND(CASE 0.5507200304032844  WHEN rt1.c4 THEN rt1.c3 END))) ORDER BY (- (((rt1.c4)/(rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c0)))AND(CASE 0.5507200304032844  WHEN rt1.c4 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (- (((rt1.c4)/(rt1.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c0)))AND(CASE 0.5507200304032844  WHEN rt1.c4 THEN rt1.c3 END))) ORDER BY (- (((rt1.c4)/(rt1.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(LTRIM(rt1.c4, rt1.c1) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(LTRIM(rt1.c4, rt1.c1) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(LTRIM(rt1.c4, rt1.c1) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(LTRIM(rt1.c4, rt1.c1) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(LTRIM(rt1.c4, rt1.c1) AS NUMERIC));
SELECT * FROM rt1 WHERE (((SUBSTR(rt1.c0, rt1.c3))<(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN NULL ELSE rt1.c2 END))) ORDER BY ((((((rt1.c4)OR(rt1.c0)))OR(rt1.c4)))/(rt1.c1 COLLATE RTRIM)), CAST(CASE WHEN rt1.c2 THEN NULL ELSE x'' END AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(rt1.c0, rt1.c3))<(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN NULL ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c4)OR(rt1.c0)))OR(rt1.c4)))/(rt1.c1 COLLATE RTRIM)), CAST(CASE WHEN rt1.c2 THEN NULL ELSE x'' END AS BLOB) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((SUBSTR(rt1.c0, rt1.c3))<(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN NULL ELSE rt1.c2 END))) ORDER BY ((((((rt1.c4)OR(rt1.c0)))OR(rt1.c4)))/(rt1.c1 COLLATE RTRIM)), CAST(CASE WHEN rt1.c2 THEN NULL ELSE x'' END AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(rt1.c0, rt1.c3))<(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN NULL ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c4)OR(rt1.c0)))OR(rt1.c4)))/(rt1.c1 COLLATE RTRIM)), CAST(CASE WHEN rt1.c2 THEN NULL ELSE x'' END AS BLOB) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((SUBSTR(rt1.c0, rt1.c3))<(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN NULL ELSE rt1.c2 END))) ORDER BY ((((((rt1.c4)OR(rt1.c0)))OR(rt1.c4)))/(rt1.c1 COLLATE RTRIM)), CAST(CASE WHEN rt1.c2 THEN NULL ELSE x'' END AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((+ (((((((((rt1.c1)OR(rt1.c2)))OR(rt0.c5)))AND(rt0.c3)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt1.c1)OR(rt1.c2)))OR(rt0.c5)))AND(rt0.c3)))OR(rt0.c4))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((+ (((((((((rt1.c1)OR(rt1.c2)))OR(rt0.c5)))AND(rt0.c3)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt1.c1)OR(rt1.c2)))OR(rt0.c5)))AND(rt0.c3)))OR(rt0.c4))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((+ (((((((((rt1.c1)OR(rt1.c2)))OR(rt0.c5)))AND(rt0.c3)))OR(rt0.c4)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM LEFT OUTER JOIN rt1 ON (NOT (TRIM(DISTINCT rt0.c5))) WHERE (((CAST(vt1.c0 AS REAL))==(x'e014')));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))=(x'e014'))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM LEFT OUTER JOIN rt1 ON (NOT (TRIM(DISTINCT rt0.c5))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM LEFT OUTER JOIN rt1 ON (NOT (TRIM(DISTINCT rt0.c5))) WHERE (((CAST(vt1.c0 AS REAL))==(x'e014')));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))=(x'e014'))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM LEFT OUTER JOIN rt1 ON (NOT (TRIM(DISTINCT rt0.c5))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM LEFT OUTER JOIN rt1 ON (NOT (TRIM(DISTINCT rt0.c5))) WHERE (((CAST(vt1.c0 AS REAL))==(x'e014')));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE (((vt1.c0)&((rt0.c5 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)&((rt0.c5 IN ())))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE (((vt1.c0)&((rt0.c5 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)&((rt0.c5 IN ())))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt1 WHERE (((vt1.c0)&((rt0.c5 IN ()))));
SELECT ALL * FROM rt0 WHERE ((~ (((('2099061674')) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((~ (((('2099061674')) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((('2099061674')) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((~ (((('2099061674')) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((('2099061674')) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3))))));
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((('364806888')) BETWEEN ((((((rt0.c5)AND(rt1.c3)))OR(rt0.c4)))) AND ((rt0.c5)))) ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((vt1.c0))))=(rt0.c4));
SELECT SUM(count) FROM (SELECT ((((('364806888')) BETWEEN ((((((rt0.c5)AND(rt1.c3)))OR(rt0.c4)))) AND ((rt0.c5)))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((vt1.c0))))=(rt0.c4)));
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((('364806888')) BETWEEN ((((((rt0.c5)AND(rt1.c3)))OR(rt0.c4)))) AND ((rt0.c5)))) ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((vt1.c0))))=(rt0.c4));
SELECT SUM(count) FROM (SELECT ((((('364806888')) BETWEEN ((((((rt0.c5)AND(rt1.c3)))OR(rt0.c4)))) AND ((rt0.c5)))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((vt1.c0))))=(rt0.c4)));
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (((('364806888')) BETWEEN ((((((rt0.c5)AND(rt1.c3)))OR(rt0.c4)))) AND ((rt0.c5)))) ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((vt1.c0))))=(rt0.c4));
SELECT * FROM vt1, rt0 WHERE (CAST(0X76ddcc34 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0X76ddcc34 AS TEXT)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CAST(0X76ddcc34 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0X76ddcc34 AS TEXT)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CAST(0X76ddcc34 AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2))>((rt0.c3))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))>((rt0.c3))) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2))>((rt0.c3))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))>((rt0.c3))) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2))>((rt0.c3))) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3 IN ()))OR((((rt0.c3, rt0.c4, rt0.c0))<=((rt0.c5, rt0.c5, rt0.c2))))))AND('')));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3 IN ()))OR((((rt0.c3, rt0.c4, rt0.c0))<=((rt0.c5, rt0.c5, rt0.c2))))))AND(''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3 IN ()))OR((((rt0.c3, rt0.c4, rt0.c0))<=((rt0.c5, rt0.c5, rt0.c2))))))AND('')));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3 IN ()))OR((((rt0.c3, rt0.c4, rt0.c0))<=((rt0.c5, rt0.c5, rt0.c2))))))AND(''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3 IN ()))OR((((rt0.c3, rt0.c4, rt0.c0))<=((rt0.c5, rt0.c5, rt0.c2))))))AND('')));
SELECT ALL * FROM rt1, vt1 WHERE ('961310193');
SELECT SUM(count) FROM (SELECT (('961310193') IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE ('961310193');
SELECT SUM(count) FROM (SELECT (('961310193') IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE ('961310193');
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) IS TRUE));
SELECT * FROM rt1, vt1, rt0 WHERE (CASE TYPEOF(vt1.c0)  WHEN LIKELIHOOD(x'd79c', 0.8521096019014722) THEN rt1.c3 COLLATE BINARY WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt1.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c5 THEN rt0.c2 END THEN ((((rt0.c3)AND(vt1.c0)))AND(rt1.c1)) WHEN ((rt1.c1) NOT NULL) THEN rt1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(vt1.c0)  WHEN LIKELIHOOD(x'd79c', 0.8521096019014722) THEN rt1.c3 COLLATE BINARY WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt1.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c5 THEN rt0.c2 END THEN ((((rt0.c3)AND(vt1.c0)))AND(rt1.c1)) WHEN ((rt1.c1) NOT NULL) THEN rt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE (CASE TYPEOF(vt1.c0)  WHEN LIKELIHOOD(x'd79c', 0.8521096019014722) THEN rt1.c3 COLLATE BINARY WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt1.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c5 THEN rt0.c2 END THEN ((((rt0.c3)AND(vt1.c0)))AND(rt1.c1)) WHEN ((rt1.c1) NOT NULL) THEN rt1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(vt1.c0)  WHEN LIKELIHOOD(x'd79c', 0.8521096019014722) THEN rt1.c3 COLLATE BINARY WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt1.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c5 THEN rt0.c2 END THEN ((((rt0.c3)AND(vt1.c0)))AND(rt1.c1)) WHEN ((rt1.c1) NOT NULL) THEN rt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE (CASE TYPEOF(vt1.c0)  WHEN LIKELIHOOD(x'd79c', 0.8521096019014722) THEN rt1.c3 COLLATE BINARY WHEN CASE rt0.c1  WHEN rt1.c2 THEN vt1.c0 WHEN rt0.c4 THEN x'' WHEN rt0.c5 THEN rt0.c2 END THEN ((((rt0.c3)AND(vt1.c0)))AND(rt1.c1)) WHEN ((rt1.c1) NOT NULL) THEN rt1.c1 COLLATE NOCASE END);
SELECT ALL * FROM vt1 NOT INDEXED, rt1 WHERE ((((((((rt1.c2, rt1.c3, vt1.c0))>((rt1.c2, rt1.c4, rt1.c2))))AND((('-1071375451') NOT BETWEEN (rt1.c1) AND (rt1.c0)))))AND(((('6X')) NOT BETWEEN ((vt1.c0)) AND ((0.28350287275720554)))))) ORDER BY ((((((((((((rt1.c4 COLLATE BINARY)OR(((rt1.c4)LIKE(rt1.c4)))))OR(4.42852094E8)))AND(((((rt1.c4)OR(vt1.c0)))OR(rt1.c0)))))OR((rt1.c1 IN ()))))AND(CAST(-1525721055 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))) DESC, ((((0xfffffffff5fb6140)-(rt1.c2))) BETWEEN ((rt1.c0 IN ())) AND ((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT (((((((((rt1.c2, rt1.c3, vt1.c0))>((rt1.c2, rt1.c4, rt1.c2))))AND((('-1071375451') NOT BETWEEN (rt1.c1) AND (rt1.c0)))))AND(((('6X')) NOT BETWEEN ((vt1.c0)) AND ((0.28350287275720554)))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((((((((((rt1.c4 COLLATE BINARY)OR(((rt1.c4)LIKE(rt1.c4)))))OR(4.42852094E8)))AND(((((rt1.c4)OR(vt1.c0)))OR(rt1.c0)))))OR((rt1.c1 IN ()))))AND(CAST(-1525721055 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))) DESC, ((((0xfffffffff5fb6140)-(rt1.c2))) BETWEEN ((rt1.c0 IN ())) AND ((rt1.c1 IN ()))));
SELECT ALL * FROM vt1 NOT INDEXED, rt1 WHERE ((((((((rt1.c2, rt1.c3, vt1.c0))>((rt1.c2, rt1.c4, rt1.c2))))AND((('-1071375451') NOT BETWEEN (rt1.c1) AND (rt1.c0)))))AND(((('6X')) NOT BETWEEN ((vt1.c0)) AND ((0.28350287275720554)))))) ORDER BY ((((((((((((rt1.c4 COLLATE BINARY)OR(((rt1.c4)LIKE(rt1.c4)))))OR(4.42852094E8)))AND(((((rt1.c4)OR(vt1.c0)))OR(rt1.c0)))))OR((rt1.c1 IN ()))))AND(CAST(-1525721055 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))) DESC, ((((0xfffffffff5fb6140)-(rt1.c2))) BETWEEN ((rt1.c0 IN ())) AND ((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT (((((((((rt1.c2, rt1.c3, vt1.c0))>((rt1.c2, rt1.c4, rt1.c2))))AND((('-1071375451') NOT BETWEEN (rt1.c1) AND (rt1.c0)))))AND(((('6X')) NOT BETWEEN ((vt1.c0)) AND ((0.28350287275720554)))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((((((((((rt1.c4 COLLATE BINARY)OR(((rt1.c4)LIKE(rt1.c4)))))OR(4.42852094E8)))AND(((((rt1.c4)OR(vt1.c0)))OR(rt1.c0)))))OR((rt1.c1 IN ()))))AND(CAST(-1525721055 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))) DESC, ((((0xfffffffff5fb6140)-(rt1.c2))) BETWEEN ((rt1.c0 IN ())) AND ((rt1.c1 IN ()))));
SELECT ALL * FROM vt1 NOT INDEXED, rt1 WHERE ((((((((rt1.c2, rt1.c3, vt1.c0))>((rt1.c2, rt1.c4, rt1.c2))))AND((('-1071375451') NOT BETWEEN (rt1.c1) AND (rt1.c0)))))AND(((('6X')) NOT BETWEEN ((vt1.c0)) AND ((0.28350287275720554)))))) ORDER BY ((((((((((((rt1.c4 COLLATE BINARY)OR(((rt1.c4)LIKE(rt1.c4)))))OR(4.42852094E8)))AND(((((rt1.c4)OR(vt1.c0)))OR(rt1.c0)))))OR((rt1.c1 IN ()))))AND(CAST(-1525721055 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))) DESC, ((((0xfffffffff5fb6140)-(rt1.c2))) BETWEEN ((rt1.c0 IN ())) AND ((rt1.c1 IN ())));
SELECT ALL * FROM rt0, rt1, vt1 WHERE (rt0.c5) ORDER BY ((CAST(rt1.c2 AS TEXT)) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((CAST(rt1.c2 AS TEXT)) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (rt0.c5) ORDER BY ((CAST(rt1.c2 AS TEXT)) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((CAST(rt1.c2 AS TEXT)) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (rt0.c5) ORDER BY ((CAST(rt1.c2 AS TEXT)) ISNULL) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0))))<((((rt1.c4)IS(rt1.c3)))))) ORDER BY ((rt1.c0) ISNULL) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0))))<((((rt1.c4)IS(rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0) ISNULL) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0))))<((((rt1.c4)IS(rt1.c3)))))) ORDER BY ((rt1.c0) ISNULL) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0))))<((((rt1.c4)IS(rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0) ISNULL) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0))))<((((rt1.c4)IS(rt1.c3)))))) ORDER BY ((rt1.c0) ISNULL) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt1 NOT INDEXED, rt1 WHERE (((((rt1.c0)GLOB('1813753628')))<(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN 129115132 THEN rt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)GLOB('1813753628')))<(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN 129115132 THEN rt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1 NOT INDEXED, rt1 WHERE (((((rt1.c0)GLOB('1813753628')))<(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN 129115132 THEN rt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)GLOB('1813753628')))<(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN 129115132 THEN rt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1 NOT INDEXED, rt1 WHERE (((((rt1.c0)GLOB('1813753628')))<(CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN 129115132 THEN rt1.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt1 WHERE ((((((((((+ (NULL)))OR(CAST(590542616 AS TEXT))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))AND(''))))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (NULL)))OR(CAST(590542616 AS TEXT))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))AND(''))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((+ (NULL)))OR(CAST(590542616 AS TEXT))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))AND(''))))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (NULL)))OR(CAST(590542616 AS TEXT))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))AND(''))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((+ (NULL)))OR(CAST(590542616 AS TEXT))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))AND(''))))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL) ASC;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN UNLIKELY(DISTINCT vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN UNLIKELY(DISTINCT vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN UNLIKELY(DISTINCT vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN UNLIKELY(DISTINCT vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN UNLIKELY(DISTINCT vt1.c0) END);
SELECT * FROM vt1, rt1 INNER JOIN rt0 ON (((((- (rt1.c2)))AND(rt0.c4)))OR(vt1.c0 COLLATE BINARY)) WHERE (json_type((rt0.c3 IN (rt0.c3)))) ORDER BY (((((rt1.c0, 0xffffffffe53dc1a7, rt0.c1))>=((rt1.c2, vt1.c0, vt1.c0)))) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (LIKELIHOOD(NULL, 0.3983657342173327)));
SELECT SUM(count) FROM (SELECT ((json_type((rt0.c3 IN (rt0.c3)))) IS TRUE)  as count FROM vt1, rt1 INNER JOIN rt0 ON (((((- (rt1.c2)))AND(rt0.c4)))OR(vt1.c0 COLLATE BINARY)) ORDER BY (((((rt1.c0, 0Xffffffffe53dc1a7, rt0.c1))>=((rt1.c2, vt1.c0, vt1.c0)))) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (LIKELIHOOD(NULL, 0.3983657342173327))));
SELECT * FROM vt1, rt1 INNER JOIN rt0 ON (((((- (rt1.c2)))AND(rt0.c4)))OR(vt1.c0 COLLATE BINARY)) WHERE (json_type((rt0.c3 IN (rt0.c3)))) ORDER BY (((((rt1.c0, 0xffffffffe53dc1a7, rt0.c1))>=((rt1.c2, vt1.c0, vt1.c0)))) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (LIKELIHOOD(NULL, 0.3983657342173327)));
SELECT SUM(count) FROM (SELECT ((json_type((rt0.c3 IN (rt0.c3)))) IS TRUE)  as count FROM vt1, rt1 INNER JOIN rt0 ON (((((- (rt1.c2)))AND(rt0.c4)))OR(vt1.c0 COLLATE BINARY)) ORDER BY (((((rt1.c0, 0Xffffffffe53dc1a7, rt0.c1))>=((rt1.c2, vt1.c0, vt1.c0)))) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (LIKELIHOOD(NULL, 0.3983657342173327))));
SELECT * FROM vt1, rt1 INNER JOIN rt0 ON (((((- (rt1.c2)))AND(rt0.c4)))OR(vt1.c0 COLLATE BINARY)) WHERE (json_type((rt0.c3 IN (rt0.c3)))) ORDER BY (((((rt1.c0, 0xffffffffe53dc1a7, rt0.c1))>=((rt1.c2, vt1.c0, vt1.c0)))) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (LIKELIHOOD(NULL, 0.3983657342173327)));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((('1126425351')OR('')))AND(rt0.c5))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((('1126425351')OR('')))AND(rt0.c5))) NOT NULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((('1126425351')OR('')))AND(rt0.c5))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((('1126425351')OR('')))AND(rt0.c5))) NOT NULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((('1126425351')OR('')))AND(rt0.c5))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.03549833804870006) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY '1664406683'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.03549833804870006) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY '1664406683'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.03549833804870006) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY '1664406683'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.03549833804870006) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY '1664406683'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.03549833804870006) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY '1664406683'  NULLS FIRST;
SELECT * FROM rt1, vt1 WHERE (CASE ((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0))  WHEN ((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c3 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0))  WHEN ((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c3 COLLATE RTRIM END) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (CASE ((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0))  WHEN ((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c3 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0))  WHEN ((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c3 COLLATE RTRIM END) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (CASE ((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c0))  WHEN ((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c3 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)<>(rt0.c4)))AND(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)))OR(((x'')-(rt0.c2)))))OR(CAST(rt0.c4 AS REAL))))AND(CAST(rt0.c3 AS NUMERIC)))) ORDER BY ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))<>((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)!=(rt0.c4)))AND(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)))OR(((x'')-(rt0.c2)))))OR(CAST(rt0.c4 AS REAL))))AND(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))<>((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)<>(rt0.c4)))AND(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)))OR(((x'')-(rt0.c2)))))OR(CAST(rt0.c4 AS REAL))))AND(CAST(rt0.c3 AS NUMERIC)))) ORDER BY ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))<>((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)!=(rt0.c4)))AND(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)))OR(((x'')-(rt0.c2)))))OR(CAST(rt0.c4 AS REAL))))AND(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))<>((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)<>(rt0.c4)))AND(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)))OR(((x'')-(rt0.c2)))))OR(CAST(rt0.c4 AS REAL))))AND(CAST(rt0.c3 AS NUMERIC)))) ORDER BY ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))<>((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5)))));
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((((((rt1.c0 COLLATE NOCASE)OR(((rt1.c2)IS('')))))OR((((('1491431140')AND(rt1.c3)))OR(rt1.c0)))))OR(CASE rt1.c3  WHEN vt1.c0 THEN NULL WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END)))OR(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY (((rt1.c4)|(rt1.c1)) IN (((((((((vt1.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c3)), ((((vt1.c0)AND(rt1.c2)))AND(rt1.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0 COLLATE NOCASE)OR(((rt1.c2)IS('')))))OR((((('1491431140')AND(rt1.c3)))OR(rt1.c0)))))OR(CASE rt1.c3  WHEN vt1.c0 THEN NULL WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END)))OR(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((rt1.c4)|(rt1.c1)) IN (((((((((vt1.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c3)), ((((vt1.c0)AND(rt1.c2)))AND(rt1.c4)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((((((rt1.c0 COLLATE NOCASE)OR(((rt1.c2)IS('')))))OR((((('1491431140')AND(rt1.c3)))OR(rt1.c0)))))OR(CASE rt1.c3  WHEN vt1.c0 THEN NULL WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END)))OR(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY (((rt1.c4)|(rt1.c1)) IN (((((((((vt1.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c3)), ((((vt1.c0)AND(rt1.c2)))AND(rt1.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0 COLLATE NOCASE)OR(((rt1.c2)IS('')))))OR((((('1491431140')AND(rt1.c3)))OR(rt1.c0)))))OR(CASE rt1.c3  WHEN vt1.c0 THEN NULL WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END)))OR(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((rt1.c4)|(rt1.c1)) IN (((((((((vt1.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c3)), ((((vt1.c0)AND(rt1.c2)))AND(rt1.c4)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((((((rt1.c0 COLLATE NOCASE)OR(((rt1.c2)IS('')))))OR((((('1491431140')AND(rt1.c3)))OR(rt1.c0)))))OR(CASE rt1.c3  WHEN vt1.c0 THEN NULL WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END)))OR(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY (((rt1.c4)|(rt1.c1)) IN (((((((((vt1.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c3)), ((((vt1.c0)AND(rt1.c2)))AND(rt1.c4)))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ((~ (619058481)));
SELECT SUM(count) FROM (SELECT ALL (((~ (619058481))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (619058481)));
SELECT SUM(count) FROM (SELECT ALL (((~ (619058481))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (619058481)));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c4)GLOB(((((rt0.c3)AND(rt1.c1)))AND(NULL))))) ORDER BY ((CASE rt1.c1  WHEN '-1638994723' THEN rt1.c2 END)LIKE(((rt1.c3)|(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4)GLOB(((((rt0.c3)AND(rt1.c1)))AND(NULL))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CASE rt1.c1  WHEN '-1638994723' THEN rt1.c2 END)LIKE(((rt1.c3)|(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c4)GLOB(((((rt0.c3)AND(rt1.c1)))AND(NULL))))) ORDER BY ((CASE rt1.c1  WHEN '-1638994723' THEN rt1.c2 END)LIKE(((rt1.c3)|(rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4)GLOB(((((rt0.c3)AND(rt1.c1)))AND(NULL))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CASE rt1.c1  WHEN '-1638994723' THEN rt1.c2 END)LIKE(((rt1.c3)|(rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c4)GLOB(((((rt0.c3)AND(rt1.c1)))AND(NULL))))) ORDER BY ((CASE rt1.c1  WHEN '-1638994723' THEN rt1.c2 END)LIKE(((rt1.c3)|(rt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN ((rt0.c4) IS TRUE) THEN (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c1))) ELSE CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4) IS TRUE) THEN (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c1))) ELSE CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN ((rt0.c4) IS TRUE) THEN (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c1))) ELSE CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4) IS TRUE) THEN (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c1))) ELSE CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN ((rt0.c4) IS TRUE) THEN (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c1))) ELSE CAST(rt0.c1 AS REAL) END);
SELECT ALL * FROM vt1, rt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((vt1.c0 IN ()));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((x'')AND(rt0.c3)))AND(rt0.c4))) NOT NULL)) ORDER BY (~ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((x'')AND(rt0.c3)))AND(rt0.c4))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((x'')AND(rt0.c3)))AND(rt0.c4))) NOT NULL)) ORDER BY (~ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((x'')AND(rt0.c3)))AND(rt0.c4))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((x'')AND(rt0.c3)))AND(rt0.c4))) NOT NULL)) ORDER BY (~ ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c4)) AS TEXT)) ORDER BY rt0.c5 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c4)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c5 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c4)) AS TEXT)) ORDER BY rt0.c5 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c4)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c5 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c4)) AS TEXT)) ORDER BY rt0.c5 DESC  NULLS LAST;
SELECT * FROM rt0, rt1, vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c4)))AND(rt0.c5)))AND(rt1.c3)))AND(((rt1.c3)==(rt1.c2)))))AND(CAST(rt1.c4 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c4)))AND(rt0.c5)))AND(rt1.c3)))AND(((rt1.c3)=(rt1.c2)))))AND(CAST(rt1.c4 AS INTEGER)))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT * FROM rt0, rt1, vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c4)))AND(rt0.c5)))AND(rt1.c3)))AND(((rt1.c3)==(rt1.c2)))))AND(CAST(rt1.c4 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c4)))AND(rt0.c5)))AND(rt1.c3)))AND(((rt1.c3)=(rt1.c2)))))AND(CAST(rt1.c4 AS INTEGER)))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT * FROM rt0, rt1, vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c4)))AND(rt0.c5)))AND(rt1.c3)))AND(((rt1.c3)==(rt1.c2)))))AND(CAST(rt1.c4 AS INTEGER))));
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c0  WHEN (((rt1.c4))<((rt1.c3))) THEN ((rt1.c3)==('-884062447')) ELSE rt1.c4 END) ORDER BY CASE WHEN (+ (rt1.c3)) THEN CASE '-1986076994'  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END END  NULLS LAST, (((((- (rt1.c4)))OR(NULL)))AND((('442852094')IS(rt1.c3)))) DESC, ((rt1.c3 COLLATE NOCASE)OR(CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN (((rt1.c4))<((rt1.c3))) THEN ((rt1.c3)=('-884062447')) ELSE rt1.c4 END) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (+ (rt1.c3)) THEN CASE '-1986076994'  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END END  NULLS LAST, (((((- (rt1.c4)))OR(NULL)))AND((('442852094')IS(rt1.c3)))) DESC, ((rt1.c3 COLLATE NOCASE)OR(CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c0  WHEN (((rt1.c4))<((rt1.c3))) THEN ((rt1.c3)==('-884062447')) ELSE rt1.c4 END) ORDER BY CASE WHEN (+ (rt1.c3)) THEN CASE '-1986076994'  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END END  NULLS LAST, (((((- (rt1.c4)))OR(NULL)))AND((('442852094')IS(rt1.c3)))) DESC, ((rt1.c3 COLLATE NOCASE)OR(CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c0  WHEN (((rt1.c4))<((rt1.c3))) THEN ((rt1.c3)=('-884062447')) ELSE rt1.c4 END) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (+ (rt1.c3)) THEN CASE '-1986076994'  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END END  NULLS LAST, (((((- (rt1.c4)))OR(NULL)))AND((('442852094')IS(rt1.c3)))) DESC, ((rt1.c3 COLLATE NOCASE)OR(CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c0  WHEN (((rt1.c4))<((rt1.c3))) THEN ((rt1.c3)==('-884062447')) ELSE rt1.c4 END) ORDER BY CASE WHEN (+ (rt1.c3)) THEN CASE '-1986076994'  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END END  NULLS LAST, (((((- (rt1.c4)))OR(NULL)))AND((('442852094')IS(rt1.c3)))) DESC, ((rt1.c3 COLLATE NOCASE)OR(CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c4)) THEN CAST(rt1.c1 AS TEXT) END) ORDER BY (((rt1.c1))!=((rt1.c1))) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt1.c4)) THEN CAST(rt1.c1 AS TEXT) END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1))!=((rt1.c1))) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c4)) THEN CAST(rt1.c1 AS TEXT) END) ORDER BY (((rt1.c1))!=((rt1.c1))) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt1.c4)) THEN CAST(rt1.c1 AS TEXT) END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1))!=((rt1.c1))) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c4)) THEN CAST(rt1.c1 AS TEXT) END) ORDER BY (((rt1.c1))!=((rt1.c1))) COLLATE NOCASE DESC;
SELECT ALL * FROM rt0 WHERE (((((((((((((0.2627473988303116)OR(CASE WHEN rt0.c5 THEN rt0.c5 END)))OR(((rt0.c4) IS FALSE))))AND(0.7668553629117799)))OR(CAST(rt0.c3 AS NUMERIC))))OR((rt0.c3 IN (rt0.c1, rt0.c2)))))OR(0.3873074353034809))) ORDER BY (((('K}Zry뽺㘲Wr') BETWEEN (rt0.c2) AND (rt0.c0)))LIKE(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((0.2627473988303116)OR(CASE WHEN rt0.c5 THEN rt0.c5 END)))OR(((rt0.c4) IS FALSE))))AND(0.7668553629117799)))OR(CAST(rt0.c3 AS NUMERIC))))OR((rt0.c3 IN (rt0.c1, rt0.c2)))))OR(0.3873074353034809))) IS TRUE)  as count FROM rt0 ORDER BY (((('K}Zry뽺㘲Wr') BETWEEN (rt0.c2) AND (rt0.c0)))LIKE(rt0.c1)) ASC);
SELECT ALL * FROM rt0 WHERE (((((((((((((0.2627473988303116)OR(CASE WHEN rt0.c5 THEN rt0.c5 END)))OR(((rt0.c4) IS FALSE))))AND(0.7668553629117799)))OR(CAST(rt0.c3 AS NUMERIC))))OR((rt0.c3 IN (rt0.c1, rt0.c2)))))OR(0.3873074353034809))) ORDER BY (((('K}Zry뽺㘲Wr') BETWEEN (rt0.c2) AND (rt0.c0)))LIKE(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((0.2627473988303116)OR(CASE WHEN rt0.c5 THEN rt0.c5 END)))OR(((rt0.c4) IS FALSE))))AND(0.7668553629117799)))OR(CAST(rt0.c3 AS NUMERIC))))OR((rt0.c3 IN (rt0.c1, rt0.c2)))))OR(0.3873074353034809))) IS TRUE)  as count FROM rt0 ORDER BY (((('K}Zry뽺㘲Wr') BETWEEN (rt0.c2) AND (rt0.c0)))LIKE(rt0.c1)) ASC);
SELECT ALL * FROM rt0 WHERE (((((((((((((0.2627473988303116)OR(CASE WHEN rt0.c5 THEN rt0.c5 END)))OR(((rt0.c4) IS FALSE))))AND(0.7668553629117799)))OR(CAST(rt0.c3 AS NUMERIC))))OR((rt0.c3 IN (rt0.c1, rt0.c2)))))OR(0.3873074353034809))) ORDER BY (((('K}Zry뽺㘲Wr') BETWEEN (rt0.c2) AND (rt0.c0)))LIKE(rt0.c1)) ASC;
SELECT COUNT(*) FROM rt0, vt1 CROSS JOIN rt1 ON CAST(rt0.c2 COLLATE NOCASE AS BLOB) WHERE (CAST(((rt0.c2)IS(rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)IS(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN rt1 ON CAST(rt0.c2 COLLATE NOCASE AS BLOB));
SELECT COUNT(*) FROM rt0, vt1 CROSS JOIN rt1 ON CAST(rt0.c2 COLLATE NOCASE AS BLOB) WHERE (CAST(((rt0.c2)IS(rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)IS(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN rt1 ON CAST(rt0.c2 COLLATE NOCASE AS BLOB));
SELECT COUNT(*) FROM rt0, vt1 CROSS JOIN rt1 ON CAST(rt0.c2 COLLATE NOCASE AS BLOB) WHERE (CAST(((rt0.c2)IS(rt1.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (json_extract(((rt0.c1)>(rt1.c2)), ((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((json_extract(((rt0.c1)>(rt1.c2)), ((rt0.c0) IS FALSE))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (json_extract(((rt0.c1)>(rt1.c2)), ((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((json_extract(((rt0.c1)>(rt1.c2)), ((rt0.c0) IS FALSE))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (json_extract(((rt0.c1)>(rt1.c2)), ((rt0.c0) IS FALSE)));
SELECT ALL * FROM rt1 WHERE (CASE WHEN NULL THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)) END) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL * FROM rt1 WHERE (CASE WHEN NULL THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)) END) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL * FROM rt1 WHERE (CASE WHEN NULL THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)) END);
SELECT COUNT(*) FROM rt1 WHERE (CASE CASE rt1.c2  WHEN rt1.c4 THEN rt1.c1 END  WHEN (NOT (rt1.c3)) THEN LIKELIHOOD(rt1.c0, 0.9146231640734297) WHEN ((NULL)*(rt1.c4)) THEN ((rt1.c3)GLOB(rt1.c3)) WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c3)) THEN ((rt1.c0)/(rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt1.c2  WHEN rt1.c4 THEN rt1.c1 END  WHEN (NOT (rt1.c3)) THEN LIKELIHOOD(rt1.c0, 0.9146231640734297) WHEN ((NULL)*(rt1.c4)) THEN ((rt1.c3)GLOB(rt1.c3)) WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c3)) THEN ((rt1.c0)/(rt1.c4)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE CASE rt1.c2  WHEN rt1.c4 THEN rt1.c1 END  WHEN (NOT (rt1.c3)) THEN LIKELIHOOD(rt1.c0, 0.9146231640734297) WHEN ((NULL)*(rt1.c4)) THEN ((rt1.c3)GLOB(rt1.c3)) WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c3)) THEN ((rt1.c0)/(rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt1.c2  WHEN rt1.c4 THEN rt1.c1 END  WHEN (NOT (rt1.c3)) THEN LIKELIHOOD(rt1.c0, 0.9146231640734297) WHEN ((NULL)*(rt1.c4)) THEN ((rt1.c3)GLOB(rt1.c3)) WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c3)) THEN ((rt1.c0)/(rt1.c4)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE CASE rt1.c2  WHEN rt1.c4 THEN rt1.c1 END  WHEN (NOT (rt1.c3)) THEN LIKELIHOOD(rt1.c0, 0.9146231640734297) WHEN ((NULL)*(rt1.c4)) THEN ((rt1.c3)GLOB(rt1.c3)) WHEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c3)) THEN ((rt1.c0)/(rt1.c4)) END);
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) IS FALSE))))AND(((vt1.c0)-(vt1.c0))))) ORDER BY CASE WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) IS FALSE))))AND(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c0) IS FALSE) END);
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) IS FALSE))))AND(((vt1.c0)-(vt1.c0))))) ORDER BY CASE WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) IS FALSE))))AND(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c0) IS FALSE) END);
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) IS FALSE))))AND(((vt1.c0)-(vt1.c0))))) ORDER BY CASE WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c0) IS FALSE) END;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)+(rt0.c1)) IN ((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)+(rt0.c1)) IN ((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)+(rt0.c1)) IN ((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)+(rt0.c1)) IN ((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)+(rt0.c1)) IN ((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT ALL * FROM rt0 WHERE (((UPPER(rt0.c1)) ISNULL)) ORDER BY ((((rt0.c4)<=(rt0.c5)))||(((rt0.c2)GLOB(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(rt0.c1)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)<=(rt0.c5)))||(((rt0.c2)GLOB(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((UPPER(rt0.c1)) ISNULL)) ORDER BY ((((rt0.c4)<=(rt0.c5)))||(((rt0.c2)GLOB(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(rt0.c1)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)<=(rt0.c5)))||(((rt0.c2)GLOB(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((UPPER(rt0.c1)) ISNULL)) ORDER BY ((((rt0.c4)<=(rt0.c5)))||(((rt0.c2)GLOB(rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)||(((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)||(((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)||(((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)||(((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)||(((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (rt0.c3);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((rt0.c5) IS TRUE) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5) IS TRUE) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((rt0.c5) IS TRUE) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5) IS TRUE) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((rt0.c5) IS TRUE) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON CAST(rt0.c4 AS TEXT) WHERE ((((rt1.c1 IN (rt0.c0)))IS(((((rt0.c4)AND(rt0.c5)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN (rt0.c0)))IS(((((rt0.c4)AND(rt0.c5)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON CAST(rt0.c4 AS TEXT));
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON CAST(rt0.c4 AS TEXT) WHERE ((((rt1.c1 IN (rt0.c0)))IS(((((rt0.c4)AND(rt0.c5)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN (rt0.c0)))IS(((((rt0.c4)AND(rt0.c5)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON CAST(rt0.c4 AS TEXT));
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON CAST(rt0.c4 AS TEXT) WHERE ((((rt1.c1 IN (rt0.c0)))IS(((((rt0.c4)AND(rt0.c5)))OR(rt1.c2)))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c3 COLLATE RTRIM ELSE (((rt0.c2, rt0.c4, rt0.c5))<>((rt0.c2, rt0.c3, rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c3 COLLATE RTRIM ELSE (((rt0.c2, rt0.c4, rt0.c5))<>((rt0.c2, rt0.c3, rt0.c3))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c3 COLLATE RTRIM ELSE (((rt0.c2, rt0.c4, rt0.c5))<>((rt0.c2, rt0.c3, rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c3 COLLATE RTRIM ELSE (((rt0.c2, rt0.c4, rt0.c5))<>((rt0.c2, rt0.c3, rt0.c3))) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c3 COLLATE RTRIM ELSE (((rt0.c2, rt0.c4, rt0.c5))<>((rt0.c2, rt0.c3, rt0.c3))) END);
SELECT ALL * FROM vt1 WHERE (((TRIM(vt1.c0, vt1.c0))%(ROUND(vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt1.c0, vt1.c0))%(ROUND(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((TRIM(vt1.c0, vt1.c0))%(ROUND(vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt1.c0, vt1.c0))%(ROUND(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((TRIM(vt1.c0, vt1.c0))%(ROUND(vt1.c0, vt1.c0))));
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((x'e49a' IN ())) ORDER BY rt1.c3  NULLS LAST, ((((CAST(rt1.c1 AS INTEGER))OR(rt1.c3)))AND(((vt1.c0)<=(0X5561a653)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'e49a' IN ())) IS TRUE)  as count FROM rt1, vt1 ORDER BY rt1.c3  NULLS LAST, ((((CAST(rt1.c1 AS INTEGER))OR(rt1.c3)))AND(((vt1.c0)<=(0x5561a653)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((x'e49a' IN ())) ORDER BY rt1.c3  NULLS LAST, ((((CAST(rt1.c1 AS INTEGER))OR(rt1.c3)))AND(((vt1.c0)<=(0X5561a653)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'e49a' IN ())) IS TRUE)  as count FROM rt1, vt1 ORDER BY rt1.c3  NULLS LAST, ((((CAST(rt1.c1 AS INTEGER))OR(rt1.c3)))AND(((vt1.c0)<=(0x5561a653)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((x'e49a' IN ())) ORDER BY rt1.c3  NULLS LAST, ((((CAST(rt1.c1 AS INTEGER))OR(rt1.c3)))AND(((vt1.c0)<=(0X5561a653)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN rt1 ON ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) COLLATE NOCASE WHERE (CAST(((rt1.c2)-(rt1.c4)) AS NUMERIC)) ORDER BY '-1202720499' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)-(rt1.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN rt1 ON ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) COLLATE NOCASE ORDER BY '-1202720499' DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN rt1 ON ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) COLLATE NOCASE WHERE (CAST(((rt1.c2)-(rt1.c4)) AS NUMERIC)) ORDER BY '-1202720499' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)-(rt1.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN rt1 ON ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) COLLATE NOCASE ORDER BY '-1202720499' DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN rt1 ON ((((rt0.c3)AND(rt0.c3)))AND(rt1.c2)) COLLATE NOCASE WHERE (CAST(((rt1.c2)-(rt1.c4)) AS NUMERIC)) ORDER BY '-1202720499' DESC;
SELECT COUNT(*) FROM vt1, rt1 LEFT OUTER JOIN rt0 ON CAST(((NULL)LIKE(rt1.c3)) AS NUMERIC) WHERE (((rt0.c3)IS NOT(rt1.c4)) COLLATE BINARY) ORDER BY (((((rt0.c3)AND(rt1.c0)))AND(rt0.c4)) IN (CAST(NULL AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)IS NOT(rt1.c4)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1 LEFT OUTER JOIN rt0 ON CAST(((NULL)LIKE(rt1.c3)) AS NUMERIC) ORDER BY (((((rt0.c3)AND(rt1.c0)))AND(rt0.c4)) IN (CAST(NULL AS NUMERIC))) ASC);
SELECT COUNT(*) FROM vt1, rt1 LEFT OUTER JOIN rt0 ON CAST(((NULL)LIKE(rt1.c3)) AS NUMERIC) WHERE (((rt0.c3)IS NOT(rt1.c4)) COLLATE BINARY) ORDER BY (((((rt0.c3)AND(rt1.c0)))AND(rt0.c4)) IN (CAST(NULL AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)IS NOT(rt1.c4)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1 LEFT OUTER JOIN rt0 ON CAST(((NULL)LIKE(rt1.c3)) AS NUMERIC) ORDER BY (((((rt0.c3)AND(rt1.c0)))AND(rt0.c4)) IN (CAST(NULL AS NUMERIC))) ASC);
SELECT COUNT(*) FROM vt1, rt1 LEFT OUTER JOIN rt0 ON CAST(((NULL)LIKE(rt1.c3)) AS NUMERIC) WHERE (((rt0.c3)IS NOT(rt1.c4)) COLLATE BINARY) ORDER BY (((((rt0.c3)AND(rt1.c0)))AND(rt0.c4)) IN (CAST(NULL AS NUMERIC))) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((x'') ISNULL))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) ORDER BY ((UNLIKELY(DISTINCT vt1.c0))<=((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((x'') ISNULL))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((UNLIKELY(DISTINCT vt1.c0))<=((NOT (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((x'') ISNULL))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) ORDER BY ((UNLIKELY(DISTINCT vt1.c0))<=((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((x'') ISNULL))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((UNLIKELY(DISTINCT vt1.c0))<=((NOT (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((x'') ISNULL))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) ORDER BY ((UNLIKELY(DISTINCT vt1.c0))<=((NOT (vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('465636337');
SELECT SUM(count) FROM (SELECT (('465636337') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('465636337');
SELECT SUM(count) FROM (SELECT (('465636337') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('465636337');
SELECT ALL * FROM vt1 WHERE (((vt1.c0)>(vt1.c0)) COLLATE NOCASE) ORDER BY ((vt1.c0)|(vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)|(vt1.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)>(vt1.c0)) COLLATE NOCASE) ORDER BY ((vt1.c0)|(vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)|(vt1.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)>(vt1.c0)) COLLATE NOCASE) ORDER BY ((vt1.c0)|(vt1.c0)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (((vt1.c0)OR(vt1.c0))) AND (((vt1.c0) NOT NULL)))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))-((NOT (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) NOT BETWEEN (((vt1.c0)OR(vt1.c0))) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))-((NOT (vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (((vt1.c0)OR(vt1.c0))) AND (((vt1.c0) NOT NULL)))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))-((NOT (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) NOT BETWEEN (((vt1.c0)OR(vt1.c0))) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))-((NOT (vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) NOT BETWEEN (((vt1.c0)OR(vt1.c0))) AND (((vt1.c0) NOT NULL)))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))-((NOT (vt1.c0)))) DESC;
SELECT * FROM rt1, rt0 WHERE ((((rt1.c2, -2012033036, rt1.c2)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c3)))AND('845133307')), ((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c1)), ((((rt1.c4)OR(rt1.c4)))OR(rt0.c3)))) AND (((~ ('')), (rt1.c2 IN ()), ((rt1.c3) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2, -2012033036, rt1.c2)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c3)))AND('845133307')), ((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c1)), ((((rt1.c4)OR(rt1.c4)))OR(rt0.c3)))) AND (((~ ('')), (rt1.c2 IN ()), ((rt1.c3) IS FALSE))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((rt1.c2, -2012033036, rt1.c2)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c3)))AND('845133307')), ((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c1)), ((((rt1.c4)OR(rt1.c4)))OR(rt0.c3)))) AND (((~ ('')), (rt1.c2 IN ()), ((rt1.c3) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2, -2012033036, rt1.c2)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c3)))AND('845133307')), ((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c1)), ((((rt1.c4)OR(rt1.c4)))OR(rt0.c3)))) AND (((~ ('')), (rt1.c2 IN ()), ((rt1.c3) IS FALSE))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((rt1.c2, -2012033036, rt1.c2)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))OR(rt1.c2)))OR(rt0.c3)))AND('845133307')), ((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c1)), ((((rt1.c4)OR(rt1.c4)))OR(rt0.c3)))) AND (((~ ('')), (rt1.c2 IN ()), ((rt1.c3) IS FALSE)))));
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY (((rt0.c5, x'1245', rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c3)), CASE rt0.c0  WHEN -9.50848031E8 THEN rt0.c3 END, UNLIKELY(0.07982972209445871))) AND (((((rt0.c4, NULL, rt0.c5, vt1.c0, rt0.c2))!=((rt0.c1, rt0.c0, rt0.c1, NULL, x''))), rt0.c5, rt0.c1 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c5, x'1245', rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c3)), CASE rt0.c0  WHEN -9.50848031E8 THEN rt0.c3 END, UNLIKELY(0.07982972209445871))) AND (((((rt0.c4, NULL, rt0.c5, vt1.c0, rt0.c2))!=((rt0.c1, rt0.c0, rt0.c1, NULL, x''))), rt0.c5, rt0.c1 COLLATE NOCASE))) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY (((rt0.c5, x'1245', rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c3)), CASE rt0.c0  WHEN -9.50848031E8 THEN rt0.c3 END, UNLIKELY(0.07982972209445871))) AND (((((rt0.c4, NULL, rt0.c5, vt1.c0, rt0.c2))!=((rt0.c1, rt0.c0, rt0.c1, NULL, x''))), rt0.c5, rt0.c1 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c5, x'1245', rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c3)), CASE rt0.c0  WHEN -9.50848031E8 THEN rt0.c3 END, UNLIKELY(0.07982972209445871))) AND (((((rt0.c4, NULL, rt0.c5, vt1.c0, rt0.c2))!=((rt0.c1, rt0.c0, rt0.c1, NULL, x''))), rt0.c5, rt0.c1 COLLATE NOCASE))) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY (((rt0.c5, x'1245', rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c3)), CASE rt0.c0  WHEN -9.50848031E8 THEN rt0.c3 END, UNLIKELY(0.07982972209445871))) AND (((((rt0.c4, NULL, rt0.c5, vt1.c0, rt0.c2))!=((rt0.c1, rt0.c0, rt0.c1, NULL, x''))), rt0.c5, rt0.c1 COLLATE NOCASE))) DESC;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0, (((CAST(vt1.c0 AS TEXT)))==((ABS(vt1.c0))))  NULLS FIRST, LIKELIHOOD((vt1.c0 IN ()), 0.1819010289397165)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (((CAST(vt1.c0 AS TEXT)))==((ABS(vt1.c0))))  NULLS FIRST, LIKELIHOOD((vt1.c0 IN ()), 0.1819010289397165)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0, (((CAST(vt1.c0 AS TEXT)))==((ABS(vt1.c0))))  NULLS FIRST, LIKELIHOOD((vt1.c0 IN ()), 0.1819010289397165)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (((CAST(vt1.c0 AS TEXT)))==((ABS(vt1.c0))))  NULLS FIRST, LIKELIHOOD((vt1.c0 IN ()), 0.1819010289397165)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0, (((CAST(vt1.c0 AS TEXT)))==((ABS(vt1.c0))))  NULLS FIRST, LIKELIHOOD((vt1.c0 IN ()), 0.1819010289397165)  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND (((vt1.c0 IN (rt1.c3, rt1.c1)))))) ORDER BY (((((NOT (rt1.c1)))OR(CAST(rt1.c3 AS REAL))))AND((((rt0.c3, rt0.c3, vt1.c0))=((rt1.c0, rt0.c3, rt0.c0))))), CASE WHEN rt0.c4 COLLATE BINARY THEN HEX(rt1.c3) ELSE (((rt0.c1, rt0.c4, rt0.c0)) NOT BETWEEN ((')8௱1+e', rt0.c3, rt1.c1)) AND ((rt1.c4, rt1.c3, rt1.c4))) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND (((vt1.c0 IN (rt1.c3, rt1.c1)))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (((((NOT (rt1.c1)))OR(CAST(rt1.c3 AS REAL))))AND((((rt0.c3, rt0.c3, vt1.c0))==((rt1.c0, rt0.c3, rt0.c0))))), CASE WHEN rt0.c4 COLLATE BINARY THEN HEX(rt1.c3) ELSE (((rt0.c1, rt0.c4, rt0.c0)) NOT BETWEEN ((')8௱1+e', rt0.c3, rt1.c1)) AND ((rt1.c4, rt1.c3, rt1.c4))) END ASC);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND (((vt1.c0 IN (rt1.c3, rt1.c1)))))) ORDER BY (((((NOT (rt1.c1)))OR(CAST(rt1.c3 AS REAL))))AND((((rt0.c3, rt0.c3, vt1.c0))=((rt1.c0, rt0.c3, rt0.c0))))), CASE WHEN rt0.c4 COLLATE BINARY THEN HEX(rt1.c3) ELSE (((rt0.c1, rt0.c4, rt0.c0)) NOT BETWEEN ((')8௱1+e', rt0.c3, rt1.c1)) AND ((rt1.c4, rt1.c3, rt1.c4))) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND (((vt1.c0 IN (rt1.c3, rt1.c1)))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (((((NOT (rt1.c1)))OR(CAST(rt1.c3 AS REAL))))AND((((rt0.c3, rt0.c3, vt1.c0))==((rt1.c0, rt0.c3, rt0.c0))))), CASE WHEN rt0.c4 COLLATE BINARY THEN HEX(rt1.c3) ELSE (((rt0.c1, rt0.c4, rt0.c0)) NOT BETWEEN ((')8௱1+e', rt0.c3, rt1.c1)) AND ((rt1.c4, rt1.c3, rt1.c4))) END ASC);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND (((vt1.c0 IN (rt1.c3, rt1.c1)))))) ORDER BY (((((NOT (rt1.c1)))OR(CAST(rt1.c3 AS REAL))))AND((((rt0.c3, rt0.c3, vt1.c0))=((rt1.c0, rt0.c3, rt0.c0))))), CASE WHEN rt0.c4 COLLATE BINARY THEN HEX(rt1.c3) ELSE (((rt0.c1, rt0.c4, rt0.c0)) NOT BETWEEN ((')8௱1+e', rt0.c3, rt1.c1)) AND ((rt1.c4, rt1.c3, rt1.c4))) END ASC;
SELECT * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt0.c5) BETWEEN (rt1.c4) AND (rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c5) BETWEEN (rt1.c4) AND (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt0.c5) BETWEEN (rt1.c4) AND (rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c5) BETWEEN (rt1.c4) AND (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt0.c5) BETWEEN (rt1.c4) AND (rt1.c0)) AS BLOB));
SELECT ALL * FROM rt0, vt1 WHERE (((HEX(DISTINCT rt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((HEX(DISTINCT rt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((HEX(DISTINCT rt0.c0)) NOTNULL));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (((((rt1.c1 IN ()))AND(((rt1.c2)IS(rt0.c4)))))OR(((NULL) NOT BETWEEN (0x700c6442) AND (x'')))) WHERE ((NOT (GLOB(rt0.c2, rt0.c2)))) ORDER BY CASE WHEN CAST(rt0.c1 AS BLOB) THEN rt1.c2 WHEN CAST(rt0.c5 AS REAL) THEN rt1.c4 WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN (~ (rt0.c4)) ELSE (+ (rt1.c3)) END  NULLS LAST, 0.15043863615181619  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (GLOB(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((((rt1.c1 IN ()))AND(((rt1.c2)IS(rt0.c4)))))OR(((NULL) NOT BETWEEN (0x700c6442) AND (x'')))) ORDER BY CASE WHEN CAST(rt0.c1 AS BLOB) THEN rt1.c2 WHEN CAST(rt0.c5 AS REAL) THEN rt1.c4 WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN (~ (rt0.c4)) ELSE (+ (rt1.c3)) END  NULLS LAST, 0.15043863615181619  NULLS LAST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (((((rt1.c1 IN ()))AND(((rt1.c2)IS(rt0.c4)))))OR(((NULL) NOT BETWEEN (0x700c6442) AND (x'')))) WHERE ((NOT (GLOB(rt0.c2, rt0.c2)))) ORDER BY CASE WHEN CAST(rt0.c1 AS BLOB) THEN rt1.c2 WHEN CAST(rt0.c5 AS REAL) THEN rt1.c4 WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN (~ (rt0.c4)) ELSE (+ (rt1.c3)) END  NULLS LAST, 0.15043863615181619  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (GLOB(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((((rt1.c1 IN ()))AND(((rt1.c2)IS(rt0.c4)))))OR(((NULL) NOT BETWEEN (0x700c6442) AND (x'')))) ORDER BY CASE WHEN CAST(rt0.c1 AS BLOB) THEN rt1.c2 WHEN CAST(rt0.c5 AS REAL) THEN rt1.c4 WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN (~ (rt0.c4)) ELSE (+ (rt1.c3)) END  NULLS LAST, 0.15043863615181619  NULLS LAST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (((((rt1.c1 IN ()))AND(((rt1.c2)IS(rt0.c4)))))OR(((NULL) NOT BETWEEN (0x700c6442) AND (x'')))) WHERE ((NOT (GLOB(rt0.c2, rt0.c2)))) ORDER BY CASE WHEN CAST(rt0.c1 AS BLOB) THEN rt1.c2 WHEN CAST(rt0.c5 AS REAL) THEN rt1.c4 WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN (~ (rt0.c4)) ELSE (+ (rt1.c3)) END  NULLS LAST, 0.15043863615181619  NULLS LAST;
SELECT COUNT(*) FROM rt1 CROSS JOIN vt1 ON LOWER(((x'') NOTNULL)) WHERE (json_array(((((rt1.c1)OR(rt1.c3)))OR(vt1.c0)), ((rt1.c4)<(rt1.c4)), (vt1.c0 IN ()), ((vt1.c0)<=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_array(((((rt1.c1)OR(rt1.c3)))OR(vt1.c0)), ((rt1.c4)<(rt1.c4)), (vt1.c0 IN ()), ((vt1.c0)<=(vt1.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON LOWER(((x'') NOTNULL)));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt1 ON LOWER(((x'') NOTNULL)) WHERE (json_array(((((rt1.c1)OR(rt1.c3)))OR(vt1.c0)), ((rt1.c4)<(rt1.c4)), (vt1.c0 IN ()), ((vt1.c0)<=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_array(((((rt1.c1)OR(rt1.c3)))OR(vt1.c0)), ((rt1.c4)<(rt1.c4)), (vt1.c0 IN ()), ((vt1.c0)<=(vt1.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON LOWER(((x'') NOTNULL)));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt1 ON LOWER(((x'') NOTNULL)) WHERE (json_array(((((rt1.c1)OR(rt1.c3)))OR(vt1.c0)), ((rt1.c4)<(rt1.c4)), (vt1.c0 IN ()), ((vt1.c0)<=(vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY x'1144'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY x'1144'  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY x'1144'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY x'1144'  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY x'1144'  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (GLOB((vt1.c0 IN ()), ((((((((x'')OR(rt0.c4)))AND(rt0.c5)))AND(vt1.c0)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((GLOB((vt1.c0 IN ()), ((((((((x'')OR(rt0.c4)))AND(rt0.c5)))AND(vt1.c0)))OR(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (GLOB((vt1.c0 IN ()), ((((((((x'')OR(rt0.c4)))AND(rt0.c5)))AND(vt1.c0)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((GLOB((vt1.c0 IN ()), ((((((((x'')OR(rt0.c4)))AND(rt0.c5)))AND(vt1.c0)))OR(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (GLOB((vt1.c0 IN ()), ((((((((x'')OR(rt0.c4)))AND(rt0.c5)))AND(vt1.c0)))OR(rt0.c2))));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN (((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE RTRIM IN (((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN (((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE RTRIM IN (((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN (((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT * FROM rt0 WHERE ((+ (((rt0.c4)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c4)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((rt0.c4)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c4)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((rt0.c4)LIKE(rt0.c0)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt1 ON (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c3 END IN ()) RIGHT OUTER JOIN rt0 ON NULL WHERE (((((rt0.c3 COLLATE RTRIM)OR((rt1.c3 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c4 END))) ORDER BY (((rt1.c3)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) AND ((rt0.c5 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 COLLATE RTRIM)OR((rt1.c3 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c4 END))) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c3 END IN ()) RIGHT OUTER JOIN rt0 ON NULL ORDER BY (((rt1.c3)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) AND ((rt0.c5 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt1 ON (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c3 END IN ()) RIGHT OUTER JOIN rt0 ON NULL WHERE (((((rt0.c3 COLLATE RTRIM)OR((rt1.c3 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c4 END))) ORDER BY (((rt1.c3)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) AND ((rt0.c5 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 COLLATE RTRIM)OR((rt1.c3 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c4 END))) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c3 END IN ()) RIGHT OUTER JOIN rt0 ON NULL ORDER BY (((rt1.c3)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) AND ((rt0.c5 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt1 ON (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c3 END IN ()) RIGHT OUTER JOIN rt0 ON NULL WHERE (((((rt0.c3 COLLATE RTRIM)OR((rt1.c3 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c4 END))) ORDER BY (((rt1.c3)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) AND ((rt0.c5 COLLATE RTRIM)));
SELECT * FROM rt1, vt1 WHERE (QUOTE('孟'));
SELECT SUM(count) FROM (SELECT ((QUOTE('孟')) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (QUOTE('孟'));
SELECT SUM(count) FROM (SELECT ((QUOTE('孟')) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (QUOTE('孟'));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (LOWER(((rt1.c1)*(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt1.c1)*(rt1.c0)))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (LOWER(((rt1.c1)*(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt1.c1)*(rt1.c0)))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (LOWER(((rt1.c1)*(rt1.c0))));
SELECT ALL * FROM vt1, rt1, rt0 WHERE (NULL) ORDER BY rt0.c4 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY rt0.c4 ASC);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (NULL) ORDER BY rt0.c4 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY rt0.c4 ASC);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (NULL) ORDER BY rt0.c4 ASC;
SELECT * FROM rt1, rt0 WHERE (((((((rt0.c2)<=(rt0.c3)))OR(((NULL)<=(rt1.c0)))))OR(CAST(rt0.c5 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)<=(rt0.c3)))OR(((NULL)<=(rt1.c0)))))OR(CAST(rt0.c5 AS BLOB)))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((((rt0.c2)<=(rt0.c3)))OR(((NULL)<=(rt1.c0)))))OR(CAST(rt0.c5 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)<=(rt0.c3)))OR(((NULL)<=(rt1.c0)))))OR(CAST(rt0.c5 AS BLOB)))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((((rt0.c2)<=(rt0.c3)))OR(((NULL)<=(rt1.c0)))))OR(CAST(rt0.c5 AS BLOB))));
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ('');
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (TRIM(((rt0.c2)-(NULL)), CAST(rt0.c3 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c2)-(NULL)), CAST(rt0.c3 AS TEXT))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (TRIM(((rt0.c2)-(NULL)), CAST(rt0.c3 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c2)-(NULL)), CAST(rt0.c3 AS TEXT))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (TRIM(((rt0.c2)-(NULL)), CAST(rt0.c3 AS TEXT)));
SELECT ALL COUNT(*) FROM vt1, rt1 NOT INDEXED, rt0 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt0.c0))) NOT BETWEEN (((rt1.c3)>(rt0.c2))) AND (((((rt1.c3)AND(rt1.c3)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt0.c0))) NOT BETWEEN (((rt1.c3)>(rt0.c2))) AND (((((rt1.c3)AND(rt1.c3)))OR(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt1 NOT INDEXED, rt0 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt0.c0))) NOT BETWEEN (((rt1.c3)>(rt0.c2))) AND (((((rt1.c3)AND(rt1.c3)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt0.c0))) NOT BETWEEN (((rt1.c3)>(rt0.c2))) AND (((((rt1.c3)AND(rt1.c3)))OR(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt1 NOT INDEXED, rt0 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt0.c0))) NOT BETWEEN (((rt1.c3)>(rt0.c2))) AND (((((rt1.c3)AND(rt1.c3)))OR(rt1.c2)))));
SELECT ALL * FROM vt1, rt1 WHERE (((NOT (rt1.c4)) IN (rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c4)) IN (rt1.c0))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (((NOT (rt1.c4)) IN (rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c4)) IN (rt1.c0))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (((NOT (rt1.c4)) IN (rt1.c0)));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)) END) ORDER BY ((((((NULL) BETWEEN (rt1.c2) AND (vt1.c0)))AND((vt1.c0 IN ()))))OR(((rt0.c4)|(rt1.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)) END) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((((((NULL) BETWEEN (rt1.c2) AND (vt1.c0)))AND((vt1.c0 IN ()))))OR(((rt0.c4)|(rt1.c4)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)) END) ORDER BY ((((((NULL) BETWEEN (rt1.c2) AND (vt1.c0)))AND((vt1.c0 IN ()))))OR(((rt0.c4)|(rt1.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)) END) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((((((NULL) BETWEEN (rt1.c2) AND (vt1.c0)))AND((vt1.c0 IN ()))))OR(((rt0.c4)|(rt1.c4)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)) END) ORDER BY ((((((NULL) BETWEEN (rt1.c2) AND (vt1.c0)))AND((vt1.c0 IN ()))))OR(((rt0.c4)|(rt1.c4)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY LOWER(DISTINCT ((rt0.c0)IS(rt0.c5)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY LOWER(DISTINCT ((rt0.c0)IS(rt0.c5))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY LOWER(DISTINCT ((rt0.c0)IS(rt0.c5)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY LOWER(DISTINCT ((rt0.c0)IS(rt0.c5))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY LOWER(DISTINCT ((rt0.c0)IS(rt0.c5)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3) ISNULL), (((rt0.c5, '1126883601', rt0.c0))<((rt0.c1, rt0.c4, rt0.c2))), NULL))==((((rt0.c3) BETWEEN (rt0.c2) AND ('-1990648947')), ((rt0.c4) IS FALSE), rt0.c4 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) ISNULL), (((rt0.c5, '1126883601', rt0.c0))<((rt0.c1, rt0.c4, rt0.c2))), NULL))==((((rt0.c3) BETWEEN (rt0.c2) AND ('-1990648947')), ((rt0.c4) IS FALSE), rt0.c4 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3) ISNULL), (((rt0.c5, '1126883601', rt0.c0))<((rt0.c1, rt0.c4, rt0.c2))), NULL))==((((rt0.c3) BETWEEN (rt0.c2) AND ('-1990648947')), ((rt0.c4) IS FALSE), rt0.c4 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) ISNULL), (((rt0.c5, '1126883601', rt0.c0))<((rt0.c1, rt0.c4, rt0.c2))), NULL))==((((rt0.c3) BETWEEN (rt0.c2) AND ('-1990648947')), ((rt0.c4) IS FALSE), rt0.c4 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3) ISNULL), (((rt0.c5, '1126883601', rt0.c0))<((rt0.c1, rt0.c4, rt0.c2))), NULL))==((((rt0.c3) BETWEEN (rt0.c2) AND ('-1990648947')), ((rt0.c4) IS FALSE), rt0.c4 COLLATE NOCASE))));
SELECT COUNT(*) FROM rt1, vt1 WHERE (((rt1.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOTNULL)) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((rt1.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) NOTNULL)) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((rt1.c2) NOTNULL));
SELECT * FROM rt1, rt0, vt1 WHERE (HEX((('-551129467') IS FALSE)));
SELECT SUM(count) FROM (SELECT ((HEX((('-551129467') IS FALSE))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (HEX((('-551129467') IS FALSE)));
SELECT SUM(count) FROM (SELECT ((HEX((('-551129467') IS FALSE))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (HEX((('-551129467') IS FALSE)));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c2);
SELECT * FROM rt0, rt1 WHERE (((x'333e')<=(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((x'333e')<=(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((x'333e')<=(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((x'333e')<=(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((x'333e')<=(CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM rt1, vt1 WHERE (((IFNULL(rt1.c3, rt1.c0))>=(COALESCE(DISTINCT rt1.c3, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt1.c3, rt1.c0))>=(COALESCE(DISTINCT rt1.c3, rt1.c1)))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (((IFNULL(rt1.c3, rt1.c0))>=(COALESCE(DISTINCT rt1.c3, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt1.c3, rt1.c0))>=(COALESCE(DISTINCT rt1.c3, rt1.c1)))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (((IFNULL(rt1.c3, rt1.c0))>=(COALESCE(DISTINCT rt1.c3, rt1.c1))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c2)|(rt0.c4))) BETWEEN (((rt0.c2)>=(rt1.c4))) AND (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(rt0.c4))) BETWEEN (((rt0.c2)>=(rt1.c4))) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c2)|(rt0.c4))) BETWEEN (((rt0.c2)>=(rt1.c4))) AND (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(rt0.c4))) BETWEEN (((rt0.c2)>=(rt1.c4))) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c2)|(rt0.c4))) BETWEEN (((rt0.c2)>=(rt1.c4))) AND (((rt0.c1) NOTNULL))));
SELECT * FROM rt0 WHERE ((((((rt0.c3)!=(rt0.c3))))<=((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)<>(rt0.c3))))<=((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c3)!=(rt0.c3))))<=((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)<>(rt0.c3))))<=((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c3)!=(rt0.c3))))<=((rt0.c2 COLLATE NOCASE))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c3) ISNULL) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c3) ISNULL) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((+ (rt0.c2)) IN ((- (rt0.c0)))) INNER JOIN rt1 ON CASE rt0.c1 COLLATE BINARY  WHEN 1358395476 THEN ((rt0.c4)>(rt1.c0)) ELSE CASE rt1.c1  WHEN rt0.c5 THEN rt1.c0 WHEN rt1.c4 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c3 ELSE rt0.c4 END END WHERE (((rt1.c2)OR(rt0.c5)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c2)OR(rt0.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((+ (rt0.c2)) IN ((- (rt0.c0)))) INNER JOIN rt1 ON CASE rt0.c1 COLLATE BINARY  WHEN 1358395476 THEN ((rt0.c4)>(rt1.c0)) ELSE CASE rt1.c1  WHEN rt0.c5 THEN rt1.c0 WHEN rt1.c4 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c3 ELSE rt0.c4 END END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((+ (rt0.c2)) IN ((- (rt0.c0)))) INNER JOIN rt1 ON CASE rt0.c1 COLLATE BINARY  WHEN 1358395476 THEN ((rt0.c4)>(rt1.c0)) ELSE CASE rt1.c1  WHEN rt0.c5 THEN rt1.c0 WHEN rt1.c4 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c3 ELSE rt0.c4 END END WHERE (((rt1.c2)OR(rt0.c5)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c2)OR(rt0.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((+ (rt0.c2)) IN ((- (rt0.c0)))) INNER JOIN rt1 ON CASE rt0.c1 COLLATE BINARY  WHEN 1358395476 THEN ((rt0.c4)>(rt1.c0)) ELSE CASE rt1.c1  WHEN rt0.c5 THEN rt1.c0 WHEN rt1.c4 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c3 ELSE rt0.c4 END END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((+ (rt0.c2)) IN ((- (rt0.c0)))) INNER JOIN rt1 ON CASE rt0.c1 COLLATE BINARY  WHEN 1358395476 THEN ((rt0.c4)>(rt1.c0)) ELSE CASE rt1.c1  WHEN rt0.c5 THEN rt1.c0 WHEN rt1.c4 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c3 ELSE rt0.c4 END END WHERE (((rt1.c2)OR(rt0.c5)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT * FROM rt1, rt0 LEFT OUTER JOIN vt1 ON (- (((vt1.c0) BETWEEN (rt0.c1) AND (rt1.c0)))) WHERE (((CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt1.c4 THEN rt0.c3 WHEN 0.030549045306048184 THEN rt0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt1.c4 THEN rt0.c3 WHEN 0.030549045306048184 THEN rt0.c1 END) NOTNULL)) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt1 ON (- (((vt1.c0) BETWEEN (rt0.c1) AND (rt1.c0)))));
SELECT * FROM rt1, rt0 LEFT OUTER JOIN vt1 ON (- (((vt1.c0) BETWEEN (rt0.c1) AND (rt1.c0)))) WHERE (((CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt1.c4 THEN rt0.c3 WHEN 0.030549045306048184 THEN rt0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt1.c4 THEN rt0.c3 WHEN 0.030549045306048184 THEN rt0.c1 END) NOTNULL)) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt1 ON (- (((vt1.c0) BETWEEN (rt0.c1) AND (rt1.c0)))));
SELECT * FROM rt1, rt0 LEFT OUTER JOIN vt1 ON (- (((vt1.c0) BETWEEN (rt0.c1) AND (rt1.c0)))) WHERE (((CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt1.c4 THEN rt0.c3 WHEN 0.030549045306048184 THEN rt0.c1 END) NOTNULL));
SELECT * FROM rt1, vt1 WHERE ((~ ((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE ((~ ((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE ((~ ((rt1.c0 IN ()))));
SELECT ALL * FROM rt0, rt1, vt1 WHERE (TIME(rt0.c1, rt0.c1, vt1.c0) COLLATE RTRIM) ORDER BY 0.0804233309390151 DESC;
SELECT SUM(count) FROM (SELECT ALL ((TIME(rt0.c1, rt0.c1, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY 0.0804233309390151 DESC);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (TIME(rt0.c1, rt0.c1, vt1.c0) COLLATE RTRIM) ORDER BY 0.0804233309390151 DESC;
SELECT SUM(count) FROM (SELECT ALL ((TIME(rt0.c1, rt0.c1, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY 0.0804233309390151 DESC);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (TIME(rt0.c1, rt0.c1, vt1.c0) COLLATE RTRIM) ORDER BY 0.0804233309390151 DESC;
SELECT * FROM rt0, rt1 WHERE ((((((rt0.c5)) BETWEEN ((rt0.c1)) AND ((rt0.c5)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)) BETWEEN ((rt0.c1)) AND ((rt0.c5)))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((((rt0.c5)) BETWEEN ((rt0.c1)) AND ((rt0.c5)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)) BETWEEN ((rt0.c1)) AND ((rt0.c5)))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((((rt0.c5)) BETWEEN ((rt0.c1)) AND ((rt0.c5)))) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c4 END) AND (rt1.c0))) ORDER BY CAST(rt1.c4 AS TEXT) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c4 END) AND (rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c4 AS TEXT) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c4 END) AND (rt1.c0))) ORDER BY CAST(rt1.c4 AS TEXT) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c4 END) AND (rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c4 AS TEXT) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c4 END) AND (rt1.c0))) ORDER BY CAST(rt1.c4 AS TEXT) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (NULLIF(CASE rt0.c4  WHEN rt0.c5 THEN rt1.c1 END, CAST(rt1.c0 AS TEXT))) ORDER BY (((((rt1.c1, vt1.c0, vt1.c0))==((rt1.c4, vt1.c0, rt1.c2)))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((('-228876198')GLOB(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE rt0.c4  WHEN rt0.c5 THEN rt1.c1 END, CAST(rt1.c0 AS TEXT))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (((((rt1.c1, vt1.c0, vt1.c0))==((rt1.c4, vt1.c0, rt1.c2)))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((('-228876198')GLOB(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (NULLIF(CASE rt0.c4  WHEN rt0.c5 THEN rt1.c1 END, CAST(rt1.c0 AS TEXT))) ORDER BY (((((rt1.c1, vt1.c0, vt1.c0))==((rt1.c4, vt1.c0, rt1.c2)))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((('-228876198')GLOB(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE rt0.c4  WHEN rt0.c5 THEN rt1.c1 END, CAST(rt1.c0 AS TEXT))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (((((rt1.c1, vt1.c0, vt1.c0))==((rt1.c4, vt1.c0, rt1.c2)))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((('-228876198')GLOB(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (NULLIF(CASE rt0.c4  WHEN rt0.c5 THEN rt1.c1 END, CAST(rt1.c0 AS TEXT))) ORDER BY (((((rt1.c1, vt1.c0, vt1.c0))==((rt1.c4, vt1.c0, rt1.c2)))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND ((('-228876198')GLOB(rt0.c0))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (((1650915843))>=((x''))) THEN ((vt1.c0)||(rt0.c0)) END WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (((1650915843))>=((x''))) THEN ((vt1.c0)||(rt0.c0)) END);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (((1650915843))>=((x''))) THEN ((vt1.c0)||(rt0.c0)) END WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (((1650915843))>=((x''))) THEN ((vt1.c0)||(rt0.c0)) END);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN (((1650915843))>=((x''))) THEN ((vt1.c0)||(rt0.c0)) END WHERE (rt0.c5);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((((rt0.c3) IS TRUE))AND(((rt0.c4)&(rt0.c0)))))OR(UNLIKELY(rt0.c2))))OR(CAST(rt0.c1 AS INTEGER))))AND((0.5879443368570278 IN ())))) ORDER BY (((((rt0.c3, vt1.c0, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c5, rt0.c1)) AND ((x'', vt1.c0, rt0.c5))))<>(0.9208987076767198))  NULLS LAST, (NOT (((((rt0.c5)OR(rt0.c3)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3) IS TRUE))AND(((rt0.c4)&(rt0.c0)))))OR(UNLIKELY(rt0.c2))))OR(CAST(rt0.c1 AS INTEGER))))AND((0.5879443368570278 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c3, vt1.c0, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c5, rt0.c1)) AND ((x'', vt1.c0, rt0.c5))))<>(0.9208987076767198))  NULLS LAST, (NOT (((((rt0.c5)OR(rt0.c3)))OR(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((((rt0.c3) IS TRUE))AND(((rt0.c4)&(rt0.c0)))))OR(UNLIKELY(rt0.c2))))OR(CAST(rt0.c1 AS INTEGER))))AND((0.5879443368570278 IN ())))) ORDER BY (((((rt0.c3, vt1.c0, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c5, rt0.c1)) AND ((x'', vt1.c0, rt0.c5))))<>(0.9208987076767198))  NULLS LAST, (NOT (((((rt0.c5)OR(rt0.c3)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3) IS TRUE))AND(((rt0.c4)&(rt0.c0)))))OR(UNLIKELY(rt0.c2))))OR(CAST(rt0.c1 AS INTEGER))))AND((0.5879443368570278 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c3, vt1.c0, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c5, rt0.c1)) AND ((x'', vt1.c0, rt0.c5))))<>(0.9208987076767198))  NULLS LAST, (NOT (((((rt0.c5)OR(rt0.c3)))OR(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((((rt0.c3) IS TRUE))AND(((rt0.c4)&(rt0.c0)))))OR(UNLIKELY(rt0.c2))))OR(CAST(rt0.c1 AS INTEGER))))AND((0.5879443368570278 IN ())))) ORDER BY (((((rt0.c3, vt1.c0, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c5, rt0.c1)) AND ((x'', vt1.c0, rt0.c5))))<>(0.9208987076767198))  NULLS LAST, (NOT (((((rt0.c5)OR(rt0.c3)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (CAST(((rt1.c2)/(rt1.c4)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)/(rt1.c4)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (CAST(((rt1.c2)/(rt1.c4)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)/(rt1.c4)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (CAST(((rt1.c2)/(rt1.c4)) AS BLOB));
SELECT * FROM rt0, vt1, rt1 WHERE (1417630084);
SELECT SUM(count) FROM (SELECT ALL ((1417630084) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1, rt1);
SELECT * FROM rt0, vt1, rt1 WHERE (1417630084);
SELECT SUM(count) FROM (SELECT ALL ((1417630084) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1, rt1);
SELECT * FROM rt0, vt1, rt1 WHERE (1417630084);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB))<>(((rt1.c0) BETWEEN ('/1[rb~2') AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS BLOB))<>(((rt1.c0) BETWEEN ('/1[rb~2') AND (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB))<>(((rt1.c0) BETWEEN ('/1[rb~2') AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS BLOB))<>(((rt1.c0) BETWEEN ('/1[rb~2') AND (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB))<>(((rt1.c0) BETWEEN ('/1[rb~2') AND (rt1.c3)))));
SELECT * FROM vt1, rt0, rt1 WHERE ((((vt1.c0)) BETWEEN ((((((((((rt1.c3)AND(rt0.c5)))AND(rt1.c2)))OR(rt1.c1)))OR(0.8826969894553242)))) AND ((rt1.c0 COLLATE RTRIM)))) ORDER BY (((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) IN (rt1.c4)) DESC  NULLS LAST, rt0.c4 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((((((((rt1.c3)AND(rt0.c5)))AND(rt1.c2)))OR(rt1.c1)))OR(0.8826969894553242)))) AND ((rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) IN (rt1.c4)) DESC  NULLS LAST, rt0.c4 ASC);
SELECT * FROM vt1, rt0, rt1 WHERE ((((vt1.c0)) BETWEEN ((((((((((rt1.c3)AND(rt0.c5)))AND(rt1.c2)))OR(rt1.c1)))OR(0.8826969894553242)))) AND ((rt1.c0 COLLATE RTRIM)))) ORDER BY (((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) IN (rt1.c4)) DESC  NULLS LAST, rt0.c4 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((((((((rt1.c3)AND(rt0.c5)))AND(rt1.c2)))OR(rt1.c1)))OR(0.8826969894553242)))) AND ((rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) IN (rt1.c4)) DESC  NULLS LAST, rt0.c4 ASC);
SELECT * FROM vt1, rt0, rt1 WHERE ((((vt1.c0)) BETWEEN ((((((((((rt1.c3)AND(rt0.c5)))AND(rt1.c2)))OR(rt1.c1)))OR(0.8826969894553242)))) AND ((rt1.c0 COLLATE RTRIM)))) ORDER BY (((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) IN (rt1.c4)) DESC  NULLS LAST, rt0.c4 ASC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON CASE (rt1.c3 IN (rt1.c0, rt0.c2))  WHEN NULL THEN ((((0.8386743140502816)OR(rt0.c3)))OR(rt0.c5)) ELSE (((rt0.c0))<=((rt1.c1))) END LEFT OUTER JOIN rt1 ON vt1.c0 WHERE (((rt1.c1) IS TRUE) COLLATE RTRIM) ORDER BY rt0.c4 ASC  NULLS FIRST, 0.6462283847912302 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CASE (rt1.c3 IN (rt1.c0, rt0.c2))  WHEN NULL THEN ((((0.8386743140502816)OR(rt0.c3)))OR(rt0.c5)) ELSE (((rt0.c0))<=((rt1.c1))) END LEFT OUTER JOIN rt1 ON vt1.c0 ORDER BY rt0.c4 ASC  NULLS FIRST, 0.6462283847912302 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON CASE (rt1.c3 IN (rt1.c0, rt0.c2))  WHEN NULL THEN ((((0.8386743140502816)OR(rt0.c3)))OR(rt0.c5)) ELSE (((rt0.c0))<=((rt1.c1))) END LEFT OUTER JOIN rt1 ON vt1.c0 WHERE (((rt1.c1) IS TRUE) COLLATE RTRIM) ORDER BY rt0.c4 ASC  NULLS FIRST, 0.6462283847912302 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CASE (rt1.c3 IN (rt1.c0, rt0.c2))  WHEN NULL THEN ((((0.8386743140502816)OR(rt0.c3)))OR(rt0.c5)) ELSE (((rt0.c0))<=((rt1.c1))) END LEFT OUTER JOIN rt1 ON vt1.c0 ORDER BY rt0.c4 ASC  NULLS FIRST, 0.6462283847912302 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON CASE (rt1.c3 IN (rt1.c0, rt0.c2))  WHEN NULL THEN ((((0.8386743140502816)OR(rt0.c3)))OR(rt0.c5)) ELSE (((rt0.c0))<=((rt1.c1))) END LEFT OUTER JOIN rt1 ON vt1.c0 WHERE (((rt1.c1) IS TRUE) COLLATE RTRIM) ORDER BY rt0.c4 ASC  NULLS FIRST, 0.6462283847912302 COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN -1.637021695E9 THEN ((rt1.c0) IS TRUE) ELSE '-1371620375' END) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN -1.637021695E9 THEN ((rt1.c0) IS TRUE) ELSE '-1371620375' END) IS TRUE)  as count FROM rt1 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN -1.637021695E9 THEN ((rt1.c0) IS TRUE) ELSE '-1371620375' END) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN -1.637021695E9 THEN ((rt1.c0) IS TRUE) ELSE '-1371620375' END) IS TRUE)  as count FROM rt1 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN -1.637021695E9 THEN ((rt1.c0) IS TRUE) ELSE '-1371620375' END) ORDER BY x''  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (CASE rt0.c2  WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c5)) THEN ((0.12854653489226198)LIKE(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c5)) THEN ((0.12854653489226198)LIKE(rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE rt0.c2  WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c5)) THEN ((0.12854653489226198)LIKE(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c5)) THEN ((0.12854653489226198)LIKE(rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE rt0.c2  WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c5)) THEN ((0.12854653489226198)LIKE(rt0.c1)) END);
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0))))<=((rt0.c2))) WHERE (((CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c3 END)&((+ (rt1.c0))))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))))==((((rt1.c2) IS FALSE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c3 END)&((+ (rt1.c0))))) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0))))<=((rt0.c2))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))))=((((rt1.c2) IS FALSE)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0))))<=((rt0.c2))) WHERE (((CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c3 END)&((+ (rt1.c0))))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))))==((((rt1.c2) IS FALSE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c3 END)&((+ (rt1.c0))))) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0))))<=((rt0.c2))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))))=((((rt1.c2) IS FALSE)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (((((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0))))<=((rt0.c2))) WHERE (((CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c3 END)&((+ (rt1.c0))))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))))==((((rt1.c2) IS FALSE)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt1.c4) BETWEEN (-9.79034832E8) AND (rt0.c1)) AS REAL)) ORDER BY ((rt1.c2)&(rt1.c0)) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4) BETWEEN (-9.79034832E8) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt1.c2)&(rt1.c0)) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt1.c4) BETWEEN (-9.79034832E8) AND (rt0.c1)) AS REAL)) ORDER BY ((rt1.c2)&(rt1.c0)) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4) BETWEEN (-9.79034832E8) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt1.c2)&(rt1.c0)) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt1.c4) BETWEEN (-9.79034832E8) AND (rt0.c1)) AS REAL)) ORDER BY ((rt1.c2)&(rt1.c0)) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM rt1, rt0, vt1 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS REAL));
SELECT COUNT(*) FROM vt1, rt1 WHERE (TYPEOF(((((rt1.c0)OR(rt1.c2)))OR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (TYPEOF(((((rt1.c0)OR(rt1.c2)))OR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (TYPEOF(((((rt1.c0)OR(rt1.c2)))OR(rt1.c0))));
SELECT * FROM rt0 WHERE (((HEX(rt0.c2)) BETWEEN (((rt0.c4) IS FALSE)) AND (((rt0.c5)IS(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c2)) BETWEEN (((rt0.c4) IS FALSE)) AND (((rt0.c5)IS(rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((HEX(rt0.c2)) BETWEEN (((rt0.c4) IS FALSE)) AND (((rt0.c5)IS(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c2)) BETWEEN (((rt0.c4) IS FALSE)) AND (((rt0.c5)IS(rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((HEX(rt0.c2)) BETWEEN (((rt0.c4) IS FALSE)) AND (((rt0.c5)IS(rt0.c5)))));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((((~ (rt0.c0)))OR(((rt1.c3)/('')))))OR(((rt0.c3)>(rt1.c2)))) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((((~ (rt0.c0)))OR(((rt1.c3)/('')))))OR(((rt0.c3)>(rt1.c2)))));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((((~ (rt0.c0)))OR(((rt1.c3)/('')))))OR(((rt0.c3)>(rt1.c2)))) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((((~ (rt0.c0)))OR(((rt1.c3)/('')))))OR(((rt0.c3)>(rt1.c2)))));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((((~ (rt0.c0)))OR(((rt1.c3)/('')))))OR(((rt0.c3)>(rt1.c2)))) WHERE (rt1.c3);
SELECT ALL * FROM rt0 WHERE ((((rt0.c5)==(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5)==(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c5)==(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5)==(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c5)==(rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE ((((0.258830575102462))=((((rt1.c4)IS(rt1.c1)))))) ORDER BY (((~ (vt1.c0)))/(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL (((((0.258830575102462))=((((rt1.c4)IS(rt1.c1)))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (((~ (vt1.c0)))/(rt1.c2)));
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE ((((0.258830575102462))=((((rt1.c4)IS(rt1.c1)))))) ORDER BY (((~ (vt1.c0)))/(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL (((((0.258830575102462))=((((rt1.c4)IS(rt1.c1)))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (((~ (vt1.c0)))/(rt1.c2)));
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE ((((0.258830575102462))=((((rt1.c4)IS(rt1.c1)))))) ORDER BY (((~ (vt1.c0)))/(rt1.c2));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END AS BLOB) LEFT OUTER JOIN rt0 ON ((0.6630638101926299)>=(((((rt1.c0)OR(rt0.c2)))AND('閥^')))) WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))||(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt1.c4))))) ORDER BY ((CAST(rt0.c1 AS NUMERIC))>>(((rt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))||(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt1.c4))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END AS BLOB) LEFT OUTER JOIN rt0 ON ((0.6630638101926299)>=(((((rt1.c0)OR(rt0.c2)))AND('閥^')))) ORDER BY ((CAST(rt0.c1 AS NUMERIC))>>(((rt0.c1) ISNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END AS BLOB) LEFT OUTER JOIN rt0 ON ((0.6630638101926299)>=(((((rt1.c0)OR(rt0.c2)))AND('閥^')))) WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))||(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt1.c4))))) ORDER BY ((CAST(rt0.c1 AS NUMERIC))>>(((rt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))||(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt1.c4))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c0 END AS BLOB) LEFT OUTER JOIN rt0 ON ((0.6630638101926299)>=(((((rt1.c0)OR(rt0.c2)))AND('閥^')))) ORDER BY ((CAST(rt0.c1 AS NUMERIC))>>(((rt0.c1) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (HEX((rt1.c3 IN ()))) ORDER BY rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((rt1.c3 IN ()))) IS TRUE)  as count FROM vt1, rt1 ORDER BY rt1.c3  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (HEX((rt1.c3 IN ()))) ORDER BY rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((rt1.c3 IN ()))) IS TRUE)  as count FROM vt1, rt1 ORDER BY rt1.c3  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (HEX((rt1.c3 IN ()))) ORDER BY rt1.c3  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (CHAR((NOT (1810779810))));
SELECT SUM(count) FROM (SELECT ((CHAR((NOT (1810779810)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CHAR((NOT (1810779810))));
SELECT SUM(count) FROM (SELECT ((CHAR((NOT (1810779810)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CHAR((NOT (1810779810))));
SELECT ALL * FROM rt0 WHERE (json_insert((~ (rt0.c1)), ((rt0.c5)>('ʽ')), rt0.c3 COLLATE RTRIM)) ORDER BY ((((rt0.c3 IN ())))>((((rt0.c2)OR(rt0.c1)))))  NULLS FIRST, COALESCE(DISTINCT rt0.c1, ((rt0.c2)IS NOT(rt0.c5)), (- (rt0.c4)), (rt0.c1 IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((json_insert((~ (rt0.c1)), ((rt0.c5)>('ʽ')), rt0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3 IN ())))>((((rt0.c2)OR(rt0.c1)))))  NULLS FIRST, COALESCE(DISTINCT rt0.c1, ((rt0.c2)IS NOT(rt0.c5)), (- (rt0.c4)), (rt0.c1 IN (rt0.c1))));
SELECT ALL * FROM rt0 WHERE (json_insert((~ (rt0.c1)), ((rt0.c5)>('ʽ')), rt0.c3 COLLATE RTRIM)) ORDER BY ((((rt0.c3 IN ())))>((((rt0.c2)OR(rt0.c1)))))  NULLS FIRST, COALESCE(DISTINCT rt0.c1, ((rt0.c2)IS NOT(rt0.c5)), (- (rt0.c4)), (rt0.c1 IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((json_insert((~ (rt0.c1)), ((rt0.c5)>('ʽ')), rt0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3 IN ())))>((((rt0.c2)OR(rt0.c1)))))  NULLS FIRST, COALESCE(DISTINCT rt0.c1, ((rt0.c2)IS NOT(rt0.c5)), (- (rt0.c4)), (rt0.c1 IN (rt0.c1))));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (rt1.c3) ORDER BY CAST(rt1.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY CAST(rt1.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (rt1.c3) ORDER BY CAST(rt1.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY CAST(rt1.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (rt1.c3) ORDER BY CAST(rt1.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)OR(rt1.c1)))AND(rt1.c4)) COLLATE RTRIM) ORDER BY (rt1.c1 COLLATE RTRIM IN (((rt1.c0)IS NOT(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt1.c1)))AND(rt1.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c1 COLLATE RTRIM IN (((rt1.c0)IS NOT(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)OR(rt1.c1)))AND(rt1.c4)) COLLATE RTRIM) ORDER BY (rt1.c1 COLLATE RTRIM IN (((rt1.c0)IS NOT(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt1.c1)))AND(rt1.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c1 COLLATE RTRIM IN (((rt1.c0)IS NOT(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)OR(rt1.c1)))AND(rt1.c4)) COLLATE RTRIM) ORDER BY (rt1.c1 COLLATE RTRIM IN (((rt1.c0)IS NOT(rt1.c0))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE (((((rt1.c4)AND(rt1.c0))) IS FALSE)) ORDER BY ((((rt1.c2) NOT BETWEEN (0X5a0fc471) AND (rt1.c0))) BETWEEN (((x'61a2') NOT BETWEEN (rt1.c4) AND (rt1.c4))) AND (CAST(rt1.c3 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)AND(rt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1 ORDER BY ((((rt1.c2) NOT BETWEEN (0x5a0fc471) AND (rt1.c0))) BETWEEN (((x'61a2') NOT BETWEEN (rt1.c4) AND (rt1.c4))) AND (CAST(rt1.c3 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE (((((rt1.c4)AND(rt1.c0))) IS FALSE)) ORDER BY ((((rt1.c2) NOT BETWEEN (0X5a0fc471) AND (rt1.c0))) BETWEEN (((x'61a2') NOT BETWEEN (rt1.c4) AND (rt1.c4))) AND (CAST(rt1.c3 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)AND(rt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1 ORDER BY ((((rt1.c2) NOT BETWEEN (0x5a0fc471) AND (rt1.c0))) BETWEEN (((x'61a2') NOT BETWEEN (rt1.c4) AND (rt1.c4))) AND (CAST(rt1.c3 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt1 WHERE (((((rt1.c4)AND(rt1.c0))) IS FALSE)) ORDER BY ((((rt1.c2) NOT BETWEEN (0X5a0fc471) AND (rt1.c0))) BETWEEN (((x'61a2') NOT BETWEEN (rt1.c4) AND (rt1.c4))) AND (CAST(rt1.c3 AS TEXT)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE ('1557513640') ORDER BY ((((rt1.c1)<<(rt0.c4)))OR(((x'5e0d') NOT BETWEEN (rt1.c4) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1557513640') IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c1)<<(rt0.c4)))OR(((x'5e0d') NOT BETWEEN (rt1.c4) AND (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('1557513640') ORDER BY ((((rt1.c1)<<(rt0.c4)))OR(((x'5e0d') NOT BETWEEN (rt1.c4) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1557513640') IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c1)<<(rt0.c4)))OR(((x'5e0d') NOT BETWEEN (rt1.c4) AND (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('1557513640') ORDER BY ((((rt1.c1)<<(rt0.c4)))OR(((x'5e0d') NOT BETWEEN (rt1.c4) AND (rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (((+ (rt0.c5)))!=(x'543b')) CROSS JOIN rt1 ON x'' WHERE (rt1.c3) ORDER BY ((- (rt1.c4)) IN ());
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((+ (rt0.c5)))<>(x'543b')) CROSS JOIN rt1 ON x'' ORDER BY ((- (rt1.c4)) IN ()));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (((+ (rt0.c5)))!=(x'543b')) CROSS JOIN rt1 ON x'' WHERE (rt1.c3) ORDER BY ((- (rt1.c4)) IN ());
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((+ (rt0.c5)))<>(x'543b')) CROSS JOIN rt1 ON x'' ORDER BY ((- (rt1.c4)) IN ()));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (((+ (rt0.c5)))!=(x'543b')) CROSS JOIN rt1 ON x'' WHERE (rt1.c3) ORDER BY ((- (rt1.c4)) IN ());
SELECT * FROM rt1, vt1, rt0 WHERE (((((rt1.c4)IS(rt1.c3))) NOT BETWEEN ((((vt1.c0, rt1.c4, rt1.c3)) BETWEEN ((rt1.c0, '<),', rt0.c5)) AND ((rt1.c1, rt0.c4, rt0.c4)))) AND (CASE rt1.c3  WHEN rt1.c4 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)IS(rt1.c3))) NOT BETWEEN ((((vt1.c0, rt1.c4, rt1.c3)) BETWEEN ((rt1.c0, '<),', rt0.c5)) AND ((rt1.c1, rt0.c4, rt0.c4)))) AND (CASE rt1.c3  WHEN rt1.c4 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE (((((rt1.c4)IS(rt1.c3))) NOT BETWEEN ((((vt1.c0, rt1.c4, rt1.c3)) BETWEEN ((rt1.c0, '<),', rt0.c5)) AND ((rt1.c1, rt0.c4, rt0.c4)))) AND (CASE rt1.c3  WHEN rt1.c4 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)IS(rt1.c3))) NOT BETWEEN ((((vt1.c0, rt1.c4, rt1.c3)) BETWEEN ((rt1.c0, '<),', rt0.c5)) AND ((rt1.c1, rt0.c4, rt0.c4)))) AND (CASE rt1.c3  WHEN rt1.c4 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE (((((rt1.c4)IS(rt1.c3))) NOT BETWEEN ((((vt1.c0, rt1.c4, rt1.c3)) BETWEEN ((rt1.c0, '<),', rt0.c5)) AND ((rt1.c1, rt0.c4, rt0.c4)))) AND (CASE rt1.c3  WHEN rt1.c4 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT * FROM vt1 WHERE (IFNULL((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))), vt1.c0));
SELECT SUM(count) FROM (SELECT ((IFNULL((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))), vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (IFNULL((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))), vt1.c0));
SELECT SUM(count) FROM (SELECT ((IFNULL((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))), vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (IFNULL((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))), vt1.c0));
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY '83672797';
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY '83672797');
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY '83672797';
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY '83672797');
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY '83672797';
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM rt1 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM rt1 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4) NOT BETWEEN ('-171233788') AND (rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((rt0.c2)>>(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4) NOT BETWEEN ('-171233788') AND (rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((rt0.c2)>>(rt0.c4)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4) NOT BETWEEN ('-171233788') AND (rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((rt0.c2)>>(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4) NOT BETWEEN ('-171233788') AND (rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((rt0.c2)>>(rt0.c4)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4) NOT BETWEEN ('-171233788') AND (rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((rt0.c2)>>(rt0.c4)) END);
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((vt1.c0)/(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((vt1.c0)/(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((vt1.c0)/(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((vt1.c0)/(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((vt1.c0)/(vt1.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ']P' FULL OUTER JOIN rt1 ON (((((((((+ (rt1.c3)))OR(CAST(0.33946612614133587 AS BLOB))))AND(((vt1.c0)=(rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))AND((- (rt0.c2)))) WHERE (((((rt0.c2 COLLATE NOCASE)AND((- (rt0.c2)))))OR((~ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE NOCASE)AND((- (rt0.c2)))))OR((~ (rt1.c4))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ']P' FULL OUTER JOIN rt1 ON (((((((((+ (rt1.c3)))OR(CAST(0.33946612614133587 AS BLOB))))AND(((vt1.c0)=(rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))AND((- (rt0.c2)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ']P' FULL OUTER JOIN rt1 ON (((((((((+ (rt1.c3)))OR(CAST(0.33946612614133587 AS BLOB))))AND(((vt1.c0)=(rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))AND((- (rt0.c2)))) WHERE (((((rt0.c2 COLLATE NOCASE)AND((- (rt0.c2)))))OR((~ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE NOCASE)AND((- (rt0.c2)))))OR((~ (rt1.c4))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ']P' FULL OUTER JOIN rt1 ON (((((((((+ (rt1.c3)))OR(CAST(0.33946612614133587 AS BLOB))))AND(((vt1.c0)=(rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))AND((- (rt0.c2)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ']P' FULL OUTER JOIN rt1 ON (((((((((+ (rt1.c3)))OR(CAST(0.33946612614133587 AS BLOB))))AND(((vt1.c0)=(rt0.c0)))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))AND((- (rt0.c2)))) WHERE (((((rt0.c2 COLLATE NOCASE)AND((- (rt0.c2)))))OR((~ (rt1.c4)))));
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (PRINTF(CASE rt1.c3  WHEN rt1.c3 THEN rt0.c4 END, CAST(rt1.c3 AS TEXT), (rt1.c4 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((PRINTF(CASE rt1.c3  WHEN rt1.c3 THEN rt0.c4 END, CAST(rt1.c3 AS TEXT), (rt1.c4 IN (rt0.c0)))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (PRINTF(CASE rt1.c3  WHEN rt1.c3 THEN rt0.c4 END, CAST(rt1.c3 AS TEXT), (rt1.c4 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((PRINTF(CASE rt1.c3  WHEN rt1.c3 THEN rt0.c4 END, CAST(rt1.c3 AS TEXT), (rt1.c4 IN (rt0.c0)))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (PRINTF(CASE rt1.c3  WHEN rt1.c3 THEN rt0.c4 END, CAST(rt1.c3 AS TEXT), (rt1.c4 IN (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c3)%(rt0.c5))) AND ((~ (rt1.c3)))) LEFT OUTER JOIN rt1 ON ((((rt0.c0)LIKE(rt0.c4)))AND(rt0.c4 COLLATE BINARY)) WHERE (((((rt1.c3)>(rt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (DATE(rt1.c1, rt0.c5, rt1.c0)))) ORDER BY ((rt1.c3 COLLATE RTRIM) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c5 END) AND (CAST(rt0.c4 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)>(rt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (DATE(rt1.c1, rt0.c5, rt1.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c3)%(rt0.c5))) AND ((~ (rt1.c3)))) LEFT OUTER JOIN rt1 ON ((((rt0.c0)LIKE(rt0.c4)))AND(rt0.c4 COLLATE BINARY)) ORDER BY ((rt1.c3 COLLATE RTRIM) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c5 END) AND (CAST(rt0.c4 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c3)%(rt0.c5))) AND ((~ (rt1.c3)))) LEFT OUTER JOIN rt1 ON ((((rt0.c0)LIKE(rt0.c4)))AND(rt0.c4 COLLATE BINARY)) WHERE (((((rt1.c3)>(rt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (DATE(rt1.c1, rt0.c5, rt1.c0)))) ORDER BY ((rt1.c3 COLLATE RTRIM) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c5 END) AND (CAST(rt0.c4 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)>(rt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (DATE(rt1.c1, rt0.c5, rt1.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c3)%(rt0.c5))) AND ((~ (rt1.c3)))) LEFT OUTER JOIN rt1 ON ((((rt0.c0)LIKE(rt0.c4)))AND(rt0.c4 COLLATE BINARY)) ORDER BY ((rt1.c3 COLLATE RTRIM) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c5 END) AND (CAST(rt0.c4 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c3)%(rt0.c5))) AND ((~ (rt1.c3)))) LEFT OUTER JOIN rt1 ON ((((rt0.c0)LIKE(rt0.c4)))AND(rt0.c4 COLLATE BINARY)) WHERE (((((rt1.c3)>(rt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (DATE(rt1.c1, rt0.c5, rt1.c0)))) ORDER BY ((rt1.c3 COLLATE RTRIM) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c5 END) AND (CAST(rt0.c4 AS NUMERIC)));
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c3, rt0.c0, rt0.c3))>=((0.415332231641263, rt0.c5, NULL)))))) ORDER BY (((rt0.c3) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c3, rt0.c0, rt0.c3))>=((0.415332231641263, rt0.c5, NULL)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3) NOTNULL) IN ()));
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c3, rt0.c0, rt0.c3))>=((0.415332231641263, rt0.c5, NULL)))))) ORDER BY (((rt0.c3) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c3, rt0.c0, rt0.c3))>=((0.415332231641263, rt0.c5, NULL)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3) NOTNULL) IN ()));
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c3, rt0.c0, rt0.c3))>=((0.415332231641263, rt0.c5, NULL)))))) ORDER BY (((rt0.c3) NOTNULL) IN ());
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON ABS(x'') FULL OUTER JOIN rt0 ON x'b679' WHERE (CAST(rt1.c1 AS BLOB)) ORDER BY json(((((rt1.c0)AND(rt1.c4)))AND(rt1.c4))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON ABS(x'') FULL OUTER JOIN rt0 ON x'b679' ORDER BY json(((((rt1.c0)AND(rt1.c4)))AND(rt1.c4))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON ABS(x'') FULL OUTER JOIN rt0 ON x'b679' WHERE (CAST(rt1.c1 AS BLOB)) ORDER BY json(((((rt1.c0)AND(rt1.c4)))AND(rt1.c4))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON ABS(x'') FULL OUTER JOIN rt0 ON x'b679' ORDER BY json(((((rt1.c0)AND(rt1.c4)))AND(rt1.c4))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON ABS(x'') FULL OUTER JOIN rt0 ON x'b679' WHERE (CAST(rt1.c1 AS BLOB)) ORDER BY json(((((rt1.c0)AND(rt1.c4)))AND(rt1.c4))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (CASE (NOT (vt1.c0))  WHEN COALESCE(-1e500, rt0.c0) THEN ((rt0.c0)GLOB(rt0.c0)) ELSE ((((0x4b7b9d35)AND(rt1.c1)))OR(rt0.c5)) END) ORDER BY (CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c5 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt1.c0))  WHEN COALESCE(-1e500, rt0.c0) THEN ((rt0.c0)GLOB(rt0.c0)) ELSE ((((0X4b7b9d35)AND(rt1.c1)))OR(rt0.c5)) END) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c5 END IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (CASE (NOT (vt1.c0))  WHEN COALESCE(-1e500, rt0.c0) THEN ((rt0.c0)GLOB(rt0.c0)) ELSE ((((0x4b7b9d35)AND(rt1.c1)))OR(rt0.c5)) END) ORDER BY (CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c5 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt1.c0))  WHEN COALESCE(-1e500, rt0.c0) THEN ((rt0.c0)GLOB(rt0.c0)) ELSE ((((0X4b7b9d35)AND(rt1.c1)))OR(rt0.c5)) END) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c5 END IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (CASE (NOT (vt1.c0))  WHEN COALESCE(-1e500, rt0.c0) THEN ((rt0.c0)GLOB(rt0.c0)) ELSE ((((0x4b7b9d35)AND(rt1.c1)))OR(rt0.c5)) END) ORDER BY (CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c5 END IN ());
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3) ORDER BY ((NOT (rt1.c2)) IN ()), (((COALESCE(DISTINCT rt1.c1, rt1.c3, rt1.c2, rt1.c4)))>=(((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY ((NOT (rt1.c2)) IN ()), (((COALESCE(DISTINCT rt1.c1, rt1.c3, rt1.c2, rt1.c4)))>=(((rt1.c4 IN ())))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3) ORDER BY ((NOT (rt1.c2)) IN ()), (((COALESCE(DISTINCT rt1.c1, rt1.c3, rt1.c2, rt1.c4)))>=(((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY ((NOT (rt1.c2)) IN ()), (((COALESCE(DISTINCT rt1.c1, rt1.c3, rt1.c2, rt1.c4)))>=(((rt1.c4 IN ())))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3) ORDER BY ((NOT (rt1.c2)) IN ()), (((COALESCE(DISTINCT rt1.c1, rt1.c3, rt1.c2, rt1.c4)))>=(((rt1.c4 IN ()))));
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN rt1 ON CASE WHEN rt1.c4 COLLATE BINARY THEN ((x'')<(rt1.c4)) ELSE (('BV3~hi') NOT NULL) END WHERE ((((((vt1.c0)==(rt0.c1)), (+ (rt0.c0)), ((rt0.c4)|(rt1.c4))))<=((TYPEOF(rt1.c0), rt1.c1, ((((rt1.c0)OR(NULL)))AND(rt1.c0)))))) ORDER BY '-2054642177';
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)==(rt0.c1)), (+ (rt0.c0)), ((rt0.c4)|(rt1.c4))))<=((TYPEOF(rt1.c0), rt1.c1, ((((rt1.c0)OR(NULL)))AND(rt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN rt1 ON CASE WHEN rt1.c4 COLLATE BINARY THEN ((x'')<(rt1.c4)) ELSE (('BV3~hi') NOT NULL) END ORDER BY '-2054642177');
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN rt1 ON CASE WHEN rt1.c4 COLLATE BINARY THEN ((x'')<(rt1.c4)) ELSE (('BV3~hi') NOT NULL) END WHERE ((((((vt1.c0)==(rt0.c1)), (+ (rt0.c0)), ((rt0.c4)|(rt1.c4))))<=((TYPEOF(rt1.c0), rt1.c1, ((((rt1.c0)OR(NULL)))AND(rt1.c0)))))) ORDER BY '-2054642177';
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)==(rt0.c1)), (+ (rt0.c0)), ((rt0.c4)|(rt1.c4))))<=((TYPEOF(rt1.c0), rt1.c1, ((((rt1.c0)OR(NULL)))AND(rt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN rt1 ON CASE WHEN rt1.c4 COLLATE BINARY THEN ((x'')<(rt1.c4)) ELSE (('BV3~hi') NOT NULL) END ORDER BY '-2054642177');
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN rt1 ON CASE WHEN rt1.c4 COLLATE BINARY THEN ((x'')<(rt1.c4)) ELSE (('BV3~hi') NOT NULL) END WHERE ((((((vt1.c0)==(rt0.c1)), (+ (rt0.c0)), ((rt0.c4)|(rt1.c4))))<=((TYPEOF(rt1.c0), rt1.c1, ((((rt1.c0)OR(NULL)))AND(rt1.c0)))))) ORDER BY '-2054642177';
SELECT ALL * FROM rt1 WHERE (CAST(DATE(rt1.c3, rt1.c2, rt1.c4) AS TEXT)) ORDER BY (rt1.c3 IN ((((rt1.c1))<=((rt1.c4))), (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(DATE(rt1.c3, rt1.c2, rt1.c4) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c3 IN ((((rt1.c1))<=((rt1.c4))), (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST(DATE(rt1.c3, rt1.c2, rt1.c4) AS TEXT)) ORDER BY (rt1.c3 IN ((((rt1.c1))<=((rt1.c4))), (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(DATE(rt1.c3, rt1.c2, rt1.c4) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c3 IN ((((rt1.c1))<=((rt1.c4))), (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST(DATE(rt1.c3, rt1.c2, rt1.c4) AS TEXT)) ORDER BY (rt1.c3 IN ((((rt1.c1))<=((rt1.c4))), (((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0))) NOTNULL));
SELECT * FROM rt1, vt1, rt0 WHERE ((('309514540')<((vt1.c0 IN ())))) ORDER BY (rt1.c3 IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((('309514540')<((vt1.c0 IN ())))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (rt1.c3 IN ()) DESC);
SELECT * FROM rt1, vt1, rt0 WHERE ((('309514540')<((vt1.c0 IN ())))) ORDER BY (rt1.c3 IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((('309514540')<((vt1.c0 IN ())))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (rt1.c3 IN ()) DESC);
SELECT * FROM rt1, vt1, rt0 WHERE ((('309514540')<((vt1.c0 IN ())))) ORDER BY (rt1.c3 IN ()) DESC;
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c5, rt0.c3, rt1.c2)) AND ((vt1.c0, rt0.c1, rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c5, rt0.c3, rt1.c2)) AND ((vt1.c0, rt0.c1, rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c5, rt0.c3, rt1.c2)) AND ((vt1.c0, rt0.c1, rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c5, rt0.c3, rt1.c2)) AND ((vt1.c0, rt0.c1, rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c5, rt0.c3, rt1.c2)) AND ((vt1.c0, rt0.c1, rt0.c0))) COLLATE BINARY);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON JULIANDAY(((rt1.c1)&(rt0.c2)), ((rt1.c1)OR(rt0.c0)), ((((rt0.c3)OR(rt0.c4)))AND(rt1.c4)), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)), IFNULL(rt0.c5, rt0.c3)) WHERE (((CAST(rt1.c4 AS TEXT))<>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c4 AS TEXT))<>(NULL))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON JULIANDAY(((rt1.c1)&(rt0.c2)), ((rt1.c1)OR(rt0.c0)), ((((rt0.c3)OR(rt0.c4)))AND(rt1.c4)), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)), IFNULL(rt0.c5, rt0.c3)));
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON JULIANDAY(((rt1.c1)&(rt0.c2)), ((rt1.c1)OR(rt0.c0)), ((((rt0.c3)OR(rt0.c4)))AND(rt1.c4)), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)), IFNULL(rt0.c5, rt0.c3)) WHERE (((CAST(rt1.c4 AS TEXT))<>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c4 AS TEXT))<>(NULL))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON JULIANDAY(((rt1.c1)&(rt0.c2)), ((rt1.c1)OR(rt0.c0)), ((((rt0.c3)OR(rt0.c4)))AND(rt1.c4)), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)), IFNULL(rt0.c5, rt0.c3)));
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON JULIANDAY(((rt1.c1)&(rt0.c2)), ((rt1.c1)OR(rt0.c0)), ((((rt0.c3)OR(rt0.c4)))AND(rt1.c4)), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)), IFNULL(rt0.c5, rt0.c3)) WHERE (((CAST(rt1.c4 AS TEXT))<>(NULL)));
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON rt1.c4 WHERE ((((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c5)) IN (UNLIKELY(rt1.c1), (rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c5)) IN (UNLIKELY(rt1.c1), (rt1.c3 IN ())))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON rt1.c4);
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON rt1.c4 WHERE ((((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c5)) IN (UNLIKELY(rt1.c1), (rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c5)) IN (UNLIKELY(rt1.c1), (rt1.c3 IN ())))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON rt1.c4);
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON rt1.c4 WHERE ((((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c5)) IN (UNLIKELY(rt1.c1), (rt1.c3 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)))<((+ (rt0.c2))))) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) NOTNULL) THEN (rt0.c5 IN ()) ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)))<((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) NOTNULL) THEN (rt0.c5 IN ()) ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)))<((+ (rt0.c2))))) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) NOTNULL) THEN (rt0.c5 IN ()) ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)))<((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) NOTNULL) THEN (rt0.c5 IN ()) ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)))<((+ (rt0.c2))))) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN ((rt0.c1) NOTNULL) THEN (rt0.c5 IN ()) ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY ((rt0.c5)&(rt0.c4)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c5)&(rt0.c4)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY ((rt0.c5)&(rt0.c4)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c5)&(rt0.c4)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM) ORDER BY ((rt0.c5)&(rt0.c4)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 END) BETWEEN (NULL) AND ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN rt1.c1 END) BETWEEN (NULL) AND ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 END) BETWEEN (NULL) AND ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN rt1.c1 END) BETWEEN (NULL) AND ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 END) BETWEEN (NULL) AND ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))));
SELECT * FROM rt1, vt1, rt0 WHERE (((((rt0.c5)AND(rt1.c0))) NOTNULL)) ORDER BY ((((rt0.c3)-(rt1.c3))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)AND(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY ((((rt0.c3)-(rt1.c3))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM rt1, vt1, rt0 WHERE (((((rt0.c5)AND(rt1.c0))) NOTNULL)) ORDER BY ((((rt0.c3)-(rt1.c3))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)AND(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY ((((rt0.c3)-(rt1.c3))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM rt1, vt1, rt0 WHERE (((((rt0.c5)AND(rt1.c0))) NOTNULL)) ORDER BY ((((rt0.c3)-(rt1.c3))) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT * FROM rt1, vt1, rt0 WHERE (rt1.c3) ORDER BY (TYPEOF(rt1.c0) IN ()), (((- (rt0.c5))) BETWEEN ('/䵫') AND (((rt0.c4) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (TYPEOF(rt1.c0) IN ()), (((- (rt0.c5))) BETWEEN ('/䵫') AND (((rt0.c4) IS FALSE))) DESC  NULLS LAST);
SELECT * FROM rt1, vt1, rt0 WHERE (rt1.c3) ORDER BY (TYPEOF(rt1.c0) IN ()), (((- (rt0.c5))) BETWEEN ('/䵫') AND (((rt0.c4) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY (TYPEOF(rt1.c0) IN ()), (((- (rt0.c5))) BETWEEN ('/䵫') AND (((rt0.c4) IS FALSE))) DESC  NULLS LAST);
SELECT * FROM rt1, vt1, rt0 WHERE (rt1.c3) ORDER BY (TYPEOF(rt1.c0) IN ()), (((- (rt0.c5))) BETWEEN ('/䵫') AND (((rt0.c4) IS FALSE))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c3) ORDER BY (~ (CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (~ (CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c3) ORDER BY (~ (CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (~ (CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c3) ORDER BY (~ (CAST(rt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN rt0.c5 COLLATE BINARY THEN (+ (rt1.c3)) END CROSS JOIN vt1 ON ((CASE rt1.c4  WHEN rt1.c3 THEN rt0.c5 END) NOT BETWEEN (rt1.c0) AND (CAST(rt0.c0 AS BLOB))) WHERE (((CAST(rt0.c4 AS NUMERIC))==(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c5 END))) ORDER BY LIKELIHOOD(DISTINCT ((rt1.c2)<(rt1.c2)), 0.35172013335733754);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS NUMERIC))==(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c5 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN rt0.c5 COLLATE BINARY THEN (+ (rt1.c3)) END CROSS JOIN vt1 ON ((CASE rt1.c4  WHEN rt1.c3 THEN rt0.c5 END) NOT BETWEEN (rt1.c0) AND (CAST(rt0.c0 AS BLOB))) ORDER BY LIKELIHOOD(DISTINCT ((rt1.c2)<(rt1.c2)), 0.35172013335733754));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN rt0.c5 COLLATE BINARY THEN (+ (rt1.c3)) END CROSS JOIN vt1 ON ((CASE rt1.c4  WHEN rt1.c3 THEN rt0.c5 END) NOT BETWEEN (rt1.c0) AND (CAST(rt0.c0 AS BLOB))) WHERE (((CAST(rt0.c4 AS NUMERIC))==(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c5 END))) ORDER BY LIKELIHOOD(DISTINCT ((rt1.c2)<(rt1.c2)), 0.35172013335733754);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS NUMERIC))==(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c5 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN rt0.c5 COLLATE BINARY THEN (+ (rt1.c3)) END CROSS JOIN vt1 ON ((CASE rt1.c4  WHEN rt1.c3 THEN rt0.c5 END) NOT BETWEEN (rt1.c0) AND (CAST(rt0.c0 AS BLOB))) ORDER BY LIKELIHOOD(DISTINCT ((rt1.c2)<(rt1.c2)), 0.35172013335733754));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN rt0.c5 COLLATE BINARY THEN (+ (rt1.c3)) END CROSS JOIN vt1 ON ((CASE rt1.c4  WHEN rt1.c3 THEN rt0.c5 END) NOT BETWEEN (rt1.c0) AND (CAST(rt0.c0 AS BLOB))) WHERE (((CAST(rt0.c4 AS NUMERIC))==(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c5 END))) ORDER BY LIKELIHOOD(DISTINCT ((rt1.c2)<(rt1.c2)), 0.35172013335733754);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT NULL)) IS TRUE));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (+ ((rt1.c4 IN ()))) WHERE ((((rt0.c1)) NOT BETWEEN (((((rt0.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3))))) AND ((rt0.c4 COLLATE BINARY)))) ORDER BY CAST(rt0.c1 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((((rt0.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3))))) AND ((rt0.c4 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (+ ((rt1.c4 IN ()))) ORDER BY CAST(rt0.c1 COLLATE BINARY AS TEXT)  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (+ ((rt1.c4 IN ()))) WHERE ((((rt0.c1)) NOT BETWEEN (((((rt0.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3))))) AND ((rt0.c4 COLLATE BINARY)))) ORDER BY CAST(rt0.c1 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((((rt0.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3))))) AND ((rt0.c4 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (+ ((rt1.c4 IN ()))) ORDER BY CAST(rt0.c1 COLLATE BINARY AS TEXT)  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON (+ ((rt1.c4 IN ()))) WHERE ((((rt0.c1)) NOT BETWEEN (((((rt0.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3))))) AND ((rt0.c4 COLLATE BINARY)))) ORDER BY CAST(rt0.c1 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((0.5893827097994152)*(((rt1.c3)LIKE(rt1.c1))))) ORDER BY (- ((((rt1.c2))=((rt1.c1))))) DESC, ((((x'd687') BETWEEN (rt1.c1) AND (rt1.c3)))-(rt1.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.5893827097994152)*(((rt1.c3)LIKE(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (- ((((rt1.c2))==((rt1.c1))))) DESC, ((((x'd687') BETWEEN (rt1.c1) AND (rt1.c3)))-(rt1.c3))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((0.5893827097994152)*(((rt1.c3)LIKE(rt1.c1))))) ORDER BY (- ((((rt1.c2))=((rt1.c1))))) DESC, ((((x'd687') BETWEEN (rt1.c1) AND (rt1.c3)))-(rt1.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.5893827097994152)*(((rt1.c3)LIKE(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (- ((((rt1.c2))==((rt1.c1))))) DESC, ((((x'd687') BETWEEN (rt1.c1) AND (rt1.c3)))-(rt1.c3))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((0.5893827097994152)*(((rt1.c3)LIKE(rt1.c1))))) ORDER BY (- ((((rt1.c2))=((rt1.c1))))) DESC, ((((x'd687') BETWEEN (rt1.c1) AND (rt1.c3)))-(rt1.c3))  NULLS FIRST;
SELECT * FROM rt0 WHERE (load_extension(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c3 END, (~ (rt0.c2)))) ORDER BY ((((((rt0.c2)>>(rt0.c3)))AND(((rt0.c3) IS FALSE))))OR(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END)), CAST(rt0.c1 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((load_extension(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c3 END, (~ (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)>>(rt0.c3)))AND(((rt0.c3) IS FALSE))))OR(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END)), CAST(rt0.c1 AS INTEGER) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (load_extension(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c3 END, (~ (rt0.c2)))) ORDER BY ((((((rt0.c2)>>(rt0.c3)))AND(((rt0.c3) IS FALSE))))OR(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END)), CAST(rt0.c1 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((load_extension(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c3 END, (~ (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)>>(rt0.c3)))AND(((rt0.c3) IS FALSE))))OR(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END)), CAST(rt0.c1 AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((vt1.c0) IS TRUE))));
SELECT ALL * FROM rt0, vt1, rt1 WHERE ((+ (CASE WHEN '258951883' THEN rt1.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN '258951883' THEN rt1.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL * FROM rt0, vt1, rt1 WHERE ((+ (CASE WHEN '258951883' THEN rt1.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN '258951883' THEN rt1.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL * FROM rt0, vt1, rt1 WHERE ((+ (CASE WHEN '258951883' THEN rt1.c1 ELSE rt0.c0 END)));
SELECT * FROM rt0, vt1 WHERE (((json_type(rt0.c5))IS NOT(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN rt0.c4 THEN rt0.c5 END)));
SELECT SUM(count) FROM (SELECT ((((json_type(rt0.c5))IS NOT(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN rt0.c4 THEN rt0.c5 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((json_type(rt0.c5))IS NOT(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN rt0.c4 THEN rt0.c5 END)));
SELECT SUM(count) FROM (SELECT ((((json_type(rt0.c5))IS NOT(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN rt0.c4 THEN rt0.c5 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((json_type(rt0.c5))IS NOT(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN rt0.c4 THEN rt0.c5 END)));
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((((((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c4)))AND(rt1.c0)))AND(CAST(rt1.c3 AS BLOB))))OR((rt1.c2 IN (rt1.c2))))) ORDER BY (~ (UNICODE(rt1.c4))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c4)))AND(rt1.c0)))AND(CAST(rt1.c3 AS BLOB))))OR((rt1.c2 IN (rt1.c2))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (~ (UNICODE(rt1.c4))) DESC);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((((((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c4)))AND(rt1.c0)))AND(CAST(rt1.c3 AS BLOB))))OR((rt1.c2 IN (rt1.c2))))) ORDER BY (~ (UNICODE(rt1.c4))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c4)))AND(rt1.c0)))AND(CAST(rt1.c3 AS BLOB))))OR((rt1.c2 IN (rt1.c2))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (~ (UNICODE(rt1.c4))) DESC);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((((((((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c4)))AND(rt1.c0)))AND(CAST(rt1.c3 AS BLOB))))OR((rt1.c2 IN (rt1.c2))))) ORDER BY (~ (UNICODE(rt1.c4))) DESC;
SELECT * FROM rt1 WHERE ((~ (CAST(rt1.c2 AS REAL)))) ORDER BY ((rt1.c0 COLLATE RTRIM)%(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0 COLLATE RTRIM)%(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) ASC);
SELECT * FROM rt1 WHERE ((~ (CAST(rt1.c2 AS REAL)))) ORDER BY ((rt1.c0 COLLATE RTRIM)%(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0 COLLATE RTRIM)%(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) ASC);
SELECT * FROM rt1 WHERE ((~ (CAST(rt1.c2 AS REAL)))) ORDER BY ((rt1.c0 COLLATE RTRIM)%(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) ASC;
SELECT ALL * FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN 845133307 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)>>(vt1.c0)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' END THEN UNLIKELY(vt1.c0) END) ORDER BY CASE WHEN ((vt1.c0)<(vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((NULL) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt1.c0))  WHEN 845133307 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)>>(vt1.c0)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' END THEN UNLIKELY(vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)<(vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((NULL) IS TRUE) END DESC);
SELECT ALL * FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN 845133307 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)>>(vt1.c0)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' END THEN UNLIKELY(vt1.c0) END) ORDER BY CASE WHEN ((vt1.c0)<(vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((NULL) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt1.c0))  WHEN 845133307 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)>>(vt1.c0)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' END THEN UNLIKELY(vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)<(vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((NULL) IS TRUE) END DESC);
SELECT ALL * FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN 845133307 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)>>(vt1.c0)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' END THEN UNLIKELY(vt1.c0) END) ORDER BY CASE WHEN ((vt1.c0)<(vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((NULL) IS TRUE) END DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c5)), ((rt0.c4)LIKE(rt0.c0)), (((rt0.c1))<((rt0.c3))))) AND ((CAST(rt0.c2 AS BLOB), rt0.c1 COLLATE RTRIM, CAST(rt0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c5)), ((rt0.c4)LIKE(rt0.c0)), (((rt0.c1))<((rt0.c3))))) AND ((CAST(rt0.c2 AS BLOB), rt0.c1 COLLATE RTRIM, CAST(rt0.c2 AS INTEGER))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c5)), ((rt0.c4)LIKE(rt0.c0)), (((rt0.c1))<((rt0.c3))))) AND ((CAST(rt0.c2 AS BLOB), rt0.c1 COLLATE RTRIM, CAST(rt0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c5)), ((rt0.c4)LIKE(rt0.c0)), (((rt0.c1))<((rt0.c3))))) AND ((CAST(rt0.c2 AS BLOB), rt0.c1 COLLATE RTRIM, CAST(rt0.c2 AS INTEGER))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c5)), ((rt0.c4)LIKE(rt0.c0)), (((rt0.c1))<((rt0.c3))))) AND ((CAST(rt0.c2 AS BLOB), rt0.c1 COLLATE RTRIM, CAST(rt0.c2 AS INTEGER)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0))>=((rt0.c3))) IN ((rt0.c5 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0))>=((rt0.c3))) IN ((rt0.c5 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0))>=((rt0.c3))) IN ((rt0.c5 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0))>=((rt0.c3))) IN ((rt0.c5 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0))>=((rt0.c3))) IN ((rt0.c5 IN (rt0.c0)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (((((0.07697450693246832) ISNULL)))>((((((rt0.c4)OR(vt1.c0)))AND(rt0.c1))))) WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((CAST(rt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((CAST(rt0.c0 AS REAL))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((((0.07697450693246832) ISNULL)))>((((((rt0.c4)OR(vt1.c0)))AND(rt0.c1))))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (((((0.07697450693246832) ISNULL)))>((((((rt0.c4)OR(vt1.c0)))AND(rt0.c1))))) WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((CAST(rt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((CAST(rt0.c0 AS REAL))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((((0.07697450693246832) ISNULL)))>((((((rt0.c4)OR(vt1.c0)))AND(rt0.c1))))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (((((0.07697450693246832) ISNULL)))>((((((rt0.c4)OR(vt1.c0)))AND(rt0.c1))))) WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((CAST(rt0.c0 AS REAL)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c3)OR(rt0.c1)))OR(rt1.c2)))OR(json(rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(rt0.c1)))OR(rt1.c2)))OR(json(rt0.c5)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c3)OR(rt0.c1)))OR(rt1.c2)))OR(json(rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(rt0.c1)))OR(rt1.c2)))OR(json(rt0.c5)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c3)OR(rt0.c1)))OR(rt1.c2)))OR(json(rt0.c5))));
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((('0.2270878673652138')<=((((rt1.c3, rt1.c1, rt1.c3))>((rt0.c1, rt0.c0, rt0.c1)))))) ORDER BY (((((NOT (rt0.c3)))OR(0.38508311952771124)))AND((((rt0.c3, rt1.c1, rt0.c3))<=((rt0.c2, rt1.c1, rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('0.2270878673652138')<=((((rt1.c3, rt1.c1, rt1.c3))>((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (((((NOT (rt0.c3)))OR(0.38508311952771124)))AND((((rt0.c3, rt1.c1, rt0.c3))<=((rt0.c2, rt1.c1, rt0.c2))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((('0.2270878673652138')<=((((rt1.c3, rt1.c1, rt1.c3))>((rt0.c1, rt0.c0, rt0.c1)))))) ORDER BY (((((NOT (rt0.c3)))OR(0.38508311952771124)))AND((((rt0.c3, rt1.c1, rt0.c3))<=((rt0.c2, rt1.c1, rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('0.2270878673652138')<=((((rt1.c3, rt1.c1, rt1.c3))>((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (((((NOT (rt0.c3)))OR(0.38508311952771124)))AND((((rt0.c3, rt1.c1, rt0.c3))<=((rt0.c2, rt1.c1, rt0.c2))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((('0.2270878673652138')<=((((rt1.c3, rt1.c1, rt1.c3))>((rt0.c1, rt0.c0, rt0.c1)))))) ORDER BY (((((NOT (rt0.c3)))OR(0.38508311952771124)))AND((((rt0.c3, rt1.c1, rt0.c3))<=((rt0.c2, rt1.c1, rt0.c2))))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (TRIM(rt0.c4)) ORDER BY 1.81077981E9 DESC, rt0.c3 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c4)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY 1.81077981E9 DESC, rt0.c3 COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE (TRIM(rt0.c4)) ORDER BY 1.81077981E9 DESC, rt0.c3 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c4)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY 1.81077981E9 DESC, rt0.c3 COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE (TRIM(rt0.c4)) ORDER BY 1.81077981E9 DESC, rt0.c3 COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (NOT (CASE WHEN 'N' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END)) DESC, ((rt0.c3 IN (rt0.c1, rt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CASE WHEN 'N' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END)) DESC, ((rt0.c3 IN (rt0.c1, rt0.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (NOT (CASE WHEN 'N' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END)) DESC, ((rt0.c3 IN (rt0.c1, rt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CASE WHEN 'N' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END)) DESC, ((rt0.c3 IN (rt0.c1, rt0.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (NOT (CASE WHEN 'N' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END)) DESC, ((rt0.c3 IN (rt0.c1, rt0.c2)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT * FROM rt1 CROSS JOIN rt0 ON CAST(CASE vt1.c0  WHEN rt0.c1 THEN 4.42852094E8 WHEN rt1.c4 THEN rt1.c1 WHEN NULL THEN x'' END AS TEXT) LEFT OUTER JOIN vt1 ON ((((x'')AND(0.540805396442349)))AND((rt0.c5 IN (rt1.c1)))) WHERE (((rt0.c2 COLLATE BINARY)/((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)/((NOT (rt0.c2))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CAST(CASE vt1.c0  WHEN rt0.c1 THEN 4.42852094E8 WHEN rt1.c4 THEN rt1.c1 WHEN NULL THEN x'' END AS TEXT) LEFT OUTER JOIN vt1 ON ((((x'')AND(0.540805396442349)))AND((rt0.c5 IN (rt1.c1)))));
SELECT * FROM rt1 CROSS JOIN rt0 ON CAST(CASE vt1.c0  WHEN rt0.c1 THEN 4.42852094E8 WHEN rt1.c4 THEN rt1.c1 WHEN NULL THEN x'' END AS TEXT) LEFT OUTER JOIN vt1 ON ((((x'')AND(0.540805396442349)))AND((rt0.c5 IN (rt1.c1)))) WHERE (((rt0.c2 COLLATE BINARY)/((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)/((NOT (rt0.c2))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CAST(CASE vt1.c0  WHEN rt0.c1 THEN 4.42852094E8 WHEN rt1.c4 THEN rt1.c1 WHEN NULL THEN x'' END AS TEXT) LEFT OUTER JOIN vt1 ON ((((x'')AND(0.540805396442349)))AND((rt0.c5 IN (rt1.c1)))));
SELECT * FROM rt1 CROSS JOIN rt0 ON CAST(CASE vt1.c0  WHEN rt0.c1 THEN 4.42852094E8 WHEN rt1.c4 THEN rt1.c1 WHEN NULL THEN x'' END AS TEXT) LEFT OUTER JOIN vt1 ON ((((x'')AND(0.540805396442349)))AND((rt0.c5 IN (rt1.c1)))) WHERE (((rt0.c2 COLLATE BINARY)/((NOT (rt0.c2)))));
SELECT * FROM rt0, vt1 WHERE (((((((0xffffffffe1e86059)<(rt0.c5)))AND(CASE rt0.c4  WHEN '1417630084' THEN rt0.c4 END)))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN vt1.c0 END))) ORDER BY IFNULL(DISTINCT rt0.c2 COLLATE NOCASE, (NOT (rt0.c4))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0xffffffffe1e86059)<(rt0.c5)))AND(CASE rt0.c4  WHEN '1417630084' THEN rt0.c4 END)))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN vt1.c0 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY IFNULL(DISTINCT rt0.c2 COLLATE NOCASE, (NOT (rt0.c4))) ASC);
SELECT * FROM rt0, vt1 WHERE (((((((0xffffffffe1e86059)<(rt0.c5)))AND(CASE rt0.c4  WHEN '1417630084' THEN rt0.c4 END)))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN vt1.c0 END))) ORDER BY IFNULL(DISTINCT rt0.c2 COLLATE NOCASE, (NOT (rt0.c4))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0xffffffffe1e86059)<(rt0.c5)))AND(CASE rt0.c4  WHEN '1417630084' THEN rt0.c4 END)))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN vt1.c0 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY IFNULL(DISTINCT rt0.c2 COLLATE NOCASE, (NOT (rt0.c4))) ASC);
SELECT * FROM rt0, vt1 WHERE (((((((0xffffffffe1e86059)<(rt0.c5)))AND(CASE rt0.c4  WHEN '1417630084' THEN rt0.c4 END)))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN vt1.c0 END))) ORDER BY IFNULL(DISTINCT rt0.c2 COLLATE NOCASE, (NOT (rt0.c4))) ASC;
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0)<<(vt1.c0))  WHEN ((vt1.c0)%(vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN NULL WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (~ (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) END) ORDER BY ((x'') BETWEEN (TYPEOF(DISTINCT vt1.c0)) AND (((vt1.c0)||(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<<(vt1.c0))  WHEN ((vt1.c0)%(vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN NULL WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (~ (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY ((x'') BETWEEN (TYPEOF(DISTINCT vt1.c0)) AND (((vt1.c0)||(vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0)<<(vt1.c0))  WHEN ((vt1.c0)%(vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN NULL WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (~ (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) END) ORDER BY ((x'') BETWEEN (TYPEOF(DISTINCT vt1.c0)) AND (((vt1.c0)||(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<<(vt1.c0))  WHEN ((vt1.c0)%(vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN NULL WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (~ (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY ((x'') BETWEEN (TYPEOF(DISTINCT vt1.c0)) AND (((vt1.c0)||(vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0)<<(vt1.c0))  WHEN ((vt1.c0)%(vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN NULL WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (~ (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) END) ORDER BY ((x'') BETWEEN (TYPEOF(DISTINCT vt1.c0)) AND (((vt1.c0)||(vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c4)<<(0.27219459414492897)) COLLATE NOCASE) ORDER BY UPPER(DISTINCT ((((rt1.c3)OR(NULL)))OR(rt1.c4)));
SELECT SUM(count) FROM (SELECT ((((rt1.c4)<<(0.27219459414492897)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY UPPER(DISTINCT ((((rt1.c3)OR(NULL)))OR(rt1.c4))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c4)<<(0.27219459414492897)) COLLATE NOCASE) ORDER BY UPPER(DISTINCT ((((rt1.c3)OR(NULL)))OR(rt1.c4)));
SELECT SUM(count) FROM (SELECT ((((rt1.c4)<<(0.27219459414492897)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY UPPER(DISTINCT ((((rt1.c3)OR(NULL)))OR(rt1.c4))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c4)<<(0.27219459414492897)) COLLATE NOCASE) ORDER BY UPPER(DISTINCT ((((rt1.c3)OR(NULL)))OR(rt1.c4)));
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c0))>=((rt0.c3)))) NOT BETWEEN ((rt0.c4 IN (rt0.c5))) AND (LTRIM(rt0.c5, rt0.c4)))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR((~ (rt0.c3)))) ASC, CASE ((rt0.c5)AND(rt0.c4))  WHEN (',' IN ()) THEN ((('d(5k', vt1.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c5, '-538850790')) AND ((rt0.c2, rt0.c1, rt0.c1))) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)) WHEN ((((rt0.c5)OR(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c1) IS TRUE) END DESC  NULLS FIRST, TYPEOF(DISTINCT COALESCE(rt0.c0, rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>=((rt0.c3)))) NOT BETWEEN ((rt0.c4 IN (rt0.c5))) AND (LTRIM(rt0.c5, rt0.c4)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR((~ (rt0.c3)))) ASC, CASE ((rt0.c5)AND(rt0.c4))  WHEN (',' IN ()) THEN ((('d(5k', vt1.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c5, '-538850790')) AND ((rt0.c2, rt0.c1, rt0.c1))) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)) WHEN ((((rt0.c5)OR(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c1) IS TRUE) END DESC  NULLS FIRST, TYPEOF(DISTINCT COALESCE(rt0.c0, rt0.c2)) ASC);
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c0))>=((rt0.c3)))) NOT BETWEEN ((rt0.c4 IN (rt0.c5))) AND (LTRIM(rt0.c5, rt0.c4)))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR((~ (rt0.c3)))) ASC, CASE ((rt0.c5)AND(rt0.c4))  WHEN (',' IN ()) THEN ((('d(5k', vt1.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c5, '-538850790')) AND ((rt0.c2, rt0.c1, rt0.c1))) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)) WHEN ((((rt0.c5)OR(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c1) IS TRUE) END DESC  NULLS FIRST, TYPEOF(DISTINCT COALESCE(rt0.c0, rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>=((rt0.c3)))) NOT BETWEEN ((rt0.c4 IN (rt0.c5))) AND (LTRIM(rt0.c5, rt0.c4)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR((~ (rt0.c3)))) ASC, CASE ((rt0.c5)AND(rt0.c4))  WHEN (',' IN ()) THEN ((('d(5k', vt1.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c5, '-538850790')) AND ((rt0.c2, rt0.c1, rt0.c1))) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)) WHEN ((((rt0.c5)OR(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c1) IS TRUE) END DESC  NULLS FIRST, TYPEOF(DISTINCT COALESCE(rt0.c0, rt0.c2)) ASC);
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c0))>=((rt0.c3)))) NOT BETWEEN ((rt0.c4 IN (rt0.c5))) AND (LTRIM(rt0.c5, rt0.c4)))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR((~ (rt0.c3)))) ASC, CASE ((rt0.c5)AND(rt0.c4))  WHEN (',' IN ()) THEN ((('d(5k', vt1.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c5, '-538850790')) AND ((rt0.c2, rt0.c1, rt0.c1))) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)) WHEN ((((rt0.c5)OR(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c1) IS TRUE) END DESC  NULLS FIRST, TYPEOF(DISTINCT COALESCE(rt0.c0, rt0.c2)) ASC;
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST(rt1.c3 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c3 AS TEXT)) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST(rt1.c3 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c3 AS TEXT)) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST(rt1.c3 AS TEXT));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((NULL) BETWEEN (rt1.c2) AND (vt1.c0)))OR(((rt1.c3)>>(rt1.c1)))))AND(((vt1.c0)>>('1497038178')))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((NULL) BETWEEN (rt1.c2) AND (vt1.c0)))OR(((rt1.c3)>>(rt1.c1)))))AND(((vt1.c0)>>('1497038178')))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((NULL) BETWEEN (rt1.c2) AND (vt1.c0)))OR(((rt1.c3)>>(rt1.c1)))))AND(((vt1.c0)>>('1497038178')))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((NULL) BETWEEN (rt1.c2) AND (vt1.c0)))OR(((rt1.c3)>>(rt1.c1)))))AND(((vt1.c0)>>('1497038178')))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((((((NULL) BETWEEN (rt1.c2) AND (vt1.c0)))OR(((rt1.c3)>>(rt1.c1)))))AND(((vt1.c0)>>('1497038178')))) WHERE (x'');
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(NULL)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(NULL)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(NULL)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(NULL)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(NULL)))AND(vt1.c0)))));
SELECT * FROM vt1, rt0, rt1 WHERE (rt0.c5 COLLATE RTRIM) ORDER BY rt0.c0 DESC  NULLS FIRST, ((((vt1.c0)<>(rt0.c0)))-(rt1.c3)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c5 COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY rt0.c0 DESC  NULLS FIRST, ((((vt1.c0)!=(rt0.c0)))-(rt1.c3)) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0, rt1 WHERE (rt0.c5 COLLATE RTRIM) ORDER BY rt0.c0 DESC  NULLS FIRST, ((((vt1.c0)<>(rt0.c0)))-(rt1.c3)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c5 COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY rt0.c0 DESC  NULLS FIRST, ((((vt1.c0)!=(rt0.c0)))-(rt1.c3)) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0, rt1 WHERE (rt0.c5 COLLATE RTRIM) ORDER BY rt0.c0 DESC  NULLS FIRST, ((((vt1.c0)<>(rt0.c0)))-(rt1.c3)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((((vt1.c0)OR(ABS(rt1.c0))))AND(rt1.c1))) ORDER BY CAST(((((vt1.c0)OR(rt1.c3)))AND(rt1.c2)) AS BLOB) ASC  NULLS FIRST, rt1.c3 ASC  NULLS FIRST, (((rt1.c4, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0 COLLATE RTRIM, vt1.c0 COLLATE BINARY, (((rt1.c2, rt1.c2, rt1.c1, rt1.c1, rt1.c2))>((rt1.c1, vt1.c0, rt1.c1, rt1.c4, rt1.c4))))) AND ((NULL, ((rt1.c4)==(rt1.c3)), ((((vt1.c0)AND(rt1.c1)))AND(rt1.c1)))))  NULLS FIRST, (- (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 END)), ((((rt1.c1)-(rt1.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(ABS(rt1.c0))))AND(rt1.c1))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST(((((vt1.c0)OR(rt1.c3)))AND(rt1.c2)) AS BLOB) ASC  NULLS FIRST, rt1.c3 ASC  NULLS FIRST, (((rt1.c4, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0 COLLATE RTRIM, vt1.c0 COLLATE BINARY, (((rt1.c2, rt1.c2, rt1.c1, rt1.c1, rt1.c2))>((rt1.c1, vt1.c0, rt1.c1, rt1.c4, rt1.c4))))) AND ((NULL, ((rt1.c4)=(rt1.c3)), ((((vt1.c0)AND(rt1.c1)))AND(rt1.c1)))))  NULLS FIRST, (- (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 END)), ((((rt1.c1)-(rt1.c2))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((((vt1.c0)OR(ABS(rt1.c0))))AND(rt1.c1))) ORDER BY CAST(((((vt1.c0)OR(rt1.c3)))AND(rt1.c2)) AS BLOB) ASC  NULLS FIRST, rt1.c3 ASC  NULLS FIRST, (((rt1.c4, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0 COLLATE RTRIM, vt1.c0 COLLATE BINARY, (((rt1.c2, rt1.c2, rt1.c1, rt1.c1, rt1.c2))>((rt1.c1, vt1.c0, rt1.c1, rt1.c4, rt1.c4))))) AND ((NULL, ((rt1.c4)==(rt1.c3)), ((((vt1.c0)AND(rt1.c1)))AND(rt1.c1)))))  NULLS FIRST, (- (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 END)), ((((rt1.c1)-(rt1.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(ABS(rt1.c0))))AND(rt1.c1))) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST(((((vt1.c0)OR(rt1.c3)))AND(rt1.c2)) AS BLOB) ASC  NULLS FIRST, rt1.c3 ASC  NULLS FIRST, (((rt1.c4, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0 COLLATE RTRIM, vt1.c0 COLLATE BINARY, (((rt1.c2, rt1.c2, rt1.c1, rt1.c1, rt1.c2))>((rt1.c1, vt1.c0, rt1.c1, rt1.c4, rt1.c4))))) AND ((NULL, ((rt1.c4)=(rt1.c3)), ((((vt1.c0)AND(rt1.c1)))AND(rt1.c1)))))  NULLS FIRST, (- (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 END)), ((((rt1.c1)-(rt1.c2))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((((vt1.c0)OR(ABS(rt1.c0))))AND(rt1.c1))) ORDER BY CAST(((((vt1.c0)OR(rt1.c3)))AND(rt1.c2)) AS BLOB) ASC  NULLS FIRST, rt1.c3 ASC  NULLS FIRST, (((rt1.c4, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0 COLLATE RTRIM, vt1.c0 COLLATE BINARY, (((rt1.c2, rt1.c2, rt1.c1, rt1.c1, rt1.c2))>((rt1.c1, vt1.c0, rt1.c1, rt1.c4, rt1.c4))))) AND ((NULL, ((rt1.c4)==(rt1.c3)), ((((vt1.c0)AND(rt1.c1)))AND(rt1.c1)))))  NULLS FIRST, (- (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 END)), ((((rt1.c1)-(rt1.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED WHERE ('1417630084') ORDER BY ((((rt1.c1 IN ()), ((rt0.c1)<<(rt0.c5)), ((rt1.c1) NOTNULL)))<>((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c5 END, 0.5015322171629738, CAST(rt1.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (('1417630084') IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c1 IN ()), ((rt0.c1)<<(rt0.c5)), ((rt1.c1) NOTNULL)))!=((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c5 END, 0.5015322171629738, CAST(rt1.c4 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED WHERE ('1417630084') ORDER BY ((((rt1.c1 IN ()), ((rt0.c1)<<(rt0.c5)), ((rt1.c1) NOTNULL)))<>((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c5 END, 0.5015322171629738, CAST(rt1.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (('1417630084') IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c1 IN ()), ((rt0.c1)<<(rt0.c5)), ((rt1.c1) NOTNULL)))!=((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c5 END, 0.5015322171629738, CAST(rt1.c4 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED WHERE ('1417630084') ORDER BY ((((rt1.c1 IN ()), ((rt0.c1)<<(rt0.c5)), ((rt1.c1) NOTNULL)))<>((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c5 END, 0.5015322171629738, CAST(rt1.c4 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ('1461870941');
SELECT SUM(count) FROM (SELECT (('1461870941') IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ('1461870941');
SELECT SUM(count) FROM (SELECT (('1461870941') IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ('1461870941');
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c3) NOT BETWEEN (((((rt0.c0)AND(vt1.c0)))OR(rt0.c3))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (((((rt0.c0)AND(vt1.c0)))OR(rt0.c3))) AND (NULL))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c3) NOT BETWEEN (((((rt0.c0)AND(vt1.c0)))OR(rt0.c3))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (((((rt0.c0)AND(vt1.c0)))OR(rt0.c3))) AND (NULL))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c3) NOT BETWEEN (((((rt0.c0)AND(vt1.c0)))OR(rt0.c3))) AND (NULL)));
SELECT ALL * FROM rt0, vt1 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) ORDER BY ((((rt0.c5)<('	f'))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c5)<('	f'))) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) ORDER BY ((((rt0.c5)<('	f'))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c5)<('	f'))) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) ORDER BY ((((rt0.c5)<('	f'))) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0Xfffffffff9d9c173);
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffff9d9c173) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0Xfffffffff9d9c173);
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffff9d9c173) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0Xfffffffff9d9c173);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c3 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CAST(rt0.c0 AS REAL) COLLATE BINARY);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c3 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CAST(rt0.c0 AS REAL) COLLATE BINARY);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c2 END AS INTEGER));
SELECT * FROM vt1 CROSS JOIN rt0 ON (+ (rt1.c4 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (+ (rt1.c4 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE);
SELECT * FROM vt1 CROSS JOIN rt0 ON (+ (rt1.c4 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (+ (rt1.c4 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (TYPEOF((((rt0.c3))<((rt0.c5))))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt0.c3))<((rt0.c5))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (TYPEOF((((rt0.c3))<((rt0.c5))))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt0.c3))<((rt0.c5))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (TYPEOF((((rt0.c3))<((rt0.c5))))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((x'') BETWEEN (vt1.c0) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, '280790811', vt1.c0)) AND ((vt1.c0, vt1.c0, NULL)))))) ORDER BY TRIM(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (vt1.c0) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, '280790811', vt1.c0)) AND ((vt1.c0, vt1.c0, NULL)))))) IS TRUE)  as count FROM vt1 ORDER BY TRIM(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((x'') BETWEEN (vt1.c0) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, '280790811', vt1.c0)) AND ((vt1.c0, vt1.c0, NULL)))))) ORDER BY TRIM(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (vt1.c0) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, '280790811', vt1.c0)) AND ((vt1.c0, vt1.c0, NULL)))))) IS TRUE)  as count FROM vt1 ORDER BY TRIM(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((x'') BETWEEN (vt1.c0) AND ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, '280790811', vt1.c0)) AND ((vt1.c0, vt1.c0, NULL)))))) ORDER BY TRIM(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((NOT ((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c3 IN ())))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((NOT ((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c3 IN ())))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((NOT ((rt1.c3 IN ()))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((+ ((((x'7dae')) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0)))))) ORDER BY x''  NULLS FIRST, ((((NULL)AND(((rt1.c3)AND('⹞CiTqRZ')))))AND(CAST(rt1.c4 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((x'7dae')) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY x''  NULLS FIRST, ((((NULL)AND(((rt1.c3)AND('⹞CiTqRZ')))))AND(CAST(rt1.c4 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((+ ((((x'7dae')) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0)))))) ORDER BY x''  NULLS FIRST, ((((NULL)AND(((rt1.c3)AND('⹞CiTqRZ')))))AND(CAST(rt1.c4 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((x'7dae')) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY x''  NULLS FIRST, ((((NULL)AND(((rt1.c3)AND('⹞CiTqRZ')))))AND(CAST(rt1.c4 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((+ ((((x'7dae')) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0)))))) ORDER BY x''  NULLS FIRST, ((((NULL)AND(((rt1.c3)AND('⹞CiTqRZ')))))AND(CAST(rt1.c4 AS NUMERIC)));
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2, ((((0.8659465545099144)AND(rt0.c2)))AND(rt0.c3)), (rt0.c1 IN ())))>=((((rt0.c3)<<('-1295359104')), ((((0.9719002070086685)OR(vt1.c0)))OR('-1986076994')), ((rt0.c4)>=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, ((((0.8659465545099144)AND(rt0.c2)))AND(rt0.c3)), (rt0.c1 IN ())))>=((((rt0.c3)<<('-1295359104')), ((((0.9719002070086685)OR(vt1.c0)))OR('-1986076994')), ((rt0.c4)>=(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2, ((((0.8659465545099144)AND(rt0.c2)))AND(rt0.c3)), (rt0.c1 IN ())))>=((((rt0.c3)<<('-1295359104')), ((((0.9719002070086685)OR(vt1.c0)))OR('-1986076994')), ((rt0.c4)>=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, ((((0.8659465545099144)AND(rt0.c2)))AND(rt0.c3)), (rt0.c1 IN ())))>=((((rt0.c3)<<('-1295359104')), ((((0.9719002070086685)OR(vt1.c0)))OR('-1986076994')), ((rt0.c4)>=(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2, ((((0.8659465545099144)AND(rt0.c2)))AND(rt0.c3)), (rt0.c1 IN ())))>=((((rt0.c3)<<('-1295359104')), ((((0.9719002070086685)OR(vt1.c0)))OR('-1986076994')), ((rt0.c4)>=(rt0.c2))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) IS TRUE)) ISNULL));
SELECT * FROM vt1, rt0, rt1 WHERE ((~ ((((rt1.c4))=((rt0.c2)))))) ORDER BY (NOT (rt1.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt1.c4))==((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (NOT (rt1.c1)) COLLATE BINARY);
SELECT * FROM vt1, rt0, rt1 WHERE ((~ ((((rt1.c4))=((rt0.c2)))))) ORDER BY (NOT (rt1.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt1.c4))==((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (NOT (rt1.c1)) COLLATE BINARY);
SELECT * FROM vt1, rt0, rt1 WHERE ((~ ((((rt1.c4))=((rt0.c2)))))) ORDER BY (NOT (rt1.c1)) COLLATE BINARY;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((rt1.c1)-((((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c2))>=((rt0.c3, rt0.c5, rt1.c0, rt1.c2, '[Da,9|6'))))) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))))IS NOT(rt0.c0))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c3))) BETWEEN (rt0.c0) AND (CAST(rt0.c0 AS REAL))), (((rt1.c2 IN (rt0.c3))) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))))IS NOT(rt0.c0))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((rt1.c1)-((((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c2))>=((rt0.c3, rt0.c5, rt1.c0, rt1.c2, '[Da,9|6'))))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c3))) BETWEEN (rt0.c0) AND (CAST(rt0.c0 AS REAL))), (((rt1.c2 IN (rt0.c3))) ISNULL));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((rt1.c1)-((((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c2))>=((rt0.c3, rt0.c5, rt1.c0, rt1.c2, '[Da,9|6'))))) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))))IS NOT(rt0.c0))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c3))) BETWEEN (rt0.c0) AND (CAST(rt0.c0 AS REAL))), (((rt1.c2 IN (rt0.c3))) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))))IS NOT(rt0.c0))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((rt1.c1)-((((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c2))>=((rt0.c3, rt0.c5, rt1.c0, rt1.c2, '[Da,9|6'))))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c3))) BETWEEN (rt0.c0) AND (CAST(rt0.c0 AS REAL))), (((rt1.c2 IN (rt0.c3))) ISNULL));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((rt1.c1)-((((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c2))>=((rt0.c3, rt0.c5, rt1.c0, rt1.c2, '[Da,9|6'))))) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))))IS NOT(rt0.c0))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c3))) BETWEEN (rt0.c0) AND (CAST(rt0.c0 AS REAL))), (((rt1.c2 IN (rt0.c3))) ISNULL);
SELECT * FROM vt1 WHERE ('x}');
SELECT SUM(count) FROM (SELECT (('x}') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('x}');
SELECT SUM(count) FROM (SELECT (('x}') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('x}');
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('282974486') ORDER BY ((((rt1.c1)GLOB(rt1.c1))) BETWEEN (rt0.c5) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))), (~ (((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('282974486') IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c1)GLOB(rt1.c1))) BETWEEN (rt0.c5) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))), (~ (((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c5)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('282974486') ORDER BY ((((rt1.c1)GLOB(rt1.c1))) BETWEEN (rt0.c5) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))), (~ (((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('282974486') IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c1)GLOB(rt1.c1))) BETWEEN (rt0.c5) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))), (~ (((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c5)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('282974486') ORDER BY ((((rt1.c1)GLOB(rt1.c1))) BETWEEN (rt0.c5) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))), (~ (((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c5)))) DESC;
SELECT * FROM rt0, vt1 WHERE (CAST((NOT (rt0.c2)) AS REAL)) ORDER BY ((((((vt1.c0)OR(rt0.c5)))AND(rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c4 THEN '蕞N}(' END) AND (HEX(DISTINCT rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((vt1.c0)OR(rt0.c5)))AND(rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c4 THEN '蕞N}(' END) AND (HEX(DISTINCT rt0.c0))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CAST((NOT (rt0.c2)) AS REAL)) ORDER BY ((((((vt1.c0)OR(rt0.c5)))AND(rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c4 THEN '蕞N}(' END) AND (HEX(DISTINCT rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((vt1.c0)OR(rt0.c5)))AND(rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c4 THEN '蕞N}(' END) AND (HEX(DISTINCT rt0.c0))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CAST((NOT (rt0.c2)) AS REAL)) ORDER BY ((((((vt1.c0)OR(rt0.c5)))AND(rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c4 THEN '蕞N}(' END) AND (HEX(DISTINCT rt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (x'4e54') ORDER BY CASE WHEN ((rt0.c3)>=(rt0.c4)) THEN CASE rt0.c5  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN x'' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN x'' THEN rt0.c4 END WHEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)) THEN ((rt0.c2)<=(rt0.c3)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)) THEN ((('0.5399093754964452')) BETWEEN (('-1287325730')) AND ((rt0.c1))) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'4e54') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c3)>=(rt0.c4)) THEN CASE rt0.c5  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN x'' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN x'' THEN rt0.c4 END WHEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)) THEN ((rt0.c2)<=(rt0.c3)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)) THEN ((('0.5399093754964452')) BETWEEN (('-1287325730')) AND ((rt0.c1))) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) END DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'4e54') ORDER BY CASE WHEN ((rt0.c3)>=(rt0.c4)) THEN CASE rt0.c5  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN x'' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN x'' THEN rt0.c4 END WHEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)) THEN ((rt0.c2)<=(rt0.c3)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)) THEN ((('0.5399093754964452')) BETWEEN (('-1287325730')) AND ((rt0.c1))) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'4e54') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c3)>=(rt0.c4)) THEN CASE rt0.c5  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN x'' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN x'' THEN rt0.c4 END WHEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)) THEN ((rt0.c2)<=(rt0.c3)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)) THEN ((('0.5399093754964452')) BETWEEN (('-1287325730')) AND ((rt0.c1))) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) END DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'4e54') ORDER BY CASE WHEN ((rt0.c3)>=(rt0.c4)) THEN CASE rt0.c5  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN x'' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN x'' THEN rt0.c4 END WHEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)) THEN ((rt0.c2)<=(rt0.c3)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)) THEN ((('0.5399093754964452')) BETWEEN (('-1287325730')) AND ((rt0.c1))) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) END DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR((vt1.c0 IN (vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0Xffffffffe3102a38)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) IS FALSE))OR((vt1.c0 IN (vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0xffffffffe3102a38))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR((vt1.c0 IN (vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0Xffffffffe3102a38)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) IS FALSE))OR((vt1.c0 IN (vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0xffffffffe3102a38))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) IS FALSE))OR((vt1.c0 IN (vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0Xffffffffe3102a38)))));
SELECT * FROM rt0, vt1, rt1 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt1.c0 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c3 ELSE rt1.c1 END)) AND ((rt0.c4 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt1.c0 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c3 ELSE rt1.c1 END)) AND ((rt0.c4 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT * FROM rt0, vt1, rt1 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt1.c0 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c3 ELSE rt1.c1 END)) AND ((rt0.c4 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt1.c0 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c3 ELSE rt1.c1 END)) AND ((rt0.c4 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT * FROM rt0, vt1, rt1 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt1.c0 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c3 ELSE rt1.c1 END)) AND ((rt0.c4 COLLATE NOCASE))));
SELECT * FROM rt0, vt1 WHERE ((+ (((rt0.c4) NOT NULL)))) ORDER BY CAST(TRIM(rt0.c1, rt0.c0) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(TRIM(rt0.c1, rt0.c0) AS REAL) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ((+ (((rt0.c4) NOT NULL)))) ORDER BY CAST(TRIM(rt0.c1, rt0.c0) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(TRIM(rt0.c1, rt0.c0) AS REAL) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ((+ (((rt0.c4) NOT NULL)))) ORDER BY CAST(TRIM(rt0.c1, rt0.c0) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOTNULL) COLLATE RTRIM) ORDER BY (((vt1.c0)|(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)|(vt1.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOTNULL) COLLATE RTRIM) ORDER BY (((vt1.c0)|(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)|(vt1.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOTNULL) COLLATE RTRIM) ORDER BY (((vt1.c0)|(vt1.c0)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)|(TOTAL_CHANGES()))) ORDER BY ((((((vt1.c0)*(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)|(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)*(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)|(TOTAL_CHANGES()))) ORDER BY ((((((vt1.c0)*(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)|(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)*(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)|(TOTAL_CHANGES()))) ORDER BY ((((((vt1.c0)*(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))) ASC  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END COLLATE RTRIM);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((('<h' IN ())) NOT BETWEEN (CAST(rt1.c4 AS REAL)) AND (rt0.c1 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON rt0.c3 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY 0.1344615962865774;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((('<h' IN ())) NOT BETWEEN (CAST(rt1.c4 AS REAL)) AND (rt0.c1 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON rt0.c3 ORDER BY 0.1344615962865774);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((('<h' IN ())) NOT BETWEEN (CAST(rt1.c4 AS REAL)) AND (rt0.c1 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON rt0.c3 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY 0.1344615962865774;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((('<h' IN ())) NOT BETWEEN (CAST(rt1.c4 AS REAL)) AND (rt0.c1 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON rt0.c3 ORDER BY 0.1344615962865774);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((('<h' IN ())) NOT BETWEEN (CAST(rt1.c4 AS REAL)) AND (rt0.c1 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON rt0.c3 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY 0.1344615962865774;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4, NULL, '1731228804')) NOT BETWEEN ((rt0.c5 COLLATE NOCASE, (('557488346') NOT NULL), CAST(rt0.c2 AS REAL))) AND ((NULL, ((rt0.c5)IS(-1.357626156E9)), ABS(DISTINCT rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, NULL, '1731228804')) NOT BETWEEN ((rt0.c5 COLLATE NOCASE, (('557488346') NOT NULL), CAST(rt0.c2 AS REAL))) AND ((NULL, ((rt0.c5)IS(-1.357626156E9)), ABS(DISTINCT rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4, NULL, '1731228804')) NOT BETWEEN ((rt0.c5 COLLATE NOCASE, (('557488346') NOT NULL), CAST(rt0.c2 AS REAL))) AND ((NULL, ((rt0.c5)IS(-1.357626156E9)), ABS(DISTINCT rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, NULL, '1731228804')) NOT BETWEEN ((rt0.c5 COLLATE NOCASE, (('557488346') NOT NULL), CAST(rt0.c2 AS REAL))) AND ((NULL, ((rt0.c5)IS(-1.357626156E9)), ABS(DISTINCT rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4, NULL, '1731228804')) NOT BETWEEN ((rt0.c5 COLLATE NOCASE, (('557488346') NOT NULL), CAST(rt0.c2 AS REAL))) AND ((NULL, ((rt0.c5)IS(-1.357626156E9)), ABS(DISTINCT rt0.c2)))));
SELECT * FROM vt1, rt1, rt0 WHERE ((TRIM(DISTINCT rt1.c3, 1.76003892E9) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT rt1.c3, 1.76003892E9) IN ())) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT * FROM vt1, rt1, rt0 WHERE ((TRIM(DISTINCT rt1.c3, 1.76003892E9) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT rt1.c3, 1.76003892E9) IN ())) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT * FROM vt1, rt1, rt0 WHERE ((TRIM(DISTINCT rt1.c3, 1.76003892E9) IN ()));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))!=(((rt1.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))<>(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))!=(((rt1.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))<>(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))!=(((rt1.c3) IS TRUE))));
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN ((((((((rt1.c0)AND(x'')))AND(rt0.c1)))AND(rt0.c2)))OR(0.8832849823011119)) THEN ((rt0.c3)%(rt0.c5)) ELSE (((rt0.c4))<=((x''))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c0)AND(x'')))AND(rt0.c1)))AND(rt0.c2)))OR(0.8832849823011119)) THEN ((rt0.c3)%(rt0.c5)) ELSE (((rt0.c4))<=((x''))) END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN ((((((((rt1.c0)AND(x'')))AND(rt0.c1)))AND(rt0.c2)))OR(0.8832849823011119)) THEN ((rt0.c3)%(rt0.c5)) ELSE (((rt0.c4))<=((x''))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt1.c0)AND(x'')))AND(rt0.c1)))AND(rt0.c2)))OR(0.8832849823011119)) THEN ((rt0.c3)%(rt0.c5)) ELSE (((rt0.c4))<=((x''))) END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN ((((((((rt1.c0)AND(x'')))AND(rt0.c1)))AND(rt0.c2)))OR(0.8832849823011119)) THEN ((rt0.c3)%(rt0.c5)) ELSE (((rt0.c4))<=((x''))) END);
SELECT * FROM rt0 WHERE (((((((rt0.c3) IS TRUE))AND(rt0.c0)))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) IS TRUE))AND(rt0.c0)))OR(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c3) IS TRUE))AND(rt0.c0)))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) IS TRUE))AND(rt0.c0)))OR(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c3) IS TRUE))AND(rt0.c0)))OR(NULL)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN IFNULL(DISTINCT rt0.c0, rt0.c1) THEN TIME(rt0.c4, rt0.c1, rt0.c1) ELSE ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(DISTINCT rt0.c0, rt0.c1) THEN TIME(rt0.c4, rt0.c1, rt0.c1) ELSE ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c4)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN IFNULL(DISTINCT rt0.c0, rt0.c1) THEN TIME(rt0.c4, rt0.c1, rt0.c1) ELSE ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(DISTINCT rt0.c0, rt0.c1) THEN TIME(rt0.c4, rt0.c1, rt0.c1) ELSE ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c4)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN IFNULL(DISTINCT rt0.c0, rt0.c1) THEN TIME(rt0.c4, rt0.c1, rt0.c1) ELSE ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c4)) END);
SELECT COUNT(*) FROM rt1 WHERE (((((- (rt1.c4))))<((TYPEOF(rt1.c1))))) ORDER BY (((rt1.c2)) BETWEEN ((CAST(rt1.c0 AS NUMERIC))) AND ((((rt1.c4) NOT BETWEEN (rt1.c1) AND (x''))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((- (rt1.c4))))<((TYPEOF(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)) BETWEEN ((CAST(rt1.c0 AS NUMERIC))) AND ((((rt1.c4) NOT BETWEEN (rt1.c1) AND (x''))))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((- (rt1.c4))))<((TYPEOF(rt1.c1))))) ORDER BY (((rt1.c2)) BETWEEN ((CAST(rt1.c0 AS NUMERIC))) AND ((((rt1.c4) NOT BETWEEN (rt1.c1) AND (x''))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((- (rt1.c4))))<((TYPEOF(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)) BETWEEN ((CAST(rt1.c0 AS NUMERIC))) AND ((((rt1.c4) NOT BETWEEN (rt1.c1) AND (x''))))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((- (rt1.c4))))<((TYPEOF(rt1.c1))))) ORDER BY (((rt1.c2)) BETWEEN ((CAST(rt1.c0 AS NUMERIC))) AND ((((rt1.c4) NOT BETWEEN (rt1.c1) AND (x''))))) DESC;
SELECT * FROM rt0, vt1, rt1 WHERE (((((((rt1.c2)OR(rt0.c4)))AND(rt0.c3))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c0))) AND (((rt1.c4)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt0.c4)))AND(rt0.c3))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c0))) AND (((rt1.c4)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT * FROM rt0, vt1, rt1 WHERE (((((((rt1.c2)OR(rt0.c4)))AND(rt0.c3))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c0))) AND (((rt1.c4)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt0.c4)))AND(rt0.c3))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c0))) AND (((rt1.c4)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT * FROM rt0, vt1, rt1 WHERE (((((((rt1.c2)OR(rt0.c4)))AND(rt0.c3))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c0))) AND (((rt1.c4)GLOB(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (CASE WHEN CASE rt0.c4  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c1 THEN 0xb1b1891 END THEN x'' ELSE ((vt1.c0)||(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c4  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c1 THEN 0xb1b1891 END THEN x'' ELSE ((vt1.c0)||(rt0.c4)) END) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (CASE WHEN CASE rt0.c4  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c1 THEN 0xb1b1891 END THEN x'' ELSE ((vt1.c0)||(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c4  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c1 THEN 0xb1b1891 END THEN x'' ELSE ((vt1.c0)||(rt0.c4)) END) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (CASE WHEN CASE rt0.c4  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c1 THEN 0xb1b1891 END THEN x'' ELSE ((vt1.c0)||(rt0.c4)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 IN ()));
SELECT ALL * FROM rt1 WHERE (x'99bb');
SELECT SUM(count) FROM (SELECT ALL ((x'99bb') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (x'99bb');
SELECT SUM(count) FROM (SELECT ALL ((x'99bb') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (x'99bb');
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((rt1.c0 IN ()))|(rt0.c4))) ORDER BY rt0.c3, CAST(rt0.c1 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))|(rt0.c4))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY rt0.c3, CAST(rt0.c1 AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((rt1.c0 IN ()))|(rt0.c4))) ORDER BY rt0.c3, CAST(rt0.c1 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))|(rt0.c4))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY rt0.c3, CAST(rt0.c1 AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((rt1.c0 IN ()))|(rt0.c4))) ORDER BY rt0.c3, CAST(rt0.c1 AS NUMERIC);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON LIKE(0.7985161930141229, CAST(rt1.c4 AS TEXT), 'a') RIGHT OUTER JOIN rt1 ON (- (((rt0.c3)<>(rt1.c1)))) WHERE (((((rt1.c3) BETWEEN (vt1.c0) AND (x'')))==(CASE rt0.c2  WHEN rt0.c4 THEN rt1.c4 ELSE rt0.c0 END))) ORDER BY ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) BETWEEN (vt1.c0) AND (x'')))==(CASE rt0.c2  WHEN rt0.c4 THEN rt1.c4 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON LIKE(0.7985161930141229, CAST(rt1.c4 AS TEXT), 'a') RIGHT OUTER JOIN rt1 ON (- (((rt0.c3)!=(rt1.c1)))) ORDER BY ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON LIKE(0.7985161930141229, CAST(rt1.c4 AS TEXT), 'a') RIGHT OUTER JOIN rt1 ON (- (((rt0.c3)<>(rt1.c1)))) WHERE (((((rt1.c3) BETWEEN (vt1.c0) AND (x'')))==(CASE rt0.c2  WHEN rt0.c4 THEN rt1.c4 ELSE rt0.c0 END))) ORDER BY ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) BETWEEN (vt1.c0) AND (x'')))==(CASE rt0.c2  WHEN rt0.c4 THEN rt1.c4 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON LIKE(0.7985161930141229, CAST(rt1.c4 AS TEXT), 'a') RIGHT OUTER JOIN rt1 ON (- (((rt0.c3)!=(rt1.c1)))) ORDER BY ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (((((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (((((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (((((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE));
SELECT ALL * FROM rt0, vt1, rt1 WHERE (CAST(((rt1.c3)>=(0.5233644609425102)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3)>=(0.5233644609425102)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL * FROM rt0, vt1, rt1 WHERE (CAST(((rt1.c3)>=(0.5233644609425102)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3)>=(0.5233644609425102)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL * FROM rt0, vt1, rt1 WHERE (CAST(((rt1.c3)>=(0.5233644609425102)) AS BLOB));
SELECT ALL * FROM rt0, rt1, vt1 WHERE ('-599709136');
SELECT SUM(count) FROM (SELECT (('-599709136') IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ('-599709136');
SELECT SUM(count) FROM (SELECT (('-599709136') IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ('-599709136');
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((NULL)OR(((rt0.c3)/(rt0.c2)))))OR((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((rt0.c3)/(rt0.c2)))))OR((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((NULL)OR(((rt0.c3)/(rt0.c2)))))OR((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((rt0.c3)/(rt0.c2)))))OR((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((NULL)OR(((rt0.c3)/(rt0.c2)))))OR((rt0.c0 IN (rt0.c0)))));
SELECT ALL * FROM vt1 WHERE ((((NULL IN ()))AND((((vt1.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))AND((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((NULL IN ()))AND((((vt1.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))AND((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((NULL IN ()))AND((((vt1.c0))<((vt1.c0))))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(QUOTE(rt0.c4) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(QUOTE(rt0.c4) AS TEXT)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(QUOTE(rt0.c4) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(QUOTE(rt0.c4) AS TEXT)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(QUOTE(rt0.c4) AS TEXT));
SELECT ALL * FROM rt1, vt1 WHERE ((((((rt1.c2))<=((rt1.c1))))||((NOT (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))<=((rt1.c1))))||((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE ((((((rt1.c2))<=((rt1.c1))))||((NOT (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))<=((rt1.c1))))||((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE ((((((rt1.c2))<=((rt1.c1))))||((NOT (rt1.c1)))));
SELECT * FROM rt0 CROSS JOIN vt1 ON (((NOT (rt0.c1))) NOT NULL) WHERE (((UNLIKELY(rt0.c1)) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt0.c1)) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((NOT (rt0.c1))) NOT NULL));
SELECT * FROM rt0 CROSS JOIN vt1 ON (((NOT (rt0.c1))) NOT NULL) WHERE (((UNLIKELY(rt0.c1)) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt0.c1)) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((NOT (rt0.c1))) NOT NULL));
SELECT * FROM rt0 CROSS JOIN vt1 ON (((NOT (rt0.c1))) NOT NULL) WHERE (((UNLIKELY(rt0.c1)) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.30649457472746877)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt0.c1, 0.30649457472746877)) NOT NULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.30649457472746877)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt0.c1, 0.30649457472746877)) NOT NULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.30649457472746877)) NOT NULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON -416138953 WHERE (CAST(((vt1.c0) NOT NULL) AS NUMERIC)) ORDER BY (((~ (rt0.c2)))GLOB(((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON -416138953 ORDER BY (((~ (rt0.c2)))GLOB(((rt0.c0) IS FALSE))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON -416138953 WHERE (CAST(((vt1.c0) NOT NULL) AS NUMERIC)) ORDER BY (((~ (rt0.c2)))GLOB(((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON -416138953 ORDER BY (((~ (rt0.c2)))GLOB(((rt0.c0) IS FALSE))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON -416138953 WHERE (CAST(((vt1.c0) NOT NULL) AS NUMERIC)) ORDER BY (((~ (rt0.c2)))GLOB(((rt0.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB)))) ORDER BY ((((- (vt1.c0))))>=((vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY ((((- (vt1.c0))))>=((vt1.c0))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB)))) ORDER BY ((((- (vt1.c0))))>=((vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY ((((- (vt1.c0))))>=((vt1.c0))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB)))) ORDER BY ((((- (vt1.c0))))>=((vt1.c0))) ASC;
SELECT * FROM vt1 WHERE (((load_extension(vt1.c0, vt1.c0))OR((((vt1.c0))>=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(vt1.c0, vt1.c0))OR((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((load_extension(vt1.c0, vt1.c0))OR((((vt1.c0))>=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(vt1.c0, vt1.c0))OR((((vt1.c0))>=((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY (NOT (TYPEOF(rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (TYPEOF(rt0.c3))) ASC);
SELECT * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY (NOT (TYPEOF(rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (TYPEOF(rt0.c3))) ASC);
SELECT * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY (NOT (TYPEOF(rt0.c3))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (0Xfffffffff11e092d);
SELECT SUM(count) FROM (SELECT ((0Xfffffffff11e092d) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (0Xfffffffff11e092d);
SELECT SUM(count) FROM (SELECT ((0Xfffffffff11e092d) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (0Xfffffffff11e092d);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS TEXT)) ORDER BY ((((rt1.c2)<=(rt1.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((rt1.c0)>>('-901108564'))))  NULLS FIRST, '1491431140' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt1 ORDER BY ((((rt1.c2)<=(rt1.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((rt1.c0)>>('-901108564'))))  NULLS FIRST, '1491431140' ASC);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS TEXT)) ORDER BY ((((rt1.c2)<=(rt1.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((rt1.c0)>>('-901108564'))))  NULLS FIRST, '1491431140' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt1 ORDER BY ((((rt1.c2)<=(rt1.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((rt1.c0)>>('-901108564'))))  NULLS FIRST, '1491431140' ASC);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS TEXT)) ORDER BY ((((rt1.c2)<=(rt1.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((rt1.c0)>>('-901108564'))))  NULLS FIRST, '1491431140' ASC;
SELECT ALL COUNT(*) FROM rt1, rt0 INNER JOIN vt1 ON ((((((rt1.c2)>>('465636337')))OR((((vt1.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((x'', rt0.c0, rt0.c3)) AND ((rt1.c2, rt1.c2, rt1.c4))))))AND((- (rt0.c0)))) WHERE (((((((((rt0.c5)OR(rt1.c0)))OR(rt1.c0)))AND(vt1.c0)))AND(rt0.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c5)OR(rt1.c0)))OR(rt1.c0)))AND(vt1.c0)))AND(rt0.c2)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 INNER JOIN vt1 ON ((((((rt1.c2)>>('465636337')))OR((((vt1.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((x'', rt0.c0, rt0.c3)) AND ((rt1.c2, rt1.c2, rt1.c4))))))AND((- (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, rt0 INNER JOIN vt1 ON ((((((rt1.c2)>>('465636337')))OR((((vt1.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((x'', rt0.c0, rt0.c3)) AND ((rt1.c2, rt1.c2, rt1.c4))))))AND((- (rt0.c0)))) WHERE (((((((((rt0.c5)OR(rt1.c0)))OR(rt1.c0)))AND(vt1.c0)))AND(rt0.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c5)OR(rt1.c0)))OR(rt1.c0)))AND(vt1.c0)))AND(rt0.c2)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 INNER JOIN vt1 ON ((((((rt1.c2)>>('465636337')))OR((((vt1.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((x'', rt0.c0, rt0.c3)) AND ((rt1.c2, rt1.c2, rt1.c4))))))AND((- (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, rt0 INNER JOIN vt1 ON ((((((rt1.c2)>>('465636337')))OR((((vt1.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((x'', rt0.c0, rt0.c3)) AND ((rt1.c2, rt1.c2, rt1.c4))))))AND((- (rt0.c0)))) WHERE (((((((((rt0.c5)OR(rt1.c0)))OR(rt1.c0)))AND(vt1.c0)))AND(rt0.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM vt1 WHERE (((x'')<=(HEX(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<=(HEX(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'')<=(HEX(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<=(HEX(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'')<=(HEX(vt1.c0))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST((rt0.c0 IN (rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST((rt0.c0 IN (rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST((rt0.c0 IN (rt0.c1)) AS INTEGER));
SELECT * FROM rt1, vt1, rt0 WHERE (((((((((((rt0.c1)OR('945804078')))AND(rt0.c4)))AND(rt1.c0)))AND(rt0.c0)))&(((rt1.c3)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)OR('945804078')))AND(rt0.c4)))AND(rt1.c0)))AND(rt0.c0)))&(((rt1.c3)>>(vt1.c0))))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE (((((((((((rt0.c1)OR('945804078')))AND(rt0.c4)))AND(rt1.c0)))AND(rt0.c0)))&(((rt1.c3)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)OR('945804078')))AND(rt0.c4)))AND(rt1.c0)))AND(rt0.c0)))&(((rt1.c3)>>(vt1.c0))))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE (((((((((((rt0.c1)OR('945804078')))AND(rt0.c4)))AND(rt1.c0)))AND(rt0.c0)))&(((rt1.c3)>>(vt1.c0)))));
SELECT COUNT(*) FROM rt1, vt1 CROSS JOIN rt0 ON (NOT (((rt0.c3)<<(rt0.c3)))) WHERE (((x'')<(rt1.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((x'')<(rt1.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt1 CROSS JOIN rt0 ON (NOT (((rt0.c3)<<(rt0.c3)))));
SELECT COUNT(*) FROM rt1, vt1 CROSS JOIN rt0 ON (NOT (((rt0.c3)<<(rt0.c3)))) WHERE (((x'')<(rt1.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((x'')<(rt1.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt1 CROSS JOIN rt0 ON (NOT (((rt0.c3)<<(rt0.c3)))));
SELECT COUNT(*) FROM rt1, vt1 CROSS JOIN rt0 ON (NOT (((rt0.c3)<<(rt0.c3)))) WHERE (((x'')<(rt1.c4 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((('p|{)' IN ()))GLOB(((rt0.c5)>>(rt0.c1))))) ORDER BY (rt0.c4 IN (rt0.c1, rt0.c2)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((('p|{)' IN ()))GLOB(((rt0.c5)>>(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c4 IN (rt0.c1, rt0.c2)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((('p|{)' IN ()))GLOB(((rt0.c5)>>(rt0.c1))))) ORDER BY (rt0.c4 IN (rt0.c1, rt0.c2)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((('p|{)' IN ()))GLOB(((rt0.c5)>>(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c4 IN (rt0.c1, rt0.c2)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((('p|{)' IN ()))GLOB(((rt0.c5)>>(rt0.c1))))) ORDER BY (rt0.c4 IN (rt0.c1, rt0.c2)) COLLATE BINARY COLLATE NOCASE;
SELECT COUNT(*) FROM vt1, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('');
SELECT * FROM rt1 WHERE (((CAST(rt1.c3 AS TEXT))&(CAST(rt1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS TEXT))&(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CAST(rt1.c3 AS TEXT))&(CAST(rt1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS TEXT))&(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CAST(rt1.c3 AS TEXT))&(CAST(rt1.c2 AS TEXT))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c4)) BETWEEN ((TRIM(DISTINCT rt0.c5, rt0.c4))) AND ((((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))))) ORDER BY ((((CASE rt0.c5  WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c0 END)AND(CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN 0.809534238887696 WHEN vt1.c0 THEN vt1.c0 END)))AND(COALESCE(DISTINCT rt0.c0, rt0.c4, '뼵礃', rt0.c2, rt0.c5, rt0.c0))) ASC  NULLS LAST, (((((((rt0.c5)OR(rt0.c3)))AND(rt0.c5)), CAST(vt1.c0 AS REAL), (((vt1.c0))<>((rt0.c0)))))<=((rt0.c0, ((rt0.c2)AND(rt0.c5)), CAST(rt0.c2 AS NUMERIC)))), (+ (((rt0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN ((TRIM(DISTINCT rt0.c5, rt0.c4))) AND ((((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((CASE rt0.c5  WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c0 END)AND(CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN 0.809534238887696 WHEN vt1.c0 THEN vt1.c0 END)))AND(COALESCE(DISTINCT rt0.c0, rt0.c4, '뼵礃', rt0.c2, rt0.c5, rt0.c0))) ASC  NULLS LAST, (((((((rt0.c5)OR(rt0.c3)))AND(rt0.c5)), CAST(vt1.c0 AS REAL), (((vt1.c0))!=((rt0.c0)))))<=((rt0.c0, ((rt0.c2)AND(rt0.c5)), CAST(rt0.c2 AS NUMERIC)))), (+ (((rt0.c0) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c4)) BETWEEN ((TRIM(DISTINCT rt0.c5, rt0.c4))) AND ((((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))))) ORDER BY ((((CASE rt0.c5  WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c0 END)AND(CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN 0.809534238887696 WHEN vt1.c0 THEN vt1.c0 END)))AND(COALESCE(DISTINCT rt0.c0, rt0.c4, '뼵礃', rt0.c2, rt0.c5, rt0.c0))) ASC  NULLS LAST, (((((((rt0.c5)OR(rt0.c3)))AND(rt0.c5)), CAST(vt1.c0 AS REAL), (((vt1.c0))<>((rt0.c0)))))<=((rt0.c0, ((rt0.c2)AND(rt0.c5)), CAST(rt0.c2 AS NUMERIC)))), (+ (((rt0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN ((TRIM(DISTINCT rt0.c5, rt0.c4))) AND ((((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((CASE rt0.c5  WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c0 END)AND(CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN 0.809534238887696 WHEN vt1.c0 THEN vt1.c0 END)))AND(COALESCE(DISTINCT rt0.c0, rt0.c4, '뼵礃', rt0.c2, rt0.c5, rt0.c0))) ASC  NULLS LAST, (((((((rt0.c5)OR(rt0.c3)))AND(rt0.c5)), CAST(vt1.c0 AS REAL), (((vt1.c0))!=((rt0.c0)))))<=((rt0.c0, ((rt0.c2)AND(rt0.c5)), CAST(rt0.c2 AS NUMERIC)))), (+ (((rt0.c0) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c4)) BETWEEN ((TRIM(DISTINCT rt0.c5, rt0.c4))) AND ((((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))))) ORDER BY ((((CASE rt0.c5  WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c0 END)AND(CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c1 THEN 0.809534238887696 WHEN vt1.c0 THEN vt1.c0 END)))AND(COALESCE(DISTINCT rt0.c0, rt0.c4, '뼵礃', rt0.c2, rt0.c5, rt0.c0))) ASC  NULLS LAST, (((((((rt0.c5)OR(rt0.c3)))AND(rt0.c5)), CAST(vt1.c0 AS REAL), (((vt1.c0))<>((rt0.c0)))))<=((rt0.c0, ((rt0.c2)AND(rt0.c5)), CAST(rt0.c2 AS NUMERIC)))), (+ (((rt0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, rt1 WHERE (((rt1.c1 COLLATE RTRIM)<((((rt1.c1, rt1.c0, rt1.c4))=((rt1.c3, rt1.c0, rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM)<((((rt1.c1, rt1.c0, rt1.c4))=((rt1.c3, rt1.c0, rt1.c0)))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (((rt1.c1 COLLATE RTRIM)<((((rt1.c1, rt1.c0, rt1.c4))=((rt1.c3, rt1.c0, rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM)<((((rt1.c1, rt1.c0, rt1.c4))=((rt1.c3, rt1.c0, rt1.c0)))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (((rt1.c1 COLLATE RTRIM)<((((rt1.c1, rt1.c0, rt1.c4))=((rt1.c3, rt1.c0, rt1.c0))))));
SELECT * FROM vt1, rt0, rt1 WHERE (((0Xffffffffb041f0ae) BETWEEN (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c4 ELSE rt1.c1 END) AND (((rt0.c5) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffb041f0ae) BETWEEN (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c4 ELSE rt1.c1 END) AND (((rt0.c5) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE (((0Xffffffffb041f0ae) BETWEEN (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c4 ELSE rt1.c1 END) AND (((rt0.c5) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffb041f0ae) BETWEEN (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c4 ELSE rt1.c1 END) AND (((rt0.c5) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE (((0Xffffffffb041f0ae) BETWEEN (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c4 ELSE rt1.c1 END) AND (((rt0.c5) NOTNULL))));
SELECT ALL * FROM rt0, vt1, rt1 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL * FROM rt0, vt1, rt1 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL * FROM rt0, vt1, rt1 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM vt1, rt0 NATURAL JOIN rt1 WHERE (CASE WHEN LIKELY(rt1.c4) THEN x'' ELSE (NULL IN ()) END) ORDER BY HEX('-159452658') ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(rt1.c4) THEN x'' ELSE (NULL IN ()) END) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN rt1 ORDER BY HEX('-159452658') ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 NATURAL JOIN rt1 WHERE (CASE WHEN LIKELY(rt1.c4) THEN x'' ELSE (NULL IN ()) END) ORDER BY HEX('-159452658') ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(rt1.c4) THEN x'' ELSE (NULL IN ()) END) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN rt1 ORDER BY HEX('-159452658') ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 NATURAL JOIN rt1 WHERE (CASE WHEN LIKELY(rt1.c4) THEN x'' ELSE (NULL IN ()) END) ORDER BY HEX('-159452658') ASC;
SELECT * FROM vt1, rt1, rt0 WHERE (((rt1.c1) NOT BETWEEN (rt0.c3) AND (x'1ca0')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT BETWEEN (rt0.c3) AND (x'1ca0')) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT * FROM vt1, rt1, rt0 WHERE (((rt1.c1) NOT BETWEEN (rt0.c3) AND (x'1ca0')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT BETWEEN (rt0.c3) AND (x'1ca0')) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT * FROM vt1, rt1, rt0 WHERE (((rt1.c1) NOT BETWEEN (rt0.c3) AND (x'1ca0')) COLLATE BINARY);
SELECT ALL * FROM vt1, rt0 WHERE (((0X313244bf)%(((rt0.c5) BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY (((((vt1.c0)==(rt0.c1))))==((rt0.c1 COLLATE RTRIM))) ASC, ('*0/?' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0X313244bf)%(((rt0.c5) BETWEEN (rt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c0)=(rt0.c1))))==((rt0.c1 COLLATE RTRIM))) ASC, ('*0/?' IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((0X313244bf)%(((rt0.c5) BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY (((((vt1.c0)==(rt0.c1))))==((rt0.c1 COLLATE RTRIM))) ASC, ('*0/?' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0X313244bf)%(((rt0.c5) BETWEEN (rt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c0)=(rt0.c1))))==((rt0.c1 COLLATE RTRIM))) ASC, ('*0/?' IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((0X313244bf)%(((rt0.c5) BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY (((((vt1.c0)==(rt0.c1))))==((rt0.c1 COLLATE RTRIM))) ASC, ('*0/?' IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CASE x'469c'  WHEN json_array_length(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) IS TRUE) THEN ((((NULL)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END) ORDER BY (+ (((vt1.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE x'469c'  WHEN json_array_length(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) IS TRUE) THEN ((((NULL)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE x'469c'  WHEN json_array_length(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) IS TRUE) THEN ((((NULL)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END) ORDER BY (+ (((vt1.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE x'469c'  WHEN json_array_length(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) IS TRUE) THEN ((((NULL)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST('E.' AS TEXT) COLLATE RTRIM) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c5)))AND(rt0.c4 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('E.' AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c5)))AND(rt0.c4 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST('E.' AS TEXT) COLLATE RTRIM) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c5)))AND(rt0.c4 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('E.' AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c5)))AND(rt0.c4 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST('E.' AS TEXT) COLLATE RTRIM) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c5)))AND(rt0.c4 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM rt1 WHERE (CASE (rt1.c3 IN ())  WHEN (((rt1.c3))<>((rt1.c4))) THEN rt1.c3 ELSE (((rt1.c1)) BETWEEN ((rt1.c1)) AND (('2008925688'))) END) ORDER BY (- (rt1.c3 COLLATE BINARY)), ((((rt1.c2))<((rt1.c2))) IN (((rt1.c3) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c3 IN ())  WHEN (((rt1.c3))<>((rt1.c4))) THEN rt1.c3 ELSE (((rt1.c1)) BETWEEN ((rt1.c1)) AND (('2008925688'))) END) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c3 COLLATE BINARY)), ((((rt1.c2))<((rt1.c2))) IN (((rt1.c3) IS TRUE))) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CASE (rt1.c3 IN ())  WHEN (((rt1.c3))<>((rt1.c4))) THEN rt1.c3 ELSE (((rt1.c1)) BETWEEN ((rt1.c1)) AND (('2008925688'))) END) ORDER BY (- (rt1.c3 COLLATE BINARY)), ((((rt1.c2))<((rt1.c2))) IN (((rt1.c3) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c3 IN ())  WHEN (((rt1.c3))<>((rt1.c4))) THEN rt1.c3 ELSE (((rt1.c1)) BETWEEN ((rt1.c1)) AND (('2008925688'))) END) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c3 COLLATE BINARY)), ((((rt1.c2))<((rt1.c2))) IN (((rt1.c3) IS TRUE))) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CASE (rt1.c3 IN ())  WHEN (((rt1.c3))<>((rt1.c4))) THEN rt1.c3 ELSE (((rt1.c1)) BETWEEN ((rt1.c1)) AND (('2008925688'))) END) ORDER BY (- (rt1.c3 COLLATE BINARY)), ((((rt1.c2))<((rt1.c2))) IN (((rt1.c3) IS TRUE))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST('-1205914797' AS TEXT)) ORDER BY ((((rt1.c3)-(rt1.c4)))&((- (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('-1205914797' AS TEXT)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c3)-(rt1.c4)))&((- (rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST('-1205914797' AS TEXT)) ORDER BY ((((rt1.c3)-(rt1.c4)))&((- (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('-1205914797' AS TEXT)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c3)-(rt1.c4)))&((- (rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST('-1205914797' AS TEXT)) ORDER BY ((((rt1.c3)-(rt1.c4)))&((- (rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((rt0.c0 COLLATE RTRIM)IS((((rt1.c0, rt0.c4, -1.938216448E9)) BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c0, rt1.c4, 0.9689367221661247))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)IS((((rt1.c0, rt0.c4, -1.938216448E9)) BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c0, rt1.c4, 0.9689367221661247)))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((rt0.c0 COLLATE RTRIM)IS((((rt1.c0, rt0.c4, -1.938216448E9)) BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c0, rt1.c4, 0.9689367221661247))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)IS((((rt1.c0, rt0.c4, -1.938216448E9)) BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c0, rt1.c4, 0.9689367221661247)))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((rt0.c0 COLLATE RTRIM)IS((((rt1.c0, rt0.c4, -1.938216448E9)) BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c0, rt1.c4, 0.9689367221661247))))));
SELECT ALL * FROM vt1, rt1, rt0 WHERE (CASE WHEN ((rt1.c2)GLOB(rt1.c0)) THEN ((rt1.c4) BETWEEN (rt1.c2) AND (-2.039826019E9)) END) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)GLOB(rt1.c0)) THEN ((rt1.c4) BETWEEN (rt1.c2) AND (-2.039826019E9)) END) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY rt0.c4  NULLS LAST);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (CASE WHEN ((rt1.c2)GLOB(rt1.c0)) THEN ((rt1.c4) BETWEEN (rt1.c2) AND (-2.039826019E9)) END) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)GLOB(rt1.c0)) THEN ((rt1.c4) BETWEEN (rt1.c2) AND (-2.039826019E9)) END) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY rt0.c4  NULLS LAST);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (CASE WHEN ((rt1.c2)GLOB(rt1.c0)) THEN ((rt1.c4) BETWEEN (rt1.c2) AND (-2.039826019E9)) END) ORDER BY rt0.c4  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY ((((NOT (rt1.c3))))=((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY ((((NOT (rt1.c3))))==((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY ((((NOT (rt1.c3))))=((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY ((((NOT (rt1.c3))))==((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY ((((NOT (rt1.c3))))=((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c0)))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((rt1.c4 COLLATE RTRIM)LIKE((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c4 COLLATE RTRIM)LIKE((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c4 COLLATE RTRIM)LIKE((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c4 COLLATE RTRIM)LIKE((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c4 COLLATE RTRIM)LIKE((NOT (rt1.c0)))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c1)<(rt0.c2)) AS BLOB) WHERE (0.5154818011420744);
SELECT SUM(count) FROM (SELECT ((0.5154818011420744) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c1)<(rt0.c2)) AS BLOB));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c1)<(rt0.c2)) AS BLOB) WHERE (0.5154818011420744);
SELECT SUM(count) FROM (SELECT ((0.5154818011420744) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c1)<(rt0.c2)) AS BLOB));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON CAST(((rt0.c1)<(rt0.c2)) AS BLOB) WHERE (0.5154818011420744);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (((((x'')OR((~ (rt0.c1)))))OR(((rt1.c0) BETWEEN (x'5027') AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR((~ (rt0.c1)))))OR(((rt1.c0) BETWEEN (x'5027') AND (rt1.c3))))) IS TRUE)  as count FROM rt1, rt0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (((((x'')OR((~ (rt0.c1)))))OR(((rt1.c0) BETWEEN (x'5027') AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR((~ (rt0.c1)))))OR(((rt1.c0) BETWEEN (x'5027') AND (rt1.c3))))) IS TRUE)  as count FROM rt1, rt0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (((((x'')OR((~ (rt0.c1)))))OR(((rt1.c0) BETWEEN (x'5027') AND (rt1.c3)))));
SELECT ALL * FROM rt0, vt1 NATURAL JOIN rt1 WHERE (((((rt1.c4 COLLATE NOCASE)AND(((rt1.c3) NOT NULL))))OR(CASE WHEN rt1.c3 THEN rt0.c5 END))) ORDER BY (((rt0.c4, rt0.c2, NULL)) NOT BETWEEN ((rt1.c3, CASE WHEN rt0.c1 THEN '-131693348' END, (((0.08241269859097944))=((vt1.c0))))) AND (((rt0.c3 IN ()), (rt0.c0 IN (rt1.c0)), (rt0.c2 IN (rt1.c4))))) ASC, (((- (rt0.c4))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((rt1.c4 COLLATE NOCASE)AND(((rt1.c3) NOT NULL))))OR(CASE WHEN rt1.c3 THEN rt0.c5 END))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN rt1 ORDER BY (((rt0.c4, rt0.c2, NULL)) NOT BETWEEN ((rt1.c3, CASE WHEN rt0.c1 THEN '-131693348' END, (((0.08241269859097944))==((vt1.c0))))) AND (((rt0.c3 IN ()), (rt0.c0 IN (rt1.c0)), (rt0.c2 IN (rt1.c4))))) ASC, (((- (rt0.c4))) NOT NULL));
SELECT ALL * FROM rt0, vt1 NATURAL JOIN rt1 WHERE (((((rt1.c4 COLLATE NOCASE)AND(((rt1.c3) NOT NULL))))OR(CASE WHEN rt1.c3 THEN rt0.c5 END))) ORDER BY (((rt0.c4, rt0.c2, NULL)) NOT BETWEEN ((rt1.c3, CASE WHEN rt0.c1 THEN '-131693348' END, (((0.08241269859097944))=((vt1.c0))))) AND (((rt0.c3 IN ()), (rt0.c0 IN (rt1.c0)), (rt0.c2 IN (rt1.c4))))) ASC, (((- (rt0.c4))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((rt1.c4 COLLATE NOCASE)AND(((rt1.c3) NOT NULL))))OR(CASE WHEN rt1.c3 THEN rt0.c5 END))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN rt1 ORDER BY (((rt0.c4, rt0.c2, NULL)) NOT BETWEEN ((rt1.c3, CASE WHEN rt0.c1 THEN '-131693348' END, (((0.08241269859097944))==((vt1.c0))))) AND (((rt0.c3 IN ()), (rt0.c0 IN (rt1.c0)), (rt0.c2 IN (rt1.c4))))) ASC, (((- (rt0.c4))) NOT NULL));
SELECT ALL * FROM rt0, vt1 NATURAL JOIN rt1 WHERE (((((rt1.c4 COLLATE NOCASE)AND(((rt1.c3) NOT NULL))))OR(CASE WHEN rt1.c3 THEN rt0.c5 END))) ORDER BY (((rt0.c4, rt0.c2, NULL)) NOT BETWEEN ((rt1.c3, CASE WHEN rt0.c1 THEN '-131693348' END, (((0.08241269859097944))=((vt1.c0))))) AND (((rt0.c3 IN ()), (rt0.c0 IN (rt1.c0)), (rt0.c2 IN (rt1.c4))))) ASC, (((- (rt0.c4))) NOT NULL);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)-(vt1.c0)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND(vt1.c0))) ORDER BY ((((vt1.c0 IN ())))!=(((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)-(vt1.c0)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 IN ())))!=(((vt1.c0 IN ())))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)-(vt1.c0)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND(vt1.c0))) ORDER BY ((((vt1.c0 IN ())))!=(((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)-(vt1.c0)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 IN ())))!=(((vt1.c0 IN ())))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)-(vt1.c0)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))AND(vt1.c0))) ORDER BY ((((vt1.c0 IN ())))!=(((vt1.c0 IN ()))));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((rt0.c0, rt0.c1, x''))>(('-20295432', rt1.c0, rt0.c1))) COLLATE RTRIM) ORDER BY (((((~ (rt0.c5)))AND((((rt0.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c4))))))AND((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, x''))>(('-20295432', rt1.c0, rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (((((~ (rt0.c5)))AND((((rt0.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c4))))))AND((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((rt0.c0, rt0.c1, x''))>(('-20295432', rt1.c0, rt0.c1))) COLLATE RTRIM) ORDER BY (((((~ (rt0.c5)))AND((((rt0.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c4))))))AND((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, x''))>(('-20295432', rt1.c0, rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY (((((~ (rt0.c5)))AND((((rt0.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c4))))))AND((rt0.c2 IN ()))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c3 IN ()) IN ((~ (rt0.c4)))) INNER JOIN rt1 ON NULL COLLATE NOCASE WHERE ((rt0.c1 IN ())) ORDER BY ((((rt0.c1)>=(rt1.c4)))LIKE(((rt1.c2) BETWEEN (vt1.c0) AND (rt0.c5))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c3 IN ()) IN ((~ (rt0.c4)))) INNER JOIN rt1 ON NULL COLLATE NOCASE ORDER BY ((((rt0.c1)>=(rt1.c4)))LIKE(((rt1.c2) BETWEEN (vt1.c0) AND (rt0.c5))))  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c3 IN ()) IN ((~ (rt0.c4)))) INNER JOIN rt1 ON NULL COLLATE NOCASE WHERE ((rt0.c1 IN ())) ORDER BY ((((rt0.c1)>=(rt1.c4)))LIKE(((rt1.c2) BETWEEN (vt1.c0) AND (rt0.c5))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c3 IN ()) IN ((~ (rt0.c4)))) INNER JOIN rt1 ON NULL COLLATE NOCASE ORDER BY ((((rt0.c1)>=(rt1.c4)))LIKE(((rt1.c2) BETWEEN (vt1.c0) AND (rt0.c5))))  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c3 IN ()) IN ((~ (rt0.c4)))) INNER JOIN rt1 ON NULL COLLATE NOCASE WHERE ((rt0.c1 IN ())) ORDER BY ((((rt0.c1)>=(rt1.c4)))LIKE(((rt1.c2) BETWEEN (vt1.c0) AND (rt0.c5))))  NULLS FIRST;
SELECT * FROM vt1, rt1, rt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) ORDER BY ((((((vt1.c0)OR(rt1.c2)))OR(rt1.c2))) NOT BETWEEN (((rt0.c5) NOT BETWEEN (rt1.c1) AND (rt0.c0))) AND (((rt0.c5)/(rt0.c5))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((((((vt1.c0)OR(rt1.c2)))OR(rt1.c2))) NOT BETWEEN (((rt0.c5) NOT BETWEEN (rt1.c1) AND (rt0.c0))) AND (((rt0.c5)/(rt0.c5))))  NULLS LAST);
SELECT * FROM vt1, rt1, rt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) ORDER BY ((((((vt1.c0)OR(rt1.c2)))OR(rt1.c2))) NOT BETWEEN (((rt0.c5) NOT BETWEEN (rt1.c1) AND (rt0.c0))) AND (((rt0.c5)/(rt0.c5))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((((((vt1.c0)OR(rt1.c2)))OR(rt1.c2))) NOT BETWEEN (((rt0.c5) NOT BETWEEN (rt1.c1) AND (rt0.c0))) AND (((rt0.c5)/(rt0.c5))))  NULLS LAST);
SELECT * FROM vt1, rt1, rt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) ORDER BY ((((((vt1.c0)OR(rt1.c2)))OR(rt1.c2))) NOT BETWEEN (((rt0.c5) NOT BETWEEN (rt1.c1) AND (rt0.c0))) AND (((rt0.c5)/(rt0.c5))))  NULLS LAST;
SELECT * FROM vt1, rt0, rt1 WHERE (((((((((((rt1.c0) IS TRUE))OR(((rt1.c1)-(vt1.c0)))))OR(rt1.c1)))OR(rt0.c4 COLLATE RTRIM)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) IS TRUE))OR(((rt1.c1)-(vt1.c0)))))OR(rt1.c1)))OR(rt0.c4 COLLATE RTRIM)))AND(rt0.c0))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE (((((((((((rt1.c0) IS TRUE))OR(((rt1.c1)-(vt1.c0)))))OR(rt1.c1)))OR(rt0.c4 COLLATE RTRIM)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) IS TRUE))OR(((rt1.c1)-(vt1.c0)))))OR(rt1.c1)))OR(rt0.c4 COLLATE RTRIM)))AND(rt0.c0))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE (((((((((((rt1.c0) IS TRUE))OR(((rt1.c1)-(vt1.c0)))))OR(rt1.c1)))OR(rt0.c4 COLLATE RTRIM)))AND(rt0.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'f348') IS TRUE)) ORDER BY ((ABS(DISTINCT x''))||(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((x'f348') IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((ABS(DISTINCT x''))||(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'f348') IS TRUE)) ORDER BY ((ABS(DISTINCT x''))||(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((x'f348') IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((ABS(DISTINCT x''))||(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'f348') IS TRUE)) ORDER BY ((ABS(DISTINCT x''))||(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))));
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((json_array_length(rt0.c5, rt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_array_length(rt0.c5, rt1.c0) IN ())) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((json_array_length(rt0.c5, rt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_array_length(rt0.c5, rt1.c0) IN ())) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((json_array_length(rt0.c5, rt1.c0) IN ()));
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(NULL)))OR(vt1.c0)))%((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(NULL)))OR(vt1.c0)))%((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(NULL)))OR(vt1.c0)))%((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(NULL)))OR(vt1.c0)))%((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(NULL)))OR(vt1.c0)))%((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, vt1 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c3 AS BLOB))OR(rt0.c4)))AND(('i)H*?' IN (rt0.c5)))) WHERE ((((((((((~ (rt0.c4)))OR((((rt0.c4, rt0.c4, rt0.c4))<>((rt1.c3, rt1.c0, NULL))))))OR(rt0.c4)))OR(CAST(rt1.c2 AS TEXT))))OR(DATE(rt1.c4, rt1.c1, rt0.c4))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt0.c4)))OR((((rt0.c4, rt0.c4, rt0.c4))!=((rt1.c3, rt1.c0, NULL))))))OR(rt0.c4)))OR(CAST(rt1.c2 AS TEXT))))OR(DATE(rt1.c4, rt1.c1, rt0.c4)))) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c3 AS BLOB))OR(rt0.c4)))AND(('i)H*?' IN (rt0.c5)))));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, vt1 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c3 AS BLOB))OR(rt0.c4)))AND(('i)H*?' IN (rt0.c5)))) WHERE ((((((((((~ (rt0.c4)))OR((((rt0.c4, rt0.c4, rt0.c4))<>((rt1.c3, rt1.c0, NULL))))))OR(rt0.c4)))OR(CAST(rt1.c2 AS TEXT))))OR(DATE(rt1.c4, rt1.c1, rt0.c4))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt0.c4)))OR((((rt0.c4, rt0.c4, rt0.c4))!=((rt1.c3, rt1.c0, NULL))))))OR(rt0.c4)))OR(CAST(rt1.c2 AS TEXT))))OR(DATE(rt1.c4, rt1.c1, rt0.c4)))) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c3 AS BLOB))OR(rt0.c4)))AND(('i)H*?' IN (rt0.c5)))));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, vt1 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c3 AS BLOB))OR(rt0.c4)))AND(('i)H*?' IN (rt0.c5)))) WHERE ((((((((((~ (rt0.c4)))OR((((rt0.c4, rt0.c4, rt0.c4))<>((rt1.c3, rt1.c0, NULL))))))OR(rt0.c4)))OR(CAST(rt1.c2 AS TEXT))))OR(DATE(rt1.c4, rt1.c1, rt0.c4))));
SELECT * FROM rt1, vt1 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN (((((rt1.c0)AND(vt1.c0)))OR(rt1.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL)) NOT BETWEEN (((((rt1.c0)AND(vt1.c0)))OR(rt1.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN (((((rt1.c0)AND(vt1.c0)))OR(rt1.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL)) NOT BETWEEN (((((rt1.c0)AND(vt1.c0)))OR(rt1.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN (((((rt1.c0)AND(vt1.c0)))OR(rt1.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0)))));
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE ((((+ (rt0.c3))) NOTNULL)) ORDER BY rt0.c3  NULLS FIRST, ((rt0.c4 COLLATE RTRIM)>=(vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c3  NULLS FIRST, ((rt0.c4 COLLATE RTRIM)>=(vt1.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE ((((+ (rt0.c3))) NOTNULL)) ORDER BY rt0.c3  NULLS FIRST, ((rt0.c4 COLLATE RTRIM)>=(vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c3  NULLS FIRST, ((rt0.c4 COLLATE RTRIM)>=(vt1.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE ((((+ (rt0.c3))) NOTNULL)) ORDER BY rt0.c3  NULLS FIRST, ((rt0.c4 COLLATE RTRIM)>=(vt1.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) BETWEEN (((((((((rt0.c0)OR(rt1.c2)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c4))) AND (LIKELY(DISTINCT 0.8069786604418915)))) ORDER BY UNLIKELY(DISTINCT ((((rt1.c1)AND(rt1.c1)))OR(rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) BETWEEN (((((((((rt0.c0)OR(rt1.c2)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c4))) AND (LIKELY(DISTINCT 0.8069786604418915)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY UNLIKELY(DISTINCT ((((rt1.c1)AND(rt1.c1)))OR(rt0.c3))) DESC);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) BETWEEN (((((((((rt0.c0)OR(rt1.c2)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c4))) AND (LIKELY(DISTINCT 0.8069786604418915)))) ORDER BY UNLIKELY(DISTINCT ((((rt1.c1)AND(rt1.c1)))OR(rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) BETWEEN (((((((((rt0.c0)OR(rt1.c2)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c4))) AND (LIKELY(DISTINCT 0.8069786604418915)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY UNLIKELY(DISTINCT ((((rt1.c1)AND(rt1.c1)))OR(rt0.c3))) DESC);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt1.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))) BETWEEN (((((((((rt0.c0)OR(rt1.c2)))AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c4))) AND (LIKELY(DISTINCT 0.8069786604418915)))) ORDER BY UNLIKELY(DISTINCT ((((rt1.c1)AND(rt1.c1)))OR(rt0.c3))) DESC;
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c3 AS BLOB) IN ())) ORDER BY CASE TYPEOF(rt1.c2)  WHEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN '' WHEN 0.590928463405003 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 END ELSE CAST(rt1.c1 AS BLOB) END, (NOT (((rt1.c2) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c3 AS BLOB) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE TYPEOF(rt1.c2)  WHEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN '' WHEN 0.590928463405003 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 END ELSE CAST(rt1.c1 AS BLOB) END, (NOT (((rt1.c2) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c3 AS BLOB) IN ())) ORDER BY CASE TYPEOF(rt1.c2)  WHEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN '' WHEN 0.590928463405003 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 END ELSE CAST(rt1.c1 AS BLOB) END, (NOT (((rt1.c2) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c3 AS BLOB) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CASE TYPEOF(rt1.c2)  WHEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN '' WHEN 0.590928463405003 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 END ELSE CAST(rt1.c1 AS BLOB) END, (NOT (((rt1.c2) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c3 AS BLOB) IN ())) ORDER BY CASE TYPEOF(rt1.c2)  WHEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN '' WHEN 0.590928463405003 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 END ELSE CAST(rt1.c1 AS BLOB) END, (NOT (((rt1.c2) ISNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((CASE vt1.c0  WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c3 END)OR(((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)))))AND(((rt0.c5)&('\n8')))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c3 END)OR(((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)))))AND(((rt0.c5)&('\n8'))))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((CASE vt1.c0  WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c3 END)OR(((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)))))AND(((rt0.c5)&('\n8')))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c3 END)OR(((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)))))AND(((rt0.c5)&('\n8'))))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((CASE vt1.c0  WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c3 END)OR(((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)))))AND(((rt0.c5)&('\n8')))));
SELECT ALL * FROM vt1, rt1 WHERE ((((rt1.c0 IN ('K執6p*q6', rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN vt1.c0 WHEN 0.5248462605703968 THEN rt1.c2 END) AND (CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ('K執6p*q6', rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN vt1.c0 WHEN 0.5248462605703968 THEN rt1.c2 END) AND (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((((rt1.c0 IN ('K執6p*q6', rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN vt1.c0 WHEN 0.5248462605703968 THEN rt1.c2 END) AND (CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ('K執6p*q6', rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN vt1.c0 WHEN 0.5248462605703968 THEN rt1.c2 END) AND (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((((rt1.c0 IN ('K執6p*q6', rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN vt1.c0 WHEN 0.5248462605703968 THEN rt1.c2 END) AND (CAST(rt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((- (vt1.c0))) IS TRUE)) ORDER BY CASE CAST(rt1.c4 AS NUMERIC)  WHEN (- (vt1.c0)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c3)) THEN ((((rt1.c0)OR(rt1.c0)))AND(vt1.c0)) WHEN rt1.c2 THEN (NULL IN ()) ELSE ((vt1.c0)>(vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, rt1 ORDER BY CASE CAST(rt1.c4 AS NUMERIC)  WHEN (- (vt1.c0)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c3)) THEN ((((rt1.c0)OR(rt1.c0)))AND(vt1.c0)) WHEN rt1.c2 THEN (NULL IN ()) ELSE ((vt1.c0)>(vt1.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((- (vt1.c0))) IS TRUE)) ORDER BY CASE CAST(rt1.c4 AS NUMERIC)  WHEN (- (vt1.c0)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c3)) THEN ((((rt1.c0)OR(rt1.c0)))AND(vt1.c0)) WHEN rt1.c2 THEN (NULL IN ()) ELSE ((vt1.c0)>(vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, rt1 ORDER BY CASE CAST(rt1.c4 AS NUMERIC)  WHEN (- (vt1.c0)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c3)) THEN ((((rt1.c0)OR(rt1.c0)))AND(vt1.c0)) WHEN rt1.c2 THEN (NULL IN ()) ELSE ((vt1.c0)>(vt1.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((- (vt1.c0))) IS TRUE)) ORDER BY CASE CAST(rt1.c4 AS NUMERIC)  WHEN (- (vt1.c0)) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c3)) THEN ((((rt1.c0)OR(rt1.c0)))AND(vt1.c0)) WHEN rt1.c2 THEN (NULL IN ()) ELSE ((vt1.c0)>(vt1.c0)) END DESC;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3) ISNULL) IN (((((rt1.c2)OR('m\n')))OR(rt1.c3))))) ORDER BY CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) ISNULL) IN (((((rt1.c2)OR('m\n')))OR(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 END COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3) ISNULL) IN (((((rt1.c2)OR('m\n')))OR(rt1.c3))))) ORDER BY CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) ISNULL) IN (((((rt1.c2)OR('m\n')))OR(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 END COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3) ISNULL) IN (((((rt1.c2)OR('m\n')))OR(rt1.c3))))) ORDER BY CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 END COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt0, rt1 WHERE ('G[婇G鑦?5');
SELECT SUM(count) FROM (SELECT ALL (('G[婇G鑦?5') IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('G[婇G鑦?5');
SELECT SUM(count) FROM (SELECT ALL (('G[婇G鑦?5') IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('G[婇G鑦?5');
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))>=((((rt0.c0)GLOB(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))>=((((rt0.c0)GLOB(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))>=((((rt0.c0)GLOB(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))>=((((rt0.c0)GLOB(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))>=((((rt0.c0)GLOB(rt0.c2))))));
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0)) BETWEEN ((0.07010909057044068)) AND ((0.5399093754964452))) AS REAL)) ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)<<(NULL))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) BETWEEN ((0.07010909057044068)) AND ((0.5399093754964452))) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)<<(NULL))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0)) BETWEEN ((0.07010909057044068)) AND ((0.5399093754964452))) AS REAL)) ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)<<(NULL))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) BETWEEN ((0.07010909057044068)) AND ((0.5399093754964452))) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)<<(NULL))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0)) BETWEEN ((0.07010909057044068)) AND ((0.5399093754964452))) AS REAL)) ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)<<(NULL))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)*(vt1.c0)) IN ())) ORDER BY CASE WHEN (vt1.c0 IN (vt1.c0)) THEN ((0.1534834975914221)>=(vt1.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END  NULLS FIRST, CAST(CASE WHEN x'e8a58c14' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)*(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c0 IN (vt1.c0)) THEN ((0.1534834975914221)>=(vt1.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END  NULLS FIRST, CAST(CASE WHEN x'e8a58c14' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)*(vt1.c0)) IN ())) ORDER BY CASE WHEN (vt1.c0 IN (vt1.c0)) THEN ((0.1534834975914221)>=(vt1.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END  NULLS FIRST, CAST(CASE WHEN x'e8a58c14' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)*(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c0 IN (vt1.c0)) THEN ((0.1534834975914221)>=(vt1.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END  NULLS FIRST, CAST(CASE WHEN x'e8a58c14' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)*(vt1.c0)) IN ())) ORDER BY CASE WHEN (vt1.c0 IN (vt1.c0)) THEN ((0.1534834975914221)>=(vt1.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END  NULLS FIRST, CAST(CASE WHEN x'e8a58c14' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((rt0.c3) ISNULL)) BETWEEN (CAST(x'6554ac30' AS BLOB)) AND (NULL)) RIGHT OUTER JOIN rt1 ON x'' WHERE (rt0.c3) ORDER BY (((((rt0.c2))>((rt0.c4))))*((((rt1.c1, rt1.c2, x'')) BETWEEN ((rt0.c3, rt0.c5, rt1.c1)) AND ((rt0.c0, rt1.c4, x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c3) ISNULL)) BETWEEN (CAST(x'6554ac30' AS BLOB)) AND (NULL)) RIGHT OUTER JOIN rt1 ON x'' ORDER BY (((((rt0.c2))>((rt0.c4))))*((((rt1.c1, rt1.c2, x'')) BETWEEN ((rt0.c3, rt0.c5, rt1.c1)) AND ((rt0.c0, rt1.c4, x''))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((rt0.c3) ISNULL)) BETWEEN (CAST(x'6554ac30' AS BLOB)) AND (NULL)) RIGHT OUTER JOIN rt1 ON x'' WHERE (rt0.c3) ORDER BY (((((rt0.c2))>((rt0.c4))))*((((rt1.c1, rt1.c2, x'')) BETWEEN ((rt0.c3, rt0.c5, rt1.c1)) AND ((rt0.c0, rt1.c4, x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c3) ISNULL)) BETWEEN (CAST(x'6554ac30' AS BLOB)) AND (NULL)) RIGHT OUTER JOIN rt1 ON x'' ORDER BY (((((rt0.c2))>((rt0.c4))))*((((rt1.c1, rt1.c2, x'')) BETWEEN ((rt0.c3, rt0.c5, rt1.c1)) AND ((rt0.c0, rt1.c4, x''))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((rt0.c3) ISNULL)) BETWEEN (CAST(x'6554ac30' AS BLOB)) AND (NULL)) RIGHT OUTER JOIN rt1 ON x'' WHERE (rt0.c3) ORDER BY (((((rt0.c2))>((rt0.c4))))*((((rt1.c1, rt1.c2, x'')) BETWEEN ((rt0.c3, rt0.c5, rt1.c1)) AND ((rt0.c0, rt1.c4, x''))))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c3)<<(rt0.c5))) IS TRUE)) ORDER BY ((((((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c5)))OR(rt0.c5)))AND(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<<(rt0.c5))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c5)))OR(rt0.c5)))AND(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (((((rt0.c3)<<(rt0.c5))) IS TRUE)) ORDER BY ((((((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c5)))OR(rt0.c5)))AND(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<<(rt0.c5))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c5)))OR(rt0.c5)))AND(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (((((rt0.c3)<<(rt0.c5))) IS TRUE)) ORDER BY ((((((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c5)))OR(rt0.c5)))AND(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 WHERE (CASE ((1.896804495E9)LIKE(rt0.c5))  WHEN ('-310914704' IN ()) THEN (NOT (rt0.c0)) ELSE ((((((((rt0.c4)AND(1363836768)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)) END) ORDER BY JULIANDAY((('0.9884611240537702') NOT BETWEEN (rt0.c4) AND (rt0.c0)), NULL, ((((rt0.c0)OR(rt0.c4)))AND('-607134099')), ((rt0.c5) NOT NULL), CAST(rt0.c4 AS NUMERIC)) ASC  NULLS LAST, ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE x'' END) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE ((1.896804495E9)LIKE(rt0.c5))  WHEN ('-310914704' IN ()) THEN (NOT (rt0.c0)) ELSE ((((((((rt0.c4)AND(1363836768)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY JULIANDAY((('0.9884611240537702') NOT BETWEEN (rt0.c4) AND (rt0.c0)), NULL, ((((rt0.c0)OR(rt0.c4)))AND('-607134099')), ((rt0.c5) NOT NULL), CAST(rt0.c4 AS NUMERIC)) ASC  NULLS LAST, ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE x'' END) IS FALSE));
SELECT ALL * FROM rt0 WHERE (CASE ((1.896804495E9)LIKE(rt0.c5))  WHEN ('-310914704' IN ()) THEN (NOT (rt0.c0)) ELSE ((((((((rt0.c4)AND(1363836768)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)) END) ORDER BY JULIANDAY((('0.9884611240537702') NOT BETWEEN (rt0.c4) AND (rt0.c0)), NULL, ((((rt0.c0)OR(rt0.c4)))AND('-607134099')), ((rt0.c5) NOT NULL), CAST(rt0.c4 AS NUMERIC)) ASC  NULLS LAST, ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE x'' END) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE ((1.896804495E9)LIKE(rt0.c5))  WHEN ('-310914704' IN ()) THEN (NOT (rt0.c0)) ELSE ((((((((rt0.c4)AND(1363836768)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY JULIANDAY((('0.9884611240537702') NOT BETWEEN (rt0.c4) AND (rt0.c0)), NULL, ((((rt0.c0)OR(rt0.c4)))AND('-607134099')), ((rt0.c5) NOT NULL), CAST(rt0.c4 AS NUMERIC)) ASC  NULLS LAST, ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE x'' END) IS FALSE));
SELECT ALL * FROM rt0 WHERE (CASE ((1.896804495E9)LIKE(rt0.c5))  WHEN ('-310914704' IN ()) THEN (NOT (rt0.c0)) ELSE ((((((((rt0.c4)AND(1363836768)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)) END) ORDER BY JULIANDAY((('0.9884611240537702') NOT BETWEEN (rt0.c4) AND (rt0.c0)), NULL, ((((rt0.c0)OR(rt0.c4)))AND('-607134099')), ((rt0.c5) NOT NULL), CAST(rt0.c4 AS NUMERIC)) ASC  NULLS LAST, ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 ELSE x'' END) IS FALSE);
SELECT ALL * FROM rt1 WHERE (CASE rt1.c3 COLLATE RTRIM  WHEN ((rt1.c1)>(rt1.c0)) THEN 'l,' END) ORDER BY (NOT (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c3 COLLATE RTRIM  WHEN ((rt1.c1)>(rt1.c0)) THEN 'l,' END) IS TRUE)  as count FROM rt1 ORDER BY (NOT (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 END)) ASC);
SELECT ALL * FROM rt1 WHERE (CASE rt1.c3 COLLATE RTRIM  WHEN ((rt1.c1)>(rt1.c0)) THEN 'l,' END) ORDER BY (NOT (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c3 COLLATE RTRIM  WHEN ((rt1.c1)>(rt1.c0)) THEN 'l,' END) IS TRUE)  as count FROM rt1 ORDER BY (NOT (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 END)) ASC);
SELECT ALL * FROM rt1 WHERE (CASE rt1.c3 COLLATE RTRIM  WHEN ((rt1.c1)>(rt1.c0)) THEN 'l,' END) ORDER BY (NOT (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 END)) ASC;
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CASE WHEN NULL THEN ((rt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((rt1.c0) IS TRUE) END) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CASE WHEN NULL THEN ((rt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((rt1.c0) IS TRUE) END) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CASE WHEN NULL THEN ((rt1.c0) IS TRUE) END);
SELECT * FROM vt1, rt0, rt1 WHERE ((~ (json_object(rt0.c3, rt1.c3)))) ORDER BY (~ (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (json_object(rt0.c3, rt1.c3)))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (~ (rt0.c0)) DESC);
SELECT * FROM vt1, rt0, rt1 WHERE ((~ (json_object(rt0.c3, rt1.c3)))) ORDER BY (~ (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (json_object(rt0.c3, rt1.c3)))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (~ (rt0.c0)) DESC);
SELECT * FROM vt1, rt0, rt1 WHERE ((~ (json_object(rt0.c3, rt1.c3)))) ORDER BY (~ (rt0.c0)) DESC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0)))AND(vt1.c0 COLLATE BINARY))) ORDER BY (((vt1.c0 IN ()))+(((((((((vt1.c0)OR(vt1.c0)))OR(0.44313593091633385)))AND(vt1.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(vt1.c0)))AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))+(((((((((vt1.c0)OR(vt1.c0)))OR(0.44313593091633385)))AND(vt1.c0)))AND(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0)))AND(vt1.c0 COLLATE BINARY))) ORDER BY (((vt1.c0 IN ()))+(((((((((vt1.c0)OR(vt1.c0)))OR(0.44313593091633385)))AND(vt1.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(vt1.c0)))AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))+(((((((((vt1.c0)OR(vt1.c0)))OR(0.44313593091633385)))AND(vt1.c0)))AND(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0)))AND(vt1.c0 COLLATE BINARY))) ORDER BY (((vt1.c0 IN ()))+(((((((((vt1.c0)OR(vt1.c0)))OR(0.44313593091633385)))AND(vt1.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (vt1.c0) ORDER BY (+ ((((rt0.c1))>=((rt1.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (+ ((((rt0.c1))>=((rt1.c2))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (vt1.c0) ORDER BY (+ ((((rt0.c1))>=((rt1.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (+ ((((rt0.c1))>=((rt1.c2))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (vt1.c0) ORDER BY (+ ((((rt0.c1))>=((rt1.c2))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON MAX(((rt1.c0) BETWEEN (845776114) AND (rt1.c0)), ((((((((((((rt0.c3)OR(rt1.c3)))AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c0)))OR(rt0.c5)))OR(rt1.c0))) FULL OUTER JOIN vt1 ON 0x1aeb2d9b WHERE ((NOT (0.24106462805335482)) COLLATE BINARY) ORDER BY ((x'') IS FALSE) DESC  NULLS LAST, ((CASE WHEN rt0.c5 THEN rt0.c0 ELSE rt1.c4 END) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (0.24106462805335482)) COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON MAX(((rt1.c0) BETWEEN (845776114) AND (rt1.c0)), ((((((((((((rt0.c3)OR(rt1.c3)))AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c0)))OR(rt0.c5)))OR(rt1.c0))) FULL OUTER JOIN vt1 ON 0x1aeb2d9b ORDER BY ((x'') IS FALSE) DESC  NULLS LAST, ((CASE WHEN rt0.c5 THEN rt0.c0 ELSE rt1.c4 END) ISNULL) DESC);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON MAX(((rt1.c0) BETWEEN (845776114) AND (rt1.c0)), ((((((((((((rt0.c3)OR(rt1.c3)))AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c0)))OR(rt0.c5)))OR(rt1.c0))) FULL OUTER JOIN vt1 ON 0x1aeb2d9b WHERE ((NOT (0.24106462805335482)) COLLATE BINARY) ORDER BY ((x'') IS FALSE) DESC  NULLS LAST, ((CASE WHEN rt0.c5 THEN rt0.c0 ELSE rt1.c4 END) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (0.24106462805335482)) COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON MAX(((rt1.c0) BETWEEN (845776114) AND (rt1.c0)), ((((((((((((rt0.c3)OR(rt1.c3)))AND(rt0.c2)))AND(rt0.c1)))AND(vt1.c0)))OR(rt0.c5)))OR(rt1.c0))) FULL OUTER JOIN vt1 ON 0x1aeb2d9b ORDER BY ((x'') IS FALSE) DESC  NULLS LAST, ((CASE WHEN rt0.c5 THEN rt0.c0 ELSE rt1.c4 END) ISNULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (((~ (vt1.c0)) IN ())) ORDER BY ((((vt1.c0)<<(vt1.c0)))AND(((vt1.c0)*(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<<(vt1.c0)))AND(((vt1.c0)*(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((~ (vt1.c0)) IN ())) ORDER BY ((((vt1.c0)<<(vt1.c0)))AND(((vt1.c0)*(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<<(vt1.c0)))AND(((vt1.c0)*(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((~ (vt1.c0)) IN ())) ORDER BY ((((vt1.c0)<<(vt1.c0)))AND(((vt1.c0)*(vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE ((~ (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE ((~ (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE ((~ (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c4))))<((CASE rt1.c0  WHEN NULL THEN rt1.c2 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c1 ELSE '131094370' END))) INNER JOIN rt1 ON TYPEOF((((rt1.c4, rt1.c2, rt0.c3)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt0.c4, rt0.c5, rt1.c1)))) WHERE (CASE WHEN x'' THEN rt0.c4 ELSE rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN rt0.c4 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c4))))<((CASE rt1.c0  WHEN NULL THEN rt1.c2 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c1 ELSE '131094370' END))) INNER JOIN rt1 ON TYPEOF((((rt1.c4, rt1.c2, rt0.c3)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt0.c4, rt0.c5, rt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c4))))<((CASE rt1.c0  WHEN NULL THEN rt1.c2 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c1 ELSE '131094370' END))) INNER JOIN rt1 ON TYPEOF((((rt1.c4, rt1.c2, rt0.c3)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt0.c4, rt0.c5, rt1.c1)))) WHERE (CASE WHEN x'' THEN rt0.c4 ELSE rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN rt0.c4 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c4))))<((CASE rt1.c0  WHEN NULL THEN rt1.c2 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c1 ELSE '131094370' END))) INNER JOIN rt1 ON TYPEOF((((rt1.c4, rt1.c2, rt0.c3)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt0.c4, rt0.c5, rt1.c1)))));
SELECT * FROM rt1, rt0 WHERE (((((rt1.c1)=(rt1.c3)))>((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)=(rt1.c3)))>((~ (rt0.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c1)=(rt1.c3)))>((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)=(rt1.c3)))>((~ (rt0.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c1)=(rt1.c3)))>((~ (rt0.c0)))));
SELECT * FROM rt1, vt1 WHERE (ABS(((rt1.c3)IS NOT(vt1.c0)))) ORDER BY (((((rt1.c2, rt1.c2, rt1.c4)) NOT BETWEEN ((vt1.c0, rt1.c2, x'f047')) AND ((rt1.c3, rt1.c0, vt1.c0)))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(((rt1.c3)IS NOT(vt1.c0)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((((rt1.c2, rt1.c2, rt1.c4)) NOT BETWEEN ((vt1.c0, rt1.c2, x'f047')) AND ((rt1.c3, rt1.c0, vt1.c0)))) ISNULL) ASC  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE (ABS(((rt1.c3)IS NOT(vt1.c0)))) ORDER BY (((((rt1.c2, rt1.c2, rt1.c4)) NOT BETWEEN ((vt1.c0, rt1.c2, x'f047')) AND ((rt1.c3, rt1.c0, vt1.c0)))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(((rt1.c3)IS NOT(vt1.c0)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((((rt1.c2, rt1.c2, rt1.c4)) NOT BETWEEN ((vt1.c0, rt1.c2, x'f047')) AND ((rt1.c3, rt1.c0, vt1.c0)))) ISNULL) ASC  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE (ABS(((rt1.c3)IS NOT(vt1.c0)))) ORDER BY (((((rt1.c2, rt1.c2, rt1.c4)) NOT BETWEEN ((vt1.c0, rt1.c2, x'f047')) AND ((rt1.c3, rt1.c0, vt1.c0)))) ISNULL) ASC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt1.c0);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c2)))AND(NULL)))OR(rt1.c1)))LIKE(((rt1.c0)AND(rt1.c0))))) ORDER BY (~ (((NULL)-(rt1.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c2)))AND(NULL)))OR(rt1.c1)))LIKE(((rt1.c0)AND(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (~ (((NULL)-(rt1.c4)))) ASC);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c2)))AND(NULL)))OR(rt1.c1)))LIKE(((rt1.c0)AND(rt1.c0))))) ORDER BY (~ (((NULL)-(rt1.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c2)))AND(NULL)))OR(rt1.c1)))LIKE(((rt1.c0)AND(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (~ (((NULL)-(rt1.c4)))) ASC);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((((((((((rt1.c3)OR(rt1.c1)))AND(rt1.c2)))AND(NULL)))OR(rt1.c1)))LIKE(((rt1.c0)AND(rt1.c0))))) ORDER BY (~ (((NULL)-(rt1.c4)))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))LIKE(((vt1.c0)>>(vt1.c0))))) ORDER BY (('-2046077966')/(vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))LIKE(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (('-2046077966')/(vt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))LIKE(((vt1.c0)>>(vt1.c0))))) ORDER BY (('-2046077966')/(vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))LIKE(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (('-2046077966')/(vt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))LIKE(((vt1.c0)>>(vt1.c0))))) ORDER BY (('-2046077966')/(vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((rt1.c3)+(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c3)+(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((rt1.c3)+(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c3)+(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((rt1.c3)+(rt1.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE ((((x'')) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((CAST(rt0.c1 AS NUMERIC))))) ORDER BY 0.52747855278373 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM rt0 ORDER BY 0.52747855278373 ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((x'')) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((CAST(rt0.c1 AS NUMERIC))))) ORDER BY 0.52747855278373 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM rt0 ORDER BY 0.52747855278373 ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((x'')) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((CAST(rt0.c1 AS NUMERIC))))) ORDER BY 0.52747855278373 ASC;
SELECT ALL * FROM vt1, rt1 NOT INDEXED WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN rt1.c0 END) ORDER BY ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c3))) BETWEEN (((((rt1.c4)OR(rt1.c3)))AND(rt1.c0))) AND (((rt1.c3) BETWEEN (rt1.c4) AND (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE BINARY THEN rt1.c0 END) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c3))) BETWEEN (((((rt1.c4)OR(rt1.c3)))AND(rt1.c0))) AND (((rt1.c3) BETWEEN (rt1.c4) AND (NULL))))  NULLS LAST);
SELECT ALL * FROM vt1, rt1 NOT INDEXED WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN rt1.c0 END) ORDER BY ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c3))) BETWEEN (((((rt1.c4)OR(rt1.c3)))AND(rt1.c0))) AND (((rt1.c3) BETWEEN (rt1.c4) AND (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE BINARY THEN rt1.c0 END) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c3))) BETWEEN (((((rt1.c4)OR(rt1.c3)))AND(rt1.c0))) AND (((rt1.c3) BETWEEN (rt1.c4) AND (NULL))))  NULLS LAST);
SELECT ALL * FROM vt1, rt1 NOT INDEXED WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN rt1.c0 END) ORDER BY ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c3))) BETWEEN (((((rt1.c4)OR(rt1.c3)))AND(rt1.c0))) AND (((rt1.c3) BETWEEN (rt1.c4) AND (NULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM rt0, rt1 WHERE ((((((0X19ede160))>((rt1.c3)))) BETWEEN (rt0.c5 COLLATE RTRIM) AND (((rt1.c2) NOT BETWEEN (rt0.c5) AND (rt1.c0))))) ORDER BY (NOT ((('')OR(rt0.c3)))), rt1.c3;
SELECT SUM(count) FROM (SELECT (((((((0x19ede160))>((rt1.c3)))) BETWEEN (rt0.c5 COLLATE RTRIM) AND (((rt1.c2) NOT BETWEEN (rt0.c5) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (NOT ((('')OR(rt0.c3)))), rt1.c3);
SELECT ALL * FROM rt0, rt1 WHERE ((((((0X19ede160))>((rt1.c3)))) BETWEEN (rt0.c5 COLLATE RTRIM) AND (((rt1.c2) NOT BETWEEN (rt0.c5) AND (rt1.c0))))) ORDER BY (NOT ((('')OR(rt0.c3)))), rt1.c3;
SELECT SUM(count) FROM (SELECT (((((((0x19ede160))>((rt1.c3)))) BETWEEN (rt0.c5 COLLATE RTRIM) AND (((rt1.c2) NOT BETWEEN (rt0.c5) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (NOT ((('')OR(rt0.c3)))), rt1.c3);
SELECT ALL * FROM rt0, rt1 WHERE ((((((0X19ede160))>((rt1.c3)))) BETWEEN (rt0.c5 COLLATE RTRIM) AND (((rt1.c2) NOT BETWEEN (rt0.c5) AND (rt1.c0))))) ORDER BY (NOT ((('')OR(rt0.c3)))), rt1.c3;
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE ((((rt1.c1)) NOT BETWEEN (((rt1.c0 IN (rt1.c2)))) AND ((((rt1.c4)=(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN (((rt1.c0 IN (rt1.c2)))) AND ((((rt1.c4)==(rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE ((((rt1.c1)) NOT BETWEEN (((rt1.c0 IN (rt1.c2)))) AND ((((rt1.c4)=(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN (((rt1.c0 IN (rt1.c2)))) AND ((((rt1.c4)==(rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED WHERE ((((rt1.c1)) NOT BETWEEN (((rt1.c0 IN (rt1.c2)))) AND ((((rt1.c4)=(rt1.c1))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt1 ON (((('0.7094792020118202') NOT BETWEEN (rt1.c4) AND (rt0.c4))) ISNULL) RIGHT OUTER JOIN rt0 ON ((vt1.c0)+(vt1.c0)) COLLATE BINARY WHERE (((((((((rt0.c5)OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c4)))AND(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c5)OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c4)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON (((('0.7094792020118202') NOT BETWEEN (rt1.c4) AND (rt0.c4))) ISNULL) RIGHT OUTER JOIN rt0 ON ((vt1.c0)+(vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt1 ON (((('0.7094792020118202') NOT BETWEEN (rt1.c4) AND (rt0.c4))) ISNULL) RIGHT OUTER JOIN rt0 ON ((vt1.c0)+(vt1.c0)) COLLATE BINARY WHERE (((((((((rt0.c5)OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c4)))AND(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c5)OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c4)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON (((('0.7094792020118202') NOT BETWEEN (rt1.c4) AND (rt0.c4))) ISNULL) RIGHT OUTER JOIN rt0 ON ((vt1.c0)+(vt1.c0)) COLLATE BINARY);
SELECT * FROM rt1, rt0 WHERE (rt0.c0) ORDER BY ((((rt1.c4, rt0.c4, rt1.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt1.c2)) AND ((rt0.c4, rt0.c3, rt1.c4))) IN (0.1402779123286353))  NULLS LAST, CAST(((rt1.c1)|(x'fc23')) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c4, rt0.c4, rt1.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt1.c2)) AND ((rt0.c4, rt0.c3, rt1.c4))) IN (0.1402779123286353))  NULLS LAST, CAST(((rt1.c1)|(x'fc23')) AS INTEGER));
SELECT * FROM rt1, rt0 WHERE (rt0.c0) ORDER BY ((((rt1.c4, rt0.c4, rt1.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt1.c2)) AND ((rt0.c4, rt0.c3, rt1.c4))) IN (0.1402779123286353))  NULLS LAST, CAST(((rt1.c1)|(x'fc23')) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c4, rt0.c4, rt1.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt1.c2)) AND ((rt0.c4, rt0.c3, rt1.c4))) IN (0.1402779123286353))  NULLS LAST, CAST(((rt1.c1)|(x'fc23')) AS INTEGER));
SELECT * FROM rt1, rt0 WHERE (rt0.c0) ORDER BY ((((rt1.c4, rt0.c4, rt1.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt1.c2)) AND ((rt0.c4, rt0.c3, rt1.c4))) IN (0.1402779123286353))  NULLS LAST, CAST(((rt1.c1)|(x'fc23')) AS INTEGER);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c5 AS TEXT)) NOT BETWEEN (CAST(NULL AS REAL)) AND (LIKELY(rt0.c5))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c5 AS TEXT)) NOT BETWEEN (CAST(NULL AS REAL)) AND (LIKELY(rt0.c5)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c5 AS TEXT)) NOT BETWEEN (CAST(NULL AS REAL)) AND (LIKELY(rt0.c5))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c5 AS TEXT)) NOT BETWEEN (CAST(NULL AS REAL)) AND (LIKELY(rt0.c5)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c5 AS TEXT)) NOT BETWEEN (CAST(NULL AS REAL)) AND (LIKELY(rt0.c5))));
SELECT ALL * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((NOT (NULL)));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (rt0.c3 COLLATE RTRIM) ORDER BY (((rt0.c5, 0.6296818069194808, rt1.c4, rt1.c2, rt1.c4)) NOT BETWEEN (((((vt1.c0))<((rt1.c1))), ((rt1.c3) BETWEEN (rt0.c5) AND (rt0.c3)), ((rt1.c2) BETWEEN (rt0.c5) AND (rt1.c4)), (rt0.c0 IN ()), rt0.c3)) AND (((rt0.c5 IN ()), (((rt0.c0, rt0.c0, rt0.c5)) NOT BETWEEN ((rt1.c3, rt1.c0, rt0.c0)) AND ((rt1.c2, rt1.c1, rt1.c4))), ((NULL)<<(rt0.c5)), (((rt0.c0))<((rt1.c2))), ((((rt1.c0)OR(rt0.c5)))AND(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((rt0.c5, 0.6296818069194808, rt1.c4, rt1.c2, rt1.c4)) NOT BETWEEN (((((vt1.c0))<((rt1.c1))), ((rt1.c3) BETWEEN (rt0.c5) AND (rt0.c3)), ((rt1.c2) BETWEEN (rt0.c5) AND (rt1.c4)), (rt0.c0 IN ()), rt0.c3)) AND (((rt0.c5 IN ()), (((rt0.c0, rt0.c0, rt0.c5)) NOT BETWEEN ((rt1.c3, rt1.c0, rt0.c0)) AND ((rt1.c2, rt1.c1, rt1.c4))), ((NULL)<<(rt0.c5)), (((rt0.c0))<((rt1.c2))), ((((rt1.c0)OR(rt0.c5)))AND(rt1.c4))))));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (rt0.c3 COLLATE RTRIM) ORDER BY (((rt0.c5, 0.6296818069194808, rt1.c4, rt1.c2, rt1.c4)) NOT BETWEEN (((((vt1.c0))<((rt1.c1))), ((rt1.c3) BETWEEN (rt0.c5) AND (rt0.c3)), ((rt1.c2) BETWEEN (rt0.c5) AND (rt1.c4)), (rt0.c0 IN ()), rt0.c3)) AND (((rt0.c5 IN ()), (((rt0.c0, rt0.c0, rt0.c5)) NOT BETWEEN ((rt1.c3, rt1.c0, rt0.c0)) AND ((rt1.c2, rt1.c1, rt1.c4))), ((NULL)<<(rt0.c5)), (((rt0.c0))<((rt1.c2))), ((((rt1.c0)OR(rt0.c5)))AND(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((rt0.c5, 0.6296818069194808, rt1.c4, rt1.c2, rt1.c4)) NOT BETWEEN (((((vt1.c0))<((rt1.c1))), ((rt1.c3) BETWEEN (rt0.c5) AND (rt0.c3)), ((rt1.c2) BETWEEN (rt0.c5) AND (rt1.c4)), (rt0.c0 IN ()), rt0.c3)) AND (((rt0.c5 IN ()), (((rt0.c0, rt0.c0, rt0.c5)) NOT BETWEEN ((rt1.c3, rt1.c0, rt0.c0)) AND ((rt1.c2, rt1.c1, rt1.c4))), ((NULL)<<(rt0.c5)), (((rt0.c0))<((rt1.c2))), ((((rt1.c0)OR(rt0.c5)))AND(rt1.c4))))));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (rt0.c3 COLLATE RTRIM) ORDER BY (((rt0.c5, 0.6296818069194808, rt1.c4, rt1.c2, rt1.c4)) NOT BETWEEN (((((vt1.c0))<((rt1.c1))), ((rt1.c3) BETWEEN (rt0.c5) AND (rt0.c3)), ((rt1.c2) BETWEEN (rt0.c5) AND (rt1.c4)), (rt0.c0 IN ()), rt0.c3)) AND (((rt0.c5 IN ()), (((rt0.c0, rt0.c0, rt0.c5)) NOT BETWEEN ((rt1.c3, rt1.c0, rt0.c0)) AND ((rt1.c2, rt1.c1, rt1.c4))), ((NULL)<<(rt0.c5)), (((rt0.c0))<((rt1.c2))), ((((rt1.c0)OR(rt0.c5)))AND(rt1.c4)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((load_extension(rt0.c2)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c2)) NOT NULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((load_extension(rt0.c2)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c2)) NOT NULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c2))) IS FALSE) FULL OUTER JOIN rt1 ON ((1231281574) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((rt0.c1 IN ()))) WHERE (CASE rt1.c4  WHEN CAST(rt1.c0 AS NUMERIC) THEN (NOT (rt1.c1)) WHEN 0xffffffffb82b67d9 THEN (('624553518') ISNULL) WHEN ((((((((rt1.c4)OR(0.4963500374136882)))AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c4)) THEN ((vt1.c0)<(-600167216)) END) ORDER BY (((rt0.c3 IN (rt1.c0, NULL))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c4  WHEN CAST(rt1.c0 AS NUMERIC) THEN (NOT (rt1.c1)) WHEN 0xffffffffb82b67d9 THEN (('624553518') ISNULL) WHEN ((((((((rt1.c4)OR(0.4963500374136882)))AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c4)) THEN ((vt1.c0)<(-600167216)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c2))) IS FALSE) FULL OUTER JOIN rt1 ON ((1231281574) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((rt0.c1 IN ()))) ORDER BY (((rt0.c3 IN (rt1.c0, NULL))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c2))) IS FALSE) FULL OUTER JOIN rt1 ON ((1231281574) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((rt0.c1 IN ()))) WHERE (CASE rt1.c4  WHEN CAST(rt1.c0 AS NUMERIC) THEN (NOT (rt1.c1)) WHEN 0xffffffffb82b67d9 THEN (('624553518') ISNULL) WHEN ((((((((rt1.c4)OR(0.4963500374136882)))AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c4)) THEN ((vt1.c0)<(-600167216)) END) ORDER BY (((rt0.c3 IN (rt1.c0, NULL))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c4  WHEN CAST(rt1.c0 AS NUMERIC) THEN (NOT (rt1.c1)) WHEN 0xffffffffb82b67d9 THEN (('624553518') ISNULL) WHEN ((((((((rt1.c4)OR(0.4963500374136882)))AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c4)) THEN ((vt1.c0)<(-600167216)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c2))) IS FALSE) FULL OUTER JOIN rt1 ON ((1231281574) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((rt0.c1 IN ()))) ORDER BY (((rt0.c3 IN (rt1.c0, NULL))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c2))) IS FALSE) FULL OUTER JOIN rt1 ON ((1231281574) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((rt0.c1 IN ()))) WHERE (CASE rt1.c4  WHEN CAST(rt1.c0 AS NUMERIC) THEN (NOT (rt1.c1)) WHEN 0xffffffffb82b67d9 THEN (('624553518') ISNULL) WHEN ((((((((rt1.c4)OR(0.4963500374136882)))AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c4)) THEN ((vt1.c0)<(-600167216)) END) ORDER BY (((rt0.c3 IN (rt1.c0, NULL))) NOTNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (~ (UNLIKELY(rt0.c4))) WHERE ((~ ((rt1.c2 IN (rt0.c2, rt0.c3))))) ORDER BY (('-1028834731')<(rt0.c5 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c2 IN (rt0.c2, rt0.c3))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (~ (UNLIKELY(rt0.c4))) ORDER BY (('-1028834731')<(rt0.c5 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (~ (UNLIKELY(rt0.c4))) WHERE ((~ ((rt1.c2 IN (rt0.c2, rt0.c3))))) ORDER BY (('-1028834731')<(rt0.c5 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c2 IN (rt0.c2, rt0.c3))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (~ (UNLIKELY(rt0.c4))) ORDER BY (('-1028834731')<(rt0.c5 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (~ (UNLIKELY(rt0.c4))) WHERE ((~ ((rt1.c2 IN (rt0.c2, rt0.c3))))) ORDER BY (('-1028834731')<(rt0.c5 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CASE -1366856128  WHEN (+ (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY SQLITE_COMPILEOPTION_GET((((vt1.c0, vt1.c0, 0.3175348469378554)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE -1366856128  WHEN (+ (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET((((vt1.c0, vt1.c0, 0.3175348469378554)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE -1366856128  WHEN (+ (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY SQLITE_COMPILEOPTION_GET((((vt1.c0, vt1.c0, 0.3175348469378554)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE -1366856128  WHEN (+ (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET((((vt1.c0, vt1.c0, 0.3175348469378554)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE -1366856128  WHEN (+ (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN vt1.c0 COLLATE NOCASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY SQLITE_COMPILEOPTION_GET((((vt1.c0, vt1.c0, 0.3175348469378554)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c3))) ORDER BY (((+ (rt1.c2)))==((((rt1.c1))<((rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY (((+ (rt1.c2)))=((((rt1.c1))<((rt1.c2))))) ASC);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c3))) ORDER BY (((+ (rt1.c2)))==((((rt1.c1))<((rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY (((+ (rt1.c2)))=((((rt1.c1))<((rt1.c2))))) ASC);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c3))) ORDER BY (((+ (rt1.c2)))==((((rt1.c1))<((rt1.c2))))) ASC;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c0)) ELSE (- (rt1.c2)) END LEFT OUTER JOIN rt0 ON ((((((((((rt1.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)))OR(CAST(rt0.c0 AS REAL))))OR(((rt0.c3) IS TRUE))))AND(NULL)))AND(CAST(rt0.c1 AS REAL))) WHERE ((+ (rt0.c5)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c5))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c0)) ELSE (- (rt1.c2)) END LEFT OUTER JOIN rt0 ON ((((((((((rt1.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)))OR(CAST(rt0.c0 AS REAL))))OR(((rt0.c3) IS TRUE))))AND(NULL)))AND(CAST(rt0.c1 AS REAL))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c0)) ELSE (- (rt1.c2)) END LEFT OUTER JOIN rt0 ON ((((((((((rt1.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)))OR(CAST(rt0.c0 AS REAL))))OR(((rt0.c3) IS TRUE))))AND(NULL)))AND(CAST(rt0.c1 AS REAL))) WHERE ((+ (rt0.c5)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c5))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c0)) ELSE (- (rt1.c2)) END LEFT OUTER JOIN rt0 ON ((((((((((rt1.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)))OR(CAST(rt0.c0 AS REAL))))OR(((rt0.c3) IS TRUE))))AND(NULL)))AND(CAST(rt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))) IS FALSE)) ORDER BY (UNLIKELY(rt0.c2) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (UNLIKELY(rt0.c2) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))) IS FALSE)) ORDER BY (UNLIKELY(rt0.c2) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (UNLIKELY(rt0.c2) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))) IS FALSE)) ORDER BY (UNLIKELY(rt0.c2) IN ());
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((((rt1.c4) NOT BETWEEN (0.0018460480156538006) AND (rt0.c0)))>>((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4) NOT BETWEEN (0.0018460480156538006) AND (rt0.c0)))>>((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((((rt1.c4) NOT BETWEEN (0.0018460480156538006) AND (rt0.c0)))>>((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4) NOT BETWEEN (0.0018460480156538006) AND (rt0.c0)))>>((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((((rt1.c4) NOT BETWEEN (0.0018460480156538006) AND (rt0.c0)))>>((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))));
SELECT * FROM rt1 WHERE (((NULL)>=(((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((NULL)>=(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((NULL)>=(((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((NULL)>=(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((NULL)>=(((rt1.c2) ISNULL))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((IFNULL(rt0.c3, vt1.c0)) IS FALSE) INNER JOIN rt1 ON ((((rt0.c4)IS NOT(-1384089220))) IS TRUE) WHERE (CAST(x'fded' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'fded' AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((IFNULL(rt0.c3, vt1.c0)) IS FALSE) INNER JOIN rt1 ON ((((rt0.c4)IS NOT(-1384089220))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((IFNULL(rt0.c3, vt1.c0)) IS FALSE) INNER JOIN rt1 ON ((((rt0.c4)IS NOT(-1384089220))) IS TRUE) WHERE (CAST(x'fded' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'fded' AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((IFNULL(rt0.c3, vt1.c0)) IS FALSE) INNER JOIN rt1 ON ((((rt0.c4)IS NOT(-1384089220))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((IFNULL(rt0.c3, vt1.c0)) IS FALSE) INNER JOIN rt1 ON ((((rt0.c4)IS NOT(-1384089220))) IS TRUE) WHERE (CAST(x'fded' AS REAL));
SELECT ALL COUNT(*) FROM rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((json_insert('EWm<?y', rt1.c3, rt1.c3))OR(((rt1.c1)>(rt1.c3)))))OR(0.14970238893491195)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt1 ORDER BY ((((json_insert('EWm<?y', rt1.c3, rt1.c3))OR(((rt1.c1)>(rt1.c3)))))OR(0.14970238893491195)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((json_insert('EWm<?y', rt1.c3, rt1.c3))OR(((rt1.c1)>(rt1.c3)))))OR(0.14970238893491195)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt1 ORDER BY ((((json_insert('EWm<?y', rt1.c3, rt1.c3))OR(((rt1.c1)>(rt1.c3)))))OR(0.14970238893491195)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((json_insert('EWm<?y', rt1.c3, rt1.c3))OR(((rt1.c1)>(rt1.c3)))))OR(0.14970238893491195)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE (TRIM(((((rt0.c2)AND(rt0.c5)))OR(rt0.c4)))) ORDER BY rt0.c0 DESC, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (((rt0.c2)<=(0.1672132201407741)))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(((((rt0.c2)AND(rt0.c5)))OR(rt0.c4)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c0 DESC, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (((rt0.c2)<=(0.1672132201407741)))) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (TRIM(((((rt0.c2)AND(rt0.c5)))OR(rt0.c4)))) ORDER BY rt0.c0 DESC, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (((rt0.c2)<=(0.1672132201407741)))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(((((rt0.c2)AND(rt0.c5)))OR(rt0.c4)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c0 DESC, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (((rt0.c2)<=(0.1672132201407741)))) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (TRIM(((((rt0.c2)AND(rt0.c5)))OR(rt0.c4)))) ORDER BY rt0.c0 DESC, ((rt0.c1) NOT BETWEEN (rt0.c0) AND (((rt0.c2)<=(0.1672132201407741)))) ASC;
SELECT ALL * FROM rt0 WHERE (((((-1.504971249E9) ISNULL))||(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY rt0.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((-1.504971249E9) ISNULL))||(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((-1.504971249E9) ISNULL))||(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY rt0.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((-1.504971249E9) ISNULL))||(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((-1.504971249E9) ISNULL))||(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY rt0.c3 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST((rt1.c2 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c0) NOT NULL)))) ORDER BY ((CAST(vt1.c0 AS INTEGER))<=(vt1.c0)) ASC, ((((((rt0.c4)OR(rt0.c5)))AND(rt0.c4)))<=(((rt0.c5)OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))<=(vt1.c0)) ASC, ((((((rt0.c4)OR(rt0.c5)))AND(rt0.c4)))<=(((rt0.c5)OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c0) NOT NULL)))) ORDER BY ((CAST(vt1.c0 AS INTEGER))<=(vt1.c0)) ASC, ((((((rt0.c4)OR(rt0.c5)))AND(rt0.c4)))<=(((rt0.c5)OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))<=(vt1.c0)) ASC, ((((((rt0.c4)OR(rt0.c5)))AND(rt0.c4)))<=(((rt0.c5)OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c0) NOT NULL)))) ORDER BY ((CAST(vt1.c0 AS INTEGER))<=(vt1.c0)) ASC, ((((((rt0.c4)OR(rt0.c5)))AND(rt0.c4)))<=(((rt0.c5)OR(rt0.c2))));
SELECT COUNT(*) FROM rt1, vt1 WHERE ((((rt1.c1)<<(rt1.c3)) IN ())) ORDER BY 0.16837292456330122 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)<<(rt1.c3)) IN ())) IS TRUE)  as count FROM rt1, vt1 ORDER BY 0.16837292456330122 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((((rt1.c1)<<(rt1.c3)) IN ())) ORDER BY 0.16837292456330122 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)<<(rt1.c3)) IN ())) IS TRUE)  as count FROM rt1, vt1 ORDER BY 0.16837292456330122 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((((rt1.c1)<<(rt1.c3)) IN ())) ORDER BY 0.16837292456330122 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (((vt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (ABS(DISTINCT rt1.c2)) ORDER BY CAST(rt1.c1 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt1.c2)) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST(rt1.c1 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (ABS(DISTINCT rt1.c2)) ORDER BY CAST(rt1.c1 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt1.c2)) IS TRUE)  as count FROM rt1, vt1 ORDER BY CAST(rt1.c1 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (ABS(DISTINCT rt1.c2)) ORDER BY CAST(rt1.c1 AS NUMERIC) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3 COLLATE BINARY)OR(rt0.c3 COLLATE RTRIM)))OR(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 COLLATE BINARY)OR(rt0.c3 COLLATE RTRIM)))OR(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3 COLLATE BINARY)OR(rt0.c3 COLLATE RTRIM)))OR(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 COLLATE BINARY)OR(rt0.c3 COLLATE RTRIM)))OR(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3 COLLATE BINARY)OR(rt0.c3 COLLATE RTRIM)))OR(rt0.c3 COLLATE RTRIM)));
SELECT ALL * FROM rt1, vt1, rt0 WHERE ((((((rt0.c5)OR(rt0.c4)))OR(rt1.c1)) IN ())) ORDER BY ((((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c0)))OR((((rt0.c5))<=((rt0.c1))))))OR((rt0.c4 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)OR(rt0.c4)))OR(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY ((((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c0)))OR((((rt0.c5))<=((rt0.c1))))))OR((rt0.c4 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE ((((((rt0.c5)OR(rt0.c4)))OR(rt1.c1)) IN ())) ORDER BY ((((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c0)))OR((((rt0.c5))<=((rt0.c1))))))OR((rt0.c4 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)OR(rt0.c4)))OR(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY ((((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c0)))OR((((rt0.c5))<=((rt0.c1))))))OR((rt0.c4 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE ((((((rt0.c5)OR(rt0.c4)))OR(rt1.c1)) IN ())) ORDER BY ((((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c0)))OR((((rt0.c5))<=((rt0.c1))))))OR((rt0.c4 IN ())))  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((((('0')AND(vt1.c0)))AND(vt1.c0))))>=((vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((('0')AND(vt1.c0)))AND(vt1.c0))))>=((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((('0')AND(vt1.c0)))AND(vt1.c0))))>=((vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((('0')AND(vt1.c0)))AND(vt1.c0))))>=((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((('0')AND(vt1.c0)))AND(vt1.c0))))>=((vt1.c0))));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((rt0.c0) IS FALSE)) ORDER BY (((- (1.29115132E8)))<>(IFNULL(DISTINCT rt1.c0, rt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((- (1.29115132E8)))!=(IFNULL(DISTINCT rt1.c0, rt1.c0))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((rt0.c0) IS FALSE)) ORDER BY (((- (1.29115132E8)))<>(IFNULL(DISTINCT rt1.c0, rt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((- (1.29115132E8)))!=(IFNULL(DISTINCT rt1.c0, rt1.c0))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (((rt0.c0) IS FALSE)) ORDER BY (((- (1.29115132E8)))<>(IFNULL(DISTINCT rt1.c0, rt1.c0))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CASE json_object(vt1.c0, rt0.c1)  WHEN ((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c2)))OR(rt0.c4)))AND('465636337')) THEN rt1.c3 WHEN ((rt1.c3)-(rt0.c4)) THEN ((((rt1.c1)OR(rt0.c2)))AND(rt1.c0)) WHEN rt0.c0 THEN (rt0.c3 IN ()) ELSE ((NULL)>(rt0.c3)) END) ORDER BY NULLIF(rt0.c4 COLLATE BINARY, ((rt1.c0) BETWEEN (0.17706852613330681) AND (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE json_object(vt1.c0, rt0.c1)  WHEN ((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c2)))OR(rt0.c4)))AND('465636337')) THEN rt1.c3 WHEN ((rt1.c3)-(rt0.c4)) THEN ((((rt1.c1)OR(rt0.c2)))AND(rt1.c0)) WHEN rt0.c0 THEN (rt0.c3 IN ()) ELSE ((NULL)>(rt0.c3)) END) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY NULLIF(rt0.c4 COLLATE BINARY, ((rt1.c0) BETWEEN (0.17706852613330681) AND (rt0.c2))) ASC);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CASE json_object(vt1.c0, rt0.c1)  WHEN ((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c2)))OR(rt0.c4)))AND('465636337')) THEN rt1.c3 WHEN ((rt1.c3)-(rt0.c4)) THEN ((((rt1.c1)OR(rt0.c2)))AND(rt1.c0)) WHEN rt0.c0 THEN (rt0.c3 IN ()) ELSE ((NULL)>(rt0.c3)) END) ORDER BY NULLIF(rt0.c4 COLLATE BINARY, ((rt1.c0) BETWEEN (0.17706852613330681) AND (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE json_object(vt1.c0, rt0.c1)  WHEN ((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c2)))OR(rt0.c4)))AND('465636337')) THEN rt1.c3 WHEN ((rt1.c3)-(rt0.c4)) THEN ((((rt1.c1)OR(rt0.c2)))AND(rt1.c0)) WHEN rt0.c0 THEN (rt0.c3 IN ()) ELSE ((NULL)>(rt0.c3)) END) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY NULLIF(rt0.c4 COLLATE BINARY, ((rt1.c0) BETWEEN (0.17706852613330681) AND (rt0.c2))) ASC);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CASE json_object(vt1.c0, rt0.c1)  WHEN ((((((((rt1.c3)AND(rt1.c3)))OR(rt1.c2)))OR(rt0.c4)))AND('465636337')) THEN rt1.c3 WHEN ((rt1.c3)-(rt0.c4)) THEN ((((rt1.c1)OR(rt0.c2)))AND(rt1.c0)) WHEN rt0.c0 THEN (rt0.c3 IN ()) ELSE ((NULL)>(rt0.c3)) END) ORDER BY NULLIF(rt0.c4 COLLATE BINARY, ((rt1.c0) BETWEEN (0.17706852613330681) AND (rt0.c2))) ASC;
SELECT ALL * FROM vt1, rt0, rt1 WHERE ((((rt0.c0)*(rt0.c0)) IN ())) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((vt1.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)*(rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((vt1.c0) ISNULL))) ASC);
SELECT ALL * FROM vt1, rt0, rt1 WHERE ((((rt0.c0)*(rt0.c0)) IN ())) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((vt1.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)*(rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((vt1.c0) ISNULL))) ASC);
SELECT ALL * FROM vt1, rt0, rt1 WHERE ((((rt0.c0)*(rt0.c0)) IN ())) ORDER BY ((rt1.c2 COLLATE RTRIM) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((vt1.c0) ISNULL))) ASC;
SELECT * FROM rt1 WHERE (((rt1.c1)-('-1422367586')) COLLATE BINARY) ORDER BY ((((CAST(rt1.c0 AS NUMERIC))OR(((rt1.c2) ISNULL))))AND((rt1.c2 IN ()))) DESC  NULLS FIRST, CAST((+ (rt1.c2)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1)-('-1422367586')) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(rt1.c0 AS NUMERIC))OR(((rt1.c2) ISNULL))))AND((rt1.c2 IN ()))) DESC  NULLS FIRST, CAST((+ (rt1.c2)) AS NUMERIC) DESC);
SELECT * FROM rt1 WHERE (((rt1.c1)-('-1422367586')) COLLATE BINARY) ORDER BY ((((CAST(rt1.c0 AS NUMERIC))OR(((rt1.c2) ISNULL))))AND((rt1.c2 IN ()))) DESC  NULLS FIRST, CAST((+ (rt1.c2)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1)-('-1422367586')) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(rt1.c0 AS NUMERIC))OR(((rt1.c2) ISNULL))))AND((rt1.c2 IN ()))) DESC  NULLS FIRST, CAST((+ (rt1.c2)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4 COLLATE BINARY) BETWEEN (((rt0.c5) NOTNULL)) AND (((rt0.c2) ISNULL)))) ORDER BY x'4e2c' ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE BINARY) BETWEEN (((rt0.c5) NOTNULL)) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY x'4e2c' ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4 COLLATE BINARY) BETWEEN (((rt0.c5) NOTNULL)) AND (((rt0.c2) ISNULL)))) ORDER BY x'4e2c' ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE BINARY) BETWEEN (((rt0.c5) NOTNULL)) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY x'4e2c' ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4 COLLATE BINARY) BETWEEN (((rt0.c5) NOTNULL)) AND (((rt0.c2) ISNULL)))) ORDER BY x'4e2c' ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (0.2951167099393518) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((0.2951167099393518) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.2951167099393518) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((0.2951167099393518) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.2951167099393518) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL)) ORDER BY (((NOT ('950731721'))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY (((NOT ('950731721'))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL)) ORDER BY (((NOT ('950731721'))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY (((NOT ('950731721'))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS REAL)) ORDER BY (((NOT ('950731721'))) IS FALSE);
SELECT ALL COUNT(*) FROM vt1 WHERE ('-620558973');
SELECT SUM(count) FROM (SELECT ALL (('-620558973') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('-620558973');
SELECT SUM(count) FROM (SELECT ALL (('-620558973') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('-620558973');
SELECT * FROM rt1, rt0, vt1 WHERE (((((rt1.c3)<<(rt0.c5)))OR((((rt0.c0))!=((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)<<(rt0.c5)))OR((((rt0.c0))<>((rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (((((rt1.c3)<<(rt0.c5)))OR((((rt0.c0))!=((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)<<(rt0.c5)))OR((((rt0.c0))<>((rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (((((rt1.c3)<<(rt0.c5)))OR((((rt0.c0))!=((rt1.c2))))));
SELECT * FROM rt0, vt1 NATURAL JOIN rt1 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (NULL) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN rt1);
SELECT * FROM rt0, vt1 NATURAL JOIN rt1 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (NULL) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN rt1);
SELECT * FROM rt0, vt1 NATURAL JOIN rt1 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (vt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((('-218029845')<>('0.08241269859097944')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((('-218029845')<>('0.08241269859097944')) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((('-218029845')<>('0.08241269859097944')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((('-218029845')<>('0.08241269859097944')) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((('-218029845')<>('0.08241269859097944')) AS INTEGER));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY (vt1.c0 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE RTRIM IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY (vt1.c0 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE RTRIM IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY (vt1.c0 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c4) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c4) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c4) NOT NULL) COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (NULLIF((~ (vt1.c0)), ((vt1.c0)/(' RH/H\n')))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))/((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((~ (vt1.c0)), ((vt1.c0)/(' RH/H\n')))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))/((~ (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (NULLIF((~ (vt1.c0)), ((vt1.c0)/(' RH/H\n')))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))/((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((~ (vt1.c0)), ((vt1.c0)/(' RH/H\n')))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))/((~ (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (NULLIF((~ (vt1.c0)), ((vt1.c0)/(' RH/H\n')))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'')))/((~ (vt1.c0))));
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0)+(vt1.c0)))==(vt1.c0))  NULLS FIRST, ((((vt1.c0) ISNULL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND ((~ (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)+(vt1.c0)))=(vt1.c0))  NULLS FIRST, ((((vt1.c0) ISNULL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND ((~ (vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0)+(vt1.c0)))==(vt1.c0))  NULLS FIRST, ((((vt1.c0) ISNULL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND ((~ (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)+(vt1.c0)))=(vt1.c0))  NULLS FIRST, ((((vt1.c0) ISNULL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND ((~ (vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0)+(vt1.c0)))==(vt1.c0))  NULLS FIRST, ((((vt1.c0) ISNULL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND ((~ (vt1.c0)))) DESC;
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((-1062556054) BETWEEN (CASE rt0.c2  WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c4 END) AND (((rt1.c1)+(rt0.c3))))) ORDER BY (- (((((rt0.c3)OR(0X6dd03145)))OR(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((-1062556054) BETWEEN (CASE rt0.c2  WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c4 END) AND (((rt1.c1)+(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (- (((((rt0.c3)OR(0X6dd03145)))OR(rt0.c3)))) DESC);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((-1062556054) BETWEEN (CASE rt0.c2  WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c4 END) AND (((rt1.c1)+(rt0.c3))))) ORDER BY (- (((((rt0.c3)OR(0X6dd03145)))OR(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((-1062556054) BETWEEN (CASE rt0.c2  WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c4 END) AND (((rt1.c1)+(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (- (((((rt0.c3)OR(0X6dd03145)))OR(rt0.c3)))) DESC);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((-1062556054) BETWEEN (CASE rt0.c2  WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c4 END) AND (((rt1.c1)+(rt0.c3))))) ORDER BY (- (((((rt0.c3)OR(0X6dd03145)))OR(rt0.c3)))) DESC;
SELECT ALL * FROM rt1 INNER JOIN vt1 ON ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)))AND(((((((((rt1.c1)OR(0.6918574214652149)))AND('')))AND(rt1.c4)))AND(rt1.c3)))))AND(NULL)) WHERE ((NOT (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY ((((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2))) IS FALSE) ASC, DATE((~ (rt1.c0)), (NOT (rt1.c3)), ((((rt1.c4)AND(vt1.c0)))OR(rt1.c2)), 0Xfffffffff3425575, (((rt1.c3)) BETWEEN ((vt1.c0)) AND ((rt1.c2))), (~ (rt1.c2)), ((((rt1.c4)OR(rt1.c4)))OR(vt1.c0)), rt1.c3, ((rt1.c3)==(rt1.c4)));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3))))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)))AND(((((((((rt1.c1)OR(0.6918574214652149)))AND('')))AND(rt1.c4)))AND(rt1.c3)))))AND(NULL)) ORDER BY ((((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2))) IS FALSE) ASC, DATE((~ (rt1.c0)), (NOT (rt1.c3)), ((((rt1.c4)AND(vt1.c0)))OR(rt1.c2)), 0Xfffffffff3425575, (((rt1.c3)) BETWEEN ((vt1.c0)) AND ((rt1.c2))), (~ (rt1.c2)), ((((rt1.c4)OR(rt1.c4)))OR(vt1.c0)), rt1.c3, ((rt1.c3)=(rt1.c4))));
SELECT ALL * FROM rt1 INNER JOIN vt1 ON ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)))AND(((((((((rt1.c1)OR(0.6918574214652149)))AND('')))AND(rt1.c4)))AND(rt1.c3)))))AND(NULL)) WHERE ((NOT (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY ((((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2))) IS FALSE) ASC, DATE((~ (rt1.c0)), (NOT (rt1.c3)), ((((rt1.c4)AND(vt1.c0)))OR(rt1.c2)), 0Xfffffffff3425575, (((rt1.c3)) BETWEEN ((vt1.c0)) AND ((rt1.c2))), (~ (rt1.c2)), ((((rt1.c4)OR(rt1.c4)))OR(vt1.c0)), rt1.c3, ((rt1.c3)==(rt1.c4)));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3))))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)))AND(((((((((rt1.c1)OR(0.6918574214652149)))AND('')))AND(rt1.c4)))AND(rt1.c3)))))AND(NULL)) ORDER BY ((((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2))) IS FALSE) ASC, DATE((~ (rt1.c0)), (NOT (rt1.c3)), ((((rt1.c4)AND(vt1.c0)))OR(rt1.c2)), 0Xfffffffff3425575, (((rt1.c3)) BETWEEN ((vt1.c0)) AND ((rt1.c2))), (~ (rt1.c2)), ((((rt1.c4)OR(rt1.c4)))OR(vt1.c0)), rt1.c3, ((rt1.c3)=(rt1.c4))));
SELECT ALL * FROM rt1 INNER JOIN vt1 ON ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)))AND(((((((((rt1.c1)OR(0.6918574214652149)))AND('')))AND(rt1.c4)))AND(rt1.c3)))))AND(NULL)) WHERE ((NOT (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY ((((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2))) IS FALSE) ASC, DATE((~ (rt1.c0)), (NOT (rt1.c3)), ((((rt1.c4)AND(vt1.c0)))OR(rt1.c2)), 0Xfffffffff3425575, (((rt1.c3)) BETWEEN ((vt1.c0)) AND ((rt1.c2))), (~ (rt1.c2)), ((((rt1.c4)OR(rt1.c4)))OR(vt1.c0)), rt1.c3, ((rt1.c3)==(rt1.c4)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(0xffffffff9538b834)))OR('-1927573199')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(0xffffffff9538b834)))OR('-1927573199')) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(0xffffffff9538b834)))OR('-1927573199')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(0xffffffff9538b834)))OR('-1927573199')) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(0xffffffff9538b834)))OR('-1927573199')) IN ()));
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE ((CAST(rt0.c5 AS BLOB) IN (CASE WHEN vt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c5 AS BLOB) IN (CASE WHEN vt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 ELSE rt1.c1 END))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE ((CAST(rt0.c5 AS BLOB) IN (CASE WHEN vt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c5 AS BLOB) IN (CASE WHEN vt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 ELSE rt1.c1 END))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE ((CAST(rt0.c5 AS BLOB) IN (CASE WHEN vt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c0 ELSE rt1.c1 END)));
SELECT * FROM rt0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c4)))OR((+ (rt0.c4)))))AND(x'73ad')))AND(CASE rt0.c5  WHEN rt0.c1 THEN 0.9830181964064397 END)))AND((- (rt0.c4))))) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (- ('JF䌐\')) THEN (((rt0.c4, rt0.c5, rt0.c1)) BETWEEN ((rt0.c1, rt0.c4, 0.17079583758746875)) AND ((rt0.c1, rt0.c5, rt0.c4))) ELSE CAST(rt0.c4 AS NUMERIC) END DESC  NULLS LAST, ((0.4816180029626469) NOT BETWEEN ((- (rt0.c4))) AND (x''));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c4)))OR((+ (rt0.c4)))))AND(x'73ad')))AND(CASE rt0.c5  WHEN rt0.c1 THEN 0.9830181964064397 END)))AND((- (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (- ('JF䌐\')) THEN (((rt0.c4, rt0.c5, rt0.c1)) BETWEEN ((rt0.c1, rt0.c4, 0.17079583758746875)) AND ((rt0.c1, rt0.c5, rt0.c4))) ELSE CAST(rt0.c4 AS NUMERIC) END DESC  NULLS LAST, ((0.4816180029626469) NOT BETWEEN ((- (rt0.c4))) AND (x'')));
SELECT * FROM rt0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c4)))OR((+ (rt0.c4)))))AND(x'73ad')))AND(CASE rt0.c5  WHEN rt0.c1 THEN 0.9830181964064397 END)))AND((- (rt0.c4))))) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (- ('JF䌐\')) THEN (((rt0.c4, rt0.c5, rt0.c1)) BETWEEN ((rt0.c1, rt0.c4, 0.17079583758746875)) AND ((rt0.c1, rt0.c5, rt0.c4))) ELSE CAST(rt0.c4 AS NUMERIC) END DESC  NULLS LAST, ((0.4816180029626469) NOT BETWEEN ((- (rt0.c4))) AND (x''));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c4)))OR((+ (rt0.c4)))))AND(x'73ad')))AND(CASE rt0.c5  WHEN rt0.c1 THEN 0.9830181964064397 END)))AND((- (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (- ('JF䌐\')) THEN (((rt0.c4, rt0.c5, rt0.c1)) BETWEEN ((rt0.c1, rt0.c4, 0.17079583758746875)) AND ((rt0.c1, rt0.c5, rt0.c4))) ELSE CAST(rt0.c4 AS NUMERIC) END DESC  NULLS LAST, ((0.4816180029626469) NOT BETWEEN ((- (rt0.c4))) AND (x'')));
SELECT * FROM rt0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c4)))OR((+ (rt0.c4)))))AND(x'73ad')))AND(CASE rt0.c5  WHEN rt0.c1 THEN 0.9830181964064397 END)))AND((- (rt0.c4))))) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (- ('JF䌐\')) THEN (((rt0.c4, rt0.c5, rt0.c1)) BETWEEN ((rt0.c1, rt0.c4, 0.17079583758746875)) AND ((rt0.c1, rt0.c5, rt0.c4))) ELSE CAST(rt0.c4 AS NUMERIC) END DESC  NULLS LAST, ((0.4816180029626469) NOT BETWEEN ((- (rt0.c4))) AND (x''));
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN rt1 ON ((NULL) ISNULL) WHERE ((+ ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN rt1 ON ((NULL) ISNULL));
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN rt1 ON ((NULL) ISNULL) WHERE ((+ ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN rt1 ON ((NULL) ISNULL));
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN rt1 ON ((NULL) ISNULL) WHERE ((+ ((NOT (rt0.c1)))));
SELECT * FROM vt1, rt1, rt0 WHERE ((+ ((((rt0.c5))=((rt1.c2)))))) ORDER BY (CAST(rt0.c4 AS TEXT) IN ()), CAST(((rt1.c0)<(rt1.c2)) AS REAL)  NULLS FIRST, CAST(((vt1.c0)*('')) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c5))=((rt1.c2)))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (CAST(rt0.c4 AS TEXT) IN ()), CAST(((rt1.c0)<(rt1.c2)) AS REAL)  NULLS FIRST, CAST(((vt1.c0)*('')) AS INTEGER) ASC);
SELECT * FROM vt1, rt1, rt0 WHERE ((+ ((((rt0.c5))=((rt1.c2)))))) ORDER BY (CAST(rt0.c4 AS TEXT) IN ()), CAST(((rt1.c0)<(rt1.c2)) AS REAL)  NULLS FIRST, CAST(((vt1.c0)*('')) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c5))=((rt1.c2)))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (CAST(rt0.c4 AS TEXT) IN ()), CAST(((rt1.c0)<(rt1.c2)) AS REAL)  NULLS FIRST, CAST(((vt1.c0)*('')) AS INTEGER) ASC);
SELECT * FROM vt1, rt1, rt0 WHERE ((+ ((((rt0.c5))=((rt1.c2)))))) ORDER BY (CAST(rt0.c4 AS TEXT) IN ()), CAST(((rt1.c0)<(rt1.c2)) AS REAL)  NULLS FIRST, CAST(((vt1.c0)*('')) AS INTEGER) ASC;
SELECT ALL * FROM rt1, rt0 CROSS JOIN vt1 ON TIME(((((((((((((rt1.c1)AND(rt1.c4)))AND(rt0.c4)))AND(rt0.c4)))OR(rt1.c0)))AND(rt0.c0)))AND(rt1.c1)), JULIANDAY(rt1.c2, rt1.c1, rt0.c0), (((rt1.c1, rt0.c4, 617987962))<=((vt1.c0, rt0.c1, rt1.c2)))) WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED CROSS JOIN vt1 ON TIME(((((((((((((rt1.c1)AND(rt1.c4)))AND(rt0.c4)))AND(rt0.c4)))OR(rt1.c0)))AND(rt0.c0)))AND(rt1.c1)), JULIANDAY(rt1.c2, rt1.c1, rt0.c0), (((rt1.c1, rt0.c4, 617987962))<=((vt1.c0, rt0.c1, rt1.c2)))));
SELECT ALL * FROM rt1, rt0 CROSS JOIN vt1 ON TIME(((((((((((((rt1.c1)AND(rt1.c4)))AND(rt0.c4)))AND(rt0.c4)))OR(rt1.c0)))AND(rt0.c0)))AND(rt1.c1)), JULIANDAY(rt1.c2, rt1.c1, rt0.c0), (((rt1.c1, rt0.c4, 617987962))<=((vt1.c0, rt0.c1, rt1.c2)))) WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED CROSS JOIN vt1 ON TIME(((((((((((((rt1.c1)AND(rt1.c4)))AND(rt0.c4)))AND(rt0.c4)))OR(rt1.c0)))AND(rt0.c0)))AND(rt1.c1)), JULIANDAY(rt1.c2, rt1.c1, rt0.c0), (((rt1.c1, rt0.c4, 617987962))<=((vt1.c0, rt0.c1, rt1.c2)))));
SELECT ALL * FROM rt1, rt0 CROSS JOIN vt1 ON TIME(((((((((((((rt1.c1)AND(rt1.c4)))AND(rt0.c4)))AND(rt0.c4)))OR(rt1.c0)))AND(rt0.c0)))AND(rt1.c1)), JULIANDAY(rt1.c2, rt1.c1, rt0.c0), (((rt1.c1, rt0.c4, 617987962))<=((vt1.c0, rt0.c1, rt1.c2)))) WHERE (rt0.c5);
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED WHERE (((((rt0.c5)+(rt1.c3))) NOT NULL)) ORDER BY CAST(rt1.c1 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)+(rt1.c3))) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(rt1.c1 AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED WHERE (((((rt0.c5)+(rt1.c3))) NOT NULL)) ORDER BY CAST(rt1.c1 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)+(rt1.c3))) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(rt1.c1 AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED WHERE (((((rt0.c5)+(rt1.c3))) NOT NULL)) ORDER BY CAST(rt1.c1 AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt0, rt1, vt1 WHERE (CAST(((rt1.c2) IS TRUE) AS TEXT)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY NULL);
SELECT * FROM rt0, rt1, vt1 WHERE (CAST(((rt1.c2) IS TRUE) AS TEXT)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY NULL);
SELECT * FROM rt0, rt1, vt1 WHERE (CAST(((rt1.c2) IS TRUE) AS TEXT)) ORDER BY NULL;
SELECT ALL * FROM rt0, vt1, rt1 WHERE (((((rt1.c1)OR(((rt0.c4) NOT BETWEEN (rt1.c3) AND (vt1.c0)))))OR(((rt0.c3)=(rt0.c0))))) ORDER BY ((x'5737') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)OR(((rt0.c4) NOT BETWEEN (rt1.c3) AND (vt1.c0)))))OR(((rt0.c3)=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((x'5737') NOT NULL) ASC);
SELECT ALL * FROM rt0, vt1, rt1 WHERE (((((rt1.c1)OR(((rt0.c4) NOT BETWEEN (rt1.c3) AND (vt1.c0)))))OR(((rt0.c3)=(rt0.c0))))) ORDER BY ((x'5737') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)OR(((rt0.c4) NOT BETWEEN (rt1.c3) AND (vt1.c0)))))OR(((rt0.c3)=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((x'5737') NOT NULL) ASC);
SELECT ALL * FROM rt0, vt1, rt1 WHERE (((((rt1.c1)OR(((rt0.c4) NOT BETWEEN (rt1.c3) AND (vt1.c0)))))OR(((rt0.c3)=(rt0.c0))))) ORDER BY ((x'5737') NOT NULL) ASC;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((CAST(rt1.c1 AS REAL))OR(LOWER(-1.014528872E9))))AND(((1810779810) NOTNULL))) INNER JOIN rt1 ON (+ ((((rt1.c3)) NOT BETWEEN ((NULL)) AND ((rt1.c0))))) WHERE (((rt1.c3) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) ISNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((CAST(rt1.c1 AS REAL))OR(LOWER(-1.014528872E9))))AND(((1810779810) NOTNULL))) INNER JOIN rt1 ON (+ ((((rt1.c3)) NOT BETWEEN ((NULL)) AND ((rt1.c0))))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((CAST(rt1.c1 AS REAL))OR(LOWER(-1.014528872E9))))AND(((1810779810) NOTNULL))) INNER JOIN rt1 ON (+ ((((rt1.c3)) NOT BETWEEN ((NULL)) AND ((rt1.c0))))) WHERE (((rt1.c3) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) ISNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((CAST(rt1.c1 AS REAL))OR(LOWER(-1.014528872E9))))AND(((1810779810) NOTNULL))) INNER JOIN rt1 ON (+ ((((rt1.c3)) NOT BETWEEN ((NULL)) AND ((rt1.c0))))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((CAST(rt1.c1 AS REAL))OR(LOWER(-1.014528872E9))))AND(((1810779810) NOTNULL))) INNER JOIN rt1 ON (+ ((((rt1.c3)) NOT BETWEEN ((NULL)) AND ((rt1.c0))))) WHERE (((rt1.c3) ISNULL));
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (((((rt0.c0)+(rt0.c3))) IS TRUE)) ORDER BY rt1.c4;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)+(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY rt1.c4);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (((((rt0.c0)+(rt0.c3))) IS TRUE)) ORDER BY rt1.c4;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)+(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY rt1.c4);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (((((rt0.c0)+(rt0.c3))) IS TRUE)) ORDER BY rt1.c4;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 WHEN vt1.c0 THEN rt0.c0 END THEN rt0.c2 WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN (~ (rt0.c2)) WHEN 0X6a881c46 THEN rt0.c2 ELSE '+Usava' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 WHEN vt1.c0 THEN rt0.c0 END THEN rt0.c2 WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN (~ (rt0.c2)) WHEN 0X6a881c46 THEN rt0.c2 ELSE '+Usava' END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 WHEN vt1.c0 THEN rt0.c0 END THEN rt0.c2 WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN (~ (rt0.c2)) WHEN 0X6a881c46 THEN rt0.c2 ELSE '+Usava' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 WHEN vt1.c0 THEN rt0.c0 END THEN rt0.c2 WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN (~ (rt0.c2)) WHEN 0X6a881c46 THEN rt0.c2 ELSE '+Usava' END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 WHEN vt1.c0 THEN rt0.c0 END THEN rt0.c2 WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN (~ (rt0.c2)) WHEN 0X6a881c46 THEN rt0.c2 ELSE '+Usava' END);
SELECT ALL * FROM rt0, vt1 WHERE (((CAST(rt0.c4 AS REAL)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (LIKE(rt0.c4, rt0.c4, '7')))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(rt0.c4))OR(CAST(rt0.c4 AS TEXT))))AND(rtreenode(rt0.c0, rt0.c4))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c4 AS REAL)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (LIKE(rt0.c4, rt0.c4, '7')))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((SQLITE_COMPILEOPTION_USED(rt0.c4))OR(CAST(rt0.c4 AS TEXT))))AND(rtreenode(rt0.c0, rt0.c4))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((CAST(rt0.c4 AS REAL)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (LIKE(rt0.c4, rt0.c4, '7')))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(rt0.c4))OR(CAST(rt0.c4 AS TEXT))))AND(rtreenode(rt0.c0, rt0.c4))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c4 AS REAL)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (LIKE(rt0.c4, rt0.c4, '7')))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((SQLITE_COMPILEOPTION_USED(rt0.c4))OR(CAST(rt0.c4 AS TEXT))))AND(rtreenode(rt0.c0, rt0.c4))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((CAST(rt0.c4 AS REAL)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (LIKE(rt0.c4, rt0.c4, '7')))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(rt0.c4))OR(CAST(rt0.c4 AS TEXT))))AND(rtreenode(rt0.c0, rt0.c4))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c3 END))) ORDER BY (((+ (rt0.c2)))+(((rt0.c5)GLOB(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2)))+(((rt0.c5)GLOB(rt0.c4)))) ASC);
SELECT ALL * FROM rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c3 END))) ORDER BY (((+ (rt0.c2)))+(((rt0.c5)GLOB(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2)))+(((rt0.c5)GLOB(rt0.c4)))) ASC);
SELECT ALL * FROM rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c3 END))) ORDER BY (((+ (rt0.c2)))+(((rt0.c5)GLOB(rt0.c4)))) ASC;
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (((NULL)||((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULL)||((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (((NULL)||((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULL)||((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (((NULL)||((rt1.c4 IN ()))));
SELECT COUNT(*) FROM rt1 WHERE (((((((((NULL)AND(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3)))))OR(CAST(rt1.c1 AS BLOB))))AND(((rt1.c0)AND(rt1.c1)))))OR(UNICODE(rt1.c1)))) ORDER BY CHANGES() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3)))))OR(CAST(rt1.c1 AS BLOB))))AND(((rt1.c0)AND(rt1.c1)))))OR(UNICODE(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY CHANGES() DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((((((NULL)AND(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3)))))OR(CAST(rt1.c1 AS BLOB))))AND(((rt1.c0)AND(rt1.c1)))))OR(UNICODE(rt1.c1)))) ORDER BY CHANGES() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3)))))OR(CAST(rt1.c1 AS BLOB))))AND(((rt1.c0)AND(rt1.c1)))))OR(UNICODE(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY CHANGES() DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((((((NULL)AND(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3)))))OR(CAST(rt1.c1 AS BLOB))))AND(((rt1.c0)AND(rt1.c1)))))OR(UNICODE(rt1.c1)))) ORDER BY CHANGES() DESC  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2) NOT NULL))OR((~ (rt0.c0)))))AND(((rt0.c3) ISNULL))) LEFT OUTER JOIN rt1 ON ((rt1.c3) IS TRUE) COLLATE NOCASE WHERE ((NOT (-1.371620375E9)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (-1.371620375E9))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2) NOT NULL))OR((~ (rt0.c0)))))AND(((rt0.c3) ISNULL))) LEFT OUTER JOIN rt1 ON ((rt1.c3) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2) NOT NULL))OR((~ (rt0.c0)))))AND(((rt0.c3) ISNULL))) LEFT OUTER JOIN rt1 ON ((rt1.c3) IS TRUE) COLLATE NOCASE WHERE ((NOT (-1.371620375E9)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (-1.371620375E9))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2) NOT NULL))OR((~ (rt0.c0)))))AND(((rt0.c3) ISNULL))) LEFT OUTER JOIN rt1 ON ((rt1.c3) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2) NOT NULL))OR((~ (rt0.c0)))))AND(((rt0.c3) ISNULL))) LEFT OUTER JOIN rt1 ON ((rt1.c3) IS TRUE) COLLATE NOCASE WHERE ((NOT (-1.371620375E9)));
SELECT COUNT(*) FROM vt1 WHERE (((x'')<<(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<<(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((x'')<<(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<<(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((x'')<<(CAST(vt1.c0 AS NUMERIC))));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)IS NOT(CASE WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c0 END))) ORDER BY (~ ((NULL IN ()))) ASC  NULLS FIRST, rt0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)IS NOT(CASE WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((NULL IN ()))) ASC  NULLS FIRST, rt0.c3 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)IS NOT(CASE WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c0 END))) ORDER BY (~ ((NULL IN ()))) ASC  NULLS FIRST, rt0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)IS NOT(CASE WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((NULL IN ()))) ASC  NULLS FIRST, rt0.c3 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END)IS NOT(CASE WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c0 END))) ORDER BY (~ ((NULL IN ()))) ASC  NULLS FIRST, rt0.c3 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ('-911501942');
SELECT SUM(count) FROM (SELECT (('-911501942') IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ('-911501942');
SELECT SUM(count) FROM (SELECT (('-911501942') IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ('-911501942');
SELECT COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS REAL), NULL COLLATE RTRIM, vt1.c0, (NOT (vt1.c0)), LOWER('\ro')))>=((vt1.c0 COLLATE BINARY, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (+ (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '-21538724')) AND ((vt1.c0, x'5a1d', vt1.c0))), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS REAL), NULL COLLATE RTRIM, vt1.c0, (NOT (vt1.c0)), LOWER('\ro')))>=((vt1.c0 COLLATE BINARY, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (+ (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '-21538724')) AND ((vt1.c0, x'5a1d', vt1.c0))), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS REAL), NULL COLLATE RTRIM, vt1.c0, (NOT (vt1.c0)), LOWER('\ro')))>=((vt1.c0 COLLATE BINARY, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (+ (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '-21538724')) AND ((vt1.c0, x'5a1d', vt1.c0))), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS REAL), NULL COLLATE RTRIM, vt1.c0, (NOT (vt1.c0)), LOWER('\ro')))>=((vt1.c0 COLLATE BINARY, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (+ (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '-21538724')) AND ((vt1.c0, x'5a1d', vt1.c0))), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS REAL), NULL COLLATE RTRIM, vt1.c0, (NOT (vt1.c0)), LOWER('\ro')))>=((vt1.c0 COLLATE BINARY, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (+ (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '-21538724')) AND ((vt1.c0, x'5a1d', vt1.c0))), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) ORDER BY vt1.c0;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (x'')) WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))<(((rt0.c4)=(0.19059520585073442)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))<(((rt0.c4)==(0.19059520585073442))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (x'')));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (x'')) WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))<(((rt0.c4)=(0.19059520585073442)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))<(((rt0.c4)==(0.19059520585073442))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (x'')));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (x'')) WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))<(((rt0.c4)=(0.19059520585073442)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON CASE WHEN rt1.c4 THEN rt1.c0 END COLLATE BINARY WHERE (CASE WHEN (+ (rt1.c3)) THEN ((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt1.c3)) THEN ((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c1)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON CASE WHEN rt1.c4 THEN rt1.c0 END COLLATE BINARY);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON CASE WHEN rt1.c4 THEN rt1.c0 END COLLATE BINARY WHERE (CASE WHEN (+ (rt1.c3)) THEN ((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt1.c3)) THEN ((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c1)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON CASE WHEN rt1.c4 THEN rt1.c0 END COLLATE BINARY);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON CASE WHEN rt1.c4 THEN rt1.c0 END COLLATE BINARY WHERE (CASE WHEN (+ (rt1.c3)) THEN ((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((((rt0.c1)<(rt0.c2))))=((((rt1.c4) NOTNULL))))) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<(rt0.c2))))=((((rt1.c4) NOTNULL))))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((((rt0.c1)<(rt0.c2))))=((((rt1.c4) NOTNULL))))) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<(rt0.c2))))=((((rt1.c4) NOTNULL))))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((((rt0.c1)<(rt0.c2))))=((((rt1.c4) NOTNULL))))) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS REAL);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((NULL) NOT NULL)) ORDER BY ((rt0.c5) NOT BETWEEN (((((rt1.c0)OR(rt1.c3)))OR(rt0.c5))) AND (((((rt0.c2)OR(rt1.c1)))OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c5) NOT BETWEEN (((((rt1.c0)OR(rt1.c3)))OR(rt0.c5))) AND (((((rt0.c2)OR(rt1.c1)))OR(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((NULL) NOT NULL)) ORDER BY ((rt0.c5) NOT BETWEEN (((((rt1.c0)OR(rt1.c3)))OR(rt0.c5))) AND (((((rt0.c2)OR(rt1.c1)))OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c5) NOT BETWEEN (((((rt1.c0)OR(rt1.c3)))OR(rt0.c5))) AND (((((rt0.c2)OR(rt1.c1)))OR(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((NULL) NOT NULL)) ORDER BY ((rt0.c5) NOT BETWEEN (((((rt1.c0)OR(rt1.c3)))OR(rt0.c5))) AND (((((rt0.c2)OR(rt1.c1)))OR(rt0.c0)))) DESC  NULLS FIRST;
