-- Time: 2024/06/09 16:01:15
-- Database: database30
-- Database version: 3.40.0
-- seed value: 2726190230
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
ROLLBACK TRANSACTION; -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=497785602'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-337941936 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1861769645 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('ؤtH0,	' IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-889793584 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1574242894 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0xffffffffb5e01918 IN ()) AS INTEGER); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((0Xffffffffe701e3b4))<=((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'eca1')AND(NULL)))OR(-4.19306572E8)))OR(NULL)))OR(x''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1763440980 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('ؤTH0,	')IS NOT('1763440980')))||(((0xffffffffb5e01918)AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1887045851 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=1934325853 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>=('47I&j퀪\rRP')) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) BETWEEN (CAST('-689460588' AS BLOB)) AND (((x'')IS(0.04301766603069934)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1383366179 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=199119640 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=199119640'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-524923609 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=308347726 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=34582642 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL ELSE '34582642' END)<<(IFNULL(DISTINCT '', 429734477))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-900149936' THEN 0.04301766603069934 END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((0.3203249994597134) IS FALSE))) AND ((-1575250542))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-689460588'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-571790839 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (0.3490435481329689)))OR(((-1.887045851E9)||(x'')))))OR(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1350554698 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=308347726 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1147900219'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'A8>|轢'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2394')LIKE(0.5382756054761603))) BETWEEN ((('106076680')IS(0.4218534636642658))) AND (CAST(0Xffffffffff120de7 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1153973012 sz=1968003045 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((- (1.76344098E9)))<(((0xffffffffe3907582)<(x'e67b')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT))IS(((0Xffffffff8f85f725)+('-337941936')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '485361584 sz=836198419 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-251919087 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'rtcgCv'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-615824202 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.3203249994597134') IS FALSE))>(HEX(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1241579190'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1575250542'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('294309930')) NOT BETWEEN (((0Xfffffffff88b2666 IN (0.7830170824676034)))) AND ((((NULL)-('34582642'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-706042217'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND(NULL)))OR(0.39914297450842795)))OR(NULL)))OR('')))OR(CASE WHEN NULL THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1306154532 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=92662069 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert('1243453822', '0.39914297450842795', NULL, 0.5887498411345168, 'by') COLLATE BINARY COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (QUOTE(x''))); -- 9ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1031107075 2 sz=497785602 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(NULL)))AND(0.8632501975427234)))AND((((('')AND('-1201131388')))OR(NULL)))))AND('e&gD')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('ⰖJ') NOT BETWEEN (NULL) AND ('-347083041')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1186527678 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-900149936 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL)) BETWEEN ((0.875050872035621)) AND (('0.04301766603069934'))))OR((('9\nr') NOT BETWEEN (x'aea1') AND (4.97785602E8)))))OR('')))OR((('#y')GLOB(NULL)))))AND(((NULL)IS NOT(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((396705264 IN ()))-(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(2112080642 AS INTEGER) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4218534636642658) NOT BETWEEN ('!{_1zNU') AND ('1479275871')))OR(((0xffffffff86c28403)<=('-1823803304')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=-1699679967 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((('TC姩Ka\x')||('749885929')))) AND (('%CmP%,hD'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-821959496 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS(0xffffffff946c98ef)))IS((1451681006 IN (NULL, NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1856054779 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=35124671 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-751236073 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((~ ('-0.0')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1981484008 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-2034072573 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-706042217') ISNULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0x220d4bf6)<=(0X60952111)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1601824869 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('2019686513' AS NUMERIC)  WHEN NULL THEN (('X/7R匘闹S녦') IS FALSE) ELSE (('485361584') NOT BETWEEN (0.5637457111738804) AND (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1754874597 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT x'' COLLATE RTRIM, (x'' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((IFNULL(DISTINCT NULL, 0.8129793089932353))AND(NULLIF(NULL, -747641850))))OR((+ (NULL)))))AND((((('308347726')OR(0.5311346337478337)))OR('870147498')))))AND(((NULL)GLOB('-1861769645')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1724361448 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1272289278 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1057725320 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-2138428282')=('ME8<>g8i')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1856436990 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1375486681 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1241579190 0 sz=9223372036854775807 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '35124671' THEN ((0.316707405829902)GLOB(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-139260293'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (1.0607668E8 IN (0.5382756054761603))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.8129793089932353')) BETWEEN ((CAST(x'f17fe97a' AS INTEGER))) AND (((('-1153973012')*(0.5322969897522709))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'A8>|轢'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1495467556 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=975079332 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0xffffffffebdb6a50  WHEN 0.2907332521278836 THEN 0Xffffffff934af858 ELSE NULL END IN (((1743485635) BETWEEN (NULL) AND (0.48029447197248776)), ((-2107386527) NOT BETWEEN (-751236073) AND ('-709947420')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1439180837 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') BETWEEN ('485361584') AND (0.7205877109999639)) THEN CAST('1243453822' AS REAL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 16620291 sz=637818200 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(0.2907332521278836 AS NUMERIC))OR(CAST(NULL AS REAL))))AND(CAST(0.7353221360295537 AS REAL))))OR(((NULL) NOT BETWEEN (NULL) AND (x'a248')))))OR((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (x'')))OR(((0.7830170824676034) IS TRUE))))OR(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1282651622'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2019686513'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1961237972 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1575250542'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=302253697 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=969230911 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=471377092 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1375157473'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '396179477 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1912824474 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN ('{v겧\nu') AND (0.8683908705261696)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2138428282 sz=-2107386527 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1713674939 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TRIM('1383366179', '_<') IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2007156323 sz=-457020838 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '471377092'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS INTEGER))OR((('837823343')AND('1757326962')))))AND(((x'') NOT BETWEEN (4.29734477E8) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=901509930 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))>((~ (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-760776784'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1724361448 sz=35124671 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-570031147 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -7.0994742E8 COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0xfd9b03; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2907332521278836)OR(-251919087)))AND(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.3490435481329689)<(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1201131388'))<>(('')))))!=((ROUND('0.2907332521278836', 0xffffffffd56235aa)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((-2.007156323E9))>=((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1451681006') ISNULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF((('-1587978221')/(0.24555672215775015))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1601824869 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=806807575'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))IS NOT(CAST('TRUE' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '-1186527678' THEN NULL WHEN 1574242894 THEN NULL WHEN '-477071998' THEN '0.875050872035621' WHEN x'' THEN x'' WHEN '' THEN 0.8129793089932353 END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1823803304 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1834524977'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-821959496'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2134694693 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1724361448 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1861817063 0 sz=282836529 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (0.4475379307153766)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))+(('0.8129793089932353' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) NOT BETWEEN ('') AND (x'')) THEN ((x'') NOT NULL) WHEN CASE 'mTb4*i'  WHEN NULL THEN x'' END THEN -3.47083041E8 COLLATE BINARY WHEN CASE WHEN x'' THEN '[]' ELSE '0.8129793089932353' END THEN CASE '1390944861'  WHEN 0Xffffffffcb989307 THEN '/m}]*' WHEN NULL THEN '-571790839' WHEN 0.8408706820319036 THEN '' ELSE -156752057 END WHEN (NOT (x'')) THEN '-95719409' WHEN CASE '1629586455'  WHEN 'cBUMGn' THEN '' WHEN '47i&j퀪\rrp' THEN 0.9007626013755351 WHEN 0.15451047066728385 THEN '?Hb0' ELSE NULL END THEN (((NULL)) NOT BETWEEN (('')) AND ((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1878623916 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-139260293'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('396705264' IN ((('0.39914297450842795')<<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-104923355 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=56748524'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '553671239 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('35124671' COLLATE BINARY)LIKE(((x'')-(0.258551703506817)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (NULL) AND (0.3490435481329689)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1201131388 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-524923609 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-419306572 sz=-9223372036854775808 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=177951215'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -1435265665'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=117595855'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '408092055'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1948900601')<<(''))) BETWEEN (((0.9647357729990633)==('-709947420'))) AND (LOWER(DISTINCT x''))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-714984022 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('e7')OR('1862802806')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 836198419 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 625354058 THEN CASE 0.20005277054073023  WHEN 0.021892664173697285 THEN '-1981484008' ELSE 359483155 END WHEN -1707774971 THEN NULLIF(x'', '1147900219') WHEN CAST(x'' AS TEXT) THEN (('822196617')<=(x'')) ELSE (((0.22439522951301694))<>((x''))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.30292032394463186 IN ('1375157473')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((-4.77071998E8)+(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-706042217 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'7fb9' COLLATE RTRIM) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-689460588 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0x1edc561a) BETWEEN ('-1272289278') AND ('')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (NULL)))OR(NULL)))AND(SUBSTR(0.20297510538877817, 0.3862506056951196))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Hbz즕') NOT NULL))>(((0.7830170824676034)-(0.6591727789101653)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=667077660 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8076534116234345) IS FALSE)))<((rtreenode('-2107386527', x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('[]')||('1911677389')))GLOB((((((((('by')AND(NULL)))AND(0.5596122451802574)))AND(x'1223')))AND(1.495467556E9)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1743485635'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1912824474 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=562756499'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=88668483 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE ''  WHEN '䨚f' THEN '1688436637' ELSE 0.6927492172209898 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')&(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1754874597 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=497785602'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((highlight(NULL, x'239c', NULL, x'')))=((((((0.6287980669648282)OR(x'2135dad8')))AND('2111724904'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1412173609'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1763440980')AND((x'' IN (NULL)))))OR((((0.2803212066300773))==((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN -524923609 COLLATE RTRIM THEN CAST(NULL AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '426543314 0 sz=848178196 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)!=((('#mI\r硟iDH]') BETWEEN (0.49243240957163126) AND (1146926874)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1849557140'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'e3bc')-((((NULL)) BETWEEN ((x'')) AND ((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-403129031 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2017327066 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-929977681 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC)) BETWEEN (UPPER('~%#7\nIᆺ')) AND (CAST(0.3949835292721976 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2107386527 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1882882857 88707816 sz=1763440980'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(CAST('' AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2107986192 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'', '1451681006', 1.243453822E9, 0.8662657351229408, 0.3446192523552193))==((0.9512742123245068, NULL, 1.85643699E9, '-524923609', '870147498'))) THEN (((x'')) BETWEEN (('6k㠕W''bQx*')) AND ((x'f5ab'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('3fI')))<(TRIM(',{L僼}'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE((0.2202113162424204 IN ()), (('-751236073')||(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-458613875 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-701972579'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))!=(UNLIKELY(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (((('901509930')AND(855023218)))OR('xXE'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((9.69230911E8)IS NOT((((0.46042651026933357))>=((745256106))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('EN')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN NULL THEN 'xXE' END THEN CAST(0xffffffffa8435d00 AS BLOB) ELSE (('1641562135') IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7503600255061218) NOT NULL))>=(((0Xffffffff8d7033fa)OR('')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1934325853)) BETWEEN ((((NULL) NOT BETWEEN ('Ꮥq0-') AND (NULL)))) AND ((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1147900219 sz=774295134 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1804822289')*(0.1691831773678074)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-706042217'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1726114546 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2092724981 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1574242894')*('-1040103033'))) NOT BETWEEN ((((x''))<=((0.1252682224007614)))) AND ((((NULL, NULL, NULL)) BETWEEN ((x'', NULL, x'')) AND (('-1201131388', x'', 0.7637399592664696))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((rtreenode('?&', 0.07766454806200895))|('0.6591727789101653')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1178352498'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-166817755 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1515733305 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1961122090 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 sz=-1689984422'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '821545827 -1066592795 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(CASE '1300874456'  WHEN '-1153973012' THEN 'ퟸp2.' ELSE NULL END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(1069502347 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-706042217 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN (+ ('-1901699886')) THEN CAST(x'' AS INTEGER) WHEN IFNULL(NULL, 0.9830163961559083) THEN (- (x'')) WHEN (((0.7312982146685619))<(('~F{^C'))) THEN CAST(7.49885929E8 AS NUMERIC) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1057725320'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6873622871252293) BETWEEN ('aH7~') AND (NULL)))IS(json_array_length(0X4ecb2811, x''))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.6967584461149204)AND(x'1e3a')))OR(0.8415359962292345)), ((NULL) BETWEEN ('|Fwhours{.') AND (x'')), (('1375157473') NOT NULL)))>((((x'')IS NOT(x'')), (NOT (x'')), CAST(0.41169726261607686 AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)==(1189771284)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1186527678'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'bd31')>>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1968003045')AND(0xffffffffddeb2a09)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=316238979 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-521242826 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1757326962 -1453493553 sz=461965732 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1620386065 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=35124671'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=175681175'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1167989683 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT CAST(x'5d887b61' AS BLOB), (('901509930') NOT BETWEEN ('') AND (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xfffffffffba90ebf IN (0.6286239532089406))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-889793584') NOT BETWEEN ('0.0') AND (NULL))) NOT BETWEEN (CAST('-251919087' AS REAL)) AND (CAST(0.4327273381340757 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1383366179 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1620386065 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (0x1261034e)) IN ('V+lD4')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1371444577'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1897137062 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('_<' COLLATE NOCASE) BETWEEN (((NULL) IS FALSE)) AND ((+ (1.375157473E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '338564687 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1619953787'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('U⻿瞰f')IS NOT(x'd554'))) NOT BETWEEN ((-1.375486681E9 IN (''))) AND (CASE 0.3203249994597134  WHEN NULL THEN 0.7789754673254244 WHEN -2.107386527E9 THEN NULL WHEN 1060778467 THEN '' ELSE '~\nxOTIJO' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1416714481 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0xffffffffda598133 AS BLOB) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1021452161) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=266176168 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.9366240203011529 THEN x'6206' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'f06c')GLOB(NULL)))IS NOT((((0.8327910023791143, 0.11890413204891592, ''))==((x'', NULL, 0Xffffffffdb536589))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '836198419 sz=817645222 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('584797533') AND ('M3')))<=('?hb0' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1291468733'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('47i&j퀪\rrp' AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)IS NOT('h30]㳡[+ଳi')))OR((((0.3580888306776351)) NOT BETWEEN ((1840139876)) AND (('xXE'))))))OR(((((1.754874597E9)OR(x'')))OR(0X157f21ae)))))OR((((-445787704))<=((x'1b68'))))))AND(((0.3123974762379136)>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-524923609 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(x'' AS NUMERIC))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES() COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-686122861 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-370971599 sz=377727463'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1700264073'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)=((('#m') NOT BETWEEN (485361584) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1243453822 sz=753725690 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-113265492'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((0.2492443356669818)OR(798101766)))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1968003045 sz=-1934669536'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))LIKE(('1757326962' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-457020838'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL)) BETWEEN (((((0.8271492089576045)AND(0.17907083522811962)))OR(0.6927492172209898))) AND ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-276192745 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2112080642'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-155270478 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '396705264 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=870147498 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN (NULL)))OR(0.5929718722041366)))AND('vOtW' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-48794002 1856681787'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -751236073 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('1713674939')LIKE(199119640)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-760983689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1287332751 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1688321709 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '886626292 sz=-1233041103 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1729286071 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.3686297029720157)))>=(((0.23340070563713344) BETWEEN (x'ed0b') AND (0.08487445614755451)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((x'3501')) BETWEEN ((-9223372036854775808)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-625798081 1856054779'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '999187907 0 sz=-1962488692 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=2112080642 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1887045851' COLLATE NOCASE)GLOB(((NULL)>=(x'f3d4')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-889793584 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'7515') NOT BETWEEN (x'32163fe6') AND ('-1880832132'))  WHEN LOWER('-1699679967') THEN CASE WHEN 0.0872061124703406 THEN x'' ELSE 0.6287980669648282 END WHEN ((x'd74e')|('en')) THEN '' COLLATE NOCASE WHEN (NULL IN ()) THEN ((0xffffffffd201ea7d) NOTNULL) ELSE CAST(NULL AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.49243240957163126)OR('-2007156323')))OR(0.5357876307018454))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('\r提2t2')AND(')'))) BETWEEN (CAST(NULL AS BLOB)) AND ((~ (579022573)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-420747891 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1439180837 sz=-1514179406 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((',B\b' COLLATE BINARY))<(((((('')OR(0.13517047276098137)))AND('Eyears⡼w'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1050172841 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-541480116'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1096848093 sz=792737015 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'cf7f'))) BETWEEN ((((NULL)) NOT BETWEEN ((x'8b0b')) AND ((0Xffffffffdb4b44b6)))) AND ((x'74d2' IN (x'4219')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=338593094'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1546470783'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1856054779 sz=-347083041'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-179874270 sz=-1030593583 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '357871869'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2072592979 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1677423616 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-706042217 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN ('q') AND ('901509930')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-689460588 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-750013622 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1420401221 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6493616365002403) NOT NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1534408619 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1479275871 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1895937935 sz=-15594009'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=503123815 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN x'' THEN 'U\n' ELSE NULL END  WHEN ((0X28420962) NOTNULL) THEN ('-710007127' IN ()) ELSE (x'f374' IN (119915905, NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.1671200767964911; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1328626851 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-139260293 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1473870508') IS FALSE))OR((((749885929)) BETWEEN (('')) AND ((0.22056454939135206))))))AND((('-261489818') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1451681006 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('K亙') ISNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '-821959496' ELSE '199119640' END)&(-760776784 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1142779804 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('E&GD' IN ())) NOT BETWEEN (CASE 1088687570  WHEN 0.3862506056951196 THEN '' ELSE 0.14235594922081485 END) AND (('^' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=308347726 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-175268455 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.0878672023644439)OR(0.3854997856928718)))OR(0.2258064891787802)))IS(CASE WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-527740110 IN (1856054779, NULL)))>>(CASE WHEN 0.5077966134204144 THEN 0.11400872292954711 WHEN '429734477' THEN 0X6529a08 WHEN x'08b3' THEN '1763440980' WHEN NULL THEN 0xffffffffb1630aa3 WHEN '-1186527678' THEN NULL ELSE 0.625355508098881 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1259598030 2 sz=1306154532 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 229002324'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR(NULL COLLATE RTRIM, (((x'', 'T-onB', NULL)) NOT BETWEEN ((x'', '', 0.8594606545074672)) AND ((x'', 0xffffffffd2a777b0, x''))), (('d5<9') NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT CAST(NULL AS NUMERIC), 0.3781779430511879); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((NULL))<=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE '-2123611989'  WHEN '-1201131388' THEN '-1243604712' WHEN '1998692457' THEN NULL WHEN '' THEN '0z飯tnow+ww' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE BINARY)OR(((((NULL)OR(NULL)))OR(-1.7976931348623157E308)))))AND(0Xffffffffa8878649)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS NUMERIC))OR((((x'', x'', 0.9864906131458137)) NOT BETWEEN ((NULL, 0.2907332521278836, '-615824202')) AND ((0X51f73ce1, 'e_X', NULL))))))OR(((0.4327273381340757)/(0Xffffffff995960c8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE RTRIM)|((~ ('-1699679967')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT LIKELY(DISTINCT x''), CASE NULL  WHEN x'bf39' THEN x'235f' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xffffffff9e17b166)AND(x'20cce183')))OR(x'b970'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8615036388377374)<>('-251919087')), CAST('-2105160569' AS TEXT), '1241579190' COLLATE RTRIM))<=((0.7637399592664696, json_remove(x'', 0.7602220492130071), (((x''))==(('1296386368')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LIKELIHOOD(DISTINCT '-1961237972', 0.20181668315313328)))>(((((')3')) BETWEEN ((-1699679967)) AND ((0.4667796048911981)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)!=(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.7503600255061218' IN ('-1132129624')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1477646971'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1339078597'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=497785602 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'7d24') NOTNULL)) NOT BETWEEN ((('805781425') NOT BETWEEN (0.7205877109999639) AND (0x4a1d997e))) AND ((((NULL)) NOT BETWEEN ((0.4702305176693786)) AND ((x'5c53'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-609877479) NOT NULL))<<(((-1723212813) BETWEEN ('') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')GLOB(((0.2915488802439391)|(0.14487269518549328)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1981484008 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1767704157 0 sz=1371593972 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.9007626013755351)OR(NULL)))AND(x'')))AND(((x'')AND(x'7ebd')))))OR((x'89505f10' IN ('-2007156323')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=294309930 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ((396705264)GLOB(NULL)), 0.24822389307131054); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '106076680 sz=-125098394'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1337155740 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1601824869 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(TRIM('Y(', '901509930')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'e63c')AND(-856661676)))AND((((((((('1706179856')AND(x'')))AND(0.5554181337440134)))AND(x'')))AND(-7.60776784E8)))))OR(-140594077)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x17760af0, 0.33650290732743604, NULL, NULL, '1372684249')) NOT BETWEEN ((NULL, 1.243453822E9, '-1031107075', NULL, x'')) AND ((0.6493616365002403, 'ki<08', -4.57020838E8, -1.5594009E7, x'')))) NOT BETWEEN (ABS(DISTINCT 'Ꮥq0-')) AND ((((('-923790325')OR(NULL)))OR('|V6Z꥕')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=820454327'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1438056317 sz=325664389 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '16620291'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((0x2cb259e9) NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ((NULL)-(x'')), 0.6881321229906877); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 161100838; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1405730344'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKELIHOOD(0.16688941409638336, 0.03105803159529197) THEN ((((0.9864906131458137)AND(0.2185980814109767)))OR(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1415184771) NOT BETWEEN (LIKE(6.378182E8, NULL, '6')) AND (LIKELY(DISTINCT -3.47083041E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', 0.6010209403572039, 0.9012277861988495)) NOT BETWEEN ((('mG\8~' IN ()), (((NULL, NULL, 0.38869873740016736)) BETWEEN (('637818200', NULL, '-1860933800')) AND ((x'', '497785602', -1.804822289E9))), ((NULL) IS FALSE))) AND ((CAST(x'' AS INTEGER), ((x'6dbd')==(x'')), STRFTIME(NULL, 0.16249970212415377, NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.18244113964318587)AND(NULL COLLATE BINARY)))AND((('U⻿瞰F')GLOB(0.5357876307018454)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1479275871 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1757326962'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-402963109') NOTNULL))GLOB(429734477 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1754631826 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=574422451 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-688334144')AND(CAST(-92098857 AS BLOB))))AND('-1881615450' COLLATE BINARY)))AND(CASE 0.2422758739811821  WHEN x'' THEN '0.625355508098881' WHEN x'' THEN x'' WHEN 0x4dda5624 THEN 0.8632501975427234 END)))OR(CAST(0.7742504287753029 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=837823343'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-751236073 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1700145374 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=760802905 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2019971149 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1940996074'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1014260785 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1177917114 sz=1764018372 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1375157473'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X5b2d685a COLLATE NOCASE) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.981484008E9)) NOT BETWEEN (((((('-1699679967')AND(x'777b')))OR(x'')))) AND ((((NULL) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1487292593 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0xffffffffd2a777b0 COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1383366179 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1024386804'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=998129656 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1031107075'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-419306572 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2130065515 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-187098129 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1828118366'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('|^**+#Rx') NOT NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-900149936 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9760431128847427) IS FALSE))+((((x'', NULL, '0.5077966134204144'))<=((0.5195027271280489, '_<', x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1939470219 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('Y(')<=('757242032')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1209843124'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'ae77', '饾M', ''))>((NULL, '0.04301766603069934', ''))))-(TYPEOF('-747641850'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN x'f73d' THEN NULL WHEN x'' THEN 0.41543508639908944 WHEN 0.564833284729412 THEN -2.007156323E9 ELSE NULL END) NOT BETWEEN (UNLIKELY(DISTINCT NULL)) AND (TRIM('', NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5357876307018454; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL))<>((x''))))OR(((NULL)IS NOT(-1413124032)))))OR(((0.14530379823493378)AND('-2094485951')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('') BETWEEN (NULL) AND (NULL)))OR(((((NULL)AND('1793434644')))OR('870147498')))))AND(((0.8834077730255117) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1025526515'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-873196460 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR((x'4ce6bbf0' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_GET(x'')) IS TRUE); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((1.7976931348623157E308)) NOT BETWEEN (('795181010')) AND ((x'5ec5')))) NOT BETWEEN (((((x'2155')OR(x'')))AND(0.9491032841478235))) AND (((0.6967584461149204) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-689460588 sz=-1335449921 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=417955066'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)%(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1479275871 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1276942103'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (837823343 COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1109196371 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'641a' AS INTEGER) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(x'', CASE WHEN x'a24b' THEN x'' END, ((0.0878672023644439)==(0.014342430799996198)), ((x'') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1961237972 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-494827205 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((UPPER(0.355397260716665))) AND ((((NULL) NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1779518725 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '901509930 sz=33605814 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.07660464856482585; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1499209350' COLLATE RTRIM)OR(((x'') ISNULL))))OR(((('-1273404096')) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '924567711 sz=-1557653932 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1248850973'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.5312821356690342) ISNULL))AND((((('oD')AND('-1230264120')))OR(0.48630761576377124)))))OR(-1.439180837E9)))AND(((NULL) NOT NULL))))AND(json_array(0.6392723468879112, 0X6a845bea))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(-1.25098394E8) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1851732735 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((((((('-615824202')OR(NULL)))OR('庨)''V6!y\n')))OR(NULL)))AND('-1642614426')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1851500430 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1661427503 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((NULL, x'', 0.625355508098881)) NOT BETWEEN ((-714984022, 0.6328975687830836, NULL)) AND (('9k\rqdHtxv', 0.4569523337735958, '-1742381068')))  WHEN ((((NULL)OR('0.875050872035621')))AND('Q!')) THEN (x'd447' IN ()) ELSE (((NULL, 0.032633061593509094, x''))!=((NULL, '-628584593', x'b4fa6b5b'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULLIF('-613443226', 1.6620291E7) AS INTEGER); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.3580888306776351)/(0.13517047276098137)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=665564460 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1975270827 1375157473 sz=-1392845363 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1979930258 sz=-1282651622 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN NULL THEN NULL ELSE 0.316707405829902 END)IS(CAST('\r提2t2' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1846395015 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.6825826114375174 AS INTEGER) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.9689470070305821, 0.09137717951479363)) NOT BETWEEN (((- (0x593c2e1e)), ((NULL)-(NULL)), NULL COLLATE RTRIM)) AND ((((((((((x'')OR(2.9430993E8)))OR(0.14250569787978984)))AND(NULL)))OR('-2002930375')), (+ (x'')), ((((x'11ae')OR(x'')))OR(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7637399592664696 IN ()) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-919205939 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=837823343'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1292137855 sz=-1887045851 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1057725320 sz=389570540'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0.08746959070455307)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'' AS REAL) THEN CAST(x'' AS REAL) ELSE CAST('Uc6kr&iL㷰' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('PlxmE PX' IN ()))>=('''飯')); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=620690060 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1690672051 sz=-144946307 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT 0.7207545619563148, -3.37941936E8) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1754874597'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=917683715 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-457020838 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'310a' AS INTEGER)  WHEN (4.97785602E8 IN ()) THEN ((NULL)>>('-714984022')) ELSE NULL COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') BETWEEN (x'cc9d') AND (-1601824869))))<=((((x'')+(-337941936))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0X66249abb  WHEN ('C!3,(7' IN ()) THEN (NOT (-3.37941936E8)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(('' IN (NULL, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1778606629 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffb38c4a1a IN ())))==((x'' COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6653386145252524))<((((x'1107')<<(-1.39260293E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('|남肻5G[')-(0.1671200767964911)))==(((x'') BETWEEN (0.6660403869528364) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2054691642'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -1205857924'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((1.574242894E9)IS(x'9aa3')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '392495291 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1303747029'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '700731449 sz=870147498 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('|^**+#rx')) BETWEEN (((((0X641e42e5, NULL, x''))>=((NULL, NULL, '龛)'))))) AND (((NOT (''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1691831773678074)GLOB('1e500'))) NOT BETWEEN (((-2.138428282E9) BETWEEN (0.8178778439817507) AND (0.712700859374101))) AND (((('Gnd', 0X13973ce8, 0.14235594922081485))<=((0.08608147165377655, NULL, '0.3203249994597134'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5808519918026933)AND(NULL)))AND(((x'') BETWEEN (x'e7d4') AND (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '1856436990'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1348715981 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0xffffffffdb4b44b6)AND(0.9720481176636141)))AND('-706042217')))OR(CASE WHEN 0.07543003179515095 THEN NULL END)))AND(((((x'')AND('-337941936')))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '415269829 sz=-751236073 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '34582642 sz=2112080642 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('xlWq')OR(0.8938202175402776)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1880877939 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.18810588790517246)AND(x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-2.007156323E9, x'', '몾6.rL틟4S''')) BETWEEN (('', x'', x'')) AND ((-1891948438, '-821959496', '/7'))))AND(NULL)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-157379079 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-407960147 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=220008699 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((0.6482080565451055) BETWEEN (0.9518009516628301) AND (x'14280e48'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1968003045 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')>(0.17907083522811962)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (0.2258064891787802)) COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2088917775 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1961237972' AS INTEGER)) BETWEEN (((NULL) NOTNULL)) AND (((1.76344098E9)<=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1363571807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '642432100 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('S]')/('?u')))OR((']XX殘^s*' IN ()))))AND((0.34005404637111303 IN (0.15451047066728385)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'2528' AS REAL)) NOT BETWEEN (json_remove('-1575250542', NULL)) AND ((('2h橐b%33悺')>(0xffffffffe0f956a4)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))IS NOT('1968003045' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'4a22c770') NOT NULL))OR((('TRUE') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'd5<9' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1595144479 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1055114678 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1850810707 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '''飯'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1823803304 sz=-1263301567 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1819957210 sz=294309930'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((',P') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-970082044 sz=429734477 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-433108664 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1414217850') NOTNULL))=((('-2006374634')<>('d5<9')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1310204858 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.63829746213279; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1934633518 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULLIF(DISTINCT x'', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT DISTINCT UNICODE(rt0.c0 COLLATE BINARY), ((((rt0.c1)%(rt0.c1)))>((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))), (((~ (rt0.c1)))<=(rt0.c2)) FROM rt0; -- 1ms;
UPDATE OR IGNORE rt0 SET c2=x'eaa75123' WHERE CAST(NULL AS TEXT); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
REINDEX; -- 0ms;
UPDATE rt0 SET c0='', c0=x'', c2=NULL WHERE ((((0.6111582602044541)OR(rt0.c2 COLLATE BINARY)))OR('_h')); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.4995335593431466 WHERE rt0.c0; -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (0.6770085609661687); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.20005277054073023) WHERE CASE WHEN ((x'dbf5') NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN LIKELY(DISTINCT rt0.c0) ELSE ((rt0.c0)&(rt0.c1)) END; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c0, c1)=('', '|', '1620386065') WHERE CAST(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) AS BLOB); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0) VALUES (0.05458284298641791, NULL), (NULL, ''), (NULL, -1882824860); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2, c1) VALUES (-714984022, NULL, NULL); -- 3ms;
UPDATE OR ABORT rt0 SET (c2, c2, c0)=(0.8135919426833663, 0.7602220492130071, '-1763494695') WHERE HEX((rt0.c1 IN ())); -- 0ms;
UPDATE rt0 SET c0=NULL WHERE ((+ (NULL)) IN ()); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='1620386065' WHERE ((rt0.c1)=((- (0.5638240745582261)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''), ('sTIjh'), ('1951'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
DROP VIEW v0; -- 1ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('-1227191184', x'', NULL); -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('1oY\r' AS TEXT), LENGTH(0.5000729862889606), CAST(0.20297510538877817 AS BLOB)))<>((((0xffffffffff120de7)IS NOT(0X24a9f3ba)), UPPER(-1984479061), ((0.7677823786438235)&(x''))))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2)=('-1292522329', NULL) WHERE ABS((~ (rt0.c2))); -- 1ms;
INSERT OR REPLACE INTO rt0(c1) VALUES ('1713674939'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (0Xffffffffd79ebb8e, NULL); -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES ('r]Vؤ', NULL, ''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2, c0)=('L', -1243604712, '1743485635') WHERE (+ (((((rt0.c0)OR(rt0.c2)))OR(x'')))); -- 1ms;
INSERT OR FAIL INTO rt0 VALUES ('10707756', '901509930', 'AP᝹]'''), (NULL, x'640c', NULL), (NULL, '#''r~㣛''D2', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (-4.57020838E8, 'X/7R匘闹S녦'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'') WHERE ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()); -- 0ms;
UPDATE OR ABORT rt0 SET (c2)=('1') WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN '-1328523771' THEN rt0.c0 WHEN 'nG''' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE 0.31634395105010626 END)<>(((rt0.c2)IS NOT(rt0.c1)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'2cbc', '-709947420', NULL); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE rt0 SET (c0, c2, c0)=(0.003962312143498847, 3.08347726E8, 0.9355912338249643); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(x'') WHERE vt0.c1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'') IS TRUE) IN (CAST(-1.243604712E9 AS TEXT), ((0.4259176453911211) ISNULL))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1967079942,12');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1777608128); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40010'); -- 0ms;
REINDEX NOCASE; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '48785'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.8076534116234345); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '5877'); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (0.4012209405815448); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('틔Qt%h''{^f'), ('0.14487269518549328'), ('-1642614426'), ('-1472203670'), ('-88065494'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-1526008590', c1=NULL, c1=-7.51236073E8; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('?3帯.'), (1705137306), (0.24920803611893272); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))IS NOT(CAST(rt0.c0 AS BLOB)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))IS NOT(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))IS NOT(CAST(rt0.c0 AS BLOB)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))IS NOT(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))IS NOT(CAST(rt0.c0 AS BLOB)))) ORDER BY NULL;
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (0.7500294622721051) AND (rt0.c0)) IN ())) ORDER BY CASE WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('GF') AND (rt0.c0)) END ASC, (NOT (HEX(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (0.7500294622721051) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('GF') AND (rt0.c0)) END ASC, (NOT (HEX(rt0.c2)))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (0.7500294622721051) AND (rt0.c0)) IN ())) ORDER BY CASE WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('GF') AND (rt0.c0)) END ASC, (NOT (HEX(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (0.7500294622721051) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('GF') AND (rt0.c0)) END ASC, (NOT (HEX(rt0.c2)))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (0.7500294622721051) AND (rt0.c0)) IN ())) ORDER BY CASE WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('GF') AND (rt0.c0)) END ASC, (NOT (HEX(rt0.c2)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c1 AS NUMERIC)  WHEN (((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c2, 1957833508))) THEN rt0.c0 ELSE (('tbQ즕')IS NOT(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS NUMERIC)  WHEN (((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c2, 1957833508))) THEN rt0.c0 ELSE (('tbQ즕')IS NOT(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c1 AS NUMERIC)  WHEN (((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c2, 1957833508))) THEN rt0.c0 ELSE (('tbQ즕')IS NOT(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS NUMERIC)  WHEN (((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c2, 1957833508))) THEN rt0.c0 ELSE (('tbQ즕')IS NOT(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c1 AS NUMERIC)  WHEN (((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c2, 1957833508))) THEN rt0.c0 ELSE (('tbQ즕')IS NOT(rt0.c2)) END);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)GLOB(NULL)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)GLOB(NULL)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)GLOB(NULL)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)GLOB(NULL)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)GLOB(NULL)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))=((rt0.c1))) COLLATE NOCASE) ORDER BY IFNULL(DISTINCT 0Xffffffff8dfc9d66, rt0.c1) COLLATE NOCASE DESC  NULLS LAST, COALESCE(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END, (rt0.c1 IN ())), rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))==((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT 0Xffffffff8dfc9d66, rt0.c1) COLLATE NOCASE DESC  NULLS LAST, COALESCE(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END, (rt0.c1 IN ())), rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))=((rt0.c1))) COLLATE NOCASE) ORDER BY IFNULL(DISTINCT 0Xffffffff8dfc9d66, rt0.c1) COLLATE NOCASE DESC  NULLS LAST, COALESCE(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END, (rt0.c1 IN ())), rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))==((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT 0Xffffffff8dfc9d66, rt0.c1) COLLATE NOCASE DESC  NULLS LAST, COALESCE(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END, (rt0.c1 IN ())), rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))=((rt0.c1))) COLLATE NOCASE) ORDER BY IFNULL(DISTINCT 0Xffffffff8dfc9d66, rt0.c1) COLLATE NOCASE DESC  NULLS LAST, COALESCE(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END, (rt0.c1 IN ())), rt0.c1  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((((HEX(rt0.c0))AND(CAST(rt0.c2 AS TEXT))))AND(rt0.c2 COLLATE RTRIM)))OR((rt0.c1 IN ()))))AND(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((HEX(rt0.c0))AND(CAST(rt0.c2 AS TEXT))))AND(rt0.c2 COLLATE RTRIM)))OR((rt0.c1 IN ()))))AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((HEX(rt0.c0))AND(CAST(rt0.c2 AS TEXT))))AND(rt0.c2 COLLATE RTRIM)))OR((rt0.c1 IN ()))))AND(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((HEX(rt0.c0))AND(CAST(rt0.c2 AS TEXT))))AND(rt0.c2 COLLATE RTRIM)))OR((rt0.c1 IN ()))))AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((HEX(rt0.c0))AND(CAST(rt0.c2 AS TEXT))))AND(rt0.c2 COLLATE RTRIM)))OR((rt0.c1 IN ()))))AND(rt0.c1 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (CASE WHEN (NULL IN ()) THEN HEX(rt0.c1) END) ORDER BY rt0.c2 ASC  NULLS FIRST, CAST(((rt0.c0)>(rt0.c2)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NULL IN ()) THEN HEX(rt0.c1) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC  NULLS FIRST, CAST(((rt0.c0)>(rt0.c2)) AS REAL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN (NULL IN ()) THEN HEX(rt0.c1) END) ORDER BY rt0.c2 ASC  NULLS FIRST, CAST(((rt0.c0)>(rt0.c2)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NULL IN ()) THEN HEX(rt0.c1) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC  NULLS FIRST, CAST(((rt0.c0)>(rt0.c2)) AS REAL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN (NULL IN ()) THEN HEX(rt0.c1) END) ORDER BY rt0.c2 ASC  NULLS FIRST, CAST(((rt0.c0)>(rt0.c2)) AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c0)))>(LIKE(rt0.c2, 0.4130612546519383)))) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (((rt0.c2 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c0)))>(LIKE(rt0.c2, 0.4130612546519383)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (((rt0.c2 IN ())))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c0)))>(LIKE(rt0.c2, 0.4130612546519383)))) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (((rt0.c2 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c0)))>(LIKE(rt0.c2, 0.4130612546519383)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (((rt0.c2 IN ())))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c0)))>(LIKE(rt0.c2, 0.4130612546519383)))) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (((rt0.c2 IN ())))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (DATE(((rt0.c0) IS TRUE), (('X') NOT BETWEEN (rt0.c0) AND (rt0.c2)), CAST(rt0.c0 AS REAL))) ORDER BY ((((((((rt0.c1 COLLATE RTRIM)AND(rt0.c1)))OR(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR('wc')))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATE(((rt0.c0) IS TRUE), (('X') NOT BETWEEN (rt0.c0) AND (rt0.c2)), CAST(rt0.c0 AS REAL))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c1 COLLATE RTRIM)AND(rt0.c1)))OR(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR('wc')))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (DATE(((rt0.c0) IS TRUE), (('X') NOT BETWEEN (rt0.c0) AND (rt0.c2)), CAST(rt0.c0 AS REAL))) ORDER BY ((((((((rt0.c1 COLLATE RTRIM)AND(rt0.c1)))OR(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR('wc')))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATE(((rt0.c0) IS TRUE), (('X') NOT BETWEEN (rt0.c0) AND (rt0.c2)), CAST(rt0.c0 AS REAL))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c1 COLLATE RTRIM)AND(rt0.c1)))OR(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR('wc')))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (DATE(((rt0.c0) IS TRUE), (('X') NOT BETWEEN (rt0.c0) AND (rt0.c2)), CAST(rt0.c0 AS REAL))) ORDER BY ((((((((rt0.c1 COLLATE RTRIM)AND(rt0.c1)))OR(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))OR('wc')))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN ((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((0.3689092155711293, rt0.c2, rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2)))) AND ((rt0.c1 IN ())))) ORDER BY json_valid(rt0.c2 COLLATE BINARY) ASC  NULLS FIRST, LIKELY(((((rt0.c2)AND(rt0.c0)))OR(x'')))  NULLS FIRST, NULLIF(DISTINCT 0.2293901001574039, ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) BETWEEN ((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((0.3689092155711293, rt0.c2, rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2)))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY json_valid(rt0.c2 COLLATE BINARY) ASC  NULLS FIRST, LIKELY(((((rt0.c2)AND(rt0.c0)))OR(x'')))  NULLS FIRST, NULLIF(DISTINCT 0.2293901001574039, ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN ((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((0.3689092155711293, rt0.c2, rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2)))) AND ((rt0.c1 IN ())))) ORDER BY json_valid(rt0.c2 COLLATE BINARY) ASC  NULLS FIRST, LIKELY(((((rt0.c2)AND(rt0.c0)))OR(x'')))  NULLS FIRST, NULLIF(DISTINCT 0.2293901001574039, ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) BETWEEN ((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((0.3689092155711293, rt0.c2, rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2)))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY json_valid(rt0.c2 COLLATE BINARY) ASC  NULLS FIRST, LIKELY(((((rt0.c2)AND(rt0.c0)))OR(x'')))  NULLS FIRST, NULLIF(DISTINCT 0.2293901001574039, ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN ((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((0.3689092155711293, rt0.c2, rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2)))) AND ((rt0.c1 IN ())))) ORDER BY json_valid(rt0.c2 COLLATE BINARY) ASC  NULLS FIRST, LIKELY(((((rt0.c2)AND(rt0.c0)))OR(x'')))  NULLS FIRST, NULLIF(DISTINCT 0.2293901001574039, ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, NULL, 0.316707405829902))))) ORDER BY INSTR(CASE WHEN rt0.c1 THEN 0.7637399592664696 END, ((rt0.c2)|(-477071998))), CAST(((rt0.c1)OR(rt0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, NULL, 0.316707405829902))))) IS TRUE)  as count FROM rt0 ORDER BY INSTR(CASE WHEN rt0.c1 THEN 0.7637399592664696 END, ((rt0.c2)|(-477071998))), CAST(((rt0.c1)OR(rt0.c2)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, NULL, 0.316707405829902))))) ORDER BY INSTR(CASE WHEN rt0.c1 THEN 0.7637399592664696 END, ((rt0.c2)|(-477071998))), CAST(((rt0.c1)OR(rt0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, NULL, 0.316707405829902))))) IS TRUE)  as count FROM rt0 ORDER BY INSTR(CASE WHEN rt0.c1 THEN 0.7637399592664696 END, ((rt0.c2)|(-477071998))), CAST(((rt0.c1)OR(rt0.c2)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, NULL, 0.316707405829902))))) ORDER BY INSTR(CASE WHEN rt0.c1 THEN 0.7637399592664696 END, ((rt0.c2)|(-477071998))), CAST(((rt0.c1)OR(rt0.c2)) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((x'6186' COLLATE NOCASE)GLOB(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((x'6186' COLLATE NOCASE)GLOB(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'6186' COLLATE NOCASE)GLOB(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((x'6186' COLLATE NOCASE)GLOB(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'6186' COLLATE NOCASE)GLOB(((rt0.c0) IS TRUE))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (rt0.c2) AND (LOWER(DISTINCT rt0.c0)))) ORDER BY (((rt0.c2 IN ()))>(rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (rt0.c2) AND (LOWER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))>(rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (rt0.c2) AND (LOWER(DISTINCT rt0.c0)))) ORDER BY (((rt0.c2 IN ()))>(rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (rt0.c2) AND (LOWER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))>(rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (rt0.c2) AND (LOWER(DISTINCT rt0.c0)))) ORDER BY (((rt0.c2 IN ()))>(rt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (x'7081');
SELECT SUM(count) FROM (SELECT ALL ((x'7081') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'7081');
SELECT SUM(count) FROM (SELECT ALL ((x'7081') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'7081');
SELECT ALL COUNT(*) FROM rt0 WHERE (((MAX(rt0.c1, rt0.c0, rt0.c2, rt0.c0))/(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((MAX(rt0.c1, rt0.c0, rt0.c2, rt0.c0))/(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((MAX(rt0.c1, rt0.c0, rt0.c2, rt0.c0))/(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((MAX(rt0.c1, rt0.c0, rt0.c2, rt0.c0))/(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((MAX(rt0.c1, rt0.c0, rt0.c2, rt0.c0))/(CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM rt0 WHERE (CAST((~ (rt0.c0)) AS TEXT)) ORDER BY ('2122623224' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ('2122623224' IN ()) DESC);
SELECT ALL * FROM rt0 WHERE (CAST((~ (rt0.c0)) AS TEXT)) ORDER BY ('2122623224' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ('2122623224' IN ()) DESC);
SELECT ALL * FROM rt0 WHERE (CAST((~ (rt0.c0)) AS TEXT)) ORDER BY ('2122623224' IN ()) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN (TRIM(DISTINCT rt0.c0, NULL)) AND (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(0.13649521803172304))))) ORDER BY ((NULL)>>(rt0.c0 COLLATE BINARY)), ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)AND((rt0.c0 IN (rt0.c2)))))OR(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (TRIM(DISTINCT rt0.c0, NULL)) AND (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(0.13649521803172304))))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)>>(rt0.c0 COLLATE BINARY)), ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)AND((rt0.c0 IN (rt0.c2)))))OR(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN (TRIM(DISTINCT rt0.c0, NULL)) AND (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(0.13649521803172304))))) ORDER BY ((NULL)>>(rt0.c0 COLLATE BINARY)), ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)AND((rt0.c0 IN (rt0.c2)))))OR(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (TRIM(DISTINCT rt0.c0, NULL)) AND (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(0.13649521803172304))))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)>>(rt0.c0 COLLATE BINARY)), ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)AND((rt0.c0 IN (rt0.c2)))))OR(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN (TRIM(DISTINCT rt0.c0, NULL)) AND (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(0.13649521803172304))))) ORDER BY ((NULL)>>(rt0.c0 COLLATE BINARY)), ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)AND((rt0.c0 IN (rt0.c2)))))OR(rt0.c0))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOTNULL)) BETWEEN (TYPEOF(rt0.c0)) AND (((rt0.c2)IS(rt0.c0))))) ORDER BY ((((CAST(rt0.c0 AS REAL))OR(((rt0.c2)+(rt0.c1)))))OR(((rt0.c0)<<(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) BETWEEN (TYPEOF(rt0.c0)) AND (((rt0.c2)IS(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS REAL))OR(((rt0.c2)+(rt0.c1)))))OR(((rt0.c0)<<(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOTNULL)) BETWEEN (TYPEOF(rt0.c0)) AND (((rt0.c2)IS(rt0.c0))))) ORDER BY ((((CAST(rt0.c0 AS REAL))OR(((rt0.c2)+(rt0.c1)))))OR(((rt0.c0)<<(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) BETWEEN (TYPEOF(rt0.c0)) AND (((rt0.c2)IS(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS REAL))OR(((rt0.c2)+(rt0.c1)))))OR(((rt0.c0)<<(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOTNULL)) BETWEEN (TYPEOF(rt0.c0)) AND (((rt0.c2)IS(rt0.c0))))) ORDER BY ((((CAST(rt0.c0 AS REAL))OR(((rt0.c2)+(rt0.c1)))))OR(((rt0.c0)<<(rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY LOWER(((rt0.c1)+(rt0.c1))) ASC  NULLS LAST, NULL, UNLIKELY(((rt0.c0)<=(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY LOWER(((rt0.c1)+(rt0.c1))) ASC  NULLS LAST, NULL, UNLIKELY(((rt0.c0)<=(rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY LOWER(((rt0.c1)+(rt0.c1))) ASC  NULLS LAST, NULL, UNLIKELY(((rt0.c0)<=(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY LOWER(((rt0.c1)+(rt0.c1))) ASC  NULLS LAST, NULL, UNLIKELY(((rt0.c0)<=(rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY LOWER(((rt0.c1)+(rt0.c1))) ASC  NULLS LAST, NULL, UNLIKELY(((rt0.c0)<=(rt0.c1))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)=(rt0.c0))))<=((rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)=(rt0.c0))))<=((rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)=(rt0.c0))))<=((rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)=(rt0.c0))))<=((rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)=(rt0.c0))))<=((rt0.c1))));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)!=(rt0.c1)) AS REAL)) ORDER BY ((rt0.c1)<=((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<>(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<=((rt0.c1 IN ()))));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)!=(rt0.c1)) AS REAL)) ORDER BY ((rt0.c1)<=((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<>(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<=((rt0.c1 IN ()))));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1)!=(rt0.c1)) AS REAL)) ORDER BY ((rt0.c1)<=((rt0.c1 IN ())));
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY 0.8412631545495431  NULLS LAST, (NOT (((rt0.c1)-(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY 0.8412631545495431  NULLS LAST, (NOT (((rt0.c1)-(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY 0.8412631545495431  NULLS LAST, (NOT (((rt0.c1)-(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY 0.8412631545495431  NULLS LAST, (NOT (((rt0.c1)-(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY 0.8412631545495431  NULLS LAST, (NOT (((rt0.c1)-(rt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE BINARY);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 COLLATE BINARY WHEN rt0.c0 THEN ((rt0.c2) BETWEEN (rt0.c1) AND (x'ff2d')) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (((rt0.c2, rt0.c0, rt0.c0))<>((rt0.c0, rt0.c0, rt0.c0))) ELSE (rt0.c2 IN ()) END) ORDER BY ((rt0.c2) NOTNULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 COLLATE BINARY WHEN rt0.c0 THEN ((rt0.c2) BETWEEN (rt0.c1) AND (x'ff2d')) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (((rt0.c2, rt0.c0, rt0.c0))<>((rt0.c0, rt0.c0, rt0.c0))) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOTNULL) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 COLLATE BINARY WHEN rt0.c0 THEN ((rt0.c2) BETWEEN (rt0.c1) AND (x'ff2d')) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (((rt0.c2, rt0.c0, rt0.c0))<>((rt0.c0, rt0.c0, rt0.c0))) ELSE (rt0.c2 IN ()) END) ORDER BY ((rt0.c2) NOTNULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 COLLATE BINARY WHEN rt0.c0 THEN ((rt0.c2) BETWEEN (rt0.c1) AND (x'ff2d')) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (((rt0.c2, rt0.c0, rt0.c0))<>((rt0.c0, rt0.c0, rt0.c0))) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOTNULL) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 COLLATE BINARY WHEN rt0.c0 THEN ((rt0.c2) BETWEEN (rt0.c1) AND (x'ff2d')) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (((rt0.c2, rt0.c0, rt0.c0))<>((rt0.c0, rt0.c0, rt0.c0))) ELSE (rt0.c2 IN ()) END) ORDER BY ((rt0.c2) NOTNULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c2)<>(rt0.c2))) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((NULL)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<>(rt0.c2))) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((NULL)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)<>(rt0.c2))) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((NULL)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<>(rt0.c2))) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((NULL)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)<>(rt0.c2))) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((NULL)OR(rt0.c2)))OR(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c1)LIKE(rt0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)LIKE(rt0.c2))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c1)LIKE(rt0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)LIKE(rt0.c2))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c1)LIKE(rt0.c2))) ISNULL)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c0)GLOB(CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)GLOB(CASE WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)GLOB(CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)GLOB(CASE WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)GLOB(CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY 'sTIjm' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY 'sTIjm' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY 'sTIjm' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY 'sTIjm' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY 'sTIjm' DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ((rt0.c1) BETWEEN ('-1601824869') AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c1 END ELSE ((rt0.c2)AND(rt0.c0)) END) ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) IS FALSE)  NULLS FIRST, ((((rt0.c1)>(rt0.c1))) NOT BETWEEN (rt0.c1) AND (((rt0.c0)==(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN ((rt0.c1) BETWEEN ('-1601824869') AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c1 END ELSE ((rt0.c2)AND(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) IS FALSE)  NULLS FIRST, ((((rt0.c1)>(rt0.c1))) NOT BETWEEN (rt0.c1) AND (((rt0.c0)=(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ((rt0.c1) BETWEEN ('-1601824869') AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c1 END ELSE ((rt0.c2)AND(rt0.c0)) END) ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) IS FALSE)  NULLS FIRST, ((((rt0.c1)>(rt0.c1))) NOT BETWEEN (rt0.c1) AND (((rt0.c0)==(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN ((rt0.c1) BETWEEN ('-1601824869') AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c1 END ELSE ((rt0.c2)AND(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) IS FALSE)  NULLS FIRST, ((((rt0.c1)>(rt0.c1))) NOT BETWEEN (rt0.c1) AND (((rt0.c0)=(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ((rt0.c1) BETWEEN ('-1601824869') AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c1 END ELSE ((rt0.c2)AND(rt0.c0)) END) ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) IS FALSE)  NULLS FIRST, ((((rt0.c1)>(rt0.c1))) NOT BETWEEN (rt0.c1) AND (((rt0.c0)==(rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))|(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))|(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))|(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))|(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))|(CAST(rt0.c1 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)=(((rt0.c2)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)==(((rt0.c2)-(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)=(((rt0.c2)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)==(((rt0.c2)-(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)=(((rt0.c2)-(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)IS NOT((((rt0.c0))=((rt0.c1)))))) ORDER BY (NOT (')BJ*~㧙' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)IS NOT((((rt0.c0))==((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (')BJ*~㧙' COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)IS NOT((((rt0.c0))=((rt0.c1)))))) ORDER BY (NOT (')BJ*~㧙' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)IS NOT((((rt0.c0))==((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (')BJ*~㧙' COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)IS NOT((((rt0.c0))=((rt0.c1)))))) ORDER BY (NOT (')BJ*~㧙' COLLATE RTRIM));
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE (-1.887045851E9) ORDER BY CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1.887045851E9) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (-1.887045851E9) ORDER BY CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1.887045851E9) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (-1.887045851E9) ORDER BY CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)&(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1) IS TRUE)))) ORDER BY ((((NULL)AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))AND((((rt0.c1, rt0.c0, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0))))) DESC  NULLS LAST, ((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c0)/(rt0.c2))) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)&(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL)AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))AND((((rt0.c1, rt0.c0, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0))))) DESC  NULLS LAST, ((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c0)/(rt0.c2))) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)&(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1) IS TRUE)))) ORDER BY ((((NULL)AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))AND((((rt0.c1, rt0.c0, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0))))) DESC  NULLS LAST, ((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c0)/(rt0.c2))) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)&(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL)AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))AND((((rt0.c1, rt0.c0, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0))))) DESC  NULLS LAST, ((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c0)/(rt0.c2))) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)&(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c1) IS TRUE)))) ORDER BY ((((NULL)AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))AND((((rt0.c1, rt0.c0, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0))))) DESC  NULLS LAST, ((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c0)/(rt0.c2))) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt0 WHERE ((((rt0.c0)IS(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)IS(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)IS(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)IS(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)IS(rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)OR(((rt0.c2)*(rt0.c2)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)OR(((rt0.c2)*(rt0.c2)))))AND(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)OR(((rt0.c2)*(rt0.c2)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)OR(((rt0.c2)*(rt0.c2)))))AND(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)OR(((rt0.c2)*(rt0.c2)))))AND(NULL)));
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) NOTNULL)) ORDER BY (((rt0.c0 IN (rt0.c2)))AND((rt0.c1 IN ())))  NULLS FIRST, NULL, ((((rt0.c0)>(rt0.c2)))>((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c2)))AND((rt0.c1 IN ())))  NULLS FIRST, NULL, ((((rt0.c0)>(rt0.c2)))>((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC);
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) NOTNULL)) ORDER BY (((rt0.c0 IN (rt0.c2)))AND((rt0.c1 IN ())))  NULLS FIRST, NULL, ((((rt0.c0)>(rt0.c2)))>((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c2)))AND((rt0.c1 IN ())))  NULLS FIRST, NULL, ((((rt0.c0)>(rt0.c2)))>((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) IN ())) ORDER BY (0.25207144831549744 IN ()) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (0.25207144831549744 IN ()) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) IN ())) ORDER BY (0.25207144831549744 IN ()) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (0.25207144831549744 IN ()) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) IN ())) ORDER BY (0.25207144831549744 IN ()) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY, rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC)))<((rt0.c2, (+ (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY, rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC)))<((rt0.c2, (+ (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY, rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC)))<((rt0.c2, (+ (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY, rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC)))<((rt0.c2, (+ (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY, rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC)))<((rt0.c2, (+ (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN LOWER(rt0.c2) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS INTEGER) ELSE ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) END) ORDER BY ((((rt0.c2)>('9\nr'))) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c0 THEN x'' END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) ISNULL) THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN LOWER(rt0.c2) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS INTEGER) ELSE ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>('9\nr'))) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c0 THEN x'' END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN LOWER(rt0.c2) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS INTEGER) ELSE ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) END) ORDER BY ((((rt0.c2)>('9\nr'))) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c0 THEN x'' END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) ISNULL) THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN LOWER(rt0.c2) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS INTEGER) ELSE ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>('9\nr'))) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c0 THEN x'' END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN LOWER(rt0.c2) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS INTEGER) ELSE ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) END) ORDER BY ((((rt0.c2)>('9\nr'))) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c0 THEN x'' END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(JULIANDAY(rt0.c1, rt0.c2, rt0.c1) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(JULIANDAY(rt0.c1, rt0.c2, rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(JULIANDAY(rt0.c1, rt0.c2, rt0.c1) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(JULIANDAY(rt0.c1, rt0.c2, rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(JULIANDAY(rt0.c1, rt0.c2, rt0.c1) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) IS TRUE))AND(((rt0.c0)%(rt0.c0)))))OR(rt0.c1))) ORDER BY CASE WHEN '0.7637399592664696' THEN json_valid(rt0.c0) WHEN (('0.8415359962292345')-(rt0.c0)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((NULL)AND(rt0.c2)))OR(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS TRUE))AND(((rt0.c0)%(rt0.c0)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN '0.7637399592664696' THEN json_valid(rt0.c0) WHEN (('0.8415359962292345')-(rt0.c0)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((NULL)AND(rt0.c2)))OR(rt0.c2)) END);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) IS TRUE))AND(((rt0.c0)%(rt0.c0)))))OR(rt0.c1))) ORDER BY CASE WHEN '0.7637399592664696' THEN json_valid(rt0.c0) WHEN (('0.8415359962292345')-(rt0.c0)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((NULL)AND(rt0.c2)))OR(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS TRUE))AND(((rt0.c0)%(rt0.c0)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN '0.7637399592664696' THEN json_valid(rt0.c0) WHEN (('0.8415359962292345')-(rt0.c0)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((NULL)AND(rt0.c2)))OR(rt0.c2)) END);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) IS TRUE))AND(((rt0.c0)%(rt0.c0)))))OR(rt0.c1))) ORDER BY CASE WHEN '0.7637399592664696' THEN json_valid(rt0.c0) WHEN (('0.8415359962292345')-(rt0.c0)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((NULL)AND(rt0.c2)))OR(rt0.c2)) END;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c1 WHEN ((rt0.c1) BETWEEN ('') AND (rt0.c2)) THEN rt0.c2 END) ORDER BY (((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c2, 0X3bc99d20)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c1 WHEN ((rt0.c1) BETWEEN ('') AND (rt0.c2)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c2, 0x3bc99d20)))) ISNULL) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c1 WHEN ((rt0.c1) BETWEEN ('') AND (rt0.c2)) THEN rt0.c2 END) ORDER BY (((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c2, 0X3bc99d20)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c1 WHEN ((rt0.c1) BETWEEN ('') AND (rt0.c2)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c2, 0x3bc99d20)))) ISNULL) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(rt0.c0 AS TEXT) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c1 WHEN ((rt0.c1) BETWEEN ('') AND (rt0.c2)) THEN rt0.c2 END) ORDER BY (((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c1, rt0.c2, 0X3bc99d20)))) ISNULL) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.10045809180400056 END, rt0.c2 COLLATE RTRIM))<=((((rt0.c0)OR(rt0.c2)), (((rt0.c1))<((rt0.c1))), '-364836241'))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.10045809180400056 END, rt0.c2 COLLATE RTRIM))<=((((rt0.c0)OR(rt0.c2)), (((rt0.c1))<((rt0.c1))), '-364836241')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.10045809180400056 END, rt0.c2 COLLATE RTRIM))<=((((rt0.c0)OR(rt0.c2)), (((rt0.c1))<((rt0.c1))), '-364836241'))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.10045809180400056 END, rt0.c2 COLLATE RTRIM))<=((((rt0.c0)OR(rt0.c2)), (((rt0.c1))<((rt0.c1))), '-364836241')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.10045809180400056 END, rt0.c2 COLLATE RTRIM))<=((((rt0.c0)OR(rt0.c2)), (((rt0.c1))<((rt0.c1))), '-364836241'))));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END)||(HEX(rt0.c1)))) ORDER BY CAST((+ (rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c0 END)||(HEX(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END)||(HEX(rt0.c1)))) ORDER BY CAST((+ (rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c0 END)||(HEX(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END)||(HEX(rt0.c1)))) ORDER BY CAST((+ (rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER)) ORDER BY ((((((rt0.c2) IS TRUE))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c0)+('cg')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) IS TRUE))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c0)+('cg')))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER)) ORDER BY ((((((rt0.c2) IS TRUE))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c0)+('cg')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) IS TRUE))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c0)+('cg')))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER)) ORDER BY ((((((rt0.c2) IS TRUE))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c0)+('cg')))) ASC;
SELECT * FROM rt0 WHERE (((((rt0.c2)!=(rt0.c2)))OR(json_array_length(rt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<>(rt0.c2)))OR(json_array_length(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)!=(rt0.c2)))OR(json_array_length(rt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<>(rt0.c2)))OR(json_array_length(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))<>(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))<>(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))<>(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))<>(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))<>(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-345785587')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-345785587')) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-345785587')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-345785587')) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-345785587')) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))OR(0.8408706820319036)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))OR(0.8408706820319036))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))OR(0.8408706820319036)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))OR(0.8408706820319036))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))OR(0.8408706820319036)));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)AND(NULLIF(rt0.c1, rt0.c2))))OR(SQLITE_VERSION())))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))))OR('396179477')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(NULLIF(rt0.c1, rt0.c2))))OR(SQLITE_VERSION())))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))))OR('396179477'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)AND(NULLIF(rt0.c1, rt0.c2))))OR(SQLITE_VERSION())))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))))OR('396179477')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(NULLIF(rt0.c1, rt0.c2))))OR(SQLITE_VERSION())))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))))OR('396179477'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)AND(NULLIF(rt0.c1, rt0.c2))))OR(SQLITE_VERSION())))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))))OR('396179477')));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT ALL COUNT(*) FROM rt0 WHERE (LTRIM(rt0.c1)) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END IN ()) ASC  NULLS FIRST, (((rt0.c2, rt0.c0, 837823343)) BETWEEN ((json_valid(rt0.c1), SUBSTR(rt0.c2, rt0.c0), ((rt0.c2)<=(NULL)))) AND ((((rt0.c1)IS NOT(rt0.c0)), -1611625844, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ASC  NULLS LAST, ((0.7862166300812083) BETWEEN (((rt0.c0)<=(rt0.c0))) AND ((+ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END IN ()) ASC  NULLS FIRST, (((rt0.c2, rt0.c0, 837823343)) BETWEEN ((json_valid(rt0.c1), SUBSTR(rt0.c2, rt0.c0), ((rt0.c2)<=(NULL)))) AND ((((rt0.c1)IS NOT(rt0.c0)), -1611625844, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ASC  NULLS LAST, ((0.7862166300812083) BETWEEN (((rt0.c0)<=(rt0.c0))) AND ((+ (rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LTRIM(rt0.c1)) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END IN ()) ASC  NULLS FIRST, (((rt0.c2, rt0.c0, 837823343)) BETWEEN ((json_valid(rt0.c1), SUBSTR(rt0.c2, rt0.c0), ((rt0.c2)<=(NULL)))) AND ((((rt0.c1)IS NOT(rt0.c0)), -1611625844, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ASC  NULLS LAST, ((0.7862166300812083) BETWEEN (((rt0.c0)<=(rt0.c0))) AND ((+ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END IN ()) ASC  NULLS FIRST, (((rt0.c2, rt0.c0, 837823343)) BETWEEN ((json_valid(rt0.c1), SUBSTR(rt0.c2, rt0.c0), ((rt0.c2)<=(NULL)))) AND ((((rt0.c1)IS NOT(rt0.c0)), -1611625844, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ASC  NULLS LAST, ((0.7862166300812083) BETWEEN (((rt0.c0)<=(rt0.c0))) AND ((+ (rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LTRIM(rt0.c1)) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END IN ()) ASC  NULLS FIRST, (((rt0.c2, rt0.c0, 837823343)) BETWEEN ((json_valid(rt0.c1), SUBSTR(rt0.c2, rt0.c0), ((rt0.c2)<=(NULL)))) AND ((((rt0.c1)IS NOT(rt0.c0)), -1611625844, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ASC  NULLS LAST, ((0.7862166300812083) BETWEEN (((rt0.c0)<=(rt0.c0))) AND ((+ (rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(0.7527621801156934 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.7527621801156934 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(0.7527621801156934 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.7527621801156934 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(0.7527621801156934 AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2 COLLATE BINARY)OR(-1823803304)))OR(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 COLLATE BINARY)OR(-1823803304)))OR(rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2 COLLATE BINARY)OR(-1823803304)))OR(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 COLLATE BINARY)OR(-1823803304)))OR(rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2 COLLATE BINARY)OR(-1823803304)))OR(rt0.c2))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<>((rt0.c2))))==(((rt0.c1)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<>((rt0.c2))))=(((rt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<>((rt0.c2))))==(((rt0.c1)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<>((rt0.c2))))=(((rt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<>((rt0.c2))))==(((rt0.c1)<(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ((- (((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))))) ORDER BY (((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) AND (((rt0.c0 IN ()))))  NULLS LAST, rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) AND (((rt0.c0 IN ()))))  NULLS LAST, rt0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- (((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))))) ORDER BY (((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) AND (((rt0.c0 IN ()))))  NULLS LAST, rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) AND (((rt0.c0 IN ()))))  NULLS LAST, rt0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- (((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))))) ORDER BY (((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) AND (((rt0.c0 IN ()))))  NULLS LAST, rt0.c2 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (COALESCE(((rt0.c2)|(rt0.c1)), ((rt0.c1) BETWEEN (0x22d2a181) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt0.c2)|(rt0.c1)), ((rt0.c1) BETWEEN (0x22d2a181) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (COALESCE(((rt0.c2)|(rt0.c1)), ((rt0.c1) BETWEEN (0x22d2a181) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt0.c2)|(rt0.c1)), ((rt0.c1) BETWEEN (0x22d2a181) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (COALESCE(((rt0.c2)|(rt0.c1)), ((rt0.c1) BETWEEN (0x22d2a181) AND (rt0.c2))));
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS REAL)) ORDER BY HEX(DISTINCT (rt0.c1 IN (rt0.c0, rt0.c1, rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT (rt0.c1 IN (rt0.c0, rt0.c1, rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS REAL)) ORDER BY HEX(DISTINCT (rt0.c1 IN (rt0.c0, rt0.c1, rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT (rt0.c1 IN (rt0.c0, rt0.c1, rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS REAL)) ORDER BY HEX(DISTINCT (rt0.c1 IN (rt0.c0, rt0.c1, rt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ())) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)+((((rt0.c2))>((rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)+((((rt0.c2))>((rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ())) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)+((((rt0.c2))>((rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)+((((rt0.c2))>((rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ())) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)+((((rt0.c2))>((rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)GLOB(((rt0.c2)>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)GLOB(((rt0.c2)>>(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)GLOB(((rt0.c2)>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)GLOB(((rt0.c2)>>(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)GLOB(((rt0.c2)>>(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)<<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<<(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)<<(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<<(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)<<(rt0.c2)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((0.034434693184094756)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END)))) ORDER BY TOTAL_CHANGES(), rt0.c1 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0.034434693184094756)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0 ORDER BY TOTAL_CHANGES(), rt0.c1 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((0.034434693184094756)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END)))) ORDER BY TOTAL_CHANGES(), rt0.c1 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0.034434693184094756)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0 ORDER BY TOTAL_CHANGES(), rt0.c1 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((0.034434693184094756)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END)))) ORDER BY TOTAL_CHANGES(), rt0.c1 COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c1 WHEN 0X5220d27 THEN rt0.c2 END) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0)))) AND (x'8cbe')));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c1 WHEN 0X5220d27 THEN rt0.c2 END) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0)))) AND (x'8cbe'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c1 WHEN 0X5220d27 THEN rt0.c2 END) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0)))) AND (x'8cbe')));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c1 WHEN 0X5220d27 THEN rt0.c2 END) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0)))) AND (x'8cbe'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c1 WHEN 0X5220d27 THEN rt0.c2 END) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0)))) AND (x'8cbe')));
SELECT COUNT(*) FROM rt0 WHERE ((- (0x7c1b0980))) ORDER BY ((((((rt0.c2)OR(x'')))AND(rt0.c0))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c1)>>(rt0.c0)))) ASC  NULLS FIRST, ((((((((((rt0.c2)OR('0.07766454806200895')))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) ISNULL) DESC  NULLS FIRST, HEX((rt0.c1 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (0x7c1b0980))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(x'')))AND(rt0.c0))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c1)>>(rt0.c0)))) ASC  NULLS FIRST, ((((((((((rt0.c2)OR('0.07766454806200895')))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) ISNULL) DESC  NULLS FIRST, HEX((rt0.c1 IN ()))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (0x7c1b0980))) ORDER BY ((((((rt0.c2)OR(x'')))AND(rt0.c0))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c1)>>(rt0.c0)))) ASC  NULLS FIRST, ((((((((((rt0.c2)OR('0.07766454806200895')))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) ISNULL) DESC  NULLS FIRST, HEX((rt0.c1 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (0x7c1b0980))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(x'')))AND(rt0.c0))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c1)>>(rt0.c0)))) ASC  NULLS FIRST, ((((((((((rt0.c2)OR('0.07766454806200895')))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) ISNULL) DESC  NULLS FIRST, HEX((rt0.c1 IN ()))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (0x7c1b0980))) ORDER BY ((((((rt0.c2)OR(x'')))AND(rt0.c0))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c1)>>(rt0.c0)))) ASC  NULLS FIRST, ((((((((((rt0.c2)OR('0.07766454806200895')))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) ISNULL) DESC  NULLS FIRST, HEX((rt0.c1 IN ()))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((GLOB(rt0.c2, -5.70031147E8))-(NULL))) ORDER BY ((TRIM(rt0.c2)) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)), (((NULL)) BETWEEN ((rt0.c0)) AND ((CAST(rt0.c2 AS INTEGER)))), (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END, rt0.c1 COLLATE BINARY, CAST(rt0.c1 AS BLOB)))<>((CAST(rt0.c2 AS NUMERIC), ((rt0.c0)%(rt0.c0)), (- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((GLOB(rt0.c2, -5.70031147E8))-(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((TRIM(rt0.c2)) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)), (((NULL)) BETWEEN ((rt0.c0)) AND ((CAST(rt0.c2 AS INTEGER)))), (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END, rt0.c1 COLLATE BINARY, CAST(rt0.c1 AS BLOB)))!=((CAST(rt0.c2 AS NUMERIC), ((rt0.c0)%(rt0.c0)), (- (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((GLOB(rt0.c2, -5.70031147E8))-(NULL))) ORDER BY ((TRIM(rt0.c2)) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)), (((NULL)) BETWEEN ((rt0.c0)) AND ((CAST(rt0.c2 AS INTEGER)))), (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END, rt0.c1 COLLATE BINARY, CAST(rt0.c1 AS BLOB)))<>((CAST(rt0.c2 AS NUMERIC), ((rt0.c0)%(rt0.c0)), (- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((GLOB(rt0.c2, -5.70031147E8))-(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((TRIM(rt0.c2)) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)), (((NULL)) BETWEEN ((rt0.c0)) AND ((CAST(rt0.c2 AS INTEGER)))), (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END, rt0.c1 COLLATE BINARY, CAST(rt0.c1 AS BLOB)))!=((CAST(rt0.c2 AS NUMERIC), ((rt0.c0)%(rt0.c0)), (- (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((GLOB(rt0.c2, -5.70031147E8))-(NULL))) ORDER BY ((TRIM(rt0.c2)) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)), (((NULL)) BETWEEN ((rt0.c0)) AND ((CAST(rt0.c2 AS INTEGER)))), (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END, rt0.c1 COLLATE BINARY, CAST(rt0.c1 AS BLOB)))<>((CAST(rt0.c2 AS NUMERIC), ((rt0.c0)%(rt0.c0)), (- (rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((('')) NOT BETWEEN ((rt0.c2)) AND ((CASE WHEN 0.11864157381866136 THEN rt0.c2 END)))) ORDER BY rt0.c1  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('')) NOT BETWEEN ((rt0.c2)) AND ((CASE WHEN 0.11864157381866136 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST, rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((('')) NOT BETWEEN ((rt0.c2)) AND ((CASE WHEN 0.11864157381866136 THEN rt0.c2 END)))) ORDER BY rt0.c1  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('')) NOT BETWEEN ((rt0.c2)) AND ((CASE WHEN 0.11864157381866136 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST, rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((('')) NOT BETWEEN ((rt0.c2)) AND ((CASE WHEN 0.11864157381866136 THEN rt0.c2 END)))) ORDER BY rt0.c1  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY (((rt0.c1, rt0.c0, rt0.c0, 0.24102743223906153, rt0.c1)) BETWEEN (((rt0.c2 IN (rt0.c1)), ((rt0.c2) IS FALSE), ((NULL) NOTNULL), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c1, 0.7767836514765023, rt0.c0))))) AND (((NOT (rt0.c1)), rt0.c2, NULL, (NOT (rt0.c1)), (+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c0, rt0.c0, 0.24102743223906153, rt0.c1)) BETWEEN (((rt0.c2 IN (rt0.c1)), ((rt0.c2) IS FALSE), ((NULL) NOTNULL), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c1, 0.7767836514765023, rt0.c0))))) AND (((NOT (rt0.c1)), rt0.c2, NULL, (NOT (rt0.c1)), (+ (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY (((rt0.c1, rt0.c0, rt0.c0, 0.24102743223906153, rt0.c1)) BETWEEN (((rt0.c2 IN (rt0.c1)), ((rt0.c2) IS FALSE), ((NULL) NOTNULL), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c1, 0.7767836514765023, rt0.c0))))) AND (((NOT (rt0.c1)), rt0.c2, NULL, (NOT (rt0.c1)), (+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c0, rt0.c0, 0.24102743223906153, rt0.c1)) BETWEEN (((rt0.c2 IN (rt0.c1)), ((rt0.c2) IS FALSE), ((NULL) NOTNULL), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c1, 0.7767836514765023, rt0.c0))))) AND (((NOT (rt0.c1)), rt0.c2, NULL, (NOT (rt0.c1)), (+ (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY (((rt0.c1, rt0.c0, rt0.c0, 0.24102743223906153, rt0.c1)) BETWEEN (((rt0.c2 IN (rt0.c1)), ((rt0.c2) IS FALSE), ((NULL) NOTNULL), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c1, 0.7767836514765023, rt0.c0))))) AND (((NOT (rt0.c1)), rt0.c2, NULL, (NOT (rt0.c1)), (+ (rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY CAST((((x'')) NOT BETWEEN ((rt0.c1)) AND ((NULL))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY CAST((((x'')) NOT BETWEEN ((rt0.c1)) AND ((NULL))) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY CAST((((x'')) NOT BETWEEN ((rt0.c1)) AND ((NULL))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY CAST((((x'')) NOT BETWEEN ((rt0.c1)) AND ((NULL))) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY CAST((((x'')) NOT BETWEEN ((rt0.c1)) AND ((NULL))) AS INTEGER);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)>=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)>=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)>=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)>=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)>=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) ORDER BY ((LIKELY(DISTINCT rt0.c2))<<('O!)N)*(')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELY(DISTINCT rt0.c2))<<('O!)N)*(')) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) ORDER BY ((LIKELY(DISTINCT rt0.c2))<<('O!)N)*(')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELY(DISTINCT rt0.c2))<<('O!)N)*(')) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) ORDER BY ((LIKELY(DISTINCT rt0.c2))<<('O!)N)*(')) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND(((rt0.c2) NOTNULL))));
SELECT COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c1 AS REAL)))==((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS REAL)))=((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c1 AS REAL)))==((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS REAL)))=((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c1 AS REAL)))==((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))));
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c1, rt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt0.c1, rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c1, rt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt0.c1, rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c1, rt0.c1) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) THEN rt0.c2 WHEN ((rt0.c0)|(rt0.c1)) THEN (rt0.c2 IN ()) WHEN (~ (rt0.c2)) THEN (((rt0.c2, rt0.c0, rt0.c0))<>((rt0.c2, '1383366179', rt0.c2))) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN (rt0.c1 IN (rt0.c0, rt0.c0)) THEN '-354081972' WHEN (((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE END ASC, (((rt0.c2) IS FALSE) IN ()), (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) THEN rt0.c2 WHEN ((rt0.c0)|(rt0.c1)) THEN (rt0.c2 IN ()) WHEN (~ (rt0.c2)) THEN (((rt0.c2, rt0.c0, rt0.c0))!=((rt0.c2, '1383366179', rt0.c2))) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN (rt0.c1 IN (rt0.c0, rt0.c0)) THEN '-354081972' WHEN (((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE END ASC, (((rt0.c2) IS FALSE) IN ()), (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) THEN rt0.c2 WHEN ((rt0.c0)|(rt0.c1)) THEN (rt0.c2 IN ()) WHEN (~ (rt0.c2)) THEN (((rt0.c2, rt0.c0, rt0.c0))<>((rt0.c2, '1383366179', rt0.c2))) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN (rt0.c1 IN (rt0.c0, rt0.c0)) THEN '-354081972' WHEN (((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE END ASC, (((rt0.c2) IS FALSE) IN ()), (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) THEN rt0.c2 WHEN ((rt0.c0)|(rt0.c1)) THEN (rt0.c2 IN ()) WHEN (~ (rt0.c2)) THEN (((rt0.c2, rt0.c0, rt0.c0))!=((rt0.c2, '1383366179', rt0.c2))) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN (rt0.c1 IN (rt0.c0, rt0.c0)) THEN '-354081972' WHEN (((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE END ASC, (((rt0.c2) IS FALSE) IN ()), (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) THEN rt0.c2 WHEN ((rt0.c0)|(rt0.c1)) THEN (rt0.c2 IN ()) WHEN (~ (rt0.c2)) THEN (((rt0.c2, rt0.c0, rt0.c0))<>((rt0.c2, '1383366179', rt0.c2))) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN (rt0.c1 IN (rt0.c0, rt0.c0)) THEN '-354081972' WHEN (((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c2))) THEN rt0.c1 COLLATE NOCASE END ASC, (((rt0.c2) IS FALSE) IN ()), (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2))<=((rt0.c1))) AS TEXT)) ORDER BY ((((rt0.c1)<<(rt0.c0)))>>(((rt0.c1)||(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))<=((rt0.c1))) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<<(rt0.c0)))>>(((rt0.c1)||(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2))<=((rt0.c1))) AS TEXT)) ORDER BY ((((rt0.c1)<<(rt0.c0)))>>(((rt0.c1)||(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))<=((rt0.c1))) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<<(rt0.c0)))>>(((rt0.c1)||(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c2))<=((rt0.c1))) AS TEXT)) ORDER BY ((((rt0.c1)<<(rt0.c0)))>>(((rt0.c1)||(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<<(rt0.c2 COLLATE NOCASE))) ORDER BY CAST((+ (rt0.c0)) AS REAL), ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)<>(UPPER(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<<(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c0)) AS REAL), ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)!=(UPPER(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<<(rt0.c2 COLLATE NOCASE))) ORDER BY CAST((+ (rt0.c0)) AS REAL), ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)<>(UPPER(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<<(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c0)) AS REAL), ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)!=(UPPER(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<<(rt0.c2 COLLATE NOCASE))) ORDER BY CAST((+ (rt0.c0)) AS REAL), ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)<>(UPPER(rt0.c2)));
SELECT * FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c0, rt0.c0)))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))))OR((((rt0.c0))=((rt0.c0)))))) ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS LAST, UNLIKELY(DISTINCT rt0.c2 COLLATE NOCASE) ASC  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c2)IS NOT(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN (rt0.c0, rt0.c0)))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))))OR((((rt0.c0))=((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS LAST, UNLIKELY(DISTINCT rt0.c2 COLLATE NOCASE) ASC  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c2)IS NOT(rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c0, rt0.c0)))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))))OR((((rt0.c0))=((rt0.c0)))))) ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS LAST, UNLIKELY(DISTINCT rt0.c2 COLLATE NOCASE) ASC  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c2)IS NOT(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN (rt0.c0, rt0.c0)))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))))OR((((rt0.c0))=((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS LAST, UNLIKELY(DISTINCT rt0.c2 COLLATE NOCASE) ASC  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c2)IS NOT(rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c0, rt0.c0)))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))))OR((((rt0.c0))=((rt0.c0)))))) ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS LAST, UNLIKELY(DISTINCT rt0.c2 COLLATE NOCASE) ASC  NULLS FIRST, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c2)IS NOT(rt0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(CAST(rt0.c1 AS REAL))))OR(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE BINARY)AND(CAST(rt0.c1 AS REAL))))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(CAST(rt0.c1 AS REAL))))OR(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE BINARY)AND(CAST(rt0.c1 AS REAL))))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(CAST(rt0.c1 AS REAL))))OR(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ('-1569192101') ORDER BY CAST(x'' AS NUMERIC)  NULLS FIRST, '-1186527678' ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1569192101') IS TRUE)  as count FROM rt0 ORDER BY CAST(x'' AS NUMERIC)  NULLS FIRST, '-1186527678' ASC);
SELECT ALL * FROM rt0 WHERE ('-1569192101') ORDER BY CAST(x'' AS NUMERIC)  NULLS FIRST, '-1186527678' ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1569192101') IS TRUE)  as count FROM rt0 ORDER BY CAST(x'' AS NUMERIC)  NULLS FIRST, '-1186527678' ASC);
SELECT ALL * FROM rt0 WHERE ('-1569192101') ORDER BY CAST(x'' AS NUMERIC)  NULLS FIRST, '-1186527678' ASC;
SELECT ALL * FROM rt0 WHERE ((((LIKELIHOOD(rt0.c1, 0.21814853853685923)))<>((((rt0.c2)&(rt0.c2)))))) ORDER BY ((((x'')>(rt0.c2))) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((LIKELIHOOD(rt0.c1, 0.21814853853685923)))!=((((rt0.c2)&(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'')>(rt0.c2))) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ASC);
SELECT ALL * FROM rt0 WHERE ((((LIKELIHOOD(rt0.c1, 0.21814853853685923)))<>((((rt0.c2)&(rt0.c2)))))) ORDER BY ((((x'')>(rt0.c2))) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((LIKELIHOOD(rt0.c1, 0.21814853853685923)))!=((((rt0.c2)&(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'')>(rt0.c2))) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ASC);
SELECT ALL * FROM rt0 WHERE ((((LIKELIHOOD(rt0.c1, 0.21814853853685923)))<>((((rt0.c2)&(rt0.c2)))))) ORDER BY ((((x'')>(rt0.c2))) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c2 THEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c2)) WHEN (+ (rt0.c1)) THEN -2138428282 COLLATE BINARY WHEN ((rt0.c2)==(rt0.c0)) THEN ((rt0.c0)IS(rt0.c1)) END) ORDER BY (((((rt0.c0))==((rt0.c2)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c2 THEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c2)) WHEN (+ (rt0.c1)) THEN -2138428282 COLLATE BINARY WHEN ((rt0.c2)=(rt0.c0)) THEN ((rt0.c0)IS(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))=((rt0.c2)))) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c2 THEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c2)) WHEN (+ (rt0.c1)) THEN -2138428282 COLLATE BINARY WHEN ((rt0.c2)==(rt0.c0)) THEN ((rt0.c0)IS(rt0.c1)) END) ORDER BY (((((rt0.c0))==((rt0.c2)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c2 THEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c2)) WHEN (+ (rt0.c1)) THEN -2138428282 COLLATE BINARY WHEN ((rt0.c2)=(rt0.c0)) THEN ((rt0.c0)IS(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))=((rt0.c2)))) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c2 THEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c2)) WHEN (+ (rt0.c1)) THEN -2138428282 COLLATE BINARY WHEN ((rt0.c2)==(rt0.c0)) THEN ((rt0.c0)IS(rt0.c1)) END) ORDER BY (((((rt0.c0))==((rt0.c2)))) IS FALSE) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(0X38e39961 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0x38e39961 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(0X38e39961 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0x38e39961 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(0X38e39961 AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN (rt0.c1 IN (rt0.c2)) WHEN (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN (rt0.c1 IN (rt0.c2)) WHEN (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN (rt0.c1 IN (rt0.c2)) WHEN (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN (rt0.c1 IN (rt0.c2)) WHEN (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) ISNULL) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN (rt0.c1 IN (rt0.c2)) WHEN (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) THEN CAST(rt0.c0 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) ISNULL) END);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))==((rt0.c0))))IS NOT((rt0.c2 IN ())))) ORDER BY (((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND ((HEX(DISTINCT rt0.c2))))  NULLS FIRST, ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c0 IN (rt0.c1, rt0.c1))) AND (((rt0.c2)IS(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))==((rt0.c0))))IS NOT((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND ((HEX(DISTINCT rt0.c2))))  NULLS FIRST, ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c0 IN (rt0.c1, rt0.c1))) AND (((rt0.c2)IS(rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))==((rt0.c0))))IS NOT((rt0.c2 IN ())))) ORDER BY (((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND ((HEX(DISTINCT rt0.c2))))  NULLS FIRST, ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c0 IN (rt0.c1, rt0.c1))) AND (((rt0.c2)IS(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))==((rt0.c0))))IS NOT((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND ((HEX(DISTINCT rt0.c2))))  NULLS FIRST, ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c0 IN (rt0.c1, rt0.c1))) AND (((rt0.c2)IS(rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))==((rt0.c0))))IS NOT((rt0.c2 IN ())))) ORDER BY (((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) AND ((HEX(DISTINCT rt0.c2))))  NULLS FIRST, ((((rt0.c2) NOTNULL)) NOT BETWEEN ((rt0.c0 IN (rt0.c1, rt0.c1))) AND (((rt0.c2)IS(rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c2)))AND(((1934325853)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))AND(((1934325853)&(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c2)))AND(((1934325853)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))AND(((1934325853)&(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c2)))AND(((1934325853)&(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN '' END) AND (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN '' END) AND (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN '' END) AND (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN '' END) AND (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN '' END) AND (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((0Xffffffff86c28403) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE BINARY) ORDER BY (((rt0.c2)) NOT BETWEEN (((((rt0.c1))=((rt0.c0))))) AND ((x'8ec2' COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT ((((0xffffffff86c28403) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN (((((rt0.c1))=((rt0.c0))))) AND ((x'8ec2' COLLATE NOCASE))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0Xffffffff86c28403) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE BINARY) ORDER BY (((rt0.c2)) NOT BETWEEN (((((rt0.c1))=((rt0.c0))))) AND ((x'8ec2' COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT ((((0xffffffff86c28403) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN (((((rt0.c1))=((rt0.c0))))) AND ((x'8ec2' COLLATE NOCASE))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0Xffffffff86c28403) NOT BETWEEN (NULL) AND (rt0.c2)) COLLATE BINARY) ORDER BY (((rt0.c2)) NOT BETWEEN (((((rt0.c1))=((rt0.c0))))) AND ((x'8ec2' COLLATE NOCASE))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY COLLATE BINARY) ORDER BY rt0.c1, (~ (rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, (~ (rt0.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY COLLATE BINARY) ORDER BY rt0.c1, (~ (rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, (~ (rt0.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY COLLATE BINARY) ORDER BY rt0.c1, (~ (rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((- (0.7602220492130071))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (0.7602220492130071))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((- (0.7602220492130071))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (0.7602220492130071))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((- (0.7602220492130071))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'')) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'')) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'')) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'c8339465' THEN rt0.c2 WHEN 'SK' THEN rt0.c2 ELSE rt0.c2 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'c8339465' THEN rt0.c2 WHEN 'SK' THEN rt0.c2 ELSE rt0.c2 END) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'c8339465' THEN rt0.c2 WHEN 'SK' THEN rt0.c2 ELSE rt0.c2 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'c8339465' THEN rt0.c2 WHEN 'SK' THEN rt0.c2 ELSE rt0.c2 END) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'c8339465' THEN rt0.c2 WHEN 'SK' THEN rt0.c2 ELSE rt0.c2 END) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND ((HEX(DISTINCT rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND ((HEX(DISTINCT rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND ((HEX(DISTINCT rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND ((HEX(DISTINCT rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND ((HEX(DISTINCT rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>>(rt0.c0)))IS((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>>(rt0.c0)))IS((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>>(rt0.c0)))IS((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>>(rt0.c0)))IS((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)>>(rt0.c0)))IS((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c0, 0.03455316595326008, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c0, ' Rxg-&폶y^')) AND ((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c1))))OR(((rt0.c0) ISNULL))))OR(rt0.c0))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2, rt0.c0, rt0.c0, 0.03455316595326008, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c0, ' Rxg-&폶y^')) AND ((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c1))))OR(((rt0.c0) ISNULL))))OR(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c0, 0.03455316595326008, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c0, ' Rxg-&폶y^')) AND ((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c1))))OR(((rt0.c0) ISNULL))))OR(rt0.c0))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2, rt0.c0, rt0.c0, 0.03455316595326008, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c0, ' Rxg-&폶y^')) AND ((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c1))))OR(((rt0.c0) ISNULL))))OR(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c0, 0.03455316595326008, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c0, ' Rxg-&폶y^')) AND ((rt0.c2, rt0.c0, rt0.c0, rt0.c2, rt0.c1))))OR(((rt0.c0) ISNULL))))OR(rt0.c0))) ORDER BY rt0.c1;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY LIKELIHOOD(((((rt0.c2)AND(rt0.c1)))OR(x'6a48')), 0.2980199008917026)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(((((rt0.c2)AND(rt0.c1)))OR(x'6a48')), 0.2980199008917026)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY LIKELIHOOD(((((rt0.c2)AND(rt0.c1)))OR(x'6a48')), 0.2980199008917026)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(((((rt0.c2)AND(rt0.c1)))OR(x'6a48')), 0.2980199008917026)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY LIKELIHOOD(((((rt0.c2)AND(rt0.c1)))OR(x'6a48')), 0.2980199008917026)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c1)OR(0.46042651026933357)))OR(rt0.c2)))OR(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))))AND(1306154532))) ORDER BY CASE (rt0.c2 IN (rt0.c0, rt0.c2))  WHEN (rt0.c1 IN ()) THEN (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) ELSE (((rt0.c1, rt0.c2, rt0.c1))<>((rt0.c2, rt0.c1, 0Xffffffff935ceea8))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(0.46042651026933357)))OR(rt0.c2)))OR(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))))AND(1306154532))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c2 IN (rt0.c0, rt0.c2))  WHEN (rt0.c1 IN ()) THEN (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) ELSE (((rt0.c1, rt0.c2, rt0.c1))<>((rt0.c2, rt0.c1, 0xffffffff935ceea8))) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c1)OR(0.46042651026933357)))OR(rt0.c2)))OR(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))))AND(1306154532))) ORDER BY CASE (rt0.c2 IN (rt0.c0, rt0.c2))  WHEN (rt0.c1 IN ()) THEN (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) ELSE (((rt0.c1, rt0.c2, rt0.c1))<>((rt0.c2, rt0.c1, 0Xffffffff935ceea8))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(0.46042651026933357)))OR(rt0.c2)))OR(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))))AND(1306154532))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c2 IN (rt0.c0, rt0.c2))  WHEN (rt0.c1 IN ()) THEN (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) ELSE (((rt0.c1, rt0.c2, rt0.c1))<>((rt0.c2, rt0.c1, 0xffffffff935ceea8))) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c1)OR(0.46042651026933357)))OR(rt0.c2)))OR(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))))AND(1306154532))) ORDER BY CASE (rt0.c2 IN (rt0.c0, rt0.c2))  WHEN (rt0.c1 IN ()) THEN (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) ELSE (((rt0.c1, rt0.c2, rt0.c1))<>((rt0.c2, rt0.c1, 0Xffffffff935ceea8))) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1)<<(rt0.c1))))) ORDER BY CAST(((((rt0.c1)AND(0.37998624555866634)))AND(rt0.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)<<(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c1)AND(0.37998624555866634)))AND(rt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1)<<(rt0.c1))))) ORDER BY CAST(((((rt0.c1)AND(0.37998624555866634)))AND(rt0.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)<<(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c1)AND(0.37998624555866634)))AND(rt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1)<<(rt0.c1))))) ORDER BY CAST(((((rt0.c1)AND(0.37998624555866634)))AND(rt0.c1)) AS TEXT);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))>>(CAST(rt0.c2 AS REAL)))) ORDER BY ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))>>(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))>>(CAST(rt0.c2 AS REAL)))) ORDER BY ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))>>(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))>>(CAST(rt0.c2 AS REAL)))) ORDER BY ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY x'dbe7' ASC  NULLS FIRST, CAST(((rt0.c2)OR(rt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY x'dbe7' ASC  NULLS FIRST, CAST(((rt0.c2)OR(rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY x'dbe7' ASC  NULLS FIRST, CAST(((rt0.c2)OR(rt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY x'dbe7' ASC  NULLS FIRST, CAST(((rt0.c2)OR(rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY x'dbe7' ASC  NULLS FIRST, CAST(((rt0.c2)OR(rt0.c0)) AS TEXT);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c0)))<<(0.5322969897522709)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))<<(0.5322969897522709))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c0)))<<(0.5322969897522709)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))<<(0.5322969897522709))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c0)))<<(0.5322969897522709)));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT));
SELECT * FROM rt0 WHERE (((rt0.c1)>>(CASE 0.99898034285322  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>>(CASE 0.99898034285322  WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)>>(CASE 0.99898034285322  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>>(CASE 0.99898034285322  WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)>>(CASE 0.99898034285322  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((rt0.c1)>(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((rt0.c1)>(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((rt0.c1)>(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((0Xffffffffaf802bb6, CAST(rt0.c1 AS NUMERIC), CAST(rt0.c2 AS BLOB))) AND ((((x'35c3') BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0, 0.20281907115549214))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((0Xffffffffaf802bb6, CAST(rt0.c1 AS NUMERIC), CAST(rt0.c2 AS BLOB))) AND ((((x'35c3') BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0, 0.20281907115549214)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((0Xffffffffaf802bb6, CAST(rt0.c1 AS NUMERIC), CAST(rt0.c2 AS BLOB))) AND ((((x'35c3') BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0, 0.20281907115549214))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((0Xffffffffaf802bb6, CAST(rt0.c1 AS NUMERIC), CAST(rt0.c2 AS BLOB))) AND ((((x'35c3') BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0, 0.20281907115549214)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((0Xffffffffaf802bb6, CAST(rt0.c1 AS NUMERIC), CAST(rt0.c2 AS BLOB))) AND ((((x'35c3') BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0, 0.20281907115549214))));
SELECT COUNT(*) FROM rt0 WHERE (INSTR(rt0.c1, ((NULL)&(NULL))));
SELECT SUM(count) FROM (SELECT ((INSTR(rt0.c1, ((NULL)&(NULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (INSTR(rt0.c1, ((NULL)&(NULL))));
SELECT SUM(count) FROM (SELECT ((INSTR(rt0.c1, ((NULL)&(NULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (INSTR(rt0.c1, ((NULL)&(NULL))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)>=(rt0.c1))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt0.c1))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)>=(rt0.c1))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt0.c1))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)>=(rt0.c1))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND (rt0.c0)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((x'')) AND (((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, x'36cf', rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0))))))) ORDER BY (((('Z]_/]9k7.')AND(((('ZC', rt0.c0, '橚m', rt0.c1, rt0.c1))==((rt0.c2, x'', rt0.c2, rt0.c0, rt0.c0))))))AND('g[H*੎l')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((x'')) AND (((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, x'36cf', rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0))))))) IS TRUE)  as count FROM rt0 ORDER BY (((('Z]_/]9k7.')AND(((('ZC', rt0.c0, '橚m', rt0.c1, rt0.c1))==((rt0.c2, x'', rt0.c2, rt0.c0, rt0.c0))))))AND('g[H*੎l')) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((x'')) AND (((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, x'36cf', rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0))))))) ORDER BY (((('Z]_/]9k7.')AND(((('ZC', rt0.c0, '橚m', rt0.c1, rt0.c1))==((rt0.c2, x'', rt0.c2, rt0.c0, rt0.c0))))))AND('g[H*੎l')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((x'')) AND (((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, x'36cf', rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0))))))) IS TRUE)  as count FROM rt0 ORDER BY (((('Z]_/]9k7.')AND(((('ZC', rt0.c0, '橚m', rt0.c1, rt0.c1))==((rt0.c2, x'', rt0.c2, rt0.c0, rt0.c0))))))AND('g[H*੎l')) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((x'')) AND (((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, x'36cf', rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0))))))) ORDER BY (((('Z]_/]9k7.')AND(((('ZC', rt0.c0, '橚m', rt0.c1, rt0.c1))==((rt0.c2, x'', rt0.c2, rt0.c0, rt0.c0))))))AND('g[H*੎l')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)||((rt0.c1 IN ())))) ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c2, rt0.c1, rt0.c2))<((194958302, rt0.c2, rt0.c1))) WHEN -675926671 THEN -477071998 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)||((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c2, rt0.c1, rt0.c2))<((194958302, rt0.c2, rt0.c1))) WHEN -675926671 THEN -477071998 END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)||((rt0.c1 IN ())))) ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c2, rt0.c1, rt0.c2))<((194958302, rt0.c2, rt0.c1))) WHEN -675926671 THEN -477071998 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)||((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c2, rt0.c1, rt0.c2))<((194958302, rt0.c2, rt0.c1))) WHEN -675926671 THEN -477071998 END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)||((rt0.c1 IN ())))) ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c2, rt0.c1, rt0.c2))<((194958302, rt0.c2, rt0.c1))) WHEN -675926671 THEN -477071998 END DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)LIKE(rt0.c2))))>(((rt0.c0 IN ()))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND ('591217713'))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)LIKE(rt0.c2))))>(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND ('591217713'))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)LIKE(rt0.c2))))>(((rt0.c0 IN ()))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND ('591217713'))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)LIKE(rt0.c2))))>(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND ('591217713'))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)LIKE(rt0.c2))))>(((rt0.c0 IN ()))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND ('591217713'))) NOT NULL) DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE));
SELECT ALL * FROM rt0 WHERE (STRFTIME(((rt0.c1)=(rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, rt0.c1 COLLATE BINARY)) ORDER BY (- (-1823803304)), ((rt0.c2 IN ()) IN ((- (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((rt0.c1)==(rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY (- (-1823803304)), ((rt0.c2 IN ()) IN ((- (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (STRFTIME(((rt0.c1)=(rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, rt0.c1 COLLATE BINARY)) ORDER BY (- (-1823803304)), ((rt0.c2 IN ()) IN ((- (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((rt0.c1)==(rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY (- (-1823803304)), ((rt0.c2 IN ()) IN ((- (rt0.c1)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY UNLIKELY(rt0.c1 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(rt0.c1 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY UNLIKELY(rt0.c1 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(rt0.c1 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY UNLIKELY(rt0.c1 COLLATE NOCASE)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c2)%(rt0.c1))) NOT BETWEEN (((rt0.c0)/(rt0.c2))) AND ((NOT (rt0.c2))))) ORDER BY CAST(((rt0.c2)GLOB(rt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)%(rt0.c1))) NOT BETWEEN (((rt0.c0)/(rt0.c2))) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)GLOB(rt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c2)%(rt0.c1))) NOT BETWEEN (((rt0.c0)/(rt0.c2))) AND ((NOT (rt0.c2))))) ORDER BY CAST(((rt0.c2)GLOB(rt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)%(rt0.c1))) NOT BETWEEN (((rt0.c0)/(rt0.c2))) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)GLOB(rt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c2)%(rt0.c1))) NOT BETWEEN (((rt0.c0)/(rt0.c2))) AND ((NOT (rt0.c2))))) ORDER BY CAST(((rt0.c2)GLOB(rt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((rt0.c2)AND(0.5819957637269579)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)))AND(rt0.c0)))AND(((rt0.c1) NOTNULL)))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)AND(0.5819957637269579)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)))AND(rt0.c0)))AND(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((rt0.c2)AND(0.5819957637269579)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)))AND(rt0.c0)))AND(((rt0.c1) NOTNULL)))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)AND(0.5819957637269579)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)))AND(rt0.c0)))AND(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((rt0.c2)AND(0.5819957637269579)))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)))AND(rt0.c0)))AND(((rt0.c1) NOTNULL)))) ORDER BY rt0.c1  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c1) NOTNULL))>>(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))>>(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) NOTNULL))>>(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))>>(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) NOTNULL))>>(rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE (0.4704327133732632) ORDER BY CAST(LIKELIHOOD(NULL, 0.2767459653953621) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.4704327133732632) IS TRUE)  as count FROM rt0 ORDER BY CAST(LIKELIHOOD(NULL, 0.2767459653953621) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.4704327133732632) ORDER BY CAST(LIKELIHOOD(NULL, 0.2767459653953621) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.4704327133732632) IS TRUE)  as count FROM rt0 ORDER BY CAST(LIKELIHOOD(NULL, 0.2767459653953621) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.4704327133732632) ORDER BY CAST(LIKELIHOOD(NULL, 0.2767459653953621) AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0)))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0)))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0)))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) ORDER BY UPPER(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))) DESC, (NULL IN ())  NULLS FIRST, -1910803300  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY UPPER(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))) DESC, (NULL IN ())  NULLS FIRST, -1910803300  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) ORDER BY UPPER(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))) DESC, (NULL IN ())  NULLS FIRST, -1910803300  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY UPPER(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))) DESC, (NULL IN ())  NULLS FIRST, -1910803300  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c0)))<>(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((((((rt0.c1) IS TRUE))AND(NULL COLLATE BINARY)))AND(CAST(rt0.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c0)))<>(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) IS TRUE))AND(NULL COLLATE BINARY)))AND(CAST(rt0.c2 AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c0)))<>(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((((((rt0.c1) IS TRUE))AND(NULL COLLATE BINARY)))AND(CAST(rt0.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c0)))<>(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) IS TRUE))AND(NULL COLLATE BINARY)))AND(CAST(rt0.c2 AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c0)))<>(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((((((rt0.c1) IS TRUE))AND(NULL COLLATE BINARY)))AND(CAST(rt0.c2 AS BLOB)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE));
SELECT * FROM rt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE) ORDER BY (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END, rt0.c2 COLLATE RTRIM, ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))) AND ((CAST(rt0.c0 AS TEXT), CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END, rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END, rt0.c2 COLLATE RTRIM, ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))) AND ((CAST(rt0.c0 AS TEXT), CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END, rt0.c0)))  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE) ORDER BY (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END, rt0.c2 COLLATE RTRIM, ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))) AND ((CAST(rt0.c0 AS TEXT), CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END, rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END, rt0.c2 COLLATE RTRIM, ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))) AND ((CAST(rt0.c0 AS TEXT), CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END, rt0.c0)))  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE) ORDER BY (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END, rt0.c2 COLLATE RTRIM, ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))) AND ((CAST(rt0.c0 AS TEXT), CASE WHEN rt0.c2 THEN rt0.c2 ELSE x'' END, rt0.c0)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c0 WHEN 0.16839977386430338 THEN rt0.c1 COLLATE BINARY WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2)=(-1e500)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END END;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c0 WHEN 0.16839977386430338 THEN rt0.c1 COLLATE BINARY WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2)==(-1e500)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END END);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c0 WHEN 0.16839977386430338 THEN rt0.c1 COLLATE BINARY WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2)=(-1e500)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END END;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c0 WHEN 0.16839977386430338 THEN rt0.c1 COLLATE BINARY WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2)==(-1e500)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END END);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c0 WHEN 0.16839977386430338 THEN rt0.c1 COLLATE BINARY WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2)=(-1e500)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END END;
SELECT * FROM rt0 WHERE (((((((rt0.c1)GLOB(rt0.c1)))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)GLOB(rt0.c1)))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)GLOB(rt0.c1)))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)GLOB(rt0.c1)))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)GLOB(rt0.c1)))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((NOT (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))<(NULLIF(DISTINCT rt0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER))<(NULLIF(DISTINCT rt0.c1, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))<(NULLIF(DISTINCT rt0.c1, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER))<(NULLIF(DISTINCT rt0.c1, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))<(NULLIF(DISTINCT rt0.c1, rt0.c0))));
SELECT * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('');
SELECT ALL * FROM rt0 WHERE ((- (rt0.c1)) COLLATE RTRIM) ORDER BY rt0.c1 ASC, CHAR(1.306154532E9) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, CHAR(1.306154532E9) ASC);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c1)) COLLATE RTRIM) ORDER BY rt0.c1 ASC, CHAR(1.306154532E9) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, CHAR(1.306154532E9) ASC);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c1)) COLLATE RTRIM) ORDER BY rt0.c1 ASC, CHAR(1.306154532E9) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((-337941936)<<(rt0.c1))) IS TRUE)) ORDER BY HEX((rt0.c1 IN ())) ASC  NULLS LAST, (((rt0.c1 IN (rt0.c0, rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC, CASE WHEN 0.04301766603069934 THEN rt0.c2 WHEN (NOT (rt0.c1)) THEN CAST(rt0.c1 AS REAL) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c2) NOT NULL) ELSE (((rt0.c1, rt0.c0, rt0.c0))<((rt0.c0, '2143943053', rt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((-337941936)<<(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY HEX((rt0.c1 IN ())) ASC  NULLS LAST, (((rt0.c1 IN (rt0.c0, rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC, CASE WHEN 0.04301766603069934 THEN rt0.c2 WHEN (NOT (rt0.c1)) THEN CAST(rt0.c1 AS REAL) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c2) NOT NULL) ELSE (((rt0.c1, rt0.c0, rt0.c0))<((rt0.c0, '2143943053', rt0.c0))) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((-337941936)<<(rt0.c1))) IS TRUE)) ORDER BY HEX((rt0.c1 IN ())) ASC  NULLS LAST, (((rt0.c1 IN (rt0.c0, rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC, CASE WHEN 0.04301766603069934 THEN rt0.c2 WHEN (NOT (rt0.c1)) THEN CAST(rt0.c1 AS REAL) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c2) NOT NULL) ELSE (((rt0.c1, rt0.c0, rt0.c0))<((rt0.c0, '2143943053', rt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((-337941936)<<(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY HEX((rt0.c1 IN ())) ASC  NULLS LAST, (((rt0.c1 IN (rt0.c0, rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC, CASE WHEN 0.04301766603069934 THEN rt0.c2 WHEN (NOT (rt0.c1)) THEN CAST(rt0.c1 AS REAL) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c2) NOT NULL) ELSE (((rt0.c1, rt0.c0, rt0.c0))<((rt0.c0, '2143943053', rt0.c0))) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((-337941936)<<(rt0.c1))) IS TRUE)) ORDER BY HEX((rt0.c1 IN ())) ASC  NULLS LAST, (((rt0.c1 IN (rt0.c0, rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC, CASE WHEN 0.04301766603069934 THEN rt0.c2 WHEN (NOT (rt0.c1)) THEN CAST(rt0.c1 AS REAL) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c2) NOT NULL) ELSE (((rt0.c1, rt0.c0, rt0.c0))<((rt0.c0, '2143943053', rt0.c0))) END ASC;
SELECT * FROM rt0 WHERE (LTRIM(((rt0.c0)||(rt0.c2)), (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c0)||(rt0.c2)), (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LTRIM(((rt0.c0)||(rt0.c2)), (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c0)||(rt0.c2)), (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LTRIM(((rt0.c0)||(rt0.c2)), (rt0.c2 IN ())));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (((load_extension(rt0.c2, rt0.c1))OR(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE rt0.c0 END))) ORDER BY (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), (~ (rt0.c2)), '1')) AND ((rt0.c2 COLLATE BINARY, (NOT (rt0.c2)), ((rt0.c1) NOT BETWEEN ('[r') AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c2, rt0.c1))OR(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), (~ (rt0.c2)), '1')) AND ((rt0.c2 COLLATE BINARY, (NOT (rt0.c2)), ((rt0.c1) NOT BETWEEN ('[r') AND (rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (((load_extension(rt0.c2, rt0.c1))OR(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE rt0.c0 END))) ORDER BY (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), (~ (rt0.c2)), '1')) AND ((rt0.c2 COLLATE BINARY, (NOT (rt0.c2)), ((rt0.c1) NOT BETWEEN ('[r') AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c2, rt0.c1))OR(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), (~ (rt0.c2)), '1')) AND ((rt0.c2 COLLATE BINARY, (NOT (rt0.c2)), ((rt0.c1) NOT BETWEEN ('[r') AND (rt0.c1))))));
SELECT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY (~ (((rt0.c2)<<(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2)<<(rt0.c0)))));
SELECT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY (~ (((rt0.c2)<<(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2)<<(rt0.c0)))));
SELECT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY (~ (((rt0.c2)<<(rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((CASE -431176104  WHEN '-1186527678' THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN (rt0.c0) AND (json(rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((CASE -431176104  WHEN '-1186527678' THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN (rt0.c0) AND (json(rt0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((CASE -431176104  WHEN '-1186527678' THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN (rt0.c0) AND (json(rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((CASE -431176104  WHEN '-1186527678' THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN (rt0.c0) AND (json(rt0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((CASE -431176104  WHEN '-1186527678' THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN (rt0.c0) AND (json(rt0.c2))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)/(rt0.c2))) ISNULL)) ORDER BY ((rt0.c0 IN ()) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)/(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 IN ()) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)/(rt0.c2))) ISNULL)) ORDER BY ((rt0.c0 IN ()) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)/(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 IN ()) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)/(rt0.c2))) ISNULL)) ORDER BY ((rt0.c0 IN ()) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)>=(rt0.c2)))/((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>=(rt0.c2)))/((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)>=(rt0.c2)))/((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>=(rt0.c2)))/((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)>=(rt0.c2)))/((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1))))));
SELECT * FROM rt0 WHERE (ABS(TRIM(rt0.c0, rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(TRIM(rt0.c0, rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (ABS(TRIM(rt0.c0, rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(TRIM(rt0.c0, rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (ABS(TRIM(rt0.c0, rt0.c1)));
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT * FROM rt0 WHERE (((NULL)LIKE((((rt0.c1))=((rt0.c1)))))) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE  NULLS LAST, ABS(CAST(rt0.c0 AS REAL)) ASC, CAST(rt0.c0 AS TEXT) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((NULL)LIKE((((rt0.c1))==((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ()) COLLATE NOCASE  NULLS LAST, ABS(CAST(rt0.c0 AS REAL)) ASC, CAST(rt0.c0 AS TEXT) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (((NULL)LIKE((((rt0.c1))=((rt0.c1)))))) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE  NULLS LAST, ABS(CAST(rt0.c0 AS REAL)) ASC, CAST(rt0.c0 AS TEXT) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((NULL)LIKE((((rt0.c1))==((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ()) COLLATE NOCASE  NULLS LAST, ABS(CAST(rt0.c0 AS REAL)) ASC, CAST(rt0.c0 AS TEXT) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (((NULL)LIKE((((rt0.c1))=((rt0.c1)))))) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE  NULLS LAST, ABS(CAST(rt0.c0 AS REAL)) ASC, CAST(rt0.c0 AS TEXT) COLLATE RTRIM DESC;
SELECT * FROM rt0 WHERE (((~ (rt0.c0)) IN ())) ORDER BY CASE WHEN QUOTE(0xb0319e7) THEN (rt0.c2 IN (rt0.c2, rt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN QUOTE(0xb0319e7) THEN (rt0.c2 IN (rt0.c2, rt0.c1)) END ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((~ (rt0.c0)) IN ())) ORDER BY CASE WHEN QUOTE(0xb0319e7) THEN (rt0.c2 IN (rt0.c2, rt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN QUOTE(0xb0319e7) THEN (rt0.c2 IN (rt0.c2, rt0.c1)) END ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((~ (rt0.c0)) IN ())) ORDER BY CASE WHEN QUOTE(0xb0319e7) THEN (rt0.c2 IN (rt0.c2, rt0.c1)) END ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)*(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)*(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)*(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)*(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)*(rt0.c0)));
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c0)) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE ((UPPER(rt0.c0) IN (((rt0.c1)IS(rt0.c1))))) ORDER BY CAST(((rt0.c1)>(rt0.c0)) AS BLOB) DESC  NULLS FIRST, ((((rt0.c1)OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')))))AND(x'9134')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((UPPER(rt0.c0) IN (((rt0.c1)IS(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)>(rt0.c0)) AS BLOB) DESC  NULLS FIRST, ((((rt0.c1)OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')))))AND(x'9134')) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((UPPER(rt0.c0) IN (((rt0.c1)IS(rt0.c1))))) ORDER BY CAST(((rt0.c1)>(rt0.c0)) AS BLOB) DESC  NULLS FIRST, ((((rt0.c1)OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')))))AND(x'9134')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((UPPER(rt0.c0) IN (((rt0.c1)IS(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)>(rt0.c0)) AS BLOB) DESC  NULLS FIRST, ((((rt0.c1)OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')))))AND(x'9134')) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((UPPER(rt0.c0) IN (((rt0.c1)IS(rt0.c1))))) ORDER BY CAST(((rt0.c1)>(rt0.c0)) AS BLOB) DESC  NULLS FIRST, ((((rt0.c1)OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')))))AND(x'9134')) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC)))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN NULL END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN NULL END AS INTEGER) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC)))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN NULL END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN NULL END AS INTEGER) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC)))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN NULL END AS INTEGER) ASC;
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY CAST((- (rt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST((- (rt0.c1)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY CAST((- (rt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST((- (rt0.c1)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY CAST((- (rt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2, '0.17907083522811962')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c2, '0.17907083522811962')) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2, '0.17907083522811962')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c2, '0.17907083522811962')) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2, '0.17907083522811962')) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY (rt0.c2 IN ())  NULLS FIRST, ((((((rt0.c1)OR(rt0.c2)))OR('-1699679967'))) BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))) AND (rt0.c2 COLLATE RTRIM)) ASC, ((((rt0.c2) NOT NULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ())  NULLS FIRST, ((((((rt0.c1)OR(rt0.c2)))OR('-1699679967'))) BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))) AND (rt0.c2 COLLATE RTRIM)) ASC, ((((rt0.c2) NOT NULL)) IS FALSE));
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY (rt0.c2 IN ())  NULLS FIRST, ((((((rt0.c1)OR(rt0.c2)))OR('-1699679967'))) BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))) AND (rt0.c2 COLLATE RTRIM)) ASC, ((((rt0.c2) NOT NULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ())  NULLS FIRST, ((((((rt0.c1)OR(rt0.c2)))OR('-1699679967'))) BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))) AND (rt0.c2 COLLATE RTRIM)) ASC, ((((rt0.c2) NOT NULL)) IS FALSE));
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY (rt0.c2 IN ())  NULLS FIRST, ((((((rt0.c1)OR(rt0.c2)))OR('-1699679967'))) BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))) AND (rt0.c2 COLLATE RTRIM)) ASC, ((((rt0.c2) NOT NULL)) IS FALSE);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'6da3');
SELECT SUM(count) FROM (SELECT ALL ((x'6da3') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'6da3');
SELECT SUM(count) FROM (SELECT ALL ((x'6da3') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'6da3');
SELECT * FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT * FROM rt0 WHERE ((NOT (UNLIKELY(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (UNLIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (UNLIKELY(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (UNLIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (UNLIKELY(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c0, 1.743485635E9, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((-15594009, rt0.c0, rt0.c2))) AS TEXT)) ORDER BY '1318913154';
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, 1.743485635E9, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((-15594009, rt0.c0, rt0.c2))) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY '1318913154');
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c0, 1.743485635E9, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((-15594009, rt0.c0, rt0.c2))) AS TEXT)) ORDER BY '1318913154';
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, 1.743485635E9, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((-15594009, rt0.c0, rt0.c2))) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY '1318913154');
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c0, 1.743485635E9, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((-15594009, rt0.c0, rt0.c2))) AS TEXT)) ORDER BY '1318913154';
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND('-1330747399')))||(0.051084670053216374)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c2)))AND('-1330747399')))||(0.051084670053216374))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND('-1330747399')))||(0.051084670053216374)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c2)))AND('-1330747399')))||(0.051084670053216374))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND('-1330747399')))||(0.051084670053216374)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE 0.6989615848128701 END COLLATE NOCASE) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL), ((CAST(rt0.c2 AS REAL))&(((rt0.c1) BETWEEN (x'') AND (NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE 0.6989615848128701 END COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL), ((CAST(rt0.c2 AS REAL))&(((rt0.c1) BETWEEN (x'') AND (NULL)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE 0.6989615848128701 END COLLATE NOCASE) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL), ((CAST(rt0.c2 AS REAL))&(((rt0.c1) BETWEEN (x'') AND (NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE 0.6989615848128701 END COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL), ((CAST(rt0.c2 AS REAL))&(((rt0.c1) BETWEEN (x'') AND (NULL)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE 0.6989615848128701 END COLLATE NOCASE) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL), ((CAST(rt0.c2 AS REAL))&(((rt0.c1) BETWEEN (x'') AND (NULL)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((('vhO)K!YB')OR(((('u/Y''b'))<>((rt0.c1)))))) ORDER BY rt0.c1  NULLS LAST, ((((~ (rt0.c1))))<>((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('vhO)K!YB')OR(((('u/Y''b'))<>((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST, ((((~ (rt0.c1))))!=((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))) DESC);
SELECT * FROM rt0 WHERE ((('vhO)K!YB')OR(((('u/Y''b'))<>((rt0.c1)))))) ORDER BY rt0.c1  NULLS LAST, ((((~ (rt0.c1))))<>((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('vhO)K!YB')OR(((('u/Y''b'))<>((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST, ((((~ (rt0.c1))))!=((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))) DESC);
SELECT * FROM rt0 WHERE ((('vhO)K!YB')OR(((('u/Y''b'))<>((rt0.c1)))))) ORDER BY rt0.c1  NULLS LAST, ((((~ (rt0.c1))))<>((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))) DESC;
SELECT * FROM rt0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (IFNULL(((rt0.c2) NOTNULL), ((rt0.c2)IS NOT(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c2) NOTNULL), ((rt0.c2)IS NOT(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL(((rt0.c2) NOTNULL), ((rt0.c2)IS NOT(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c2) NOTNULL), ((rt0.c2)IS NOT(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL(((rt0.c2) NOTNULL), ((rt0.c2)IS NOT(rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULL AS BLOB)) ORDER BY (((rt0.c0))==((rt0.c1))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0))=((rt0.c1))) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULL AS BLOB)) ORDER BY (((rt0.c0))==((rt0.c1))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0))=((rt0.c1))) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULL AS BLOB)) ORDER BY (((rt0.c0))==((rt0.c1))) COLLATE BINARY  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN 1.479275871E9 THEN rt0.c1 ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END) ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 1.479275871E9 THEN rt0.c1 ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN 1.479275871E9 THEN rt0.c1 ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END) ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 1.479275871E9 THEN rt0.c1 ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN 1.479275871E9 THEN rt0.c1 ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END END) ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC) DESC;
SELECT ALL * FROM rt0 WHERE (UPPER(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))) ORDER BY ((((rt0.c1) NOTNULL))LIKE(rt0.c0));
SELECT SUM(count) FROM (SELECT ((UPPER(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOTNULL))LIKE(rt0.c0)));
SELECT ALL * FROM rt0 WHERE (UPPER(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))) ORDER BY ((((rt0.c1) NOTNULL))LIKE(rt0.c0));
SELECT SUM(count) FROM (SELECT ((UPPER(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOTNULL))LIKE(rt0.c0)));
SELECT ALL * FROM rt0 WHERE (UPPER(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))) ORDER BY ((((rt0.c1) NOTNULL))LIKE(rt0.c0));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((-1981421689, rt0.c0, rt0.c0)))) BETWEEN (((rt0.c0)>(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((-1981421689, rt0.c0, rt0.c0)))) BETWEEN (((rt0.c0)>(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((-1981421689, rt0.c0, rt0.c0)))) BETWEEN (((rt0.c0)>(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((-1981421689, rt0.c0, rt0.c0)))) BETWEEN (((rt0.c0)>(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((-1981421689, rt0.c0, rt0.c0)))) BETWEEN (((rt0.c0)>(rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (LENGTH(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LENGTH(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LENGTH(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE ((('|^**+#Rx')) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ORDER BY (NOT ((- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN ())  WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE ((('|^**+#Rx')) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((- (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE ((('|^**+#Rx')) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ORDER BY (NOT ((- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN ())  WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE ((('|^**+#Rx')) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((- (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c2 IN ())  WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) ELSE ((('|^**+#Rx')) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ORDER BY (NOT ((- (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (NULLIF(rt0.c2, rt0.c1)) AND ((x'' IN ())))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c0)LIKE(rt0.c2)), rt0.c0 COLLATE RTRIM))=(((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, ((rt0.c1)>(rt0.c0)))))  NULLS LAST, (+ (CASE rt0.c1  WHEN 0.02037628217572196 THEN rt0.c1 END))  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (NULLIF(rt0.c2, rt0.c1)) AND ((x'' IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c0)LIKE(rt0.c2)), rt0.c0 COLLATE RTRIM))==(((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, ((rt0.c1)>(rt0.c0)))))  NULLS LAST, (+ (CASE rt0.c1  WHEN 0.02037628217572196 THEN rt0.c1 END))  NULLS FIRST, rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (NULLIF(rt0.c2, rt0.c1)) AND ((x'' IN ())))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c0)LIKE(rt0.c2)), rt0.c0 COLLATE RTRIM))=(((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, ((rt0.c1)>(rt0.c0)))))  NULLS LAST, (+ (CASE rt0.c1  WHEN 0.02037628217572196 THEN rt0.c1 END))  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (NULLIF(rt0.c2, rt0.c1)) AND ((x'' IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c0)LIKE(rt0.c2)), rt0.c0 COLLATE RTRIM))==(((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, ((rt0.c1)>(rt0.c0)))))  NULLS LAST, (+ (CASE rt0.c1  WHEN 0.02037628217572196 THEN rt0.c1 END))  NULLS FIRST, rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (NULLIF(rt0.c2, rt0.c1)) AND ((x'' IN ())))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c0)LIKE(rt0.c2)), rt0.c0 COLLATE RTRIM))=(((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, ((rt0.c1)>(rt0.c0)))))  NULLS LAST, (+ (CASE rt0.c1  WHEN 0.02037628217572196 THEN rt0.c1 END))  NULLS FIRST, rt0.c0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c2 COLLATE BINARY) NOTNULL)  NULLS FIRST, (~ ((((rt0.c0))>((rt0.c2))))) DESC, (('-1575250542' IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOTNULL)  NULLS FIRST, (~ ((((rt0.c0))>((rt0.c2))))) DESC, (('-1575250542' IN ()) IN ()));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c2 COLLATE BINARY) NOTNULL)  NULLS FIRST, (~ ((((rt0.c0))>((rt0.c2))))) DESC, (('-1575250542' IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOTNULL)  NULLS FIRST, (~ ((((rt0.c0))>((rt0.c2))))) DESC, (('-1575250542' IN ()) IN ()));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c2 COLLATE BINARY) NOTNULL)  NULLS FIRST, (~ ((((rt0.c0))>((rt0.c2))))) DESC, (('-1575250542' IN ()) IN ());
SELECT * FROM rt0 WHERE (CASE WHEN (('縣0>S੎>p[y')LIKE(rt0.c2)) THEN ((rt0.c0)-(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('縣0>S੎>p[y')LIKE(rt0.c2)) THEN ((rt0.c0)-(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (('縣0>S੎>p[y')LIKE(rt0.c2)) THEN ((rt0.c0)-(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('縣0>S੎>p[y')LIKE(rt0.c2)) THEN ((rt0.c0)-(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (('縣0>S੎>p[y')LIKE(rt0.c2)) THEN ((rt0.c0)-(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)|(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((0.09748519507532893)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((0.09748519507532893)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)|(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((0.09748519507532893)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((0.09748519507532893)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)|(rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((0.09748519507532893)IS NOT(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ())) ORDER BY (((((rt0.c0) IS FALSE)))<((((rt0.c1)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0) IS FALSE)))<((((rt0.c1)>=(rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ())) ORDER BY (((((rt0.c0) IS FALSE)))<((((rt0.c1)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0) IS FALSE)))<((((rt0.c1)>=(rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ())) ORDER BY (((((rt0.c0) IS FALSE)))<((((rt0.c1)>=(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c0)||(rt0.c0)))-(CAST(rt0.c1 AS BLOB)))  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c1 IN (x''))) AND (DATE(rt0.c0, rt0.c0, rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)||(rt0.c0)))-(CAST(rt0.c1 AS BLOB)))  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c1 IN (x''))) AND (DATE(rt0.c0, rt0.c0, rt0.c0))) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c0)||(rt0.c0)))-(CAST(rt0.c1 AS BLOB)))  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c1 IN (x''))) AND (DATE(rt0.c0, rt0.c0, rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)||(rt0.c0)))-(CAST(rt0.c1 AS BLOB)))  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c1 IN (x''))) AND (DATE(rt0.c0, rt0.c0, rt0.c0))) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c0)||(rt0.c0)))-(CAST(rt0.c1 AS BLOB)))  NULLS FIRST, ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c1 IN (x''))) AND (DATE(rt0.c0, rt0.c0, rt0.c0))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((0.48029447197248776)|(rt0.c2))))) ORDER BY (((0.6873622871252293)&(rt0.c2)) IN ((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((0.48029447197248776)|(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((0.6873622871252293)&(rt0.c2)) IN ((NOT (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((0.48029447197248776)|(rt0.c2))))) ORDER BY (((0.6873622871252293)&(rt0.c2)) IN ((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((0.48029447197248776)|(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((0.6873622871252293)&(rt0.c2)) IN ((NOT (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((0.48029447197248776)|(rt0.c2))))) ORDER BY (((0.6873622871252293)&(rt0.c2)) IN ((NOT (rt0.c2)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2)))AND(NULL))) ORDER BY ((((((((((rt0.c0)<<(rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0)IS(rt0.c0)))))AND(rt0.c2)) DESC  NULLS LAST, ((((rt0.c0)LIKE(rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2)))AND(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)<<(rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0)IS(rt0.c0)))))AND(rt0.c2)) DESC  NULLS LAST, ((((rt0.c0)LIKE(rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((rt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2)))AND(NULL))) ORDER BY ((((((((((rt0.c0)<<(rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0)IS(rt0.c0)))))AND(rt0.c2)) DESC  NULLS LAST, ((((rt0.c0)LIKE(rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2)))AND(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)<<(rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0)IS(rt0.c0)))))AND(rt0.c2)) DESC  NULLS LAST, ((((rt0.c0)LIKE(rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((rt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2)))AND(NULL))) ORDER BY ((((((((((rt0.c0)<<(rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0)IS(rt0.c0)))))AND(rt0.c2)) DESC  NULLS LAST, ((((rt0.c0)LIKE(rt0.c0))) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((rt0.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((('')*(((((rt0.c0)OR(rt0.c2)))OR(1495467556)))));
SELECT SUM(count) FROM (SELECT ALL (((('')*(((((rt0.c0)OR(rt0.c2)))OR(1495467556))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('')*(((((rt0.c0)OR(rt0.c2)))OR(1495467556)))));
SELECT SUM(count) FROM (SELECT ALL (((('')*(((((rt0.c0)OR(rt0.c2)))OR(1495467556))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('')*(((((rt0.c0)OR(rt0.c2)))OR(1495467556)))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((NULL, rt0.c2, 0.9514715688794123)) AND ((rt0.c1, rt0.c1, rt0.c2)))) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(((((x'24bc30ea')OR(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c2)<=(rt0.c2)))), ((((((((((rt0.c1)||(rt0.c0)))AND(((rt0.c0)IS(rt0.c1)))))OR(CASE 0Xffffffffffffffff  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR(NULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((NULL, rt0.c2, 0.9514715688794123)) AND ((rt0.c1, rt0.c1, rt0.c2)))) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(((((x'24bc30ea')OR(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c2)<=(rt0.c2)))), ((((((((((rt0.c1)||(rt0.c0)))AND(((rt0.c0)IS(rt0.c1)))))OR(CASE 0Xffffffffffffffff  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR(NULL)));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((NULL, rt0.c2, 0.9514715688794123)) AND ((rt0.c1, rt0.c1, rt0.c2)))) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(((((x'24bc30ea')OR(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c2)<=(rt0.c2)))), ((((((((((rt0.c1)||(rt0.c0)))AND(((rt0.c0)IS(rt0.c1)))))OR(CASE 0Xffffffffffffffff  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR(NULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((NULL, rt0.c2, 0.9514715688794123)) AND ((rt0.c1, rt0.c1, rt0.c2)))) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(((((x'24bc30ea')OR(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c2)<=(rt0.c2)))), ((((((((((rt0.c1)||(rt0.c0)))AND(((rt0.c0)IS(rt0.c1)))))OR(CASE 0Xffffffffffffffff  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR(NULL)));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((NULL, rt0.c2, 0.9514715688794123)) AND ((rt0.c1, rt0.c1, rt0.c2)))) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(((((x'24bc30ea')OR(rt0.c1)))OR(rt0.c0)))))OR(((rt0.c2)<=(rt0.c2)))), ((((((((((rt0.c1)||(rt0.c0)))AND(((rt0.c0)IS(rt0.c1)))))OR(CASE 0Xffffffffffffffff  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR(NULL));
SELECT * FROM rt0 WHERE (CASE (NOT (rt0.c2))  WHEN (- (rt0.c1)) THEN LIKELY(rt0.c2) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('0.5887498411345168') AND (rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)||(((NULL)||(rt0.c1)))), CASE WHEN ((rt0.c0)/(rt0.c2)) THEN (((rt0.c1))>=((rt0.c0))) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN (NOT (rt0.c1)) WHEN CASE rt0.c2  WHEN rt0.c1 THEN -1861769645 END THEN TRIM(DISTINCT rt0.c0, rt0.c1) WHEN CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN '969230911' THEN rt0.c1 END WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN 1.243453822E9 THEN rt0.c2 ELSE rt0.c1 END WHEN ((rt0.c1) NOT NULL) THEN (rt0.c1 IN ()) WHEN (rt0.c2 IN ()) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c2))  WHEN (- (rt0.c1)) THEN LIKELY(rt0.c2) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('0.5887498411345168') AND (rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)||(((NULL)||(rt0.c1)))), CASE WHEN ((rt0.c0)/(rt0.c2)) THEN (((rt0.c1))>=((rt0.c0))) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN (NOT (rt0.c1)) WHEN CASE rt0.c2  WHEN rt0.c1 THEN -1861769645 END THEN TRIM(DISTINCT rt0.c0, rt0.c1) WHEN CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN '969230911' THEN rt0.c1 END WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN 1.243453822E9 THEN rt0.c2 ELSE rt0.c1 END WHEN ((rt0.c1) NOT NULL) THEN (rt0.c1 IN ()) WHEN (rt0.c2 IN ()) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END DESC);
SELECT * FROM rt0 WHERE (CASE (NOT (rt0.c2))  WHEN (- (rt0.c1)) THEN LIKELY(rt0.c2) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('0.5887498411345168') AND (rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)||(((NULL)||(rt0.c1)))), CASE WHEN ((rt0.c0)/(rt0.c2)) THEN (((rt0.c1))>=((rt0.c0))) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN (NOT (rt0.c1)) WHEN CASE rt0.c2  WHEN rt0.c1 THEN -1861769645 END THEN TRIM(DISTINCT rt0.c0, rt0.c1) WHEN CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN '969230911' THEN rt0.c1 END WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN 1.243453822E9 THEN rt0.c2 ELSE rt0.c1 END WHEN ((rt0.c1) NOT NULL) THEN (rt0.c1 IN ()) WHEN (rt0.c2 IN ()) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c2))  WHEN (- (rt0.c1)) THEN LIKELY(rt0.c2) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('0.5887498411345168') AND (rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)||(((NULL)||(rt0.c1)))), CASE WHEN ((rt0.c0)/(rt0.c2)) THEN (((rt0.c1))>=((rt0.c0))) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN (NOT (rt0.c1)) WHEN CASE rt0.c2  WHEN rt0.c1 THEN -1861769645 END THEN TRIM(DISTINCT rt0.c0, rt0.c1) WHEN CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN '969230911' THEN rt0.c1 END WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN 1.243453822E9 THEN rt0.c2 ELSE rt0.c1 END WHEN ((rt0.c1) NOT NULL) THEN (rt0.c1 IN ()) WHEN (rt0.c2 IN ()) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END DESC);
SELECT * FROM rt0 WHERE (CASE (NOT (rt0.c2))  WHEN (- (rt0.c1)) THEN LIKELY(rt0.c2) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('0.5887498411345168') AND (rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)||(((NULL)||(rt0.c1)))), CASE WHEN ((rt0.c0)/(rt0.c2)) THEN (((rt0.c1))>=((rt0.c0))) WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN (NOT (rt0.c1)) WHEN CASE rt0.c2  WHEN rt0.c1 THEN -1861769645 END THEN TRIM(DISTINCT rt0.c0, rt0.c1) WHEN CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN '969230911' THEN rt0.c1 END WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN 1.243453822E9 THEN rt0.c2 ELSE rt0.c1 END WHEN ((rt0.c1) NOT NULL) THEN (rt0.c1 IN ()) WHEN (rt0.c2 IN ()) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END DESC;
SELECT COUNT(*) FROM rt0 WHERE ((+ (rt0.c0)) COLLATE NOCASE) ORDER BY ((x'5f94') NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND ((NOT (rt0.c2))))  NULLS FIRST, (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ())  NULLS LAST, (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))<(((rt0.c1) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((x'5f94') NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND ((NOT (rt0.c2))))  NULLS FIRST, (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ())  NULLS LAST, (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))<(((rt0.c1) ISNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((+ (rt0.c0)) COLLATE NOCASE) ORDER BY ((x'5f94') NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND ((NOT (rt0.c2))))  NULLS FIRST, (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ())  NULLS LAST, (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))<(((rt0.c1) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((x'5f94') NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND ((NOT (rt0.c2))))  NULLS FIRST, (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ())  NULLS LAST, (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))<(((rt0.c1) ISNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((+ (rt0.c0)) COLLATE NOCASE) ORDER BY ((x'5f94') NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND ((NOT (rt0.c2))))  NULLS FIRST, (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ())  NULLS LAST, (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))<(((rt0.c1) ISNULL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0)<>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)!=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0)<>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)!=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0)<>(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CASE TRIM(rt0.c1, rt0.c2)  WHEN (NOT (rt0.c2)) THEN rt0.c2 WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c1)<=(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('')) ELSE ((rt0.c2)=(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE TRIM(rt0.c1, rt0.c2)  WHEN (NOT (rt0.c2)) THEN rt0.c2 WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c1)<=(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('')) ELSE ((rt0.c2)==(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE TRIM(rt0.c1, rt0.c2)  WHEN (NOT (rt0.c2)) THEN rt0.c2 WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c1)<=(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('')) ELSE ((rt0.c2)=(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE TRIM(rt0.c1, rt0.c2)  WHEN (NOT (rt0.c2)) THEN rt0.c2 WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c1)<=(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('')) ELSE ((rt0.c2)==(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE TRIM(rt0.c1, rt0.c2)  WHEN (NOT (rt0.c2)) THEN rt0.c2 WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c1)<=(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('')) ELSE ((rt0.c2)=(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((- (rt0.c2)))));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)  NULLS LAST;
SELECT * FROM rt0 WHERE (json_array_length((rt0.c1 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length((rt0.c1 IN (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_array_length((rt0.c1 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length((rt0.c1 IN (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_array_length((rt0.c1 IN (rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (CASE '-689460588'  WHEN rt0.c0 COLLATE BINARY THEN (~ (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '-689460588'  WHEN rt0.c0 COLLATE BINARY THEN (~ (NULL)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE '-689460588'  WHEN rt0.c0 COLLATE BINARY THEN (~ (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '-689460588'  WHEN rt0.c0 COLLATE BINARY THEN (~ (NULL)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE '-689460588'  WHEN rt0.c0 COLLATE BINARY THEN (~ (NULL)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((rt0.c0)*(rt0.c1))) AND (0.8137878164939062))) ORDER BY CAST((('*qV(fdHA') ISNULL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((rt0.c0)*(rt0.c1))) AND (0.8137878164939062))) IS TRUE)  as count FROM rt0 ORDER BY CAST((('*qV(fdHA') ISNULL) AS REAL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((rt0.c0)*(rt0.c1))) AND (0.8137878164939062))) ORDER BY CAST((('*qV(fdHA') ISNULL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((rt0.c0)*(rt0.c1))) AND (0.8137878164939062))) IS TRUE)  as count FROM rt0 ORDER BY CAST((('*qV(fdHA') ISNULL) AS REAL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((rt0.c0)*(rt0.c1))) AND (0.8137878164939062))) ORDER BY CAST((('*qV(fdHA') ISNULL) AS REAL) DESC;
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))IS(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY) ORDER BY rt0.c2 ASC, ((((rt0.c0) IS FALSE)) NOT BETWEEN ((~ (NULL))) AND (((rt0.c1)LIKE(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC, ((((rt0.c0) IS FALSE)) NOT BETWEEN ((~ (NULL))) AND (((rt0.c1)LIKE(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY) ORDER BY rt0.c2 ASC, ((((rt0.c0) IS FALSE)) NOT BETWEEN ((~ (NULL))) AND (((rt0.c1)LIKE(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC, ((((rt0.c0) IS FALSE)) NOT BETWEEN ((~ (NULL))) AND (((rt0.c1)LIKE(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY) ORDER BY rt0.c2 ASC, ((((rt0.c0) IS FALSE)) NOT BETWEEN ((~ (NULL))) AND (((rt0.c1)LIKE(rt0.c0)))) ASC;
SELECT * FROM rt0 WHERE (((((LIKELY(DISTINCT rt0.c1))AND(rt0.c2 COLLATE NOCASE)))AND(((rt0.c1)||(rt0.c0))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((- (rt0.c1))) AND (((rt0.c0)&(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(DISTINCT rt0.c1))AND(rt0.c2 COLLATE NOCASE)))AND(((rt0.c1)||(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((- (rt0.c1))) AND (((rt0.c0)&(rt0.c2)))));
SELECT * FROM rt0 WHERE (((((LIKELY(DISTINCT rt0.c1))AND(rt0.c2 COLLATE NOCASE)))AND(((rt0.c1)||(rt0.c0))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((- (rt0.c1))) AND (((rt0.c0)&(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(DISTINCT rt0.c1))AND(rt0.c2 COLLATE NOCASE)))AND(((rt0.c1)||(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((- (rt0.c1))) AND (((rt0.c0)&(rt0.c2)))));
SELECT * FROM rt0 WHERE (((((LIKELY(DISTINCT rt0.c1))AND(rt0.c2 COLLATE NOCASE)))AND(((rt0.c1)||(rt0.c0))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((- (rt0.c1))) AND (((rt0.c0)&(rt0.c2))));
SELECT * FROM rt0 WHERE (((+ (rt0.c0)) IN ())) ORDER BY (rt0.c2 IN ()) ASC, CASE rt0.c1  WHEN '1057725320' THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()) ASC, CASE rt0.c1  WHEN '1057725320' THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE (((+ (rt0.c0)) IN ())) ORDER BY (rt0.c2 IN ()) ASC, CASE rt0.c1  WHEN '1057725320' THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()) ASC, CASE rt0.c1  WHEN '1057725320' THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE (((+ (rt0.c0)) IN ())) ORDER BY (rt0.c2 IN ()) ASC, CASE rt0.c1  WHEN '1057725320' THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((('-5114517')OR(rt0.c0)))AND(rt0.c2))))<((rt0.c2)))) ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN (rt0.c2, rt0.c1)))) AND ((((rt0.c2)<=(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((('-5114517')OR(rt0.c0)))AND(rt0.c2))))<((rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN (rt0.c2, rt0.c1)))) AND ((((rt0.c2)<=(rt0.c0)))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((('-5114517')OR(rt0.c0)))AND(rt0.c2))))<((rt0.c2)))) ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN (rt0.c2, rt0.c1)))) AND ((((rt0.c2)<=(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((('-5114517')OR(rt0.c0)))AND(rt0.c2))))<((rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN (rt0.c2, rt0.c1)))) AND ((((rt0.c2)<=(rt0.c0)))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((('-5114517')OR(rt0.c0)))AND(rt0.c2))))<((rt0.c2)))) ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN (rt0.c2, rt0.c1)))) AND ((((rt0.c2)<=(rt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)<=(((rt0.c2)*(rt0.c0))))) ORDER BY (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<=(((rt0.c2)*(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)<=(((rt0.c2)*(rt0.c0))))) ORDER BY (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<=(((rt0.c2)*(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)<=(((rt0.c2)*(rt0.c0))))) ORDER BY (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c1)GLOB(rt0.c0)), json_valid(rt0.c1), LTRIM(rt0.c0))) AND ((((rt0.c2)<>(rt0.c2)), ((rt0.c0)IS(rt0.c2)), CAST(rt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c1)GLOB(rt0.c0)), json_valid(rt0.c1), LTRIM(rt0.c0))) AND ((((rt0.c2)<>(rt0.c2)), ((rt0.c0)IS(rt0.c2)), CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c1)GLOB(rt0.c0)), json_valid(rt0.c1), LTRIM(rt0.c0))) AND ((((rt0.c2)<>(rt0.c2)), ((rt0.c0)IS(rt0.c2)), CAST(rt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c1)GLOB(rt0.c0)), json_valid(rt0.c1), LTRIM(rt0.c0))) AND ((((rt0.c2)<>(rt0.c2)), ((rt0.c0)IS(rt0.c2)), CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c1)GLOB(rt0.c0)), json_valid(rt0.c1), LTRIM(rt0.c0))) AND ((((rt0.c2)<>(rt0.c2)), ((rt0.c0)IS(rt0.c2)), CAST(rt0.c1 AS TEXT)))));
SELECT * FROM rt0 WHERE ('') ORDER BY ((~ (rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c1)) IN ())  NULLS LAST);
SELECT * FROM rt0 WHERE ('') ORDER BY ((~ (rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c1)) IN ())  NULLS LAST);
SELECT * FROM rt0 WHERE ('') ORDER BY ((~ (rt0.c1)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB))OR(CAST(rt0.c2 AS NUMERIC))))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN -1.981484008E9 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CASE WHEN x'' THEN rt0.c0 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS BLOB))OR(CAST(rt0.c2 AS NUMERIC))))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN -1.981484008E9 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN x'' THEN rt0.c0 COLLATE NOCASE END DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB))OR(CAST(rt0.c2 AS NUMERIC))))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN -1.981484008E9 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CASE WHEN x'' THEN rt0.c0 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS BLOB))OR(CAST(rt0.c2 AS NUMERIC))))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN -1.981484008E9 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN x'' THEN rt0.c0 COLLATE NOCASE END DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB))OR(CAST(rt0.c2 AS NUMERIC))))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN -1.981484008E9 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CASE WHEN x'' THEN rt0.c0 COLLATE NOCASE END DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)|(rt0.c1)) IN ())) ORDER BY (((rt0.c1)|(rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c2)|(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)|(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)|(rt0.c1)) IN ())) ORDER BY (((rt0.c1)|(rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c2)|(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)|(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)|(rt0.c1)) IN ())) ORDER BY (((rt0.c1)|(rt0.c0)) IN ());
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)GLOB(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)GLOB(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c0 COLLATE RTRIM)%(rt0.c1)), (((NOT (rt0.c0))) BETWEEN (rt0.c1) AND ((rt0.c1 IN ()))), rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)%(rt0.c1)), (((NOT (rt0.c0))) BETWEEN (rt0.c1) AND ((rt0.c1 IN ()))), rt0.c2 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c0 COLLATE RTRIM)%(rt0.c1)), (((NOT (rt0.c0))) BETWEEN (rt0.c1) AND ((rt0.c1 IN ()))), rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)%(rt0.c1)), (((NOT (rt0.c0))) BETWEEN (rt0.c1) AND ((rt0.c1 IN ()))), rt0.c2 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c0 COLLATE RTRIM)%(rt0.c1)), (((NOT (rt0.c0))) BETWEEN (rt0.c1) AND ((rt0.c1 IN ()))), rt0.c2 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)<<(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<<(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)<<(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<<(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)<<(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0)))))>((rt0.c1 COLLATE RTRIM)))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0)))))>((rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0)))))>((rt0.c1 COLLATE RTRIM)))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0)))))>((rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0)))))>((rt0.c1 COLLATE RTRIM)))) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(x'f184')))OR(rt0.c1)))=(((rt0.c2)||(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(x'f184')))OR(rt0.c1)))=(((rt0.c2)||(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(x'f184')))OR(rt0.c1)))=(((rt0.c2)||(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(x'f184')))OR(rt0.c1)))=(((rt0.c2)||(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(x'f184')))OR(rt0.c1)))=(((rt0.c2)||(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL)) BETWEEN ((NOT (rt0.c2))) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) BETWEEN ((NOT (rt0.c2))) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL)) BETWEEN ((NOT (rt0.c2))) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) BETWEEN ((NOT (rt0.c2))) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL)) BETWEEN ((NOT (rt0.c2))) AND (rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (TRIM(NULL)) AND ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) ORDER BY (NOT (rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, CAST(x'' AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (TRIM(NULL)) AND ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, CAST(x'' AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (TRIM(NULL)) AND ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) ORDER BY (NOT (rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, CAST(x'' AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (TRIM(NULL)) AND ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, CAST(x'' AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (TRIM(NULL)) AND ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) ORDER BY (NOT (rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, CAST(x'' AS INTEGER) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (NOT (rt0.c1)) END) ORDER BY ((NOT (rt0.c2)) IN ()), (~ (x'')) ASC, ((UNLIKELY(DISTINCT rt0.c1))>=(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (NOT (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((NOT (rt0.c2)) IN ()), (~ (x'')) ASC, ((UNLIKELY(DISTINCT rt0.c1))>=(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ASC);
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (NOT (rt0.c1)) END) ORDER BY ((NOT (rt0.c2)) IN ()), (~ (x'')) ASC, ((UNLIKELY(DISTINCT rt0.c1))>=(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (NOT (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((NOT (rt0.c2)) IN ()), (~ (x'')) ASC, ((UNLIKELY(DISTINCT rt0.c1))>=(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ASC);
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (NOT (rt0.c1)) END) ORDER BY ((NOT (rt0.c2)) IN ()), (~ (x'')) ASC, ((UNLIKELY(DISTINCT rt0.c1))>=(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)/(rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)/(rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)/(rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)/(rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)/(rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN ((rt0.c1)*(rt0.c1)) THEN (rt0.c0 IN (NULL, rt0.c2)) ELSE ((((rt0.c1)AND(NULL)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN ((rt0.c1)*(rt0.c1)) THEN (rt0.c0 IN (NULL, rt0.c2)) ELSE ((((rt0.c1)AND(NULL)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN ((rt0.c1)*(rt0.c1)) THEN (rt0.c0 IN (NULL, rt0.c2)) ELSE ((((rt0.c1)AND(NULL)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN ((rt0.c1)*(rt0.c1)) THEN (rt0.c0 IN (NULL, rt0.c2)) ELSE ((((rt0.c1)AND(NULL)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN ((rt0.c1)*(rt0.c1)) THEN (rt0.c0 IN (NULL, rt0.c2)) ELSE ((((rt0.c1)AND(NULL)))OR(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN rt0.c0 COLLATE BINARY THEN (- (rt0.c2)) ELSE ((rt0.c2)||(rt0.c2)) END) ORDER BY ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (0.9370268209722448)))AND((((rt0.c2))<>((rt0.c1))))))OR(CAST(rt0.c0 AS TEXT))))AND(TRIM(rt0.c1))))OR(('-1526799048' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN rt0.c0 COLLATE BINARY THEN (- (rt0.c2)) ELSE ((rt0.c2)||(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (0.9370268209722448)))AND((((rt0.c2))<>((rt0.c1))))))OR(CAST(rt0.c0 AS TEXT))))AND(TRIM(rt0.c1))))OR(('-1526799048' IN ()))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN rt0.c0 COLLATE BINARY THEN (- (rt0.c2)) ELSE ((rt0.c2)||(rt0.c2)) END) ORDER BY ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (0.9370268209722448)))AND((((rt0.c2))<>((rt0.c1))))))OR(CAST(rt0.c0 AS TEXT))))AND(TRIM(rt0.c1))))OR(('-1526799048' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN rt0.c0 COLLATE BINARY THEN (- (rt0.c2)) ELSE ((rt0.c2)||(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (0.9370268209722448)))AND((((rt0.c2))<>((rt0.c1))))))OR(CAST(rt0.c0 AS TEXT))))AND(TRIM(rt0.c1))))OR(('-1526799048' IN ()))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN rt0.c0 COLLATE BINARY THEN (- (rt0.c2)) ELSE ((rt0.c2)||(rt0.c2)) END) ORDER BY ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (0.9370268209722448)))AND((((rt0.c2))<>((rt0.c1))))))OR(CAST(rt0.c0 AS TEXT))))AND(TRIM(rt0.c1))))OR(('-1526799048' IN ()))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((~ (NULL))) ORDER BY ((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)AND((rt0.c0 IN ()))))AND('')))OR(CAST(rt0.c0 AS REAL))))AND(0xffffffff8d13baae)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)AND((rt0.c0 IN ()))))AND('')))OR(CAST(rt0.c0 AS REAL))))AND(0Xffffffff8d13baae)) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((~ (NULL))) ORDER BY ((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)AND((rt0.c0 IN ()))))AND('')))OR(CAST(rt0.c0 AS REAL))))AND(0xffffffff8d13baae)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)AND((rt0.c0 IN ()))))AND('')))OR(CAST(rt0.c0 AS REAL))))AND(0Xffffffff8d13baae)) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((~ (NULL))) ORDER BY ((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)AND((rt0.c0 IN ()))))AND('')))OR(CAST(rt0.c0 AS REAL))))AND(0xffffffff8d13baae)) ASC;
SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT rt0.c1)) ORDER BY ((0.6436360927901101) NOT BETWEEN (rt0.c1) AND ((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY ((0.6436360927901101) NOT BETWEEN (rt0.c1) AND ((- (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT rt0.c1)) ORDER BY ((0.6436360927901101) NOT BETWEEN (rt0.c1) AND ((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY ((0.6436360927901101) NOT BETWEEN (rt0.c1) AND ((- (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT rt0.c1)) ORDER BY ((0.6436360927901101) NOT BETWEEN (rt0.c1) AND ((- (rt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS FALSE) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS FALSE) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) IS FALSE) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(NULL AS INTEGER), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) AND (((('1oY\r') NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c2)>=(rt0.c0)), (NOT (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(NULL AS INTEGER), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) AND (((('1oY\r') NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c2)>=(rt0.c0)), (NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(NULL AS INTEGER), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) AND (((('1oY\r') NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c2)>=(rt0.c0)), (NOT (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(NULL AS INTEGER), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) AND (((('1oY\r') NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c2)>=(rt0.c0)), (NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(NULL AS INTEGER), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) AND (((('1oY\r') NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c2)>=(rt0.c0)), (NOT (rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))!=(((rt0.c2)|(rt0.c1))))) ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))<>(((rt0.c2)|(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))!=(((rt0.c2)|(rt0.c1))))) ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))<>(((rt0.c2)|(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))!=(((rt0.c2)|(rt0.c1))))) ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))<=((0.7020332097749833))) COLLATE BINARY) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))<=((0.7020332097749833))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))<=((0.7020332097749833))) COLLATE BINARY) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))<=((0.7020332097749833))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))<=((0.7020332097749833))) COLLATE BINARY) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT * FROM rt0 WHERE (json_patch(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END, TRIM(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((json_patch(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END, TRIM(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_patch(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END, TRIM(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((json_patch(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END, TRIM(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_patch(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END, TRIM(rt0.c1)));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))<=((((rt0.c1)<(rt0.c2)), rt0.c1 COLLATE RTRIM, ((rt0.c0)=(rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))<=((((rt0.c1)<(rt0.c2)), rt0.c1 COLLATE RTRIM, ((rt0.c0)=(rt0.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))<=((((rt0.c1)<(rt0.c2)), rt0.c1 COLLATE RTRIM, ((rt0.c0)=(rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))<=((((rt0.c1)<(rt0.c2)), rt0.c1 COLLATE RTRIM, ((rt0.c0)=(rt0.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))<=((((rt0.c1)<(rt0.c2)), rt0.c1 COLLATE RTRIM, ((rt0.c0)=(rt0.c1))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT NULL)) ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT NULL)) ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT NULL)) ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)LIKE(((rt0.c2)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)LIKE(((rt0.c2)AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)LIKE(((rt0.c2)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)LIKE(((rt0.c2)AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)LIKE(((rt0.c2)AND(rt0.c1)))));
SELECT * FROM rt0 WHERE (CAST((((((((('sOQa쬂')AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((((((('sOQa쬂')AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(NULL)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((((((((('sOQa쬂')AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((((((('sOQa쬂')AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(NULL)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((((((((('sOQa쬂')AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(NULL)) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (((((((x'')LIKE(rt0.c1)))AND(((rt0.c2) NOT NULL))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')LIKE(rt0.c1)))AND(((rt0.c2) NOT NULL))))AND(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((x'')LIKE(rt0.c1)))AND(((rt0.c2) NOT NULL))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')LIKE(rt0.c1)))AND(((rt0.c2) NOT NULL))))AND(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((x'')LIKE(rt0.c1)))AND(((rt0.c2) NOT NULL))))AND(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) NOT NULL)) ORDER BY rt0.c2 DESC, (((((rt0.c0 IN ()))OR(((rt0.c1) ISNULL))))AND(((rt0.c2)&(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC, (((((rt0.c0 IN ()))OR(((rt0.c1) ISNULL))))AND(((rt0.c2)&(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) NOT NULL)) ORDER BY rt0.c2 DESC, (((((rt0.c0 IN ()))OR(((rt0.c1) ISNULL))))AND(((rt0.c2)&(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC, (((((rt0.c0 IN ()))OR(((rt0.c1) ISNULL))))AND(((rt0.c2)&(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) NOT NULL)) ORDER BY rt0.c2 DESC, (((((rt0.c0 IN ()))OR(((rt0.c1) ISNULL))))AND(((rt0.c2)&(rt0.c1))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c0))!=((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0))!=((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0))!=((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0))!=((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0))!=((rt0.c0))) IN ()));
SELECT * FROM rt0 WHERE ((- (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (CAST(x'' AS INTEGER)))) ORDER BY (- (TOTAL_CHANGES()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY (- (TOTAL_CHANGES())));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (CAST(x'' AS INTEGER)))) ORDER BY (- (TOTAL_CHANGES()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY (- (TOTAL_CHANGES())));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (CAST(x'' AS INTEGER)))) ORDER BY (- (TOTAL_CHANGES()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0))>((rt0.c2))) AS REAL)) ORDER BY CAST(CASE NULL  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS INTEGER) DESC, (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN x'' END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0))>((rt0.c2))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE NULL  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS INTEGER) DESC, (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN x'' END IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0))>((rt0.c2))) AS REAL)) ORDER BY CAST(CASE NULL  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS INTEGER) DESC, (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN x'' END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0))>((rt0.c2))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE NULL  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS INTEGER) DESC, (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN x'' END IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0))>((rt0.c2))) AS REAL)) ORDER BY CAST(CASE NULL  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS INTEGER) DESC, (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN x'' END IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((((rt0.c1) IS FALSE))OR(((rt0.c2)<('2143943053')))))OR(((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(0.9896987760479731)))AND(rt0.c2)))AND(rt0.c0)))), ((((rt0.c0)GLOB(rt0.c2)))IS NOT(((rt0.c2)>=(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) IS FALSE))OR(((rt0.c2)<('2143943053')))))OR(((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(0.9896987760479731)))AND(rt0.c2)))AND(rt0.c0)))), ((((rt0.c0)GLOB(rt0.c2)))IS NOT(((rt0.c2)>=(x'')))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((((rt0.c1) IS FALSE))OR(((rt0.c2)<('2143943053')))))OR(((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(0.9896987760479731)))AND(rt0.c2)))AND(rt0.c0)))), ((((rt0.c0)GLOB(rt0.c2)))IS NOT(((rt0.c2)>=(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) IS FALSE))OR(((rt0.c2)<('2143943053')))))OR(((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(0.9896987760479731)))AND(rt0.c2)))AND(rt0.c0)))), ((((rt0.c0)GLOB(rt0.c2)))IS NOT(((rt0.c2)>=(x'')))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((((rt0.c1) IS FALSE))OR(((rt0.c2)<('2143943053')))))OR(((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(0.9896987760479731)))AND(rt0.c2)))AND(rt0.c0)))), ((((rt0.c0)GLOB(rt0.c2)))IS NOT(((rt0.c2)>=(x'')))) DESC;
SELECT * FROM rt0 WHERE (((rt0.c2)%(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)%(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2)%(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)%(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2)%(rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c0 AS TEXT) THEN (~ (rt0.c1)) WHEN ((rt0.c1)!=(rt0.c2)) THEN (((rt0.c0))>=((rt0.c0))) WHEN (('') NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END ELSE rt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c0 AS TEXT) THEN (~ (rt0.c1)) WHEN ((rt0.c1)!=(rt0.c2)) THEN (((rt0.c0))>=((rt0.c0))) WHEN (('') NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END ELSE rt0.c0 END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c0 AS TEXT) THEN (~ (rt0.c1)) WHEN ((rt0.c1)!=(rt0.c2)) THEN (((rt0.c0))>=((rt0.c0))) WHEN (('') NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END ELSE rt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c0 AS TEXT) THEN (~ (rt0.c1)) WHEN ((rt0.c1)!=(rt0.c2)) THEN (((rt0.c0))>=((rt0.c0))) WHEN (('') NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END ELSE rt0.c0 END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c0 AS TEXT) THEN (~ (rt0.c1)) WHEN ((rt0.c1)!=(rt0.c2)) THEN (((rt0.c0))>=((rt0.c0))) WHEN (('') NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END ELSE rt0.c0 END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0 COLLATE NOCASE)))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0 COLLATE NOCASE)))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0 COLLATE NOCASE)))) ORDER BY rt0.c0 ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (485361584) AND (rt0.c1)))<=((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (485361584) AND (rt0.c1)))<=((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (485361584) AND (rt0.c1)))<=((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (485361584) AND (rt0.c1)))<=((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (485361584) AND (rt0.c1)))<=((+ (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX((((rt0.c0))!=((0.03311307520359463))))) ORDER BY x'4b6d' DESC;
SELECT SUM(count) FROM (SELECT ((HEX((((rt0.c0))<>((0.03311307520359463))))) IS TRUE)  as count FROM rt0 ORDER BY x'4b6d' DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX((((rt0.c0))!=((0.03311307520359463))))) ORDER BY x'4b6d' DESC;
SELECT SUM(count) FROM (SELECT ((HEX((((rt0.c0))<>((0.03311307520359463))))) IS TRUE)  as count FROM rt0 ORDER BY x'4b6d' DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX((((rt0.c0))!=((0.03311307520359463))))) ORDER BY x'4b6d' DESC;
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY (('0.3854997856928718') ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (('0.3854997856928718') ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY (('0.3854997856928718') ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (('0.3854997856928718') ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY (('0.3854997856928718') ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((~ (rt0.c1)))OR(((rt0.c2) ISNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c1)))OR(((rt0.c2) ISNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((~ (rt0.c1)))OR(((rt0.c2) ISNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c1)))OR(((rt0.c2) ISNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((~ (rt0.c1)))OR(((rt0.c2) ISNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c0)<<(rt0.c0))) NOT BETWEEN (json_object(rt0.c0, rt0.c1)) AND ((rt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c0))) NOT BETWEEN (json_object(rt0.c0, rt0.c1)) AND ((rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)<<(rt0.c0))) NOT BETWEEN (json_object(rt0.c0, rt0.c1)) AND ((rt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c0))) NOT BETWEEN (json_object(rt0.c0, rt0.c1)) AND ((rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (NOT (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (NOT (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (NOT (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))<(((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))<(((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))<(((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))<(((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))<(((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0)))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c2)IS NOT(rt0.c0)))))OR((('') NOTNULL))))OR(((rt0.c1)/(rt0.c1)))))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c2)IS NOT(rt0.c0)))))OR((('') NOTNULL))))OR(((rt0.c1)/(rt0.c1)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c2)IS NOT(rt0.c0)))))OR((('') NOTNULL))))OR(((rt0.c1)/(rt0.c1)))))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c2)IS NOT(rt0.c0)))))OR((('') NOTNULL))))OR(((rt0.c1)/(rt0.c1)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c2)IS NOT(rt0.c0)))))OR((('') NOTNULL))))OR(((rt0.c1)/(rt0.c1)))))OR(rt0.c2)));
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (load_extension(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (+ (rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((load_extension(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (+ (rt0.c1)) END DESC);
SELECT COUNT(*) FROM rt0 WHERE (load_extension(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (+ (rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((load_extension(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (+ (rt0.c1)) END DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)|(rt0.c1)))OR(NULL)))AND(((rt0.c1)IS NOT(rt0.c0))))) ORDER BY ((CAST(rt0.c2 AS TEXT)) ISNULL), (~ (((rt0.c1)IS NOT(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)|(rt0.c1)))OR(NULL)))AND(((rt0.c1)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS TEXT)) ISNULL), (~ (((rt0.c1)IS NOT(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)|(rt0.c1)))OR(NULL)))AND(((rt0.c1)IS NOT(rt0.c0))))) ORDER BY ((CAST(rt0.c2 AS TEXT)) ISNULL), (~ (((rt0.c1)IS NOT(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)|(rt0.c1)))OR(NULL)))AND(((rt0.c1)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS TEXT)) ISNULL), (~ (((rt0.c1)IS NOT(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)|(rt0.c1)))OR(NULL)))AND(((rt0.c1)IS NOT(rt0.c0))))) ORDER BY ((CAST(rt0.c2 AS TEXT)) ISNULL), (~ (((rt0.c1)IS NOT(rt0.c1))));
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c1 ELSE JULIANDAY(rt0.c2, rt0.c1, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE JULIANDAY(rt0.c2, rt0.c1, rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c1 ELSE JULIANDAY(rt0.c2, rt0.c1, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE JULIANDAY(rt0.c2, rt0.c1, rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c1 ELSE JULIANDAY(rt0.c2, rt0.c1, rt0.c0) END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))OR((- (rt0.c2))))) ORDER BY rt0.c2, (((rt0.c2)AND(rt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL))OR((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, (((rt0.c2)AND(rt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))OR((- (rt0.c2))))) ORDER BY rt0.c2, (((rt0.c2)AND(rt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL))OR((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, (((rt0.c2)AND(rt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) ISNULL))OR((- (rt0.c2))))) ORDER BY rt0.c2, (((rt0.c2)AND(rt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST((~ (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((~ (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((~ (rt0.c2)) AS TEXT));
SELECT * FROM rt0 WHERE ((((((rt0.c0) NOT NULL), CASE WHEN rt0.c0 THEN x'' WHEN 0x6ea6fafe THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE x'' END, (- (rt0.c0))))>((((rt0.c0)>(rt0.c0)), rt0.c2 COLLATE BINARY, ((rt0.c0)<=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT NULL), CASE WHEN rt0.c0 THEN x'' WHEN 0x6ea6fafe THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE x'' END, (- (rt0.c0))))>((((rt0.c0)>(rt0.c0)), rt0.c2 COLLATE BINARY, ((rt0.c0)<=(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0) NOT NULL), CASE WHEN rt0.c0 THEN x'' WHEN 0x6ea6fafe THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE x'' END, (- (rt0.c0))))>((((rt0.c0)>(rt0.c0)), rt0.c2 COLLATE BINARY, ((rt0.c0)<=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT NULL), CASE WHEN rt0.c0 THEN x'' WHEN 0x6ea6fafe THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE x'' END, (- (rt0.c0))))>((((rt0.c0)>(rt0.c0)), rt0.c2 COLLATE BINARY, ((rt0.c0)<=(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0) NOT NULL), CASE WHEN rt0.c0 THEN x'' WHEN 0x6ea6fafe THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE x'' END, (- (rt0.c0))))>((((rt0.c0)>(rt0.c0)), rt0.c2 COLLATE BINARY, ((rt0.c0)<=(rt0.c0))))));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1) NOT NULL)))) ORDER BY ((CAST(x'' AS REAL))GLOB((('KD!轢ዣ')AND(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(x'' AS REAL))GLOB((('KD!轢ዣ')AND(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1) NOT NULL)))) ORDER BY ((CAST(x'' AS REAL))GLOB((('KD!轢ዣ')AND(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(x'' AS REAL))GLOB((('KD!轢ዣ')AND(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1) NOT NULL)))) ORDER BY ((CAST(x'' AS REAL))GLOB((('KD!轢ዣ')AND(rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ('-900149936'))) ORDER BY (rt0.c0 IN ())  NULLS LAST, ((((((((((((((rt0.c1)AND(rt0.c2)))OR(CHAR(rt0.c0))))OR((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((NULL, rt0.c1, rt0.c1))))))OR((rt0.c2 IN (rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) IS TRUE))))AND(0x5fe0217))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ('-900149936'))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ())  NULLS LAST, ((((((((((((((rt0.c1)AND(rt0.c2)))OR(CHAR(rt0.c0))))OR((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((NULL, rt0.c1, rt0.c1))))))OR((rt0.c2 IN (rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) IS TRUE))))AND(0X5fe0217))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ('-900149936'))) ORDER BY (rt0.c0 IN ())  NULLS LAST, ((((((((((((((rt0.c1)AND(rt0.c2)))OR(CHAR(rt0.c0))))OR((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((NULL, rt0.c1, rt0.c1))))))OR((rt0.c2 IN (rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) IS TRUE))))AND(0x5fe0217))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ('-900149936'))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ())  NULLS LAST, ((((((((((((((rt0.c1)AND(rt0.c2)))OR(CHAR(rt0.c0))))OR((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((NULL, rt0.c1, rt0.c1))))))OR((rt0.c2 IN (rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) IS TRUE))))AND(0X5fe0217))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ('-900149936'))) ORDER BY (rt0.c0 IN ())  NULLS LAST, ((((((((((((((rt0.c1)AND(rt0.c2)))OR(CHAR(rt0.c0))))OR((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((NULL, rt0.c1, rt0.c1))))))OR((rt0.c2 IN (rt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) IS TRUE))))AND(0x5fe0217))  NULLS FIRST;
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT (rt0.c2 IN ()))) ORDER BY HEX(DISTINCT (+ (rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT (+ (rt0.c1))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT (rt0.c2 IN ()))) ORDER BY HEX(DISTINCT (+ (rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT (+ (rt0.c1))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT (rt0.c2 IN ()))) ORDER BY HEX(DISTINCT (+ (rt0.c1))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY NULL, (rt0.c1 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY NULL, (rt0.c1 IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY NULL, (rt0.c1 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY NULL, (rt0.c1 IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY NULL, (rt0.c1 IN ()) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN NULL THEN '' ELSE rt0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN NULL THEN '' ELSE rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN NULL THEN '' ELSE rt0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN NULL THEN '' ELSE rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN NULL THEN '' ELSE rt0.c1 END AS NUMERIC));
SELECT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))/(((('sCꚗq?Vr◇R')) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY ((((rt0.c2) IS TRUE))==(((rt0.c2)+(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))/(((('sCꚗq?Vr◇R')) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS TRUE))==(((rt0.c2)+(rt0.c0)))) ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))/(((('sCꚗq?Vr◇R')) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY ((((rt0.c2) IS TRUE))==(((rt0.c2)+(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))/(((('sCꚗq?Vr◇R')) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS TRUE))==(((rt0.c2)+(rt0.c0)))) ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))/(((('sCꚗq?Vr◇R')) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY ((((rt0.c2) IS TRUE))==(((rt0.c2)+(rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)>(rt0.c2)) COLLATE BINARY) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)>(rt0.c2)) COLLATE BINARY) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)>(rt0.c2)) COLLATE BINARY) ORDER BY rt0.c0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(((rt0.c1)==(rt0.c1)))))OR((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE BINARY)AND(((rt0.c1)==(rt0.c1)))))OR((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(((rt0.c1)==(rt0.c1)))))OR((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE BINARY)AND(((rt0.c1)==(rt0.c1)))))OR((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(((rt0.c1)==(rt0.c1)))))OR((NOT (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN (~ (rt0.c2)) END) ORDER BY ((((rt0.c1)==(rt0.c2))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT NULL) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)=(rt0.c2))) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN (~ (rt0.c2)) END) ORDER BY ((((rt0.c1)==(rt0.c2))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT NULL) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)=(rt0.c2))) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN (~ (rt0.c2)) END) ORDER BY ((((rt0.c1)==(rt0.c2))) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, ((rt0.c2)<=(rt0.c0)), (rt0.c1 IN (0.8511872436158542, rt0.c0)))) AND ((((((rt0.c2)OR(rt0.c1)))AND(0X1490f413)), CAST(rt0.c0 AS TEXT), ((rt0.c2)IS NOT(rt0.c2)))))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR((((rt0.c0))==((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, ((rt0.c2)<=(rt0.c0)), (rt0.c1 IN (0.8511872436158542, rt0.c0)))) AND ((((((rt0.c2)OR(rt0.c1)))AND(0X1490f413)), CAST(rt0.c0 AS TEXT), ((rt0.c2)IS NOT(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR((((rt0.c0))==((rt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, ((rt0.c2)<=(rt0.c0)), (rt0.c1 IN (0.8511872436158542, rt0.c0)))) AND ((((((rt0.c2)OR(rt0.c1)))AND(0X1490f413)), CAST(rt0.c0 AS TEXT), ((rt0.c2)IS NOT(rt0.c2)))))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR((((rt0.c0))==((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, ((rt0.c2)<=(rt0.c0)), (rt0.c1 IN (0.8511872436158542, rt0.c0)))) AND ((((((rt0.c2)OR(rt0.c1)))AND(0X1490f413)), CAST(rt0.c0 AS TEXT), ((rt0.c2)IS NOT(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR((((rt0.c0))==((rt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, ((rt0.c2)<=(rt0.c0)), (rt0.c1 IN (0.8511872436158542, rt0.c0)))) AND ((((((rt0.c2)OR(rt0.c1)))AND(0X1490f413)), CAST(rt0.c0 AS TEXT), ((rt0.c2)IS NOT(rt0.c2)))))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR((((rt0.c0))==((rt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS TEXT))));
SELECT * FROM rt0 WHERE ((('{V겧\nU') BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c0))>=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((('{V겧\nU') BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c0))>=((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('{V겧\nU') BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c0))>=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((('{V겧\nU') BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c0))>=((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('{V겧\nU') BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c0))>=((rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) BETWEEN (NULL) AND (CAST(rt0.c2 AS BLOB))), ((1823044908)&(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) BETWEEN (NULL) AND (CAST(rt0.c2 AS BLOB))), ((1823044908)&(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) BETWEEN (NULL) AND (CAST(rt0.c2 AS BLOB))), ((1823044908)&(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) BETWEEN (NULL) AND (CAST(rt0.c2 AS BLOB))), ((1823044908)&(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) BETWEEN (NULL) AND (CAST(rt0.c2 AS BLOB))), ((1823044908)&(rt0.c0))  NULLS LAST;
SELECT * FROM rt0 WHERE ((((+ (rt0.c1))) BETWEEN (((1.724361448E9) IS TRUE)) AND (((rt0.c1) NOT NULL)))) ORDER BY LOWER(rt0.c0 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) BETWEEN (((1.724361448E9) IS TRUE)) AND (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(rt0.c0 COLLATE RTRIM) DESC);
SELECT * FROM rt0 WHERE ((((+ (rt0.c1))) BETWEEN (((1.724361448E9) IS TRUE)) AND (((rt0.c1) NOT NULL)))) ORDER BY LOWER(rt0.c0 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) BETWEEN (((1.724361448E9) IS TRUE)) AND (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(rt0.c0 COLLATE RTRIM) DESC);
SELECT * FROM rt0 WHERE ((((+ (rt0.c1))) BETWEEN (((1.724361448E9) IS TRUE)) AND (((rt0.c1) NOT NULL)))) ORDER BY LOWER(rt0.c0 COLLATE RTRIM) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)-(rt0.c1)) AS REAL)) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 END)OR(DATETIME(rt0.c0, rt0.c2, x''))))OR(((rt0.c1) BETWEEN ('1574242894') AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)-(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 END)OR(DATETIME(rt0.c0, rt0.c2, x''))))OR(((rt0.c1) BETWEEN ('1574242894') AND (rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)-(rt0.c1)) AS REAL)) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 END)OR(DATETIME(rt0.c0, rt0.c2, x''))))OR(((rt0.c1) BETWEEN ('1574242894') AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)-(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 END)OR(DATETIME(rt0.c0, rt0.c2, x''))))OR(((rt0.c1) BETWEEN ('1574242894') AND (rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)-(rt0.c1)) AS REAL)) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 END)OR(DATETIME(rt0.c0, rt0.c2, x''))))OR(((rt0.c1) BETWEEN ('1574242894') AND (rt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((x'36ad')IS((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'36ad')IS((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'36ad')IS((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'36ad')IS((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'36ad')IS((+ (rt0.c1)))));
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)<<(rt0.c0)))) AND ((((rt0.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c2)<<(rt0.c0)))) AND ((((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)<<(rt0.c0)))) AND ((((rt0.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c2)<<(rt0.c0)))) AND ((((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)<<(rt0.c0)))) AND ((((rt0.c2) IS TRUE)))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))&((rt0.c2 IN ())))) ORDER BY (('-1186527678')>=((('') NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))&((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (('-1186527678')>=((('') NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))&((rt0.c2 IN ())))) ORDER BY (('-1186527678')>=((('') NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))&((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (('-1186527678')>=((('') NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))&((rt0.c2 IN ())))) ORDER BY (('-1186527678')>=((('') NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c2)!=(rt0.c0))) NOT BETWEEN ((((rt0.c1))=((rt0.c0)))) AND ('974982040')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)!=(rt0.c0))) NOT BETWEEN ((((rt0.c1))==((rt0.c0)))) AND ('974982040'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)!=(rt0.c0))) NOT BETWEEN ((((rt0.c1))=((rt0.c0)))) AND ('974982040')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)!=(rt0.c0))) NOT BETWEEN ((((rt0.c1))==((rt0.c0)))) AND ('974982040'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)!=(rt0.c0))) NOT BETWEEN ((((rt0.c1))=((rt0.c0)))) AND ('974982040')));
SELECT COUNT(*) FROM rt0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (x'')));
SELECT * FROM rt0 WHERE (((((rt0.c2)>=(0.6367436065444895)))&(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(0.6367436065444895)))&(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)>=(0.6367436065444895)))&(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(0.6367436065444895)))&(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)>=(0.6367436065444895)))&(CAST(rt0.c2 AS BLOB))));
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT * FROM rt0 WHERE (((rt0.c1)LIKE(((rt0.c1) NOTNULL)))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)LIKE(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1)LIKE(((rt0.c1) NOTNULL)))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)LIKE(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1)LIKE(((rt0.c1) NOTNULL)))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((+ ((((rt0.c2))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c2))=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ ((((rt0.c2))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c2))=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ ((((rt0.c2))==((rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS FALSE))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS FALSE))))OR(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS FALSE))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS FALSE))))OR(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS FALSE))))OR(NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'759c');
SELECT SUM(count) FROM (SELECT ALL ((x'759c') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'759c');
SELECT SUM(count) FROM (SELECT ALL ((x'759c') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'759c');
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TOTAL_CHANGES());
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1) NOTNULL) WHEN (- (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END WHEN ((('_')) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)OR(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1) NOTNULL) WHEN (- (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END WHEN ((('_')) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)OR(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1) NOTNULL) WHEN (- (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END WHEN ((('_')) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)OR(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1) NOTNULL) WHEN (- (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END WHEN ((('_')) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)OR(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1) NOTNULL) WHEN (- (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END WHEN ((('_')) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)OR(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)||(''))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)||(''))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)||(''))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)||(''))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)||(''))) ISNULL));
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1))<((rt0.c0, rt0.c0, rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c0, rt0.c1))<((rt0.c0, rt0.c0, rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1))<((rt0.c0, rt0.c0, rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c0, rt0.c1))<((rt0.c0, rt0.c0, rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1))<((rt0.c0, rt0.c0, rt0.c0))) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN ((rt0.c0)+(rt0.c2)) WHEN ((rt0.c2)<=(rt0.c2)) THEN '' COLLATE RTRIM WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN ((rt0.c0)+(rt0.c2)) WHEN ((rt0.c2)<=(rt0.c2)) THEN '' COLLATE RTRIM WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN ((rt0.c0)+(rt0.c2)) WHEN ((rt0.c2)<=(rt0.c2)) THEN '' COLLATE RTRIM WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN ((rt0.c0)+(rt0.c2)) WHEN ((rt0.c2)<=(rt0.c2)) THEN '' COLLATE RTRIM WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN ((rt0.c0)+(rt0.c2)) WHEN ((rt0.c2)<=(rt0.c2)) THEN '' COLLATE RTRIM WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) END);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN ((rt0.c0) NOTNULL) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (rt0.c1 IN ()) WHEN json_remove(rt0.c2, rt0.c1) THEN (((rt0.c0))<((rt0.c2))) END) ORDER BY ((rt0.c1)||(rt0.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN ((rt0.c0) NOTNULL) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (rt0.c1 IN ()) WHEN json_remove(rt0.c2, rt0.c1) THEN (((rt0.c0))<((rt0.c2))) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)||(rt0.c1)) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN ((rt0.c0) NOTNULL) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (rt0.c1 IN ()) WHEN json_remove(rt0.c2, rt0.c1) THEN (((rt0.c0))<((rt0.c2))) END) ORDER BY ((rt0.c1)||(rt0.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN ((rt0.c0) NOTNULL) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (rt0.c1 IN ()) WHEN json_remove(rt0.c2, rt0.c1) THEN (((rt0.c0))<((rt0.c2))) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)||(rt0.c1)) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN ((rt0.c0) NOTNULL) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (rt0.c1 IN ()) WHEN json_remove(rt0.c2, rt0.c1) THEN (((rt0.c0))<((rt0.c2))) END) ORDER BY ((rt0.c1)||(rt0.c1)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))||(0.4318221907005283))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))||(0.4318221907005283))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))||(0.4318221907005283))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))||(0.4318221907005283))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))||(0.4318221907005283))) ORDER BY rt0.c0;
SELECT ALL * FROM rt0 WHERE (((((TYPEOF('(LF⮶/-'))OR(rt0.c0)))AND(((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF('(LF⮶/-'))OR(rt0.c0)))AND(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((TYPEOF('(LF⮶/-'))OR(rt0.c0)))AND(((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF('(LF⮶/-'))OR(rt0.c0)))AND(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((TYPEOF('(LF⮶/-'))OR(rt0.c0)))AND(((rt0.c1) NOT NULL))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)LIKE(x''))) ORDER BY ((rt0.c1)>(rt0.c1)) COLLATE NOCASE  NULLS LAST, '308347726'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)LIKE(x''))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)>(rt0.c1)) COLLATE NOCASE  NULLS LAST, '308347726'  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)LIKE(x''))) ORDER BY ((rt0.c1)>(rt0.c1)) COLLATE NOCASE  NULLS LAST, '308347726'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)LIKE(x''))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)>(rt0.c1)) COLLATE NOCASE  NULLS LAST, '308347726'  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)LIKE(x''))) ORDER BY ((rt0.c1)>(rt0.c1)) COLLATE NOCASE  NULLS LAST, '308347726'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (0.24369290534725374);
SELECT SUM(count) FROM (SELECT ((0.24369290534725374) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.24369290534725374);
SELECT SUM(count) FROM (SELECT ((0.24369290534725374) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.24369290534725374);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)<=(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY (((NOT (rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)<=(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0))) NOTNULL));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)<=(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY (((NOT (rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)<=(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0))) NOTNULL));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)<=(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY (((NOT (rt0.c0))) NOTNULL);
SELECT ALL * FROM rt0 WHERE (CAST(TYPEOF(rt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(TYPEOF(rt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(TYPEOF(rt0.c0) AS TEXT));
SELECT ALL * FROM rt0 WHERE (LIKELY(rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELY(rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELY(rt0.c2) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))) ORDER BY ((((rt0.c1)AND('1754874597')))AND(rt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)AND('1754874597')))AND(rt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))) ORDER BY ((((rt0.c1)AND('1754874597')))AND(rt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)AND('1754874597')))AND(rt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))))) ORDER BY ((((rt0.c1)AND('1754874597')))AND(rt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))-(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))-(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))-(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))-(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))-(rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c1))LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((rt0.c2 IN (rt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c1))LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c0))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c1))LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((rt0.c2 IN (rt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c1))LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c0))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c1))LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((rt0.c2 IN (rt0.c0))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB))<=(CASE WHEN rt0.c0 THEN 0.5492368273029599 ELSE rt0.c2 END))) ORDER BY 0.7857854114809573  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))<=(CASE WHEN rt0.c0 THEN 0.5492368273029599 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY 0.7857854114809573  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB))<=(CASE WHEN rt0.c0 THEN 0.5492368273029599 ELSE rt0.c2 END))) ORDER BY 0.7857854114809573  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))<=(CASE WHEN rt0.c0 THEN 0.5492368273029599 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY 0.7857854114809573  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB))<=(CASE WHEN rt0.c0 THEN 0.5492368273029599 ELSE rt0.c2 END))) ORDER BY 0.7857854114809573  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN rt0.c0 THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST, ((0.8327910023791143)+(((rt0.c0)|(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST, ((0.8327910023791143)+(((rt0.c0)|(rt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN rt0.c0 THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST, ((0.8327910023791143)+(((rt0.c0)|(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST, ((0.8327910023791143)+(((rt0.c0)|(rt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 IN (rt0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN rt0.c0 THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST, ((0.8327910023791143)+(((rt0.c0)|(rt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((0.2996128074601352 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.2996128074601352 IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((0.2996128074601352 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.2996128074601352 IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((0.2996128074601352 IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((NULL)%(rt0.c2)) COLLATE BINARY) ORDER BY (((((rt0.c2 IN (rt0.c2)))OR((~ (rt0.c0)))))OR(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2 IN (rt0.c2)))OR((~ (rt0.c0)))))OR(rt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)%(rt0.c2)) COLLATE BINARY) ORDER BY (((((rt0.c2 IN (rt0.c2)))OR((~ (rt0.c0)))))OR(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2 IN (rt0.c2)))OR((~ (rt0.c0)))))OR(rt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)%(rt0.c2)) COLLATE BINARY) ORDER BY (((((rt0.c2 IN (rt0.c2)))OR((~ (rt0.c0)))))OR(rt0.c0))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST((('-1251245564') ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-1251245564') ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((('-1251245564') ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-1251245564') ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((('-1251245564') ISNULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND('xlWq')))AND(((rt0.c1) BETWEEN (x'114c9c49') AND (rt0.c1)))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND('xlWq')))AND(((rt0.c1) BETWEEN (x'114c9c49') AND (rt0.c1)))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND('xlWq')))AND(((rt0.c1) BETWEEN (x'114c9c49') AND (rt0.c1)))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND('xlWq')))AND(((rt0.c1) BETWEEN (x'114c9c49') AND (rt0.c1)))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND('xlWq')))AND(((rt0.c1) BETWEEN (x'114c9c49') AND (rt0.c1)))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(rt0.c2)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)-(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)-(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)-(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)-(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)-(rt0.c1)))));
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))|(CAST(NULL AS BLOB)))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))|(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))|(CAST(NULL AS BLOB)))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))|(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))|(CAST(NULL AS BLOB)))) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CASE WHEN (~ (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY x'');
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CASE WHEN (~ (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY x'');
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CASE WHEN (~ (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY x'';
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 COLLATE NOCASE WHEN (((x''))!=((rt0.c0))) THEN '!풨XIai' COLLATE BINARY WHEN (+ (rt0.c0)) THEN (rt0.c0 IN ()) WHEN CAST(rt0.c2 AS REAL) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c1)IS(rt0.c2)) THEN TRIM(rt0.c0, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 COLLATE NOCASE WHEN (((x''))!=((rt0.c0))) THEN '!풨XIai' COLLATE BINARY WHEN (+ (rt0.c0)) THEN (rt0.c0 IN ()) WHEN CAST(rt0.c2 AS REAL) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c1)IS(rt0.c2)) THEN TRIM(rt0.c0, rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 COLLATE NOCASE WHEN (((x''))!=((rt0.c0))) THEN '!풨XIai' COLLATE BINARY WHEN (+ (rt0.c0)) THEN (rt0.c0 IN ()) WHEN CAST(rt0.c2 AS REAL) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c1)IS(rt0.c2)) THEN TRIM(rt0.c0, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 COLLATE NOCASE WHEN (((x''))!=((rt0.c0))) THEN '!풨XIai' COLLATE BINARY WHEN (+ (rt0.c0)) THEN (rt0.c0 IN ()) WHEN CAST(rt0.c2 AS REAL) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c1)IS(rt0.c2)) THEN TRIM(rt0.c0, rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 COLLATE NOCASE WHEN (((x''))!=((rt0.c0))) THEN '!풨XIai' COLLATE BINARY WHEN (+ (rt0.c0)) THEN (rt0.c0 IN ()) WHEN CAST(rt0.c2 AS REAL) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c1)IS(rt0.c2)) THEN TRIM(rt0.c0, rt0.c0) END);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((0.15583274286199134)) AND (('-}'))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((0.15583274286199134)) AND (('-}')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((0.15583274286199134)) AND (('-}'))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((0.15583274286199134)) AND (('-}')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((0.15583274286199134)) AND (('-}'))));
SELECT * FROM rt0 WHERE ((+ ((rt0.c2 IN ())))) ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))*((rt0.c1 IN ()))), ((((rt0.c1 COLLATE RTRIM)OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE BINARY))  NULLS FIRST, ((0.7205877109999639)||(((rt0.c1)>(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))*((rt0.c1 IN ()))), ((((rt0.c1 COLLATE RTRIM)OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE BINARY))  NULLS FIRST, ((0.7205877109999639)||(((rt0.c1)>(rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((+ ((rt0.c2 IN ())))) ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))*((rt0.c1 IN ()))), ((((rt0.c1 COLLATE RTRIM)OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE BINARY))  NULLS FIRST, ((0.7205877109999639)||(((rt0.c1)>(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))*((rt0.c1 IN ()))), ((((rt0.c1 COLLATE RTRIM)OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE BINARY))  NULLS FIRST, ((0.7205877109999639)||(((rt0.c1)>(rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((+ ((rt0.c2 IN ())))) ORDER BY ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))*((rt0.c1 IN ()))), ((((rt0.c1 COLLATE RTRIM)OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE BINARY))  NULLS FIRST, ((0.7205877109999639)||(((rt0.c1)>(rt0.c2)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c0)||(NULL)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c0)||(NULL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c0)||(NULL)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c0)||(NULL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c0)||(NULL)))));
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c1))) BETWEEN ((x'' IN (rt0.c1))) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) BETWEEN ((x'' IN (rt0.c1))) AND (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c1))) BETWEEN ((x'' IN (rt0.c1))) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) BETWEEN ((x'' IN (rt0.c1))) AND (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c1))) BETWEEN ((x'' IN (rt0.c1))) AND (rt0.c2)));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c2 AS BLOB))/(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB))/(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c2 AS BLOB))/(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB))/(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c2 AS BLOB))/(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE));
SELECT ALL * FROM rt0 WHERE (TIME(rt0.c2, ((rt0.c2)LIKE(rt0.c1)), rt0.c0));
SELECT SUM(count) FROM (SELECT ((TIME(rt0.c2, ((rt0.c2)LIKE(rt0.c1)), rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TIME(rt0.c2, ((rt0.c2)LIKE(rt0.c1)), rt0.c0));
SELECT SUM(count) FROM (SELECT ((TIME(rt0.c2, ((rt0.c2)LIKE(rt0.c1)), rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TIME(rt0.c2, ((rt0.c2)LIKE(rt0.c1)), rt0.c0));
SELECT ALL COUNT(*) FROM rt0 WHERE (INSTR(json_array_length(rt0.c1), CAST(rt0.c1 AS TEXT))) ORDER BY (+ (TYPEOF(DISTINCT rt0.c0))) DESC  NULLS LAST, (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((INSTR(json_array_length(rt0.c1), CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM rt0 ORDER BY (+ (TYPEOF(DISTINCT rt0.c0))) DESC  NULLS LAST, (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (INSTR(json_array_length(rt0.c1), CAST(rt0.c1 AS TEXT))) ORDER BY (+ (TYPEOF(DISTINCT rt0.c0))) DESC  NULLS LAST, (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((INSTR(json_array_length(rt0.c1), CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM rt0 ORDER BY (+ (TYPEOF(DISTINCT rt0.c0))) DESC  NULLS LAST, (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (INSTR(json_array_length(rt0.c1), CAST(rt0.c1 AS TEXT))) ORDER BY (+ (TYPEOF(DISTINCT rt0.c0))) DESC  NULLS LAST, (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) IN ());
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, x'b151', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, 'SP', 'g&', rt0.c0)))) AND (PRINTF(rt0.c0)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, x'b151', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, 'SP', 'g&', rt0.c0)))) AND (PRINTF(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, x'b151', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, 'SP', 'g&', rt0.c0)))) AND (PRINTF(rt0.c0)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, x'b151', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, 'SP', 'g&', rt0.c0)))) AND (PRINTF(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, x'b151', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, 'SP', 'g&', rt0.c0)))) AND (PRINTF(rt0.c0)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c1)AND(294309930)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(294309930)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c1)AND(294309930)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(294309930)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c1)AND(294309930)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)) AS NUMERIC));
SELECT * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('');
SELECT COUNT(*) FROM rt0 WHERE (TRIM(CASE rt0.c2  WHEN rt0.c2 THEN 0xffffffffa21b9592 END, ((rt0.c1) ISNULL))) ORDER BY (~ ((('XUk') ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE rt0.c2  WHEN rt0.c2 THEN 0xffffffffa21b9592 END, ((rt0.c1) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((('XUk') ISNULL))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(CASE rt0.c2  WHEN rt0.c2 THEN 0xffffffffa21b9592 END, ((rt0.c1) ISNULL))) ORDER BY (~ ((('XUk') ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE rt0.c2  WHEN rt0.c2 THEN 0xffffffffa21b9592 END, ((rt0.c1) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((('XUk') ISNULL))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(CASE rt0.c2  WHEN rt0.c2 THEN 0xffffffffa21b9592 END, ((rt0.c1) ISNULL))) ORDER BY (~ ((('XUk') ISNULL))) ASC;
SELECT * FROM rt0 WHERE ('핷E') ORDER BY (((((('')OR(rt0.c2)))AND(rt0.c2)))%(rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (('핷E') IS TRUE)  as count FROM rt0 ORDER BY (((((('')OR(rt0.c2)))AND(rt0.c2)))%(rt0.c2 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE ('핷E') ORDER BY (((((('')OR(rt0.c2)))AND(rt0.c2)))%(rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (('핷E') IS TRUE)  as count FROM rt0 ORDER BY (((((('')OR(rt0.c2)))AND(rt0.c2)))%(rt0.c2 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE ('핷E') ORDER BY (((((('')OR(rt0.c2)))AND(rt0.c2)))%(rt0.c2 COLLATE NOCASE));
SELECT * FROM rt0 WHERE ((~ ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ ((- (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CAST(NULL AS REAL);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULL AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CAST(NULL AS REAL);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULL AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CAST(NULL AS REAL);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c0 AS NUMERIC))<<((- (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC))<<((- (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c0 AS NUMERIC))<<((- (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC))<<((- (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c0 AS NUMERIC))<<((- (rt0.c2)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL)) ORDER BY ((rt0.c2) NOT NULL) DESC, ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) AND (((rt0.c0)!=(rt0.c1)))) DESC  NULLS LAST, ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))<>(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOT NULL) DESC, ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) AND (((rt0.c0)!=(rt0.c1)))) DESC  NULLS LAST, ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))!=(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL)) ORDER BY ((rt0.c2) NOT NULL) DESC, ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) AND (((rt0.c0)!=(rt0.c1)))) DESC  NULLS LAST, ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))<>(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOT NULL) DESC, ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) AND (((rt0.c0)!=(rt0.c1)))) DESC  NULLS LAST, ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))!=(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL)) ORDER BY ((rt0.c2) NOT NULL) DESC, ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) AND (((rt0.c0)!=(rt0.c1)))) DESC  NULLS LAST, ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))<>(CAST(rt0.c1 AS INTEGER)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) IS TRUE)) ORDER BY (((rt0.c1)OR(rt0.c1)) IN ()) ASC, ((((((3.02253697E8) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND((- (rt0.c0)))))AND(((((((((x'')AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) DESC, CASE rt0.c1  WHEN (((rt0.c2))!=((rt0.c1))) THEN 'z ' ELSE ((rt0.c1)OR(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)OR(rt0.c1)) IN ()) ASC, ((((((3.02253697E8) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND((- (rt0.c0)))))AND(((((((((x'')AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) DESC, CASE rt0.c1  WHEN (((rt0.c2))<>((rt0.c1))) THEN 'z ' ELSE ((rt0.c1)OR(rt0.c1)) END);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) IS TRUE)) ORDER BY (((rt0.c1)OR(rt0.c1)) IN ()) ASC, ((((((3.02253697E8) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND((- (rt0.c0)))))AND(((((((((x'')AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) DESC, CASE rt0.c1  WHEN (((rt0.c2))!=((rt0.c1))) THEN 'z ' ELSE ((rt0.c1)OR(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)OR(rt0.c1)) IN ()) ASC, ((((((3.02253697E8) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND((- (rt0.c0)))))AND(((((((((x'')AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) DESC, CASE rt0.c1  WHEN (((rt0.c2))<>((rt0.c1))) THEN 'z ' ELSE ((rt0.c1)OR(rt0.c1)) END);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) IS TRUE)) ORDER BY (((rt0.c1)OR(rt0.c1)) IN ()) ASC, ((((((3.02253697E8) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND((- (rt0.c0)))))AND(((((((((x'')AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) DESC, CASE rt0.c1  WHEN (((rt0.c2))!=((rt0.c1))) THEN 'z ' ELSE ((rt0.c1)OR(rt0.c1)) END;
SELECT * FROM rt0 WHERE (CAST((- (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((- (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((- (rt0.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) BETWEEN (x'') AND (rt0.c2)))AND(CASE 0Xffffffff99b9dc3b  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)))OR(((rt0.c2)LIKE(rt0.c0)))))OR(('C\{N}^&' IN (rt0.c1)))))OR(((rt0.c2)IS NOT(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) BETWEEN (x'') AND (rt0.c2)))AND(CASE 0xffffffff99b9dc3b  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)))OR(((rt0.c2)LIKE(rt0.c0)))))OR(('C\{N}^&' IN (rt0.c1)))))OR(((rt0.c2)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) BETWEEN (x'') AND (rt0.c2)))AND(CASE 0Xffffffff99b9dc3b  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)))OR(((rt0.c2)LIKE(rt0.c0)))))OR(('C\{N}^&' IN (rt0.c1)))))OR(((rt0.c2)IS NOT(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) BETWEEN (x'') AND (rt0.c2)))AND(CASE 0xffffffff99b9dc3b  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)))OR(((rt0.c2)LIKE(rt0.c0)))))OR(('C\{N}^&' IN (rt0.c1)))))OR(((rt0.c2)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) BETWEEN (x'') AND (rt0.c2)))AND(CASE 0Xffffffff99b9dc3b  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)))OR(((rt0.c2)LIKE(rt0.c0)))))OR(('C\{N}^&' IN (rt0.c1)))))OR(((rt0.c2)IS NOT(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))|(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))|(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))|(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))|(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))|(NULL)));
SELECT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, '-722757607', rt0.c0))) AS TEXT)) ORDER BY 0.19674663842101903 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, '-722757607', rt0.c0))) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY 0.19674663842101903 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, '-722757607', rt0.c0))) AS TEXT)) ORDER BY 0.19674663842101903 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, '-722757607', rt0.c0))) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY 0.19674663842101903 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, '-722757607', rt0.c0))) AS TEXT)) ORDER BY 0.19674663842101903 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ('-1350554698');
SELECT SUM(count) FROM (SELECT (('-1350554698') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-1350554698');
SELECT SUM(count) FROM (SELECT (('-1350554698') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-1350554698');
SELECT COUNT(*) FROM rt0 WHERE (0.9112900115197263);
SELECT SUM(count) FROM (SELECT ALL ((0.9112900115197263) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.9112900115197263);
SELECT SUM(count) FROM (SELECT ALL ((0.9112900115197263) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.9112900115197263);
SELECT ALL COUNT(*) FROM rt0 WHERE (LTRIM((((rt0.c1, rt0.c2, rt0.c1, rt0.c2, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c1))), ((rt0.c0) IS TRUE))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((LTRIM((((rt0.c1, rt0.c2, rt0.c1, rt0.c2, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c1))), ((rt0.c0) IS TRUE))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (LTRIM((((rt0.c1, rt0.c2, rt0.c1, rt0.c2, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c1))), ((rt0.c0) IS TRUE))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((LTRIM((((rt0.c1, rt0.c2, rt0.c1, rt0.c2, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c1))), ((rt0.c0) IS TRUE))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (LTRIM((((rt0.c1, rt0.c2, rt0.c1, rt0.c2, rt0.c1))<((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c1))), ((rt0.c0) IS TRUE))) ORDER BY rt0.c2 DESC;
SELECT COUNT(*) FROM rt0 WHERE ('-40492538') ORDER BY ((CAST(rt0.c1 AS BLOB)) NOTNULL) ASC, ((((((((((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(IFNULL(DISTINCT rt0.c2, rt0.c0))))OR(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c1)))))AND(ABS(rt0.c0))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-40492538') IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB)) NOTNULL) ASC, ((((((((((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(IFNULL(DISTINCT rt0.c2, rt0.c0))))OR(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c1)))))AND(ABS(rt0.c0))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ('-40492538') ORDER BY ((CAST(rt0.c1 AS BLOB)) NOTNULL) ASC, ((((((((((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(IFNULL(DISTINCT rt0.c2, rt0.c0))))OR(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c1)))))AND(ABS(rt0.c0))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-40492538') IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB)) NOTNULL) ASC, ((((((((((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(IFNULL(DISTINCT rt0.c2, rt0.c0))))OR(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c1)))))AND(ABS(rt0.c0))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ('-40492538') ORDER BY ((CAST(rt0.c1 AS BLOB)) NOTNULL) ASC, ((((((((((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(IFNULL(DISTINCT rt0.c2, rt0.c0))))OR(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c1)))))AND(ABS(rt0.c0))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c2)<>(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c2)!=(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c2)<>(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c2)!=(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) BETWEEN (((rt0.c2)<>(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))IS(CASE WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))IS(CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))IS(CASE WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))IS(CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))IS(CASE WHEN rt0.c0 THEN rt0.c1 END)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))/((rt0.c2 IN ())))) ORDER BY (((rt0.c1))>=((rt0.c0))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))/((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1))>=((rt0.c0))) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))/((rt0.c2 IN ())))) ORDER BY (((rt0.c1))>=((rt0.c0))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))/((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1))>=((rt0.c0))) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))/((rt0.c2 IN ())))) ORDER BY (((rt0.c1))>=((rt0.c0))) COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0))<((rt0.c0))) IN ())) ORDER BY NULL ASC, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0))<((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC, rt0.c0  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0))<((rt0.c0))) IN ())) ORDER BY NULL ASC, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0))<((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC, rt0.c0  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0))<((rt0.c0))) IN ())) ORDER BY NULL ASC, rt0.c0  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c2)IS(1849483720)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((1724361448) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0)|(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c2)IS(1849483720)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((1724361448) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0)|(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c2)IS(1849483720)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((1724361448) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0)|(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c2)IS(1849483720)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((1724361448) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0)|(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c2)IS(1849483720)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((1724361448) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0)|(rt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE (0.5969752286484337) ORDER BY '1451681006' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.5969752286484337) IS TRUE)  as count FROM rt0 ORDER BY '1451681006' COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (0.5969752286484337) ORDER BY '1451681006' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.5969752286484337) IS TRUE)  as count FROM rt0 ORDER BY '1451681006' COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (0.5969752286484337) ORDER BY '1451681006' COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2)*(rt0.c2))  WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0))<=((rt0.c0))) WHEN UPPER(rt0.c2) THEN (((rt0.c2, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))) WHEN CAST(rt0.c2 AS BLOB) THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1)GLOB(rt0.c0)) THEN ((NULL)>(rt0.c2)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)*(rt0.c2))  WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0))<=((rt0.c0))) WHEN UPPER(rt0.c2) THEN (((rt0.c2, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))) WHEN CAST(rt0.c2 AS BLOB) THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1)GLOB(rt0.c0)) THEN ((NULL)>(rt0.c2)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2)*(rt0.c2))  WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0))<=((rt0.c0))) WHEN UPPER(rt0.c2) THEN (((rt0.c2, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))) WHEN CAST(rt0.c2 AS BLOB) THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1)GLOB(rt0.c0)) THEN ((NULL)>(rt0.c2)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)*(rt0.c2))  WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0))<=((rt0.c0))) WHEN UPPER(rt0.c2) THEN (((rt0.c2, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))) WHEN CAST(rt0.c2 AS BLOB) THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1)GLOB(rt0.c0)) THEN ((NULL)>(rt0.c2)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2)*(rt0.c2))  WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (((rt0.c0))<=((rt0.c0))) WHEN UPPER(rt0.c2) THEN (((rt0.c2, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))) WHEN CAST(rt0.c2 AS BLOB) THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1)GLOB(rt0.c0)) THEN ((NULL)>(rt0.c2)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c2 COLLATE RTRIM END);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0))) NOT NULL)) ORDER BY ((((((((((((rt0.c0)AND(rt0.c1)))AND(0.2492443356669818)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(rt0.c2)))AND(((4.71377092E8) NOTNULL))))OR(((rt0.c2)OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c0)AND(rt0.c1)))AND(0.2492443356669818)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(rt0.c2)))AND(((4.71377092E8) NOTNULL))))OR(((rt0.c2)OR(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0))) NOT NULL)) ORDER BY ((((((((((((rt0.c0)AND(rt0.c1)))AND(0.2492443356669818)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(rt0.c2)))AND(((4.71377092E8) NOTNULL))))OR(((rt0.c2)OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c0)AND(rt0.c1)))AND(0.2492443356669818)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(rt0.c2)))AND(((4.71377092E8) NOTNULL))))OR(((rt0.c2)OR(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0))) NOT NULL)) ORDER BY ((((((((((((rt0.c0)AND(rt0.c1)))AND(0.2492443356669818)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(rt0.c2)))AND(((4.71377092E8) NOTNULL))))OR(((rt0.c2)OR(rt0.c2)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN 'MG\8~' END) AND ((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((x'', rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN 'MG\8~' END) AND ((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((x'', rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN 'MG\8~' END) AND ((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((x'', rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN 'MG\8~' END) AND ((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((x'', rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN 'MG\8~' END) AND ((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((x'', rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1)|(rt0.c2))))) ORDER BY ((rt0.c0 COLLATE BINARY)=(((rt0.c0)<=(rt0.c2)))), (((rt0.c2 IN (rt0.c2, rt0.c0))) BETWEEN ((~ (rt0.c1))) AND (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)|(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE BINARY)=(((rt0.c0)<=(rt0.c2)))), (((rt0.c2 IN (rt0.c2, rt0.c0))) BETWEEN ((~ (rt0.c1))) AND (x''))  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1)|(rt0.c2))))) ORDER BY ((rt0.c0 COLLATE BINARY)=(((rt0.c0)<=(rt0.c2)))), (((rt0.c2 IN (rt0.c2, rt0.c0))) BETWEEN ((~ (rt0.c1))) AND (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)|(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE BINARY)=(((rt0.c0)<=(rt0.c2)))), (((rt0.c2 IN (rt0.c2, rt0.c0))) BETWEEN ((~ (rt0.c1))) AND (x''))  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1)|(rt0.c2))))) ORDER BY ((rt0.c0 COLLATE BINARY)=(((rt0.c0)<=(rt0.c2)))), (((rt0.c2 IN (rt0.c2, rt0.c0))) BETWEEN ((~ (rt0.c1))) AND (x''))  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c1)|(rt0.c2)))<(((rt0.c1)IS NOT(rt0.c2))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))||(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS LAST, ((CASE WHEN rt0.c0 THEN rt0.c2 END) BETWEEN ((((rt0.c0))<=((rt0.c1)))) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)|(rt0.c2)))<(((rt0.c1)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))||(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS LAST, ((CASE WHEN rt0.c0 THEN rt0.c2 END) BETWEEN ((((rt0.c0))<=((rt0.c1)))) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c1)|(rt0.c2)))<(((rt0.c1)IS NOT(rt0.c2))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))||(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS LAST, ((CASE WHEN rt0.c0 THEN rt0.c2 END) BETWEEN ((((rt0.c0))<=((rt0.c1)))) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)|(rt0.c2)))<(((rt0.c1)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))||(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS LAST, ((CASE WHEN rt0.c0 THEN rt0.c2 END) BETWEEN ((((rt0.c0))<=((rt0.c1)))) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c1)|(rt0.c2)))<(((rt0.c1)IS NOT(rt0.c2))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))||(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS LAST, ((CASE WHEN rt0.c0 THEN rt0.c2 END) BETWEEN ((((rt0.c0))<=((rt0.c1)))) AND (((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN rt0.c1 COLLATE BINARY ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN SQLITE_SOURCE_ID() THEN rt0.c1 COLLATE BINARY ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN rt0.c1 COLLATE BINARY ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN SQLITE_SOURCE_ID() THEN rt0.c1 COLLATE BINARY ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN rt0.c1 COLLATE BINARY ELSE (rt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c2 COLLATE RTRIM))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS BLOB) ASC  NULLS LAST, (rt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST, (((~ (rt0.c2))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS BLOB) ASC  NULLS LAST, (rt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST, (((~ (rt0.c2))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c2 COLLATE RTRIM))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS BLOB) ASC  NULLS LAST, (rt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST, (((~ (rt0.c2))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS BLOB) ASC  NULLS LAST, (rt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST, (((~ (rt0.c2))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c2 COLLATE RTRIM))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS BLOB) ASC  NULLS LAST, (rt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST, (((~ (rt0.c2))) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)IS(2055191337))))<(((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)IS(2055191337))))<(((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)IS(2055191337))))<(((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)IS(2055191337))))<(((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)IS(2055191337))))<(((~ (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))*(LIKE(rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))*(LIKE(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))*(LIKE(rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))*(LIKE(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))*(LIKE(rt0.c2, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c1)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c1)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c1)) IS FALSE));
SELECT ALL * FROM rt0 WHERE (LOWER((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((- (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LOWER((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((- (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LOWER((- (rt0.c1))));
SELECT * FROM rt0 WHERE (((0.8899208674804052)IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.8899208674804052)IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((0.8899208674804052)IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.8899208674804052)IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((0.8899208674804052)IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL)) ORDER BY ((((((rt0.c0)OR(0Xffffffffae03bd27)))OR(rt0.c0)))<<((- (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(0xffffffffae03bd27)))OR(rt0.c0)))<<((- (rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL)) ORDER BY ((((((rt0.c0)OR(0Xffffffffae03bd27)))OR(rt0.c0)))<<((- (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(0xffffffffae03bd27)))OR(rt0.c0)))<<((- (rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL)) ORDER BY ((((((rt0.c0)OR(0Xffffffffae03bd27)))OR(rt0.c0)))<<((- (rt0.c0)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL)) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)||(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)||(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)||(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)||(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)||(rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c0) NOT NULL)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1))=((rt0.c1))) IN ())) ORDER BY COALESCE((~ ('0.7830170824676034')), CASE WHEN rt0.c1 THEN '-1010567293' END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1))=((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY COALESCE((~ ('0.7830170824676034')), CASE WHEN rt0.c1 THEN '-1010567293' END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1))=((rt0.c1))) IN ())) ORDER BY COALESCE((~ ('0.7830170824676034')), CASE WHEN rt0.c1 THEN '-1010567293' END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1))=((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY COALESCE((~ ('0.7830170824676034')), CASE WHEN rt0.c1 THEN '-1010567293' END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1))=((rt0.c1))) IN ())) ORDER BY COALESCE((~ ('0.7830170824676034')), CASE WHEN rt0.c1 THEN '-1010567293' END) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)<<(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<<(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)<<(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<<(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)<<(rt0.c0)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c1 AS INTEGER)))<=((((rt0.c1)/(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS INTEGER)))<=((((rt0.c1)/(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c1 AS INTEGER)))<=((((rt0.c1)/(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS INTEGER)))<=((((rt0.c1)/(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c1 AS INTEGER)))<=((((rt0.c1)/(rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY '346547171' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY '346547171' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY '346547171' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY '346547171' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY '346547171' DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((0xffffffffa21b9592))>((((rt0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((0Xffffffffa21b9592))>((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((0xffffffffa21b9592))>((((rt0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((0Xffffffffa21b9592))>((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((0xffffffffa21b9592))>((((rt0.c1) IS TRUE)))));
SELECT * FROM rt0 WHERE ((+ (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2, x'', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, '', rt0.c0)))) NOT BETWEEN (((0.18027829806589213) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c0) NOT NULL)))) ORDER BY ((((rt0.c0)+(rt0.c1))) NOT BETWEEN (0.19169046868109874) AND (((0.1963668959366287)AND(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, x'', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, '', rt0.c0)))) NOT BETWEEN (((0.18027829806589213) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)+(rt0.c1))) NOT BETWEEN (0.19169046868109874) AND (((0.1963668959366287)AND(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2, x'', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, '', rt0.c0)))) NOT BETWEEN (((0.18027829806589213) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c0) NOT NULL)))) ORDER BY ((((rt0.c0)+(rt0.c1))) NOT BETWEEN (0.19169046868109874) AND (((0.1963668959366287)AND(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, x'', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, '', rt0.c0)))) NOT BETWEEN (((0.18027829806589213) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)+(rt0.c1))) NOT BETWEEN (0.19169046868109874) AND (((0.1963668959366287)AND(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2, x'', rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, '', rt0.c0)))) NOT BETWEEN (((0.18027829806589213) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c0) NOT NULL)))) ORDER BY ((((rt0.c0)+(rt0.c1))) NOT BETWEEN (0.19169046868109874) AND (((0.1963668959366287)AND(rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((+ ((~ (rt0.c1))))) ORDER BY (0.1691831773678074 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (0.1691831773678074 IN ())  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((+ ((~ (rt0.c1))))) ORDER BY (0.1691831773678074 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (0.1691831773678074 IN ())  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((+ ((~ (rt0.c1))))) ORDER BY (0.1691831773678074 IN ())  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0))) IS FALSE)) ORDER BY LIKELIHOOD(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)), 0.2806216893882024) DESC  NULLS LAST, (((((NULL))>=((rt0.c2))))&(rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)), 0.2806216893882024) DESC  NULLS LAST, (((((NULL))>=((rt0.c2))))&(rt0.c2 COLLATE NOCASE)) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0))) IS FALSE)) ORDER BY LIKELIHOOD(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)), 0.2806216893882024) DESC  NULLS LAST, (((((NULL))>=((rt0.c2))))&(rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)), 0.2806216893882024) DESC  NULLS LAST, (((((NULL))>=((rt0.c2))))&(rt0.c2 COLLATE NOCASE)) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0))) IS FALSE)) ORDER BY LIKELIHOOD(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)), 0.2806216893882024) DESC  NULLS LAST, (((((NULL))>=((rt0.c2))))&(rt0.c2 COLLATE NOCASE)) DESC;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c0 AS INTEGER))%((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY ((IFNULL(rt0.c0, rt0.c1)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))%((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((IFNULL(rt0.c0, rt0.c1)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c0 AS INTEGER))%((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY ((IFNULL(rt0.c0, rt0.c1)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))%((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((IFNULL(rt0.c0, rt0.c1)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c0 AS INTEGER))%((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY ((IFNULL(rt0.c0, rt0.c1)) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(CAST(x'' AS INTEGER), 0.7050105242569187));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(x'' AS INTEGER), 0.7050105242569187)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(CAST(x'' AS INTEGER), 0.7050105242569187));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(x'' AS INTEGER), 0.7050105242569187)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(CAST(x'' AS INTEGER), 0.7050105242569187));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) NOTNULL)) ORDER BY ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (((rt0.c0)*(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c1 END) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (((rt0.c0)*(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) NOTNULL)) ORDER BY ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (((rt0.c0)*(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c1 END) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (((rt0.c0)*(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) NOTNULL)) ORDER BY ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (((rt0.c0)*(rt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NULL IN (((rt0.c1)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NULL IN (((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NULL IN (((rt0.c1)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NULL IN (((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NULL IN (((rt0.c1)*(rt0.c2)))));
SELECT * FROM rt0 WHERE ((('2112080642' COLLATE NOCASE)AND(LIKELIHOOD(DISTINCT rt0.c0, 0.18627741105436646)))) ORDER BY ((x'')IS(('862548286' IN ())));
SELECT SUM(count) FROM (SELECT (((('2112080642' COLLATE NOCASE)AND(LIKELIHOOD(DISTINCT rt0.c0, 0.18627741105436646)))) IS TRUE)  as count FROM rt0 ORDER BY ((x'')IS(('862548286' IN ()))));
SELECT * FROM rt0 WHERE ((('2112080642' COLLATE NOCASE)AND(LIKELIHOOD(DISTINCT rt0.c0, 0.18627741105436646)))) ORDER BY ((x'')IS(('862548286' IN ())));
SELECT SUM(count) FROM (SELECT (((('2112080642' COLLATE NOCASE)AND(LIKELIHOOD(DISTINCT rt0.c0, 0.18627741105436646)))) IS TRUE)  as count FROM rt0 ORDER BY ((x'')IS(('862548286' IN ()))));
SELECT * FROM rt0 WHERE ((('2112080642' COLLATE NOCASE)AND(LIKELIHOOD(DISTINCT rt0.c0, 0.18627741105436646)))) ORDER BY ((x'')IS(('862548286' IN ())));
SELECT * FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0)))==((rt0.c0 IN (''))))) ORDER BY rt0.c2, CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(rt0.c0)))==((rt0.c0 IN (''))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0)))==((rt0.c0 IN (''))))) ORDER BY rt0.c2, CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(rt0.c0)))==((rt0.c0 IN (''))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0)))==((rt0.c0 IN (''))))) ORDER BY rt0.c2, CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 WHERE (((rt0.c1)>>(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>>(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)>>(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>>(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)>>(NULL)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN (+ (rt0.c0)) END) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c2 AS TEXT) THEN (+ (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN (+ (rt0.c0)) END) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c2 AS TEXT) THEN (+ (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN (+ (rt0.c0)) END) ORDER BY rt0.c2 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((rt0.c1 IN (x''))))) ORDER BY ((((rt0.c1)-(rt0.c2)))<(CHANGES())), CASE ((rt0.c2)>(rt0.c1))  WHEN ((rt0.c1)*(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END END;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN (x''))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)-(rt0.c2)))<(CHANGES())), CASE ((rt0.c2)>(rt0.c1))  WHEN ((rt0.c1)*(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((rt0.c1 IN (x''))))) ORDER BY ((((rt0.c1)-(rt0.c2)))<(CHANGES())), CASE ((rt0.c2)>(rt0.c1))  WHEN ((rt0.c1)*(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END END;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN (x''))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)-(rt0.c2)))<(CHANGES())), CASE ((rt0.c2)>(rt0.c1))  WHEN ((rt0.c1)*(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((rt0.c1 IN (x''))))) ORDER BY ((((rt0.c1)-(rt0.c2)))<(CHANGES())), CASE ((rt0.c2)>(rt0.c1))  WHEN ((rt0.c1)*(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END END;
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c2)IS NOT(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c2)IS NOT(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c2)IS NOT(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c2)IS NOT(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c2)IS NOT(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END, rt0.c2 COLLATE BINARY))>=((0x179d3815, (rt0.c2 IN ()), json_quote(rt0.c2))))) ORDER BY CASE WHEN x'' THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END ELSE 0.9375625999611663 END  NULLS LAST, ((((rt0.c2 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND('m[\n!>~'));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END, rt0.c2 COLLATE BINARY))>=((0x179d3815, (rt0.c2 IN ()), json_quote(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN x'' THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END ELSE 0.9375625999611663 END  NULLS LAST, ((((rt0.c2 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND('m[\n!>~')));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END, rt0.c2 COLLATE BINARY))>=((0x179d3815, (rt0.c2 IN ()), json_quote(rt0.c2))))) ORDER BY CASE WHEN x'' THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END ELSE 0.9375625999611663 END  NULLS LAST, ((((rt0.c2 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND('m[\n!>~'));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END, rt0.c2 COLLATE BINARY))>=((0x179d3815, (rt0.c2 IN ()), json_quote(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN x'' THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END ELSE 0.9375625999611663 END  NULLS LAST, ((((rt0.c2 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND('m[\n!>~')));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END, rt0.c2 COLLATE BINARY))>=((0x179d3815, (rt0.c2 IN ()), json_quote(rt0.c2))))) ORDER BY CASE WHEN x'' THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END ELSE 0.9375625999611663 END  NULLS LAST, ((((rt0.c2 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND('m[\n!>~'));
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE '>怓Q(' END))) ORDER BY ((rt0.c0 IN ()) IN ()), LIKELY(rt0.c1) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE '>怓Q(' END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 IN ()) IN ()), LIKELY(rt0.c1) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE '>怓Q(' END))) ORDER BY ((rt0.c0 IN ()) IN ()), LIKELY(rt0.c1) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE '>怓Q(' END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 IN ()) IN ()), LIKELY(rt0.c1) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE '>怓Q(' END))) ORDER BY ((rt0.c0 IN ()) IN ()), LIKELY(rt0.c1) ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))||(((rt0.c1)IS NOT(0.6287980669648282)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))||(((rt0.c1)IS NOT(0.6287980669648282))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))||(((rt0.c1)IS NOT(0.6287980669648282)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))||(((rt0.c1)IS NOT(0.6287980669648282))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))||(((rt0.c1)IS NOT(0.6287980669648282)))));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))<=((rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c1)))) BETWEEN ((rt0.c1 IN (rt0.c0))) AND (((rt0.c1)AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))<=((rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c1)))) BETWEEN ((rt0.c1 IN (rt0.c0))) AND (((rt0.c1)AND(rt0.c0)))));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))<=((rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c1)))) BETWEEN ((rt0.c1 IN (rt0.c0))) AND (((rt0.c1)AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))<=((rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c1)))) BETWEEN ((rt0.c1 IN (rt0.c0))) AND (((rt0.c1)AND(rt0.c0)))));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))<=((rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c1)))) BETWEEN ((rt0.c1 IN (rt0.c0))) AND (((rt0.c1)AND(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(0.7365233026649096)))>(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))AND(0.7365233026649096)))>(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(0.7365233026649096)))>(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))AND(0.7365233026649096)))>(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(0.7365233026649096)))>(rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'51f2d608')LIKE(((rt0.c0)>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'51f2d608')LIKE(((rt0.c0)>>(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'51f2d608')LIKE(((rt0.c0)>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'51f2d608')LIKE(((rt0.c0)>>(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'51f2d608')LIKE(((rt0.c0)>>(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (UNLIKELY((rt0.c1 IN (rt0.c1, 0.7353221360295537)))) ORDER BY (((rt0.c1))>((rt0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((rt0.c1 IN (rt0.c1, 0.7353221360295537)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1))>((rt0.c0))) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (UNLIKELY((rt0.c1 IN (rt0.c1, 0.7353221360295537)))) ORDER BY (((rt0.c1))>((rt0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((rt0.c1 IN (rt0.c1, 0.7353221360295537)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1))>((rt0.c0))) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (UNLIKELY((rt0.c1 IN (rt0.c1, 0.7353221360295537)))) ORDER BY (((rt0.c1))>((rt0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)GLOB(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)GLOB(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)GLOB(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)GLOB(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)GLOB(rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((rt0.c0)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((rt0.c0)&(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((rt0.c0)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((rt0.c0)&(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND (((rt0.c0)&(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOTNULL)) ORDER BY CASE rt0.c2  WHEN ((rt0.c0)|(rt0.c2)) THEN ((0.46042651026933357) ISNULL) WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c1)>(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt0.c1 IN (rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN ((rt0.c0)|(rt0.c2)) THEN ((0.46042651026933357) ISNULL) WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c1)>(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt0.c1 IN (rt0.c1)) END);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOTNULL)) ORDER BY CASE rt0.c2  WHEN ((rt0.c0)|(rt0.c2)) THEN ((0.46042651026933357) ISNULL) WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c1)>(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt0.c1 IN (rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN ((rt0.c0)|(rt0.c2)) THEN ((0.46042651026933357) ISNULL) WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c1)>(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt0.c1 IN (rt0.c1)) END);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) NOTNULL)) ORDER BY CASE rt0.c2  WHEN ((rt0.c0)|(rt0.c2)) THEN ((0.46042651026933357) ISNULL) WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c1)>(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt0.c1 IN (rt0.c1)) END;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)LIKE((NOT (rt0.c2))))) ORDER BY (((NOT (rt0.c0)))>=(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((- (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)LIKE((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0)))>=(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((- (rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)LIKE((NOT (rt0.c2))))) ORDER BY (((NOT (rt0.c0)))>=(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((- (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)LIKE((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0)))>=(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((- (rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)LIKE((NOT (rt0.c2))))) ORDER BY (((NOT (rt0.c0)))>=(rt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))GLOB((- (rt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (x'') ORDER BY CAST(((rt0.c2) ISNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) ISNULL) AS TEXT));
SELECT * FROM rt0 WHERE (x'') ORDER BY CAST(((rt0.c2) ISNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) ISNULL) AS TEXT));
SELECT * FROM rt0 WHERE (x'') ORDER BY CAST(((rt0.c2) ISNULL) AS TEXT);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0) NOTNULL), ((rt0.c0)<(rt0.c1)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c0) NOTNULL), ((rt0.c0)<(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0) NOTNULL), ((rt0.c0)<(rt0.c1)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c0) NOTNULL), ((rt0.c0)<(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0) NOTNULL), ((rt0.c0)<(rt0.c1)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)) ORDER BY (((LIKE(rt0.c0, rt0.c0, '8')))<=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((LIKE(rt0.c0, rt0.c0, '8')))<=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)) ORDER BY (((LIKE(rt0.c0, rt0.c0, '8')))<=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((LIKE(rt0.c0, rt0.c0, '8')))<=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)) ORDER BY (((LIKE(rt0.c0, rt0.c0, '8')))<=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ('gBV࿤Vc^^(');
SELECT SUM(count) FROM (SELECT ALL (('gBV࿤Vc^^(') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('gBV࿤Vc^^(');
SELECT SUM(count) FROM (SELECT ALL (('gBV࿤Vc^^(') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('gBV࿤Vc^^(');
SELECT * FROM rt0 WHERE (((((((rt0.c2)>(rt0.c0)))AND(COALESCE(DISTINCT rt0.c2, rt0.c2))))OR((((rt0.c0, rt0.c0, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c2)))))) ORDER BY -1.7976931348623157E308 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)>(rt0.c0)))AND(COALESCE(DISTINCT rt0.c2, rt0.c2))))OR((((rt0.c0, rt0.c0, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY -1.7976931348623157E308 DESC);
SELECT * FROM rt0 WHERE (((((((rt0.c2)>(rt0.c0)))AND(COALESCE(DISTINCT rt0.c2, rt0.c2))))OR((((rt0.c0, rt0.c0, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c2)))))) ORDER BY -1.7976931348623157E308 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)>(rt0.c0)))AND(COALESCE(DISTINCT rt0.c2, rt0.c2))))OR((((rt0.c0, rt0.c0, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY -1.7976931348623157E308 DESC);
SELECT * FROM rt0 WHERE (((((((rt0.c2)>(rt0.c0)))AND(COALESCE(DISTINCT rt0.c2, rt0.c2))))OR((((rt0.c0, rt0.c0, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c2)))))) ORDER BY -1.7976931348623157E308 DESC;
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS NUMERIC))<=(CAST(rt0.c1 AS REAL)))) ORDER BY (- ('0.258551703506817'));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC))<=(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (- ('0.258551703506817')));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS NUMERIC))<=(CAST(rt0.c1 AS REAL)))) ORDER BY (- ('0.258551703506817'));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC))<=(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (- ('0.258551703506817')));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS NUMERIC))<=(CAST(rt0.c1 AS REAL)))) ORDER BY (- ('0.258551703506817'));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2 IN ()))AND((rt0.c0 IN (rt0.c0)))))OR(((((((((x'')OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))AND((rt0.c0 IN (rt0.c0)))))OR(((((((((x'')OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2 IN ()))AND((rt0.c0 IN (rt0.c0)))))OR(((((((((x'')OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))AND((rt0.c0 IN (rt0.c0)))))OR(((((((((x'')OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2 IN ()))AND((rt0.c0 IN (rt0.c0)))))OR(((((((((x'')OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))IS NOT('-918622108'))) ORDER BY (rt0.c2 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))IS NOT('-918622108'))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE RTRIM IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))IS NOT('-918622108'))) ORDER BY (rt0.c2 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))IS NOT('-918622108'))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE RTRIM IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))IS NOT('-918622108'))) ORDER BY (rt0.c2 COLLATE RTRIM IN ())  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c2)IS(rt0.c2))) BETWEEN (x'') AND (((rt0.c1)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS(rt0.c2))) BETWEEN (x'') AND (((rt0.c1)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)IS(rt0.c2))) BETWEEN (x'') AND (((rt0.c1)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS(rt0.c2))) BETWEEN (x'') AND (((rt0.c1)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)IS(rt0.c2))) BETWEEN (x'') AND (((rt0.c1)GLOB(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c2 END, rt0.c2 COLLATE NOCASE, rt0.c0, rt0.c1)) AND ((((((((((((((rt0.c2)AND(0.31686261759342005)))OR(rt0.c1)))AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), (((x'', rt0.c2, rt0.c1))>((rt0.c0, 0.5427894996908617, rt0.c2))), rt0.c2, CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY -1635386406 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c2 END, rt0.c2 COLLATE NOCASE, rt0.c0, rt0.c1)) AND ((((((((((((((rt0.c2)AND(0.31686261759342005)))OR(rt0.c1)))AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), (((x'', rt0.c2, rt0.c1))>((rt0.c0, 0.5427894996908617, rt0.c2))), rt0.c2, CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0 ORDER BY -1635386406 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c2 END, rt0.c2 COLLATE NOCASE, rt0.c0, rt0.c1)) AND ((((((((((((((rt0.c2)AND(0.31686261759342005)))OR(rt0.c1)))AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), (((x'', rt0.c2, rt0.c1))>((rt0.c0, 0.5427894996908617, rt0.c2))), rt0.c2, CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY -1635386406 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c1, rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c2 END, rt0.c2 COLLATE NOCASE, rt0.c0, rt0.c1)) AND ((((((((((((((rt0.c2)AND(0.31686261759342005)))OR(rt0.c1)))AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), (((x'', rt0.c2, rt0.c1))>((rt0.c0, 0.5427894996908617, rt0.c2))), rt0.c2, CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0 ORDER BY -1635386406 ASC);
SELECT COUNT(*) FROM rt0 WHERE (GLOB(NULLIF(rt0.c2, rt0.c1), rt0.c1)) ORDER BY (((CASE WHEN 'oD' THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN x'' END))<=((((rt0.c1)<(rt0.c2))))), (((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))IS NOT(0.4552022520575685))  NULLS FIRST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(NULLIF(rt0.c2, rt0.c1), rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN 'oD' THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN x'' END))<=((((rt0.c1)<(rt0.c2))))), (((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))IS NOT(0.4552022520575685))  NULLS FIRST, rt0.c2 DESC);
SELECT COUNT(*) FROM rt0 WHERE (GLOB(NULLIF(rt0.c2, rt0.c1), rt0.c1)) ORDER BY (((CASE WHEN 'oD' THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN x'' END))<=((((rt0.c1)<(rt0.c2))))), (((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))IS NOT(0.4552022520575685))  NULLS FIRST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(NULLIF(rt0.c2, rt0.c1), rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN 'oD' THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN x'' END))<=((((rt0.c1)<(rt0.c2))))), (((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))IS NOT(0.4552022520575685))  NULLS FIRST, rt0.c2 DESC);
SELECT COUNT(*) FROM rt0 WHERE (GLOB(NULLIF(rt0.c2, rt0.c1), rt0.c1)) ORDER BY (((CASE WHEN 'oD' THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN x'' END))<=((((rt0.c1)<(rt0.c2))))), (((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))IS NOT(0.4552022520575685))  NULLS FIRST, rt0.c2 DESC;
SELECT COUNT(*) FROM rt0 WHERE (((CHANGES())*(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY ((rt0.c1 COLLATE NOCASE)IS(((((((((((((0.8615036388377374)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))) DESC, rt0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CHANGES())*(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE NOCASE)IS(((((((((((((0.8615036388377374)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))) DESC, rt0.c0 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CHANGES())*(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY ((rt0.c1 COLLATE NOCASE)IS(((((((((((((0.8615036388377374)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))) DESC, rt0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CHANGES())*(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE NOCASE)IS(((((((((((((0.8615036388377374)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))) DESC, rt0.c0 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CHANGES())*(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY ((rt0.c1 COLLATE NOCASE)IS(((((((((((((0.8615036388377374)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))) DESC, rt0.c0 COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((x'')OR(rt0.c0)) AS INTEGER)) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'936e')) AS BLOB) DESC, ((NULL)GLOB(((rt0.c0)>>(rt0.c2)))), ((rt0.c0 IN (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')OR(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'936e')) AS BLOB) DESC, ((NULL)GLOB(((rt0.c0)>>(rt0.c2)))), ((rt0.c0 IN (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((x'')OR(rt0.c0)) AS INTEGER)) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'936e')) AS BLOB) DESC, ((NULL)GLOB(((rt0.c0)>>(rt0.c2)))), ((rt0.c0 IN (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')OR(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'936e')) AS BLOB) DESC, ((NULL)GLOB(((rt0.c0)>>(rt0.c2)))), ((rt0.c0 IN (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((x'')OR(rt0.c0)) AS INTEGER)) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'936e')) AS BLOB) DESC, ((NULL)GLOB(((rt0.c0)>>(rt0.c2)))), ((rt0.c0 IN (rt0.c1)) IN ());
SELECT ALL * FROM rt0 WHERE ((+ (((NULL) IS TRUE)))) ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER));
SELECT ALL * FROM rt0 WHERE ((+ (((NULL) IS TRUE)))) ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER));
SELECT ALL * FROM rt0 WHERE ((+ (((NULL) IS TRUE)))) ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)<=(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))))) ORDER BY (+ (rt0.c2)) COLLATE RTRIM, (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(NULL)))AND((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2)) COLLATE RTRIM, (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(NULL)))AND((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)<=(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))))) ORDER BY (+ (rt0.c2)) COLLATE RTRIM, (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(NULL)))AND((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2)) COLLATE RTRIM, (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(NULL)))AND((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)<=(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))))) ORDER BY (+ (rt0.c2)) COLLATE RTRIM, (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(NULL)))AND((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0)))))  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT * FROM rt0 WHERE (('' IN (rt0.c0)) COLLATE BINARY COLLATE BINARY) ORDER BY ((((-418960866) NOTNULL)) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)<<(rt0.c0)))) ASC  NULLS LAST, ((rt0.c0 IN (rt0.c0)) IN ()) DESC, CASE ((x'') BETWEEN (rt0.c0) AND (rt0.c1))  WHEN (((rt0.c1, rt0.c0, rt0.c1))=((rt0.c2, rt0.c1, rt0.c0))) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END ELSE json_insert(rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2) END ASC;
SELECT SUM(count) FROM (SELECT ((('' IN (rt0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((-418960866) NOTNULL)) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)<<(rt0.c0)))) ASC  NULLS LAST, ((rt0.c0 IN (rt0.c0)) IN ()) DESC, CASE ((x'') BETWEEN (rt0.c0) AND (rt0.c1))  WHEN (((rt0.c1, rt0.c0, rt0.c1))=((rt0.c2, rt0.c1, rt0.c0))) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END ELSE json_insert(rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2) END ASC);
SELECT * FROM rt0 WHERE (('' IN (rt0.c0)) COLLATE BINARY COLLATE BINARY) ORDER BY ((((-418960866) NOTNULL)) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)<<(rt0.c0)))) ASC  NULLS LAST, ((rt0.c0 IN (rt0.c0)) IN ()) DESC, CASE ((x'') BETWEEN (rt0.c0) AND (rt0.c1))  WHEN (((rt0.c1, rt0.c0, rt0.c1))=((rt0.c2, rt0.c1, rt0.c0))) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END ELSE json_insert(rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2) END ASC;
SELECT SUM(count) FROM (SELECT ((('' IN (rt0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((-418960866) NOTNULL)) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)<<(rt0.c0)))) ASC  NULLS LAST, ((rt0.c0 IN (rt0.c0)) IN ()) DESC, CASE ((x'') BETWEEN (rt0.c0) AND (rt0.c1))  WHEN (((rt0.c1, rt0.c0, rt0.c1))=((rt0.c2, rt0.c1, rt0.c0))) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END ELSE json_insert(rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2) END ASC);
SELECT * FROM rt0 WHERE (('' IN (rt0.c0)) COLLATE BINARY COLLATE BINARY) ORDER BY ((((-418960866) NOTNULL)) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)<<(rt0.c0)))) ASC  NULLS LAST, ((rt0.c0 IN (rt0.c0)) IN ()) DESC, CASE ((x'') BETWEEN (rt0.c0) AND (rt0.c1))  WHEN (((rt0.c1, rt0.c0, rt0.c1))=((rt0.c2, rt0.c1, rt0.c0))) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END ELSE json_insert(rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2) END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((UNLIKELY(DISTINCT rt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt0.c1)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((UNLIKELY(DISTINCT rt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt0.c1)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((UNLIKELY(DISTINCT rt0.c1)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL))&(((rt0.c0)>(1651291732)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL))&(((rt0.c0)>(1651291732))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL))&(((rt0.c0)>(1651291732)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL))&(((rt0.c0)>(1651291732))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) ISNULL))&(((rt0.c0)>(1651291732)))));
SELECT * FROM rt0 WHERE ((~ (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN (- (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 COLLATE NOCASE THEN (- (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN (- (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 COLLATE NOCASE THEN (- (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN (- (rt0.c1)) END);
SELECT * FROM rt0 WHERE ('-1821829092');
SELECT SUM(count) FROM (SELECT (('-1821829092') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('-1821829092');
SELECT SUM(count) FROM (SELECT (('-1821829092') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('-1821829092');
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN (0.7503600255061218 IN ()) WHEN ((rt0.c2)>=(0.9864906131458137)) THEN TRIM(DISTINCT rt0.c0) WHEN 0X7861f871 THEN CASE WHEN 0.6828958043281144 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (TYPEOF(rt0.c2)) AND (rt0.c2))  NULLS LAST, rt0.c0 DESC  NULLS LAST, CASE (((rt0.c0))!=((rt0.c1)))  WHEN rt0.c0 THEN x'c252243c' WHEN rt0.c1 COLLATE BINARY THEN (- (rt0.c0)) WHEN rt0.c0 THEN ((0.005016362568976307)+(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN (0.7503600255061218 IN ()) WHEN ((rt0.c2)>=(0.9864906131458137)) THEN TRIM(DISTINCT rt0.c0) WHEN 0X7861f871 THEN CASE WHEN 0.6828958043281144 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (TYPEOF(rt0.c2)) AND (rt0.c2))  NULLS LAST, rt0.c0 DESC  NULLS LAST, CASE (((rt0.c0))!=((rt0.c1)))  WHEN rt0.c0 THEN x'c252243c' WHEN rt0.c1 COLLATE BINARY THEN (- (rt0.c0)) WHEN rt0.c0 THEN ((0.005016362568976307)+(rt0.c0)) END);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN (0.7503600255061218 IN ()) WHEN ((rt0.c2)>=(0.9864906131458137)) THEN TRIM(DISTINCT rt0.c0) WHEN 0X7861f871 THEN CASE WHEN 0.6828958043281144 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (TYPEOF(rt0.c2)) AND (rt0.c2))  NULLS LAST, rt0.c0 DESC  NULLS LAST, CASE (((rt0.c0))!=((rt0.c1)))  WHEN rt0.c0 THEN x'c252243c' WHEN rt0.c1 COLLATE BINARY THEN (- (rt0.c0)) WHEN rt0.c0 THEN ((0.005016362568976307)+(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN (0.7503600255061218 IN ()) WHEN ((rt0.c2)>=(0.9864906131458137)) THEN TRIM(DISTINCT rt0.c0) WHEN 0X7861f871 THEN CASE WHEN 0.6828958043281144 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (TYPEOF(rt0.c2)) AND (rt0.c2))  NULLS LAST, rt0.c0 DESC  NULLS LAST, CASE (((rt0.c0))!=((rt0.c1)))  WHEN rt0.c0 THEN x'c252243c' WHEN rt0.c1 COLLATE BINARY THEN (- (rt0.c0)) WHEN rt0.c0 THEN ((0.005016362568976307)+(rt0.c0)) END);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN (0.7503600255061218 IN ()) WHEN ((rt0.c2)>=(0.9864906131458137)) THEN TRIM(DISTINCT rt0.c0) WHEN 0X7861f871 THEN CASE WHEN 0.6828958043281144 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (TYPEOF(rt0.c2)) AND (rt0.c2))  NULLS LAST, rt0.c0 DESC  NULLS LAST, CASE (((rt0.c0))!=((rt0.c1)))  WHEN rt0.c0 THEN x'c252243c' WHEN rt0.c1 COLLATE BINARY THEN (- (rt0.c0)) WHEN rt0.c0 THEN ((0.005016362568976307)+(rt0.c0)) END;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE ((((('') IS FALSE)) ISNULL)) ORDER BY (((rt0.c0, (+ (rt0.c0)), HEX(DISTINCT rt0.c1)))<((((rt0.c2)GLOB(rt0.c2)), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND('w5')), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('') IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, (+ (rt0.c0)), HEX(DISTINCT rt0.c1)))<((((rt0.c2)GLOB(rt0.c2)), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND('w5')), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((('') IS FALSE)) ISNULL)) ORDER BY (((rt0.c0, (+ (rt0.c0)), HEX(DISTINCT rt0.c1)))<((((rt0.c2)GLOB(rt0.c2)), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND('w5')), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('') IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, (+ (rt0.c0)), HEX(DISTINCT rt0.c1)))<((((rt0.c2)GLOB(rt0.c2)), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND('w5')), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((('') IS FALSE)) ISNULL)) ORDER BY (((rt0.c0, (+ (rt0.c0)), HEX(DISTINCT rt0.c1)))<((((rt0.c2)GLOB(rt0.c2)), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND('w5')), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c2 IN ()))AND(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (rt0.c2 IN ()) ELSE CAST(rt0.c1 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN ()))AND(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (rt0.c2 IN ()) ELSE CAST(rt0.c1 AS INTEGER) END);
SELECT * FROM rt0 WHERE ((((((rt0.c2 IN ()))AND(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (rt0.c2 IN ()) ELSE CAST(rt0.c1 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN ()))AND(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (rt0.c2 IN ()) ELSE CAST(rt0.c1 AS INTEGER) END);
SELECT * FROM rt0 WHERE ((((((rt0.c2 IN ()))AND(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN (rt0.c2 IN ()) ELSE CAST(rt0.c1 AS INTEGER) END;
SELECT ALL * FROM rt0 WHERE (CASE WHEN LIKELIHOOD(2.9430993E8, 0.37497462538374104) THEN ((rt0.c0)<=(rt0.c1)) END) ORDER BY '-711969766';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELIHOOD(2.9430993E8, 0.37497462538374104) THEN ((rt0.c0)<=(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY '-711969766');
SELECT ALL * FROM rt0 WHERE (CASE WHEN LIKELIHOOD(2.9430993E8, 0.37497462538374104) THEN ((rt0.c0)<=(rt0.c1)) END) ORDER BY '-711969766';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELIHOOD(2.9430993E8, 0.37497462538374104) THEN ((rt0.c0)<=(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY '-711969766');
SELECT ALL * FROM rt0 WHERE (CASE WHEN LIKELIHOOD(2.9430993E8, 0.37497462538374104) THEN ((rt0.c0)<=(rt0.c1)) END) ORDER BY '-711969766';
SELECT * FROM rt0 WHERE (json_valid((- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid((- (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_valid((- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid((- (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_valid((- (rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)==(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)==(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)=(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE NULL  WHEN IFNULL(rt0.c0, rt0.c2) THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN IFNULL(rt0.c0, rt0.c2) THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE NULL  WHEN IFNULL(rt0.c0, rt0.c2) THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN IFNULL(rt0.c0, rt0.c2) THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE NULL  WHEN IFNULL(rt0.c0, rt0.c2) THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)GLOB((((rt0.c0, '2015173252', rt0.c1))!=((rt0.c2, rt0.c0, rt0.c2)))))) ORDER BY 0xffffffffb38c4a1a DESC  NULLS FIRST, CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((rt0.c1)==(rt0.c2)) THEN ((rt0.c1)=(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c1 COLLATE NOCASE THEN LIKELIHOOD(rt0.c2, 0.9110618449007489) ELSE CAST(rt0.c2 AS REAL) END, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)GLOB((((rt0.c0, '2015173252', rt0.c1))!=((rt0.c2, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY 0xffffffffb38c4a1a DESC  NULLS FIRST, CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((rt0.c1)=(rt0.c2)) THEN ((rt0.c1)=(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c1 COLLATE NOCASE THEN LIKELIHOOD(rt0.c2, 0.9110618449007489) ELSE CAST(rt0.c2 AS REAL) END, rt0.c1 DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)GLOB((((rt0.c0, '2015173252', rt0.c1))!=((rt0.c2, rt0.c0, rt0.c2)))))) ORDER BY 0xffffffffb38c4a1a DESC  NULLS FIRST, CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((rt0.c1)==(rt0.c2)) THEN ((rt0.c1)=(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c1 COLLATE NOCASE THEN LIKELIHOOD(rt0.c2, 0.9110618449007489) ELSE CAST(rt0.c2 AS REAL) END, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)GLOB((((rt0.c0, '2015173252', rt0.c1))!=((rt0.c2, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY 0xffffffffb38c4a1a DESC  NULLS FIRST, CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((rt0.c1)=(rt0.c2)) THEN ((rt0.c1)=(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c1 COLLATE NOCASE THEN LIKELIHOOD(rt0.c2, 0.9110618449007489) ELSE CAST(rt0.c2 AS REAL) END, rt0.c1 DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)GLOB((((rt0.c0, '2015173252', rt0.c1))!=((rt0.c2, rt0.c0, rt0.c2)))))) ORDER BY 0xffffffffb38c4a1a DESC  NULLS FIRST, CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((rt0.c1)==(rt0.c2)) THEN ((rt0.c1)=(rt0.c2)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c1 COLLATE NOCASE THEN LIKELIHOOD(rt0.c2, 0.9110618449007489) ELSE CAST(rt0.c2 AS REAL) END, rt0.c1 DESC;
SELECT * FROM rt0 WHERE (((((rt0.c0)=(rt0.c0))) NOT NULL)) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)=(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0)=(rt0.c0))) NOT NULL)) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)=(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0)=(rt0.c0))) NOT NULL)) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((- (rt0.c0))))) ORDER BY CASE (rt0.c2 IN ())  WHEN TRIM(rt0.c2, rt0.c0) THEN NULL COLLATE BINARY ELSE (rt0.c1 IN (rt0.c1)) END ASC  NULLS FIRST, CASE rt0.c0 COLLATE BINARY  WHEN TYPEOF(DISTINCT rt0.c0) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN TRIM(rt0.c2, rt0.c0) THEN NULL COLLATE BINARY ELSE (rt0.c1 IN (rt0.c1)) END ASC  NULLS FIRST, CASE rt0.c0 COLLATE BINARY  WHEN TYPEOF(DISTINCT rt0.c0) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((- (rt0.c0))))) ORDER BY CASE (rt0.c2 IN ())  WHEN TRIM(rt0.c2, rt0.c0) THEN NULL COLLATE BINARY ELSE (rt0.c1 IN (rt0.c1)) END ASC  NULLS FIRST, CASE rt0.c0 COLLATE BINARY  WHEN TYPEOF(DISTINCT rt0.c0) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN TRIM(rt0.c2, rt0.c0) THEN NULL COLLATE BINARY ELSE (rt0.c1 IN (rt0.c1)) END ASC  NULLS FIRST, CASE rt0.c0 COLLATE BINARY  WHEN TYPEOF(DISTINCT rt0.c0) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((- (rt0.c0))))) ORDER BY CASE (rt0.c2 IN ())  WHEN TRIM(rt0.c2, rt0.c0) THEN NULL COLLATE BINARY ELSE (rt0.c1 IN (rt0.c1)) END ASC  NULLS FIRST, CASE rt0.c0 COLLATE BINARY  WHEN TYPEOF(DISTINCT rt0.c0) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(TRIM(DISTINCT x'', rt0.c1), CASE WHEN rt0.c0 THEN NULL ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((IFNULL(TRIM(DISTINCT x'', rt0.c1), CASE WHEN rt0.c0 THEN NULL ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(TRIM(DISTINCT x'', rt0.c1), CASE WHEN rt0.c0 THEN NULL ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((IFNULL(TRIM(DISTINCT x'', rt0.c1), CASE WHEN rt0.c0 THEN NULL ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(TRIM(DISTINCT x'', rt0.c1), CASE WHEN rt0.c0 THEN NULL ELSE rt0.c1 END));
SELECT * FROM rt0 WHERE (((0xffffffffe0b64d27)IS(((rt0.c1)AND(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffe0b64d27)IS(((rt0.c1)AND(NULL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((0xffffffffe0b64d27)IS(((rt0.c1)AND(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffe0b64d27)IS(((rt0.c1)AND(NULL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((0xffffffffe0b64d27)IS(((rt0.c1)AND(NULL)))));
SELECT * FROM rt0 WHERE (LIKELIHOOD((+ (rt0.c2)), 0.8369861839439704));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((+ (rt0.c2)), 0.8369861839439704)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELIHOOD((+ (rt0.c2)), 0.8369861839439704));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((+ (rt0.c2)), 0.8369861839439704)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELIHOOD((+ (rt0.c2)), 0.8369861839439704));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)|(0Xffffffffd36fe406 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)|(0Xffffffffd36fe406 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)|(0Xffffffffd36fe406 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)|(0Xffffffffd36fe406 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)|(0Xffffffffd36fe406 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)GLOB(rt0.c1)) AS NUMERIC)) ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)GLOB(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)GLOB(rt0.c1)) AS NUMERIC)) ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)GLOB(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)GLOB(rt0.c1)) AS NUMERIC)) ORDER BY ((rt0.c1)LIKE(rt0.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c0)))OR(rt0.c2)))AND((NOT (x'0614')))))AND(rt0.c1)))OR(RTRIM(0.006893197933930617))));
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c0)))OR(rt0.c2)))AND((NOT (x'0614')))))AND(rt0.c1)))OR(RTRIM(0.006893197933930617)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c0)))OR(rt0.c2)))AND((NOT (x'0614')))))AND(rt0.c1)))OR(RTRIM(0.006893197933930617))));
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c0)))OR(rt0.c2)))AND((NOT (x'0614')))))AND(rt0.c1)))OR(RTRIM(0.006893197933930617)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c0)))OR(rt0.c2)))AND((NOT (x'0614')))))AND(rt0.c1)))OR(RTRIM(0.006893197933930617))));
SELECT ALL * FROM rt0 WHERE (INSTR(rt0.c0, ((rt0.c0)*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(rt0.c0, ((rt0.c0)*(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (INSTR(rt0.c0, ((rt0.c0)*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(rt0.c0, ((rt0.c0)*(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (INSTR(rt0.c0, ((rt0.c0)*(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)<=(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((rt0.c0) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<=(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)<=(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((rt0.c0) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<=(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)<=(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((rt0.c0) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((NOT (rt0.c2)))|(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))))) ORDER BY CASE WHEN ((rt0.c0)<>(rt0.c1)) THEN ((rt0.c1)|(rt0.c2)) WHEN rt0.c2 THEN (((rt0.c0))!=((rt0.c1))) WHEN UNLIKELY(DISTINCT rt0.c0) THEN rt0.c1 ELSE CAST(rt0.c2 AS INTEGER) END, (- (((rt0.c2)+(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))|(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0)<>(rt0.c1)) THEN ((rt0.c1)|(rt0.c2)) WHEN rt0.c2 THEN (((rt0.c0))!=((rt0.c1))) WHEN UNLIKELY(DISTINCT rt0.c0) THEN rt0.c1 ELSE CAST(rt0.c2 AS INTEGER) END, (- (((rt0.c2)+(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c2)))|(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))))) ORDER BY CASE WHEN ((rt0.c0)<>(rt0.c1)) THEN ((rt0.c1)|(rt0.c2)) WHEN rt0.c2 THEN (((rt0.c0))!=((rt0.c1))) WHEN UNLIKELY(DISTINCT rt0.c0) THEN rt0.c1 ELSE CAST(rt0.c2 AS INTEGER) END, (- (((rt0.c2)+(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))|(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0)<>(rt0.c1)) THEN ((rt0.c1)|(rt0.c2)) WHEN rt0.c2 THEN (((rt0.c0))!=((rt0.c1))) WHEN UNLIKELY(DISTINCT rt0.c0) THEN rt0.c1 ELSE CAST(rt0.c2 AS INTEGER) END, (- (((rt0.c2)+(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c2)))|(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))))) ORDER BY CASE WHEN ((rt0.c0)<>(rt0.c1)) THEN ((rt0.c1)|(rt0.c2)) WHEN rt0.c2 THEN (((rt0.c0))!=((rt0.c1))) WHEN UNLIKELY(DISTINCT rt0.c0) THEN rt0.c1 ELSE CAST(rt0.c2 AS INTEGER) END, (- (((rt0.c2)+(rt0.c1))))  NULLS LAST;
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)+(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)+(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1)+(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(UPPER(rt0.c1))) ORDER BY ((((((rt0.c1)/(rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(UPPER(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)/(rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(UPPER(rt0.c1))) ORDER BY ((((((rt0.c1)/(rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(UPPER(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)/(rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(UPPER(rt0.c1))) ORDER BY ((((((rt0.c1)/(rt0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))))AND((~ (rt0.c1))))) ORDER BY (- ((rt0.c0 IN (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS TEXT))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))))AND((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c0 IN (rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))))AND((~ (rt0.c1))))) ORDER BY (- ((rt0.c0 IN (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS TEXT))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))))AND((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c0 IN (rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))))AND((~ (rt0.c1))))) ORDER BY (- ((rt0.c0 IN (rt0.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (TRIM(DISTINCT '0.04301766603069934'))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (TRIM(DISTINCT '0.04301766603069934')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (TRIM(DISTINCT '0.04301766603069934'))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (TRIM(DISTINCT '0.04301766603069934')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (TRIM(DISTINCT '0.04301766603069934'))));
SELECT COUNT(*) FROM rt0 WHERE (((('JS}-[_ ]')) BETWEEN ((IFNULL(DISTINCT rt0.c0, rt0.c1))) AND ((CASE WHEN rt0.c0 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL ((((('JS}-[_ ]')) BETWEEN ((IFNULL(DISTINCT rt0.c0, rt0.c1))) AND ((CASE WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((('JS}-[_ ]')) BETWEEN ((IFNULL(DISTINCT rt0.c0, rt0.c1))) AND ((CASE WHEN rt0.c0 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL ((((('JS}-[_ ]')) BETWEEN ((IFNULL(DISTINCT rt0.c0, rt0.c1))) AND ((CASE WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((('JS}-[_ ]')) BETWEEN ((IFNULL(DISTINCT rt0.c0, rt0.c1))) AND ((CASE WHEN rt0.c0 THEN rt0.c1 END))));
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((- (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((- (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((- (rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.6551311434553072)*((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((0.6551311434553072)*((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.6551311434553072)*((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((0.6551311434553072)*((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.6551311434553072)*((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)IS(rt0.c0))))<((CASE WHEN rt0.c2 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)IS(rt0.c0))))<((CASE WHEN rt0.c2 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)IS(rt0.c0))))<((CASE WHEN rt0.c2 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)IS(rt0.c0))))<((CASE WHEN rt0.c2 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)IS(rt0.c0))))<((CASE WHEN rt0.c2 THEN rt0.c1 END))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c0)<=(rt0.c1)))) AND ((((rt0.c2)==(rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c0)<=(rt0.c1)))) AND ((((rt0.c2)=(rt0.c2))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c0)<=(rt0.c1)))) AND ((((rt0.c2)==(rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c0)<=(rt0.c1)))) AND ((((rt0.c2)=(rt0.c2))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c0)<=(rt0.c1)))) AND ((((rt0.c2)==(rt0.c2))))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((x'') BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((x'') BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((x'') BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CAST(rt0.c1 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CAST(rt0.c1 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CAST(rt0.c1 AS INTEGER) DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((~ (rt0.c1)) IN (NULL, CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c1)) IN (NULL, CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((~ (rt0.c1)) IN (NULL, CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c1)) IN (NULL, CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((~ (rt0.c1)) IN (NULL, CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))<=((x''))))>(((rt0.c2)/(rt0.c2))))) ORDER BY (NOT (LIKELIHOOD(DISTINCT rt0.c2, 0.2529203127200319))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((x''))))>(((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (LIKELIHOOD(DISTINCT rt0.c2, 0.2529203127200319))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))<=((x''))))>(((rt0.c2)/(rt0.c2))))) ORDER BY (NOT (LIKELIHOOD(DISTINCT rt0.c2, 0.2529203127200319))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((x''))))>(((rt0.c2)/(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (LIKELIHOOD(DISTINCT rt0.c2, 0.2529203127200319))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))<=((x''))))>(((rt0.c2)/(rt0.c2))))) ORDER BY (NOT (LIKELIHOOD(DISTINCT rt0.c2, 0.2529203127200319))) DESC;
SELECT ALL * FROM rt0 WHERE (CASE (+ (rt0.c2))  WHEN ((rt0.c0) ISNULL) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0) ISNULL) WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) ORDER BY ((CAST(rt0.c1 AS BLOB))|(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt0.c2))  WHEN ((rt0.c0) ISNULL) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0) ISNULL) WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB))|(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) ASC);
SELECT ALL * FROM rt0 WHERE (CASE (+ (rt0.c2))  WHEN ((rt0.c0) ISNULL) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0) ISNULL) WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) ORDER BY ((CAST(rt0.c1 AS BLOB))|(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt0.c2))  WHEN ((rt0.c0) ISNULL) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0) ISNULL) WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB))|(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) ASC);
SELECT ALL * FROM rt0 WHERE (CASE (+ (rt0.c2))  WHEN ((rt0.c0) ISNULL) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0) ISNULL) WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) ORDER BY ((CAST(rt0.c1 AS BLOB))|(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)IS('')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS(''))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)IS('')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS(''))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)IS('')));
SELECT COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(NULLIF(DISTINCT rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(NULLIF(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(NULLIF(DISTINCT rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(NULLIF(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c2)))OR(rt0.c1 COLLATE RTRIM)))OR(NULLIF(DISTINCT rt0.c2, rt0.c0))));
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c2, rt0.c0) COLLATE RTRIM) ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))>>(rt0.c1))  NULLS LAST, rt0.c1  NULLS FIRST, (((TRIM(rt0.c1, rt0.c0)))>=((((rt0.c1)!=(rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt0.c2, rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))>>(rt0.c1))  NULLS LAST, rt0.c1  NULLS FIRST, (((TRIM(rt0.c1, rt0.c0)))>=((((rt0.c1)<>(rt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c2, rt0.c0) COLLATE RTRIM) ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))>>(rt0.c1))  NULLS LAST, rt0.c1  NULLS FIRST, (((TRIM(rt0.c1, rt0.c0)))>=((((rt0.c1)!=(rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt0.c2, rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))>>(rt0.c1))  NULLS LAST, rt0.c1  NULLS FIRST, (((TRIM(rt0.c1, rt0.c0)))>=((((rt0.c1)<>(rt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c2, rt0.c0) COLLATE RTRIM) ORDER BY ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))>>(rt0.c1))  NULLS LAST, rt0.c1  NULLS FIRST, (((TRIM(rt0.c1, rt0.c0)))>=((((rt0.c1)!=(rt0.c1)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2)))/(((0Xffffffffcb809ea5)==(rt0.c1))))) ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2)))/(((0xffffffffcb809ea5)==(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2)))/(((0Xffffffffcb809ea5)==(rt0.c1))))) ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2)))/(((0xffffffffcb809ea5)==(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2)))/(((0Xffffffffcb809ea5)==(rt0.c1))))) ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (-524923609) ORDER BY (+ (rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((-524923609) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2)));
SELECT ALL * FROM rt0 WHERE (-524923609) ORDER BY (+ (rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((-524923609) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2)));
SELECT ALL * FROM rt0 WHERE (-524923609) ORDER BY (+ (rt0.c2));
SELECT * FROM rt0 WHERE (((CAST(0.9864906131458137 AS REAL)) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0 COLLATE NOCASE))) ORDER BY CASE (rt0.c2 IN ())  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (~ (x'')) ELSE (rt0.c0 IN (rt0.c0)) END  NULLS LAST, (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN (((((rt0.c0))>=((rt0.c1))), (- (rt0.c2)), ('-714984022' IN ()))) AND (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, 1.05772532E9, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2))), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), CAST(rt0.c2 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(0.9864906131458137 AS REAL)) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (~ (x'')) ELSE (rt0.c0 IN (rt0.c0)) END  NULLS LAST, (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN (((((rt0.c0))>=((rt0.c1))), (- (rt0.c2)), ('-714984022' IN ()))) AND (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, 1.05772532E9, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2))), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), CAST(rt0.c2 AS REAL)))) DESC);
SELECT * FROM rt0 WHERE (((CAST(0.9864906131458137 AS REAL)) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0 COLLATE NOCASE))) ORDER BY CASE (rt0.c2 IN ())  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (~ (x'')) ELSE (rt0.c0 IN (rt0.c0)) END  NULLS LAST, (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN (((((rt0.c0))>=((rt0.c1))), (- (rt0.c2)), ('-714984022' IN ()))) AND (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, 1.05772532E9, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2))), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), CAST(rt0.c2 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(0.9864906131458137 AS REAL)) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c2 IN ())  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (~ (x'')) ELSE (rt0.c0 IN (rt0.c0)) END  NULLS LAST, (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN (((((rt0.c0))>=((rt0.c1))), (- (rt0.c2)), ('-714984022' IN ()))) AND (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, 1.05772532E9, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2))), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), CAST(rt0.c2 AS REAL)))) DESC);
SELECT * FROM rt0 WHERE (((CAST(0.9864906131458137 AS REAL)) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0 COLLATE NOCASE))) ORDER BY CASE (rt0.c2 IN ())  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (~ (x'')) ELSE (rt0.c0 IN (rt0.c0)) END  NULLS LAST, (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN (((((rt0.c0))>=((rt0.c1))), (- (rt0.c2)), ('-714984022' IN ()))) AND (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, 1.05772532E9, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2))), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), CAST(rt0.c2 AS REAL)))) DESC;
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((NULL))<>((rt0.c1)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((NULL))!=((rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((NULL))<>((rt0.c1)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((NULL))!=((rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((NULL))<>((rt0.c1)))) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) ISNULL))) AND (((+ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0) ISNULL))) AND (((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) ISNULL))) AND (((+ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0) ISNULL))) AND (((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) ISNULL))) AND (((+ (rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((- (NULL))) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((((rt0.c1, NULL, rt0.c0))>((rt0.c0, rt0.c2, rt0.c1)))))) ASC, ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) IS TRUE) DESC, ((rt0.c2 IN ()) IN (((rt0.c0) ISNULL), CAST(rt0.c2 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((((rt0.c1, NULL, rt0.c0))>((rt0.c0, rt0.c2, rt0.c1)))))) ASC, ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) IS TRUE) DESC, ((rt0.c2 IN ()) IN (((rt0.c0) ISNULL), CAST(rt0.c2 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((- (NULL))) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((((rt0.c1, NULL, rt0.c0))>((rt0.c0, rt0.c2, rt0.c1)))))) ASC, ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) IS TRUE) DESC, ((rt0.c2 IN ()) IN (((rt0.c0) ISNULL), CAST(rt0.c2 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((((rt0.c1, NULL, rt0.c0))>((rt0.c0, rt0.c2, rt0.c1)))))) ASC, ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) IS TRUE) DESC, ((rt0.c2 IN ()) IN (((rt0.c0) ISNULL), CAST(rt0.c2 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((- (NULL))) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((((rt0.c1, NULL, rt0.c0))>((rt0.c0, rt0.c2, rt0.c1)))))) ASC, ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) IS TRUE) DESC, ((rt0.c2 IN ()) IN (((rt0.c0) ISNULL), CAST(rt0.c2 AS TEXT)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)IS NOT(0.9961015733627625)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)IS NOT(0.9961015733627625)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)IS NOT(0.9961015733627625)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)IS NOT(0.9961015733627625)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)IS NOT(0.9961015733627625)) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE ((- (CASE WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c2 ELSE x'791a' END))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c2 ELSE x'791a' END))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- (CASE WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c2 ELSE x'791a' END))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c2 ELSE x'791a' END))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- (CASE WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c2 ELSE x'791a' END))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((+ ((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c0, rt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c0, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ ((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c0, rt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c0, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ ((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c0, rt0.c0, rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((LAST_INSERT_ROWID())) AND (((0.3686297029720157 IN (rt0.c1, rt0.c2)))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN 0.6837179545251925 ELSE rt0.c2 END AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((LAST_INSERT_ROWID())) AND (((0.3686297029720157 IN (rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN 0.6837179545251925 ELSE rt0.c2 END AS REAL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((LAST_INSERT_ROWID())) AND (((0.3686297029720157 IN (rt0.c1, rt0.c2)))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN 0.6837179545251925 ELSE rt0.c2 END AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((LAST_INSERT_ROWID())) AND (((0.3686297029720157 IN (rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN 0.6837179545251925 ELSE rt0.c2 END AS REAL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((LAST_INSERT_ROWID())) AND (((0.3686297029720157 IN (rt0.c1, rt0.c2)))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN 0.6837179545251925 ELSE rt0.c2 END AS REAL) DESC;
SELECT * FROM rt0 WHERE (((((rt0.c0)OR(rt0.c0)))<=(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c0)))<=(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)OR(rt0.c0)))<=(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c0)))<=(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)OR(rt0.c0)))<=(rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)OR(((0.1252682224007614) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ASC, CASE WHEN (+ (rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END END ASC  NULLS FIRST, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)OR(((0.1252682224007614) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ASC, CASE WHEN (+ (rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END END ASC  NULLS FIRST, rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)OR(((0.1252682224007614) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ASC, CASE WHEN (+ (rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END END ASC  NULLS FIRST, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)OR(((0.1252682224007614) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ASC, CASE WHEN (+ (rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END END ASC  NULLS FIRST, rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)OR(((0.1252682224007614) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((rt0.c1)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ASC, CASE WHEN (+ (rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END END ASC  NULLS FIRST, rt0.c0  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)IS NOT(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY (- (CAST(rt0.c2 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)IS NOT(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (- (CAST(rt0.c2 AS BLOB))) DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)IS NOT(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY (- (CAST(rt0.c2 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)IS NOT(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (- (CAST(rt0.c2 AS BLOB))) DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)IS NOT(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY (- (CAST(rt0.c2 AS BLOB))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NULL IN ())) ORDER BY (((rt0.c2)||(rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)||(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NULL IN ())) ORDER BY (((rt0.c2)||(rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)||(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NULL IN ())) ORDER BY (((rt0.c2)||(rt0.c0)) IN ());
SELECT ALL COUNT(*) FROM rt0 WHERE ('Q') ORDER BY (((rt0.c0 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT (('Q') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ('Q') ORDER BY (((rt0.c0 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT (('Q') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ('Q') ORDER BY (((rt0.c0 IN ())) ISNULL);
SELECT ALL * FROM rt0 WHERE ((NULL IN (rt0.c0 COLLATE BINARY, rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (rt0.c0 COLLATE BINARY, rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NULL IN (rt0.c0 COLLATE BINARY, rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (rt0.c0 COLLATE BINARY, rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NULL IN (rt0.c0 COLLATE BINARY, rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT ALL * FROM rt0 WHERE ((- (x''))) ORDER BY ((- (rt0.c2)) IN (((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM rt0 ORDER BY ((- (rt0.c2)) IN (((rt0.c0) IS FALSE))));
SELECT ALL * FROM rt0 WHERE ((- (x''))) ORDER BY ((- (rt0.c2)) IN (((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM rt0 ORDER BY ((- (rt0.c2)) IN (((rt0.c0) IS FALSE))));
SELECT ALL * FROM rt0 WHERE ((- (x''))) ORDER BY ((- (rt0.c2)) IN (((rt0.c0) IS FALSE)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0))==((rt0.c2))))) AND (((((rt0.c1, 0.1691831773678074, rt0.c1))=((NULL, rt0.c0, rt0.c1))))))) ORDER BY NULLIF(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((((rt0.c0))=((rt0.c2))))) AND (((((rt0.c1, 0.1691831773678074, rt0.c1))=((NULL, rt0.c0, rt0.c1))))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0))==((rt0.c2))))) AND (((((rt0.c1, 0.1691831773678074, rt0.c1))=((NULL, rt0.c0, rt0.c1))))))) ORDER BY NULLIF(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((((rt0.c0))=((rt0.c2))))) AND (((((rt0.c1, 0.1691831773678074, rt0.c1))=((NULL, rt0.c0, rt0.c1))))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0))==((rt0.c2))))) AND (((((rt0.c1, 0.1691831773678074, rt0.c1))=((NULL, rt0.c0, rt0.c1))))))) ORDER BY NULLIF(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))) DESC;
SELECT ALL * FROM rt0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'' COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY (((rt0.c1))>((rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1))>((rt0.c2))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY (((rt0.c1))>((rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1))>((rt0.c2))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY (((rt0.c1))>((rt0.c2))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((UPPER(rt0.c0))-((~ (rt0.c2))))) ORDER BY '-527780065', (((((rt0.c0)AND(rt0.c1)), ((rt0.c1)<=(rt0.c1)), rt0.c0 COLLATE RTRIM))>(((rt0.c0 IN ()), json_array_length('O_A/-鮈cs', rt0.c0), x'')));
SELECT SUM(count) FROM (SELECT ((((UPPER(rt0.c0))-((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY '-527780065', (((((rt0.c0)AND(rt0.c1)), ((rt0.c1)<=(rt0.c1)), rt0.c0 COLLATE RTRIM))>(((rt0.c0 IN ()), json_array_length('O_A/-鮈cs', rt0.c0), x''))));
SELECT * FROM rt0 WHERE (((UPPER(rt0.c0))-((~ (rt0.c2))))) ORDER BY '-527780065', (((((rt0.c0)AND(rt0.c1)), ((rt0.c1)<=(rt0.c1)), rt0.c0 COLLATE RTRIM))>(((rt0.c0 IN ()), json_array_length('O_A/-鮈cs', rt0.c0), x'')));
SELECT SUM(count) FROM (SELECT ((((UPPER(rt0.c0))-((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY '-527780065', (((((rt0.c0)AND(rt0.c1)), ((rt0.c1)<=(rt0.c1)), rt0.c0 COLLATE RTRIM))>(((rt0.c0 IN ()), json_array_length('O_A/-鮈cs', rt0.c0), x''))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c0)) AS REAL)) ORDER BY ((((((rt0.c2) IS TRUE))OR(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) IS TRUE))OR(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c0)) AS REAL)) ORDER BY ((((((rt0.c2) IS TRUE))OR(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) IS TRUE))OR(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c0)) AS REAL)) ORDER BY ((((((rt0.c2) IS TRUE))OR(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY x''  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (ABS(DISTINCT rt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (ABS(DISTINCT rt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (ABS(DISTINCT rt0.c1) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((('Uqpe _' IN ()), LIKELY(DISTINCT rt0.c0), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c0)<>(rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)) AND ((NULL, NULL, ((rt0.c1) ISNULL), (rt0.c2 IN ()), rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((('Uqpe _' IN ()), LIKELY(DISTINCT rt0.c0), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c0)!=(rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)) AND ((NULL, NULL, ((rt0.c1) ISNULL), (rt0.c2 IN ()), rt0.c1)))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((('Uqpe _' IN ()), LIKELY(DISTINCT rt0.c0), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c0)<>(rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)) AND ((NULL, NULL, ((rt0.c1) ISNULL), (rt0.c2 IN ()), rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((('Uqpe _' IN ()), LIKELY(DISTINCT rt0.c0), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c0)!=(rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)) AND ((NULL, NULL, ((rt0.c1) ISNULL), (rt0.c2 IN ()), rt0.c1)))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((('Uqpe _' IN ()), LIKELY(DISTINCT rt0.c0), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c0)<>(rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)) AND ((NULL, NULL, ((rt0.c1) ISNULL), (rt0.c2 IN ()), rt0.c1))));
SELECT * FROM rt0 WHERE ((((((((((~ (rt0.c2)))OR((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((0.5384738080506368))))))OR(((((-254616363)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(LOWER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt0.c2)))OR((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((0.5384738080506368))))))OR(((((-254616363)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(LOWER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((((~ (rt0.c2)))OR((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((0.5384738080506368))))))OR(((((-254616363)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(LOWER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt0.c2)))OR((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((0.5384738080506368))))))OR(((((-254616363)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(LOWER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((((~ (rt0.c2)))OR((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((0.5384738080506368))))))OR(((((-254616363)AND(rt0.c1)))OR(rt0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(LOWER(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (0.8389003894134264)))LIKE(((NULL)>=(rt0.c0))))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (0.8389003894134264)))LIKE(((NULL)>=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (0.8389003894134264)))LIKE(((NULL)>=(rt0.c0))))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (0.8389003894134264)))LIKE(((NULL)>=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (0.8389003894134264)))LIKE(((NULL)>=(rt0.c0))))) ORDER BY rt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))  WHEN rt0.c0 COLLATE BINARY THEN ((NULL)|(rt0.c0)) ELSE CAST(rt0.c2 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))  WHEN rt0.c0 COLLATE BINARY THEN ((NULL)|(rt0.c0)) ELSE CAST(rt0.c2 AS REAL) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))  WHEN rt0.c0 COLLATE BINARY THEN ((NULL)|(rt0.c0)) ELSE CAST(rt0.c2 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))  WHEN rt0.c0 COLLATE BINARY THEN ((NULL)|(rt0.c0)) ELSE CAST(rt0.c2 AS REAL) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))  WHEN rt0.c0 COLLATE BINARY THEN ((NULL)|(rt0.c0)) ELSE CAST(rt0.c2 AS REAL) END);
SELECT ALL * FROM rt0 WHERE (CAST((+ (0xffffffff9e17b166)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((+ (0xffffffff9e17b166)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((+ (0xffffffff9e17b166)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((+ (0xffffffff9e17b166)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((+ (0xffffffff9e17b166)) AS BLOB));
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0.1050514253471333 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0.1050514253471333 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0.1050514253471333 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0.1050514253471333 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0.1050514253471333 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('5\r'))  WHEN ((((x'23ef')AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) ELSE (rt0.c1 IN (rt0.c1, rt0.c0)) END) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((CAST(rt0.c1 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('5\r'))  WHEN ((((x'23ef')AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) ELSE (rt0.c1 IN (rt0.c1, rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((CAST(rt0.c1 AS REAL)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('5\r'))  WHEN ((((x'23ef')AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) ELSE (rt0.c1 IN (rt0.c1, rt0.c0)) END) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((CAST(rt0.c1 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('5\r'))  WHEN ((((x'23ef')AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) ELSE (rt0.c1 IN (rt0.c1, rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((CAST(rt0.c1 AS REAL)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND ('5\r'))  WHEN ((((x'23ef')AND(rt0.c0)))OR(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) ELSE (rt0.c1 IN (rt0.c1, rt0.c0)) END) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((CAST(rt0.c1 AS REAL)))) DESC;
