-- Time: 2024/06/09 22:12:29
-- Database: database37
-- Database version: 3.40.0
-- seed value: 3804910037
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB PRIMARY KEY DESC , c1 BLOB , c2 INT ) WITHOUT ROWID; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES (NULL, ''), (0.3105059640197869, NULL), (NULL, 0.3105059640197869); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('', x'e0b2', '744'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, 1511051540, 0.3105059640197869), (1.51105154E9, '1511051540', 1.51105154E9), ('1e500', 0.3105059640197869, 'ᡣ]'); -- 3ms;
INSERT OR ROLLBACK INTO t0(c2, c0) VALUES (NULL, 0.0656150467437987); -- 0ms;
ANALYZE; -- 2ms;
UPDATE t0 SET (c0)=(-1321444216) WHERE '1511051540'; -- 1ms;
UPDATE OR IGNORE t0 SET (c2)=(x''); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((t0.c0) IS TRUE) COLLATE NOCASE FROM t0 WHERE (((((0.23829939425555813) NOT BETWEEN ('0.3105059640197869') AND (NULL))) ISNULL)) LIMIT -1321444216; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (2126689982); -- 0ms;
INSERT OR REPLACE INTO t0(c2) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2) VALUES ('', x''), (x'04d4', '9{>Rf'), (NULL, x'f3b8'); -- 0ms;
PRAGMA default_cache_size = 593583983; -- 0ms;
INSERT OR REPLACE INTO t0(c1, c0, c2) VALUES ('0.23829939425555813', -9.45994165E8, 0.12785996597152527), (NULL, '-1321444216', '593583983'), ('-34648375', NULL, 0.21547930709532004); -- 2ms;
INSERT OR REPLACE INTO t0(c1, c0) VALUES (0.9844258381157724, NULL), ('', 0.45281111385340844), (NULL, x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), ('&	_ﯣP'), ('-34648375'); -- 1ms;
PRAGMA foreign_keys; -- 3ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA journal_size_limit = 7069762413279770214; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, +c5 TEXT ); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (2144822266, x'bc94', NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES ('-534634952'); -- 0ms;
INSERT OR ABORT INTO t0(c1) VALUES (x'2990'); -- 0ms;
INSERT OR REPLACE INTO t0(c1, c0) VALUES (0.9905523111296037, x''); -- 1ms;
ANALYZE; -- 0ms;
VACUUM; -- 2ms;
END TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c1, c2) VALUES (x'', 0.48643254373016465); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO t1(c1, c2) VALUES ('-945994165', x'4bfd'); -- 0ms;
INSERT OR REPLACE INTO t1(c1) VALUES (x'fb5d'), (0.21547930709532004), (0.5902215894976708); -- 0ms;
INSERT OR ABORT INTO t1 VALUES ('&	_ﯣP', NULL, x''); -- 0ms;
INSERT OR FAIL INTO t1(c1, c0) VALUES ('r~', 0.9844258381157724); -- 0ms;
INSERT OR ROLLBACK INTO t1(c2, c0) VALUES ('', '0.12785996597152527'), (-9.45994165E8, NULL), (-1.7976931348623157E308, 0.21547930709532004); -- 1ms;
INSERT OR FAIL INTO t1 VALUES ('', x'', 1309163453); -- 0ms;
INSERT OR ROLLBACK INTO t1(c1, c2, c0) VALUES (NULL, x'', NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c2, c0) VALUES (0.9834127653851009, 0Xffffffffafee1ce8); -- 3ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 10ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.9834127653851009), (NULL), (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA integrity_check; -- 0ms;
ALTER TABLE t1 ADD COLUMN c30 BLOB CHECK ( (- (((t1.c2)LIKE(t1.c0))))); -- 1ms;
ALTER TABLE t1 RENAME TO t0; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'6eda'), ('-1197953764'), ('|sQJ'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.03436296353618706); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'1951'), ('1906050226'), (''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (x'd59b'); -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c1, c0) VALUES (NULL, '', x'8e29'); -- 1ms;
CREATE TEMP TABLE IF NOT EXISTS t1 (c0 BLOB ); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('I4CEGYMwI', x'', ''); -- 6ms;
ANALYZE; -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x''); -- 16ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME TO t2; -- 1ms;
INSERT OR IGNORE INTO t0(c2, c1, c0) VALUES (0.0656150467437987, 482154595, x''); -- 1ms;
INSERT OR IGNORE INTO t0(c0, c2) VALUES ('-1321444216', x'0f64'), (0.36813524524733476, NULL), (x'', 0.9905523111296037); -- 16ms;
PRAGMA legacy_file_format = true; -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT COUNT(*) FROM t0, vt0, t2 WHERE (1.906050226E9);
SELECT SUM(count) FROM (SELECT ALL ((1.906050226E9) IS TRUE)  as count FROM t0, vt0, t2);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE (1.906050226E9);
SELECT SUM(count) FROM (SELECT ALL ((1.906050226E9) IS TRUE)  as count FROM t0, vt0, t2);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE (1.906050226E9);
SELECT * FROM vt0, v0, t0, t2 WHERE ((((vt0.c0, t0.c1 COLLATE BINARY, ((((((((vt0.c0)OR(v0.c0)))OR(t2.c0)))AND(vt0.c0)))AND(0.6662379084284239))))<(((t2.c0 IN ()), IFNULL(DISTINCT vt0.c0, vt0.c0), '/UX' COLLATE RTRIM)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t0.c1 COLLATE BINARY, ((((((((vt0.c0)OR(v0.c0)))OR(t2.c0)))AND(vt0.c0)))AND(0.6662379084284239))))<(((t2.c0 IN ()), IFNULL(DISTINCT vt0.c0, vt0.c0), '/UX' COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0, t0, t2 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0, v0, t0, t2 WHERE ((((vt0.c0, t0.c1 COLLATE BINARY, ((((((((vt0.c0)OR(v0.c0)))OR(t2.c0)))AND(vt0.c0)))AND(0.6662379084284239))))<(((t2.c0 IN ()), IFNULL(DISTINCT vt0.c0, vt0.c0), '/UX' COLLATE RTRIM)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t0.c1 COLLATE BINARY, ((((((((vt0.c0)OR(v0.c0)))OR(t2.c0)))AND(vt0.c0)))AND(0.6662379084284239))))<(((t2.c0 IN ()), IFNULL(DISTINCT vt0.c0, vt0.c0), '/UX' COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0, t0, t2 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0, v0, t0, t2 WHERE ((((vt0.c0, t0.c1 COLLATE BINARY, ((((((((vt0.c0)OR(v0.c0)))OR(t2.c0)))AND(vt0.c0)))AND(0.6662379084284239))))<(((t2.c0 IN ()), IFNULL(DISTINCT vt0.c0, vt0.c0), '/UX' COLLATE RTRIM)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t2 WHERE ('') ORDER BY CASE (t2.c0 IN (t2.c0, t2.c0))  WHEN t2.c0 THEN CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END WHEN x'' THEN (((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))) WHEN t2.c0 THEN ((t2.c0) BETWEEN (t2.c0) AND (t2.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t2 ORDER BY CASE (t2.c0 IN (t2.c0, t2.c0))  WHEN t2.c0 THEN CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END WHEN x'' THEN (((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))) WHEN t2.c0 THEN ((t2.c0) BETWEEN (t2.c0) AND (t2.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE ('') ORDER BY CASE (t2.c0 IN (t2.c0, t2.c0))  WHEN t2.c0 THEN CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END WHEN x'' THEN (((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))) WHEN t2.c0 THEN ((t2.c0) BETWEEN (t2.c0) AND (t2.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t2 ORDER BY CASE (t2.c0 IN (t2.c0, t2.c0))  WHEN t2.c0 THEN CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END WHEN x'' THEN (((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))) WHEN t2.c0 THEN ((t2.c0) BETWEEN (t2.c0) AND (t2.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE ('') ORDER BY CASE (t2.c0 IN (t2.c0, t2.c0))  WHEN t2.c0 THEN CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END WHEN x'' THEN (((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))) WHEN t2.c0 THEN ((t2.c0) BETWEEN (t2.c0) AND (t2.c0)) END ASC  NULLS FIRST;
SELECT * FROM v0 FULL OUTER JOIN t2 ON (t0.c0 IN (t2.c0)) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN t0 ON t2.c0 WHERE ((~ ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NULL IN ())))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t2 ON (t0.c0 IN (t2.c0)) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN t0 ON t2.c0);
SELECT * FROM v0 FULL OUTER JOIN t2 ON (t0.c0 IN (t2.c0)) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN t0 ON t2.c0 WHERE ((~ ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NULL IN ())))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t2 ON (t0.c0 IN (t2.c0)) COLLATE RTRIM COLLATE NOCASE LEFT OUTER JOIN t0 ON t2.c0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(0.40188561764935116 AS TEXT)))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(0.40188561764935116 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(0.40188561764935116 AS TEXT)))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(0.40188561764935116 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(0.40188561764935116 AS TEXT)))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (NOT (vt0.c0)) END;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))<('-1693123613')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))<('-1693123613'))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))<('-1693123613')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))<('-1693123613'))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))<('-1693123613')));
SELECT ALL * FROM t0, t2, vt0, v0 WHERE (((-1197953764) BETWEEN (TIME(v0.c0, t0.c2, t0.c1)) AND ((~ (vt0.c0))))) ORDER BY ((((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) NOT BETWEEN (((((t0.c2)AND(v0.c0)))OR(t2.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-1197953764) BETWEEN (TIME(v0.c0, t0.c2, t0.c1)) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM t0, t2, vt0, v0 ORDER BY ((((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) NOT BETWEEN (((((t0.c2)AND(v0.c0)))OR(t2.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM t0, t2, vt0, v0 WHERE (((-1197953764) BETWEEN (TIME(v0.c0, t0.c2, t0.c1)) AND ((~ (vt0.c0))))) ORDER BY ((((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) NOT BETWEEN (((((t0.c2)AND(v0.c0)))OR(t2.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-1197953764) BETWEEN (TIME(v0.c0, t0.c2, t0.c1)) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM t0, t2, vt0, v0 ORDER BY ((((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) NOT BETWEEN (((((t0.c2)AND(v0.c0)))OR(t2.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM t0, t2, vt0, v0 WHERE (((-1197953764) BETWEEN (TIME(v0.c0, t0.c2, t0.c1)) AND ((~ (vt0.c0))))) ORDER BY ((((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) NOT BETWEEN (((((t0.c2)AND(v0.c0)))OR(t2.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0, t2 LEFT OUTER JOIN vt0 ON (~ ((('-534634952')==(v0.c0)))) WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) BETWEEN (x'') AND (((t0.c0)+(t0.c0))))) ORDER BY 0x7d43d246, t0.c0 DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) BETWEEN (x'') AND (((t0.c0)+(t0.c0))))) IS TRUE)  as count FROM v0, t0, t2 LEFT OUTER JOIN vt0 ON (~ ((('-534634952')==(v0.c0)))) ORDER BY 0X7d43d246, t0.c0 DESC  NULLS FIRST, NULL);
SELECT COUNT(*) FROM v0, t0, t2 LEFT OUTER JOIN vt0 ON (~ ((('-534634952')==(v0.c0)))) WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) BETWEEN (x'') AND (((t0.c0)+(t0.c0))))) ORDER BY 0x7d43d246, t0.c0 DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) BETWEEN (x'') AND (((t0.c0)+(t0.c0))))) IS TRUE)  as count FROM v0, t0, t2 LEFT OUTER JOIN vt0 ON (~ ((('-534634952')==(v0.c0)))) ORDER BY 0X7d43d246, t0.c0 DESC  NULLS FIRST, NULL);
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN v0 ON CASE WHEN ((((t0.c2)OR(t0.c1)))AND(t0.c0)) THEN (+ (t0.c0)) ELSE ((t0.c2)*(vt0.c0)) END CROSS JOIN t2 ON (- ((0.7990922182201228 IN (0.8410826841821498, t0.c0)))) WHERE ((((t0.c2)) BETWEEN ((CASE WHEN t2.c0 THEN t0.c2 ELSE t2.c0 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((CASE WHEN t2.c0 THEN t0.c2 ELSE t2.c0 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON CASE WHEN ((((t0.c2)OR(t0.c1)))AND(t0.c0)) THEN (+ (t0.c0)) ELSE ((t0.c2)*(vt0.c0)) END CROSS JOIN t2 ON (- ((0.7990922182201228 IN (0.8410826841821498, t0.c0)))));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN v0 ON CASE WHEN ((((t0.c2)OR(t0.c1)))AND(t0.c0)) THEN (+ (t0.c0)) ELSE ((t0.c2)*(vt0.c0)) END CROSS JOIN t2 ON (- ((0.7990922182201228 IN (0.8410826841821498, t0.c0)))) WHERE ((((t0.c2)) BETWEEN ((CASE WHEN t2.c0 THEN t0.c2 ELSE t2.c0 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((CASE WHEN t2.c0 THEN t0.c2 ELSE t2.c0 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON CASE WHEN ((((t0.c2)OR(t0.c1)))AND(t0.c0)) THEN (+ (t0.c0)) ELSE ((t0.c2)*(vt0.c0)) END CROSS JOIN t2 ON (- ((0.7990922182201228 IN (0.8410826841821498, t0.c0)))));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN v0 ON CASE WHEN ((((t0.c2)OR(t0.c1)))AND(t0.c0)) THEN (+ (t0.c0)) ELSE ((t0.c2)*(vt0.c0)) END CROSS JOIN t2 ON (- ((0.7990922182201228 IN (0.8410826841821498, t0.c0)))) WHERE ((((t0.c2)) BETWEEN ((CASE WHEN t2.c0 THEN t0.c2 ELSE t2.c0 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT ALL COUNT(*) FROM v0, t2 NOT INDEXED, t0 WHERE (CAST(t0.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY (((t0.c0)) BETWEEN ((((t0.c2) NOT NULL))) AND ((((t2.c0)GLOB('-115298798')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0, t2, t0 ORDER BY (((t0.c0)) BETWEEN ((((t0.c2) NOT NULL))) AND ((((t2.c0)GLOB('-115298798')))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t2 NOT INDEXED, t0 WHERE (CAST(t0.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY (((t0.c0)) BETWEEN ((((t0.c2) NOT NULL))) AND ((((t2.c0)GLOB('-115298798')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0, t2, t0 ORDER BY (((t0.c0)) BETWEEN ((((t0.c2) NOT NULL))) AND ((((t2.c0)GLOB('-115298798')))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t2 NOT INDEXED, t0 WHERE (CAST(t0.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY (((t0.c0)) BETWEEN ((((t0.c2) NOT NULL))) AND ((((t2.c0)GLOB('-115298798')))))  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, vt0, t2 WHERE (LIKELY(DISTINCT ((t0.c1)<>(vt0.c0)))) ORDER BY CASE WHEN (((t2.c0))>=((t0.c2))) THEN (('A.') NOT NULL) ELSE SQLITE_SOURCE_ID() END ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t0.c1)<>(vt0.c0)))) IS TRUE)  as count FROM t0, v0, vt0, t2 ORDER BY CASE WHEN (((t2.c0))>=((t0.c2))) THEN (('A.') NOT NULL) ELSE SQLITE_SOURCE_ID() END ASC);
SELECT COUNT(*) FROM t0, v0, vt0, t2 WHERE (LIKELY(DISTINCT ((t0.c1)<>(vt0.c0)))) ORDER BY CASE WHEN (((t2.c0))>=((t0.c2))) THEN (('A.') NOT NULL) ELSE SQLITE_SOURCE_ID() END ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t0.c1)<>(vt0.c0)))) IS TRUE)  as count FROM t0, v0, vt0, t2 ORDER BY CASE WHEN (((t2.c0))>=((t0.c2))) THEN (('A.') NOT NULL) ELSE SQLITE_SOURCE_ID() END ASC);
SELECT COUNT(*) FROM t0, v0, vt0, t2 WHERE (LIKELY(DISTINCT ((t0.c1)<>(vt0.c0)))) ORDER BY CASE WHEN (((t2.c0))>=((t0.c2))) THEN (('A.') NOT NULL) ELSE SQLITE_SOURCE_ID() END ASC;
SELECT COUNT(*) FROM v0, t2, vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0)))&(vt0.c0))) IS TRUE)  as count FROM v0, t2, vt0);
SELECT COUNT(*) FROM v0, t2, vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0)))&(vt0.c0))) IS TRUE)  as count FROM v0, t2, vt0);
SELECT COUNT(*) FROM v0, t2, vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))&(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('0.9844258381157724')) THEN (NOT (vt0.c0)) WHEN ('QuG' IN (vt0.c0, vt0.c0)) THEN vt0.c0 WHEN (~ (vt0.c0)) THEN NULL WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('0.9844258381157724')) THEN (NOT (vt0.c0)) WHEN ('QuG' IN (vt0.c0, vt0.c0)) THEN vt0.c0 WHEN (~ (vt0.c0)) THEN NULL WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('0.9844258381157724')) THEN (NOT (vt0.c0)) WHEN ('QuG' IN (vt0.c0, vt0.c0)) THEN vt0.c0 WHEN (~ (vt0.c0)) THEN NULL WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('0.9844258381157724')) THEN (NOT (vt0.c0)) WHEN ('QuG' IN (vt0.c0, vt0.c0)) THEN vt0.c0 WHEN (~ (vt0.c0)) THEN NULL WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND ('0.9844258381157724')) THEN (NOT (vt0.c0)) WHEN ('QuG' IN (vt0.c0, vt0.c0)) THEN vt0.c0 WHEN (~ (vt0.c0)) THEN NULL WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT * FROM v0, vt0, t2 WHERE ((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (t2.c0)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (t2.c0))) IS TRUE)  as count FROM v0, vt0, t2);
SELECT * FROM v0, vt0, t2 WHERE ((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (t2.c0)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (t2.c0))) IS TRUE)  as count FROM v0, vt0, t2);
SELECT * FROM v0, vt0, t2 WHERE ((((((v0.c0))>=((v0.c0)))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (t2.c0)));
SELECT COUNT(*) FROM t2, v0 WHERE (((CAST(v0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM t2, v0);
SELECT COUNT(*) FROM t2, v0 WHERE (((CAST(v0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM t2, v0);
SELECT COUNT(*) FROM t2, v0 WHERE (((CAST(v0.c0 AS REAL)) IS TRUE));
SELECT ALL COUNT(*) FROM t2, v0 RIGHT OUTER JOIN t0 ON UPPER((NULL IN (1.51105154E9))) CROSS JOIN vt0 ON CAST(NULL AS REAL) WHERE (CASE WHEN (t0.c1 IN ()) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c1 IN ()) THEN t0.c0 END) IS TRUE)  as count FROM t2, v0 RIGHT OUTER JOIN t0 ON UPPER((NULL IN (1.51105154E9))) CROSS JOIN vt0 ON CAST(NULL AS REAL));
SELECT ALL COUNT(*) FROM t2, v0 RIGHT OUTER JOIN t0 ON UPPER((NULL IN (1.51105154E9))) CROSS JOIN vt0 ON CAST(NULL AS REAL) WHERE (CASE WHEN (t0.c1 IN ()) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c1 IN ()) THEN t0.c0 END) IS TRUE)  as count FROM t2, v0 RIGHT OUTER JOIN t0 ON UPPER((NULL IN (1.51105154E9))) CROSS JOIN vt0 ON CAST(NULL AS REAL));
SELECT ALL COUNT(*) FROM t2, v0 RIGHT OUTER JOIN t0 ON UPPER((NULL IN (1.51105154E9))) CROSS JOIN vt0 ON CAST(NULL AS REAL) WHERE (CASE WHEN (t0.c1 IN ()) THEN t0.c0 END);
SELECT ALL COUNT(*) FROM t2, vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t2.c0 THEN ((t0.c0) BETWEEN (t0.c1) AND (t2.c0)) ELSE CAST(t2.c0 AS BLOB) END RIGHT OUTER JOIN v0 ON ((((t0.c1 COLLATE BINARY)OR(((NULL) BETWEEN (t2.c0) AND (t0.c0)))))AND(CASE t0.c2  WHEN t0.c0 THEN t0.c0 END)) WHERE (((NOT (x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (x'')) IN ())) IS TRUE)  as count FROM t2, vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t2.c0 THEN ((t0.c0) BETWEEN (t0.c1) AND (t2.c0)) ELSE CAST(t2.c0 AS BLOB) END RIGHT OUTER JOIN v0 ON ((((t0.c1 COLLATE BINARY)OR(((NULL) BETWEEN (t2.c0) AND (t0.c0)))))AND(CASE t0.c2  WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t2, vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t2.c0 THEN ((t0.c0) BETWEEN (t0.c1) AND (t2.c0)) ELSE CAST(t2.c0 AS BLOB) END RIGHT OUTER JOIN v0 ON ((((t0.c1 COLLATE BINARY)OR(((NULL) BETWEEN (t2.c0) AND (t0.c0)))))AND(CASE t0.c2  WHEN t0.c0 THEN t0.c0 END)) WHERE (((NOT (x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (x'')) IN ())) IS TRUE)  as count FROM t2, vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t2.c0 THEN ((t0.c0) BETWEEN (t0.c1) AND (t2.c0)) ELSE CAST(t2.c0 AS BLOB) END RIGHT OUTER JOIN v0 ON ((((t0.c1 COLLATE BINARY)OR(((NULL) BETWEEN (t2.c0) AND (t0.c0)))))AND(CASE t0.c2  WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t2, vt0 RIGHT OUTER JOIN t0 ON CASE WHEN t2.c0 THEN ((t0.c0) BETWEEN (t0.c1) AND (t2.c0)) ELSE CAST(t2.c0 AS BLOB) END RIGHT OUTER JOIN v0 ON ((((t0.c1 COLLATE BINARY)OR(((NULL) BETWEEN (t2.c0) AND (t0.c0)))))AND(CASE t0.c2  WHEN t0.c0 THEN t0.c0 END)) WHERE (((NOT (x'')) IN ()));
SELECT COUNT(*) FROM v0, t2 WHERE (((t2.c0 COLLATE RTRIM)<=((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0)))))) ORDER BY IFNULL(DISTINCT ((v0.c0) ISNULL), ((t2.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t2.c0 COLLATE RTRIM)<=((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0)))))) IS TRUE)  as count FROM v0, t2 ORDER BY IFNULL(DISTINCT ((v0.c0) ISNULL), ((t2.c0) NOTNULL)));
SELECT COUNT(*) FROM v0, t2 WHERE (((t2.c0 COLLATE RTRIM)<=((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0)))))) ORDER BY IFNULL(DISTINCT ((v0.c0) ISNULL), ((t2.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t2.c0 COLLATE RTRIM)<=((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0)))))) IS TRUE)  as count FROM v0, t2 ORDER BY IFNULL(DISTINCT ((v0.c0) ISNULL), ((t2.c0) NOTNULL)));
SELECT COUNT(*) FROM v0, t2 WHERE (((t2.c0 COLLATE RTRIM)<=((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0)))))) ORDER BY IFNULL(DISTINCT ((v0.c0) ISNULL), ((t2.c0) NOTNULL));
SELECT COUNT(*) FROM t2, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM t2, vt0);
SELECT COUNT(*) FROM t2, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM t2, vt0);
SELECT COUNT(*) FROM t2, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB));
SELECT * FROM t2, vt0, v0, t0 WHERE ((- (CASE WHEN vt0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t2, vt0, v0, t0);
SELECT * FROM t2, vt0, v0, t0 WHERE ((- (CASE WHEN vt0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t2, vt0, v0, t0);
SELECT * FROM t2, vt0, v0, t0 WHERE ((- (CASE WHEN vt0.c0 THEN t0.c0 END)));
SELECT COUNT(*) FROM t0, t2, v0, vt0 WHERE (t0.c0) ORDER BY ((INSTR(t0.c2, t2.c0)) NOT BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, t2, v0, vt0 ORDER BY ((INSTR(t0.c2, t2.c0)) NOT BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS REAL))) DESC);
SELECT COUNT(*) FROM t0, t2, v0, vt0 WHERE (t0.c0) ORDER BY ((INSTR(t0.c2, t2.c0)) NOT BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, t2, v0, vt0 ORDER BY ((INSTR(t0.c2, t2.c0)) NOT BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS REAL))) DESC);
SELECT COUNT(*) FROM t0, t2, v0, vt0 WHERE (t0.c0) ORDER BY ((INSTR(t0.c2, t2.c0)) NOT BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c0 AS REAL))) DESC;
SELECT ALL COUNT(*) FROM t2 WHERE (CAST(t2.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t2.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (CAST(t2.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t2.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (CAST(t2.c0 COLLATE BINARY AS REAL));
SELECT ALL * FROM vt0, t2, v0 WHERE ((((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, t2.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, t2.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0, t2, v0);
SELECT ALL * FROM vt0, t2, v0 WHERE ((((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, t2.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, t2.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0, t2, v0);
SELECT ALL * FROM vt0, t2, v0 WHERE ((((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, t2.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT COUNT(*) FROM t0 WHERE (0.9905523111296037) ORDER BY (NOT (CASE WHEN t0.c1 THEN x'' WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9905523111296037) IS TRUE)  as count FROM t0 ORDER BY (NOT (CASE WHEN t0.c1 THEN x'' WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (0.9905523111296037) ORDER BY (NOT (CASE WHEN t0.c1 THEN x'' WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9905523111296037) IS TRUE)  as count FROM t0 ORDER BY (NOT (CASE WHEN t0.c1 THEN x'' WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (0.9905523111296037) ORDER BY (NOT (CASE WHEN t0.c1 THEN x'' WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (NULL);
SELECT ALL * FROM t2, vt0 WHERE ((~ (((t2.c0) IS FALSE)))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), 0.8657443762359608  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t2.c0) IS FALSE)))) IS TRUE)  as count FROM t2, vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), 0.8657443762359608  NULLS FIRST, NULL);
SELECT ALL * FROM t2, vt0 WHERE ((~ (((t2.c0) IS FALSE)))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), 0.8657443762359608  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t2.c0) IS FALSE)))) IS TRUE)  as count FROM t2, vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), 0.8657443762359608  NULLS FIRST, NULL);
SELECT ALL * FROM t2, vt0 WHERE ((~ (((t2.c0) IS FALSE)))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), 0.8657443762359608  NULLS FIRST, NULL;
SELECT * FROM v0, vt0, t0, t2 WHERE (((((t0.c2 IN ())))<>((t0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))!=((t0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0, t0, t2);
SELECT * FROM v0, vt0, t0, t2 WHERE (((((t0.c2 IN ())))<>((t0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))!=((t0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0, t0, t2);
SELECT * FROM v0, vt0, t0, t2 WHERE (((((t0.c2 IN ())))<>((t0.c2 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t2, v0 WHERE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)), ((((((((t2.c0)OR(v0.c0)))OR(t2.c0)))OR(v0.c0)))OR(t2.c0)), ((v0.c0)LIKE(v0.c0))))!=((((t2.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)*(v0.c0)), (((v0.c0, t2.c0, '1802267369', v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, t2.c0, v0.c0))))))) ORDER BY (NOT (ROUND(v0.c0, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)), ((((((((t2.c0)OR(v0.c0)))OR(t2.c0)))OR(v0.c0)))OR(t2.c0)), ((v0.c0)LIKE(v0.c0))))<>((((t2.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)*(v0.c0)), (((v0.c0, t2.c0, '1802267369', v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, t2.c0, v0.c0))))))) IS TRUE)  as count FROM t2, v0 ORDER BY (NOT (ROUND(v0.c0, v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, v0 WHERE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)), ((((((((t2.c0)OR(v0.c0)))OR(t2.c0)))OR(v0.c0)))OR(t2.c0)), ((v0.c0)LIKE(v0.c0))))!=((((t2.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)*(v0.c0)), (((v0.c0, t2.c0, '1802267369', v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, t2.c0, v0.c0))))))) ORDER BY (NOT (ROUND(v0.c0, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)), ((((((((t2.c0)OR(v0.c0)))OR(t2.c0)))OR(v0.c0)))OR(t2.c0)), ((v0.c0)LIKE(v0.c0))))<>((((t2.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)*(v0.c0)), (((v0.c0, t2.c0, '1802267369', v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, t2.c0, v0.c0))))))) IS TRUE)  as count FROM t2, v0 ORDER BY (NOT (ROUND(v0.c0, v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, v0 WHERE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)), ((((((((t2.c0)OR(v0.c0)))OR(t2.c0)))OR(v0.c0)))OR(t2.c0)), ((v0.c0)LIKE(v0.c0))))!=((((t2.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)*(v0.c0)), (((v0.c0, t2.c0, '1802267369', v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, t2.c0, v0.c0))))))) ORDER BY (NOT (ROUND(v0.c0, v0.c0)))  NULLS FIRST;
SELECT * FROM t2 WHERE (((t2.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t2.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (((t2.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t2.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (((t2.c0 COLLATE BINARY) ISNULL));
SELECT * FROM t2, vt0, t0 WHERE (0.4991636024532343) ORDER BY t2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.4991636024532343) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY t2.c0  NULLS FIRST);
SELECT * FROM t2, vt0, t0 WHERE (0.4991636024532343) ORDER BY t2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.4991636024532343) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY t2.c0  NULLS FIRST);
SELECT * FROM t2, vt0, t0 WHERE (0.4991636024532343) ORDER BY t2.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, t2 WHERE (rtreenode(t0.c0 COLLATE RTRIM, ((t2.c0)LIKE(t2.c0)))) ORDER BY CAST(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(t0.c0 COLLATE RTRIM, ((t2.c0)LIKE(t2.c0)))) IS TRUE)  as count FROM t0, t2 ORDER BY CAST(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (rtreenode(t0.c0 COLLATE RTRIM, ((t2.c0)LIKE(t2.c0)))) ORDER BY CAST(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(t0.c0 COLLATE RTRIM, ((t2.c0)LIKE(t2.c0)))) IS TRUE)  as count FROM t0, t2 ORDER BY CAST(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (rtreenode(t0.c0 COLLATE RTRIM, ((t2.c0)LIKE(t2.c0)))) ORDER BY CAST(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END AS BLOB) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, t2, t0, vt0 WHERE (((t0.c2)>(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c2)>(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t2, t0, vt0);
SELECT COUNT(*) FROM v0, t2, t0, vt0 WHERE (((t0.c2)>(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c2)>(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t2, t0, vt0);
SELECT COUNT(*) FROM v0, t2, t0, vt0 WHERE (((t0.c2)>(NULL)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, t2 WHERE (((((CAST(t0.c2 AS INTEGER))AND(CAST(1210152592 AS NUMERIC))))AND(t2.c0 COLLATE NOCASE))) ORDER BY ((((((((((((((0X5484e897)-('')))OR(t0.c2 COLLATE RTRIM)))OR(((t0.c0)<=(t0.c0)))))OR(t0.c0)))AND((- (t2.c0)))))OR(CAST(t2.c0 AS REAL))))OR((t2.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c2 AS INTEGER))AND(CAST(1210152592 AS NUMERIC))))AND(t2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, t2 ORDER BY ((((((((((((((0x5484e897)-('')))OR(t0.c2 COLLATE RTRIM)))OR(((t0.c0)<=(t0.c0)))))OR(t0.c0)))AND((- (t2.c0)))))OR(CAST(t2.c0 AS REAL))))OR((t2.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE (((((CAST(t0.c2 AS INTEGER))AND(CAST(1210152592 AS NUMERIC))))AND(t2.c0 COLLATE NOCASE))) ORDER BY ((((((((((((((0X5484e897)-('')))OR(t0.c2 COLLATE RTRIM)))OR(((t0.c0)<=(t0.c0)))))OR(t0.c0)))AND((- (t2.c0)))))OR(CAST(t2.c0 AS REAL))))OR((t2.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c2 AS INTEGER))AND(CAST(1210152592 AS NUMERIC))))AND(t2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, t2 ORDER BY ((((((((((((((0x5484e897)-('')))OR(t0.c2 COLLATE RTRIM)))OR(((t0.c0)<=(t0.c0)))))OR(t0.c0)))AND((- (t2.c0)))))OR(CAST(t2.c0 AS REAL))))OR((t2.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE (((((CAST(t0.c2 AS INTEGER))AND(CAST(1210152592 AS NUMERIC))))AND(t2.c0 COLLATE NOCASE))) ORDER BY ((((((((((((((0X5484e897)-('')))OR(t0.c2 COLLATE RTRIM)))OR(((t0.c0)<=(t0.c0)))))OR(t0.c0)))AND((- (t2.c0)))))OR(CAST(t2.c0 AS REAL))))OR((t2.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c2 AS NUMERIC));
SELECT * FROM t0 WHERE (CASE '1210152592'  WHEN ((t0.c0) ISNULL) THEN ((t0.c0) ISNULL) WHEN COALESCE(t0.c2, t0.c0) THEN ((t0.c2) NOTNULL) WHEN NULL THEN t0.c2 ELSE LOWER(DISTINCT t0.c1) END) ORDER BY (((NOT ('I4CEGYMwI'))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE '1210152592'  WHEN ((t0.c0) ISNULL) THEN ((t0.c0) ISNULL) WHEN COALESCE(t0.c2, t0.c0) THEN ((t0.c2) NOTNULL) WHEN NULL THEN t0.c2 ELSE LOWER(DISTINCT t0.c1) END) IS TRUE)  as count FROM t0 ORDER BY (((NOT ('I4CEGYMwI'))) NOT NULL) ASC);
SELECT * FROM t0 WHERE (CASE '1210152592'  WHEN ((t0.c0) ISNULL) THEN ((t0.c0) ISNULL) WHEN COALESCE(t0.c2, t0.c0) THEN ((t0.c2) NOTNULL) WHEN NULL THEN t0.c2 ELSE LOWER(DISTINCT t0.c1) END) ORDER BY (((NOT ('I4CEGYMwI'))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE '1210152592'  WHEN ((t0.c0) ISNULL) THEN ((t0.c0) ISNULL) WHEN COALESCE(t0.c2, t0.c0) THEN ((t0.c2) NOTNULL) WHEN NULL THEN t0.c2 ELSE LOWER(DISTINCT t0.c1) END) IS TRUE)  as count FROM t0 ORDER BY (((NOT ('I4CEGYMwI'))) NOT NULL) ASC);
SELECT * FROM t0 WHERE (CASE '1210152592'  WHEN ((t0.c0) ISNULL) THEN ((t0.c0) ISNULL) WHEN COALESCE(t0.c2, t0.c0) THEN ((t0.c2) NOTNULL) WHEN NULL THEN t0.c2 ELSE LOWER(DISTINCT t0.c1) END) ORDER BY (((NOT ('I4CEGYMwI'))) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS TRUE)) NOT NULL)) ORDER BY CAST(t0.c1 COLLATE RTRIM AS TEXT) DESC, ((((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))AND('1303878417')))OR(t0.c0)))LIKE((((t0.c1)) NOT BETWEEN ((x'')) AND ((t0.c2))))) ASC, ((((1.309163453E9, t0.c2, t0.c1)) NOT BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((t0.c2, t0.c1, t0.c2))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c1 COLLATE RTRIM AS TEXT) DESC, ((((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))AND('1303878417')))OR(t0.c0)))LIKE((((t0.c1)) NOT BETWEEN ((x'')) AND ((t0.c2))))) ASC, ((((1.309163453E9, t0.c2, t0.c1)) NOT BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((t0.c2, t0.c1, t0.c2))) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS TRUE)) NOT NULL)) ORDER BY CAST(t0.c1 COLLATE RTRIM AS TEXT) DESC, ((((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))AND('1303878417')))OR(t0.c0)))LIKE((((t0.c1)) NOT BETWEEN ((x'')) AND ((t0.c2))))) ASC, ((((1.309163453E9, t0.c2, t0.c1)) NOT BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((t0.c2, t0.c1, t0.c2))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c1 COLLATE RTRIM AS TEXT) DESC, ((((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))AND('1303878417')))OR(t0.c0)))LIKE((((t0.c1)) NOT BETWEEN ((x'')) AND ((t0.c2))))) ASC, ((((1.309163453E9, t0.c2, t0.c1)) NOT BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((t0.c2, t0.c1, t0.c2))) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS TRUE)) NOT NULL)) ORDER BY CAST(t0.c1 COLLATE RTRIM AS TEXT) DESC, ((((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))AND('1303878417')))OR(t0.c0)))LIKE((((t0.c1)) NOT BETWEEN ((x'')) AND ((t0.c2))))) ASC, ((((1.309163453E9, t0.c2, t0.c1)) NOT BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((t0.c2, t0.c1, t0.c2))) IN ()) DESC;
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY (+ (LENGTH('I4CEGYMWI'))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ (LENGTH('I4CEGYMWI'))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY (+ (LENGTH('I4CEGYMWI'))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ (LENGTH('I4CEGYMWI'))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY (+ (LENGTH('I4CEGYMWI'))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (HEX(0.8759994193186126 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((HEX(0.8759994193186126 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (HEX(0.8759994193186126 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((HEX(0.8759994193186126 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (HEX(0.8759994193186126 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((0.5812062356031824 COLLATE NOCASE)<(CAST('1511051540' AS INTEGER))) RIGHT OUTER JOIN t2 ON (((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0)))) ISNULL) WHERE (((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)+(((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)+(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((0.5812062356031824 COLLATE NOCASE)<(CAST('1511051540' AS INTEGER))) RIGHT OUTER JOIN t2 ON (((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0)))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((0.5812062356031824 COLLATE NOCASE)<(CAST('1511051540' AS INTEGER))) RIGHT OUTER JOIN t2 ON (((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0)))) ISNULL) WHERE (((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)+(((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)+(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((0.5812062356031824 COLLATE NOCASE)<(CAST('1511051540' AS INTEGER))) RIGHT OUTER JOIN t2 ON (((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0)))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((0.5812062356031824 COLLATE NOCASE)<(CAST('1511051540' AS INTEGER))) RIGHT OUTER JOIN t2 ON (((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((vt0.c0)))) ISNULL) WHERE (((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)+(((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT ALL * FROM vt0, t2, v0 NOT INDEXED, t0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, t2, v0, t0);
SELECT ALL * FROM vt0, t2, v0 NOT INDEXED, t0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, t2, v0, t0);
SELECT ALL * FROM vt0, t2, v0 NOT INDEXED, t0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (LIKELIHOOD(vt0.c0, 0.0663007821656022)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (LIKELIHOOD(vt0.c0, 0.0663007821656022)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (LIKELIHOOD(vt0.c0, 0.0663007821656022)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (LIKELIHOOD(vt0.c0, 0.0663007821656022)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND (LIKELIHOOD(vt0.c0, 0.0663007821656022)))  NULLS FIRST;
SELECT COUNT(*) FROM t2 WHERE ((((((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0)))) BETWEEN (((((((((((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))OR(t2.c0))) AND (((t2.c0)||(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0)))) BETWEEN (((((((((((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))OR(t2.c0))) AND (((t2.c0)||(t2.c0))))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((((((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0)))) BETWEEN (((((((((((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))OR(t2.c0))) AND (((t2.c0)||(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0)))) BETWEEN (((((((((((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))OR(t2.c0))) AND (((t2.c0)||(t2.c0))))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((((((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0)))) BETWEEN (((((((((((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))OR(t2.c0))) AND (((t2.c0)||(t2.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0)OR(vt0.c0)), 0.4666585888042417);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0)OR(vt0.c0)), 0.4666585888042417));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0)OR(vt0.c0)), 0.4666585888042417);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0)OR(vt0.c0)), 0.4666585888042417));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0)OR(vt0.c0)), 0.4666585888042417);
SELECT COUNT(*) FROM v0, t0 WHERE (((CAST(x'' AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((CAST(x'' AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((CAST(x'' AS NUMERIC)) NOT NULL));
SELECT ALL * FROM t0, t2, vt0 WHERE (CASE ((t0.c1)GLOB(vt0.c0))  WHEN (((vt0.c0))<=((t0.c1))) THEN t0.c2 WHEN t2.c0 COLLATE RTRIM THEN CASE WHEN t0.c2 THEN t2.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN NULL END WHEN ((t0.c1) IS TRUE) THEN t0.c1 END) ORDER BY CASE ((t0.c1)IS NOT(t0.c2))  WHEN ((t0.c1)<=(t0.c0)) THEN ((t0.c2)IS(t0.c1)) WHEN ((t0.c0)*(t2.c0)) THEN ((0x5f989f35) ISNULL) WHEN (t0.c2 IN (t0.c2)) THEN json_object(vt0.c0, vt0.c0) ELSE ((vt0.c0)+(NULL)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1)GLOB(vt0.c0))  WHEN (((vt0.c0))<=((t0.c1))) THEN t0.c2 WHEN t2.c0 COLLATE RTRIM THEN CASE WHEN t0.c2 THEN t2.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN NULL END WHEN ((t0.c1) IS TRUE) THEN t0.c1 END) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY CASE ((t0.c1)IS NOT(t0.c2))  WHEN ((t0.c1)<=(t0.c0)) THEN ((t0.c2)IS(t0.c1)) WHEN ((t0.c0)*(t2.c0)) THEN ((0x5f989f35) ISNULL) WHEN (t0.c2 IN (t0.c2)) THEN json_object(vt0.c0, vt0.c0) ELSE ((vt0.c0)+(NULL)) END  NULLS LAST);
SELECT ALL * FROM t0, t2, vt0 WHERE (CASE ((t0.c1)GLOB(vt0.c0))  WHEN (((vt0.c0))<=((t0.c1))) THEN t0.c2 WHEN t2.c0 COLLATE RTRIM THEN CASE WHEN t0.c2 THEN t2.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN NULL END WHEN ((t0.c1) IS TRUE) THEN t0.c1 END) ORDER BY CASE ((t0.c1)IS NOT(t0.c2))  WHEN ((t0.c1)<=(t0.c0)) THEN ((t0.c2)IS(t0.c1)) WHEN ((t0.c0)*(t2.c0)) THEN ((0x5f989f35) ISNULL) WHEN (t0.c2 IN (t0.c2)) THEN json_object(vt0.c0, vt0.c0) ELSE ((vt0.c0)+(NULL)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1)GLOB(vt0.c0))  WHEN (((vt0.c0))<=((t0.c1))) THEN t0.c2 WHEN t2.c0 COLLATE RTRIM THEN CASE WHEN t0.c2 THEN t2.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN NULL END WHEN ((t0.c1) IS TRUE) THEN t0.c1 END) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY CASE ((t0.c1)IS NOT(t0.c2))  WHEN ((t0.c1)<=(t0.c0)) THEN ((t0.c2)IS(t0.c1)) WHEN ((t0.c0)*(t2.c0)) THEN ((0x5f989f35) ISNULL) WHEN (t0.c2 IN (t0.c2)) THEN json_object(vt0.c0, vt0.c0) ELSE ((vt0.c0)+(NULL)) END  NULLS LAST);
SELECT ALL * FROM t0, t2, vt0 WHERE (CASE ((t0.c1)GLOB(vt0.c0))  WHEN (((vt0.c0))<=((t0.c1))) THEN t0.c2 WHEN t2.c0 COLLATE RTRIM THEN CASE WHEN t0.c2 THEN t2.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN NULL END WHEN ((t0.c1) IS TRUE) THEN t0.c1 END) ORDER BY CASE ((t0.c1)IS NOT(t0.c2))  WHEN ((t0.c1)<=(t0.c0)) THEN ((t0.c2)IS(t0.c1)) WHEN ((t0.c0)*(t2.c0)) THEN ((0x5f989f35) ISNULL) WHEN (t0.c2 IN (t0.c2)) THEN json_object(vt0.c0, vt0.c0) ELSE ((vt0.c0)+(NULL)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t2, v0 WHERE (((t2.c0)%((t2.c0 IN ())))) ORDER BY (NOT (CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0)%((t2.c0 IN ())))) IS TRUE)  as count FROM t2, v0 ORDER BY (NOT (CAST(v0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM t2, v0 WHERE (((t2.c0)%((t2.c0 IN ())))) ORDER BY (NOT (CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0)%((t2.c0 IN ())))) IS TRUE)  as count FROM t2, v0 ORDER BY (NOT (CAST(v0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM t2, v0 WHERE (((t2.c0)%((t2.c0 IN ())))) ORDER BY (NOT (CAST(v0.c0 AS BLOB)));
SELECT COUNT(*) FROM t2, vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN ()) WHERE (TIME(CAST(vt0.c0 AS NUMERIC), NULL, t2.c0 COLLATE BINARY, ((((t0.c2)AND(vt0.c0)))AND(t0.c0)), (+ (t0.c1)))) ORDER BY CASE WHEN t2.c0 THEN DATETIME(t0.c0, t0.c2, t0.c0) WHEN ((t0.c1)OR(x'028c')) THEN ((((((((((((t0.c2)OR(t2.c0)))AND(vt0.c0)))AND(t0.c1)))OR(x'')))OR(0.2399105675804084)))OR(t0.c1)) WHEN HEX(t0.c1) THEN 676271251 END, CAST(t0.c1 AS NUMERIC) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TIME(CAST(vt0.c0 AS NUMERIC), NULL, t2.c0 COLLATE BINARY, ((((t0.c2)AND(vt0.c0)))AND(t0.c0)), (+ (t0.c1)))) IS TRUE)  as count FROM t2, vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN ()) ORDER BY CASE WHEN t2.c0 THEN DATETIME(t0.c0, t0.c2, t0.c0) WHEN ((t0.c1)OR(x'028c')) THEN ((((((((((((t0.c2)OR(t2.c0)))AND(vt0.c0)))AND(t0.c1)))OR(x'')))OR(0.2399105675804084)))OR(t0.c1)) WHEN HEX(t0.c1) THEN 676271251 END, CAST(t0.c1 AS NUMERIC) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2, vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN ()) WHERE (TIME(CAST(vt0.c0 AS NUMERIC), NULL, t2.c0 COLLATE BINARY, ((((t0.c2)AND(vt0.c0)))AND(t0.c0)), (+ (t0.c1)))) ORDER BY CASE WHEN t2.c0 THEN DATETIME(t0.c0, t0.c2, t0.c0) WHEN ((t0.c1)OR(x'028c')) THEN ((((((((((((t0.c2)OR(t2.c0)))AND(vt0.c0)))AND(t0.c1)))OR(x'')))OR(0.2399105675804084)))OR(t0.c1)) WHEN HEX(t0.c1) THEN 676271251 END, CAST(t0.c1 AS NUMERIC) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TIME(CAST(vt0.c0 AS NUMERIC), NULL, t2.c0 COLLATE BINARY, ((((t0.c2)AND(vt0.c0)))AND(t0.c0)), (+ (t0.c1)))) IS TRUE)  as count FROM t2, vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN ()) ORDER BY CASE WHEN t2.c0 THEN DATETIME(t0.c0, t0.c2, t0.c0) WHEN ((t0.c1)OR(x'028c')) THEN ((((((((((((t0.c2)OR(t2.c0)))AND(vt0.c0)))AND(t0.c1)))OR(x'')))OR(0.2399105675804084)))OR(t0.c1)) WHEN HEX(t0.c1) THEN 676271251 END, CAST(t0.c1 AS NUMERIC) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2, vt0 RIGHT OUTER JOIN t0 ON (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN ()) WHERE (TIME(CAST(vt0.c0 AS NUMERIC), NULL, t2.c0 COLLATE BINARY, ((((t0.c2)AND(vt0.c0)))AND(t0.c0)), (+ (t0.c1)))) ORDER BY CASE WHEN t2.c0 THEN DATETIME(t0.c0, t0.c2, t0.c0) WHEN ((t0.c1)OR(x'028c')) THEN ((((((((((((t0.c2)OR(t2.c0)))AND(vt0.c0)))AND(t0.c1)))OR(x'')))OR(0.2399105675804084)))OR(t0.c1)) WHEN HEX(t0.c1) THEN 676271251 END, CAST(t0.c1 AS NUMERIC) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, t2, v0 WHERE ((((t0.c1)>(v0.c0)) IN ((((0.7868396673789665)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS NUMERIC)))) ORDER BY CAST(t0.c0 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)>(v0.c0)) IN ((((0.7868396673789665)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, t2, v0 ORDER BY CAST(t0.c0 AS BLOB) DESC);
SELECT ALL COUNT(*) FROM t0, t2, v0 WHERE ((((t0.c1)>(v0.c0)) IN ((((0.7868396673789665)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS NUMERIC)))) ORDER BY CAST(t0.c0 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)>(v0.c0)) IN ((((0.7868396673789665)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, t2, v0 ORDER BY CAST(t0.c0 AS BLOB) DESC);
SELECT ALL COUNT(*) FROM t0, t2, v0 WHERE ((((t0.c1)>(v0.c0)) IN ((((0.7868396673789665)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS NUMERIC)))) ORDER BY CAST(t0.c0 AS BLOB) DESC;
SELECT ALL COUNT(*) FROM v0, t0, vt0 CROSS JOIN t2 ON ((((((vt0.c0) BETWEEN (vt0.c0) AND (t2.c0)))OR(vt0.c0)))AND((NOT (t0.c1)))) WHERE (((t0.c1 COLLATE NOCASE) BETWEEN (((v0.c0) NOTNULL)) AND (((t0.c1) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE NOCASE) BETWEEN (((v0.c0) NOTNULL)) AND (((t0.c1) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, t0, vt0 CROSS JOIN t2 ON ((((((vt0.c0) BETWEEN (vt0.c0) AND (t2.c0)))OR(vt0.c0)))AND((NOT (t0.c1)))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 CROSS JOIN t2 ON ((((((vt0.c0) BETWEEN (vt0.c0) AND (t2.c0)))OR(vt0.c0)))AND((NOT (t0.c1)))) WHERE (((t0.c1 COLLATE NOCASE) BETWEEN (((v0.c0) NOTNULL)) AND (((t0.c1) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE NOCASE) BETWEEN (((v0.c0) NOTNULL)) AND (((t0.c1) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, t0, vt0 CROSS JOIN t2 ON ((((((vt0.c0) BETWEEN (vt0.c0) AND (t2.c0)))OR(vt0.c0)))AND((NOT (t0.c1)))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 CROSS JOIN t2 ON ((((((vt0.c0) BETWEEN (vt0.c0) AND (t2.c0)))OR(vt0.c0)))AND((NOT (t0.c1)))) WHERE (((t0.c1 COLLATE NOCASE) BETWEEN (((v0.c0) NOTNULL)) AND (((t0.c1) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7610324220408917) ORDER BY CASE 0Xffffffffa483ae01 COLLATE NOCASE  WHEN CAST(x'6b99' AS REAL) THEN TYPEOF(vt0.c0) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7610324220408917) IS TRUE)  as count FROM vt0 ORDER BY CASE 0Xffffffffa483ae01 COLLATE NOCASE  WHEN CAST(x'6b99' AS REAL) THEN TYPEOF(vt0.c0) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7610324220408917) ORDER BY CASE 0Xffffffffa483ae01 COLLATE NOCASE  WHEN CAST(x'6b99' AS REAL) THEN TYPEOF(vt0.c0) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7610324220408917) IS TRUE)  as count FROM vt0 ORDER BY CASE 0Xffffffffa483ae01 COLLATE NOCASE  WHEN CAST(x'6b99' AS REAL) THEN TYPEOF(vt0.c0) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7610324220408917) ORDER BY CASE 0Xffffffffa483ae01 COLLATE NOCASE  WHEN CAST(x'6b99' AS REAL) THEN TYPEOF(vt0.c0) END ASC  NULLS LAST;
SELECT ALL * FROM t2, vt0, v0 RIGHT OUTER JOIN t0 ON ((('Aefc>8>%', CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 ELSE t2.c0 END, '1603837749', CAST(t2.c0 AS NUMERIC), ((((v0.c0)OR(t0.c0)))OR(0.5604503868506289))))>(((t2.c0 IN (t0.c1)), ((((((((vt0.c0)AND('1417996439')))AND('')))OR(0.3371463361768432)))AND(t0.c2)), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0)), ((vt0.c0) ISNULL), ((t0.c0)||(vt0.c0))))) WHERE (((((t0.c2)>(t0.c1)))LIKE(((((vt0.c0)OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(t0.c1)))LIKE(((((vt0.c0)OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t2, vt0, v0 RIGHT OUTER JOIN t0 ON ((('Aefc>8>%', CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 ELSE t2.c0 END, '1603837749', CAST(t2.c0 AS NUMERIC), ((((v0.c0)OR(t0.c0)))OR(0.5604503868506289))))>(((t2.c0 IN (t0.c1)), ((((((((vt0.c0)AND('1417996439')))AND('')))OR(0.3371463361768432)))AND(t0.c2)), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0)), ((vt0.c0) ISNULL), ((t0.c0)||(vt0.c0))))));
SELECT ALL * FROM t2, vt0, v0 RIGHT OUTER JOIN t0 ON ((('Aefc>8>%', CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 ELSE t2.c0 END, '1603837749', CAST(t2.c0 AS NUMERIC), ((((v0.c0)OR(t0.c0)))OR(0.5604503868506289))))>(((t2.c0 IN (t0.c1)), ((((((((vt0.c0)AND('1417996439')))AND('')))OR(0.3371463361768432)))AND(t0.c2)), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0)), ((vt0.c0) ISNULL), ((t0.c0)||(vt0.c0))))) WHERE (((((t0.c2)>(t0.c1)))LIKE(((((vt0.c0)OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(t0.c1)))LIKE(((((vt0.c0)OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t2, vt0, v0 RIGHT OUTER JOIN t0 ON ((('Aefc>8>%', CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 ELSE t2.c0 END, '1603837749', CAST(t2.c0 AS NUMERIC), ((((v0.c0)OR(t0.c0)))OR(0.5604503868506289))))>(((t2.c0 IN (t0.c1)), ((((((((vt0.c0)AND('1417996439')))AND('')))OR(0.3371463361768432)))AND(t0.c2)), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0)), ((vt0.c0) ISNULL), ((t0.c0)||(vt0.c0))))));
SELECT ALL * FROM t2, vt0, v0 RIGHT OUTER JOIN t0 ON ((('Aefc>8>%', CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 ELSE t2.c0 END, '1603837749', CAST(t2.c0 AS NUMERIC), ((((v0.c0)OR(t0.c0)))OR(0.5604503868506289))))>(((t2.c0 IN (t0.c1)), ((((((((vt0.c0)AND('1417996439')))AND('')))OR(0.3371463361768432)))AND(t0.c2)), ((v0.c0) BETWEEN (t0.c0) AND (v0.c0)), ((vt0.c0) ISNULL), ((t0.c0)||(vt0.c0))))) WHERE (((((t0.c2)>(t0.c1)))LIKE(((((vt0.c0)OR(t0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 FULL OUTER JOIN t2 ON (((t0.c0, t2.c0, t0.c2)) NOT BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)), LIKELY(t0.c0))) AND ((t2.c0 COLLATE NOCASE, CASE 0Xffffffffad80e2ce  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN x'' THEN t0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, ((t2.c0) NOT NULL)))) WHERE (LOWER(DISTINCT ((t0.c0) NOTNULL))) ORDER BY '}\+㖗eD!z' DESC  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))<>(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t0.c0) NOTNULL))) IS TRUE)  as count FROM v0, t0, vt0 FULL OUTER JOIN t2 ON (((t0.c0, t2.c0, t0.c2)) NOT BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)), LIKELY(t0.c0))) AND ((t2.c0 COLLATE NOCASE, CASE 0Xffffffffad80e2ce  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN x'' THEN t0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, ((t2.c0) NOT NULL)))) ORDER BY '}\+㖗eD!z' DESC  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))!=(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 FULL OUTER JOIN t2 ON (((t0.c0, t2.c0, t0.c2)) NOT BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)), LIKELY(t0.c0))) AND ((t2.c0 COLLATE NOCASE, CASE 0Xffffffffad80e2ce  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN x'' THEN t0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, ((t2.c0) NOT NULL)))) WHERE (LOWER(DISTINCT ((t0.c0) NOTNULL))) ORDER BY '}\+㖗eD!z' DESC  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))<>(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t0.c0) NOTNULL))) IS TRUE)  as count FROM v0, t0, vt0 FULL OUTER JOIN t2 ON (((t0.c0, t2.c0, t0.c2)) NOT BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)), LIKELY(t0.c0))) AND ((t2.c0 COLLATE NOCASE, CASE 0Xffffffffad80e2ce  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN x'' THEN t0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, ((t2.c0) NOT NULL)))) ORDER BY '}\+㖗eD!z' DESC  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))!=(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 FULL OUTER JOIN t2 ON (((t0.c0, t2.c0, t0.c2)) NOT BETWEEN ((t0.c1 COLLATE NOCASE, ((t0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0)), LIKELY(t0.c0))) AND ((t2.c0 COLLATE NOCASE, CASE 0Xffffffffad80e2ce  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN x'' THEN t0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, ((t2.c0) NOT NULL)))) WHERE (LOWER(DISTINCT ((t0.c0) NOTNULL))) ORDER BY '}\+㖗eD!z' DESC  NULLS LAST, ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))<>(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM v0, t2, vt0, t0 WHERE ((CASE t2.c0  WHEN vt0.c0 THEN NULL ELSE v0.c0 END IN (vt0.c0 COLLATE BINARY))) ORDER BY ((((CASE WHEN v0.c0 THEN t0.c1 END)AND((((v0.c0))=((v0.c0))))))OR(((vt0.c0)<(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t2.c0  WHEN vt0.c0 THEN NULL ELSE v0.c0 END IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, t2, vt0, t0 ORDER BY ((((CASE WHEN v0.c0 THEN t0.c1 END)AND((((v0.c0))==((v0.c0))))))OR(((vt0.c0)<(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, t2, vt0, t0 WHERE ((CASE t2.c0  WHEN vt0.c0 THEN NULL ELSE v0.c0 END IN (vt0.c0 COLLATE BINARY))) ORDER BY ((((CASE WHEN v0.c0 THEN t0.c1 END)AND((((v0.c0))=((v0.c0))))))OR(((vt0.c0)<(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t2.c0  WHEN vt0.c0 THEN NULL ELSE v0.c0 END IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, t2, vt0, t0 ORDER BY ((((CASE WHEN v0.c0 THEN t0.c1 END)AND((((v0.c0))==((v0.c0))))))OR(((vt0.c0)<(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, t2, vt0, t0 WHERE ((CASE t2.c0  WHEN vt0.c0 THEN NULL ELSE v0.c0 END IN (vt0.c0 COLLATE BINARY))) ORDER BY ((((CASE WHEN v0.c0 THEN t0.c1 END)AND((((v0.c0))=((v0.c0))))))OR(((vt0.c0)<(v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((x'')||((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) ORDER BY (+ ((v0.c0 IN (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')||((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ ((v0.c0 IN (v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((x'')||((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) ORDER BY (+ ((v0.c0 IN (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')||((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ ((v0.c0 IN (v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((x'')||((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))) ORDER BY (+ ((v0.c0 IN (v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((vt0.c0) IS FALSE)  NULLS FIRST, (((vt0.c0)) BETWEEN ((x'faf7')) AND (((NULL IN (vt0.c0, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS FALSE)  NULLS FIRST, (((vt0.c0)) BETWEEN ((x'faf7')) AND (((NULL IN (vt0.c0, vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((vt0.c0) IS FALSE)  NULLS FIRST, (((vt0.c0)) BETWEEN ((x'faf7')) AND (((NULL IN (vt0.c0, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS FALSE)  NULLS FIRST, (((vt0.c0)) BETWEEN ((x'faf7')) AND (((NULL IN (vt0.c0, vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((vt0.c0) IS FALSE)  NULLS FIRST, (((vt0.c0)) BETWEEN ((x'faf7')) AND (((NULL IN (vt0.c0, vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 NATURAL JOIN vt0 WHERE (((v0.c0 COLLATE NOCASE)<(CAST(t0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)<(CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0, t0 NATURAL JOIN vt0 WHERE (((v0.c0 COLLATE NOCASE)<(CAST(t0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)<(CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0, t0 NATURAL JOIN vt0 WHERE (((v0.c0 COLLATE NOCASE)<(CAST(t0.c1 AS TEXT))));
SELECT ALL * FROM t0, v0 WHERE ((v0.c0 IN (v0.c0, t0.c1)) COLLATE NOCASE) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (v0.c0, t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 DESC);
SELECT ALL * FROM t0, v0 WHERE ((v0.c0 IN (v0.c0, t0.c1)) COLLATE NOCASE) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (v0.c0, t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 DESC);
SELECT ALL * FROM t0, v0 WHERE ((v0.c0 IN (v0.c0, t0.c1)) COLLATE NOCASE) ORDER BY v0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (((vt0.c0) NOT NULL) IN ()) DESC  NULLS LAST, (((((t0.c0 IN ()))OR(t0.c2 COLLATE RTRIM)))AND((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((vt0.c0) NOT NULL) IN ()) DESC  NULLS LAST, (((((t0.c0 IN ()))OR(t0.c2 COLLATE RTRIM)))AND((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (((vt0.c0) NOT NULL) IN ()) DESC  NULLS LAST, (((((t0.c0 IN ()))OR(t0.c2 COLLATE RTRIM)))AND((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((vt0.c0) NOT NULL) IN ()) DESC  NULLS LAST, (((((t0.c0 IN ()))OR(t0.c2 COLLATE RTRIM)))AND((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (((vt0.c0) NOT NULL) IN ()) DESC  NULLS LAST, (((((t0.c0 IN ()))OR(t0.c2 COLLATE RTRIM)))AND((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, t2 WHERE (((vt0.c0 COLLATE NOCASE)IS(json_type(t2.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)IS(json_type(t2.c0)))) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL * FROM t0, vt0, t2 WHERE (((vt0.c0 COLLATE NOCASE)IS(json_type(t2.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)IS(json_type(t2.c0)))) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL * FROM t0, vt0, t2 WHERE (((vt0.c0 COLLATE NOCASE)IS(json_type(t2.c0))));
SELECT * FROM t0, v0, t2, vt0 WHERE (((((t0.c1) BETWEEN (t0.c2) AND (t2.c0)))>(((t2.c0)=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) BETWEEN (t0.c2) AND (t2.c0)))>(((t2.c0)==(t0.c1))))) IS TRUE)  as count FROM t0, v0, t2, vt0);
SELECT * FROM t0, v0, t2, vt0 WHERE (((((t0.c1) BETWEEN (t0.c2) AND (t2.c0)))>(((t2.c0)=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) BETWEEN (t0.c2) AND (t2.c0)))>(((t2.c0)==(t0.c1))))) IS TRUE)  as count FROM t0, v0, t2, vt0);
SELECT * FROM t0, v0, t2, vt0 WHERE (((((t0.c1) BETWEEN (t0.c2) AND (t2.c0)))>(((t2.c0)=(t0.c1)))));
SELECT COUNT(*) FROM t0, t2, vt0 WHERE ((- (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, t2, vt0);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE ((- (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, t2, vt0);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE ((- (((t0.c0) NOT NULL))));
SELECT ALL * FROM t0 WHERE (t0.c1 COLLATE BINARY) ORDER BY (~ (((t0.c2)AND(t0.c2)))) ASC, ((-1.321444216E9) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1 COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c2)AND(t0.c2)))) ASC, ((-1.321444216E9) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c1 COLLATE BINARY) ORDER BY (~ (((t0.c2)AND(t0.c2)))) ASC, ((-1.321444216E9) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1 COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c2)AND(t0.c2)))) ASC, ((-1.321444216E9) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c1 COLLATE BINARY) ORDER BY (~ (((t0.c2)AND(t0.c2)))) ASC, ((-1.321444216E9) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM v0, t2, vt0, t0 WHERE (TRIM(t0.c0)) ORDER BY ('|sQJ' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(t0.c0)) IS TRUE)  as count FROM v0, t2, vt0, t0 ORDER BY ('|sQJ' IN ()) ASC);
SELECT COUNT(*) FROM v0, t2, vt0, t0 WHERE (TRIM(t0.c0)) ORDER BY ('|sQJ' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(t0.c0)) IS TRUE)  as count FROM v0, t2, vt0, t0 ORDER BY ('|sQJ' IN ()) ASC);
SELECT COUNT(*) FROM v0, t2, vt0, t0 WHERE (TRIM(t0.c0)) ORDER BY ('|sQJ' IN ()) ASC;
SELECT * FROM vt0, v0 WHERE (NULL) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()));
SELECT * FROM vt0, v0 WHERE (NULL) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ()));
SELECT * FROM vt0, v0 WHERE (NULL) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ());
SELECT COUNT(*) FROM vt0, t2, v0, t0 WHERE (((((((t0.c0, v0.c0, '')) BETWEEN ((0Xffffffffc79d464b, t2.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))))<>(((NULL IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0, v0.c0, '')) BETWEEN ((0xffffffffc79d464b, t2.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))))!=(((NULL IN ()))))) IS TRUE)  as count FROM vt0, t2, v0, t0);
SELECT COUNT(*) FROM vt0, t2, v0, t0 WHERE (((((((t0.c0, v0.c0, '')) BETWEEN ((0Xffffffffc79d464b, t2.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))))<>(((NULL IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0, v0.c0, '')) BETWEEN ((0xffffffffc79d464b, t2.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))))!=(((NULL IN ()))))) IS TRUE)  as count FROM vt0, t2, v0, t0);
SELECT COUNT(*) FROM vt0, t2, v0, t0 WHERE (((((((t0.c0, v0.c0, '')) BETWEEN ((0Xffffffffc79d464b, t2.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))))<>(((NULL IN ())))));
SELECT * FROM t0, t2 WHERE (((((t0.c0)+(t0.c2))) NOT BETWEEN (((t2.c0) ISNULL)) AND (t0.c1))) ORDER BY (+ (((NULL)*(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)+(t0.c2))) NOT BETWEEN (((t2.c0) ISNULL)) AND (t0.c1))) IS TRUE)  as count FROM t0, t2 ORDER BY (+ (((NULL)*(t0.c1))))  NULLS FIRST);
SELECT * FROM t0, t2 WHERE (((((t0.c0)+(t0.c2))) NOT BETWEEN (((t2.c0) ISNULL)) AND (t0.c1))) ORDER BY (+ (((NULL)*(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)+(t0.c2))) NOT BETWEEN (((t2.c0) ISNULL)) AND (t0.c1))) IS TRUE)  as count FROM t0, t2 ORDER BY (+ (((NULL)*(t0.c1))))  NULLS FIRST);
SELECT * FROM t0, t2 WHERE (((((t0.c0)+(t0.c2))) NOT BETWEEN (((t2.c0) ISNULL)) AND (t0.c1))) ORDER BY (+ (((NULL)*(t0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM t2, t0 WHERE (CASE WHEN ABS(t0.c2) THEN ((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ABS(t0.c2) THEN ((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c0)) END) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE (CASE WHEN ABS(t0.c2) THEN ((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ABS(t0.c2) THEN ((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c0)) END) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE (CASE WHEN ABS(t0.c2) THEN ((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c0)) END);
SELECT ALL * FROM t2 WHERE ((NOT ((t2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t2.c0 IN ())))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((NOT ((t2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t2.c0 IN ())))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((NOT ((t2.c0 IN ()))));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON t0.c1 LEFT OUTER JOIN t2 ON ((((t0.c2)OR(t2.c0)))OR(CASE t0.c0  WHEN '' THEN t0.c1 END)) RIGHT OUTER JOIN v0 ON ((((0.5184341119611319))<>((t0.c0))) IN ()) WHERE (CASE CAST(t0.c1 AS BLOB)  WHEN ((t0.c2) NOT BETWEEN (NULL) AND (vt0.c0)) THEN HEX(DISTINCT v0.c0) WHEN ((t0.c2)%(t2.c0)) THEN (('#%*岈sTe뵆') ISNULL) WHEN TRIM(DISTINCT v0.c0, t2.c0) THEN ((((t2.c0)AND(t0.c2)))AND(t0.c1)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c1 AS BLOB)  WHEN ((t0.c2) NOT BETWEEN (NULL) AND (vt0.c0)) THEN HEX(DISTINCT v0.c0) WHEN ((t0.c2)%(t2.c0)) THEN (('#%*岈sTe뵆') ISNULL) WHEN TRIM(DISTINCT v0.c0, t2.c0) THEN ((((t2.c0)AND(t0.c2)))AND(t0.c1)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON t0.c1 LEFT OUTER JOIN t2 ON ((((t0.c2)OR(t2.c0)))OR(CASE t0.c0  WHEN '' THEN t0.c1 END)) RIGHT OUTER JOIN v0 ON ((((0.5184341119611319))<>((t0.c0))) IN ()));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON t0.c1 LEFT OUTER JOIN t2 ON ((((t0.c2)OR(t2.c0)))OR(CASE t0.c0  WHEN '' THEN t0.c1 END)) RIGHT OUTER JOIN v0 ON ((((0.5184341119611319))<>((t0.c0))) IN ()) WHERE (CASE CAST(t0.c1 AS BLOB)  WHEN ((t0.c2) NOT BETWEEN (NULL) AND (vt0.c0)) THEN HEX(DISTINCT v0.c0) WHEN ((t0.c2)%(t2.c0)) THEN (('#%*岈sTe뵆') ISNULL) WHEN TRIM(DISTINCT v0.c0, t2.c0) THEN ((((t2.c0)AND(t0.c2)))AND(t0.c1)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c1 AS BLOB)  WHEN ((t0.c2) NOT BETWEEN (NULL) AND (vt0.c0)) THEN HEX(DISTINCT v0.c0) WHEN ((t0.c2)%(t2.c0)) THEN (('#%*岈sTe뵆') ISNULL) WHEN TRIM(DISTINCT v0.c0, t2.c0) THEN ((((t2.c0)AND(t0.c2)))AND(t0.c1)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON t0.c1 LEFT OUTER JOIN t2 ON ((((t0.c2)OR(t2.c0)))OR(CASE t0.c0  WHEN '' THEN t0.c1 END)) RIGHT OUTER JOIN v0 ON ((((0.5184341119611319))<>((t0.c0))) IN ()));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON t0.c1 LEFT OUTER JOIN t2 ON ((((t0.c2)OR(t2.c0)))OR(CASE t0.c0  WHEN '' THEN t0.c1 END)) RIGHT OUTER JOIN v0 ON ((((0.5184341119611319))<>((t0.c0))) IN ()) WHERE (CASE CAST(t0.c1 AS BLOB)  WHEN ((t0.c2) NOT BETWEEN (NULL) AND (vt0.c0)) THEN HEX(DISTINCT v0.c0) WHEN ((t0.c2)%(t2.c0)) THEN (('#%*岈sTe뵆') ISNULL) WHEN TRIM(DISTINCT v0.c0, t2.c0) THEN ((((t2.c0)AND(t0.c2)))AND(t0.c1)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE));
SELECT ALL * FROM vt0, t0, v0, t2 WHERE ((CAST(t2.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t2.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, t0, v0, t2);
SELECT ALL * FROM vt0, t0, v0, t2 WHERE ((CAST(t2.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t2.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, t0, v0, t2);
SELECT ALL * FROM vt0, t0, v0, t2 WHERE ((CAST(t2.c0 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((NULL) ISNULL) AS REAL)) ORDER BY ((((t0.c0)||(t0.c2))) BETWEEN (rtreenode(t0.c1, t0.c1)) AND (((((t0.c0)AND(t0.c2)))AND(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) ISNULL) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)||(t0.c2))) BETWEEN (rtreenode(t0.c1, t0.c1)) AND (((((t0.c0)AND(t0.c2)))AND(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((NULL) ISNULL) AS REAL)) ORDER BY ((((t0.c0)||(t0.c2))) BETWEEN (rtreenode(t0.c1, t0.c1)) AND (((((t0.c0)AND(t0.c2)))AND(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) ISNULL) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)||(t0.c2))) BETWEEN (rtreenode(t0.c1, t0.c1)) AND (((((t0.c0)AND(t0.c2)))AND(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((NULL) ISNULL) AS REAL)) ORDER BY ((((t0.c0)||(t0.c2))) BETWEEN (rtreenode(t0.c1, t0.c1)) AND (((((t0.c0)AND(t0.c2)))AND(t0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((x'' IN (((((t0.c2)AND(t0.c2)))OR(t0.c1))))) ORDER BY t0.c2 DESC, CAST(((t0.c2) IS FALSE) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((((t0.c2)AND(t0.c2)))OR(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 DESC, CAST(((t0.c2) IS FALSE) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((x'' IN (((((t0.c2)AND(t0.c2)))OR(t0.c1))))) ORDER BY t0.c2 DESC, CAST(((t0.c2) IS FALSE) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((((t0.c2)AND(t0.c2)))OR(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 DESC, CAST(((t0.c2) IS FALSE) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((x'' IN (((((t0.c2)AND(t0.c2)))OR(t0.c1))))) ORDER BY t0.c2 DESC, CAST(((t0.c2) IS FALSE) AS TEXT) ASC;
SELECT * FROM v0 WHERE (LOWER(((v0.c0)OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((v0.c0)OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LOWER(((v0.c0)OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((v0.c0)OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LOWER(((v0.c0)OR(v0.c0))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0)-(v0.c0)))) WHERE (vt0.c0 COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0)-(v0.c0)))) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0)-(v0.c0)))) WHERE (vt0.c0 COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0)-(v0.c0)))) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0)-(v0.c0)))) WHERE (vt0.c0 COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((v0.c0)GLOB(''))) NOT NULL)) ORDER BY (- (HEX(DISTINCT t0.c2))), ((t0.c2) NOT NULL), ((NOT (t0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)GLOB(''))) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (- (HEX(DISTINCT t0.c2))), ((t0.c2) NOT NULL), ((NOT (t0.c2)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((v0.c0)GLOB(''))) NOT NULL)) ORDER BY (- (HEX(DISTINCT t0.c2))), ((t0.c2) NOT NULL), ((NOT (t0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)GLOB(''))) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (- (HEX(DISTINCT t0.c2))), ((t0.c2) NOT NULL), ((NOT (t0.c2)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((v0.c0)GLOB(''))) NOT NULL)) ORDER BY (- (HEX(DISTINCT t0.c2))), ((t0.c2) NOT NULL), ((NOT (t0.c2)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, TRIM(x'', v0.c0), TIME(v0.c0, '2101596742', v0.c0, 0.1523742604402477, v0.c0)))==((v0.c0 COLLATE BINARY, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, TRIM(x'', v0.c0), TIME(v0.c0, '2101596742', v0.c0, 0.1523742604402477, v0.c0)))=((v0.c0 COLLATE BINARY, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, TRIM(x'', v0.c0), TIME(v0.c0, '2101596742', v0.c0, 0.1523742604402477, v0.c0)))==((v0.c0 COLLATE BINARY, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, TRIM(x'', v0.c0), TIME(v0.c0, '2101596742', v0.c0, 0.1523742604402477, v0.c0)))=((v0.c0 COLLATE BINARY, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, TRIM(x'', v0.c0), TIME(v0.c0, '2101596742', v0.c0, 0.1523742604402477, v0.c0)))==((v0.c0 COLLATE BINARY, (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CAST(v0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM t2 WHERE (((IFNULL(t2.c0, t2.c0))LIKE(((t2.c0)+(t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(t2.c0, t2.c0))LIKE(((t2.c0)+(t2.c0))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((IFNULL(t2.c0, t2.c0))LIKE(((t2.c0)+(t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(t2.c0, t2.c0))LIKE(((t2.c0)+(t2.c0))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((IFNULL(t2.c0, t2.c0))LIKE(((t2.c0)+(t2.c0)))));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((((v0.c0)IS(vt0.c0)))<(CASE WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS(vt0.c0)))<(CASE WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((((v0.c0)IS(vt0.c0)))<(CASE WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS(vt0.c0)))<(CASE WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((((v0.c0)IS(vt0.c0)))<(CASE WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 END))) ORDER BY vt0.c0 DESC;
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(((t0.c2)IS NOT(t0.c0)) AS NUMERIC) RIGHT OUTER JOIN t0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t2.c0 ELSE v0.c0 END) IS FALSE) RIGHT OUTER JOIN t2 ON (((t2.c0 IN ())) ISNULL) WHERE ((((t0.c0, vt0.c0, x''))<((t0.c1, vt0.c0, t0.c0))) COLLATE RTRIM) ORDER BY ((((((((COALESCE(vt0.c0, NULL))AND((~ (v0.c0)))))AND((((t2.c0)) BETWEEN ((t2.c0)) AND ((t0.c1))))))OR(0.9531050672779253)))OR(((t0.c2)%(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, vt0.c0, x''))<((t0.c1, vt0.c0, t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(((t0.c2)IS NOT(t0.c0)) AS NUMERIC) RIGHT OUTER JOIN t0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t2.c0 ELSE v0.c0 END) IS FALSE) RIGHT OUTER JOIN t2 ON (((t2.c0 IN ())) ISNULL) ORDER BY ((((((((COALESCE(vt0.c0, NULL))AND((~ (v0.c0)))))AND((((t2.c0)) BETWEEN ((t2.c0)) AND ((t0.c1))))))OR(0.9531050672779253)))OR(((t0.c2)%(t0.c0)))) DESC);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(((t0.c2)IS NOT(t0.c0)) AS NUMERIC) RIGHT OUTER JOIN t0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t2.c0 ELSE v0.c0 END) IS FALSE) RIGHT OUTER JOIN t2 ON (((t2.c0 IN ())) ISNULL) WHERE ((((t0.c0, vt0.c0, x''))<((t0.c1, vt0.c0, t0.c0))) COLLATE RTRIM) ORDER BY ((((((((COALESCE(vt0.c0, NULL))AND((~ (v0.c0)))))AND((((t2.c0)) BETWEEN ((t2.c0)) AND ((t0.c1))))))OR(0.9531050672779253)))OR(((t0.c2)%(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, vt0.c0, x''))<((t0.c1, vt0.c0, t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(((t0.c2)IS NOT(t0.c0)) AS NUMERIC) RIGHT OUTER JOIN t0 ON ((CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t2.c0 ELSE v0.c0 END) IS FALSE) RIGHT OUTER JOIN t2 ON (((t2.c0 IN ())) ISNULL) ORDER BY ((((((((COALESCE(vt0.c0, NULL))AND((~ (v0.c0)))))AND((((t2.c0)) BETWEEN ((t2.c0)) AND ((t0.c1))))))OR(0.9531050672779253)))OR(((t0.c2)%(t0.c0)))) DESC);
SELECT * FROM t0, t2 WHERE (((((((t0.c0, t0.c1, t0.c2))>=((t0.c1, t0.c0, t0.c0)))))>=(((t2.c0 IN ()))))) ORDER BY CAST(((((((((t2.c0)OR(t0.c2)))OR(t2.c0)))AND(t0.c0)))AND(t0.c1)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0, t0.c1, t0.c2))>=((t0.c1, t0.c0, t0.c0)))))>=(((t2.c0 IN ()))))) IS TRUE)  as count FROM t0, t2 ORDER BY CAST(((((((((t2.c0)OR(t0.c2)))OR(t2.c0)))AND(t0.c0)))AND(t0.c1)) AS BLOB) DESC  NULLS LAST);
SELECT * FROM t0, t2 WHERE (((((((t0.c0, t0.c1, t0.c2))>=((t0.c1, t0.c0, t0.c0)))))>=(((t2.c0 IN ()))))) ORDER BY CAST(((((((((t2.c0)OR(t0.c2)))OR(t2.c0)))AND(t0.c0)))AND(t0.c1)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0, t0.c1, t0.c2))>=((t0.c1, t0.c0, t0.c0)))))>=(((t2.c0 IN ()))))) IS TRUE)  as count FROM t0, t2 ORDER BY CAST(((((((((t2.c0)OR(t0.c2)))OR(t2.c0)))AND(t0.c0)))AND(t0.c1)) AS BLOB) DESC  NULLS LAST);
SELECT * FROM t0, t2 WHERE (((((((t0.c0, t0.c1, t0.c2))>=((t0.c1, t0.c0, t0.c0)))))>=(((t2.c0 IN ()))))) ORDER BY CAST(((((((((t2.c0)OR(t0.c2)))OR(t2.c0)))AND(t0.c0)))AND(t0.c1)) AS BLOB) DESC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE ((((0.6441503078129668)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((v0.c0)=(v0.c0)))))) ORDER BY ((((((v0.c0) ISNULL))AND(((vt0.c0)AND(v0.c0)))))AND('' COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.6441503078129668)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((v0.c0)=(v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0) ISNULL))AND(((vt0.c0)AND(v0.c0)))))AND('' COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((((0.6441503078129668)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((v0.c0)=(v0.c0)))))) ORDER BY ((((((v0.c0) ISNULL))AND(((vt0.c0)AND(v0.c0)))))AND('' COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.6441503078129668)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((v0.c0)=(v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0) ISNULL))AND(((vt0.c0)AND(v0.c0)))))AND('' COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((((0.6441503078129668)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((v0.c0)=(v0.c0)))))) ORDER BY ((((((v0.c0) ISNULL))AND(((vt0.c0)AND(v0.c0)))))AND('' COLLATE NOCASE)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0, t2);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0, t2);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (vt0.c0);
SELECT ALL * FROM t2, t0, v0, vt0 WHERE ((- (LAST_INSERT_ROWID()))) ORDER BY ((NULLIF(DISTINCT t0.c2, vt0.c0)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((- (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM t2, t0, v0, vt0 ORDER BY ((NULLIF(DISTINCT t0.c2, vt0.c0)) IS FALSE));
SELECT ALL * FROM t2, t0, v0, vt0 WHERE ((- (LAST_INSERT_ROWID()))) ORDER BY ((NULLIF(DISTINCT t0.c2, vt0.c0)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((- (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM t2, t0, v0, vt0 ORDER BY ((NULLIF(DISTINCT t0.c2, vt0.c0)) IS FALSE));
SELECT ALL * FROM t2, t0, v0, vt0 WHERE ((- (LAST_INSERT_ROWID()))) ORDER BY ((NULLIF(DISTINCT t0.c2, vt0.c0)) IS FALSE);
SELECT * FROM t2 WHERE (CASE t2.c0  WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE t2.c0  WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CASE t2.c0  WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE t2.c0  WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CASE t2.c0  WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((CAST(t0.c0 AS INTEGER) IN ((~ (NULL)), TYPEOF(t0.c1)))) ORDER BY (~ ((~ (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS INTEGER) IN ((~ (NULL)), TYPEOF(t0.c1)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (~ ((~ (t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((CAST(t0.c0 AS INTEGER) IN ((~ (NULL)), TYPEOF(t0.c1)))) ORDER BY (~ ((~ (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS INTEGER) IN ((~ (NULL)), TYPEOF(t0.c1)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (~ ((~ (t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((CAST(t0.c0 AS INTEGER) IN ((~ (NULL)), TYPEOF(t0.c1)))) ORDER BY (~ ((~ (t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t2, v0, t0, vt0 WHERE (CASE WHEN ((-964645697) NOT NULL) THEN (((t0.c0, t2.c0, t0.c0))>((-945994165, v0.c0, t0.c1))) WHEN (~ (vt0.c0)) THEN (NOT (t0.c1)) WHEN ((t2.c0) ISNULL) THEN (t0.c2 IN ()) ELSE t0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((-964645697) NOT NULL) THEN (((t0.c0, t2.c0, t0.c0))>((-945994165, v0.c0, t0.c1))) WHEN (~ (vt0.c0)) THEN (NOT (t0.c1)) WHEN ((t2.c0) ISNULL) THEN (t0.c2 IN ()) ELSE t0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM t2, v0, t0, vt0);
SELECT COUNT(*) FROM t2, v0, t0, vt0 WHERE (CASE WHEN ((-964645697) NOT NULL) THEN (((t0.c0, t2.c0, t0.c0))>((-945994165, v0.c0, t0.c1))) WHEN (~ (vt0.c0)) THEN (NOT (t0.c1)) WHEN ((t2.c0) ISNULL) THEN (t0.c2 IN ()) ELSE t0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((-964645697) NOT NULL) THEN (((t0.c0, t2.c0, t0.c0))>((-945994165, v0.c0, t0.c1))) WHEN (~ (vt0.c0)) THEN (NOT (t0.c1)) WHEN ((t2.c0) ISNULL) THEN (t0.c2 IN ()) ELSE t0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM t2, v0, t0, vt0);
SELECT COUNT(*) FROM t2, v0, t0, vt0 WHERE (CASE WHEN ((-964645697) NOT NULL) THEN (((t0.c0, t2.c0, t0.c0))>((-945994165, v0.c0, t0.c1))) WHEN (~ (vt0.c0)) THEN (NOT (t0.c1)) WHEN ((t2.c0) ISNULL) THEN (t0.c2 IN ()) ELSE t0.c1 COLLATE NOCASE END);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c1) ISNULL)) NOT NULL)) ORDER BY ((((((t0.c2)AND(t0.c0)))OR(t0.c2))) NOT BETWEEN (v0.c0) AND (((v0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) ISNULL)) NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((t0.c2)AND(t0.c0)))OR(t0.c2))) NOT BETWEEN (v0.c0) AND (((v0.c0) IS TRUE))) ASC);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c1) ISNULL)) NOT NULL)) ORDER BY ((((((t0.c2)AND(t0.c0)))OR(t0.c2))) NOT BETWEEN (v0.c0) AND (((v0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) ISNULL)) NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((t0.c2)AND(t0.c0)))OR(t0.c2))) NOT BETWEEN (v0.c0) AND (((v0.c0) IS TRUE))) ASC);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c1) ISNULL)) NOT NULL)) ORDER BY ((((((t0.c2)AND(t0.c0)))OR(t0.c2))) NOT BETWEEN (v0.c0) AND (((v0.c0) IS TRUE))) ASC;
SELECT ALL * FROM t0, v0 WHERE (t0.c1) ORDER BY ((CAST(-1.384062258E9 AS BLOB))>>(((t0.c2) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, v0 ORDER BY ((CAST(-1.384062258E9 AS BLOB))>>(((t0.c2) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (t0.c1) ORDER BY ((CAST(-1.384062258E9 AS BLOB))>>(((t0.c2) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, v0 ORDER BY ((CAST(-1.384062258E9 AS BLOB))>>(((t0.c2) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (t0.c1) ORDER BY ((CAST(-1.384062258E9 AS BLOB))>>(((t0.c2) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t2, t0 WHERE (CASE WHEN t0.c1 THEN t0.c0 END COLLATE NOCASE) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 THEN t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t2, t0 ORDER BY NULL);
SELECT ALL * FROM v0, vt0, t2, t0 WHERE (CASE WHEN t0.c1 THEN t0.c0 END COLLATE NOCASE) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 THEN t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t2, t0 ORDER BY NULL);
SELECT ALL * FROM v0, vt0, t2, t0 WHERE (CASE WHEN t0.c1 THEN t0.c0 END COLLATE NOCASE) ORDER BY NULL;
SELECT * FROM vt0, t0 WHERE (((TYPEOF(vt0.c0)) NOT BETWEEN ((vt0.c0 IN (t0.c2))) AND ((- ('1262206638')))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt0.c0)) NOT BETWEEN ((vt0.c0 IN (t0.c2))) AND ((- ('1262206638'))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((TYPEOF(vt0.c0)) NOT BETWEEN ((vt0.c0 IN (t0.c2))) AND ((- ('1262206638')))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt0.c0)) NOT BETWEEN ((vt0.c0 IN (t0.c2))) AND ((- ('1262206638'))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((TYPEOF(vt0.c0)) NOT BETWEEN ((vt0.c0 IN (t0.c2))) AND ((- ('1262206638')))));
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c1) ORDER BY ((((vt0.c0)&(t0.c1))) NOT BETWEEN (((t0.c2) ISNULL)) AND (CASE WHEN t0.c0 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)&(t0.c1))) NOT BETWEEN (((t0.c2) ISNULL)) AND (CASE WHEN t0.c0 THEN vt0.c0 END)) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c1) ORDER BY ((((vt0.c0)&(t0.c1))) NOT BETWEEN (((t0.c2) ISNULL)) AND (CASE WHEN t0.c0 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)&(t0.c1))) NOT BETWEEN (((t0.c2) ISNULL)) AND (CASE WHEN t0.c0 THEN vt0.c0 END)) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c1) ORDER BY ((((vt0.c0)&(t0.c1))) NOT BETWEEN (((t0.c2) ISNULL)) AND (CASE WHEN t0.c0 THEN vt0.c0 END)) ASC;
SELECT * FROM t2, v0, vt0, t0 WHERE (((CASE t2.c0  WHEN t2.c0 THEN t0.c2 END)IS NOT(CASE WHEN t2.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE t2.c0  WHEN t2.c0 THEN t0.c2 END)IS NOT(CASE WHEN t2.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t2, v0, vt0, t0);
SELECT * FROM t2, v0, vt0, t0 WHERE (((CASE t2.c0  WHEN t2.c0 THEN t0.c2 END)IS NOT(CASE WHEN t2.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE t2.c0  WHEN t2.c0 THEN t0.c2 END)IS NOT(CASE WHEN t2.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t2, v0, vt0, t0);
SELECT * FROM t2, v0, vt0, t0 WHERE (((CASE t2.c0  WHEN t2.c0 THEN t0.c2 END)IS NOT(CASE WHEN t2.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM v0, t2 WHERE (0.5089440681086997);
SELECT SUM(count) FROM (SELECT ALL ((0.5089440681086997) IS TRUE)  as count FROM v0, t2);
SELECT ALL * FROM v0, t2 WHERE (0.5089440681086997);
SELECT SUM(count) FROM (SELECT ALL ((0.5089440681086997) IS TRUE)  as count FROM v0, t2);
SELECT ALL * FROM v0, t2 WHERE (0.5089440681086997);
SELECT * FROM v0, vt0, t0, t2 WHERE ((0.7208665830844508 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.7208665830844508 IN ())) IS TRUE)  as count FROM v0, vt0, t0, t2);
SELECT * FROM v0, vt0, t0, t2 WHERE ((0.7208665830844508 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.7208665830844508 IN ())) IS TRUE)  as count FROM v0, vt0, t0, t2);
SELECT * FROM v0, vt0, t0, t2 WHERE ((0.7208665830844508 IN ()));
SELECT ALL * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CHANGES());
SELECT * FROM vt0, t2 RIGHT OUTER JOIN t0 ON 0.370264654198603 WHERE (CASE t0.c0  WHEN t0.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c2 WHEN 0.21272569100100513 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0  WHEN t0.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c2 WHEN 0.21272569100100513 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t2 RIGHT OUTER JOIN t0 ON 0.370264654198603);
SELECT * FROM vt0, t2 RIGHT OUTER JOIN t0 ON 0.370264654198603 WHERE (CASE t0.c0  WHEN t0.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c2 WHEN 0.21272569100100513 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0  WHEN t0.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c2 WHEN 0.21272569100100513 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t2 RIGHT OUTER JOIN t0 ON 0.370264654198603);
SELECT * FROM vt0, t2 RIGHT OUTER JOIN t0 ON 0.370264654198603 WHERE (CASE t0.c0  WHEN t0.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c2 WHEN 0.21272569100100513 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))<(((vt0.c0) BETWEEN (0.5862737745043838) AND (vt0.c0))))) ORDER BY ((COALESCE(vt0.c0, vt0.c0))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))<(((vt0.c0) BETWEEN (0.5862737745043838) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((COALESCE(vt0.c0, vt0.c0))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))<(((vt0.c0) BETWEEN (0.5862737745043838) AND (vt0.c0))))) ORDER BY ((COALESCE(vt0.c0, vt0.c0))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))<(((vt0.c0) BETWEEN (0.5862737745043838) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((COALESCE(vt0.c0, vt0.c0))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))<(((vt0.c0) BETWEEN (0.5862737745043838) AND (vt0.c0))))) ORDER BY ((COALESCE(vt0.c0, vt0.c0))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM vt0, v0, t2, t0 WHERE (((((((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(LIKELY(DISTINCT t0.c1))))OR(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(LIKELY(DISTINCT t0.c1))))OR(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, t2, t0);
SELECT * FROM vt0, v0, t2, t0 WHERE (((((((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(LIKELY(DISTINCT t0.c1))))OR(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(LIKELY(DISTINCT t0.c1))))OR(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, t2, t0);
SELECT * FROM vt0, v0, t2, t0 WHERE (((((((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(LIKELY(DISTINCT t0.c1))))OR(CAST(t0.c0 AS INTEGER))));
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON CASE (((NULL)) NOT BETWEEN ((NULL)) AND ((t0.c2)))  WHEN ((((v0.c0)OR(t0.c0)))OR(t2.c0)) THEN json_array_length(t0.c2) END FULL OUTER JOIN vt0 ON 1.210152592E9 FULL OUTER JOIN t2 ON ((t0.c1) IS TRUE) COLLATE RTRIM WHERE (CAST(t0.c2 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE (((NULL)) NOT BETWEEN ((NULL)) AND ((t0.c2)))  WHEN ((((v0.c0)OR(t0.c0)))OR(t2.c0)) THEN json_array_length(t0.c2) END FULL OUTER JOIN vt0 ON 1.210152592E9 FULL OUTER JOIN t2 ON ((t0.c1) IS TRUE) COLLATE RTRIM);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON CASE (((NULL)) NOT BETWEEN ((NULL)) AND ((t0.c2)))  WHEN ((((v0.c0)OR(t0.c0)))OR(t2.c0)) THEN json_array_length(t0.c2) END FULL OUTER JOIN vt0 ON 1.210152592E9 FULL OUTER JOIN t2 ON ((t0.c1) IS TRUE) COLLATE RTRIM WHERE (CAST(t0.c2 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE (((NULL)) NOT BETWEEN ((NULL)) AND ((t0.c2)))  WHEN ((((v0.c0)OR(t0.c0)))OR(t2.c0)) THEN json_array_length(t0.c2) END FULL OUTER JOIN vt0 ON 1.210152592E9 FULL OUTER JOIN t2 ON ((t0.c1) IS TRUE) COLLATE RTRIM);
SELECT ALL * FROM t2 LEFT OUTER JOIN v0 ON t2.c0 WHERE (((((((t2.c0)AND(v0.c0)))OR('y-hw5wD')))AND((t2.c0 IN (v0.c0))))) ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN CAST(t2.c0 AS BLOB) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t2.c0)AND(v0.c0)))OR('y-hw5wD')))AND((t2.c0 IN (v0.c0))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN v0 ON t2.c0 ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN CAST(t2.c0 AS BLOB) END  NULLS FIRST);
SELECT ALL * FROM t2 LEFT OUTER JOIN v0 ON t2.c0 WHERE (((((((t2.c0)AND(v0.c0)))OR('y-hw5wD')))AND((t2.c0 IN (v0.c0))))) ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN CAST(t2.c0 AS BLOB) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t2.c0)AND(v0.c0)))OR('y-hw5wD')))AND((t2.c0 IN (v0.c0))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN v0 ON t2.c0 ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN CAST(t2.c0 AS BLOB) END  NULLS FIRST);
SELECT ALL * FROM t2 LEFT OUTER JOIN v0 ON t2.c0 WHERE (((((((t2.c0)AND(v0.c0)))OR('y-hw5wD')))AND((t2.c0 IN (v0.c0))))) ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN CAST(t2.c0 AS BLOB) END  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, t2 WHERE ((NOT ((t0.c2 IN (t0.c2, t0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c2 IN (t0.c2, t0.c2))))) IS TRUE)  as count FROM t0, v0, t2);
SELECT COUNT(*) FROM t0, v0, t2 WHERE ((NOT ((t0.c2 IN (t0.c2, t0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c2 IN (t0.c2, t0.c2))))) IS TRUE)  as count FROM t0, v0, t2);
SELECT COUNT(*) FROM t0, v0, t2 WHERE ((NOT ((t0.c2 IN (t0.c2, t0.c2)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE '2126689982'  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) NOTNULL) WHERE ((((t0.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((((t0.c0)<(t0.c1)))))) ORDER BY CASE (((t0.c2))>((t0.c0)))  WHEN ((t0.c1) BETWEEN (vt0.c0) AND (t0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)OR(t0.c2)))OR(t0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((((t0.c0)<(t0.c1)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE '2126689982'  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) NOTNULL) ORDER BY CASE (((t0.c2))>((t0.c0)))  WHEN ((t0.c1) BETWEEN (vt0.c0) AND (t0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)OR(t0.c2)))OR(t0.c2)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE '2126689982'  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) NOTNULL) WHERE ((((t0.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((((t0.c0)<(t0.c1)))))) ORDER BY CASE (((t0.c2))>((t0.c0)))  WHEN ((t0.c1) BETWEEN (vt0.c0) AND (t0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)OR(t0.c2)))OR(t0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((((t0.c0)<(t0.c1)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE '2126689982'  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) NOTNULL) ORDER BY CASE (((t0.c2))>((t0.c0)))  WHEN ((t0.c1) BETWEEN (vt0.c0) AND (t0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)OR(t0.c2)))OR(t0.c2)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE '2126689982'  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) NOTNULL) WHERE ((((t0.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((((t0.c0)<(t0.c1)))))) ORDER BY CASE (((t0.c2))>((t0.c0)))  WHEN ((t0.c1) BETWEEN (vt0.c0) AND (t0.c0)) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)OR(t0.c2)))OR(t0.c2)) END DESC  NULLS LAST;
SELECT ALL * FROM t2, vt0, t0, v0 WHERE (0x3941c0ab) ORDER BY vt0.c0  NULLS LAST, (((vt0.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((v0.c0) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0x3941c0ab) IS TRUE)  as count FROM t2, vt0, t0, v0 ORDER BY vt0.c0  NULLS LAST, (((vt0.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((v0.c0) IS TRUE))))  NULLS FIRST);
SELECT ALL * FROM t2, vt0, t0, v0 WHERE (0x3941c0ab) ORDER BY vt0.c0  NULLS LAST, (((vt0.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((v0.c0) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0x3941c0ab) IS TRUE)  as count FROM t2, vt0, t0, v0 ORDER BY vt0.c0  NULLS LAST, (((vt0.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((v0.c0) IS TRUE))))  NULLS FIRST);
SELECT ALL * FROM t2, vt0, t0, v0 WHERE (0x3941c0ab) ORDER BY vt0.c0  NULLS LAST, (((vt0.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((v0.c0) IS TRUE))))  NULLS FIRST;
SELECT * FROM v0, t0, vt0, t2 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM v0, t0, vt0, t2);
SELECT * FROM v0, t0, vt0, t2 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM v0, t0, vt0, t2);
SELECT * FROM v0, t0, vt0, t2 WHERE (t2.c0);
SELECT ALL * FROM t0, t2, v0 WHERE ((((t0.c0 IN (t0.c1)))IS((- (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c1)))IS((- (t0.c2))))) IS TRUE)  as count FROM t0, t2, v0);
SELECT ALL * FROM t0, t2, v0 WHERE ((((t0.c0 IN (t0.c1)))IS((- (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c1)))IS((- (t0.c2))))) IS TRUE)  as count FROM t0, t2, v0);
SELECT ALL * FROM t0, t2, v0 WHERE ((((t0.c0 IN (t0.c1)))IS((- (t0.c2)))));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)OR(((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))))AND(((t0.c1)!=(0.5902215894976708)))) WHERE (TOTAL_CHANGES()) ORDER BY ABS(DISTINCT ((0xffffffffc29c6f9f)OR(t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)OR(((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))))AND(((t0.c1)<>(0.5902215894976708)))) ORDER BY ABS(DISTINCT ((0Xffffffffc29c6f9f)OR(t0.c1)))  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)OR(((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))))AND(((t0.c1)!=(0.5902215894976708)))) WHERE (TOTAL_CHANGES()) ORDER BY ABS(DISTINCT ((0xffffffffc29c6f9f)OR(t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)OR(((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))))AND(((t0.c1)<>(0.5902215894976708)))) ORDER BY ABS(DISTINCT ((0Xffffffffc29c6f9f)OR(t0.c1)))  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)OR(((((((((t0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))))AND(((t0.c1)!=(0.5902215894976708)))) WHERE (TOTAL_CHANGES()) ORDER BY ABS(DISTINCT ((0xffffffffc29c6f9f)OR(t0.c1)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t2, t0, v0 WHERE (t0.c1) ORDER BY ((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0, t2, t0, v0 ORDER BY ((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, t2, t0, v0 WHERE (t0.c1) ORDER BY ((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0, t2, t0, v0 ORDER BY ((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, t2, t0, v0 WHERE (t0.c1) ORDER BY ((((t0.c0)AND(vt0.c0)))OR(t0.c0)) COLLATE BINARY DESC;
SELECT ALL * FROM vt0, t2, t0 CROSS JOIN v0 ON (((vt0.c0)%(t2.c0)) IN ()) WHERE (((((((((t0.c0)AND(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)))AND((NOT (t0.c1)))))AND(vt0.c0)))OR(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)AND(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)))AND((NOT (t0.c1)))))AND(vt0.c0)))OR(t0.c2))) IS TRUE)  as count FROM vt0, t2, t0 CROSS JOIN v0 ON (((vt0.c0)%(t2.c0)) IN ()));
SELECT ALL * FROM vt0, t2, t0 CROSS JOIN v0 ON (((vt0.c0)%(t2.c0)) IN ()) WHERE (((((((((t0.c0)AND(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)))AND((NOT (t0.c1)))))AND(vt0.c0)))OR(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)AND(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)))AND((NOT (t0.c1)))))AND(vt0.c0)))OR(t0.c2))) IS TRUE)  as count FROM vt0, t2, t0 CROSS JOIN v0 ON (((vt0.c0)%(t2.c0)) IN ()));
SELECT ALL * FROM vt0, t2, t0 CROSS JOIN v0 ON (((vt0.c0)%(t2.c0)) IN ()) WHERE (((((((((t0.c0)AND(CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)))AND((NOT (t0.c1)))))AND(vt0.c0)))OR(t0.c2)));
SELECT COUNT(*) FROM v0, t2, t0 FULL OUTER JOIN vt0 ON 1802267369 WHERE (((t0.c1 IN ()) IN ())) ORDER BY ((((t2.c0)==(t2.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c1 IN ()) IN ())) IS TRUE)  as count FROM v0, t2, t0 FULL OUTER JOIN vt0 ON 1802267369 ORDER BY ((((t2.c0)=(t2.c0))) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t2, t0 FULL OUTER JOIN vt0 ON 1802267369 WHERE (((t0.c1 IN ()) IN ())) ORDER BY ((((t2.c0)==(t2.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c1 IN ()) IN ())) IS TRUE)  as count FROM v0, t2, t0 FULL OUTER JOIN vt0 ON 1802267369 ORDER BY ((((t2.c0)=(t2.c0))) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t2, t0 FULL OUTER JOIN vt0 ON 1802267369 WHERE (((t0.c1 IN ()) IN ())) ORDER BY ((((t2.c0)==(t2.c0))) ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t2, v0, t0, vt0 WHERE (t0.c1 COLLATE NOCASE) ORDER BY CAST(CASE WHEN vt0.c0 THEN '1303878417' WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END AS REAL);
SELECT SUM(count) FROM (SELECT ((t0.c1 COLLATE NOCASE) IS TRUE)  as count FROM t2, v0, t0, vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN '1303878417' WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END AS REAL));
SELECT ALL COUNT(*) FROM t2, v0, t0, vt0 WHERE (t0.c1 COLLATE NOCASE) ORDER BY CAST(CASE WHEN vt0.c0 THEN '1303878417' WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END AS REAL);
SELECT SUM(count) FROM (SELECT ((t0.c1 COLLATE NOCASE) IS TRUE)  as count FROM t2, v0, t0, vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN '1303878417' WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END AS REAL));
SELECT ALL COUNT(*) FROM t2, v0, t0, vt0 WHERE (t0.c1 COLLATE NOCASE) ORDER BY CAST(CASE WHEN vt0.c0 THEN '1303878417' WHEN t0.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END AS REAL);
SELECT * FROM v0, t0, vt0 WHERE ((+ (((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ((+ (((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ((+ (((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c1)AND(t0.c1)))OR(t0.c2))) NOT BETWEEN (((((t0.c2)AND('Rx')))AND(t0.c2))) AND (((t0.c2) BETWEEN (t0.c1) AND (''))))) ORDER BY CASE ((v0.c0) IS FALSE)  WHEN CASE WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN v0.c0 WHEN t0.c0 THEN t0.c2 END THEN t0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(t0.c1)))OR(t0.c2))) NOT BETWEEN (((((t0.c2)AND('Rx')))AND(t0.c2))) AND (((t0.c2) BETWEEN (t0.c1) AND (''))))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE ((v0.c0) IS FALSE)  WHEN CASE WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN v0.c0 WHEN t0.c0 THEN t0.c2 END THEN t0.c0 COLLATE RTRIM END  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c1)AND(t0.c1)))OR(t0.c2))) NOT BETWEEN (((((t0.c2)AND('Rx')))AND(t0.c2))) AND (((t0.c2) BETWEEN (t0.c1) AND (''))))) ORDER BY CASE ((v0.c0) IS FALSE)  WHEN CASE WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN v0.c0 WHEN t0.c0 THEN t0.c2 END THEN t0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(t0.c1)))OR(t0.c2))) NOT BETWEEN (((((t0.c2)AND('Rx')))AND(t0.c2))) AND (((t0.c2) BETWEEN (t0.c1) AND (''))))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE ((v0.c0) IS FALSE)  WHEN CASE WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN v0.c0 WHEN t0.c0 THEN t0.c2 END THEN t0.c0 COLLATE RTRIM END  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c1)AND(t0.c1)))OR(t0.c2))) NOT BETWEEN (((((t0.c2)AND('Rx')))AND(t0.c2))) AND (((t0.c2) BETWEEN (t0.c1) AND (''))))) ORDER BY CASE ((v0.c0) IS FALSE)  WHEN CASE WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN v0.c0 WHEN t0.c0 THEN t0.c2 END THEN t0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT ALL * FROM t2, vt0 WHERE ((((CAST(-3.4648375E7 AS TEXT)))>=(((~ (t2.c0)))))) ORDER BY ((((LIKELY(vt0.c0))AND(((vt0.c0)||(vt0.c0)))))OR(((t2.c0) BETWEEN (vt0.c0) AND (t2.c0)))) DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (t2.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(-3.4648375E7 AS TEXT)))>=(((~ (t2.c0)))))) IS TRUE)  as count FROM t2, vt0 ORDER BY ((((LIKELY(vt0.c0))AND(((vt0.c0)||(vt0.c0)))))OR(((t2.c0) BETWEEN (vt0.c0) AND (t2.c0)))) DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (t2.c0))) NOTNULL) DESC);
SELECT ALL * FROM t2, vt0 WHERE ((((CAST(-3.4648375E7 AS TEXT)))>=(((~ (t2.c0)))))) ORDER BY ((((LIKELY(vt0.c0))AND(((vt0.c0)||(vt0.c0)))))OR(((t2.c0) BETWEEN (vt0.c0) AND (t2.c0)))) DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (t2.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(-3.4648375E7 AS TEXT)))>=(((~ (t2.c0)))))) IS TRUE)  as count FROM t2, vt0 ORDER BY ((((LIKELY(vt0.c0))AND(((vt0.c0)||(vt0.c0)))))OR(((t2.c0) BETWEEN (vt0.c0) AND (t2.c0)))) DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (t2.c0))) NOTNULL) DESC);
SELECT ALL * FROM t2, vt0 WHERE ((((CAST(-3.4648375E7 AS TEXT)))>=(((~ (t2.c0)))))) ORDER BY ((((LIKELY(vt0.c0))AND(((vt0.c0)||(vt0.c0)))))OR(((t2.c0) BETWEEN (vt0.c0) AND (t2.c0)))) DESC, ((((vt0.c0) BETWEEN (vt0.c0) AND (t2.c0))) NOTNULL) DESC;
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON (t2.c0 IN ()) COLLATE NOCASE WHERE ((((t0.c1, t0.c2, t2.c0, t0.c1, t0.c2)) BETWEEN ((NULLIF(t0.c0, t0.c0), x'f5ae', t2.c0, ((t0.c1)=(NULL)), CAST(t0.c1 AS INTEGER))) AND ((t2.c0 COLLATE NOCASE, (((t0.c1))==((t0.c0))), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), CAST(t2.c0 AS BLOB), (- (t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c2, t2.c0, t0.c1, t0.c2)) BETWEEN ((NULLIF(t0.c0, t0.c0), x'f5ae', t2.c0, ((t0.c1)==(NULL)), CAST(t0.c1 AS INTEGER))) AND ((t2.c0 COLLATE NOCASE, (((t0.c1))==((t0.c0))), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), CAST(t2.c0 AS BLOB), (- (t0.c1)))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON (t2.c0 IN ()) COLLATE NOCASE);
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON (t2.c0 IN ()) COLLATE NOCASE WHERE ((((t0.c1, t0.c2, t2.c0, t0.c1, t0.c2)) BETWEEN ((NULLIF(t0.c0, t0.c0), x'f5ae', t2.c0, ((t0.c1)=(NULL)), CAST(t0.c1 AS INTEGER))) AND ((t2.c0 COLLATE NOCASE, (((t0.c1))==((t0.c0))), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), CAST(t2.c0 AS BLOB), (- (t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c2, t2.c0, t0.c1, t0.c2)) BETWEEN ((NULLIF(t0.c0, t0.c0), x'f5ae', t2.c0, ((t0.c1)==(NULL)), CAST(t0.c1 AS INTEGER))) AND ((t2.c0 COLLATE NOCASE, (((t0.c1))==((t0.c0))), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), CAST(t2.c0 AS BLOB), (- (t0.c1)))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON (t2.c0 IN ()) COLLATE NOCASE);
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON (t2.c0 IN ()) COLLATE NOCASE WHERE ((((t0.c1, t0.c2, t2.c0, t0.c1, t0.c2)) BETWEEN ((NULLIF(t0.c0, t0.c0), x'f5ae', t2.c0, ((t0.c1)=(NULL)), CAST(t0.c1 AS INTEGER))) AND ((t2.c0 COLLATE NOCASE, (((t0.c1))==((t0.c0))), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), CAST(t2.c0 AS BLOB), (- (t0.c1))))));
SELECT ALL * FROM v0, t0, vt0, t2 WHERE (((NULLIF(v0.c0, vt0.c0)) NOT NULL)) ORDER BY (('1210152592' COLLATE NOCASE)LIKE((t0.c0 IN ())))  NULLS FIRST, ((CASE WHEN t0.c0 THEN vt0.c0 END)-(((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(v0.c0, vt0.c0)) NOT NULL)) IS TRUE)  as count FROM v0, t0, vt0, t2 ORDER BY (('1210152592' COLLATE NOCASE)LIKE((t0.c0 IN ())))  NULLS FIRST, ((CASE WHEN t0.c0 THEN vt0.c0 END)-(((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt0, t2 WHERE (((NULLIF(v0.c0, vt0.c0)) NOT NULL)) ORDER BY (('1210152592' COLLATE NOCASE)LIKE((t0.c0 IN ())))  NULLS FIRST, ((CASE WHEN t0.c0 THEN vt0.c0 END)-(((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(v0.c0, vt0.c0)) NOT NULL)) IS TRUE)  as count FROM v0, t0, vt0, t2 ORDER BY (('1210152592' COLLATE NOCASE)LIKE((t0.c0 IN ())))  NULLS FIRST, ((CASE WHEN t0.c0 THEN vt0.c0 END)-(((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt0, t2 WHERE (((NULLIF(v0.c0, vt0.c0)) NOT NULL)) ORDER BY (('1210152592' COLLATE NOCASE)LIKE((t0.c0 IN ())))  NULLS FIRST, ((CASE WHEN t0.c0 THEN vt0.c0 END)-(((t0.c1) NOT BETWEEN (NULL) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0)*((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)*((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT * FROM vt0 WHERE ((+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0)*((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)*((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT * FROM vt0 WHERE ((+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0)*((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(t0.c2 AS BLOB) COLLATE RTRIM) ORDER BY ((((t0.c1)>=(t0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c1)>=(t0.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(t0.c2 AS BLOB) COLLATE RTRIM) ORDER BY ((((t0.c1)>=(t0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c1)>=(t0.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(t0.c2 AS BLOB) COLLATE RTRIM) ORDER BY ((((t0.c1)>=(t0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-401857280' END AS TEXT)) ORDER BY NULLIF(CAST(vt0.c0 AS INTEGER), ((vt0.c0)+(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-401857280' END AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(CAST(vt0.c0 AS INTEGER), ((vt0.c0)+(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-401857280' END AS TEXT)) ORDER BY NULLIF(CAST(vt0.c0 AS INTEGER), ((vt0.c0)+(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-401857280' END AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(CAST(vt0.c0 AS INTEGER), ((vt0.c0)+(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-401857280' END AS TEXT)) ORDER BY NULLIF(CAST(vt0.c0 AS INTEGER), ((vt0.c0)+(vt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, t2, vt0 WHERE (INSTR(vt0.c0, v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((INSTR(vt0.c0, v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0, t2, vt0);
SELECT COUNT(*) FROM v0, t2, vt0 WHERE (INSTR(vt0.c0, v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((INSTR(vt0.c0, v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0, t2, vt0);
SELECT COUNT(*) FROM v0, t2, vt0 WHERE (INSTR(vt0.c0, v0.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE ((t0.c2) IS TRUE)  WHEN ((t2.c0)<('-1242192948')) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) END RIGHT OUTER JOIN t0 ON ((v0.c0) ISNULL) INNER JOIN t2 ON ROUND(((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c0)), ((t0.c1)GLOB(t0.c2))) WHERE (((((vt0.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE ((t0.c2) IS TRUE)  WHEN ((t2.c0)<('-1242192948')) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) END RIGHT OUTER JOIN t0 ON ((v0.c0) ISNULL) INNER JOIN t2 ON ROUND(((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c0)), ((t0.c1)GLOB(t0.c2))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE ((t0.c2) IS TRUE)  WHEN ((t2.c0)<('-1242192948')) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) END RIGHT OUTER JOIN t0 ON ((v0.c0) ISNULL) INNER JOIN t2 ON ROUND(((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c0)), ((t0.c1)GLOB(t0.c2))) WHERE (((((vt0.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE ((t0.c2) IS TRUE)  WHEN ((t2.c0)<('-1242192948')) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) END RIGHT OUTER JOIN t0 ON ((v0.c0) ISNULL) INNER JOIN t2 ON ROUND(((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c0)), ((t0.c1)GLOB(t0.c2))));
SELECT * FROM vt0, v0 WHERE ((NOT (ABS(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (ABS(DISTINCT v0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT (ABS(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (ABS(DISTINCT v0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT (ABS(DISTINCT v0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((~ (((t0.c2) IS TRUE)))) ORDER BY ((((t0.c2)&(t0.c0))) NOTNULL), ((((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c2))) NOT BETWEEN (((t0.c1) BETWEEN (t0.c1) AND (vt0.c0))) AND (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.7610324220408917 WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((t0.c2)&(t0.c0))) NOTNULL), ((((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c2))) NOT BETWEEN (((t0.c1) BETWEEN (t0.c1) AND (vt0.c0))) AND (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.7610324220408917 WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((~ (((t0.c2) IS TRUE)))) ORDER BY ((((t0.c2)&(t0.c0))) NOTNULL), ((((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c2))) NOT BETWEEN (((t0.c1) BETWEEN (t0.c1) AND (vt0.c0))) AND (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.7610324220408917 WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((t0.c2)&(t0.c0))) NOTNULL), ((((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c2))) NOT BETWEEN (((t0.c1) BETWEEN (t0.c1) AND (vt0.c0))) AND (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.7610324220408917 WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((~ (((t0.c2) IS TRUE)))) ORDER BY ((((t0.c2)&(t0.c0))) NOTNULL), ((((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c2))) NOT BETWEEN (((t0.c1) BETWEEN (t0.c1) AND (vt0.c0))) AND (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.7610324220408917 WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 END)) ASC;
SELECT ALL * FROM t2 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ('');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TIME(vt0.c0, vt0.c0, ''))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((TIME(vt0.c0, vt0.c0, ''))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TIME(vt0.c0, vt0.c0, ''))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((TIME(vt0.c0, vt0.c0, ''))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TIME(vt0.c0, vt0.c0, ''))) AND ((vt0.c0))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((t0.c1) BETWEEN (NULL) AND (t0.c2)))>(t0.c2)) LEFT OUTER JOIN t2 ON (~ (((t0.c0)>(t0.c2)))) INNER JOIN t0 ON (NOT (((((t0.c0)AND(t2.c0)))AND(v0.c0)))) WHERE (((((vt0.c0) IS FALSE)) BETWEEN (0.4928142802947377) AND (t2.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (0.4928142802947377) AND (t2.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((t0.c1) BETWEEN (NULL) AND (t0.c2)))>(t0.c2)) LEFT OUTER JOIN t2 ON (~ (((t0.c0)>(t0.c2)))) INNER JOIN t0 ON (NOT (((((t0.c0)AND(t2.c0)))AND(v0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((t0.c1) BETWEEN (NULL) AND (t0.c2)))>(t0.c2)) LEFT OUTER JOIN t2 ON (~ (((t0.c0)>(t0.c2)))) INNER JOIN t0 ON (NOT (((((t0.c0)AND(t2.c0)))AND(v0.c0)))) WHERE (((((vt0.c0) IS FALSE)) BETWEEN (0.4928142802947377) AND (t2.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (0.4928142802947377) AND (t2.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((t0.c1) BETWEEN (NULL) AND (t0.c2)))>(t0.c2)) LEFT OUTER JOIN t2 ON (~ (((t0.c0)>(t0.c2)))) INNER JOIN t0 ON (NOT (((((t0.c0)AND(t2.c0)))AND(v0.c0)))));
SELECT COUNT(*) FROM t0, t2, vt0, v0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, t2, vt0, v0);
SELECT COUNT(*) FROM t0, t2, vt0, v0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, t2, vt0, v0);
SELECT COUNT(*) FROM t0, t2, vt0, v0 WHERE (LAST_INSERT_ROWID());
SELECT * FROM t2 CROSS JOIN v0 ON CAST(t0.c0 AS BLOB) COLLATE RTRIM CROSS JOIN t0 ON -1321444216 INNER JOIN vt0 ON (((((vt0.c0)<>(t0.c1))))>=(((('뺮')OR(t2.c0))))) WHERE (json_array_length(((t0.c1) ISNULL), (t0.c1 IN ()))) ORDER BY CASE v0.c0  WHEN json_valid(vt0.c0) THEN ((t2.c0)||(t2.c0)) WHEN v0.c0 THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND ('2092509697')) WHEN ((vt0.c0)OR(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE CAST(v0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t0.c1) ISNULL), (t0.c1 IN ()))) IS TRUE)  as count FROM t2 CROSS JOIN v0 ON CAST(t0.c0 AS BLOB) COLLATE RTRIM CROSS JOIN t0 ON -1321444216 INNER JOIN vt0 ON (((((vt0.c0)!=(t0.c1))))>=(((('뺮')OR(t2.c0))))) ORDER BY CASE v0.c0  WHEN json_valid(vt0.c0) THEN ((t2.c0)||(t2.c0)) WHEN v0.c0 THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND ('2092509697')) WHEN ((vt0.c0)OR(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE CAST(v0.c0 AS BLOB) END);
SELECT * FROM t2 CROSS JOIN v0 ON CAST(t0.c0 AS BLOB) COLLATE RTRIM CROSS JOIN t0 ON -1321444216 INNER JOIN vt0 ON (((((vt0.c0)<>(t0.c1))))>=(((('뺮')OR(t2.c0))))) WHERE (json_array_length(((t0.c1) ISNULL), (t0.c1 IN ()))) ORDER BY CASE v0.c0  WHEN json_valid(vt0.c0) THEN ((t2.c0)||(t2.c0)) WHEN v0.c0 THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND ('2092509697')) WHEN ((vt0.c0)OR(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE CAST(v0.c0 AS BLOB) END;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t0.c1) ISNULL), (t0.c1 IN ()))) IS TRUE)  as count FROM t2 CROSS JOIN v0 ON CAST(t0.c0 AS BLOB) COLLATE RTRIM CROSS JOIN t0 ON -1321444216 INNER JOIN vt0 ON (((((vt0.c0)!=(t0.c1))))>=(((('뺮')OR(t2.c0))))) ORDER BY CASE v0.c0  WHEN json_valid(vt0.c0) THEN ((t2.c0)||(t2.c0)) WHEN v0.c0 THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND ('2092509697')) WHEN ((vt0.c0)OR(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE CAST(v0.c0 AS BLOB) END);
SELECT * FROM t2 CROSS JOIN v0 ON CAST(t0.c0 AS BLOB) COLLATE RTRIM CROSS JOIN t0 ON -1321444216 INNER JOIN vt0 ON (((((vt0.c0)<>(t0.c1))))>=(((('뺮')OR(t2.c0))))) WHERE (json_array_length(((t0.c1) ISNULL), (t0.c1 IN ()))) ORDER BY CASE v0.c0  WHEN json_valid(vt0.c0) THEN ((t2.c0)||(t2.c0)) WHEN v0.c0 THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND ('2092509697')) WHEN ((vt0.c0)OR(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE CAST(v0.c0 AS BLOB) END;
SELECT ALL * FROM t0, t2, v0, vt0 WHERE (json((NOT (vt0.c0)))) ORDER BY (((((v0.c0) IS TRUE)))<((TYPEOF(v0.c0)))) ASC, CAST(x'' AS NUMERIC) ASC  NULLS LAST, ((((t0.c2) BETWEEN (x'') AND (v0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((json((NOT (vt0.c0)))) IS TRUE)  as count FROM t0, t2, v0, vt0 ORDER BY (((((v0.c0) IS TRUE)))<((TYPEOF(v0.c0)))) ASC, CAST(x'' AS NUMERIC) ASC  NULLS LAST, ((((t0.c2) BETWEEN (x'') AND (v0.c0))) IS FALSE) ASC);
SELECT ALL * FROM t0, t2, v0, vt0 WHERE (json((NOT (vt0.c0)))) ORDER BY (((((v0.c0) IS TRUE)))<((TYPEOF(v0.c0)))) ASC, CAST(x'' AS NUMERIC) ASC  NULLS LAST, ((((t0.c2) BETWEEN (x'') AND (v0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((json((NOT (vt0.c0)))) IS TRUE)  as count FROM t0, t2, v0, vt0 ORDER BY (((((v0.c0) IS TRUE)))<((TYPEOF(v0.c0)))) ASC, CAST(x'' AS NUMERIC) ASC  NULLS LAST, ((((t0.c2) BETWEEN (x'') AND (v0.c0))) IS FALSE) ASC);
SELECT ALL * FROM t0, t2, v0, vt0 WHERE (json((NOT (vt0.c0)))) ORDER BY (((((v0.c0) IS TRUE)))<((TYPEOF(v0.c0)))) ASC, CAST(x'' AS NUMERIC) ASC  NULLS LAST, ((((t0.c2) BETWEEN (x'') AND (v0.c0))) IS FALSE) ASC;
SELECT ALL * FROM vt0, v0, t0, t2 WHERE (((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))) NOT BETWEEN (t0.c1) AND (x''))) ORDER BY ((((((0.5702719019566477)OR(x'')))AND(vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))) NOT BETWEEN (t0.c1) AND (x''))) IS TRUE)  as count FROM vt0, v0, t0, t2 ORDER BY ((((((0.5702719019566477)OR(x'')))AND(vt0.c0))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0, t2 WHERE (((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))) NOT BETWEEN (t0.c1) AND (x''))) ORDER BY ((((((0.5702719019566477)OR(x'')))AND(vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))) NOT BETWEEN (t0.c1) AND (x''))) IS TRUE)  as count FROM vt0, v0, t0, t2 ORDER BY ((((((0.5702719019566477)OR(x'')))AND(vt0.c0))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0, t2 WHERE (((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))) NOT BETWEEN (t0.c1) AND (x''))) ORDER BY ((((((0.5702719019566477)OR(x'')))AND(vt0.c0))) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0, t0, t2 WHERE (x'') ORDER BY CAST(((t0.c2)==(t2.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, t0, t2 ORDER BY CAST(((t0.c2)==(t2.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0, v0, t0, t2 WHERE (x'') ORDER BY CAST(((t0.c2)==(t2.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, t0, t2 ORDER BY CAST(((t0.c2)==(t2.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0, v0, t0, t2 WHERE (x'') ORDER BY CAST(((t0.c2)==(t2.c0)) AS INTEGER);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((((t0.c2) NOTNULL))AND(LIKELY(DISTINCT '-115298798'))))OR(0X719c04b2)) WHERE (CASE WHEN CAST(t0.c0 AS TEXT) THEN (((t0.c1))<=((vt0.c0))) ELSE NULL COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS TEXT) THEN (((t0.c1))<=((vt0.c0))) ELSE NULL COLLATE BINARY END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((t0.c2) NOTNULL))AND(LIKELY(DISTINCT '-115298798'))))OR(0x719c04b2)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((((t0.c2) NOTNULL))AND(LIKELY(DISTINCT '-115298798'))))OR(0X719c04b2)) WHERE (CASE WHEN CAST(t0.c0 AS TEXT) THEN (((t0.c1))<=((vt0.c0))) ELSE NULL COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS TEXT) THEN (((t0.c1))<=((vt0.c0))) ELSE NULL COLLATE BINARY END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((t0.c2) NOTNULL))AND(LIKELY(DISTINCT '-115298798'))))OR(0x719c04b2)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((((t0.c2) NOTNULL))AND(LIKELY(DISTINCT '-115298798'))))OR(0X719c04b2)) WHERE (CASE WHEN CAST(t0.c0 AS TEXT) THEN (((t0.c1))<=((vt0.c0))) ELSE NULL COLLATE BINARY END);
SELECT COUNT(*) FROM vt0, t2 WHERE ((((((vt0.c0, vt0.c0, t2.c0)) BETWEEN ((vt0.c0, t2.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, t2.c0))))LIKE((+ (t2.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, t2.c0)) BETWEEN ((vt0.c0, t2.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, t2.c0))))LIKE((+ (t2.c0))))) IS TRUE)  as count FROM vt0, t2);
SELECT COUNT(*) FROM vt0, t2 WHERE ((((((vt0.c0, vt0.c0, t2.c0)) BETWEEN ((vt0.c0, t2.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, t2.c0))))LIKE((+ (t2.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, t2.c0)) BETWEEN ((vt0.c0, t2.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, t2.c0))))LIKE((+ (t2.c0))))) IS TRUE)  as count FROM vt0, t2);
SELECT COUNT(*) FROM vt0, t2 WHERE ((((((vt0.c0, vt0.c0, t2.c0)) BETWEEN ((vt0.c0, t2.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, t2.c0))))LIKE((+ (t2.c0)))));
SELECT * FROM vt0 WHERE (CASE 0.19452757608406523  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN PRINTF(vt0.c0) WHEN (vt0.c0 IN ()) THEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)*(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN (+ (vt0.c0)) ELSE LIKELY(DISTINCT vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.19452757608406523  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN PRINTF(vt0.c0) WHEN (vt0.c0 IN ()) THEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)*(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN (+ (vt0.c0)) ELSE LIKELY(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE 0.19452757608406523  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN PRINTF(vt0.c0) WHEN (vt0.c0 IN ()) THEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)*(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN (+ (vt0.c0)) ELSE LIKELY(DISTINCT vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.19452757608406523  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN PRINTF(vt0.c0) WHEN (vt0.c0 IN ()) THEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)*(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN (+ (vt0.c0)) ELSE LIKELY(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE 0.19452757608406523  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN PRINTF(vt0.c0) WHEN (vt0.c0 IN ()) THEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)*(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN (+ (vt0.c0)) ELSE LIKELY(DISTINCT vt0.c0) END);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS BLOB)) BETWEEN (((v0.c0)||(t0.c1))) AND (((t0.c0)>(t0.c1)))) WHERE (((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))AND((((t0.c2, t0.c0, t0.c2))>((v0.c0, v0.c0, t0.c1))))))OR(x''))) ORDER BY ABS((v0.c0 IN (v0.c0, t0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))AND((((t0.c2, t0.c0, t0.c2))>((v0.c0, v0.c0, t0.c1))))))OR(x''))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS BLOB)) BETWEEN (((v0.c0)||(t0.c1))) AND (((t0.c0)>(t0.c1)))) ORDER BY ABS((v0.c0 IN (v0.c0, t0.c1))) DESC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS BLOB)) BETWEEN (((v0.c0)||(t0.c1))) AND (((t0.c0)>(t0.c1)))) WHERE (((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))AND((((t0.c2, t0.c0, t0.c2))>((v0.c0, v0.c0, t0.c1))))))OR(x''))) ORDER BY ABS((v0.c0 IN (v0.c0, t0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))AND((((t0.c2, t0.c0, t0.c2))>((v0.c0, v0.c0, t0.c1))))))OR(x''))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS BLOB)) BETWEEN (((v0.c0)||(t0.c1))) AND (((t0.c0)>(t0.c1)))) ORDER BY ABS((v0.c0 IN (v0.c0, t0.c1))) DESC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS BLOB)) BETWEEN (((v0.c0)||(t0.c1))) AND (((t0.c0)>(t0.c1)))) WHERE (((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)))AND((((t0.c2, t0.c0, t0.c2))>((v0.c0, v0.c0, t0.c1))))))OR(x''))) ORDER BY ABS((v0.c0 IN (v0.c0, t0.c1))) DESC;
SELECT ALL * FROM v0, t2, vt0 WHERE (SQLITE_COMPILEOPTION_GET((((t2.c0, v0.c0, vt0.c0))<((NULL, '-383540530', t2.c0))))) ORDER BY ((((('1802267369'))>=((vt0.c0)))) BETWEEN (CAST(x'' AS NUMERIC)) AND (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((((t2.c0, v0.c0, vt0.c0))<((NULL, '-383540530', t2.c0))))) IS TRUE)  as count FROM v0, t2, vt0 ORDER BY ((((('1802267369'))>=((vt0.c0)))) BETWEEN (CAST(x'' AS NUMERIC)) AND (NULL))  NULLS LAST);
SELECT ALL * FROM v0, t2, vt0 WHERE (SQLITE_COMPILEOPTION_GET((((t2.c0, v0.c0, vt0.c0))<((NULL, '-383540530', t2.c0))))) ORDER BY ((((('1802267369'))>=((vt0.c0)))) BETWEEN (CAST(x'' AS NUMERIC)) AND (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((((t2.c0, v0.c0, vt0.c0))<((NULL, '-383540530', t2.c0))))) IS TRUE)  as count FROM v0, t2, vt0 ORDER BY ((((('1802267369'))>=((vt0.c0)))) BETWEEN (CAST(x'' AS NUMERIC)) AND (NULL))  NULLS LAST);
SELECT ALL * FROM v0, t2, vt0 WHERE (SQLITE_COMPILEOPTION_GET((((t2.c0, v0.c0, vt0.c0))<((NULL, '-383540530', t2.c0))))) ORDER BY ((((('1802267369'))>=((vt0.c0)))) BETWEEN (CAST(x'' AS NUMERIC)) AND (NULL))  NULLS LAST;
SELECT COUNT(*) FROM t2, t0, v0, vt0 WHERE (0xffffffff98e4cfd7);
SELECT SUM(count) FROM (SELECT ((0Xffffffff98e4cfd7) IS TRUE)  as count FROM t2, t0, v0, vt0);
SELECT COUNT(*) FROM t2, t0, v0, vt0 WHERE (0xffffffff98e4cfd7);
SELECT SUM(count) FROM (SELECT ((0Xffffffff98e4cfd7) IS TRUE)  as count FROM t2, t0, v0, vt0);
SELECT COUNT(*) FROM t2, t0, v0, vt0 WHERE (0xffffffff98e4cfd7);
SELECT ALL COUNT(*) FROM vt0, v0, t0, t2 WHERE (((t0.c0)OR(((x'97b4')>=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)OR(((x'97b4')>=(t0.c1))))) IS TRUE)  as count FROM vt0, v0, t0, t2);
SELECT ALL COUNT(*) FROM vt0, v0, t0, t2 WHERE (((t0.c0)OR(((x'97b4')>=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)OR(((x'97b4')>=(t0.c1))))) IS TRUE)  as count FROM vt0, v0, t0, t2);
SELECT ALL COUNT(*) FROM vt0, v0, t0, t2 WHERE (((t0.c0)OR(((x'97b4')>=(t0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) NOTNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON CHANGES() FULL OUTER JOIN t2 ON TRIM(((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) WHERE (CAST(CAST('' AS INTEGER) AS BLOB)) ORDER BY (((+ (vt0.c0))) IS FALSE) ASC, ((((t2.c0))<=((t2.c0))) IN ((((t2.c0))!=((vt0.c0))), vt0.c0)) ASC, (- (1.183497542E9));
SELECT SUM(count) FROM (SELECT ((CAST(CAST('' AS INTEGER) AS BLOB)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CHANGES() FULL OUTER JOIN t2 ON TRIM(((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) ORDER BY (((+ (vt0.c0))) IS FALSE) ASC, ((((t2.c0))<=((t2.c0))) IN ((((t2.c0))!=((vt0.c0))), vt0.c0)) ASC, (- (1.183497542E9)));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON CHANGES() FULL OUTER JOIN t2 ON TRIM(((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) WHERE (CAST(CAST('' AS INTEGER) AS BLOB)) ORDER BY (((+ (vt0.c0))) IS FALSE) ASC, ((((t2.c0))<=((t2.c0))) IN ((((t2.c0))!=((vt0.c0))), vt0.c0)) ASC, (- (1.183497542E9));
SELECT SUM(count) FROM (SELECT ((CAST(CAST('' AS INTEGER) AS BLOB)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CHANGES() FULL OUTER JOIN t2 ON TRIM(((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) ORDER BY (((+ (vt0.c0))) IS FALSE) ASC, ((((t2.c0))<=((t2.c0))) IN ((((t2.c0))!=((vt0.c0))), vt0.c0)) ASC, (- (1.183497542E9)));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON CHANGES() FULL OUTER JOIN t2 ON TRIM(((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) WHERE (CAST(CAST('' AS INTEGER) AS BLOB)) ORDER BY (((+ (vt0.c0))) IS FALSE) ASC, ((((t2.c0))<=((t2.c0))) IN ((((t2.c0))!=((vt0.c0))), vt0.c0)) ASC, (- (1.183497542E9));
SELECT ALL * FROM t0 NOT INDEXED, vt0 WHERE (((((vt0.c0)>>(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0 NOT INDEXED, vt0 WHERE (((((vt0.c0)>>(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0 NOT INDEXED, vt0 WHERE (((((vt0.c0)>>(t0.c0))) NOTNULL));
SELECT ALL * FROM t0, vt0, v0, t2 WHERE ((NOT (((t0.c2) NOT NULL)))) ORDER BY (((((t0.c0)) NOT BETWEEN ((-9.45994165E8)) AND ((v0.c0))))*(t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c2) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, v0, t2 ORDER BY (((((t0.c0)) NOT BETWEEN ((-9.45994165E8)) AND ((v0.c0))))*(t0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0, vt0, v0, t2 WHERE ((NOT (((t0.c2) NOT NULL)))) ORDER BY (((((t0.c0)) NOT BETWEEN ((-9.45994165E8)) AND ((v0.c0))))*(t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c2) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, v0, t2 ORDER BY (((((t0.c0)) NOT BETWEEN ((-9.45994165E8)) AND ((v0.c0))))*(t0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0, vt0, v0, t2 WHERE ((NOT (((t0.c2) NOT NULL)))) ORDER BY (((((t0.c0)) NOT BETWEEN ((-9.45994165E8)) AND ((v0.c0))))*(t0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)) NOT BETWEEN ((0.0656150467437987)) AND ((((t0.c2) NOT BETWEEN (t0.c2) AND (0.9750695143721018)))))) ORDER BY 0.7766667908853692 DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((0.0656150467437987)) AND ((((t0.c2) NOT BETWEEN (t0.c2) AND (0.9750695143721018)))))) IS TRUE)  as count FROM t0 ORDER BY 0.7766667908853692 DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)) NOT BETWEEN ((0.0656150467437987)) AND ((((t0.c2) NOT BETWEEN (t0.c2) AND (0.9750695143721018)))))) ORDER BY 0.7766667908853692 DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((0.0656150467437987)) AND ((((t0.c2) NOT BETWEEN (t0.c2) AND (0.9750695143721018)))))) IS TRUE)  as count FROM t0 ORDER BY 0.7766667908853692 DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)) NOT BETWEEN ((0.0656150467437987)) AND ((((t0.c2) NOT BETWEEN (t0.c2) AND (0.9750695143721018)))))) ORDER BY 0.7766667908853692 DESC;
SELECT COUNT(*) FROM t0 INNER JOIN t2 ON LIKELY((+ (t0.c2))) CROSS JOIN vt0 ON HEX(t0.c2) COLLATE NOCASE COLLATE NOCASE WHERE ((((+ (t0.c2))) NOT BETWEEN (NULL) AND (t2.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c2))) NOT BETWEEN (NULL) AND (t2.c0))) IS TRUE)  as count FROM t0 INNER JOIN t2 ON LIKELY((+ (t0.c2))) CROSS JOIN vt0 ON HEX(t0.c2) COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM t0 INNER JOIN t2 ON LIKELY((+ (t0.c2))) CROSS JOIN vt0 ON HEX(t0.c2) COLLATE NOCASE COLLATE NOCASE WHERE ((((+ (t0.c2))) NOT BETWEEN (NULL) AND (t2.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c2))) NOT BETWEEN (NULL) AND (t2.c0))) IS TRUE)  as count FROM t0 INNER JOIN t2 ON LIKELY((+ (t0.c2))) CROSS JOIN vt0 ON HEX(t0.c2) COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM t0 INNER JOIN t2 ON LIKELY((+ (t0.c2))) CROSS JOIN vt0 ON HEX(t0.c2) COLLATE NOCASE COLLATE NOCASE WHERE ((((+ (t0.c2))) NOT BETWEEN (NULL) AND (t2.c0)));
SELECT * FROM vt0, t0, v0 WHERE ((~ (json_valid(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (json_valid(t0.c0)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE ((~ (json_valid(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (json_valid(t0.c0)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE ((~ (json_valid(t0.c0))));
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN t2 ON 0.4301283609391323 INNER JOIN v0 ON CAST((t0.c2 IN ()) AS NUMERIC) WHERE ((((647787284)) NOT BETWEEN (((t0.c0 IN ()))) AND (('' COLLATE NOCASE)))) ORDER BY UNLIKELY(((t0.c2) NOT NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((647787284)) NOT BETWEEN (((t0.c0 IN ()))) AND (('' COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN t2 ON 0.4301283609391323 INNER JOIN v0 ON CAST((t0.c2 IN ()) AS NUMERIC) ORDER BY UNLIKELY(((t0.c2) NOT NULL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN t2 ON 0.4301283609391323 INNER JOIN v0 ON CAST((t0.c2 IN ()) AS NUMERIC) WHERE ((((647787284)) NOT BETWEEN (((t0.c0 IN ()))) AND (('' COLLATE NOCASE)))) ORDER BY UNLIKELY(((t0.c2) NOT NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((647787284)) NOT BETWEEN (((t0.c0 IN ()))) AND (('' COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN t2 ON 0.4301283609391323 INNER JOIN v0 ON CAST((t0.c2 IN ()) AS NUMERIC) ORDER BY UNLIKELY(((t0.c2) NOT NULL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN t2 ON 0.4301283609391323 INNER JOIN v0 ON CAST((t0.c2 IN ()) AS NUMERIC) WHERE ((((647787284)) NOT BETWEEN (((t0.c0 IN ()))) AND (('' COLLATE NOCASE)))) ORDER BY UNLIKELY(((t0.c2) NOT NULL)) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(((t0.c2)=(t0.c0)) AS REAL)) ORDER BY ((CASE WHEN t0.c1 THEN t0.c1 END) NOT NULL) DESC, ((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))AND(CASE t0.c0  WHEN x'' THEN t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)==(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c1 THEN t0.c1 END) NOT NULL) DESC, ((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))AND(CASE t0.c0  WHEN x'' THEN t0.c0 END)) DESC);
SELECT * FROM t0 WHERE (CAST(((t0.c2)=(t0.c0)) AS REAL)) ORDER BY ((CASE WHEN t0.c1 THEN t0.c1 END) NOT NULL) DESC, ((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))AND(CASE t0.c0  WHEN x'' THEN t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)==(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c1 THEN t0.c1 END) NOT NULL) DESC, ((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))AND(CASE t0.c0  WHEN x'' THEN t0.c0 END)) DESC);
SELECT * FROM t0 WHERE (CAST(((t0.c2)=(t0.c0)) AS REAL)) ORDER BY ((CASE WHEN t0.c1 THEN t0.c1 END) NOT NULL) DESC, ((((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))AND(CASE t0.c0  WHEN x'' THEN t0.c0 END)) DESC;
SELECT COUNT(*) FROM t2, v0 WHERE (CASE WHEN t2.c0 THEN (('')>(v0.c0)) ELSE (((('jP')OR(t2.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t2.c0 THEN (('')>(v0.c0)) ELSE (((('jP')OR(t2.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM t2, v0);
SELECT COUNT(*) FROM t2, v0 WHERE (CASE WHEN t2.c0 THEN (('')>(v0.c0)) ELSE (((('jP')OR(t2.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t2.c0 THEN (('')>(v0.c0)) ELSE (((('jP')OR(t2.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM t2, v0);
SELECT COUNT(*) FROM t2, v0 WHERE (CASE WHEN t2.c0 THEN (('')>(v0.c0)) ELSE (((('jP')OR(t2.c0)))OR(v0.c0)) END);
SELECT ALL COUNT(*) FROM t2, v0 WHERE ((+ (CAST(t2.c0 AS REAL)))) ORDER BY ((((NULLIF(v0.c0, t2.c0))OR(((v0.c0)&(t2.c0)))))AND(CAST('%' AS NUMERIC))), ((((((t2.c0) NOT BETWEEN (t2.c0) AND (v0.c0)))AND(((v0.c0)IS NOT(v0.c0)))))AND((v0.c0 IN ())))  NULLS FIRST, ((((t2.c0) NOT NULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT (((+ (CAST(t2.c0 AS REAL)))) IS TRUE)  as count FROM t2, v0 ORDER BY ((((NULLIF(v0.c0, t2.c0))OR(((v0.c0)&(t2.c0)))))AND(CAST('%' AS NUMERIC))), ((((((t2.c0) NOT BETWEEN (t2.c0) AND (v0.c0)))AND(((v0.c0)IS NOT(v0.c0)))))AND((v0.c0 IN ())))  NULLS FIRST, ((((t2.c0) NOT NULL)) NOT NULL));
SELECT ALL COUNT(*) FROM t2, v0 WHERE ((+ (CAST(t2.c0 AS REAL)))) ORDER BY ((((NULLIF(v0.c0, t2.c0))OR(((v0.c0)&(t2.c0)))))AND(CAST('%' AS NUMERIC))), ((((((t2.c0) NOT BETWEEN (t2.c0) AND (v0.c0)))AND(((v0.c0)IS NOT(v0.c0)))))AND((v0.c0 IN ())))  NULLS FIRST, ((((t2.c0) NOT NULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT (((+ (CAST(t2.c0 AS REAL)))) IS TRUE)  as count FROM t2, v0 ORDER BY ((((NULLIF(v0.c0, t2.c0))OR(((v0.c0)&(t2.c0)))))AND(CAST('%' AS NUMERIC))), ((((((t2.c0) NOT BETWEEN (t2.c0) AND (v0.c0)))AND(((v0.c0)IS NOT(v0.c0)))))AND((v0.c0 IN ())))  NULLS FIRST, ((((t2.c0) NOT NULL)) NOT NULL));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT NULL) AS BLOB)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT NULL) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT NULL) AS BLOB)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT NULL) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT NULL) AS BLOB)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((('', (((NULL))>=((t0.c0))), ''))==((((t0.c0)>(t0.c2)), t0.c2, 0.937936761548464))) WHERE (((((((t0.c2)OR(t0.c2)))AND(t0.c2))) NOT NULL)) ORDER BY CASE WHEN (- (vt0.c0)) THEN (- (t0.c0)) WHEN CASE WHEN vt0.c0 THEN t0.c1 END THEN ((t0.c1) NOT NULL) WHEN ((NULL)&(t0.c0)) THEN x'' ELSE ((t0.c0) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)OR(t0.c2)))AND(t0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((('', (((NULL))>=((t0.c0))), ''))==((((t0.c0)>(t0.c2)), t0.c2, 0.937936761548464))) ORDER BY CASE WHEN (- (vt0.c0)) THEN (- (t0.c0)) WHEN CASE WHEN vt0.c0 THEN t0.c1 END THEN ((t0.c1) NOT NULL) WHEN ((NULL)&(t0.c0)) THEN x'' ELSE ((t0.c0) NOT NULL) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((('', (((NULL))>=((t0.c0))), ''))==((((t0.c0)>(t0.c2)), t0.c2, 0.937936761548464))) WHERE (((((((t0.c2)OR(t0.c2)))AND(t0.c2))) NOT NULL)) ORDER BY CASE WHEN (- (vt0.c0)) THEN (- (t0.c0)) WHEN CASE WHEN vt0.c0 THEN t0.c1 END THEN ((t0.c1) NOT NULL) WHEN ((NULL)&(t0.c0)) THEN x'' ELSE ((t0.c0) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)OR(t0.c2)))AND(t0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((('', (((NULL))>=((t0.c0))), ''))==((((t0.c0)>(t0.c2)), t0.c2, 0.937936761548464))) ORDER BY CASE WHEN (- (vt0.c0)) THEN (- (t0.c0)) WHEN CASE WHEN vt0.c0 THEN t0.c1 END THEN ((t0.c1) NOT NULL) WHEN ((NULL)&(t0.c0)) THEN x'' ELSE ((t0.c0) NOT NULL) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((('', (((NULL))>=((t0.c0))), ''))==((((t0.c0)>(t0.c2)), t0.c2, 0.937936761548464))) WHERE (((((((t0.c2)OR(t0.c2)))AND(t0.c2))) NOT NULL)) ORDER BY CASE WHEN (- (vt0.c0)) THEN (- (t0.c0)) WHEN CASE WHEN vt0.c0 THEN t0.c1 END THEN ((t0.c1) NOT NULL) WHEN ((NULL)&(t0.c0)) THEN x'' ELSE ((t0.c0) NOT NULL) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, v0 WHERE ((((((t0.c1) IS FALSE)))>((((((t0.c0)OR(v0.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1) IS FALSE)))>((((((t0.c0)OR(v0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((((t0.c1) IS FALSE)))>((((((t0.c0)OR(v0.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1) IS FALSE)))>((((((t0.c0)OR(v0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((((t0.c1) IS FALSE)))>((((((t0.c0)OR(v0.c0)))AND(t0.c0))))));
SELECT COUNT(*) FROM v0 WHERE ((TYPEOF(v0.c0) IN (v0.c0))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TYPEOF(v0.c0) IN (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((TYPEOF(v0.c0) IN (v0.c0))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TYPEOF(v0.c0) IN (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((TYPEOF(v0.c0) IN (v0.c0))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY  NULLS LAST;
SELECT * FROM t0 WHERE ((((((t0.c2)OR(t0.c1)))AND('-1684761241')) IN (((t0.c0) IS TRUE), ((0.8410826841821498) NOT BETWEEN (t0.c1) AND (t0.c0))))) ORDER BY ((((t0.c0)=(t0.c2))) BETWEEN (t0.c1 COLLATE RTRIM) AND (((NULL) ISNULL))) ASC, ((UPPER(DISTINCT t0.c0))>((t0.c0 IN (t0.c1, t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)OR(t0.c1)))AND('-1684761241')) IN (((t0.c0) IS TRUE), ((0.8410826841821498) NOT BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)==(t0.c2))) BETWEEN (t0.c1 COLLATE RTRIM) AND (((NULL) ISNULL))) ASC, ((UPPER(DISTINCT t0.c0))>((t0.c0 IN (t0.c1, t0.c0)))) ASC);
SELECT * FROM t0 WHERE ((((((t0.c2)OR(t0.c1)))AND('-1684761241')) IN (((t0.c0) IS TRUE), ((0.8410826841821498) NOT BETWEEN (t0.c1) AND (t0.c0))))) ORDER BY ((((t0.c0)=(t0.c2))) BETWEEN (t0.c1 COLLATE RTRIM) AND (((NULL) ISNULL))) ASC, ((UPPER(DISTINCT t0.c0))>((t0.c0 IN (t0.c1, t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)OR(t0.c1)))AND('-1684761241')) IN (((t0.c0) IS TRUE), ((0.8410826841821498) NOT BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)==(t0.c2))) BETWEEN (t0.c1 COLLATE RTRIM) AND (((NULL) ISNULL))) ASC, ((UPPER(DISTINCT t0.c0))>((t0.c0 IN (t0.c1, t0.c0)))) ASC);
SELECT * FROM t0 WHERE ((((((t0.c2)OR(t0.c1)))AND('-1684761241')) IN (((t0.c0) IS TRUE), ((0.8410826841821498) NOT BETWEEN (t0.c1) AND (t0.c0))))) ORDER BY ((((t0.c0)=(t0.c2))) BETWEEN (t0.c1 COLLATE RTRIM) AND (((NULL) ISNULL))) ASC, ((UPPER(DISTINCT t0.c0))>((t0.c0 IN (t0.c1, t0.c0)))) ASC;
SELECT COUNT(*) FROM t2, vt0, t0, v0 WHERE (CAST(t0.c2 AS INTEGER) COLLATE RTRIM) ORDER BY -964645697;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t2, vt0, t0, v0 ORDER BY -964645697);
SELECT COUNT(*) FROM t2, vt0, t0, v0 WHERE (CAST(t0.c2 AS INTEGER) COLLATE RTRIM) ORDER BY -964645697;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t2, vt0, t0, v0 ORDER BY -964645697);
SELECT ALL COUNT(*) FROM t2 RIGHT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN '' THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((t2.c0)||(vt0.c0)) THEN ((t0.c0)+(t2.c0)) WHEN ((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN SQLITE_SOURCE_ID() END RIGHT OUTER JOIN vt0 ON ((((t2.c0)<(t0.c0))) NOTNULL) LEFT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) WHERE (0Xffffffffe0111d05) ORDER BY CASE WHEN ((t0.c2)GLOB(vt0.c0)) THEN ((t0.c2) IS FALSE) ELSE ((vt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffe0111d05) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN '' THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((t2.c0)||(vt0.c0)) THEN ((t0.c0)+(t2.c0)) WHEN ((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN SQLITE_SOURCE_ID() END RIGHT OUTER JOIN vt0 ON ((((t2.c0)<(t0.c0))) NOTNULL) LEFT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) ORDER BY CASE WHEN ((t0.c2)GLOB(vt0.c0)) THEN ((t0.c2) IS FALSE) ELSE ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM t2 RIGHT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN '' THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((t2.c0)||(vt0.c0)) THEN ((t0.c0)+(t2.c0)) WHEN ((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN SQLITE_SOURCE_ID() END RIGHT OUTER JOIN vt0 ON ((((t2.c0)<(t0.c0))) NOTNULL) LEFT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) WHERE (0Xffffffffe0111d05) ORDER BY CASE WHEN ((t0.c2)GLOB(vt0.c0)) THEN ((t0.c2) IS FALSE) ELSE ((vt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffe0111d05) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN '' THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((t2.c0)||(vt0.c0)) THEN ((t0.c0)+(t2.c0)) WHEN ((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN SQLITE_SOURCE_ID() END RIGHT OUTER JOIN vt0 ON ((((t2.c0)<(t0.c0))) NOTNULL) LEFT OUTER JOIN t0 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) ORDER BY CASE WHEN ((t0.c2)GLOB(vt0.c0)) THEN ((t0.c2) IS FALSE) ELSE ((vt0.c0) NOT NULL) END);
SELECT * FROM vt0, v0 INNER JOIN t2 ON ((((t0.c1)OR(t0.c1)))<>(CASE WHEN t2.c0 THEN t0.c1 WHEN vt0.c0 THEN t2.c0 WHEN vt0.c0 THEN v0.c0 ELSE '#,S#&M' END)) CROSS JOIN t0 ON CAST(t0.c0 AS TEXT) COLLATE BINARY WHERE ('0.3371463361768432') ORDER BY ((CASE NULL  WHEN t2.c0 THEN vt0.c0 END)<=(((((((((((((t2.c0)AND('-2020090745')))OR(t0.c2)))OR(v0.c0)))AND(t2.c0)))OR(vt0.c0)))OR(-1.343349528E9)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.3371463361768432') IS TRUE)  as count FROM vt0, v0 INNER JOIN t2 ON ((((t0.c1)OR(t0.c1)))!=(CASE WHEN t2.c0 THEN t0.c1 WHEN vt0.c0 THEN t2.c0 WHEN vt0.c0 THEN v0.c0 ELSE '#,S#&M' END)) CROSS JOIN t0 ON CAST(t0.c0 AS TEXT) COLLATE BINARY ORDER BY ((CASE NULL  WHEN t2.c0 THEN vt0.c0 END)<=(((((((((((((t2.c0)AND('-2020090745')))OR(t0.c2)))OR(v0.c0)))AND(t2.c0)))OR(vt0.c0)))OR(-1.343349528E9)))) ASC  NULLS LAST);
SELECT * FROM vt0, v0 INNER JOIN t2 ON ((((t0.c1)OR(t0.c1)))<>(CASE WHEN t2.c0 THEN t0.c1 WHEN vt0.c0 THEN t2.c0 WHEN vt0.c0 THEN v0.c0 ELSE '#,S#&M' END)) CROSS JOIN t0 ON CAST(t0.c0 AS TEXT) COLLATE BINARY WHERE ('0.3371463361768432') ORDER BY ((CASE NULL  WHEN t2.c0 THEN vt0.c0 END)<=(((((((((((((t2.c0)AND('-2020090745')))OR(t0.c2)))OR(v0.c0)))AND(t2.c0)))OR(vt0.c0)))OR(-1.343349528E9)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.3371463361768432') IS TRUE)  as count FROM vt0, v0 INNER JOIN t2 ON ((((t0.c1)OR(t0.c1)))!=(CASE WHEN t2.c0 THEN t0.c1 WHEN vt0.c0 THEN t2.c0 WHEN vt0.c0 THEN v0.c0 ELSE '#,S#&M' END)) CROSS JOIN t0 ON CAST(t0.c0 AS TEXT) COLLATE BINARY ORDER BY ((CASE NULL  WHEN t2.c0 THEN vt0.c0 END)<=(((((((((((((t2.c0)AND('-2020090745')))OR(t0.c2)))OR(v0.c0)))AND(t2.c0)))OR(vt0.c0)))OR(-1.343349528E9)))) ASC  NULLS LAST);
SELECT * FROM vt0, v0 INNER JOIN t2 ON ((((t0.c1)OR(t0.c1)))<>(CASE WHEN t2.c0 THEN t0.c1 WHEN vt0.c0 THEN t2.c0 WHEN vt0.c0 THEN v0.c0 ELSE '#,S#&M' END)) CROSS JOIN t0 ON CAST(t0.c0 AS TEXT) COLLATE BINARY WHERE ('0.3371463361768432') ORDER BY ((CASE NULL  WHEN t2.c0 THEN vt0.c0 END)<=(((((((((((((t2.c0)AND('-2020090745')))OR(t0.c2)))OR(v0.c0)))AND(t2.c0)))OR(vt0.c0)))OR(-1.343349528E9)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN (CASE WHEN v0.c0 THEN '.4' ELSE v0.c0 END) AND (((v0.c0)*('m	jasxOMU'))))) ORDER BY 0X1cbd1863  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN (CASE WHEN v0.c0 THEN '.4' ELSE v0.c0 END) AND (((v0.c0)*('m	jasxOMU'))))) IS TRUE)  as count FROM v0 ORDER BY 0X1cbd1863  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN (CASE WHEN v0.c0 THEN '.4' ELSE v0.c0 END) AND (((v0.c0)*('m	jasxOMU'))))) ORDER BY 0X1cbd1863  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN (CASE WHEN v0.c0 THEN '.4' ELSE v0.c0 END) AND (((v0.c0)*('m	jasxOMU'))))) IS TRUE)  as count FROM v0 ORDER BY 0X1cbd1863  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)GLOB(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY)GLOB(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)GLOB(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY)GLOB(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)GLOB(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END)));
SELECT * FROM v0 WHERE ((((((((((NOT (v0.c0)))AND(v0.c0)))OR(CAST(v0.c0 AS NUMERIC))))OR(CAST(v0.c0 AS NUMERIC))))OR((v0.c0 IN ())))) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (v0.c0)))AND(v0.c0)))OR(CAST(v0.c0 AS NUMERIC))))OR(CAST(v0.c0 AS NUMERIC))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((((((NOT (v0.c0)))AND(v0.c0)))OR(CAST(v0.c0 AS NUMERIC))))OR(CAST(v0.c0 AS NUMERIC))))OR((v0.c0 IN ())))) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (v0.c0)))AND(v0.c0)))OR(CAST(v0.c0 AS NUMERIC))))OR(CAST(v0.c0 AS NUMERIC))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((((((NOT (v0.c0)))AND(v0.c0)))OR(CAST(v0.c0 AS NUMERIC))))OR(CAST(v0.c0 AS NUMERIC))))OR((v0.c0 IN ())))) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN v0 ON DATE(0.47368666069658694, CASE t0.c2  WHEN v0.c0 THEN t0.c0 WHEN '0.0' THEN t0.c1 WHEN t0.c1 THEN t0.c2 END, (((t0.c0))=((t0.c0)))) WHERE (((((((('齃ᒓ랧'))>=((v0.c0))))OR(((v0.c0) NOTNULL))))OR(((0.051051304151401244) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((('齃ᒓ랧'))>=((v0.c0))))OR(((v0.c0) NOTNULL))))OR(((0.051051304151401244) ISNULL)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON DATE(0.47368666069658694, CASE t0.c2  WHEN v0.c0 THEN t0.c0 WHEN '0.0' THEN t0.c1 WHEN t0.c1 THEN t0.c2 END, (((t0.c0))=((t0.c0)))));
SELECT ALL * FROM t0 CROSS JOIN v0 ON DATE(0.47368666069658694, CASE t0.c2  WHEN v0.c0 THEN t0.c0 WHEN '0.0' THEN t0.c1 WHEN t0.c1 THEN t0.c2 END, (((t0.c0))=((t0.c0)))) WHERE (((((((('齃ᒓ랧'))>=((v0.c0))))OR(((v0.c0) NOTNULL))))OR(((0.051051304151401244) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((('齃ᒓ랧'))>=((v0.c0))))OR(((v0.c0) NOTNULL))))OR(((0.051051304151401244) ISNULL)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON DATE(0.47368666069658694, CASE t0.c2  WHEN v0.c0 THEN t0.c0 WHEN '0.0' THEN t0.c1 WHEN t0.c1 THEN t0.c2 END, (((t0.c0))=((t0.c0)))));
SELECT ALL * FROM t0 CROSS JOIN v0 ON DATE(0.47368666069658694, CASE t0.c2  WHEN v0.c0 THEN t0.c0 WHEN '0.0' THEN t0.c1 WHEN t0.c1 THEN t0.c2 END, (((t0.c0))=((t0.c0)))) WHERE (((((((('齃ᒓ랧'))>=((v0.c0))))OR(((v0.c0) NOTNULL))))OR(((0.051051304151401244) ISNULL))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY ((load_extension(v0.c0))||(CAST(v0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((load_extension(v0.c0))||(CAST(v0.c0 AS BLOB))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY ((load_extension(v0.c0))||(CAST(v0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((load_extension(v0.c0))||(CAST(v0.c0 AS BLOB))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM) ORDER BY ((load_extension(v0.c0))||(CAST(v0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((- (0.26923979800154274)));
SELECT SUM(count) FROM (SELECT ALL (((- (0.26923979800154274))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((- (0.26923979800154274)));
SELECT SUM(count) FROM (SELECT ALL (((- (0.26923979800154274))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((- (0.26923979800154274)));
SELECT ALL * FROM v0 WHERE (LIKELIHOOD((0X6fc7c57a IN (v0.c0, v0.c0)), 0.9161361579812485));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((0x6fc7c57a IN (v0.c0, v0.c0)), 0.9161361579812485)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELIHOOD((0X6fc7c57a IN (v0.c0, v0.c0)), 0.9161361579812485));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((0x6fc7c57a IN (v0.c0, v0.c0)), 0.9161361579812485)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELIHOOD((0X6fc7c57a IN (v0.c0, v0.c0)), 0.9161361579812485));
SELECT ALL * FROM vt0, t0, t2 FULL OUTER JOIN v0 ON ((((x''))=((t0.c1))) IN (NULL)) WHERE (load_extension(((((t0.c1)AND(t0.c1)))AND(t0.c0)), TRIM(vt0.c0, vt0.c0))) ORDER BY ((((t2.c0)||(NULL)))+(((t0.c2) NOT BETWEEN (vt0.c0) AND (NULL)))) ASC, CAST((~ (t0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((((t0.c1)AND(t0.c1)))AND(t0.c0)), TRIM(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0, t0, t2 FULL OUTER JOIN v0 ON ((((x''))==((t0.c1))) IN (NULL)) ORDER BY ((((t2.c0)||(NULL)))+(((t0.c2) NOT BETWEEN (vt0.c0) AND (NULL)))) ASC, CAST((~ (t0.c0)) AS INTEGER) ASC);
SELECT ALL * FROM vt0, t0, t2 FULL OUTER JOIN v0 ON ((((x''))=((t0.c1))) IN (NULL)) WHERE (load_extension(((((t0.c1)AND(t0.c1)))AND(t0.c0)), TRIM(vt0.c0, vt0.c0))) ORDER BY ((((t2.c0)||(NULL)))+(((t0.c2) NOT BETWEEN (vt0.c0) AND (NULL)))) ASC, CAST((~ (t0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((((t0.c1)AND(t0.c1)))AND(t0.c0)), TRIM(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0, t0, t2 FULL OUTER JOIN v0 ON ((((x''))==((t0.c1))) IN (NULL)) ORDER BY ((((t2.c0)||(NULL)))+(((t0.c2) NOT BETWEEN (vt0.c0) AND (NULL)))) ASC, CAST((~ (t0.c0)) AS INTEGER) ASC);
SELECT ALL * FROM vt0, t0, t2 FULL OUTER JOIN v0 ON ((((x''))=((t0.c1))) IN (NULL)) WHERE (load_extension(((((t0.c1)AND(t0.c1)))AND(t0.c0)), TRIM(vt0.c0, vt0.c0))) ORDER BY ((((t2.c0)||(NULL)))+(((t0.c2) NOT BETWEEN (vt0.c0) AND (NULL)))) ASC, CAST((~ (t0.c0)) AS INTEGER) ASC;
SELECT COUNT(*) FROM t2, t0, v0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN v0.c0 THEN t0.c2 WHEN t2.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE 865222117 END)) AND ((((t0.c0)*(v0.c0)))))) ORDER BY ((((NULL)IS(t0.c1)))|((((t0.c2))>=((v0.c0)))))  NULLS FIRST, ((((t2.c0)AND(t2.c0))) BETWEEN (((t2.c0)<>(t0.c2))) AND (LTRIM(t0.c2))), (((+ (NULL)))|(((((t0.c0)OR(t0.c1)))OR(t0.c1)))) DESC, CASE WHEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((-2116761602)GLOB(t0.c0)) WHEN (- (t0.c2)) THEN ((t0.c2)<(t2.c0)) WHEN CASE t0.c1  WHEN '' THEN t0.c0 END THEN ((('ᄼ훋m	O', t0.c0, t0.c2)) NOT BETWEEN ((v0.c0, t0.c2, t0.c1)) AND ((t2.c0, v0.c0, t0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN v0.c0 THEN t0.c2 WHEN t2.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE 865222117 END)) AND ((((t0.c0)*(v0.c0)))))) IS TRUE)  as count FROM t2, t0, v0 ORDER BY ((((NULL)IS(t0.c1)))|((((t0.c2))>=((v0.c0)))))  NULLS FIRST, ((((t2.c0)AND(t2.c0))) BETWEEN (((t2.c0)!=(t0.c2))) AND (LTRIM(t0.c2))), (((+ (NULL)))|(((((t0.c0)OR(t0.c1)))OR(t0.c1)))) DESC, CASE WHEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((-2116761602)GLOB(t0.c0)) WHEN (- (t0.c2)) THEN ((t0.c2)<(t2.c0)) WHEN CASE t0.c1  WHEN '' THEN t0.c0 END THEN ((('ᄼ훋m	O', t0.c0, t0.c2)) NOT BETWEEN ((v0.c0, t0.c2, t0.c1)) AND ((t2.c0, v0.c0, t0.c0))) END ASC);
SELECT COUNT(*) FROM t2, t0, v0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN v0.c0 THEN t0.c2 WHEN t2.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE 865222117 END)) AND ((((t0.c0)*(v0.c0)))))) ORDER BY ((((NULL)IS(t0.c1)))|((((t0.c2))>=((v0.c0)))))  NULLS FIRST, ((((t2.c0)AND(t2.c0))) BETWEEN (((t2.c0)<>(t0.c2))) AND (LTRIM(t0.c2))), (((+ (NULL)))|(((((t0.c0)OR(t0.c1)))OR(t0.c1)))) DESC, CASE WHEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((-2116761602)GLOB(t0.c0)) WHEN (- (t0.c2)) THEN ((t0.c2)<(t2.c0)) WHEN CASE t0.c1  WHEN '' THEN t0.c0 END THEN ((('ᄼ훋m	O', t0.c0, t0.c2)) NOT BETWEEN ((v0.c0, t0.c2, t0.c1)) AND ((t2.c0, v0.c0, t0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN v0.c0 THEN t0.c2 WHEN t2.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE 865222117 END)) AND ((((t0.c0)*(v0.c0)))))) IS TRUE)  as count FROM t2, t0, v0 ORDER BY ((((NULL)IS(t0.c1)))|((((t0.c2))>=((v0.c0)))))  NULLS FIRST, ((((t2.c0)AND(t2.c0))) BETWEEN (((t2.c0)!=(t0.c2))) AND (LTRIM(t0.c2))), (((+ (NULL)))|(((((t0.c0)OR(t0.c1)))OR(t0.c1)))) DESC, CASE WHEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((-2116761602)GLOB(t0.c0)) WHEN (- (t0.c2)) THEN ((t0.c2)<(t2.c0)) WHEN CASE t0.c1  WHEN '' THEN t0.c0 END THEN ((('ᄼ훋m	O', t0.c0, t0.c2)) NOT BETWEEN ((v0.c0, t0.c2, t0.c1)) AND ((t2.c0, v0.c0, t0.c0))) END ASC);
SELECT COUNT(*) FROM t2, t0, v0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN v0.c0 THEN t0.c2 WHEN t2.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE 865222117 END)) AND ((((t0.c0)*(v0.c0)))))) ORDER BY ((((NULL)IS(t0.c1)))|((((t0.c2))>=((v0.c0)))))  NULLS FIRST, ((((t2.c0)AND(t2.c0))) BETWEEN (((t2.c0)<>(t0.c2))) AND (LTRIM(t0.c2))), (((+ (NULL)))|(((((t0.c0)OR(t0.c1)))OR(t0.c1)))) DESC, CASE WHEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((-2116761602)GLOB(t0.c0)) WHEN (- (t0.c2)) THEN ((t0.c2)<(t2.c0)) WHEN CASE t0.c1  WHEN '' THEN t0.c0 END THEN ((('ᄼ훋m	O', t0.c0, t0.c2)) NOT BETWEEN ((v0.c0, t0.c2, t0.c1)) AND ((t2.c0, v0.c0, t0.c0))) END ASC;
SELECT COUNT(*) FROM vt0, t2, t0 WHERE ((((CAST(t0.c0 AS INTEGER)))!=((((t2.c0)+(t0.c0)))))) ORDER BY (((((t0.c1 IN ()))OR(ABS(DISTINCT t0.c2))))OR(t0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS INTEGER)))<>((((t2.c0)+(t0.c0)))))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY (((((t0.c1 IN ()))OR(ABS(DISTINCT t0.c2))))OR(t0.c2)) DESC);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE ((((CAST(t0.c0 AS INTEGER)))!=((((t2.c0)+(t0.c0)))))) ORDER BY (((((t0.c1 IN ()))OR(ABS(DISTINCT t0.c2))))OR(t0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS INTEGER)))<>((((t2.c0)+(t0.c0)))))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY (((((t0.c1 IN ()))OR(ABS(DISTINCT t0.c2))))OR(t0.c2)) DESC);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE ((((CAST(t0.c0 AS INTEGER)))!=((((t2.c0)+(t0.c0)))))) ORDER BY (((((t0.c1 IN ()))OR(ABS(DISTINCT t0.c2))))OR(t0.c2)) DESC;
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (((((vt0.c0)/(t2.c0)))+((- (t2.c0))))) ORDER BY ((t0.c1) NOT BETWEEN (RTRIM(t2.c0)) AND (((((vt0.c0)OR(NULL)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(t2.c0)))+((- (t2.c0))))) IS TRUE)  as count FROM vt0, t2, t0 NOT INDEXED ORDER BY ((t0.c1) NOT BETWEEN (RTRIM(t2.c0)) AND (((((vt0.c0)OR(NULL)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (((((vt0.c0)/(t2.c0)))+((- (t2.c0))))) ORDER BY ((t0.c1) NOT BETWEEN (RTRIM(t2.c0)) AND (((((vt0.c0)OR(NULL)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(t2.c0)))+((- (t2.c0))))) IS TRUE)  as count FROM vt0, t2, t0 NOT INDEXED ORDER BY ((t0.c1) NOT BETWEEN (RTRIM(t2.c0)) AND (((((vt0.c0)OR(NULL)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (((((vt0.c0)/(t2.c0)))+((- (t2.c0))))) ORDER BY ((t0.c1) NOT BETWEEN (RTRIM(t2.c0)) AND (((((vt0.c0)OR(NULL)))AND(vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0, t2 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0, t2);
SELECT COUNT(*) FROM vt0, t2 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0, t2);
SELECT COUNT(*) FROM vt0, t2 WHERE (CAST(NULL AS TEXT));
SELECT ALL * FROM vt0, t0, v0 WHERE ((~ ((NOT (t0.c0))))) ORDER BY ((((t0.c2)AND(t0.c2))) BETWEEN (((NULL) IS FALSE)) AND ((NOT (t0.c0))))  NULLS FIRST, t0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (t0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c2)AND(t0.c2))) BETWEEN (((NULL) IS FALSE)) AND ((NOT (t0.c0))))  NULLS FIRST, t0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((~ ((NOT (t0.c0))))) ORDER BY ((((t0.c2)AND(t0.c2))) BETWEEN (((NULL) IS FALSE)) AND ((NOT (t0.c0))))  NULLS FIRST, t0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (t0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c2)AND(t0.c2))) BETWEEN (((NULL) IS FALSE)) AND ((NOT (t0.c0))))  NULLS FIRST, t0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((~ ((NOT (t0.c0))))) ORDER BY ((((t0.c2)AND(t0.c2))) BETWEEN (((NULL) IS FALSE)) AND ((NOT (t0.c0))))  NULLS FIRST, t0.c0 ASC  NULLS FIRST;
SELECT * FROM v0, t0, vt0, t2 WHERE (((TYPEOF(DISTINCT '')) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT '')) IS TRUE)) IS TRUE)  as count FROM v0, t0, vt0, t2);
SELECT * FROM v0, t0, vt0, t2 WHERE (((TYPEOF(DISTINCT '')) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT '')) IS TRUE)) IS TRUE)  as count FROM v0, t0, vt0, t2);
SELECT * FROM v0, t0, vt0, t2 WHERE (((TYPEOF(DISTINCT '')) IS TRUE));
SELECT * FROM v0, vt0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN '-1029935201' ELSE v0.c0 END THEN CAST(vt0.c0 AS INTEGER) WHEN COALESCE(v0.c0, v0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE vt0.c0 COLLATE NOCASE END) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOT NULL)  NULLS LAST, (+ (vt0.c0)) ASC  NULLS LAST, '-401857280' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN '-1029935201' ELSE v0.c0 END THEN CAST(vt0.c0 AS INTEGER) WHEN COALESCE(v0.c0, v0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOT NULL)  NULLS LAST, (+ (vt0.c0)) ASC  NULLS LAST, '-401857280' ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN '-1029935201' ELSE v0.c0 END THEN CAST(vt0.c0 AS INTEGER) WHEN COALESCE(v0.c0, v0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE vt0.c0 COLLATE NOCASE END) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOT NULL)  NULLS LAST, (+ (vt0.c0)) ASC  NULLS LAST, '-401857280' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN '-1029935201' ELSE v0.c0 END THEN CAST(vt0.c0 AS INTEGER) WHEN COALESCE(v0.c0, v0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOT NULL)  NULLS LAST, (+ (vt0.c0)) ASC  NULLS LAST, '-401857280' ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN '-1029935201' ELSE v0.c0 END THEN CAST(vt0.c0 AS INTEGER) WHEN COALESCE(v0.c0, v0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE vt0.c0 COLLATE NOCASE END) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOT NULL)  NULLS LAST, (+ (vt0.c0)) ASC  NULLS LAST, '-401857280' ASC  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, t2, v0 CROSS JOIN t0 ON ((t0.c0) ISNULL) WHERE (IFNULL(0.7237568180238728, (t0.c1 IN ()))) ORDER BY ((((0.15378364679932) NOT BETWEEN (t0.c0) AND (t0.c2)))LIKE(((((((((t0.c0)OR(0xffffffffe9f60cf2)))OR(t2.c0)))AND(t0.c0)))AND(t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(0.7237568180238728, (t0.c1 IN ()))) IS TRUE)  as count FROM vt0, t2, v0 CROSS JOIN t0 ON ((t0.c0) ISNULL) ORDER BY ((((0.15378364679932) NOT BETWEEN (t0.c0) AND (t0.c2)))LIKE(((((((((t0.c0)OR(0Xffffffffe9f60cf2)))OR(t2.c0)))AND(t0.c0)))AND(t0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t2, v0 CROSS JOIN t0 ON ((t0.c0) ISNULL) WHERE (IFNULL(0.7237568180238728, (t0.c1 IN ()))) ORDER BY ((((0.15378364679932) NOT BETWEEN (t0.c0) AND (t0.c2)))LIKE(((((((((t0.c0)OR(0xffffffffe9f60cf2)))OR(t2.c0)))AND(t0.c0)))AND(t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(0.7237568180238728, (t0.c1 IN ()))) IS TRUE)  as count FROM vt0, t2, v0 CROSS JOIN t0 ON ((t0.c0) ISNULL) ORDER BY ((((0.15378364679932) NOT BETWEEN (t0.c0) AND (t0.c2)))LIKE(((((((((t0.c0)OR(0Xffffffffe9f60cf2)))OR(t2.c0)))AND(t0.c0)))AND(t0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t2, v0 CROSS JOIN t0 ON ((t0.c0) ISNULL) WHERE (IFNULL(0.7237568180238728, (t0.c1 IN ()))) ORDER BY ((((0.15378364679932) NOT BETWEEN (t0.c0) AND (t0.c2)))LIKE(((((((((t0.c0)OR(0xffffffffe9f60cf2)))OR(t2.c0)))AND(t0.c0)))AND(t0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM t2, v0 WHERE ((((t2.c0, t2.c0, v0.c0, t2.c0, t2.c0)) BETWEEN ((CAST(t2.c0 AS INTEGER), ((((v0.c0)OR(t2.c0)))OR(v0.c0)), (((v0.c0, t2.c0, 0.6812579158038369))==((t2.c0, v0.c0, t2.c0))), ((v0.c0)IS NOT(v0.c0)), ((((t2.c0)OR(t2.c0)))AND(v0.c0)))) AND (((+ (v0.c0)), ((t2.c0)+(t2.c0)), x'', CASE WHEN '' THEN v0.c0 WHEN 0xffffffffb5f5a3cc THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END, v0.c0 COLLATE BINARY)))) ORDER BY CAST((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))) AS BLOB), ((((v0.c0)&(v0.c0)))&(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0, t2.c0, v0.c0, t2.c0, t2.c0)) BETWEEN ((CAST(t2.c0 AS INTEGER), ((((v0.c0)OR(t2.c0)))OR(v0.c0)), (((v0.c0, t2.c0, 0.6812579158038369))==((t2.c0, v0.c0, t2.c0))), ((v0.c0)IS NOT(v0.c0)), ((((t2.c0)OR(t2.c0)))AND(v0.c0)))) AND (((+ (v0.c0)), ((t2.c0)+(t2.c0)), x'', CASE WHEN '' THEN v0.c0 WHEN 0Xffffffffb5f5a3cc THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END, v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t2, v0 ORDER BY CAST((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))) AS BLOB), ((((v0.c0)&(v0.c0)))&(v0.c0))  NULLS FIRST);
SELECT ALL * FROM t2, v0 WHERE ((((t2.c0, t2.c0, v0.c0, t2.c0, t2.c0)) BETWEEN ((CAST(t2.c0 AS INTEGER), ((((v0.c0)OR(t2.c0)))OR(v0.c0)), (((v0.c0, t2.c0, 0.6812579158038369))==((t2.c0, v0.c0, t2.c0))), ((v0.c0)IS NOT(v0.c0)), ((((t2.c0)OR(t2.c0)))AND(v0.c0)))) AND (((+ (v0.c0)), ((t2.c0)+(t2.c0)), x'', CASE WHEN '' THEN v0.c0 WHEN 0xffffffffb5f5a3cc THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END, v0.c0 COLLATE BINARY)))) ORDER BY CAST((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))) AS BLOB), ((((v0.c0)&(v0.c0)))&(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0, t2.c0, v0.c0, t2.c0, t2.c0)) BETWEEN ((CAST(t2.c0 AS INTEGER), ((((v0.c0)OR(t2.c0)))OR(v0.c0)), (((v0.c0, t2.c0, 0.6812579158038369))==((t2.c0, v0.c0, t2.c0))), ((v0.c0)IS NOT(v0.c0)), ((((t2.c0)OR(t2.c0)))AND(v0.c0)))) AND (((+ (v0.c0)), ((t2.c0)+(t2.c0)), x'', CASE WHEN '' THEN v0.c0 WHEN 0Xffffffffb5f5a3cc THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END, v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t2, v0 ORDER BY CAST((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))) AS BLOB), ((((v0.c0)&(v0.c0)))&(v0.c0))  NULLS FIRST);
SELECT ALL * FROM t2, v0 WHERE ((((t2.c0, t2.c0, v0.c0, t2.c0, t2.c0)) BETWEEN ((CAST(t2.c0 AS INTEGER), ((((v0.c0)OR(t2.c0)))OR(v0.c0)), (((v0.c0, t2.c0, 0.6812579158038369))==((t2.c0, v0.c0, t2.c0))), ((v0.c0)IS NOT(v0.c0)), ((((t2.c0)OR(t2.c0)))AND(v0.c0)))) AND (((+ (v0.c0)), ((t2.c0)+(t2.c0)), x'', CASE WHEN '' THEN v0.c0 WHEN 0xffffffffb5f5a3cc THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END, v0.c0 COLLATE BINARY)))) ORDER BY CAST((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))) AS BLOB), ((((v0.c0)&(v0.c0)))&(v0.c0))  NULLS FIRST;
SELECT * FROM v0, t2, t0, vt0 WHERE (CAST(t0.c1 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM v0, t2, t0, vt0);
SELECT * FROM v0, t2, t0, vt0 WHERE (CAST(t0.c1 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM v0, t2, t0, vt0);
SELECT * FROM v0, t2, t0, vt0 WHERE (CAST(t0.c1 COLLATE BINARY AS TEXT));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON 0.03436296353618706 WHERE (((('-369750798' IN ()))<(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((('-369750798' IN ()))<(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON 0.03436296353618706);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON 0.03436296353618706 WHERE (((('-369750798' IN ()))<(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((('-369750798' IN ()))<(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON 0.03436296353618706);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON 0.03436296353618706 WHERE (((('-369750798' IN ()))<(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (x'' COLLATE NOCASE) ORDER BY ((((v0.c0 IN ())))<>(((('0.370264654198603') NOT BETWEEN (t0.c1) AND (t0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0 IN ())))<>(((('0.370264654198603') NOT BETWEEN (t0.c1) AND (t0.c1))))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (x'' COLLATE NOCASE) ORDER BY ((((v0.c0 IN ())))<>(((('0.370264654198603') NOT BETWEEN (t0.c1) AND (t0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0 IN ())))<>(((('0.370264654198603') NOT BETWEEN (t0.c1) AND (t0.c1))))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (x'' COLLATE NOCASE) ORDER BY ((((v0.c0 IN ())))<>(((('0.370264654198603') NOT BETWEEN (t0.c1) AND (t0.c1))))) ASC;
SELECT ALL * FROM t0 CROSS JOIN t2 ON x'' WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 CROSS JOIN t2 ON x'');
SELECT ALL * FROM t0 CROSS JOIN t2 ON x'' WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 CROSS JOIN t2 ON x'');
SELECT ALL * FROM t0 CROSS JOIN t2 ON x'' WHERE (NULL);
SELECT COUNT(*) FROM t2 WHERE (CAST(CAST(t2.c0 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t2.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (CAST(CAST(t2.c0 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t2.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (CAST(CAST(t2.c0 AS INTEGER) AS TEXT));
SELECT * FROM t2, vt0, v0, t0 WHERE (((t2.c0) ISNULL) COLLATE RTRIM COLLATE NOCASE) ORDER BY ROUND(json_remove(t0.c1, NULL), (((v0.c0))>((t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t2.c0) ISNULL) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t2, vt0, v0, t0 ORDER BY ROUND(json_remove(t0.c1, NULL), (((v0.c0))>((t0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t2, vt0, v0, t0 WHERE (((t2.c0) ISNULL) COLLATE RTRIM COLLATE NOCASE) ORDER BY ROUND(json_remove(t0.c1, NULL), (((v0.c0))>((t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t2.c0) ISNULL) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t2, vt0, v0, t0 ORDER BY ROUND(json_remove(t0.c1, NULL), (((v0.c0))>((t0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t2, vt0, v0, t0 WHERE (((t2.c0) ISNULL) COLLATE RTRIM COLLATE NOCASE) ORDER BY ROUND(json_remove(t0.c1, NULL), (((v0.c0))>((t0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t0, vt0, t2 WHERE ((~ ((- (t0.c1))))) ORDER BY ((((vt0.c0)<>(t0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((~ ((- (t0.c1))))) IS TRUE)  as count FROM v0, t0, vt0, t2 ORDER BY ((((vt0.c0)!=(t0.c1))) NOT NULL));
SELECT ALL * FROM v0, t0, vt0, t2 WHERE ((~ ((- (t0.c1))))) ORDER BY ((((vt0.c0)<>(t0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((~ ((- (t0.c1))))) IS TRUE)  as count FROM v0, t0, vt0, t2 ORDER BY ((((vt0.c0)!=(t0.c1))) NOT NULL));
SELECT ALL * FROM v0, t0, vt0, t2 WHERE ((~ ((- (t0.c1))))) ORDER BY ((((vt0.c0)<>(t0.c1))) NOT NULL);
SELECT ALL * FROM t2, v0, t0 WHERE ((((t2.c0, t0.c1, t2.c0))=((v0.c0, t2.c0, t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t2.c0, t0.c1, t2.c0))==((v0.c0, t2.c0, t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t2, v0, t0);
SELECT ALL * FROM t2, v0, t0 WHERE ((((t2.c0, t0.c1, t2.c0))=((v0.c0, t2.c0, t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t2.c0, t0.c1, t2.c0))==((v0.c0, t2.c0, t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t2, v0, t0);
SELECT ALL * FROM t2, v0, t0 WHERE ((((t2.c0, t0.c1, t2.c0))=((v0.c0, t2.c0, t0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t2, vt0, v0 WHERE (((('1309163453') NOTNULL) IN ())) ORDER BY CAST((NOT (v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('1309163453') NOTNULL) IN ())) IS TRUE)  as count FROM t2, vt0, v0 ORDER BY CAST((NOT (v0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, vt0, v0 WHERE (((('1309163453') NOTNULL) IN ())) ORDER BY CAST((NOT (v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('1309163453') NOTNULL) IN ())) IS TRUE)  as count FROM t2, vt0, v0 ORDER BY CAST((NOT (v0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, vt0, v0 WHERE (((('1309163453') NOTNULL) IN ())) ORDER BY CAST((NOT (v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t2 WHERE (TRIM(DISTINCT COALESCE(t2.c0, '', t2.c0, t2.c0)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT COALESCE(t2.c0, '', t2.c0, t2.c0))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (TRIM(DISTINCT COALESCE(t2.c0, '', t2.c0, t2.c0)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT COALESCE(t2.c0, '', t2.c0, t2.c0))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (TRIM(DISTINCT COALESCE(t2.c0, '', t2.c0, t2.c0)));
SELECT * FROM vt0, t2, v0, t0 WHERE (((vt0.c0)=(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)==(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t2, v0, t0);
SELECT * FROM vt0, t2, v0, t0 WHERE (((vt0.c0)=(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)==(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t2, v0, t0);
SELECT * FROM vt0, t2, v0, t0 WHERE (((vt0.c0)=(t0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((NOT (CAST(t0.c2 AS TEXT)))) ORDER BY ((((t0.c0)*(t0.c0)))GLOB(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((t0.c0)*(t0.c0)))GLOB(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((NOT (CAST(t0.c2 AS TEXT)))) ORDER BY ((((t0.c0)*(t0.c0)))GLOB(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((t0.c0)*(t0.c0)))GLOB(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE ((NOT (CAST(t0.c2 AS TEXT)))) ORDER BY ((((t0.c0)*(t0.c0)))GLOB(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c1 END)) DESC;
SELECT * FROM vt0, t2, t0, v0 WHERE (((((v0.c0)*(t0.c1)))&(TRIM(DISTINCT t0.c2, '767486898'))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(t0.c1)))&(TRIM(DISTINCT t0.c2, '767486898')))) IS TRUE)  as count FROM vt0, t2, t0, v0);
SELECT * FROM vt0, t2, t0, v0 WHERE (((((v0.c0)*(t0.c1)))&(TRIM(DISTINCT t0.c2, '767486898'))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(t0.c1)))&(TRIM(DISTINCT t0.c2, '767486898')))) IS TRUE)  as count FROM vt0, t2, t0, v0);
SELECT * FROM vt0, t2, t0, v0 WHERE (((((v0.c0)*(t0.c1)))&(TRIM(DISTINCT t0.c2, '767486898'))));
SELECT ALL * FROM t0, v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0, v0 NOT INDEXED);
SELECT ALL * FROM t0, v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0, v0 NOT INDEXED);
SELECT ALL * FROM t0, v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))));
SELECT COUNT(*) FROM vt0, v0, t2, t0 WHERE (((('1969188750')) BETWEEN ((((0.33465670146637005)||(t2.c0)))) AND (((NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((('1969188750')) BETWEEN ((((0.33465670146637005)||(t2.c0)))) AND (((NOT (t0.c0)))))) IS TRUE)  as count FROM vt0, v0, t2, t0);
SELECT COUNT(*) FROM vt0, v0, t2, t0 WHERE (((('1969188750')) BETWEEN ((((0.33465670146637005)||(t2.c0)))) AND (((NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((('1969188750')) BETWEEN ((((0.33465670146637005)||(t2.c0)))) AND (((NOT (t0.c0)))))) IS TRUE)  as count FROM vt0, v0, t2, t0);
SELECT COUNT(*) FROM vt0, v0, t2, t0 WHERE (((('1969188750')) BETWEEN ((((0.33465670146637005)||(t2.c0)))) AND (((NOT (t0.c0))))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t2 ON ((((t0.c1) IS TRUE)) ISNULL) CROSS JOIN vt0 ON (- (((0.6812579158038369)!=(t0.c0)))) CROSS JOIN t0 ON ((((((t0.c0)AND(vt0.c0)))AND(t0.c2))) NOTNULL) WHERE (((((t0.c0)||(vt0.c0)))*(NULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)||(vt0.c0)))*(NULL))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t2 ON ((((t0.c1) IS TRUE)) ISNULL) CROSS JOIN vt0 ON (- (((0.6812579158038369)<>(t0.c0)))) CROSS JOIN t0 ON ((((((t0.c0)AND(vt0.c0)))AND(t0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t2 ON ((((t0.c1) IS TRUE)) ISNULL) CROSS JOIN vt0 ON (- (((0.6812579158038369)!=(t0.c0)))) CROSS JOIN t0 ON ((((((t0.c0)AND(vt0.c0)))AND(t0.c2))) NOTNULL) WHERE (((((t0.c0)||(vt0.c0)))*(NULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)||(vt0.c0)))*(NULL))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t2 ON ((((t0.c1) IS TRUE)) ISNULL) CROSS JOIN vt0 ON (- (((0.6812579158038369)<>(t0.c0)))) CROSS JOIN t0 ON ((((((t0.c0)AND(vt0.c0)))AND(t0.c2))) NOTNULL));
SELECT ALL * FROM vt0, t0 WHERE (CASE ((t0.c0) ISNULL)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN (t0.c2 IN ()) END) ORDER BY (((((+ (vt0.c0)))AND(IFNULL(DISTINCT t0.c2, vt0.c0))))OR(x'c131')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) ISNULL)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN (t0.c2 IN ()) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((+ (vt0.c0)))AND(IFNULL(DISTINCT t0.c2, vt0.c0))))OR(x'c131')) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((t0.c0) ISNULL)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN (t0.c2 IN ()) END) ORDER BY (((((+ (vt0.c0)))AND(IFNULL(DISTINCT t0.c2, vt0.c0))))OR(x'c131')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) ISNULL)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN (t0.c2 IN ()) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((+ (vt0.c0)))AND(IFNULL(DISTINCT t0.c2, vt0.c0))))OR(x'c131')) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((t0.c0) ISNULL)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN (t0.c2 IN ()) END) ORDER BY (((((+ (vt0.c0)))AND(IFNULL(DISTINCT t0.c2, vt0.c0))))OR(x'c131')) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((((0.5874187610698707) IS TRUE))>(((t0.c2)OR(t0.c2))))) ORDER BY (+ (json_patch(t0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.5874187610698707) IS TRUE))>(((t0.c2)OR(t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (json_patch(t0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((0.5874187610698707) IS TRUE))>(((t0.c2)OR(t0.c2))))) ORDER BY (+ (json_patch(t0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.5874187610698707) IS TRUE))>(((t0.c2)OR(t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (json_patch(t0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, t0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))GLOB(SUBSTR(t0.c2, vt0.c0))) WHERE (((((((t0.c1) NOTNULL))OR((~ (vt0.c0)))))OR(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1) NOTNULL))OR((~ (vt0.c0)))))OR(((t2.c0) BETWEEN (t2.c0) AND (t2.c0))))) IS TRUE)  as count FROM t2, t0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))GLOB(SUBSTR(t0.c2, vt0.c0))));
SELECT ALL COUNT(*) FROM t2, t0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))GLOB(SUBSTR(t0.c2, vt0.c0))) WHERE (((((((t0.c1) NOTNULL))OR((~ (vt0.c0)))))OR(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1) NOTNULL))OR((~ (vt0.c0)))))OR(((t2.c0) BETWEEN (t2.c0) AND (t2.c0))))) IS TRUE)  as count FROM t2, t0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))GLOB(SUBSTR(t0.c2, vt0.c0))));
SELECT ALL COUNT(*) FROM t2, t0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))GLOB(SUBSTR(t0.c2, vt0.c0))) WHERE (((((((t0.c1) NOTNULL))OR((~ (vt0.c0)))))OR(((t2.c0) BETWEEN (t2.c0) AND (t2.c0)))));
SELECT * FROM t2, vt0, t0 WHERE (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY 0.5059785830160125 ASC  NULLS LAST, CASE WHEN ((t2.c0) BETWEEN (t0.c1) AND (t0.c0)) THEN ((((t2.c0)AND(t0.c2)))AND(vt0.c0)) ELSE vt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY 0.5059785830160125 ASC  NULLS LAST, CASE WHEN ((t2.c0) BETWEEN (t0.c1) AND (t0.c0)) THEN ((((t2.c0)AND(t0.c2)))AND(vt0.c0)) ELSE vt0.c0 END ASC  NULLS FIRST);
SELECT * FROM t2, vt0, t0 WHERE (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY 0.5059785830160125 ASC  NULLS LAST, CASE WHEN ((t2.c0) BETWEEN (t0.c1) AND (t0.c0)) THEN ((((t2.c0)AND(t0.c2)))AND(vt0.c0)) ELSE vt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY 0.5059785830160125 ASC  NULLS LAST, CASE WHEN ((t2.c0) BETWEEN (t0.c1) AND (t0.c0)) THEN ((((t2.c0)AND(t0.c2)))AND(vt0.c0)) ELSE vt0.c0 END ASC  NULLS FIRST);
SELECT * FROM t2, vt0, t0 WHERE (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY 0.5059785830160125 ASC  NULLS LAST, CASE WHEN ((t2.c0) BETWEEN (t0.c1) AND (t0.c0)) THEN ((((t2.c0)AND(t0.c2)))AND(vt0.c0)) ELSE vt0.c0 END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c0)IS NOT(CAST(t0.c1 AS NUMERIC)))) ORDER BY CASE (- (t0.c1))  WHEN ((t0.c1)LIKE(t0.c1)) THEN COALESCE(t0.c1, t0.c1) END  NULLS LAST, (NOT (IFNULL(DISTINCT t0.c0, t0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT(CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY CASE (- (t0.c1))  WHEN ((t0.c1)LIKE(t0.c1)) THEN COALESCE(t0.c1, t0.c1) END  NULLS LAST, (NOT (IFNULL(DISTINCT t0.c0, t0.c1))) DESC);
SELECT ALL * FROM t0 WHERE (((t0.c0)IS NOT(CAST(t0.c1 AS NUMERIC)))) ORDER BY CASE (- (t0.c1))  WHEN ((t0.c1)LIKE(t0.c1)) THEN COALESCE(t0.c1, t0.c1) END  NULLS LAST, (NOT (IFNULL(DISTINCT t0.c0, t0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT(CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY CASE (- (t0.c1))  WHEN ((t0.c1)LIKE(t0.c1)) THEN COALESCE(t0.c1, t0.c1) END  NULLS LAST, (NOT (IFNULL(DISTINCT t0.c0, t0.c1))) DESC);
SELECT ALL * FROM t0 WHERE (((t0.c0)IS NOT(CAST(t0.c1 AS NUMERIC)))) ORDER BY CASE (- (t0.c1))  WHEN ((t0.c1)LIKE(t0.c1)) THEN COALESCE(t0.c1, t0.c1) END  NULLS LAST, (NOT (IFNULL(DISTINCT t0.c0, t0.c1))) DESC;
SELECT * FROM v0, t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) IS FALSE)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) IS FALSE)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE t0.c2  WHEN t0.c1 THEN t0.c0 WHEN '-1197953764' THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN t0.c1 THEN t0.c0 WHEN '-1197953764' THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE t0.c2  WHEN t0.c1 THEN t0.c0 WHEN '-1197953764' THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN t0.c1 THEN t0.c0 WHEN '-1197953764' THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE t0.c2  WHEN t0.c1 THEN t0.c0 WHEN '-1197953764' THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM t2 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t2.c0 END)IS NOT(((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)))) WHERE (CAST((NOT (t2.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t2.c0)) AS REAL)) IS TRUE)  as count FROM t2 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t2.c0 END)IS NOT(((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM t2 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t2.c0 END)IS NOT(((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)))) WHERE (CAST((NOT (t2.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t2.c0)) AS REAL)) IS TRUE)  as count FROM t2 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t2.c0 END)IS NOT(((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM t2 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t2.c0 END)IS NOT(((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)))) WHERE (CAST((NOT (t2.c0)) AS REAL));
SELECT * FROM t2, vt0, t0, v0 WHERE (((t2.c0)>>(UPPER(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((t2.c0)>>(UPPER(t0.c2)))) IS TRUE)  as count FROM t2, vt0, t0, v0);
SELECT * FROM t2, vt0, t0, v0 WHERE (((t2.c0)>>(UPPER(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((t2.c0)>>(UPPER(t0.c2)))) IS TRUE)  as count FROM t2, vt0, t0, v0);
SELECT * FROM t2, vt0, t0, v0 WHERE (((t2.c0)>>(UPPER(t0.c2))));
SELECT ALL * FROM vt0, t2 WHERE (CAST(CASE WHEN t2.c0 THEN '0.5874187610698707' END AS INTEGER)) ORDER BY ((t2.c0) BETWEEN (t2.c0 COLLATE BINARY) AND ((('(H') BETWEEN (t2.c0) AND (vt0.c0)))), CASE WHEN (- (t2.c0)) THEN UNLIKELY(DISTINCT x'4163') ELSE x'' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t2.c0 THEN '0.5874187610698707' END AS INTEGER)) IS TRUE)  as count FROM vt0, t2 ORDER BY ((t2.c0) BETWEEN (t2.c0 COLLATE BINARY) AND ((('(H') BETWEEN (t2.c0) AND (vt0.c0)))), CASE WHEN (- (t2.c0)) THEN UNLIKELY(DISTINCT x'4163') ELSE x'' END  NULLS LAST);
SELECT ALL * FROM vt0, t2 WHERE (CAST(CASE WHEN t2.c0 THEN '0.5874187610698707' END AS INTEGER)) ORDER BY ((t2.c0) BETWEEN (t2.c0 COLLATE BINARY) AND ((('(H') BETWEEN (t2.c0) AND (vt0.c0)))), CASE WHEN (- (t2.c0)) THEN UNLIKELY(DISTINCT x'4163') ELSE x'' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t2.c0 THEN '0.5874187610698707' END AS INTEGER)) IS TRUE)  as count FROM vt0, t2 ORDER BY ((t2.c0) BETWEEN (t2.c0 COLLATE BINARY) AND ((('(H') BETWEEN (t2.c0) AND (vt0.c0)))), CASE WHEN (- (t2.c0)) THEN UNLIKELY(DISTINCT x'4163') ELSE x'' END  NULLS LAST);
SELECT ALL * FROM vt0, t2 WHERE (CAST(CASE WHEN t2.c0 THEN '0.5874187610698707' END AS INTEGER)) ORDER BY ((t2.c0) BETWEEN (t2.c0 COLLATE BINARY) AND ((('(H') BETWEEN (t2.c0) AND (vt0.c0)))), CASE WHEN (- (t2.c0)) THEN UNLIKELY(DISTINCT x'4163') ELSE x'' END  NULLS LAST;
SELECT * FROM vt0, t0, t2 WHERE (((((TRIM(t0.c2, vt0.c0))OR(CAST(vt0.c0 AS BLOB))))AND(((t2.c0) BETWEEN (t0.c2) AND ('')))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(t0.c2, vt0.c0))OR(CAST(vt0.c0 AS BLOB))))AND(((t2.c0) BETWEEN (t0.c2) AND (''))))) IS TRUE)  as count FROM vt0, t0, t2);
SELECT * FROM vt0, t0, t2 WHERE (((((TRIM(t0.c2, vt0.c0))OR(CAST(vt0.c0 AS BLOB))))AND(((t2.c0) BETWEEN (t0.c2) AND ('')))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(t0.c2, vt0.c0))OR(CAST(vt0.c0 AS BLOB))))AND(((t2.c0) BETWEEN (t0.c2) AND (''))))) IS TRUE)  as count FROM vt0, t0, t2);
SELECT * FROM vt0, t0, t2 WHERE (((((TRIM(t0.c2, vt0.c0))OR(CAST(vt0.c0 AS BLOB))))AND(((t2.c0) BETWEEN (t0.c2) AND ('')))));
SELECT * FROM v0, t0, vt0, t2 WHERE (((((((((((((x'133b')OR(v0.c0)))AND(t0.c1)))AND(v0.c0)))OR(v0.c0)))OR(t0.c2)))OR(t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((((((x'133b')OR(v0.c0)))AND(t0.c1)))AND(v0.c0)))OR(v0.c0)))OR(t0.c2)))OR(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt0, t2);
SELECT * FROM v0, t0, vt0, t2 WHERE (((((((((((((x'133b')OR(v0.c0)))AND(t0.c1)))AND(v0.c0)))OR(v0.c0)))OR(t0.c2)))OR(t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((((((x'133b')OR(v0.c0)))AND(t0.c1)))AND(v0.c0)))OR(v0.c0)))OR(t0.c2)))OR(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt0, t2);
SELECT * FROM v0, t0, vt0, t2 WHERE (((((((((((((x'133b')OR(v0.c0)))AND(t0.c1)))AND(v0.c0)))OR(v0.c0)))OR(t0.c2)))OR(t0.c2)) COLLATE NOCASE);
SELECT * FROM t2, v0, vt0 WHERE (((((HEX(DISTINCT t2.c0))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(DISTINCT t2.c0))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t2, v0, vt0);
SELECT * FROM t2, v0, vt0 WHERE (((((HEX(DISTINCT t2.c0))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(DISTINCT t2.c0))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t2, v0, vt0);
SELECT * FROM t2, v0, vt0 WHERE (((((HEX(DISTINCT t2.c0))OR(v0.c0)))AND(v0.c0 COLLATE NOCASE)));
SELECT * FROM vt0, t0, t2, v0 WHERE (CASE (vt0.c0 IN ())  WHEN t0.c1 COLLATE BINARY THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c2 THEN t2.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN t0.c1 COLLATE BINARY THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c2 THEN t2.c0 END END) IS TRUE)  as count FROM vt0, t0, t2, v0);
SELECT * FROM vt0, t0, t2, v0 WHERE (CASE (vt0.c0 IN ())  WHEN t0.c1 COLLATE BINARY THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c2 THEN t2.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN t0.c1 COLLATE BINARY THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c2 THEN t2.c0 END END) IS TRUE)  as count FROM vt0, t0, t2, v0);
SELECT * FROM vt0, t0, t2, v0 WHERE (CASE (vt0.c0 IN ())  WHEN t0.c1 COLLATE BINARY THEN ((t0.c0) IS FALSE) ELSE CASE WHEN t0.c2 THEN t2.c0 END END);
SELECT * FROM t2 WHERE (((0.9892380283592089) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((0.9892380283592089) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (((0.9892380283592089) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((0.9892380283592089) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (((0.9892380283592089) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, t2 NATURAL JOIN vt0 WHERE (((((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, t2 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0, t2 NATURAL JOIN vt0 WHERE (((((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, t2 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0, t2 NATURAL JOIN vt0 WHERE (((((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0, t0, t2 FULL OUTER JOIN v0 ON (((((t0.c1) NOT BETWEEN (x'') AND (t0.c0)), ((t2.c0)<<(t0.c2)), x''))<=((t0.c2, CASE t2.c0  WHEN t0.c0 THEN t0.c1 WHEN NULL THEN vt0.c0 WHEN '-34648375' THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN t2.c0 THEN t2.c0 END, ((vt0.c0)IS NOT(t0.c2))))) WHERE ((+ (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, t2 FULL OUTER JOIN v0 ON (((((t0.c1) NOT BETWEEN (x'') AND (t0.c0)), ((t2.c0)<<(t0.c2)), x''))<=((t0.c2, CASE t2.c0  WHEN t0.c0 THEN t0.c1 WHEN NULL THEN vt0.c0 WHEN '-34648375' THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN t2.c0 THEN t2.c0 END, ((vt0.c0)IS NOT(t0.c2))))));
SELECT COUNT(*) FROM vt0, t0, t2 FULL OUTER JOIN v0 ON (((((t0.c1) NOT BETWEEN (x'') AND (t0.c0)), ((t2.c0)<<(t0.c2)), x''))<=((t0.c2, CASE t2.c0  WHEN t0.c0 THEN t0.c1 WHEN NULL THEN vt0.c0 WHEN '-34648375' THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN t2.c0 THEN t2.c0 END, ((vt0.c0)IS NOT(t0.c2))))) WHERE ((+ (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, t2 FULL OUTER JOIN v0 ON (((((t0.c1) NOT BETWEEN (x'') AND (t0.c0)), ((t2.c0)<<(t0.c2)), x''))<=((t0.c2, CASE t2.c0  WHEN t0.c0 THEN t0.c1 WHEN NULL THEN vt0.c0 WHEN '-34648375' THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN t2.c0 THEN t2.c0 END, ((vt0.c0)IS NOT(t0.c2))))));
SELECT COUNT(*) FROM vt0, t0, t2 FULL OUTER JOIN v0 ON (((((t0.c1) NOT BETWEEN (x'') AND (t0.c0)), ((t2.c0)<<(t0.c2)), x''))<=((t0.c2, CASE t2.c0  WHEN t0.c0 THEN t0.c1 WHEN NULL THEN vt0.c0 WHEN '-34648375' THEN t0.c1 WHEN t0.c1 THEN vt0.c0 WHEN t2.c0 THEN t2.c0 END, ((vt0.c0)IS NOT(t0.c2))))) WHERE ((+ (v0.c0 COLLATE BINARY)));
SELECT * FROM v0 WHERE ('e<_cL1HQ');
SELECT SUM(count) FROM (SELECT ALL (('e<_cL1HQ') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('e<_cL1HQ');
SELECT SUM(count) FROM (SELECT ALL (('e<_cL1HQ') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('e<_cL1HQ');
SELECT ALL COUNT(*) FROM t2, t0 WHERE (CAST(CAST(t2.c0 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t2.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE (CAST(CAST(t2.c0 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t2.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE (CAST(CAST(t2.c0 AS TEXT) AS TEXT));
SELECT * FROM t2 RIGHT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED(t0.c2 COLLATE RTRIM) LEFT OUTER JOIN v0 ON ((((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))))<=((x''))) WHERE ((- (((v0.c0) BETWEEN (t0.c2) AND (t0.c0))))) ORDER BY CASE t0.c1  WHEN CASE WHEN t0.c2 THEN NULL WHEN t2.c0 THEN v0.c0 WHEN t0.c2 THEN t2.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) BETWEEN (t0.c2) AND (t0.c0))))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED(t0.c2 COLLATE RTRIM) LEFT OUTER JOIN v0 ON ((((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))))<=((x''))) ORDER BY CASE t0.c1  WHEN CASE WHEN t0.c2 THEN NULL WHEN t2.c0 THEN v0.c0 WHEN t0.c2 THEN t2.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) END ASC);
SELECT * FROM t2 RIGHT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED(t0.c2 COLLATE RTRIM) LEFT OUTER JOIN v0 ON ((((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))))<=((x''))) WHERE ((- (((v0.c0) BETWEEN (t0.c2) AND (t0.c0))))) ORDER BY CASE t0.c1  WHEN CASE WHEN t0.c2 THEN NULL WHEN t2.c0 THEN v0.c0 WHEN t0.c2 THEN t2.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) BETWEEN (t0.c2) AND (t0.c0))))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED(t0.c2 COLLATE RTRIM) LEFT OUTER JOIN v0 ON ((((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))))<=((x''))) ORDER BY CASE t0.c1  WHEN CASE WHEN t0.c2 THEN NULL WHEN t2.c0 THEN v0.c0 WHEN t0.c2 THEN t2.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) END ASC);
SELECT * FROM t2 RIGHT OUTER JOIN t0 ON SQLITE_COMPILEOPTION_USED(t0.c2 COLLATE RTRIM) LEFT OUTER JOIN v0 ON ((((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))))<=((x''))) WHERE ((- (((v0.c0) BETWEEN (t0.c2) AND (t0.c0))))) ORDER BY CASE t0.c1  WHEN CASE WHEN t0.c2 THEN NULL WHEN t2.c0 THEN v0.c0 WHEN t0.c2 THEN t2.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)) END ASC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((vt0.c0) NOT BETWEEN ('}\+㖗ed!z') AND (t0.c2)))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR((+ (vt0.c0)))) WHERE (((vt0.c0) BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((vt0.c0) NOT BETWEEN ('}\+㖗ed!z') AND (t0.c2)))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((vt0.c0) NOT BETWEEN ('}\+㖗ed!z') AND (t0.c2)))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR((+ (vt0.c0)))) WHERE (((vt0.c0) BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((vt0.c0) NOT BETWEEN ('}\+㖗ed!z') AND (t0.c2)))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((vt0.c0) NOT BETWEEN ('}\+㖗ed!z') AND (t0.c2)))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR((+ (vt0.c0)))) WHERE (((vt0.c0) BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, t0, t2 WHERE (((0.025653502433341302)<>(((t0.c2)>>(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.025653502433341302)<>(((t0.c2)>>(t0.c1))))) IS TRUE)  as count FROM v0, t0, t2);
SELECT COUNT(*) FROM v0, t0, t2 WHERE (((0.025653502433341302)<>(((t0.c2)>>(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.025653502433341302)<>(((t0.c2)>>(t0.c1))))) IS TRUE)  as count FROM v0, t0, t2);
SELECT COUNT(*) FROM v0, t0, t2 WHERE (((0.025653502433341302)<>(((t0.c2)>>(t0.c1)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE BINARY);
SELECT * FROM t2, t0, v0, vt0 WHERE ((((((t2.c0)+(t2.c0)), ((t0.c1) NOTNULL), ((((v0.c0)AND(v0.c0)))AND(t0.c0))))<>((((((vt0.c0)OR(v0.c0)))AND(t0.c0)), INSTR(vt0.c0, t2.c0), (((t0.c2))<((t0.c1))))))) ORDER BY (((x'')) NOT BETWEEN ((('812841357' IN ()))) AND (((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((t2.c0)+(t2.c0)), ((t0.c1) NOTNULL), ((((v0.c0)AND(v0.c0)))AND(t0.c0))))!=((((((vt0.c0)OR(v0.c0)))AND(t0.c0)), INSTR(vt0.c0, t2.c0), (((t0.c2))<((t0.c1))))))) IS TRUE)  as count FROM t2, t0, v0, vt0 ORDER BY (((x'')) NOT BETWEEN ((('812841357' IN ()))) AND (((t0.c0 IN ())))));
SELECT * FROM t2, t0, v0, vt0 WHERE ((((((t2.c0)+(t2.c0)), ((t0.c1) NOTNULL), ((((v0.c0)AND(v0.c0)))AND(t0.c0))))<>((((((vt0.c0)OR(v0.c0)))AND(t0.c0)), INSTR(vt0.c0, t2.c0), (((t0.c2))<((t0.c1))))))) ORDER BY (((x'')) NOT BETWEEN ((('812841357' IN ()))) AND (((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((t2.c0)+(t2.c0)), ((t0.c1) NOTNULL), ((((v0.c0)AND(v0.c0)))AND(t0.c0))))!=((((((vt0.c0)OR(v0.c0)))AND(t0.c0)), INSTR(vt0.c0, t2.c0), (((t0.c2))<((t0.c1))))))) IS TRUE)  as count FROM t2, t0, v0, vt0 ORDER BY (((x'')) NOT BETWEEN ((('812841357' IN ()))) AND (((t0.c0 IN ())))));
SELECT * FROM t2, t0, v0, vt0 WHERE ((((((t2.c0)+(t2.c0)), ((t0.c1) NOTNULL), ((((v0.c0)AND(v0.c0)))AND(t0.c0))))<>((((((vt0.c0)OR(v0.c0)))AND(t0.c0)), INSTR(vt0.c0, t2.c0), (((t0.c2))<((t0.c1))))))) ORDER BY (((x'')) NOT BETWEEN ((('812841357' IN ()))) AND (((t0.c0 IN ()))));
SELECT ALL * FROM t0, v0, vt0, t2 WHERE (((((t0.c1) ISNULL))LIKE('464035601'))) ORDER BY ((x'') BETWEEN (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) AND (t0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) ISNULL))LIKE('464035601'))) IS TRUE)  as count FROM t0, v0, vt0, t2 ORDER BY ((x'') BETWEEN (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) AND (t0.c2)) ASC);
SELECT ALL * FROM t0, v0, vt0, t2 WHERE (((((t0.c1) ISNULL))LIKE('464035601'))) ORDER BY ((x'') BETWEEN (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) AND (t0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) ISNULL))LIKE('464035601'))) IS TRUE)  as count FROM t0, v0, vt0, t2 ORDER BY ((x'') BETWEEN (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) AND (t0.c2)) ASC);
SELECT ALL * FROM t0, v0, vt0, t2 WHERE (((((t0.c1) ISNULL))LIKE('464035601'))) ORDER BY ((x'') BETWEEN (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) AND (t0.c2)) ASC;
SELECT ALL COUNT(*) FROM t2, v0, t0 WHERE (-1327092465) ORDER BY (((((((t2.c0))>=((t0.c0))))AND(((t0.c2)-(0.24796814576076864)))))OR((NOT (v0.c0)))), CAST((v0.c0 IN ()) AS NUMERIC) DESC, (CASE WHEN x'' THEN t2.c0 ELSE t0.c2 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-1327092465) IS TRUE)  as count FROM t2, v0, t0 ORDER BY (((((((t2.c0))>=((t0.c0))))AND(((t0.c2)-(0.24796814576076864)))))OR((NOT (v0.c0)))), CAST((v0.c0 IN ()) AS NUMERIC) DESC, (CASE WHEN x'' THEN t2.c0 ELSE t0.c2 END IN ()) ASC);
SELECT ALL COUNT(*) FROM t2, v0, t0 WHERE (-1327092465) ORDER BY (((((((t2.c0))>=((t0.c0))))AND(((t0.c2)-(0.24796814576076864)))))OR((NOT (v0.c0)))), CAST((v0.c0 IN ()) AS NUMERIC) DESC, (CASE WHEN x'' THEN t2.c0 ELSE t0.c2 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-1327092465) IS TRUE)  as count FROM t2, v0, t0 ORDER BY (((((((t2.c0))>=((t0.c0))))AND(((t0.c2)-(0.24796814576076864)))))OR((NOT (v0.c0)))), CAST((v0.c0 IN ()) AS NUMERIC) DESC, (CASE WHEN x'' THEN t2.c0 ELSE t0.c2 END IN ()) ASC);
SELECT ALL COUNT(*) FROM t2, v0, t0 WHERE (-1327092465) ORDER BY (((((((t2.c0))>=((t0.c0))))AND(((t0.c2)-(0.24796814576076864)))))OR((NOT (v0.c0)))), CAST((v0.c0 IN ()) AS NUMERIC) DESC, (CASE WHEN x'' THEN t2.c0 ELSE t0.c2 END IN ()) ASC;
SELECT ALL COUNT(*) FROM t2 WHERE (((UNICODE(t2.c0))OR((((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((0.47368666069658694, t2.c0, t2.c0))))));
SELECT SUM(count) FROM (SELECT ((((UNICODE(t2.c0))OR((((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((0.47368666069658694, t2.c0, t2.c0)))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((UNICODE(t2.c0))OR((((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((0.47368666069658694, t2.c0, t2.c0))))));
SELECT SUM(count) FROM (SELECT ((((UNICODE(t2.c0))OR((((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((0.47368666069658694, t2.c0, t2.c0)))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((UNICODE(t2.c0))OR((((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((0.47368666069658694, t2.c0, t2.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0 COLLATE RTRIM, 0.04723315915737947)) ORDER BY ((ABS(v0.c0))%(((v0.c0) BETWEEN (v0.c0) AND (0.08455101625839856)))) ASC  NULLS LAST, UNICODE(JULIANDAY(v0.c0, x'', vt0.c0));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT vt0.c0 COLLATE RTRIM, 0.04723315915737947)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((ABS(v0.c0))%(((v0.c0) BETWEEN (v0.c0) AND (0.08455101625839856)))) ASC  NULLS LAST, UNICODE(JULIANDAY(v0.c0, x'', vt0.c0)));
SELECT ALL * FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0 COLLATE RTRIM, 0.04723315915737947)) ORDER BY ((ABS(v0.c0))%(((v0.c0) BETWEEN (v0.c0) AND (0.08455101625839856)))) ASC  NULLS LAST, UNICODE(JULIANDAY(v0.c0, x'', vt0.c0));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT vt0.c0 COLLATE RTRIM, 0.04723315915737947)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((ABS(v0.c0))%(((v0.c0) BETWEEN (v0.c0) AND (0.08455101625839856)))) ASC  NULLS LAST, UNICODE(JULIANDAY(v0.c0, x'', vt0.c0)));
SELECT ALL * FROM v0, vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0 COLLATE RTRIM, 0.04723315915737947)) ORDER BY ((ABS(v0.c0))%(((v0.c0) BETWEEN (v0.c0) AND (0.08455101625839856)))) ASC  NULLS LAST, UNICODE(JULIANDAY(v0.c0, x'', vt0.c0));
SELECT ALL * FROM t2, vt0, t0, v0 WHERE ((NOT (CASE WHEN t0.c0 THEN t2.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE v0.c0 END))) ORDER BY (((t0.c2)) NOT BETWEEN (((((NULL, t0.c1, t0.c2, t0.c0, vt0.c0, t0.c1, vt0.c0)) BETWEEN ((t0.c2, v0.c0, vt0.c0, vt0.c0, 0Xffffffffc920c8bb, vt0.c0, t0.c0)) AND ((vt0.c0, t2.c0, vt0.c0, t0.c0, t0.c1, t2.c0, t2.c0))))) AND (((vt0.c0 IN ())))) DESC, HEX(((t0.c0)AND(t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t0.c0 THEN t2.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE v0.c0 END))) IS TRUE)  as count FROM t2, vt0, t0, v0 ORDER BY (((t0.c2)) NOT BETWEEN (((((NULL, t0.c1, t0.c2, t0.c0, vt0.c0, t0.c1, vt0.c0)) BETWEEN ((t0.c2, v0.c0, vt0.c0, vt0.c0, 0xffffffffc920c8bb, vt0.c0, t0.c0)) AND ((vt0.c0, t2.c0, vt0.c0, t0.c0, t0.c1, t2.c0, t2.c0))))) AND (((vt0.c0 IN ())))) DESC, HEX(((t0.c0)AND(t0.c2))) DESC  NULLS FIRST);
SELECT ALL * FROM t2, vt0, t0, v0 WHERE ((NOT (CASE WHEN t0.c0 THEN t2.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE v0.c0 END))) ORDER BY (((t0.c2)) NOT BETWEEN (((((NULL, t0.c1, t0.c2, t0.c0, vt0.c0, t0.c1, vt0.c0)) BETWEEN ((t0.c2, v0.c0, vt0.c0, vt0.c0, 0Xffffffffc920c8bb, vt0.c0, t0.c0)) AND ((vt0.c0, t2.c0, vt0.c0, t0.c0, t0.c1, t2.c0, t2.c0))))) AND (((vt0.c0 IN ())))) DESC, HEX(((t0.c0)AND(t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t0.c0 THEN t2.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE v0.c0 END))) IS TRUE)  as count FROM t2, vt0, t0, v0 ORDER BY (((t0.c2)) NOT BETWEEN (((((NULL, t0.c1, t0.c2, t0.c0, vt0.c0, t0.c1, vt0.c0)) BETWEEN ((t0.c2, v0.c0, vt0.c0, vt0.c0, 0xffffffffc920c8bb, vt0.c0, t0.c0)) AND ((vt0.c0, t2.c0, vt0.c0, t0.c0, t0.c1, t2.c0, t2.c0))))) AND (((vt0.c0 IN ())))) DESC, HEX(((t0.c0)AND(t0.c2))) DESC  NULLS FIRST);
SELECT ALL * FROM t2, vt0, t0, v0 WHERE ((NOT (CASE WHEN t0.c0 THEN t2.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE v0.c0 END))) ORDER BY (((t0.c2)) NOT BETWEEN (((((NULL, t0.c1, t0.c2, t0.c0, vt0.c0, t0.c1, vt0.c0)) BETWEEN ((t0.c2, v0.c0, vt0.c0, vt0.c0, 0Xffffffffc920c8bb, vt0.c0, t0.c0)) AND ((vt0.c0, t2.c0, vt0.c0, t0.c0, t0.c1, t2.c0, t2.c0))))) AND (((vt0.c0 IN ())))) DESC, HEX(((t0.c0)AND(t0.c2))) DESC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((((((((((t0.c2)LIKE(vt0.c0)))OR(((t0.c1)GLOB(t0.c1)))))OR((('0.937936761548464') NOT NULL))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c1)))))OR(((t0.c2)>(0xffffffffb13c5c88))))) ORDER BY (((((((((t0.c2 IN ()))OR(((vt0.c0)GLOB(t0.c0)))))AND((t0.c2 IN ()))))AND((((t0.c1)) NOT BETWEEN (('Q7')) AND ((t0.c0))))))AND((t0.c2 IN ('', vt0.c0)))) ASC  NULLS LAST, CAST(((t0.c2)LIKE(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)LIKE(vt0.c0)))OR(((t0.c1)GLOB(t0.c1)))))OR((('0.937936761548464') NOT NULL))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c1)))))OR(((t0.c2)>(0Xffffffffb13c5c88))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((((t0.c2 IN ()))OR(((vt0.c0)GLOB(t0.c0)))))AND((t0.c2 IN ()))))AND((((t0.c1)) NOT BETWEEN (('Q7')) AND ((t0.c0))))))AND((t0.c2 IN ('', vt0.c0)))) ASC  NULLS LAST, CAST(((t0.c2)LIKE(vt0.c0)) AS REAL) DESC);
SELECT * FROM t0, vt0 WHERE (((((((((((t0.c2)LIKE(vt0.c0)))OR(((t0.c1)GLOB(t0.c1)))))OR((('0.937936761548464') NOT NULL))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c1)))))OR(((t0.c2)>(0xffffffffb13c5c88))))) ORDER BY (((((((((t0.c2 IN ()))OR(((vt0.c0)GLOB(t0.c0)))))AND((t0.c2 IN ()))))AND((((t0.c1)) NOT BETWEEN (('Q7')) AND ((t0.c0))))))AND((t0.c2 IN ('', vt0.c0)))) ASC  NULLS LAST, CAST(((t0.c2)LIKE(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)LIKE(vt0.c0)))OR(((t0.c1)GLOB(t0.c1)))))OR((('0.937936761548464') NOT NULL))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c1)))))OR(((t0.c2)>(0Xffffffffb13c5c88))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((((t0.c2 IN ()))OR(((vt0.c0)GLOB(t0.c0)))))AND((t0.c2 IN ()))))AND((((t0.c1)) NOT BETWEEN (('Q7')) AND ((t0.c0))))))AND((t0.c2 IN ('', vt0.c0)))) ASC  NULLS LAST, CAST(((t0.c2)LIKE(vt0.c0)) AS REAL) DESC);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ('1e500') ORDER BY (t0.c2 IN ()) ASC, json_array_length(((t0.c0)<>(967514831))) ASC, CASE WHEN ((t0.c2)==(t0.c0)) THEN CASE WHEN t0.c1 THEN v0.c0 WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN t0.c2 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1e500') IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0 ORDER BY (t0.c2 IN ()) ASC, json_array_length(((t0.c0)<>(967514831))) ASC, CASE WHEN ((t0.c2)=(t0.c0)) THEN CASE WHEN t0.c1 THEN v0.c0 WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN t0.c2 END END  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ('1e500') ORDER BY (t0.c2 IN ()) ASC, json_array_length(((t0.c0)<>(967514831))) ASC, CASE WHEN ((t0.c2)==(t0.c0)) THEN CASE WHEN t0.c1 THEN v0.c0 WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN t0.c2 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1e500') IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0 ORDER BY (t0.c2 IN ()) ASC, json_array_length(((t0.c0)<>(967514831))) ASC, CASE WHEN ((t0.c2)=(t0.c0)) THEN CASE WHEN t0.c1 THEN v0.c0 WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN t0.c2 END END  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ('1e500') ORDER BY (t0.c2 IN ()) ASC, json_array_length(((t0.c0)<>(967514831))) ASC, CASE WHEN ((t0.c2)==(t0.c0)) THEN CASE WHEN t0.c1 THEN v0.c0 WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN t0.c2 END END  NULLS LAST;
SELECT COUNT(*) FROM t0, t2 WHERE (((((CASE WHEN t0.c0 THEN t2.c0 END)OR(CAST(t0.c2 AS TEXT))))OR((~ (0.9750695143721018))))) ORDER BY CAST(t0.c0 COLLATE BINARY AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c0 THEN t2.c0 END)OR(CAST(t0.c2 AS TEXT))))OR((~ (0.9750695143721018))))) IS TRUE)  as count FROM t0, t2 ORDER BY CAST(t0.c0 COLLATE BINARY AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE (((((CASE WHEN t0.c0 THEN t2.c0 END)OR(CAST(t0.c2 AS TEXT))))OR((~ (0.9750695143721018))))) ORDER BY CAST(t0.c0 COLLATE BINARY AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c0 THEN t2.c0 END)OR(CAST(t0.c2 AS TEXT))))OR((~ (0.9750695143721018))))) IS TRUE)  as count FROM t0, t2 ORDER BY CAST(t0.c0 COLLATE BINARY AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE (((((CASE WHEN t0.c0 THEN t2.c0 END)OR(CAST(t0.c2 AS TEXT))))OR((~ (0.9750695143721018))))) ORDER BY CAST(t0.c0 COLLATE BINARY AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM t2 WHERE ((((NULL, t2.c0, t2.c0)) NOT BETWEEN ((((t2.c0)!=(t2.c0)), NULL, (+ (t2.c0)))) AND ((((((t2.c0)OR(t2.c0)))OR(NULL)), t2.c0, ((((t2.c0)AND(t2.c0)))OR(t2.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL, t2.c0, t2.c0)) NOT BETWEEN ((((t2.c0)<>(t2.c0)), NULL, (+ (t2.c0)))) AND ((((((t2.c0)OR(t2.c0)))OR(NULL)), t2.c0, ((((t2.c0)AND(t2.c0)))OR(t2.c0)))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE ((((NULL, t2.c0, t2.c0)) NOT BETWEEN ((((t2.c0)!=(t2.c0)), NULL, (+ (t2.c0)))) AND ((((((t2.c0)OR(t2.c0)))OR(NULL)), t2.c0, ((((t2.c0)AND(t2.c0)))OR(t2.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL, t2.c0, t2.c0)) NOT BETWEEN ((((t2.c0)<>(t2.c0)), NULL, (+ (t2.c0)))) AND ((((((t2.c0)OR(t2.c0)))OR(NULL)), t2.c0, ((((t2.c0)AND(t2.c0)))OR(t2.c0)))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE ((((NULL, t2.c0, t2.c0)) NOT BETWEEN ((((t2.c0)!=(t2.c0)), NULL, (+ (t2.c0)))) AND ((((((t2.c0)OR(t2.c0)))OR(NULL)), t2.c0, ((((t2.c0)AND(t2.c0)))OR(t2.c0))))));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))OR(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))OR(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL))OR(((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t2 ON (((t2.c0)) NOT BETWEEN ((CAST(t2.c0 AS NUMERIC))) AND ((t2.c0))) WHERE ((((((NOT (t2.c0)))OR(((((v0.c0)OR(t2.c0)))OR(v0.c0)))))AND(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t2.c0)))OR(((((v0.c0)OR(t2.c0)))OR(v0.c0)))))AND(TOTAL_CHANGES()))) IS TRUE)  as count FROM v0 CROSS JOIN t2 ON (((t2.c0)) NOT BETWEEN ((CAST(t2.c0 AS NUMERIC))) AND ((t2.c0))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t2 ON (((t2.c0)) NOT BETWEEN ((CAST(t2.c0 AS NUMERIC))) AND ((t2.c0))) WHERE ((((((NOT (t2.c0)))OR(((((v0.c0)OR(t2.c0)))OR(v0.c0)))))AND(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t2.c0)))OR(((((v0.c0)OR(t2.c0)))OR(v0.c0)))))AND(TOTAL_CHANGES()))) IS TRUE)  as count FROM v0 CROSS JOIN t2 ON (((t2.c0)) NOT BETWEEN ((CAST(t2.c0 AS NUMERIC))) AND ((t2.c0))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t2 ON (((t2.c0)) NOT BETWEEN ((CAST(t2.c0 AS NUMERIC))) AND ((t2.c0))) WHERE ((((((NOT (t2.c0)))OR(((((v0.c0)OR(t2.c0)))OR(v0.c0)))))AND(TOTAL_CHANGES())));
SELECT * FROM t0 WHERE (CAST(((t0.c0)<(t0.c0)) AS INTEGER)) ORDER BY (((~ (t0.c2))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)<(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c2))) IS FALSE) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(((t0.c0)<(t0.c0)) AS INTEGER)) ORDER BY (((~ (t0.c2))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)<(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c2))) IS FALSE) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(((t0.c0)<(t0.c0)) AS INTEGER)) ORDER BY (((~ (t0.c2))) IS FALSE) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((DATE(t0.c1, t0.c0, '-2020090745')) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((DATE(t0.c1, t0.c0, '-2020090745')) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((DATE(t0.c1, t0.c0, '-2020090745')) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((DATE(t0.c1, t0.c0, '-2020090745')) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((DATE(t0.c1, t0.c0, '-2020090745')) IS FALSE));
SELECT COUNT(*) FROM t0 INNER JOIN t2 ON ((NULL)>=(((((t0.c0)AND(t2.c0)))OR(t0.c0)))) WHERE (LOWER(DISTINCT ((t0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t0.c1) NOTNULL))) IS TRUE)  as count FROM t0 INNER JOIN t2 ON ((NULL)>=(((((t0.c0)AND(t2.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN t2 ON ((NULL)>=(((((t0.c0)AND(t2.c0)))OR(t0.c0)))) WHERE (LOWER(DISTINCT ((t0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t0.c1) NOTNULL))) IS TRUE)  as count FROM t0 INNER JOIN t2 ON ((NULL)>=(((((t0.c0)AND(t2.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN t2 ON ((NULL)>=(((((t0.c0)AND(t2.c0)))OR(t0.c0)))) WHERE (LOWER(DISTINCT ((t0.c1) NOTNULL)));
SELECT ALL * FROM t2, t0, v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((-1812910849)) AND ((((t0.c2)GLOB(t2.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((-1812910849)) AND ((((t0.c2)GLOB(t2.c0)))))) IS TRUE)  as count FROM t2, t0, v0, vt0);
SELECT ALL * FROM t2, t0, v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((-1812910849)) AND ((((t0.c2)GLOB(t2.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((-1812910849)) AND ((((t0.c2)GLOB(t2.c0)))))) IS TRUE)  as count FROM t2, t0, v0, vt0);
SELECT ALL * FROM t2, t0, v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((-1812910849)) AND ((((t0.c2)GLOB(t2.c0))))));
SELECT * FROM t0 WHERE ('1134430994');
SELECT SUM(count) FROM (SELECT (('1134430994') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('1134430994');
SELECT SUM(count) FROM (SELECT (('1134430994') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('1134430994');
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c0)||(t0.c1)))) AND ((vt0.c0 COLLATE RTRIM)))) ORDER BY ((t0.c2) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((t0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((((t0.c0)||(t0.c1)))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((t0.c2) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((t0.c1) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c0)||(t0.c1)))) AND ((vt0.c0 COLLATE RTRIM)))) ORDER BY ((t0.c2) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((t0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((((t0.c0)||(t0.c1)))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((t0.c2) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((t0.c1) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c0)||(t0.c1)))) AND ((vt0.c0 COLLATE RTRIM)))) ORDER BY ((t0.c2) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((t0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c1)) BETWEEN ((((((((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c1)))) AND ((CASE WHEN t0.c0 THEN t0.c2 ELSE vt0.c0 END)))) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)))>>(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) BETWEEN ((((((((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c1)))) AND ((CASE WHEN t0.c0 THEN t0.c2 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)))>>(t0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c1)) BETWEEN ((((((((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c1)))) AND ((CASE WHEN t0.c0 THEN t0.c2 ELSE vt0.c0 END)))) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)))>>(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) BETWEEN ((((((((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c1)))) AND ((CASE WHEN t0.c0 THEN t0.c2 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)))>>(t0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c1)) BETWEEN ((((((((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c1)))) AND ((CASE WHEN t0.c0 THEN t0.c2 ELSE vt0.c0 END)))) ORDER BY ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)))>>(t0.c0))  NULLS LAST;
SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE (((((vt0.c0)<=(0.1523742604402477)))-(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(0.1523742604402477)))-(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE (((((vt0.c0)<=(0.1523742604402477)))-(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(0.1523742604402477)))-(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 NOT INDEXED WHERE (((((vt0.c0)<=(0.1523742604402477)))-(((vt0.c0)GLOB(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM WHEN UNLIKELY(vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ABS(vt0.c0) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM WHEN UNLIKELY(vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ABS(vt0.c0) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM WHEN UNLIKELY(vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ABS(vt0.c0) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM WHEN UNLIKELY(vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ABS(vt0.c0) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM WHEN UNLIKELY(vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ABS(vt0.c0) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END);
SELECT COUNT(*) FROM vt0, t0, t2, v0 WHERE ((((t0.c1)) NOT BETWEEN ((CASE t2.c0  WHEN vt0.c0 THEN t0.c2 ELSE v0.c0 END)) AND ((((vt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)))))) ORDER BY 'hC^\nq', LOWER((((t0.c1)) NOT BETWEEN (('-1093659415')) AND ((v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((CASE t2.c0  WHEN vt0.c0 THEN t0.c2 ELSE v0.c0 END)) AND ((((vt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, t2, v0 ORDER BY 'hC^\nq', LOWER((((t0.c1)) NOT BETWEEN (('-1093659415')) AND ((v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t2, v0 WHERE ((((t0.c1)) NOT BETWEEN ((CASE t2.c0  WHEN vt0.c0 THEN t0.c2 ELSE v0.c0 END)) AND ((((vt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)))))) ORDER BY 'hC^\nq', LOWER((((t0.c1)) NOT BETWEEN (('-1093659415')) AND ((v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((CASE t2.c0  WHEN vt0.c0 THEN t0.c2 ELSE v0.c0 END)) AND ((((vt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, t2, v0 ORDER BY 'hC^\nq', LOWER((((t0.c1)) NOT BETWEEN (('-1093659415')) AND ((v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t2, v0 WHERE ((((t0.c1)) NOT BETWEEN ((CASE t2.c0  WHEN vt0.c0 THEN t0.c2 ELSE v0.c0 END)) AND ((((vt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)))))) ORDER BY 'hC^\nq', LOWER((((t0.c1)) NOT BETWEEN (('-1093659415')) AND ((v0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t2, vt0 WHERE (NULLIF(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((t2.c0)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((t2.c0)+(vt0.c0)))) IS TRUE)  as count FROM t2, vt0);
SELECT ALL * FROM t2, vt0 WHERE (NULLIF(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((t2.c0)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((t2.c0)+(vt0.c0)))) IS TRUE)  as count FROM t2, vt0);
SELECT ALL * FROM t2, vt0 WHERE (NULLIF(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((t2.c0)+(vt0.c0))));
SELECT ALL * FROM t0 INNER JOIN v0 ON (((vt0.c0)) BETWEEN (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1))))) AND ((NULL))) INNER JOIN t2 ON ((((t0.c2)OR((((t0.c2, '', t2.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((v0.c0, t0.c1, t0.c0))))))AND(((((t0.c2)OR(t2.c0)))OR(t0.c1)))) LEFT OUTER JOIN vt0 ON (x'1305' IN (((t0.c1)<>(v0.c0)))) WHERE ((CAST(t2.c0 AS REAL) IN ())) ORDER BY CASE WHEN vt0.c0 THEN t0.c1 ELSE '1417996439' END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t2.c0 AS REAL) IN ())) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((vt0.c0)) BETWEEN (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1))))) AND ((NULL))) INNER JOIN t2 ON ((((t0.c2)OR((((t0.c2, '', t2.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((v0.c0, t0.c1, t0.c0))))))AND(((((t0.c2)OR(t2.c0)))OR(t0.c1)))) LEFT OUTER JOIN vt0 ON (x'1305' IN (((t0.c1)<>(v0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN t0.c1 ELSE '1417996439' END COLLATE NOCASE ASC);
SELECT ALL * FROM t0 INNER JOIN v0 ON (((vt0.c0)) BETWEEN (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1))))) AND ((NULL))) INNER JOIN t2 ON ((((t0.c2)OR((((t0.c2, '', t2.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((v0.c0, t0.c1, t0.c0))))))AND(((((t0.c2)OR(t2.c0)))OR(t0.c1)))) LEFT OUTER JOIN vt0 ON (x'1305' IN (((t0.c1)<>(v0.c0)))) WHERE ((CAST(t2.c0 AS REAL) IN ())) ORDER BY CASE WHEN vt0.c0 THEN t0.c1 ELSE '1417996439' END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t2.c0 AS REAL) IN ())) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((vt0.c0)) BETWEEN (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1))))) AND ((NULL))) INNER JOIN t2 ON ((((t0.c2)OR((((t0.c2, '', t2.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((v0.c0, t0.c1, t0.c0))))))AND(((((t0.c2)OR(t2.c0)))OR(t0.c1)))) LEFT OUTER JOIN vt0 ON (x'1305' IN (((t0.c1)<>(v0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN t0.c1 ELSE '1417996439' END COLLATE NOCASE ASC);
SELECT ALL * FROM t0 INNER JOIN v0 ON (((vt0.c0)) BETWEEN (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1))))) AND ((NULL))) INNER JOIN t2 ON ((((t0.c2)OR((((t0.c2, '', t2.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((v0.c0, t0.c1, t0.c0))))))AND(((((t0.c2)OR(t2.c0)))OR(t0.c1)))) LEFT OUTER JOIN vt0 ON (x'1305' IN (((t0.c1)<>(v0.c0)))) WHERE ((CAST(t2.c0 AS REAL) IN ())) ORDER BY CASE WHEN vt0.c0 THEN t0.c1 ELSE '1417996439' END COLLATE NOCASE ASC;
SELECT ALL * FROM t2 WHERE (('' IN ())) ORDER BY LOWER(DISTINCT LOWER(t2.c0)) DESC, (((t2.c0)IS(t2.c0)) IN (t2.c0, t2.c0 COLLATE BINARY)) ASC, ((((CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END)OR((~ (t2.c0)))))AND(((((((((((((t2.c0)OR(NULL)))OR('mt*|꣡H')))AND(x'')))OR(t2.c0)))OR(t2.c0)))OR(t2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM t2 ORDER BY LOWER(DISTINCT LOWER(t2.c0)) DESC, (((t2.c0)IS(t2.c0)) IN (t2.c0, t2.c0 COLLATE BINARY)) ASC, ((((CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END)OR((~ (t2.c0)))))AND(((((((((((((t2.c0)OR(NULL)))OR('mt*|꣡H')))AND(x'')))OR(t2.c0)))OR(t2.c0)))OR(t2.c0))))  NULLS FIRST);
SELECT ALL * FROM t2 WHERE (('' IN ())) ORDER BY LOWER(DISTINCT LOWER(t2.c0)) DESC, (((t2.c0)IS(t2.c0)) IN (t2.c0, t2.c0 COLLATE BINARY)) ASC, ((((CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END)OR((~ (t2.c0)))))AND(((((((((((((t2.c0)OR(NULL)))OR('mt*|꣡H')))AND(x'')))OR(t2.c0)))OR(t2.c0)))OR(t2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM t2 ORDER BY LOWER(DISTINCT LOWER(t2.c0)) DESC, (((t2.c0)IS(t2.c0)) IN (t2.c0, t2.c0 COLLATE BINARY)) ASC, ((((CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END)OR((~ (t2.c0)))))AND(((((((((((((t2.c0)OR(NULL)))OR('mt*|꣡H')))AND(x'')))OR(t2.c0)))OR(t2.c0)))OR(t2.c0))))  NULLS FIRST);
SELECT ALL * FROM t2 WHERE (('' IN ())) ORDER BY LOWER(DISTINCT LOWER(t2.c0)) DESC, (((t2.c0)IS(t2.c0)) IN (t2.c0, t2.c0 COLLATE BINARY)) ASC, ((((CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END)OR((~ (t2.c0)))))AND(((((((((((((t2.c0)OR(NULL)))OR('mt*|꣡H')))AND(x'')))OR(t2.c0)))OR(t2.c0)))OR(t2.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c2 IN ()) IN ())) ORDER BY (('0.45281111385340844') BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (CAST(t0.c1 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY (('0.45281111385340844') BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (CAST(t0.c1 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((t0.c2 IN ()) IN ())) ORDER BY (('0.45281111385340844') BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (CAST(t0.c1 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY (('0.45281111385340844') BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (CAST(t0.c1 AS BLOB)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((t0.c2 IN ()) IN ())) ORDER BY (('0.45281111385340844') BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (CAST(t0.c1 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM vt0, t0 NATURAL JOIN t2 WHERE (CASE WHEN t0.c0 COLLATE RTRIM THEN (t0.c2 IN (vt0.c0)) END) ORDER BY NULL COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 COLLATE RTRIM THEN (t0.c2 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN t2 ORDER BY NULL COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0, t0 NATURAL JOIN t2 WHERE (CASE WHEN t0.c0 COLLATE RTRIM THEN (t0.c2 IN (vt0.c0)) END) ORDER BY NULL COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 COLLATE RTRIM THEN (t0.c2 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN t2 ORDER BY NULL COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0, t0 NATURAL JOIN t2 WHERE (CASE WHEN t0.c0 COLLATE RTRIM THEN (t0.c2 IN (vt0.c0)) END) ORDER BY NULL COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(NULL)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0) IS FALSE))>>((v0.c0 IN ())))  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()), (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))&((v0.c0 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE NOCASE)AND(NULL)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE))>>((v0.c0 IN ())))  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()), (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))&((v0.c0 IN (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(NULL)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0) IS FALSE))>>((v0.c0 IN ())))  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()), (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))&((v0.c0 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE NOCASE)AND(NULL)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE))>>((v0.c0 IN ())))  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()), (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))&((v0.c0 IN (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(NULL)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0) IS FALSE))>>((v0.c0 IN ())))  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()), (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))&((v0.c0 IN (v0.c0))));
SELECT ALL * FROM v0, t0 WHERE ((+ (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c2))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((+ (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c2))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((+ (t0.c2)));
SELECT ALL COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON ((((((((((t2.c0)AND(t0.c1)))AND(t0.c2)))OR(t0.c2)))AND(v0.c0))) NOTNULL) LEFT OUTER JOIN t2 ON t0.c2 WHERE ((((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON ((((((((((t2.c0)AND(t0.c1)))AND(t0.c2)))OR(t0.c2)))AND(v0.c0))) NOTNULL) LEFT OUTER JOIN t2 ON t0.c2);
SELECT ALL COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON ((((((((((t2.c0)AND(t0.c1)))AND(t0.c2)))OR(t0.c2)))AND(v0.c0))) NOTNULL) LEFT OUTER JOIN t2 ON t0.c2 WHERE ((((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON ((((((((((t2.c0)AND(t0.c1)))AND(t0.c2)))OR(t0.c2)))AND(v0.c0))) NOTNULL) LEFT OUTER JOIN t2 ON t0.c2);
SELECT ALL COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON ((((((((((t2.c0)AND(t0.c1)))AND(t0.c2)))OR(t0.c2)))AND(v0.c0))) NOTNULL) LEFT OUTER JOIN t2 ON t0.c2 WHERE ((((((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE ('qc');
SELECT SUM(count) FROM (SELECT (('qc') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('qc');
SELECT SUM(count) FROM (SELECT (('qc') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('qc');
SELECT ALL COUNT(*) FROM v0, vt0, t2, t0 WHERE ((((t0.c1)GLOB(vt0.c0)) IN ())) ORDER BY CASE (NULL IN ())  WHEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) THEN UPPER(DISTINCT t0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)GLOB(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0, t2, t0 ORDER BY CASE (NULL IN ())  WHEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) THEN UPPER(DISTINCT t0.c1) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t2, t0 WHERE ((((t0.c1)GLOB(vt0.c0)) IN ())) ORDER BY CASE (NULL IN ())  WHEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) THEN UPPER(DISTINCT t0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)GLOB(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0, t2, t0 ORDER BY CASE (NULL IN ())  WHEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) THEN UPPER(DISTINCT t0.c1) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t2, t0 WHERE ((((t0.c1)GLOB(vt0.c0)) IN ())) ORDER BY CASE (NULL IN ())  WHEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) THEN UPPER(DISTINCT t0.c1) END  NULLS FIRST;
SELECT COUNT(*) FROM t0, t2, v0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, t2, v0);
SELECT COUNT(*) FROM t0, t2, v0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, t2, v0);
SELECT COUNT(*) FROM t0, t2, v0 WHERE (t0.c1);
SELECT COUNT(*) FROM v0 WHERE (STRFTIME((- (v0.c0)), ((v0.c0)<(0.15378364679932)), ((v0.c0)<>(v0.c0)), ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) BETWEEN ((0.1795644938622064)) AND ((v0.c0))))) ORDER BY ((((((((UPPER(v0.c0))AND('-825859957')))AND(((v0.c0) NOT NULL))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(CHAR(v0.c0, -3.69750798E8, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((- (v0.c0)), ((v0.c0)<(0.15378364679932)), ((v0.c0)!=(v0.c0)), ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) BETWEEN ((0.1795644938622064)) AND ((v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((UPPER(v0.c0))AND('-825859957')))AND(((v0.c0) NOT NULL))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(CHAR(v0.c0, -3.69750798E8, v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (STRFTIME((- (v0.c0)), ((v0.c0)<(0.15378364679932)), ((v0.c0)<>(v0.c0)), ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) BETWEEN ((0.1795644938622064)) AND ((v0.c0))))) ORDER BY ((((((((UPPER(v0.c0))AND('-825859957')))AND(((v0.c0) NOT NULL))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(CHAR(v0.c0, -3.69750798E8, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((- (v0.c0)), ((v0.c0)<(0.15378364679932)), ((v0.c0)!=(v0.c0)), ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) BETWEEN ((0.1795644938622064)) AND ((v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((UPPER(v0.c0))AND('-825859957')))AND(((v0.c0) NOT NULL))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(CHAR(v0.c0, -3.69750798E8, v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (STRFTIME((- (v0.c0)), ((v0.c0)<(0.15378364679932)), ((v0.c0)<>(v0.c0)), ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) BETWEEN ((0.1795644938622064)) AND ((v0.c0))))) ORDER BY ((((((((UPPER(v0.c0))AND('-825859957')))AND(((v0.c0) NOT NULL))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(CHAR(v0.c0, -3.69750798E8, v0.c0)));
SELECT COUNT(*) FROM t0, vt0, v0, t2 WHERE (LIKELY(CAST(v0.c0 AS TEXT))) ORDER BY ((((vt0.c0)-(t0.c0)))*(((v0.c0)>(t0.c2))));
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST(v0.c0 AS TEXT))) IS TRUE)  as count FROM t0, vt0, v0, t2 ORDER BY ((((vt0.c0)-(t0.c0)))*(((v0.c0)>(t0.c2)))));
SELECT COUNT(*) FROM t0, vt0, v0, t2 WHERE (LIKELY(CAST(v0.c0 AS TEXT))) ORDER BY ((((vt0.c0)-(t0.c0)))*(((v0.c0)>(t0.c2))));
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST(v0.c0 AS TEXT))) IS TRUE)  as count FROM t0, vt0, v0, t2 ORDER BY ((((vt0.c0)-(t0.c0)))*(((v0.c0)>(t0.c2)))));
SELECT COUNT(*) FROM t0, vt0, v0, t2 WHERE (LIKELY(CAST(v0.c0 AS TEXT))) ORDER BY ((((vt0.c0)-(t0.c0)))*(((v0.c0)>(t0.c2))));
SELECT ALL COUNT(*) FROM t0, t2 RIGHT OUTER JOIN v0 ON ((CASE v0.c0  WHEN t0.c2 THEN t2.c0 ELSE v0.c0 END) NOT BETWEEN (((t0.c2)GLOB(t0.c2))) AND ('-1472263248')) CROSS JOIN vt0 ON 'x''' WHERE (((((x'1889') NOT BETWEEN (t0.c1) AND (t2.c0)))>>(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'1889') NOT BETWEEN (t0.c1) AND (t2.c0)))>>(t0.c0))) IS TRUE)  as count FROM t0, t2 RIGHT OUTER JOIN v0 ON ((CASE v0.c0  WHEN t0.c2 THEN t2.c0 ELSE v0.c0 END) NOT BETWEEN (((t0.c2)GLOB(t0.c2))) AND ('-1472263248')) CROSS JOIN vt0 ON 'x''');
SELECT ALL COUNT(*) FROM t0, t2 RIGHT OUTER JOIN v0 ON ((CASE v0.c0  WHEN t0.c2 THEN t2.c0 ELSE v0.c0 END) NOT BETWEEN (((t0.c2)GLOB(t0.c2))) AND ('-1472263248')) CROSS JOIN vt0 ON 'x''' WHERE (((((x'1889') NOT BETWEEN (t0.c1) AND (t2.c0)))>>(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'1889') NOT BETWEEN (t0.c1) AND (t2.c0)))>>(t0.c0))) IS TRUE)  as count FROM t0, t2 RIGHT OUTER JOIN v0 ON ((CASE v0.c0  WHEN t0.c2 THEN t2.c0 ELSE v0.c0 END) NOT BETWEEN (((t0.c2)GLOB(t0.c2))) AND ('-1472263248')) CROSS JOIN vt0 ON 'x''');
SELECT ALL COUNT(*) FROM t0, t2 RIGHT OUTER JOIN v0 ON ((CASE v0.c0  WHEN t0.c2 THEN t2.c0 ELSE v0.c0 END) NOT BETWEEN (((t0.c2)GLOB(t0.c2))) AND ('-1472263248')) CROSS JOIN vt0 ON 'x''' WHERE (((((x'1889') NOT BETWEEN (t0.c1) AND (t2.c0)))>>(t0.c0)));
SELECT * FROM v0 INNER JOIN vt0 ON '' LEFT OUTER JOIN t0 ON ((((v0.c0) ISNULL)) IS FALSE) WHERE (NULLIF(((((((((t0.c0)AND(t0.c1)))AND(t0.c2)))AND(v0.c0)))OR(v0.c0)), ((t0.c0)>>(t0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(((((((((t0.c0)AND(t0.c1)))AND(t0.c2)))AND(v0.c0)))OR(v0.c0)), ((t0.c0)>>(t0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON '' LEFT OUTER JOIN t0 ON ((((v0.c0) ISNULL)) IS FALSE));
SELECT * FROM v0 INNER JOIN vt0 ON '' LEFT OUTER JOIN t0 ON ((((v0.c0) ISNULL)) IS FALSE) WHERE (NULLIF(((((((((t0.c0)AND(t0.c1)))AND(t0.c2)))AND(v0.c0)))OR(v0.c0)), ((t0.c0)>>(t0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(((((((((t0.c0)AND(t0.c1)))AND(t0.c2)))AND(v0.c0)))OR(v0.c0)), ((t0.c0)>>(t0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON '' LEFT OUTER JOIN t0 ON ((((v0.c0) ISNULL)) IS FALSE));
SELECT * FROM v0 INNER JOIN vt0 ON '' LEFT OUTER JOIN t0 ON ((((v0.c0) ISNULL)) IS FALSE) WHERE (NULLIF(((((((((t0.c0)AND(t0.c1)))AND(t0.c2)))AND(v0.c0)))OR(v0.c0)), ((t0.c0)>>(t0.c0))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t2 ON ((((vt0.c0)AND(v0.c0)))AND(t2.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON x'' WHERE (((t2.c0)/(((v0.c0)==(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0)/(((v0.c0)==(t2.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t2 ON ((((vt0.c0)AND(v0.c0)))AND(t2.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON x'');
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t2 ON ((((vt0.c0)AND(v0.c0)))AND(t2.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON x'' WHERE (((t2.c0)/(((v0.c0)==(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0)/(((v0.c0)==(t2.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t2 ON ((((vt0.c0)AND(v0.c0)))AND(t2.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON x'');
SELECT * FROM vt0 CROSS JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0))) NOTNULL) INNER JOIN t2 ON (((~ (vt0.c0))) ISNULL) WHERE (((((t2.c0) NOT BETWEEN (t0.c1) AND (t0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t2.c0) NOT BETWEEN (t0.c1) AND (t0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0))) NOTNULL) INNER JOIN t2 ON (((~ (vt0.c0))) ISNULL));
SELECT * FROM vt0 CROSS JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0))) NOTNULL) INNER JOIN t2 ON (((~ (vt0.c0))) ISNULL) WHERE (((((t2.c0) NOT BETWEEN (t0.c1) AND (t0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t2.c0) NOT BETWEEN (t0.c1) AND (t0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0))) NOTNULL) INNER JOIN t2 ON (((~ (vt0.c0))) ISNULL));
SELECT * FROM vt0 CROSS JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0))) NOTNULL) INNER JOIN t2 ON (((~ (vt0.c0))) ISNULL) WHERE (((((t2.c0) NOT BETWEEN (t0.c1) AND (t0.c1))) NOTNULL));
SELECT ALL * FROM t0, vt0, t2, v0 WHERE (t0.c1) ORDER BY CASE ((v0.c0) BETWEEN (t2.c0) AND (vt0.c0))  WHEN LIKELY(-5.34634952E8) THEN CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END WHEN ((((t2.c0)AND(t0.c0)))OR(t2.c0)) THEN (t0.c1 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0, t2, v0 ORDER BY CASE ((v0.c0) BETWEEN (t2.c0) AND (vt0.c0))  WHEN LIKELY(-5.34634952E8) THEN CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END WHEN ((((t2.c0)AND(t0.c0)))OR(t2.c0)) THEN (t0.c1 IN ()) END  NULLS FIRST);
SELECT ALL * FROM t0, vt0, t2, v0 WHERE (t0.c1) ORDER BY CASE ((v0.c0) BETWEEN (t2.c0) AND (vt0.c0))  WHEN LIKELY(-5.34634952E8) THEN CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END WHEN ((((t2.c0)AND(t0.c0)))OR(t2.c0)) THEN (t0.c1 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0, t2, v0 ORDER BY CASE ((v0.c0) BETWEEN (t2.c0) AND (vt0.c0))  WHEN LIKELY(-5.34634952E8) THEN CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END WHEN ((((t2.c0)AND(t0.c0)))OR(t2.c0)) THEN (t0.c1 IN ()) END  NULLS FIRST);
SELECT ALL * FROM t0, vt0, t2, v0 WHERE (t0.c1) ORDER BY CASE ((v0.c0) BETWEEN (t2.c0) AND (vt0.c0))  WHEN LIKELY(-5.34634952E8) THEN CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END WHEN ((((t2.c0)AND(t0.c0)))OR(t2.c0)) THEN (t0.c1 IN ()) END  NULLS FIRST;
SELECT ALL * FROM t2, vt0, v0 WHERE (((((((x'')OR(v0.c0)))AND(t2.c0))) NOTNULL)) ORDER BY NULL  NULLS FIRST, 0.6315932178782151  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')OR(v0.c0)))AND(t2.c0))) NOTNULL)) IS TRUE)  as count FROM t2, vt0, v0 ORDER BY NULL  NULLS FIRST, 0.6315932178782151  NULLS FIRST);
SELECT ALL * FROM t2, vt0, v0 WHERE (((((((x'')OR(v0.c0)))AND(t2.c0))) NOTNULL)) ORDER BY NULL  NULLS FIRST, 0.6315932178782151  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')OR(v0.c0)))AND(t2.c0))) NOTNULL)) IS TRUE)  as count FROM t2, vt0, v0 ORDER BY NULL  NULLS FIRST, 0.6315932178782151  NULLS FIRST);
SELECT ALL * FROM t2, vt0, v0 WHERE (((((((x'')OR(v0.c0)))AND(t2.c0))) NOTNULL)) ORDER BY NULL  NULLS FIRST, 0.6315932178782151  NULLS FIRST;
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)<=(v0.c0))) ORDER BY (((v0.c0))<((v0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)<=(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0))<((v0.c0))) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)<=(v0.c0))) ORDER BY (((v0.c0))<((v0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)<=(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0))<((v0.c0))) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)<=(v0.c0))) ORDER BY (((v0.c0))<((v0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (t0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) IS TRUE));
SELECT * FROM vt0 INNER JOIN v0 ON CASE WHEN (x'bf34' IN ()) THEN v0.c0 WHEN v0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((v0.c0)<=(v0.c0)) ELSE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END WHERE ((- ((((vt0.c0))>((v0.c0)))))) ORDER BY (+ (((((vt0.c0)AND(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))>((v0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN (x'bf34' IN ()) THEN v0.c0 WHEN v0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((v0.c0)<=(v0.c0)) ELSE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ORDER BY (+ (((((vt0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT * FROM vt0 INNER JOIN v0 ON CASE WHEN (x'bf34' IN ()) THEN v0.c0 WHEN v0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((v0.c0)<=(v0.c0)) ELSE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END WHERE ((- ((((vt0.c0))>((v0.c0)))))) ORDER BY (+ (((((vt0.c0)AND(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))>((v0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN (x'bf34' IN ()) THEN v0.c0 WHEN v0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((v0.c0)<=(v0.c0)) ELSE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ORDER BY (+ (((((vt0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT * FROM vt0 INNER JOIN v0 ON CASE WHEN (x'bf34' IN ()) THEN v0.c0 WHEN v0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((vt0.c0) IS FALSE) THEN ((v0.c0)<=(v0.c0)) ELSE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END WHERE ((- ((((vt0.c0))>((v0.c0)))))) ORDER BY (+ (((((vt0.c0)AND(v0.c0)))AND(v0.c0))));
SELECT ALL COUNT(*) FROM t2, vt0, t0 WHERE (((t0.c1) BETWEEN (t0.c1) AND (t0.c1)) COLLATE NOCASE) ORDER BY ((t2.c0)*(t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (t0.c1) AND (t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY ((t2.c0)*(t0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, vt0, t0 WHERE (((t0.c1) BETWEEN (t0.c1) AND (t0.c1)) COLLATE NOCASE) ORDER BY ((t2.c0)*(t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (t0.c1) AND (t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY ((t2.c0)*(t0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, vt0, t0 WHERE (((t0.c1) BETWEEN (t0.c1) AND (t0.c1)) COLLATE NOCASE) ORDER BY ((t2.c0)*(t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c2 AS INTEGER) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS INTEGER) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c2 AS INTEGER) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS INTEGER) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c2 AS INTEGER) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (LIKELY(((((((((-1729835049)AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((((((-1729835049)AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (LIKELY(((((((((-1729835049)AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((((((-1729835049)AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (LIKELY(((((((((-1729835049)AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1))));
SELECT ALL * FROM t2, vt0, v0 WHERE (UNLIKELY(CAST(v0.c0 AS INTEGER))) ORDER BY (((NOT (vt0.c0)))<<(((v0.c0)/(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM t2, vt0, v0 ORDER BY (((NOT (vt0.c0)))<<(((v0.c0)/(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t2, vt0, v0 WHERE (UNLIKELY(CAST(v0.c0 AS INTEGER))) ORDER BY (((NOT (vt0.c0)))<<(((v0.c0)/(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM t2, vt0, v0 ORDER BY (((NOT (vt0.c0)))<<(((v0.c0)/(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t2, vt0, v0 WHERE (UNLIKELY(CAST(v0.c0 AS INTEGER))) ORDER BY (((NOT (vt0.c0)))<<(((v0.c0)/(v0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t2 LEFT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (v0.c0))) AND (t2.c0 COLLATE RTRIM)) WHERE ((((t0.c1, t0.c2, t0.c1)) BETWEEN ((((t0.c2) ISNULL), ((((t2.c0)AND(x'6c73')))AND(v0.c0)), ((t0.c0) ISNULL))) AND (((((t2.c0, v0.c0, t0.c1))<>((t0.c1, v0.c0, t0.c0))), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), t0.c2)))) ORDER BY t0.c0 ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((((((t0.c1)OR(t2.c0)))AND(t0.c0)))) AND ((UPPER(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c2, t0.c1)) BETWEEN ((((t0.c2) ISNULL), ((((t2.c0)AND(x'6c73')))AND(v0.c0)), ((t0.c0) ISNULL))) AND (((((t2.c0, v0.c0, t0.c1))<>((t0.c1, v0.c0, t0.c0))), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), t0.c2)))) IS TRUE)  as count FROM t0, t2 LEFT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (v0.c0))) AND (t2.c0 COLLATE RTRIM)) ORDER BY t0.c0 ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((((((t0.c1)OR(t2.c0)))AND(t0.c0)))) AND ((UPPER(t0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, t2 LEFT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (v0.c0))) AND (t2.c0 COLLATE RTRIM)) WHERE ((((t0.c1, t0.c2, t0.c1)) BETWEEN ((((t0.c2) ISNULL), ((((t2.c0)AND(x'6c73')))AND(v0.c0)), ((t0.c0) ISNULL))) AND (((((t2.c0, v0.c0, t0.c1))<>((t0.c1, v0.c0, t0.c0))), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), t0.c2)))) ORDER BY t0.c0 ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((((((t0.c1)OR(t2.c0)))AND(t0.c0)))) AND ((UPPER(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c2, t0.c1)) BETWEEN ((((t0.c2) ISNULL), ((((t2.c0)AND(x'6c73')))AND(v0.c0)), ((t0.c0) ISNULL))) AND (((((t2.c0, v0.c0, t0.c1))<>((t0.c1, v0.c0, t0.c0))), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), t0.c2)))) IS TRUE)  as count FROM t0, t2 LEFT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (v0.c0))) AND (t2.c0 COLLATE RTRIM)) ORDER BY t0.c0 ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((((((t0.c1)OR(t2.c0)))AND(t0.c0)))) AND ((UPPER(t0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, t2 LEFT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (v0.c0))) AND (t2.c0 COLLATE RTRIM)) WHERE ((((t0.c1, t0.c2, t0.c1)) BETWEEN ((((t0.c2) ISNULL), ((((t2.c0)AND(x'6c73')))AND(v0.c0)), ((t0.c0) ISNULL))) AND (((((t2.c0, v0.c0, t0.c1))<>((t0.c1, v0.c0, t0.c0))), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), t0.c2)))) ORDER BY t0.c0 ASC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((((((t0.c1)OR(t2.c0)))AND(t0.c0)))) AND ((UPPER(t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((('855203808') BETWEEN (IFNULL(t0.c1, '1203529754')) AND (x''))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('855203808') BETWEEN (IFNULL(t0.c1, '1203529754')) AND (x''))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((('855203808') BETWEEN (IFNULL(t0.c1, '1203529754')) AND (x''))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('855203808') BETWEEN (IFNULL(t0.c1, '1203529754')) AND (x''))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((('855203808') BETWEEN (IFNULL(t0.c1, '1203529754')) AND (x''))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c2 COLLATE NOCASE)/(CAST(t0.c0 AS BLOB))) LEFT OUTER JOIN t2 ON CASE ((t0.c2) NOT BETWEEN (NULL) AND (t0.c1))  WHEN ((((((((v0.c0)OR(v0.c0)))AND(t2.c0)))OR(v0.c0)))AND(t2.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) END WHERE (((CAST(t0.c0 AS REAL))<>(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL))<>(t0.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c2 COLLATE NOCASE)/(CAST(t0.c0 AS BLOB))) LEFT OUTER JOIN t2 ON CASE ((t0.c2) NOT BETWEEN (NULL) AND (t0.c1))  WHEN ((((((((v0.c0)OR(v0.c0)))AND(t2.c0)))OR(v0.c0)))AND(t2.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c2 COLLATE NOCASE)/(CAST(t0.c0 AS BLOB))) LEFT OUTER JOIN t2 ON CASE ((t0.c2) NOT BETWEEN (NULL) AND (t0.c1))  WHEN ((((((((v0.c0)OR(v0.c0)))AND(t2.c0)))OR(v0.c0)))AND(t2.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) END WHERE (((CAST(t0.c0 AS REAL))<>(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL))<>(t0.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c2 COLLATE NOCASE)/(CAST(t0.c0 AS BLOB))) LEFT OUTER JOIN t2 ON CASE ((t0.c2) NOT BETWEEN (NULL) AND (t0.c1))  WHEN ((((((((v0.c0)OR(v0.c0)))AND(t2.c0)))OR(v0.c0)))AND(t2.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c2 COLLATE NOCASE)/(CAST(t0.c0 AS BLOB))) LEFT OUTER JOIN t2 ON CASE ((t0.c2) NOT BETWEEN (NULL) AND (t0.c1))  WHEN ((((((((v0.c0)OR(v0.c0)))AND(t2.c0)))OR(v0.c0)))AND(t2.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) END WHERE (((CAST(t0.c0 AS REAL))<>(t0.c0)));
SELECT * FROM vt0, t2, t0 WHERE (9.60610475E8);
SELECT SUM(count) FROM (SELECT ((9.60610475E8) IS TRUE)  as count FROM vt0, t2, t0);
SELECT * FROM vt0, t2, t0 WHERE (9.60610475E8);
SELECT SUM(count) FROM (SELECT ((9.60610475E8) IS TRUE)  as count FROM vt0, t2, t0);
SELECT * FROM vt0, t2, t0 WHERE (9.60610475E8);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((- (0.7560340930410839))) ORDER BY (vt0.c0 IN (v0.c0, (((t0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC, x'7cb0' DESC  NULLS FIRST, (((CAST(x'' AS TEXT)))>=((NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((- (0.7560340930410839))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (vt0.c0 IN (v0.c0, (((t0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC, x'7cb0' DESC  NULLS FIRST, (((CAST(x'' AS TEXT)))>=((NULL))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((- (0.7560340930410839))) ORDER BY (vt0.c0 IN (v0.c0, (((t0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC, x'7cb0' DESC  NULLS FIRST, (((CAST(x'' AS TEXT)))>=((NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((- (0.7560340930410839))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (vt0.c0 IN (v0.c0, (((t0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC, x'7cb0' DESC  NULLS FIRST, (((CAST(x'' AS TEXT)))>=((NULL))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((- (0.7560340930410839))) ORDER BY (vt0.c0 IN (v0.c0, (((t0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC, x'7cb0' DESC  NULLS FIRST, (((CAST(x'' AS TEXT)))>=((NULL))) ASC;
SELECT ALL COUNT(*) FROM t0, v0, t2 WHERE ((((~ (t2.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((~ (t2.c0))) NOTNULL)) IS TRUE)  as count FROM t0, v0, t2);
SELECT ALL COUNT(*) FROM t0, v0, t2 WHERE ((((~ (t2.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((~ (t2.c0))) NOTNULL)) IS TRUE)  as count FROM t0, v0, t2);
SELECT ALL COUNT(*) FROM t0, v0, t2 WHERE ((((~ (t2.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)>=(v0.c0))) AND (((((v0.c0)AND(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)>=(v0.c0))) AND (((((v0.c0)AND(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)>=(v0.c0))) AND (((((v0.c0)AND(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)>=(v0.c0))) AND (((((v0.c0)AND(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)>=(v0.c0))) AND (((((v0.c0)AND(v0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0, t0, v0, t2 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0, v0, t2);
SELECT * FROM vt0, t0, v0, t2 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0, v0, t2);
SELECT * FROM vt0, t0, v0, t2 WHERE (t0.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST(CASE WHEN t0.c2 THEN t0.c1 ELSE vt0.c0 END AS TEXT) FULL OUTER JOIN t2 ON ((NULL)-(t0.c2 COLLATE NOCASE)) FULL OUTER JOIN t0 ON (t0.c1 IN (CAST(v0.c0 AS INTEGER))) WHERE (26516968);
SELECT SUM(count) FROM (SELECT ((26516968) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(CASE WHEN t0.c2 THEN t0.c1 ELSE vt0.c0 END AS TEXT) FULL OUTER JOIN t2 ON ((NULL)-(t0.c2 COLLATE NOCASE)) FULL OUTER JOIN t0 ON (t0.c1 IN (CAST(v0.c0 AS INTEGER))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST(CASE WHEN t0.c2 THEN t0.c1 ELSE vt0.c0 END AS TEXT) FULL OUTER JOIN t2 ON ((NULL)-(t0.c2 COLLATE NOCASE)) FULL OUTER JOIN t0 ON (t0.c1 IN (CAST(v0.c0 AS INTEGER))) WHERE (26516968);
SELECT SUM(count) FROM (SELECT ((26516968) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(CASE WHEN t0.c2 THEN t0.c1 ELSE vt0.c0 END AS TEXT) FULL OUTER JOIN t2 ON ((NULL)-(t0.c2 COLLATE NOCASE)) FULL OUTER JOIN t0 ON (t0.c1 IN (CAST(v0.c0 AS INTEGER))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (x'')))-(CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((CAST(t0.c0 AS REAL)) IS FALSE), ((t0.c1) NOT BETWEEN (NULL) AND (t0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x'')))-(CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c0 AS REAL)) IS FALSE), ((t0.c1) NOT BETWEEN (NULL) AND (t0.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (x'')))-(CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((CAST(t0.c0 AS REAL)) IS FALSE), ((t0.c1) NOT BETWEEN (NULL) AND (t0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x'')))-(CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c0 AS REAL)) IS FALSE), ((t0.c1) NOT BETWEEN (NULL) AND (t0.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (x'')))-(CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((CAST(t0.c0 AS REAL)) IS FALSE), ((t0.c1) NOT BETWEEN (NULL) AND (t0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE (((t0.c2 COLLATE NOCASE)|((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (+ (((((vt0.c0)OR(t0.c0)))AND(t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE NOCASE)|((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t2 NOT INDEXED, t0, vt0 ORDER BY (+ (((((vt0.c0)OR(t0.c0)))AND(t0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE (((t0.c2 COLLATE NOCASE)|((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (+ (((((vt0.c0)OR(t0.c0)))AND(t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE NOCASE)|((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t2 NOT INDEXED, t0, vt0 ORDER BY (+ (((((vt0.c0)OR(t0.c0)))AND(t0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE (((t0.c2 COLLATE NOCASE)|((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (+ (((((vt0.c0)OR(t0.c0)))AND(t0.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((0.4144104523188451)AND((vt0.c0 IN ()))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c0))!=((vt0.c0))))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((0.4144104523188451)AND((vt0.c0 IN ()))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c0))!=((vt0.c0))))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((0.4144104523188451)AND((vt0.c0 IN ()))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c0))!=((vt0.c0))))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((0.4144104523188451)AND((vt0.c0 IN ()))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c0))!=((vt0.c0))))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((0.4144104523188451)AND((vt0.c0 IN ()))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c0))!=((vt0.c0))))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS TEXT) END) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC, 0Xffffffff9b14fbe3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC, 0xffffffff9b14fbe3  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS TEXT) END) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC, 0Xffffffff9b14fbe3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC, 0xffffffff9b14fbe3  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS TEXT) END) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC, 0Xffffffff9b14fbe3  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0, t2, t0 WHERE (((- (v0.c0)) IN (((t2.c0) NOTNULL), ((t2.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((- (v0.c0)) IN (((t2.c0) NOTNULL), ((t2.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, t2, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t2, t0 WHERE (((- (v0.c0)) IN (((t2.c0) NOTNULL), ((t2.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((- (v0.c0)) IN (((t2.c0) NOTNULL), ((t2.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, t2, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t2, t0 WHERE (((- (v0.c0)) IN (((t2.c0) NOTNULL), ((t2.c0) NOT NULL))));
SELECT * FROM v0, t0, vt0 WHERE ('855203808');
SELECT SUM(count) FROM (SELECT ALL (('855203808') IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ('855203808');
SELECT SUM(count) FROM (SELECT ALL (('855203808') IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ('855203808');
SELECT ALL COUNT(*) FROM v0, t0, vt0, t2 WHERE ((((t2.c0 IN (v0.c0))) NOT BETWEEN (t2.c0 COLLATE NOCASE) AND (((t2.c0)<>(vt0.c0))))) ORDER BY -1.534874111E9, ((((((((((t0.c1) IS FALSE))OR(((vt0.c0)=(t2.c0)))))OR(((t0.c1)+(t0.c1)))))AND(((t0.c0)OR(t0.c2)))))OR(COALESCE(t0.c0, t0.c0, t2.c0, t0.c1)))  NULLS LAST, (((t0.c1, vt0.c0, t2.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM, ((t2.c0) ISNULL), ((t0.c0) IS TRUE))) AND (((vt0.c0 IN ('672149955', t0.c2)), (vt0.c0 IN (t0.c0)), -1.073883445E9)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0 IN (v0.c0))) NOT BETWEEN (t2.c0 COLLATE NOCASE) AND (((t2.c0)<>(vt0.c0))))) IS TRUE)  as count FROM v0, t0, vt0, t2 ORDER BY -1.534874111E9, ((((((((((t0.c1) IS FALSE))OR(((vt0.c0)=(t2.c0)))))OR(((t0.c1)+(t0.c1)))))AND(((t0.c0)OR(t0.c2)))))OR(COALESCE(t0.c0, t0.c0, t2.c0, t0.c1)))  NULLS LAST, (((t0.c1, vt0.c0, t2.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM, ((t2.c0) ISNULL), ((t0.c0) IS TRUE))) AND (((vt0.c0 IN ('672149955', t0.c2)), (vt0.c0 IN (t0.c0)), -1.073883445E9)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0, t2 WHERE ((((t2.c0 IN (v0.c0))) NOT BETWEEN (t2.c0 COLLATE NOCASE) AND (((t2.c0)<>(vt0.c0))))) ORDER BY -1.534874111E9, ((((((((((t0.c1) IS FALSE))OR(((vt0.c0)=(t2.c0)))))OR(((t0.c1)+(t0.c1)))))AND(((t0.c0)OR(t0.c2)))))OR(COALESCE(t0.c0, t0.c0, t2.c0, t0.c1)))  NULLS LAST, (((t0.c1, vt0.c0, t2.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM, ((t2.c0) ISNULL), ((t0.c0) IS TRUE))) AND (((vt0.c0 IN ('672149955', t0.c2)), (vt0.c0 IN (t0.c0)), -1.073883445E9)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0 IN (v0.c0))) NOT BETWEEN (t2.c0 COLLATE NOCASE) AND (((t2.c0)<>(vt0.c0))))) IS TRUE)  as count FROM v0, t0, vt0, t2 ORDER BY -1.534874111E9, ((((((((((t0.c1) IS FALSE))OR(((vt0.c0)=(t2.c0)))))OR(((t0.c1)+(t0.c1)))))AND(((t0.c0)OR(t0.c2)))))OR(COALESCE(t0.c0, t0.c0, t2.c0, t0.c1)))  NULLS LAST, (((t0.c1, vt0.c0, t2.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM, ((t2.c0) ISNULL), ((t0.c0) IS TRUE))) AND (((vt0.c0 IN ('672149955', t0.c2)), (vt0.c0 IN (t0.c0)), -1.073883445E9)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0, t2 WHERE ((((t2.c0 IN (v0.c0))) NOT BETWEEN (t2.c0 COLLATE NOCASE) AND (((t2.c0)<>(vt0.c0))))) ORDER BY -1.534874111E9, ((((((((((t0.c1) IS FALSE))OR(((vt0.c0)=(t2.c0)))))OR(((t0.c1)+(t0.c1)))))AND(((t0.c0)OR(t0.c2)))))OR(COALESCE(t0.c0, t0.c0, t2.c0, t0.c1)))  NULLS LAST, (((t0.c1, vt0.c0, t2.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM, ((t2.c0) ISNULL), ((t0.c0) IS TRUE))) AND (((vt0.c0 IN ('672149955', t0.c2)), (vt0.c0 IN (t0.c0)), -1.073883445E9)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((+ (vt0.c0)) IN ()) WHERE (((-329876488)<>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY CAST((((v0.c0))<=((v0.c0))) AS NUMERIC), ((((v0.c0) BETWEEN (x'') AND (NULL))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((-329876488)!=(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((+ (vt0.c0)) IN ()) ORDER BY CAST((((v0.c0))<=((v0.c0))) AS NUMERIC), ((((v0.c0) BETWEEN (x'') AND (NULL))) NOT NULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((+ (vt0.c0)) IN ()) WHERE (((-329876488)<>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY CAST((((v0.c0))<=((v0.c0))) AS NUMERIC), ((((v0.c0) BETWEEN (x'') AND (NULL))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((-329876488)!=(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((+ (vt0.c0)) IN ()) ORDER BY CAST((((v0.c0))<=((v0.c0))) AS NUMERIC), ((((v0.c0) BETWEEN (x'') AND (NULL))) NOT NULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((+ (vt0.c0)) IN ()) WHERE (((-329876488)<>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY CAST((((v0.c0))<=((v0.c0))) AS NUMERIC), ((((v0.c0) BETWEEN (x'') AND (NULL))) NOT NULL);
SELECT ALL * FROM v0, t0 FULL OUTER JOIN t2 ON ((CAST(t0.c1 AS REAL))LIKE(0.25810398688282643)) WHERE (CASE ((t0.c0)/(t2.c0))  WHEN t0.c1 THEN ((t0.c1) IS TRUE) WHEN ((((t0.c0)OR(t2.c0)))OR(t0.c2)) THEN SUBSTR(t2.c0, NULL) WHEN (t0.c1 IN ()) THEN ((t0.c0)+(t0.c2)) ELSE ((t0.c0)LIKE(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)/(t2.c0))  WHEN t0.c1 THEN ((t0.c1) IS TRUE) WHEN ((((t0.c0)OR(t2.c0)))OR(t0.c2)) THEN SUBSTR(t2.c0, NULL) WHEN (t0.c1 IN ()) THEN ((t0.c0)+(t0.c2)) ELSE ((t0.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN t2 ON ((CAST(t0.c1 AS REAL))LIKE(0.25810398688282643)));
SELECT ALL * FROM v0, t0 FULL OUTER JOIN t2 ON ((CAST(t0.c1 AS REAL))LIKE(0.25810398688282643)) WHERE (CASE ((t0.c0)/(t2.c0))  WHEN t0.c1 THEN ((t0.c1) IS TRUE) WHEN ((((t0.c0)OR(t2.c0)))OR(t0.c2)) THEN SUBSTR(t2.c0, NULL) WHEN (t0.c1 IN ()) THEN ((t0.c0)+(t0.c2)) ELSE ((t0.c0)LIKE(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)/(t2.c0))  WHEN t0.c1 THEN ((t0.c1) IS TRUE) WHEN ((((t0.c0)OR(t2.c0)))OR(t0.c2)) THEN SUBSTR(t2.c0, NULL) WHEN (t0.c1 IN ()) THEN ((t0.c0)+(t0.c2)) ELSE ((t0.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN t2 ON ((CAST(t0.c1 AS REAL))LIKE(0.25810398688282643)));
SELECT ALL * FROM v0, t0 FULL OUTER JOIN t2 ON ((CAST(t0.c1 AS REAL))LIKE(0.25810398688282643)) WHERE (CASE ((t0.c0)/(t2.c0))  WHEN t0.c1 THEN ((t0.c1) IS TRUE) WHEN ((((t0.c0)OR(t2.c0)))OR(t0.c2)) THEN SUBSTR(t2.c0, NULL) WHEN (t0.c1 IN ()) THEN ((t0.c0)+(t0.c2)) ELSE ((t0.c0)LIKE(v0.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt0, t0, t2 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS FALSE) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0, t2 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, vt0, t0, t2 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS FALSE) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0, t2 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, vt0, t0, t2 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE COLLATE BINARY);
SELECT ALL COUNT(*) FROM t2, vt0 NATURAL JOIN v0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t2, vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t2, vt0 NATURAL JOIN v0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t2, vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t2, vt0 NATURAL JOIN v0 WHERE (((- (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0, t2, v0 WHERE (((((t0.c1)GLOB(vt0.c0))) BETWEEN (((t0.c1)<>(t0.c2))) AND (((v0.c0) BETWEEN (t0.c2) AND (v0.c0))))) ORDER BY CAST((t0.c0 IN (t0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)GLOB(vt0.c0))) BETWEEN (((t0.c1)!=(t0.c2))) AND (((v0.c0) BETWEEN (t0.c2) AND (v0.c0))))) IS TRUE)  as count FROM t0, vt0, t2, v0 ORDER BY CAST((t0.c0 IN (t0.c2)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, t2, v0 WHERE (((((t0.c1)GLOB(vt0.c0))) BETWEEN (((t0.c1)<>(t0.c2))) AND (((v0.c0) BETWEEN (t0.c2) AND (v0.c0))))) ORDER BY CAST((t0.c0 IN (t0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)GLOB(vt0.c0))) BETWEEN (((t0.c1)!=(t0.c2))) AND (((v0.c0) BETWEEN (t0.c2) AND (v0.c0))))) IS TRUE)  as count FROM t0, vt0, t2, v0 ORDER BY CAST((t0.c0 IN (t0.c2)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, t2, v0 WHERE (((((t0.c1)GLOB(vt0.c0))) BETWEEN (((t0.c1)<>(t0.c2))) AND (((v0.c0) BETWEEN (t0.c2) AND (v0.c0))))) ORDER BY CAST((t0.c0 IN (t0.c2)) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (HEX(((t0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c0) NOTNULL))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (HEX(((t0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c0) NOTNULL))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (HEX(((t0.c0) NOTNULL)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t2 ON ((((((t2.c0)OR(t2.c0)))AND(t2.c0)))<<(((0x269c7314) NOTNULL))) INNER JOIN v0 ON t2.c0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((((((t2.c0)AND(t2.c0)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0))))) ORDER BY (('o%e<悋J~\>') NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(vt0.c0))) AND (CASE WHEN vt0.c0 THEN v0.c0 ELSE t2.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((((((t2.c0)AND(t2.c0)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t2 ON ((((((t2.c0)OR(t2.c0)))AND(t2.c0)))<<(((0X269c7314) NOTNULL))) INNER JOIN v0 ON t2.c0 ORDER BY (('o%e<悋J~\>') NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(vt0.c0))) AND (CASE WHEN vt0.c0 THEN v0.c0 ELSE t2.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t2 ON ((((((t2.c0)OR(t2.c0)))AND(t2.c0)))<<(((0x269c7314) NOTNULL))) INNER JOIN v0 ON t2.c0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((((((t2.c0)AND(t2.c0)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0))))) ORDER BY (('o%e<悋J~\>') NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(vt0.c0))) AND (CASE WHEN vt0.c0 THEN v0.c0 ELSE t2.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((((((t2.c0)AND(t2.c0)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t2 ON ((((((t2.c0)OR(t2.c0)))AND(t2.c0)))<<(((0X269c7314) NOTNULL))) INNER JOIN v0 ON t2.c0 ORDER BY (('o%e<悋J~\>') NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(vt0.c0))) AND (CASE WHEN vt0.c0 THEN v0.c0 ELSE t2.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t2 ON ((((((t2.c0)OR(t2.c0)))AND(t2.c0)))<<(((0x269c7314) NOTNULL))) INNER JOIN v0 ON t2.c0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((((((t2.c0)AND(t2.c0)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0))))) ORDER BY (('o%e<悋J~\>') NOT BETWEEN (((((v0.c0)OR(v0.c0)))AND(vt0.c0))) AND (CASE WHEN vt0.c0 THEN v0.c0 ELSE t2.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0)OR(t0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)OR(t0.c1)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0)OR(t0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)OR(t0.c1)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0)OR(t0.c1)) AS TEXT));
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c0)>(t0.c2)) IN ())) ORDER BY CASE WHEN CASE '-964645697'  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)>(t0.c2)) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN CASE '-964645697'  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 END  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c0)>(t0.c2)) IN ())) ORDER BY CASE WHEN CASE '-964645697'  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)>(t0.c2)) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN CASE '-964645697'  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 END  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c0)>(t0.c2)) IN ())) ORDER BY CASE WHEN CASE '-964645697'  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 END  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN (((t0.c0, t0.c1, t0.c2)) BETWEEN ((NULL, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c2))) END) ORDER BY LIKELIHOOD(((t0.c1)AND(t0.c2)), 0.10317538041123642) ASC, CASE WHEN COALESCE(DISTINCT t0.c0, t0.c2) THEN CAST(t0.c0 AS REAL) WHEN ((((t0.c0)AND(t0.c2)))OR(t0.c2)) THEN t0.c1 WHEN '\r)' THEN t0.c0 COLLATE NOCASE ELSE (~ (t0.c2)) END DESC  NULLS FIRST, CASE WHEN ((t0.c2)<>(t0.c0)) THEN TYPEOF(DISTINCT t0.c0) WHEN ((t0.c0)*(t0.c1)) THEN ((((t0.c0)AND(t0.c2)))OR('3*')) WHEN ((t0.c1)|(t0.c1)) THEN CAST(t0.c0 AS NUMERIC) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) NOTNULL) THEN (((t0.c0, t0.c1, t0.c2)) BETWEEN ((NULL, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c2))) END) IS TRUE)  as count FROM t0 ORDER BY LIKELIHOOD(((t0.c1)AND(t0.c2)), 0.10317538041123642) ASC, CASE WHEN COALESCE(DISTINCT t0.c0, t0.c2) THEN CAST(t0.c0 AS REAL) WHEN ((((t0.c0)AND(t0.c2)))OR(t0.c2)) THEN t0.c1 WHEN '\r)' THEN t0.c0 COLLATE NOCASE ELSE (~ (t0.c2)) END DESC  NULLS FIRST, CASE WHEN ((t0.c2)<>(t0.c0)) THEN TYPEOF(DISTINCT t0.c0) WHEN ((t0.c0)*(t0.c1)) THEN ((((t0.c0)AND(t0.c2)))OR('3*')) WHEN ((t0.c1)|(t0.c1)) THEN CAST(t0.c0 AS NUMERIC) END DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN (((t0.c0, t0.c1, t0.c2)) BETWEEN ((NULL, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c2))) END) ORDER BY LIKELIHOOD(((t0.c1)AND(t0.c2)), 0.10317538041123642) ASC, CASE WHEN COALESCE(DISTINCT t0.c0, t0.c2) THEN CAST(t0.c0 AS REAL) WHEN ((((t0.c0)AND(t0.c2)))OR(t0.c2)) THEN t0.c1 WHEN '\r)' THEN t0.c0 COLLATE NOCASE ELSE (~ (t0.c2)) END DESC  NULLS FIRST, CASE WHEN ((t0.c2)<>(t0.c0)) THEN TYPEOF(DISTINCT t0.c0) WHEN ((t0.c0)*(t0.c1)) THEN ((((t0.c0)AND(t0.c2)))OR('3*')) WHEN ((t0.c1)|(t0.c1)) THEN CAST(t0.c0 AS NUMERIC) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) NOTNULL) THEN (((t0.c0, t0.c1, t0.c2)) BETWEEN ((NULL, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c2))) END) IS TRUE)  as count FROM t0 ORDER BY LIKELIHOOD(((t0.c1)AND(t0.c2)), 0.10317538041123642) ASC, CASE WHEN COALESCE(DISTINCT t0.c0, t0.c2) THEN CAST(t0.c0 AS REAL) WHEN ((((t0.c0)AND(t0.c2)))OR(t0.c2)) THEN t0.c1 WHEN '\r)' THEN t0.c0 COLLATE NOCASE ELSE (~ (t0.c2)) END DESC  NULLS FIRST, CASE WHEN ((t0.c2)<>(t0.c0)) THEN TYPEOF(DISTINCT t0.c0) WHEN ((t0.c0)*(t0.c1)) THEN ((((t0.c0)AND(t0.c2)))OR('3*')) WHEN ((t0.c1)|(t0.c1)) THEN CAST(t0.c0 AS NUMERIC) END DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN (((t0.c0, t0.c1, t0.c2)) BETWEEN ((NULL, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c2))) END) ORDER BY LIKELIHOOD(((t0.c1)AND(t0.c2)), 0.10317538041123642) ASC, CASE WHEN COALESCE(DISTINCT t0.c0, t0.c2) THEN CAST(t0.c0 AS REAL) WHEN ((((t0.c0)AND(t0.c2)))OR(t0.c2)) THEN t0.c1 WHEN '\r)' THEN t0.c0 COLLATE NOCASE ELSE (~ (t0.c2)) END DESC  NULLS FIRST, CASE WHEN ((t0.c2)<>(t0.c0)) THEN TYPEOF(DISTINCT t0.c0) WHEN ((t0.c0)*(t0.c1)) THEN ((((t0.c0)AND(t0.c2)))OR('3*')) WHEN ((t0.c1)|(t0.c1)) THEN CAST(t0.c0 AS NUMERIC) END DESC;
SELECT ALL COUNT(*) FROM t2 WHERE (t2.c0) ORDER BY CASE WHEN COALESCE(NULL, t2.c0) THEN t2.c0 COLLATE BINARY ELSE ((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(t2.c0)) END DESC, ((((t2.c0)<('-534634952')))*('2e'))  NULLS LAST, ((((t2.c0)GLOB(t2.c0))) NOT BETWEEN (UPPER(DISTINCT t2.c0)) AND ((('pWY3 ')AND(0x6bde5ed1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM t2 ORDER BY CASE WHEN COALESCE(NULL, t2.c0) THEN t2.c0 COLLATE BINARY ELSE ((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(t2.c0)) END DESC, ((((t2.c0)<('-534634952')))*('2e'))  NULLS LAST, ((((t2.c0)GLOB(t2.c0))) NOT BETWEEN (UPPER(DISTINCT t2.c0)) AND ((('pWY3 ')AND(0x6bde5ed1)))) DESC);
SELECT ALL COUNT(*) FROM t2 WHERE (t2.c0) ORDER BY CASE WHEN COALESCE(NULL, t2.c0) THEN t2.c0 COLLATE BINARY ELSE ((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(t2.c0)) END DESC, ((((t2.c0)<('-534634952')))*('2e'))  NULLS LAST, ((((t2.c0)GLOB(t2.c0))) NOT BETWEEN (UPPER(DISTINCT t2.c0)) AND ((('pWY3 ')AND(0x6bde5ed1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM t2 ORDER BY CASE WHEN COALESCE(NULL, t2.c0) THEN t2.c0 COLLATE BINARY ELSE ((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(t2.c0)) END DESC, ((((t2.c0)<('-534634952')))*('2e'))  NULLS LAST, ((((t2.c0)GLOB(t2.c0))) NOT BETWEEN (UPPER(DISTINCT t2.c0)) AND ((('pWY3 ')AND(0x6bde5ed1)))) DESC);
SELECT ALL COUNT(*) FROM t2 WHERE (t2.c0) ORDER BY CASE WHEN COALESCE(NULL, t2.c0) THEN t2.c0 COLLATE BINARY ELSE ((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(t2.c0)) END DESC, ((((t2.c0)<('-534634952')))*('2e'))  NULLS LAST, ((((t2.c0)GLOB(t2.c0))) NOT BETWEEN (UPPER(DISTINCT t2.c0)) AND ((('pWY3 ')AND(0x6bde5ed1)))) DESC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((~ (t2.c0))))<>(((+ (t0.c2))))) RIGHT OUTER JOIN v0 ON t0.c0 CROSS JOIN t2 ON ((v0.c0 IN ()) IN ()) WHERE (((((t0.c1 COLLATE NOCASE)OR((v0.c0 IN ()))))OR((~ (vt0.c0))))) ORDER BY 374927485 DESC  NULLS LAST, ABS(DISTINCT ((t0.c0)-(t0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1 COLLATE NOCASE)OR((v0.c0 IN ()))))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((~ (t2.c0))))<>(((+ (t0.c2))))) RIGHT OUTER JOIN v0 ON t0.c0 CROSS JOIN t2 ON ((v0.c0 IN ()) IN ()) ORDER BY 374927485 DESC  NULLS LAST, ABS(DISTINCT ((t0.c0)-(t0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((((~ (t2.c0))))<>(((+ (t0.c2))))) RIGHT OUTER JOIN v0 ON t0.c0 CROSS JOIN t2 ON ((v0.c0 IN ()) IN ()) WHERE (((((t0.c1 COLLATE NOCASE)OR((v0.c0 IN ()))))OR((~ (vt0.c0))))) ORDER BY 374927485 DESC  NULLS LAST, ABS(DISTINCT ((t0.c0)-(t0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1 COLLATE NOCASE)OR((v0.c0 IN ()))))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((~ (t2.c0))))<>(((+ (t0.c2))))) RIGHT OUTER JOIN v0 ON t0.c0 CROSS JOIN t2 ON ((v0.c0 IN ()) IN ()) ORDER BY 374927485 DESC  NULLS LAST, ABS(DISTINCT ((t0.c0)-(t0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON (((('SV') NOT BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (0.01742673102647463 COLLATE RTRIM) AND (CAST(t0.c2 AS REAL))) WHERE ((((t0.c2 IN ()))LIKE(CAST(v0.c0 AS INTEGER)))) ORDER BY (((v0.c0)) NOT BETWEEN ((((((vt0.c0)AND(t0.c0)))AND(t0.c1)))) AND ((v0.c0 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))LIKE(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON (((('SV') NOT BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (0.01742673102647463 COLLATE RTRIM) AND (CAST(t0.c2 AS REAL))) ORDER BY (((v0.c0)) NOT BETWEEN ((((((vt0.c0)AND(t0.c0)))AND(t0.c1)))) AND ((v0.c0 COLLATE BINARY)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON (((('SV') NOT BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (0.01742673102647463 COLLATE RTRIM) AND (CAST(t0.c2 AS REAL))) WHERE ((((t0.c2 IN ()))LIKE(CAST(v0.c0 AS INTEGER)))) ORDER BY (((v0.c0)) NOT BETWEEN ((((((vt0.c0)AND(t0.c0)))AND(t0.c1)))) AND ((v0.c0 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))LIKE(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON vt0.c0 RIGHT OUTER JOIN vt0 ON (((('SV') NOT BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (0.01742673102647463 COLLATE RTRIM) AND (CAST(t0.c2 AS REAL))) ORDER BY (((v0.c0)) NOT BETWEEN ((((((vt0.c0)AND(t0.c0)))AND(t0.c1)))) AND ((v0.c0 COLLATE BINARY)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (t0.c2) ORDER BY CASE CAST(t0.c1 AS TEXT)  WHEN json(t0.c1) THEN NULL WHEN CAST(t0.c0 AS NUMERIC) THEN (t0.c0 IN ()) WHEN ((t0.c0) NOT NULL) THEN (((t0.c1, t0.c0, t2.c0)) NOT BETWEEN ((t2.c0, t0.c0, t2.c0)) AND ((t0.c0, '', t0.c1))) END  NULLS LAST, ((((t2.c0)LIKE(t0.c0)))>=(((t0.c0)%(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, t2 ORDER BY CASE CAST(t0.c1 AS TEXT)  WHEN json(t0.c1) THEN NULL WHEN CAST(t0.c0 AS NUMERIC) THEN (t0.c0 IN ()) WHEN ((t0.c0) NOT NULL) THEN (((t0.c1, t0.c0, t2.c0)) NOT BETWEEN ((t2.c0, t0.c0, t2.c0)) AND ((t0.c0, '', t0.c1))) END  NULLS LAST, ((((t2.c0)LIKE(t0.c0)))>=(((t0.c0)%(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (t0.c2) ORDER BY CASE CAST(t0.c1 AS TEXT)  WHEN json(t0.c1) THEN NULL WHEN CAST(t0.c0 AS NUMERIC) THEN (t0.c0 IN ()) WHEN ((t0.c0) NOT NULL) THEN (((t0.c1, t0.c0, t2.c0)) NOT BETWEEN ((t2.c0, t0.c0, t2.c0)) AND ((t0.c0, '', t0.c1))) END  NULLS LAST, ((((t2.c0)LIKE(t0.c0)))>=(((t0.c0)%(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, t2 ORDER BY CASE CAST(t0.c1 AS TEXT)  WHEN json(t0.c1) THEN NULL WHEN CAST(t0.c0 AS NUMERIC) THEN (t0.c0 IN ()) WHEN ((t0.c0) NOT NULL) THEN (((t0.c1, t0.c0, t2.c0)) NOT BETWEEN ((t2.c0, t0.c0, t2.c0)) AND ((t0.c0, '', t0.c1))) END  NULLS LAST, ((((t2.c0)LIKE(t0.c0)))>=(((t0.c0)%(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (t0.c2) ORDER BY CASE CAST(t0.c1 AS TEXT)  WHEN json(t0.c1) THEN NULL WHEN CAST(t0.c0 AS NUMERIC) THEN (t0.c0 IN ()) WHEN ((t0.c0) NOT NULL) THEN (((t0.c1, t0.c0, t2.c0)) NOT BETWEEN ((t2.c0, t0.c0, t2.c0)) AND ((t0.c0, '', t0.c1))) END  NULLS LAST, ((((t2.c0)LIKE(t0.c0)))>=(((t0.c0)%(t0.c0))))  NULLS LAST;
SELECT * FROM t2, v0, vt0 WHERE (CAST(((((((((v0.c0)AND(-1.327092465E9)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS INTEGER)) ORDER BY CASE (+ (v0.c0))  WHEN -1384062258 COLLATE BINARY THEN 0.6988002632353678 WHEN ((t2.c0) ISNULL) THEN (((v0.c0, t2.c0, t2.c0))>((vt0.c0, vt0.c0, t2.c0))) WHEN t2.c0 COLLATE RTRIM THEN ((v0.c0) IS TRUE) END DESC, (+ (((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((v0.c0)AND(-1.327092465E9)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM t2, v0, vt0 ORDER BY CASE (+ (v0.c0))  WHEN -1384062258 COLLATE BINARY THEN 0.6988002632353678 WHEN ((t2.c0) ISNULL) THEN (((v0.c0, t2.c0, t2.c0))>((vt0.c0, vt0.c0, t2.c0))) WHEN t2.c0 COLLATE RTRIM THEN ((v0.c0) IS TRUE) END DESC, (+ (((vt0.c0) ISNULL))));
SELECT * FROM t2, v0, vt0 WHERE (CAST(((((((((v0.c0)AND(-1.327092465E9)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS INTEGER)) ORDER BY CASE (+ (v0.c0))  WHEN -1384062258 COLLATE BINARY THEN 0.6988002632353678 WHEN ((t2.c0) ISNULL) THEN (((v0.c0, t2.c0, t2.c0))>((vt0.c0, vt0.c0, t2.c0))) WHEN t2.c0 COLLATE RTRIM THEN ((v0.c0) IS TRUE) END DESC, (+ (((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((v0.c0)AND(-1.327092465E9)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM t2, v0, vt0 ORDER BY CASE (+ (v0.c0))  WHEN -1384062258 COLLATE BINARY THEN 0.6988002632353678 WHEN ((t2.c0) ISNULL) THEN (((v0.c0, t2.c0, t2.c0))>((vt0.c0, vt0.c0, t2.c0))) WHEN t2.c0 COLLATE RTRIM THEN ((v0.c0) IS TRUE) END DESC, (+ (((vt0.c0) ISNULL))));
SELECT * FROM t2, v0, vt0 WHERE (CAST(((((((((v0.c0)AND(-1.327092465E9)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS INTEGER)) ORDER BY CASE (+ (v0.c0))  WHEN -1384062258 COLLATE BINARY THEN 0.6988002632353678 WHEN ((t2.c0) ISNULL) THEN (((v0.c0, t2.c0, t2.c0))>((vt0.c0, vt0.c0, t2.c0))) WHEN t2.c0 COLLATE RTRIM THEN ((v0.c0) IS TRUE) END DESC, (+ (((vt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE ((- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE WHEN ((t0.c1)*(vt0.c0)) THEN (t2.c0 IN ()) WHEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN ((t0.c0)GLOB(vt0.c0)) THEN (t0.c1 IN ()) WHEN vt0.c0 THEN t0.c2 WHEN CASE WHEN vt0.c0 THEN t2.c0 WHEN t2.c0 THEN vt0.c0 WHEN t0.c0 THEN t2.c0 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN vt0.c0 END THEN ((((t0.c1)AND(vt0.c0)))AND(t0.c1)) ELSE t0.c1 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT (((- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY CASE WHEN ((t0.c1)*(vt0.c0)) THEN (t2.c0 IN ()) WHEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN ((t0.c0)GLOB(vt0.c0)) THEN (t0.c1 IN ()) WHEN vt0.c0 THEN t0.c2 WHEN CASE WHEN vt0.c0 THEN t2.c0 WHEN t2.c0 THEN vt0.c0 WHEN t0.c0 THEN t2.c0 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN vt0.c0 END THEN ((((t0.c1)AND(vt0.c0)))AND(t0.c1)) ELSE t0.c1 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE ((- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE WHEN ((t0.c1)*(vt0.c0)) THEN (t2.c0 IN ()) WHEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN ((t0.c0)GLOB(vt0.c0)) THEN (t0.c1 IN ()) WHEN vt0.c0 THEN t0.c2 WHEN CASE WHEN vt0.c0 THEN t2.c0 WHEN t2.c0 THEN vt0.c0 WHEN t0.c0 THEN t2.c0 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN vt0.c0 END THEN ((((t0.c1)AND(vt0.c0)))AND(t0.c1)) ELSE t0.c1 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT (((- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY CASE WHEN ((t0.c1)*(vt0.c0)) THEN (t2.c0 IN ()) WHEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN ((t0.c0)GLOB(vt0.c0)) THEN (t0.c1 IN ()) WHEN vt0.c0 THEN t0.c2 WHEN CASE WHEN vt0.c0 THEN t2.c0 WHEN t2.c0 THEN vt0.c0 WHEN t0.c0 THEN t2.c0 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN vt0.c0 END THEN ((((t0.c1)AND(vt0.c0)))AND(t0.c1)) ELSE t0.c1 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE ((- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE WHEN ((t0.c1)*(vt0.c0)) THEN (t2.c0 IN ()) WHEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN ((t0.c0)GLOB(vt0.c0)) THEN (t0.c1 IN ()) WHEN vt0.c0 THEN t0.c2 WHEN CASE WHEN vt0.c0 THEN t2.c0 WHEN t2.c0 THEN vt0.c0 WHEN t0.c0 THEN t2.c0 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN vt0.c0 END THEN ((((t0.c1)AND(vt0.c0)))AND(t0.c1)) ELSE t0.c1 COLLATE BINARY END;
SELECT * FROM t0 NATURAL JOIN v0 WHERE (x'62c3') ORDER BY ((((CASE WHEN t0.c1 THEN t0.c1 END)OR(((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))))OR(CAST(t0.c1 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'62c3') IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((((CASE WHEN t0.c1 THEN t0.c1 END)OR(((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))))OR(CAST(t0.c1 AS REAL))) DESC  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (x'62c3') ORDER BY ((((CASE WHEN t0.c1 THEN t0.c1 END)OR(((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))))OR(CAST(t0.c1 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'62c3') IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((((CASE WHEN t0.c1 THEN t0.c1 END)OR(((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))))OR(CAST(t0.c1 AS REAL))) DESC  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (x'62c3') ORDER BY ((((CASE WHEN t0.c1 THEN t0.c1 END)OR(((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))))OR(CAST(t0.c1 AS REAL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t2, v0 WHERE (((((v0.c0) IS FALSE))-(((vt0.c0)*(t2.c0))))) ORDER BY UPPER(LTRIM(t2.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))-(((vt0.c0)*(t2.c0))))) IS TRUE)  as count FROM vt0, t2, v0 ORDER BY UPPER(LTRIM(t2.c0)));
SELECT COUNT(*) FROM vt0, t2, v0 WHERE (((((v0.c0) IS FALSE))-(((vt0.c0)*(t2.c0))))) ORDER BY UPPER(LTRIM(t2.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))-(((vt0.c0)*(t2.c0))))) IS TRUE)  as count FROM vt0, t2, v0 ORDER BY UPPER(LTRIM(t2.c0)));
SELECT COUNT(*) FROM vt0, t2, v0 WHERE (((((v0.c0) IS FALSE))-(((vt0.c0)*(t2.c0))))) ORDER BY UPPER(LTRIM(t2.c0));
SELECT * FROM t0, vt0, t2 WHERE (((t0.c0 COLLATE BINARY)IS(((t0.c2) IS TRUE)))) ORDER BY (((((((t2.c0))==((vt0.c0))))AND(0.3524017792938272)))AND(((t0.c2) BETWEEN (t2.c0) AND (t2.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)IS(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, t2 ORDER BY (((((((t2.c0))==((vt0.c0))))AND(0.3524017792938272)))AND(((t0.c2) BETWEEN (t2.c0) AND (t2.c0)))));
SELECT * FROM t0, vt0, t2 WHERE (((t0.c0 COLLATE BINARY)IS(((t0.c2) IS TRUE)))) ORDER BY (((((((t2.c0))==((vt0.c0))))AND(0.3524017792938272)))AND(((t0.c2) BETWEEN (t2.c0) AND (t2.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)IS(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, t2 ORDER BY (((((((t2.c0))==((vt0.c0))))AND(0.3524017792938272)))AND(((t0.c2) BETWEEN (t2.c0) AND (t2.c0)))));
SELECT * FROM t0, vt0, t2 WHERE (((t0.c0 COLLATE BINARY)IS(((t0.c2) IS TRUE)))) ORDER BY (((((((t2.c0))==((vt0.c0))))AND(0.3524017792938272)))AND(((t0.c2) BETWEEN (t2.c0) AND (t2.c0))));
SELECT ALL COUNT(*) FROM vt0, t2 FULL OUTER JOIN t0 ON (((t0.c1, ((((vt0.c0)OR(vt0.c0)))AND(t0.c0)), (~ (vt0.c0)), ((t2.c0) NOTNULL), LTRIM(t0.c1)))!=((NULLIF(DISTINCT t2.c0, t0.c1), (((t2.c0, t0.c1, vt0.c0))=((x'', v0.c0, x''))), (('齃ᒓ랧') NOT BETWEEN (x'f5ba') AND (t0.c1)), ((t0.c1) ISNULL), CASE WHEN t2.c0 THEN t2.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN ']9' WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t2.c0 END))) RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM)>>((+ (t0.c1)))) WHERE (((v0.c0)LIKE((NOT (t2.c0))))) ORDER BY ((('', 0.7090060625640182, (NOT (v0.c0))))<(('374927485', ((t2.c0) NOTNULL), ((t0.c0) NOTNULL))))  NULLS FIRST, (((+ (t0.c0))) BETWEEN (0.07458717461414766) AND (((v0.c0) BETWEEN (v0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)LIKE((NOT (t2.c0))))) IS TRUE)  as count FROM vt0, t2 FULL OUTER JOIN t0 ON (((t0.c1, ((((vt0.c0)OR(vt0.c0)))AND(t0.c0)), (~ (vt0.c0)), ((t2.c0) NOTNULL), LTRIM(t0.c1)))<>((NULLIF(DISTINCT t2.c0, t0.c1), (((t2.c0, t0.c1, vt0.c0))=((x'', v0.c0, x''))), (('齃ᒓ랧') NOT BETWEEN (x'f5ba') AND (t0.c1)), ((t0.c1) ISNULL), CASE WHEN t2.c0 THEN t2.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN ']9' WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t2.c0 END))) RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM)>>((+ (t0.c1)))) ORDER BY ((('', 0.7090060625640182, (NOT (v0.c0))))<(('374927485', ((t2.c0) NOTNULL), ((t0.c0) NOTNULL))))  NULLS FIRST, (((+ (t0.c0))) BETWEEN (0.07458717461414766) AND (((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t2 FULL OUTER JOIN t0 ON (((t0.c1, ((((vt0.c0)OR(vt0.c0)))AND(t0.c0)), (~ (vt0.c0)), ((t2.c0) NOTNULL), LTRIM(t0.c1)))!=((NULLIF(DISTINCT t2.c0, t0.c1), (((t2.c0, t0.c1, vt0.c0))=((x'', v0.c0, x''))), (('齃ᒓ랧') NOT BETWEEN (x'f5ba') AND (t0.c1)), ((t0.c1) ISNULL), CASE WHEN t2.c0 THEN t2.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN ']9' WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t2.c0 END))) RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM)>>((+ (t0.c1)))) WHERE (((v0.c0)LIKE((NOT (t2.c0))))) ORDER BY ((('', 0.7090060625640182, (NOT (v0.c0))))<(('374927485', ((t2.c0) NOTNULL), ((t0.c0) NOTNULL))))  NULLS FIRST, (((+ (t0.c0))) BETWEEN (0.07458717461414766) AND (((v0.c0) BETWEEN (v0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)LIKE((NOT (t2.c0))))) IS TRUE)  as count FROM vt0, t2 FULL OUTER JOIN t0 ON (((t0.c1, ((((vt0.c0)OR(vt0.c0)))AND(t0.c0)), (~ (vt0.c0)), ((t2.c0) NOTNULL), LTRIM(t0.c1)))<>((NULLIF(DISTINCT t2.c0, t0.c1), (((t2.c0, t0.c1, vt0.c0))=((x'', v0.c0, x''))), (('齃ᒓ랧') NOT BETWEEN (x'f5ba') AND (t0.c1)), ((t0.c1) ISNULL), CASE WHEN t2.c0 THEN t2.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN ']9' WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t2.c0 END))) RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE RTRIM)>>((+ (t0.c1)))) ORDER BY ((('', 0.7090060625640182, (NOT (v0.c0))))<(('374927485', ((t2.c0) NOTNULL), ((t0.c0) NOTNULL))))  NULLS FIRST, (((+ (t0.c0))) BETWEEN (0.07458717461414766) AND (((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))));
SELECT * FROM t0, v0 WHERE ((((((((t0.c1)AND(t0.c2)))AND(v0.c0)), ((((((((t0.c1)OR(t0.c2)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0)), UNLIKELY(t0.c0)))>((((((t0.c0)OR(t0.c1)))AND(t0.c0)), ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), ((((t0.c2)AND(t0.c0)))AND(v0.c0)))))) ORDER BY (((t0.c2 IN ()))|(NULL)), CAST(((v0.c0)=(t0.c2)) AS TEXT)  NULLS FIRST, (~ (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)))), CAST(CASE 0xffffffff90c8b7a7  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c1)AND(t0.c2)))AND(v0.c0)), ((((((((t0.c1)OR(t0.c2)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0)), UNLIKELY(t0.c0)))>((((((t0.c0)OR(t0.c1)))AND(t0.c0)), ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), ((((t0.c2)AND(t0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c2 IN ()))|(NULL)), CAST(((v0.c0)==(t0.c2)) AS TEXT)  NULLS FIRST, (~ (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)))), CAST(CASE 0Xffffffff90c8b7a7  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END AS TEXT) DESC  NULLS FIRST);
SELECT * FROM t0, v0 WHERE ((((((((t0.c1)AND(t0.c2)))AND(v0.c0)), ((((((((t0.c1)OR(t0.c2)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0)), UNLIKELY(t0.c0)))>((((((t0.c0)OR(t0.c1)))AND(t0.c0)), ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), ((((t0.c2)AND(t0.c0)))AND(v0.c0)))))) ORDER BY (((t0.c2 IN ()))|(NULL)), CAST(((v0.c0)=(t0.c2)) AS TEXT)  NULLS FIRST, (~ (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)))), CAST(CASE 0xffffffff90c8b7a7  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c1)AND(t0.c2)))AND(v0.c0)), ((((((((t0.c1)OR(t0.c2)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0)), UNLIKELY(t0.c0)))>((((((t0.c0)OR(t0.c1)))AND(t0.c0)), ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), ((((t0.c2)AND(t0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c2 IN ()))|(NULL)), CAST(((v0.c0)==(t0.c2)) AS TEXT)  NULLS FIRST, (~ (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)))), CAST(CASE 0Xffffffff90c8b7a7  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END AS TEXT) DESC  NULLS FIRST);
SELECT * FROM t0, v0 WHERE ((((((((t0.c1)AND(t0.c2)))AND(v0.c0)), ((((((((t0.c1)OR(t0.c2)))AND(v0.c0)))AND(t0.c0)))AND(v0.c0)), UNLIKELY(t0.c0)))>((((((t0.c0)OR(t0.c1)))AND(t0.c0)), ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), ((((t0.c2)AND(t0.c0)))AND(v0.c0)))))) ORDER BY (((t0.c2 IN ()))|(NULL)), CAST(((v0.c0)=(t0.c2)) AS TEXT)  NULLS FIRST, (~ (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)))), CAST(CASE 0xffffffff90c8b7a7  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END AS TEXT) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON SQLITE_VERSION() WHERE ((((t0.c2)IS NOT(t0.c2)) IN ())) ORDER BY ((((CAST(t0.c1 AS REAL))OR(((t0.c2)GLOB(vt0.c0)))))OR((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2)IS NOT(t0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON SQLITE_VERSION() ORDER BY ((((CAST(t0.c1 AS REAL))OR(((t0.c2)GLOB(vt0.c0)))))OR((t0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON SQLITE_VERSION() WHERE ((((t0.c2)IS NOT(t0.c2)) IN ())) ORDER BY ((((CAST(t0.c1 AS REAL))OR(((t0.c2)GLOB(vt0.c0)))))OR((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c2)IS NOT(t0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON SQLITE_VERSION() ORDER BY ((((CAST(t0.c1 AS REAL))OR(((t0.c2)GLOB(vt0.c0)))))OR((t0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON SQLITE_VERSION() WHERE ((((t0.c2)IS NOT(t0.c2)) IN ())) ORDER BY ((((CAST(t0.c1 AS REAL))OR(((t0.c2)GLOB(vt0.c0)))))OR((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, t2 WHERE (CAST(((v0.c0)>=(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>=(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, t2);
SELECT COUNT(*) FROM v0, t2 WHERE (CAST(((v0.c0)>=(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>=(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, t2);
SELECT COUNT(*) FROM v0, t2 WHERE (CAST(((v0.c0)>=(v0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM t2, t0 WHERE ((((t0.c1, t0.c2, t2.c0)) NOT BETWEEN (((t0.c0 IN ()), CAST(x'' AS INTEGER), (((t0.c1)) BETWEEN ((t0.c0)) AND ((t2.c0))))) AND ((((((t0.c2)AND(t0.c1)))OR(t0.c2)), ((t2.c0) IS TRUE), 0x180bb7b7)))) ORDER BY ((((t0.c1)/(t0.c2)))|(CHAR(t2.c0, t0.c2, t0.c1))) ASC, LENGTH(CASE WHEN t2.c0 THEN t0.c2 ELSE t0.c2 END)  NULLS LAST, t0.c2 DESC  NULLS LAST, (((t0.c1)) BETWEEN ((((t2.c0) IS TRUE))) AND ((((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c2, t2.c0)) NOT BETWEEN (((t0.c0 IN ()), CAST(x'' AS INTEGER), (((t0.c1)) BETWEEN ((t0.c0)) AND ((t2.c0))))) AND ((((((t0.c2)AND(t0.c1)))OR(t0.c2)), ((t2.c0) IS TRUE), 0X180bb7b7)))) IS TRUE)  as count FROM t2, t0 ORDER BY ((((t0.c1)/(t0.c2)))|(CHAR(t2.c0, t0.c2, t0.c1))) ASC, LENGTH(CASE WHEN t2.c0 THEN t0.c2 ELSE t0.c2 END)  NULLS LAST, t0.c2 DESC  NULLS LAST, (((t0.c1)) BETWEEN ((((t2.c0) IS TRUE))) AND ((((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, t0 WHERE ((((t0.c1, t0.c2, t2.c0)) NOT BETWEEN (((t0.c0 IN ()), CAST(x'' AS INTEGER), (((t0.c1)) BETWEEN ((t0.c0)) AND ((t2.c0))))) AND ((((((t0.c2)AND(t0.c1)))OR(t0.c2)), ((t2.c0) IS TRUE), 0x180bb7b7)))) ORDER BY ((((t0.c1)/(t0.c2)))|(CHAR(t2.c0, t0.c2, t0.c1))) ASC, LENGTH(CASE WHEN t2.c0 THEN t0.c2 ELSE t0.c2 END)  NULLS LAST, t0.c2 DESC  NULLS LAST, (((t0.c1)) BETWEEN ((((t2.c0) IS TRUE))) AND ((((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c2, t2.c0)) NOT BETWEEN (((t0.c0 IN ()), CAST(x'' AS INTEGER), (((t0.c1)) BETWEEN ((t0.c0)) AND ((t2.c0))))) AND ((((((t0.c2)AND(t0.c1)))OR(t0.c2)), ((t2.c0) IS TRUE), 0X180bb7b7)))) IS TRUE)  as count FROM t2, t0 ORDER BY ((((t0.c1)/(t0.c2)))|(CHAR(t2.c0, t0.c2, t0.c1))) ASC, LENGTH(CASE WHEN t2.c0 THEN t0.c2 ELSE t0.c2 END)  NULLS LAST, t0.c2 DESC  NULLS LAST, (((t0.c1)) BETWEEN ((((t2.c0) IS TRUE))) AND ((((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, t0 WHERE ((((t0.c1, t0.c2, t2.c0)) NOT BETWEEN (((t0.c0 IN ()), CAST(x'' AS INTEGER), (((t0.c1)) BETWEEN ((t0.c0)) AND ((t2.c0))))) AND ((((((t0.c2)AND(t0.c1)))OR(t0.c2)), ((t2.c0) IS TRUE), 0x180bb7b7)))) ORDER BY ((((t0.c1)/(t0.c2)))|(CHAR(t2.c0, t0.c2, t0.c1))) ASC, LENGTH(CASE WHEN t2.c0 THEN t0.c2 ELSE t0.c2 END)  NULLS LAST, t0.c2 DESC  NULLS LAST, (((t0.c1)) BETWEEN ((((t2.c0) IS TRUE))) AND ((((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t2, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL * FROM t2, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL * FROM t2, t0, vt0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY CAST(UNICODE(v0.c0) AS BLOB) ASC  NULLS LAST, ((v0.c0)<<(v0.c0)) COLLATE RTRIM, ((((-70684731)<<(v0.c0)))<=(((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(UNICODE(v0.c0) AS BLOB) ASC  NULLS LAST, ((v0.c0)<<(v0.c0)) COLLATE RTRIM, ((((-70684731)<<(v0.c0)))<=(((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY CAST(UNICODE(v0.c0) AS BLOB) ASC  NULLS LAST, ((v0.c0)<<(v0.c0)) COLLATE RTRIM, ((((-70684731)<<(v0.c0)))<=(((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(UNICODE(v0.c0) AS BLOB) ASC  NULLS LAST, ((v0.c0)<<(v0.c0)) COLLATE RTRIM, ((((-70684731)<<(v0.c0)))<=(((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY CAST(UNICODE(v0.c0) AS BLOB) ASC  NULLS LAST, ((v0.c0)<<(v0.c0)) COLLATE RTRIM, ((((-70684731)<<(v0.c0)))<=(((v0.c0)IS NOT(v0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t2 LEFT OUTER JOIN t0 ON NULL COLLATE RTRIM WHERE (CASE ((t0.c2) NOT NULL)  WHEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN CASE t0.c1  WHEN t2.c0 THEN t2.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2) NOT NULL)  WHEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN CASE t0.c1  WHEN t2.c0 THEN t2.c0 END END) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON NULL COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t2 LEFT OUTER JOIN t0 ON NULL COLLATE RTRIM WHERE (CASE ((t0.c2) NOT NULL)  WHEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN CASE t0.c1  WHEN t2.c0 THEN t2.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2) NOT NULL)  WHEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN CASE t0.c1  WHEN t2.c0 THEN t2.c0 END END) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON NULL COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t2 LEFT OUTER JOIN t0 ON NULL COLLATE RTRIM WHERE (CASE ((t0.c2) NOT NULL)  WHEN CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN CASE t0.c1  WHEN t2.c0 THEN t2.c0 END END);
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((-1.472263248E9))))||(((-1145064210) NOT BETWEEN (v0.c0) AND (x''))))) ORDER BY highlight(((t0.c0) IS TRUE), (t0.c0 IN ()), v0.c0, ((t0.c2)IS NOT(NULL))) ASC  NULLS FIRST, ((json_quote(t0.c0))<<((v0.c0 IN ()))) DESC, ((0Xffffffffeb2d93f8) BETWEEN (v0.c0) AND (t0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((-1.472263248E9))))||(((-1145064210) NOT BETWEEN (v0.c0) AND (x''))))) IS TRUE)  as count FROM v0, t0 ORDER BY highlight(((t0.c0) IS TRUE), (t0.c0 IN ()), v0.c0, ((t0.c2)IS NOT(NULL))) ASC  NULLS FIRST, ((json_quote(t0.c0))<<((v0.c0 IN ()))) DESC, ((0Xffffffffeb2d93f8) BETWEEN (v0.c0) AND (t0.c2)) COLLATE NOCASE);
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((-1.472263248E9))))||(((-1145064210) NOT BETWEEN (v0.c0) AND (x''))))) ORDER BY highlight(((t0.c0) IS TRUE), (t0.c0 IN ()), v0.c0, ((t0.c2)IS NOT(NULL))) ASC  NULLS FIRST, ((json_quote(t0.c0))<<((v0.c0 IN ()))) DESC, ((0Xffffffffeb2d93f8) BETWEEN (v0.c0) AND (t0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((-1.472263248E9))))||(((-1145064210) NOT BETWEEN (v0.c0) AND (x''))))) IS TRUE)  as count FROM v0, t0 ORDER BY highlight(((t0.c0) IS TRUE), (t0.c0 IN ()), v0.c0, ((t0.c2)IS NOT(NULL))) ASC  NULLS FIRST, ((json_quote(t0.c0))<<((v0.c0 IN ()))) DESC, ((0Xffffffffeb2d93f8) BETWEEN (v0.c0) AND (t0.c2)) COLLATE NOCASE);
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((-1.472263248E9))))||(((-1145064210) NOT BETWEEN (v0.c0) AND (x''))))) ORDER BY highlight(((t0.c0) IS TRUE), (t0.c0 IN ()), v0.c0, ((t0.c2)IS NOT(NULL))) ASC  NULLS FIRST, ((json_quote(t0.c0))<<((v0.c0 IN ()))) DESC, ((0Xffffffffeb2d93f8) BETWEEN (v0.c0) AND (t0.c2)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON '' WHERE (((((t0.c2)=(t0.c2)))/(CAST(vt0.c0 AS TEXT)))) ORDER BY (((~ (t0.c0)))IS NOT(0.25810398688282643)), ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c1)))>>(t0.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)=(t0.c2)))/(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '' ORDER BY (((~ (t0.c0)))IS NOT(0.25810398688282643)), ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c1)))>>(t0.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON '' WHERE (((((t0.c2)=(t0.c2)))/(CAST(vt0.c0 AS TEXT)))) ORDER BY (((~ (t0.c0)))IS NOT(0.25810398688282643)), ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c1)))>>(t0.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)=(t0.c2)))/(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '' ORDER BY (((~ (t0.c0)))IS NOT(0.25810398688282643)), ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c1)))>>(t0.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON '' WHERE (((((t0.c2)=(t0.c2)))/(CAST(vt0.c0 AS TEXT)))) ORDER BY (((~ (t0.c0)))IS NOT(0.25810398688282643)), ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c1)))>>(t0.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, v0 FULL OUTER JOIN t2 ON (v0.c0 IN ()) WHERE (((((CAST(v0.c0 AS NUMERIC))OR((- (vt0.c0)))))AND((((t0.c0))>((t0.c1)))))) ORDER BY ((((((((((t0.c0) IS FALSE))AND((t0.c1 IN ()))))OR(-1.15298798E8)))AND(((t2.c0)+(t2.c0)))))AND(SQLITE_COMPILEOPTION_USED(t2.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS NUMERIC))OR((- (vt0.c0)))))AND((((t0.c0))>((t0.c1)))))) IS TRUE)  as count FROM vt0, t0, v0 FULL OUTER JOIN t2 ON (v0.c0 IN ()) ORDER BY ((((((((((t0.c0) IS FALSE))AND((t0.c1 IN ()))))OR(-1.15298798E8)))AND(((t2.c0)+(t2.c0)))))AND(SQLITE_COMPILEOPTION_USED(t2.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 FULL OUTER JOIN t2 ON (v0.c0 IN ()) WHERE (((((CAST(v0.c0 AS NUMERIC))OR((- (vt0.c0)))))AND((((t0.c0))>((t0.c1)))))) ORDER BY ((((((((((t0.c0) IS FALSE))AND((t0.c1 IN ()))))OR(-1.15298798E8)))AND(((t2.c0)+(t2.c0)))))AND(SQLITE_COMPILEOPTION_USED(t2.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS NUMERIC))OR((- (vt0.c0)))))AND((((t0.c0))>((t0.c1)))))) IS TRUE)  as count FROM vt0, t0, v0 FULL OUTER JOIN t2 ON (v0.c0 IN ()) ORDER BY ((((((((((t0.c0) IS FALSE))AND((t0.c1 IN ()))))OR(-1.15298798E8)))AND(((t2.c0)+(t2.c0)))))AND(SQLITE_COMPILEOPTION_USED(t2.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 FULL OUTER JOIN t2 ON (v0.c0 IN ()) WHERE (((((CAST(v0.c0 AS NUMERIC))OR((- (vt0.c0)))))AND((((t0.c0))>((t0.c1)))))) ORDER BY ((((((((((t0.c0) IS FALSE))AND((t0.c1 IN ()))))OR(-1.15298798E8)))AND(((t2.c0)+(t2.c0)))))AND(SQLITE_COMPILEOPTION_USED(t2.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, t2, v0 WHERE (((t0.c1 COLLATE NOCASE) ISNULL)) ORDER BY ((0.7560340930410839)<=(((v0.c0)%(t0.c0)))) ASC  NULLS LAST, (- (((((t2.c0)AND(t2.c0)))AND(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, t0, t2, v0 ORDER BY ((0.7560340930410839)<=(((v0.c0)%(t0.c0)))) ASC  NULLS LAST, (- (((((t2.c0)AND(t2.c0)))AND(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, t2, v0 WHERE (((t0.c1 COLLATE NOCASE) ISNULL)) ORDER BY ((0.7560340930410839)<=(((v0.c0)%(t0.c0)))) ASC  NULLS LAST, (- (((((t2.c0)AND(t2.c0)))AND(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, t0, t2, v0 ORDER BY ((0.7560340930410839)<=(((v0.c0)%(t0.c0)))) ASC  NULLS LAST, (- (((((t2.c0)AND(t2.c0)))AND(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, t2, v0 WHERE (((t0.c1 COLLATE NOCASE) ISNULL)) ORDER BY ((0.7560340930410839)<=(((v0.c0)%(t0.c0)))) ASC  NULLS LAST, (- (((((t2.c0)AND(t2.c0)))AND(t0.c0)))) ASC;
SELECT * FROM vt0, t2, v0 WHERE (v0.c0) ORDER BY (- (((t2.c0)|(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, t2, v0 ORDER BY (- (((t2.c0)|(v0.c0))))  NULLS LAST);
SELECT * FROM vt0, t2, v0 WHERE (v0.c0) ORDER BY (- (((t2.c0)|(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, t2, v0 ORDER BY (- (((t2.c0)|(v0.c0))))  NULLS LAST);
SELECT * FROM vt0, t2, v0 WHERE (v0.c0) ORDER BY (- (((t2.c0)|(v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t2 WHERE (((t2.c0 IN ()) IN ())) ORDER BY ((((t2.c0)IS NOT(t2.c0)))<<(STRFTIME(t2.c0, t2.c0, t2.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t2.c0 IN ()) IN ())) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0)IS NOT(t2.c0)))<<(STRFTIME(t2.c0, t2.c0, t2.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE (((t2.c0 IN ()) IN ())) ORDER BY ((((t2.c0)IS NOT(t2.c0)))<<(STRFTIME(t2.c0, t2.c0, t2.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t2.c0 IN ()) IN ())) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0)IS NOT(t2.c0)))<<(STRFTIME(t2.c0, t2.c0, t2.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE (((t2.c0 IN ()) IN ())) ORDER BY ((((t2.c0)IS NOT(t2.c0)))<<(STRFTIME(t2.c0, t2.c0, t2.c0)))  NULLS FIRST;
SELECT * FROM t2 WHERE (t2.c0 COLLATE RTRIM) ORDER BY (CASE WHEN '' THEN t2.c0 ELSE t2.c0 END IN ()) ASC  NULLS LAST, ((((x'')OR(((t2.c0) ISNULL))))AND((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0 COLLATE RTRIM) IS TRUE)  as count FROM t2 ORDER BY (CASE WHEN '' THEN t2.c0 ELSE t2.c0 END IN ()) ASC  NULLS LAST, ((((x'')OR(((t2.c0) ISNULL))))AND((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))) DESC  NULLS FIRST);
SELECT * FROM t2 WHERE (t2.c0 COLLATE RTRIM) ORDER BY (CASE WHEN '' THEN t2.c0 ELSE t2.c0 END IN ()) ASC  NULLS LAST, ((((x'')OR(((t2.c0) ISNULL))))AND((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0 COLLATE RTRIM) IS TRUE)  as count FROM t2 ORDER BY (CASE WHEN '' THEN t2.c0 ELSE t2.c0 END IN ()) ASC  NULLS LAST, ((((x'')OR(((t2.c0) ISNULL))))AND((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))) DESC  NULLS FIRST);
SELECT * FROM t2 WHERE (t2.c0 COLLATE RTRIM) ORDER BY (CASE WHEN '' THEN t2.c0 ELSE t2.c0 END IN ()) ASC  NULLS LAST, ((((x'')OR(((t2.c0) ISNULL))))AND((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST((((t0.c0, v0.c0, 0.3524017792938272)) NOT BETWEEN ((v0.c0, v0.c0, t0.c1)) AND ((t0.c0, t0.c0, v0.c0))) AS BLOB)) ORDER BY (((((t0.c2)IS(t0.c1))))>((((t0.c2)&(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0, v0.c0, 0.3524017792938272)) NOT BETWEEN ((v0.c0, v0.c0, t0.c1)) AND ((t0.c0, t0.c0, v0.c0))) AS BLOB)) IS TRUE)  as count FROM v0, t0 ORDER BY (((((t0.c2)IS(t0.c1))))>((((t0.c2)&(t0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST((((t0.c0, v0.c0, 0.3524017792938272)) NOT BETWEEN ((v0.c0, v0.c0, t0.c1)) AND ((t0.c0, t0.c0, v0.c0))) AS BLOB)) ORDER BY (((((t0.c2)IS(t0.c1))))>((((t0.c2)&(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0, v0.c0, 0.3524017792938272)) NOT BETWEEN ((v0.c0, v0.c0, t0.c1)) AND ((t0.c0, t0.c0, v0.c0))) AS BLOB)) IS TRUE)  as count FROM v0, t0 ORDER BY (((((t0.c2)IS(t0.c1))))>((((t0.c2)&(t0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST((((t0.c0, v0.c0, 0.3524017792938272)) NOT BETWEEN ((v0.c0, v0.c0, t0.c1)) AND ((t0.c0, t0.c0, v0.c0))) AS BLOB)) ORDER BY (((((t0.c2)IS(t0.c1))))>((((t0.c2)&(t0.c0)))))  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN v0 ON (vt0.c0 IN ()) WHERE (CASE v0.c0 COLLATE BINARY  WHEN ((vt0.c0)<<(v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) WHEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN v0.c0 WHEN ((vt0.c0) NOTNULL) THEN LIKE(v0.c0, vt0.c0) ELSE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE BINARY  WHEN ((vt0.c0)<<(v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) WHEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN v0.c0 WHEN ((vt0.c0) NOTNULL) THEN LIKE(v0.c0, vt0.c0) ELSE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (vt0.c0 IN ()));
SELECT * FROM vt0 CROSS JOIN v0 ON (vt0.c0 IN ()) WHERE (CASE v0.c0 COLLATE BINARY  WHEN ((vt0.c0)<<(v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) WHEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN v0.c0 WHEN ((vt0.c0) NOTNULL) THEN LIKE(v0.c0, vt0.c0) ELSE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE BINARY  WHEN ((vt0.c0)<<(v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) WHEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN v0.c0 WHEN ((vt0.c0) NOTNULL) THEN LIKE(v0.c0, vt0.c0) ELSE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (vt0.c0 IN ()));
SELECT * FROM vt0 CROSS JOIN v0 ON (vt0.c0 IN ()) WHERE (CASE v0.c0 COLLATE BINARY  WHEN ((vt0.c0)<<(v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) WHEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN v0.c0 WHEN ((vt0.c0) NOTNULL) THEN LIKE(v0.c0, vt0.c0) ELSE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END END);
SELECT ALL * FROM vt0, t2, v0 RIGHT OUTER JOIN t0 ON v0.c0 COLLATE NOCASE WHERE (0.8087023497206383);
SELECT SUM(count) FROM (SELECT ((0.8087023497206383) IS TRUE)  as count FROM vt0, t2, v0 RIGHT OUTER JOIN t0 ON v0.c0 COLLATE NOCASE);
SELECT ALL * FROM vt0, t2, v0 RIGHT OUTER JOIN t0 ON v0.c0 COLLATE NOCASE WHERE (0.8087023497206383);
SELECT SUM(count) FROM (SELECT ((0.8087023497206383) IS TRUE)  as count FROM vt0, t2, v0 RIGHT OUTER JOIN t0 ON v0.c0 COLLATE NOCASE);
SELECT ALL * FROM vt0, t2, v0 RIGHT OUTER JOIN t0 ON v0.c0 COLLATE NOCASE WHERE (0.8087023497206383);
SELECT ALL COUNT(*) FROM t0, vt0, t2, v0 WHERE (((((1.627039969E9)<=(t2.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END) AND (CAST(NULL AS NUMERIC)))) ORDER BY t2.c0;
SELECT SUM(count) FROM (SELECT ((((((1.627039969E9)<=(t2.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END) AND (CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, t2, v0 ORDER BY t2.c0);
SELECT ALL COUNT(*) FROM t0, vt0, t2, v0 WHERE (((((1.627039969E9)<=(t2.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END) AND (CAST(NULL AS NUMERIC)))) ORDER BY t2.c0;
SELECT SUM(count) FROM (SELECT ((((((1.627039969E9)<=(t2.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END) AND (CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, t2, v0 ORDER BY t2.c0);
SELECT ALL COUNT(*) FROM t0, vt0, t2, v0 WHERE (((((1.627039969E9)<=(t2.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END) AND (CAST(NULL AS NUMERIC)))) ORDER BY t2.c0;
SELECT * FROM t2 NOT INDEXED WHERE (0.24796814576076864 COLLATE BINARY) ORDER BY (+ (((((x'eb2b')OR(t2.c0)))OR(t2.c0))));
SELECT SUM(count) FROM (SELECT ((0.24796814576076864 COLLATE BINARY) IS TRUE)  as count FROM t2 ORDER BY (+ (((((x'eb2b')OR(t2.c0)))OR(t2.c0)))));
SELECT * FROM t2 NOT INDEXED WHERE (0.24796814576076864 COLLATE BINARY) ORDER BY (+ (((((x'eb2b')OR(t2.c0)))OR(t2.c0))));
SELECT SUM(count) FROM (SELECT ((0.24796814576076864 COLLATE BINARY) IS TRUE)  as count FROM t2 ORDER BY (+ (((((x'eb2b')OR(t2.c0)))OR(t2.c0)))));
SELECT * FROM t2 NOT INDEXED WHERE (0.24796814576076864 COLLATE BINARY) ORDER BY (+ (((((x'eb2b')OR(t2.c0)))OR(t2.c0))));
SELECT ALL COUNT(*) FROM t0, vt0, t2, v0 WHERE (t0.c2) ORDER BY (((vt0.c0, t0.c1, t0.c1)) NOT BETWEEN (((~ (0.03436296353618706)), UNLIKELY(v0.c0), ((t0.c0)/(v0.c0)))) AND ((NULLIF(t0.c2, t2.c0), ((((((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c2)), ((t0.c2)GLOB('Q) ')))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0, t2, v0 ORDER BY (((vt0.c0, t0.c1, t0.c1)) NOT BETWEEN (((~ (0.03436296353618706)), UNLIKELY(v0.c0), ((t0.c0)/(v0.c0)))) AND ((NULLIF(t0.c2, t2.c0), ((((((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c2)), ((t0.c2)GLOB('Q) '))))));
SELECT ALL COUNT(*) FROM t0, vt0, t2, v0 WHERE (t0.c2) ORDER BY (((vt0.c0, t0.c1, t0.c1)) NOT BETWEEN (((~ (0.03436296353618706)), UNLIKELY(v0.c0), ((t0.c0)/(v0.c0)))) AND ((NULLIF(t0.c2, t2.c0), ((((((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c2)), ((t0.c2)GLOB('Q) ')))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0, t2, v0 ORDER BY (((vt0.c0, t0.c1, t0.c1)) NOT BETWEEN (((~ (0.03436296353618706)), UNLIKELY(v0.c0), ((t0.c0)/(v0.c0)))) AND ((NULLIF(t0.c2, t2.c0), ((((((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c2)), ((t0.c2)GLOB('Q) '))))));
SELECT ALL COUNT(*) FROM t0, vt0, t2, v0 WHERE (t0.c2) ORDER BY (((vt0.c0, t0.c1, t0.c1)) NOT BETWEEN (((~ (0.03436296353618706)), UNLIKELY(v0.c0), ((t0.c0)/(v0.c0)))) AND ((NULLIF(t0.c2, t2.c0), ((((((((t0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c2)), ((t0.c2)GLOB('Q) ')))));
SELECT * FROM t0, vt0, t2, v0 WHERE (((((t0.c0)IS NOT(t0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(t0.c1))) IS TRUE)) IS TRUE)  as count FROM t0, vt0, t2, v0);
SELECT * FROM t0, vt0, t2, v0 WHERE (((((t0.c0)IS NOT(t0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(t0.c1))) IS TRUE)) IS TRUE)  as count FROM t0, vt0, t2, v0);
SELECT * FROM t0, vt0, t2, v0 WHERE (((((t0.c0)IS NOT(t0.c1))) IS TRUE));
SELECT COUNT(*) FROM t2 WHERE ((- (CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((- (CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((- (CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)));
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (LENGTH(t0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LENGTH(t0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, t0, t2);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (LENGTH(t0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LENGTH(t0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, t0, t2);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (LENGTH(t0.c0 COLLATE NOCASE));
SELECT * FROM t2 RIGHT OUTER JOIN v0 ON (((((v0.c0)==(''))))!=((v0.c0))) WHERE (((v0.c0) NOT NULL) COLLATE BINARY) ORDER BY (((t2.c0)) BETWEEN ((((t2.c0) ISNULL))) AND (('H.F01'))), NULL, CASE WHEN x'' THEN v0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN v0 ON (((((v0.c0)=(''))))!=((v0.c0))) ORDER BY (((t2.c0)) BETWEEN ((((t2.c0) ISNULL))) AND (('H.F01'))), NULL, CASE WHEN x'' THEN v0.c0 END COLLATE BINARY  NULLS LAST);
SELECT * FROM t2 RIGHT OUTER JOIN v0 ON (((((v0.c0)==(''))))!=((v0.c0))) WHERE (((v0.c0) NOT NULL) COLLATE BINARY) ORDER BY (((t2.c0)) BETWEEN ((((t2.c0) ISNULL))) AND (('H.F01'))), NULL, CASE WHEN x'' THEN v0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN v0 ON (((((v0.c0)=(''))))!=((v0.c0))) ORDER BY (((t2.c0)) BETWEEN ((((t2.c0) ISNULL))) AND (('H.F01'))), NULL, CASE WHEN x'' THEN v0.c0 END COLLATE BINARY  NULLS LAST);
SELECT * FROM t2 RIGHT OUTER JOIN v0 ON (((((v0.c0)==(''))))!=((v0.c0))) WHERE (((v0.c0) NOT NULL) COLLATE BINARY) ORDER BY (((t2.c0)) BETWEEN ((((t2.c0) ISNULL))) AND (('H.F01'))), NULL, CASE WHEN x'' THEN v0.c0 END COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt0, t2, t0 WHERE ((((t0.c2 IN ()))OR(((t0.c2)|(x'')))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))OR(((t0.c2)|(x''))))) IS TRUE)  as count FROM vt0, t2, t0);
SELECT ALL * FROM vt0, t2, t0 WHERE ((((t0.c2 IN ()))OR(((t0.c2)|(x'')))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))OR(((t0.c2)|(x''))))) IS TRUE)  as count FROM vt0, t2, t0);
SELECT ALL * FROM vt0, t2, t0 WHERE ((((t0.c2 IN ()))OR(((t0.c2)|(x'')))));
SELECT * FROM vt0, t2 NOT INDEXED WHERE (((((((vt0.c0)/(vt0.c0)))OR((((vt0.c0))=((vt0.c0))))))OR((((vt0.c0, vt0.c0, t2.c0))>((t2.c0, vt0.c0, vt0.c0)))))) ORDER BY TRIM(DISTINCT 0.45281111385340844) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)/(vt0.c0)))OR((((vt0.c0))=((vt0.c0))))))OR((((vt0.c0, vt0.c0, t2.c0))>((t2.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, t2 ORDER BY TRIM(DISTINCT 0.45281111385340844) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt0, t2 NOT INDEXED WHERE (((((((vt0.c0)/(vt0.c0)))OR((((vt0.c0))=((vt0.c0))))))OR((((vt0.c0, vt0.c0, t2.c0))>((t2.c0, vt0.c0, vt0.c0)))))) ORDER BY TRIM(DISTINCT 0.45281111385340844) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)/(vt0.c0)))OR((((vt0.c0))=((vt0.c0))))))OR((((vt0.c0, vt0.c0, t2.c0))>((t2.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, t2 ORDER BY TRIM(DISTINCT 0.45281111385340844) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt0, t2 NOT INDEXED WHERE (((((((vt0.c0)/(vt0.c0)))OR((((vt0.c0))=((vt0.c0))))))OR((((vt0.c0, vt0.c0, t2.c0))>((t2.c0, vt0.c0, vt0.c0)))))) ORDER BY TRIM(DISTINCT 0.45281111385340844) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, t2, v0 WHERE (t2.c0) ORDER BY (((NOT (t0.c0)))GLOB(((t0.c1) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM t0, vt0, t2, v0 ORDER BY (((NOT (t0.c0)))GLOB(((t0.c1) IS TRUE))) ASC);
SELECT COUNT(*) FROM t0, vt0, t2, v0 WHERE (t2.c0) ORDER BY (((NOT (t0.c0)))GLOB(((t0.c1) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM t0, vt0, t2, v0 ORDER BY (((NOT (t0.c0)))GLOB(((t0.c1) IS TRUE))) ASC);
SELECT COUNT(*) FROM t0, vt0, t2, v0 WHERE (t2.c0) ORDER BY (((NOT (t0.c0)))GLOB(((t0.c1) IS TRUE))) ASC;
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c0)OR(t2.c0)))OR(t2.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0)OR(t2.c0)))OR(t2.c0)) COLLATE BINARY) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c0)OR(t2.c0)))OR(t2.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0)OR(t2.c0)))OR(t2.c0)) COLLATE BINARY) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c0)OR(t2.c0)))OR(t2.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, t2, t0 WHERE ((((((t0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c1 ELSE NULL END)))AND(((t0.c2)&(t0.c1))))) ORDER BY ((x'')GLOB(((t0.c2)<=(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c1 ELSE NULL END)))AND(((t0.c2)&(t0.c1))))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY ((x'')GLOB(((t0.c2)<=(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t2, t0 WHERE ((((((t0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c1 ELSE NULL END)))AND(((t0.c2)&(t0.c1))))) ORDER BY ((x'')GLOB(((t0.c2)<=(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c1 ELSE NULL END)))AND(((t0.c2)&(t0.c1))))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY ((x'')GLOB(((t0.c2)<=(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t2, t0 WHERE ((((((t0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c1 ELSE NULL END)))AND(((t0.c2)&(t0.c1))))) ORDER BY ((x'')GLOB(((t0.c2)<=(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t2 INNER JOIN t0 ON CASE WHEN t2.c0 THEN 0.9363320750565333 ELSE t0.c0 END COLLATE BINARY RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((t0.c1) BETWEEN (NULL) AND (t2.c0))) AND ((NOT (t0.c2)))) WHERE (CAST(((((t2.c0)OR(t0.c2)))AND(t0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((t2.c0)OR(t0.c2)))AND(t0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t2 INNER JOIN t0 ON CASE WHEN t2.c0 THEN 0.9363320750565333 ELSE t0.c0 END COLLATE BINARY RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((t0.c1) BETWEEN (NULL) AND (t2.c0))) AND ((NOT (t0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t2 INNER JOIN t0 ON CASE WHEN t2.c0 THEN 0.9363320750565333 ELSE t0.c0 END COLLATE BINARY RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((t0.c1) BETWEEN (NULL) AND (t2.c0))) AND ((NOT (t0.c2)))) WHERE (CAST(((((t2.c0)OR(t0.c2)))AND(t0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((t2.c0)OR(t0.c2)))AND(t0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t2 INNER JOIN t0 ON CASE WHEN t2.c0 THEN 0.9363320750565333 ELSE t0.c0 END COLLATE BINARY RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((t0.c1) BETWEEN (NULL) AND (t2.c0))) AND ((NOT (t0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t2 INNER JOIN t0 ON CASE WHEN t2.c0 THEN 0.9363320750565333 ELSE t0.c0 END COLLATE BINARY RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((t0.c1) BETWEEN (NULL) AND (t2.c0))) AND ((NOT (t0.c2)))) WHERE (CAST(((((t2.c0)OR(t0.c2)))AND(t0.c1)) AS NUMERIC));
SELECT ALL * FROM vt0, v0, t0, t2 WHERE (((((v0.c0) NOT BETWEEN (t2.c0) AND (t0.c1))) NOT BETWEEN (((t0.c1)|(t0.c2))) AND (0x5d76538a))) ORDER BY t0.c1 DESC, (((t2.c0 IN (t0.c2, t0.c1, t2.c0))) IS TRUE) ASC, ((((((((vt0.c0 COLLATE RTRIM)OR(t0.c2)))OR(t2.c0)))OR((t0.c0 IN ()))))OR((((vt0.c0, t0.c1, '', NULL, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, '815692516', vt0.c0, t0.c1)) AND ((t0.c0, t2.c0, vt0.c0, v0.c0, t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (t2.c0) AND (t0.c1))) NOT BETWEEN (((t0.c1)|(t0.c2))) AND (0x5d76538a))) IS TRUE)  as count FROM vt0, v0, t0, t2 ORDER BY t0.c1 DESC, (((t2.c0 IN (t0.c2, t0.c1, t2.c0))) IS TRUE) ASC, ((((((((vt0.c0 COLLATE RTRIM)OR(t0.c2)))OR(t2.c0)))OR((t0.c0 IN ()))))OR((((vt0.c0, t0.c1, '', NULL, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, '815692516', vt0.c0, t0.c1)) AND ((t0.c0, t2.c0, vt0.c0, v0.c0, t0.c1))))));
SELECT ALL * FROM vt0, v0, t0, t2 WHERE (((((v0.c0) NOT BETWEEN (t2.c0) AND (t0.c1))) NOT BETWEEN (((t0.c1)|(t0.c2))) AND (0x5d76538a))) ORDER BY t0.c1 DESC, (((t2.c0 IN (t0.c2, t0.c1, t2.c0))) IS TRUE) ASC, ((((((((vt0.c0 COLLATE RTRIM)OR(t0.c2)))OR(t2.c0)))OR((t0.c0 IN ()))))OR((((vt0.c0, t0.c1, '', NULL, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, '815692516', vt0.c0, t0.c1)) AND ((t0.c0, t2.c0, vt0.c0, v0.c0, t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (t2.c0) AND (t0.c1))) NOT BETWEEN (((t0.c1)|(t0.c2))) AND (0x5d76538a))) IS TRUE)  as count FROM vt0, v0, t0, t2 ORDER BY t0.c1 DESC, (((t2.c0 IN (t0.c2, t0.c1, t2.c0))) IS TRUE) ASC, ((((((((vt0.c0 COLLATE RTRIM)OR(t0.c2)))OR(t2.c0)))OR((t0.c0 IN ()))))OR((((vt0.c0, t0.c1, '', NULL, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, '815692516', vt0.c0, t0.c1)) AND ((t0.c0, t2.c0, vt0.c0, v0.c0, t0.c1))))));
SELECT ALL * FROM vt0, v0, t0, t2 WHERE (((((v0.c0) NOT BETWEEN (t2.c0) AND (t0.c1))) NOT BETWEEN (((t0.c1)|(t0.c2))) AND (0x5d76538a))) ORDER BY t0.c1 DESC, (((t2.c0 IN (t0.c2, t0.c1, t2.c0))) IS TRUE) ASC, ((((((((vt0.c0 COLLATE RTRIM)OR(t0.c2)))OR(t2.c0)))OR((t0.c0 IN ()))))OR((((vt0.c0, t0.c1, '', NULL, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, '815692516', vt0.c0, t0.c1)) AND ((t0.c0, t2.c0, vt0.c0, v0.c0, t0.c1)))));
SELECT COUNT(*) FROM t0, vt0, t2, v0 WHERE (((((t0.c2) BETWEEN (vt0.c0) AND (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (vt0.c0) AND (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt0, t2, v0);
SELECT COUNT(*) FROM t0, vt0, t2, v0 WHERE (((((t0.c2) BETWEEN (vt0.c0) AND (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (vt0.c0) AND (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt0, t2, v0);
SELECT COUNT(*) FROM t0, vt0, t2, v0 WHERE (((((t0.c2) BETWEEN (vt0.c0) AND (t0.c0))) ISNULL));
SELECT * FROM t2, t0, v0 WHERE ((NOT (0.23769045084432716))) ORDER BY ((((t0.c1)&(t0.c1))) IS TRUE), t2.c0, CASE WHEN (t2.c0 IN (t0.c1)) THEN NULL ELSE CAST(t2.c0 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (0.23769045084432716))) IS TRUE)  as count FROM t2, t0, v0 ORDER BY ((((t0.c1)&(t0.c1))) IS TRUE), t2.c0, CASE WHEN (t2.c0 IN (t0.c1)) THEN NULL ELSE CAST(t2.c0 AS REAL) END  NULLS FIRST);
SELECT * FROM t2, t0, v0 WHERE ((NOT (0.23769045084432716))) ORDER BY ((((t0.c1)&(t0.c1))) IS TRUE), t2.c0, CASE WHEN (t2.c0 IN (t0.c1)) THEN NULL ELSE CAST(t2.c0 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (0.23769045084432716))) IS TRUE)  as count FROM t2, t0, v0 ORDER BY ((((t0.c1)&(t0.c1))) IS TRUE), t2.c0, CASE WHEN (t2.c0 IN (t0.c1)) THEN NULL ELSE CAST(t2.c0 AS REAL) END  NULLS FIRST);
SELECT * FROM t2, t0, v0 WHERE ((NOT (0.23769045084432716))) ORDER BY ((((t0.c1)&(t0.c1))) IS TRUE), t2.c0, CASE WHEN (t2.c0 IN (t0.c1)) THEN NULL ELSE CAST(t2.c0 AS REAL) END  NULLS FIRST;
SELECT COUNT(*) FROM v0, t2, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t2, t0, vt0);
SELECT COUNT(*) FROM v0, t2, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t2, t0, vt0);
SELECT COUNT(*) FROM v0, t2, t0, vt0 WHERE (t0.c0);
SELECT ALL * FROM t0, v0 CROSS JOIN t2 ON CAST(rtreenode(v0.c0, v0.c0) AS NUMERIC) WHERE (0.6812579158038369);
SELECT SUM(count) FROM (SELECT ((0.6812579158038369) IS TRUE)  as count FROM t0, v0 CROSS JOIN t2 ON CAST(rtreenode(v0.c0, v0.c0) AS NUMERIC));
SELECT ALL * FROM t0, v0 CROSS JOIN t2 ON CAST(rtreenode(v0.c0, v0.c0) AS NUMERIC) WHERE (0.6812579158038369);
SELECT SUM(count) FROM (SELECT ((0.6812579158038369) IS TRUE)  as count FROM t0, v0 CROSS JOIN t2 ON CAST(rtreenode(v0.c0, v0.c0) AS NUMERIC));
SELECT ALL * FROM t0, v0 CROSS JOIN t2 ON CAST(rtreenode(v0.c0, v0.c0) AS NUMERIC) WHERE (0.6812579158038369);
SELECT * FROM v0, t0, t2 WHERE ((((((t2.c0, v0.c0, v0.c0)) BETWEEN ((t0.c0, t0.c1, t2.c0)) AND ((NULL, t2.c0, t0.c1))))>>(v0.c0))) ORDER BY (TYPEOF(t0.c2) IN (((t0.c2)-(t2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c0, v0.c0, v0.c0)) BETWEEN ((t0.c0, t0.c1, t2.c0)) AND ((NULL, t2.c0, t0.c1))))>>(v0.c0))) IS TRUE)  as count FROM v0, t0, t2 ORDER BY (TYPEOF(t0.c2) IN (((t0.c2)-(t2.c0))))  NULLS FIRST);
SELECT * FROM v0, t0, t2 WHERE ((((((t2.c0, v0.c0, v0.c0)) BETWEEN ((t0.c0, t0.c1, t2.c0)) AND ((NULL, t2.c0, t0.c1))))>>(v0.c0))) ORDER BY (TYPEOF(t0.c2) IN (((t0.c2)-(t2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c0, v0.c0, v0.c0)) BETWEEN ((t0.c0, t0.c1, t2.c0)) AND ((NULL, t2.c0, t0.c1))))>>(v0.c0))) IS TRUE)  as count FROM v0, t0, t2 ORDER BY (TYPEOF(t0.c2) IN (((t0.c2)-(t2.c0))))  NULLS FIRST);
SELECT * FROM v0, t0, t2 WHERE ((((((t2.c0, v0.c0, v0.c0)) BETWEEN ((t0.c0, t0.c1, t2.c0)) AND ((NULL, t2.c0, t0.c1))))>>(v0.c0))) ORDER BY (TYPEOF(t0.c2) IN (((t0.c2)-(t2.c0))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT * FROM t0, v0 WHERE ('0.5059785830160125');
SELECT SUM(count) FROM (SELECT ALL (('0.5059785830160125') IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ('0.5059785830160125');
SELECT SUM(count) FROM (SELECT ALL (('0.5059785830160125') IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ('0.5059785830160125');
SELECT ALL COUNT(*) FROM v0, t2 WHERE (((((((0.7370767142515358)>(v0.c0)))OR(((t2.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((0.7370767142515358)>(v0.c0)))OR(((t2.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM v0, t2);
SELECT ALL COUNT(*) FROM v0, t2 WHERE (((((((0.7370767142515358)>(v0.c0)))OR(((t2.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((0.7370767142515358)>(v0.c0)))OR(((t2.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM v0, t2);
SELECT ALL COUNT(*) FROM v0, t2 WHERE (((((((0.7370767142515358)>(v0.c0)))OR(((t2.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t2 ON vt0.c0 INNER JOIN v0 ON CAST(((((((((((((NULL)AND(t2.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t2.c0)) AS INTEGER) WHERE (((v0.c0)&((((t2.c0))<((vt0.c0)))))) ORDER BY ((CASE v0.c0  WHEN 0.9892380283592089 THEN vt0.c0 END)/(((vt0.c0)GLOB(0.47368666069658694))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)&((((t2.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN t2 ON vt0.c0 INNER JOIN v0 ON CAST(((((((((((((NULL)AND(t2.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t2.c0)) AS INTEGER) ORDER BY ((CASE v0.c0  WHEN 0.9892380283592089 THEN vt0.c0 END)/(((vt0.c0)GLOB(0.47368666069658694))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t2 ON vt0.c0 INNER JOIN v0 ON CAST(((((((((((((NULL)AND(t2.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t2.c0)) AS INTEGER) WHERE (((v0.c0)&((((t2.c0))<((vt0.c0)))))) ORDER BY ((CASE v0.c0  WHEN 0.9892380283592089 THEN vt0.c0 END)/(((vt0.c0)GLOB(0.47368666069658694))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)&((((t2.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN t2 ON vt0.c0 INNER JOIN v0 ON CAST(((((((((((((NULL)AND(t2.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t2.c0)) AS INTEGER) ORDER BY ((CASE v0.c0  WHEN 0.9892380283592089 THEN vt0.c0 END)/(((vt0.c0)GLOB(0.47368666069658694))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t2 ON vt0.c0 INNER JOIN v0 ON CAST(((((((((((((NULL)AND(t2.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t2.c0)) AS INTEGER) WHERE (((v0.c0)&((((t2.c0))<((vt0.c0)))))) ORDER BY ((CASE v0.c0  WHEN 0.9892380283592089 THEN vt0.c0 END)/(((vt0.c0)GLOB(0.47368666069658694))))  NULLS FIRST;
SELECT ALL * FROM v0, t2, t0 WHERE (x'95fd');
SELECT SUM(count) FROM (SELECT ALL ((x'95fd') IS TRUE)  as count FROM v0, t2, t0);
SELECT ALL * FROM v0, t2, t0 WHERE (x'95fd');
SELECT SUM(count) FROM (SELECT ALL ((x'95fd') IS TRUE)  as count FROM v0, t2, t0);
SELECT ALL * FROM v0, t2, t0 WHERE (x'95fd');
SELECT ALL * FROM v0, vt0, t0, t2 WHERE (CAST(((t0.c1)GLOB(t0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)GLOB(t0.c2)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, t0, t2);
SELECT ALL * FROM v0, vt0, t0, t2 WHERE (CAST(((t0.c1)GLOB(t0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)GLOB(t0.c2)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, t0, t2);
SELECT ALL * FROM v0, vt0, t0, t2 WHERE (CAST(((t0.c1)GLOB(t0.c2)) AS BLOB));
SELECT COUNT(*) FROM vt0, v0, t2, t0 WHERE (((t0.c2 IN ()) IN ())) ORDER BY (((v0.c0 IN (t2.c0, t2.c0)))LIKE((vt0.c0 IN (t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0, t2, t0 ORDER BY (((v0.c0 IN (t2.c0, t2.c0)))LIKE((vt0.c0 IN (t0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t2, t0 WHERE (((t0.c2 IN ()) IN ())) ORDER BY (((v0.c0 IN (t2.c0, t2.c0)))LIKE((vt0.c0 IN (t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0, v0, t2, t0 ORDER BY (((v0.c0 IN (t2.c0, t2.c0)))LIKE((vt0.c0 IN (t0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t2, t0 WHERE (((t0.c2 IN ()) IN ())) ORDER BY (((v0.c0 IN (t2.c0, t2.c0)))LIKE((vt0.c0 IN (t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM v0, t2 WHERE ((t2.c0 IN ()) COLLATE NOCASE) ORDER BY ((((v0.c0) IS TRUE))|(t2.c0)) ASC, (((('1802267369')AND(v0.c0))) ISNULL)  NULLS FIRST, ((CASE t2.c0  WHEN t2.c0 THEN NULL WHEN NULL THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)-(((t2.c0) NOT BETWEEN (t2.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((t2.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0, t2 ORDER BY ((((v0.c0) IS TRUE))|(t2.c0)) ASC, (((('1802267369')AND(v0.c0))) ISNULL)  NULLS FIRST, ((CASE t2.c0  WHEN t2.c0 THEN NULL WHEN NULL THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)-(((t2.c0) NOT BETWEEN (t2.c0) AND (v0.c0)))));
SELECT ALL * FROM v0, t2 WHERE ((t2.c0 IN ()) COLLATE NOCASE) ORDER BY ((((v0.c0) IS TRUE))|(t2.c0)) ASC, (((('1802267369')AND(v0.c0))) ISNULL)  NULLS FIRST, ((CASE t2.c0  WHEN t2.c0 THEN NULL WHEN NULL THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)-(((t2.c0) NOT BETWEEN (t2.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((t2.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0, t2 ORDER BY ((((v0.c0) IS TRUE))|(t2.c0)) ASC, (((('1802267369')AND(v0.c0))) ISNULL)  NULLS FIRST, ((CASE t2.c0  WHEN t2.c0 THEN NULL WHEN NULL THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)-(((t2.c0) NOT BETWEEN (t2.c0) AND (v0.c0)))));
SELECT ALL * FROM v0, t2 WHERE ((t2.c0 IN ()) COLLATE NOCASE) ORDER BY ((((v0.c0) IS TRUE))|(t2.c0)) ASC, (((('1802267369')AND(v0.c0))) ISNULL)  NULLS FIRST, ((CASE t2.c0  WHEN t2.c0 THEN NULL WHEN NULL THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)-(((t2.c0) NOT BETWEEN (t2.c0) AND (v0.c0))));
SELECT ALL COUNT(*) FROM t2 LEFT OUTER JOIN t0 ON (((t0.c2 IN ()))=((((vt0.c0, t0.c2, t0.c1))>((t0.c0, t0.c0, t0.c0))))) INNER JOIN vt0 ON (((((((t0.c2, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c1, vt0.c0)) AND ((t0.c0, x'', t0.c1))))AND(((t0.c1) BETWEEN (vt0.c0) AND ('-424656199')))))AND(((t2.c0)%(t0.c0)))) WHERE (((((vt0.c0) NOTNULL))>=(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))>=(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON (((t0.c2 IN ()))==((((vt0.c0, t0.c2, t0.c1))>((t0.c0, t0.c0, t0.c0))))) INNER JOIN vt0 ON (((((((t0.c2, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c1, vt0.c0)) AND ((t0.c0, x'', t0.c1))))AND(((t0.c1) BETWEEN (vt0.c0) AND ('-424656199')))))AND(((t2.c0)%(t0.c0)))));
SELECT ALL COUNT(*) FROM t2 LEFT OUTER JOIN t0 ON (((t0.c2 IN ()))=((((vt0.c0, t0.c2, t0.c1))>((t0.c0, t0.c0, t0.c0))))) INNER JOIN vt0 ON (((((((t0.c2, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c1, vt0.c0)) AND ((t0.c0, x'', t0.c1))))AND(((t0.c1) BETWEEN (vt0.c0) AND ('-424656199')))))AND(((t2.c0)%(t0.c0)))) WHERE (((((vt0.c0) NOTNULL))>=(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))>=(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON (((t0.c2 IN ()))==((((vt0.c0, t0.c2, t0.c1))>((t0.c0, t0.c0, t0.c0))))) INNER JOIN vt0 ON (((((((t0.c2, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c1, vt0.c0)) AND ((t0.c0, x'', t0.c1))))AND(((t0.c1) BETWEEN (vt0.c0) AND ('-424656199')))))AND(((t2.c0)%(t0.c0)))));
SELECT ALL COUNT(*) FROM t2 LEFT OUTER JOIN t0 ON (((t0.c2 IN ()))=((((vt0.c0, t0.c2, t0.c1))>((t0.c0, t0.c0, t0.c0))))) INNER JOIN vt0 ON (((((((t0.c2, t0.c2, vt0.c0)) BETWEEN ((t0.c0, t0.c1, vt0.c0)) AND ((t0.c0, x'', t0.c1))))AND(((t0.c1) BETWEEN (vt0.c0) AND ('-424656199')))))AND(((t2.c0)%(t0.c0)))) WHERE (((((vt0.c0) NOTNULL))>=(CAST(t0.c0 AS BLOB))));
SELECT ALL * FROM t2 RIGHT OUTER JOIN t0 ON ((((t0.c2)IS NOT(t0.c1)))>(((((((((x'2e8e')AND(v0.c0)))OR(t2.c0)))OR(x'')))OR(t0.c1)))) INNER JOIN v0 ON t0.c0 WHERE ((((((((t0.c2)AND(t2.c0)))OR(t0.c0))))<=(((t0.c2 IN ()))))) ORDER BY (~ (t0.c2 COLLATE NOCASE)) ASC, t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c2)AND(t2.c0)))OR(t0.c0))))<=(((t0.c2 IN ()))))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN t0 ON ((((t0.c2)IS NOT(t0.c1)))>(((((((((x'2e8e')AND(v0.c0)))OR(t2.c0)))OR(x'')))OR(t0.c1)))) INNER JOIN v0 ON t0.c0 ORDER BY (~ (t0.c2 COLLATE NOCASE)) ASC, t0.c1 DESC  NULLS LAST);
SELECT ALL * FROM t2 RIGHT OUTER JOIN t0 ON ((((t0.c2)IS NOT(t0.c1)))>(((((((((x'2e8e')AND(v0.c0)))OR(t2.c0)))OR(x'')))OR(t0.c1)))) INNER JOIN v0 ON t0.c0 WHERE ((((((((t0.c2)AND(t2.c0)))OR(t0.c0))))<=(((t0.c2 IN ()))))) ORDER BY (~ (t0.c2 COLLATE NOCASE)) ASC, t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c2)AND(t2.c0)))OR(t0.c0))))<=(((t0.c2 IN ()))))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN t0 ON ((((t0.c2)IS NOT(t0.c1)))>(((((((((x'2e8e')AND(v0.c0)))OR(t2.c0)))OR(x'')))OR(t0.c1)))) INNER JOIN v0 ON t0.c0 ORDER BY (~ (t0.c2 COLLATE NOCASE)) ASC, t0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c0)IS(((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS(((t0.c1) BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c0)IS(((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS(((t0.c1) BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c0)IS(((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ('l4HX') ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE NOCASE COLLATE BINARY, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (('l4HX') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE NOCASE COLLATE BINARY, NULL ASC);
SELECT COUNT(*) FROM vt0 WHERE ('l4HX') ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE NOCASE COLLATE BINARY, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (('l4HX') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE NOCASE COLLATE BINARY, NULL ASC);
SELECT COUNT(*) FROM vt0 WHERE ('l4HX') ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE NOCASE COLLATE BINARY, NULL ASC;
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN t2 ON ((((t2.c0)-(t2.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0 COLLATE BINARY)) WHERE (((vt0.c0)IS(v0.c0)) COLLATE BINARY) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t2 ON ((((t2.c0)-(t2.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0 COLLATE BINARY)) ORDER BY x'');
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN t2 ON ((((t2.c0)-(t2.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0 COLLATE BINARY)) WHERE (((vt0.c0)IS(v0.c0)) COLLATE BINARY) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t2 ON ((((t2.c0)-(t2.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0 COLLATE BINARY)) ORDER BY x'');
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN t2 ON ((((t2.c0)-(t2.c0))) BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0 COLLATE BINARY)) WHERE (((vt0.c0)IS(v0.c0)) COLLATE BINARY) ORDER BY x'';
SELECT ALL COUNT(*) FROM t0, t2 INNER JOIN vt0 ON LIKELIHOOD(DISTINCT CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, 0.278796095766903) LEFT OUTER JOIN v0 ON ((((vt0.c0) NOTNULL)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((- (t2.c0)))) WHERE (t0.c1) ORDER BY HEX(DISTINCT ((t0.c1)<(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, t2 INNER JOIN vt0 ON LIKELIHOOD(DISTINCT CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, 0.278796095766903) LEFT OUTER JOIN v0 ON ((((vt0.c0) NOTNULL)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((- (t2.c0)))) ORDER BY HEX(DISTINCT ((t0.c1)<(v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t2 INNER JOIN vt0 ON LIKELIHOOD(DISTINCT CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, 0.278796095766903) LEFT OUTER JOIN v0 ON ((((vt0.c0) NOTNULL)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((- (t2.c0)))) WHERE (t0.c1) ORDER BY HEX(DISTINCT ((t0.c1)<(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, t2 INNER JOIN vt0 ON LIKELIHOOD(DISTINCT CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, 0.278796095766903) LEFT OUTER JOIN v0 ON ((((vt0.c0) NOTNULL)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((- (t2.c0)))) ORDER BY HEX(DISTINCT ((t0.c1)<(v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t2 INNER JOIN vt0 ON LIKELIHOOD(DISTINCT CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END, 0.278796095766903) LEFT OUTER JOIN v0 ON ((((vt0.c0) NOTNULL)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((- (t2.c0)))) WHERE (t0.c1) ORDER BY HEX(DISTINCT ((t0.c1)<(v0.c0)))  NULLS FIRST;
SELECT ALL * FROM t2, v0, vt0 NATURAL JOIN t0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(DISTINCT t0.c1) ELSE ((vt0.c0) ISNULL) END) ORDER BY (- (LENGTH(t0.c0))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (t0.c2) AND (t2.c0)))%(PRINTF(t2.c0, t2.c0, vt0.c0, vt0.c0, v0.c0))), LOWER(DISTINCT ((t0.c1) BETWEEN (v0.c0) AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(DISTINCT t0.c1) ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM t2, v0, vt0 NATURAL JOIN t0 ORDER BY (- (LENGTH(t0.c0))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (t0.c2) AND (t2.c0)))%(PRINTF(t2.c0, t2.c0, vt0.c0, vt0.c0, v0.c0))), LOWER(DISTINCT ((t0.c1) BETWEEN (v0.c0) AND (vt0.c0))) DESC);
SELECT ALL * FROM t2, v0, vt0 NATURAL JOIN t0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(DISTINCT t0.c1) ELSE ((vt0.c0) ISNULL) END) ORDER BY (- (LENGTH(t0.c0))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (t0.c2) AND (t2.c0)))%(PRINTF(t2.c0, t2.c0, vt0.c0, vt0.c0, v0.c0))), LOWER(DISTINCT ((t0.c1) BETWEEN (v0.c0) AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(DISTINCT t0.c1) ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM t2, v0, vt0 NATURAL JOIN t0 ORDER BY (- (LENGTH(t0.c0))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (t0.c2) AND (t2.c0)))%(PRINTF(t2.c0, t2.c0, vt0.c0, vt0.c0, v0.c0))), LOWER(DISTINCT ((t0.c1) BETWEEN (v0.c0) AND (vt0.c0))) DESC);
SELECT ALL * FROM t2, v0, vt0 NATURAL JOIN t0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(DISTINCT t0.c1) ELSE ((vt0.c0) ISNULL) END) ORDER BY (- (LENGTH(t0.c0))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (t0.c2) AND (t2.c0)))%(PRINTF(t2.c0, t2.c0, vt0.c0, vt0.c0, v0.c0))), LOWER(DISTINCT ((t0.c1) BETWEEN (v0.c0) AND (vt0.c0))) DESC;
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c1 COLLATE BINARY) IS TRUE) CROSS JOIN t2 ON ((((t0.c2) NOTNULL))>(CASE v0.c0  WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN NULL WHEN '1262206638' THEN vt0.c0 ELSE t0.c1 END)) FULL OUTER JOIN vt0 ON '' WHERE (((((((((((0xffffffffd118397b) IS TRUE))AND('#,S#&M')))OR(LIKELIHOOD(t0.c1, 0.8883560047526069))))AND((~ (v0.c0)))))AND(t2.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((0xffffffffd118397b) IS TRUE))AND('#,S#&M')))OR(LIKELIHOOD(t0.c1, 0.8883560047526069))))AND((~ (v0.c0)))))AND(t2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c1 COLLATE BINARY) IS TRUE) CROSS JOIN t2 ON ((((t0.c2) NOTNULL))>(CASE v0.c0  WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN NULL WHEN '1262206638' THEN vt0.c0 ELSE t0.c1 END)) FULL OUTER JOIN vt0 ON '');
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c1 COLLATE BINARY) IS TRUE) CROSS JOIN t2 ON ((((t0.c2) NOTNULL))>(CASE v0.c0  WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN NULL WHEN '1262206638' THEN vt0.c0 ELSE t0.c1 END)) FULL OUTER JOIN vt0 ON '' WHERE (((((((((((0xffffffffd118397b) IS TRUE))AND('#,S#&M')))OR(LIKELIHOOD(t0.c1, 0.8883560047526069))))AND((~ (v0.c0)))))AND(t2.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((0xffffffffd118397b) IS TRUE))AND('#,S#&M')))OR(LIKELIHOOD(t0.c1, 0.8883560047526069))))AND((~ (v0.c0)))))AND(t2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c1 COLLATE BINARY) IS TRUE) CROSS JOIN t2 ON ((((t0.c2) NOTNULL))>(CASE v0.c0  WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN NULL WHEN '1262206638' THEN vt0.c0 ELSE t0.c1 END)) FULL OUTER JOIN vt0 ON '');
SELECT * FROM v0, t2, t0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM v0, t2, t0);
SELECT * FROM v0, t2, t0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM v0, t2, t0);
SELECT * FROM v0, t2, t0 WHERE (SQLITE_VERSION());
SELECT ALL * FROM t2, vt0, t0 WHERE (((((t0.c0) IS FALSE)) NOT NULL)) ORDER BY CASE WHEN '0l' THEN x'9584' END DESC  NULLS LAST, 'bh77MW_' DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY CASE WHEN '0l' THEN x'9584' END DESC  NULLS LAST, 'bh77MW_' DESC);
SELECT ALL * FROM t2, vt0, t0 WHERE (((((t0.c0) IS FALSE)) NOT NULL)) ORDER BY CASE WHEN '0l' THEN x'9584' END DESC  NULLS LAST, 'bh77MW_' DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY CASE WHEN '0l' THEN x'9584' END DESC  NULLS LAST, 'bh77MW_' DESC);
SELECT ALL * FROM t2, vt0, t0 WHERE (((((t0.c0) IS FALSE)) NOT NULL)) ORDER BY CASE WHEN '0l' THEN x'9584' END DESC  NULLS LAST, 'bh77MW_' DESC;
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (LENGTH('')) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH('')) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY t0.c2);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (LENGTH('')) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH('')) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY t0.c2);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (LENGTH('')) ORDER BY t0.c2;
SELECT * FROM vt0, t2 RIGHT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED((t2.c0 IN ())) WHERE (SQLITE_VERSION()) ORDER BY ((CAST(vt0.c0 AS BLOB))%(((vt0.c0) IS TRUE))), CASE WHEN v0.c0 THEN '' ELSE t2.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, t2 RIGHT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED((t2.c0 IN ())) ORDER BY ((CAST(vt0.c0 AS BLOB))%(((vt0.c0) IS TRUE))), CASE WHEN v0.c0 THEN '' ELSE t2.c0 END COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt0, t2 RIGHT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED((t2.c0 IN ())) WHERE (SQLITE_VERSION()) ORDER BY ((CAST(vt0.c0 AS BLOB))%(((vt0.c0) IS TRUE))), CASE WHEN v0.c0 THEN '' ELSE t2.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, t2 RIGHT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED((t2.c0 IN ())) ORDER BY ((CAST(vt0.c0 AS BLOB))%(((vt0.c0) IS TRUE))), CASE WHEN v0.c0 THEN '' ELSE t2.c0 END COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt0, t2 RIGHT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED((t2.c0 IN ())) WHERE (SQLITE_VERSION()) ORDER BY ((CAST(vt0.c0 AS BLOB))%(((vt0.c0) IS TRUE))), CASE WHEN v0.c0 THEN '' ELSE t2.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM t0, v0, t2 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) THEN 0.7042021192286175 WHEN t0.c2 COLLATE NOCASE THEN x'' WHEN json_array_length(t0.c1) THEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c1)) END) ORDER BY ((((0.23829939425555813)OR((((''))>((t2.c0))))))OR(NULL COLLATE NOCASE)) ASC  NULLS LAST, ((((((v0.c0)AND(t0.c0)))AND(0x26120c63)))LIKE(CAST(t0.c2 AS NUMERIC))), t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) THEN 0.7042021192286175 WHEN t0.c2 COLLATE NOCASE THEN x'' WHEN json_array_length(t0.c1) THEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c1)) END) IS TRUE)  as count FROM t0, v0, t2 ORDER BY ((((0.23829939425555813)OR((((''))>((t2.c0))))))OR(NULL COLLATE NOCASE)) ASC  NULLS LAST, ((((((v0.c0)AND(t0.c0)))AND(0x26120c63)))LIKE(CAST(t0.c2 AS NUMERIC))), t0.c2  NULLS LAST);
SELECT * FROM t0, v0, t2 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) THEN 0.7042021192286175 WHEN t0.c2 COLLATE NOCASE THEN x'' WHEN json_array_length(t0.c1) THEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c1)) END) ORDER BY ((((0.23829939425555813)OR((((''))>((t2.c0))))))OR(NULL COLLATE NOCASE)) ASC  NULLS LAST, ((((((v0.c0)AND(t0.c0)))AND(0x26120c63)))LIKE(CAST(t0.c2 AS NUMERIC))), t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) THEN 0.7042021192286175 WHEN t0.c2 COLLATE NOCASE THEN x'' WHEN json_array_length(t0.c1) THEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c1)) END) IS TRUE)  as count FROM t0, v0, t2 ORDER BY ((((0.23829939425555813)OR((((''))>((t2.c0))))))OR(NULL COLLATE NOCASE)) ASC  NULLS LAST, ((((((v0.c0)AND(t0.c0)))AND(0x26120c63)))LIKE(CAST(t0.c2 AS NUMERIC))), t0.c2  NULLS LAST);
SELECT * FROM t0, v0, t2 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) THEN 0.7042021192286175 WHEN t0.c2 COLLATE NOCASE THEN x'' WHEN json_array_length(t0.c1) THEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c1)) END) ORDER BY ((((0.23829939425555813)OR((((''))>((t2.c0))))))OR(NULL COLLATE NOCASE)) ASC  NULLS LAST, ((((((v0.c0)AND(t0.c0)))AND(0x26120c63)))LIKE(CAST(t0.c2 AS NUMERIC))), t0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c2)&(t0.c1)) WHEN ((t0.c1) NOTNULL) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c1)) WHEN LENGTH(t0.c0) THEN CASE t0.c2  WHEN t0.c1 THEN t0.c0 END ELSE ((t0.c2)OR(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c2)&(t0.c1)) WHEN ((t0.c1) NOTNULL) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c1)) WHEN LENGTH(t0.c0) THEN CASE t0.c2  WHEN t0.c1 THEN t0.c0 END ELSE ((t0.c2)OR(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c2)&(t0.c1)) WHEN ((t0.c1) NOTNULL) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c1)) WHEN LENGTH(t0.c0) THEN CASE t0.c2  WHEN t0.c1 THEN t0.c0 END ELSE ((t0.c2)OR(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c2)&(t0.c1)) WHEN ((t0.c1) NOTNULL) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c1)) WHEN LENGTH(t0.c0) THEN CASE t0.c2  WHEN t0.c1 THEN t0.c0 END ELSE ((t0.c2)OR(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c2)&(t0.c1)) WHEN ((t0.c1) NOTNULL) THEN ((((t0.c2)AND(t0.c0)))OR(t0.c1)) WHEN LENGTH(t0.c0) THEN CASE t0.c2  WHEN t0.c1 THEN t0.c0 END ELSE ((t0.c2)OR(t0.c2)) END);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((((((v0.c0)AND(t0.c1)))AND('*^B7.')))OR(t0.c0)))AND(t0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(t0.c1)))AND('*^B7.')))OR(t0.c0)))AND(t0.c2))) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((((((v0.c0)AND(t0.c1)))AND('*^B7.')))OR(t0.c0)))AND(t0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(t0.c1)))AND('*^B7.')))OR(t0.c0)))AND(t0.c2))) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((((((v0.c0)AND(t0.c1)))AND('*^B7.')))OR(t0.c0)))AND(t0.c2))) NOT NULL));
SELECT ALL * FROM t2, t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((((t2.c0)OR(t0.c2)))AND(t0.c0)) THEN ((t0.c2)IS NOT(t0.c0)) ELSE 0.5902215894976708 END) ORDER BY (+ (t0.c1 COLLATE BINARY)) ASC, ((t2.c0)/(((t0.c0)&(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE NOCASE  WHEN ((((t2.c0)OR(t0.c2)))AND(t0.c0)) THEN ((t0.c2)IS NOT(t0.c0)) ELSE 0.5902215894976708 END) IS TRUE)  as count FROM t2, t0 ORDER BY (+ (t0.c1 COLLATE BINARY)) ASC, ((t2.c0)/(((t0.c0)&(t0.c1)))) ASC);
SELECT ALL * FROM t2, t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((((t2.c0)OR(t0.c2)))AND(t0.c0)) THEN ((t0.c2)IS NOT(t0.c0)) ELSE 0.5902215894976708 END) ORDER BY (+ (t0.c1 COLLATE BINARY)) ASC, ((t2.c0)/(((t0.c0)&(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE NOCASE  WHEN ((((t2.c0)OR(t0.c2)))AND(t0.c0)) THEN ((t0.c2)IS NOT(t0.c0)) ELSE 0.5902215894976708 END) IS TRUE)  as count FROM t2, t0 ORDER BY (+ (t0.c1 COLLATE BINARY)) ASC, ((t2.c0)/(((t0.c0)&(t0.c1)))) ASC);
SELECT ALL * FROM t2, t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((((t2.c0)OR(t0.c2)))AND(t0.c0)) THEN ((t0.c2)IS NOT(t0.c0)) ELSE 0.5902215894976708 END) ORDER BY (+ (t0.c1 COLLATE BINARY)) ASC, ((t2.c0)/(((t0.c0)&(t0.c1)))) ASC;
SELECT ALL * FROM t2 FULL OUTER JOIN vt0 ON ((LIKELIHOOD(DISTINCT t2.c0, 0.38787843159438196))IS(((vt0.c0) NOTNULL))) WHERE (x'1af4') ORDER BY ((((vt0.c0)IS NOT(t2.c0))) BETWEEN (((t2.c0)<(t2.c0))) AND (((t2.c0)||(NULL)))) ASC, ((((vt0.c0) NOTNULL)) BETWEEN ((NOT (t2.c0))) AND ((- (t2.c0))));
SELECT SUM(count) FROM (SELECT ((x'1af4') IS TRUE)  as count FROM t2 FULL OUTER JOIN vt0 ON ((LIKELIHOOD(DISTINCT t2.c0, 0.38787843159438196))IS(((vt0.c0) NOTNULL))) ORDER BY ((((vt0.c0)IS NOT(t2.c0))) BETWEEN (((t2.c0)<(t2.c0))) AND (((t2.c0)||(NULL)))) ASC, ((((vt0.c0) NOTNULL)) BETWEEN ((NOT (t2.c0))) AND ((- (t2.c0)))));
SELECT ALL * FROM t2 FULL OUTER JOIN vt0 ON ((LIKELIHOOD(DISTINCT t2.c0, 0.38787843159438196))IS(((vt0.c0) NOTNULL))) WHERE (x'1af4') ORDER BY ((((vt0.c0)IS NOT(t2.c0))) BETWEEN (((t2.c0)<(t2.c0))) AND (((t2.c0)||(NULL)))) ASC, ((((vt0.c0) NOTNULL)) BETWEEN ((NOT (t2.c0))) AND ((- (t2.c0))));
SELECT SUM(count) FROM (SELECT ((x'1af4') IS TRUE)  as count FROM t2 FULL OUTER JOIN vt0 ON ((LIKELIHOOD(DISTINCT t2.c0, 0.38787843159438196))IS(((vt0.c0) NOTNULL))) ORDER BY ((((vt0.c0)IS NOT(t2.c0))) BETWEEN (((t2.c0)<(t2.c0))) AND (((t2.c0)||(NULL)))) ASC, ((((vt0.c0) NOTNULL)) BETWEEN ((NOT (t2.c0))) AND ((- (t2.c0)))));
SELECT ALL * FROM t2 FULL OUTER JOIN vt0 ON ((LIKELIHOOD(DISTINCT t2.c0, 0.38787843159438196))IS(((vt0.c0) NOTNULL))) WHERE (x'1af4') ORDER BY ((((vt0.c0)IS NOT(t2.c0))) BETWEEN (((t2.c0)<(t2.c0))) AND (((t2.c0)||(NULL)))) ASC, ((((vt0.c0) NOTNULL)) BETWEEN ((NOT (t2.c0))) AND ((- (t2.c0))));
SELECT * FROM t0 WHERE (((t0.c1)&(0.16338621185887392))) ORDER BY 0Xffffffffab3a1235 ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c1)&(0.16338621185887392))) IS TRUE)  as count FROM t0 ORDER BY 0Xffffffffab3a1235 ASC);
SELECT * FROM t0 WHERE (((t0.c1)&(0.16338621185887392))) ORDER BY 0Xffffffffab3a1235 ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c1)&(0.16338621185887392))) IS TRUE)  as count FROM t0 ORDER BY 0Xffffffffab3a1235 ASC);
SELECT * FROM t0 WHERE (((t0.c1)&(0.16338621185887392))) ORDER BY 0Xffffffffab3a1235 ASC;
SELECT * FROM v0 WHERE (CASE x''  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE x''  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE x''  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT * FROM v0, t0, t2, vt0 WHERE ((((- (t0.c0)))-(LIKELY(vt0.c0)))) ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST, (~ (t2.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0)))-(LIKELY(vt0.c0)))) IS TRUE)  as count FROM v0, t0, t2, vt0 ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST, (~ (t2.c0 COLLATE NOCASE)));
SELECT * FROM v0, t0, t2, vt0 WHERE ((((- (t0.c0)))-(LIKELY(vt0.c0)))) ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST, (~ (t2.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0)))-(LIKELY(vt0.c0)))) IS TRUE)  as count FROM v0, t0, t2, vt0 ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST, (~ (t2.c0 COLLATE NOCASE)));
SELECT * FROM v0, t0, t2, vt0 WHERE ((((- (t0.c0)))-(LIKELY(vt0.c0)))) ORDER BY ((v0.c0 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST, (~ (t2.c0 COLLATE NOCASE));
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c0 IN (t0.c1, t0.c2)))OR(vt0.c0)))OR(TYPEOF(DISTINCT t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (t0.c1, t0.c2)))OR(vt0.c0)))OR(TYPEOF(DISTINCT t0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c0 IN (t0.c1, t0.c2)))OR(vt0.c0)))OR(TYPEOF(DISTINCT t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (t0.c1, t0.c2)))OR(vt0.c0)))OR(TYPEOF(DISTINCT t0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c0 IN (t0.c1, t0.c2)))OR(vt0.c0)))OR(TYPEOF(DISTINCT t0.c0))));
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0)))) ORDER BY (((- (vt0.c0)))>>(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))>>(vt0.c0)) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0)))) ORDER BY (((- (vt0.c0)))>>(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))>>(vt0.c0)) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0)))) ORDER BY (((- (vt0.c0)))>>(vt0.c0)) ASC;
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((+ (vt0.c0)))));
SELECT * FROM t2 WHERE (((((t2.c0)=(t2.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0)=(t2.c0))) NOT NULL)) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (((((t2.c0)=(t2.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0)=(t2.c0))) NOT NULL)) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (((((t2.c0)=(t2.c0))) NOT NULL));
SELECT * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE RTRIM) ORDER BY CAST(UNLIKELY(v0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CAST(UNLIKELY(v0.c0) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE RTRIM) ORDER BY CAST(UNLIKELY(v0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CAST(UNLIKELY(v0.c0) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE RTRIM) ORDER BY CAST(UNLIKELY(v0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0, t2, t0 WHERE (CAST((t0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt0, v0, t2, t0);
SELECT COUNT(*) FROM vt0, v0, t2, t0 WHERE (CAST((t0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt0, v0, t2, t0);
SELECT COUNT(*) FROM vt0, v0, t2, t0 WHERE (CAST((t0.c0 IN ()) AS REAL));
SELECT * FROM v0 WHERE (((((v0.c0)>(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)>(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)>(v0.c0))) ISNULL));
SELECT * FROM t2, vt0, t0, v0 WHERE (CAST(t0.c1 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t2, vt0, t0, v0);
SELECT * FROM t2, vt0, t0, v0 WHERE (CAST(t0.c1 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t2, vt0, t0, v0);
SELECT * FROM t2, vt0, t0, v0 WHERE (CAST(t0.c1 COLLATE NOCASE AS TEXT));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'7d25', v0.c0, v0.c0, v0.c0)))) BETWEEN (TRIM(DISTINCT v0.c0)) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'7d25', v0.c0, v0.c0, v0.c0)))) BETWEEN (TRIM(DISTINCT v0.c0)) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'7d25', v0.c0, v0.c0, v0.c0)))) BETWEEN (TRIM(DISTINCT v0.c0)) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'7d25', v0.c0, v0.c0, v0.c0)))) BETWEEN (TRIM(DISTINCT v0.c0)) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'7d25', v0.c0, v0.c0, v0.c0)))) BETWEEN (TRIM(DISTINCT v0.c0)) AND (v0.c0)));
SELECT ALL COUNT(*) FROM t2 WHERE ('?UF)]L');
SELECT SUM(count) FROM (SELECT ALL (('?UF)]L') IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE ('?UF)]L');
SELECT SUM(count) FROM (SELECT ALL (('?UF)]L') IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE ('?UF)]L');
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(NULL));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(NULL));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(NULL));
SELECT COUNT(*) FROM t2, vt0, v0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c2) AND (v0.c0)))GLOB(t0.c1)) WHERE ((+ (t0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0)%(t0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT (((+ (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t2, vt0, v0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c2) AND (v0.c0)))GLOB(t0.c1)) ORDER BY ((vt0.c0)%(t0.c2 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM t2, vt0, v0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c2) AND (v0.c0)))GLOB(t0.c1)) WHERE ((+ (t0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0)%(t0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT (((+ (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t2, vt0, v0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c2) AND (v0.c0)))GLOB(t0.c1)) ORDER BY ((vt0.c0)%(t0.c2 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM t2, vt0, v0 FULL OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c2) AND (v0.c0)))GLOB(t0.c1)) WHERE ((+ (t0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0)%(t0.c2 COLLATE NOCASE)) DESC;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t2 ON ((((((1.875363194E9)OR(t2.c0)))OR(vt0.c0))) NOT BETWEEN ((NOT (t2.c0))) AND (((t2.c0)>(t2.c0)))) LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM WHERE ((NOT (CAST(t2.c0 AS TEXT)))) ORDER BY ((v0.c0) BETWEEN (t2.c0) AND (vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t2.c0 AS TEXT)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t2 ON ((((((1.875363194E9)OR(t2.c0)))OR(vt0.c0))) NOT BETWEEN ((NOT (t2.c0))) AND (((t2.c0)>(t2.c0)))) LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM ORDER BY ((v0.c0) BETWEEN (t2.c0) AND (vt0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t2 ON ((((((1.875363194E9)OR(t2.c0)))OR(vt0.c0))) NOT BETWEEN ((NOT (t2.c0))) AND (((t2.c0)>(t2.c0)))) LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM WHERE ((NOT (CAST(t2.c0 AS TEXT)))) ORDER BY ((v0.c0) BETWEEN (t2.c0) AND (vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t2.c0 AS TEXT)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t2 ON ((((((1.875363194E9)OR(t2.c0)))OR(vt0.c0))) NOT BETWEEN ((NOT (t2.c0))) AND (((t2.c0)>(t2.c0)))) LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM ORDER BY ((v0.c0) BETWEEN (t2.c0) AND (vt0.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM t2, t0, v0 WHERE (((((((((0.43340823112004834)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)))AND(((t0.c2) NOT BETWEEN (t2.c0) AND (t0.c2)))))OR(v0.c0 COLLATE RTRIM)))OR(0.946235946652466 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.43340823112004834)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)))AND(((t0.c2) NOT BETWEEN (t2.c0) AND (t0.c2)))))OR(v0.c0 COLLATE RTRIM)))OR(0.946235946652466 COLLATE BINARY))) IS TRUE)  as count FROM t2, t0, v0);
SELECT ALL * FROM t2, t0, v0 WHERE (((((((((0.43340823112004834)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)))AND(((t0.c2) NOT BETWEEN (t2.c0) AND (t0.c2)))))OR(v0.c0 COLLATE RTRIM)))OR(0.946235946652466 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.43340823112004834)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)))AND(((t0.c2) NOT BETWEEN (t2.c0) AND (t0.c2)))))OR(v0.c0 COLLATE RTRIM)))OR(0.946235946652466 COLLATE BINARY))) IS TRUE)  as count FROM t2, t0, v0);
SELECT ALL * FROM t2, t0, v0 WHERE (((((((((0.43340823112004834)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END)))AND(((t0.c2) NOT BETWEEN (t2.c0) AND (t0.c2)))))OR(v0.c0 COLLATE RTRIM)))OR(0.946235946652466 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, v0, t2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, t2);
SELECT COUNT(*) FROM vt0, v0, t2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, t2);
SELECT COUNT(*) FROM vt0, v0, t2 WHERE (vt0.c0);
SELECT * FROM t0, vt0, v0 RIGHT OUTER JOIN t2 ON CAST(t2.c0 AS TEXT) WHERE (((t0.c2 COLLATE BINARY) NOT BETWEEN (((((t0.c2)AND(t0.c1)))AND(vt0.c0))) AND (((t0.c0) BETWEEN (t2.c0) AND (t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY) NOT BETWEEN (((((t0.c2)AND(t0.c1)))AND(vt0.c0))) AND (((t0.c0) BETWEEN (t2.c0) AND (t2.c0))))) IS TRUE)  as count FROM t0, vt0, v0 RIGHT OUTER JOIN t2 ON CAST(t2.c0 AS TEXT));
SELECT * FROM t0, vt0, v0 RIGHT OUTER JOIN t2 ON CAST(t2.c0 AS TEXT) WHERE (((t0.c2 COLLATE BINARY) NOT BETWEEN (((((t0.c2)AND(t0.c1)))AND(vt0.c0))) AND (((t0.c0) BETWEEN (t2.c0) AND (t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY) NOT BETWEEN (((((t0.c2)AND(t0.c1)))AND(vt0.c0))) AND (((t0.c0) BETWEEN (t2.c0) AND (t2.c0))))) IS TRUE)  as count FROM t0, vt0, v0 RIGHT OUTER JOIN t2 ON CAST(t2.c0 AS TEXT));
SELECT * FROM t0, vt0, v0 RIGHT OUTER JOIN t2 ON CAST(t2.c0 AS TEXT) WHERE (((t0.c2 COLLATE BINARY) NOT BETWEEN (((((t0.c2)AND(t0.c1)))AND(vt0.c0))) AND (((t0.c0) BETWEEN (t2.c0) AND (t2.c0)))));
SELECT * FROM t0, t2 NOT INDEXED, v0 WHERE (((((((((((((v0.c0)AND(x'')))AND(t2.c0)))OR(t0.c0)))OR(t2.c0)))AND((~ (t0.c0)))))OR(((t2.c0) BETWEEN (t0.c2) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c0)AND(x'')))AND(t2.c0)))OR(t0.c0)))OR(t2.c0)))AND((~ (t0.c0)))))OR(((t2.c0) BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM t0, t2, v0);
SELECT * FROM t0, t2 NOT INDEXED, v0 WHERE (((((((((((((v0.c0)AND(x'')))AND(t2.c0)))OR(t0.c0)))OR(t2.c0)))AND((~ (t0.c0)))))OR(((t2.c0) BETWEEN (t0.c2) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c0)AND(x'')))AND(t2.c0)))OR(t0.c0)))OR(t2.c0)))AND((~ (t0.c0)))))OR(((t2.c0) BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM t0, t2, v0);
SELECT * FROM t0, t2 NOT INDEXED, v0 WHERE (((((((((((((v0.c0)AND(x'')))AND(t2.c0)))OR(t0.c0)))OR(t2.c0)))AND((~ (t0.c0)))))OR(((t2.c0) BETWEEN (t0.c2) AND (t0.c1)))));
SELECT * FROM t0 WHERE ((((((t0.c2)/(t0.c2)), ((t0.c2)LIKE(NULL)), (((t0.c1))<>((t0.c2)))))<=((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))OR(t0.c2)))AND(t0.c1)), CAST(t0.c1 AS REAL), ((t0.c1)=(4.82154595E8)))))) ORDER BY ((((t0.c1) ISNULL)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2)/(t0.c2)), ((t0.c2)LIKE(NULL)), (((t0.c1))!=((t0.c2)))))<=((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))OR(t0.c2)))AND(t0.c1)), CAST(t0.c1 AS REAL), ((t0.c1)==(4.82154595E8)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) ISNULL)) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((t0.c2)/(t0.c2)), ((t0.c2)LIKE(NULL)), (((t0.c1))<>((t0.c2)))))<=((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))OR(t0.c2)))AND(t0.c1)), CAST(t0.c1 AS REAL), ((t0.c1)=(4.82154595E8)))))) ORDER BY ((((t0.c1) ISNULL)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2)/(t0.c2)), ((t0.c2)LIKE(NULL)), (((t0.c1))!=((t0.c2)))))<=((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))OR(t0.c2)))AND(t0.c1)), CAST(t0.c1 AS REAL), ((t0.c1)==(4.82154595E8)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) ISNULL)) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((t0.c2)/(t0.c2)), ((t0.c2)LIKE(NULL)), (((t0.c1))<>((t0.c2)))))<=((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))OR(t0.c2)))AND(t0.c1)), CAST(t0.c1 AS REAL), ((t0.c1)=(4.82154595E8)))))) ORDER BY ((((t0.c1) ISNULL)) IS TRUE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, t2 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM v0, vt0, t2);
SELECT COUNT(*) FROM v0, vt0, t2 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM v0, vt0, t2);
SELECT COUNT(*) FROM v0, vt0, t2 WHERE (CAST(NULL AS BLOB));
SELECT COUNT(*) FROM v0, t0, t2, vt0 WHERE ((((t2.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM v0, t0, t2, vt0);
SELECT COUNT(*) FROM v0, t0, t2, vt0 WHERE ((((t2.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM v0, t0, t2, vt0);
SELECT COUNT(*) FROM v0, t0, t2, vt0 WHERE ((((t2.c0 IN ())) IS FALSE));
SELECT COUNT(*) FROM t0 WHERE (CAST(0.6812579158038369 AS BLOB)) ORDER BY (((NOT (x'dea8bdd2'))) BETWEEN (CAST(t0.c1 AS TEXT)) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.6812579158038369 AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (((NOT (x'dea8bdd2'))) BETWEEN (CAST(t0.c1 AS TEXT)) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c1 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(0.6812579158038369 AS BLOB)) ORDER BY (((NOT (x'dea8bdd2'))) BETWEEN (CAST(t0.c1 AS TEXT)) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.6812579158038369 AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (((NOT (x'dea8bdd2'))) BETWEEN (CAST(t0.c1 AS TEXT)) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c1 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(0.6812579158038369 AS BLOB)) ORDER BY (((NOT (x'dea8bdd2'))) BETWEEN (CAST(t0.c1 AS TEXT)) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c1 END)) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t2, vt0 WHERE ((((t2.c0 COLLATE NOCASE))<((v0.c0)))) ORDER BY CASE (t2.c0 IN (t2.c0, t2.c0))  WHEN ((t2.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN (NOT (t2.c0)) WHEN ((vt0.c0)<=(t2.c0)) THEN t2.c0 WHEN ((t2.c0)>=(vt0.c0)) THEN ((v0.c0)*(t2.c0)) END, 'FALSE' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0 COLLATE NOCASE))<((v0.c0)))) IS TRUE)  as count FROM v0, t2, vt0 ORDER BY CASE (t2.c0 IN (t2.c0, t2.c0))  WHEN ((t2.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN (NOT (t2.c0)) WHEN ((vt0.c0)<=(t2.c0)) THEN t2.c0 WHEN ((t2.c0)>=(vt0.c0)) THEN ((v0.c0)*(t2.c0)) END, 'FALSE' DESC  NULLS LAST);
SELECT ALL * FROM v0, t2, vt0 WHERE ((((t2.c0 COLLATE NOCASE))<((v0.c0)))) ORDER BY CASE (t2.c0 IN (t2.c0, t2.c0))  WHEN ((t2.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN (NOT (t2.c0)) WHEN ((vt0.c0)<=(t2.c0)) THEN t2.c0 WHEN ((t2.c0)>=(vt0.c0)) THEN ((v0.c0)*(t2.c0)) END, 'FALSE' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0 COLLATE NOCASE))<((v0.c0)))) IS TRUE)  as count FROM v0, t2, vt0 ORDER BY CASE (t2.c0 IN (t2.c0, t2.c0))  WHEN ((t2.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN (NOT (t2.c0)) WHEN ((vt0.c0)<=(t2.c0)) THEN t2.c0 WHEN ((t2.c0)>=(vt0.c0)) THEN ((v0.c0)*(t2.c0)) END, 'FALSE' DESC  NULLS LAST);
SELECT ALL * FROM v0, t2, vt0 WHERE ((((t2.c0 COLLATE NOCASE))<((v0.c0)))) ORDER BY CASE (t2.c0 IN (t2.c0, t2.c0))  WHEN ((t2.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN (NOT (t2.c0)) WHEN ((vt0.c0)<=(t2.c0)) THEN t2.c0 WHEN ((t2.c0)>=(vt0.c0)) THEN ((v0.c0)*(t2.c0)) END, 'FALSE' DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((- (v0.c0))) AND (((0X39ab1acf) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((- (v0.c0))) AND (((0x39ab1acf) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((- (v0.c0))) AND (((0X39ab1acf) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((- (v0.c0))) AND (((0x39ab1acf) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN ((- (v0.c0))) AND (((0X39ab1acf) IS FALSE))));
SELECT * FROM t2 WHERE ((((((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))OR(((t2.c0)%(t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) ORDER BY ((((t2.c0) IS TRUE))AND(0.547627395054772)) DESC;
SELECT SUM(count) FROM (SELECT (((((((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))OR(((t2.c0)%(t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0) IS TRUE))AND(0.547627395054772)) DESC);
SELECT * FROM t2 WHERE ((((((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))OR(((t2.c0)%(t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) ORDER BY ((((t2.c0) IS TRUE))AND(0.547627395054772)) DESC;
SELECT SUM(count) FROM (SELECT (((((((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))OR(((t2.c0)%(t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0) IS TRUE))AND(0.547627395054772)) DESC);
SELECT * FROM t2 WHERE ((((((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))OR(((t2.c0)%(t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) ORDER BY ((((t2.c0) IS TRUE))AND(0.547627395054772)) DESC;
SELECT ALL * FROM t0, v0, vt0, t2 WHERE (((+ (t2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t2.c0)) IN ())) IS TRUE)  as count FROM t0, v0, vt0, t2);
SELECT ALL * FROM t0, v0, vt0, t2 WHERE (((+ (t2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t2.c0)) IN ())) IS TRUE)  as count FROM t0, v0, vt0, t2);
SELECT ALL * FROM t0, v0, vt0, t2 WHERE (((+ (t2.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (t0.c0) ORDER BY '-1073883445', CAST(t0.c0 COLLATE RTRIM AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY '-1073883445', CAST(t0.c0 COLLATE RTRIM AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (t0.c0) ORDER BY '-1073883445', CAST(t0.c0 COLLATE RTRIM AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY '-1073883445', CAST(t0.c0 COLLATE RTRIM AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (t0.c0) ORDER BY '-1073883445', CAST(t0.c0 COLLATE RTRIM AS NUMERIC);
SELECT COUNT(*) FROM t2, v0 LEFT OUTER JOIN vt0 ON ((((t0.c0)AND(NULL)))AND(t0.c1)) COLLATE BINARY CROSS JOIN t0 ON (((0.25810398688282643))<=((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE '1183497542' END))) WHERE ((((((((t2.c0)) BETWEEN ((vt0.c0)) AND ((t0.c2))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0)))))OR(CAST(t0.c0 AS NUMERIC)))) ORDER BY v0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t2.c0)) BETWEEN ((vt0.c0)) AND ((t0.c2))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0)))))OR(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t2, v0 LEFT OUTER JOIN vt0 ON ((((t0.c0)AND(NULL)))AND(t0.c1)) COLLATE BINARY CROSS JOIN t0 ON (((0.25810398688282643))<=((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE '1183497542' END))) ORDER BY v0.c0 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t2, v0 LEFT OUTER JOIN vt0 ON ((((t0.c0)AND(NULL)))AND(t0.c1)) COLLATE BINARY CROSS JOIN t0 ON (((0.25810398688282643))<=((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE '1183497542' END))) WHERE ((((((((t2.c0)) BETWEEN ((vt0.c0)) AND ((t0.c2))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0)))))OR(CAST(t0.c0 AS NUMERIC)))) ORDER BY v0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t2.c0)) BETWEEN ((vt0.c0)) AND ((t0.c2))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0)))))OR(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t2, v0 LEFT OUTER JOIN vt0 ON ((((t0.c0)AND(NULL)))AND(t0.c1)) COLLATE BINARY CROSS JOIN t0 ON (((0.25810398688282643))<=((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE '1183497542' END))) ORDER BY v0.c0 COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((((t0.c2)|(vt0.c0))))<((('-1908623632' IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)|(vt0.c0))))<((('-1908623632' IN ()))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((((t0.c2)|(vt0.c0))))<((('-1908623632' IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)|(vt0.c0))))<((('-1908623632' IN ()))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((((t0.c2)|(vt0.c0))))<((('-1908623632' IN ())))));
SELECT ALL * FROM vt0, v0, t2, t0 WHERE ((((t0.c2 COLLATE BINARY, CASE WHEN t0.c0 THEN 0.1654525727173719 ELSE v0.c0 END, 374927485))<=(((vt0.c0 IN ()), (((vt0.c0))<((vt0.c0))), IFNULL(DISTINCT v0.c0, v0.c0))))) ORDER BY (((v0.c0) IS FALSE) IN ()), NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 COLLATE BINARY, CASE WHEN t0.c0 THEN 0.1654525727173719 ELSE v0.c0 END, 374927485))<=(((vt0.c0 IN ()), (((vt0.c0))<((vt0.c0))), IFNULL(DISTINCT v0.c0, v0.c0))))) IS TRUE)  as count FROM vt0, v0, t2, t0 ORDER BY (((v0.c0) IS FALSE) IN ()), NULL  NULLS FIRST);
SELECT ALL * FROM vt0, v0, t2, t0 WHERE ((((t0.c2 COLLATE BINARY, CASE WHEN t0.c0 THEN 0.1654525727173719 ELSE v0.c0 END, 374927485))<=(((vt0.c0 IN ()), (((vt0.c0))<((vt0.c0))), IFNULL(DISTINCT v0.c0, v0.c0))))) ORDER BY (((v0.c0) IS FALSE) IN ()), NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 COLLATE BINARY, CASE WHEN t0.c0 THEN 0.1654525727173719 ELSE v0.c0 END, 374927485))<=(((vt0.c0 IN ()), (((vt0.c0))<((vt0.c0))), IFNULL(DISTINCT v0.c0, v0.c0))))) IS TRUE)  as count FROM vt0, v0, t2, t0 ORDER BY (((v0.c0) IS FALSE) IN ()), NULL  NULLS FIRST);
SELECT ALL * FROM vt0, v0, t2, t0 WHERE ((((t0.c2 COLLATE BINARY, CASE WHEN t0.c0 THEN 0.1654525727173719 ELSE v0.c0 END, 374927485))<=(((vt0.c0 IN ()), (((vt0.c0))<((vt0.c0))), IFNULL(DISTINCT v0.c0, v0.c0))))) ORDER BY (((v0.c0) IS FALSE) IN ()), NULL  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((+ (((t0.c0) BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY ((CASE t0.c0  WHEN t0.c1 THEN vt0.c0 ELSE vt0.c0 END)GLOB(t0.c1)) DESC  NULLS FIRST, '0.23769045084432716' ASC, ((((NULL)>>(NULL))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE t0.c0  WHEN t0.c1 THEN vt0.c0 ELSE vt0.c0 END)GLOB(t0.c1)) DESC  NULLS FIRST, '0.23769045084432716' ASC, ((((NULL)>>(NULL))) ISNULL));
SELECT ALL * FROM vt0, t0 WHERE ((+ (((t0.c0) BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY ((CASE t0.c0  WHEN t0.c1 THEN vt0.c0 ELSE vt0.c0 END)GLOB(t0.c1)) DESC  NULLS FIRST, '0.23769045084432716' ASC, ((((NULL)>>(NULL))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE t0.c0  WHEN t0.c1 THEN vt0.c0 ELSE vt0.c0 END)GLOB(t0.c1)) DESC  NULLS FIRST, '0.23769045084432716' ASC, ((((NULL)>>(NULL))) ISNULL));
SELECT ALL * FROM vt0, t0 WHERE ((+ (((t0.c0) BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY ((CASE t0.c0  WHEN t0.c1 THEN vt0.c0 ELSE vt0.c0 END)GLOB(t0.c1)) DESC  NULLS FIRST, '0.23769045084432716' ASC, ((((NULL)>>(NULL))) ISNULL);
SELECT ALL * FROM t2, t0, v0 WHERE (COALESCE(DISTINCT CASE WHEN v0.c0 THEN t2.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.2618723447121122 THEN t0.c2 ELSE t2.c0 END, (NULL IN ())));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CASE WHEN v0.c0 THEN t2.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.2618723447121122 THEN t0.c2 ELSE t2.c0 END, (NULL IN ()))) IS TRUE)  as count FROM t2, t0, v0);
SELECT ALL * FROM t2, t0, v0 WHERE (COALESCE(DISTINCT CASE WHEN v0.c0 THEN t2.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.2618723447121122 THEN t0.c2 ELSE t2.c0 END, (NULL IN ())));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CASE WHEN v0.c0 THEN t2.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.2618723447121122 THEN t0.c2 ELSE t2.c0 END, (NULL IN ()))) IS TRUE)  as count FROM t2, t0, v0);
SELECT ALL * FROM t2, t0, v0 WHERE (COALESCE(DISTINCT CASE WHEN v0.c0 THEN t2.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.2618723447121122 THEN t0.c2 ELSE t2.c0 END, (NULL IN ())));
SELECT COUNT(*) FROM t2 WHERE (ABS(t2.c0)) ORDER BY ((((t2.c0, t2.c0, t2.c0))>=((t2.c0, t2.c0, t2.c0))) IN (t2.c0 COLLATE BINARY))  NULLS LAST, ((CAST(-1104091411 AS REAL))LIKE((- (t2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(t2.c0)) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0, t2.c0, t2.c0))>=((t2.c0, t2.c0, t2.c0))) IN (t2.c0 COLLATE BINARY))  NULLS LAST, ((CAST(-1104091411 AS REAL))LIKE((- (t2.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE (ABS(t2.c0)) ORDER BY ((((t2.c0, t2.c0, t2.c0))>=((t2.c0, t2.c0, t2.c0))) IN (t2.c0 COLLATE BINARY))  NULLS LAST, ((CAST(-1104091411 AS REAL))LIKE((- (t2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(t2.c0)) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0, t2.c0, t2.c0))>=((t2.c0, t2.c0, t2.c0))) IN (t2.c0 COLLATE BINARY))  NULLS LAST, ((CAST(-1104091411 AS REAL))LIKE((- (t2.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE (ABS(t2.c0)) ORDER BY ((((t2.c0, t2.c0, t2.c0))>=((t2.c0, t2.c0, t2.c0))) IN (t2.c0 COLLATE BINARY))  NULLS LAST, ((CAST(-1104091411 AS REAL))LIKE((- (t2.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0, vt0, t2 WHERE (((((((t0.c0)|(t0.c1)))AND(t0.c0)))OR(((vt0.c0) ISNULL)))) ORDER BY (+ ((- (NULL)))) ASC  NULLS FIRST, (+ (t0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)|(t0.c1)))AND(t0.c0)))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM v0, t0, vt0, t2 ORDER BY (+ ((- (NULL)))) ASC  NULLS FIRST, (+ (t0.c2 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt0, t2 WHERE (((((((t0.c0)|(t0.c1)))AND(t0.c0)))OR(((vt0.c0) ISNULL)))) ORDER BY (+ ((- (NULL)))) ASC  NULLS FIRST, (+ (t0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)|(t0.c1)))AND(t0.c0)))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM v0, t0, vt0, t2 ORDER BY (+ ((- (NULL)))) ASC  NULLS FIRST, (+ (t0.c2 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM v0, t0, vt0, t2 WHERE (((((((t0.c0)|(t0.c1)))AND(t0.c0)))OR(((vt0.c0) ISNULL)))) ORDER BY (+ ((- (NULL)))) ASC  NULLS FIRST, (+ (t0.c2 COLLATE NOCASE)) ASC;
SELECT * FROM t2, t0 WHERE ((((CAST(t2.c0 AS BLOB), 'nYd<퐍v_閭' COLLATE RTRIM, CASE t0.c1  WHEN t2.c0 THEN t0.c2 ELSE t0.c2 END))==((((t0.c1)GLOB(t2.c0)), (((t0.c2)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), CASE WHEN t2.c0 THEN t0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((CAST(t2.c0 AS BLOB), 'nYd<퐍v_閭' COLLATE RTRIM, CASE t0.c1  WHEN t2.c0 THEN t0.c2 ELSE t0.c2 END))=((((t0.c1)GLOB(t2.c0)), (((t0.c2)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), CASE WHEN t2.c0 THEN t0.c1 END)))) IS TRUE)  as count FROM t2, t0);
SELECT * FROM t2, t0 WHERE ((((CAST(t2.c0 AS BLOB), 'nYd<퐍v_閭' COLLATE RTRIM, CASE t0.c1  WHEN t2.c0 THEN t0.c2 ELSE t0.c2 END))==((((t0.c1)GLOB(t2.c0)), (((t0.c2)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), CASE WHEN t2.c0 THEN t0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((CAST(t2.c0 AS BLOB), 'nYd<퐍v_閭' COLLATE RTRIM, CASE t0.c1  WHEN t2.c0 THEN t0.c2 ELSE t0.c2 END))=((((t0.c1)GLOB(t2.c0)), (((t0.c2)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), CASE WHEN t2.c0 THEN t0.c1 END)))) IS TRUE)  as count FROM t2, t0);
SELECT * FROM t2, t0 WHERE ((((CAST(t2.c0 AS BLOB), 'nYd<퐍v_閭' COLLATE RTRIM, CASE t0.c1  WHEN t2.c0 THEN t0.c2 ELSE t0.c2 END))==((((t0.c1)GLOB(t2.c0)), (((t0.c2)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), CASE WHEN t2.c0 THEN t0.c1 END))));
SELECT ALL * FROM vt0, t2, v0 WHERE (UNLIKELY(DISTINCT (((vt0.c0))<((vt0.c0))))) ORDER BY (((((- (t2.c0)))OR(vt0.c0)))AND(STRFTIME(v0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0, t2.c0, t2.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((vt0.c0))<((vt0.c0))))) IS TRUE)  as count FROM vt0, t2, v0 ORDER BY (((((- (t2.c0)))OR(vt0.c0)))AND(STRFTIME(v0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0, t2.c0, t2.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0, t2, v0 WHERE (UNLIKELY(DISTINCT (((vt0.c0))<((vt0.c0))))) ORDER BY (((((- (t2.c0)))OR(vt0.c0)))AND(STRFTIME(v0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0, t2.c0, t2.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((vt0.c0))<((vt0.c0))))) IS TRUE)  as count FROM vt0, t2, v0 ORDER BY (((((- (t2.c0)))OR(vt0.c0)))AND(STRFTIME(v0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0, t2.c0, t2.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0, t2, v0 WHERE (UNLIKELY(DISTINCT (((vt0.c0))<((vt0.c0))))) ORDER BY (((((- (t2.c0)))OR(vt0.c0)))AND(STRFTIME(v0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0, t2.c0, t2.c0)))  NULLS FIRST;
SELECT * FROM t2, v0, t0, vt0 WHERE ((((v0.c0 IN ()))AND((((t0.c0, vt0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, '')) AND ((t2.c0, v0.c0, vt0.c0)))))) ORDER BY CAST(t0.c0 AS BLOB) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))AND((((t0.c0, vt0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, '')) AND ((t2.c0, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM t2, v0, t0, vt0 ORDER BY CAST(t0.c0 AS BLOB) COLLATE NOCASE ASC);
SELECT * FROM t2, v0, t0, vt0 WHERE ((((v0.c0 IN ()))AND((((t0.c0, vt0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, '')) AND ((t2.c0, v0.c0, vt0.c0)))))) ORDER BY CAST(t0.c0 AS BLOB) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))AND((((t0.c0, vt0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, '')) AND ((t2.c0, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM t2, v0, t0, vt0 ORDER BY CAST(t0.c0 AS BLOB) COLLATE NOCASE ASC);
SELECT * FROM t2, v0, t0, vt0 WHERE ((((v0.c0 IN ()))AND((((t0.c0, vt0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, '')) AND ((t2.c0, v0.c0, vt0.c0)))))) ORDER BY CAST(t0.c0 AS BLOB) COLLATE NOCASE ASC;
SELECT ALL * FROM t0 NOT INDEXED, vt0, t2, v0 WHERE ((('^L)ZX')<>(TYPEOF(0.8410826841821498))));
SELECT SUM(count) FROM (SELECT (((('^L)ZX')<>(TYPEOF(0.8410826841821498)))) IS TRUE)  as count FROM t0, vt0, t2, v0);
SELECT ALL * FROM t0 NOT INDEXED, vt0, t2, v0 WHERE ((('^L)ZX')<>(TYPEOF(0.8410826841821498))));
SELECT SUM(count) FROM (SELECT (((('^L)ZX')<>(TYPEOF(0.8410826841821498)))) IS TRUE)  as count FROM t0, vt0, t2, v0);
SELECT ALL * FROM t0 NOT INDEXED, vt0, t2, v0 WHERE ((('^L)ZX')<>(TYPEOF(0.8410826841821498))));
SELECT * FROM vt0, t0, t2 WHERE (((((((((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)OR((~ (t0.c1)))))OR(TRIM(DISTINCT t2.c0, t2.c0))))AND((('Obx\r') BETWEEN (t2.c0) AND (vt0.c0)))))OR((t0.c1 IN ())))) ORDER BY (((~ (t0.c2)))/('%>.syu9')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)OR((~ (t0.c1)))))OR(TRIM(DISTINCT t2.c0, t2.c0))))AND((('Obx\r') BETWEEN (t2.c0) AND (vt0.c0)))))OR((t0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (((~ (t0.c2)))/('%>.syu9')) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, t2 WHERE (((((((((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)OR((~ (t0.c1)))))OR(TRIM(DISTINCT t2.c0, t2.c0))))AND((('Obx\r') BETWEEN (t2.c0) AND (vt0.c0)))))OR((t0.c1 IN ())))) ORDER BY (((~ (t0.c2)))/('%>.syu9')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)OR((~ (t0.c1)))))OR(TRIM(DISTINCT t2.c0, t2.c0))))AND((('Obx\r') BETWEEN (t2.c0) AND (vt0.c0)))))OR((t0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (((~ (t0.c2)))/('%>.syu9')) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, t2 WHERE (((((((((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c1 END)OR((~ (t0.c1)))))OR(TRIM(DISTINCT t2.c0, t2.c0))))AND((('Obx\r') BETWEEN (t2.c0) AND (vt0.c0)))))OR((t0.c1 IN ())))) ORDER BY (((~ (t0.c2)))/('%>.syu9')) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (((((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ('') AND (((vt0.c0)<(t2.c0))))) ORDER BY ((((vt0.c0)OR(((t2.c0) NOTNULL))))AND(((((((((vt0.c0)OR(t2.c0)))OR(vt0.c0)))AND(t2.c0)))OR(x'')))) ASC, CAST(((t2.c0)*(vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ('') AND (((vt0.c0)<(t2.c0))))) IS TRUE)  as count FROM vt0, t2 ORDER BY ((((vt0.c0)OR(((t2.c0) NOTNULL))))AND(((((((((vt0.c0)OR(t2.c0)))OR(vt0.c0)))AND(t2.c0)))OR(x'')))) ASC, CAST(((t2.c0)*(vt0.c0)) AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (((((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ('') AND (((vt0.c0)<(t2.c0))))) ORDER BY ((((vt0.c0)OR(((t2.c0) NOTNULL))))AND(((((((((vt0.c0)OR(t2.c0)))OR(vt0.c0)))AND(t2.c0)))OR(x'')))) ASC, CAST(((t2.c0)*(vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ('') AND (((vt0.c0)<(t2.c0))))) IS TRUE)  as count FROM vt0, t2 ORDER BY ((((vt0.c0)OR(((t2.c0) NOTNULL))))AND(((((((((vt0.c0)OR(t2.c0)))OR(vt0.c0)))AND(t2.c0)))OR(x'')))) ASC, CAST(((t2.c0)*(vt0.c0)) AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (((((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ('') AND (((vt0.c0)<(t2.c0))))) ORDER BY ((((vt0.c0)OR(((t2.c0) NOTNULL))))AND(((((((((vt0.c0)OR(t2.c0)))OR(vt0.c0)))AND(t2.c0)))OR(x'')))) ASC, CAST(((t2.c0)*(vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM t2 FULL OUTER JOIN t0 ON '1511051540' COLLATE BINARY WHERE ((((((t0.c1)) NOT BETWEEN ((0.019699044799868726)) AND ((t0.c1))))&((((t0.c0)) NOT BETWEEN ((x'')) AND ((t2.c0)))))) ORDER BY ((COALESCE(t2.c0, x''))LIKE(NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)) NOT BETWEEN ((0.019699044799868726)) AND ((t0.c1))))&((((t0.c0)) NOT BETWEEN ((x'')) AND ((t2.c0)))))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON '1511051540' COLLATE BINARY ORDER BY ((COALESCE(t2.c0, x''))LIKE(NULL)));
SELECT ALL * FROM t2 FULL OUTER JOIN t0 ON '1511051540' COLLATE BINARY WHERE ((((((t0.c1)) NOT BETWEEN ((0.019699044799868726)) AND ((t0.c1))))&((((t0.c0)) NOT BETWEEN ((x'')) AND ((t2.c0)))))) ORDER BY ((COALESCE(t2.c0, x''))LIKE(NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)) NOT BETWEEN ((0.019699044799868726)) AND ((t0.c1))))&((((t0.c0)) NOT BETWEEN ((x'')) AND ((t2.c0)))))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON '1511051540' COLLATE BINARY ORDER BY ((COALESCE(t2.c0, x''))LIKE(NULL)));
SELECT ALL * FROM t2 FULL OUTER JOIN t0 ON '1511051540' COLLATE BINARY WHERE ((((((t0.c1)) NOT BETWEEN ((0.019699044799868726)) AND ((t0.c1))))&((((t0.c0)) NOT BETWEEN ((x'')) AND ((t2.c0)))))) ORDER BY ((COALESCE(t2.c0, x''))LIKE(NULL));
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((0.29807551071445937 COLLATE RTRIM)) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) WHERE (((((((((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (t2.c0)))))OR(v0.c0)))AND('1067681419')))AND((- (t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (t2.c0)))))OR(v0.c0)))AND('1067681419')))AND((- (t2.c0))))) IS TRUE)  as count FROM t2 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((0.29807551071445937 COLLATE RTRIM)) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0))))));
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((0.29807551071445937 COLLATE RTRIM)) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) WHERE (((((((((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (t2.c0)))))OR(v0.c0)))AND('1067681419')))AND((- (t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (t2.c0)))))OR(v0.c0)))AND('1067681419')))AND((- (t2.c0))))) IS TRUE)  as count FROM t2 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((0.29807551071445937 COLLATE RTRIM)) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0))))));
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((0.29807551071445937 COLLATE RTRIM)) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) WHERE (((((((((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (t2.c0)))))OR(v0.c0)))AND('1067681419')))AND((- (t2.c0)))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((0.7090060625640182) NOT BETWEEN (((((t0.c2)AND(v0.c0)))AND(t0.c1))) AND (NULL)) FULL OUTER JOIN t2 ON (HEX(t2.c0) IN (x'3145', ((t2.c0) NOTNULL))) CROSS JOIN t0 ON ((0.01742673102647463) NOTNULL) WHERE (((((('1303878417', -1092827622, t2.c0))<((t2.c0, t0.c1, v0.c0))))+('' COLLATE BINARY))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('1303878417', -1092827622, t2.c0))<((t2.c0, t0.c1, v0.c0))))+('' COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((0.7090060625640182) NOT BETWEEN (((((t0.c2)AND(v0.c0)))AND(t0.c1))) AND (NULL)) FULL OUTER JOIN t2 ON (HEX(t2.c0) IN (x'3145', ((t2.c0) NOTNULL))) CROSS JOIN t0 ON ((0.01742673102647463) NOTNULL) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((0.7090060625640182) NOT BETWEEN (((((t0.c2)AND(v0.c0)))AND(t0.c1))) AND (NULL)) FULL OUTER JOIN t2 ON (HEX(t2.c0) IN (x'3145', ((t2.c0) NOTNULL))) CROSS JOIN t0 ON ((0.01742673102647463) NOTNULL) WHERE (((((('1303878417', -1092827622, t2.c0))<((t2.c0, t0.c1, v0.c0))))+('' COLLATE BINARY))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('1303878417', -1092827622, t2.c0))<((t2.c0, t0.c1, v0.c0))))+('' COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((0.7090060625640182) NOT BETWEEN (((((t0.c2)AND(v0.c0)))AND(t0.c1))) AND (NULL)) FULL OUTER JOIN t2 ON (HEX(t2.c0) IN (x'3145', ((t2.c0) NOTNULL))) CROSS JOIN t0 ON ((0.01742673102647463) NOTNULL) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN t2 WHERE ((((((v0.c0)+(t2.c0)), CASE WHEN v0.c0 THEN t2.c0 END, ((v0.c0)OR(v0.c0))))==((((v0.c0) IS FALSE), ((v0.c0)GLOB(0.33465670146637005)), ((t2.c0) BETWEEN (t2.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)+(t2.c0)), CASE WHEN v0.c0 THEN t2.c0 END, ((v0.c0)OR(v0.c0))))==((((v0.c0) IS FALSE), ((v0.c0)GLOB(0.33465670146637005)), ((t2.c0) BETWEEN (t2.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN t2);
SELECT ALL * FROM v0 NATURAL JOIN t2 WHERE ((((((v0.c0)+(t2.c0)), CASE WHEN v0.c0 THEN t2.c0 END, ((v0.c0)OR(v0.c0))))==((((v0.c0) IS FALSE), ((v0.c0)GLOB(0.33465670146637005)), ((t2.c0) BETWEEN (t2.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)+(t2.c0)), CASE WHEN v0.c0 THEN t2.c0 END, ((v0.c0)OR(v0.c0))))==((((v0.c0) IS FALSE), ((v0.c0)GLOB(0.33465670146637005)), ((t2.c0) BETWEEN (t2.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN t2);
SELECT ALL * FROM v0 NATURAL JOIN t2 WHERE ((((((v0.c0)+(t2.c0)), CASE WHEN v0.c0 THEN t2.c0 END, ((v0.c0)OR(v0.c0))))==((((v0.c0) IS FALSE), ((v0.c0)GLOB(0.33465670146637005)), ((t2.c0) BETWEEN (t2.c0) AND (v0.c0))))));
SELECT ALL * FROM vt0, t0 CROSS JOIN t2 ON (((t0.c1) IS TRUE) IN ((vt0.c0 IN ()), ((t0.c0)<(t0.c1)))) RIGHT OUTER JOIN v0 ON ((((CAST(t0.c1 AS NUMERIC))AND((+ (t0.c1)))))AND(CAST(0.24278981534557653 AS NUMERIC))) WHERE (CASE WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t2.c0)) THEN CASE x''  WHEN t0.c1 THEN t2.c0 END ELSE ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t2.c0)) THEN CASE x''  WHEN t0.c1 THEN t2.c0 END ELSE ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 CROSS JOIN t2 ON (((t0.c1) IS TRUE) IN ((vt0.c0 IN ()), ((t0.c0)<(t0.c1)))) RIGHT OUTER JOIN v0 ON ((((CAST(t0.c1 AS NUMERIC))AND((+ (t0.c1)))))AND(CAST(0.24278981534557653 AS NUMERIC))));
SELECT ALL * FROM vt0, t0 CROSS JOIN t2 ON (((t0.c1) IS TRUE) IN ((vt0.c0 IN ()), ((t0.c0)<(t0.c1)))) RIGHT OUTER JOIN v0 ON ((((CAST(t0.c1 AS NUMERIC))AND((+ (t0.c1)))))AND(CAST(0.24278981534557653 AS NUMERIC))) WHERE (CASE WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t2.c0)) THEN CASE x''  WHEN t0.c1 THEN t2.c0 END ELSE ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t2.c0)) THEN CASE x''  WHEN t0.c1 THEN t2.c0 END ELSE ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 CROSS JOIN t2 ON (((t0.c1) IS TRUE) IN ((vt0.c0 IN ()), ((t0.c0)<(t0.c1)))) RIGHT OUTER JOIN v0 ON ((((CAST(t0.c1 AS NUMERIC))AND((+ (t0.c1)))))AND(CAST(0.24278981534557653 AS NUMERIC))));
SELECT ALL * FROM vt0, t0 CROSS JOIN t2 ON (((t0.c1) IS TRUE) IN ((vt0.c0 IN ()), ((t0.c0)<(t0.c1)))) RIGHT OUTER JOIN v0 ON ((((CAST(t0.c1 AS NUMERIC))AND((+ (t0.c1)))))AND(CAST(0.24278981534557653 AS NUMERIC))) WHERE (CASE WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t2.c0)) THEN CASE x''  WHEN t0.c1 THEN t2.c0 END ELSE ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL * FROM t0, vt0, v0 WHERE (((t0.c1)>(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN NULL THEN t0.c2 ELSE x'c9a7' END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)>(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN NULL THEN t0.c2 ELSE x'c9a7' END))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((t0.c1)>(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN NULL THEN t0.c2 ELSE x'c9a7' END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)>(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN NULL THEN t0.c2 ELSE x'c9a7' END))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((t0.c1)>(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN NULL THEN t0.c2 ELSE x'c9a7' END)));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CAST(vt0.c0 AS INTEGER)) ORDER BY ((((v0.c0) IS TRUE)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((v0.c0) IS TRUE)) IS FALSE));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CAST(vt0.c0 AS INTEGER)) ORDER BY ((((v0.c0) IS TRUE)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((v0.c0) IS TRUE)) IS FALSE));
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (CAST(vt0.c0 AS INTEGER)) ORDER BY ((((v0.c0) IS TRUE)) IS FALSE);
SELECT ALL COUNT(*) FROM t0, t2 WHERE ((CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c1 WHEN 0.937936761548464 THEN t2.c0 ELSE t0.c1 END IN ())) ORDER BY (+ (t0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c1 WHEN 0.937936761548464 THEN t2.c0 ELSE t0.c1 END IN ())) IS TRUE)  as count FROM t0, t2 ORDER BY (+ (t0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t2 WHERE ((CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c1 WHEN 0.937936761548464 THEN t2.c0 ELSE t0.c1 END IN ())) ORDER BY (+ (t0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c1 WHEN 0.937936761548464 THEN t2.c0 ELSE t0.c1 END IN ())) IS TRUE)  as count FROM t0, t2 ORDER BY (+ (t0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t2 WHERE ((CASE WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c1 WHEN 0.937936761548464 THEN t2.c0 ELSE t0.c1 END IN ())) ORDER BY (+ (t0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL * FROM t2, v0 RIGHT OUTER JOIN t0 ON (((t2.c0)>(t0.c2)) IN ()) WHERE ('%F)|oux') ORDER BY (('1309163453') NOT BETWEEN (-1.281174515E9) AND (((v0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('%F)|oux') IS TRUE)  as count FROM t2, v0 RIGHT OUTER JOIN t0 ON (((t2.c0)>(t0.c2)) IN ()) ORDER BY (('1309163453') NOT BETWEEN (-1.281174515E9) AND (((v0.c0) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM t2, v0 RIGHT OUTER JOIN t0 ON (((t2.c0)>(t0.c2)) IN ()) WHERE ('%F)|oux') ORDER BY (('1309163453') NOT BETWEEN (-1.281174515E9) AND (((v0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('%F)|oux') IS TRUE)  as count FROM t2, v0 RIGHT OUTER JOIN t0 ON (((t2.c0)>(t0.c2)) IN ()) ORDER BY (('1309163453') NOT BETWEEN (-1.281174515E9) AND (((v0.c0) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM t2, v0 RIGHT OUTER JOIN t0 ON (((t2.c0)>(t0.c2)) IN ()) WHERE ('%F)|oux') ORDER BY (('1309163453') NOT BETWEEN (-1.281174515E9) AND (((v0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t2, v0, vt0 WHERE (((((vt0.c0)OR(v0.c0)))|(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (- (0xffffffffaa6588ff));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(v0.c0)))|(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t2, v0, vt0 ORDER BY (- (0Xffffffffaa6588ff)));
SELECT COUNT(*) FROM t2, v0, vt0 WHERE (((((vt0.c0)OR(v0.c0)))|(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (- (0xffffffffaa6588ff));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(v0.c0)))|(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t2, v0, vt0 ORDER BY (- (0Xffffffffaa6588ff)));
SELECT COUNT(*) FROM t2, v0, vt0 WHERE (((((vt0.c0)OR(v0.c0)))|(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (- (0xffffffffaa6588ff));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))OR(ABS(DISTINCT v0.c0))))AND(((v0.c0)<>(v0.c0))))) ORDER BY ((((v0.c0)GLOB(v0.c0))) BETWEEN ((v0.c0 IN ())) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'ba1d' THEN v0.c0 WHEN v0.c0 THEN NULL END)) DESC, (((v0.c0 IN ()))>>(((((v0.c0)AND(v0.c0)))AND('967514831')))) ASC  NULLS FIRST, ((((v0.c0)*(v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))OR(0.1188558233203103))) AND (CASE v0.c0  WHEN v0.c0 THEN '967847671' END)) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(ABS(DISTINCT v0.c0))))AND(((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)GLOB(v0.c0))) BETWEEN ((v0.c0 IN ())) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'ba1d' THEN v0.c0 WHEN v0.c0 THEN NULL END)) DESC, (((v0.c0 IN ()))>>(((((v0.c0)AND(v0.c0)))AND('967514831')))) ASC  NULLS FIRST, ((((v0.c0)*(v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))OR(0.1188558233203103))) AND (CASE v0.c0  WHEN v0.c0 THEN '967847671' END)) DESC);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))OR(ABS(DISTINCT v0.c0))))AND(((v0.c0)<>(v0.c0))))) ORDER BY ((((v0.c0)GLOB(v0.c0))) BETWEEN ((v0.c0 IN ())) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'ba1d' THEN v0.c0 WHEN v0.c0 THEN NULL END)) DESC, (((v0.c0 IN ()))>>(((((v0.c0)AND(v0.c0)))AND('967514831')))) ASC  NULLS FIRST, ((((v0.c0)*(v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))OR(0.1188558233203103))) AND (CASE v0.c0  WHEN v0.c0 THEN '967847671' END)) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(ABS(DISTINCT v0.c0))))AND(((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)GLOB(v0.c0))) BETWEEN ((v0.c0 IN ())) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'ba1d' THEN v0.c0 WHEN v0.c0 THEN NULL END)) DESC, (((v0.c0 IN ()))>>(((((v0.c0)AND(v0.c0)))AND('967514831')))) ASC  NULLS FIRST, ((((v0.c0)*(v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))OR(0.1188558233203103))) AND (CASE v0.c0  WHEN v0.c0 THEN '967847671' END)) DESC);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))OR(ABS(DISTINCT v0.c0))))AND(((v0.c0)<>(v0.c0))))) ORDER BY ((((v0.c0)GLOB(v0.c0))) BETWEEN ((v0.c0 IN ())) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'ba1d' THEN v0.c0 WHEN v0.c0 THEN NULL END)) DESC, (((v0.c0 IN ()))>>(((((v0.c0)AND(v0.c0)))AND('967514831')))) ASC  NULLS FIRST, ((((v0.c0)*(v0.c0))) BETWEEN (((((v0.c0)AND(v0.c0)))OR(0.1188558233203103))) AND (CASE v0.c0  WHEN v0.c0 THEN '967847671' END)) DESC;
SELECT ALL * FROM vt0, t0, v0 WHERE ((~ (((((t0.c2)OR(t0.c1)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((t0.c2)OR(t0.c1)))OR(t0.c2))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((~ (((((t0.c2)OR(t0.c1)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((t0.c2)OR(t0.c1)))OR(t0.c2))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE ((~ (((((t0.c2)OR(t0.c1)))OR(t0.c2)))));
SELECT COUNT(*) FROM t2 WHERE (((t2.c0 COLLATE NOCASE)GLOB(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) ORDER BY ((((((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))AND(NULL)))OR(t2.c0)))AND((NOT (t2.c0)))))OR(((0.360960431106617)&(t2.c0)))), t2.c0 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0 COLLATE NOCASE)GLOB(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) IS TRUE)  as count FROM t2 ORDER BY ((((((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))AND(NULL)))OR(t2.c0)))AND((NOT (t2.c0)))))OR(((0.360960431106617)&(t2.c0)))), t2.c0 COLLATE BINARY ASC);
SELECT COUNT(*) FROM t2 WHERE (((t2.c0 COLLATE NOCASE)GLOB(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) ORDER BY ((((((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))AND(NULL)))OR(t2.c0)))AND((NOT (t2.c0)))))OR(((0.360960431106617)&(t2.c0)))), t2.c0 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0 COLLATE NOCASE)GLOB(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) IS TRUE)  as count FROM t2 ORDER BY ((((((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))AND(NULL)))OR(t2.c0)))AND((NOT (t2.c0)))))OR(((0.360960431106617)&(t2.c0)))), t2.c0 COLLATE BINARY ASC);
SELECT COUNT(*) FROM t2 WHERE (((t2.c0 COLLATE NOCASE)GLOB(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) ORDER BY ((((((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))AND(NULL)))OR(t2.c0)))AND((NOT (t2.c0)))))OR(((0.360960431106617)&(t2.c0)))), t2.c0 COLLATE BINARY ASC;
SELECT ALL * FROM v0, t2 LEFT OUTER JOIN t0 ON (((t0.c2)>>(t0.c1)) IN (vt0.c0 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CAST(((vt0.c0) ISNULL) AS NUMERIC) WHERE (((t2.c0) ISNULL) COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))=((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, t0.c0, vt0.c0)) AND ((t2.c0, vt0.c0, v0.c0)))))  NULLS LAST, (+ (((t0.c1) NOTNULL))) ASC  NULLS FIRST, CASE WHEN ((v0.c0)<>(t0.c2)) THEN ((vt0.c0)|(t0.c0)) ELSE '1815427695' END;
SELECT SUM(count) FROM (SELECT ((((t2.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, t2 LEFT OUTER JOIN t0 ON (((t0.c2)>>(t0.c1)) IN (vt0.c0 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CAST(((vt0.c0) ISNULL) AS NUMERIC) ORDER BY (((vt0.c0 IN ()))=((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, t0.c0, vt0.c0)) AND ((t2.c0, vt0.c0, v0.c0)))))  NULLS LAST, (+ (((t0.c1) NOTNULL))) ASC  NULLS FIRST, CASE WHEN ((v0.c0)!=(t0.c2)) THEN ((vt0.c0)|(t0.c0)) ELSE '1815427695' END);
SELECT ALL * FROM v0, t2 LEFT OUTER JOIN t0 ON (((t0.c2)>>(t0.c1)) IN (vt0.c0 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CAST(((vt0.c0) ISNULL) AS NUMERIC) WHERE (((t2.c0) ISNULL) COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))=((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, t0.c0, vt0.c0)) AND ((t2.c0, vt0.c0, v0.c0)))))  NULLS LAST, (+ (((t0.c1) NOTNULL))) ASC  NULLS FIRST, CASE WHEN ((v0.c0)<>(t0.c2)) THEN ((vt0.c0)|(t0.c0)) ELSE '1815427695' END;
SELECT SUM(count) FROM (SELECT ((((t2.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, t2 LEFT OUTER JOIN t0 ON (((t0.c2)>>(t0.c1)) IN (vt0.c0 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CAST(((vt0.c0) ISNULL) AS NUMERIC) ORDER BY (((vt0.c0 IN ()))=((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, t0.c0, vt0.c0)) AND ((t2.c0, vt0.c0, v0.c0)))))  NULLS LAST, (+ (((t0.c1) NOTNULL))) ASC  NULLS FIRST, CASE WHEN ((v0.c0)!=(t0.c2)) THEN ((vt0.c0)|(t0.c0)) ELSE '1815427695' END);
SELECT * FROM t2, t0 WHERE (((~ (t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c1)) IN ())) IS TRUE)  as count FROM t2, t0);
SELECT * FROM t2, t0 WHERE (((~ (t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c1)) IN ())) IS TRUE)  as count FROM t2, t0);
SELECT * FROM t2, t0 WHERE (((~ (t0.c1)) IN ()));
SELECT * FROM v0, t0, vt0 WHERE (((((((v0.c0) NOTNULL))OR(t0.c2)))AND(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOTNULL))OR(t0.c2)))AND(((t0.c0) ISNULL)))) IS TRUE)  as count FROM v0 NOT INDEXED, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((((((v0.c0) NOTNULL))OR(t0.c2)))AND(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOTNULL))OR(t0.c2)))AND(((t0.c0) ISNULL)))) IS TRUE)  as count FROM v0 NOT INDEXED, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((((((v0.c0) NOTNULL))OR(t0.c2)))AND(((t0.c0) ISNULL))));
SELECT * FROM t0, v0, t2, vt0 WHERE (((((t0.c2)<<(t2.c0)))*(((((NULL)AND(t0.c1)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<<(t2.c0)))*(((((NULL)AND(t0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0, v0, t2, vt0);
SELECT * FROM t0, v0, t2, vt0 WHERE (((((t0.c2)<<(t2.c0)))*(((((NULL)AND(t0.c1)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<<(t2.c0)))*(((((NULL)AND(t0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0, v0, t2, vt0);
SELECT * FROM t0, v0, t2, vt0 WHERE (((((t0.c2)<<(t2.c0)))*(((((NULL)AND(t0.c1)))AND(t0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((+ (v0.c0)) IN ())) ORDER BY (((((v0.c0))>=((v0.c0))))>(x'')), '<\n*EJLS' DESC  NULLS LAST, (((- (v0.c0))) NOT BETWEEN ((NOT (v0.c0))) AND (v0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))>=((v0.c0))))>(x'')), '<\n*EJLS' DESC  NULLS LAST, (((- (v0.c0))) NOT BETWEEN ((NOT (v0.c0))) AND (v0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((+ (v0.c0)) IN ())) ORDER BY (((((v0.c0))>=((v0.c0))))>(x'')), '<\n*EJLS' DESC  NULLS LAST, (((- (v0.c0))) NOT BETWEEN ((NOT (v0.c0))) AND (v0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))>=((v0.c0))))>(x'')), '<\n*EJLS' DESC  NULLS LAST, (((- (v0.c0))) NOT BETWEEN ((NOT (v0.c0))) AND (v0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((+ (v0.c0)) IN ())) ORDER BY (((((v0.c0))>=((v0.c0))))>(x'')), '<\n*EJLS' DESC  NULLS LAST, (((- (v0.c0))) NOT BETWEEN ((NOT (v0.c0))) AND (v0.c0 COLLATE BINARY))  NULLS LAST;
SELECT * FROM t2, v0, vt0, t0 WHERE (((+ (x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (x'')) IN ())) IS TRUE)  as count FROM t2 NOT INDEXED, v0, vt0, t0);
SELECT * FROM t2, v0, vt0, t0 WHERE (((+ (x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (x'')) IN ())) IS TRUE)  as count FROM t2 NOT INDEXED, v0, vt0, t0);
SELECT * FROM t2, v0, vt0, t0 WHERE (((+ (x'')) IN ()));
SELECT COUNT(*) FROM v0, t0, t2, vt0 WHERE (((t0.c0)<(t2.c0)) COLLATE BINARY) ORDER BY CASE ((t0.c2)>>(t0.c2))  WHEN 0x281031c3 THEN CAST(v0.c0 AS REAL) ELSE CASE t2.c0  WHEN v0.c0 THEN vt0.c0 ELSE t0.c0 END END, (- (((t0.c1) NOT BETWEEN (t0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)<(t2.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, t2, vt0 ORDER BY CASE ((t0.c2)>>(t0.c2))  WHEN 0x281031c3 THEN CAST(v0.c0 AS REAL) ELSE CASE t2.c0  WHEN v0.c0 THEN vt0.c0 ELSE t0.c0 END END, (- (((t0.c1) NOT BETWEEN (t0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0, t0, t2, vt0 WHERE (((t0.c0)<(t2.c0)) COLLATE BINARY) ORDER BY CASE ((t0.c2)>>(t0.c2))  WHEN 0x281031c3 THEN CAST(v0.c0 AS REAL) ELSE CASE t2.c0  WHEN v0.c0 THEN vt0.c0 ELSE t0.c0 END END, (- (((t0.c1) NOT BETWEEN (t0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)<(t2.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, t2, vt0 ORDER BY CASE ((t0.c2)>>(t0.c2))  WHEN 0x281031c3 THEN CAST(v0.c0 AS REAL) ELSE CASE t2.c0  WHEN v0.c0 THEN vt0.c0 ELSE t0.c0 END END, (- (((t0.c1) NOT BETWEEN (t0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0, t0, t2, vt0 WHERE (((t0.c0)<(t2.c0)) COLLATE BINARY) ORDER BY CASE ((t0.c2)>>(t0.c2))  WHEN 0x281031c3 THEN CAST(v0.c0 AS REAL) ELSE CASE t2.c0  WHEN v0.c0 THEN vt0.c0 ELSE t0.c0 END END, (- (((t0.c1) NOT BETWEEN (t0.c0) AND (v0.c0))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t2 ON (((vt0.c0 IN ()))<((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))) INNER JOIN vt0 ON ((x'b184')!=((t0.c1 IN ()))) WHERE (CAST((NOT (t0.c0)) AS INTEGER)) ORDER BY RTRIM(((vt0.c0)GLOB(t2.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON (((vt0.c0 IN ()))<((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))) INNER JOIN vt0 ON ((x'b184')!=((t0.c1 IN ()))) ORDER BY RTRIM(((vt0.c0)GLOB(t2.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t2 ON (((vt0.c0 IN ()))<((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))) INNER JOIN vt0 ON ((x'b184')!=((t0.c1 IN ()))) WHERE (CAST((NOT (t0.c0)) AS INTEGER)) ORDER BY RTRIM(((vt0.c0)GLOB(t2.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON (((vt0.c0 IN ()))<((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))) INNER JOIN vt0 ON ((x'b184')!=((t0.c1 IN ()))) ORDER BY RTRIM(((vt0.c0)GLOB(t2.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0))>=((vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>=((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0))>=((vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>=((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0))>=((vt0.c0))) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t2 ON ((x'')<(t0.c0)) COLLATE NOCASE LEFT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) AND ((((t0.c2)<(v0.c0))))) CROSS JOIN v0 ON ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CASE v0.c0  WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)) WHERE (((((t2.c0) IS TRUE))&((((t0.c2, t0.c1, '1309163453'))<((vt0.c0, v0.c0, t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) IS TRUE))&((((t0.c2, t0.c1, '1309163453'))<((vt0.c0, v0.c0, t0.c1)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t2 ON ((x'')<(t0.c0)) COLLATE NOCASE LEFT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) AND ((((t0.c2)<(v0.c0))))) CROSS JOIN v0 ON ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CASE v0.c0  WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t2 ON ((x'')<(t0.c0)) COLLATE NOCASE LEFT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) AND ((((t0.c2)<(v0.c0))))) CROSS JOIN v0 ON ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CASE v0.c0  WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)) WHERE (((((t2.c0) IS TRUE))&((((t0.c2, t0.c1, '1309163453'))<((vt0.c0, v0.c0, t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) IS TRUE))&((((t0.c2, t0.c1, '1309163453'))<((vt0.c0, v0.c0, t0.c1)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t2 ON ((x'')<(t0.c0)) COLLATE NOCASE LEFT OUTER JOIN t0 ON (((t0.c2)) BETWEEN ((((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) AND ((((t0.c2)<(v0.c0))))) CROSS JOIN v0 ON ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CASE v0.c0  WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)));
SELECT * FROM v0, t0 CROSS JOIN t2 ON t0.c2 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0 CROSS JOIN t2 ON t0.c2);
SELECT * FROM v0, t0 CROSS JOIN t2 ON t0.c2 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0 CROSS JOIN t2 ON t0.c2);
SELECT * FROM v0, t0 CROSS JOIN t2 ON t0.c2 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (GLOB(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC))) ORDER BY ((((0Xffffffff98e4cfd7)OR(t0.c2 COLLATE RTRIM)))AND(LIKELY(t0.c0))) ASC  NULLS FIRST, (~ (json_insert(vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ((GLOB(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((0xffffffff98e4cfd7)OR(t0.c2 COLLATE RTRIM)))AND(LIKELY(t0.c0))) ASC  NULLS FIRST, (~ (json_insert(vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (GLOB(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC))) ORDER BY ((((0Xffffffff98e4cfd7)OR(t0.c2 COLLATE RTRIM)))AND(LIKELY(t0.c0))) ASC  NULLS FIRST, (~ (json_insert(vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ((GLOB(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((0xffffffff98e4cfd7)OR(t0.c2 COLLATE RTRIM)))AND(LIKELY(t0.c0))) ASC  NULLS FIRST, (~ (json_insert(vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (GLOB(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC))) ORDER BY ((((0Xffffffff98e4cfd7)OR(t0.c2 COLLATE RTRIM)))AND(LIKELY(t0.c0))) ASC  NULLS FIRST, (~ (json_insert(vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN t2 ON (- ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((t2.c0, v0.c0, v0.c0)) AND ((t2.c0, t2.c0, t2.c0))))) WHERE (((CAST(v0.c0 AS TEXT)) IS FALSE)) ORDER BY (((NOT (t2.c0))) NOT BETWEEN (t2.c0) AND (CAST(v0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t2 ON (- ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((t2.c0, v0.c0, v0.c0)) AND ((t2.c0, t2.c0, t2.c0))))) ORDER BY (((NOT (t2.c0))) NOT BETWEEN (t2.c0) AND (CAST(v0.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t2 ON (- ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((t2.c0, v0.c0, v0.c0)) AND ((t2.c0, t2.c0, t2.c0))))) WHERE (((CAST(v0.c0 AS TEXT)) IS FALSE)) ORDER BY (((NOT (t2.c0))) NOT BETWEEN (t2.c0) AND (CAST(v0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t2 ON (- ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((t2.c0, v0.c0, v0.c0)) AND ((t2.c0, t2.c0, t2.c0))))) ORDER BY (((NOT (t2.c0))) NOT BETWEEN (t2.c0) AND (CAST(v0.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t2 ON (- ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((t2.c0, v0.c0, v0.c0)) AND ((t2.c0, t2.c0, t2.c0))))) WHERE (((CAST(v0.c0 AS TEXT)) IS FALSE)) ORDER BY (((NOT (t2.c0))) NOT BETWEEN (t2.c0) AND (CAST(v0.c0 AS NUMERIC)))  NULLS LAST;
SELECT * FROM v0 INNER JOIN t0 ON (((((v0.c0)AND(t0.c0)))AND(v0.c0)) IN ()) LEFT OUTER JOIN vt0 ON CAST(((((t0.c2)AND(t0.c2)))AND(v0.c0)) AS TEXT) WHERE (((0.4615281529629991) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.4615281529629991) NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (((((v0.c0)AND(t0.c0)))AND(v0.c0)) IN ()) LEFT OUTER JOIN vt0 ON CAST(((((t0.c2)AND(t0.c2)))AND(v0.c0)) AS TEXT));
SELECT * FROM v0 INNER JOIN t0 ON (((((v0.c0)AND(t0.c0)))AND(v0.c0)) IN ()) LEFT OUTER JOIN vt0 ON CAST(((((t0.c2)AND(t0.c2)))AND(v0.c0)) AS TEXT) WHERE (((0.4615281529629991) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.4615281529629991) NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (((((v0.c0)AND(t0.c0)))AND(v0.c0)) IN ()) LEFT OUTER JOIN vt0 ON CAST(((((t0.c2)AND(t0.c2)))AND(v0.c0)) AS TEXT));
SELECT * FROM v0 INNER JOIN t0 ON (((((v0.c0)AND(t0.c0)))AND(v0.c0)) IN ()) LEFT OUTER JOIN vt0 ON CAST(((((t0.c2)AND(t0.c2)))AND(v0.c0)) AS TEXT) WHERE (((0.4615281529629991) NOT NULL));
SELECT COUNT(*) FROM v0, t0, t2, vt0 WHERE ((NOT (NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, t2, vt0);
SELECT COUNT(*) FROM v0, t0, t2, vt0 WHERE ((NOT (NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, t2, vt0);
SELECT COUNT(*) FROM v0, t0, t2, vt0 WHERE ((NOT (NULL)) COLLATE BINARY);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT 0.5007390484346256, CASE t0.c0  WHEN t0.c2 THEN t0.c1 END) FULL OUTER JOIN t2 ON ((HEX(t0.c2))!=(CASE v0.c0  WHEN '0M] ,vZBq' THEN '' END)) RIGHT OUTER JOIN vt0 ON ((NULL COLLATE BINARY) BETWEEN (v0.c0) AND ('1815427695')) WHERE (vt0.c0) ORDER BY (((t0.c2)<=(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT 0.5007390484346256, CASE t0.c0  WHEN t0.c2 THEN t0.c1 END) FULL OUTER JOIN t2 ON ((HEX(t0.c2))!=(CASE v0.c0  WHEN '0M] ,vZBq' THEN '' END)) RIGHT OUTER JOIN vt0 ON ((NULL COLLATE BINARY) BETWEEN (v0.c0) AND ('1815427695')) ORDER BY (((t0.c2)<=(t0.c0)) IN ()));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT 0.5007390484346256, CASE t0.c0  WHEN t0.c2 THEN t0.c1 END) FULL OUTER JOIN t2 ON ((HEX(t0.c2))!=(CASE v0.c0  WHEN '0M] ,vZBq' THEN '' END)) RIGHT OUTER JOIN vt0 ON ((NULL COLLATE BINARY) BETWEEN (v0.c0) AND ('1815427695')) WHERE (vt0.c0) ORDER BY (((t0.c2)<=(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT 0.5007390484346256, CASE t0.c0  WHEN t0.c2 THEN t0.c1 END) FULL OUTER JOIN t2 ON ((HEX(t0.c2))!=(CASE v0.c0  WHEN '0M] ,vZBq' THEN '' END)) RIGHT OUTER JOIN vt0 ON ((NULL COLLATE BINARY) BETWEEN (v0.c0) AND ('1815427695')) ORDER BY (((t0.c2)<=(t0.c0)) IN ()));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON NULLIF(DISTINCT 0.5007390484346256, CASE t0.c0  WHEN t0.c2 THEN t0.c1 END) FULL OUTER JOIN t2 ON ((HEX(t0.c2))!=(CASE v0.c0  WHEN '0M] ,vZBq' THEN '' END)) RIGHT OUTER JOIN vt0 ON ((NULL COLLATE BINARY) BETWEEN (v0.c0) AND ('1815427695')) WHERE (vt0.c0) ORDER BY (((t0.c2)<=(t0.c0)) IN ());
SELECT * FROM v0, t0, vt0 INNER JOIN t2 ON CASE WHEN t2.c0 THEN v0.c0 END COLLATE NOCASE WHERE ((((((t2.c0)OR(t0.c1)), ((t0.c2)|(v0.c0)), NULL))<=((CASE t0.c0  WHEN t0.c1 THEN v0.c0 ELSE NULL END, t0.c2 COLLATE NOCASE, TOTAL_CHANGES()))));
SELECT SUM(count) FROM (SELECT (((((((t2.c0)OR(t0.c1)), ((t0.c2)|(v0.c0)), NULL))<=((CASE t0.c0  WHEN t0.c1 THEN v0.c0 ELSE NULL END, t0.c2 COLLATE NOCASE, TOTAL_CHANGES())))) IS TRUE)  as count FROM v0, t0, vt0 INNER JOIN t2 ON CASE WHEN t2.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT * FROM v0, t0, vt0 INNER JOIN t2 ON CASE WHEN t2.c0 THEN v0.c0 END COLLATE NOCASE WHERE ((((((t2.c0)OR(t0.c1)), ((t0.c2)|(v0.c0)), NULL))<=((CASE t0.c0  WHEN t0.c1 THEN v0.c0 ELSE NULL END, t0.c2 COLLATE NOCASE, TOTAL_CHANGES()))));
SELECT SUM(count) FROM (SELECT (((((((t2.c0)OR(t0.c1)), ((t0.c2)|(v0.c0)), NULL))<=((CASE t0.c0  WHEN t0.c1 THEN v0.c0 ELSE NULL END, t0.c2 COLLATE NOCASE, TOTAL_CHANGES())))) IS TRUE)  as count FROM v0, t0, vt0 INNER JOIN t2 ON CASE WHEN t2.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT * FROM v0, t0, vt0 INNER JOIN t2 ON CASE WHEN t2.c0 THEN v0.c0 END COLLATE NOCASE WHERE ((((((t2.c0)OR(t0.c1)), ((t0.c2)|(v0.c0)), NULL))<=((CASE t0.c0  WHEN t0.c1 THEN v0.c0 ELSE NULL END, t0.c2 COLLATE NOCASE, TOTAL_CHANGES()))));
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (CASE WHEN ((t0.c1) NOT BETWEEN (t2.c0) AND (t0.c2)) THEN NULL WHEN ((t0.c2)<>('-1865893977')) THEN vt0.c0 WHEN (((x'', t0.c2, t0.c0, t0.c2, t2.c0))>((t0.c0, vt0.c0, t0.c1, vt0.c0, t0.c1))) THEN ((t2.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) END) ORDER BY 0xffffffffb898ad1c DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1) NOT BETWEEN (t2.c0) AND (t0.c2)) THEN NULL WHEN ((t0.c2)<>('-1865893977')) THEN vt0.c0 WHEN (((x'', t0.c2, t0.c0, t0.c2, t2.c0))>((t0.c0, vt0.c0, t0.c1, vt0.c0, t0.c1))) THEN ((t2.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) END) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY 0Xffffffffb898ad1c DESC);
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (CASE WHEN ((t0.c1) NOT BETWEEN (t2.c0) AND (t0.c2)) THEN NULL WHEN ((t0.c2)<>('-1865893977')) THEN vt0.c0 WHEN (((x'', t0.c2, t0.c0, t0.c2, t2.c0))>((t0.c0, vt0.c0, t0.c1, vt0.c0, t0.c1))) THEN ((t2.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) END) ORDER BY 0xffffffffb898ad1c DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1) NOT BETWEEN (t2.c0) AND (t0.c2)) THEN NULL WHEN ((t0.c2)<>('-1865893977')) THEN vt0.c0 WHEN (((x'', t0.c2, t0.c0, t0.c2, t2.c0))>((t0.c0, vt0.c0, t0.c1, vt0.c0, t0.c1))) THEN ((t2.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) END) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY 0Xffffffffb898ad1c DESC);
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (CASE WHEN ((t0.c1) NOT BETWEEN (t2.c0) AND (t0.c2)) THEN NULL WHEN ((t0.c2)<>('-1865893977')) THEN vt0.c0 WHEN (((x'', t0.c2, t0.c0, t0.c2, t2.c0))>((t0.c0, vt0.c0, t0.c1, vt0.c0, t0.c1))) THEN ((t2.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) END) ORDER BY 0xffffffffb898ad1c DESC;
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((~ ((('3*')==(vt0.c0))))) ORDER BY (NOT (CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN x'ea7d' WHEN t0.c1 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT (((~ ((('3*')==(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (NOT (CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN x'ea7d' WHEN t0.c1 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((~ ((('3*')==(vt0.c0))))) ORDER BY (NOT (CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN x'ea7d' WHEN t0.c1 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT (((~ ((('3*')==(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (NOT (CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN x'ea7d' WHEN t0.c1 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((~ ((('3*')==(vt0.c0))))) ORDER BY (NOT (CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN x'ea7d' WHEN t0.c1 THEN t0.c0 END));
SELECT ALL COUNT(*) FROM t0 WHERE ((('-783406996')<=(((-1676376911)AND(t0.c1))))) ORDER BY CAST(t0.c2 AS INTEGER) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((('-783406996')<=(((-1676376911)AND(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c2 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE ((('-783406996')<=(((-1676376911)AND(t0.c1))))) ORDER BY CAST(t0.c2 AS INTEGER) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((('-783406996')<=(((-1676376911)AND(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c2 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE ((('-783406996')<=(((-1676376911)AND(t0.c1))))) ORDER BY CAST(t0.c2 AS INTEGER) COLLATE RTRIM;
SELECT ALL * FROM t0, t2, v0 WHERE ((((((((((((t0.c2))<>((t0.c0))))OR(v0.c0 COLLATE NOCASE)))AND((t0.c2 IN (t2.c0)))))AND(((t0.c2)>(t0.c0)))))OR((v0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c2))<>((t0.c0))))OR(v0.c0 COLLATE NOCASE)))AND((t0.c2 IN (t2.c0)))))AND(((t0.c2)>(t0.c0)))))OR((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM t0, t2, v0);
SELECT ALL * FROM t0, t2, v0 WHERE ((((((((((((t0.c2))<>((t0.c0))))OR(v0.c0 COLLATE NOCASE)))AND((t0.c2 IN (t2.c0)))))AND(((t0.c2)>(t0.c0)))))OR((v0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c2))<>((t0.c0))))OR(v0.c0 COLLATE NOCASE)))AND((t0.c2 IN (t2.c0)))))AND(((t0.c2)>(t0.c0)))))OR((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM t0, t2, v0);
SELECT ALL * FROM t0, t2, v0 WHERE ((((((((((((t0.c2))<>((t0.c0))))OR(v0.c0 COLLATE NOCASE)))AND((t0.c2 IN (t2.c0)))))AND(((t0.c2)>(t0.c0)))))OR((v0.c0 IN (v0.c0)))));
SELECT ALL * FROM t0 WHERE ((~ (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (t0.c0)));
SELECT ALL * FROM vt0, t0, t2, v0 WHERE (((CAST(t0.c1 AS BLOB))%((t2.c0 IN (t0.c1))))) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS BLOB))%((t2.c0 IN (t0.c1))))) IS TRUE)  as count FROM vt0, t0, t2, v0 ORDER BY t0.c2 ASC);
SELECT ALL * FROM vt0, t0, t2, v0 WHERE (((CAST(t0.c1 AS BLOB))%((t2.c0 IN (t0.c1))))) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS BLOB))%((t2.c0 IN (t0.c1))))) IS TRUE)  as count FROM vt0, t0, t2, v0 ORDER BY t0.c2 ASC);
SELECT ALL * FROM vt0, t0, t2, v0 WHERE (((CAST(t0.c1 AS BLOB))%((t2.c0 IN (t0.c1))))) ORDER BY t0.c2 ASC;
SELECT * FROM vt0, v0 WHERE (CASE WHEN CASE WHEN 0.07917190482513681 THEN v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN 0.07917190482513681 THEN v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN CASE WHEN 0.07917190482513681 THEN v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN 0.07917190482513681 THEN v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN CASE WHEN 0.07917190482513681 THEN v0.c0 END THEN CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t2 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (t2.c0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, x'', t0.c0))>=(('/UX', t0.c2, t0.c0)))) NOT NULL)) ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN (((((t0.c2)AND(t0.c0)))OR(NULL))) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2, x'', t0.c0))>=(('/UX', t0.c2, t0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN (((((t0.c2)AND(t0.c0)))OR(NULL))) AND (NULL))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, x'', t0.c0))>=(('/UX', t0.c2, t0.c0)))) NOT NULL)) ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN (((((t0.c2)AND(t0.c0)))OR(NULL))) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2, x'', t0.c0))>=(('/UX', t0.c2, t0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN (((((t0.c2)AND(t0.c0)))OR(NULL))) AND (NULL))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, x'', t0.c0))>=(('/UX', t0.c2, t0.c0)))) NOT NULL)) ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN (((((t0.c2)AND(t0.c0)))OR(NULL))) AND (NULL))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c0 IN ())) ISNULL));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON 0x7719064a COLLATE BINARY WHERE (HEX(DISTINCT (t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (t0.c2 IN ()))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0X7719064a COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON 0x7719064a COLLATE BINARY WHERE (HEX(DISTINCT (t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (t0.c2 IN ()))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0X7719064a COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON 0x7719064a COLLATE BINARY WHERE (HEX(DISTINCT (t0.c2 IN ())));
SELECT COUNT(*) FROM t0, t2 WHERE ((((CASE WHEN t0.c1 THEN t0.c1 WHEN t2.c0 THEN t2.c0 WHEN t0.c2 THEN '1840915966' ELSE t0.c2 END, GLOB(t0.c2, t2.c0), ((t2.c0)AND(t0.c0))))!=(((t2.c0 IN (t0.c0)), CAST(t0.c2 AS TEXT), t2.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c1 THEN t0.c1 WHEN t2.c0 THEN t2.c0 WHEN t0.c2 THEN '1840915966' ELSE t0.c2 END, GLOB(t0.c2, t2.c0), ((t2.c0)AND(t0.c0))))!=(((t2.c0 IN (t0.c0)), CAST(t0.c2 AS TEXT), t2.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE ((((CASE WHEN t0.c1 THEN t0.c1 WHEN t2.c0 THEN t2.c0 WHEN t0.c2 THEN '1840915966' ELSE t0.c2 END, GLOB(t0.c2, t2.c0), ((t2.c0)AND(t0.c0))))!=(((t2.c0 IN (t0.c0)), CAST(t0.c2 AS TEXT), t2.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c1 THEN t0.c1 WHEN t2.c0 THEN t2.c0 WHEN t0.c2 THEN '1840915966' ELSE t0.c2 END, GLOB(t0.c2, t2.c0), ((t2.c0)AND(t0.c0))))!=(((t2.c0 IN (t0.c0)), CAST(t0.c2 AS TEXT), t2.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE ((((CASE WHEN t0.c1 THEN t0.c1 WHEN t2.c0 THEN t2.c0 WHEN t0.c2 THEN '1840915966' ELSE t0.c2 END, GLOB(t0.c2, t2.c0), ((t2.c0)AND(t0.c0))))!=(((t2.c0 IN (t0.c0)), CAST(t0.c2 AS TEXT), t2.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS INTEGER) IN (((v0.c0) IS FALSE))) CROSS JOIN t2 ON (NULL IN (t0.c2)) WHERE ('↣^r]X') ORDER BY 0.9146049150130253 ASC;
SELECT SUM(count) FROM (SELECT ALL (('↣^r]X') IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS INTEGER) IN (((v0.c0) IS FALSE))) CROSS JOIN t2 ON (NULL IN (t0.c2)) ORDER BY 0.9146049150130253 ASC);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS INTEGER) IN (((v0.c0) IS FALSE))) CROSS JOIN t2 ON (NULL IN (t0.c2)) WHERE ('↣^r]X') ORDER BY 0.9146049150130253 ASC;
SELECT SUM(count) FROM (SELECT ALL (('↣^r]X') IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS INTEGER) IN (((v0.c0) IS FALSE))) CROSS JOIN t2 ON (NULL IN (t0.c2)) ORDER BY 0.9146049150130253 ASC);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS INTEGER) IN (((v0.c0) IS FALSE))) CROSS JOIN t2 ON (NULL IN (t0.c2)) WHERE ('↣^r]X') ORDER BY 0.9146049150130253 ASC;
SELECT ALL * FROM v0 NOT INDEXED, t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN 0.043725601854299745 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0)))) AND (((((((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))OR(x'')))OR(t0.c2)))AND(t0.c0)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN 0.043725601854299745 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0)))) AND (((((((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))OR(x'')))OR(t0.c2)))AND(t0.c0)))OR(t0.c1))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0 NOT INDEXED, t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN 0.043725601854299745 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0)))) AND (((((((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))OR(x'')))OR(t0.c2)))AND(t0.c0)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN 0.043725601854299745 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0)))) AND (((((((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))OR(x'')))OR(t0.c2)))AND(t0.c0)))OR(t0.c1))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0 NOT INDEXED, t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN 0.043725601854299745 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0)))) AND (((((((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))OR(x'')))OR(t0.c2)))AND(t0.c0)))OR(t0.c1)))));
SELECT ALL * FROM vt0, v0, t0, t2 WHERE (CAST(CAST(t2.c0 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t2.c0 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM vt0, v0, t0, t2);
SELECT ALL * FROM vt0, v0, t0, t2 WHERE (CAST(CAST(t2.c0 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t2.c0 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM vt0, v0, t0, t2);
SELECT ALL * FROM vt0, v0, t0, t2 WHERE (CAST(CAST(t2.c0 AS NUMERIC) AS REAL));
SELECT ALL COUNT(*) FROM t2, t0, v0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t2, t0, v0, vt0);
SELECT ALL COUNT(*) FROM t2, t0, v0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t2, t0, v0, vt0);
SELECT ALL COUNT(*) FROM t2, t0, v0, vt0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(v0.c0)) BETWEEN (NULL) AND (TYPEOF(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0)) BETWEEN (NULL) AND (TYPEOF(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(v0.c0)) BETWEEN (NULL) AND (TYPEOF(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0)) BETWEEN (NULL) AND (TYPEOF(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(v0.c0)) BETWEEN (NULL) AND (TYPEOF(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)|((('-1187132288') IS FALSE)))) ORDER BY (((((v0.c0))!=((v0.c0)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|((('-1187132288') IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))<>((v0.c0)))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)|((('-1187132288') IS FALSE)))) ORDER BY (((((v0.c0))!=((v0.c0)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|((('-1187132288') IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))<>((v0.c0)))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)|((('-1187132288') IS FALSE)))) ORDER BY (((((v0.c0))!=((v0.c0)))) ISNULL) DESC;
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c2) NOT BETWEEN (NULL) AND (t0.c1)) THEN (((t0.c1, t0.c0, t0.c1, '8㎫	R', t0.c0))>=((t0.c1, t0.c1, t0.c1, t0.c0, t0.c1))) WHEN '-911268439' THEN t0.c0 COLLATE RTRIM WHEN t0.c0 THEN ((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)) WHEN ((((t0.c2)OR(t0.c0)))OR(t0.c1)) THEN ((((t0.c1)AND(t0.c1)))OR(t0.c0)) WHEN ((t0.c0)>=(t0.c2)) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2) NOT BETWEEN (NULL) AND (t0.c1)) THEN (((t0.c1, t0.c0, t0.c1, '8㎫	R', t0.c0))>=((t0.c1, t0.c1, t0.c1, t0.c0, t0.c1))) WHEN '-911268439' THEN t0.c0 COLLATE RTRIM WHEN t0.c0 THEN ((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)) WHEN ((((t0.c2)OR(t0.c0)))OR(t0.c1)) THEN ((((t0.c1)AND(t0.c1)))OR(t0.c0)) WHEN ((t0.c0)>=(t0.c2)) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c2) NOT BETWEEN (NULL) AND (t0.c1)) THEN (((t0.c1, t0.c0, t0.c1, '8㎫	R', t0.c0))>=((t0.c1, t0.c1, t0.c1, t0.c0, t0.c1))) WHEN '-911268439' THEN t0.c0 COLLATE RTRIM WHEN t0.c0 THEN ((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)) WHEN ((((t0.c2)OR(t0.c0)))OR(t0.c1)) THEN ((((t0.c1)AND(t0.c1)))OR(t0.c0)) WHEN ((t0.c0)>=(t0.c2)) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2) NOT BETWEEN (NULL) AND (t0.c1)) THEN (((t0.c1, t0.c0, t0.c1, '8㎫	R', t0.c0))>=((t0.c1, t0.c1, t0.c1, t0.c0, t0.c1))) WHEN '-911268439' THEN t0.c0 COLLATE RTRIM WHEN t0.c0 THEN ((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)) WHEN ((((t0.c2)OR(t0.c0)))OR(t0.c1)) THEN ((((t0.c1)AND(t0.c1)))OR(t0.c0)) WHEN ((t0.c0)>=(t0.c2)) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c2) NOT BETWEEN (NULL) AND (t0.c1)) THEN (((t0.c1, t0.c0, t0.c1, '8㎫	R', t0.c0))>=((t0.c1, t0.c1, t0.c1, t0.c0, t0.c1))) WHEN '-911268439' THEN t0.c0 COLLATE RTRIM WHEN t0.c0 THEN ((((((((t0.c1)AND(t0.c2)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)) WHEN ((((t0.c2)OR(t0.c0)))OR(t0.c1)) THEN ((((t0.c1)AND(t0.c1)))OR(t0.c0)) WHEN ((t0.c0)>=(t0.c2)) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END) ORDER BY t0.c2 ASC;
SELECT ALL * FROM t2, t0, vt0, v0 WHERE (CAST(((((vt0.c0)AND(t0.c1)))AND(v0.c0)) AS INTEGER)) ORDER BY (((vt0.c0) BETWEEN (t2.c0) AND (0.3271714233327162)) IN (t0.c1)) ASC, ((t2.c0) BETWEEN (((t2.c0) ISNULL)) AND (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(t0.c1)))AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM t2, t0, vt0, v0 ORDER BY (((vt0.c0) BETWEEN (t2.c0) AND (0.3271714233327162)) IN (t0.c1)) ASC, ((t2.c0) BETWEEN (((t2.c0) ISNULL)) AND (((vt0.c0) NOT NULL))) ASC);
SELECT ALL * FROM t2, t0, vt0, v0 WHERE (CAST(((((vt0.c0)AND(t0.c1)))AND(v0.c0)) AS INTEGER)) ORDER BY (((vt0.c0) BETWEEN (t2.c0) AND (0.3271714233327162)) IN (t0.c1)) ASC, ((t2.c0) BETWEEN (((t2.c0) ISNULL)) AND (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(t0.c1)))AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM t2, t0, vt0, v0 ORDER BY (((vt0.c0) BETWEEN (t2.c0) AND (0.3271714233327162)) IN (t0.c1)) ASC, ((t2.c0) BETWEEN (((t2.c0) ISNULL)) AND (((vt0.c0) NOT NULL))) ASC);
SELECT ALL * FROM t2, t0, vt0, v0 WHERE (CAST(((((vt0.c0)AND(t0.c1)))AND(v0.c0)) AS INTEGER)) ORDER BY (((vt0.c0) BETWEEN (t2.c0) AND (0.3271714233327162)) IN (t0.c1)) ASC, ((t2.c0) BETWEEN (((t2.c0) ISNULL)) AND (((vt0.c0) NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM t2 WHERE (CASE ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))  WHEN t2.c0 COLLATE RTRIM THEN CASE NULL  WHEN t2.c0 THEN t2.c0 END END) ORDER BY ((('-1602713503')-(t2.c0)) IN ())  NULLS LAST, ((CHAR(t2.c0))LIKE(((t2.c0)<=(t2.c0))))  NULLS LAST, NULLIF(((t2.c0)*(t2.c0)), ((t2.c0)>(t2.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))  WHEN t2.c0 COLLATE RTRIM THEN CASE NULL  WHEN t2.c0 THEN t2.c0 END END) IS TRUE)  as count FROM t2 ORDER BY ((('-1602713503')-(t2.c0)) IN ())  NULLS LAST, ((CHAR(t2.c0))LIKE(((t2.c0)<=(t2.c0))))  NULLS LAST, NULLIF(((t2.c0)*(t2.c0)), ((t2.c0)>(t2.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2 WHERE (CASE ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))  WHEN t2.c0 COLLATE RTRIM THEN CASE NULL  WHEN t2.c0 THEN t2.c0 END END) ORDER BY ((('-1602713503')-(t2.c0)) IN ())  NULLS LAST, ((CHAR(t2.c0))LIKE(((t2.c0)<=(t2.c0))))  NULLS LAST, NULLIF(((t2.c0)*(t2.c0)), ((t2.c0)>(t2.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))  WHEN t2.c0 COLLATE RTRIM THEN CASE NULL  WHEN t2.c0 THEN t2.c0 END END) IS TRUE)  as count FROM t2 ORDER BY ((('-1602713503')-(t2.c0)) IN ())  NULLS LAST, ((CHAR(t2.c0))LIKE(((t2.c0)<=(t2.c0))))  NULLS LAST, NULLIF(((t2.c0)*(t2.c0)), ((t2.c0)>(t2.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2 WHERE (CASE ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))  WHEN t2.c0 COLLATE RTRIM THEN CASE NULL  WHEN t2.c0 THEN t2.c0 END END) ORDER BY ((('-1602713503')-(t2.c0)) IN ())  NULLS LAST, ((CHAR(t2.c0))LIKE(((t2.c0)<=(t2.c0))))  NULLS LAST, NULLIF(((t2.c0)*(t2.c0)), ((t2.c0)>(t2.c0))) DESC  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (v0.c0);
SELECT COUNT(*) FROM t2, vt0 WHERE (((CASE t2.c0  WHEN t2.c0 THEN vt0.c0 END) BETWEEN (TRIM(vt0.c0)) AND ((t2.c0 IN ())))) ORDER BY ((((((t2.c0)OR(vt0.c0)))AND(t2.c0))) NOT NULL)  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t2.c0  WHEN t2.c0 THEN vt0.c0 END) BETWEEN (TRIM(vt0.c0)) AND ((t2.c0 IN ())))) IS TRUE)  as count FROM t2, vt0 ORDER BY ((((((t2.c0)OR(vt0.c0)))AND(t2.c0))) NOT NULL)  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM t2, vt0 WHERE (((CASE t2.c0  WHEN t2.c0 THEN vt0.c0 END) BETWEEN (TRIM(vt0.c0)) AND ((t2.c0 IN ())))) ORDER BY ((((((t2.c0)OR(vt0.c0)))AND(t2.c0))) NOT NULL)  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t2.c0  WHEN t2.c0 THEN vt0.c0 END) BETWEEN (TRIM(vt0.c0)) AND ((t2.c0 IN ())))) IS TRUE)  as count FROM t2, vt0 ORDER BY ((((((t2.c0)OR(vt0.c0)))AND(t2.c0))) NOT NULL)  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM t2, vt0 WHERE (((CASE t2.c0  WHEN t2.c0 THEN vt0.c0 END) BETWEEN (TRIM(vt0.c0)) AND ((t2.c0 IN ())))) ORDER BY ((((((t2.c0)OR(vt0.c0)))AND(t2.c0))) NOT NULL)  NULLS FIRST, ((vt0.c0 COLLATE NOCASE)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT * FROM t2, v0 INNER JOIN vt0 ON ((((((0.893261910500332)<<(t0.c1)))AND(t0.c0)))AND(((t0.c1) BETWEEN (t2.c0) AND (t0.c1)))) RIGHT OUTER JOIN t0 ON ((((((((((v0.c0)!=(v0.c0)))AND(((((v0.c0)AND(v0.c0)))AND(t0.c1)))))OR(((t2.c0) NOTNULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND(((vt0.c0)!=(NULL)))) WHERE (CASE LTRIM(t2.c0, NULL)  WHEN t0.c0 COLLATE NOCASE THEN (NOT (t2.c0)) ELSE CASE 0.8657443762359608  WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c1 ELSE vt0.c0 END END) ORDER BY CASE ((((v0.c0)OR(0.3281565150959025)))OR(v0.c0))  WHEN CASE WHEN 0.6368063272100395 THEN t0.c1 END THEN ((9223372036854775807) BETWEEN (t0.c2) AND (-3.8354053E8)) END;
SELECT SUM(count) FROM (SELECT ((CASE LTRIM(t2.c0, NULL)  WHEN t0.c0 COLLATE NOCASE THEN (NOT (t2.c0)) ELSE CASE 0.8657443762359608  WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c1 ELSE vt0.c0 END END) IS TRUE)  as count FROM t2, v0 INNER JOIN vt0 ON ((((((0.893261910500332)<<(t0.c1)))AND(t0.c0)))AND(((t0.c1) BETWEEN (t2.c0) AND (t0.c1)))) RIGHT OUTER JOIN t0 ON ((((((((((v0.c0)!=(v0.c0)))AND(((((v0.c0)AND(v0.c0)))AND(t0.c1)))))OR(((t2.c0) NOTNULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND(((vt0.c0)!=(NULL)))) ORDER BY CASE ((((v0.c0)OR(0.3281565150959025)))OR(v0.c0))  WHEN CASE WHEN 0.6368063272100395 THEN t0.c1 END THEN ((9223372036854775807) BETWEEN (t0.c2) AND (-3.8354053E8)) END);
SELECT * FROM t2, v0 INNER JOIN vt0 ON ((((((0.893261910500332)<<(t0.c1)))AND(t0.c0)))AND(((t0.c1) BETWEEN (t2.c0) AND (t0.c1)))) RIGHT OUTER JOIN t0 ON ((((((((((v0.c0)!=(v0.c0)))AND(((((v0.c0)AND(v0.c0)))AND(t0.c1)))))OR(((t2.c0) NOTNULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND(((vt0.c0)!=(NULL)))) WHERE (CASE LTRIM(t2.c0, NULL)  WHEN t0.c0 COLLATE NOCASE THEN (NOT (t2.c0)) ELSE CASE 0.8657443762359608  WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c1 ELSE vt0.c0 END END) ORDER BY CASE ((((v0.c0)OR(0.3281565150959025)))OR(v0.c0))  WHEN CASE WHEN 0.6368063272100395 THEN t0.c1 END THEN ((9223372036854775807) BETWEEN (t0.c2) AND (-3.8354053E8)) END;
SELECT SUM(count) FROM (SELECT ((CASE LTRIM(t2.c0, NULL)  WHEN t0.c0 COLLATE NOCASE THEN (NOT (t2.c0)) ELSE CASE 0.8657443762359608  WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c1 ELSE vt0.c0 END END) IS TRUE)  as count FROM t2, v0 INNER JOIN vt0 ON ((((((0.893261910500332)<<(t0.c1)))AND(t0.c0)))AND(((t0.c1) BETWEEN (t2.c0) AND (t0.c1)))) RIGHT OUTER JOIN t0 ON ((((((((((v0.c0)!=(v0.c0)))AND(((((v0.c0)AND(v0.c0)))AND(t0.c1)))))OR(((t2.c0) NOTNULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))AND(((vt0.c0)!=(NULL)))) ORDER BY CASE ((((v0.c0)OR(0.3281565150959025)))OR(v0.c0))  WHEN CASE WHEN 0.6368063272100395 THEN t0.c1 END THEN ((9223372036854775807) BETWEEN (t0.c2) AND (-3.8354053E8)) END);
SELECT ALL COUNT(*) FROM vt0, v0, t2, t0 WHERE (((CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)GLOB(SQLITE_COMPILEOPTION_GET(t2.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c1) AND (t2.c0)))<>(((t2.c0)<<(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)GLOB(SQLITE_COMPILEOPTION_GET(t2.c0)))) IS TRUE)  as count FROM vt0, v0, t2, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c1) AND (t2.c0)))<>(((t2.c0)<<(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t2, t0 WHERE (((CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)GLOB(SQLITE_COMPILEOPTION_GET(t2.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c1) AND (t2.c0)))<>(((t2.c0)<<(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)GLOB(SQLITE_COMPILEOPTION_GET(t2.c0)))) IS TRUE)  as count FROM vt0, v0, t2, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c1) AND (t2.c0)))<>(((t2.c0)<<(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t2, t0 WHERE (((CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)GLOB(SQLITE_COMPILEOPTION_GET(t2.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c1) AND (t2.c0)))<>(((t2.c0)<<(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt0, t2 WHERE (CASE WHEN t2.c0 THEN vt0.c0 ELSE t2.c0 END COLLATE NOCASE) ORDER BY (((t2.c0)==(t2.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN t2.c0 THEN vt0.c0 ELSE t2.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t2 ORDER BY (((t2.c0)==(t2.c0)) IN ()));
SELECT * FROM vt0, t2 WHERE (CASE WHEN t2.c0 THEN vt0.c0 ELSE t2.c0 END COLLATE NOCASE) ORDER BY (((t2.c0)==(t2.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN t2.c0 THEN vt0.c0 ELSE t2.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t2 ORDER BY (((t2.c0)==(t2.c0)) IN ()));
SELECT * FROM vt0, t2 WHERE (CASE WHEN t2.c0 THEN vt0.c0 ELSE t2.c0 END COLLATE NOCASE) ORDER BY (((t2.c0)==(t2.c0)) IN ());
SELECT ALL * FROM t2 WHERE ((CAST(t2.c0 AS NUMERIC) IN ())) ORDER BY (('2100488100')*((('') ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t2.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t2 ORDER BY (('2100488100')*((('') ISNULL))));
SELECT ALL * FROM t2 WHERE ((CAST(t2.c0 AS NUMERIC) IN ())) ORDER BY (('2100488100')*((('') ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t2.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t2 ORDER BY (('2100488100')*((('') ISNULL))));
SELECT ALL * FROM t2 WHERE ((CAST(t2.c0 AS NUMERIC) IN ())) ORDER BY (('2100488100')*((('') ISNULL)));
SELECT ALL COUNT(*) FROM t2, t0 WHERE ((((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) IN ())) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE ((((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) IN ())) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE ((((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (CASE (((t2.c0, t2.c0, vt0.c0))<>((t2.c0, vt0.c0, vt0.c0)))  WHEN vt0.c0 COLLATE NOCASE THEN ((t2.c0)&(t2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t2.c0, t2.c0, vt0.c0))<>((t2.c0, vt0.c0, vt0.c0)))  WHEN vt0.c0 COLLATE NOCASE THEN ((t2.c0)&(t2.c0)) END) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (CASE (((t2.c0, t2.c0, vt0.c0))<>((t2.c0, vt0.c0, vt0.c0)))  WHEN vt0.c0 COLLATE NOCASE THEN ((t2.c0)&(t2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t2.c0, t2.c0, vt0.c0))<>((t2.c0, vt0.c0, vt0.c0)))  WHEN vt0.c0 COLLATE NOCASE THEN ((t2.c0)&(t2.c0)) END) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (CASE (((t2.c0, t2.c0, vt0.c0))<>((t2.c0, vt0.c0, vt0.c0)))  WHEN vt0.c0 COLLATE NOCASE THEN ((t2.c0)&(t2.c0)) END);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (NULL COLLATE BINARY) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (NULL COLLATE BINARY) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (NULL COLLATE BINARY) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (CASE ((t0.c2) BETWEEN (t0.c2) AND (t0.c1))  WHEN ((((((((((((t0.c2)AND(t0.c1)))OR(t0.c1)))OR(t0.c1)))OR(t2.c0)))OR(t0.c2)))OR(t0.c2)) THEN t0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2) BETWEEN (t0.c2) AND (t0.c1))  WHEN ((((((((((((t0.c2)AND(t0.c1)))OR(t0.c1)))OR(t0.c1)))OR(t2.c0)))OR(t0.c2)))OR(t0.c2)) THEN t0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END END) IS TRUE)  as count FROM t2, vt0, t0);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (CASE ((t0.c2) BETWEEN (t0.c2) AND (t0.c1))  WHEN ((((((((((((t0.c2)AND(t0.c1)))OR(t0.c1)))OR(t0.c1)))OR(t2.c0)))OR(t0.c2)))OR(t0.c2)) THEN t0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2) BETWEEN (t0.c2) AND (t0.c1))  WHEN ((((((((((((t0.c2)AND(t0.c1)))OR(t0.c1)))OR(t0.c1)))OR(t2.c0)))OR(t0.c2)))OR(t0.c2)) THEN t0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END END) IS TRUE)  as count FROM t2, vt0, t0);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (CASE ((t0.c2) BETWEEN (t0.c2) AND (t0.c1))  WHEN ((((((((((((t0.c2)AND(t0.c1)))OR(t0.c1)))OR(t0.c1)))OR(t2.c0)))OR(t0.c2)))OR(t0.c2)) THEN t0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CASE ((t0.c0) ISNULL)  WHEN (~ (v0.c0)) THEN t0.c1 ELSE CAST(t0.c2 AS TEXT) END RIGHT OUTER JOIN t2 ON (- ((((t0.c1))==((t0.c2))))) WHERE ((((0x41538504))==((((t2.c0)/(0X64771050))))));
SELECT SUM(count) FROM (SELECT (((((0x41538504))==((((t2.c0)/(0x64771050)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON CASE ((t0.c0) ISNULL)  WHEN (~ (v0.c0)) THEN t0.c1 ELSE CAST(t0.c2 AS TEXT) END RIGHT OUTER JOIN t2 ON (- ((((t0.c1))=((t0.c2))))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CASE ((t0.c0) ISNULL)  WHEN (~ (v0.c0)) THEN t0.c1 ELSE CAST(t0.c2 AS TEXT) END RIGHT OUTER JOIN t2 ON (- ((((t0.c1))==((t0.c2))))) WHERE ((((0x41538504))==((((t2.c0)/(0X64771050))))));
SELECT SUM(count) FROM (SELECT (((((0x41538504))==((((t2.c0)/(0x64771050)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON CASE ((t0.c0) ISNULL)  WHEN (~ (v0.c0)) THEN t0.c1 ELSE CAST(t0.c2 AS TEXT) END RIGHT OUTER JOIN t2 ON (- ((((t0.c1))=((t0.c2))))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CASE ((t0.c0) ISNULL)  WHEN (~ (v0.c0)) THEN t0.c1 ELSE CAST(t0.c2 AS TEXT) END RIGHT OUTER JOIN t2 ON (- ((((t0.c1))==((t0.c2))))) WHERE ((((0x41538504))==((((t2.c0)/(0X64771050))))));
SELECT ALL * FROM v0, t0 WHERE ((((((((t0.c0, t0.c2, t0.c0))<((t0.c2, v0.c0, t0.c0))))OR((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))OR(((NULL) NOT BETWEEN (t0.c0) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0, t0.c2, t0.c0))<((t0.c2, v0.c0, t0.c0))))OR((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))OR(((NULL) NOT BETWEEN (t0.c0) AND (t0.c1))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((((t0.c0, t0.c2, t0.c0))<((t0.c2, v0.c0, t0.c0))))OR((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))OR(((NULL) NOT BETWEEN (t0.c0) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0, t0.c2, t0.c0))<((t0.c2, v0.c0, t0.c0))))OR((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))OR(((NULL) NOT BETWEEN (t0.c0) AND (t0.c1))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((((t0.c0, t0.c2, t0.c0))<((t0.c2, v0.c0, t0.c0))))OR((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))OR(((NULL) NOT BETWEEN (t0.c0) AND (t0.c1)))));
SELECT ALL * FROM vt0, t0, v0 INNER JOIN t2 ON HEX(CASE WHEN v0.c0 THEN t0.c0 END) WHERE ((((vt0.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)) IN ())) ORDER BY ABS(('-401857280' IN ())), 1100478448;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, v0 INNER JOIN t2 ON HEX(CASE WHEN v0.c0 THEN t0.c0 END) ORDER BY ABS(('-401857280' IN ())), 1100478448);
SELECT ALL * FROM vt0, t0, v0 INNER JOIN t2 ON HEX(CASE WHEN v0.c0 THEN t0.c0 END) WHERE ((((vt0.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)) IN ())) ORDER BY ABS(('-401857280' IN ())), 1100478448;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (t2.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, v0 INNER JOIN t2 ON HEX(CASE WHEN v0.c0 THEN t0.c0 END) ORDER BY ABS(('-401857280' IN ())), 1100478448);
SELECT ALL COUNT(*) FROM t2 WHERE (((TIME(t2.c0, t2.c0, t2.c0, t2.c0, t2.c0))+(CASE WHEN t2.c0 THEN 43197803 ELSE t2.c0 END))) ORDER BY t2.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TIME(t2.c0, t2.c0, t2.c0, t2.c0, t2.c0))+(CASE WHEN t2.c0 THEN 43197803 ELSE t2.c0 END))) IS TRUE)  as count FROM t2 ORDER BY t2.c0 ASC);
SELECT ALL COUNT(*) FROM t2 WHERE (((TIME(t2.c0, t2.c0, t2.c0, t2.c0, t2.c0))+(CASE WHEN t2.c0 THEN 43197803 ELSE t2.c0 END))) ORDER BY t2.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TIME(t2.c0, t2.c0, t2.c0, t2.c0, t2.c0))+(CASE WHEN t2.c0 THEN 43197803 ELSE t2.c0 END))) IS TRUE)  as count FROM t2 ORDER BY t2.c0 ASC);
SELECT ALL COUNT(*) FROM t2 WHERE (((TIME(t2.c0, t2.c0, t2.c0, t2.c0, t2.c0))+(CASE WHEN t2.c0 THEN 43197803 ELSE t2.c0 END))) ORDER BY t2.c0 ASC;
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN t2 ON (((NULL, t0.c1, v0.c0)) NOT BETWEEN ((t2.c0, v0.c0, t2.c0)) AND ((v0.c0, t2.c0, t0.c2))) COLLATE RTRIM WHERE (NULL) ORDER BY ((((CAST(v0.c0 AS BLOB))AND(CASE WHEN v0.c0 THEN t0.c2 END)))AND(t0.c2 COLLATE BINARY)) ASC, ((((v0.c0)>>(t2.c0)))|(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN t2 ON (((NULL, t0.c1, v0.c0)) NOT BETWEEN ((t2.c0, v0.c0, t2.c0)) AND ((v0.c0, t2.c0, t0.c2))) COLLATE RTRIM ORDER BY ((((CAST(v0.c0 AS BLOB))AND(CASE WHEN v0.c0 THEN t0.c2 END)))AND(t0.c2 COLLATE BINARY)) ASC, ((((v0.c0)>>(t2.c0)))|(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))));
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN t2 ON (((NULL, t0.c1, v0.c0)) NOT BETWEEN ((t2.c0, v0.c0, t2.c0)) AND ((v0.c0, t2.c0, t0.c2))) COLLATE RTRIM WHERE (NULL) ORDER BY ((((CAST(v0.c0 AS BLOB))AND(CASE WHEN v0.c0 THEN t0.c2 END)))AND(t0.c2 COLLATE BINARY)) ASC, ((((v0.c0)>>(t2.c0)))|(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN t2 ON (((NULL, t0.c1, v0.c0)) NOT BETWEEN ((t2.c0, v0.c0, t2.c0)) AND ((v0.c0, t2.c0, t0.c2))) COLLATE RTRIM ORDER BY ((((CAST(v0.c0 AS BLOB))AND(CASE WHEN v0.c0 THEN t0.c2 END)))AND(t0.c2 COLLATE BINARY)) ASC, ((((v0.c0)>>(t2.c0)))|(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))));
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN t2 ON (((NULL, t0.c1, v0.c0)) NOT BETWEEN ((t2.c0, v0.c0, t2.c0)) AND ((v0.c0, t2.c0, t0.c2))) COLLATE RTRIM WHERE (NULL) ORDER BY ((((CAST(v0.c0 AS BLOB))AND(CASE WHEN v0.c0 THEN t0.c2 END)))AND(t0.c2 COLLATE BINARY)) ASC, ((((v0.c0)>>(t2.c0)))|(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))));
SELECT ALL * FROM v0, t2 WHERE (NULL) ORDER BY (((((t2.c0) IS TRUE)))<>((((((((((NULL)OR(v0.c0)))OR(t2.c0)))AND(v0.c0)))AND(t2.c0)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t2 ORDER BY (((((t2.c0) IS TRUE)))<>((((((((((NULL)OR(v0.c0)))OR(t2.c0)))AND(v0.c0)))AND(t2.c0))))));
SELECT ALL * FROM v0, t2 WHERE (NULL) ORDER BY (((((t2.c0) IS TRUE)))<>((((((((((NULL)OR(v0.c0)))OR(t2.c0)))AND(v0.c0)))AND(t2.c0)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t2 ORDER BY (((((t2.c0) IS TRUE)))<>((((((((((NULL)OR(v0.c0)))OR(t2.c0)))AND(v0.c0)))AND(t2.c0))))));
SELECT ALL * FROM v0, t2 WHERE (NULL) ORDER BY (((((t2.c0) IS TRUE)))<>((((((((((NULL)OR(v0.c0)))OR(t2.c0)))AND(v0.c0)))AND(t2.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(x'f0f2' AS NUMERIC)) BETWEEN (CASE WHEN '-1812910849' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ())))) ORDER BY (v0.c0 IN ()), ABS(DISTINCT NULL);
SELECT SUM(count) FROM (SELECT ((((CAST(x'f0f2' AS NUMERIC)) BETWEEN (CASE WHEN '-1812910849' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()), ABS(DISTINCT NULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(x'f0f2' AS NUMERIC)) BETWEEN (CASE WHEN '-1812910849' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ())))) ORDER BY (v0.c0 IN ()), ABS(DISTINCT NULL);
SELECT SUM(count) FROM (SELECT ((((CAST(x'f0f2' AS NUMERIC)) BETWEEN (CASE WHEN '-1812910849' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()), ABS(DISTINCT NULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(x'f0f2' AS NUMERIC)) BETWEEN (CASE WHEN '-1812910849' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ())))) ORDER BY (v0.c0 IN ()), ABS(DISTINCT NULL);
SELECT ALL * FROM t2, vt0 WHERE ((~ (((t2.c0) NOTNULL)))) ORDER BY (((t2.c0, t2.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c0)), CAST('' AS BLOB), INSTR(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (0.4928142802947377) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)), CAST(t2.c0 AS NUMERIC)))), ((CAST(t2.c0 AS BLOB)) BETWEEN (((vt0.c0)||(x'335c'))) AND (CAST(t2.c0 AS TEXT)))  NULLS FIRST, ((((t2.c0)*(t2.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t2.c0) NOTNULL)))) IS TRUE)  as count FROM t2, vt0 ORDER BY (((t2.c0, t2.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c0)), CAST('' AS BLOB), INSTR(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (0.4928142802947377) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)), CAST(t2.c0 AS NUMERIC)))), ((CAST(t2.c0 AS BLOB)) BETWEEN (((vt0.c0)||(x'335c'))) AND (CAST(t2.c0 AS TEXT)))  NULLS FIRST, ((((t2.c0)*(t2.c0))) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM t2, vt0 WHERE ((~ (((t2.c0) NOTNULL)))) ORDER BY (((t2.c0, t2.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c0)), CAST('' AS BLOB), INSTR(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (0.4928142802947377) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)), CAST(t2.c0 AS NUMERIC)))), ((CAST(t2.c0 AS BLOB)) BETWEEN (((vt0.c0)||(x'335c'))) AND (CAST(t2.c0 AS TEXT)))  NULLS FIRST, ((((t2.c0)*(t2.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t2.c0) NOTNULL)))) IS TRUE)  as count FROM t2, vt0 ORDER BY (((t2.c0, t2.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c0)), CAST('' AS BLOB), INSTR(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (0.4928142802947377) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)), CAST(t2.c0 AS NUMERIC)))), ((CAST(t2.c0 AS BLOB)) BETWEEN (((vt0.c0)||(x'335c'))) AND (CAST(t2.c0 AS TEXT)))  NULLS FIRST, ((((t2.c0)*(t2.c0))) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM t2, vt0 WHERE ((~ (((t2.c0) NOTNULL)))) ORDER BY (((t2.c0, t2.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c0)), CAST('' AS BLOB), INSTR(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (0.4928142802947377) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)), CAST(t2.c0 AS NUMERIC)))), ((CAST(t2.c0 AS BLOB)) BETWEEN (((vt0.c0)||(x'335c'))) AND (CAST(t2.c0 AS TEXT)))  NULLS FIRST, ((((t2.c0)*(t2.c0))) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN t2 ON (((x'')) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((CAST(v0.c0 AS BLOB)))) WHERE (load_extension(((v0.c0) NOTNULL))) ORDER BY (((NOT (vt0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((v0.c0) NOTNULL))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t2 ON (((x'')) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((CAST(v0.c0 AS BLOB)))) ORDER BY (((NOT (vt0.c0))) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN t2 ON (((x'')) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((CAST(v0.c0 AS BLOB)))) WHERE (load_extension(((v0.c0) NOTNULL))) ORDER BY (((NOT (vt0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((v0.c0) NOTNULL))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t2 ON (((x'')) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((CAST(v0.c0 AS BLOB)))) ORDER BY (((NOT (vt0.c0))) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN t2 ON (((x'')) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((CAST(v0.c0 AS BLOB)))) WHERE (load_extension(((v0.c0) NOTNULL))) ORDER BY (((NOT (vt0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT COUNT(*) FROM t2, v0 WHERE (((((v0.c0)OR(v0.c0))) IS FALSE)) ORDER BY CAST(((v0.c0) IS TRUE) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM t2, v0 ORDER BY CAST(((v0.c0) IS TRUE) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM t2, v0 WHERE (((((v0.c0)OR(v0.c0))) IS FALSE)) ORDER BY CAST(((v0.c0) IS TRUE) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM t2, v0 ORDER BY CAST(((v0.c0) IS TRUE) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM t2, v0 WHERE (((((v0.c0)OR(v0.c0))) IS FALSE)) ORDER BY CAST(((v0.c0) IS TRUE) AS BLOB) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE))>=(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))>=(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE))>=(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))>=(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE))>=(((vt0.c0)>=(vt0.c0)))));
SELECT ALL * FROM t0, vt0, t2, v0 WHERE (COALESCE(((t0.c1)>=(t0.c2)), CAST(t0.c2 AS NUMERIC), (((t2.c0))>=((t0.c1))), CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((t0.c1)>=(t0.c2)), CAST(t0.c2 AS NUMERIC), (((t2.c0))>=((t0.c1))), CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM t0, vt0, t2, v0);
SELECT ALL * FROM t0, vt0, t2, v0 WHERE (COALESCE(((t0.c1)>=(t0.c2)), CAST(t0.c2 AS NUMERIC), (((t2.c0))>=((t0.c1))), CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((t0.c1)>=(t0.c2)), CAST(t0.c2 AS NUMERIC), (((t2.c0))>=((t0.c1))), CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM t0, vt0, t2, v0);
SELECT ALL * FROM t0, vt0, t2, v0 WHERE (COALESCE(((t0.c1)>=(t0.c2)), CAST(t0.c2 AS NUMERIC), (((t2.c0))>=((t0.c1))), CAST(vt0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN ((NULL IN (t0.c1))) AND (((vt0.c0)||(t0.c1))))) ORDER BY (NOT (CAST(t0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) BETWEEN ((NULL IN (t0.c1))) AND (((vt0.c0)||(t0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (CAST(t0.c1 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN ((NULL IN (t0.c1))) AND (((vt0.c0)||(t0.c1))))) ORDER BY (NOT (CAST(t0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) BETWEEN ((NULL IN (t0.c1))) AND (((vt0.c0)||(t0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (CAST(t0.c1 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN ((NULL IN (t0.c1))) AND (((vt0.c0)||(t0.c1))))) ORDER BY (NOT (CAST(t0.c1 AS TEXT)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0)/(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((x'e9a3')) AND ((vt0.c0))) WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN 0.8759994193186126 ELSE 'EGSmpX5AN' END) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOTNULL))) AND ((vt0.c0 COLLATE BINARY, 0Xffffffffa0788861, CAST(vt0.c0 AS INTEGER))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0)/(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((x'e9a3')) AND ((vt0.c0))) WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN 0.8759994193186126 ELSE 'EGSmpX5AN' END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOTNULL))) AND ((vt0.c0 COLLATE BINARY, 0Xffffffffa0788861, CAST(vt0.c0 AS INTEGER))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0)/(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((x'e9a3')) AND ((vt0.c0))) WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN 0.8759994193186126 ELSE 'EGSmpX5AN' END) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOTNULL))) AND ((vt0.c0 COLLATE BINARY, 0Xffffffffa0788861, CAST(vt0.c0 AS INTEGER))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0)/(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((x'e9a3')) AND ((vt0.c0))) WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN 0.8759994193186126 ELSE 'EGSmpX5AN' END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOTNULL))) AND ((vt0.c0 COLLATE BINARY, 0Xffffffffa0788861, CAST(vt0.c0 AS INTEGER))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0)/(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((x'e9a3')) AND ((vt0.c0))) WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN 0.8759994193186126 ELSE 'EGSmpX5AN' END) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOTNULL))) AND ((vt0.c0 COLLATE BINARY, 0Xffffffffa0788861, CAST(vt0.c0 AS INTEGER))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t2, vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ((NOT (t2.c0)), ((vt0.c0)||(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<=(vt0.c0)) IN ((NOT (t2.c0)), ((vt0.c0)||(t2.c0))))) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ((NOT (t2.c0)), ((vt0.c0)||(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<=(vt0.c0)) IN ((NOT (t2.c0)), ((vt0.c0)||(t2.c0))))) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ((NOT (t2.c0)), ((vt0.c0)||(t2.c0)))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON ((CASE WHEN t0.c2 THEN t0.c2 END)%(((t0.c0) IS FALSE))) WHERE (CASE WHEN -1.693123613E9 THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -1.693123613E9 THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((CASE WHEN t0.c2 THEN t0.c2 END)%(((t0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON ((CASE WHEN t0.c2 THEN t0.c2 END)%(((t0.c0) IS FALSE))) WHERE (CASE WHEN -1.693123613E9 THEN (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -1.693123613E9 THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((CASE WHEN t0.c2 THEN t0.c2 END)%(((t0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON ((CASE WHEN t0.c2 THEN t0.c2 END)%(((t0.c0) IS FALSE))) WHERE (CASE WHEN -1.693123613E9 THEN (v0.c0 IN ()) END);
SELECT * FROM v0, t0, t2, vt0 WHERE ((((NOT (t0.c2)))==(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((t0.c0) NOT NULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c2)))=(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, t0, t2, vt0 ORDER BY ((((t0.c0) NOT NULL)) NOTNULL)  NULLS FIRST);
SELECT * FROM v0, t0, t2, vt0 WHERE ((((NOT (t0.c2)))==(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((t0.c0) NOT NULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c2)))=(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, t0, t2, vt0 ORDER BY ((((t0.c0) NOT NULL)) NOTNULL)  NULLS FIRST);
SELECT * FROM v0, t0, t2, vt0 WHERE ((((NOT (t0.c2)))==(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((t0.c0) NOT NULL)) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0, vt0, t2 WHERE (((((((((((((((t2.c0)AND('1067907398')))AND(v0.c0)))OR(v0.c0)))OR(t0.c1)))OR(v0.c0)))OR(t0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t2.c0)AND('1067907398')))AND(v0.c0)))OR(v0.c0)))OR(t0.c1)))OR(v0.c0)))OR(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, v0, vt0, t2);
SELECT ALL COUNT(*) FROM t0, v0, vt0, t2 WHERE (((((((((((((((t2.c0)AND('1067907398')))AND(v0.c0)))OR(v0.c0)))OR(t0.c1)))OR(v0.c0)))OR(t0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t2.c0)AND('1067907398')))AND(v0.c0)))OR(v0.c0)))OR(t0.c1)))OR(v0.c0)))OR(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, v0, vt0, t2);
SELECT ALL COUNT(*) FROM t0, v0, vt0, t2 WHERE (((((((((((((((t2.c0)AND('1067907398')))AND(v0.c0)))OR(v0.c0)))OR(t0.c1)))OR(v0.c0)))OR(t0.c2))) IS TRUE));
SELECT * FROM v0, vt0, t2, t0 WHERE ((((((t0.c2))=((vt0.c0)))) ISNULL)) ORDER BY ((((TYPEOF(DISTINCT v0.c0))AND(((((((((t0.c2)AND(t0.c0)))OR(t2.c0)))OR(t0.c1)))OR(t2.c0)))))OR(((v0.c0)<>(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2))==((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM v0, vt0, t2, t0 ORDER BY ((((TYPEOF(DISTINCT v0.c0))AND(((((((((t0.c2)AND(t0.c0)))OR(t2.c0)))OR(t0.c1)))OR(t2.c0)))))OR(((v0.c0)<>(vt0.c0)))));
SELECT * FROM v0, vt0, t2, t0 WHERE ((((((t0.c2))=((vt0.c0)))) ISNULL)) ORDER BY ((((TYPEOF(DISTINCT v0.c0))AND(((((((((t0.c2)AND(t0.c0)))OR(t2.c0)))OR(t0.c1)))OR(t2.c0)))))OR(((v0.c0)<>(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2))==((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM v0, vt0, t2, t0 ORDER BY ((((TYPEOF(DISTINCT v0.c0))AND(((((((((t0.c2)AND(t0.c0)))OR(t2.c0)))OR(t0.c1)))OR(t2.c0)))))OR(((v0.c0)<>(vt0.c0)))));
SELECT * FROM v0, vt0, t2, t0 WHERE ((((((t0.c2))=((vt0.c0)))) ISNULL)) ORDER BY ((((TYPEOF(DISTINCT v0.c0))AND(((((((((t0.c2)AND(t0.c0)))OR(t2.c0)))OR(t0.c1)))OR(t2.c0)))))OR(((v0.c0)<>(vt0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)OR(t0.c2)))|((- (t0.c2))))) ORDER BY ((((((t0.c2)AND(t0.c2)))AND(t0.c0)))>=(t0.c0 COLLATE RTRIM)) ASC, UNLIKELY(((t0.c2)&(t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c2)))|((- (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2)AND(t0.c2)))AND(t0.c0)))>=(t0.c0 COLLATE RTRIM)) ASC, UNLIKELY(((t0.c2)&(t0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)OR(t0.c2)))|((- (t0.c2))))) ORDER BY ((((((t0.c2)AND(t0.c2)))AND(t0.c0)))>=(t0.c0 COLLATE RTRIM)) ASC, UNLIKELY(((t0.c2)&(t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c2)))|((- (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2)AND(t0.c2)))AND(t0.c0)))>=(t0.c0 COLLATE RTRIM)) ASC, UNLIKELY(((t0.c2)&(t0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)OR(t0.c2)))|((- (t0.c2))))) ORDER BY ((((((t0.c2)AND(t0.c2)))AND(t0.c0)))>=(t0.c0 COLLATE RTRIM)) ASC, UNLIKELY(((t0.c2)&(t0.c0))) DESC  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN t0 ON CAST(t0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN v0 ON (((('D<')AND(LOWER(t0.c2))))AND(CAST(t2.c0 AS NUMERIC))) INNER JOIN t2 ON t0.c2 WHERE (((t0.c2) NOT NULL) COLLATE RTRIM) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(t0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN v0 ON (((('D<')AND(LOWER(t0.c2))))AND(CAST(t2.c0 AS NUMERIC))) INNER JOIN t2 ON t0.c2 ORDER BY NULL ASC);
SELECT * FROM vt0 CROSS JOIN t0 ON CAST(t0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN v0 ON (((('D<')AND(LOWER(t0.c2))))AND(CAST(t2.c0 AS NUMERIC))) INNER JOIN t2 ON t0.c2 WHERE (((t0.c2) NOT NULL) COLLATE RTRIM) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST(t0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN v0 ON (((('D<')AND(LOWER(t0.c2))))AND(CAST(t2.c0 AS NUMERIC))) INNER JOIN t2 ON t0.c2 ORDER BY NULL ASC);
SELECT * FROM t2, vt0 INNER JOIN t0 ON '>)' WHERE ((- (t0.c1))) ORDER BY JULIANDAY(CASE WHEN t0.c0 THEN t0.c2 END, NULL COLLATE RTRIM, ((((t0.c0)OR(t0.c2)))AND(vt0.c0)), 'F*R', ((((t0.c1)AND(t0.c1)))OR(t2.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c1))) IS TRUE)  as count FROM t2, vt0 INNER JOIN t0 ON '>)' ORDER BY JULIANDAY(CASE WHEN t0.c0 THEN t0.c2 END, NULL COLLATE RTRIM, ((((t0.c0)OR(t0.c2)))AND(vt0.c0)), 'F*R', ((((t0.c1)AND(t0.c1)))OR(t2.c0))));
SELECT * FROM t2, vt0 INNER JOIN t0 ON '>)' WHERE ((- (t0.c1))) ORDER BY JULIANDAY(CASE WHEN t0.c0 THEN t0.c2 END, NULL COLLATE RTRIM, ((((t0.c0)OR(t0.c2)))AND(vt0.c0)), 'F*R', ((((t0.c1)AND(t0.c1)))OR(t2.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c1))) IS TRUE)  as count FROM t2, vt0 INNER JOIN t0 ON '>)' ORDER BY JULIANDAY(CASE WHEN t0.c0 THEN t0.c2 END, NULL COLLATE RTRIM, ((((t0.c0)OR(t0.c2)))AND(vt0.c0)), 'F*R', ((((t0.c1)AND(t0.c1)))OR(t2.c0))));
SELECT * FROM t2, vt0 INNER JOIN t0 ON '>)' WHERE ((- (t0.c1))) ORDER BY JULIANDAY(CASE WHEN t0.c0 THEN t0.c2 END, NULL COLLATE RTRIM, ((((t0.c0)OR(t0.c2)))AND(vt0.c0)), 'F*R', ((((t0.c1)AND(t0.c1)))OR(t2.c0)));
SELECT * FROM v0, t2, t0, vt0 WHERE (t2.c0) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM v0, t2, t0, vt0 ORDER BY t0.c0  NULLS LAST);
SELECT * FROM v0, t2, t0, vt0 WHERE (t2.c0) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM v0, t2, t0, vt0 ORDER BY t0.c0  NULLS LAST);
SELECT * FROM v0, t2, t0, vt0 WHERE (t2.c0) ORDER BY t0.c0  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, vt0 NATURAL JOIN t2 WHERE (((t0.c2 COLLATE NOCASE)&(CASE WHEN t0.c0 THEN t2.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE NOCASE)&(CASE WHEN t0.c0 THEN t2.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END))) IS TRUE)  as count FROM t0, v0, vt0 NATURAL JOIN t2);
SELECT COUNT(*) FROM t0, v0, vt0 NATURAL JOIN t2 WHERE (((t0.c2 COLLATE NOCASE)&(CASE WHEN t0.c0 THEN t2.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE NOCASE)&(CASE WHEN t0.c0 THEN t2.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END))) IS TRUE)  as count FROM t0, v0, vt0 NATURAL JOIN t2);
SELECT COUNT(*) FROM t0, v0, vt0 NATURAL JOIN t2 WHERE (((t0.c2 COLLATE NOCASE)&(CASE WHEN t0.c0 THEN t2.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 ELSE t0.c1 END)));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY 8.55203808E8 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY 8.55203808E8 COLLATE RTRIM DESC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY 8.55203808E8 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY 8.55203808E8 COLLATE RTRIM DESC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY 8.55203808E8 COLLATE RTRIM DESC;
SELECT * FROM t2 WHERE (CAST(t2.c0 COLLATE RTRIM AS TEXT)) ORDER BY CASE WHEN '1240873264' THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t2.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t2 ORDER BY CASE WHEN '1240873264' THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE  NULLS FIRST);
SELECT * FROM t2 WHERE (CAST(t2.c0 COLLATE RTRIM AS TEXT)) ORDER BY CASE WHEN '1240873264' THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t2.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM t2 ORDER BY CASE WHEN '1240873264' THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE  NULLS FIRST);
SELECT * FROM t2 WHERE (CAST(t2.c0 COLLATE RTRIM AS TEXT)) ORDER BY CASE WHEN '1240873264' THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE x'7e29'  WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)*(v0.c0))))) ORDER BY RTRIM(CAST(v0.c0 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE x'7e29'  WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY RTRIM(CAST(v0.c0 AS TEXT)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE x'7e29'  WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)*(v0.c0))))) ORDER BY RTRIM(CAST(v0.c0 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE x'7e29'  WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY RTRIM(CAST(v0.c0 AS TEXT)) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE x'7e29'  WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)*(v0.c0))))) ORDER BY RTRIM(CAST(v0.c0 AS TEXT)) DESC;
SELECT * FROM t2 RIGHT OUTER JOIN v0 ON (((((~ (v0.c0)))AND(CASE WHEN v0.c0 THEN NULL ELSE 1718303094 END)))AND(t2.c0 COLLATE NOCASE)) WHERE (NULL) ORDER BY ((((((t2.c0)GLOB(v0.c0)))OR(CAST(-1e500 AS REAL))))AND((+ (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN v0 ON (((((~ (v0.c0)))AND(CASE WHEN v0.c0 THEN NULL ELSE 1718303094 END)))AND(t2.c0 COLLATE NOCASE)) ORDER BY ((((((t2.c0)GLOB(v0.c0)))OR(CAST(-1e500 AS REAL))))AND((+ (v0.c0))))  NULLS LAST);
SELECT * FROM t2 RIGHT OUTER JOIN v0 ON (((((~ (v0.c0)))AND(CASE WHEN v0.c0 THEN NULL ELSE 1718303094 END)))AND(t2.c0 COLLATE NOCASE)) WHERE (NULL) ORDER BY ((((((t2.c0)GLOB(v0.c0)))OR(CAST(-1e500 AS REAL))))AND((+ (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN v0 ON (((((~ (v0.c0)))AND(CASE WHEN v0.c0 THEN NULL ELSE 1718303094 END)))AND(t2.c0 COLLATE NOCASE)) ORDER BY ((((((t2.c0)GLOB(v0.c0)))OR(CAST(-1e500 AS REAL))))AND((+ (v0.c0))))  NULLS LAST);
SELECT * FROM t2 RIGHT OUTER JOIN v0 ON (((((~ (v0.c0)))AND(CASE WHEN v0.c0 THEN NULL ELSE 1718303094 END)))AND(t2.c0 COLLATE NOCASE)) WHERE (NULL) ORDER BY ((((((t2.c0)GLOB(v0.c0)))OR(CAST(-1e500 AS REAL))))AND((+ (v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (INSTR(NULL, CASE vt0.c0  WHEN vt0.c0 THEN x'7ae2' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)) ORDER BY ((((vt0.c0) NOT BETWEEN (1635045042) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(NULL, CASE vt0.c0  WHEN vt0.c0 THEN x'7ae2' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (1635045042) AND (vt0.c0))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (INSTR(NULL, CASE vt0.c0  WHEN vt0.c0 THEN x'7ae2' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)) ORDER BY ((((vt0.c0) NOT BETWEEN (1635045042) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(NULL, CASE vt0.c0  WHEN vt0.c0 THEN x'7ae2' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (1635045042) AND (vt0.c0))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (INSTR(NULL, CASE vt0.c0  WHEN vt0.c0 THEN x'7ae2' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)) ORDER BY ((((vt0.c0) NOT BETWEEN (1635045042) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM t2, v0 WHERE (((((((t2.c0)AND(v0.c0)))AND(t2.c0)))<=(((t2.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t2.c0)AND(v0.c0)))AND(t2.c0)))<=(((t2.c0) IS FALSE)))) IS TRUE)  as count FROM t2, v0);
SELECT COUNT(*) FROM t2, v0 WHERE (((((((t2.c0)AND(v0.c0)))AND(t2.c0)))<=(((t2.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t2.c0)AND(v0.c0)))AND(t2.c0)))<=(((t2.c0) IS FALSE)))) IS TRUE)  as count FROM t2, v0);
SELECT COUNT(*) FROM t2, v0 WHERE (((((((t2.c0)AND(v0.c0)))AND(t2.c0)))<=(((t2.c0) IS FALSE))));
SELECT ALL * FROM vt0, t2 WHERE (DATE(t2.c0, vt0.c0, ((t2.c0)AND(vt0.c0)), ((((t2.c0)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL))) ORDER BY ((LIKELY(t2.c0))IS NOT(((x'19e922f0')%(t2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATE(t2.c0, vt0.c0, ((t2.c0)AND(vt0.c0)), ((((t2.c0)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0, t2 ORDER BY ((LIKELY(t2.c0))IS NOT(((x'19e922f0')%(t2.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, t2 WHERE (DATE(t2.c0, vt0.c0, ((t2.c0)AND(vt0.c0)), ((((t2.c0)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL))) ORDER BY ((LIKELY(t2.c0))IS NOT(((x'19e922f0')%(t2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATE(t2.c0, vt0.c0, ((t2.c0)AND(vt0.c0)), ((((t2.c0)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0, t2 ORDER BY ((LIKELY(t2.c0))IS NOT(((x'19e922f0')%(t2.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, t2 WHERE (DATE(t2.c0, vt0.c0, ((t2.c0)AND(vt0.c0)), ((((t2.c0)OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL))) ORDER BY ((LIKELY(t2.c0))IS NOT(((x'19e922f0')%(t2.c0))))  NULLS FIRST;
SELECT ALL * FROM v0, t0, t2, vt0 WHERE (x'') ORDER BY (~ (t0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0, t2, vt0 ORDER BY (~ (t0.c1))  NULLS FIRST);
SELECT ALL * FROM v0, t0, t2, vt0 WHERE (x'') ORDER BY (~ (t0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0, t2, vt0 ORDER BY (~ (t0.c1))  NULLS FIRST);
SELECT ALL * FROM v0, t0, t2, vt0 WHERE (x'') ORDER BY (~ (t0.c1))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0, vt0 INNER JOIN t2 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t2.c0 WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((t0.c1)=(t2.c0))) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))AND(v0.c0)))OR(t0.c0)))) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, v0, vt0 INNER JOIN t2 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t2.c0 WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((t0.c1)=(t2.c0))) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))AND(v0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 INNER JOIN t2 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t2.c0 WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((t0.c1)=(t2.c0))) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))AND(v0.c0)))OR(t0.c0)))) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, v0, vt0 INNER JOIN t2 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t2.c0 WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((t0.c1)=(t2.c0))) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))AND(v0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 INNER JOIN t2 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN t2.c0 WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((t0.c1)=(t2.c0))) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))AND(v0.c0)))OR(t0.c0)))) WHERE (t0.c2);
SELECT * FROM t2, t0 WHERE (((t0.c1)<(x'0360'))) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS REAL), (((((t2.c0) ISNULL)))>((t2.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)<(x'0360'))) IS TRUE)  as count FROM t2, t0 ORDER BY CAST(CAST(t0.c0 AS BLOB) AS REAL), (((((t2.c0) ISNULL)))>((t2.c0))) DESC);
SELECT * FROM t2, t0 WHERE (((t0.c1)<(x'0360'))) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS REAL), (((((t2.c0) ISNULL)))>((t2.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)<(x'0360'))) IS TRUE)  as count FROM t2, t0 ORDER BY CAST(CAST(t0.c0 AS BLOB) AS REAL), (((((t2.c0) ISNULL)))>((t2.c0))) DESC);
SELECT * FROM t2, t0 WHERE (((t0.c1)<(x'0360'))) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS REAL), (((((t2.c0) ISNULL)))>((t2.c0))) DESC;
SELECT ALL COUNT(*) FROM t2 CROSS JOIN vt0 ON ABS(DISTINCT ((t0.c0)|(t0.c2))) RIGHT OUTER JOIN v0 ON (((t0.c2)!=(vt0.c0)) IN ()) RIGHT OUTER JOIN t0 ON STRFTIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), CAST(t0.c2 AS TEXT), (+ (t0.c1))) WHERE (((0.1658814514387611 COLLATE RTRIM) BETWEEN (((((((((t0.c2)OR(t0.c2)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND ('1906050226')));
SELECT SUM(count) FROM (SELECT ((((0.1658814514387611 COLLATE RTRIM) BETWEEN (((((((((t0.c2)OR(t0.c2)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND ('1906050226'))) IS TRUE)  as count FROM t2 CROSS JOIN vt0 ON ABS(DISTINCT ((t0.c0)|(t0.c2))) RIGHT OUTER JOIN v0 ON (((t0.c2)!=(vt0.c0)) IN ()) RIGHT OUTER JOIN t0 ON STRFTIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), CAST(t0.c2 AS TEXT), (+ (t0.c1))));
SELECT ALL COUNT(*) FROM t2 CROSS JOIN vt0 ON ABS(DISTINCT ((t0.c0)|(t0.c2))) RIGHT OUTER JOIN v0 ON (((t0.c2)!=(vt0.c0)) IN ()) RIGHT OUTER JOIN t0 ON STRFTIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), CAST(t0.c2 AS TEXT), (+ (t0.c1))) WHERE (((0.1658814514387611 COLLATE RTRIM) BETWEEN (((((((((t0.c2)OR(t0.c2)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND ('1906050226')));
SELECT SUM(count) FROM (SELECT ((((0.1658814514387611 COLLATE RTRIM) BETWEEN (((((((((t0.c2)OR(t0.c2)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND ('1906050226'))) IS TRUE)  as count FROM t2 CROSS JOIN vt0 ON ABS(DISTINCT ((t0.c0)|(t0.c2))) RIGHT OUTER JOIN v0 ON (((t0.c2)!=(vt0.c0)) IN ()) RIGHT OUTER JOIN t0 ON STRFTIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), CAST(t0.c2 AS TEXT), (+ (t0.c1))));
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL))))) ORDER BY ((load_extension(vt0.c0, vt0.c0))>=(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0 ORDER BY ((load_extension(vt0.c0, vt0.c0))>=(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL))))) ORDER BY ((load_extension(vt0.c0, vt0.c0))>=(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0 ORDER BY ((load_extension(vt0.c0, vt0.c0))>=(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL)) IS FALSE));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((t0.c1) IS FALSE) COLLATE NOCASE) ORDER BY '-1693123613' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c1) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY '-1693123613' ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((t0.c1) IS FALSE) COLLATE NOCASE) ORDER BY '-1693123613' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c1) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY '-1693123613' ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((t0.c1) IS FALSE) COLLATE NOCASE) ORDER BY '-1693123613' ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)<(t0.c2)) IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)<(t0.c2)) IN ()));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)<(t0.c2)) IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)<(t0.c2)) IN ()));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)<(t0.c2)) IN ()) WHERE (NULL);
SELECT * FROM t2 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (t2.c0);
SELECT ALL * FROM t0, v0, t2, vt0 WHERE (json_quote(CAST(t0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((json_quote(CAST(t0.c2 AS NUMERIC))) IS TRUE)  as count FROM t0, v0, t2, vt0);
SELECT ALL * FROM t0, v0, t2, vt0 WHERE (json_quote(CAST(t0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((json_quote(CAST(t0.c2 AS NUMERIC))) IS TRUE)  as count FROM t0, v0, t2, vt0);
SELECT ALL * FROM t0, v0, t2, vt0 WHERE (json_quote(CAST(t0.c2 AS NUMERIC)));
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))=(vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))=(vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (v0.c0)))=(vt0.c0)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((TRIM(DISTINCT v0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((TRIM(DISTINCT v0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((TRIM(DISTINCT v0.c0)) NOTNULL));
SELECT COUNT(*) FROM t0, t2, v0 WHERE (t0.c2) ORDER BY (((t0.c1))<((CAST(x'' AS NUMERIC)))) DESC  NULLS LAST, CASE WHEN v0.c0 COLLATE BINARY THEN '\r)' WHEN t2.c0 THEN ((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)) WHEN (((x'4421', t0.c2, t2.c0))<=((t0.c0, t0.c2, t2.c0))) THEN CASE t2.c0  WHEN t2.c0 THEN v0.c0 END ELSE x'' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, t2, v0 ORDER BY (((t0.c1))<((CAST(x'' AS NUMERIC)))) DESC  NULLS LAST, CASE WHEN v0.c0 COLLATE BINARY THEN '\r)' WHEN t2.c0 THEN ((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)) WHEN (((x'4421', t0.c2, t2.c0))<=((t0.c0, t0.c2, t2.c0))) THEN CASE t2.c0  WHEN t2.c0 THEN v0.c0 END ELSE x'' END ASC);
SELECT COUNT(*) FROM t0, t2, v0 WHERE (t0.c2) ORDER BY (((t0.c1))<((CAST(x'' AS NUMERIC)))) DESC  NULLS LAST, CASE WHEN v0.c0 COLLATE BINARY THEN '\r)' WHEN t2.c0 THEN ((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)) WHEN (((x'4421', t0.c2, t2.c0))<=((t0.c0, t0.c2, t2.c0))) THEN CASE t2.c0  WHEN t2.c0 THEN v0.c0 END ELSE x'' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, t2, v0 ORDER BY (((t0.c1))<((CAST(x'' AS NUMERIC)))) DESC  NULLS LAST, CASE WHEN v0.c0 COLLATE BINARY THEN '\r)' WHEN t2.c0 THEN ((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)) WHEN (((x'4421', t0.c2, t2.c0))<=((t0.c0, t0.c2, t2.c0))) THEN CASE t2.c0  WHEN t2.c0 THEN v0.c0 END ELSE x'' END ASC);
SELECT COUNT(*) FROM t0, t2, v0 WHERE (t0.c2) ORDER BY (((t0.c1))<((CAST(x'' AS NUMERIC)))) DESC  NULLS LAST, CASE WHEN v0.c0 COLLATE BINARY THEN '\r)' WHEN t2.c0 THEN ((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)) WHEN (((x'4421', t0.c2, t2.c0))<=((t0.c0, t0.c2, t2.c0))) THEN CASE t2.c0  WHEN t2.c0 THEN v0.c0 END ELSE x'' END ASC;
SELECT ALL COUNT(*) FROM t0, t2 WHERE (CASE ((t0.c0) ISNULL)  WHEN t0.c1 COLLATE RTRIM THEN CAST(t0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) ISNULL)  WHEN t0.c1 COLLATE RTRIM THEN CAST(t0.c1 AS TEXT) END) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (CASE ((t0.c0) ISNULL)  WHEN t0.c1 COLLATE RTRIM THEN CAST(t0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) ISNULL)  WHEN t0.c1 COLLATE RTRIM THEN CAST(t0.c1 AS TEXT) END) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (CASE ((t0.c0) ISNULL)  WHEN t0.c1 COLLATE RTRIM THEN CAST(t0.c1 AS TEXT) END);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (~ (v0.c0)) THEN -1772008112 WHEN UNLIKELY(0.4144104523188451) THEN UPPER(DISTINCT v0.c0) ELSE ((v0.c0)&(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (~ (v0.c0)) THEN -1772008112 WHEN UNLIKELY(0.4144104523188451) THEN UPPER(DISTINCT v0.c0) ELSE ((v0.c0)&(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (~ (v0.c0)) THEN -1772008112 WHEN UNLIKELY(0.4144104523188451) THEN UPPER(DISTINCT v0.c0) ELSE ((v0.c0)&(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (~ (v0.c0)) THEN -1772008112 WHEN UNLIKELY(0.4144104523188451) THEN UPPER(DISTINCT v0.c0) ELSE ((v0.c0)&(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN (~ (v0.c0)) THEN -1772008112 WHEN UNLIKELY(0.4144104523188451) THEN UPPER(DISTINCT v0.c0) ELSE ((v0.c0)&(vt0.c0)) END);
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY WHERE ((((('2121907316')OR(v0.c0)))||(((t0.c1) NOT NULL)))) ORDER BY (((t0.c0 IN ())) IS TRUE) ASC  NULLS LAST, ((CASE t0.c2  WHEN t0.c0 THEN t0.c1 END) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((('2121907316')OR(v0.c0)))||(((t0.c1) NOT NULL)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY ORDER BY (((t0.c0 IN ())) IS TRUE) ASC  NULLS LAST, ((CASE t0.c2  WHEN t0.c0 THEN t0.c1 END) IS TRUE));
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY WHERE ((((('2121907316')OR(v0.c0)))||(((t0.c1) NOT NULL)))) ORDER BY (((t0.c0 IN ())) IS TRUE) ASC  NULLS LAST, ((CASE t0.c2  WHEN t0.c0 THEN t0.c1 END) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((('2121907316')OR(v0.c0)))||(((t0.c1) NOT NULL)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY ORDER BY (((t0.c0 IN ())) IS TRUE) ASC  NULLS LAST, ((CASE t0.c2  WHEN t0.c0 THEN t0.c1 END) IS TRUE));
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY WHERE ((((('2121907316')OR(v0.c0)))||(((t0.c1) NOT NULL)))) ORDER BY (((t0.c0 IN ())) IS TRUE) ASC  NULLS LAST, ((CASE t0.c2  WHEN t0.c0 THEN t0.c1 END) IS TRUE);
SELECT ALL * FROM t2, vt0 WHERE ((0.9834127653851009 IN ()));
SELECT SUM(count) FROM (SELECT (((0.9834127653851009 IN ())) IS TRUE)  as count FROM t2, vt0);
SELECT ALL * FROM t2, vt0 WHERE ((0.9834127653851009 IN ()));
SELECT SUM(count) FROM (SELECT (((0.9834127653851009 IN ())) IS TRUE)  as count FROM t2, vt0);
SELECT ALL * FROM t2, vt0 WHERE ((0.9834127653851009 IN ()));
SELECT * FROM t0, vt0, t2 WHERE (CAST(t0.c1 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, t2);
SELECT * FROM t0, vt0, t2 WHERE (CAST(t0.c1 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, t2);
SELECT * FROM t0, vt0, t2 WHERE (CAST(t0.c1 AS TEXT) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0)<=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0)<=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0)<=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0)<=(v0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ('&~04|UQJg');
SELECT SUM(count) FROM (SELECT ALL (('&~04|UQJg') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('&~04|UQJg');
SELECT SUM(count) FROM (SELECT ALL (('&~04|UQJg') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('&~04|UQJg');
SELECT COUNT(*) FROM t2 WHERE ((MIN(t2.c0, t2.c0, t2.c0, t2.c0) IN (((t2.c0)-(t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) ORDER BY ((((((((((((t2.c0)OR(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(0.5627298441607056)))AND(t2.c0)))OR(t2.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((MIN(t2.c0, t2.c0, t2.c0, t2.c0) IN (((t2.c0)-(t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) IS TRUE)  as count FROM t2 ORDER BY ((((((((((((t2.c0)OR(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(0.5627298441607056)))AND(t2.c0)))OR(t2.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE ((MIN(t2.c0, t2.c0, t2.c0, t2.c0) IN (((t2.c0)-(t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) ORDER BY ((((((((((((t2.c0)OR(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(0.5627298441607056)))AND(t2.c0)))OR(t2.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((MIN(t2.c0, t2.c0, t2.c0, t2.c0) IN (((t2.c0)-(t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) IS TRUE)  as count FROM t2 ORDER BY ((((((((((((t2.c0)OR(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(0.5627298441607056)))AND(t2.c0)))OR(t2.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE ((MIN(t2.c0, t2.c0, t2.c0, t2.c0) IN (((t2.c0)-(t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) ORDER BY ((((((((((((t2.c0)OR(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(0.5627298441607056)))AND(t2.c0)))OR(t2.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (PRINTF(v0.c0));
SELECT SUM(count) FROM (SELECT ((PRINTF(v0.c0)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (PRINTF(v0.c0));
SELECT SUM(count) FROM (SELECT ((PRINTF(v0.c0)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (PRINTF(v0.c0));
SELECT COUNT(*) FROM t0, t2 WHERE (((t0.c0)-((t0.c2 IN (t0.c2))))) ORDER BY json_extract(t0.c0, t0.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)-((t0.c2 IN (t0.c2))))) IS TRUE)  as count FROM t0, t2 ORDER BY json_extract(t0.c0, t0.c0) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM t0, t2 WHERE (((t0.c0)-((t0.c2 IN (t0.c2))))) ORDER BY json_extract(t0.c0, t0.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)-((t0.c2 IN (t0.c2))))) IS TRUE)  as count FROM t0, t2 ORDER BY json_extract(t0.c0, t0.c0) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM t0, t2 WHERE (((t0.c0)-((t0.c2 IN (t0.c2))))) ORDER BY json_extract(t0.c0, t0.c0) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt0, v0, t2 WHERE ((((v0.c0) IS TRUE) IN (CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) ORDER BY LENGTH('0.19452757608406523') ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS TRUE) IN (CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) IS TRUE)  as count FROM vt0, v0, t2 ORDER BY LENGTH('0.19452757608406523') ASC);
SELECT ALL COUNT(*) FROM vt0, v0, t2 WHERE ((((v0.c0) IS TRUE) IN (CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) ORDER BY LENGTH('0.19452757608406523') ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS TRUE) IN (CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) IS TRUE)  as count FROM vt0, v0, t2 ORDER BY LENGTH('0.19452757608406523') ASC);
SELECT ALL COUNT(*) FROM vt0, v0, t2 WHERE ((((v0.c0) IS TRUE) IN (CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) ORDER BY LENGTH('0.19452757608406523') ASC;
SELECT * FROM v0, t0 NATURAL JOIN t2 WHERE (((((((t0.c2)LIKE(t0.c2)))AND(CASE t0.c2  WHEN t0.c1 THEN v0.c0 ELSE v0.c0 END)))OR(t2.c0 COLLATE RTRIM))) ORDER BY (((~ (v0.c0))) NOT BETWEEN ((+ (t0.c1))) AND (((t0.c2) ISNULL))) ASC  NULLS FIRST, (((~ (t2.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)LIKE(t0.c2)))AND(CASE t0.c2  WHEN t0.c1 THEN v0.c0 ELSE v0.c0 END)))OR(t2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN t2 ORDER BY (((~ (v0.c0))) NOT BETWEEN ((+ (t0.c1))) AND (((t0.c2) ISNULL))) ASC  NULLS FIRST, (((~ (t2.c0))) NOT NULL));
SELECT * FROM v0, t0 NATURAL JOIN t2 WHERE (((((((t0.c2)LIKE(t0.c2)))AND(CASE t0.c2  WHEN t0.c1 THEN v0.c0 ELSE v0.c0 END)))OR(t2.c0 COLLATE RTRIM))) ORDER BY (((~ (v0.c0))) NOT BETWEEN ((+ (t0.c1))) AND (((t0.c2) ISNULL))) ASC  NULLS FIRST, (((~ (t2.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)LIKE(t0.c2)))AND(CASE t0.c2  WHEN t0.c1 THEN v0.c0 ELSE v0.c0 END)))OR(t2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN t2 ORDER BY (((~ (v0.c0))) NOT BETWEEN ((+ (t0.c1))) AND (((t0.c2) ISNULL))) ASC  NULLS FIRST, (((~ (t2.c0))) NOT NULL));
SELECT * FROM v0, t0 NATURAL JOIN t2 WHERE (((((((t0.c2)LIKE(t0.c2)))AND(CASE t0.c2  WHEN t0.c1 THEN v0.c0 ELSE v0.c0 END)))OR(t2.c0 COLLATE RTRIM))) ORDER BY (((~ (v0.c0))) NOT BETWEEN ((+ (t0.c1))) AND (((t0.c2) ISNULL))) ASC  NULLS FIRST, (((~ (t2.c0))) NOT NULL);
SELECT COUNT(*) FROM t2, vt0 WHERE (((((vt0.c0)||(t2.c0))) ISNULL)) ORDER BY ((t2.c0 COLLATE BINARY) BETWEEN (((((((((vt0.c0)OR('TX%e1')))AND(t2.c0)))AND(vt0.c0)))OR(t2.c0))) AND (vt0.c0)) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((((t2.c0)GLOB(t2.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(t2.c0))) ISNULL)) IS TRUE)  as count FROM t2, vt0 ORDER BY ((t2.c0 COLLATE BINARY) BETWEEN (((((((((vt0.c0)OR('TX%e1')))AND(t2.c0)))AND(vt0.c0)))OR(t2.c0))) AND (vt0.c0)) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((((t2.c0)GLOB(t2.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t2, vt0 WHERE (((((vt0.c0)||(t2.c0))) ISNULL)) ORDER BY ((t2.c0 COLLATE BINARY) BETWEEN (((((((((vt0.c0)OR('TX%e1')))AND(t2.c0)))AND(vt0.c0)))OR(t2.c0))) AND (vt0.c0)) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((((t2.c0)GLOB(t2.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(t2.c0))) ISNULL)) IS TRUE)  as count FROM t2, vt0 ORDER BY ((t2.c0 COLLATE BINARY) BETWEEN (((((((((vt0.c0)OR('TX%e1')))AND(t2.c0)))AND(vt0.c0)))OR(t2.c0))) AND (vt0.c0)) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((((t2.c0)GLOB(t2.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t2, vt0 WHERE (((((vt0.c0)||(t2.c0))) ISNULL)) ORDER BY ((t2.c0 COLLATE BINARY) BETWEEN (((((((((vt0.c0)OR('TX%e1')))AND(t2.c0)))AND(vt0.c0)))OR(t2.c0))) AND (vt0.c0)) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((((t2.c0)GLOB(t2.c0)))))  NULLS LAST;
SELECT ALL * FROM t0, v0, t2 WHERE ((v0.c0 COLLATE NOCASE IN (json_type(v0.c0)))) ORDER BY (((((v0.c0) NOT NULL), ((t0.c0)LIKE(t0.c0)), ((v0.c0) NOT NULL)))>(((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))), t0.c2, ((t0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN (json_type(v0.c0)))) IS TRUE)  as count FROM t0, v0, t2 ORDER BY (((((v0.c0) NOT NULL), ((t0.c0)LIKE(t0.c0)), ((v0.c0) NOT NULL)))>(((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))), t0.c2, ((t0.c2) IS FALSE)))));
SELECT ALL * FROM t0, v0, t2 WHERE ((v0.c0 COLLATE NOCASE IN (json_type(v0.c0)))) ORDER BY (((((v0.c0) NOT NULL), ((t0.c0)LIKE(t0.c0)), ((v0.c0) NOT NULL)))>(((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))), t0.c2, ((t0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN (json_type(v0.c0)))) IS TRUE)  as count FROM t0, v0, t2 ORDER BY (((((v0.c0) NOT NULL), ((t0.c0)LIKE(t0.c0)), ((v0.c0) NOT NULL)))>(((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))), t0.c2, ((t0.c2) IS FALSE)))));
SELECT ALL * FROM t0, v0, t2 WHERE ((v0.c0 COLLATE NOCASE IN (json_type(v0.c0)))) ORDER BY (((((v0.c0) NOT NULL), ((t0.c0)LIKE(t0.c0)), ((v0.c0) NOT NULL)))>(((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))), t0.c2, ((t0.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (((((((((((vt0.c0) NOTNULL))OR(((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(t2.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOTNULL))OR(((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(t2.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (((((((((((vt0.c0) NOTNULL))OR(((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(t2.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOTNULL))OR(((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(t2.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (((((((((((vt0.c0) NOTNULL))OR(((t2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(t2.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0, vt0, v0 NATURAL JOIN t2 WHERE ((CAST(t2.c0 AS INTEGER) IN (t2.c0))) ORDER BY (~ (v0.c0)) DESC, ((x'1b51')IS NOT(((t2.c0)!=(t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t2.c0 AS INTEGER) IN (t2.c0))) IS TRUE)  as count FROM t0, vt0, v0 NATURAL JOIN t2 ORDER BY (~ (v0.c0)) DESC, ((x'1b51')IS NOT(((t2.c0)!=(t0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, v0 NATURAL JOIN t2 WHERE ((CAST(t2.c0 AS INTEGER) IN (t2.c0))) ORDER BY (~ (v0.c0)) DESC, ((x'1b51')IS NOT(((t2.c0)!=(t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t2.c0 AS INTEGER) IN (t2.c0))) IS TRUE)  as count FROM t0, vt0, v0 NATURAL JOIN t2 ORDER BY (~ (v0.c0)) DESC, ((x'1b51')IS NOT(((t2.c0)!=(t0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, v0 NATURAL JOIN t2 WHERE ((CAST(t2.c0 AS INTEGER) IN (t2.c0))) ORDER BY (~ (v0.c0)) DESC, ((x'1b51')IS NOT(((t2.c0)!=(t0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((json_type(vt0.c0) IN ())) ORDER BY (((vt0.c0)IS(vt0.c0)) IN (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((json_type(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)IS(vt0.c0)) IN (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((json_type(vt0.c0) IN ())) ORDER BY (((vt0.c0)IS(vt0.c0)) IN (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((json_type(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)IS(vt0.c0)) IN (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((json_type(vt0.c0) IN ())) ORDER BY (((vt0.c0)IS(vt0.c0)) IN (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN (((((v0.c0))>((t2.c0))))) AND (((- (t2.c0))))) CROSS JOIN t2 ON x'' WHERE (x'') ORDER BY ((CASE WHEN vt0.c0 THEN t2.c0 END)IS NOT(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) ASC  NULLS LAST, '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN (((((v0.c0))>((t2.c0))))) AND (((- (t2.c0))))) CROSS JOIN t2 ON x'' ORDER BY ((CASE WHEN vt0.c0 THEN t2.c0 END)IS NOT(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) ASC  NULLS LAST, '' DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN (((((v0.c0))>((t2.c0))))) AND (((- (t2.c0))))) CROSS JOIN t2 ON x'' WHERE (x'') ORDER BY ((CASE WHEN vt0.c0 THEN t2.c0 END)IS NOT(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) ASC  NULLS LAST, '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0)) BETWEEN (((((v0.c0))>((t2.c0))))) AND (((- (t2.c0))))) CROSS JOIN t2 ON x'' ORDER BY ((CASE WHEN vt0.c0 THEN t2.c0 END)IS NOT(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) ASC  NULLS LAST, '' DESC  NULLS LAST);
SELECT ALL * FROM vt0, t2, t0 WHERE (((vt0.c0)<>(t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<>(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t2, t0);
SELECT ALL * FROM vt0, t2, t0 WHERE (((vt0.c0)<>(t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<>(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t2, t0);
SELECT ALL * FROM vt0, t2, t0 WHERE (((vt0.c0)<>(t0.c2)) COLLATE NOCASE);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN 0X5484e897 END)>((- (NULL))))) ORDER BY RTRIM(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN 0x5484e897 END)>((- (NULL))))) IS TRUE)  as count FROM v0 ORDER BY RTRIM(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN 0X5484e897 END)>((- (NULL))))) ORDER BY RTRIM(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN 0x5484e897 END)>((- (NULL))))) IS TRUE)  as count FROM v0 ORDER BY RTRIM(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN 0X5484e897 END)>((- (NULL))))) ORDER BY RTRIM(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)));
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN t2 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC)) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((NULL) NOT BETWEEN (t2.c0) AND (v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t2 ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((NULL) NOT BETWEEN (t2.c0) AND (v0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN t2 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC)) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((NULL) NOT BETWEEN (t2.c0) AND (v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t2 ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((NULL) NOT BETWEEN (t2.c0) AND (v0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN t2 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC)) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((NULL) NOT BETWEEN (t2.c0) AND (v0.c0)) END  NULLS LAST;
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
