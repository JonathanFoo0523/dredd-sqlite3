-- Time: 2024/06/09 22:12:29
-- Database: database28
-- Database version: 3.40.0
-- seed value: 3804910028
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, prefix=390); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1086936431); -- 2ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.5941199340843446) WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS(((vt0.c0)OR(vt0.c0)))); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.5941199340843446; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES ('0.5941199340843446'), (x''), (0.5965746805447549); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-809334945 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-604001153 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x'bb3d'  WHEN '-809334945' THEN 0.17873451078529745 ELSE x'6e2c' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2098913156'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1591199043', 'oM', 0xffffffffeecd8698, '0.17873451078529745', x'8b9c')) NOT BETWEEN (('Ty7}FH75', '', '0.5941199340843446', '', x'55f2')) AND (('-809334945', x'', x'', NULL, 'fBl㰹l'))) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE x'59fc'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-628375543 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.34417358872519965; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', x'57d6', 0.6408290194285912)) BETWEEN ((x'', '-2098913156', '')) AND ((NULL, 0.5941199340843446, '2118718592')))) NOT BETWEEN (load_extension(NULL)) AND (x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((0.10032924669730592 IN ())); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1005163291 sz=-1306098749 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1544413046 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-288520552 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1448424657 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-501417320 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1923962156 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2102778649 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-628375543 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-501417320 1107504515 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.3393633004822818) BETWEEN ('滛w') AND ('GFh>X')))AND(((((((((NULL)AND(NULL)))OR('')))OR('1724660793')))OR(NULL)))))AND((~ (x'')))))AND(ROUND('-2102778649', ''))))OR(((0.5434001383946525) BETWEEN (NULL) AND ('-809334945')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.633652893679933) NOT BETWEEN (0.5957769290586643) AND (x''))))==((((((0.5965746805447549)AND(x'')))AND(NULL))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1031538091 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=683800449'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('-1637051905' COLLATE NOCASE) NOT BETWEEN (((0xffffffffc9b371ef)==(NULL))) AND (((x'') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=957017206 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((load_extension(NULL, '-885624707'))>>((((2.118718592E9)) NOT BETWEEN ((x'58b4')) AND ((NULL))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2 sz=957017206'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-838798906 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=357710863'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1728178518 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '滛w'  WHEN NULL THEN 2004226124 WHEN 0x3c16c113 THEN '-1544413046' WHEN NULL THEN NULL END)OR(((NULL)>(0.10032924669730592)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1031538091' COLLATE RTRIM) BETWEEN ('') AND (CASE WHEN NULL THEN 0.3912059923861013 WHEN x'' THEN '-1180755157' WHEN 0xffffffff9c7025c5 THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 33997065; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1180755157 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0.5434001383946525 AS TEXT) THEN (('-1e500')>(x'')) WHEN TYPEOF('0.6408290194285912') THEN ((NULL)OR('GFh>X')) WHEN -1.637051905E9 COLLATE BINARY THEN (((-2.098913156E9, 'p*GW2p', x'')) NOT BETWEEN ((0X565534d1, x'', x'')) AND (('1724660793', x'', NULL))) ELSE '' COLLATE RTRIM END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=725017439'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5073903152911066 AS INTEGER))<=((('+q') NOT BETWEEN (0xffffffff91b76126) AND ('oⓧ_~ch/-''')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '991331632 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-910986769'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1591199043 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE BINARY)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN (x'd339') AND (NULL)))AND(HEX(DISTINCT x''))))OR(x'469c')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1107504515 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2044827447 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-400476030 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1775768993 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '' THEN x'' ELSE x'39cc' END)LIKE(CASE WHEN ']R|曤-Lv1' THEN 0.5073903152911066 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(((x'9745') BETWEEN ('⣫>') AND (0X76015521)))))AND((NULL IN ()))))AND(((((' w{Jpx')AND(0xffffffffb78713e5)))OR(x'')))))AND((~ ('-2044827447')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1775768993'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-809334945 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1636285425'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1475749470 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1256456956 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-279948244 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1475749470')OR('-740190701')))OR('S#V')) COLLATE BINARY; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1138992593 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2102778649 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1618162918 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-645022508 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1389924133 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2117028284 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '220636042'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=51620856 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.9996409298692833 IN (CASE WHEN x'9b8a' THEN 0.37624475110029076 ELSE 'adVneqar<' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=722438918'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1786812864 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1728178518 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1340144777 sz=-734320552'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '-604001153'  WHEN x'' THEN -1180755157 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1478194214'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1891079994 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 163161941 sz=28156447'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=273342027'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-501417320 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=28156447 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 sz=-1475749470 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'6dff', x'', NULL)) BETWEEN ((x'', 0.14145697132748358, 0.276284094590043)) AND ((0.6928342650293623, x'', 'XG'))) THEN ('-501417320' IN ()) WHEN ((1174341314)==('-1728178518')) THEN (x'' IN ('J-')) WHEN ('163161941' IN ()) THEN (((x'0e7c'))<((0.7771625358885608))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9997553683645524)<=('')))-(((NULL)-(0x6e15f5c)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '763078801 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1850253018'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (LIKELY(DISTINCT -1.786812864E9))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1472289726 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE))||(CASE WHEN 0.5130836781592328 THEN 0.13386209548859895 ELSE 0.486563394211739 END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-604001153 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1429183491 sz=455381378 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (TRIM('1898046518', '-1215884315'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1728178518 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-515111050'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=51620856 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-745373152 -2054268337 sz=900947452 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (0.6178021112244523)) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '915942634 unordered'); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((804948820)GLOB('-288520552')) THEN ('18979217' IN ()) ELSE CAST(NULL AS NUMERIC) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1717132198'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-832759350'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((x''))>=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('') NOTNULL)))=((x'' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (PRINTF(x'') IN (SQLITE_VERSION(), ((-8.3275935E8) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((NULL)OR('NFo^H')))OR(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=18979217'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1678500381 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Ne')) BETWEEN ((NULL)) AND ((0X4850d2d2))) COLLATE BINARY COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1891079994)OR(x'')))AND(NULL)))<(((x'')<(0.6080975780042789)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=892210859'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')||('6''')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1850253018 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1062041980'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=549374971 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1340144777 sz=1287400990 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-586931939 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1728693365 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) NOT BETWEEN (TYPEOF(x'0388')) AND (x'8ae7' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '664854136'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1704784371 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') IS FALSE))AND((~ ('-586931939')))))AND(((x'6567')LIKE(0.5717649333685288)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1270742855 sz=2058053389 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1544413046 sz=99337727 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1061353446'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-745373152 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '294143116 sz=1063064123 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1485562243 sz=1207706361 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2057119730 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1306098749 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.2150532141170748)/(NULL)) THEN NULL ELSE NULL COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (805181460 COLLATE RTRIM)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1223167100 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-586931939 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1504787158 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1306098749'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('*k领M!ྴ')-(NULL)))<<(IFNULL(x'', 0.4505028690540235))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-832759350 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.00647412824813276  WHEN NULL THEN '' ELSE 0.42825616545328593 END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('1431417751')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.7382870164969898 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=612131643 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-604032170 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1329907267 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((-253000332)OR('Xn')))AND('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CASE WHEN x'bd3b' THEN NULL WHEN 805181460 THEN '-116488940' WHEN -2044827447 THEN x'' END, x'91af' COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.07671195856251689; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2143234928 2 sz=1576408798 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.3679024120751593 COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 0 sz=1340144777 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1944336316'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 0 sz=163161941 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('.ꢤ,x')<<(NULL))) BETWEEN (((('Z3')) BETWEEN (('1898046518')) AND ((x'')))) AND (('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-745373152'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1529675543'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-302331915 COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', '979153601', '569291246')) BETWEEN ((NULL, '0.13386209548859895', 0.14901954200597234)) AND ((0.24220583839065424, '蟇၂]a', 0X34b92c63))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)==(0.9997553683645524)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1229401551'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'E}(I+'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=2081196375 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1448424657 sz=-2142609483 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1684433565 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7960246383724681) BETWEEN (CAST('0.6178021112244523' AS REAL)) AND ((((NULL)) NOT BETWEEN ((NULL)) AND (('fa%秐Bc('))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 991331632 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-118013698 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-914544535'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'8cfd'  WHEN 0X69d815a1 THEN '0.24220583839065424' END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (''))) NOT BETWEEN ((NOT (NULL))) AND ((+ (0.6897152904323552)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1435577058'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '763078801 0 sz=549374971 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (x'4e75'))))<((((x'2041')&(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=120731466'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1230550545 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('*k领m!ྴ') AND (0.08653554945549957))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(CAST(x'1a9f' AS NUMERIC), ('' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1358589365'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1979798817')) NOT BETWEEN (('')) AND (('-1061353446'))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-2028745238 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 785421653 sz=1596678027 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (' w{Jpx' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('-645022508' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-501417320)<=(x'')) COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1779278106 sz=1846804031 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1039838331 sz=1223167100 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1922550844 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR(-1544413046)))OR(NULL)))*((('-1915097240') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('192162474')AND(x'')) COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT x'' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-126982428 sz=683800449 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1898046518')!=(NULL))))==((((((NULL)AND('^\n^\aa')))AND(x'cd92'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.08653554945549957 COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-515111050'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY('-1173452779')) IS FALSE); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('U')AND(0.3794938426814547)))OR(x'')) AS TEXT); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6762732444016092) NOT BETWEEN ('-1637051905') AND (x'')))/(((('1851349215'))>=(('ꝕ0A曀d'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.7583444041365893 AS REAL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-250926869 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('%+6' AS INTEGER) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('' AS INTEGER))AND((((x''))>=((''))))))AND(NULLIF(DISTINCT 0.7122029561265472, NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0X7a9d27f2 IN ()) THEN x'' COLLATE BINARY ELSE ((x'')OR('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1618162918 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-645022508 -250926869 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE '滛w'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1717132198 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN ('2114957156') AND (0.017659497197738516)))|(CAST('' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-182244857 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1323414735 sz=1567559194 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('-1116634888' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-68602549 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1213256402 sz=1678500381 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')LIKE(1223167100))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7960246383724681) NOTNULL), (621421274 IN (0xffffffffc1c4e26b)), (x'' IN (2.058053389E9, '', x''))))<((((NULL)<<(7.25017439E8)), (('z.3~') BETWEEN (NULL) AND ('')), '18979217' COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) BETWEEN (((x'5e14') BETWEEN (x'') AND ('sA)-作E57i'))) AND (((x'')<>('G_<')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '615601333 1378272045 sz=0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1475749470 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '407229736 sz=1255469470 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-148244127 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('60435863' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('~B'))) NOT BETWEEN ((x'9957' IN ())) AND ('-1504787158')); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1400961718 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (('1120264307' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')-(0.6828157307088357))  WHEN UPPER(0.38175793908534705) THEN (((NULL)) BETWEEN ((0x7a9d27f2)) AND ((1.891079994E9))) WHEN (- (0x59f0fb7)) THEN x'' WHEN NULL COLLATE NOCASE THEN ((((991331632)OR(NULL)))AND('-646966280')) ELSE ((NULL) IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-645022508))<=(('-1485562243'))) COLLATE BINARY COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.23933666254370445 AS TEXT))>=(((NULL) NOT BETWEEN (0.4852303809399291) AND (0.8810342144200113)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-204984949')&(-327963874)))OR((x'' IN ('', NULL)))))AND(((('mv', 0.07473569736207197, x''))<=(('''	s4k(1>K', '432842364', 0.9319094369354601))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1174341314 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (x'')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')-(0.6897152904323552)) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2012588756') NOT BETWEEN (NULL) AND (x''))) NOT BETWEEN ((((x'')) NOT BETWEEN ((x'')) AND (('1390861778')))) AND ((('') BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '957017206 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9705318141695224 COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 960090463 sz=1976678101 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN 0.7771625358885608 THEN 0.6708928532133612 WHEN x'' THEN '370204524' WHEN '' THEN NULL ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1215884315 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1106525957 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0Xffffffffc279a8ab)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1979798817'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL))) BETWEEN ((((('-126982428')AND(0.0893123537749757)))AND(0.8259465600703634))) AND (LIKELIHOOD(DISTINCT '-1485562243', 0.29207656179075026))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9302126966088412 COLLATE NOCASE)AND(('yw䒌흸 鬂t簪' IN ()))))OR((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1170472849 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.12706108842748853)) NOT BETWEEN ((0.3912059923861013)) AND (('-1'))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-1213078592'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-740190701 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '538976160 sz=-1005163291 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('1593717730' IN (0.6804501681254231)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=915942634 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1138992593 -2031057901 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1169904914'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1230299341 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'a2d0') NOT BETWEEN (NULL) AND ('0.5130836781592328')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-2110417699 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=594849980 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL)) NOT BETWEEN (('-628375543')) AND (('Infinity'))) THEN CASE NULL  WHEN 0.9862539593414689 THEN NULL WHEN 0.40494199635344763 THEN '0.7583444041365893' WHEN x'5eb7' THEN '' ELSE '-1728178518' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1871354876' IN (0.2147710281697388, 0.3925928114926883)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=357710863 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-964170581 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (x'1e85') AND (NULL)))<=(((NULL)|(0Xffffffff8a1f5abf)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1989644542 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1013248248 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1483254867 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 -391676442 sz=2057119730 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '683800449 0 sz=1998633665 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '^Xhi+H,-N'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_array(x'', NULL) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1501664249'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffff915bb3f6 IN ()) IN (CAST(x'' AS BLOB), CASE NULL  WHEN 0.0643650477760005 THEN x'' WHEN 'iDakQHd3J' THEN '2057119730' WHEN 0.3533633949353344 THEN '0.5941199340843446' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1448424657 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1969735433 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1954975588 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-638593206 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('Ꝕ0A曀D')OR(x'0ce4')))AND('')) AS BLOB); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2115112635 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('*Flu') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=933238834'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '901382738 sz=-2098913156'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '650219310 834791238'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-820454664)||((('1150950110') BETWEEN (0.15742870872923198) AND ('滛M')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('WJ醎vD!F')AND('xaI0ex^')))&(CASE NULL  WHEN '!9' THEN '' WHEN x'' THEN '쪯9' WHEN '28156447' THEN x'' WHEN 'H0''' THEN x'' WHEN '-887171880' THEN '1661375610' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=713958677 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS TEXT) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '683800449 -1930067307 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-302878634') BETWEEN (x'') AND ('-645022508')))AND(((NULL) NOT BETWEEN (NULL) AND (NULL)))))OR(json_array_length(0.9996409298692833, x'0ce1'))))AND(((((0.7722756333984234)OR(NULL)))OR('763078801')))))OR(((x'') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1062041980 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX('?!'))IS((('XG') NOT BETWEEN (0.24088048280985908) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-1389924133 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL)) NOT BETWEEN ((((NULL))<>(('')))) AND (((0.5130836781592328) BETWEEN ('') AND ('0.14145697132748358')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0xffffffff84970458) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-734320552' IN ()))LIKE(((0Xffffffffaa018eba) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1081963468 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-501417320'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=721156161'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1593874904 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9997553683645524)) BETWEEN (('{H')) AND ((-863748689))))<=(CASE WHEN 'Q㌽bPBl' THEN 0Xfffffffff77611f7 ELSE '2004226124' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-469072937 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2110799707 sz=-1752126549 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-402729628 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-83769057 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR(261797243, ((x'')<(x'efe9')), ((NULL) IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-418229334) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('')AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1780066633 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (NULL)))AND('Q㌽bPBl')))OR(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(TRIM(DISTINCT '-2112790434', x''), LTRIM(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1394198280 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('eg')IS(x''))  WHEN '0.0' COLLATE BINARY THEN ((x'b078') BETWEEN (x'cccc') AND ('-1215884315')) ELSE CASE 2.058053389E9  WHEN 0.0661779199293957 THEN '1062041980' ELSE x'2c3e' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1117417729 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1758910328 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CASE WHEN '' THEN 0.7890174508421963 WHEN 'ࠚc' THEN NULL WHEN '-1728178518' THEN NULL WHEN NULL THEN x'' WHEN '455381378' THEN NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-745373152 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-942894485 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('&FW', 0x6c40ca26, x'')) BETWEEN ((NULL, NULL, NULL)) AND ((0.6611072022338659, '-1670371899', x''))) THEN x'' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-686795139' AS INTEGER)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=1979798817 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((652680435)OR(NULL)))AND(NULL)))>(CAST(x'' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-409200479 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((0X28e5e4ef)LIKE('0.7722756333984234')))) AND (((NOT (''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-870184018'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1813275739) BETWEEN ('') AND ('')))-((+ (x'1804')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NOT (NULL)) THEN ((((((((NULL)OR(x'ee0c')))AND('Mx')))OR(0xffffffffb12e2c76)))AND('-2044827447')) WHEN (('(>')/(NULL)) THEN CAST(x'1971' AS REAL) WHEN ((x'') IS TRUE) THEN ((-967726471)/('805181460')) ELSE x'' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffff9ef92c79)IS NOT(NULL))))<>((0.19832249660552492 COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(0x617b6866)))OR(0.3534423097933521)))AND(((x'')<=(NULL)))))AND(x'1cd1' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=957017206'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=273342027'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '243097397 -687603961 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1926208932') NOT BETWEEN (0.42301307141486755) AND (x''))) BETWEEN (TRIM('-740190701')) AND (((x'') NOT BETWEEN (x'') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1340144777 sz=-910986769'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-80869105 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(x'') AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2383469 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LOWER(NULL) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.3658918651184142)AND(0X66595ba6)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '-1215884315' THEN '2?' WHEN 0.22609121636550567 THEN 0.276284094590043 WHEN -760619996 THEN 0x5d413f36 ELSE 0.05886062100679135 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1215884315 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR(((2.118718592E9) IS TRUE), CASE WHEN '1174341314' THEN NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-61025871'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '767820926 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-964370227 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)+(NULL)))!=(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('gx')) NOT BETWEEN ((NULL)) AND ((NULL))))==(TRIM(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-910986769'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=373853126 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1408032628 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3335266499246592)AND('51620856'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-498080716 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1728569514', x'6724', 0.2928919248949746)) NOT BETWEEN ((NULL, (('\30H%W6') NOT NULL), (NOT (0.4729531093347943)))) AND (((('')>=('1717132198')), (('j') NOT BETWEEN (0.0726597840461215) AND (0.9019034501216907)), (~ ('97840525'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)||('1063064123')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=728127508 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1256688527 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-832759350 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-215409321 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=632688666 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2045107394 sz=549374971 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-9223372036854775808') NOT BETWEEN ('') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'14b5') BETWEEN (0.03695486300374928) AND (x''))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1637051905 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.6853078975453901 IN ()))OR(COALESCE(DISTINCT 0.8259465600703634, '', x'', 0X7e2f49bc, 1711859110, NULL, -2.88520552E8, x'', NULL, 0.2928919248949746))))OR(('-896903600' IN ()))))OR((('2132141844')OR(NULL)))))AND((((0.49837584918744016))<=(('805181460'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-2098913156') NOTNULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=1211053158'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>=(0xffffffff93c6cb68)))<=(((0.6708928532133612)<('-1463757269')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-2131293212 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') IS FALSE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=-1475749470 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1180755157 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1485562243'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1602657256'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=835939098 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.49919467970998566; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 -678148480'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('163161941') IS TRUE))>(((('7*Uq', x'4f9c', x'db8d')) NOT BETWEEN ((-1121722047, x'', 0X9b9a755)) AND (('892210859', 0Xffffffffea614b86, '釢啖?'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-780981962 sz=-1637051905 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1008126885 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1592869741'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN x'' WHEN x'bda0' THEN '2057119730' WHEN '|)赲1Ibm' THEN '395677954' ELSE 'now' END)=('1063064123' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-770120748 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1786812864'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(x'' COLLATE NOCASE, 0.18268603077307466); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((x'', '1293200641', 0X2831afca)) NOT BETWEEN ((NULL, NULL, NULL)) AND ((NULL, 0.29122648142386753, 0.27850972971580035))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=944474829 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9019034501216907 IN ('549374971')))=(('' IN ('722438918')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffff87a0e17c)) BETWEEN ((0xffffffff858e5a4f COLLATE NOCASE)) AND ((CASE WHEN NULL THEN 0.7287992815086969 ELSE '-2102778649' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1177714903 975403713 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'' COLLATE NOCASE  WHEN ((NULL)||(0.6928342650293623)) THEN ((NULL)=(0X3f5d123b)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.3393633004822818 IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -723861177 unordered noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE ((((('0.3393633004822818'))<(('H'))))>=((((('Q9')AND('_Zr')))OR(0.0015484234344939063)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1197551718'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) BETWEEN (CAST(NULL AS NUMERIC)) AND (x'd608')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=549374971 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.3845486796654751)<>(NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=(-1734426343)))-((+ (x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=270463476'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=147061538 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-586931939 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 sz=-1665944470 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'3e8b' AS INTEGER) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ('-1850253018')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((((x'')AND('0.05886062100679135')))OR(NULL)), ((x'') ISNULL), ','); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1150628368'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1905498359'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '763078801 sz=-2141421861 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1654359233'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (json_remove(0.07319811276556187, 'a!1', NULL, 0X70b7973a))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1223167100'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1949778065 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=54665677'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'ea19')))LIKE((((0xffffffffef50542c))<=((816960958))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2117028284 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT ('-1544413046' IN (x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'9668' IN (NULL)))>(CASE WHEN x'' THEN NULL ELSE x'' END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.33224120396828805) IS TRUE))<((0.9194382399052669 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-779276766 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=779206622 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1586965276 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X24886370))!=((x'247f'))))>>(((((((((x'')AND(NULL)))OR(0.0643650477760005)))OR(0.89536759551125)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'ꝕ0A曀d' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((('115433308')|(0X4e351c9)))) AND (((((NULL)) BETWEEN (('1478194214')) AND ((0xffffffffc4193667)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((']I|.0Hr') NOT BETWEEN (x'') AND ('-2140548577')))AND('蒖0' COLLATE BINARY)))AND(((x'') BETWEEN ('') AND (0.34417358872519965)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6786838993296691) NOT BETWEEN (0.33224120396828805) AND (NULL)))<<(((x'') NOT BETWEEN (0x6a1fb56) AND (466924732)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)*('sA)-作E57i')))AND(TRIM(NULL))))OR(CASE -84192160  WHEN -606653402 THEN 0.3431279976243248 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1869676063 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1306098749 sz=455381378 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff936bd242) NOT NULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.6786838993296691, NULL, 0.8034683845119187, NULL)) BETWEEN (((NOT (0xffffffffef5aa879)), UPPER(x''), ((((0X7776104c)OR(NULL)))OR('q7I')), (('(.!DXr7	0')||(NULL)), '1898046518' COLLATE RTRIM)) AND ((ABS(''), 1.063064123E9 COLLATE BINARY, GLOB(NULL, 'U\p!䌢X᧊	섓'), NULLIF(DISTINCT 138979156, 0.486563394211739), (x'' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE 0.42215147972620903  WHEN x'25a2' THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0.7591478137265124  WHEN NULL THEN '滛w' WHEN 0.5203010253734507 THEN -7.40190701E8 WHEN ')#8y' THEN '-1906159433' END AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-91391693 sz=1060897608 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT x'', 0.07671195856251689) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=99337727'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1062041980 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.09914973287145845)AND((((0.6220064032324562))<>(('-414090822'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.9357267598098664) NOT BETWEEN ('	T		볔c5') AND ('G<()')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1353989139 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '882467406'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.2797312390972101)))==((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('-586931939'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('(0') IS TRUE) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffffeecd8698)) BETWEEN ((NULL)) AND (('f')))) BETWEEN (((((x'')AND(NULL)))OR(0.2635097097354022))) AND (HEX(DISTINCT NULL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((-2112924646) NOT BETWEEN (-1138992593) AND (-1145651594)))OR((('115433308')%(0.535736099068473)))))OR(('-1040544622' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-636243347 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1608447970'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-126982428 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1330537009 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1366644929 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 sz=1719226798 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1409039154 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('zE'))) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-74208416 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 360059548 sz=-1329229001 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-115618685 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=99337727 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=580215705'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT 0.5527496539316393) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=742337247'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 -117512960 sz=1277786931 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN 0xffffffff81edf145 THEN 'ES⋹Cs祼oXM' ELSE 664854136 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2064079037 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.329657944657367)%((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT (('')AND(0.05336868080431689))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-501417320 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-134863313'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.30963407106381413)) BETWEEN (('-1138992593')) AND ((2.8156447E7)))) BETWEEN ('-647140552') AND (CAST('' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)+(x'')))||(CASE WHEN NULL THEN x'' ELSE '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'79f3', NULL, x'0e29')) NOT BETWEEN ((('' IN ()), RTRIM(-690248127), (('-1282727852') BETWEEN ('714536364') AND (x'')))) AND ((((NULL)AND(0.6828157307088357)), (('?y')!=('294143116')), ((((-1962234387)AND(x'')))OR(0Xfffffffffde81bbd))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(0.7846950651877892 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(ROUND(1927095102, 2118718592), (((0.2784566125144692)) BETWEEN (('')) AND (('F'))), (-1.472289726E9 IN (x'')), (0x550026ae IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 sz=2004226124'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (1.256456956E9))  WHEN ((NULL) BETWEEN ('') AND (x'')) THEN CAST(x'' AS REAL) WHEN ((('0.3534423097933521', 0Xffffffffb4c0c1df, NULL))<=(('0.34417358872519965', 0x15b4f286, '+WFq8'))) THEN NULL COLLATE NOCASE WHEN json_quote(x'') THEN (~ (0.18429450691491622)) ELSE ((((NULL)OR(x'')))OR(0.8062604143727407)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-740190701 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1290589542 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove((((NULL)) BETWEEN ((NULL)) AND ((-2.115112635E9))), (((x'8b70'))<((x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) BETWEEN (x'' COLLATE BINARY) AND (MAX(x'', 0.4375780736190735))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN '2118718592' END) NOT BETWEEN (((0.6677258547471921) NOT BETWEEN (NULL) AND (0Xffffffffe05256c7))) AND (CASE 0X78cf150b  WHEN x'' THEN '807819303' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ()) THEN (NOT ('-1542727396')) ELSE CASE WHEN 0.9644257331192251 THEN '_]^uHi' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-2053225510'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1448424657 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.23910097909465156) NOT BETWEEN ('') AND (x'')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(((('-938089164', NULL, NULL))>=(('0.07319811276556187', 0Xffffffffa549d25d, NULL))), (('0.42215147972620903') BETWEEN (0.2013490827767933) AND ('')), (0.6786838993296691 IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '33997065 -288520552 sz=-629095989'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=286375175 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-589945033 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.8740165877994416 IN ()) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>(2.118718592E9))) NOT BETWEEN (((('7Zi&Ns<DS', 0.6212132614958998, '-2044827447', '0.0', '씪8'))>=((NULL, '', NULL, NULL, NULL)))) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-91306169 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT 0.9268681794766754); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -734320552'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.7923675966590431 THEN '964619223' WHEN '991331632' THEN 0xffffffffbcc98887 WHEN x'' THEN NULL ELSE 0.1874469478242946 END) NOT BETWEEN (CASE WHEN NULL THEN 1159370598 WHEN 2.05711973E9 THEN 'U8%uE	z' WHEN NULL THEN NULL END) AND (((((NULL)OR(x'')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.7591478137265124)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1386340951'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=258518029 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(0.1912610316604978, x'ae26'))>=(CASE WHEN NULL THEN x'' WHEN NULL THEN 1.898046518E9 WHEN x'' THEN '-1150058892' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=961388098 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-741742918'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((NULL) IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('-1410014004')))LIKE((((0.16692859530328785, 0.49704484798736515, NULL)) NOT BETWEEN (('892210859', 0.8180766904516555, NULL)) AND (('\r峆{[TvHX浩', NULL, '-512537533'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '51620856 sz=-1773709829 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2115112635 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=813679035'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1163423886'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1297896000')AND('1717132198')))OR(0.42301307141486755)))AND(1031538091)))OR('x27!{dN')))%(((NULL) BETWEEN (x'') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffb5260d8d)IS('Zsﲌ\rE')))!=(IFNULL(NULL, 'pj'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length(1.979798817E9, x'')) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2044827447 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -910986769 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1891079994 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (GLOB(-1290621243, NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((958795529, 0.2798349200118846, x'')) NOT BETWEEN ((((0.9096162041878924) NOTNULL), (((NULL))>(('-675004220'))), (x'' IN ()))) AND ((CAST(0.2928730796643656 AS INTEGER), ((((((((x'')OR('9~N<0ArT◝')))AND(x'f88b')))OR(NULL)))AND('-409150648')), (+ (0.46909879620256156))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (('0.9705318141695224' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=455062461 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=1898046518 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0.7180274430660093 AS NUMERIC))OR((((x'')) NOT BETWEEN ((NULL)) AND ((0.8034683845119187))))))OR(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-2044827447 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1437915073 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.4852303809399291')>>(x'')) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5799412214845788 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-102794776 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1213256402 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.9705318141695224)>=(0.9137402379574806)) THEN CASE NULL  WHEN 'U' THEN 0.3035050265563569 ELSE 'a\n' END ELSE (('2004226124')IS(-628108580)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1485562243 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('-977687039')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '262224199'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=269199131 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1670371899'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((0.7557964090606619)<(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1504787158 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1113000953 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1586640447 0 sz=-634845374 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN (1979798817)) IN (CASE '_]^uhi'  WHEN 0.8189409638976638 THEN '0.7287992815086969' WHEN '-832759350' THEN '1333771629' WHEN '0.24220583839065424' THEN NULL WHEN 0.5677284330033299 THEN 0.06305710841786971 WHEN NULL THEN NULL ELSE x'' END, ((x'5c24') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1979798817 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1278593091'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1900717592 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\n' IN (0.09151607631139935)))||(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.2298287878810239 AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1008219579 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1213256402 sz=-1263110823 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-279948244'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('455381378')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1992579483'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('U2' COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1310614186 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '6 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL)AND(0.7289687979547492)))AND('1714715516')))OR('')))OR(0.7788713211422057)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '708876945' THEN 0.0716791351852114 WHEN NULL THEN x'' WHEN 0.9514154154962774 THEN x'' END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '455381378 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (NULL, '51620856', 'z	'), ('', NULL, 0.017659497197738516), (0X48e80c7c, 0.03148104647548178, 0.6281882319521149); -- 15ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 11ms;
UPDATE vt0 SET c0=2117532693; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET c0=0.3976644746811212, c0=x''; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0, c1) VALUES (0X2ea90532, '', 0.6385481541377803), ((((('-288520552')-(0Xffffffffccad156e))) BETWEEN ((((0xffffffff8d0482e2))=(('F8Y')))) AND (TRIM('-1504787158'))), '', x'9ed9'), (NULL, x'', '-1728693365'); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (''); -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
UPDATE OR IGNORE vt0 SET c0='B^' WHERE vt0.c0; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL), (x''), (''); -- 6ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('-279948244'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('-1835038557'), ('28156447'), (x''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('PQ('), (0Xffffffffa88bc364), (0.6824346282263055); -- 10ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.journal_mode = PERSIST; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES (NULL, '1107504515', NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE rt0 SET c0=0.9547443281252447; -- 9ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('725017439'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (1.15433308E8); -- 1ms;
ANALYZE; -- 0ms;
UPDATE vt0 SET (c0)=(NULL) WHERE ((((LIKELY(DISTINCT vt0.c0))OR(((vt0.c0) IS FALSE))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(0.1405421297256243)))OR(vt0.c0)))AND(1.775768993E9)))); -- 1ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('0.6220064032324562') WHERE CAST(vt0.c0 AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1475749470'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.9900404660873612); -- 1ms;
CREATE TABLE t0 (c0 REAL , c1 BLOB , c2 INT ); -- 13ms;
ALTER TABLE t0 RENAME COLUMN c1 TO c62; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (-1092311192); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.3653530237878302), (0x633c10f1), (x''); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'92f1'); -- 0ms;
ANALYZE main; -- 0ms;
REINDEX; -- 0ms;
UPDATE rt0 SET c0=x'', c1=x'8c1d'; -- 0ms;
UPDATE OR IGNORE t1 SET c62=x'', c0=NULL WHERE ((((((t1.c2)OR(t1.c62)))OR(t1.c62))) ISNULL); -- 0ms;
REINDEX  vt0; -- 5ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
UPDATE OR REPLACE rt0 SET (c1, c1)=('2057119730', 0.8446870815574743); -- 0ms;
UPDATE vt0 SET (c0, c0)=('6⹩2g*FB', 0.5941199340843446) WHERE json_array_length(((vt0.c0)/(vt0.c0))); -- 2ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('2057119730'); -- 1ms;
UPDATE OR IGNORE rt0 SET c2=0.42825616545328593; -- 0ms;
PRAGMA default_cache_size; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (-5.86931939E8); -- 0ms;
UPDATE t1 SET (c2)=('-31283406'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1637051905,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 45764574);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=('ⓧ,⊇t2<?\') WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO t1(c62, c0) VALUES (NULL, NULL); -- 1ms;
BEGIN  TRANSACTION; -- 2ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO t1(c62, c0) VALUES ('1223167100', 0.8987431984254048); -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) ORDER BY json_extract('K]', rt0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY json_extract('K]', rt0.c1)  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) ORDER BY json_extract('K]', rt0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY json_extract('K]', rt0.c1)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((x'e844') NOT BETWEEN (NULL) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'e844') NOT BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((x'e844') NOT BETWEEN (NULL) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'e844') NOT BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((x'e844') NOT BETWEEN (NULL) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0, t1 WHERE (t1.c62) ORDER BY ((((t1.c62)AND(((rt0.c0)IS(rt0.c1)))))AND(rt0.c0));
SELECT SUM(count) FROM (SELECT ((t1.c62) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((t1.c62)AND(((rt0.c0)IS(rt0.c1)))))AND(rt0.c0)));
SELECT COUNT(*) FROM rt0, t1 WHERE (t1.c62) ORDER BY ((((t1.c62)AND(((rt0.c0)IS(rt0.c1)))))AND(rt0.c0));
SELECT SUM(count) FROM (SELECT ((t1.c62) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((t1.c62)AND(((rt0.c0)IS(rt0.c1)))))AND(rt0.c0)));
SELECT COUNT(*) FROM rt0, t1 WHERE (t1.c62) ORDER BY ((((t1.c62)AND(((rt0.c0)IS(rt0.c1)))))AND(rt0.c0));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON t1.c0 WHERE (LTRIM(-806483181, CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c2 THEN t1.c62 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END)) ORDER BY (('Q{')&(x'')) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((LTRIM(-806483181, CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c2 THEN t1.c62 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON t1.c0 ORDER BY (('Q{')&(x'')) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON t1.c0 WHERE (LTRIM(-806483181, CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c2 THEN t1.c62 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END)) ORDER BY (('Q{')&(x'')) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((LTRIM(-806483181, CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c2 THEN t1.c62 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON t1.c0 ORDER BY (('Q{')&(x'')) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON t1.c0 WHERE (LTRIM(-806483181, CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c2 THEN t1.c62 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END)) ORDER BY (('Q{')&(x'')) COLLATE BINARY;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (RTRIM(((0.8952381041713915) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((RTRIM(((0.8952381041713915) IS FALSE))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (RTRIM(((0.8952381041713915) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((RTRIM(((0.8952381041713915) IS FALSE))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (RTRIM(((0.8952381041713915) IS FALSE)));
SELECT * FROM vt0, rt0 CROSS JOIN t1 ON (((t1.c62) BETWEEN (vt0.c0) AND ('1107504515')) IN ()) WHERE (CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t1 ON (((t1.c62) BETWEEN (vt0.c0) AND ('1107504515')) IN ()));
SELECT * FROM vt0, rt0 CROSS JOIN t1 ON (((t1.c62) BETWEEN (vt0.c0) AND ('1107504515')) IN ()) WHERE (CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t1 ON (((t1.c62) BETWEEN (vt0.c0) AND ('1107504515')) IN ()));
SELECT * FROM vt0, rt0 CROSS JOIN t1 ON (((t1.c62) BETWEEN (vt0.c0) AND ('1107504515')) IN ()) WHERE (CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END AS TEXT));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR(((vt0.c0)&(rt0.c2)))))OR(((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))))AND(((rt0.c2)+(rt0.c2)))))AND(((vt0.c0) IS TRUE)))) ORDER BY ((((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))AND(((((((((0.6762732444016092)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS BLOB))OR(((vt0.c0)&(rt0.c2)))))OR(((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))))AND(((rt0.c2)+(rt0.c2)))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))AND(((((((((0.6762732444016092)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))))AND(vt0.c0)));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR(((vt0.c0)&(rt0.c2)))))OR(((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))))AND(((rt0.c2)+(rt0.c2)))))AND(((vt0.c0) IS TRUE)))) ORDER BY ((((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))AND(((((((((0.6762732444016092)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS BLOB))OR(((vt0.c0)&(rt0.c2)))))OR(((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))))AND(((rt0.c2)+(rt0.c2)))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))AND(((((((((0.6762732444016092)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))))AND(vt0.c0)));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR(((vt0.c0)&(rt0.c2)))))OR(((((rt0.c2)OR(vt0.c0)))OR(vt0.c0)))))AND(((rt0.c2)+(rt0.c2)))))AND(((vt0.c0) IS TRUE)))) ORDER BY ((((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))AND(((((((((0.6762732444016092)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))))AND(vt0.c0));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c62, t1.c62, t1.c62)) BETWEEN ((((((t1.c62)OR(t1.c0)))OR(t1.c62)), ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c2)), CASE WHEN t1.c62 THEN x'032c' ELSE t1.c2 END)) AND ((((t1.c2)+(t1.c62)), ((t1.c62)&(t1.c2)), t1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c62, t1.c62, t1.c62)) BETWEEN ((((((t1.c62)OR(t1.c0)))OR(t1.c62)), ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c2)), CASE WHEN t1.c62 THEN x'032c' ELSE t1.c2 END)) AND ((((t1.c2)+(t1.c62)), ((t1.c62)&(t1.c2)), t1.c2)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c62, t1.c62, t1.c62)) BETWEEN ((((((t1.c62)OR(t1.c0)))OR(t1.c62)), ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c2)), CASE WHEN t1.c62 THEN x'032c' ELSE t1.c2 END)) AND ((((t1.c2)+(t1.c62)), ((t1.c62)&(t1.c2)), t1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c62, t1.c62, t1.c62)) BETWEEN ((((((t1.c62)OR(t1.c0)))OR(t1.c62)), ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c2)), CASE WHEN t1.c62 THEN x'032c' ELSE t1.c2 END)) AND ((((t1.c2)+(t1.c62)), ((t1.c62)&(t1.c2)), t1.c2)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c62, t1.c62, t1.c62)) BETWEEN ((((((t1.c62)OR(t1.c0)))OR(t1.c62)), ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c2)), CASE WHEN t1.c62 THEN x'032c' ELSE t1.c2 END)) AND ((((t1.c2)+(t1.c62)), ((t1.c62)&(t1.c2)), t1.c2))));
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((rt0.c1 COLLATE RTRIM)>(((t1.c2) NOT NULL)))) ORDER BY HEX(DISTINCT NULL) COLLATE NOCASE DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c2) AND (0x66e210d0))) BETWEEN (((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(t1.c62)))AND(t1.c0))) AND (((rt0.c1)/(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)>(((t1.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, t1, rt0 NOT INDEXED ORDER BY HEX(DISTINCT NULL) COLLATE NOCASE DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c2) AND (0X66e210d0))) BETWEEN (((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(t1.c62)))AND(t1.c0))) AND (((rt0.c1)/(rt0.c2)))));
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((rt0.c1 COLLATE RTRIM)>(((t1.c2) NOT NULL)))) ORDER BY HEX(DISTINCT NULL) COLLATE NOCASE DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c2) AND (0x66e210d0))) BETWEEN (((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(t1.c62)))AND(t1.c0))) AND (((rt0.c1)/(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)>(((t1.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, t1, rt0 NOT INDEXED ORDER BY HEX(DISTINCT NULL) COLLATE NOCASE DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c2) AND (0X66e210d0))) BETWEEN (((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(t1.c62)))AND(t1.c0))) AND (((rt0.c1)/(rt0.c2)))));
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((rt0.c1 COLLATE RTRIM)>(((t1.c2) NOT NULL)))) ORDER BY HEX(DISTINCT NULL) COLLATE NOCASE DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c2) AND (0x66e210d0))) BETWEEN (((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))AND(t1.c62)))AND(t1.c0))) AND (((rt0.c1)/(rt0.c2))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (- (LIKE(vt0.c0, vt0.c0, '2'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (- (LIKE(vt0.c0, vt0.c0, '2'))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (- (LIKE(vt0.c0, vt0.c0, '2'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (- (LIKE(vt0.c0, vt0.c0, '2'))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (- (LIKE(vt0.c0, vt0.c0, '2'))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ABS(DISTINCT rt0.c0)  WHEN ((rt0.c2) IS FALSE) THEN ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(DISTINCT rt0.c0)  WHEN ((rt0.c2) IS FALSE) THEN ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ABS(DISTINCT rt0.c0)  WHEN ((rt0.c2) IS FALSE) THEN ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(DISTINCT rt0.c0)  WHEN ((rt0.c2) IS FALSE) THEN ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ABS(DISTINCT rt0.c0)  WHEN ((rt0.c2) IS FALSE) THEN ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c2)LIKE(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)LIKE(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c2)LIKE(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)LIKE(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c2)LIKE(rt0.c0)) AS INTEGER));
SELECT * FROM rt0 WHERE (((rt0.c1 IN (rt0.c2, rt0.c0)) IN ())) ORDER BY (((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN (rt0.c2, rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0))) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1 IN (rt0.c2, rt0.c0)) IN ())) ORDER BY (((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN (rt0.c2, rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0))) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1 IN (rt0.c2, rt0.c0)) IN ())) ORDER BY (((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((~ (((-8.85624707E8)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((-8.85624707E8)<<(rt0.c2))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((~ (((-8.85624707E8)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((-8.85624707E8)<<(rt0.c2))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((~ (((-8.85624707E8)<<(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE ((t1.c62 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c62 IN ())) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE ((t1.c62 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c62 IN ())) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE ((t1.c62 IN ()));
SELECT ALL * FROM t1 WHERE ('783839030' COLLATE NOCASE) ORDER BY (((~ (t1.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('783839030' COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((~ (t1.c2))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ('783839030' COLLATE NOCASE) ORDER BY (((~ (t1.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('783839030' COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((~ (t1.c2))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ('783839030' COLLATE NOCASE) ORDER BY (((~ (t1.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((- (t1.c0)))OR((+ (t1.c62)))))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((- (t1.c0)))OR((+ (t1.c62)))))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((- (t1.c0)))OR((+ (t1.c62)))))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((- (t1.c0)))OR((+ (t1.c62)))))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((- (t1.c0)))OR((+ (t1.c62)))))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)));
SELECT * FROM t1 WHERE ((((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c2))))IS(t1.c62))) ORDER BY ((((((('1571672412')) BETWEEN ((t1.c2)) AND ((t1.c62))))OR(((t1.c0)&(t1.c2)))))OR(((0Xffffffff861e68c9) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c2))))IS(t1.c62))) IS TRUE)  as count FROM t1 ORDER BY ((((((('1571672412')) BETWEEN ((t1.c2)) AND ((t1.c62))))OR(((t1.c0)&(t1.c2)))))OR(((0Xffffffff861e68c9) IS TRUE))));
SELECT * FROM t1 WHERE ((((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c2))))IS(t1.c62))) ORDER BY ((((((('1571672412')) BETWEEN ((t1.c2)) AND ((t1.c62))))OR(((t1.c0)&(t1.c2)))))OR(((0Xffffffff861e68c9) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c2))))IS(t1.c62))) IS TRUE)  as count FROM t1 ORDER BY ((((((('1571672412')) BETWEEN ((t1.c2)) AND ((t1.c62))))OR(((t1.c0)&(t1.c2)))))OR(((0Xffffffff861e68c9) IS TRUE))));
SELECT * FROM t1 WHERE ((((((t1.c2)) BETWEEN ((t1.c0)) AND ((t1.c2))))IS(t1.c62))) ORDER BY ((((((('1571672412')) BETWEEN ((t1.c2)) AND ((t1.c62))))OR(((t1.c0)&(t1.c2)))))OR(((0Xffffffff861e68c9) IS TRUE)));
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (((CAST(t1.c2 AS BLOB)) ISNULL)) ORDER BY (((t1.c2)) BETWEEN ((906041998)) AND ((((vt0.c0)+(rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY (((t1.c2)) BETWEEN ((906041998)) AND ((((vt0.c0)+(rt0.c2))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (((CAST(t1.c2 AS BLOB)) ISNULL)) ORDER BY (((t1.c2)) BETWEEN ((906041998)) AND ((((vt0.c0)+(rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY (((t1.c2)) BETWEEN ((906041998)) AND ((((vt0.c0)+(rt0.c2))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (((CAST(t1.c2 AS BLOB)) ISNULL)) ORDER BY (((t1.c2)) BETWEEN ((906041998)) AND ((((vt0.c0)+(rt0.c2))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN '-1347708519' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END  WHEN ((rt0.c2)<=(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN NULL ELSE rt0.c1 END END) ORDER BY ((((((((rt0.c2)AND(x'')))AND(((rt0.c2) IS TRUE))))AND(rt0.c2)))AND(((rt0.c1)*(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN '-1347708519' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END  WHEN ((rt0.c2)<=(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN NULL ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c2)AND(x'')))AND(((rt0.c2) IS TRUE))))AND(rt0.c2)))AND(((rt0.c1)*(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN '-1347708519' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END  WHEN ((rt0.c2)<=(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN NULL ELSE rt0.c1 END END) ORDER BY ((((((((rt0.c2)AND(x'')))AND(((rt0.c2) IS TRUE))))AND(rt0.c2)))AND(((rt0.c1)*(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN '-1347708519' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END  WHEN ((rt0.c2)<=(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN NULL ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c2)AND(x'')))AND(((rt0.c2) IS TRUE))))AND(rt0.c2)))AND(((rt0.c1)*(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN '-1347708519' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END  WHEN ((rt0.c2)<=(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c0 THEN NULL ELSE rt0.c1 END END) ORDER BY ((((((((rt0.c2)AND(x'')))AND(((rt0.c2) IS TRUE))))AND(rt0.c2)))AND(((rt0.c1)*(rt0.c2)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((CAST(t1.c2 AS TEXT)) IS TRUE)) ORDER BY ((LOWER(1.775768993E9))|((((t1.c0))<=((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((LOWER(1.775768993E9))|((((t1.c0))<=((vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((CAST(t1.c2 AS TEXT)) IS TRUE)) ORDER BY ((LOWER(1.775768993E9))|((((t1.c0))<=((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((LOWER(1.775768993E9))|((((t1.c0))<=((vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((CAST(t1.c2 AS TEXT)) IS TRUE)) ORDER BY ((LOWER(1.775768993E9))|((((t1.c0))<=((vt0.c0))))) DESC;
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON json_object(((t1.c2) ISNULL), (NULL IN (t1.c0))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON json_object(((t1.c2) ISNULL), (NULL IN (t1.c0))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON json_object(((t1.c2) ISNULL), (NULL IN (t1.c0))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON json_object(((t1.c2) ISNULL), (NULL IN (t1.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((NULL)OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((~ (vt0.c0))))==((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))  NULLS FIRST, (((vt0.c0 IN (vt0.c0)))+(((vt0.c0)<('w<}5f')))) ASC  NULLS LAST, CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS LAST, ((((vt0.c0) IS FALSE)) ISNULL);
SELECT SUM(count) FROM (SELECT ((((NULL)OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c0))))==((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))  NULLS FIRST, (((vt0.c0 IN (vt0.c0)))+(((vt0.c0)<('w<}5f')))) ASC  NULLS LAST, CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS LAST, ((((vt0.c0) IS FALSE)) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (((NULL)OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((~ (vt0.c0))))==((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))  NULLS FIRST, (((vt0.c0 IN (vt0.c0)))+(((vt0.c0)<('w<}5f')))) ASC  NULLS LAST, CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS LAST, ((((vt0.c0) IS FALSE)) ISNULL);
SELECT SUM(count) FROM (SELECT ((((NULL)OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c0))))==((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))  NULLS FIRST, (((vt0.c0 IN (vt0.c0)))+(((vt0.c0)<('w<}5f')))) ASC  NULLS LAST, CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS LAST, ((((vt0.c0) IS FALSE)) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (((NULL)OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((~ (vt0.c0))))==((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))  NULLS FIRST, (((vt0.c0 IN (vt0.c0)))+(((vt0.c0)<('w<}5f')))) ASC  NULLS LAST, CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS LAST, ((((vt0.c0) IS FALSE)) ISNULL);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((((vt0.c0) IS TRUE), ((t1.c2) IS FALSE), (0.3335266499246592 IN ())))<(((~ (t1.c2)), t1.c62, ((vt0.c0) NOTNULL)))) WHERE (CASE WHEN CAST(t1.c62 AS REAL) THEN CASE t1.c2  WHEN t1.c2 THEN vt0.c0 END END) ORDER BY (NOT (t1.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t1.c62 AS REAL) THEN CASE t1.c2  WHEN t1.c2 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (((((vt0.c0) IS TRUE), ((t1.c2) IS FALSE), (0.3335266499246592 IN ())))<(((~ (t1.c2)), t1.c62, ((vt0.c0) NOTNULL)))) ORDER BY (NOT (t1.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((((vt0.c0) IS TRUE), ((t1.c2) IS FALSE), (0.3335266499246592 IN ())))<(((~ (t1.c2)), t1.c62, ((vt0.c0) NOTNULL)))) WHERE (CASE WHEN CAST(t1.c62 AS REAL) THEN CASE t1.c2  WHEN t1.c2 THEN vt0.c0 END END) ORDER BY (NOT (t1.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t1.c62 AS REAL) THEN CASE t1.c2  WHEN t1.c2 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (((((vt0.c0) IS TRUE), ((t1.c2) IS FALSE), (0.3335266499246592 IN ())))<(((~ (t1.c2)), t1.c62, ((vt0.c0) NOTNULL)))) ORDER BY (NOT (t1.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((((vt0.c0) IS TRUE), ((t1.c2) IS FALSE), (0.3335266499246592 IN ())))<(((~ (t1.c2)), t1.c62, ((vt0.c0) NOTNULL)))) WHERE (CASE WHEN CAST(t1.c62 AS REAL) THEN CASE t1.c2  WHEN t1.c2 THEN vt0.c0 END END) ORDER BY (NOT (t1.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE ((((t1.c0 IN ()))<>(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ()))<>(rt0.c0))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((((t1.c0 IN ()))<>(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ()))<>(rt0.c0))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((((t1.c0 IN ()))<>(rt0.c0)));
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c1))) ORDER BY (((((- (rt0.c0)))OR(SQLITE_VERSION())))OR((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (((((- (rt0.c0)))OR(SQLITE_VERSION())))OR((rt0.c0 IN ()))));
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c1))) ORDER BY (((((- (rt0.c0)))OR(SQLITE_VERSION())))OR((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (((((- (rt0.c0)))OR(SQLITE_VERSION())))OR((rt0.c0 IN ()))));
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c1))) ORDER BY (((((- (rt0.c0)))OR(SQLITE_VERSION())))OR((rt0.c0 IN ())));
SELECT * FROM vt0, rt0 WHERE (((((0.9699949300316527 COLLATE BINARY)OR(CAST('-887115497' AS BLOB))))OR(((vt0.c0)%(rt0.c2))))) ORDER BY CASE ((rt0.c2)+(rt0.c2))  WHEN (((NULL))<((rt0.c0))) THEN (+ (vt0.c0)) WHEN (- (rt0.c1)) THEN (((('Fn(J')AND(rt0.c0)))OR(rt0.c0)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 END ASC  NULLS FIRST, ((CASE rt0.c2  WHEN vt0.c0 THEN x'f064' ELSE vt0.c0 END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.9699949300316527 COLLATE BINARY)OR(CAST('-887115497' AS BLOB))))OR(((vt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((rt0.c2)+(rt0.c2))  WHEN (((NULL))<((rt0.c0))) THEN (+ (vt0.c0)) WHEN (- (rt0.c1)) THEN (((('Fn(J')AND(rt0.c0)))OR(rt0.c0)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 END ASC  NULLS FIRST, ((CASE rt0.c2  WHEN vt0.c0 THEN x'f064' ELSE vt0.c0 END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((0.9699949300316527 COLLATE BINARY)OR(CAST('-887115497' AS BLOB))))OR(((vt0.c0)%(rt0.c2))))) ORDER BY CASE ((rt0.c2)+(rt0.c2))  WHEN (((NULL))<((rt0.c0))) THEN (+ (vt0.c0)) WHEN (- (rt0.c1)) THEN (((('Fn(J')AND(rt0.c0)))OR(rt0.c0)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 END ASC  NULLS FIRST, ((CASE rt0.c2  WHEN vt0.c0 THEN x'f064' ELSE vt0.c0 END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.9699949300316527 COLLATE BINARY)OR(CAST('-887115497' AS BLOB))))OR(((vt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((rt0.c2)+(rt0.c2))  WHEN (((NULL))<((rt0.c0))) THEN (+ (vt0.c0)) WHEN (- (rt0.c1)) THEN (((('Fn(J')AND(rt0.c0)))OR(rt0.c0)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 END ASC  NULLS FIRST, ((CASE rt0.c2  WHEN vt0.c0 THEN x'f064' ELSE vt0.c0 END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((0.9699949300316527 COLLATE BINARY)OR(CAST('-887115497' AS BLOB))))OR(((vt0.c0)%(rt0.c2))))) ORDER BY CASE ((rt0.c2)+(rt0.c2))  WHEN (((NULL))<((rt0.c0))) THEN (+ (vt0.c0)) WHEN (- (rt0.c1)) THEN (((('Fn(J')AND(rt0.c0)))OR(rt0.c0)) WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 END ASC  NULLS FIRST, ((CASE rt0.c2  WHEN vt0.c0 THEN x'f064' ELSE vt0.c0 END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM rt0, t1, vt0 WHERE (UPPER(DISTINCT (- (t1.c62)))) ORDER BY (('Q]X') NOTNULL), ((TYPEOF(t1.c2))AND(((vt0.c0)OR(t1.c2)))) DESC, (((rt0.c2 IN ())) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (- (t1.c62)))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY (('Q]X') NOTNULL), ((TYPEOF(t1.c2))AND(((vt0.c0)OR(t1.c2)))) DESC, (((rt0.c2 IN ())) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0, t1, vt0 WHERE (UPPER(DISTINCT (- (t1.c62)))) ORDER BY (('Q]X') NOTNULL), ((TYPEOF(t1.c2))AND(((vt0.c0)OR(t1.c2)))) DESC, (((rt0.c2 IN ())) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (- (t1.c62)))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY (('Q]X') NOTNULL), ((TYPEOF(t1.c2))AND(((vt0.c0)OR(t1.c2)))) DESC, (((rt0.c2 IN ())) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0, t1, vt0 WHERE (UPPER(DISTINCT (- (t1.c62)))) ORDER BY (('Q]X') NOTNULL), ((TYPEOF(t1.c2))AND(((vt0.c0)OR(t1.c2)))) DESC, (((rt0.c2 IN ())) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((t1.c2 COLLATE BINARY)<((rt0.c2 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2 COLLATE BINARY)<((rt0.c2 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((t1.c2 COLLATE BINARY)<((rt0.c2 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2 COLLATE BINARY)<((rt0.c2 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((t1.c2 COLLATE BINARY)<((rt0.c2 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((- ((+ (x''))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c0 END) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((+ (x''))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c2 THEN t1.c0 END) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((- ((+ (x''))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c0 END) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((+ (x''))))) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c2 THEN t1.c0 END) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((- ((+ (x''))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c0 END) ISNULL) DESC  NULLS FIRST;
SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON 0.8659759650216164 RIGHT OUTER JOIN vt0 ON NULL WHERE (((((rt0.c1)AND(vt0.c0))) IS TRUE)) ORDER BY (NOT ((- (rt0.c0))))  NULLS LAST, t1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON 0.8659759650216164 RIGHT OUTER JOIN vt0 ON NULL ORDER BY (NOT ((- (rt0.c0))))  NULLS LAST, t1.c0 DESC  NULLS LAST);
SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON 0.8659759650216164 RIGHT OUTER JOIN vt0 ON NULL WHERE (((((rt0.c1)AND(vt0.c0))) IS TRUE)) ORDER BY (NOT ((- (rt0.c0))))  NULLS LAST, t1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON 0.8659759650216164 RIGHT OUTER JOIN vt0 ON NULL ORDER BY (NOT ((- (rt0.c0))))  NULLS LAST, t1.c0 DESC  NULLS LAST);
SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON 0.8659759650216164 RIGHT OUTER JOIN vt0 ON NULL WHERE (((((rt0.c1)AND(vt0.c0))) IS TRUE)) ORDER BY (NOT ((- (rt0.c0))))  NULLS LAST, t1.c0 DESC  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED, t1 WHERE (((((((((((((((rt0.c0)AND(rt0.c1)))AND(0.9536714763100418)))AND(rt0.c1)))OR(t1.c0)))AND(rt0.c1)))OR(t1.c2))) BETWEEN (((((t1.c0)AND(rt0.c0)))OR(t1.c0))) AND ((('0.14901954200597234')LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0)AND(rt0.c1)))AND(0.9536714763100418)))AND(rt0.c1)))OR(t1.c0)))AND(rt0.c1)))OR(t1.c2))) BETWEEN (((((t1.c0)AND(rt0.c0)))OR(t1.c0))) AND ((('0.14901954200597234')LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0 NOT INDEXED, t1 WHERE (((((((((((((((rt0.c0)AND(rt0.c1)))AND(0.9536714763100418)))AND(rt0.c1)))OR(t1.c0)))AND(rt0.c1)))OR(t1.c2))) BETWEEN (((((t1.c0)AND(rt0.c0)))OR(t1.c0))) AND ((('0.14901954200597234')LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0)AND(rt0.c1)))AND(0.9536714763100418)))AND(rt0.c1)))OR(t1.c0)))AND(rt0.c1)))OR(t1.c2))) BETWEEN (((((t1.c0)AND(rt0.c0)))OR(t1.c0))) AND ((('0.14901954200597234')LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0 NOT INDEXED, t1 WHERE (((((((((((((((rt0.c0)AND(rt0.c1)))AND(0.9536714763100418)))AND(rt0.c1)))OR(t1.c0)))AND(rt0.c1)))OR(t1.c2))) BETWEEN (((((t1.c0)AND(rt0.c0)))OR(t1.c0))) AND ((('0.14901954200597234')LIKE(rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN ((- (rt0.c1))) AND ((- ('2117028284'))))) ORDER BY ((((rt0.c2) NOT NULL))IS NOT((((rt0.c0))<((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN ((- (rt0.c1))) AND ((- ('2117028284'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) NOT NULL))IS NOT((((rt0.c0))<((rt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN ((- (rt0.c1))) AND ((- ('2117028284'))))) ORDER BY ((((rt0.c2) NOT NULL))IS NOT((((rt0.c0))<((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN ((- (rt0.c1))) AND ((- ('2117028284'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) NOT NULL))IS NOT((((rt0.c0))<((rt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN ((- (rt0.c1))) AND ((- ('2117028284'))))) ORDER BY ((((rt0.c2) NOT NULL))IS NOT((((rt0.c0))<((rt0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (CASE WHEN TRIM(t1.c62, t1.c2) THEN ((rt0.c0)IS NOT(0.2140987303155265)) WHEN ((rt0.c2) NOT BETWEEN (t1.c62) AND (rt0.c1)) THEN rt0.c0 WHEN (NOT (t1.c2)) THEN (rt0.c1 IN ()) END) ORDER BY CAST((t1.c0 IN ()) AS TEXT)  NULLS LAST, CAST((t1.c2 IN ()) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(t1.c62, t1.c2) THEN ((rt0.c0)IS NOT(0.2140987303155265)) WHEN ((rt0.c2) NOT BETWEEN (t1.c62) AND (rt0.c1)) THEN rt0.c0 WHEN (NOT (t1.c2)) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST((t1.c0 IN ()) AS TEXT)  NULLS LAST, CAST((t1.c2 IN ()) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (CASE WHEN TRIM(t1.c62, t1.c2) THEN ((rt0.c0)IS NOT(0.2140987303155265)) WHEN ((rt0.c2) NOT BETWEEN (t1.c62) AND (rt0.c1)) THEN rt0.c0 WHEN (NOT (t1.c2)) THEN (rt0.c1 IN ()) END) ORDER BY CAST((t1.c0 IN ()) AS TEXT)  NULLS LAST, CAST((t1.c2 IN ()) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(t1.c62, t1.c2) THEN ((rt0.c0)IS NOT(0.2140987303155265)) WHEN ((rt0.c2) NOT BETWEEN (t1.c62) AND (rt0.c1)) THEN rt0.c0 WHEN (NOT (t1.c2)) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST((t1.c0 IN ()) AS TEXT)  NULLS LAST, CAST((t1.c2 IN ()) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (CASE WHEN TRIM(t1.c62, t1.c2) THEN ((rt0.c0)IS NOT(0.2140987303155265)) WHEN ((rt0.c2) NOT BETWEEN (t1.c62) AND (rt0.c1)) THEN rt0.c0 WHEN (NOT (t1.c2)) THEN (rt0.c1 IN ()) END) ORDER BY CAST((t1.c0 IN ()) AS TEXT)  NULLS LAST, CAST((t1.c2 IN ()) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c62) ORDER BY ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)) COLLATE BINARY ASC, t1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c62) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)) COLLATE BINARY ASC, t1.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c62) ORDER BY ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)) COLLATE BINARY ASC, t1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c62) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)) COLLATE BINARY ASC, t1.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c62) ORDER BY ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)) COLLATE BINARY ASC, t1.c2  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (STRFTIME((rt0.c2 IN ()), (vt0.c0 IN ()), ((rt0.c2)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((STRFTIME((rt0.c2 IN ()), (vt0.c0 IN ()), ((rt0.c2)AND(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (STRFTIME((rt0.c2 IN ()), (vt0.c0 IN ()), ((rt0.c2)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((STRFTIME((rt0.c2 IN ()), (vt0.c0 IN ()), ((rt0.c2)AND(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (STRFTIME((rt0.c2 IN ()), (vt0.c0 IN ()), ((rt0.c2)AND(vt0.c0))));
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (CAST(rt0.c0 AS REAL))));
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((((((-1637051905, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c1, t1.c62, rt0.c2)) AND (('1207706361', t1.c2, rt0.c2)))) IS TRUE)) ORDER BY ((((x'b25e')GLOB(t1.c2)))*(((((rt0.c2)AND(rt0.c1)))OR(t1.c2)))), (((((rt0.c0) IS TRUE)))>((((((vt0.c0)OR(NULL)))AND(rt0.c1))))) ASC  NULLS FIRST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((-1637051905, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c1, t1.c62, rt0.c2)) AND (('1207706361', t1.c2, rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((((x'b25e')GLOB(t1.c2)))*(((((rt0.c2)AND(rt0.c1)))OR(t1.c2)))), (((((rt0.c0) IS TRUE)))>((((((vt0.c0)OR(NULL)))AND(rt0.c1))))) ASC  NULLS FIRST, rt0.c1 ASC);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((((((-1637051905, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c1, t1.c62, rt0.c2)) AND (('1207706361', t1.c2, rt0.c2)))) IS TRUE)) ORDER BY ((((x'b25e')GLOB(t1.c2)))*(((((rt0.c2)AND(rt0.c1)))OR(t1.c2)))), (((((rt0.c0) IS TRUE)))>((((((vt0.c0)OR(NULL)))AND(rt0.c1))))) ASC  NULLS FIRST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((-1637051905, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c1, t1.c62, rt0.c2)) AND (('1207706361', t1.c2, rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((((x'b25e')GLOB(t1.c2)))*(((((rt0.c2)AND(rt0.c1)))OR(t1.c2)))), (((((rt0.c0) IS TRUE)))>((((((vt0.c0)OR(NULL)))AND(rt0.c1))))) ASC  NULLS FIRST, rt0.c1 ASC);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((((((-1637051905, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c1, t1.c62, rt0.c2)) AND (('1207706361', t1.c2, rt0.c2)))) IS TRUE)) ORDER BY ((((x'b25e')GLOB(t1.c2)))*(((((rt0.c2)AND(rt0.c1)))OR(t1.c2)))), (((((rt0.c0) IS TRUE)))>((((((vt0.c0)OR(NULL)))AND(rt0.c1))))) ASC  NULLS FIRST, rt0.c1 ASC;
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (((t1.c2)-(((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2)-(((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c0))))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (((t1.c2)-(((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2)-(((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c0))))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (((t1.c2)-(((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((NULL) IS FALSE) WHERE ('294143116') ORDER BY ((((rt0.c0) NOTNULL))<=(LOWER(rt0.c2)))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((x'9d56')) AND ((((vt0.c0) ISNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('294143116') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((NULL) IS FALSE) ORDER BY ((((rt0.c0) NOTNULL))<=(LOWER(rt0.c2)))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((x'9d56')) AND ((((vt0.c0) ISNULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((NULL) IS FALSE) WHERE ('294143116') ORDER BY ((((rt0.c0) NOTNULL))<=(LOWER(rt0.c2)))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((x'9d56')) AND ((((vt0.c0) ISNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('294143116') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((NULL) IS FALSE) ORDER BY ((((rt0.c0) NOTNULL))<=(LOWER(rt0.c2)))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((x'9d56')) AND ((((vt0.c0) ISNULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((NULL) IS FALSE) WHERE ('294143116') ORDER BY ((((rt0.c0) NOTNULL))<=(LOWER(rt0.c2)))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((x'9d56')) AND ((((vt0.c0) ISNULL)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((0.6880176243019513)*(t1.c62)) COLLATE NOCASE) ORDER BY ((((t1.c62) NOT NULL))|((- (t1.c62))))  NULLS LAST, CASE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('Sf')))  WHEN ((((t1.c62)AND(t1.c2)))AND(x'')) THEN ((t1.c0)<(t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c62 END THEN '827770681' WHEN ((t1.c2)OR(t1.c62)) THEN UPPER(DISTINCT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6880176243019513)*(t1.c62)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c62) NOT NULL))|((- (t1.c62))))  NULLS LAST, CASE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('Sf')))  WHEN ((((t1.c62)AND(t1.c2)))AND(x'')) THEN ((t1.c0)<(t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c62 END THEN '827770681' WHEN ((t1.c2)OR(t1.c62)) THEN UPPER(DISTINCT NULL) END  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((0.6880176243019513)*(t1.c62)) COLLATE NOCASE) ORDER BY ((((t1.c62) NOT NULL))|((- (t1.c62))))  NULLS LAST, CASE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('Sf')))  WHEN ((((t1.c62)AND(t1.c2)))AND(x'')) THEN ((t1.c0)<(t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c62 END THEN '827770681' WHEN ((t1.c2)OR(t1.c62)) THEN UPPER(DISTINCT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6880176243019513)*(t1.c62)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c62) NOT NULL))|((- (t1.c62))))  NULLS LAST, CASE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('Sf')))  WHEN ((((t1.c62)AND(t1.c2)))AND(x'')) THEN ((t1.c0)<(t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c62 END THEN '827770681' WHEN ((t1.c2)OR(t1.c62)) THEN UPPER(DISTINCT NULL) END  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((0.6880176243019513)*(t1.c62)) COLLATE NOCASE) ORDER BY ((((t1.c62) NOT NULL))|((- (t1.c62))))  NULLS LAST, CASE (((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('Sf')))  WHEN ((((t1.c62)AND(t1.c2)))AND(x'')) THEN ((t1.c0)<(t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c62 END THEN '827770681' WHEN ((t1.c2)OR(t1.c62)) THEN UPPER(DISTINCT NULL) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (((((~ (t1.c0))))==((CAST(t1.c2 AS REAL))))) ORDER BY CAST(rt0.c1 AS TEXT) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((~ (t1.c0))))=((CAST(t1.c2 AS REAL))))) IS TRUE)  as count FROM t1 NATURAL JOIN rt0 ORDER BY CAST(rt0.c1 AS TEXT) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (((((~ (t1.c0))))==((CAST(t1.c2 AS REAL))))) ORDER BY CAST(rt0.c1 AS TEXT) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((~ (t1.c0))))=((CAST(t1.c2 AS REAL))))) IS TRUE)  as count FROM t1 NATURAL JOIN rt0 ORDER BY CAST(rt0.c1 AS TEXT) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (((((~ (t1.c0))))==((CAST(t1.c2 AS REAL))))) ORDER BY CAST(rt0.c1 AS TEXT) COLLATE BINARY;
SELECT * FROM rt0, t1 WHERE ((((t1.c62)) NOT BETWEEN ((((rt0.c2)-(rt0.c0)))) AND ((CAST(rt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c62)) NOT BETWEEN ((((rt0.c2)-(rt0.c0)))) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((((t1.c62)) NOT BETWEEN ((((rt0.c2)-(rt0.c0)))) AND ((CAST(rt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c62)) NOT BETWEEN ((((rt0.c2)-(rt0.c0)))) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((((t1.c62)) NOT BETWEEN ((((rt0.c2)-(rt0.c0)))) AND ((CAST(rt0.c1 AS TEXT)))));
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c0) NOT BETWEEN (t1.c62) AND (t1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (t1.c62) AND (t1.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c0) NOT BETWEEN (t1.c62) AND (t1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (t1.c62) AND (t1.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c0) NOT BETWEEN (t1.c62) AND (t1.c2))) NOT NULL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON (CASE rt0.c2  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c1 END IN (((rt0.c2)IS NOT(t1.c62)), ((t1.c62) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) FULL OUTER JOIN rt0 ON ((((((rt0.c0)OR(t1.c0)))AND(vt0.c0))) NOT NULL) WHERE ((- (((t1.c62) NOT BETWEEN (vt0.c0) AND (t1.c2))))) ORDER BY rt0.c1 ASC, SUBSTR('10286141', (- (rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c62) NOT BETWEEN (vt0.c0) AND (t1.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON (CASE rt0.c2  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c1 END IN (((rt0.c2)IS NOT(t1.c62)), ((t1.c62) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) FULL OUTER JOIN rt0 ON ((((((rt0.c0)OR(t1.c0)))AND(vt0.c0))) NOT NULL) ORDER BY rt0.c1 ASC, SUBSTR('10286141', (- (rt0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON (CASE rt0.c2  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c1 END IN (((rt0.c2)IS NOT(t1.c62)), ((t1.c62) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) FULL OUTER JOIN rt0 ON ((((((rt0.c0)OR(t1.c0)))AND(vt0.c0))) NOT NULL) WHERE ((- (((t1.c62) NOT BETWEEN (vt0.c0) AND (t1.c2))))) ORDER BY rt0.c1 ASC, SUBSTR('10286141', (- (rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c62) NOT BETWEEN (vt0.c0) AND (t1.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON (CASE rt0.c2  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c1 END IN (((rt0.c2)IS NOT(t1.c62)), ((t1.c62) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) FULL OUTER JOIN rt0 ON ((((((rt0.c0)OR(t1.c0)))AND(vt0.c0))) NOT NULL) ORDER BY rt0.c1 ASC, SUBSTR('10286141', (- (rt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(0.8570423317875535 AS INTEGER)) ORDER BY ((TRIM(DISTINCT '2004226124', x''))&(0.7382870164969898 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.8570423317875535 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((TRIM(DISTINCT '2004226124', x''))&(0.7382870164969898 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(0.8570423317875535 AS INTEGER)) ORDER BY ((TRIM(DISTINCT '2004226124', x''))&(0.7382870164969898 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.8570423317875535 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((TRIM(DISTINCT '2004226124', x''))&(0.7382870164969898 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(0.8570423317875535 AS INTEGER)) ORDER BY ((TRIM(DISTINCT '2004226124', x''))&(0.7382870164969898 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE ((((t1.c0) IS TRUE) IN (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) IS TRUE) IN (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((t1.c0) IS TRUE) IN (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) IS TRUE) IN (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((t1.c0) IS TRUE) IN (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON ((CASE WHEN rt0.c2 THEN t1.c62 ELSE rt0.c0 END)-(x'')) WHERE (((((((t1.c62)AND(rt0.c1)))OR(t1.c62)))/(SUBSTR(rt0.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c62)AND(rt0.c1)))OR(t1.c62)))/(SUBSTR(rt0.c0, t1.c0)))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((CASE WHEN rt0.c2 THEN t1.c62 ELSE rt0.c0 END)-(x'')));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON ((CASE WHEN rt0.c2 THEN t1.c62 ELSE rt0.c0 END)-(x'')) WHERE (((((((t1.c62)AND(rt0.c1)))OR(t1.c62)))/(SUBSTR(rt0.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c62)AND(rt0.c1)))OR(t1.c62)))/(SUBSTR(rt0.c0, t1.c0)))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((CASE WHEN rt0.c2 THEN t1.c62 ELSE rt0.c0 END)-(x'')));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON ((CASE WHEN rt0.c2 THEN t1.c62 ELSE rt0.c0 END)-(x'')) WHERE (((((((t1.c62)AND(rt0.c1)))OR(t1.c62)))/(SUBSTR(rt0.c0, t1.c0))));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c62)) NOT BETWEEN ((((NULL) BETWEEN (t1.c0) AND (t1.c62)))) AND ((CAST(t1.c2 AS REAL))))) ORDER BY ((HEX(x'c4c6')) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c62)) NOT BETWEEN ((((NULL) BETWEEN (t1.c0) AND (t1.c62)))) AND ((CAST(t1.c2 AS REAL))))) IS TRUE)  as count FROM t1 ORDER BY ((HEX(x'c4c6')) NOT NULL) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c62)) NOT BETWEEN ((((NULL) BETWEEN (t1.c0) AND (t1.c62)))) AND ((CAST(t1.c2 AS REAL))))) ORDER BY ((HEX(x'c4c6')) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c62)) NOT BETWEEN ((((NULL) BETWEEN (t1.c0) AND (t1.c62)))) AND ((CAST(t1.c2 AS REAL))))) IS TRUE)  as count FROM t1 ORDER BY ((HEX(x'c4c6')) NOT NULL) DESC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c62)) NOT BETWEEN ((((NULL) BETWEEN (t1.c0) AND (t1.c62)))) AND ((CAST(t1.c2 AS REAL))))) ORDER BY ((HEX(x'c4c6')) NOT NULL) DESC;
SELECT COUNT(*) FROM t1 NOT INDEXED, vt0 INNER JOIN rt0 ON ((((rt0.c0)IS NOT(rt0.c0))) BETWEEN ((- (vt0.c0))) AND (((t1.c2)>>(rt0.c2)))) WHERE (CAST(((rt0.c2) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) ISNULL) AS REAL)) IS TRUE)  as count FROM t1, vt0 INNER JOIN rt0 ON ((((rt0.c0)IS NOT(rt0.c0))) BETWEEN ((- (vt0.c0))) AND (((t1.c2)>>(rt0.c2)))));
SELECT COUNT(*) FROM t1 NOT INDEXED, vt0 INNER JOIN rt0 ON ((((rt0.c0)IS NOT(rt0.c0))) BETWEEN ((- (vt0.c0))) AND (((t1.c2)>>(rt0.c2)))) WHERE (CAST(((rt0.c2) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) ISNULL) AS REAL)) IS TRUE)  as count FROM t1, vt0 INNER JOIN rt0 ON ((((rt0.c0)IS NOT(rt0.c0))) BETWEEN ((- (vt0.c0))) AND (((t1.c2)>>(rt0.c2)))));
SELECT COUNT(*) FROM t1 NOT INDEXED, vt0 INNER JOIN rt0 ON ((((rt0.c0)IS NOT(rt0.c0))) BETWEEN ((- (vt0.c0))) AND (((t1.c2)>>(rt0.c2)))) WHERE (CAST(((rt0.c2) ISNULL) AS REAL));
SELECT * FROM t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (t1.c62) AND ((x'' IN (t1.c0))))) ORDER BY (- (t1.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (t1.c62) AND ((x'' IN (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (- (t1.c2 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (t1.c62) AND ((x'' IN (t1.c0))))) ORDER BY (- (t1.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (t1.c62) AND ((x'' IN (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (- (t1.c2 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (t1.c62) AND ((x'' IN (t1.c0))))) ORDER BY (- (t1.c2 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 COLLATE BINARY THEN CHANGES() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 COLLATE BINARY THEN CHANGES() END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 COLLATE BINARY THEN CHANGES() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 COLLATE BINARY THEN CHANGES() END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 COLLATE BINARY THEN CHANGES() END);
SELECT ALL * FROM t1, vt0, rt0 WHERE (((((t1.c0) IS TRUE)) NOT BETWEEN (((t1.c0)>>(vt0.c0))) AND (((((((((rt0.c0)OR(t1.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(-1790901953))))) ORDER BY CAST(((t1.c0)IS(t1.c2)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) IS TRUE)) NOT BETWEEN (((t1.c0)>>(vt0.c0))) AND (((((((((rt0.c0)OR(t1.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(-1790901953))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY CAST(((t1.c0)IS(t1.c2)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM t1, vt0, rt0 WHERE (((((t1.c0) IS TRUE)) NOT BETWEEN (((t1.c0)>>(vt0.c0))) AND (((((((((rt0.c0)OR(t1.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(-1790901953))))) ORDER BY CAST(((t1.c0)IS(t1.c2)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) IS TRUE)) NOT BETWEEN (((t1.c0)>>(vt0.c0))) AND (((((((((rt0.c0)OR(t1.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(-1790901953))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY CAST(((t1.c0)IS(t1.c2)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM t1, vt0, rt0 WHERE (((((t1.c0) IS TRUE)) NOT BETWEEN (((t1.c0)>>(vt0.c0))) AND (((((((((rt0.c0)OR(t1.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(-1790901953))))) ORDER BY CAST(((t1.c0)IS(t1.c2)) AS TEXT) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (TRIM(DISTINCT IFNULL(DISTINCT rt0.c0, rt0.c2), rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT IFNULL(DISTINCT rt0.c0, rt0.c2), rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (TRIM(DISTINCT IFNULL(DISTINCT rt0.c0, rt0.c2), rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT IFNULL(DISTINCT rt0.c0, rt0.c2), rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (TRIM(DISTINCT IFNULL(DISTINCT rt0.c0, rt0.c2), rt0.c0 COLLATE RTRIM));
SELECT * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY NULLIF((((rt0.c1))==(('1448424657'))), INSTR(rt0.c1, vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULLIF((((rt0.c1))=(('1448424657'))), INSTR(rt0.c1, vt0.c0)) ASC);
SELECT * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY NULLIF((((rt0.c1))==(('1448424657'))), INSTR(rt0.c1, vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULLIF((((rt0.c1))=(('1448424657'))), INSTR(rt0.c1, vt0.c0)) ASC);
SELECT * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY NULLIF((((rt0.c1))==(('1448424657'))), INSTR(rt0.c1, vt0.c0)) ASC;
SELECT COUNT(*) FROM t1, rt0 WHERE ((t1.c62 IN (((-1504787158) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY 0.507319498578402 DESC  NULLS FIRST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t1.c62 IN (((-1504787158) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY 0.507319498578402 DESC  NULLS FIRST, x''  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE ((t1.c62 IN (((-1504787158) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY 0.507319498578402 DESC  NULLS FIRST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t1.c62 IN (((-1504787158) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY 0.507319498578402 DESC  NULLS FIRST, x''  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE ((t1.c62 IN (((-1504787158) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY 0.507319498578402 DESC  NULLS FIRST, x''  NULLS LAST;
SELECT * FROM t1 WHERE (x'') ORDER BY t1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 ORDER BY t1.c2  NULLS FIRST);
SELECT * FROM t1 WHERE (x'') ORDER BY t1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 ORDER BY t1.c2  NULLS FIRST);
SELECT * FROM t1 WHERE (x'') ORDER BY t1.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((~ (t1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (t1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((~ (t1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (t1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((~ (t1.c2)) COLLATE RTRIM);
SELECT * FROM rt0 CROSS JOIN t1 ON (~ (((vt0.c0) IS FALSE))) FULL OUTER JOIN vt0 ON ((((t1.c62) NOT NULL)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.44345173147526906)))) AND (((((t1.c0)AND(rt0.c2)))OR(t1.c62)))) WHERE (((vt0.c0)%(t1.c62)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)%(t1.c62)) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (~ (((vt0.c0) IS FALSE))) FULL OUTER JOIN vt0 ON ((((t1.c62) NOT NULL)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.44345173147526906)))) AND (((((t1.c0)AND(rt0.c2)))OR(t1.c62)))));
SELECT * FROM rt0 CROSS JOIN t1 ON (~ (((vt0.c0) IS FALSE))) FULL OUTER JOIN vt0 ON ((((t1.c62) NOT NULL)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.44345173147526906)))) AND (((((t1.c0)AND(rt0.c2)))OR(t1.c62)))) WHERE (((vt0.c0)%(t1.c62)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)%(t1.c62)) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (~ (((vt0.c0) IS FALSE))) FULL OUTER JOIN vt0 ON ((((t1.c62) NOT NULL)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.44345173147526906)))) AND (((((t1.c0)AND(rt0.c2)))OR(t1.c62)))));
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((rt0.c2 IN ()))*(((t1.c62)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))*(((t1.c62)%(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((rt0.c2 IN ()))*(((t1.c62)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))*(((t1.c62)%(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((rt0.c2 IN ()))*(((t1.c62)%(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((NULL) IS TRUE) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((NULL) IS TRUE) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((NULL) IS TRUE) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((NULL) IS TRUE) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((NULL) IS TRUE) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT '', CASE WHEN vt0.c0 THEN rt0.c1 END) WHERE (IFNULL(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))), highlight(rt0.c1, rt0.c1, vt0.c0, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))), highlight(rt0.c1, rt0.c1, vt0.c0, rt0.c2))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT '', CASE WHEN vt0.c0 THEN rt0.c1 END));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT '', CASE WHEN vt0.c0 THEN rt0.c1 END) WHERE (IFNULL(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))), highlight(rt0.c1, rt0.c1, vt0.c0, rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))), highlight(rt0.c1, rt0.c1, vt0.c0, rt0.c2))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT '', CASE WHEN vt0.c0 THEN rt0.c1 END));
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'e339' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'e339' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'e339' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'e339' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'e339' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((CAST('-1449442281' AS NUMERIC))>=(CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END))) ORDER BY (((rt0.c2, 0.21461895661773256, rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), (~ (rt0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((vt0.c0, vt0.c0 COLLATE NOCASE, RTRIM(vt0.c0)))) ASC  NULLS FIRST, 0.7554498068425572  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST('-1449442281' AS NUMERIC))>=(CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2, 0.21461895661773256, rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), (~ (rt0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((vt0.c0, vt0.c0 COLLATE NOCASE, RTRIM(vt0.c0)))) ASC  NULLS FIRST, 0.7554498068425572  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST('-1449442281' AS NUMERIC))>=(CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END))) ORDER BY (((rt0.c2, 0.21461895661773256, rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), (~ (rt0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((vt0.c0, vt0.c0 COLLATE NOCASE, RTRIM(vt0.c0)))) ASC  NULLS FIRST, 0.7554498068425572  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST('-1449442281' AS NUMERIC))>=(CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2, 0.21461895661773256, rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), (~ (rt0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((vt0.c0, vt0.c0 COLLATE NOCASE, RTRIM(vt0.c0)))) ASC  NULLS FIRST, 0.7554498068425572  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST('-1449442281' AS NUMERIC))>=(CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END))) ORDER BY (((rt0.c2, 0.21461895661773256, rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)), (~ (rt0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((vt0.c0, vt0.c0 COLLATE NOCASE, RTRIM(vt0.c0)))) ASC  NULLS FIRST, 0.7554498068425572  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (CAST(t1.c0 COLLATE RTRIM AS BLOB)) ORDER BY (((t1.c2 IN ()))<=((- (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY (((t1.c2 IN ()))<=((- (vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (CAST(t1.c0 COLLATE RTRIM AS BLOB)) ORDER BY (((t1.c2 IN ()))<=((- (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY (((t1.c2 IN ()))<=((- (vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (CAST(t1.c0 COLLATE RTRIM AS BLOB)) ORDER BY (((t1.c2 IN ()))<=((- (vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0 FULL OUTER JOIN t1 ON (vt0.c0 IN (t1.c0)) COLLATE RTRIM WHERE (LIKELY(((t1.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t1.c2) IS FALSE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (vt0.c0 IN (t1.c0)) COLLATE RTRIM);
SELECT * FROM vt0 FULL OUTER JOIN t1 ON (vt0.c0 IN (t1.c0)) COLLATE RTRIM WHERE (LIKELY(((t1.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t1.c2) IS FALSE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (vt0.c0 IN (t1.c0)) COLLATE RTRIM);
SELECT * FROM vt0 FULL OUTER JOIN t1 ON (vt0.c0 IN (t1.c0)) COLLATE RTRIM WHERE (LIKELY(((t1.c2) IS FALSE)));
SELECT * FROM t1 FULL OUTER JOIN vt0 ON CAST(((t1.c62) IS FALSE) AS INTEGER) WHERE (CASE WHEN 'o爹侠D' THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c62)) ELSE ((t1.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'o爹侠D' THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c62)) ELSE ((t1.c0) ISNULL) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON CAST(((t1.c62) IS FALSE) AS INTEGER));
SELECT * FROM t1 FULL OUTER JOIN vt0 ON CAST(((t1.c62) IS FALSE) AS INTEGER) WHERE (CASE WHEN 'o爹侠D' THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c62)) ELSE ((t1.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'o爹侠D' THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c62)) ELSE ((t1.c0) ISNULL) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON CAST(((t1.c62) IS FALSE) AS INTEGER));
SELECT * FROM t1 FULL OUTER JOIN vt0 ON CAST(((t1.c62) IS FALSE) AS INTEGER) WHERE (CASE WHEN 'o爹侠D' THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c62)) ELSE ((t1.c0) ISNULL) END);
SELECT * FROM rt0, t1 FULL OUTER JOIN vt0 ON '' COLLATE NOCASE WHERE (((0.964584661689718)IS NOT(t1.c0))) ORDER BY ((((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))>>(((((t1.c0)AND(rt0.c2)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.964584661689718)IS NOT(t1.c0))) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN vt0 ON '' COLLATE NOCASE ORDER BY ((((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))>>(((((t1.c0)AND(rt0.c2)))AND(rt0.c0)))) DESC);
SELECT * FROM rt0, t1 FULL OUTER JOIN vt0 ON '' COLLATE NOCASE WHERE (((0.964584661689718)IS NOT(t1.c0))) ORDER BY ((((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))>>(((((t1.c0)AND(rt0.c2)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.964584661689718)IS NOT(t1.c0))) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN vt0 ON '' COLLATE NOCASE ORDER BY ((((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))>>(((((t1.c0)AND(rt0.c2)))AND(rt0.c0)))) DESC);
SELECT * FROM rt0, t1 FULL OUTER JOIN vt0 ON '' COLLATE NOCASE WHERE (((0.964584661689718)IS NOT(t1.c0))) ORDER BY ((((t1.c0) BETWEEN (rt0.c0) AND (t1.c0)))>>(((((t1.c0)AND(rt0.c2)))AND(rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE ((((t1.c0) NOT NULL) IN ())) ORDER BY ((((((rt0.c0) NOT NULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR((((rt0.c1, rt0.c2, vt0.c0)) BETWEEN (('|B,eṽcppR', t1.c62, vt0.c0)) AND ((vt0.c0, rt0.c1, t1.c62)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY ((((((rt0.c0) NOT NULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR((((rt0.c1, rt0.c2, vt0.c0)) BETWEEN (('|B,eṽcppR', t1.c62, vt0.c0)) AND ((vt0.c0, rt0.c1, t1.c62)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE ((((t1.c0) NOT NULL) IN ())) ORDER BY ((((((rt0.c0) NOT NULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR((((rt0.c1, rt0.c2, vt0.c0)) BETWEEN (('|B,eṽcppR', t1.c62, vt0.c0)) AND ((vt0.c0, rt0.c1, t1.c62)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY ((((((rt0.c0) NOT NULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR((((rt0.c1, rt0.c2, vt0.c0)) BETWEEN (('|B,eṽcppR', t1.c62, vt0.c0)) AND ((vt0.c0, rt0.c1, t1.c62)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE ((((t1.c0) NOT NULL) IN ())) ORDER BY ((((((rt0.c0) NOT NULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR((((rt0.c1, rt0.c2, vt0.c0)) BETWEEN (('|B,eṽcppR', t1.c62, vt0.c0)) AND ((vt0.c0, rt0.c1, t1.c62)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE WHEN LIKELIHOOD(rt0.c0, 0.23997275767696635) THEN rt0.c2 COLLATE RTRIM WHEN CASE WHEN t1.c62 THEN t1.c62 WHEN t1.c62 THEN rt0.c1 WHEN t1.c2 THEN t1.c2 END THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND ('1107504515')) WHEN ((t1.c62) NOTNULL) THEN 'ES⋹Cs祼oXM' COLLATE BINARY END) ORDER BY (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (((t1.c2 IN (t1.c2)), ((0xfffffffff210467f)!=(rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(t1.c2)))) AND ((HEX(rt0.c2), (('-1579210428') NOT BETWEEN (t1.c2) AND (rt0.c0)), rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(rt0.c0, 0.23997275767696635) THEN rt0.c2 COLLATE RTRIM WHEN CASE WHEN t1.c62 THEN t1.c62 WHEN t1.c62 THEN rt0.c1 WHEN t1.c2 THEN t1.c2 END THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND ('1107504515')) WHEN ((t1.c62) NOTNULL) THEN 'ES⋹Cs祼oXM' COLLATE BINARY END) IS TRUE)  as count FROM rt0, t1 ORDER BY (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (((t1.c2 IN (t1.c2)), ((0xfffffffff210467f)!=(rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(t1.c2)))) AND ((HEX(rt0.c2), (('-1579210428') NOT BETWEEN (t1.c2) AND (rt0.c0)), rt0.c2))) DESC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE WHEN LIKELIHOOD(rt0.c0, 0.23997275767696635) THEN rt0.c2 COLLATE RTRIM WHEN CASE WHEN t1.c62 THEN t1.c62 WHEN t1.c62 THEN rt0.c1 WHEN t1.c2 THEN t1.c2 END THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND ('1107504515')) WHEN ((t1.c62) NOTNULL) THEN 'ES⋹Cs祼oXM' COLLATE BINARY END) ORDER BY (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (((t1.c2 IN (t1.c2)), ((0xfffffffff210467f)!=(rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(t1.c2)))) AND ((HEX(rt0.c2), (('-1579210428') NOT BETWEEN (t1.c2) AND (rt0.c0)), rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(rt0.c0, 0.23997275767696635) THEN rt0.c2 COLLATE RTRIM WHEN CASE WHEN t1.c62 THEN t1.c62 WHEN t1.c62 THEN rt0.c1 WHEN t1.c2 THEN t1.c2 END THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND ('1107504515')) WHEN ((t1.c62) NOTNULL) THEN 'ES⋹Cs祼oXM' COLLATE BINARY END) IS TRUE)  as count FROM rt0, t1 ORDER BY (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (((t1.c2 IN (t1.c2)), ((0xfffffffff210467f)!=(rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(t1.c2)))) AND ((HEX(rt0.c2), (('-1579210428') NOT BETWEEN (t1.c2) AND (rt0.c0)), rt0.c2))) DESC);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CASE WHEN LIKELIHOOD(rt0.c0, 0.23997275767696635) THEN rt0.c2 COLLATE RTRIM WHEN CASE WHEN t1.c62 THEN t1.c62 WHEN t1.c62 THEN rt0.c1 WHEN t1.c2 THEN t1.c2 END THEN ((t1.c0) NOT BETWEEN (rt0.c0) AND ('1107504515')) WHEN ((t1.c62) NOTNULL) THEN 'ES⋹Cs祼oXM' COLLATE BINARY END) ORDER BY (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN (((t1.c2 IN (t1.c2)), ((0xfffffffff210467f)!=(rt0.c2)), ((((rt0.c2)AND(rt0.c0)))AND(t1.c2)))) AND ((HEX(rt0.c2), (('-1579210428') NOT BETWEEN (t1.c2) AND (rt0.c0)), rt0.c2))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ('e⮼') ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (('e⮼') IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE ('e⮼') ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (('e⮼') IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE ('e⮼') ORDER BY rt0.c2;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER)) BETWEEN ((vt0.c0 IN ())) AND ((t1.c62 IN ()))) RIGHT OUTER JOIN t1 ON ((ABS(DISTINCT rt0.c0))OR(((rt0.c1)GLOB(t1.c2)))) WHERE (((((rt0.c1)AND('384668455')))+(((rt0.c2)GLOB(t1.c2))))) ORDER BY CAST((t1.c0 IN ()) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND('384668455')))+(((rt0.c2)GLOB(t1.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER)) BETWEEN ((vt0.c0 IN ())) AND ((t1.c62 IN ()))) RIGHT OUTER JOIN t1 ON ((ABS(DISTINCT rt0.c0))OR(((rt0.c1)GLOB(t1.c2)))) ORDER BY CAST((t1.c0 IN ()) AS BLOB) ASC);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER)) BETWEEN ((vt0.c0 IN ())) AND ((t1.c62 IN ()))) RIGHT OUTER JOIN t1 ON ((ABS(DISTINCT rt0.c0))OR(((rt0.c1)GLOB(t1.c2)))) WHERE (((((rt0.c1)AND('384668455')))+(((rt0.c2)GLOB(t1.c2))))) ORDER BY CAST((t1.c0 IN ()) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND('384668455')))+(((rt0.c2)GLOB(t1.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER)) BETWEEN ((vt0.c0 IN ())) AND ((t1.c62 IN ()))) RIGHT OUTER JOIN t1 ON ((ABS(DISTINCT rt0.c0))OR(((rt0.c1)GLOB(t1.c2)))) ORDER BY CAST((t1.c0 IN ()) AS BLOB) ASC);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER)) BETWEEN ((vt0.c0 IN ())) AND ((t1.c62 IN ()))) RIGHT OUTER JOIN t1 ON ((ABS(DISTINCT rt0.c0))OR(((rt0.c1)GLOB(t1.c2)))) WHERE (((((rt0.c1)AND('384668455')))+(((rt0.c2)GLOB(t1.c2))))) ORDER BY CAST((t1.c0 IN ()) AS BLOB) ASC;
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON t1.c2 WHERE (154819958);
SELECT SUM(count) FROM (SELECT ((154819958) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON t1.c2);
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON t1.c2 WHERE (154819958);
SELECT SUM(count) FROM (SELECT ((154819958) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON t1.c2);
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON t1.c2 WHERE (154819958);
SELECT ALL * FROM t1, vt0 WHERE (((((((((((t1.c0) IS TRUE))AND(CAST(t1.c62 AS INTEGER))))AND(json_type(0.19985540607968721))))AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN t1.c62 THEN t1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0) IS TRUE))AND(CAST(t1.c62 AS INTEGER))))AND(json_type(0.19985540607968721))))AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN t1.c62 THEN t1.c2 END))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((((((((t1.c0) IS TRUE))AND(CAST(t1.c62 AS INTEGER))))AND(json_type(0.19985540607968721))))AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN t1.c62 THEN t1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0) IS TRUE))AND(CAST(t1.c62 AS INTEGER))))AND(json_type(0.19985540607968721))))AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN t1.c62 THEN t1.c2 END))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((((((((t1.c0) IS TRUE))AND(CAST(t1.c62 AS INTEGER))))AND(json_type(0.19985540607968721))))AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN t1.c62 THEN t1.c2 END)));
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (((((((((CAST(rt0.c2 AS REAL))AND(((t1.c0)/(vt0.c0)))))AND((((t1.c62, t1.c0, rt0.c2))!=((t1.c2, rt0.c1, t1.c2))))))AND(((rt0.c1)||(t1.c2)))))OR((rt0.c2 IN ())))) ORDER BY ((UPPER(t1.c0))AND(((t1.c0) BETWEEN (rt0.c2) AND (t1.c2)))) ASC, (~ (LIKELIHOOD(t1.c62, 0.2738093406824804))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS REAL))AND(((t1.c0)/(vt0.c0)))))AND((((t1.c62, t1.c0, rt0.c2))!=((t1.c2, rt0.c1, t1.c2))))))AND(((rt0.c1)||(t1.c2)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((UPPER(t1.c0))AND(((t1.c0) BETWEEN (rt0.c2) AND (t1.c2)))) ASC, (~ (LIKELIHOOD(t1.c62, 0.2738093406824804))) DESC);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (((((((((CAST(rt0.c2 AS REAL))AND(((t1.c0)/(vt0.c0)))))AND((((t1.c62, t1.c0, rt0.c2))!=((t1.c2, rt0.c1, t1.c2))))))AND(((rt0.c1)||(t1.c2)))))OR((rt0.c2 IN ())))) ORDER BY ((UPPER(t1.c0))AND(((t1.c0) BETWEEN (rt0.c2) AND (t1.c2)))) ASC, (~ (LIKELIHOOD(t1.c62, 0.2738093406824804))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS REAL))AND(((t1.c0)/(vt0.c0)))))AND((((t1.c62, t1.c0, rt0.c2))!=((t1.c2, rt0.c1, t1.c2))))))AND(((rt0.c1)||(t1.c2)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((UPPER(t1.c0))AND(((t1.c0) BETWEEN (rt0.c2) AND (t1.c2)))) ASC, (~ (LIKELIHOOD(t1.c62, 0.2738093406824804))) DESC);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (((((((((CAST(rt0.c2 AS REAL))AND(((t1.c0)/(vt0.c0)))))AND((((t1.c62, t1.c0, rt0.c2))!=((t1.c2, rt0.c1, t1.c2))))))AND(((rt0.c1)||(t1.c2)))))OR((rt0.c2 IN ())))) ORDER BY ((UPPER(t1.c0))AND(((t1.c0) BETWEEN (rt0.c2) AND (t1.c2)))) ASC, (~ (LIKELIHOOD(t1.c62, 0.2738093406824804))) DESC;
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c2))>((vt0.c0, rt0.c0, rt0.c0)))) IS TRUE)) ORDER BY (((vt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((rt0.c1 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c0, rt0.c2))>((vt0.c0, rt0.c0, rt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((rt0.c1 IN ())))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c2))>((vt0.c0, rt0.c0, rt0.c0)))) IS TRUE)) ORDER BY (((vt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((rt0.c1 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c0, rt0.c2))>((vt0.c0, rt0.c0, rt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((rt0.c1 IN ())))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c2))>((vt0.c0, rt0.c0, rt0.c0)))) IS TRUE)) ORDER BY (((vt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((rt0.c1 IN ())))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0))>=((CAST(t1.c0 AS NUMERIC))))) ORDER BY '1008124179' COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0))>=((CAST(t1.c0 AS NUMERIC))))) IS TRUE)  as count FROM t1 ORDER BY '1008124179' COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0))>=((CAST(t1.c0 AS NUMERIC))))) ORDER BY '1008124179' COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0))>=((CAST(t1.c0 AS NUMERIC))))) IS TRUE)  as count FROM t1 ORDER BY '1008124179' COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0))>=((CAST(t1.c0 AS NUMERIC))))) ORDER BY '1008124179' COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE ((NOT ('')));
SELECT SUM(count) FROM (SELECT (((NOT (''))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE ((NOT ('')));
SELECT SUM(count) FROM (SELECT (((NOT (''))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE ((NOT ('')));
SELECT * FROM vt0, t1 WHERE ((((0.05688150932883851 IN ('b\rzb')))AND((~ (t1.c0))))) ORDER BY ((('y\1-''')) BETWEEN ((t1.c2 COLLATE BINARY)) AND (((- (t1.c62))))) DESC  NULLS LAST, ((UNLIKELY(t1.c0))>>(((t1.c0)>>(t1.c62)))) DESC  NULLS LAST, CASE WHEN (((('\r<.')OR(t1.c62)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((0.05688150932883851 IN ('b\rzb')))AND((~ (t1.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((('y\1-''')) BETWEEN ((t1.c2 COLLATE BINARY)) AND (((- (t1.c62))))) DESC  NULLS LAST, ((UNLIKELY(t1.c0))>>(((t1.c0)>>(t1.c62)))) DESC  NULLS LAST, CASE WHEN (((('\r<.')OR(t1.c62)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c0)) END);
SELECT * FROM vt0, t1 WHERE ((((0.05688150932883851 IN ('b\rzb')))AND((~ (t1.c0))))) ORDER BY ((('y\1-''')) BETWEEN ((t1.c2 COLLATE BINARY)) AND (((- (t1.c62))))) DESC  NULLS LAST, ((UNLIKELY(t1.c0))>>(((t1.c0)>>(t1.c62)))) DESC  NULLS LAST, CASE WHEN (((('\r<.')OR(t1.c62)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((0.05688150932883851 IN ('b\rzb')))AND((~ (t1.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((('y\1-''')) BETWEEN ((t1.c2 COLLATE BINARY)) AND (((- (t1.c62))))) DESC  NULLS LAST, ((UNLIKELY(t1.c0))>>(((t1.c0)>>(t1.c62)))) DESC  NULLS LAST, CASE WHEN (((('\r<.')OR(t1.c62)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c0)) END);
SELECT * FROM vt0, t1 WHERE ((((0.05688150932883851 IN ('b\rzb')))AND((~ (t1.c0))))) ORDER BY ((('y\1-''')) BETWEEN ((t1.c2 COLLATE BINARY)) AND (((- (t1.c62))))) DESC  NULLS LAST, ((UNLIKELY(t1.c0))>>(((t1.c0)>>(t1.c62)))) DESC  NULLS LAST, CASE WHEN (((('\r<.')OR(t1.c62)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c0)) END;
SELECT ALL * FROM rt0 WHERE ((((('915942634' COLLATE BINARY)OR((rt0.c0 IN ()))))OR(''))) ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL) ASC  NULLS LAST, ((NULL)>=(((rt0.c2)>=(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((('915942634' COLLATE BINARY)OR((rt0.c0 IN ()))))OR(''))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL) ASC  NULLS LAST, ((NULL)>=(((rt0.c2)>=(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((((('915942634' COLLATE BINARY)OR((rt0.c0 IN ()))))OR(''))) ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL) ASC  NULLS LAST, ((NULL)>=(((rt0.c2)>=(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((('915942634' COLLATE BINARY)OR((rt0.c0 IN ()))))OR(''))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL) ASC  NULLS LAST, ((NULL)>=(((rt0.c2)>=(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((((('915942634' COLLATE BINARY)OR((rt0.c0 IN ()))))OR(''))) ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL) ASC  NULLS LAST, ((NULL)>=(((rt0.c2)>=(rt0.c0))));
SELECT * FROM rt0, vt0 WHERE (CAST(((rt0.c0)!=(rt0.c1)) AS INTEGER)) ORDER BY rt0.c1 DESC  NULLS FIRST, CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN NULL WHEN '-1215884315' THEN ((NULL) NOT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END THEN json_array_length(rt0.c0) ELSE ((rt0.c2) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<>(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 DESC  NULLS FIRST, CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN NULL WHEN '-1215884315' THEN ((NULL) NOT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END THEN json_array_length(rt0.c0) ELSE ((rt0.c2) IS FALSE) END  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (CAST(((rt0.c0)!=(rt0.c1)) AS INTEGER)) ORDER BY rt0.c1 DESC  NULLS FIRST, CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN NULL WHEN '-1215884315' THEN ((NULL) NOT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END THEN json_array_length(rt0.c0) ELSE ((rt0.c2) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<>(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 DESC  NULLS FIRST, CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN NULL WHEN '-1215884315' THEN ((NULL) NOT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END THEN json_array_length(rt0.c0) ELSE ((rt0.c2) IS FALSE) END  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (CAST(((rt0.c0)!=(rt0.c1)) AS INTEGER)) ORDER BY rt0.c1 DESC  NULLS FIRST, CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN NULL WHEN '-1215884315' THEN ((NULL) NOT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END THEN json_array_length(rt0.c0) ELSE ((rt0.c2) IS FALSE) END  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)IS(rt0.c2)) COLLATE NOCASE) ORDER BY (NOT (rt0.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c1 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)IS(rt0.c2)) COLLATE NOCASE) ORDER BY (NOT (rt0.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c1 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)IS(rt0.c2)) COLLATE NOCASE) ORDER BY (NOT (rt0.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))<(((((x'21aa')) BETWEEN ((rt0.c2)) AND ((x'')))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))<(((((x'21aa')) BETWEEN ((rt0.c2)) AND ((x''))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))<(((((x'21aa')) BETWEEN ((rt0.c2)) AND ((x'')))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))<(((((x'21aa')) BETWEEN ((rt0.c2)) AND ((x''))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))<(((((x'21aa')) BETWEEN ((rt0.c2)) AND ((x'')))))));
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((((t1.c2) ISNULL) IN ())) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))<<(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2) ISNULL) IN ())) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))<<(rt0.c1)) ASC);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((((t1.c2) ISNULL) IN ())) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))<<(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2) ISNULL) IN ())) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))<<(rt0.c1)) ASC);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((((t1.c2) ISNULL) IN ())) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))<<(rt0.c1)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (((CAST(t1.c2 AS BLOB)) NOT BETWEEN ((+ (rt0.c0))) AND (((0.1092490701783918) BETWEEN (t1.c62) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS BLOB)) NOT BETWEEN ((+ (rt0.c0))) AND (((0.1092490701783918) BETWEEN (t1.c62) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (((CAST(t1.c2 AS BLOB)) NOT BETWEEN ((+ (rt0.c0))) AND (((0.1092490701783918) BETWEEN (t1.c62) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS BLOB)) NOT BETWEEN ((+ (rt0.c0))) AND (((0.1092490701783918) BETWEEN (t1.c62) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (((CAST(t1.c2 AS BLOB)) NOT BETWEEN ((+ (rt0.c0))) AND (((0.1092490701783918) BETWEEN (t1.c62) AND (rt0.c2)))));
SELECT ALL * FROM t1, vt0, rt0 WHERE (((((((((((rt0.c2)=(t1.c62)))AND(((t1.c0)OR(0.3572075795105286)))))OR((((t1.c62)) NOT BETWEEN ((rt0.c2)) AND ((t1.c2))))))AND(((rt0.c1)%(rt0.c1)))))AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)==(t1.c62)))AND(((t1.c0)OR(0.3572075795105286)))))OR((((t1.c62)) NOT BETWEEN ((rt0.c2)) AND ((t1.c2))))))AND(((rt0.c1)%(rt0.c1)))))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL * FROM t1, vt0, rt0 WHERE (((((((((((rt0.c2)=(t1.c62)))AND(((t1.c0)OR(0.3572075795105286)))))OR((((t1.c62)) NOT BETWEEN ((rt0.c2)) AND ((t1.c2))))))AND(((rt0.c1)%(rt0.c1)))))AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)==(t1.c62)))AND(((t1.c0)OR(0.3572075795105286)))))OR((((t1.c62)) NOT BETWEEN ((rt0.c2)) AND ((t1.c2))))))AND(((rt0.c1)%(rt0.c1)))))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL * FROM t1, vt0, rt0 WHERE (((((((((((rt0.c2)=(t1.c62)))AND(((t1.c0)OR(0.3572075795105286)))))OR((((t1.c62)) NOT BETWEEN ((rt0.c2)) AND ((t1.c2))))))AND(((rt0.c1)%(rt0.c1)))))AND(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, rt0 WHERE (ROUND((rt0.c1 IN ()), ((0.866153228453388) BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND((rt0.c1 IN ()), ((0.866153228453388) BETWEEN (rt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (ROUND((rt0.c1 IN ()), ((0.866153228453388) BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND((rt0.c1 IN ()), ((0.866153228453388) BETWEEN (rt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (ROUND((rt0.c1 IN ()), ((0.866153228453388) BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (CASE ((rt0.c0)OR(t1.c0))  WHEN (((''))<((vt0.c0))) THEN (t1.c2 IN ()) ELSE 0.78965387090597 END) ORDER BY (((rt0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)OR(t1.c0))  WHEN (((''))<((vt0.c0))) THEN (t1.c2 IN ()) ELSE 0.78965387090597 END) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (CASE ((rt0.c0)OR(t1.c0))  WHEN (((''))<((vt0.c0))) THEN (t1.c2 IN ()) ELSE 0.78965387090597 END) ORDER BY (((rt0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)OR(t1.c0))  WHEN (((''))<((vt0.c0))) THEN (t1.c2 IN ()) ELSE 0.78965387090597 END) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (CASE ((rt0.c0)OR(t1.c0))  WHEN (((''))<((vt0.c0))) THEN (t1.c2 IN ()) ELSE 0.78965387090597 END) ORDER BY (((rt0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2))) NOTNULL)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (NULLIF(DISTINCT rt0.c0, vt0.c0)) AND (((rt0.c2)||(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (NULLIF(DISTINCT rt0.c0, vt0.c0)) AND (((rt0.c2)||(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2))) NOTNULL)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (NULLIF(DISTINCT rt0.c0, vt0.c0)) AND (((rt0.c2)||(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (NULLIF(DISTINCT rt0.c0, vt0.c0)) AND (((rt0.c2)||(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2))) NOTNULL)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (NULLIF(DISTINCT rt0.c0, vt0.c0)) AND (((rt0.c2)||(rt0.c0)))) ASC;
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN t1 ON t1.c62 WHERE (((((CASE t1.c0  WHEN t1.c2 THEN '-740190701' ELSE t1.c62 END)OR(rt0.c0 COLLATE RTRIM)))OR(((((vt0.c0)OR(rt0.c2)))AND(t1.c62))))) ORDER BY (((((((rt0.c1)) BETWEEN ((t1.c2)) AND ((vt0.c0))))AND(ABS(rt0.c2))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST, COALESCE(rt0.c1 COLLATE NOCASE, vt0.c0, vt0.c0 COLLATE RTRIM, CAST(t1.c2 AS TEXT)) ASC;
SELECT SUM(count) FROM (SELECT ((((((CASE t1.c0  WHEN t1.c2 THEN '-740190701' ELSE t1.c62 END)OR(rt0.c0 COLLATE RTRIM)))OR(((((vt0.c0)OR(rt0.c2)))AND(t1.c62))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t1 ON t1.c62 ORDER BY (((((((rt0.c1)) BETWEEN ((t1.c2)) AND ((vt0.c0))))AND(ABS(rt0.c2))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST, COALESCE(rt0.c1 COLLATE NOCASE, vt0.c0, vt0.c0 COLLATE RTRIM, CAST(t1.c2 AS TEXT)) ASC);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN t1 ON t1.c62 WHERE (((((CASE t1.c0  WHEN t1.c2 THEN '-740190701' ELSE t1.c62 END)OR(rt0.c0 COLLATE RTRIM)))OR(((((vt0.c0)OR(rt0.c2)))AND(t1.c62))))) ORDER BY (((((((rt0.c1)) BETWEEN ((t1.c2)) AND ((vt0.c0))))AND(ABS(rt0.c2))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST, COALESCE(rt0.c1 COLLATE NOCASE, vt0.c0, vt0.c0 COLLATE RTRIM, CAST(t1.c2 AS TEXT)) ASC;
SELECT SUM(count) FROM (SELECT ((((((CASE t1.c0  WHEN t1.c2 THEN '-740190701' ELSE t1.c62 END)OR(rt0.c0 COLLATE RTRIM)))OR(((((vt0.c0)OR(rt0.c2)))AND(t1.c62))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t1 ON t1.c62 ORDER BY (((((((rt0.c1)) BETWEEN ((t1.c2)) AND ((vt0.c0))))AND(ABS(rt0.c2))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST, COALESCE(rt0.c1 COLLATE NOCASE, vt0.c0, vt0.c0 COLLATE RTRIM, CAST(t1.c2 AS TEXT)) ASC);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN t1 ON t1.c62 WHERE (((((CASE t1.c0  WHEN t1.c2 THEN '-740190701' ELSE t1.c62 END)OR(rt0.c0 COLLATE RTRIM)))OR(((((vt0.c0)OR(rt0.c2)))AND(t1.c62))))) ORDER BY (((((((rt0.c1)) BETWEEN ((t1.c2)) AND ((vt0.c0))))AND(ABS(rt0.c2))))AND(vt0.c0 COLLATE RTRIM))  NULLS FIRST, COALESCE(rt0.c1 COLLATE NOCASE, vt0.c0, vt0.c0 COLLATE RTRIM, CAST(t1.c2 AS TEXT)) ASC;
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0)))<(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))<(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0)))<(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))<(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0)))<(rt0.c2)));
SELECT * FROM rt0, vt0, t1 WHERE (rt0.c1) ORDER BY ((NULL)<<(((((t1.c2)OR(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY ((NULL)<<(((((t1.c2)OR(rt0.c2)))AND(rt0.c2)))));
SELECT * FROM rt0, vt0, t1 WHERE (rt0.c1) ORDER BY ((NULL)<<(((((t1.c2)OR(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY ((NULL)<<(((((t1.c2)OR(rt0.c2)))AND(rt0.c2)))));
SELECT * FROM rt0, vt0, t1 WHERE (rt0.c1) ORDER BY ((NULL)<<(((((t1.c2)OR(rt0.c2)))AND(rt0.c2))));
SELECT ALL * FROM t1, rt0 CROSS JOIN vt0 ON (t1.c2 IN (rt0.c1)) COLLATE BINARY WHERE (vt0.c0) ORDER BY (((((((((((('-1270742855')AND(t1.c62)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(LIKELIHOOD(t1.c2, 0.794372670496054))))AND(((0.7344192844909774)<>(0xffffffff8f5d77f2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt0 ON (t1.c2 IN (rt0.c1)) COLLATE BINARY ORDER BY (((((((((((('-1270742855')AND(t1.c62)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(LIKELIHOOD(t1.c2, 0.794372670496054))))AND(((0.7344192844909774)!=(0Xffffffff8f5d77f2))))  NULLS LAST);
SELECT ALL * FROM t1, rt0 CROSS JOIN vt0 ON (t1.c2 IN (rt0.c1)) COLLATE BINARY WHERE (vt0.c0) ORDER BY (((((((((((('-1270742855')AND(t1.c62)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(LIKELIHOOD(t1.c2, 0.794372670496054))))AND(((0.7344192844909774)<>(0xffffffff8f5d77f2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt0 ON (t1.c2 IN (rt0.c1)) COLLATE BINARY ORDER BY (((((((((((('-1270742855')AND(t1.c62)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(LIKELIHOOD(t1.c2, 0.794372670496054))))AND(((0.7344192844909774)!=(0Xffffffff8f5d77f2))))  NULLS LAST);
SELECT ALL * FROM t1, rt0 CROSS JOIN vt0 ON (t1.c2 IN (rt0.c1)) COLLATE BINARY WHERE (vt0.c0) ORDER BY (((((((((((('-1270742855')AND(t1.c62)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(LIKELIHOOD(t1.c2, 0.794372670496054))))AND(((0.7344192844909774)<>(0xffffffff8f5d77f2))))  NULLS LAST;
SELECT * FROM rt0 WHERE (NULL) ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST, 0x28c1f781 ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST, 0X28c1f781 ASC);
SELECT * FROM rt0 WHERE (NULL) ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST, 0x28c1f781 ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST, 0X28c1f781 ASC);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM FULL OUTER JOIN rt0 ON (~ (CAST(t1.c2 AS BLOB))) WHERE (((((rt0.c1) IS TRUE))<=(5.1620856E7))) ORDER BY (((((t1.c62 IN (t1.c62, t1.c62)))OR('0.07473569736207197')))AND(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST, (((((+ (rt0.c0)))OR(CAST(t1.c0 AS BLOB))))OR((t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE))<=(5.1620856E7))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM FULL OUTER JOIN rt0 ON (~ (CAST(t1.c2 AS BLOB))) ORDER BY (((((t1.c62 IN (t1.c62, t1.c62)))OR('0.07473569736207197')))AND(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST, (((((+ (rt0.c0)))OR(CAST(t1.c0 AS BLOB))))OR((t1.c0 IN ()))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM FULL OUTER JOIN rt0 ON (~ (CAST(t1.c2 AS BLOB))) WHERE (((((rt0.c1) IS TRUE))<=(5.1620856E7))) ORDER BY (((((t1.c62 IN (t1.c62, t1.c62)))OR('0.07473569736207197')))AND(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST, (((((+ (rt0.c0)))OR(CAST(t1.c0 AS BLOB))))OR((t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE))<=(5.1620856E7))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM FULL OUTER JOIN rt0 ON (~ (CAST(t1.c2 AS BLOB))) ORDER BY (((((t1.c62 IN (t1.c62, t1.c62)))OR('0.07473569736207197')))AND(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST, (((((+ (rt0.c0)))OR(CAST(t1.c0 AS BLOB))))OR((t1.c0 IN ()))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE RTRIM FULL OUTER JOIN rt0 ON (~ (CAST(t1.c2 AS BLOB))) WHERE (((((rt0.c1) IS TRUE))<=(5.1620856E7))) ORDER BY (((((t1.c62 IN (t1.c62, t1.c62)))OR('0.07473569736207197')))AND(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST, (((((+ (rt0.c0)))OR(CAST(t1.c0 AS BLOB))))OR((t1.c0 IN ())));
SELECT COUNT(*) FROM rt0 WHERE ((+ ((((rt0.c1))<=((rt0.c0)))))) ORDER BY ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c1))<=((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((((rt0.c1))<=((rt0.c0)))))) ORDER BY ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c1))<=((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((((rt0.c1))<=((rt0.c0)))))) ORDER BY ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED, rt0 WHERE ((('MuN	,%') NOT BETWEEN (((rt0.c2)+(rt0.c2))) AND ((((('33997065')OR(x'adf1')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('MuN	,%') NOT BETWEEN (((rt0.c2)+(rt0.c2))) AND ((((('33997065')OR(x'adf1')))AND(vt0.c0))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED, rt0 WHERE ((('MuN	,%') NOT BETWEEN (((rt0.c2)+(rt0.c2))) AND ((((('33997065')OR(x'adf1')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('MuN	,%') NOT BETWEEN (((rt0.c2)+(rt0.c2))) AND ((((('33997065')OR(x'adf1')))AND(vt0.c0))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED, rt0 WHERE ((('MuN	,%') NOT BETWEEN (((rt0.c2)+(rt0.c2))) AND ((((('33997065')OR(x'adf1')))AND(vt0.c0)))));
SELECT * FROM t1, rt0 INNER JOIN vt0 ON 0.6178021112244523 WHERE (rtreenode('03b7<72' COLLATE NOCASE, ((rt0.c2)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode('03b7<72' COLLATE NOCASE, ((rt0.c2)IS(rt0.c2)))) IS TRUE)  as count FROM t1, rt0 INNER JOIN vt0 ON 0.6178021112244523);
SELECT * FROM t1, rt0 INNER JOIN vt0 ON 0.6178021112244523 WHERE (rtreenode('03b7<72' COLLATE NOCASE, ((rt0.c2)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode('03b7<72' COLLATE NOCASE, ((rt0.c2)IS(rt0.c2)))) IS TRUE)  as count FROM t1, rt0 INNER JOIN vt0 ON 0.6178021112244523);
SELECT * FROM t1, rt0 INNER JOIN vt0 ON 0.6178021112244523 WHERE (rtreenode('03b7<72' COLLATE NOCASE, ((rt0.c2)IS(rt0.c2))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON COALESCE(DISTINCT LIKELIHOOD(DISTINCT '-1741637398', 0.37453908158123805), ((rt0.c2)<>(vt0.c0))) WHERE ((((CAST(rt0.c2 AS REAL), rt0.c1 COLLATE BINARY, ((vt0.c0)&(vt0.c0)), (((rt0.c1)) BETWEEN ((vt0.c0)) AND ((0.7510029608515895))), ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2))))>=((TRIM(rt0.c0, rt0.c1), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)), HEX(rt0.c2), ((rt0.c1) NOTNULL), rt0.c0 COLLATE BINARY)))) ORDER BY ((((((rt0.c1)AND(0.3456217578011165)))AND(rt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS REAL), rt0.c1 COLLATE BINARY, ((vt0.c0)&(vt0.c0)), (((rt0.c1)) BETWEEN ((vt0.c0)) AND ((0.7510029608515895))), ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2))))>=((TRIM(rt0.c0, rt0.c1), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)), HEX(rt0.c2), ((rt0.c1) NOTNULL), rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON COALESCE(DISTINCT LIKELIHOOD(DISTINCT '-1741637398', 0.37453908158123805), ((rt0.c2)!=(vt0.c0))) ORDER BY ((((((rt0.c1)AND(0.3456217578011165)))AND(rt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON COALESCE(DISTINCT LIKELIHOOD(DISTINCT '-1741637398', 0.37453908158123805), ((rt0.c2)<>(vt0.c0))) WHERE ((((CAST(rt0.c2 AS REAL), rt0.c1 COLLATE BINARY, ((vt0.c0)&(vt0.c0)), (((rt0.c1)) BETWEEN ((vt0.c0)) AND ((0.7510029608515895))), ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2))))>=((TRIM(rt0.c0, rt0.c1), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)), HEX(rt0.c2), ((rt0.c1) NOTNULL), rt0.c0 COLLATE BINARY)))) ORDER BY ((((((rt0.c1)AND(0.3456217578011165)))AND(rt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS REAL), rt0.c1 COLLATE BINARY, ((vt0.c0)&(vt0.c0)), (((rt0.c1)) BETWEEN ((vt0.c0)) AND ((0.7510029608515895))), ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2))))>=((TRIM(rt0.c0, rt0.c1), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)), HEX(rt0.c2), ((rt0.c1) NOTNULL), rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON COALESCE(DISTINCT LIKELIHOOD(DISTINCT '-1741637398', 0.37453908158123805), ((rt0.c2)!=(vt0.c0))) ORDER BY ((((((rt0.c1)AND(0.3456217578011165)))AND(rt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON COALESCE(DISTINCT LIKELIHOOD(DISTINCT '-1741637398', 0.37453908158123805), ((rt0.c2)<>(vt0.c0))) WHERE ((((CAST(rt0.c2 AS REAL), rt0.c1 COLLATE BINARY, ((vt0.c0)&(vt0.c0)), (((rt0.c1)) BETWEEN ((vt0.c0)) AND ((0.7510029608515895))), ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2))))>=((TRIM(rt0.c0, rt0.c1), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)), HEX(rt0.c2), ((rt0.c1) NOTNULL), rt0.c0 COLLATE BINARY)))) ORDER BY ((((((rt0.c1)AND(0.3456217578011165)))AND(rt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(CAST(rt0.c2 AS BLOB))))OR((rt0.c1 IN (vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, vt0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(CAST(rt0.c2 AS BLOB))))OR((rt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0, vt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, vt0.c0))) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(CAST(rt0.c2 AS BLOB))))OR((rt0.c1 IN (vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, vt0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(CAST(rt0.c2 AS BLOB))))OR((rt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0, vt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, vt0.c0))) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(CAST(rt0.c2 AS BLOB))))OR((rt0.c1 IN (vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, rt0.c1))<=((rt0.c1, rt0.c0, vt0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt0, rt0, t1 WHERE ((((- (vt0.c0)))=(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))=(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE ((((- (vt0.c0)))=(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))=(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE ((((- (vt0.c0)))=(CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (TRIM(DISTINCT ((0X13df2c67) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((0x13df2c67) ISNULL))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (TRIM(DISTINCT ((0X13df2c67) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((0x13df2c67) ISNULL))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (TRIM(DISTINCT ((0X13df2c67) ISNULL)));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE ('693509375');
SELECT SUM(count) FROM (SELECT ALL (('693509375') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('693509375');
SELECT SUM(count) FROM (SELECT ALL (('693509375') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('693509375');
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((((((((((TRIM(t1.c0))OR((+ (t1.c62)))))OR((- (t1.c62)))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c62)))))OR(CASE t1.c2  WHEN t1.c2 THEN t1.c0 END)))AND(vt0.c0 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)) INNER JOIN t1 ON (rt0.c2 IN ()) COLLATE NOCASE WHERE (((((((((((((vt0.c0)AND(t1.c62)))AND(t1.c62)))AND(0.1867758326030141)))AND(rt0.c2)))OR(((t1.c0)+(x'')))))AND(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(t1.c62)))AND(t1.c62)))AND(0.1867758326030141)))AND(rt0.c2)))OR(((t1.c0)+(x'')))))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((((((((TRIM(t1.c0))OR((+ (t1.c62)))))OR((- (t1.c62)))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c62)))))OR(CASE t1.c2  WHEN t1.c2 THEN t1.c0 END)))AND(vt0.c0 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)) INNER JOIN t1 ON (rt0.c2 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((((((((((TRIM(t1.c0))OR((+ (t1.c62)))))OR((- (t1.c62)))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c62)))))OR(CASE t1.c2  WHEN t1.c2 THEN t1.c0 END)))AND(vt0.c0 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)) INNER JOIN t1 ON (rt0.c2 IN ()) COLLATE NOCASE WHERE (((((((((((((vt0.c0)AND(t1.c62)))AND(t1.c62)))AND(0.1867758326030141)))AND(rt0.c2)))OR(((t1.c0)+(x'')))))AND(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(t1.c62)))AND(t1.c62)))AND(0.1867758326030141)))AND(rt0.c2)))OR(((t1.c0)+(x'')))))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((((((((TRIM(t1.c0))OR((+ (t1.c62)))))OR((- (t1.c62)))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c62)))))OR(CASE t1.c2  WHEN t1.c2 THEN t1.c0 END)))AND(vt0.c0 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)) INNER JOIN t1 ON (rt0.c2 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((((((((((TRIM(t1.c0))OR((+ (t1.c62)))))OR((- (t1.c62)))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c62)))))OR(CASE t1.c2  WHEN t1.c2 THEN t1.c0 END)))AND(vt0.c0 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)) INNER JOIN t1 ON (rt0.c2 IN ()) COLLATE NOCASE WHERE (((((((((((((vt0.c0)AND(t1.c62)))AND(t1.c62)))AND(0.1867758326030141)))AND(rt0.c2)))OR(((t1.c0)+(x'')))))AND(((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)&(vt0.c0)))));
SELECT ALL * FROM rt0, t1, vt0 WHERE (((((t1.c62)+(0.11182835529088797))) NOT NULL)) ORDER BY CAST(((rt0.c1)IS NOT(rt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c62)+(0.11182835529088797))) NOT NULL)) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY CAST(((rt0.c1)IS NOT(rt0.c1)) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t1, vt0 WHERE (((((t1.c62)+(0.11182835529088797))) NOT NULL)) ORDER BY CAST(((rt0.c1)IS NOT(rt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c62)+(0.11182835529088797))) NOT NULL)) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY CAST(((rt0.c1)IS NOT(rt0.c1)) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t1, vt0 WHERE (((((t1.c62)+(0.11182835529088797))) NOT NULL)) ORDER BY CAST(((rt0.c1)IS NOT(rt0.c1)) AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((~ ((((NULL))<((vt0.c0)))))) ORDER BY ((((vt0.c0) NOT NULL)) NOTNULL) ASC, ((CAST(vt0.c0 AS REAL)) BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((NULL))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) NOTNULL) ASC, ((CAST(vt0.c0 AS REAL)) BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0)) DESC);
SELECT ALL * FROM vt0 WHERE ((~ ((((NULL))<((vt0.c0)))))) ORDER BY ((((vt0.c0) NOT NULL)) NOTNULL) ASC, ((CAST(vt0.c0 AS REAL)) BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((NULL))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) NOTNULL) ASC, ((CAST(vt0.c0 AS REAL)) BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0)) DESC);
SELECT ALL * FROM vt0 WHERE ((~ ((((NULL))<((vt0.c0)))))) ORDER BY ((((vt0.c0) NOT NULL)) NOTNULL) ASC, ((CAST(vt0.c0 AS REAL)) BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0)) DESC;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (CASE '|W\nPjef'  WHEN ((rt0.c2)OR(vt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((((((((vt0.c0)AND(rt0.c2)))AND(0.3912059923861013)))AND(rt0.c2)))AND(rt0.c2)) THEN ((x'')<(rt0.c2)) WHEN (rt0.c2 IN (rt0.c1)) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '|W\nPjef'  WHEN ((rt0.c2)OR(vt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((((((((vt0.c0)AND(rt0.c2)))AND(0.3912059923861013)))AND(rt0.c2)))AND(rt0.c2)) THEN ((x'')<(rt0.c2)) WHEN (rt0.c2 IN (rt0.c1)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (CASE '|W\nPjef'  WHEN ((rt0.c2)OR(vt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((((((((vt0.c0)AND(rt0.c2)))AND(0.3912059923861013)))AND(rt0.c2)))AND(rt0.c2)) THEN ((x'')<(rt0.c2)) WHEN (rt0.c2 IN (rt0.c1)) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '|W\nPjef'  WHEN ((rt0.c2)OR(vt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((((((((vt0.c0)AND(rt0.c2)))AND(0.3912059923861013)))AND(rt0.c2)))AND(rt0.c2)) THEN ((x'')<(rt0.c2)) WHEN (rt0.c2 IN (rt0.c1)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (CASE '|W\nPjef'  WHEN ((rt0.c2)OR(vt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((((((((vt0.c0)AND(rt0.c2)))AND(0.3912059923861013)))AND(rt0.c2)))AND(rt0.c2)) THEN ((x'')<(rt0.c2)) WHEN (rt0.c2 IN (rt0.c1)) THEN (rt0.c2 IN ()) END);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE ((~ (((t1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((~ (((t1.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE ((~ (((t1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((~ (((t1.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE ((~ (((t1.c2) NOT NULL))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_valid((~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid((~ (rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_valid((~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid((~ (rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_valid((~ (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (t1.c0);
SELECT ALL * FROM vt0, t1 NATURAL JOIN rt0 WHERE ((+ ((vt0.c0 IN (rt0.c2, vt0.c0))))) ORDER BY ((((((t1.c2)||(vt0.c0)))AND(IFNULL(DISTINCT t1.c0, t1.c0))))OR(rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN (rt0.c2, vt0.c0))))) IS TRUE)  as count FROM vt0, t1 NATURAL JOIN rt0 ORDER BY ((((((t1.c2)||(vt0.c0)))AND(IFNULL(DISTINCT t1.c0, t1.c0))))OR(rt0.c2 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt0, t1 NATURAL JOIN rt0 WHERE ((+ ((vt0.c0 IN (rt0.c2, vt0.c0))))) ORDER BY ((((((t1.c2)||(vt0.c0)))AND(IFNULL(DISTINCT t1.c0, t1.c0))))OR(rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN (rt0.c2, vt0.c0))))) IS TRUE)  as count FROM vt0, t1 NATURAL JOIN rt0 ORDER BY ((((((t1.c2)||(vt0.c0)))AND(IFNULL(DISTINCT t1.c0, t1.c0))))OR(rt0.c2 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt0, t1 NATURAL JOIN rt0 WHERE ((+ ((vt0.c0 IN (rt0.c2, vt0.c0))))) ORDER BY ((((((t1.c2)||(vt0.c0)))AND(IFNULL(DISTINCT t1.c0, t1.c0))))OR(rt0.c2 COLLATE NOCASE)) DESC;
SELECT * FROM t1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((((0.3484764182408516)OR(0.5545540187528225)))OR(t1.c62)))) AND ((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c0)))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE NULL END)IS NOT((~ (0.2752647938654168)))) DESC  NULLS FIRST, TRIM(CAST(rt0.c1 AS BLOB)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((((0.3484764182408516)OR(0.5545540187528225)))OR(t1.c62)))) AND ((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c0)))))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE NULL END)IS NOT((~ (0.2752647938654168)))) DESC  NULLS FIRST, TRIM(CAST(rt0.c1 AS BLOB)) ASC  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((((0.3484764182408516)OR(0.5545540187528225)))OR(t1.c62)))) AND ((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c0)))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE NULL END)IS NOT((~ (0.2752647938654168)))) DESC  NULLS FIRST, TRIM(CAST(rt0.c1 AS BLOB)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((((0.3484764182408516)OR(0.5545540187528225)))OR(t1.c62)))) AND ((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c0)))))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE NULL END)IS NOT((~ (0.2752647938654168)))) DESC  NULLS FIRST, TRIM(CAST(rt0.c1 AS BLOB)) ASC  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((((0.3484764182408516)OR(0.5545540187528225)))OR(t1.c62)))) AND ((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c0)))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE NULL END)IS NOT((~ (0.2752647938654168)))) DESC  NULLS FIRST, TRIM(CAST(rt0.c1 AS BLOB)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN t1 WHERE ((((rt0.c0) BETWEEN (t1.c2) AND (rt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, ((rt0.c2) BETWEEN (rt0.c1) AND (0.3912059923861013)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (t1.c2) AND (rt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, ((rt0.c2) BETWEEN (rt0.c1) AND (0.3912059923861013))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN t1 WHERE ((((rt0.c0) BETWEEN (t1.c2) AND (rt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, ((rt0.c2) BETWEEN (rt0.c1) AND (0.3912059923861013)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (t1.c2) AND (rt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, ((rt0.c2) BETWEEN (rt0.c1) AND (0.3912059923861013))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN t1 WHERE ((((rt0.c0) BETWEEN (t1.c2) AND (rt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, ((rt0.c2) BETWEEN (rt0.c1) AND (0.3912059923861013)))));
SELECT * FROM vt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (CASE WHEN ((rt0.c2)<=(t1.c62)) THEN (((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, '216659072')) AND ((t1.c2, t1.c62, t1.c62))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)<=(t1.c62)) THEN (((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, '216659072')) AND ((t1.c2, t1.c62, t1.c62))) END) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (CASE WHEN ((rt0.c2)<=(t1.c62)) THEN (((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, '216659072')) AND ((t1.c2, t1.c62, t1.c62))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)<=(t1.c62)) THEN (((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, '216659072')) AND ((t1.c2, t1.c62, t1.c62))) END) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (CASE WHEN ((rt0.c2)<=(t1.c62)) THEN (((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, '216659072')) AND ((t1.c2, t1.c62, t1.c62))) END);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (CHAR((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0))))) ORDER BY CASE WHEN ((vt0.c0)AND(t1.c62)) THEN ((rt0.c2)LIKE(t1.c62)) WHEN x'1c4530f5' THEN CASE t1.c2  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN ((((vt0.c0)AND(t1.c0)))AND(rt0.c1)) THEN ((((rt0.c2)OR(x'')))OR(vt0.c0)) ELSE ((t1.c0)&(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CHAR((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0))))) IS TRUE)  as count FROM vt0, rt0, t1 NOT INDEXED ORDER BY CASE WHEN ((vt0.c0)AND(t1.c62)) THEN ((rt0.c2)LIKE(t1.c62)) WHEN x'1c4530f5' THEN CASE t1.c2  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN ((((vt0.c0)AND(t1.c0)))AND(rt0.c1)) THEN ((((rt0.c2)OR(x'')))OR(vt0.c0)) ELSE ((t1.c0)&(vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (CHAR((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0))))) ORDER BY CASE WHEN ((vt0.c0)AND(t1.c62)) THEN ((rt0.c2)LIKE(t1.c62)) WHEN x'1c4530f5' THEN CASE t1.c2  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN ((((vt0.c0)AND(t1.c0)))AND(rt0.c1)) THEN ((((rt0.c2)OR(x'')))OR(vt0.c0)) ELSE ((t1.c0)&(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CHAR((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0))))) IS TRUE)  as count FROM vt0, rt0, t1 NOT INDEXED ORDER BY CASE WHEN ((vt0.c0)AND(t1.c62)) THEN ((rt0.c2)LIKE(t1.c62)) WHEN x'1c4530f5' THEN CASE t1.c2  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN ((((vt0.c0)AND(t1.c0)))AND(rt0.c1)) THEN ((((rt0.c2)OR(x'')))OR(vt0.c0)) ELSE ((t1.c0)&(vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (CHAR((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0))))) ORDER BY CASE WHEN ((vt0.c0)AND(t1.c62)) THEN ((rt0.c2)LIKE(t1.c62)) WHEN x'1c4530f5' THEN CASE t1.c2  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END WHEN ((((vt0.c0)AND(t1.c0)))AND(rt0.c1)) THEN ((((rt0.c2)OR(x'')))OR(vt0.c0)) ELSE ((t1.c0)&(vt0.c0)) END ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)<(rt0.c1)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))))==(((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c2 AS REAL), highlight(rt0.c2, rt0.c0, 0X755aa786, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)<(rt0.c1)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))))==(((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c2 AS REAL), highlight(rt0.c2, rt0.c0, 0X755aa786, rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)<(rt0.c1)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))))==(((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c2 AS REAL), highlight(rt0.c2, rt0.c0, 0X755aa786, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)<(rt0.c1)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))))==(((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c2 AS REAL), highlight(rt0.c2, rt0.c0, 0X755aa786, rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)<(rt0.c1)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))))==(((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), CAST(rt0.c2 AS REAL), highlight(rt0.c2, rt0.c0, 0X755aa786, rt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY COALESCE(DISTINCT -1568372407, ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR('59186493')))AND(0.36465668202799195)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT -1568372407, ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR('59186493')))AND(0.36465668202799195)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY COALESCE(DISTINCT -1568372407, ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR('59186493')))AND(0.36465668202799195)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT -1568372407, ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR('59186493')))AND(0.36465668202799195)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY COALESCE(DISTINCT -1568372407, ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt0.c0)OR('59186493')))AND(0.36465668202799195)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE))  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c2)AND(t1.c2)) COLLATE NOCASE) ORDER BY CAST(((((t1.c62)OR(NULL)))AND(t1.c0)) AS TEXT), t1.c2 DESC  NULLS LAST, ((((t1.c0)-(t1.c62))) BETWEEN (HEX(DISTINCT t1.c62)) AND ((NOT (t1.c62)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c2)AND(t1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY CAST(((((t1.c62)OR(NULL)))AND(t1.c0)) AS TEXT), t1.c2 DESC  NULLS LAST, ((((t1.c0)-(t1.c62))) BETWEEN (HEX(DISTINCT t1.c62)) AND ((NOT (t1.c62)))) ASC  NULLS LAST);
SELECT * FROM t1 WHERE (((t1.c2)AND(t1.c2)) COLLATE NOCASE) ORDER BY CAST(((((t1.c62)OR(NULL)))AND(t1.c0)) AS TEXT), t1.c2 DESC  NULLS LAST, ((((t1.c0)-(t1.c62))) BETWEEN (HEX(DISTINCT t1.c62)) AND ((NOT (t1.c62)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c2)AND(t1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY CAST(((((t1.c62)OR(NULL)))AND(t1.c0)) AS TEXT), t1.c2 DESC  NULLS LAST, ((((t1.c0)-(t1.c62))) BETWEEN (HEX(DISTINCT t1.c62)) AND ((NOT (t1.c62)))) ASC  NULLS LAST);
SELECT * FROM t1 WHERE (((t1.c2)AND(t1.c2)) COLLATE NOCASE) ORDER BY CAST(((((t1.c62)OR(NULL)))AND(t1.c0)) AS TEXT), t1.c2 DESC  NULLS LAST, ((((t1.c0)-(t1.c62))) BETWEEN (HEX(DISTINCT t1.c62)) AND ((NOT (t1.c62)))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt0, rt0 WHERE (((((t1.c0)&(vt0.c0))) IS FALSE)) ORDER BY ((((rt0.c2, t1.c2, vt0.c0))>=((rt0.c2, NULL, t1.c2))) IN ((- (rt0.c1)), ((rt0.c1)GLOB(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)&(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((((rt0.c2, t1.c2, vt0.c0))>=((rt0.c2, NULL, t1.c2))) IN ((- (rt0.c1)), ((rt0.c1)GLOB(rt0.c1)))) ASC);
SELECT ALL * FROM t1, vt0, rt0 WHERE (((((t1.c0)&(vt0.c0))) IS FALSE)) ORDER BY ((((rt0.c2, t1.c2, vt0.c0))>=((rt0.c2, NULL, t1.c2))) IN ((- (rt0.c1)), ((rt0.c1)GLOB(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)&(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((((rt0.c2, t1.c2, vt0.c0))>=((rt0.c2, NULL, t1.c2))) IN ((- (rt0.c1)), ((rt0.c1)GLOB(rt0.c1)))) ASC);
SELECT ALL * FROM t1, vt0, rt0 WHERE (((((t1.c0)&(vt0.c0))) IS FALSE)) ORDER BY ((((rt0.c2, t1.c2, vt0.c0))>=((rt0.c2, NULL, t1.c2))) IN ((- (rt0.c1)), ((rt0.c1)GLOB(rt0.c1)))) ASC;
SELECT * FROM rt0, t1 WHERE ((+ (((t1.c2)+(rt0.c1))))) ORDER BY '-1973062165'  NULLS LAST, CASE x''  WHEN CASE WHEN t1.c62 THEN t1.c62 ELSE rt0.c2 END THEN (~ (rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c2)+(rt0.c1))))) IS TRUE)  as count FROM rt0, t1 ORDER BY '-1973062165'  NULLS LAST, CASE x''  WHEN CASE WHEN t1.c62 THEN t1.c62 ELSE rt0.c2 END THEN (~ (rt0.c0)) END  NULLS FIRST);
SELECT * FROM rt0, t1 WHERE ((+ (((t1.c2)+(rt0.c1))))) ORDER BY '-1973062165'  NULLS LAST, CASE x''  WHEN CASE WHEN t1.c62 THEN t1.c62 ELSE rt0.c2 END THEN (~ (rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c2)+(rt0.c1))))) IS TRUE)  as count FROM rt0, t1 ORDER BY '-1973062165'  NULLS LAST, CASE x''  WHEN CASE WHEN t1.c62 THEN t1.c62 ELSE rt0.c2 END THEN (~ (rt0.c0)) END  NULLS FIRST);
SELECT * FROM rt0, t1 WHERE ((+ (((t1.c2)+(rt0.c1))))) ORDER BY '-1973062165'  NULLS LAST, CASE x''  WHEN CASE WHEN t1.c62 THEN t1.c62 ELSE rt0.c2 END THEN (~ (rt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM t1, rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 COLLATE BINARY WHERE (t1.c2) ORDER BY '0.3658918651184142' DESC  NULLS FIRST, ((CAST(t1.c2 AS NUMERIC))>=(((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 COLLATE BINARY ORDER BY '0.3658918651184142' DESC  NULLS FIRST, ((CAST(t1.c2 AS NUMERIC))>=(((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM t1, rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 COLLATE BINARY WHERE (t1.c2) ORDER BY '0.3658918651184142' DESC  NULLS FIRST, ((CAST(t1.c2 AS NUMERIC))>=(((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 COLLATE BINARY ORDER BY '0.3658918651184142' DESC  NULLS FIRST, ((CAST(t1.c2 AS NUMERIC))>=(((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM t1, rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 COLLATE BINARY WHERE (t1.c2) ORDER BY '0.3658918651184142' DESC  NULLS FIRST, ((CAST(t1.c2 AS NUMERIC))>=(((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0))))  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((((rt0.c2) NOTNULL))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c0)|(rt0.c2)))))OR('0.6786838993296691')))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) NOTNULL))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c0)|(rt0.c2)))))OR('0.6786838993296691')))OR(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c2) NOTNULL))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c0)|(rt0.c2)))))OR('0.6786838993296691')))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) NOTNULL))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c0)|(rt0.c2)))))OR('0.6786838993296691')))OR(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c2) NOTNULL))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c0)|(rt0.c2)))))OR('0.6786838993296691')))OR(NULL)));
SELECT ALL * FROM t1, vt0, rt0 WHERE ((((((t1.c62) BETWEEN (rt0.c2) AND (rt0.c2)), ((t1.c0)*(t1.c0)), NULL COLLATE RTRIM))!=(((NOT (t1.c62)), ((t1.c62) IS TRUE), NULL)))) ORDER BY ((((((((vt0.c0)AND(CASE t1.c2  WHEN rt0.c0 THEN rt0.c0 END)))AND(COALESCE(t1.c62, t1.c2))))AND(((((t1.c2)OR(vt0.c0)))OR(rt0.c0)))))OR(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c62) BETWEEN (rt0.c2) AND (rt0.c2)), ((t1.c0)*(t1.c0)), NULL COLLATE RTRIM))<>(((NOT (t1.c62)), ((t1.c62) IS TRUE), NULL)))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((((((((vt0.c0)AND(CASE t1.c2  WHEN rt0.c0 THEN rt0.c0 END)))AND(COALESCE(t1.c62, t1.c2))))AND(((((t1.c2)OR(vt0.c0)))OR(rt0.c0)))))OR(((vt0.c0) IS TRUE))) DESC);
SELECT ALL * FROM t1, vt0, rt0 WHERE ((((((t1.c62) BETWEEN (rt0.c2) AND (rt0.c2)), ((t1.c0)*(t1.c0)), NULL COLLATE RTRIM))!=(((NOT (t1.c62)), ((t1.c62) IS TRUE), NULL)))) ORDER BY ((((((((vt0.c0)AND(CASE t1.c2  WHEN rt0.c0 THEN rt0.c0 END)))AND(COALESCE(t1.c62, t1.c2))))AND(((((t1.c2)OR(vt0.c0)))OR(rt0.c0)))))OR(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c62) BETWEEN (rt0.c2) AND (rt0.c2)), ((t1.c0)*(t1.c0)), NULL COLLATE RTRIM))<>(((NOT (t1.c62)), ((t1.c62) IS TRUE), NULL)))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((((((((vt0.c0)AND(CASE t1.c2  WHEN rt0.c0 THEN rt0.c0 END)))AND(COALESCE(t1.c62, t1.c2))))AND(((((t1.c2)OR(vt0.c0)))OR(rt0.c0)))))OR(((vt0.c0) IS TRUE))) DESC);
SELECT ALL * FROM t1, vt0, rt0 WHERE ((((((t1.c62) BETWEEN (rt0.c2) AND (rt0.c2)), ((t1.c0)*(t1.c0)), NULL COLLATE RTRIM))!=(((NOT (t1.c62)), ((t1.c62) IS TRUE), NULL)))) ORDER BY ((((((((vt0.c0)AND(CASE t1.c2  WHEN rt0.c0 THEN rt0.c0 END)))AND(COALESCE(t1.c62, t1.c2))))AND(((((t1.c2)OR(vt0.c0)))OR(rt0.c0)))))OR(((vt0.c0) IS TRUE))) DESC;
SELECT * FROM t1, vt0, rt0 WHERE (((((rt0.c2)GLOB(rt0.c0))) IS FALSE)) ORDER BY ((0.48983866170532087) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1)=(rt0.c0)))) DESC, ((((rt0.c1)|(t1.c0)))&(CASE rt0.c2  WHEN rt0.c2 THEN t1.c2 ELSE t1.c2 END))  NULLS FIRST, (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((((rt0.c0)OR(t1.c0)))OR(t1.c2)), x'6a2a')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((0.48983866170532087) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1)==(rt0.c0)))) DESC, ((((rt0.c1)|(t1.c0)))&(CASE rt0.c2  WHEN rt0.c2 THEN t1.c2 ELSE t1.c2 END))  NULLS FIRST, (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((((rt0.c0)OR(t1.c0)))OR(t1.c2)), x'6a2a')) DESC  NULLS LAST);
SELECT * FROM t1, vt0, rt0 WHERE (((((rt0.c2)GLOB(rt0.c0))) IS FALSE)) ORDER BY ((0.48983866170532087) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1)=(rt0.c0)))) DESC, ((((rt0.c1)|(t1.c0)))&(CASE rt0.c2  WHEN rt0.c2 THEN t1.c2 ELSE t1.c2 END))  NULLS FIRST, (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((((rt0.c0)OR(t1.c0)))OR(t1.c2)), x'6a2a')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((0.48983866170532087) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1)==(rt0.c0)))) DESC, ((((rt0.c1)|(t1.c0)))&(CASE rt0.c2  WHEN rt0.c2 THEN t1.c2 ELSE t1.c2 END))  NULLS FIRST, (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((((rt0.c0)OR(t1.c0)))OR(t1.c2)), x'6a2a')) DESC  NULLS LAST);
SELECT * FROM t1, vt0, rt0 WHERE (((((rt0.c2)GLOB(rt0.c0))) IS FALSE)) ORDER BY ((0.48983866170532087) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c1)=(rt0.c0)))) DESC, ((((rt0.c1)|(t1.c0)))&(CASE rt0.c2  WHEN rt0.c2 THEN t1.c2 ELSE t1.c2 END))  NULLS FIRST, (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((((rt0.c0)OR(t1.c0)))OR(t1.c2)), x'6a2a')) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY NULL;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0)))) ISNULL)) ORDER BY CAST('900947452' AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))==((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST('900947452' AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0)))) ISNULL)) ORDER BY CAST('900947452' AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))==((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST('900947452' AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0)))) ISNULL)) ORDER BY CAST('900947452' AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM vt0, t1 FULL OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((rt0.c0)IS NOT(rt0.c1))) AND (NULLIF(DISTINCT t1.c2, rt0.c2))) WHERE (((((x'')OR(CAST(t1.c2 AS INTEGER))))AND((((t1.c0))=((t1.c62))))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(CAST(t1.c2 AS INTEGER))))AND((((t1.c0))=((t1.c62)))))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((rt0.c0)IS NOT(rt0.c1))) AND (NULLIF(DISTINCT t1.c2, rt0.c2))));
SELECT * FROM vt0, t1 FULL OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((rt0.c0)IS NOT(rt0.c1))) AND (NULLIF(DISTINCT t1.c2, rt0.c2))) WHERE (((((x'')OR(CAST(t1.c2 AS INTEGER))))AND((((t1.c0))=((t1.c62))))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(CAST(t1.c2 AS INTEGER))))AND((((t1.c0))=((t1.c62)))))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((rt0.c0)IS NOT(rt0.c1))) AND (NULLIF(DISTINCT t1.c2, rt0.c2))));
SELECT * FROM vt0, t1 FULL OUTER JOIN rt0 ON ((rt0.c0) NOT BETWEEN (((rt0.c0)IS NOT(rt0.c1))) AND (NULLIF(DISTINCT t1.c2, rt0.c2))) WHERE (((((x'')OR(CAST(t1.c2 AS INTEGER))))AND((((t1.c0))=((t1.c62))))));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((~ (t1.c2)));
SELECT SUM(count) FROM (SELECT (((~ (t1.c2))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((~ (t1.c2)));
SELECT SUM(count) FROM (SELECT (((~ (t1.c2))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((~ (t1.c2)));
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (((((CASE t1.c0  WHEN t1.c62 THEN rt0.c1 END)AND(((((((((rt0.c2)AND(rt0.c2)))AND(t1.c0)))AND(t1.c0)))OR(vt0.c0)))))AND(t1.c2 COLLATE RTRIM))) ORDER BY ((((t1.c2) NOTNULL)) NOT NULL), ((((vt0.c0)<(t1.c2)))-(CASE WHEN 2.8156447E7 THEN t1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c0  WHEN t1.c62 THEN rt0.c1 END)AND(((((((((rt0.c2)AND(rt0.c2)))AND(t1.c0)))AND(t1.c0)))OR(vt0.c0)))))AND(t1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY ((((t1.c2) NOTNULL)) NOT NULL), ((((vt0.c0)<(t1.c2)))-(CASE WHEN 2.8156447E7 THEN t1.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (((((CASE t1.c0  WHEN t1.c62 THEN rt0.c1 END)AND(((((((((rt0.c2)AND(rt0.c2)))AND(t1.c0)))AND(t1.c0)))OR(vt0.c0)))))AND(t1.c2 COLLATE RTRIM))) ORDER BY ((((t1.c2) NOTNULL)) NOT NULL), ((((vt0.c0)<(t1.c2)))-(CASE WHEN 2.8156447E7 THEN t1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c0  WHEN t1.c62 THEN rt0.c1 END)AND(((((((((rt0.c2)AND(rt0.c2)))AND(t1.c0)))AND(t1.c0)))OR(vt0.c0)))))AND(t1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY ((((t1.c2) NOTNULL)) NOT NULL), ((((vt0.c0)<(t1.c2)))-(CASE WHEN 2.8156447E7 THEN t1.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (((((CASE t1.c0  WHEN t1.c62 THEN rt0.c1 END)AND(((((((((rt0.c2)AND(rt0.c2)))AND(t1.c0)))AND(t1.c0)))OR(vt0.c0)))))AND(t1.c2 COLLATE RTRIM))) ORDER BY ((((t1.c2) NOTNULL)) NOT NULL), ((((vt0.c0)<(t1.c2)))-(CASE WHEN 2.8156447E7 THEN t1.c2 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c2 AS BLOB)))) ORDER BY ((((rt0.c2) NOT NULL)) IS FALSE) ASC, ((((rt0.c1) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND ('1914005276'))) AND (((rt0.c1)+(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT NULL)) IS FALSE) ASC, ((((rt0.c1) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND ('1914005276'))) AND (((rt0.c1)+(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c2 AS BLOB)))) ORDER BY ((((rt0.c2) NOT NULL)) IS FALSE) ASC, ((((rt0.c1) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND ('1914005276'))) AND (((rt0.c1)+(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT NULL)) IS FALSE) ASC, ((((rt0.c1) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND ('1914005276'))) AND (((rt0.c1)+(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(rt0.c2 AS BLOB)))) ORDER BY ((((rt0.c2) NOT NULL)) IS FALSE) ASC, ((((rt0.c1) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND ('1914005276'))) AND (((rt0.c1)+(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1, rt0 WHERE (rtreenode(2.058053389E9, CAST(t1.c2 AS INTEGER))) ORDER BY IFNULL(((rt0.c1)>>(rt0.c2)), CAST(rt0.c1 AS INTEGER))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rtreenode(2.058053389E9, CAST(t1.c2 AS INTEGER))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY IFNULL(((rt0.c1)>>(rt0.c2)), CAST(rt0.c1 AS INTEGER))  NULLS LAST);
SELECT ALL * FROM vt0, t1, rt0 WHERE (rtreenode(2.058053389E9, CAST(t1.c2 AS INTEGER))) ORDER BY IFNULL(((rt0.c1)>>(rt0.c2)), CAST(rt0.c1 AS INTEGER))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rtreenode(2.058053389E9, CAST(t1.c2 AS INTEGER))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY IFNULL(((rt0.c1)>>(rt0.c2)), CAST(rt0.c1 AS INTEGER))  NULLS LAST);
SELECT ALL * FROM vt0, t1, rt0 WHERE (rtreenode(2.058053389E9, CAST(t1.c2 AS INTEGER))) ORDER BY IFNULL(((rt0.c1)>>(rt0.c2)), CAST(rt0.c1 AS INTEGER))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((9.57017206E8)OR(t1.c0 COLLATE NOCASE)))OR(((rt0.c2)|(rt0.c0)))) RIGHT OUTER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE t1.c62 END  WHEN '-586931939' THEN 1.63161941E8 END WHERE ((LOWER(DISTINCT rt0.c0) IN (((')vi]I') NOT NULL)))) ORDER BY ((t1.c62)<(t1.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((LOWER(DISTINCT rt0.c0) IN (((')vi]I') NOT NULL)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((((9.57017206E8)OR(t1.c0 COLLATE NOCASE)))OR(((rt0.c2)|(rt0.c0)))) RIGHT OUTER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE t1.c62 END  WHEN '-586931939' THEN 1.63161941E8 END ORDER BY ((t1.c62)<(t1.c2)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((9.57017206E8)OR(t1.c0 COLLATE NOCASE)))OR(((rt0.c2)|(rt0.c0)))) RIGHT OUTER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE t1.c62 END  WHEN '-586931939' THEN 1.63161941E8 END WHERE ((LOWER(DISTINCT rt0.c0) IN (((')vi]I') NOT NULL)))) ORDER BY ((t1.c62)<(t1.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((LOWER(DISTINCT rt0.c0) IN (((')vi]I') NOT NULL)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((((9.57017206E8)OR(t1.c0 COLLATE NOCASE)))OR(((rt0.c2)|(rt0.c0)))) RIGHT OUTER JOIN rt0 ON CASE CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE t1.c62 END  WHEN '-586931939' THEN 1.63161941E8 END ORDER BY ((t1.c62)<(t1.c2)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt0 WHERE (TOTAL_CHANGES()) ORDER BY (((~ (NULL))) BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c2))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0 ORDER BY (((~ (NULL))) BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c2))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TOTAL_CHANGES()) ORDER BY (((~ (NULL))) BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c2))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0 ORDER BY (((~ (NULL))) BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c2))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TOTAL_CHANGES()) ORDER BY (((~ (NULL))) BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c2))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (RTRIM(CAST(vt0.c0 AS BLOB))) ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((((vt0.c0)OR(rt0.c2)))AND(t1.c62)) ELSE ((x'') NOT BETWEEN (vt0.c0) AND (t1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((RTRIM(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((((vt0.c0)OR(rt0.c2)))AND(t1.c62)) ELSE ((x'') NOT BETWEEN (vt0.c0) AND (t1.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (RTRIM(CAST(vt0.c0 AS BLOB))) ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((((vt0.c0)OR(rt0.c2)))AND(t1.c62)) ELSE ((x'') NOT BETWEEN (vt0.c0) AND (t1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((RTRIM(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((((vt0.c0)OR(rt0.c2)))AND(t1.c62)) ELSE ((x'') NOT BETWEEN (vt0.c0) AND (t1.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (RTRIM(CAST(vt0.c0 AS BLOB))) ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((((vt0.c0)OR(rt0.c2)))AND(t1.c62)) ELSE ((x'') NOT BETWEEN (vt0.c0) AND (t1.c2)) END  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE ((((vt0.c0, t1.c62, 6.83800449E8)) BETWEEN (((((vt0.c0, t1.c2, t1.c62))<((t1.c0, vt0.c0, t1.c0))), ((t1.c62) NOT BETWEEN (t1.c0) AND (0.40209095326166266)), (vt0.c0 IN ()))) AND ((((t1.c2)&(t1.c62)), ('' IN (t1.c0)), CASE WHEN t1.c2 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 END)))) ORDER BY vt0.c0, ((((t1.c62)<<(vt0.c0))) IS FALSE) ASC, ((TYPEOF(t1.c2))IS NOT((((t1.c2, t1.c62, 'X(6uH<')) NOT BETWEEN (('', vt0.c0, t1.c62)) AND ((t1.c0, t1.c62, t1.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t1.c62, 6.83800449E8)) BETWEEN (((((vt0.c0, t1.c2, t1.c62))<((t1.c0, vt0.c0, t1.c0))), ((t1.c62) NOT BETWEEN (t1.c0) AND (0.40209095326166266)), (vt0.c0 IN ()))) AND ((((t1.c2)&(t1.c62)), ('' IN (t1.c0)), CASE WHEN t1.c2 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 END)))) IS TRUE)  as count FROM t1, vt0 ORDER BY vt0.c0, ((((t1.c62)<<(vt0.c0))) IS FALSE) ASC, ((TYPEOF(t1.c2))IS NOT((((t1.c2, t1.c62, 'X(6uH<')) NOT BETWEEN (('', vt0.c0, t1.c62)) AND ((t1.c0, t1.c62, t1.c2))))) ASC  NULLS LAST);
SELECT * FROM t1, vt0 WHERE ((((vt0.c0, t1.c62, 6.83800449E8)) BETWEEN (((((vt0.c0, t1.c2, t1.c62))<((t1.c0, vt0.c0, t1.c0))), ((t1.c62) NOT BETWEEN (t1.c0) AND (0.40209095326166266)), (vt0.c0 IN ()))) AND ((((t1.c2)&(t1.c62)), ('' IN (t1.c0)), CASE WHEN t1.c2 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 END)))) ORDER BY vt0.c0, ((((t1.c62)<<(vt0.c0))) IS FALSE) ASC, ((TYPEOF(t1.c2))IS NOT((((t1.c2, t1.c62, 'X(6uH<')) NOT BETWEEN (('', vt0.c0, t1.c62)) AND ((t1.c0, t1.c62, t1.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t1.c62, 6.83800449E8)) BETWEEN (((((vt0.c0, t1.c2, t1.c62))<((t1.c0, vt0.c0, t1.c0))), ((t1.c62) NOT BETWEEN (t1.c0) AND (0.40209095326166266)), (vt0.c0 IN ()))) AND ((((t1.c2)&(t1.c62)), ('' IN (t1.c0)), CASE WHEN t1.c2 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 END)))) IS TRUE)  as count FROM t1, vt0 ORDER BY vt0.c0, ((((t1.c62)<<(vt0.c0))) IS FALSE) ASC, ((TYPEOF(t1.c2))IS NOT((((t1.c2, t1.c62, 'X(6uH<')) NOT BETWEEN (('', vt0.c0, t1.c62)) AND ((t1.c0, t1.c62, t1.c2))))) ASC  NULLS LAST);
SELECT * FROM t1, vt0 WHERE ((((vt0.c0, t1.c62, 6.83800449E8)) BETWEEN (((((vt0.c0, t1.c2, t1.c62))<((t1.c0, vt0.c0, t1.c0))), ((t1.c62) NOT BETWEEN (t1.c0) AND (0.40209095326166266)), (vt0.c0 IN ()))) AND ((((t1.c2)&(t1.c62)), ('' IN (t1.c0)), CASE WHEN t1.c2 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 END)))) ORDER BY vt0.c0, ((((t1.c62)<<(vt0.c0))) IS FALSE) ASC, ((TYPEOF(t1.c2))IS NOT((((t1.c2, t1.c62, 'X(6uH<')) NOT BETWEEN (('', vt0.c0, t1.c62)) AND ((t1.c0, t1.c62, t1.c2))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE ((((((t1.c0)OR(vt0.c0)))AND(t1.c2)) IN (x''))) ORDER BY CAST(t1.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)OR(vt0.c0)))AND(t1.c2)) IN (x''))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY CAST(t1.c0 AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE ((((((t1.c0)OR(vt0.c0)))AND(t1.c2)) IN (x''))) ORDER BY CAST(t1.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)OR(vt0.c0)))AND(t1.c2)) IN (x''))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY CAST(t1.c0 AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE ((((((t1.c0)OR(vt0.c0)))AND(t1.c2)) IN (x''))) ORDER BY CAST(t1.c0 AS NUMERIC) ASC;
SELECT ALL * FROM vt0 INNER JOIN t1 ON 'Ij' WHERE (((vt0.c0 COLLATE BINARY)==(((t1.c2) NOT BETWEEN ('TRUE') AND (t1.c2))))) ORDER BY ((((t1.c62 COLLATE BINARY)AND((((t1.c62, t1.c62, vt0.c0))<=((t1.c2, vt0.c0, t1.c62))))))AND(((t1.c62) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)==(((t1.c2) NOT BETWEEN ('TRUE') AND (t1.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON 'Ij' ORDER BY ((((t1.c62 COLLATE BINARY)AND((((t1.c62, t1.c62, vt0.c0))<=((t1.c2, vt0.c0, t1.c62))))))AND(((t1.c62) IS FALSE))));
SELECT ALL * FROM vt0 INNER JOIN t1 ON 'Ij' WHERE (((vt0.c0 COLLATE BINARY)==(((t1.c2) NOT BETWEEN ('TRUE') AND (t1.c2))))) ORDER BY ((((t1.c62 COLLATE BINARY)AND((((t1.c62, t1.c62, vt0.c0))<=((t1.c2, vt0.c0, t1.c62))))))AND(((t1.c62) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)==(((t1.c2) NOT BETWEEN ('TRUE') AND (t1.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON 'Ij' ORDER BY ((((t1.c62 COLLATE BINARY)AND((((t1.c62, t1.c62, vt0.c0))<=((t1.c2, vt0.c0, t1.c62))))))AND(((t1.c62) IS FALSE))));
SELECT ALL * FROM vt0 INNER JOIN t1 ON 'Ij' WHERE (((vt0.c0 COLLATE BINARY)==(((t1.c2) NOT BETWEEN ('TRUE') AND (t1.c2))))) ORDER BY ((((t1.c62 COLLATE BINARY)AND((((t1.c62, t1.c62, vt0.c0))<=((t1.c2, vt0.c0, t1.c62))))))AND(((t1.c62) IS FALSE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-1667126777') ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST, ((CASE WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN '-1655392661' THEN rt0.c2 WHEN ')#8Y' THEN rt0.c1 ELSE rt0.c0 END) NOT NULL)  NULLS FIRST, ((((rt0.c0) IS TRUE)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1667126777') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST, ((CASE WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN '-1655392661' THEN rt0.c2 WHEN ')#8Y' THEN rt0.c1 ELSE rt0.c0 END) NOT NULL)  NULLS FIRST, ((((rt0.c0) IS TRUE)) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-1667126777') ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST, ((CASE WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN '-1655392661' THEN rt0.c2 WHEN ')#8Y' THEN rt0.c1 ELSE rt0.c0 END) NOT NULL)  NULLS FIRST, ((((rt0.c0) IS TRUE)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1667126777') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST, ((CASE WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN '-1655392661' THEN rt0.c2 WHEN ')#8Y' THEN rt0.c1 ELSE rt0.c0 END) NOT NULL)  NULLS FIRST, ((((rt0.c0) IS TRUE)) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-1667126777') ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST, ((CASE WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN '-1655392661' THEN rt0.c2 WHEN ')#8Y' THEN rt0.c1 ELSE rt0.c0 END) NOT NULL)  NULLS FIRST, ((((rt0.c0) IS TRUE)) IS TRUE) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (x'14b5') ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'14b5') IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'14b5') ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'14b5') IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'14b5') ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL) ASC  NULLS LAST;
SELECT * FROM vt0, t1, rt0 WHERE ((((((vt0.c0 IN ()))OR((+ (t1.c62)))))OR(CAST(0.08653554945549957 AS REAL)))) ORDER BY ((t1.c62) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR((+ (t1.c62)))))OR(CAST(0.08653554945549957 AS REAL)))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY ((t1.c62) IS FALSE));
SELECT * FROM vt0, t1, rt0 WHERE ((((((vt0.c0 IN ()))OR((+ (t1.c62)))))OR(CAST(0.08653554945549957 AS REAL)))) ORDER BY ((t1.c62) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR((+ (t1.c62)))))OR(CAST(0.08653554945549957 AS REAL)))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY ((t1.c62) IS FALSE));
SELECT * FROM vt0, t1, rt0 WHERE ((((((vt0.c0 IN ()))OR((+ (t1.c62)))))OR(CAST(0.08653554945549957 AS REAL)))) ORDER BY ((t1.c62) IS FALSE);
SELECT * FROM t1 WHERE (CAST((NOT (t1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t1.c2)) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST((NOT (t1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t1.c2)) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST((NOT (t1.c2)) AS INTEGER));
SELECT * FROM t1 WHERE ((((t1.c2))<((COALESCE(t1.c62, t1.c2, t1.c0, t1.c2))))) ORDER BY ((t1.c62 COLLATE BINARY)%((((t1.c2))<((t1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2))<((COALESCE(t1.c62, t1.c2, t1.c0, t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c62 COLLATE BINARY)%((((t1.c2))<((t1.c0))))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c2))<((COALESCE(t1.c62, t1.c2, t1.c0, t1.c2))))) ORDER BY ((t1.c62 COLLATE BINARY)%((((t1.c2))<((t1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2))<((COALESCE(t1.c62, t1.c2, t1.c0, t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c62 COLLATE BINARY)%((((t1.c2))<((t1.c0))))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c2))<((COALESCE(t1.c62, t1.c2, t1.c0, t1.c2))))) ORDER BY ((t1.c62 COLLATE BINARY)%((((t1.c2))<((t1.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((('-0.0') NOT NULL)) NOT NULL) WHERE (((((NULL)AND(rt0.c2 COLLATE NOCASE)))OR((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt0.c2 COLLATE NOCASE)))OR((t1.c2 IN ())))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((('-0.0') NOT NULL)) NOT NULL));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((('-0.0') NOT NULL)) NOT NULL) WHERE (((((NULL)AND(rt0.c2 COLLATE NOCASE)))OR((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt0.c2 COLLATE NOCASE)))OR((t1.c2 IN ())))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((('-0.0') NOT NULL)) NOT NULL));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((('-0.0') NOT NULL)) NOT NULL) WHERE (((((NULL)AND(rt0.c2 COLLATE NOCASE)))OR((t1.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (json_array_length(((rt0.c1)||(t1.c2))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c1)||(t1.c2)))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (json_array_length(((rt0.c1)||(t1.c2))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c1)||(t1.c2)))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (json_array_length(((rt0.c1)||(t1.c2))));
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (CAST(t1.c0 AS REAL) COLLATE RTRIM) ORDER BY LIKELIHOOD('-1605621587', 0.5878659104210409)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED, t1, rt0 ORDER BY LIKELIHOOD('-1605621587', 0.5878659104210409)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (CAST(t1.c0 AS REAL) COLLATE RTRIM) ORDER BY LIKELIHOOD('-1605621587', 0.5878659104210409)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED, t1, rt0 ORDER BY LIKELIHOOD('-1605621587', 0.5878659104210409)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (CAST(t1.c0 AS REAL) COLLATE RTRIM) ORDER BY LIKELIHOOD('-1605621587', 0.5878659104210409)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (UNLIKELY(((0.8367213405912016)IS NOT(t1.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((0.8367213405912016)IS NOT(t1.c2)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (UNLIKELY(((0.8367213405912016)IS NOT(t1.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((0.8367213405912016)IS NOT(t1.c2)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (UNLIKELY(((0.8367213405912016)IS NOT(t1.c2))));
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON ((((t1.c62))>((rt0.c1))) IN ((('1845066962') BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN vt0 ON CAST(((t1.c62)IS(NULL)) AS REAL) WHERE (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) BETWEEN (((t1.c62) IS TRUE)) AND (((t1.c0)-(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) BETWEEN (((t1.c62) IS TRUE)) AND (((t1.c0)-(NULL))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((((t1.c62))>((rt0.c1))) IN ((('1845066962') BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN vt0 ON CAST(((t1.c62)IS(NULL)) AS REAL));
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON ((((t1.c62))>((rt0.c1))) IN ((('1845066962') BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN vt0 ON CAST(((t1.c62)IS(NULL)) AS REAL) WHERE (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) BETWEEN (((t1.c62) IS TRUE)) AND (((t1.c0)-(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) BETWEEN (((t1.c62) IS TRUE)) AND (((t1.c0)-(NULL))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((((t1.c62))>((rt0.c1))) IN ((('1845066962') BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN vt0 ON CAST(((t1.c62)IS(NULL)) AS REAL));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((NOT (t1.c62))) ORDER BY ((((t1.c0 IN (rt0.c2, rt0.c2)), t1.c62, (((rt0.c0, t1.c62, rt0.c1)) NOT BETWEEN ((t1.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, t1.c62, rt0.c0)))))=(((t1.c62 IN (t1.c2)), (((rt0.c1, rt0.c2, t1.c2))==((rt0.c0, rt0.c2, NULL))), ((((((((t1.c0)AND(t1.c2)))OR('GFh>X')))OR(NULL)))OR(t1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c62))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((t1.c0 IN (rt0.c2, rt0.c2)), t1.c62, (((rt0.c0, t1.c62, rt0.c1)) NOT BETWEEN ((t1.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, t1.c62, rt0.c0)))))=(((t1.c62 IN (t1.c2)), (((rt0.c1, rt0.c2, t1.c2))=((rt0.c0, rt0.c2, NULL))), ((((((((t1.c0)AND(t1.c2)))OR('GFh>X')))OR(NULL)))OR(t1.c2))))) ASC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((NOT (t1.c62))) ORDER BY ((((t1.c0 IN (rt0.c2, rt0.c2)), t1.c62, (((rt0.c0, t1.c62, rt0.c1)) NOT BETWEEN ((t1.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, t1.c62, rt0.c0)))))=(((t1.c62 IN (t1.c2)), (((rt0.c1, rt0.c2, t1.c2))==((rt0.c0, rt0.c2, NULL))), ((((((((t1.c0)AND(t1.c2)))OR('GFh>X')))OR(NULL)))OR(t1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c62))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((t1.c0 IN (rt0.c2, rt0.c2)), t1.c62, (((rt0.c0, t1.c62, rt0.c1)) NOT BETWEEN ((t1.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, t1.c62, rt0.c0)))))=(((t1.c62 IN (t1.c2)), (((rt0.c1, rt0.c2, t1.c2))=((rt0.c0, rt0.c2, NULL))), ((((((((t1.c0)AND(t1.c2)))OR('GFh>X')))OR(NULL)))OR(t1.c2))))) ASC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((NOT (t1.c62))) ORDER BY ((((t1.c0 IN (rt0.c2, rt0.c2)), t1.c62, (((rt0.c0, t1.c62, rt0.c1)) NOT BETWEEN ((t1.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, t1.c62, rt0.c0)))))=(((t1.c62 IN (t1.c2)), (((rt0.c1, rt0.c2, t1.c2))==((rt0.c0, rt0.c2, NULL))), ((((((((t1.c0)AND(t1.c2)))OR('GFh>X')))OR(NULL)))OR(t1.c2))))) ASC;
SELECT * FROM t1 WHERE (((t1.c0)||((NOT (t1.c62))))) ORDER BY (t1.c0 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((t1.c0)||((NOT (t1.c62))))) IS TRUE)  as count FROM t1 ORDER BY (t1.c0 IN ()) COLLATE NOCASE);
SELECT * FROM t1 WHERE (((t1.c0)||((NOT (t1.c62))))) ORDER BY (t1.c0 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((t1.c0)||((NOT (t1.c62))))) IS TRUE)  as count FROM t1 ORDER BY (t1.c0 IN ()) COLLATE NOCASE);
SELECT * FROM t1 WHERE (((t1.c0)||((NOT (t1.c62))))) ORDER BY (t1.c0 IN ()) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((((rt0.c1, rt0.c1, t1.c62)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (t1.c2)), rt0.c2 COLLATE BINARY, t1.c0)) AND ((CASE t1.c62  WHEN t1.c2 THEN vt0.c0 ELSE rt0.c2 END, NULL, 0.4594474881098174))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, t1.c62)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (t1.c2)), rt0.c2 COLLATE BINARY, t1.c0)) AND ((CASE t1.c62  WHEN t1.c2 THEN vt0.c0 ELSE rt0.c2 END, NULL, 0.4594474881098174)))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((((rt0.c1, rt0.c1, t1.c62)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (t1.c2)), rt0.c2 COLLATE BINARY, t1.c0)) AND ((CASE t1.c62  WHEN t1.c2 THEN vt0.c0 ELSE rt0.c2 END, NULL, 0.4594474881098174))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, t1.c62)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (t1.c2)), rt0.c2 COLLATE BINARY, t1.c0)) AND ((CASE t1.c62  WHEN t1.c2 THEN vt0.c0 ELSE rt0.c2 END, NULL, 0.4594474881098174)))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((((rt0.c1, rt0.c1, t1.c62)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (t1.c2)), rt0.c2 COLLATE BINARY, t1.c0)) AND ((CASE t1.c62  WHEN t1.c2 THEN vt0.c0 ELSE rt0.c2 END, NULL, 0.4594474881098174))));
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(t1.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS TEXT)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(t1.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS TEXT)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(t1.c0 AS TEXT));
SELECT COUNT(*) FROM t1 WHERE (((LAST_INSERT_ROWID()) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((LAST_INSERT_ROWID()) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((LAST_INSERT_ROWID()) NOT NULL));
SELECT ALL * FROM vt0, t1 WHERE ((((((t1.c2)GLOB(t1.c62)), ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c62)), ((t1.c62) IS TRUE)))<>((0X29eeeb5, (((t1.c62)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((t1.c62)AND(t1.c0)))AND(t1.c2)))))) ORDER BY (+ ((((t1.c0, t1.c2, x'')) NOT BETWEEN ((t1.c62, t1.c2, t1.c2)) AND ((t1.c2, t1.c2, vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c2)GLOB(t1.c62)), ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c62)), ((t1.c62) IS TRUE)))<>((0x29eeeb5, (((t1.c62)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((t1.c62)AND(t1.c0)))AND(t1.c2)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (+ ((((t1.c0, t1.c2, x'')) NOT BETWEEN ((t1.c62, t1.c2, t1.c2)) AND ((t1.c2, t1.c2, vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t1 WHERE ((((((t1.c2)GLOB(t1.c62)), ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c62)), ((t1.c62) IS TRUE)))<>((0X29eeeb5, (((t1.c62)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((t1.c62)AND(t1.c0)))AND(t1.c2)))))) ORDER BY (+ ((((t1.c0, t1.c2, x'')) NOT BETWEEN ((t1.c62, t1.c2, t1.c2)) AND ((t1.c2, t1.c2, vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c2)GLOB(t1.c62)), ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c62)), ((t1.c62) IS TRUE)))<>((0x29eeeb5, (((t1.c62)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((t1.c62)AND(t1.c0)))AND(t1.c2)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (+ ((((t1.c0, t1.c2, x'')) NOT BETWEEN ((t1.c62, t1.c2, t1.c2)) AND ((t1.c2, t1.c2, vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t1 WHERE ((((((t1.c2)GLOB(t1.c62)), ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c62)), ((t1.c62) IS TRUE)))<>((0X29eeeb5, (((t1.c62)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((t1.c62)AND(t1.c0)))AND(t1.c2)))))) ORDER BY (+ ((((t1.c0, t1.c2, x'')) NOT BETWEEN ((t1.c62, t1.c2, t1.c2)) AND ((t1.c2, t1.c2, vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY NULL  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))/(rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))/(rt0.c2)) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY NULL  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))/(rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))/(rt0.c2)) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY NULL  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))/(rt0.c2)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((rt0.c0, t1.c2, t1.c2)) BETWEEN ((((((((((((((t1.c0)AND(t1.c62)))OR(vt0.c0)))AND(t1.c0)))OR(NULL)))AND(t1.c0)))AND(rt0.c1)), CAST(t1.c2 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 0.7122029561265472 END)) AND (((+ (t1.c62)), x'', STRFTIME(rt0.c1, vt0.c0, rt0.c2))))) ORDER BY (((t1.c62, t1.c62, t1.c2, t1.c0, t1.c62)) BETWEEN ((((rt0.c1) NOTNULL), t1.c0 COLLATE NOCASE, ((rt0.c0)LIKE(t1.c2)), (('') NOTNULL), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) AND (('-832759350', CASE rt0.c0  WHEN t1.c62 THEN x'2a78' ELSE rt0.c0 END, TRIM(rt0.c2, t1.c62), ((vt0.c0) NOTNULL), ((rt0.c1)<(t1.c62))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, t1.c2, t1.c2)) BETWEEN ((((((((((((((t1.c0)AND(t1.c62)))OR(vt0.c0)))AND(t1.c0)))OR(NULL)))AND(t1.c0)))AND(rt0.c1)), CAST(t1.c2 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 0.7122029561265472 END)) AND (((+ (t1.c62)), x'', STRFTIME(rt0.c1, vt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY (((t1.c62, t1.c62, t1.c2, t1.c0, t1.c62)) BETWEEN ((((rt0.c1) NOTNULL), t1.c0 COLLATE NOCASE, ((rt0.c0)LIKE(t1.c2)), (('') NOTNULL), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) AND (('-832759350', CASE rt0.c0  WHEN t1.c62 THEN x'2a78' ELSE rt0.c0 END, TRIM(rt0.c2, t1.c62), ((vt0.c0) NOTNULL), ((rt0.c1)<(t1.c62))))) ASC);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((rt0.c0, t1.c2, t1.c2)) BETWEEN ((((((((((((((t1.c0)AND(t1.c62)))OR(vt0.c0)))AND(t1.c0)))OR(NULL)))AND(t1.c0)))AND(rt0.c1)), CAST(t1.c2 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 0.7122029561265472 END)) AND (((+ (t1.c62)), x'', STRFTIME(rt0.c1, vt0.c0, rt0.c2))))) ORDER BY (((t1.c62, t1.c62, t1.c2, t1.c0, t1.c62)) BETWEEN ((((rt0.c1) NOTNULL), t1.c0 COLLATE NOCASE, ((rt0.c0)LIKE(t1.c2)), (('') NOTNULL), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) AND (('-832759350', CASE rt0.c0  WHEN t1.c62 THEN x'2a78' ELSE rt0.c0 END, TRIM(rt0.c2, t1.c62), ((vt0.c0) NOTNULL), ((rt0.c1)<(t1.c62))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, t1.c2, t1.c2)) BETWEEN ((((((((((((((t1.c0)AND(t1.c62)))OR(vt0.c0)))AND(t1.c0)))OR(NULL)))AND(t1.c0)))AND(rt0.c1)), CAST(t1.c2 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 0.7122029561265472 END)) AND (((+ (t1.c62)), x'', STRFTIME(rt0.c1, vt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY (((t1.c62, t1.c62, t1.c2, t1.c0, t1.c62)) BETWEEN ((((rt0.c1) NOTNULL), t1.c0 COLLATE NOCASE, ((rt0.c0)LIKE(t1.c2)), (('') NOTNULL), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) AND (('-832759350', CASE rt0.c0  WHEN t1.c62 THEN x'2a78' ELSE rt0.c0 END, TRIM(rt0.c2, t1.c62), ((vt0.c0) NOTNULL), ((rt0.c1)<(t1.c62))))) ASC);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((((rt0.c0, t1.c2, t1.c2)) BETWEEN ((((((((((((((t1.c0)AND(t1.c62)))OR(vt0.c0)))AND(t1.c0)))OR(NULL)))AND(t1.c0)))AND(rt0.c1)), CAST(t1.c2 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 0.7122029561265472 END)) AND (((+ (t1.c62)), x'', STRFTIME(rt0.c1, vt0.c0, rt0.c2))))) ORDER BY (((t1.c62, t1.c62, t1.c2, t1.c0, t1.c62)) BETWEEN ((((rt0.c1) NOTNULL), t1.c0 COLLATE NOCASE, ((rt0.c0)LIKE(t1.c2)), (('') NOTNULL), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) AND (('-832759350', CASE rt0.c0  WHEN t1.c62 THEN x'2a78' ELSE rt0.c0 END, TRIM(rt0.c2, t1.c62), ((vt0.c0) NOTNULL), ((rt0.c1)<(t1.c62))))) ASC;
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE (((((rt0.c0) ISNULL)) BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c1)) AND (((t1.c62)|(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c1)) AND (((t1.c62)|(rt0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1);
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE (((((rt0.c0) ISNULL)) BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c1)) AND (((t1.c62)|(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c1)) AND (((t1.c62)|(rt0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1);
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE (((((rt0.c0) ISNULL)) BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c1)) AND (((t1.c62)|(rt0.c1)))));
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((NOT ((((t1.c62))!=((t1.c62)))))) ORDER BY (- (CAST(rt0.c2 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((t1.c62))<>((t1.c62)))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (- (CAST(rt0.c2 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((NOT ((((t1.c62))!=((t1.c62)))))) ORDER BY (- (CAST(rt0.c2 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((t1.c62))<>((t1.c62)))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (- (CAST(rt0.c2 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((NOT ((((t1.c62))!=((t1.c62)))))) ORDER BY (- (CAST(rt0.c2 AS REAL)))  NULLS FIRST;
SELECT * FROM rt0, vt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE (NULL);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (t1.c62);
SELECT SUM(count) FROM (SELECT ((t1.c62) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (t1.c62);
SELECT SUM(count) FROM (SELECT ((t1.c62) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (t1.c62);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((rt0.c2) ISNULL)))<=(((((t1.c0, rt0.c1, t1.c62))>=((t1.c2, rt0.c2, rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) ISNULL)))<=(((((t1.c0, rt0.c1, t1.c62))>=((t1.c2, rt0.c2, rt0.c0))))))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((rt0.c2) ISNULL)))<=(((((t1.c0, rt0.c1, t1.c62))>=((t1.c2, rt0.c2, rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) ISNULL)))<=(((((t1.c0, rt0.c1, t1.c62))>=((t1.c2, rt0.c2, rt0.c0))))))) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((rt0.c2) ISNULL)))<=(((((t1.c0, rt0.c1, t1.c62))>=((t1.c2, rt0.c2, rt0.c0)))))));
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (CAST(((t1.c2)>=(t1.c62)) AS BLOB)) ORDER BY (- (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))), ((((vt0.c0) NOTNULL))||(((t1.c62)OR(NULL))))  NULLS LAST, (((((~ (t1.c62)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c2)>=(t1.c62)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY (- (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))), ((((vt0.c0) NOTNULL))||(((t1.c62)OR(NULL))))  NULLS LAST, (((((~ (t1.c62)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (CAST(((t1.c2)>=(t1.c62)) AS BLOB)) ORDER BY (- (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))), ((((vt0.c0) NOTNULL))||(((t1.c62)OR(NULL))))  NULLS LAST, (((((~ (t1.c62)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c2)>=(t1.c62)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY (- (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))), ((((vt0.c0) NOTNULL))||(((t1.c62)OR(NULL))))  NULLS LAST, (((((~ (t1.c62)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (CAST(((t1.c2)>=(t1.c62)) AS BLOB)) ORDER BY (- (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))), ((((vt0.c0) NOTNULL))||(((t1.c62)OR(NULL))))  NULLS LAST, (((((~ (t1.c62)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((t1.c0 IN ())) IS FALSE) LEFT OUTER JOIN vt0 ON CAST(((t1.c0)<<(t1.c0)) AS TEXT) WHERE (((CAST(t1.c62 AS NUMERIC)) NOTNULL)) ORDER BY SUBSTR(rt0.c1 COLLATE BINARY, ((rt0.c1) BETWEEN (t1.c2) AND (NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c62 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (((t1.c0 IN ())) IS FALSE) LEFT OUTER JOIN vt0 ON CAST(((t1.c0)<<(t1.c0)) AS TEXT) ORDER BY SUBSTR(rt0.c1 COLLATE BINARY, ((rt0.c1) BETWEEN (t1.c2) AND (NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((t1.c0 IN ())) IS FALSE) LEFT OUTER JOIN vt0 ON CAST(((t1.c0)<<(t1.c0)) AS TEXT) WHERE (((CAST(t1.c62 AS NUMERIC)) NOTNULL)) ORDER BY SUBSTR(rt0.c1 COLLATE BINARY, ((rt0.c1) BETWEEN (t1.c2) AND (NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c62 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (((t1.c0 IN ())) IS FALSE) LEFT OUTER JOIN vt0 ON CAST(((t1.c0)<<(t1.c0)) AS TEXT) ORDER BY SUBSTR(rt0.c1 COLLATE BINARY, ((rt0.c1) BETWEEN (t1.c2) AND (NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((t1.c0 IN ())) IS FALSE) LEFT OUTER JOIN vt0 ON CAST(((t1.c0)<<(t1.c0)) AS TEXT) WHERE (((CAST(t1.c62 AS NUMERIC)) NOTNULL)) ORDER BY SUBSTR(rt0.c1 COLLATE BINARY, ((rt0.c1) BETWEEN (t1.c2) AND (NULL)))  NULLS LAST;
SELECT ALL * FROM rt0, t1, vt0 WHERE (((rt0.c0 COLLATE NOCASE)IS NOT(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)IS NOT(rt0.c0))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE (((rt0.c0 COLLATE NOCASE)IS NOT(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)IS NOT(rt0.c0))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE (((rt0.c0 COLLATE NOCASE)IS NOT(rt0.c0)));
SELECT ALL * FROM vt0 WHERE ('735089720') ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('735089720') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ('735089720') ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('735089720') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ('735089720') ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c62) NOT BETWEEN (NULL) AND ('896804081'))) NOT BETWEEN (((t1.c2)IS(t1.c62))) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c62) NOT BETWEEN (NULL) AND ('896804081'))) NOT BETWEEN (((t1.c2)IS(t1.c62))) AND (t1.c0))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c62) NOT BETWEEN (NULL) AND ('896804081'))) NOT BETWEEN (((t1.c2)IS(t1.c62))) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c62) NOT BETWEEN (NULL) AND ('896804081'))) NOT BETWEEN (((t1.c2)IS(t1.c62))) AND (t1.c0))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c62) NOT BETWEEN (NULL) AND ('896804081'))) NOT BETWEEN (((t1.c2)IS(t1.c62))) AND (t1.c0)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ ((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0 IN ())))>=((CAST(rt0.c1 AS TEXT))))) ORDER BY (CASE rt0.c0  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ())))>=((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c0  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0 IN ())))>=((CAST(rt0.c1 AS TEXT))))) ORDER BY (CASE rt0.c0  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ())))>=((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c0  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0 IN ())))>=((CAST(rt0.c1 AS TEXT))))) ORDER BY (CASE rt0.c0  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((((0.030251384084442945)OR(t1.c0)))AND(rt0.c2)))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c0))) ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.030251384084442945)OR(t1.c0)))AND(rt0.c2)))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c0))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((((0.030251384084442945)OR(t1.c0)))AND(rt0.c2)))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c0))) ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.030251384084442945)OR(t1.c0)))AND(rt0.c2)))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c0))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((((0.030251384084442945)OR(t1.c0)))AND(rt0.c2)))OR(rt0.c2 COLLATE BINARY)))OR(rt0.c0))) ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (TRIM(DISTINCT rt0.c2 COLLATE BINARY, rt0.c1 COLLATE RTRIM)) ORDER BY ((((rt0.c0)%(rt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c2 COLLATE BINARY, rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)%(rt0.c2))) IS FALSE));
SELECT ALL * FROM vt0, rt0 WHERE (TRIM(DISTINCT rt0.c2 COLLATE BINARY, rt0.c1 COLLATE RTRIM)) ORDER BY ((((rt0.c0)%(rt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c2 COLLATE BINARY, rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)%(rt0.c2))) IS FALSE));
SELECT ALL * FROM vt0, rt0 WHERE (TRIM(DISTINCT rt0.c2 COLLATE BINARY, rt0.c1 COLLATE RTRIM)) ORDER BY ((((rt0.c0)%(rt0.c2))) IS FALSE);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((((((((((rt0.c2)<(t1.c62)))OR(CASE WHEN 0.8628546861183576 THEN 0.6079312630847682 ELSE t1.c62 END)))AND(LIKELIHOOD(t1.c0, 0.24071482445953862))))OR(((rt0.c2) IS FALSE))))AND(CAST(rt0.c0 AS REAL)))) ORDER BY (((((NOT (rt0.c0)))AND(((rt0.c2)<>('tL')))))OR(((t1.c2) NOT BETWEEN (t1.c2) AND ('39131155')))) ASC  NULLS FIRST, (((+ (rt0.c2))) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND (((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)<(t1.c62)))OR(CASE WHEN 0.8628546861183576 THEN 0.6079312630847682 ELSE t1.c62 END)))AND(LIKELIHOOD(t1.c0, 0.24071482445953862))))OR(((rt0.c2) IS FALSE))))AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((((NOT (rt0.c0)))AND(((rt0.c2)<>('tL')))))OR(((t1.c2) NOT BETWEEN (t1.c2) AND ('39131155')))) ASC  NULLS FIRST, (((+ (rt0.c2))) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND (((vt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((((((((((rt0.c2)<(t1.c62)))OR(CASE WHEN 0.8628546861183576 THEN 0.6079312630847682 ELSE t1.c62 END)))AND(LIKELIHOOD(t1.c0, 0.24071482445953862))))OR(((rt0.c2) IS FALSE))))AND(CAST(rt0.c0 AS REAL)))) ORDER BY (((((NOT (rt0.c0)))AND(((rt0.c2)<>('tL')))))OR(((t1.c2) NOT BETWEEN (t1.c2) AND ('39131155')))) ASC  NULLS FIRST, (((+ (rt0.c2))) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND (((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)<(t1.c62)))OR(CASE WHEN 0.8628546861183576 THEN 0.6079312630847682 ELSE t1.c62 END)))AND(LIKELIHOOD(t1.c0, 0.24071482445953862))))OR(((rt0.c2) IS FALSE))))AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((((NOT (rt0.c0)))AND(((rt0.c2)<>('tL')))))OR(((t1.c2) NOT BETWEEN (t1.c2) AND ('39131155')))) ASC  NULLS FIRST, (((+ (rt0.c2))) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND (((vt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((((((((((rt0.c2)<(t1.c62)))OR(CASE WHEN 0.8628546861183576 THEN 0.6079312630847682 ELSE t1.c62 END)))AND(LIKELIHOOD(t1.c0, 0.24071482445953862))))OR(((rt0.c2) IS FALSE))))AND(CAST(rt0.c0 AS REAL)))) ORDER BY (((((NOT (rt0.c0)))AND(((rt0.c2)<>('tL')))))OR(((t1.c2) NOT BETWEEN (t1.c2) AND ('39131155')))) ASC  NULLS FIRST, (((+ (rt0.c2))) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND (((vt0.c0) ISNULL)))  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c2);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((t1.c2) ISNULL))>=((+ (rt0.c0)))) FULL OUTER JOIN t1 ON x'' WHERE ((t1.c2 IN ()) COLLATE RTRIM COLLATE RTRIM) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(t1.c0)) THEN ((rt0.c1) BETWEEN (t1.c2) AND (rt0.c1)) END DESC  NULLS FIRST, (('-9223372036854775808') NOT BETWEEN (((rt0.c1)LIKE(rt0.c1))) AND (('' IN ())));
SELECT SUM(count) FROM (SELECT ALL (((t1.c2 IN ()) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((t1.c2) ISNULL))>=((+ (rt0.c0)))) FULL OUTER JOIN t1 ON x'' ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(t1.c0)) THEN ((rt0.c1) BETWEEN (t1.c2) AND (rt0.c1)) END DESC  NULLS FIRST, (('-9223372036854775808') NOT BETWEEN (((rt0.c1)LIKE(rt0.c1))) AND (('' IN ()))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((t1.c2) ISNULL))>=((+ (rt0.c0)))) FULL OUTER JOIN t1 ON x'' WHERE ((t1.c2 IN ()) COLLATE RTRIM COLLATE RTRIM) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(t1.c0)) THEN ((rt0.c1) BETWEEN (t1.c2) AND (rt0.c1)) END DESC  NULLS FIRST, (('-9223372036854775808') NOT BETWEEN (((rt0.c1)LIKE(rt0.c1))) AND (('' IN ())));
SELECT SUM(count) FROM (SELECT ALL (((t1.c2 IN ()) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((t1.c2) ISNULL))>=((+ (rt0.c0)))) FULL OUTER JOIN t1 ON x'' ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(t1.c0)) THEN ((rt0.c1) BETWEEN (t1.c2) AND (rt0.c1)) END DESC  NULLS FIRST, (('-9223372036854775808') NOT BETWEEN (((rt0.c1)LIKE(rt0.c1))) AND (('' IN ()))));
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) ORDER BY (((NOT (vt0.c0)))OR(((vt0.c0)<>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))OR(((vt0.c0)!=(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) ORDER BY (((NOT (vt0.c0)))OR(((vt0.c0)<>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))OR(((vt0.c0)!=(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) ORDER BY (((NOT (vt0.c0)))OR(((vt0.c0)<>(vt0.c0)))) DESC;
SELECT ALL * FROM vt0, t1 WHERE (json_patch(x'53c6', ((t1.c62)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(x'53c6', ((t1.c62)>=(vt0.c0)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (json_patch(x'53c6', ((t1.c62)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(x'53c6', ((t1.c62)>=(vt0.c0)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN (((t1.c2, t1.c62, vt0.c0, t1.c0, rt0.c1)) BETWEEN ((x'', rt0.c1, rt0.c1, rt0.c1, rt0.c2)) AND ((t1.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c0))) END) ORDER BY (+ (((t1.c62)%(rt0.c2))))  NULLS FIRST, (((rt0.c0) BETWEEN (rt0.c0) AND (t1.c2)) IN ())  NULLS LAST, '1952117840' COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c1)) THEN (((t1.c2, t1.c62, vt0.c0, t1.c0, rt0.c1)) BETWEEN ((x'', rt0.c1, rt0.c1, rt0.c1, rt0.c2)) AND ((t1.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c0))) END) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY (+ (((t1.c62)%(rt0.c2))))  NULLS FIRST, (((rt0.c0) BETWEEN (rt0.c0) AND (t1.c2)) IN ())  NULLS LAST, '1952117840' COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN (((t1.c2, t1.c62, vt0.c0, t1.c0, rt0.c1)) BETWEEN ((x'', rt0.c1, rt0.c1, rt0.c1, rt0.c2)) AND ((t1.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c0))) END) ORDER BY (+ (((t1.c62)%(rt0.c2))))  NULLS FIRST, (((rt0.c0) BETWEEN (rt0.c0) AND (t1.c2)) IN ())  NULLS LAST, '1952117840' COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c1)) THEN (((t1.c2, t1.c62, vt0.c0, t1.c0, rt0.c1)) BETWEEN ((x'', rt0.c1, rt0.c1, rt0.c1, rt0.c2)) AND ((t1.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c0))) END) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY (+ (((t1.c62)%(rt0.c2))))  NULLS FIRST, (((rt0.c0) BETWEEN (rt0.c0) AND (t1.c2)) IN ())  NULLS LAST, '1952117840' COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN (((t1.c2, t1.c62, vt0.c0, t1.c0, rt0.c1)) BETWEEN ((x'', rt0.c1, rt0.c1, rt0.c1, rt0.c2)) AND ((t1.c0, rt0.c0, rt0.c2, vt0.c0, rt0.c0))) END) ORDER BY (+ (((t1.c62)%(rt0.c2))))  NULLS FIRST, (((rt0.c0) BETWEEN (rt0.c0) AND (t1.c2)) IN ())  NULLS LAST, '1952117840' COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON LIKELY('Rj') CROSS JOIN t1 ON ((((rt0.c0)+(rt0.c1))) IS TRUE) WHERE (((((((((t1.c2)OR(rt0.c2)))OR(t1.c62)))AND(((t1.c62)<(t1.c2)))))AND(((t1.c62)/(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c2)OR(rt0.c2)))OR(t1.c62)))AND(((t1.c62)<(t1.c2)))))AND(((t1.c62)/(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON LIKELY('Rj') CROSS JOIN t1 ON ((((rt0.c0)+(rt0.c1))) IS TRUE));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON LIKELY('Rj') CROSS JOIN t1 ON ((((rt0.c0)+(rt0.c1))) IS TRUE) WHERE (((((((((t1.c2)OR(rt0.c2)))OR(t1.c62)))AND(((t1.c62)<(t1.c2)))))AND(((t1.c62)/(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c2)OR(rt0.c2)))OR(t1.c62)))AND(((t1.c62)<(t1.c2)))))AND(((t1.c62)/(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON LIKELY('Rj') CROSS JOIN t1 ON ((((rt0.c0)+(rt0.c1))) IS TRUE));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON LIKELY('Rj') CROSS JOIN t1 ON ((((rt0.c0)+(rt0.c1))) IS TRUE) WHERE (((((((((t1.c2)OR(rt0.c2)))OR(t1.c62)))AND(((t1.c62)<(t1.c2)))))AND(((t1.c62)/(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((rt0.c0)>=(rt0.c2)) COLLATE RTRIM) ORDER BY t1.c0 DESC  NULLS LAST, (t1.c62 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>=(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY t1.c0 DESC  NULLS LAST, (t1.c62 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((rt0.c0)>=(rt0.c2)) COLLATE RTRIM) ORDER BY t1.c0 DESC  NULLS LAST, (t1.c62 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>=(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY t1.c0 DESC  NULLS LAST, (t1.c62 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((rt0.c0)>=(rt0.c2)) COLLATE RTRIM) ORDER BY t1.c0 DESC  NULLS LAST, (t1.c62 IN ()) DESC  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((NOT (vt0.c0)))>>((rt0.c0 IN (vt0.c0)))) RIGHT OUTER JOIN t1 ON ((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c62))), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c62)), (~ (vt0.c0))))<((highlight(t1.c0, t1.c62, rt0.c2, vt0.c0), t1.c2 COLLATE RTRIM, (((t1.c2, t1.c0, t1.c0)) BETWEEN ((t1.c62, NULL, t1.c2)) AND ((rt0.c1, t1.c62, t1.c0)))))) WHERE (CAST(t1.c0 AS NUMERIC)) ORDER BY CASE ((t1.c62) BETWEEN (rt0.c2) AND (vt0.c0))  WHEN (~ (rt0.c0)) THEN ((((((((rt0.c1)OR(rt0.c0)))AND(t1.c2)))OR(vt0.c0)))OR(t1.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((NOT (vt0.c0)))>>((rt0.c0 IN (vt0.c0)))) RIGHT OUTER JOIN t1 ON ((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c62))), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c62)), (~ (vt0.c0))))<((highlight(t1.c0, t1.c62, rt0.c2, vt0.c0), t1.c2 COLLATE RTRIM, (((t1.c2, t1.c0, t1.c0)) BETWEEN ((t1.c62, NULL, t1.c2)) AND ((rt0.c1, t1.c62, t1.c0)))))) ORDER BY CASE ((t1.c62) BETWEEN (rt0.c2) AND (vt0.c0))  WHEN (~ (rt0.c0)) THEN ((((((((rt0.c1)OR(rt0.c0)))AND(t1.c2)))OR(vt0.c0)))OR(t1.c0)) END);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((NOT (vt0.c0)))>>((rt0.c0 IN (vt0.c0)))) RIGHT OUTER JOIN t1 ON ((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c62))), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c62)), (~ (vt0.c0))))<((highlight(t1.c0, t1.c62, rt0.c2, vt0.c0), t1.c2 COLLATE RTRIM, (((t1.c2, t1.c0, t1.c0)) BETWEEN ((t1.c62, NULL, t1.c2)) AND ((rt0.c1, t1.c62, t1.c0)))))) WHERE (CAST(t1.c0 AS NUMERIC)) ORDER BY CASE ((t1.c62) BETWEEN (rt0.c2) AND (vt0.c0))  WHEN (~ (rt0.c0)) THEN ((((((((rt0.c1)OR(rt0.c0)))AND(t1.c2)))OR(vt0.c0)))OR(t1.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((NOT (vt0.c0)))>>((rt0.c0 IN (vt0.c0)))) RIGHT OUTER JOIN t1 ON ((((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c62))), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c62)), (~ (vt0.c0))))<((highlight(t1.c0, t1.c62, rt0.c2, vt0.c0), t1.c2 COLLATE RTRIM, (((t1.c2, t1.c0, t1.c0)) BETWEEN ((t1.c62, NULL, t1.c2)) AND ((rt0.c1, t1.c62, t1.c0)))))) ORDER BY CASE ((t1.c62) BETWEEN (rt0.c2) AND (vt0.c0))  WHEN (~ (rt0.c0)) THEN ((((((((rt0.c1)OR(rt0.c0)))AND(t1.c2)))OR(vt0.c0)))OR(t1.c0)) END);
SELECT * FROM vt0, rt0 WHERE (COALESCE(DISTINCT ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), (+ (rt0.c0)))) ORDER BY json_valid(0.4443981956180426)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), (+ (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY json_valid(0.4443981956180426)  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (COALESCE(DISTINCT ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), (+ (rt0.c0)))) ORDER BY json_valid(0.4443981956180426)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), (+ (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY json_valid(0.4443981956180426)  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (COALESCE(DISTINCT ((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), (+ (rt0.c0)))) ORDER BY json_valid(0.4443981956180426)  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN rt0 ON (+ ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((0X6c45c2da, NULL, -1270742855))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (+ ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((0x6c45c2da, NULL, -1270742855))))));
SELECT * FROM vt0 CROSS JOIN rt0 ON (+ ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((0X6c45c2da, NULL, -1270742855))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (+ ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((0x6c45c2da, NULL, -1270742855))))));
SELECT * FROM vt0 CROSS JOIN rt0 ON (+ ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((0X6c45c2da, NULL, -1270742855))))) WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2) ORDER BY load_extension(t1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY load_extension(t1.c0) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c2) ORDER BY load_extension(t1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY load_extension(t1.c0) DESC);
SELECT * FROM t1 WHERE (CAST(x'ef70ff18' AS INTEGER)) ORDER BY NULL ASC  NULLS FIRST, ((x'')==(json_type(t1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'ef70ff18' AS INTEGER)) IS TRUE)  as count FROM t1 ORDER BY NULL ASC  NULLS FIRST, ((x'')=(json_type(t1.c0))) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (CAST(x'ef70ff18' AS INTEGER)) ORDER BY NULL ASC  NULLS FIRST, ((x'')==(json_type(t1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'ef70ff18' AS INTEGER)) IS TRUE)  as count FROM t1 ORDER BY NULL ASC  NULLS FIRST, ((x'')=(json_type(t1.c0))) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (CAST(x'ef70ff18' AS INTEGER)) ORDER BY NULL ASC  NULLS FIRST, ((x'')==(json_type(t1.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1, rt0 WHERE (((t1.c62 COLLATE NOCASE) ISNULL)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c62 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt0, t1, rt0 WHERE (((t1.c62 COLLATE NOCASE) ISNULL)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c62 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt0, t1, rt0 WHERE (((t1.c62 COLLATE NOCASE) ISNULL)) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE RTRIM) BETWEEN ((- (t1.c2))) AND (((((t1.c62)OR(t1.c2)))OR(t1.c2))))) ORDER BY (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c2)))OR(t1.c62)))AND(t1.c2)))AND(t1.c62)))OR(t1.c62)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE RTRIM) BETWEEN ((- (t1.c2))) AND (((((t1.c62)OR(t1.c2)))OR(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c2)))OR(t1.c62)))AND(t1.c2)))AND(t1.c62)))OR(t1.c62)) IN ()) ASC);
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE RTRIM) BETWEEN ((- (t1.c2))) AND (((((t1.c62)OR(t1.c2)))OR(t1.c2))))) ORDER BY (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c2)))OR(t1.c62)))AND(t1.c2)))AND(t1.c62)))OR(t1.c62)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE RTRIM) BETWEEN ((- (t1.c2))) AND (((((t1.c62)OR(t1.c2)))OR(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c2)))OR(t1.c62)))AND(t1.c2)))AND(t1.c62)))OR(t1.c62)) IN ()) ASC);
SELECT ALL * FROM t1 WHERE (((t1.c0 COLLATE RTRIM) BETWEEN ((- (t1.c2))) AND (((((t1.c62)OR(t1.c2)))OR(t1.c2))))) ORDER BY (((((((((((((t1.c0)AND(t1.c0)))AND(t1.c2)))OR(t1.c62)))AND(t1.c2)))AND(t1.c62)))OR(t1.c62)) IN ()) ASC;
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY (((CAST(t1.c2 AS BLOB)))!=(((t1.c62 IN (t1.c62, t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY (((CAST(t1.c2 AS BLOB)))!=(((t1.c62 IN (t1.c62, t1.c0)))))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY (((CAST(t1.c2 AS BLOB)))!=(((t1.c62 IN (t1.c62, t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY (((CAST(t1.c2 AS BLOB)))!=(((t1.c62 IN (t1.c62, t1.c0)))))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY (((CAST(t1.c2 AS BLOB)))!=(((t1.c62 IN (t1.c62, t1.c0)))))  NULLS FIRST;
SELECT * FROM t1, vt0 RIGHT OUTER JOIN rt0 ON (t1.c0 IN ()) WHERE (t1.c62) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((((t1.c0))>((t1.c0))))))OR(NULL)))AND((- (t1.c0)))))AND(((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c62) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN rt0 ON (t1.c0 IN ()) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((((t1.c0))>((t1.c0))))))OR(NULL)))AND((- (t1.c0)))))AND(((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM t1, vt0 RIGHT OUTER JOIN rt0 ON (t1.c0 IN ()) WHERE (t1.c62) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((((t1.c0))>((t1.c0))))))OR(NULL)))AND((- (t1.c0)))))AND(((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c62) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN rt0 ON (t1.c0 IN ()) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((((t1.c0))>((t1.c0))))))OR(NULL)))AND((- (t1.c0)))))AND(((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM t1, vt0 RIGHT OUTER JOIN rt0 ON (t1.c0 IN ()) WHERE (t1.c62) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))OR((((t1.c0))>((t1.c0))))))OR(NULL)))AND((- (t1.c0)))))AND(((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN (rt0.c1 IN (rt0.c0)) THEN rt0.c1 WHEN CAST(0.4729531093347943 AS BLOB) THEN ((x'') BETWEEN (rt0.c2) AND (rt0.c0)) WHEN (- (rt0.c0)) THEN RTRIM(rt0.c0) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN rt0.c0 WHEN (~ (vt0.c0)) THEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END END WHERE (json_extract((~ (rt0.c2)), vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((json_extract((~ (rt0.c2)), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN (rt0.c1 IN (rt0.c0)) THEN rt0.c1 WHEN CAST(0.4729531093347943 AS BLOB) THEN ((x'') BETWEEN (rt0.c2) AND (rt0.c0)) WHEN (- (rt0.c0)) THEN RTRIM(rt0.c0) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN rt0.c0 WHEN (~ (vt0.c0)) THEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN (rt0.c1 IN (rt0.c0)) THEN rt0.c1 WHEN CAST(0.4729531093347943 AS BLOB) THEN ((x'') BETWEEN (rt0.c2) AND (rt0.c0)) WHEN (- (rt0.c0)) THEN RTRIM(rt0.c0) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN rt0.c0 WHEN (~ (vt0.c0)) THEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END END WHERE (json_extract((~ (rt0.c2)), vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((json_extract((~ (rt0.c2)), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN (rt0.c1 IN (rt0.c0)) THEN rt0.c1 WHEN CAST(0.4729531093347943 AS BLOB) THEN ((x'') BETWEEN (rt0.c2) AND (rt0.c0)) WHEN (- (rt0.c0)) THEN RTRIM(rt0.c0) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN rt0.c0 WHEN (~ (vt0.c0)) THEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END END);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((0x4275180)OR(TRIM(DISTINCT t1.c2))))AND((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0X4275180)OR(TRIM(DISTINCT t1.c2))))AND((- (rt0.c0))))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((0x4275180)OR(TRIM(DISTINCT t1.c2))))AND((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0X4275180)OR(TRIM(DISTINCT t1.c2))))AND((- (rt0.c0))))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((0x4275180)OR(TRIM(DISTINCT t1.c2))))AND((- (rt0.c0)))));
SELECT * FROM t1, rt0, vt0 WHERE (((rt0.c2)>>(rt0.c1)) COLLATE BINARY) ORDER BY '-1504787158' DESC  NULLS FIRST, CASE WHEN (t1.c0 IN (vt0.c0)) THEN ((t1.c0)*(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>>(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY '-1504787158' DESC  NULLS FIRST, CASE WHEN (t1.c0 IN (vt0.c0)) THEN ((t1.c0)*(rt0.c1)) END DESC  NULLS LAST);
SELECT * FROM t1, rt0, vt0 WHERE (((rt0.c2)>>(rt0.c1)) COLLATE BINARY) ORDER BY '-1504787158' DESC  NULLS FIRST, CASE WHEN (t1.c0 IN (vt0.c0)) THEN ((t1.c0)*(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>>(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY '-1504787158' DESC  NULLS FIRST, CASE WHEN (t1.c0 IN (vt0.c0)) THEN ((t1.c0)*(rt0.c1)) END DESC  NULLS LAST);
SELECT * FROM t1, rt0, vt0 WHERE (((rt0.c2)>>(rt0.c1)) COLLATE BINARY) ORDER BY '-1504787158' DESC  NULLS FIRST, CASE WHEN (t1.c0 IN (vt0.c0)) THEN ((t1.c0)*(rt0.c1)) END DESC  NULLS LAST;
SELECT * FROM t1 CROSS JOIN rt0 ON CASE WHEN rt0.c0 THEN ((t1.c2)<=(rt0.c0)) WHEN CASE WHEN t1.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c62 END THEN (- (t1.c62)) WHEN ((t1.c0) BETWEEN (rt0.c1) AND ('-740190701')) THEN NULL ELSE ((rt0.c0)-(rt0.c2)) END RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)IS(rt0.c2)) AS INTEGER) WHERE (((((vt0.c0) NOTNULL)) BETWEEN (NULL) AND ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) BETWEEN (NULL) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON CASE WHEN rt0.c0 THEN ((t1.c2)<=(rt0.c0)) WHEN CASE WHEN t1.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c62 END THEN (- (t1.c62)) WHEN ((t1.c0) BETWEEN (rt0.c1) AND ('-740190701')) THEN NULL ELSE ((rt0.c0)-(rt0.c2)) END RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)IS(rt0.c2)) AS INTEGER));
SELECT * FROM t1 CROSS JOIN rt0 ON CASE WHEN rt0.c0 THEN ((t1.c2)<=(rt0.c0)) WHEN CASE WHEN t1.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c62 END THEN (- (t1.c62)) WHEN ((t1.c0) BETWEEN (rt0.c1) AND ('-740190701')) THEN NULL ELSE ((rt0.c0)-(rt0.c2)) END RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)IS(rt0.c2)) AS INTEGER) WHERE (((((vt0.c0) NOTNULL)) BETWEEN (NULL) AND ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) BETWEEN (NULL) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON CASE WHEN rt0.c0 THEN ((t1.c2)<=(rt0.c0)) WHEN CASE WHEN t1.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c62 END THEN (- (t1.c62)) WHEN ((t1.c0) BETWEEN (rt0.c1) AND ('-740190701')) THEN NULL ELSE ((rt0.c0)-(rt0.c2)) END RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)IS(rt0.c2)) AS INTEGER));
SELECT * FROM t1 CROSS JOIN rt0 ON CASE WHEN rt0.c0 THEN ((t1.c2)<=(rt0.c0)) WHEN CASE WHEN t1.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c62 END THEN (- (t1.c62)) WHEN ((t1.c0) BETWEEN (rt0.c1) AND ('-740190701')) THEN NULL ELSE ((rt0.c0)-(rt0.c2)) END RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1)IS(rt0.c2)) AS INTEGER) WHERE (((((vt0.c0) NOTNULL)) BETWEEN (NULL) AND ((+ (rt0.c1)))));
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((((((t1.c2) IS FALSE))AND(((t1.c62)>(vt0.c0)))))AND((t1.c0 IN (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2) IS FALSE))AND(((t1.c62)>(vt0.c0)))))AND((t1.c0 IN (t1.c2))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((((((t1.c2) IS FALSE))AND(((t1.c62)>(vt0.c0)))))AND((t1.c0 IN (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2) IS FALSE))AND(((t1.c62)>(vt0.c0)))))AND((t1.c0 IN (t1.c2))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((((((t1.c2) IS FALSE))AND(((t1.c62)>(vt0.c0)))))AND((t1.c0 IN (t1.c2)))));
SELECT COUNT(*) FROM rt0, t1 WHERE ((+ (((((t1.c62)OR(rt0.c1)))AND(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t1.c62)OR(rt0.c1)))AND(t1.c2))))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((+ (((((t1.c62)OR(rt0.c1)))AND(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t1.c62)OR(rt0.c1)))AND(t1.c2))))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((+ (((((t1.c62)OR(rt0.c1)))AND(t1.c2)))));
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c62 AS INTEGER))IS(((t1.c2)OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c62 AS INTEGER))IS(((t1.c2)OR(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c62 AS INTEGER))IS(((t1.c2)OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c62 AS INTEGER))IS(((t1.c2)OR(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c62 AS INTEGER))IS(((t1.c2)OR(t1.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t1 ON (((+ (vt0.c0))) ISNULL) INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (CASE '969174970'  WHEN vt0.c0 THEN t1.c62 END)) WHERE (((CASE WHEN t1.c2 THEN t1.c62 WHEN x'' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END)<<(TIME('1287400990', 1270780991, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c2 THEN t1.c62 WHEN x'' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END)<<(TIME('1287400990', 1270780991, rt0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((+ (vt0.c0))) ISNULL) INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (CASE '969174970'  WHEN vt0.c0 THEN t1.c62 END)));
SELECT ALL * FROM vt0 CROSS JOIN t1 ON (((+ (vt0.c0))) ISNULL) INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (CASE '969174970'  WHEN vt0.c0 THEN t1.c62 END)) WHERE (((CASE WHEN t1.c2 THEN t1.c62 WHEN x'' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END)<<(TIME('1287400990', 1270780991, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c2 THEN t1.c62 WHEN x'' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END)<<(TIME('1287400990', 1270780991, rt0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((+ (vt0.c0))) ISNULL) INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (CASE '969174970'  WHEN vt0.c0 THEN t1.c62 END)));
SELECT ALL * FROM vt0 CROSS JOIN t1 ON (((+ (vt0.c0))) ISNULL) INNER JOIN rt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (CASE '969174970'  WHEN vt0.c0 THEN t1.c62 END)) WHERE (((CASE WHEN t1.c2 THEN t1.c62 WHEN x'' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END)<<(TIME('1287400990', 1270780991, rt0.c2))));
SELECT * FROM t1 WHERE ((((CAST(t1.c2 AS TEXT)))>=((((t1.c2) BETWEEN (t1.c0) AND (t1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t1.c2 AS TEXT)))>=((((t1.c2) BETWEEN (t1.c0) AND (t1.c2)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((CAST(t1.c2 AS TEXT)))>=((((t1.c2) BETWEEN (t1.c0) AND (t1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t1.c2 AS TEXT)))>=((((t1.c2) BETWEEN (t1.c0) AND (t1.c2)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((CAST(t1.c2 AS TEXT)))>=((((t1.c2) BETWEEN (t1.c0) AND (t1.c2))))));
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (PRINTF((~ ('-1138992593'))));
SELECT SUM(count) FROM (SELECT ((PRINTF((~ ('-1138992593')))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (PRINTF((~ ('-1138992593'))));
SELECT SUM(count) FROM (SELECT ((PRINTF((~ ('-1138992593')))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (PRINTF((~ ('-1138992593'))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))GLOB(x''))) ORDER BY rtreenode((((rt0.c0))!=((rt0.c2))), (rt0.c2 IN (rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))GLOB(x''))) IS TRUE)  as count FROM rt0 ORDER BY rtreenode((((rt0.c0))<>((rt0.c2))), (rt0.c2 IN (rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))GLOB(x''))) ORDER BY rtreenode((((rt0.c0))!=((rt0.c2))), (rt0.c2 IN (rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))GLOB(x''))) IS TRUE)  as count FROM rt0 ORDER BY rtreenode((((rt0.c0))<>((rt0.c2))), (rt0.c2 IN (rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))GLOB(x''))) ORDER BY rtreenode((((rt0.c0))!=((rt0.c2))), (rt0.c2 IN (rt0.c0))) DESC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((load_extension(rt0.c0, vt0.c0)) NOT BETWEEN ((((rt0.c0, vt0.c0, '63蔰'))>((rt0.c0, rt0.c0, vt0.c0)))) AND ((rt0.c1 IN ())))) ORDER BY CASE WHEN ((((0xffffffff9f030602)AND(rt0.c1)))AND(vt0.c0)) THEN ((rt0.c2)=(vt0.c0)) END ASC, ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM, ((ROUND(vt0.c0, rt0.c0))*(0.7245637221705373))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c0, vt0.c0)) NOT BETWEEN ((((rt0.c0, vt0.c0, '63蔰'))>((rt0.c0, rt0.c0, vt0.c0)))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON NULL ORDER BY CASE WHEN ((((0xffffffff9f030602)AND(rt0.c1)))AND(vt0.c0)) THEN ((rt0.c2)==(vt0.c0)) END ASC, ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM, ((ROUND(vt0.c0, rt0.c0))*(0.7245637221705373))  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((load_extension(rt0.c0, vt0.c0)) NOT BETWEEN ((((rt0.c0, vt0.c0, '63蔰'))>((rt0.c0, rt0.c0, vt0.c0)))) AND ((rt0.c1 IN ())))) ORDER BY CASE WHEN ((((0xffffffff9f030602)AND(rt0.c1)))AND(vt0.c0)) THEN ((rt0.c2)=(vt0.c0)) END ASC, ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM, ((ROUND(vt0.c0, rt0.c0))*(0.7245637221705373))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c0, vt0.c0)) NOT BETWEEN ((((rt0.c0, vt0.c0, '63蔰'))>((rt0.c0, rt0.c0, vt0.c0)))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON NULL ORDER BY CASE WHEN ((((0xffffffff9f030602)AND(rt0.c1)))AND(vt0.c0)) THEN ((rt0.c2)==(vt0.c0)) END ASC, ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM, ((ROUND(vt0.c0, rt0.c0))*(0.7245637221705373))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0 IN ()))&(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))&(rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0 IN ()))&(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))&(rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0 IN ()))&(rt0.c0)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (~ ((t1.c2 IN ()))) RIGHT OUTER JOIN t1 ON (- ((t1.c2 IN ()))) WHERE ((rt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((vt0.c0) IS FALSE), (+ (((t1.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (~ ((t1.c2 IN ()))) RIGHT OUTER JOIN t1 ON (- ((t1.c2 IN ()))) ORDER BY ((vt0.c0) IS FALSE), (+ (((t1.c2) NOT NULL))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (~ ((t1.c2 IN ()))) RIGHT OUTER JOIN t1 ON (- ((t1.c2 IN ()))) WHERE ((rt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((vt0.c0) IS FALSE), (+ (((t1.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (~ ((t1.c2 IN ()))) RIGHT OUTER JOIN t1 ON (- ((t1.c2 IN ()))) ORDER BY ((vt0.c0) IS FALSE), (+ (((t1.c2) NOT NULL))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (~ ((t1.c2 IN ()))) RIGHT OUTER JOIN t1 ON (- ((t1.c2 IN ()))) WHERE ((rt0.c0 IN ()) COLLATE NOCASE) ORDER BY ((vt0.c0) IS FALSE), (+ (((t1.c2) NOT NULL)));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((t1.c2)AND(rt0.c2)))AND(t1.c62)) COLLATE RTRIM INNER JOIN t1 ON ABS(0.7047747755196974) COLLATE NOCASE WHERE (UNLIKELY(DISTINCT ((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c62))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c62)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((t1.c2)AND(rt0.c2)))AND(t1.c62)) COLLATE RTRIM INNER JOIN t1 ON ABS(0.7047747755196974) COLLATE NOCASE);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((t1.c2)AND(rt0.c2)))AND(t1.c62)) COLLATE RTRIM INNER JOIN t1 ON ABS(0.7047747755196974) COLLATE NOCASE WHERE (UNLIKELY(DISTINCT ((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c62))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c62)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((t1.c2)AND(rt0.c2)))AND(t1.c62)) COLLATE RTRIM INNER JOIN t1 ON ABS(0.7047747755196974) COLLATE NOCASE);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((t1.c2)AND(rt0.c2)))AND(t1.c62)) COLLATE RTRIM INNER JOIN t1 ON ABS(0.7047747755196974) COLLATE NOCASE WHERE (UNLIKELY(DISTINCT ((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c62))));
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN 'FﲉZj6' THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('q\n椡l')) WHEN ((rt0.c1)-(rt0.c0)) THEN (rt0.c2 IN (rt0.c1)) WHEN COALESCE(rt0.c2, rt0.c2, rt0.c0, rt0.c2) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)<<(vt0.c0)) THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN ((rt0.c2) ISNULL) END WHERE ((+ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE WHEN 'FﲉZj6' THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('q\n椡l')) WHEN ((rt0.c1)-(rt0.c0)) THEN (rt0.c2 IN (rt0.c1)) WHEN COALESCE(rt0.c2, rt0.c2, rt0.c0, rt0.c2) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)<<(vt0.c0)) THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN ((rt0.c2) ISNULL) END);
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN 'FﲉZj6' THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('q\n椡l')) WHEN ((rt0.c1)-(rt0.c0)) THEN (rt0.c2 IN (rt0.c1)) WHEN COALESCE(rt0.c2, rt0.c2, rt0.c0, rt0.c2) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)<<(vt0.c0)) THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN ((rt0.c2) ISNULL) END WHERE ((+ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE WHEN 'FﲉZj6' THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('q\n椡l')) WHEN ((rt0.c1)-(rt0.c0)) THEN (rt0.c2 IN (rt0.c1)) WHEN COALESCE(rt0.c2, rt0.c2, rt0.c0, rt0.c2) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)<<(vt0.c0)) THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN ((rt0.c2) ISNULL) END);
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN 'FﲉZj6' THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('q\n椡l')) WHEN ((rt0.c1)-(rt0.c0)) THEN (rt0.c2 IN (rt0.c1)) WHEN COALESCE(rt0.c2, rt0.c2, rt0.c0, rt0.c2) THEN (NOT (rt0.c2)) WHEN ((rt0.c2)<<(vt0.c0)) THEN ((rt0.c2) IS TRUE) WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN ((rt0.c2) ISNULL) END WHERE ((+ ((rt0.c1 IN ()))));
SELECT ALL * FROM vt0, t1 WHERE (LIKE(CASE t1.c2  WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END, CAST(t1.c62 AS REAL), '0'));
SELECT SUM(count) FROM (SELECT ((LIKE(CASE t1.c2  WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END, CAST(t1.c62 AS REAL), '0')) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (LIKE(CASE t1.c2  WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END, CAST(t1.c62 AS REAL), '0'));
SELECT SUM(count) FROM (SELECT ((LIKE(CASE t1.c2  WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END, CAST(t1.c62 AS REAL), '0')) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (LIKE(CASE t1.c2  WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END, CAST(t1.c62 AS REAL), '0'));
SELECT * FROM t1, vt0 WHERE ((~ (t1.c2 COLLATE RTRIM))) ORDER BY (t1.c0 IN (t1.c2, vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt0 ORDER BY (t1.c0 IN (t1.c2, vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE ((~ (t1.c2 COLLATE RTRIM))) ORDER BY (t1.c0 IN (t1.c2, vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt0 ORDER BY (t1.c0 IN (t1.c2, vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE ((~ (t1.c2 COLLATE RTRIM))) ORDER BY (t1.c0 IN (t1.c2, vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((UNLIKELY(DISTINCT vt0.c0))AND((NOT (vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY 0.6220064032324562  NULLS FIRST, (((vt0.c0, vt0.c0, NULL, vt0.c0, -962273587)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), x'', vt0.c0, vt0.c0 COLLATE BINARY, ((vt0.c0) IS FALSE))) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), HEX(DISTINCT vt0.c0), ((vt0.c0)IS(vt0.c0)), ((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((UNLIKELY(DISTINCT vt0.c0))AND((NOT (vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY 0.6220064032324562  NULLS FIRST, (((vt0.c0, vt0.c0, NULL, vt0.c0, -962273587)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), x'', vt0.c0, vt0.c0 COLLATE BINARY, ((vt0.c0) IS FALSE))) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), HEX(DISTINCT vt0.c0), ((vt0.c0)IS(vt0.c0)), ((vt0.c0)*(vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((UNLIKELY(DISTINCT vt0.c0))AND((NOT (vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY 0.6220064032324562  NULLS FIRST, (((vt0.c0, vt0.c0, NULL, vt0.c0, -962273587)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), x'', vt0.c0, vt0.c0 COLLATE BINARY, ((vt0.c0) IS FALSE))) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), HEX(DISTINCT vt0.c0), ((vt0.c0)IS(vt0.c0)), ((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((UNLIKELY(DISTINCT vt0.c0))AND((NOT (vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY 0.6220064032324562  NULLS FIRST, (((vt0.c0, vt0.c0, NULL, vt0.c0, -962273587)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), x'', vt0.c0, vt0.c0 COLLATE BINARY, ((vt0.c0) IS FALSE))) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), HEX(DISTINCT vt0.c0), ((vt0.c0)IS(vt0.c0)), ((vt0.c0)*(vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((UNLIKELY(DISTINCT vt0.c0))AND((NOT (vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY 0.6220064032324562  NULLS FIRST, (((vt0.c0, vt0.c0, NULL, vt0.c0, -962273587)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), x'', vt0.c0, vt0.c0 COLLATE BINARY, ((vt0.c0) IS FALSE))) AND (((vt0.c0 IN ()), (vt0.c0 IN ()), HEX(DISTINCT vt0.c0), ((vt0.c0)IS(vt0.c0)), ((vt0.c0)*(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c2)|(t1.c62))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)|(t1.c62))) IS FALSE)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c2)|(t1.c62))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)|(t1.c62))) IS FALSE)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c2)|(t1.c62))) IS FALSE));
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) THEN (+ (t1.c62)) ELSE CASE WHEN vt0.c0 THEN t1.c62 ELSE t1.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) THEN (+ (t1.c62)) ELSE CASE WHEN vt0.c0 THEN t1.c62 ELSE t1.c2 END END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) THEN (+ (t1.c62)) ELSE CASE WHEN vt0.c0 THEN t1.c62 ELSE t1.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) THEN (+ (t1.c62)) ELSE CASE WHEN vt0.c0 THEN t1.c62 ELSE t1.c2 END END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) THEN (+ (t1.c62)) ELSE CASE WHEN vt0.c0 THEN t1.c62 ELSE t1.c2 END END);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (UPPER(vt0.c0) COLLATE BINARY) ORDER BY (((CAST(t1.c2 AS INTEGER)))<=(((vt0.c0 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM t1 NOT INDEXED, rt0, vt0 ORDER BY (((CAST(t1.c2 AS INTEGER)))<=(((vt0.c0 IN ()))))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (UPPER(vt0.c0) COLLATE BINARY) ORDER BY (((CAST(t1.c2 AS INTEGER)))<=(((vt0.c0 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM t1 NOT INDEXED, rt0, vt0 ORDER BY (((CAST(t1.c2 AS INTEGER)))<=(((vt0.c0 IN ()))))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (UPPER(vt0.c0) COLLATE BINARY) ORDER BY (((CAST(t1.c2 AS INTEGER)))<=(((vt0.c0 IN ()))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c0)OR(vt0.c0)))))AND((((vt0.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR(((vt0.c0)OR(vt0.c0)))))AND((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c0)OR(vt0.c0)))))AND((((vt0.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR(((vt0.c0)OR(vt0.c0)))))AND((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c0)OR(vt0.c0)))))AND((((vt0.c0))<((vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS REAL)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)!=(''));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)<>('')));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS REAL)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)!=(''));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)<>('')));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS REAL)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '' END)!=(''));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) ORDER BY ((((rt0.c0) IS FALSE)) NOT BETWEEN (json_valid(rt0.c2)) AND ((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS FALSE)) NOT BETWEEN (json_valid(rt0.c2)) AND ((NOT (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) ORDER BY ((((rt0.c0) IS FALSE)) NOT BETWEEN (json_valid(rt0.c2)) AND ((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS FALSE)) NOT BETWEEN (json_valid(rt0.c2)) AND ((NOT (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY) ORDER BY ((((rt0.c0) IS FALSE)) NOT BETWEEN (json_valid(rt0.c2)) AND ((NOT (rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS REAL));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t1, vt0, rt0 WHERE (((((((rt0.c1)OR(t1.c2)))OR(-628375543)))LIKE((~ (t1.c0))))) ORDER BY (((t1.c62))<((((rt0.c0) ISNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(t1.c2)))OR(-628375543)))LIKE((~ (t1.c0))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((t1.c62))<((((rt0.c0) ISNULL)))) ASC  NULLS LAST);
SELECT ALL * FROM t1, vt0, rt0 WHERE (((((((rt0.c1)OR(t1.c2)))OR(-628375543)))LIKE((~ (t1.c0))))) ORDER BY (((t1.c62))<((((rt0.c0) ISNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(t1.c2)))OR(-628375543)))LIKE((~ (t1.c0))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((t1.c62))<((((rt0.c0) ISNULL)))) ASC  NULLS LAST);
SELECT ALL * FROM t1, vt0, rt0 WHERE (((((((rt0.c1)OR(t1.c2)))OR(-628375543)))LIKE((~ (t1.c0))))) ORDER BY (((t1.c62))<((((rt0.c0) ISNULL)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) NOT NULL)) ORDER BY (+ ((~ (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (+ ((~ (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) NOT NULL)) ORDER BY (+ ((~ (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (+ ((~ (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) NOT NULL)) ORDER BY (+ ((~ (rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (((rt0.c2 COLLATE NOCASE)*(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)*(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (((rt0.c2 COLLATE NOCASE)*(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)*(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (((rt0.c2 COLLATE NOCASE)*(CAST(rt0.c0 AS REAL))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((((((((CAST(t1.c2 AS REAL))AND((rt0.c2 IN ()))))AND(((vt0.c0) ISNULL))))AND(rt0.c0 COLLATE RTRIM)))AND((+ (vt0.c0)))) RIGHT OUTER JOIN vt0 ON ((0.6453572324477342)OR('-838798906')) WHERE ('18979217');
SELECT SUM(count) FROM (SELECT (('18979217') IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((((((((CAST(t1.c2 AS REAL))AND((rt0.c2 IN ()))))AND(((vt0.c0) ISNULL))))AND(rt0.c0 COLLATE RTRIM)))AND((+ (vt0.c0)))) RIGHT OUTER JOIN vt0 ON ((0.6453572324477342)OR('-838798906')));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((((((((CAST(t1.c2 AS REAL))AND((rt0.c2 IN ()))))AND(((vt0.c0) ISNULL))))AND(rt0.c0 COLLATE RTRIM)))AND((+ (vt0.c0)))) RIGHT OUTER JOIN vt0 ON ((0.6453572324477342)OR('-838798906')) WHERE ('18979217');
SELECT SUM(count) FROM (SELECT (('18979217') IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((((((((CAST(t1.c2 AS REAL))AND((rt0.c2 IN ()))))AND(((vt0.c0) ISNULL))))AND(rt0.c0 COLLATE RTRIM)))AND((+ (vt0.c0)))) RIGHT OUTER JOIN vt0 ON ((0.6453572324477342)OR('-838798906')));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((((((((CAST(t1.c2 AS REAL))AND((rt0.c2 IN ()))))AND(((vt0.c0) ISNULL))))AND(rt0.c0 COLLATE RTRIM)))AND((+ (vt0.c0)))) RIGHT OUTER JOIN vt0 ON ((0.6453572324477342)OR('-838798906')) WHERE ('18979217');
SELECT ALL * FROM vt0, rt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY CASE ((vt0.c0)!=(rt0.c1))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN x'fe4652ca' THEN rt0.c2 END THEN (- ('\n\n|N')) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((vt0.c0)<>(rt0.c1))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN x'fe4652ca' THEN rt0.c2 END THEN (- ('\n\n|N')) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY CASE ((vt0.c0)!=(rt0.c1))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN x'fe4652ca' THEN rt0.c2 END THEN (- ('\n\n|N')) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((vt0.c0)<>(rt0.c1))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN x'fe4652ca' THEN rt0.c2 END THEN (- ('\n\n|N')) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) ORDER BY CASE ((vt0.c0)!=(rt0.c1))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN x'fe4652ca' THEN rt0.c2 END THEN (- ('\n\n|N')) END ASC  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) COLLATE NOCASE) ORDER BY ((((vt0.c0)%(rt0.c0))) BETWEEN (((vt0.c0)=(NULL))) AND (((rt0.c0) BETWEEN (0.9705318141695224) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)%(rt0.c0))) BETWEEN (((vt0.c0)=(NULL))) AND (((rt0.c0) BETWEEN (0.9705318141695224) AND (rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) COLLATE NOCASE) ORDER BY ((((vt0.c0)%(rt0.c0))) BETWEEN (((vt0.c0)=(NULL))) AND (((rt0.c0) BETWEEN (0.9705318141695224) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)%(rt0.c0))) BETWEEN (((vt0.c0)=(NULL))) AND (((rt0.c0) BETWEEN (0.9705318141695224) AND (rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c2)) COLLATE NOCASE) ORDER BY ((((vt0.c0)%(rt0.c0))) BETWEEN (((vt0.c0)=(NULL))) AND (((rt0.c0) BETWEEN (0.9705318141695224) AND (rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((t1.c2, t1.c62, t1.c2)) BETWEEN ((NULL, t1.c0, ((t1.c0)<('-737888917')))) AND ((t1.c2, ABS(DISTINCT t1.c62), DATE(0.8408996078131418, t1.c2, vt0.c0))))) ORDER BY ((((t1.c62) ISNULL))!=(vt0.c0 COLLATE NOCASE)), ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((t1.c2)<(vt0.c0))) AND (((t1.c2) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2, t1.c62, t1.c2)) BETWEEN ((NULL, t1.c0, ((t1.c0)<('-737888917')))) AND ((t1.c2, ABS(DISTINCT t1.c62), DATE(0.8408996078131418, t1.c2, vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c62) ISNULL))<>(vt0.c0 COLLATE NOCASE)), ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((t1.c2)<(vt0.c0))) AND (((t1.c2) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((t1.c2, t1.c62, t1.c2)) BETWEEN ((NULL, t1.c0, ((t1.c0)<('-737888917')))) AND ((t1.c2, ABS(DISTINCT t1.c62), DATE(0.8408996078131418, t1.c2, vt0.c0))))) ORDER BY ((((t1.c62) ISNULL))!=(vt0.c0 COLLATE NOCASE)), ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((t1.c2)<(vt0.c0))) AND (((t1.c2) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2, t1.c62, t1.c2)) BETWEEN ((NULL, t1.c0, ((t1.c0)<('-737888917')))) AND ((t1.c2, ABS(DISTINCT t1.c62), DATE(0.8408996078131418, t1.c2, vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c62) ISNULL))<>(vt0.c0 COLLATE NOCASE)), ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((t1.c2)<(vt0.c0))) AND (((t1.c2) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((t1.c2, t1.c62, t1.c2)) BETWEEN ((NULL, t1.c0, ((t1.c0)<('-737888917')))) AND ((t1.c2, ABS(DISTINCT t1.c62), DATE(0.8408996078131418, t1.c2, vt0.c0))))) ORDER BY ((((t1.c62) ISNULL))!=(vt0.c0 COLLATE NOCASE)), ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((t1.c2)<(vt0.c0))) AND (((t1.c2) NOT NULL))) DESC  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN t1 ON ((('-850584495')) BETWEEN (('-628375543' COLLATE NOCASE)) AND ((((((1.008124179E9)AND(t1.c0)))OR(t1.c62))))) WHERE (CAST((((t1.c62, t1.c0, t1.c62))>((t1.c0, vt0.c0, 0.4852303809399291))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c62, t1.c0, t1.c62))>((t1.c0, vt0.c0, 0.4852303809399291))) AS NUMERIC)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((('-850584495')) BETWEEN (('-628375543' COLLATE NOCASE)) AND ((((((1.008124179E9)AND(t1.c0)))OR(t1.c62))))));
SELECT * FROM vt0 INNER JOIN t1 ON ((('-850584495')) BETWEEN (('-628375543' COLLATE NOCASE)) AND ((((((1.008124179E9)AND(t1.c0)))OR(t1.c62))))) WHERE (CAST((((t1.c62, t1.c0, t1.c62))>((t1.c0, vt0.c0, 0.4852303809399291))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c62, t1.c0, t1.c62))>((t1.c0, vt0.c0, 0.4852303809399291))) AS NUMERIC)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((('-850584495')) BETWEEN (('-628375543' COLLATE NOCASE)) AND ((((((1.008124179E9)AND(t1.c0)))OR(t1.c62))))));
SELECT * FROM vt0 INNER JOIN t1 ON ((('-850584495')) BETWEEN (('-628375543' COLLATE NOCASE)) AND ((((((1.008124179E9)AND(t1.c0)))OR(t1.c62))))) WHERE (CAST((((t1.c62, t1.c0, t1.c62))>((t1.c0, vt0.c0, 0.4852303809399291))) AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (0.07016314672736812) AND ((+ (NULL))))) ORDER BY ((((CASE WHEN '2112462549' THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR(((rt0.c1)*(rt0.c1)))))OR((~ (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (0.07016314672736812) AND ((+ (NULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CASE WHEN '2112462549' THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR(((rt0.c1)*(rt0.c1)))))OR((~ (rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (0.07016314672736812) AND ((+ (NULL))))) ORDER BY ((((CASE WHEN '2112462549' THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR(((rt0.c1)*(rt0.c1)))))OR((~ (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (0.07016314672736812) AND ((+ (NULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CASE WHEN '2112462549' THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR(((rt0.c1)*(rt0.c1)))))OR((~ (rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (0.07016314672736812) AND ((+ (NULL))))) ORDER BY ((((CASE WHEN '2112462549' THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR(((rt0.c1)*(rt0.c1)))))OR((~ (rt0.c0))))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE RTRIM) ORDER BY ((((((((rt0.c0 COLLATE RTRIM)OR('')))OR(CAST(x'' AS NUMERIC))))OR(((((0.8847202464646239)OR(rt0.c2)))AND(rt0.c0)))))AND((((rt0.c1))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0 COLLATE RTRIM)OR('')))OR(CAST(x'' AS NUMERIC))))OR(((((0.8847202464646239)OR(rt0.c2)))AND(rt0.c0)))))AND((((rt0.c1))<=((rt0.c0))))));
SELECT * FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE RTRIM) ORDER BY ((((((((rt0.c0 COLLATE RTRIM)OR('')))OR(CAST(x'' AS NUMERIC))))OR(((((0.8847202464646239)OR(rt0.c2)))AND(rt0.c0)))))AND((((rt0.c1))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0 COLLATE RTRIM)OR('')))OR(CAST(x'' AS NUMERIC))))OR(((((0.8847202464646239)OR(rt0.c2)))AND(rt0.c0)))))AND((((rt0.c1))<=((rt0.c0))))));
SELECT * FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE RTRIM) ORDER BY ((((((((rt0.c0 COLLATE RTRIM)OR('')))OR(CAST(x'' AS NUMERIC))))OR(((((0.8847202464646239)OR(rt0.c2)))AND(rt0.c0)))))AND((((rt0.c1))<=((rt0.c0)))));
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY ((((rtreenode(t1.c62, t1.c62))AND(((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c2)))))AND(((t1.c2)IS NOT(x'1894')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY ((((rtreenode(t1.c62, t1.c62))AND(((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c2)))))AND(((t1.c2)IS NOT(x'1894')))) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY ((((rtreenode(t1.c62, t1.c62))AND(((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c2)))))AND(((t1.c2)IS NOT(x'1894')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY ((((rtreenode(t1.c62, t1.c62))AND(((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c2)))))AND(((t1.c2)IS NOT(x'1894')))) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY ((((rtreenode(t1.c62, t1.c62))AND(((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c2)))))AND(((t1.c2)IS NOT(x'1894')))) ASC  NULLS FIRST;
SELECT ALL * FROM t1, rt0, vt0 WHERE (((((((rt0.c0)IS(t1.c0)))AND((t1.c2 IN ()))))OR((~ (rt0.c2))))) ORDER BY (SQLITE_VERSION() IN ())  NULLS LAST, LIKELIHOOD(t1.c0, 0.3328832262133371) COLLATE RTRIM  NULLS FIRST, ((((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)OR(((NULL)%('ࠚc')))))AND(((((((((t1.c0)OR('캡Px᷐# nK')))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)IS(t1.c0)))AND((t1.c2 IN ()))))OR((~ (rt0.c2))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (SQLITE_VERSION() IN ())  NULLS LAST, LIKELIHOOD(t1.c0, 0.3328832262133371) COLLATE RTRIM  NULLS FIRST, ((((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)OR(((NULL)%('ࠚc')))))AND(((((((((t1.c0)OR('캡Px᷐# nK')))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM t1, rt0, vt0 WHERE (((((((rt0.c0)IS(t1.c0)))AND((t1.c2 IN ()))))OR((~ (rt0.c2))))) ORDER BY (SQLITE_VERSION() IN ())  NULLS LAST, LIKELIHOOD(t1.c0, 0.3328832262133371) COLLATE RTRIM  NULLS FIRST, ((((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)OR(((NULL)%('ࠚc')))))AND(((((((((t1.c0)OR('캡Px᷐# nK')))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)IS(t1.c0)))AND((t1.c2 IN ()))))OR((~ (rt0.c2))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (SQLITE_VERSION() IN ())  NULLS LAST, LIKELIHOOD(t1.c0, 0.3328832262133371) COLLATE RTRIM  NULLS FIRST, ((((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)OR(((NULL)%('ࠚc')))))AND(((((((((t1.c0)OR('캡Px᷐# nK')))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM t1, rt0, vt0 WHERE (((((((rt0.c0)IS(t1.c0)))AND((t1.c2 IN ()))))OR((~ (rt0.c2))))) ORDER BY (SQLITE_VERSION() IN ())  NULLS LAST, LIKELIHOOD(t1.c0, 0.3328832262133371) COLLATE RTRIM  NULLS FIRST, ((((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)OR(((NULL)%('ࠚc')))))AND(((((((((t1.c0)OR('캡Px᷐# nK')))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t1 WHERE (((rt0.c1 COLLATE BINARY)||((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.2341386661475301)))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN ((((t1.c2))<((rt0.c0)))) AND (((t1.c62) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)||((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.2341386661475301)))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN ((((t1.c2))<((rt0.c0)))) AND (((t1.c62) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t1 WHERE (((rt0.c1 COLLATE BINARY)||((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.2341386661475301)))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN ((((t1.c2))<((rt0.c0)))) AND (((t1.c62) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)||((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.2341386661475301)))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN ((((t1.c2))<((rt0.c0)))) AND (((t1.c62) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t1 WHERE (((rt0.c1 COLLATE BINARY)||((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.2341386661475301)))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN ((((t1.c2))<((rt0.c0)))) AND (((t1.c62) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (NULLIF(CAST(t1.c62 AS INTEGER), ((t1.c0) BETWEEN (rt0.c2) AND (t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(t1.c62 AS INTEGER), ((t1.c0) BETWEEN (rt0.c2) AND (t1.c2)))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (NULLIF(CAST(t1.c62 AS INTEGER), ((t1.c0) BETWEEN (rt0.c2) AND (t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(t1.c62 AS INTEGER), ((t1.c0) BETWEEN (rt0.c2) AND (t1.c2)))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (NULLIF(CAST(t1.c62 AS INTEGER), ((t1.c0) BETWEEN (rt0.c2) AND (t1.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))>((((rt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))>((((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))>((((rt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))>((((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))))>((((rt0.c0) IS TRUE)))));
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (CASE WHEN (((t1.c2))>((t1.c62))) THEN CAST(rt0.c2 AS BLOB) ELSE t1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t1.c2))>((t1.c62))) THEN CAST(rt0.c2 AS BLOB) ELSE t1.c2 END) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (CASE WHEN (((t1.c2))>((t1.c62))) THEN CAST(rt0.c2 AS BLOB) ELSE t1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t1.c2))>((t1.c62))) THEN CAST(rt0.c2 AS BLOB) ELSE t1.c2 END) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (CASE WHEN (((t1.c2))>((t1.c62))) THEN CAST(rt0.c2 AS BLOB) ELSE t1.c2 END);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((t1.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((t1.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((t1.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((t1.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((t1.c2 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c62) NOT NULL) AS REAL)) ORDER BY CASE WHEN (t1.c0 IN ('uuZ', t1.c2)) THEN CASE WHEN t1.c62 THEN t1.c62 END ELSE ('804948820' IN (t1.c0)) END ASC  NULLS LAST, CASE WHEN ((t1.c62)<=(t1.c0)) THEN ((t1.c0) IS TRUE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c62) NOT NULL) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c0 IN ('uuZ', t1.c2)) THEN CASE WHEN t1.c62 THEN t1.c62 END ELSE ('804948820' IN (t1.c0)) END ASC  NULLS LAST, CASE WHEN ((t1.c62)<=(t1.c0)) THEN ((t1.c0) IS TRUE) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c62) NOT NULL) AS REAL)) ORDER BY CASE WHEN (t1.c0 IN ('uuZ', t1.c2)) THEN CASE WHEN t1.c62 THEN t1.c62 END ELSE ('804948820' IN (t1.c0)) END ASC  NULLS LAST, CASE WHEN ((t1.c62)<=(t1.c0)) THEN ((t1.c0) IS TRUE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c62) NOT NULL) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c0 IN ('uuZ', t1.c2)) THEN CASE WHEN t1.c62 THEN t1.c62 END ELSE ('804948820' IN (t1.c0)) END ASC  NULLS LAST, CASE WHEN ((t1.c62)<=(t1.c0)) THEN ((t1.c0) IS TRUE) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c62) NOT NULL) AS REAL)) ORDER BY CASE WHEN (t1.c0 IN ('uuZ', t1.c2)) THEN CASE WHEN t1.c62 THEN t1.c62 END ELSE ('804948820' IN (t1.c0)) END ASC  NULLS LAST, CASE WHEN ((t1.c62)<=(t1.c0)) THEN ((t1.c0) IS TRUE) END  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)GLOB(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND(CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)))AND(TIME(vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)GLOB(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND(CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)))AND(TIME(vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)GLOB(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND(CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)))AND(TIME(vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)GLOB(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND(CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)))AND(TIME(vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)GLOB(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND(CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)))AND(TIME(vt0.c0, vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c62 IN (NULL, t1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((t1.c62 IN (NULL, t1.c0))) ISNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c62 IN (NULL, t1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((t1.c62 IN (NULL, t1.c0))) ISNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c62 IN (NULL, t1.c0))) ISNULL));
SELECT * FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT * FROM vt0, rt0 WHERE (((((((((vt0.c0)OR(rt0.c0)))AND(NULL)))AND(((rt0.c2)<=(rt0.c0)))))AND((- (vt0.c0))))) ORDER BY ((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) AND (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(rt0.c0)))AND(NULL)))AND(((rt0.c2)<=(rt0.c0)))))AND((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) AND (rt0.c0))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((((((vt0.c0)OR(rt0.c0)))AND(NULL)))AND(((rt0.c2)<=(rt0.c0)))))AND((- (vt0.c0))))) ORDER BY ((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) AND (rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(rt0.c0)))AND(NULL)))AND(((rt0.c2)<=(rt0.c0)))))AND((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) AND (rt0.c0))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((((((vt0.c0)OR(rt0.c0)))AND(NULL)))AND(((rt0.c2)<=(rt0.c0)))))AND((- (vt0.c0))))) ORDER BY ((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))) AND (rt0.c0))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0))<((t1.c62))) COLLATE BINARY) ORDER BY (((((t1.c62) IS FALSE), (((t1.c0))=((x''))), NULL))<((((((855898473)OR(t1.c0)))AND(t1.c62)), (t1.c62 IN ()), CASE WHEN t1.c2 THEN t1.c62 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0))<((t1.c62))) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c62) IS FALSE), (((t1.c0))==((x''))), NULL))<((((((855898473)OR(t1.c0)))AND(t1.c62)), (t1.c62 IN ()), CASE WHEN t1.c2 THEN t1.c62 END)))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((((t1.c0))<((t1.c62))) COLLATE BINARY) ORDER BY (((((t1.c62) IS FALSE), (((t1.c0))=((x''))), NULL))<((((((855898473)OR(t1.c0)))AND(t1.c62)), (t1.c62 IN ()), CASE WHEN t1.c2 THEN t1.c62 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0))<((t1.c62))) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c62) IS FALSE), (((t1.c0))==((x''))), NULL))<((((((855898473)OR(t1.c0)))AND(t1.c62)), (t1.c62 IN ()), CASE WHEN t1.c2 THEN t1.c62 END)))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((((t1.c0))<((t1.c62))) COLLATE BINARY) ORDER BY (((((t1.c62) IS FALSE), (((t1.c0))=((x''))), NULL))<((((((855898473)OR(t1.c0)))AND(t1.c62)), (t1.c62 IN ()), CASE WHEN t1.c2 THEN t1.c62 END)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, rt0 WHERE (CASE WHEN COALESCE(t1.c62, t1.c0, rt0.c0, rt0.c1, rt0.c0, t1.c0) THEN SQLITE_COMPILEOPTION_USED(t1.c62) ELSE (NOT (t1.c2)) END) ORDER BY load_extension(((((rt0.c1)AND(rt0.c1)))OR(t1.c62)), (((t1.c2)) NOT BETWEEN ((rt0.c1)) AND ((t1.c2)))) DESC, CAST(rt0.c1 AS BLOB) COLLATE NOCASE  NULLS LAST, SQLITE_VERSION()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(t1.c62, t1.c0, rt0.c0, rt0.c1, rt0.c0, t1.c0) THEN SQLITE_COMPILEOPTION_USED(t1.c62) ELSE (NOT (t1.c2)) END) IS TRUE)  as count FROM t1, rt0 ORDER BY load_extension(((((rt0.c1)AND(rt0.c1)))OR(t1.c62)), (((t1.c2)) NOT BETWEEN ((rt0.c1)) AND ((t1.c2)))) DESC, CAST(rt0.c1 AS BLOB) COLLATE NOCASE  NULLS LAST, SQLITE_VERSION()  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, rt0 WHERE (CASE WHEN COALESCE(t1.c62, t1.c0, rt0.c0, rt0.c1, rt0.c0, t1.c0) THEN SQLITE_COMPILEOPTION_USED(t1.c62) ELSE (NOT (t1.c2)) END) ORDER BY load_extension(((((rt0.c1)AND(rt0.c1)))OR(t1.c62)), (((t1.c2)) NOT BETWEEN ((rt0.c1)) AND ((t1.c2)))) DESC, CAST(rt0.c1 AS BLOB) COLLATE NOCASE  NULLS LAST, SQLITE_VERSION()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(t1.c62, t1.c0, rt0.c0, rt0.c1, rt0.c0, t1.c0) THEN SQLITE_COMPILEOPTION_USED(t1.c62) ELSE (NOT (t1.c2)) END) IS TRUE)  as count FROM t1, rt0 ORDER BY load_extension(((((rt0.c1)AND(rt0.c1)))OR(t1.c62)), (((t1.c2)) NOT BETWEEN ((rt0.c1)) AND ((t1.c2)))) DESC, CAST(rt0.c1 AS BLOB) COLLATE NOCASE  NULLS LAST, SQLITE_VERSION()  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0)||(vt0.c0)))));
SELECT * FROM vt0 WHERE (CASE WHEN x'' THEN (- (vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN (- (vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN x'' THEN (- (vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN (- (vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN x'' THEN (- (vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END);
SELECT ALL * FROM rt0, vt0, t1 WHERE (((LOWER(t1.c2))||((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((LOWER(t1.c2))||((- (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE (((LOWER(t1.c2))||((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((LOWER(t1.c2))||((- (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE (((LOWER(t1.c2))||((- (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) ISNULL))AND(vt0.c0 COLLATE NOCASE)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))AND(vt0.c0 COLLATE NOCASE)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) ISNULL))AND(vt0.c0 COLLATE NOCASE)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))AND(vt0.c0 COLLATE NOCASE)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) ISNULL))AND(vt0.c0 COLLATE NOCASE)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t1, vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) COLLATE NOCASE WHERE (((((rt0.c0) NOT NULL)) BETWEEN (MIN(NULL, t1.c62)) AND (((rt0.c0) ISNULL)))) ORDER BY ((rt0.c2)>=(x'5246')) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) BETWEEN (MIN(NULL, t1.c62)) AND (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) COLLATE NOCASE ORDER BY ((rt0.c2)>=(x'5246')) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1, vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) COLLATE NOCASE WHERE (((((rt0.c0) NOT NULL)) BETWEEN (MIN(NULL, t1.c62)) AND (((rt0.c0) ISNULL)))) ORDER BY ((rt0.c2)>=(x'5246')) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) BETWEEN (MIN(NULL, t1.c62)) AND (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) COLLATE NOCASE ORDER BY ((rt0.c2)>=(x'5246')) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1, vt0 FULL OUTER JOIN rt0 ON CAST(rt0.c2 AS BLOB) COLLATE NOCASE WHERE (((((rt0.c0) NOT NULL)) BETWEEN (MIN(NULL, t1.c62)) AND (((rt0.c0) ISNULL)))) ORDER BY ((rt0.c2)>=(x'5246')) COLLATE NOCASE;
SELECT ALL * FROM vt0, t1 WHERE (CASE SQLITE_SOURCE_ID()  WHEN ((vt0.c0)&(t1.c62)) THEN NULL WHEN (NOT (vt0.c0)) THEN (((vt0.c0))=((t1.c0))) WHEN t1.c62 THEN SQLITE_VERSION() ELSE CAST(t1.c2 AS BLOB) END) ORDER BY ((((t1.c0)>>(t1.c62))) NOT BETWEEN (UNLIKELY(DISTINCT t1.c62)) AND (((vt0.c0) NOT NULL))) DESC  NULLS LAST, (+ (((t1.c62) BETWEEN (vt0.c0) AND (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE SQLITE_SOURCE_ID()  WHEN ((vt0.c0)&(t1.c62)) THEN NULL WHEN (NOT (vt0.c0)) THEN (((vt0.c0))==((t1.c0))) WHEN t1.c62 THEN SQLITE_VERSION() ELSE CAST(t1.c2 AS BLOB) END) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c0)>>(t1.c62))) NOT BETWEEN (UNLIKELY(DISTINCT t1.c62)) AND (((vt0.c0) NOT NULL))) DESC  NULLS LAST, (+ (((t1.c62) BETWEEN (vt0.c0) AND (t1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (CASE SQLITE_SOURCE_ID()  WHEN ((vt0.c0)&(t1.c62)) THEN NULL WHEN (NOT (vt0.c0)) THEN (((vt0.c0))=((t1.c0))) WHEN t1.c62 THEN SQLITE_VERSION() ELSE CAST(t1.c2 AS BLOB) END) ORDER BY ((((t1.c0)>>(t1.c62))) NOT BETWEEN (UNLIKELY(DISTINCT t1.c62)) AND (((vt0.c0) NOT NULL))) DESC  NULLS LAST, (+ (((t1.c62) BETWEEN (vt0.c0) AND (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE SQLITE_SOURCE_ID()  WHEN ((vt0.c0)&(t1.c62)) THEN NULL WHEN (NOT (vt0.c0)) THEN (((vt0.c0))==((t1.c0))) WHEN t1.c62 THEN SQLITE_VERSION() ELSE CAST(t1.c2 AS BLOB) END) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c0)>>(t1.c62))) NOT BETWEEN (UNLIKELY(DISTINCT t1.c62)) AND (((vt0.c0) NOT NULL))) DESC  NULLS LAST, (+ (((t1.c62) BETWEEN (vt0.c0) AND (t1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (CASE SQLITE_SOURCE_ID()  WHEN ((vt0.c0)&(t1.c62)) THEN NULL WHEN (NOT (vt0.c0)) THEN (((vt0.c0))=((t1.c0))) WHEN t1.c62 THEN SQLITE_VERSION() ELSE CAST(t1.c2 AS BLOB) END) ORDER BY ((((t1.c0)>>(t1.c62))) NOT BETWEEN (UNLIKELY(DISTINCT t1.c62)) AND (((vt0.c0) NOT NULL))) DESC  NULLS LAST, (+ (((t1.c62) BETWEEN (vt0.c0) AND (t1.c0))))  NULLS FIRST;
SELECT * FROM t1, rt0 RIGHT OUTER JOIN vt0 ON ((ABS(DISTINCT 1421476229)) NOT NULL) WHERE ((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((('-1767809757' IN (rt0.c2, rt0.c2)))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((('-1767809757' IN (rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN vt0 ON ((ABS(DISTINCT 1421476229)) NOT NULL) ORDER BY x''  NULLS FIRST);
SELECT * FROM t1, rt0 RIGHT OUTER JOIN vt0 ON ((ABS(DISTINCT 1421476229)) NOT NULL) WHERE ((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((('-1767809757' IN (rt0.c2, rt0.c2)))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((('-1767809757' IN (rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN vt0 ON ((ABS(DISTINCT 1421476229)) NOT NULL) ORDER BY x''  NULLS FIRST);
SELECT * FROM t1, rt0 RIGHT OUTER JOIN vt0 ON ((ABS(DISTINCT 1421476229)) NOT NULL) WHERE ((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((('-1767809757' IN (rt0.c2, rt0.c2)))))) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)-(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)-(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)-(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)-(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)-(rt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((x'')OR(rt0.c2)))OR(rt0.c1)) AS BLOB)) ORDER BY CAST(rt0.c2 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((x'')OR(rt0.c2)))OR(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((x'')OR(rt0.c2)))OR(rt0.c1)) AS BLOB)) ORDER BY CAST(rt0.c2 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((x'')OR(rt0.c2)))OR(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((x'')OR(rt0.c2)))OR(rt0.c1)) AS BLOB)) ORDER BY CAST(rt0.c2 AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0)))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((((vt0.c0)/(vt0.c0)))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((((vt0.c0)/(vt0.c0)))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0)))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((((vt0.c0)/(vt0.c0)))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((((vt0.c0)/(vt0.c0)))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0)))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((((vt0.c0)/(vt0.c0)))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (rt0.c1 COLLATE NOCASE);
SELECT * FROM rt0 WHERE ('9~N<0ArT◝');
SELECT SUM(count) FROM (SELECT ALL (('9~N<0ArT◝') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('9~N<0ArT◝');
SELECT SUM(count) FROM (SELECT ALL (('9~N<0ArT◝') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('9~N<0ArT◝');
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (((t1.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2) ISNULL)) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (((t1.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2) ISNULL)) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (((t1.c2) ISNULL));
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN '' WHEN ((((vt0.c0)AND(NULL)))AND(NULL)) THEN (('*v}KF뿎R') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN COALESCE(vt0.c0, vt0.c0) WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN (- (vt0.c0)) THEN (~ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN '' WHEN ((((vt0.c0)AND(NULL)))AND(NULL)) THEN (('*v}KF뿎R') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN COALESCE(vt0.c0, vt0.c0) WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN (- (vt0.c0)) THEN (~ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN '' WHEN ((((vt0.c0)AND(NULL)))AND(NULL)) THEN (('*v}KF뿎R') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN COALESCE(vt0.c0, vt0.c0) WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN (- (vt0.c0)) THEN (~ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN '' WHEN ((((vt0.c0)AND(NULL)))AND(NULL)) THEN (('*v}KF뿎R') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN COALESCE(vt0.c0, vt0.c0) WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN (- (vt0.c0)) THEN (~ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN '' WHEN ((((vt0.c0)AND(NULL)))AND(NULL)) THEN (('*v}KF뿎R') BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN COALESCE(vt0.c0, vt0.c0) WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN (- (vt0.c0)) THEN (~ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE ((((((rt0.c2, t1.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, t1.c62, t1.c2)) AND ((rt0.c0, t1.c62, ''))))<<((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, t1.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, t1.c62, t1.c2)) AND ((rt0.c0, t1.c62, ''))))<<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE ((((((rt0.c2, t1.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, t1.c62, t1.c2)) AND ((rt0.c0, t1.c62, ''))))<<((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, t1.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, t1.c62, t1.c2)) AND ((rt0.c0, t1.c62, ''))))<<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t1 WHERE ((((((rt0.c2, t1.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, t1.c62, t1.c2)) AND ((rt0.c0, t1.c62, ''))))<<((rt0.c2 IN ()))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON UNLIKELY(DISTINCT ((vt0.c0)AND(t1.c2))) WHERE (t1.c0) ORDER BY IFNULL(t1.c62, x'49e3')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON UNLIKELY(DISTINCT ((vt0.c0)AND(t1.c2))) ORDER BY IFNULL(t1.c62, x'49e3')  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON UNLIKELY(DISTINCT ((vt0.c0)AND(t1.c2))) WHERE (t1.c0) ORDER BY IFNULL(t1.c62, x'49e3')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON UNLIKELY(DISTINCT ((vt0.c0)AND(t1.c2))) ORDER BY IFNULL(t1.c62, x'49e3')  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON UNLIKELY(DISTINCT ((vt0.c0)AND(t1.c2))) WHERE (t1.c0) ORDER BY IFNULL(t1.c62, x'49e3')  NULLS LAST;
SELECT ALL * FROM vt0 NOT INDEXED LEFT OUTER JOIN t1 ON (json_object(vt0.c0, x'') IN (CAST(t1.c2 AS NUMERIC))) WHERE (((((t1.c62) NOT BETWEEN (t1.c2) AND (t1.c62))) NOT BETWEEN (t1.c62) AND ((- (t1.c62))))) ORDER BY ((((t1.c0)GLOB(vt0.c0))) IS TRUE), (- (CAST(t1.c62 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c62) NOT BETWEEN (t1.c2) AND (t1.c62))) NOT BETWEEN (t1.c62) AND ((- (t1.c62))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (json_object(vt0.c0, x'') IN (CAST(t1.c2 AS NUMERIC))) ORDER BY ((((t1.c0)GLOB(vt0.c0))) IS TRUE), (- (CAST(t1.c62 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED LEFT OUTER JOIN t1 ON (json_object(vt0.c0, x'') IN (CAST(t1.c2 AS NUMERIC))) WHERE (((((t1.c62) NOT BETWEEN (t1.c2) AND (t1.c62))) NOT BETWEEN (t1.c62) AND ((- (t1.c62))))) ORDER BY ((((t1.c0)GLOB(vt0.c0))) IS TRUE), (- (CAST(t1.c62 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c62) NOT BETWEEN (t1.c2) AND (t1.c62))) NOT BETWEEN (t1.c62) AND ((- (t1.c62))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (json_object(vt0.c0, x'') IN (CAST(t1.c2 AS NUMERIC))) ORDER BY ((((t1.c0)GLOB(vt0.c0))) IS TRUE), (- (CAST(t1.c62 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t1 ON (NOT (t1.c2)) CROSS JOIN vt0 ON (t1.c62 COLLATE NOCASE IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (NOT (t1.c2)) CROSS JOIN vt0 ON (t1.c62 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t1 ON (NOT (t1.c2)) CROSS JOIN vt0 ON (t1.c62 COLLATE NOCASE IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (NOT (t1.c2)) CROSS JOIN vt0 ON (t1.c62 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t1 ON (NOT (t1.c2)) CROSS JOIN vt0 ON (t1.c62 COLLATE NOCASE IN ()) WHERE (x'');
SELECT * FROM rt0 CROSS JOIN vt0 ON (('-1850253018') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM WHERE (json_array_length(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), COALESCE(vt0.c0, rt0.c2, vt0.c0, rt0.c1))) ORDER BY CAST(((rt0.c0) ISNULL) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), COALESCE(vt0.c0, rt0.c2, vt0.c0, rt0.c1))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (('-1850253018') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ORDER BY CAST(((rt0.c0) ISNULL) AS NUMERIC) DESC);
SELECT * FROM rt0 CROSS JOIN vt0 ON (('-1850253018') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM WHERE (json_array_length(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), COALESCE(vt0.c0, rt0.c2, vt0.c0, rt0.c1))) ORDER BY CAST(((rt0.c0) ISNULL) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), COALESCE(vt0.c0, rt0.c2, vt0.c0, rt0.c1))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (('-1850253018') NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ORDER BY CAST(((rt0.c0) ISNULL) AS NUMERIC) DESC);
SELECT ALL * FROM rt0 WHERE (((((UNLIKELY(rt0.c2))OR(MIN(rt0.c2, rt0.c1))))OR(((rt0.c1)||(rt0.c0))))) ORDER BY CAST(rt0.c0 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(rt0.c2))OR(MIN(rt0.c2, rt0.c1))))OR(((rt0.c1)||(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS INTEGER) DESC);
SELECT ALL * FROM rt0 WHERE (((((UNLIKELY(rt0.c2))OR(MIN(rt0.c2, rt0.c1))))OR(((rt0.c1)||(rt0.c0))))) ORDER BY CAST(rt0.c0 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(rt0.c2))OR(MIN(rt0.c2, rt0.c1))))OR(((rt0.c1)||(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS INTEGER) DESC);
SELECT ALL * FROM rt0 WHERE (((((UNLIKELY(rt0.c2))OR(MIN(rt0.c2, rt0.c1))))OR(((rt0.c1)||(rt0.c0))))) ORDER BY CAST(rt0.c0 AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)>=(rt0.c2))) BETWEEN (((((((((((((rt0.c0)AND(0.7139624013847904)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))) AND (((rt0.c2)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>=(rt0.c2))) BETWEEN (((((((((((((rt0.c0)AND(0.7139624013847904)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))) AND (((rt0.c2)IS(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)>=(rt0.c2))) BETWEEN (((((((((((((rt0.c0)AND(0.7139624013847904)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))) AND (((rt0.c2)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>=(rt0.c2))) BETWEEN (((((((((((((rt0.c0)AND(0.7139624013847904)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))) AND (((rt0.c2)IS(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)>=(rt0.c2))) BETWEEN (((((((((((((rt0.c0)AND(0.7139624013847904)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))) AND (((rt0.c2)IS(rt0.c1)))));
SELECT * FROM t1 WHERE (((((t1.c0)IS NOT(t1.c62)))*(((t1.c2)>(-832759350))))) ORDER BY ((CAST(t1.c62 AS NUMERIC)) BETWEEN (((t1.c0) IS FALSE)) AND (((((((((t1.c62)AND(t1.c62)))OR(t1.c2)))OR('udx>늞w')))AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)IS NOT(t1.c62)))*(((t1.c2)>(-832759350))))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c62 AS NUMERIC)) BETWEEN (((t1.c0) IS FALSE)) AND (((((((((t1.c62)AND(t1.c62)))OR(t1.c2)))OR('udx>늞w')))AND(t1.c0)))));
SELECT * FROM t1 WHERE (((((t1.c0)IS NOT(t1.c62)))*(((t1.c2)>(-832759350))))) ORDER BY ((CAST(t1.c62 AS NUMERIC)) BETWEEN (((t1.c0) IS FALSE)) AND (((((((((t1.c62)AND(t1.c62)))OR(t1.c2)))OR('udx>늞w')))AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)IS NOT(t1.c62)))*(((t1.c2)>(-832759350))))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c62 AS NUMERIC)) BETWEEN (((t1.c0) IS FALSE)) AND (((((((((t1.c62)AND(t1.c62)))OR(t1.c2)))OR('udx>늞w')))AND(t1.c0)))));
SELECT * FROM t1 WHERE (((((t1.c0)IS NOT(t1.c62)))*(((t1.c2)>(-832759350))))) ORDER BY ((CAST(t1.c62 AS NUMERIC)) BETWEEN (((t1.c0) IS FALSE)) AND (((((((((t1.c62)AND(t1.c62)))OR(t1.c2)))OR('udx>늞w')))AND(t1.c0))));
SELECT ALL * FROM t1 CROSS JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c0))>=((t1.c62, t1.c2, t1.c2))))OR(LOWER('tⷖ'))) WHERE (LIKELY(DISTINCT CAST(rt0.c0 AS TEXT))) ORDER BY ((((((((CASE t1.c62  WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c62 WHEN rt0.c1 THEN 'N	' ELSE t1.c62 END)AND((t1.c2 IN ()))))AND(((rt0.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC))))AND(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST, (- (json_object(rt0.c1, rt0.c0, rt0.c2, rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CAST(rt0.c0 AS TEXT))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c0))>=((t1.c62, t1.c2, t1.c2))))OR(LOWER('tⷖ'))) ORDER BY ((((((((CASE t1.c62  WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c62 WHEN rt0.c1 THEN 'N	' ELSE t1.c62 END)AND((t1.c2 IN ()))))AND(((rt0.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC))))AND(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST, (- (json_object(rt0.c1, rt0.c0, rt0.c2, rt0.c0))) DESC);
SELECT ALL * FROM t1 CROSS JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c0))>=((t1.c62, t1.c2, t1.c2))))OR(LOWER('tⷖ'))) WHERE (LIKELY(DISTINCT CAST(rt0.c0 AS TEXT))) ORDER BY ((((((((CASE t1.c62  WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c62 WHEN rt0.c1 THEN 'N	' ELSE t1.c62 END)AND((t1.c2 IN ()))))AND(((rt0.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC))))AND(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST, (- (json_object(rt0.c1, rt0.c0, rt0.c2, rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CAST(rt0.c0 AS TEXT))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c0))>=((t1.c62, t1.c2, t1.c2))))OR(LOWER('tⷖ'))) ORDER BY ((((((((CASE t1.c62  WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c62 WHEN rt0.c1 THEN 'N	' ELSE t1.c62 END)AND((t1.c2 IN ()))))AND(((rt0.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC))))AND(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST, (- (json_object(rt0.c1, rt0.c0, rt0.c2, rt0.c0))) DESC);
SELECT ALL * FROM t1 CROSS JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c0))>=((t1.c62, t1.c2, t1.c2))))OR(LOWER('tⷖ'))) WHERE (LIKELY(DISTINCT CAST(rt0.c0 AS TEXT))) ORDER BY ((((((((CASE t1.c62  WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c62 WHEN rt0.c1 THEN 'N	' ELSE t1.c62 END)AND((t1.c2 IN ()))))AND(((rt0.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC))))AND(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST, (- (json_object(rt0.c1, rt0.c0, rt0.c2, rt0.c0))) DESC;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((rt0.c0) BETWEEN (t1.c2) AND (t1.c2)) COLLATE BINARY) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) ASC, ((CAST(t1.c2 AS INTEGER))%((t1.c0 IN (t1.c2, rt0.c1)))) ASC, (((t1.c0)) NOT BETWEEN ((NULL)) AND ((((((rt0.c1)OR(rt0.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (t1.c2) AND (t1.c2)) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) ASC, ((CAST(t1.c2 AS INTEGER))%((t1.c0 IN (t1.c2, rt0.c1)))) ASC, (((t1.c0)) NOT BETWEEN ((NULL)) AND ((((((rt0.c1)OR(rt0.c0)))OR(t1.c0))))));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((rt0.c0) BETWEEN (t1.c2) AND (t1.c2)) COLLATE BINARY) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) ASC, ((CAST(t1.c2 AS INTEGER))%((t1.c0 IN (t1.c2, rt0.c1)))) ASC, (((t1.c0)) NOT BETWEEN ((NULL)) AND ((((((rt0.c1)OR(rt0.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (t1.c2) AND (t1.c2)) COLLATE BINARY) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) ASC, ((CAST(t1.c2 AS INTEGER))%((t1.c0 IN (t1.c2, rt0.c1)))) ASC, (((t1.c0)) NOT BETWEEN ((NULL)) AND ((((((rt0.c1)OR(rt0.c0)))OR(t1.c0))))));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((rt0.c0) BETWEEN (t1.c2) AND (t1.c2)) COLLATE BINARY) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) ASC, ((CAST(t1.c2 AS INTEGER))%((t1.c0 IN (t1.c2, rt0.c1)))) ASC, (((t1.c0)) NOT BETWEEN ((NULL)) AND ((((((rt0.c1)OR(rt0.c0)))OR(t1.c0)))));
SELECT COUNT(*) FROM t1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((- (t1.c62)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (t1.c62)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((- (t1.c62)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (t1.c62)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((- (t1.c62)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST, CASE ((rt0.c2) IS TRUE)  WHEN CHANGES() THEN rt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST, CASE ((rt0.c2) IS TRUE)  WHEN CHANGES() THEN rt0.c1 END DESC);
SELECT * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST, CASE ((rt0.c2) IS TRUE)  WHEN CHANGES() THEN rt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST, CASE ((rt0.c2) IS TRUE)  WHEN CHANGES() THEN rt0.c1 END DESC);
SELECT * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST, CASE ((rt0.c2) IS TRUE)  WHEN CHANGES() THEN rt0.c1 END DESC;
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON '}' INNER JOIN vt0 ON 1005929635 WHERE (LIKELY((t1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((t1.c2 IN ()))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON '}' INNER JOIN vt0 ON 1005929635);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON '}' INNER JOIN vt0 ON 1005929635 WHERE (LIKELY((t1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((t1.c2 IN ()))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON '}' INNER JOIN vt0 ON 1005929635);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON '}' INNER JOIN vt0 ON 1005929635 WHERE (LIKELY((t1.c2 IN ())));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (vt0.c0 IN ()) WHERE (MIN(CASE WHEN vt0.c0 THEN t1.c62 END, CASE t1.c62  WHEN t1.c0 THEN 0Xffffffffd06095f3 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c62 THEN t1.c0 ELSE t1.c2 END)) ORDER BY (NOT (((t1.c2) BETWEEN (t1.c62) AND (t1.c0)))), ((t1.c0) ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MIN(CASE WHEN vt0.c0 THEN t1.c62 END, CASE t1.c62  WHEN t1.c0 THEN 0Xffffffffd06095f3 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c62 THEN t1.c0 ELSE t1.c2 END)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (vt0.c0 IN ()) ORDER BY (NOT (((t1.c2) BETWEEN (t1.c62) AND (t1.c0)))), ((t1.c0) ISNULL) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (vt0.c0 IN ()) WHERE (MIN(CASE WHEN vt0.c0 THEN t1.c62 END, CASE t1.c62  WHEN t1.c0 THEN 0Xffffffffd06095f3 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c62 THEN t1.c0 ELSE t1.c2 END)) ORDER BY (NOT (((t1.c2) BETWEEN (t1.c62) AND (t1.c0)))), ((t1.c0) ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MIN(CASE WHEN vt0.c0 THEN t1.c62 END, CASE t1.c62  WHEN t1.c0 THEN 0Xffffffffd06095f3 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c62 THEN t1.c0 ELSE t1.c2 END)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (vt0.c0 IN ()) ORDER BY (NOT (((t1.c2) BETWEEN (t1.c62) AND (t1.c0)))), ((t1.c0) ISNULL) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (vt0.c0 IN ()) WHERE (MIN(CASE WHEN vt0.c0 THEN t1.c62 END, CASE t1.c62  WHEN t1.c0 THEN 0Xffffffffd06095f3 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c62 THEN t1.c0 ELSE t1.c2 END)) ORDER BY (NOT (((t1.c2) BETWEEN (t1.c62) AND (t1.c0)))), ((t1.c0) ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (- (651702851)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (- (651702851)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (- (651702851)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (- (651702851)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (- (651702851)) END);
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON CASE CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE t1.c0 END  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (t1.c2 IN ()) WHEN ((((t1.c2)AND(rt0.c1)))AND(t1.c2)) THEN ((((rt0.c1)OR(x'')))OR(vt0.c0)) WHEN CASE vt0.c0  WHEN t1.c62 THEN rt0.c0 ELSE t1.c2 END THEN CAST(vt0.c0 AS BLOB) ELSE (rt0.c0 IN (0X232203e1)) END LEFT OUTER JOIN vt0 ON '' WHERE (((t1.c0) BETWEEN (rt0.c2) AND (t1.c62)) COLLATE BINARY) ORDER BY (NOT (((((rt0.c1)OR(rt0.c2)))AND(t1.c62))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (rt0.c2) AND (t1.c62)) COLLATE BINARY) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON CASE CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE t1.c0 END  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (t1.c2 IN ()) WHEN ((((t1.c2)AND(rt0.c1)))AND(t1.c2)) THEN ((((rt0.c1)OR(x'')))OR(vt0.c0)) WHEN CASE vt0.c0  WHEN t1.c62 THEN rt0.c0 ELSE t1.c2 END THEN CAST(vt0.c0 AS BLOB) ELSE (rt0.c0 IN (0X232203e1)) END LEFT OUTER JOIN vt0 ON '' ORDER BY (NOT (((((rt0.c1)OR(rt0.c2)))AND(t1.c62))))  NULLS LAST);
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON CASE CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE t1.c0 END  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (t1.c2 IN ()) WHEN ((((t1.c2)AND(rt0.c1)))AND(t1.c2)) THEN ((((rt0.c1)OR(x'')))OR(vt0.c0)) WHEN CASE vt0.c0  WHEN t1.c62 THEN rt0.c0 ELSE t1.c2 END THEN CAST(vt0.c0 AS BLOB) ELSE (rt0.c0 IN (0X232203e1)) END LEFT OUTER JOIN vt0 ON '' WHERE (((t1.c0) BETWEEN (rt0.c2) AND (t1.c62)) COLLATE BINARY) ORDER BY (NOT (((((rt0.c1)OR(rt0.c2)))AND(t1.c62))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (rt0.c2) AND (t1.c62)) COLLATE BINARY) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON CASE CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE t1.c0 END  WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (t1.c2 IN ()) WHEN ((((t1.c2)AND(rt0.c1)))AND(t1.c2)) THEN ((((rt0.c1)OR(x'')))OR(vt0.c0)) WHEN CASE vt0.c0  WHEN t1.c62 THEN rt0.c0 ELSE t1.c2 END THEN CAST(vt0.c0 AS BLOB) ELSE (rt0.c0 IN (0X232203e1)) END LEFT OUTER JOIN vt0 ON '' ORDER BY (NOT (((((rt0.c1)OR(rt0.c2)))AND(t1.c62))))  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE (CAST(t1.c62 COLLATE BINARY AS INTEGER)) ORDER BY t1.c62 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c62 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0, t1 ORDER BY t1.c62 COLLATE RTRIM);
SELECT ALL * FROM rt0, t1 WHERE (CAST(t1.c62 COLLATE BINARY AS INTEGER)) ORDER BY t1.c62 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c62 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0, t1 ORDER BY t1.c62 COLLATE RTRIM);
SELECT ALL * FROM rt0, t1 WHERE (CAST(t1.c62 COLLATE BINARY AS INTEGER)) ORDER BY t1.c62 COLLATE RTRIM;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))<=(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))<=(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))<=(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))<=(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))<=(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))) ORDER BY rt0.c1 ASC;
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (t1.c62) ORDER BY ((((rt0.c1) NOT NULL))<<(x'5d7a')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c62) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY ((((rt0.c1) NOT NULL))<<(x'5d7a')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (t1.c62) ORDER BY ((((rt0.c1) NOT NULL))<<(x'5d7a')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c62) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY ((((rt0.c1) NOT NULL))<<(x'5d7a')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (t1.c62) ORDER BY ((((rt0.c1) NOT NULL))<<(x'5d7a')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (((CAST(vt0.c0 AS BLOB))<(((((((((vt0.c0)AND(x'4abf')))AND('-1405240048')))OR(vt0.c0)))OR(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))<(((((((((vt0.c0)AND(x'4abf')))AND('-1405240048')))OR(vt0.c0)))OR(t1.c2))))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (((CAST(vt0.c0 AS BLOB))<(((((((((vt0.c0)AND(x'4abf')))AND('-1405240048')))OR(vt0.c0)))OR(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))<(((((((((vt0.c0)AND(x'4abf')))AND('-1405240048')))OR(vt0.c0)))OR(t1.c2))))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (((CAST(vt0.c0 AS BLOB))<(((((((((vt0.c0)AND(x'4abf')))AND('-1405240048')))OR(vt0.c0)))OR(t1.c2)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 END IN ((((t1.c62))<((t1.c2)))))) ORDER BY ((((t1.c0)OR(t1.c62)))AND(x'')) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t1.c0  WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 END IN ((((t1.c62))<((t1.c2)))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)OR(t1.c62)))AND(x'')) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 END IN ((((t1.c62))<((t1.c2)))))) ORDER BY ((((t1.c0)OR(t1.c62)))AND(x'')) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t1.c0  WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 END IN ((((t1.c62))<((t1.c2)))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)OR(t1.c62)))AND(x'')) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 END IN ((((t1.c62))<((t1.c2)))))) ORDER BY ((((t1.c0)OR(t1.c62)))AND(x'')) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c62)<>(t1.c62))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c62)!=(t1.c62))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c62)<>(t1.c62))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c62)!=(t1.c62))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c62)<>(t1.c62))) IS TRUE));
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ORDER BY ((NOT ('Vg')) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((NOT ('Vg')) IN ())  NULLS LAST);
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ORDER BY ((NOT ('Vg')) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((NOT ('Vg')) IN ())  NULLS LAST);
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ORDER BY ((NOT ('Vg')) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (COALESCE(DISTINCT ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), ((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), ((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (COALESCE(DISTINCT ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), ((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), ((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0)))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (COALESCE(DISTINCT ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), ((t1.c2) NOT BETWEEN (t1.c0) AND (t1.c0))));
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c0))>=((rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END) ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c0))>=((rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) AS INTEGER));
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c0))>=((rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END) ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c0))>=((rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) AS INTEGER));
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (NOT (rt0.c1)) THEN (((rt0.c0))>=((rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END) ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) AS INTEGER);
SELECT ALL * FROM rt0, vt0 WHERE (0.44949054709260905) ORDER BY (- (((rt0.c1)<<(vt0.c0))))  NULLS LAST, '貰31<%Q' ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.44949054709260905) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c1)<<(vt0.c0))))  NULLS LAST, '貰31<%Q' ASC);
SELECT ALL * FROM rt0, vt0 WHERE (0.44949054709260905) ORDER BY (- (((rt0.c1)<<(vt0.c0))))  NULLS LAST, '貰31<%Q' ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.44949054709260905) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c1)<<(vt0.c0))))  NULLS LAST, '貰31<%Q' ASC);
SELECT ALL * FROM rt0, vt0 WHERE (0.44949054709260905) ORDER BY (- (((rt0.c1)<<(vt0.c0))))  NULLS LAST, '貰31<%Q' ASC;
SELECT * FROM t1 WHERE (CASE WHEN CASE WHEN t1.c62 THEN t1.c2 WHEN t1.c2 THEN t1.c62 WHEN t1.c2 THEN t1.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c62 END THEN (((t1.c62, 'ꂞ顉Rd[J飏', t1.c62)) BETWEEN (('', t1.c0, t1.c0)) AND ((t1.c0, t1.c62, t1.c62))) ELSE ((t1.c62)IS NOT(t1.c0)) END) ORDER BY LOWER(DISTINCT ((t1.c62)<(t1.c62)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t1.c62 THEN t1.c2 WHEN t1.c2 THEN t1.c62 WHEN t1.c2 THEN t1.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c62 END THEN (((t1.c62, 'ꂞ顉Rd[J飏', t1.c62)) BETWEEN (('', t1.c0, t1.c0)) AND ((t1.c0, t1.c62, t1.c62))) ELSE ((t1.c62)IS NOT(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY LOWER(DISTINCT ((t1.c62)<(t1.c62))));
SELECT * FROM t1 WHERE (CASE WHEN CASE WHEN t1.c62 THEN t1.c2 WHEN t1.c2 THEN t1.c62 WHEN t1.c2 THEN t1.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c62 END THEN (((t1.c62, 'ꂞ顉Rd[J飏', t1.c62)) BETWEEN (('', t1.c0, t1.c0)) AND ((t1.c0, t1.c62, t1.c62))) ELSE ((t1.c62)IS NOT(t1.c0)) END) ORDER BY LOWER(DISTINCT ((t1.c62)<(t1.c62)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t1.c62 THEN t1.c2 WHEN t1.c2 THEN t1.c62 WHEN t1.c2 THEN t1.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c62 END THEN (((t1.c62, 'ꂞ顉Rd[J飏', t1.c62)) BETWEEN (('', t1.c0, t1.c0)) AND ((t1.c0, t1.c62, t1.c62))) ELSE ((t1.c62)IS NOT(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY LOWER(DISTINCT ((t1.c62)<(t1.c62))));
SELECT * FROM t1 WHERE (CASE WHEN CASE WHEN t1.c62 THEN t1.c2 WHEN t1.c2 THEN t1.c62 WHEN t1.c2 THEN t1.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c0 THEN t1.c62 END THEN (((t1.c62, 'ꂞ顉Rd[J飏', t1.c62)) BETWEEN (('', t1.c0, t1.c0)) AND ((t1.c0, t1.c62, t1.c62))) ELSE ((t1.c62)IS NOT(t1.c0)) END) ORDER BY LOWER(DISTINCT ((t1.c62)<(t1.c62)));
SELECT * FROM t1 WHERE ((~ (CAST(t1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((~ (CAST(t1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((~ (CAST(t1.c0 AS TEXT))));
SELECT * FROM vt0, rt0, t1 WHERE (t1.c2) ORDER BY t1.c62 DESC  NULLS FIRST, t1.c62  NULLS LAST, ((rt0.c2)IS(((((t1.c0)OR(t1.c62)))OR(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY t1.c62 DESC  NULLS FIRST, t1.c62  NULLS LAST, ((rt0.c2)IS(((((t1.c0)OR(t1.c62)))OR(rt0.c0)))) ASC);
SELECT * FROM vt0, rt0, t1 WHERE (t1.c2) ORDER BY t1.c62 DESC  NULLS FIRST, t1.c62  NULLS LAST, ((rt0.c2)IS(((((t1.c0)OR(t1.c62)))OR(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY t1.c62 DESC  NULLS FIRST, t1.c62  NULLS LAST, ((rt0.c2)IS(((((t1.c0)OR(t1.c62)))OR(rt0.c0)))) ASC);
SELECT * FROM vt0, rt0, t1 WHERE (t1.c2) ORDER BY t1.c62 DESC  NULLS FIRST, t1.c62  NULLS LAST, ((rt0.c2)IS(((((t1.c0)OR(t1.c62)))OR(rt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((vt0.c0 COLLATE BINARY) NOT NULL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((vt0.c0 COLLATE BINARY) NOT NULL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((vt0.c0 COLLATE BINARY) NOT NULL)) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c2))=((rt0.c1))))==(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))==((rt0.c1))))==(rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c2))=((rt0.c1))))==(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))==((rt0.c1))))==(rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c2))=((rt0.c1))))==(rt0.c2)));
SELECT ALL * FROM t1, rt0 INNER JOIN vt0 ON ((((t1.c0 COLLATE BINARY)OR((~ ('1678500381')))))AND(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) WHERE ('(r');
SELECT SUM(count) FROM (SELECT (('(r') IS TRUE)  as count FROM t1, rt0 INNER JOIN vt0 ON ((((t1.c0 COLLATE BINARY)OR((~ ('1678500381')))))AND(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM t1, rt0 INNER JOIN vt0 ON ((((t1.c0 COLLATE BINARY)OR((~ ('1678500381')))))AND(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) WHERE ('(r');
SELECT SUM(count) FROM (SELECT (('(r') IS TRUE)  as count FROM t1, rt0 INNER JOIN vt0 ON ((((t1.c0 COLLATE BINARY)OR((~ ('1678500381')))))AND(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM t1, rt0 INNER JOIN vt0 ON ((((t1.c0 COLLATE BINARY)OR((~ ('1678500381')))))AND(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) WHERE ('(r');
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND('1107504515')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND('1107504515')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND('1107504515')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND('1107504515')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND('1107504515')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL));
SELECT ALL * FROM t1, rt0 WHERE (CASE ((((((((((((t1.c2)OR(rt0.c0)))OR(t1.c62)))AND(rt0.c1)))AND(t1.c0)))OR(t1.c2)))AND(rt0.c1))  WHEN ((t1.c0)||(t1.c0)) THEN ((((rt0.c2)OR(NULL)))AND(t1.c62)) ELSE ((0.06405272715346289)>>(t1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((((((t1.c2)OR(rt0.c0)))OR(t1.c62)))AND(rt0.c1)))AND(t1.c0)))OR(t1.c2)))AND(rt0.c1))  WHEN ((t1.c0)||(t1.c0)) THEN ((((rt0.c2)OR(NULL)))AND(t1.c62)) ELSE ((0.06405272715346289)>>(t1.c2)) END) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (CASE ((((((((((((t1.c2)OR(rt0.c0)))OR(t1.c62)))AND(rt0.c1)))AND(t1.c0)))OR(t1.c2)))AND(rt0.c1))  WHEN ((t1.c0)||(t1.c0)) THEN ((((rt0.c2)OR(NULL)))AND(t1.c62)) ELSE ((0.06405272715346289)>>(t1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((((((t1.c2)OR(rt0.c0)))OR(t1.c62)))AND(rt0.c1)))AND(t1.c0)))OR(t1.c2)))AND(rt0.c1))  WHEN ((t1.c0)||(t1.c0)) THEN ((((rt0.c2)OR(NULL)))AND(t1.c62)) ELSE ((0.06405272715346289)>>(t1.c2)) END) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (CASE ((((((((((((t1.c2)OR(rt0.c0)))OR(t1.c62)))AND(rt0.c1)))AND(t1.c0)))OR(t1.c2)))AND(rt0.c1))  WHEN ((t1.c0)||(t1.c0)) THEN ((((rt0.c2)OR(NULL)))AND(t1.c62)) ELSE ((0.06405272715346289)>>(t1.c2)) END);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (UPPER((~ (vt0.c0)))) ORDER BY t1.c62 ASC  NULLS LAST, CAST(((vt0.c0) NOT BETWEEN (t1.c62) AND (t1.c0)) AS BLOB)  NULLS LAST, ((((t1.c2)AND(t1.c2))) NOT BETWEEN ('900947452') AND ((NOT (''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((~ (vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY t1.c62 ASC  NULLS LAST, CAST(((vt0.c0) NOT BETWEEN (t1.c62) AND (t1.c0)) AS BLOB)  NULLS LAST, ((((t1.c2)AND(t1.c2))) NOT BETWEEN ('900947452') AND ((NOT (''))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (UPPER((~ (vt0.c0)))) ORDER BY t1.c62 ASC  NULLS LAST, CAST(((vt0.c0) NOT BETWEEN (t1.c62) AND (t1.c0)) AS BLOB)  NULLS LAST, ((((t1.c2)AND(t1.c2))) NOT BETWEEN ('900947452') AND ((NOT (''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((~ (vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY t1.c62 ASC  NULLS LAST, CAST(((vt0.c0) NOT BETWEEN (t1.c62) AND (t1.c0)) AS BLOB)  NULLS LAST, ((((t1.c2)AND(t1.c2))) NOT BETWEEN ('900947452') AND ((NOT (''))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (UPPER((~ (vt0.c0)))) ORDER BY t1.c62 ASC  NULLS LAST, CAST(((vt0.c0) NOT BETWEEN (t1.c62) AND (t1.c0)) AS BLOB)  NULLS LAST, ((((t1.c2)AND(t1.c2))) NOT BETWEEN ('900947452') AND ((NOT (''))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<=('892210859'))) ORDER BY (vt0.c0 IN ())  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<=('892210859'))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<=('892210859'))) ORDER BY (vt0.c0 IN ())  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<=('892210859'))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<=('892210859'))) ORDER BY (vt0.c0 IN ())  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(PRINTF(vt0.c0))))OR(((vt0.c0)||(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(PRINTF(vt0.c0))))OR(((vt0.c0)||(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(PRINTF(vt0.c0))))OR(((vt0.c0)||(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(PRINTF(vt0.c0))))OR(((vt0.c0)||(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(PRINTF(vt0.c0))))OR(((vt0.c0)||(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM t1, rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL * FROM t1, rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL * FROM t1, rt0, vt0 WHERE (rt0.c0);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0)||(((rt0.c1) NOTNULL))) WHERE (((((((rt0.c0)LIKE(vt0.c0)))OR(((rt0.c2) NOT NULL))))OR(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)LIKE(vt0.c0)))OR(((rt0.c2) NOT NULL))))OR(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0)||(((rt0.c1) NOTNULL))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0)||(((rt0.c1) NOTNULL))) WHERE (((((((rt0.c0)LIKE(vt0.c0)))OR(((rt0.c2) NOT NULL))))OR(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)LIKE(vt0.c0)))OR(((rt0.c2) NOT NULL))))OR(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0)||(((rt0.c1) NOTNULL))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0)||(((rt0.c1) NOTNULL))) WHERE (((((((rt0.c0)LIKE(vt0.c0)))OR(((rt0.c2) NOT NULL))))OR(((rt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST((NOT (vt0.c0)) AS TEXT) WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((('-1349274452')OR(rt0.c1))))) ORDER BY ((((rt0.c1)%(rt0.c2))) BETWEEN ((((rt0.c1))==((vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))) DESC, (((rt0.c1)>(rt0.c2)) IN ())  NULLS FIRST, load_extension(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((('-1349274452')OR(rt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST((NOT (vt0.c0)) AS TEXT) ORDER BY ((((rt0.c1)%(rt0.c2))) BETWEEN ((((rt0.c1))=((vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))) DESC, (((rt0.c1)>(rt0.c2)) IN ())  NULLS FIRST, load_extension(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST((NOT (vt0.c0)) AS TEXT) WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((('-1349274452')OR(rt0.c1))))) ORDER BY ((((rt0.c1)%(rt0.c2))) BETWEEN ((((rt0.c1))==((vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))) DESC, (((rt0.c1)>(rt0.c2)) IN ())  NULLS FIRST, load_extension(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((('-1349274452')OR(rt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST((NOT (vt0.c0)) AS TEXT) ORDER BY ((((rt0.c1)%(rt0.c2))) BETWEEN ((((rt0.c1))=((vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))) DESC, (((rt0.c1)>(rt0.c2)) IN ())  NULLS FIRST, load_extension(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 INNER JOIN rt0 ON (- (TRIM(t1.c62, t1.c2))) WHERE ((~ ('-288520552'))) ORDER BY x'' DESC, ((rt0.c2 COLLATE NOCASE) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((~ ('-288520552'))) IS TRUE)  as count FROM vt0, t1 INNER JOIN rt0 ON (- (TRIM(t1.c62, t1.c2))) ORDER BY x'' DESC, ((rt0.c2 COLLATE NOCASE) ISNULL) ASC);
SELECT COUNT(*) FROM vt0, t1 INNER JOIN rt0 ON (- (TRIM(t1.c62, t1.c2))) WHERE ((~ ('-288520552'))) ORDER BY x'' DESC, ((rt0.c2 COLLATE NOCASE) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((~ ('-288520552'))) IS TRUE)  as count FROM vt0, t1 INNER JOIN rt0 ON (- (TRIM(t1.c62, t1.c2))) ORDER BY x'' DESC, ((rt0.c2 COLLATE NOCASE) ISNULL) ASC);
SELECT COUNT(*) FROM vt0, t1 INNER JOIN rt0 ON (- (TRIM(t1.c62, t1.c2))) WHERE ((~ ('-288520552'))) ORDER BY x'' DESC, ((rt0.c2 COLLATE NOCASE) ISNULL) ASC;
SELECT * FROM t1 FULL OUTER JOIN rt0 ON (CASE t1.c2  WHEN '' THEN t1.c0 END IN ()) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN t1.c2 THEN rt0.c0 ELSE rt0.c1 END AS TEXT) WHERE ((- ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (CASE t1.c2  WHEN '' THEN t1.c0 END IN ()) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN t1.c2 THEN rt0.c0 ELSE rt0.c1 END AS TEXT));
SELECT * FROM t1 FULL OUTER JOIN rt0 ON (CASE t1.c2  WHEN '' THEN t1.c0 END IN ()) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN t1.c2 THEN rt0.c0 ELSE rt0.c1 END AS TEXT) WHERE ((- ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (CASE t1.c2  WHEN '' THEN t1.c0 END IN ()) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN t1.c2 THEN rt0.c0 ELSE rt0.c1 END AS TEXT));
SELECT * FROM t1 FULL OUTER JOIN rt0 ON (CASE t1.c2  WHEN '' THEN t1.c0 END IN ()) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN t1.c2 THEN rt0.c0 ELSE rt0.c1 END AS TEXT) WHERE ((- ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0)/(t1.c62)))IS(((vt0.c0) NOT NULL)))) ORDER BY NULL, (((t1.c0)) NOT BETWEEN (((~ (t1.c0)))) AND ((CASE ''  WHEN t1.c62 THEN t1.c62 ELSE vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(t1.c62)))IS(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t1, vt0 ORDER BY NULL, (((t1.c0)) NOT BETWEEN (((~ (t1.c0)))) AND ((CASE ''  WHEN t1.c62 THEN t1.c62 ELSE vt0.c0 END)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0)/(t1.c62)))IS(((vt0.c0) NOT NULL)))) ORDER BY NULL, (((t1.c0)) NOT BETWEEN (((~ (t1.c0)))) AND ((CASE ''  WHEN t1.c62 THEN t1.c62 ELSE vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(t1.c62)))IS(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t1, vt0 ORDER BY NULL, (((t1.c0)) NOT BETWEEN (((~ (t1.c0)))) AND ((CASE ''  WHEN t1.c62 THEN t1.c62 ELSE vt0.c0 END)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0)/(t1.c62)))IS(((vt0.c0) NOT NULL)))) ORDER BY NULL, (((t1.c0)) NOT BETWEEN (((~ (t1.c0)))) AND ((CASE ''  WHEN t1.c62 THEN t1.c62 ELSE vt0.c0 END)))  NULLS FIRST;
SELECT * FROM t1, rt0, vt0 WHERE (UNLIKELY(DISTINCT (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ORDER BY x'cb9e' ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY x'cb9e' ASC);
SELECT * FROM t1, rt0, vt0 WHERE (UNLIKELY(DISTINCT (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ORDER BY x'cb9e' ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY x'cb9e' ASC);
SELECT * FROM t1, rt0, vt0 WHERE (UNLIKELY(DISTINCT (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ORDER BY x'cb9e' ASC;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c62))>=((t1.c2))))<=(((t1.c62) BETWEEN (t1.c0) AND (t1.c62)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c62))>=((t1.c2))))<=(((t1.c62) BETWEEN (t1.c0) AND (t1.c62))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c62))>=((t1.c2))))<=(((t1.c62) BETWEEN (t1.c0) AND (t1.c62)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c62))>=((t1.c2))))<=(((t1.c62) BETWEEN (t1.c0) AND (t1.c62))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c62))>=((t1.c2))))<=(((t1.c62) BETWEEN (t1.c0) AND (t1.c62)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2) IS FALSE))));
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER))))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER))))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER)))));
SELECT ALL * FROM t1, vt0 WHERE ('-1472289726') ORDER BY (((((('2004226124') NOTNULL))OR(CASE WHEN t1.c2 THEN t1.c62 WHEN t1.c0 THEN t1.c0 WHEN '-2006210222' THEN t1.c2 ELSE vt0.c0 END)))OR(CAST(t1.c62 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1472289726') IS TRUE)  as count FROM t1, vt0 ORDER BY (((((('2004226124') NOTNULL))OR(CASE WHEN t1.c2 THEN t1.c62 WHEN t1.c0 THEN t1.c0 WHEN '-2006210222' THEN t1.c2 ELSE vt0.c0 END)))OR(CAST(t1.c62 AS INTEGER))) ASC);
SELECT ALL * FROM t1, vt0 WHERE ('-1472289726') ORDER BY (((((('2004226124') NOTNULL))OR(CASE WHEN t1.c2 THEN t1.c62 WHEN t1.c0 THEN t1.c0 WHEN '-2006210222' THEN t1.c2 ELSE vt0.c0 END)))OR(CAST(t1.c62 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1472289726') IS TRUE)  as count FROM t1, vt0 ORDER BY (((((('2004226124') NOTNULL))OR(CASE WHEN t1.c2 THEN t1.c62 WHEN t1.c0 THEN t1.c0 WHEN '-2006210222' THEN t1.c2 ELSE vt0.c0 END)))OR(CAST(t1.c62 AS INTEGER))) ASC);
SELECT ALL * FROM t1, vt0 WHERE ('-1472289726') ORDER BY (((((('2004226124') NOTNULL))OR(CASE WHEN t1.c2 THEN t1.c62 WHEN t1.c0 THEN t1.c0 WHEN '-2006210222' THEN t1.c2 ELSE vt0.c0 END)))OR(CAST(t1.c62 AS INTEGER))) ASC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0 IN ()))AND(CAST(NULL AS NUMERIC))))OR(CASE t1.c0  WHEN t1.c2 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END)) LEFT OUTER JOIN t1 ON t1.c2 WHERE (((((((((t1.c62)OR('-1786812864')))OR(0.02412464547313109)))AND(CAST(vt0.c0 AS REAL))))AND(((rt0.c2)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c62)OR('-1786812864')))OR(0.02412464547313109)))AND(CAST(vt0.c0 AS REAL))))AND(((rt0.c2)AND(rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0 IN ()))AND(CAST(NULL AS NUMERIC))))OR(CASE t1.c0  WHEN t1.c2 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END)) LEFT OUTER JOIN t1 ON t1.c2);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0 IN ()))AND(CAST(NULL AS NUMERIC))))OR(CASE t1.c0  WHEN t1.c2 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END)) LEFT OUTER JOIN t1 ON t1.c2 WHERE (((((((((t1.c62)OR('-1786812864')))OR(0.02412464547313109)))AND(CAST(vt0.c0 AS REAL))))AND(((rt0.c2)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c62)OR('-1786812864')))OR(0.02412464547313109)))AND(CAST(vt0.c0 AS REAL))))AND(((rt0.c2)AND(rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((((rt0.c0 IN ()))AND(CAST(NULL AS NUMERIC))))OR(CASE t1.c0  WHEN t1.c2 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END)) LEFT OUTER JOIN t1 ON t1.c2);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((CAST(t1.c0 AS REAL))GLOB(((((t1.c0)OR(t1.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS REAL))GLOB(((((t1.c0)OR(t1.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((CAST(t1.c0 AS REAL))GLOB(((((t1.c0)OR(t1.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS REAL))GLOB(((((t1.c0)OR(t1.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((CAST(t1.c0 AS REAL))GLOB(((((t1.c0)OR(t1.c0)))AND(rt0.c0)))));
SELECT * FROM vt0, t1 WHERE (((t1.c0)/(NULL))) ORDER BY CASE (NOT (t1.c62))  WHEN ((t1.c2) NOT BETWEEN (t1.c62) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((t1.c0)>(t1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c0)/(NULL))) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE (NOT (t1.c62))  WHEN ((t1.c2) NOT BETWEEN (t1.c62) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((t1.c0)>(t1.c0)) END ASC);
SELECT * FROM vt0, t1 WHERE (((t1.c0)/(NULL))) ORDER BY CASE (NOT (t1.c62))  WHEN ((t1.c2) NOT BETWEEN (t1.c62) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((t1.c0)>(t1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c0)/(NULL))) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE (NOT (t1.c62))  WHEN ((t1.c2) NOT BETWEEN (t1.c62) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((t1.c0)>(t1.c0)) END ASC);
SELECT * FROM vt0, t1 WHERE (((t1.c0)/(NULL))) ORDER BY CASE (NOT (t1.c62))  WHEN ((t1.c2) NOT BETWEEN (t1.c62) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((t1.c0)>(t1.c0)) END ASC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON (- (t1.c2)) WHERE ((+ ((- (t1.c62)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (t1.c62))))) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN t1 ON (- (t1.c2)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON (- (t1.c2)) WHERE ((+ ((- (t1.c62)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (t1.c62))))) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN t1 ON (- (t1.c2)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON (- (t1.c2)) WHERE ((+ ((- (t1.c62)))));
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE ((((((t1.c62)>(vt0.c0))))>(((~ (vt0.c0)))))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()), ((CASE WHEN rt0.c0 THEN t1.c2 WHEN rt0.c1 THEN 0.7940864564510659 WHEN t1.c62 THEN rt0.c0 END)IS(((rt0.c0) ISNULL))), ((((((t1.c0) IS TRUE))OR((~ (rt0.c0)))))AND(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c62)>(vt0.c0))))>(((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()), ((CASE WHEN rt0.c0 THEN t1.c2 WHEN rt0.c1 THEN 0.7940864564510659 WHEN t1.c62 THEN rt0.c0 END)IS(((rt0.c0) ISNULL))), ((((((t1.c0) IS TRUE))OR((~ (rt0.c0)))))AND(NULL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE ((((((t1.c62)>(vt0.c0))))>(((~ (vt0.c0)))))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()), ((CASE WHEN rt0.c0 THEN t1.c2 WHEN rt0.c1 THEN 0.7940864564510659 WHEN t1.c62 THEN rt0.c0 END)IS(((rt0.c0) ISNULL))), ((((((t1.c0) IS TRUE))OR((~ (rt0.c0)))))AND(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c62)>(vt0.c0))))>(((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()), ((CASE WHEN rt0.c0 THEN t1.c2 WHEN rt0.c1 THEN 0.7940864564510659 WHEN t1.c62 THEN rt0.c0 END)IS(((rt0.c0) ISNULL))), ((((((t1.c0) IS TRUE))OR((~ (rt0.c0)))))AND(NULL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE ((((((t1.c62)>(vt0.c0))))>(((~ (vt0.c0)))))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()), ((CASE WHEN rt0.c0 THEN t1.c2 WHEN rt0.c1 THEN 0.7940864564510659 WHEN t1.c62 THEN rt0.c0 END)IS(((rt0.c0) ISNULL))), ((((((t1.c0) IS TRUE))OR((~ (rt0.c0)))))AND(NULL)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON CAST((NOT (rt0.c1)) AS BLOB) WHERE (((('-233549791' IN (rt0.c0, rt0.c1)))-(((NULL) NOT BETWEEN (t1.c0) AND (rt0.c2))))) ORDER BY ((((t1.c2) IS TRUE))AND(t1.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('-233549791' IN (rt0.c0, rt0.c1)))-(((NULL) NOT BETWEEN (t1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON CAST((NOT (rt0.c1)) AS BLOB) ORDER BY ((((t1.c2) IS TRUE))AND(t1.c2 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON CAST((NOT (rt0.c1)) AS BLOB) WHERE (((('-233549791' IN (rt0.c0, rt0.c1)))-(((NULL) NOT BETWEEN (t1.c0) AND (rt0.c2))))) ORDER BY ((((t1.c2) IS TRUE))AND(t1.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('-233549791' IN (rt0.c0, rt0.c1)))-(((NULL) NOT BETWEEN (t1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON CAST((NOT (rt0.c1)) AS BLOB) ORDER BY ((((t1.c2) IS TRUE))AND(t1.c2 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON CAST((NOT (rt0.c1)) AS BLOB) WHERE (((('-233549791' IN (rt0.c0, rt0.c1)))-(((NULL) NOT BETWEEN (t1.c0) AND (rt0.c2))))) ORDER BY ((((t1.c2) IS TRUE))AND(t1.c2 COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c2))=((x'c3a1')))) NOT NULL)) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((((((t1.c2))==((x'c3a1')))) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2)) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c2))=((x'c3a1')))) NOT NULL)) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((((((t1.c2))==((x'c3a1')))) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2)) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c2))=((x'c3a1')))) NOT NULL)) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2)) IN ());
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CASE 0Xffffffffc2f66ea8  WHEN vt0.c0 THEN vt0.c0 END)))OR((+ (vt0.c0))))) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND((('ᖡW') IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(CASE 0Xffffffffc2f66ea8  WHEN vt0.c0 THEN vt0.c0 END)))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))AND((('ᖡW') IS TRUE))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CASE 0Xffffffffc2f66ea8  WHEN vt0.c0 THEN vt0.c0 END)))OR((+ (vt0.c0))))) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND((('ᖡW') IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(CASE 0Xffffffffc2f66ea8  WHEN vt0.c0 THEN vt0.c0 END)))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))AND((('ᖡW') IS TRUE))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CASE 0Xffffffffc2f66ea8  WHEN vt0.c0 THEN vt0.c0 END)))OR((+ (vt0.c0))))) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND((('ᖡW') IS TRUE))) DESC;
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (NULL);
SELECT ALL * FROM t1, rt0 CROSS JOIN vt0 ON LIKELY(DISTINCT (vt0.c0 IN ())) WHERE (LTRIM(((rt0.c2) IS FALSE), ((t1.c62) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c2) IS FALSE), ((t1.c62) IS FALSE))) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt0 ON LIKELY(DISTINCT (vt0.c0 IN ())));
SELECT ALL * FROM t1, rt0 CROSS JOIN vt0 ON LIKELY(DISTINCT (vt0.c0 IN ())) WHERE (LTRIM(((rt0.c2) IS FALSE), ((t1.c62) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c2) IS FALSE), ((t1.c62) IS FALSE))) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt0 ON LIKELY(DISTINCT (vt0.c0 IN ())));
SELECT ALL * FROM t1, rt0 CROSS JOIN vt0 ON LIKELY(DISTINCT (vt0.c0 IN ())) WHERE (LTRIM(((rt0.c2) IS FALSE), ((t1.c62) IS FALSE)));
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (json_valid(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (json_valid(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (json_valid(CAST(rt0.c0 AS NUMERIC)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)<(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)<(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)<(vt0.c0))))));
SELECT * FROM t1 WHERE (((CASE t1.c2  WHEN t1.c62 THEN t1.c2 WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN t1.c62 ELSE t1.c2 END) BETWEEN (t1.c0) AND (((t1.c2)<<(t1.c62)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c2  WHEN t1.c62 THEN t1.c2 WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN t1.c62 ELSE t1.c2 END) BETWEEN (t1.c0) AND (((t1.c2)<<(t1.c62))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE t1.c2  WHEN t1.c62 THEN t1.c2 WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN t1.c62 ELSE t1.c2 END) BETWEEN (t1.c0) AND (((t1.c2)<<(t1.c62)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c2  WHEN t1.c62 THEN t1.c2 WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN t1.c62 ELSE t1.c2 END) BETWEEN (t1.c0) AND (((t1.c2)<<(t1.c62))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE t1.c2  WHEN t1.c62 THEN t1.c2 WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN t1.c62 ELSE t1.c2 END) BETWEEN (t1.c0) AND (((t1.c2)<<(t1.c62)))));
SELECT ALL * FROM rt0, vt0 WHERE (NULL) ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) ASC  NULLS LAST, ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) ASC  NULLS LAST, ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (NULL) ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) ASC  NULLS LAST, ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) ASC  NULLS LAST, ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (NULL) ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) ASC  NULLS LAST, ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS NUMERIC));
SELECT * FROM t1 WHERE (((((NULL) ISNULL))/(((x'') NOTNULL)))) ORDER BY (((+ (t1.c0)))<(((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) ISNULL))/(((x'') NOTNULL)))) IS TRUE)  as count FROM t1 ORDER BY (((+ (t1.c0)))<(((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c2)))));
SELECT * FROM t1 WHERE (((((NULL) ISNULL))/(((x'') NOTNULL)))) ORDER BY (((+ (t1.c0)))<(((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) ISNULL))/(((x'') NOTNULL)))) IS TRUE)  as count FROM t1 ORDER BY (((+ (t1.c0)))<(((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c2)))));
SELECT * FROM t1 WHERE (((((NULL) ISNULL))/(((x'') NOTNULL)))) ORDER BY (((+ (t1.c0)))<(((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c2))));
SELECT ALL * FROM t1, rt0 WHERE (((0.24220583839065424) IS FALSE)) ORDER BY (t1.c62 IN ()) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.24220583839065424) IS FALSE)) IS TRUE)  as count FROM t1, rt0 ORDER BY (t1.c62 IN ()) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE (((0.24220583839065424) IS FALSE)) ORDER BY (t1.c62 IN ()) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.24220583839065424) IS FALSE)) IS TRUE)  as count FROM t1, rt0 ORDER BY (t1.c62 IN ()) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE (((0.24220583839065424) IS FALSE)) ORDER BY (t1.c62 IN ()) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE ((NULLIF(rt0.c2, vt0.c0) IN ('aS'))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c2)) THEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)) WHEN CAST(NULL AS BLOB) THEN (~ (t1.c62)) WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CASE WHEN vt0.c0 THEN NULL END ELSE ((t1.c62)<=(rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(rt0.c2, vt0.c0) IN ('aS'))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c2)) THEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)) WHEN CAST(NULL AS BLOB) THEN (~ (t1.c62)) WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CASE WHEN vt0.c0 THEN NULL END ELSE ((t1.c62)<=(rt0.c2)) END DESC);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE ((NULLIF(rt0.c2, vt0.c0) IN ('aS'))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c2)) THEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)) WHEN CAST(NULL AS BLOB) THEN (~ (t1.c62)) WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CASE WHEN vt0.c0 THEN NULL END ELSE ((t1.c62)<=(rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(rt0.c2, vt0.c0) IN ('aS'))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c2)) THEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)) WHEN CAST(NULL AS BLOB) THEN (~ (t1.c62)) WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CASE WHEN vt0.c0 THEN NULL END ELSE ((t1.c62)<=(rt0.c2)) END DESC);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE ((NULLIF(rt0.c2, vt0.c0) IN ('aS'))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t1.c2) AND (t1.c2)) THEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)) WHEN CAST(NULL AS BLOB) THEN (~ (t1.c62)) WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CASE WHEN vt0.c0 THEN NULL END ELSE ((t1.c62)<=(rt0.c2)) END DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)LIKE(vt0.c0)) ELSE json_remove(vt0.c0, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)LIKE(vt0.c0)) ELSE json_remove(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)LIKE(vt0.c0)) ELSE json_remove(vt0.c0, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)LIKE(vt0.c0)) ELSE json_remove(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0, t1, rt0 WHERE ((NOT (COALESCE('367798841', t1.c0, rt0.c0, rt0.c2)))) ORDER BY (((vt0.c0, vt0.c0, t1.c2)) BETWEEN ((rt0.c2, CAST('1892264985' AS REAL), rt0.c1 COLLATE RTRIM)) AND ((((t1.c2) BETWEEN (t1.c62) AND (NULL)), rt0.c1, ((((rt0.c0)OR(t1.c62)))AND(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (COALESCE('367798841', t1.c0, rt0.c0, rt0.c2)))) IS TRUE)  as count FROM vt0, t1, rt0 NOT INDEXED ORDER BY (((vt0.c0, vt0.c0, t1.c2)) BETWEEN ((rt0.c2, CAST('1892264985' AS REAL), rt0.c1 COLLATE RTRIM)) AND ((((t1.c2) BETWEEN (t1.c62) AND (NULL)), rt0.c1, ((((rt0.c0)OR(t1.c62)))AND(rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM vt0, t1, rt0 WHERE ((NOT (COALESCE('367798841', t1.c0, rt0.c0, rt0.c2)))) ORDER BY (((vt0.c0, vt0.c0, t1.c2)) BETWEEN ((rt0.c2, CAST('1892264985' AS REAL), rt0.c1 COLLATE RTRIM)) AND ((((t1.c2) BETWEEN (t1.c62) AND (NULL)), rt0.c1, ((((rt0.c0)OR(t1.c62)))AND(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (COALESCE('367798841', t1.c0, rt0.c0, rt0.c2)))) IS TRUE)  as count FROM vt0, t1, rt0 NOT INDEXED ORDER BY (((vt0.c0, vt0.c0, t1.c2)) BETWEEN ((rt0.c2, CAST('1892264985' AS REAL), rt0.c1 COLLATE RTRIM)) AND ((((t1.c2) BETWEEN (t1.c62) AND (NULL)), rt0.c1, ((((rt0.c0)OR(t1.c62)))AND(rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM vt0, t1, rt0 WHERE ((NOT (COALESCE('367798841', t1.c0, rt0.c0, rt0.c2)))) ORDER BY (((vt0.c0, vt0.c0, t1.c2)) BETWEEN ((rt0.c2, CAST('1892264985' AS REAL), rt0.c1 COLLATE RTRIM)) AND ((((t1.c2) BETWEEN (t1.c62) AND (NULL)), rt0.c1, ((((rt0.c0)OR(t1.c62)))AND(rt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM t1, rt0 WHERE (((TRIM(rt0.c1, rt0.c0)) NOT BETWEEN ((+ (t1.c0))) AND ((NOT (t1.c0))))) ORDER BY ((((((rt0.c0)&(rt0.c0)))OR(CASE rt0.c0  WHEN t1.c2 THEN t1.c62 END)))AND((((t1.c62))>((t1.c2))))) ASC  NULLS FIRST, rt0.c0 COLLATE NOCASE COLLATE NOCASE  NULLS LAST, ((CASE WHEN t1.c62 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.17579313839581068 THEN rt0.c0 ELSE rt0.c0 END)||((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c1, rt0.c0)) NOT BETWEEN ((+ (t1.c0))) AND ((NOT (t1.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((((rt0.c0)&(rt0.c0)))OR(CASE rt0.c0  WHEN t1.c2 THEN t1.c62 END)))AND((((t1.c62))>((t1.c2))))) ASC  NULLS FIRST, rt0.c0 COLLATE NOCASE COLLATE NOCASE  NULLS LAST, ((CASE WHEN t1.c62 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.17579313839581068 THEN rt0.c0 ELSE rt0.c0 END)||((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE (((TRIM(rt0.c1, rt0.c0)) NOT BETWEEN ((+ (t1.c0))) AND ((NOT (t1.c0))))) ORDER BY ((((((rt0.c0)&(rt0.c0)))OR(CASE rt0.c0  WHEN t1.c2 THEN t1.c62 END)))AND((((t1.c62))>((t1.c2))))) ASC  NULLS FIRST, rt0.c0 COLLATE NOCASE COLLATE NOCASE  NULLS LAST, ((CASE WHEN t1.c62 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.17579313839581068 THEN rt0.c0 ELSE rt0.c0 END)||((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c1, rt0.c0)) NOT BETWEEN ((+ (t1.c0))) AND ((NOT (t1.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((((rt0.c0)&(rt0.c0)))OR(CASE rt0.c0  WHEN t1.c2 THEN t1.c62 END)))AND((((t1.c62))>((t1.c2))))) ASC  NULLS FIRST, rt0.c0 COLLATE NOCASE COLLATE NOCASE  NULLS LAST, ((CASE WHEN t1.c62 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.17579313839581068 THEN rt0.c0 ELSE rt0.c0 END)||((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE (((TRIM(rt0.c1, rt0.c0)) NOT BETWEEN ((+ (t1.c0))) AND ((NOT (t1.c0))))) ORDER BY ((((((rt0.c0)&(rt0.c0)))OR(CASE rt0.c0  WHEN t1.c2 THEN t1.c62 END)))AND((((t1.c62))>((t1.c2))))) ASC  NULLS FIRST, rt0.c0 COLLATE NOCASE COLLATE NOCASE  NULLS LAST, ((CASE WHEN t1.c62 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.17579313839581068 THEN rt0.c0 ELSE rt0.c0 END)||((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0))>((t1.c0))))>('1')));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))>((t1.c0))))>('1'))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0))>((t1.c0))))>('1')));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))>((t1.c0))))>('1'))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0))>((t1.c0))))>('1')));
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (CAST('' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (CAST('' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (CAST('' AS NUMERIC));
SELECT * FROM rt0 WHERE ((((((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c2)) BETWEEN ((810568266)) AND ((rt0.c1))))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(rt0.c0 COLLATE RTRIM)))AND(CASE rt0.c2  WHEN rt0.c2 THEN 1686521120 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c2)) BETWEEN ((810568266)) AND ((rt0.c1))))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(rt0.c0 COLLATE RTRIM)))AND(CASE rt0.c2  WHEN rt0.c2 THEN 1686521120 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c2)) BETWEEN ((810568266)) AND ((rt0.c1))))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(rt0.c0 COLLATE RTRIM)))AND(CASE rt0.c2  WHEN rt0.c2 THEN 1686521120 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c2)) BETWEEN ((810568266)) AND ((rt0.c1))))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(rt0.c0 COLLATE RTRIM)))AND(CASE rt0.c2  WHEN rt0.c2 THEN 1686521120 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND((((rt0.c2)) BETWEEN ((810568266)) AND ((rt0.c1))))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(rt0.c0 COLLATE RTRIM)))AND(CASE rt0.c2  WHEN rt0.c2 THEN 1686521120 ELSE rt0.c1 END)));
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON (t1.c0 IN ()) COLLATE BINARY WHERE ((((0.3658918651184142)) NOT BETWEEN ((((t1.c0) BETWEEN (NULL) AND (vt0.c0)))) AND (((('-1130504859')IS NOT(t1.c62)))))) ORDER BY ((((((((((t1.c2)OR(t1.c62)))AND(t1.c62)))OR(t1.c2)))AND(t1.c62))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(t1.c62 AS REAL)))  NULLS FIRST, CASE ((t1.c62) NOTNULL)  WHEN ((t1.c2)<(t1.c62)) THEN (t1.c2 IN (t1.c0, vt0.c0)) ELSE (t1.c62 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.3658918651184142)) NOT BETWEEN ((((t1.c0) BETWEEN (NULL) AND (vt0.c0)))) AND (((('-1130504859')IS NOT(t1.c62)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (t1.c0 IN ()) COLLATE BINARY ORDER BY ((((((((((t1.c2)OR(t1.c62)))AND(t1.c62)))OR(t1.c2)))AND(t1.c62))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(t1.c62 AS REAL)))  NULLS FIRST, CASE ((t1.c62) NOTNULL)  WHEN ((t1.c2)<(t1.c62)) THEN (t1.c2 IN (t1.c0, vt0.c0)) ELSE (t1.c62 IN ()) END  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON (t1.c0 IN ()) COLLATE BINARY WHERE ((((0.3658918651184142)) NOT BETWEEN ((((t1.c0) BETWEEN (NULL) AND (vt0.c0)))) AND (((('-1130504859')IS NOT(t1.c62)))))) ORDER BY ((((((((((t1.c2)OR(t1.c62)))AND(t1.c62)))OR(t1.c2)))AND(t1.c62))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(t1.c62 AS REAL)))  NULLS FIRST, CASE ((t1.c62) NOTNULL)  WHEN ((t1.c2)<(t1.c62)) THEN (t1.c2 IN (t1.c0, vt0.c0)) ELSE (t1.c62 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.3658918651184142)) NOT BETWEEN ((((t1.c0) BETWEEN (NULL) AND (vt0.c0)))) AND (((('-1130504859')IS NOT(t1.c62)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (t1.c0 IN ()) COLLATE BINARY ORDER BY ((((((((((t1.c2)OR(t1.c62)))AND(t1.c62)))OR(t1.c2)))AND(t1.c62))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(t1.c62 AS REAL)))  NULLS FIRST, CASE ((t1.c62) NOTNULL)  WHEN ((t1.c2)<(t1.c62)) THEN (t1.c2 IN (t1.c0, vt0.c0)) ELSE (t1.c62 IN ()) END  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON (t1.c0 IN ()) COLLATE BINARY WHERE ((((0.3658918651184142)) NOT BETWEEN ((((t1.c0) BETWEEN (NULL) AND (vt0.c0)))) AND (((('-1130504859')IS NOT(t1.c62)))))) ORDER BY ((((((((((t1.c2)OR(t1.c62)))AND(t1.c62)))OR(t1.c2)))AND(t1.c62))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(t1.c62 AS REAL)))  NULLS FIRST, CASE ((t1.c62) NOTNULL)  WHEN ((t1.c2)<(t1.c62)) THEN (t1.c2 IN (t1.c0, vt0.c0)) ELSE (t1.c62 IN ()) END  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c62)==(x'')))AND(CASE WHEN t1.c0 THEN t1.c2 WHEN '-1724226001' THEN t1.c62 WHEN t1.c0 THEN t1.c2 END)))AND(t1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c62)=(x'')))AND(CASE WHEN t1.c0 THEN t1.c2 WHEN '-1724226001' THEN t1.c62 WHEN t1.c0 THEN t1.c2 END)))AND(t1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c62)==(x'')))AND(CASE WHEN t1.c0 THEN t1.c2 WHEN '-1724226001' THEN t1.c62 WHEN t1.c0 THEN t1.c2 END)))AND(t1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c62)=(x'')))AND(CASE WHEN t1.c0 THEN t1.c2 WHEN '-1724226001' THEN t1.c62 WHEN t1.c0 THEN t1.c2 END)))AND(t1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((t1.c62)==(x'')))AND(CASE WHEN t1.c0 THEN t1.c2 WHEN '-1724226001' THEN t1.c62 WHEN t1.c0 THEN t1.c2 END)))AND(t1.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, t1 INNER JOIN rt0 ON x'' WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1 INNER JOIN rt0 ON x'');
SELECT COUNT(*) FROM vt0, t1 INNER JOIN rt0 ON x'' WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1 INNER JOIN rt0 ON x'');
SELECT COUNT(*) FROM vt0, t1 INNER JOIN rt0 ON x'' WHERE (x'');
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((NOT (((NULL)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)+(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((NOT (((NULL)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)+(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((NOT (((NULL)+(rt0.c1)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2)AND(CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)<(vt0.c0)))) WHERE (rt0.c0) ORDER BY (((NULL)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CAST(rt0.c0 AS TEXT))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2)AND(CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)<(vt0.c0)))) ORDER BY (((NULL)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CAST(rt0.c0 AS TEXT))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2)AND(CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)<(vt0.c0)))) WHERE (rt0.c0) ORDER BY (((NULL)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CAST(rt0.c0 AS TEXT))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2)AND(CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)<(vt0.c0)))) ORDER BY (((NULL)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CAST(rt0.c0 AS TEXT))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2)AND(CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)<(vt0.c0)))) WHERE (rt0.c0) ORDER BY (((NULL)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CAST(rt0.c0 AS TEXT))))  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c0)+(t1.c2 COLLATE NOCASE))) ORDER BY PRINTF(((((t1.c62)OR(t1.c62)))OR(t1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(t1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t1 ORDER BY PRINTF(((((t1.c62)OR(t1.c62)))OR(t1.c2))));
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c0)+(t1.c2 COLLATE NOCASE))) ORDER BY PRINTF(((((t1.c62)OR(t1.c62)))OR(t1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(t1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t1 ORDER BY PRINTF(((((t1.c62)OR(t1.c62)))OR(t1.c2))));
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c0)+(t1.c2 COLLATE NOCASE))) ORDER BY PRINTF(((((t1.c62)OR(t1.c62)))OR(t1.c2)));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (('1207706361')!=(vt0.c0 COLLATE BINARY))  NULLS LAST, (vt0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (('1207706361')!=(vt0.c0 COLLATE BINARY))  NULLS LAST, (vt0.c0 IN ()) ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (('1207706361')!=(vt0.c0 COLLATE BINARY))  NULLS LAST, (vt0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (('1207706361')!=(vt0.c0 COLLATE BINARY))  NULLS LAST, (vt0.c0 IN ()) ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (('1207706361')!=(vt0.c0 COLLATE BINARY))  NULLS LAST, (vt0.c0 IN ()) ASC;
SELECT ALL * FROM t1 WHERE (((((t1.c2)<=(t1.c62)))IS((- (t1.c2))))) ORDER BY (((t1.c2)) BETWEEN ((((t1.c2) NOT NULL))) AND ((((t1.c2)>>(t1.c62))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)<=(t1.c62)))IS((- (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2)) BETWEEN ((((t1.c2) NOT NULL))) AND ((((t1.c2)>>(t1.c62))))) ASC);
SELECT ALL * FROM t1 WHERE (((((t1.c2)<=(t1.c62)))IS((- (t1.c2))))) ORDER BY (((t1.c2)) BETWEEN ((((t1.c2) NOT NULL))) AND ((((t1.c2)>>(t1.c62))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)<=(t1.c62)))IS((- (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2)) BETWEEN ((((t1.c2) NOT NULL))) AND ((((t1.c2)>>(t1.c62))))) ASC);
SELECT ALL * FROM t1 WHERE (((((t1.c2)<=(t1.c62)))IS((- (t1.c2))))) ORDER BY (((t1.c2)) BETWEEN ((((t1.c2) NOT NULL))) AND ((((t1.c2)>>(t1.c62))))) ASC;
SELECT * FROM rt0, vt0 WHERE (CASE (((rt0.c1))=((rt0.c0)))  WHEN ((x'')&(rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE 0X6f2e12c6 END) ORDER BY UPPER(DISTINCT NULLIF(rt0.c1, x''));
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1))==((rt0.c0)))  WHEN ((x'')&(rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE 0x6f2e12c6 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY UPPER(DISTINCT NULLIF(rt0.c1, x'')));
SELECT * FROM rt0, vt0 WHERE (CASE (((rt0.c1))=((rt0.c0)))  WHEN ((x'')&(rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE 0X6f2e12c6 END) ORDER BY UPPER(DISTINCT NULLIF(rt0.c1, x''));
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1))==((rt0.c0)))  WHEN ((x'')&(rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE 0x6f2e12c6 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY UPPER(DISTINCT NULLIF(rt0.c1, x'')));
SELECT * FROM rt0, vt0 WHERE (CASE (((rt0.c1))=((rt0.c0)))  WHEN ((x'')&(rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(rt0.c1 AS BLOB) ELSE 0X6f2e12c6 END) ORDER BY UPPER(DISTINCT NULLIF(rt0.c1, x''));
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) IS TRUE))<=('710821568')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))<=('710821568'))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) IS TRUE))<=('710821568')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))<=('710821568'))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) IS TRUE))<=('710821568')));
SELECT * FROM rt0 CROSS JOIN t1 ON ((t1.c62)LIKE(((((t1.c2)OR(rt0.c0)))AND(t1.c0)))) WHERE (CAST((((x'')) NOT BETWEEN ((t1.c62)) AND ((x'd9f6'))) AS INTEGER)) ORDER BY (('lbfr7') NOT BETWEEN (rt0.c0) AND (t1.c62)) COLLATE NOCASE DESC  NULLS LAST, COALESCE(CASE WHEN t1.c62 THEN t1.c2 ELSE rt0.c0 END, ((rt0.c1) IS FALSE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((x'')) NOT BETWEEN ((t1.c62)) AND ((x'd9f6'))) AS INTEGER)) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((t1.c62)LIKE(((((t1.c2)OR(rt0.c0)))AND(t1.c0)))) ORDER BY (('lbfr7') NOT BETWEEN (rt0.c0) AND (t1.c62)) COLLATE NOCASE DESC  NULLS LAST, COALESCE(CASE WHEN t1.c62 THEN t1.c2 ELSE rt0.c0 END, ((rt0.c1) IS FALSE))  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN t1 ON ((t1.c62)LIKE(((((t1.c2)OR(rt0.c0)))AND(t1.c0)))) WHERE (CAST((((x'')) NOT BETWEEN ((t1.c62)) AND ((x'd9f6'))) AS INTEGER)) ORDER BY (('lbfr7') NOT BETWEEN (rt0.c0) AND (t1.c62)) COLLATE NOCASE DESC  NULLS LAST, COALESCE(CASE WHEN t1.c62 THEN t1.c2 ELSE rt0.c0 END, ((rt0.c1) IS FALSE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((x'')) NOT BETWEEN ((t1.c62)) AND ((x'd9f6'))) AS INTEGER)) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((t1.c62)LIKE(((((t1.c2)OR(rt0.c0)))AND(t1.c0)))) ORDER BY (('lbfr7') NOT BETWEEN (rt0.c0) AND (t1.c62)) COLLATE NOCASE DESC  NULLS LAST, COALESCE(CASE WHEN t1.c62 THEN t1.c2 ELSE rt0.c0 END, ((rt0.c1) IS FALSE))  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN t1 ON ((t1.c62)LIKE(((((t1.c2)OR(rt0.c0)))AND(t1.c0)))) WHERE (CAST((((x'')) NOT BETWEEN ((t1.c62)) AND ((x'd9f6'))) AS INTEGER)) ORDER BY (('lbfr7') NOT BETWEEN (rt0.c0) AND (t1.c62)) COLLATE NOCASE DESC  NULLS LAST, COALESCE(CASE WHEN t1.c62 THEN t1.c2 ELSE rt0.c0 END, ((rt0.c1) IS FALSE))  NULLS LAST;
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE t1.c62 END)<>(NULL)) FULL OUTER JOIN vt0 ON (- (CAST(rt0.c2 AS TEXT))) WHERE (((CASE '-922049867'  WHEN x'' THEN rt0.c1 ELSE x'66c4' END) NOTNULL)) ORDER BY CAST(rt0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ((((CASE '-922049867'  WHEN x'' THEN rt0.c1 ELSE x'66c4' END) NOTNULL)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE t1.c62 END)<>(NULL)) FULL OUTER JOIN vt0 ON (- (CAST(rt0.c2 AS TEXT))) ORDER BY CAST(rt0.c0 AS BLOB));
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE t1.c62 END)<>(NULL)) FULL OUTER JOIN vt0 ON (- (CAST(rt0.c2 AS TEXT))) WHERE (((CASE '-922049867'  WHEN x'' THEN rt0.c1 ELSE x'66c4' END) NOTNULL)) ORDER BY CAST(rt0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ((((CASE '-922049867'  WHEN x'' THEN rt0.c1 ELSE x'66c4' END) NOTNULL)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE t1.c62 END)<>(NULL)) FULL OUTER JOIN vt0 ON (- (CAST(rt0.c2 AS TEXT))) ORDER BY CAST(rt0.c0 AS BLOB));
SELECT * FROM vt0, t1 NATURAL JOIN rt0 WHERE (CAST(((t1.c0)|(t1.c2)) AS TEXT)) ORDER BY ((rt0.c1) BETWEEN (HEX(DISTINCT rt0.c1)) AND (((rt0.c2)<<(t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)|(t1.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, t1 NATURAL JOIN rt0 ORDER BY ((rt0.c1) BETWEEN (HEX(DISTINCT rt0.c1)) AND (((rt0.c2)<<(t1.c0)))) DESC);
SELECT * FROM vt0, t1 NATURAL JOIN rt0 WHERE (CAST(((t1.c0)|(t1.c2)) AS TEXT)) ORDER BY ((rt0.c1) BETWEEN (HEX(DISTINCT rt0.c1)) AND (((rt0.c2)<<(t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)|(t1.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, t1 NATURAL JOIN rt0 ORDER BY ((rt0.c1) BETWEEN (HEX(DISTINCT rt0.c1)) AND (((rt0.c2)<<(t1.c0)))) DESC);
SELECT * FROM vt0, t1 NATURAL JOIN rt0 WHERE (CAST(((t1.c0)|(t1.c2)) AS TEXT)) ORDER BY ((rt0.c1) BETWEEN (HEX(DISTINCT rt0.c1)) AND (((rt0.c2)<<(t1.c0)))) DESC;
SELECT * FROM vt0, rt0 WHERE (CHAR(rt0.c0, vt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY (('VJ') NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CHAR(rt0.c0, vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('VJ') NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT * FROM vt0, rt0 WHERE (CHAR(rt0.c0, vt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY (('VJ') NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CHAR(rt0.c0, vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('VJ') NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT * FROM vt0, rt0 WHERE (CHAR(rt0.c0, vt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY (('VJ') NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY;
SELECT ALL * FROM t1 WHERE ((((+ (t1.c62)))/((t1.c2 IN (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t1.c62)))/((t1.c2 IN (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((+ (t1.c62)))/((t1.c2 IN (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t1.c62)))/((t1.c2 IN (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((+ (t1.c62)))/((t1.c2 IN (t1.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (((((- (NULL))))>=((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (NULL))))>=((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((- (NULL))))>=((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (NULL))))>=((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((- (NULL))))>=((vt0.c0 COLLATE NOCASE))));
SELECT ALL * FROM t1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (x'');
SELECT ALL * FROM t1 INNER JOIN rt0 ON CASE ((rt0.c0)|(0.9038657648039031))  WHEN ((rt0.c1)<=(rt0.c2)) THEN ((t1.c0)OR(rt0.c1)) END RIGHT OUTER JOIN vt0 ON (NULL IN ()) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON CASE ((rt0.c0)|(0.9038657648039031))  WHEN ((rt0.c1)<=(rt0.c2)) THEN ((t1.c0)OR(rt0.c1)) END RIGHT OUTER JOIN vt0 ON (NULL IN ()));
SELECT ALL * FROM t1 INNER JOIN rt0 ON CASE ((rt0.c0)|(0.9038657648039031))  WHEN ((rt0.c1)<=(rt0.c2)) THEN ((t1.c0)OR(rt0.c1)) END RIGHT OUTER JOIN vt0 ON (NULL IN ()) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON CASE ((rt0.c0)|(0.9038657648039031))  WHEN ((rt0.c1)<=(rt0.c2)) THEN ((t1.c0)OR(rt0.c1)) END RIGHT OUTER JOIN vt0 ON (NULL IN ()));
SELECT ALL * FROM t1 INNER JOIN rt0 ON CASE ((rt0.c0)|(0.9038657648039031))  WHEN ((rt0.c1)<=(rt0.c2)) THEN ((t1.c0)OR(rt0.c1)) END RIGHT OUTER JOIN vt0 ON (NULL IN ()) WHERE (rt0.c2);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)>=(t1.c62)))+((NOT (t1.c62))))) ORDER BY LIKELY((~ (t1.c0))) ASC, ((((t1.c0))<((t1.c62))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)>=(t1.c62)))+((NOT (t1.c62))))) IS TRUE)  as count FROM t1 ORDER BY LIKELY((~ (t1.c0))) ASC, ((((t1.c0))<((t1.c62))) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)>=(t1.c62)))+((NOT (t1.c62))))) ORDER BY LIKELY((~ (t1.c0))) ASC, ((((t1.c0))<((t1.c62))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)>=(t1.c62)))+((NOT (t1.c62))))) IS TRUE)  as count FROM t1 ORDER BY LIKELY((~ (t1.c0))) ASC, ((((t1.c0))<((t1.c62))) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c2)>=(t1.c62)))+((NOT (t1.c62))))) ORDER BY LIKELY((~ (t1.c0))) ASC, ((((t1.c0))<((t1.c62))) IN ()) DESC  NULLS LAST;
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON ((LIKELY(t1.c2))LIKE(json_array_length(rt0.c2, rt0.c2))) WHERE (CAST(((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((LIKELY(t1.c2))LIKE(json_array_length(rt0.c2, rt0.c2))));
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON ((LIKELY(t1.c2))LIKE(json_array_length(rt0.c2, rt0.c2))) WHERE (CAST(((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((LIKELY(t1.c2))LIKE(json_array_length(rt0.c2, rt0.c2))));
SELECT ALL * FROM t1 WHERE ((((x'0870') IS TRUE) IN (((t1.c62) IS FALSE), (~ (t1.c62))))) ORDER BY ((((((t1.c62)>>(t1.c0)))AND((((t1.c62, 0Xffffffffa2623a81, NULL)) BETWEEN ((t1.c0, t1.c62, t1.c62)) AND ((t1.c0, t1.c0, t1.c62))))))OR(CASE t1.c0  WHEN t1.c2 THEN t1.c62 ELSE t1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'0870') IS TRUE) IN (((t1.c62) IS FALSE), (~ (t1.c62))))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c62)>>(t1.c0)))AND((((t1.c62, 0xffffffffa2623a81, NULL)) BETWEEN ((t1.c0, t1.c62, t1.c62)) AND ((t1.c0, t1.c0, t1.c62))))))OR(CASE t1.c0  WHEN t1.c2 THEN t1.c62 ELSE t1.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((x'0870') IS TRUE) IN (((t1.c62) IS FALSE), (~ (t1.c62))))) ORDER BY ((((((t1.c62)>>(t1.c0)))AND((((t1.c62, 0Xffffffffa2623a81, NULL)) BETWEEN ((t1.c0, t1.c62, t1.c62)) AND ((t1.c0, t1.c0, t1.c62))))))OR(CASE t1.c0  WHEN t1.c2 THEN t1.c62 ELSE t1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'0870') IS TRUE) IN (((t1.c62) IS FALSE), (~ (t1.c62))))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c62)>>(t1.c0)))AND((((t1.c62, 0xffffffffa2623a81, NULL)) BETWEEN ((t1.c0, t1.c62, t1.c62)) AND ((t1.c0, t1.c0, t1.c62))))))OR(CASE t1.c0  WHEN t1.c2 THEN t1.c62 ELSE t1.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((x'0870') IS TRUE) IN (((t1.c62) IS FALSE), (~ (t1.c62))))) ORDER BY ((((((t1.c62)>>(t1.c0)))AND((((t1.c62, 0Xffffffffa2623a81, NULL)) BETWEEN ((t1.c0, t1.c62, t1.c62)) AND ((t1.c0, t1.c0, t1.c62))))))OR(CASE t1.c0  WHEN t1.c2 THEN t1.c62 ELSE t1.c0 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((rt0.c0 COLLATE BINARY)OR(UNICODE(rt0.c1)))) ORDER BY CAST(0.0037302632236677624 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)OR(UNICODE(rt0.c1)))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY CAST(0.0037302632236677624 AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((rt0.c0 COLLATE BINARY)OR(UNICODE(rt0.c1)))) ORDER BY CAST(0.0037302632236677624 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)OR(UNICODE(rt0.c1)))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY CAST(0.0037302632236677624 AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (((rt0.c0 COLLATE BINARY)OR(UNICODE(rt0.c1)))) ORDER BY CAST(0.0037302632236677624 AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 IN (rt0.c1, rt0.c2)) IN ())) ORDER BY HEX(DISTINCT ((vt0.c0)>=(rt0.c2)))  NULLS LAST, rt0.c2 DESC  NULLS LAST, (((~ (rt0.c2))) BETWEEN (((rt0.c1)OR(vt0.c0))) AND (((x'e919')<=(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN (rt0.c1, rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY HEX(DISTINCT ((vt0.c0)>=(rt0.c2)))  NULLS LAST, rt0.c2 DESC  NULLS LAST, (((~ (rt0.c2))) BETWEEN (((rt0.c1)OR(vt0.c0))) AND (((x'e919')<=(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 IN (rt0.c1, rt0.c2)) IN ())) ORDER BY HEX(DISTINCT ((vt0.c0)>=(rt0.c2)))  NULLS LAST, rt0.c2 DESC  NULLS LAST, (((~ (rt0.c2))) BETWEEN (((rt0.c1)OR(vt0.c0))) AND (((x'e919')<=(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN (rt0.c1, rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY HEX(DISTINCT ((vt0.c0)>=(rt0.c2)))  NULLS LAST, rt0.c2 DESC  NULLS LAST, (((~ (rt0.c2))) BETWEEN (((rt0.c1)OR(vt0.c0))) AND (((x'e919')<=(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 IN (rt0.c1, rt0.c2)) IN ())) ORDER BY HEX(DISTINCT ((vt0.c0)>=(rt0.c2)))  NULLS LAST, rt0.c2 DESC  NULLS LAST, (((~ (rt0.c2))) BETWEEN (((rt0.c1)OR(vt0.c0))) AND (((x'e919')<=(rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (TRIM(DISTINCT ((t1.c0)>(t1.c62)), '-400476030'));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t1.c0)>(t1.c62)), '-400476030')) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (TRIM(DISTINCT ((t1.c0)>(t1.c62)), '-400476030'));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t1.c0)>(t1.c62)), '-400476030')) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (TRIM(DISTINCT ((t1.c0)>(t1.c62)), '-400476030'));
SELECT ALL * FROM rt0, vt0 WHERE (LOWER(rt0.c0)) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt0.c0)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (LOWER(rt0.c0)) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt0.c0)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (LOWER(rt0.c0)) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))IS NOT(((rt0.c0)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))IS NOT(((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))IS NOT(((rt0.c0)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))IS NOT(((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))IS NOT(((rt0.c0)>=(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (NULL) ORDER BY 0.7072545447950439  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1 ORDER BY 0.7072545447950439  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (NULL) ORDER BY 0.7072545447950439  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1 ORDER BY 0.7072545447950439  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (NULL) ORDER BY 0.7072545447950439  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN CAST(t1.c2 AS NUMERIC) THEN ((t1.c0) IS TRUE) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c2 WHEN NULL THEN NULL ELSE t1.c0 END THEN (t1.c0 IN ()) WHEN ((t1.c62)LIKE(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c62 END END) ORDER BY (+ (((((((((t1.c2)AND(t1.c62)))OR(t1.c2)))OR(t1.c2)))OR(t1.c0)))) DESC  NULLS LAST, CASE WHEN '' THEN ((((t1.c62)OR(t1.c0)))OR(t1.c0)) ELSE ((((((((t1.c62)OR(t1.c62)))OR(t1.c62)))OR(t1.c0)))OR(t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t1.c2 AS NUMERIC) THEN ((t1.c0) IS TRUE) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c2 WHEN NULL THEN NULL ELSE t1.c0 END THEN (t1.c0 IN ()) WHEN ((t1.c62)LIKE(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c62 END END) IS TRUE)  as count FROM t1 ORDER BY (+ (((((((((t1.c2)AND(t1.c62)))OR(t1.c2)))OR(t1.c2)))OR(t1.c0)))) DESC  NULLS LAST, CASE WHEN '' THEN ((((t1.c62)OR(t1.c0)))OR(t1.c0)) ELSE ((((((((t1.c62)OR(t1.c62)))OR(t1.c62)))OR(t1.c0)))OR(t1.c0)) END DESC);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN CAST(t1.c2 AS NUMERIC) THEN ((t1.c0) IS TRUE) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c2 WHEN NULL THEN NULL ELSE t1.c0 END THEN (t1.c0 IN ()) WHEN ((t1.c62)LIKE(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c62 END END) ORDER BY (+ (((((((((t1.c2)AND(t1.c62)))OR(t1.c2)))OR(t1.c2)))OR(t1.c0)))) DESC  NULLS LAST, CASE WHEN '' THEN ((((t1.c62)OR(t1.c0)))OR(t1.c0)) ELSE ((((((((t1.c62)OR(t1.c62)))OR(t1.c62)))OR(t1.c0)))OR(t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t1.c2 AS NUMERIC) THEN ((t1.c0) IS TRUE) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c2 WHEN NULL THEN NULL ELSE t1.c0 END THEN (t1.c0 IN ()) WHEN ((t1.c62)LIKE(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c62 END END) IS TRUE)  as count FROM t1 ORDER BY (+ (((((((((t1.c2)AND(t1.c62)))OR(t1.c2)))OR(t1.c2)))OR(t1.c0)))) DESC  NULLS LAST, CASE WHEN '' THEN ((((t1.c62)OR(t1.c0)))OR(t1.c0)) ELSE ((((((((t1.c62)OR(t1.c62)))OR(t1.c62)))OR(t1.c0)))OR(t1.c0)) END DESC);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN CAST(t1.c2 AS NUMERIC) THEN ((t1.c0) IS TRUE) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c2 WHEN NULL THEN NULL ELSE t1.c0 END THEN (t1.c0 IN ()) WHEN ((t1.c62)LIKE(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c62 END END) ORDER BY (+ (((((((((t1.c2)AND(t1.c62)))OR(t1.c2)))OR(t1.c2)))OR(t1.c0)))) DESC  NULLS LAST, CASE WHEN '' THEN ((((t1.c62)OR(t1.c0)))OR(t1.c0)) ELSE ((((((((t1.c62)OR(t1.c62)))OR(t1.c62)))OR(t1.c0)))OR(t1.c0)) END DESC;
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (((((t1.c2)OR(t1.c2)))AND(rt0.c2))) AND (CAST(t1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) NOT BETWEEN (((((t1.c2)OR(t1.c2)))AND(rt0.c2))) AND (CAST(t1.c2 AS TEXT)))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (((((t1.c2)OR(t1.c2)))AND(rt0.c2))) AND (CAST(t1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) NOT BETWEEN (((((t1.c2)OR(t1.c2)))AND(rt0.c2))) AND (CAST(t1.c2 AS TEXT)))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (((((t1.c2)OR(t1.c2)))AND(rt0.c2))) AND (CAST(t1.c2 AS TEXT))));
SELECT ALL * FROM vt0, t1, rt0 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((0.7591478137265124)|(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((0.7591478137265124)|(rt0.c0)) END) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL * FROM vt0, t1, rt0 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((0.7591478137265124)|(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((0.7591478137265124)|(rt0.c0)) END) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL * FROM vt0, t1, rt0 WHERE (CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((0.7591478137265124)|(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN 1032493278 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY ((((NOT (rt0.c0))))=((((rt0.c2)<<(rt0.c1)))))  NULLS LAST, rt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN 1032493278 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((NOT (rt0.c0))))=((((rt0.c2)<<(rt0.c1)))))  NULLS LAST, rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN 1032493278 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY ((((NOT (rt0.c0))))=((((rt0.c2)<<(rt0.c1)))))  NULLS LAST, rt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN 1032493278 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((NOT (rt0.c0))))=((((rt0.c2)<<(rt0.c1)))))  NULLS LAST, rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN 1032493278 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY ((((NOT (rt0.c0))))=((((rt0.c2)<<(rt0.c1)))))  NULLS LAST, rt0.c0;
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM WHERE ((((('15962881') NOT BETWEEN (rt0.c2) AND (vt0.c0)))<<(CAST(rt0.c1 AS BLOB)))) ORDER BY ROUND(((rt0.c0)<<(vt0.c0)), ((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((('15962881') NOT BETWEEN (rt0.c2) AND (vt0.c0)))<<(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ORDER BY ROUND(((rt0.c0)<<(vt0.c0)), ((vt0.c0) IS FALSE)));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM WHERE ((((('15962881') NOT BETWEEN (rt0.c2) AND (vt0.c0)))<<(CAST(rt0.c1 AS BLOB)))) ORDER BY ROUND(((rt0.c0)<<(vt0.c0)), ((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((('15962881') NOT BETWEEN (rt0.c2) AND (vt0.c0)))<<(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ORDER BY ROUND(((rt0.c0)<<(vt0.c0)), ((vt0.c0) IS FALSE)));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM WHERE ((((('15962881') NOT BETWEEN (rt0.c2) AND (vt0.c0)))<<(CAST(rt0.c1 AS BLOB)))) ORDER BY ROUND(((rt0.c0)<<(vt0.c0)), ((vt0.c0) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((LIKELY(vt0.c0)))<>(((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((LIKELY(vt0.c0)))<>(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((LIKELY(vt0.c0)))<>(((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((LIKELY(vt0.c0)))<>(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((LIKELY(vt0.c0)))<>(((vt0.c0 IN ())))));
SELECT ALL * FROM rt0, t1, vt0 WHERE (CASE rt0.c2  WHEN SQLITE_SOURCE_ID() THEN ((((x'')OR(t1.c62)))OR(rt0.c1)) ELSE (- (rt0.c0)) END) ORDER BY x'2ccc' DESC, ((((((0.4471413251612799)OR(t1.c0)))OR(t1.c0)))IS((rt0.c2 IN ()))) ASC, ((t1.c62)AND(rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN SQLITE_SOURCE_ID() THEN ((((x'')OR(t1.c62)))OR(rt0.c1)) ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY x'2ccc' DESC, ((((((0.4471413251612799)OR(t1.c0)))OR(t1.c0)))IS((rt0.c2 IN ()))) ASC, ((t1.c62)AND(rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM rt0, t1, vt0 WHERE (CASE rt0.c2  WHEN SQLITE_SOURCE_ID() THEN ((((x'')OR(t1.c62)))OR(rt0.c1)) ELSE (- (rt0.c0)) END) ORDER BY x'2ccc' DESC, ((((((0.4471413251612799)OR(t1.c0)))OR(t1.c0)))IS((rt0.c2 IN ()))) ASC, ((t1.c62)AND(rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN SQLITE_SOURCE_ID() THEN ((((x'')OR(t1.c62)))OR(rt0.c1)) ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY x'2ccc' DESC, ((((((0.4471413251612799)OR(t1.c0)))OR(t1.c0)))IS((rt0.c2 IN ()))) ASC, ((t1.c62)AND(rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM rt0, t1, vt0 WHERE (CASE rt0.c2  WHEN SQLITE_SOURCE_ID() THEN ((((x'')OR(t1.c62)))OR(rt0.c1)) ELSE (- (rt0.c0)) END) ORDER BY x'2ccc' DESC, ((((((0.4471413251612799)OR(t1.c0)))OR(t1.c0)))IS((rt0.c2 IN ()))) ASC, ((t1.c62)AND(rt0.c2)) COLLATE RTRIM;
SELECT * FROM t1 WHERE (((((t1.c2)||(t1.c2))) BETWEEN (CASE WHEN t1.c2 THEN t1.c62 END) AND (CAST(t1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)||(t1.c2))) BETWEEN (CASE WHEN t1.c2 THEN t1.c62 END) AND (CAST(t1.c0 AS INTEGER)))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT * FROM t1 WHERE (((((t1.c2)||(t1.c2))) BETWEEN (CASE WHEN t1.c2 THEN t1.c62 END) AND (CAST(t1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)||(t1.c2))) BETWEEN (CASE WHEN t1.c2 THEN t1.c62 END) AND (CAST(t1.c0 AS INTEGER)))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT * FROM t1 WHERE (((((t1.c2)||(t1.c2))) BETWEEN (CASE WHEN t1.c2 THEN t1.c62 END) AND (CAST(t1.c0 AS INTEGER))));
SELECT ALL * FROM t1, vt0, rt0 WHERE (CASE ((t1.c2) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN (t1.c0 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0)) WHEN UPPER(DISTINCT vt0.c0) THEN ((0xffffffffda8bc009)|(t1.c0)) WHEN ((rt0.c1)<=(rt0.c1)) THEN ((t1.c0) BETWEEN (rt0.c2) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c2) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN (t1.c0 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0)) WHEN UPPER(DISTINCT vt0.c0) THEN ((0xffffffffda8bc009)|(t1.c0)) WHEN ((rt0.c1)<=(rt0.c1)) THEN ((t1.c0) BETWEEN (rt0.c2) AND (vt0.c0)) END) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL * FROM t1, vt0, rt0 WHERE (CASE ((t1.c2) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN (t1.c0 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0)) WHEN UPPER(DISTINCT vt0.c0) THEN ((0xffffffffda8bc009)|(t1.c0)) WHEN ((rt0.c1)<=(rt0.c1)) THEN ((t1.c0) BETWEEN (rt0.c2) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c2) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN (t1.c0 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0)) WHEN UPPER(DISTINCT vt0.c0) THEN ((0xffffffffda8bc009)|(t1.c0)) WHEN ((rt0.c1)<=(rt0.c1)) THEN ((t1.c0) BETWEEN (rt0.c2) AND (vt0.c0)) END) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL * FROM t1, vt0, rt0 WHERE (CASE ((t1.c2) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN (t1.c0 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0)) WHEN UPPER(DISTINCT vt0.c0) THEN ((0xffffffffda8bc009)|(t1.c0)) WHEN ((rt0.c1)<=(rt0.c1)) THEN ((t1.c0) BETWEEN (rt0.c2) AND (vt0.c0)) END);
SELECT ALL * FROM vt0, rt0, t1 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((UNLIKELY('T'))))) ORDER BY ((((((rt0.c2)AND(t1.c0)))OR(t1.c2))) IS FALSE)  NULLS FIRST, x'c6b3' DESC, CAST((~ (rt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((UNLIKELY('T'))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((((rt0.c2)AND(t1.c0)))OR(t1.c2))) IS FALSE)  NULLS FIRST, x'c6b3' DESC, CAST((~ (rt0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t1 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((UNLIKELY('T'))))) ORDER BY ((((((rt0.c2)AND(t1.c0)))OR(t1.c2))) IS FALSE)  NULLS FIRST, x'c6b3' DESC, CAST((~ (rt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((UNLIKELY('T'))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((((rt0.c2)AND(t1.c0)))OR(t1.c2))) IS FALSE)  NULLS FIRST, x'c6b3' DESC, CAST((~ (rt0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t1 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((UNLIKELY('T'))))) ORDER BY ((((((rt0.c2)AND(t1.c0)))OR(t1.c2))) IS FALSE)  NULLS FIRST, x'c6b3' DESC, CAST((~ (rt0.c0)) AS BLOB)  NULLS LAST;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST('-105766044' COLLATE NOCASE AS TEXT) WHERE (CASE WHEN ((NULL)>>(rt0.c2)) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) THEN rt0.c2 WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)>>(rt0.c2)) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) THEN rt0.c2 WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST('-105766044' COLLATE NOCASE AS TEXT));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST('-105766044' COLLATE NOCASE AS TEXT) WHERE (CASE WHEN ((NULL)>>(rt0.c2)) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) THEN rt0.c2 WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)>>(rt0.c2)) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) THEN rt0.c2 WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST('-105766044' COLLATE NOCASE AS TEXT));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST('-105766044' COLLATE NOCASE AS TEXT) WHERE (CASE WHEN ((NULL)>>(rt0.c2)) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) THEN rt0.c2 WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((((((rt0.c2)OR('')))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) NOT NULL) ELSE x'fa9ea213' END) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()), (((0.7076545037295936 IN ())) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (0.8032543506621432)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c2)OR('')))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) NOT NULL) ELSE x'fa9ea213' END) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()), (((0.7076545037295936 IN ())) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (0.8032543506621432)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((((((rt0.c2)OR('')))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) NOT NULL) ELSE x'fa9ea213' END) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()), (((0.7076545037295936 IN ())) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (0.8032543506621432)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c2)OR('')))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) NOT NULL) ELSE x'fa9ea213' END) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()), (((0.7076545037295936 IN ())) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (0.8032543506621432)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((((((rt0.c2)OR('')))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c2) NOT NULL) ELSE x'fa9ea213' END) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()), (((0.7076545037295936 IN ())) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (0.8032543506621432)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(NULL)))OR(vt0.c0)))&(CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))&(CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(NULL)))OR(vt0.c0)))&(CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))&(CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(NULL)))OR(vt0.c0)))&(CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<<('471710081')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<('471710081')) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<<('471710081')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<('471710081')) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<<('471710081')) COLLATE BINARY);
SELECT * FROM rt0, vt0 NATURAL JOIN t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t1);
SELECT * FROM rt0, vt0 NATURAL JOIN t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t1);
SELECT * FROM rt0, vt0 NATURAL JOIN t1 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)/(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)/(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1)/(rt0.c1)))));
SELECT ALL * FROM vt0, t1 WHERE (((CAST(t1.c0 AS BLOB))<<((- (vt0.c0))))) ORDER BY ((CAST(t1.c2 AS INTEGER)) NOT NULL) DESC, ''  NULLS LAST, ((((((((CAST(t1.c2 AS BLOB))OR(CAST(t1.c2 AS NUMERIC))))AND(((NULL)>(vt0.c0)))))OR(t1.c0 COLLATE NOCASE)))AND(LIKELIHOOD(vt0.c0, 0.466633578512636)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS BLOB))<<((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((CAST(t1.c2 AS INTEGER)) NOT NULL) DESC, ''  NULLS LAST, ((((((((CAST(t1.c2 AS BLOB))OR(CAST(t1.c2 AS NUMERIC))))AND(((NULL)>(vt0.c0)))))OR(t1.c0 COLLATE NOCASE)))AND(LIKELIHOOD(vt0.c0, 0.466633578512636)))  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (((CAST(t1.c0 AS BLOB))<<((- (vt0.c0))))) ORDER BY ((CAST(t1.c2 AS INTEGER)) NOT NULL) DESC, ''  NULLS LAST, ((((((((CAST(t1.c2 AS BLOB))OR(CAST(t1.c2 AS NUMERIC))))AND(((NULL)>(vt0.c0)))))OR(t1.c0 COLLATE NOCASE)))AND(LIKELIHOOD(vt0.c0, 0.466633578512636)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS BLOB))<<((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((CAST(t1.c2 AS INTEGER)) NOT NULL) DESC, ''  NULLS LAST, ((((((((CAST(t1.c2 AS BLOB))OR(CAST(t1.c2 AS NUMERIC))))AND(((NULL)>(vt0.c0)))))OR(t1.c0 COLLATE NOCASE)))AND(LIKELIHOOD(vt0.c0, 0.466633578512636)))  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (((CAST(t1.c0 AS BLOB))<<((- (vt0.c0))))) ORDER BY ((CAST(t1.c2 AS INTEGER)) NOT NULL) DESC, ''  NULLS LAST, ((((((((CAST(t1.c2 AS BLOB))OR(CAST(t1.c2 AS NUMERIC))))AND(((NULL)>(vt0.c0)))))OR(t1.c0 COLLATE NOCASE)))AND(LIKELIHOOD(vt0.c0, 0.466633578512636)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((rt0.c1 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((rt0.c1 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((rt0.c1 COLLATE RTRIM) IS FALSE));
SELECT ALL * FROM t1 WHERE (CAST('-628375543' AS NUMERIC)) ORDER BY UNLIKELY(((((t1.c2)AND(t1.c62)))OR(t1.c62))) ASC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-628375543' AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY UNLIKELY(((((t1.c2)AND(t1.c62)))OR(t1.c62))) ASC, NULL DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST('-628375543' AS NUMERIC)) ORDER BY UNLIKELY(((((t1.c2)AND(t1.c62)))OR(t1.c62))) ASC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-628375543' AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY UNLIKELY(((((t1.c2)AND(t1.c62)))OR(t1.c62))) ASC, NULL DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST('-628375543' AS NUMERIC)) ORDER BY UNLIKELY(((((t1.c2)AND(t1.c62)))OR(t1.c62))) ASC, NULL DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (0x50208760) ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN t1.c62 COLLATE NOCASE WHEN ((t1.c0)>=(t1.c2)) THEN t1.c0 COLLATE NOCASE WHEN ((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END ELSE ((((((((t1.c0)OR(t1.c2)))OR(t1.c62)))AND(t1.c62)))OR(t1.c0)) END DESC  NULLS LAST, (CAST(t1.c0 AS REAL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X50208760) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN t1.c62 COLLATE NOCASE WHEN ((t1.c0)>=(t1.c2)) THEN t1.c0 COLLATE NOCASE WHEN ((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END ELSE ((((((((t1.c0)OR(t1.c2)))OR(t1.c62)))AND(t1.c62)))OR(t1.c0)) END DESC  NULLS LAST, (CAST(t1.c0 AS REAL) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (0x50208760) ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN t1.c62 COLLATE NOCASE WHEN ((t1.c0)>=(t1.c2)) THEN t1.c0 COLLATE NOCASE WHEN ((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END ELSE ((((((((t1.c0)OR(t1.c2)))OR(t1.c62)))AND(t1.c62)))OR(t1.c0)) END DESC  NULLS LAST, (CAST(t1.c0 AS REAL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X50208760) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN t1.c62 COLLATE NOCASE WHEN ((t1.c0)>=(t1.c2)) THEN t1.c0 COLLATE NOCASE WHEN ((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END ELSE ((((((((t1.c0)OR(t1.c2)))OR(t1.c62)))AND(t1.c62)))OR(t1.c0)) END DESC  NULLS LAST, (CAST(t1.c0 AS REAL) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (0x50208760) ORDER BY CASE WHEN ((t1.c0) NOT NULL) THEN t1.c62 COLLATE NOCASE WHEN ((t1.c0)>=(t1.c2)) THEN t1.c0 COLLATE NOCASE WHEN ((t1.c62) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CASE t1.c2  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END ELSE ((((((((t1.c0)OR(t1.c2)))OR(t1.c62)))AND(t1.c62)))OR(t1.c0)) END DESC  NULLS LAST, (CAST(t1.c0 AS REAL) IN ()) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (CASE (t1.c2 IN ())  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c2)) THEN t1.c2 END) ORDER BY (((t1.c62) BETWEEN (t1.c62) AND (t1.c62)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (t1.c2 IN ())  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c2)) THEN t1.c2 END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c62) BETWEEN (t1.c62) AND (t1.c62)) IN ()) DESC);
SELECT * FROM t1 WHERE (CASE (t1.c2 IN ())  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c2)) THEN t1.c2 END) ORDER BY (((t1.c62) BETWEEN (t1.c62) AND (t1.c62)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (t1.c2 IN ())  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c2)) THEN t1.c2 END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c62) BETWEEN (t1.c62) AND (t1.c62)) IN ()) DESC);
SELECT * FROM t1 WHERE (CASE (t1.c2 IN ())  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c2)) THEN t1.c2 END) ORDER BY (((t1.c62) BETWEEN (t1.c62) AND (t1.c62)) IN ()) DESC;
SELECT * FROM t1, vt0, rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL)) ORDER BY (- ((((t1.c2))<=(('N'))))) ASC  NULLS LAST, UNLIKELY(CAST(t1.c2 AS TEXT)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (- ((((t1.c2))<=(('N'))))) ASC  NULLS LAST, UNLIKELY(CAST(t1.c2 AS TEXT)) ASC);
SELECT * FROM t1, vt0, rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL)) ORDER BY (- ((((t1.c2))<=(('N'))))) ASC  NULLS LAST, UNLIKELY(CAST(t1.c2 AS TEXT)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (- ((((t1.c2))<=(('N'))))) ASC  NULLS LAST, UNLIKELY(CAST(t1.c2 AS TEXT)) ASC);
SELECT * FROM t1, vt0, rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) ISNULL)) ORDER BY (- ((((t1.c2))<=(('N'))))) ASC  NULLS LAST, UNLIKELY(CAST(t1.c2 AS TEXT)) ASC;
SELECT * FROM t1, vt0 WHERE (CASE ((t1.c62)LIKE(vt0.c0))  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c62)LIKE(vt0.c0))  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CASE ((t1.c62)LIKE(vt0.c0))  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c62)LIKE(vt0.c0))  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CASE ((t1.c62)LIKE(vt0.c0))  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c0)) END);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((LTRIM(vt0.c0))OR((((vt0.c0, x'', vt0.c0)) BETWEEN (('397034775', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(((((vt0.c0)OR('336637017')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LTRIM(vt0.c0))OR((((vt0.c0, x'', vt0.c0)) BETWEEN (('397034775', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(((((vt0.c0)OR('336637017')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((LTRIM(vt0.c0))OR((((vt0.c0, x'', vt0.c0)) BETWEEN (('397034775', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(((((vt0.c0)OR('336637017')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LTRIM(vt0.c0))OR((((vt0.c0, x'', vt0.c0)) BETWEEN (('397034775', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(((((vt0.c0)OR('336637017')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((LTRIM(vt0.c0))OR((((vt0.c0, x'', vt0.c0)) BETWEEN (('397034775', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(((((vt0.c0)OR('336637017')))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t1 FULL OUTER JOIN vt0 ON ((((((((((rt0.c0) NOT BETWEEN (t1.c62) AND (rt0.c0)))OR(LIKELY(rt0.c2))))OR('51620856')))AND(((vt0.c0)&(rt0.c0)))))OR((+ (vt0.c0)))) WHERE (NULL) ORDER BY (('1207706361' IN ()) IN (((((t1.c62)AND('&<6w')))OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN vt0 ON ((((((((((rt0.c0) NOT BETWEEN (t1.c62) AND (rt0.c0)))OR(LIKELY(rt0.c2))))OR('51620856')))AND(((vt0.c0)&(rt0.c0)))))OR((+ (vt0.c0)))) ORDER BY (('1207706361' IN ()) IN (((((t1.c62)AND('&<6w')))OR(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0, t1 FULL OUTER JOIN vt0 ON ((((((((((rt0.c0) NOT BETWEEN (t1.c62) AND (rt0.c0)))OR(LIKELY(rt0.c2))))OR('51620856')))AND(((vt0.c0)&(rt0.c0)))))OR((+ (vt0.c0)))) WHERE (NULL) ORDER BY (('1207706361' IN ()) IN (((((t1.c62)AND('&<6w')))OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN vt0 ON ((((((((((rt0.c0) NOT BETWEEN (t1.c62) AND (rt0.c0)))OR(LIKELY(rt0.c2))))OR('51620856')))AND(((vt0.c0)&(rt0.c0)))))OR((+ (vt0.c0)))) ORDER BY (('1207706361' IN ()) IN (((((t1.c62)AND('&<6w')))OR(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0, t1 FULL OUTER JOIN vt0 ON ((((((((((rt0.c0) NOT BETWEEN (t1.c62) AND (rt0.c0)))OR(LIKELY(rt0.c2))))OR('51620856')))AND(((vt0.c0)&(rt0.c0)))))OR((+ (vt0.c0)))) WHERE (NULL) ORDER BY (('1207706361' IN ()) IN (((((t1.c62)AND('&<6w')))OR(rt0.c0)))) DESC;
SELECT COUNT(*) FROM t1, rt0 WHERE (CAST(CASE -1.472289726E9  WHEN rt0.c2 THEN rt0.c1 END AS INTEGER)) ORDER BY (NOT (((rt0.c2) IS FALSE))), ((CASE t1.c62  WHEN rt0.c0 THEN NULL ELSE t1.c0 END) NOT BETWEEN (((t1.c2)-(t1.c0))) AND (0.2800167001909557)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE -1.472289726E9  WHEN rt0.c2 THEN rt0.c1 END AS INTEGER)) IS TRUE)  as count FROM t1, rt0 ORDER BY (NOT (((rt0.c2) IS FALSE))), ((CASE t1.c62  WHEN rt0.c0 THEN NULL ELSE t1.c0 END) NOT BETWEEN (((t1.c2)-(t1.c0))) AND (0.2800167001909557)) ASC);
SELECT COUNT(*) FROM t1, rt0 WHERE (CAST(CASE -1.472289726E9  WHEN rt0.c2 THEN rt0.c1 END AS INTEGER)) ORDER BY (NOT (((rt0.c2) IS FALSE))), ((CASE t1.c62  WHEN rt0.c0 THEN NULL ELSE t1.c0 END) NOT BETWEEN (((t1.c2)-(t1.c0))) AND (0.2800167001909557)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE -1.472289726E9  WHEN rt0.c2 THEN rt0.c1 END AS INTEGER)) IS TRUE)  as count FROM t1, rt0 ORDER BY (NOT (((rt0.c2) IS FALSE))), ((CASE t1.c62  WHEN rt0.c0 THEN NULL ELSE t1.c0 END) NOT BETWEEN (((t1.c2)-(t1.c0))) AND (0.2800167001909557)) ASC);
SELECT COUNT(*) FROM t1, rt0 WHERE (CAST(CASE -1.472289726E9  WHEN rt0.c2 THEN rt0.c1 END AS INTEGER)) ORDER BY (NOT (((rt0.c2) IS FALSE))), ((CASE t1.c62  WHEN rt0.c0 THEN NULL ELSE t1.c0 END) NOT BETWEEN (((t1.c2)-(t1.c0))) AND (0.2800167001909557)) ASC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0))<>((t1.c2))))|(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))) LEFT OUTER JOIN t1 ON (((((((((((vt0.c0, x'', vt0.c0)) NOT BETWEEN ((rt0.c1, t1.c2, t1.c62)) AND ((t1.c2, vt0.c0, rt0.c2))))OR((- (t1.c62)))))OR(CASE rt0.c0  WHEN t1.c2 THEN t1.c62 WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t1.c0 END)))AND(rt0.c1 COLLATE RTRIM)))OR(COALESCE(t1.c62, rt0.c0))) WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 END) AND (((2057119730)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 END) AND (((2057119730)>=(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0))!=((t1.c2))))|(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))) LEFT OUTER JOIN t1 ON (((((((((((vt0.c0, x'', vt0.c0)) NOT BETWEEN ((rt0.c1, t1.c2, t1.c62)) AND ((t1.c2, vt0.c0, rt0.c2))))OR((- (t1.c62)))))OR(CASE rt0.c0  WHEN t1.c2 THEN t1.c62 WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t1.c0 END)))AND(rt0.c1 COLLATE RTRIM)))OR(COALESCE(t1.c62, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0))<>((t1.c2))))|(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))) LEFT OUTER JOIN t1 ON (((((((((((vt0.c0, x'', vt0.c0)) NOT BETWEEN ((rt0.c1, t1.c2, t1.c62)) AND ((t1.c2, vt0.c0, rt0.c2))))OR((- (t1.c62)))))OR(CASE rt0.c0  WHEN t1.c2 THEN t1.c62 WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t1.c0 END)))AND(rt0.c1 COLLATE RTRIM)))OR(COALESCE(t1.c62, rt0.c0))) WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 END) AND (((2057119730)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 END) AND (((2057119730)>=(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0))!=((t1.c2))))|(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))) LEFT OUTER JOIN t1 ON (((((((((((vt0.c0, x'', vt0.c0)) NOT BETWEEN ((rt0.c1, t1.c2, t1.c62)) AND ((t1.c2, vt0.c0, rt0.c2))))OR((- (t1.c62)))))OR(CASE rt0.c0  WHEN t1.c2 THEN t1.c62 WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t1.c0 END)))AND(rt0.c1 COLLATE RTRIM)))OR(COALESCE(t1.c62, rt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (load_extension((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((rt0.c1 IN ()))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (load_extension((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((rt0.c1 IN ()))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE (vt0.c0 IN ('0.5073903152911066', vt0.c0))  WHEN ((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)) THEN (NOT (rt0.c0)) ELSE 0.40271169089706293 END) ORDER BY (((~ (rt0.c1)))OR(rt0.c2 COLLATE RTRIM)) ASC, ABS('1190956314'), ((rt0.c1 COLLATE NOCASE)<<(((vt0.c0)GLOB(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ('0.5073903152911066', vt0.c0))  WHEN ((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)) THEN (NOT (rt0.c0)) ELSE 0.40271169089706293 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((~ (rt0.c1)))OR(rt0.c2 COLLATE RTRIM)) ASC, ABS('1190956314'), ((rt0.c1 COLLATE NOCASE)<<(((vt0.c0)GLOB(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE (vt0.c0 IN ('0.5073903152911066', vt0.c0))  WHEN ((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)) THEN (NOT (rt0.c0)) ELSE 0.40271169089706293 END) ORDER BY (((~ (rt0.c1)))OR(rt0.c2 COLLATE RTRIM)) ASC, ABS('1190956314'), ((rt0.c1 COLLATE NOCASE)<<(((vt0.c0)GLOB(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ('0.5073903152911066', vt0.c0))  WHEN ((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)) THEN (NOT (rt0.c0)) ELSE 0.40271169089706293 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((~ (rt0.c1)))OR(rt0.c2 COLLATE RTRIM)) ASC, ABS('1190956314'), ((rt0.c1 COLLATE NOCASE)<<(((vt0.c0)GLOB(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE (vt0.c0 IN ('0.5073903152911066', vt0.c0))  WHEN ((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)) THEN (NOT (rt0.c0)) ELSE 0.40271169089706293 END) ORDER BY (((~ (rt0.c1)))OR(rt0.c2 COLLATE RTRIM)) ASC, ABS('1190956314'), ((rt0.c1 COLLATE NOCASE)<<(((vt0.c0)GLOB(vt0.c0)))) DESC;
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((rt0.c2)OR(rt0.c2)))OR('-1272476206')) IN ())) ORDER BY UNLIKELY(DISTINCT ((rt0.c0) IS TRUE)) ASC  NULLS FIRST, ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)))OR((- (t1.c62))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)OR(rt0.c2)))OR('-1272476206')) IN ())) IS TRUE)  as count FROM t1, rt0 ORDER BY UNLIKELY(DISTINCT ((rt0.c0) IS TRUE)) ASC  NULLS FIRST, ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)))OR((- (t1.c62))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((rt0.c2)OR(rt0.c2)))OR('-1272476206')) IN ())) ORDER BY UNLIKELY(DISTINCT ((rt0.c0) IS TRUE)) ASC  NULLS FIRST, ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)))OR((- (t1.c62))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)OR(rt0.c2)))OR('-1272476206')) IN ())) IS TRUE)  as count FROM t1, rt0 ORDER BY UNLIKELY(DISTINCT ((rt0.c0) IS TRUE)) ASC  NULLS FIRST, ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)))OR((- (t1.c62))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((rt0.c2)OR(rt0.c2)))OR('-1272476206')) IN ())) ORDER BY UNLIKELY(DISTINCT ((rt0.c0) IS TRUE)) ASC  NULLS FIRST, ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c0)))OR((- (t1.c62))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (- (0x2ffa8b54 COLLATE RTRIM)) INNER JOIN rt0 ON (+ (COALESCE(rt0.c0, t1.c62))) WHERE (((((((((((((((((json_remove(rt0.c0, vt0.c0))AND(x'')))AND(CASE t1.c0  WHEN t1.c2 THEN t1.c2 ELSE t1.c2 END)))OR((((t1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c0)))))AND(((((rt0.c0)AND(rt0.c1)))AND(t1.c2)))))AND(x'')))OR(rt0.c1 COLLATE BINARY)))AND(t1.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((json_remove(rt0.c0, vt0.c0))AND(x'')))AND(CASE t1.c0  WHEN t1.c2 THEN t1.c2 ELSE t1.c2 END)))OR((((t1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c0)))))AND(((((rt0.c0)AND(rt0.c1)))AND(t1.c2)))))AND(x'')))OR(rt0.c1 COLLATE BINARY)))AND(t1.c2))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (- (0X2ffa8b54 COLLATE RTRIM)) INNER JOIN rt0 ON (+ (COALESCE(rt0.c0, t1.c62))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (- (0x2ffa8b54 COLLATE RTRIM)) INNER JOIN rt0 ON (+ (COALESCE(rt0.c0, t1.c62))) WHERE (((((((((((((((((json_remove(rt0.c0, vt0.c0))AND(x'')))AND(CASE t1.c0  WHEN t1.c2 THEN t1.c2 ELSE t1.c2 END)))OR((((t1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c0)))))AND(((((rt0.c0)AND(rt0.c1)))AND(t1.c2)))))AND(x'')))OR(rt0.c1 COLLATE BINARY)))AND(t1.c2)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((json_remove(rt0.c0, vt0.c0))AND(x'')))AND(CASE t1.c0  WHEN t1.c2 THEN t1.c2 ELSE t1.c2 END)))OR((((t1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c0)))))AND(((((rt0.c0)AND(rt0.c1)))AND(t1.c2)))))AND(x'')))OR(rt0.c1 COLLATE BINARY)))AND(t1.c2))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (- (0X2ffa8b54 COLLATE RTRIM)) INNER JOIN rt0 ON (+ (COALESCE(rt0.c0, t1.c62))));
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((t1.c2))>((t1.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2))>((t1.c0)))) NOTNULL)) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((t1.c2))>((t1.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2))>((t1.c0)))) NOTNULL)) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((((t1.c2))>((t1.c0)))) NOTNULL));
SELECT * FROM t1, rt0, vt0 WHERE (CAST(((t1.c0)GLOB(rt0.c1)) AS NUMERIC)) ORDER BY (((CASE t1.c62  WHEN t1.c62 THEN t1.c62 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c2 THEN rt0.c1 END))>=((x'a909'))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN 0Xfffffffff7de908c ELSE (t1.c62 IN (t1.c2, t1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)GLOB(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (((CASE t1.c62  WHEN t1.c62 THEN t1.c62 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c2 THEN rt0.c1 END))>=((x'a909'))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN 0xfffffffff7de908c ELSE (t1.c62 IN (t1.c2, t1.c2)) END ASC);
SELECT * FROM t1, rt0, vt0 WHERE (CAST(((t1.c0)GLOB(rt0.c1)) AS NUMERIC)) ORDER BY (((CASE t1.c62  WHEN t1.c62 THEN t1.c62 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c2 THEN rt0.c1 END))>=((x'a909'))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN 0Xfffffffff7de908c ELSE (t1.c62 IN (t1.c2, t1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)GLOB(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (((CASE t1.c62  WHEN t1.c62 THEN t1.c62 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c2 THEN rt0.c1 END))>=((x'a909'))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN 0xfffffffff7de908c ELSE (t1.c62 IN (t1.c2, t1.c2)) END ASC);
SELECT * FROM t1, rt0, vt0 WHERE (CAST(((t1.c0)GLOB(rt0.c1)) AS NUMERIC)) ORDER BY (((CASE t1.c62  WHEN t1.c62 THEN t1.c62 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c2 THEN rt0.c1 END))>=((x'a909'))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN 0Xfffffffff7de908c ELSE (t1.c62 IN (t1.c2, t1.c2)) END ASC;
SELECT * FROM t1 WHERE ('(.!DXR7	0');
SELECT SUM(count) FROM (SELECT (('(.!DXR7	0') IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ('(.!DXR7	0');
SELECT SUM(count) FROM (SELECT (('(.!DXR7	0') IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ('(.!DXR7	0');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON ((x'9e69')<<(((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (IFNULL(IFNULL(DISTINCT rt0.c0, t1.c0), NULL));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(IFNULL(DISTINCT rt0.c0, t1.c0), NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON ((x'9e69')<<(((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON ((x'9e69')<<(((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (IFNULL(IFNULL(DISTINCT rt0.c0, t1.c0), NULL));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(IFNULL(DISTINCT rt0.c0, t1.c0), NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON ((x'9e69')<<(((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON ((x'9e69')<<(((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE (IFNULL(IFNULL(DISTINCT rt0.c0, t1.c0), NULL));
SELECT COUNT(*) FROM t1, rt0 WHERE (CASE WHEN ((t1.c62) NOTNULL) THEN rt0.c2 COLLATE BINARY WHEN rt0.c0 THEN ((((rt0.c1)OR(t1.c0)))AND(rt0.c2)) WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN t1.c62 END THEN ((t1.c2) NOT BETWEEN (rt0.c1) AND (t1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c62) NOTNULL) THEN rt0.c2 COLLATE BINARY WHEN rt0.c0 THEN ((((rt0.c1)OR(t1.c0)))AND(rt0.c2)) WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN t1.c62 END THEN ((t1.c2) NOT BETWEEN (rt0.c1) AND (t1.c2)) END) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (CASE WHEN ((t1.c62) NOTNULL) THEN rt0.c2 COLLATE BINARY WHEN rt0.c0 THEN ((((rt0.c1)OR(t1.c0)))AND(rt0.c2)) WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN t1.c62 END THEN ((t1.c2) NOT BETWEEN (rt0.c1) AND (t1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c62) NOTNULL) THEN rt0.c2 COLLATE BINARY WHEN rt0.c0 THEN ((((rt0.c1)OR(t1.c0)))AND(rt0.c2)) WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN t1.c62 END THEN ((t1.c2) NOT BETWEEN (rt0.c1) AND (t1.c2)) END) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (CASE WHEN ((t1.c62) NOTNULL) THEN rt0.c2 COLLATE BINARY WHEN rt0.c0 THEN ((((rt0.c1)OR(t1.c0)))AND(rt0.c2)) WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c62 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN t1.c62 END THEN ((t1.c2) NOT BETWEEN (rt0.c1) AND (t1.c2)) END);
SELECT ALL * FROM rt0, t1 WHERE ((+ (CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 END))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE ((+ (CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 END))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE ((+ (CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 END)));
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c1, rt0.c1, rt0.c0)))) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (CASE WHEN rt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c2, rt0.c0))<>((rt0.c1, rt0.c1, rt0.c0)))) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (CASE WHEN rt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c1, rt0.c1, rt0.c0)))) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (CASE WHEN rt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c2, rt0.c0))<>((rt0.c1, rt0.c1, rt0.c0)))) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (CASE WHEN rt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c1, rt0.c1, rt0.c0)))) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (CASE WHEN rt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM t1, vt0 WHERE (CASE WHEN (- (vt0.c0)) THEN ((-1545826311)&(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt0.c0)) THEN ((-1545826311)&(t1.c0)) END) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (CASE WHEN (- (vt0.c0)) THEN ((-1545826311)&(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt0.c0)) THEN ((-1545826311)&(t1.c0)) END) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (CASE WHEN (- (vt0.c0)) THEN ((-1545826311)&(t1.c0)) END);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (CASE WHEN rt0.c1 THEN t1.c0 WHEN (((t1.c2))=((t1.c2))) THEN (- (t1.c0)) WHEN CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 WHEN t1.c62 THEN x'' ELSE rt0.c1 END THEN UNICODE(rt0.c2) END) ORDER BY (((((rt0.c2, t1.c2, rt0.c0))=((t1.c2, rt0.c0, t1.c62))))IS NOT(t1.c62)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN t1.c0 WHEN (((t1.c2))=((t1.c2))) THEN (- (t1.c0)) WHEN CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 WHEN t1.c62 THEN x'' ELSE rt0.c1 END THEN UNICODE(rt0.c2) END) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY (((((rt0.c2, t1.c2, rt0.c0))=((t1.c2, rt0.c0, t1.c62))))IS NOT(t1.c62)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (CASE WHEN rt0.c1 THEN t1.c0 WHEN (((t1.c2))=((t1.c2))) THEN (- (t1.c0)) WHEN CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 WHEN t1.c62 THEN x'' ELSE rt0.c1 END THEN UNICODE(rt0.c2) END) ORDER BY (((((rt0.c2, t1.c2, rt0.c0))=((t1.c2, rt0.c0, t1.c62))))IS NOT(t1.c62)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN t1.c0 WHEN (((t1.c2))=((t1.c2))) THEN (- (t1.c0)) WHEN CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 WHEN t1.c62 THEN x'' ELSE rt0.c1 END THEN UNICODE(rt0.c2) END) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY (((((rt0.c2, t1.c2, rt0.c0))=((t1.c2, rt0.c0, t1.c62))))IS NOT(t1.c62)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (CASE WHEN rt0.c1 THEN t1.c0 WHEN (((t1.c2))=((t1.c2))) THEN (- (t1.c0)) WHEN CASE WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 WHEN t1.c62 THEN x'' ELSE rt0.c1 END THEN UNICODE(rt0.c2) END) ORDER BY (((((rt0.c2, t1.c2, rt0.c0))=((t1.c2, rt0.c0, t1.c62))))IS NOT(t1.c62)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))IS(((vt0.c0)|(vt0.c0))))) ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))AND(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>=((vt0.c0))))IS(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))AND(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))IS(((vt0.c0)|(vt0.c0))))) ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))AND(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>=((vt0.c0))))IS(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))AND(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c0))))IS(((vt0.c0)|(vt0.c0))))) ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))AND(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON (+ (t1.c62)) WHERE (((((rt0.c2) BETWEEN (t1.c2) AND (rt0.c1))) NOT BETWEEN (CASE WHEN t1.c2 THEN rt0.c0 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c0 THEN '' ELSE t1.c62 END) AND (LIKELIHOOD(rt0.c2, 0.4147940897107375)))) ORDER BY (((x'efb4'))<=((CAST(t1.c2 AS INTEGER)))) DESC  NULLS FIRST, (((rt0.c2, rt0.c0, t1.c2, rt0.c0, t1.c62))=((157408579, t1.c2, rt0.c2, t1.c62, t1.c2))) COLLATE BINARY  NULLS LAST, CAST(((rt0.c0)OR(t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (t1.c2) AND (rt0.c1))) NOT BETWEEN (CASE WHEN t1.c2 THEN rt0.c0 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c0 THEN '' ELSE t1.c62 END) AND (LIKELIHOOD(rt0.c2, 0.4147940897107375)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON (+ (t1.c62)) ORDER BY (((x'efb4'))<=((CAST(t1.c2 AS INTEGER)))) DESC  NULLS FIRST, (((rt0.c2, rt0.c0, t1.c2, rt0.c0, t1.c62))==((157408579, t1.c2, rt0.c2, t1.c62, t1.c2))) COLLATE BINARY  NULLS LAST, CAST(((rt0.c0)OR(t1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON (+ (t1.c62)) WHERE (((((rt0.c2) BETWEEN (t1.c2) AND (rt0.c1))) NOT BETWEEN (CASE WHEN t1.c2 THEN rt0.c0 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c0 THEN '' ELSE t1.c62 END) AND (LIKELIHOOD(rt0.c2, 0.4147940897107375)))) ORDER BY (((x'efb4'))<=((CAST(t1.c2 AS INTEGER)))) DESC  NULLS FIRST, (((rt0.c2, rt0.c0, t1.c2, rt0.c0, t1.c62))=((157408579, t1.c2, rt0.c2, t1.c62, t1.c2))) COLLATE BINARY  NULLS LAST, CAST(((rt0.c0)OR(t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (t1.c2) AND (rt0.c1))) NOT BETWEEN (CASE WHEN t1.c2 THEN rt0.c0 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c0 THEN '' ELSE t1.c62 END) AND (LIKELIHOOD(rt0.c2, 0.4147940897107375)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON (+ (t1.c62)) ORDER BY (((x'efb4'))<=((CAST(t1.c2 AS INTEGER)))) DESC  NULLS FIRST, (((rt0.c2, rt0.c0, t1.c2, rt0.c0, t1.c62))==((157408579, t1.c2, rt0.c2, t1.c62, t1.c2))) COLLATE BINARY  NULLS LAST, CAST(((rt0.c0)OR(t1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON (+ (t1.c62)) WHERE (((((rt0.c2) BETWEEN (t1.c2) AND (rt0.c1))) NOT BETWEEN (CASE WHEN t1.c2 THEN rt0.c0 WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c0 THEN '' ELSE t1.c62 END) AND (LIKELIHOOD(rt0.c2, 0.4147940897107375)))) ORDER BY (((x'efb4'))<=((CAST(t1.c2 AS INTEGER)))) DESC  NULLS FIRST, (((rt0.c2, rt0.c0, t1.c2, rt0.c0, t1.c62))=((157408579, t1.c2, rt0.c2, t1.c62, t1.c2))) COLLATE BINARY  NULLS LAST, CAST(((rt0.c0)OR(t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((NOT (vt0.c0)))>(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))>(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((NOT (vt0.c0)))>(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))>(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((NOT (vt0.c0)))>(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1, rt0.c2, NULL)) NOT BETWEEN ((((rt0.c0)LIKE(rt0.c0)), ((rt0.c1)LIKE(rt0.c1)), ((rt0.c1) IS TRUE), (('2118718592')<=(rt0.c0)), TRIM(rt0.c1))) AND ((json_patch(rt0.c2, rt0.c1), ((rt0.c1)GLOB(rt0.c2)), (rt0.c2 IN ()), '1446446178', (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) ORDER BY ((((rt0.c2 COLLATE BINARY)OR(((rt0.c2)!=(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, rt0.c1, rt0.c2, NULL)) NOT BETWEEN ((((rt0.c0)LIKE(rt0.c0)), ((rt0.c1)LIKE(rt0.c1)), ((rt0.c1) IS TRUE), (('2118718592')<=(rt0.c0)), TRIM(rt0.c1))) AND ((json_patch(rt0.c2, rt0.c1), ((rt0.c1)GLOB(rt0.c2)), (rt0.c2 IN ()), '1446446178', (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 COLLATE BINARY)OR(((rt0.c2)<>(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)));
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1, rt0.c2, NULL)) NOT BETWEEN ((((rt0.c0)LIKE(rt0.c0)), ((rt0.c1)LIKE(rt0.c1)), ((rt0.c1) IS TRUE), (('2118718592')<=(rt0.c0)), TRIM(rt0.c1))) AND ((json_patch(rt0.c2, rt0.c1), ((rt0.c1)GLOB(rt0.c2)), (rt0.c2 IN ()), '1446446178', (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) ORDER BY ((((rt0.c2 COLLATE BINARY)OR(((rt0.c2)!=(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, rt0.c1, rt0.c2, NULL)) NOT BETWEEN ((((rt0.c0)LIKE(rt0.c0)), ((rt0.c1)LIKE(rt0.c1)), ((rt0.c1) IS TRUE), (('2118718592')<=(rt0.c0)), TRIM(rt0.c1))) AND ((json_patch(rt0.c2, rt0.c1), ((rt0.c1)GLOB(rt0.c2)), (rt0.c2 IN ()), '1446446178', (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 COLLATE BINARY)OR(((rt0.c2)<>(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)));
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1, rt0.c2, NULL)) NOT BETWEEN ((((rt0.c0)LIKE(rt0.c0)), ((rt0.c1)LIKE(rt0.c1)), ((rt0.c1) IS TRUE), (('2118718592')<=(rt0.c0)), TRIM(rt0.c1))) AND ((json_patch(rt0.c2, rt0.c1), ((rt0.c1)GLOB(rt0.c2)), (rt0.c2 IN ()), '1446446178', (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) ORDER BY ((((rt0.c2 COLLATE BINARY)OR(((rt0.c2)!=(rt0.c1)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END));
SELECT COUNT(*) FROM t1, vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((+ (CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM t1, rt0 WHERE ((((~ (0.8560061088378046)))<=(rt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN ((t1.c62) BETWEEN (t1.c62) AND (NULL)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((t1.c2)IS NOT(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) WHEN '0.49837584918744016' THEN (rt0.c1 IN (t1.c2, rt0.c1)) ELSE ((NULL) NOT NULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (0.8560061088378046)))<=(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt0 ORDER BY CASE WHEN ((t1.c62) BETWEEN (t1.c62) AND (NULL)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((t1.c2)IS NOT(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) WHEN '0.49837584918744016' THEN (rt0.c1 IN (t1.c2, rt0.c1)) ELSE ((NULL) NOT NULL) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((~ (0.8560061088378046)))<=(rt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN ((t1.c62) BETWEEN (t1.c62) AND (NULL)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((t1.c2)IS NOT(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) WHEN '0.49837584918744016' THEN (rt0.c1 IN (t1.c2, rt0.c1)) ELSE ((NULL) NOT NULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (0.8560061088378046)))<=(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt0 ORDER BY CASE WHEN ((t1.c62) BETWEEN (t1.c62) AND (NULL)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((t1.c2)IS NOT(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) WHEN '0.49837584918744016' THEN (rt0.c1 IN (t1.c2, rt0.c1)) ELSE ((NULL) NOT NULL) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0 WHERE ((((~ (0.8560061088378046)))<=(rt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN ((t1.c62) BETWEEN (t1.c62) AND (NULL)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((t1.c2)IS NOT(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) WHEN '0.49837584918744016' THEN (rt0.c1 IN (t1.c2, rt0.c1)) ELSE ((NULL) NOT NULL) END DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((t1.c0) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c0) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c0) NOTNULL)) NOTNULL));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c2, t1.c0)) NOT BETWEEN ((((t1.c2) ISNULL), (((t1.c62, t1.c0, t1.c0))!=((t1.c62, t1.c0, t1.c2))), ((t1.c62)<(t1.c0)))) AND ((((t1.c62)<=(t1.c0)), 0.7546039573653678, t1.c0)))) ORDER BY CASE t1.c62  WHEN t1.c0 THEN t1.c0 END COLLATE BINARY DESC, NULL ASC  NULLS FIRST, (- (((t1.c62)=(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, t1.c2, t1.c0)) NOT BETWEEN ((((t1.c2) ISNULL), (((t1.c62, t1.c0, t1.c0))<>((t1.c62, t1.c0, t1.c2))), ((t1.c62)<(t1.c0)))) AND ((((t1.c62)<=(t1.c0)), 0.7546039573653678, t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c62  WHEN t1.c0 THEN t1.c0 END COLLATE BINARY DESC, NULL ASC  NULLS FIRST, (- (((t1.c62)=(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c2, t1.c0)) NOT BETWEEN ((((t1.c2) ISNULL), (((t1.c62, t1.c0, t1.c0))!=((t1.c62, t1.c0, t1.c2))), ((t1.c62)<(t1.c0)))) AND ((((t1.c62)<=(t1.c0)), 0.7546039573653678, t1.c0)))) ORDER BY CASE t1.c62  WHEN t1.c0 THEN t1.c0 END COLLATE BINARY DESC, NULL ASC  NULLS FIRST, (- (((t1.c62)=(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, t1.c2, t1.c0)) NOT BETWEEN ((((t1.c2) ISNULL), (((t1.c62, t1.c0, t1.c0))<>((t1.c62, t1.c0, t1.c2))), ((t1.c62)<(t1.c0)))) AND ((((t1.c62)<=(t1.c0)), 0.7546039573653678, t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c62  WHEN t1.c0 THEN t1.c0 END COLLATE BINARY DESC, NULL ASC  NULLS FIRST, (- (((t1.c62)=(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0, t1.c2, t1.c0)) NOT BETWEEN ((((t1.c2) ISNULL), (((t1.c62, t1.c0, t1.c0))!=((t1.c62, t1.c0, t1.c2))), ((t1.c62)<(t1.c0)))) AND ((((t1.c62)<=(t1.c0)), 0.7546039573653678, t1.c0)))) ORDER BY CASE t1.c62  WHEN t1.c0 THEN t1.c0 END COLLATE BINARY DESC, NULL ASC  NULLS FIRST, (- (((t1.c62)=(t1.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) IS FALSE) COLLATE NOCASE) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) IS FALSE) COLLATE NOCASE) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) IS FALSE) COLLATE NOCASE) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE ((SUBSTR(t1.c0, rt0.c1) IN (x''))) ORDER BY CAST(((rt0.c1)IS NOT(t1.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((SUBSTR(t1.c0, rt0.c1) IN (x''))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY CAST(((rt0.c1)IS NOT(t1.c0)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE ((SUBSTR(t1.c0, rt0.c1) IN (x''))) ORDER BY CAST(((rt0.c1)IS NOT(t1.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((SUBSTR(t1.c0, rt0.c1) IN (x''))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY CAST(((rt0.c1)IS NOT(t1.c0)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE ((SUBSTR(t1.c0, rt0.c1) IN (x''))) ORDER BY CAST(((rt0.c1)IS NOT(t1.c0)) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t1 ON (rt0.c1 IN ()) WHERE (((((t1.c2)OR(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t1.c2)OR(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t1 ON (rt0.c1 IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t1 ON (rt0.c1 IN ()) WHERE (((((t1.c2)OR(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t1.c2)OR(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t1 ON (rt0.c1 IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t1 ON (rt0.c1 IN ()) WHERE (((((t1.c2)OR(rt0.c2)))AND(rt0.c1)) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (~ (t1.c2)) INNER JOIN rt0 ON (((rt0.c2 IN (t1.c0, rt0.c2)))GLOB((- (t1.c2)))) WHERE (((CAST(t1.c2 AS TEXT))GLOB(((vt0.c0)=(t1.c0))))) ORDER BY CASE WHEN 722438918 THEN ((((rt0.c2)OR(t1.c2)))AND(t1.c0)) WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN CHANGES() WHEN LOWER(DISTINCT t1.c62) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((rt0.c1)>(t1.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS TEXT))GLOB(((vt0.c0)=(t1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (~ (t1.c2)) INNER JOIN rt0 ON (((rt0.c2 IN (t1.c0, rt0.c2)))GLOB((- (t1.c2)))) ORDER BY CASE WHEN 722438918 THEN ((((rt0.c2)OR(t1.c2)))AND(t1.c0)) WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN CHANGES() WHEN LOWER(DISTINCT t1.c62) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((rt0.c1)>(t1.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (~ (t1.c2)) INNER JOIN rt0 ON (((rt0.c2 IN (t1.c0, rt0.c2)))GLOB((- (t1.c2)))) WHERE (((CAST(t1.c2 AS TEXT))GLOB(((vt0.c0)=(t1.c0))))) ORDER BY CASE WHEN 722438918 THEN ((((rt0.c2)OR(t1.c2)))AND(t1.c0)) WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN CHANGES() WHEN LOWER(DISTINCT t1.c62) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((rt0.c1)>(t1.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS TEXT))GLOB(((vt0.c0)=(t1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (~ (t1.c2)) INNER JOIN rt0 ON (((rt0.c2 IN (t1.c0, rt0.c2)))GLOB((- (t1.c2)))) ORDER BY CASE WHEN 722438918 THEN ((((rt0.c2)OR(t1.c2)))AND(t1.c0)) WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN CHANGES() WHEN LOWER(DISTINCT t1.c62) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((rt0.c1)>(t1.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (~ (t1.c2)) INNER JOIN rt0 ON (((rt0.c2 IN (t1.c0, rt0.c2)))GLOB((- (t1.c2)))) WHERE (((CAST(t1.c2 AS TEXT))GLOB(((vt0.c0)=(t1.c0))))) ORDER BY CASE WHEN 722438918 THEN ((((rt0.c2)OR(t1.c2)))AND(t1.c0)) WHEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN CHANGES() WHEN LOWER(DISTINCT t1.c62) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((rt0.c1)>(t1.c0)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST(vt0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN rt0 ON (NOT ((t1.c2 IN (t1.c62, rt0.c1)))) WHERE ((((rt0.c1 IN (t1.c62))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (t1.c62))) IS TRUE)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CAST(vt0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN rt0 ON (NOT ((t1.c2 IN (t1.c62, rt0.c1)))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST(vt0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN rt0 ON (NOT ((t1.c2 IN (t1.c62, rt0.c1)))) WHERE ((((rt0.c1 IN (t1.c62))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (t1.c62))) IS TRUE)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CAST(vt0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN rt0 ON (NOT ((t1.c2 IN (t1.c62, rt0.c1)))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST(vt0.c0 AS BLOB) COLLATE RTRIM FULL OUTER JOIN rt0 ON (NOT ((t1.c2 IN (t1.c62, rt0.c1)))) WHERE ((((rt0.c1 IN (t1.c62))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((('1370187215')<((t1.c2 IN (vt0.c0))))) ORDER BY ((rt0.c0)<>(t1.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('1370187215')<((t1.c2 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY ((rt0.c0)!=(t1.c2)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((('1370187215')<((t1.c2 IN (vt0.c0))))) ORDER BY ((rt0.c0)<>(t1.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('1370187215')<((t1.c2 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY ((rt0.c0)!=(t1.c2)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((('1370187215')<((t1.c2 IN (vt0.c0))))) ORDER BY ((rt0.c0)<>(t1.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((NOT ((((t1.c62)) BETWEEN ((t1.c0)) AND ((t1.c2)))))) ORDER BY ((((((((t1.c62)AND(0.5440282411878179)))OR(t1.c62)))AND(t1.c0 COLLATE NOCASE)))OR(HEX(t1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t1.c62)) BETWEEN ((t1.c0)) AND ((t1.c2)))))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY ((((((((t1.c62)AND(0.5440282411878179)))OR(t1.c62)))AND(t1.c0 COLLATE NOCASE)))OR(HEX(t1.c2))));
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((NOT ((((t1.c62)) BETWEEN ((t1.c0)) AND ((t1.c2)))))) ORDER BY ((((((((t1.c62)AND(0.5440282411878179)))OR(t1.c62)))AND(t1.c0 COLLATE NOCASE)))OR(HEX(t1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t1.c62)) BETWEEN ((t1.c0)) AND ((t1.c2)))))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY ((((((((t1.c62)AND(0.5440282411878179)))OR(t1.c62)))AND(t1.c0 COLLATE NOCASE)))OR(HEX(t1.c2))));
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((NOT ((((t1.c62)) BETWEEN ((t1.c0)) AND ((t1.c2)))))) ORDER BY ((((((((t1.c62)AND(0.5440282411878179)))OR(t1.c62)))AND(t1.c0 COLLATE NOCASE)))OR(HEX(t1.c2)));
SELECT ALL * FROM t1, rt0, vt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1 NOT INDEXED, rt0, vt0);
SELECT ALL * FROM t1, rt0, vt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1 NOT INDEXED, rt0, vt0);
SELECT ALL * FROM t1, rt0, vt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON CAST(((t1.c62) IS FALSE) AS TEXT) WHERE (((JULIANDAY(0.3099971031034815, t1.c62, t1.c62)) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (CAST(t1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(0.3099971031034815, t1.c62, t1.c62)) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON CAST(((t1.c62) IS FALSE) AS TEXT));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON CAST(((t1.c62) IS FALSE) AS TEXT) WHERE (((JULIANDAY(0.3099971031034815, t1.c62, t1.c62)) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (CAST(t1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(0.3099971031034815, t1.c62, t1.c62)) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON CAST(((t1.c62) IS FALSE) AS TEXT));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON CAST(((t1.c62) IS FALSE) AS TEXT) WHERE (((JULIANDAY(0.3099971031034815, t1.c62, t1.c62)) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (CAST(t1.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0, t1 WHERE (t1.c62) ORDER BY t1.c62;
SELECT SUM(count) FROM (SELECT ((t1.c62) IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c62);
SELECT COUNT(*) FROM vt0, t1 WHERE (t1.c62) ORDER BY t1.c62;
SELECT SUM(count) FROM (SELECT ((t1.c62) IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c62);
SELECT COUNT(*) FROM vt0, t1 WHERE (t1.c62) ORDER BY t1.c62;
SELECT * FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (json_extract(rt0.c0, rt0.c2, rt0.c2, rt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((json_extract(rt0.c0, rt0.c2, rt0.c2, rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (json_extract(rt0.c0, rt0.c2, rt0.c2, rt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((json_extract(rt0.c0, rt0.c2, rt0.c2, rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON rt0.c0 WHERE (0.45108481623940877);
SELECT SUM(count) FROM (SELECT ALL ((0.45108481623940877) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON rt0.c0 WHERE (0.45108481623940877);
SELECT SUM(count) FROM (SELECT ALL ((0.45108481623940877) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON rt0.c0 WHERE (0.45108481623940877);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) IS FALSE) END) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) IS FALSE) END) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) IS FALSE) END) ORDER BY NULL DESC;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((- ((t1.c2 IN ())))) ORDER BY ((((t1.c62 COLLATE BINARY)AND(((1979798817) NOT NULL))))OR(LIKELY(vt0.c0))), t1.c62 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((- ((t1.c2 IN ())))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c62 COLLATE BINARY)AND(((1979798817) NOT NULL))))OR(LIKELY(vt0.c0))), t1.c62 COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((- ((t1.c2 IN ())))) ORDER BY ((((t1.c62 COLLATE BINARY)AND(((1979798817) NOT NULL))))OR(LIKELY(vt0.c0))), t1.c62 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((- ((t1.c2 IN ())))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c62 COLLATE BINARY)AND(((1979798817) NOT NULL))))OR(LIKELY(vt0.c0))), t1.c62 COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((- ((t1.c2 IN ())))) ORDER BY ((((t1.c62 COLLATE BINARY)AND(((1979798817) NOT NULL))))OR(LIKELY(vt0.c0))), t1.c62 COLLATE BINARY ASC;
SELECT * FROM t1, rt0 FULL OUTER JOIN vt0 ON ((((t1.c2)AND(t1.c62))) ISNULL) WHERE (((NULL)<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=(NULL))) IS TRUE)  as count FROM t1, rt0 FULL OUTER JOIN vt0 ON ((((t1.c2)AND(t1.c62))) ISNULL));
SELECT * FROM t1, rt0 FULL OUTER JOIN vt0 ON ((((t1.c2)AND(t1.c62))) ISNULL) WHERE (((NULL)<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=(NULL))) IS TRUE)  as count FROM t1, rt0 FULL OUTER JOIN vt0 ON ((((t1.c2)AND(t1.c62))) ISNULL));
SELECT * FROM t1, rt0 FULL OUTER JOIN vt0 ON ((((t1.c2)AND(t1.c62))) ISNULL) WHERE (((NULL)<=(NULL)));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY ((rtreenode(vt0.c0, '-2098913156'))+((+ (vt0.c0)))) DESC  NULLS FIRST, (('࿿|')OR(((vt0.c0)|(vt0.c0))))  NULLS LAST, ((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)<<(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((rtreenode(vt0.c0, '-2098913156'))+((+ (vt0.c0)))) DESC  NULLS FIRST, (('࿿|')OR(((vt0.c0)|(vt0.c0))))  NULLS LAST, ((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)<<(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY ((rtreenode(vt0.c0, '-2098913156'))+((+ (vt0.c0)))) DESC  NULLS FIRST, (('࿿|')OR(((vt0.c0)|(vt0.c0))))  NULLS LAST, ((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)<<(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((rtreenode(vt0.c0, '-2098913156'))+((+ (vt0.c0)))) DESC  NULLS FIRST, (('࿿|')OR(((vt0.c0)|(vt0.c0))))  NULLS LAST, ((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)<<(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY ((rtreenode(vt0.c0, '-2098913156'))+((+ (vt0.c0)))) DESC  NULLS FIRST, (('࿿|')OR(((vt0.c0)|(vt0.c0))))  NULLS LAST, ((((SQLITE_COMPILEOPTION_GET(vt0.c0))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)<<(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((('풫z)F'))!=((t1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((('풫z)F'))!=((t1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((('풫z)F'))!=((t1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((('풫z)F'))!=((t1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((('풫z)F'))!=((t1.c0 COLLATE NOCASE))));
SELECT * FROM t1 WHERE (CAST(TYPEOF(t1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(t1.c0) AS REAL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(TYPEOF(t1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(t1.c0) AS REAL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(TYPEOF(t1.c0) AS REAL));
SELECT * FROM t1, vt0, rt0 WHERE (((((((((QUOTE(t1.c2))AND((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))))AND(t1.c62)))OR(((((rt0.c0)OR(t1.c0)))AND(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((QUOTE(t1.c2))AND((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))))AND(t1.c62)))OR(((((rt0.c0)OR(t1.c0)))AND(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT * FROM t1, vt0, rt0 WHERE (((((((((QUOTE(t1.c2))AND((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))))AND(t1.c62)))OR(((((rt0.c0)OR(t1.c0)))AND(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((QUOTE(t1.c2))AND((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))))AND(t1.c62)))OR(((((rt0.c0)OR(t1.c0)))AND(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT * FROM t1, vt0, rt0 WHERE (((((((((QUOTE(t1.c2))AND((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))))AND(t1.c62)))OR(((((rt0.c0)OR(t1.c0)))AND(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((CASE WHEN t1.c2 THEN rt0.c2 ELSE t1.c62 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t1.c2 THEN rt0.c2 ELSE t1.c62 END IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((CASE WHEN t1.c2 THEN rt0.c2 ELSE t1.c62 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t1.c2 THEN rt0.c2 ELSE t1.c62 END IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((CASE WHEN t1.c2 THEN rt0.c2 ELSE t1.c62 END IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((rt0.c2) IS TRUE))))) ORDER BY load_extension(CAST(rt0.c1 AS REAL)) DESC, (NOT (((rt0.c1)IS NOT(NULL)))) DESC, ((((((rt0.c1) IS FALSE))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR((((rt0.c2, rt0.c2, rt0.c1))<=(('^\n^\aa', rt0.c1, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY load_extension(CAST(rt0.c1 AS REAL)) DESC, (NOT (((rt0.c1)IS NOT(NULL)))) DESC, ((((((rt0.c1) IS FALSE))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR((((rt0.c2, rt0.c2, rt0.c1))<=(('^\n^\aa', rt0.c1, vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((rt0.c2) IS TRUE))))) ORDER BY load_extension(CAST(rt0.c1 AS REAL)) DESC, (NOT (((rt0.c1)IS NOT(NULL)))) DESC, ((((((rt0.c1) IS FALSE))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR((((rt0.c2, rt0.c2, rt0.c1))<=(('^\n^\aa', rt0.c1, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY load_extension(CAST(rt0.c1 AS REAL)) DESC, (NOT (((rt0.c1)IS NOT(NULL)))) DESC, ((((((rt0.c1) IS FALSE))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR((((rt0.c2, rt0.c2, rt0.c1))<=(('^\n^\aa', rt0.c1, vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) DESC, (NOT ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) DESC, (NOT ((vt0.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) DESC, (NOT ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) DESC, (NOT ((vt0.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) DESC, (NOT ((vt0.c0 IN ()))) DESC;
SELECT * FROM rt0, vt0, t1 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL)) ORDER BY ((((NULL)=(t1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY ((((NULL)=(t1.c0))) IS TRUE) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t1 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL)) ORDER BY ((((NULL)=(t1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY ((((NULL)=(t1.c0))) IS TRUE) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t1 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL)) ORDER BY ((((NULL)=(t1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (((((((((GLOB(t1.c62, t1.c0))OR((- (t1.c0)))))OR(rt0.c2)))OR(rt0.c0 COLLATE BINARY)))AND(x''))) ORDER BY CASE WHEN CAST(x'f4d7' AS REAL) THEN (((t1.c62, t1.c0, rt0.c1)) BETWEEN ((0.6220064032324562, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))) WHEN CAST(t1.c0 AS TEXT) THEN (NOT (t1.c2)) WHEN CAST(t1.c62 AS BLOB) THEN ((t1.c62) NOT BETWEEN (NULL) AND (t1.c2)) ELSE rt0.c1 END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((GLOB(t1.c62, t1.c0))OR((- (t1.c0)))))OR(rt0.c2)))OR(rt0.c0 COLLATE BINARY)))AND(x''))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY CASE WHEN CAST(x'f4d7' AS REAL) THEN (((t1.c62, t1.c0, rt0.c1)) BETWEEN ((0.6220064032324562, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))) WHEN CAST(t1.c0 AS TEXT) THEN (NOT (t1.c2)) WHEN CAST(t1.c62 AS BLOB) THEN ((t1.c62) NOT BETWEEN (NULL) AND (t1.c2)) ELSE rt0.c1 END);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (((((((((GLOB(t1.c62, t1.c0))OR((- (t1.c0)))))OR(rt0.c2)))OR(rt0.c0 COLLATE BINARY)))AND(x''))) ORDER BY CASE WHEN CAST(x'f4d7' AS REAL) THEN (((t1.c62, t1.c0, rt0.c1)) BETWEEN ((0.6220064032324562, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))) WHEN CAST(t1.c0 AS TEXT) THEN (NOT (t1.c2)) WHEN CAST(t1.c62 AS BLOB) THEN ((t1.c62) NOT BETWEEN (NULL) AND (t1.c2)) ELSE rt0.c1 END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((GLOB(t1.c62, t1.c0))OR((- (t1.c0)))))OR(rt0.c2)))OR(rt0.c0 COLLATE BINARY)))AND(x''))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY CASE WHEN CAST(x'f4d7' AS REAL) THEN (((t1.c62, t1.c0, rt0.c1)) BETWEEN ((0.6220064032324562, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))) WHEN CAST(t1.c0 AS TEXT) THEN (NOT (t1.c2)) WHEN CAST(t1.c62 AS BLOB) THEN ((t1.c62) NOT BETWEEN (NULL) AND (t1.c2)) ELSE rt0.c1 END);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (((((((((GLOB(t1.c62, t1.c0))OR((- (t1.c0)))))OR(rt0.c2)))OR(rt0.c0 COLLATE BINARY)))AND(x''))) ORDER BY CASE WHEN CAST(x'f4d7' AS REAL) THEN (((t1.c62, t1.c0, rt0.c1)) BETWEEN ((0.6220064032324562, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))) WHEN CAST(t1.c0 AS TEXT) THEN (NOT (t1.c2)) WHEN CAST(t1.c62 AS BLOB) THEN ((t1.c62) NOT BETWEEN (NULL) AND (t1.c2)) ELSE rt0.c1 END;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON '''' WHERE (rt0.c0) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (((vt0.c0)==(rt0.c2)))) DESC  NULLS LAST, CAST(vt0.c0 AS TEXT)  NULLS FIRST, CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN rt0.c2 COLLATE RTRIM THEN ((-2.102778649E9) BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON '''' ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (((vt0.c0)==(rt0.c2)))) DESC  NULLS LAST, CAST(vt0.c0 AS TEXT)  NULLS FIRST, CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN rt0.c2 COLLATE RTRIM THEN ((-2.102778649E9) BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON '''' WHERE (rt0.c0) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (((vt0.c0)==(rt0.c2)))) DESC  NULLS LAST, CAST(vt0.c0 AS TEXT)  NULLS FIRST, CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN rt0.c2 COLLATE RTRIM THEN ((-2.102778649E9) BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON '''' ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (((vt0.c0)==(rt0.c2)))) DESC  NULLS LAST, CAST(vt0.c0 AS TEXT)  NULLS FIRST, CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN rt0.c2 COLLATE RTRIM THEN ((-2.102778649E9) BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON '''' WHERE (rt0.c0) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (((vt0.c0)==(rt0.c2)))) DESC  NULLS LAST, CAST(vt0.c0 AS TEXT)  NULLS FIRST, CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN rt0.c2 COLLATE RTRIM THEN ((-2.102778649E9) BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) END;
SELECT ALL * FROM rt0, t1, vt0 WHERE (CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE t1.c2 END THEN (((rt0.c0)) NOT BETWEEN ((t1.c62)) AND ((t1.c62))) WHEN CASE t1.c62  WHEN rt0.c1 THEN t1.c62 ELSE rt0.c0 END THEN rt0.c1 WHEN NULL THEN (NOT (rt0.c1)) ELSE ((t1.c62) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE t1.c2 END THEN (((rt0.c0)) NOT BETWEEN ((t1.c62)) AND ((t1.c62))) WHEN CASE t1.c62  WHEN rt0.c1 THEN t1.c62 ELSE rt0.c0 END THEN rt0.c1 WHEN NULL THEN (NOT (rt0.c1)) ELSE ((t1.c62) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE (CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE t1.c2 END THEN (((rt0.c0)) NOT BETWEEN ((t1.c62)) AND ((t1.c62))) WHEN CASE t1.c62  WHEN rt0.c1 THEN t1.c62 ELSE rt0.c0 END THEN rt0.c1 WHEN NULL THEN (NOT (rt0.c1)) ELSE ((t1.c62) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE t1.c2 END THEN (((rt0.c0)) NOT BETWEEN ((t1.c62)) AND ((t1.c62))) WHEN CASE t1.c62  WHEN rt0.c1 THEN t1.c62 ELSE rt0.c0 END THEN rt0.c1 WHEN NULL THEN (NOT (rt0.c1)) ELSE ((t1.c62) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE (CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE t1.c2 END THEN (((rt0.c0)) NOT BETWEEN ((t1.c62)) AND ((t1.c62))) WHEN CASE t1.c62  WHEN rt0.c1 THEN t1.c62 ELSE rt0.c0 END THEN rt0.c1 WHEN NULL THEN (NOT (rt0.c1)) ELSE ((t1.c62) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END);
SELECT ALL * FROM vt0, rt0, t1 WHERE (COALESCE(CAST(rt0.c2 AS INTEGER), ((((((((rt0.c1)OR(t1.c62)))AND(rt0.c0)))AND(t1.c62)))AND(t1.c2)), (~ (rt0.c0)), CASE 'c'  WHEN t1.c62 THEN rt0.c1 END)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(rt0.c2 AS INTEGER), ((((((((rt0.c1)OR(t1.c62)))AND(rt0.c0)))AND(t1.c62)))AND(t1.c2)), (~ (rt0.c0)), CASE 'c'  WHEN t1.c62 THEN rt0.c1 END)) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY NULL DESC);
SELECT ALL * FROM vt0, rt0, t1 WHERE (COALESCE(CAST(rt0.c2 AS INTEGER), ((((((((rt0.c1)OR(t1.c62)))AND(rt0.c0)))AND(t1.c62)))AND(t1.c2)), (~ (rt0.c0)), CASE 'c'  WHEN t1.c62 THEN rt0.c1 END)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(rt0.c2 AS INTEGER), ((((((((rt0.c1)OR(t1.c62)))AND(rt0.c0)))AND(t1.c62)))AND(t1.c2)), (~ (rt0.c0)), CASE 'c'  WHEN t1.c62 THEN rt0.c1 END)) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY NULL DESC);
SELECT ALL * FROM vt0, rt0, t1 WHERE (COALESCE(CAST(rt0.c2 AS INTEGER), ((((((((rt0.c1)OR(t1.c62)))AND(rt0.c0)))AND(t1.c62)))AND(t1.c2)), (~ (rt0.c0)), CASE 'c'  WHEN t1.c62 THEN rt0.c1 END)) ORDER BY NULL DESC;
SELECT COUNT(*) FROM t1 WHERE ((- (CAST(t1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(t1.c2 AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((- (CAST(t1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(t1.c2 AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((- (CAST(t1.c2 AS TEXT))));
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE ((((rt0.c0 IN ()))IS(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))IS(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE ((((rt0.c0 IN ()))IS(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))IS(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE ((((rt0.c0 IN ()))IS(rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN -1558681507 END) NOT NULL)) ORDER BY ((((json_array('-832759350', t1.c62, t1.c62, vt0.c0))AND(t1.c2)))AND(CAST(rt0.c2 AS INTEGER))) ASC, ('1891079994' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN -1558681507 END) NOT NULL)) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((((json_array('-832759350', t1.c62, t1.c62, vt0.c0))AND(t1.c2)))AND(CAST(rt0.c2 AS INTEGER))) ASC, ('1891079994' IN ()) DESC);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN -1558681507 END) NOT NULL)) ORDER BY ((((json_array('-832759350', t1.c62, t1.c62, vt0.c0))AND(t1.c2)))AND(CAST(rt0.c2 AS INTEGER))) ASC, ('1891079994' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN -1558681507 END) NOT NULL)) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((((json_array('-832759350', t1.c62, t1.c62, vt0.c0))AND(t1.c2)))AND(CAST(rt0.c2 AS INTEGER))) ASC, ('1891079994' IN ()) DESC);
SELECT ALL * FROM t1 WHERE (CASE t1.c0  WHEN ((t1.c2)=(t1.c2)) THEN CAST(t1.c2 AS BLOB) WHEN t1.c62 THEN ((t1.c2)IS(t1.c0)) WHEN ((((((((((((t1.c2)AND(t1.c2)))AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))AND(t1.c2)))OR(t1.c62)) THEN (~ (t1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c0  WHEN ((t1.c2)=(t1.c2)) THEN CAST(t1.c2 AS BLOB) WHEN t1.c62 THEN ((t1.c2)IS(t1.c0)) WHEN ((((((((((((t1.c2)AND(t1.c2)))AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))AND(t1.c2)))OR(t1.c62)) THEN (~ (t1.c2)) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE t1.c0  WHEN ((t1.c2)=(t1.c2)) THEN CAST(t1.c2 AS BLOB) WHEN t1.c62 THEN ((t1.c2)IS(t1.c0)) WHEN ((((((((((((t1.c2)AND(t1.c2)))AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))AND(t1.c2)))OR(t1.c62)) THEN (~ (t1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c0  WHEN ((t1.c2)=(t1.c2)) THEN CAST(t1.c2 AS BLOB) WHEN t1.c62 THEN ((t1.c2)IS(t1.c0)) WHEN ((((((((((((t1.c2)AND(t1.c2)))AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))AND(t1.c2)))OR(t1.c62)) THEN (~ (t1.c2)) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE t1.c0  WHEN ((t1.c2)=(t1.c2)) THEN CAST(t1.c2 AS BLOB) WHEN t1.c62 THEN ((t1.c2)IS(t1.c0)) WHEN ((((((((((((t1.c2)AND(t1.c2)))AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))AND(t1.c2)))OR(t1.c62)) THEN (~ (t1.c2)) END);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (IFNULL(t1.c62 COLLATE RTRIM, (- (t1.c0)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))GLOB(CASE WHEN vt0.c0 THEN t1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(t1.c62 COLLATE RTRIM, (- (t1.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))GLOB(CASE WHEN vt0.c0 THEN t1.c2 END)));
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (IFNULL(t1.c62 COLLATE RTRIM, (- (t1.c0)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))GLOB(CASE WHEN vt0.c0 THEN t1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(t1.c62 COLLATE RTRIM, (- (t1.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))GLOB(CASE WHEN vt0.c0 THEN t1.c2 END)));
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (IFNULL(t1.c62 COLLATE RTRIM, (- (t1.c0)))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))GLOB(CASE WHEN vt0.c0 THEN t1.c2 END));
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END ASC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)<(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (- (vt0.c0)) END  NULLS FIRST, CAST(NULL AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END ASC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)<(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (- (vt0.c0)) END  NULLS FIRST, CAST(NULL AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END ASC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)<(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (- (vt0.c0)) END  NULLS FIRST, CAST(NULL AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END ASC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)<(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (- (vt0.c0)) END  NULLS FIRST, CAST(NULL AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END ASC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)<(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (- (vt0.c0)) END  NULLS FIRST, CAST(NULL AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (STRFTIME(LTRIM(rt0.c1, rt0.c2), ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)), (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, '', rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))) ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (((rt0.c2)%(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(LTRIM(rt0.c1, rt0.c2), ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)), (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, '', rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (((rt0.c2)%(rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (STRFTIME(LTRIM(rt0.c1, rt0.c2), ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)), (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, '', rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))) ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (((rt0.c2)%(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(LTRIM(rt0.c1, rt0.c2), ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)), (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, '', rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (((rt0.c2)%(rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (STRFTIME(LTRIM(rt0.c1, rt0.c2), ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)), (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, '', rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))) ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (((rt0.c2)%(rt0.c1)))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0, t1 WHERE (TRIM((((vt0.c0, t1.c0, t1.c2))!=((rt0.c0, t1.c62, vt0.c0))), CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((TRIM((((vt0.c0, t1.c0, t1.c2))<>((rt0.c0, t1.c62, vt0.c0))), CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE (TRIM((((vt0.c0, t1.c0, t1.c2))!=((rt0.c0, t1.c62, vt0.c0))), CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((TRIM((((vt0.c0, t1.c0, t1.c2))<>((rt0.c0, t1.c62, vt0.c0))), CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE (TRIM((((vt0.c0, t1.c0, t1.c2))!=((rt0.c0, t1.c62, vt0.c0))), CAST(vt0.c0 AS REAL)));
SELECT ALL * FROM rt0, t1, vt0 WHERE ((((- (rt0.c2)))<<((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))<<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE ((((- (rt0.c2)))<<((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))<<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE ((((- (rt0.c2)))<<((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN vt0 ON CAST(((t1.c2) NOT BETWEEN (t1.c62) AND (rt0.c0)) AS NUMERIC) WHERE (((- (t1.c62)) IN (((rt0.c2)>>(rt0.c2)), ((rt0.c1)|(t1.c0))))) ORDER BY t1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((- (t1.c62)) IN (((rt0.c2)>>(rt0.c2)), ((rt0.c1)|(t1.c0))))) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt0 ON CAST(((t1.c2) NOT BETWEEN (t1.c62) AND (rt0.c0)) AS NUMERIC) ORDER BY t1.c0 DESC);
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN vt0 ON CAST(((t1.c2) NOT BETWEEN (t1.c62) AND (rt0.c0)) AS NUMERIC) WHERE (((- (t1.c62)) IN (((rt0.c2)>>(rt0.c2)), ((rt0.c1)|(t1.c0))))) ORDER BY t1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((- (t1.c62)) IN (((rt0.c2)>>(rt0.c2)), ((rt0.c1)|(t1.c0))))) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt0 ON CAST(((t1.c2) NOT BETWEEN (t1.c62) AND (rt0.c0)) AS NUMERIC) ORDER BY t1.c0 DESC);
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN vt0 ON CAST(((t1.c2) NOT BETWEEN (t1.c62) AND (rt0.c0)) AS NUMERIC) WHERE (((- (t1.c62)) IN (((rt0.c2)>>(rt0.c2)), ((rt0.c1)|(t1.c0))))) ORDER BY t1.c0 DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0 IN (t1.c62))) IS TRUE)) ORDER BY (- (CAST(t1.c2 AS INTEGER))), (- (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN (t1.c62))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY (- (CAST(t1.c2 AS INTEGER))), (- (''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0 IN (t1.c62))) IS TRUE)) ORDER BY (- (CAST(t1.c2 AS INTEGER))), (- (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN (t1.c62))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY (- (CAST(t1.c2 AS INTEGER))), (- (''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0 IN (t1.c62))) IS TRUE)) ORDER BY (- (CAST(t1.c2 AS INTEGER))), (- (''))  NULLS FIRST;
SELECT * FROM t1 FULL OUTER JOIN rt0 ON CAST((('805181460') BETWEEN (rt0.c0) AND (t1.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (NOT (((rt0.c1)IS NOT(t1.c2)))) WHERE (vt0.c0 COLLATE BINARY) ORDER BY ((((t1.c2)OR(rt0.c1)))OR(t1.c0)) COLLATE BINARY  NULLS FIRST, DATE(((t1.c2)==(rt0.c2)), ((((rt0.c2)OR(t1.c62)))OR(rt0.c2)), (((rt0.c2))>((x''))), IFNULL(rt0.c1, t1.c0), ((((((((rt0.c1)OR(rt0.c2)))OR(t1.c62)))AND('')))AND(0.07671195856251689))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON CAST((('805181460') BETWEEN (rt0.c0) AND (t1.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (NOT (((rt0.c1)IS NOT(t1.c2)))) ORDER BY ((((t1.c2)OR(rt0.c1)))OR(t1.c0)) COLLATE BINARY  NULLS FIRST, DATE(((t1.c2)=(rt0.c2)), ((((rt0.c2)OR(t1.c62)))OR(rt0.c2)), (((rt0.c2))>((x''))), IFNULL(rt0.c1, t1.c0), ((((((((rt0.c1)OR(rt0.c2)))OR(t1.c62)))AND('')))AND(0.07671195856251689))) DESC);
SELECT * FROM t1 FULL OUTER JOIN rt0 ON CAST((('805181460') BETWEEN (rt0.c0) AND (t1.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (NOT (((rt0.c1)IS NOT(t1.c2)))) WHERE (vt0.c0 COLLATE BINARY) ORDER BY ((((t1.c2)OR(rt0.c1)))OR(t1.c0)) COLLATE BINARY  NULLS FIRST, DATE(((t1.c2)==(rt0.c2)), ((((rt0.c2)OR(t1.c62)))OR(rt0.c2)), (((rt0.c2))>((x''))), IFNULL(rt0.c1, t1.c0), ((((((((rt0.c1)OR(rt0.c2)))OR(t1.c62)))AND('')))AND(0.07671195856251689))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON CAST((('805181460') BETWEEN (rt0.c0) AND (t1.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (NOT (((rt0.c1)IS NOT(t1.c2)))) ORDER BY ((((t1.c2)OR(rt0.c1)))OR(t1.c0)) COLLATE BINARY  NULLS FIRST, DATE(((t1.c2)=(rt0.c2)), ((((rt0.c2)OR(t1.c62)))OR(rt0.c2)), (((rt0.c2))>((x''))), IFNULL(rt0.c1, t1.c0), ((((((((rt0.c1)OR(rt0.c2)))OR(t1.c62)))AND('')))AND(0.07671195856251689))) DESC);
SELECT * FROM t1 FULL OUTER JOIN rt0 ON CAST((('805181460') BETWEEN (rt0.c0) AND (t1.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (NOT (((rt0.c1)IS NOT(t1.c2)))) WHERE (vt0.c0 COLLATE BINARY) ORDER BY ((((t1.c2)OR(rt0.c1)))OR(t1.c0)) COLLATE BINARY  NULLS FIRST, DATE(((t1.c2)==(rt0.c2)), ((((rt0.c2)OR(t1.c62)))OR(rt0.c2)), (((rt0.c2))>((x''))), IFNULL(rt0.c1, t1.c0), ((((((((rt0.c1)OR(rt0.c2)))OR(t1.c62)))AND('')))AND(0.07671195856251689))) DESC;
SELECT * FROM t1 WHERE (((((t1.c0 IN ())))=((((((((((((((t1.c0)AND(t1.c62)))AND(t1.c0)))OR(t1.c2)))AND(t1.c0)))AND(x'')))AND(t1.c0)))))) ORDER BY CASE WHEN ((t1.c2) BETWEEN ('-832759350') AND ('')) THEN ((t1.c0)AND(t1.c62)) ELSE ((t1.c62) NOT BETWEEN (t1.c62) AND (NULL)) END, NULL DESC  NULLS FIRST, (+ (t1.c62)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0 IN ())))==((((((((((((((t1.c0)AND(t1.c62)))AND(t1.c0)))OR(t1.c2)))AND(t1.c0)))AND(x'')))AND(t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((t1.c2) BETWEEN ('-832759350') AND ('')) THEN ((t1.c0)AND(t1.c62)) ELSE ((t1.c62) NOT BETWEEN (t1.c62) AND (NULL)) END, NULL DESC  NULLS FIRST, (+ (t1.c62)) COLLATE NOCASE DESC);
SELECT * FROM t1 WHERE (((((t1.c0 IN ())))=((((((((((((((t1.c0)AND(t1.c62)))AND(t1.c0)))OR(t1.c2)))AND(t1.c0)))AND(x'')))AND(t1.c0)))))) ORDER BY CASE WHEN ((t1.c2) BETWEEN ('-832759350') AND ('')) THEN ((t1.c0)AND(t1.c62)) ELSE ((t1.c62) NOT BETWEEN (t1.c62) AND (NULL)) END, NULL DESC  NULLS FIRST, (+ (t1.c62)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0 IN ())))==((((((((((((((t1.c0)AND(t1.c62)))AND(t1.c0)))OR(t1.c2)))AND(t1.c0)))AND(x'')))AND(t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((t1.c2) BETWEEN ('-832759350') AND ('')) THEN ((t1.c0)AND(t1.c62)) ELSE ((t1.c62) NOT BETWEEN (t1.c62) AND (NULL)) END, NULL DESC  NULLS FIRST, (+ (t1.c62)) COLLATE NOCASE DESC);
SELECT * FROM t1 WHERE (((((t1.c0 IN ())))=((((((((((((((t1.c0)AND(t1.c62)))AND(t1.c0)))OR(t1.c2)))AND(t1.c0)))AND(x'')))AND(t1.c0)))))) ORDER BY CASE WHEN ((t1.c2) BETWEEN ('-832759350') AND ('')) THEN ((t1.c0)AND(t1.c62)) ELSE ((t1.c62) NOT BETWEEN (t1.c62) AND (NULL)) END, NULL DESC  NULLS FIRST, (+ (t1.c62)) COLLATE NOCASE DESC;
SELECT * FROM vt0, t1, rt0 WHERE ((- (((t1.c62)|(rt0.c2))))) ORDER BY ((CASE t1.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c62 WHEN vt0.c0 THEN t1.c62 END) NOT BETWEEN ((NOT ('-1959831720'))) AND (CASE WHEN x'' THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c62)|(rt0.c2))))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY ((CASE t1.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c62 WHEN vt0.c0 THEN t1.c62 END) NOT BETWEEN ((NOT ('-1959831720'))) AND (CASE WHEN x'' THEN rt0.c0 END))  NULLS FIRST);
SELECT * FROM vt0, t1, rt0 WHERE ((- (((t1.c62)|(rt0.c2))))) ORDER BY ((CASE t1.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c62 WHEN vt0.c0 THEN t1.c62 END) NOT BETWEEN ((NOT ('-1959831720'))) AND (CASE WHEN x'' THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c62)|(rt0.c2))))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY ((CASE t1.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c62 WHEN vt0.c0 THEN t1.c62 END) NOT BETWEEN ((NOT ('-1959831720'))) AND (CASE WHEN x'' THEN rt0.c0 END))  NULLS FIRST);
SELECT * FROM vt0, t1, rt0 WHERE ((- (((t1.c62)|(rt0.c2))))) ORDER BY ((CASE t1.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t1.c0 THEN t1.c62 WHEN vt0.c0 THEN t1.c62 END) NOT BETWEEN ((NOT ('-1959831720'))) AND (CASE WHEN x'' THEN rt0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (PRINTF(t1.c2 COLLATE NOCASE, CASE t1.c0  WHEN vt0.c0 THEN t1.c2 END, ((vt0.c0) BETWEEN (t1.c62) AND (0.6953104330510849)))) ORDER BY (((NULL, t1.c2, vt0.c0)) NOT BETWEEN ((((((t1.c2)AND(t1.c62)))OR(t1.c0)), t1.c0 COLLATE NOCASE, CASE vt0.c0  WHEN t1.c2 THEN t1.c0 ELSE '-1728693365' END)) AND (((t1.c62 IN ()), INSTR(t1.c0, vt0.c0), ((t1.c0) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ((PRINTF(t1.c2 COLLATE NOCASE, CASE t1.c0  WHEN vt0.c0 THEN t1.c2 END, ((vt0.c0) BETWEEN (t1.c62) AND (0.6953104330510849)))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((NULL, t1.c2, vt0.c0)) NOT BETWEEN ((((((t1.c2)AND(t1.c62)))OR(t1.c0)), t1.c0 COLLATE NOCASE, CASE vt0.c0  WHEN t1.c2 THEN t1.c0 ELSE '-1728693365' END)) AND (((t1.c62 IN ()), INSTR(t1.c0, vt0.c0), ((t1.c0) IS TRUE)))) ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (PRINTF(t1.c2 COLLATE NOCASE, CASE t1.c0  WHEN vt0.c0 THEN t1.c2 END, ((vt0.c0) BETWEEN (t1.c62) AND (0.6953104330510849)))) ORDER BY (((NULL, t1.c2, vt0.c0)) NOT BETWEEN ((((((t1.c2)AND(t1.c62)))OR(t1.c0)), t1.c0 COLLATE NOCASE, CASE vt0.c0  WHEN t1.c2 THEN t1.c0 ELSE '-1728693365' END)) AND (((t1.c62 IN ()), INSTR(t1.c0, vt0.c0), ((t1.c0) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ((PRINTF(t1.c2 COLLATE NOCASE, CASE t1.c0  WHEN vt0.c0 THEN t1.c2 END, ((vt0.c0) BETWEEN (t1.c62) AND (0.6953104330510849)))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((NULL, t1.c2, vt0.c0)) NOT BETWEEN ((((((t1.c2)AND(t1.c62)))OR(t1.c0)), t1.c0 COLLATE NOCASE, CASE vt0.c0  WHEN t1.c2 THEN t1.c0 ELSE '-1728693365' END)) AND (((t1.c62 IN ()), INSTR(t1.c0, vt0.c0), ((t1.c0) IS TRUE)))) ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (PRINTF(t1.c2 COLLATE NOCASE, CASE t1.c0  WHEN vt0.c0 THEN t1.c2 END, ((vt0.c0) BETWEEN (t1.c62) AND (0.6953104330510849)))) ORDER BY (((NULL, t1.c2, vt0.c0)) NOT BETWEEN ((((((t1.c2)AND(t1.c62)))OR(t1.c0)), t1.c0 COLLATE NOCASE, CASE vt0.c0  WHEN t1.c2 THEN t1.c0 ELSE '-1728693365' END)) AND (((t1.c62 IN ()), INSTR(t1.c0, vt0.c0), ((t1.c0) IS TRUE)))) ASC;
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((((('K^nq{')|(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((('K^nq{')|(rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((((('K^nq{')|(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((('K^nq{')|(rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE ((((('K^nq{')|(rt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON (((t1.c2 IN ())) BETWEEN ((NOT (t1.c62))) AND (((rt0.c2)>(rt0.c0)))) FULL OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN '' WHEN rt0.c1 THEN rt0.c1 WHEN '{x6' THEN rt0.c1 ELSE t1.c0 END COLLATE RTRIM WHERE (2.004226124E9) ORDER BY (((((((((t1.c62 IN ()))OR(NULL)))OR(CAST(t1.c62 AS TEXT))))OR((t1.c0 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS FIRST, CASE WHEN CAST(t1.c0 AS INTEGER) THEN ((rt0.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ALL ((2.004226124E9) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (((t1.c2 IN ())) BETWEEN ((NOT (t1.c62))) AND (((rt0.c2)>(rt0.c0)))) FULL OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN '' WHEN rt0.c1 THEN rt0.c1 WHEN '{x6' THEN rt0.c1 ELSE t1.c0 END COLLATE RTRIM ORDER BY (((((((((t1.c62 IN ()))OR(NULL)))OR(CAST(t1.c62 AS TEXT))))OR((t1.c0 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS FIRST, CASE WHEN CAST(t1.c0 AS INTEGER) THEN ((rt0.c0) IS FALSE) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON (((t1.c2 IN ())) BETWEEN ((NOT (t1.c62))) AND (((rt0.c2)>(rt0.c0)))) FULL OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN '' WHEN rt0.c1 THEN rt0.c1 WHEN '{x6' THEN rt0.c1 ELSE t1.c0 END COLLATE RTRIM WHERE (2.004226124E9) ORDER BY (((((((((t1.c62 IN ()))OR(NULL)))OR(CAST(t1.c62 AS TEXT))))OR((t1.c0 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS FIRST, CASE WHEN CAST(t1.c0 AS INTEGER) THEN ((rt0.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ALL ((2.004226124E9) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (((t1.c2 IN ())) BETWEEN ((NOT (t1.c62))) AND (((rt0.c2)>(rt0.c0)))) FULL OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN '' WHEN rt0.c1 THEN rt0.c1 WHEN '{x6' THEN rt0.c1 ELSE t1.c0 END COLLATE RTRIM ORDER BY (((((((((t1.c62 IN ()))OR(NULL)))OR(CAST(t1.c62 AS TEXT))))OR((t1.c0 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS FIRST, CASE WHEN CAST(t1.c0 AS INTEGER) THEN ((rt0.c0) IS FALSE) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON (((t1.c2 IN ())) BETWEEN ((NOT (t1.c62))) AND (((rt0.c2)>(rt0.c0)))) FULL OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN '' WHEN rt0.c1 THEN rt0.c1 WHEN '{x6' THEN rt0.c1 ELSE t1.c0 END COLLATE RTRIM WHERE (2.004226124E9) ORDER BY (((((((((t1.c62 IN ()))OR(NULL)))OR(CAST(t1.c62 AS TEXT))))OR((t1.c0 IN ()))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS FIRST, CASE WHEN CAST(t1.c0 AS INTEGER) THEN ((rt0.c0) IS FALSE) END;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON 0.17757161506880936 WHERE ((+ (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON 0.17757161506880936);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON 0.17757161506880936 WHERE ((+ (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON 0.17757161506880936);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON 0.17757161506880936 WHERE ((+ (((vt0.c0) NOT NULL))));
SELECT * FROM t1, rt0, vt0 WHERE (rtreenode(rt0.c2, t1.c2) COLLATE NOCASE) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN t1.c62 END)<(json_object(vt0.c0, rt0.c0, t1.c0, rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rtreenode(rt0.c2, t1.c2) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN t1.c62 END)<(json_object(vt0.c0, rt0.c0, t1.c0, rt0.c2)))  NULLS FIRST);
SELECT * FROM t1, rt0, vt0 WHERE (rtreenode(rt0.c2, t1.c2) COLLATE NOCASE) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN t1.c62 END)<(json_object(vt0.c0, rt0.c0, t1.c0, rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rtreenode(rt0.c2, t1.c2) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN t1.c62 END)<(json_object(vt0.c0, rt0.c0, t1.c0, rt0.c2)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (((((LOWER(DISTINCT t1.c62))OR(x'')))AND(((t1.c62)<=(t1.c2))))) ORDER BY x'df77934b'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LOWER(DISTINCT t1.c62))OR(x'')))AND(((t1.c62)<=(t1.c2))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY x'df77934b'  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (((((LOWER(DISTINCT t1.c62))OR(x'')))AND(((t1.c62)<=(t1.c2))))) ORDER BY x'df77934b'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LOWER(DISTINCT t1.c62))OR(x'')))AND(((t1.c62)<=(t1.c2))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY x'df77934b'  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (((((LOWER(DISTINCT t1.c62))OR(x'')))AND(((t1.c62)<=(t1.c2))))) ORDER BY x'df77934b'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((MIN('Ice4', rt0.c2))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c0)>(rt0.c1))))) ORDER BY (((rt0.c1 IN ()))&(((rt0.c1)==(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((MIN('Ice4', rt0.c2))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c0)>(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))&(((rt0.c1)==(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((MIN('Ice4', rt0.c2))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c0)>(rt0.c1))))) ORDER BY (((rt0.c1 IN ()))&(((rt0.c1)==(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((MIN('Ice4', rt0.c2))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c0)>(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))&(((rt0.c1)==(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((MIN('Ice4', rt0.c2))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c0)>(rt0.c1))))) ORDER BY (((rt0.c1 IN ()))&(((rt0.c1)==(rt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN COALESCE(DISTINCT vt0.c0, vt0.c0) WHEN ((vt0.c0)IS(vt0.c0)) THEN 0xffffffffe42fbc77 WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))!=((vt0.c0))) WHEN 0.0 THEN ((vt0.c0)=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN COALESCE(DISTINCT vt0.c0, vt0.c0) WHEN ((vt0.c0)IS(vt0.c0)) THEN 0xffffffffe42fbc77 WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))!=((vt0.c0))) WHEN 0.0 THEN ((vt0.c0)=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN COALESCE(DISTINCT vt0.c0, vt0.c0) WHEN ((vt0.c0)IS(vt0.c0)) THEN 0xffffffffe42fbc77 WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))!=((vt0.c0))) WHEN 0.0 THEN ((vt0.c0)=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN COALESCE(DISTINCT vt0.c0, vt0.c0) WHEN ((vt0.c0)IS(vt0.c0)) THEN 0xffffffffe42fbc77 WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))!=((vt0.c0))) WHEN 0.0 THEN ((vt0.c0)=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN COALESCE(DISTINCT vt0.c0, vt0.c0) WHEN ((vt0.c0)IS(vt0.c0)) THEN 0xffffffffe42fbc77 WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))!=((vt0.c0))) WHEN 0.0 THEN ((vt0.c0)=(vt0.c0)) END);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c2) ISNULL) AS INTEGER)) ORDER BY CASE ((rt0.c1)OR(rt0.c2))  WHEN (rt0.c1 IN ()) THEN (((rt0.c1))>=((rt0.c1))) WHEN (rt0.c1 IN ()) THEN 0.7066567491881897 WHEN 0.10066884530905296 THEN ((rt0.c0) IS TRUE) END, ((IFNULL(DISTINCT rt0.c1, vt0.c0)) BETWEEN (JULIANDAY(rt0.c1, rt0.c1, rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c1)OR(rt0.c2))  WHEN (rt0.c1 IN ()) THEN (((rt0.c1))>=((rt0.c1))) WHEN (rt0.c1 IN ()) THEN 0.7066567491881897 WHEN 0.10066884530905296 THEN ((rt0.c0) IS TRUE) END, ((IFNULL(DISTINCT rt0.c1, vt0.c0)) BETWEEN (JULIANDAY(rt0.c1, rt0.c1, rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c2) ISNULL) AS INTEGER)) ORDER BY CASE ((rt0.c1)OR(rt0.c2))  WHEN (rt0.c1 IN ()) THEN (((rt0.c1))>=((rt0.c1))) WHEN (rt0.c1 IN ()) THEN 0.7066567491881897 WHEN 0.10066884530905296 THEN ((rt0.c0) IS TRUE) END, ((IFNULL(DISTINCT rt0.c1, vt0.c0)) BETWEEN (JULIANDAY(rt0.c1, rt0.c1, rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c1)OR(rt0.c2))  WHEN (rt0.c1 IN ()) THEN (((rt0.c1))>=((rt0.c1))) WHEN (rt0.c1 IN ()) THEN 0.7066567491881897 WHEN 0.10066884530905296 THEN ((rt0.c0) IS TRUE) END, ((IFNULL(DISTINCT rt0.c1, vt0.c0)) BETWEEN (JULIANDAY(rt0.c1, rt0.c1, rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c2) ISNULL) AS INTEGER)) ORDER BY CASE ((rt0.c1)OR(rt0.c2))  WHEN (rt0.c1 IN ()) THEN (((rt0.c1))>=((rt0.c1))) WHEN (rt0.c1 IN ()) THEN 0.7066567491881897 WHEN 0.10066884530905296 THEN ((rt0.c0) IS TRUE) END, ((IFNULL(DISTINCT rt0.c1, vt0.c0)) BETWEEN (JULIANDAY(rt0.c1, rt0.c1, rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((TRIM(t1.c62, t1.c0))OR(((((t1.c0)OR(t1.c62)))OR(t1.c62)))))AND((~ (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(t1.c62, t1.c0))OR(((((t1.c0)OR(t1.c62)))OR(t1.c62)))))AND((~ (t1.c2))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((TRIM(t1.c62, t1.c0))OR(((((t1.c0)OR(t1.c62)))OR(t1.c62)))))AND((~ (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(t1.c62, t1.c0))OR(((((t1.c0)OR(t1.c62)))OR(t1.c62)))))AND((~ (t1.c2))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((TRIM(t1.c62, t1.c0))OR(((((t1.c0)OR(t1.c62)))OR(t1.c62)))))AND((~ (t1.c2)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)<<('-395623022')) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<<('-395623022')) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)<<('-395623022')) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<<('-395623022')) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)<<('-395623022')) IN ()));
SELECT COUNT(*) FROM t1 WHERE (0.42253855611951985);
SELECT SUM(count) FROM (SELECT ALL ((0.42253855611951985) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (0.42253855611951985);
SELECT SUM(count) FROM (SELECT ALL ((0.42253855611951985) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (0.42253855611951985);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON CAST(((vt0.c0)*(NULL)) AS NUMERIC) INNER JOIN vt0 ON (((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM WHERE ((~ (((t1.c2)<(t1.c62))))) ORDER BY t1.c62 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t1.c2)<(t1.c62))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON CAST(((vt0.c0)*(NULL)) AS NUMERIC) INNER JOIN vt0 ON (((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM ORDER BY t1.c62 DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON CAST(((vt0.c0)*(NULL)) AS NUMERIC) INNER JOIN vt0 ON (((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM WHERE ((~ (((t1.c2)<(t1.c62))))) ORDER BY t1.c62 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t1.c2)<(t1.c62))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON CAST(((vt0.c0)*(NULL)) AS NUMERIC) INNER JOIN vt0 ON (((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE RTRIM ORDER BY t1.c62 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (((((((rt0.c1))>((t1.c2))), ((rt0.c0) NOT BETWEEN (' 7') AND (t1.c2)), CASE WHEN rt0.c2 THEN t1.c62 WHEN t1.c2 THEN t1.c62 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END))=((vt0.c0 COLLATE RTRIM, CASE WHEN NULL THEN x'd1e5' WHEN t1.c2 THEN t1.c62 WHEN t1.c0 THEN vt0.c0 END, ((t1.c62)LIKE(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1))>((t1.c2))), ((rt0.c0) NOT BETWEEN (' 7') AND (t1.c2)), CASE WHEN rt0.c2 THEN t1.c62 WHEN t1.c2 THEN t1.c62 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END))==((vt0.c0 COLLATE RTRIM, CASE WHEN NULL THEN x'd1e5' WHEN t1.c2 THEN t1.c62 WHEN t1.c0 THEN vt0.c0 END, ((t1.c62)LIKE(rt0.c1)))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (((((((rt0.c1))>((t1.c2))), ((rt0.c0) NOT BETWEEN (' 7') AND (t1.c2)), CASE WHEN rt0.c2 THEN t1.c62 WHEN t1.c2 THEN t1.c62 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END))=((vt0.c0 COLLATE RTRIM, CASE WHEN NULL THEN x'd1e5' WHEN t1.c2 THEN t1.c62 WHEN t1.c0 THEN vt0.c0 END, ((t1.c62)LIKE(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1))>((t1.c2))), ((rt0.c0) NOT BETWEEN (' 7') AND (t1.c2)), CASE WHEN rt0.c2 THEN t1.c62 WHEN t1.c2 THEN t1.c62 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END))==((vt0.c0 COLLATE RTRIM, CASE WHEN NULL THEN x'd1e5' WHEN t1.c2 THEN t1.c62 WHEN t1.c0 THEN vt0.c0 END, ((t1.c62)LIKE(rt0.c1)))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (((((((rt0.c1))>((t1.c2))), ((rt0.c0) NOT BETWEEN (' 7') AND (t1.c2)), CASE WHEN rt0.c2 THEN t1.c62 WHEN t1.c2 THEN t1.c62 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END))=((vt0.c0 COLLATE RTRIM, CASE WHEN NULL THEN x'd1e5' WHEN t1.c2 THEN t1.c62 WHEN t1.c0 THEN vt0.c0 END, ((t1.c62)LIKE(rt0.c1))))));
SELECT ALL * FROM rt0, t1 WHERE (rt0.c2) ORDER BY (rt0.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t1 ORDER BY (rt0.c0 IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE (rt0.c2) ORDER BY (rt0.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t1 ORDER BY (rt0.c0 IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE (rt0.c2) ORDER BY (rt0.c0 IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON LOWER(DISTINCT ((((rt0.c0)AND(vt0.c0)))AND(rt0.c2))) INNER JOIN t1 ON (((((t1.c62)) NOT BETWEEN ((t1.c62)) AND ((t1.c0))))=(((vt0.c0) NOT NULL))) WHERE ((((t1.c62)) BETWEEN (((+ (rt0.c1)))) AND ((CAST(t1.c2 AS NUMERIC))))) ORDER BY ((CAST(rt0.c1 AS INTEGER))!=(((((rt0.c0)AND(rt0.c2)))AND(t1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c62)) BETWEEN (((+ (rt0.c1)))) AND ((CAST(t1.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON LOWER(DISTINCT ((((rt0.c0)AND(vt0.c0)))AND(rt0.c2))) INNER JOIN t1 ON (((((t1.c62)) NOT BETWEEN ((t1.c62)) AND ((t1.c0))))=(((vt0.c0) NOT NULL))) ORDER BY ((CAST(rt0.c1 AS INTEGER))<>(((((rt0.c0)AND(rt0.c2)))AND(t1.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON LOWER(DISTINCT ((((rt0.c0)AND(vt0.c0)))AND(rt0.c2))) INNER JOIN t1 ON (((((t1.c62)) NOT BETWEEN ((t1.c62)) AND ((t1.c0))))=(((vt0.c0) NOT NULL))) WHERE ((((t1.c62)) BETWEEN (((+ (rt0.c1)))) AND ((CAST(t1.c2 AS NUMERIC))))) ORDER BY ((CAST(rt0.c1 AS INTEGER))!=(((((rt0.c0)AND(rt0.c2)))AND(t1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c62)) BETWEEN (((+ (rt0.c1)))) AND ((CAST(t1.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON LOWER(DISTINCT ((((rt0.c0)AND(vt0.c0)))AND(rt0.c2))) INNER JOIN t1 ON (((((t1.c62)) NOT BETWEEN ((t1.c62)) AND ((t1.c0))))=(((vt0.c0) NOT NULL))) ORDER BY ((CAST(rt0.c1 AS INTEGER))<>(((((rt0.c0)AND(rt0.c2)))AND(t1.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON LOWER(DISTINCT ((((rt0.c0)AND(vt0.c0)))AND(rt0.c2))) INNER JOIN t1 ON (((((t1.c62)) NOT BETWEEN ((t1.c62)) AND ((t1.c0))))=(((vt0.c0) NOT NULL))) WHERE ((((t1.c62)) BETWEEN (((+ (rt0.c1)))) AND ((CAST(t1.c2 AS NUMERIC))))) ORDER BY ((CAST(rt0.c1 AS INTEGER))!=(((((rt0.c0)AND(rt0.c2)))AND(t1.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) IS FALSE) IN ())) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN ((('')GLOB(rt0.c0))) AND (((rt0.c0)<>(0xffffffffedee6e30)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NOT (rt0.c2))) NOT BETWEEN ((('')GLOB(rt0.c0))) AND (((rt0.c0)!=(0xffffffffedee6e30)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) IS FALSE) IN ())) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN ((('')GLOB(rt0.c0))) AND (((rt0.c0)<>(0xffffffffedee6e30)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NOT (rt0.c2))) NOT BETWEEN ((('')GLOB(rt0.c0))) AND (((rt0.c0)!=(0xffffffffedee6e30)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) IS FALSE) IN ())) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN ((('')GLOB(rt0.c0))) AND (((rt0.c0)<>(0xffffffffedee6e30)))) DESC;
SELECT ALL COUNT(*) FROM t1, vt0 CROSS JOIN rt0 ON x'1ca4' WHERE ((((rt0.c2 IN (rt0.c1, vt0.c0)))!=(vt0.c0))) ORDER BY CAST(((((rt0.c0)AND(t1.c0)))OR(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c1, vt0.c0)))<>(vt0.c0))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN rt0 ON x'1ca4' ORDER BY CAST(((((rt0.c0)AND(t1.c0)))OR(vt0.c0)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM t1, vt0 CROSS JOIN rt0 ON x'1ca4' WHERE ((((rt0.c2 IN (rt0.c1, vt0.c0)))!=(vt0.c0))) ORDER BY CAST(((((rt0.c0)AND(t1.c0)))OR(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c1, vt0.c0)))<>(vt0.c0))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN rt0 ON x'1ca4' ORDER BY CAST(((((rt0.c0)AND(t1.c0)))OR(vt0.c0)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM t1, vt0 CROSS JOIN rt0 ON x'1ca4' WHERE ((((rt0.c2 IN (rt0.c1, vt0.c0)))!=(vt0.c0))) ORDER BY CAST(((((rt0.c0)AND(t1.c0)))OR(vt0.c0)) AS REAL) DESC;
SELECT COUNT(*) FROM rt0, t1 WHERE ('!p') ORDER BY CAST(((((t1.c62)AND(t1.c0)))OR(rt0.c1)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (('!p') IS TRUE)  as count FROM rt0, t1 ORDER BY CAST(((((t1.c62)AND(t1.c0)))OR(rt0.c1)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0, t1 WHERE ('!p') ORDER BY CAST(((((t1.c62)AND(t1.c0)))OR(rt0.c1)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (('!p') IS TRUE)  as count FROM rt0, t1 ORDER BY CAST(((((t1.c62)AND(t1.c0)))OR(rt0.c1)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0, t1 WHERE ('!p') ORDER BY CAST(((((t1.c62)AND(t1.c0)))OR(rt0.c1)) AS NUMERIC) ASC;
SELECT ALL * FROM vt0, t1 WHERE ((((t1.c2)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((CASE WHEN x'' THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((t1.c2)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((CASE WHEN x'' THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 NOT INDEXED, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((t1.c2)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((CASE WHEN x'' THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((t1.c2)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((CASE WHEN x'' THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 NOT INDEXED, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((t1.c2)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((CASE WHEN x'' THEN vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON 0.2825975241932762 CROSS JOIN rt0 ON (('1063064123')GLOB(((t1.c62) BETWEEN (rt0.c2) AND (t1.c2)))) WHERE ((((t1.c2 IN ()))LIKE((+ (rt0.c2))))) ORDER BY ((NOT (rt0.c1)) IN (((rt0.c2) BETWEEN (rt0.c2) AND (t1.c62)), ((rt0.c2)/(t1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c2 IN ()))LIKE((+ (rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON 0.2825975241932762 CROSS JOIN rt0 ON (('1063064123')GLOB(((t1.c62) BETWEEN (rt0.c2) AND (t1.c2)))) ORDER BY ((NOT (rt0.c1)) IN (((rt0.c2) BETWEEN (rt0.c2) AND (t1.c62)), ((rt0.c2)/(t1.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON 0.2825975241932762 CROSS JOIN rt0 ON (('1063064123')GLOB(((t1.c62) BETWEEN (rt0.c2) AND (t1.c2)))) WHERE ((((t1.c2 IN ()))LIKE((+ (rt0.c2))))) ORDER BY ((NOT (rt0.c1)) IN (((rt0.c2) BETWEEN (rt0.c2) AND (t1.c62)), ((rt0.c2)/(t1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c2 IN ()))LIKE((+ (rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON 0.2825975241932762 CROSS JOIN rt0 ON (('1063064123')GLOB(((t1.c62) BETWEEN (rt0.c2) AND (t1.c2)))) ORDER BY ((NOT (rt0.c1)) IN (((rt0.c2) BETWEEN (rt0.c2) AND (t1.c62)), ((rt0.c2)/(t1.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON 0.2825975241932762 CROSS JOIN rt0 ON (('1063064123')GLOB(((t1.c62) BETWEEN (rt0.c2) AND (t1.c2)))) WHERE ((((t1.c2 IN ()))LIKE((+ (rt0.c2))))) ORDER BY ((NOT (rt0.c1)) IN (((rt0.c2) BETWEEN (rt0.c2) AND (t1.c62)), ((rt0.c2)/(t1.c2)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM) ORDER BY ((((vt0.c0) IS TRUE))LIKE(((vt0.c0)LIKE(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE))LIKE(((vt0.c0)LIKE(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM) ORDER BY ((((vt0.c0) IS TRUE))LIKE(((vt0.c0)LIKE(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE))LIKE(((vt0.c0)LIKE(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM) ORDER BY ((((vt0.c0) IS TRUE))LIKE(((vt0.c0)LIKE(vt0.c0)))) DESC;
SELECT * FROM t1 NOT INDEXED, rt0 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1 NOT INDEXED, rt0 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1 NOT INDEXED, rt0 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE CAST(t1.c2 AS REAL)  WHEN ((((vt0.c0)AND('-1306098749')))AND(t1.c2)) THEN LIKELIHOOD(vt0.c0, 0.04717115666297911) ELSE (~ (t1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t1.c2 AS REAL)  WHEN ((((vt0.c0)AND('-1306098749')))AND(t1.c2)) THEN LIKELIHOOD(vt0.c0, 0.04717115666297911) ELSE (~ (t1.c2)) END) IS TRUE)  as count FROM t1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE CAST(t1.c2 AS REAL)  WHEN ((((vt0.c0)AND('-1306098749')))AND(t1.c2)) THEN LIKELIHOOD(vt0.c0, 0.04717115666297911) ELSE (~ (t1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t1.c2 AS REAL)  WHEN ((((vt0.c0)AND('-1306098749')))AND(t1.c2)) THEN LIKELIHOOD(vt0.c0, 0.04717115666297911) ELSE (~ (t1.c2)) END) IS TRUE)  as count FROM t1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE CAST(t1.c2 AS REAL)  WHEN ((((vt0.c0)AND('-1306098749')))AND(t1.c2)) THEN LIKELIHOOD(vt0.c0, 0.04717115666297911) ELSE (~ (t1.c2)) END);
SELECT ALL * FROM t1, rt0, vt0 WHERE (0.9649414645262987);
SELECT SUM(count) FROM (SELECT ((0.9649414645262987) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL * FROM t1, rt0, vt0 WHERE (0.9649414645262987);
SELECT SUM(count) FROM (SELECT ((0.9649414645262987) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL * FROM t1, rt0, vt0 WHERE (0.9649414645262987);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((((NULL IN (rt0.c1)))AND(((rt0.c0)/(rt0.c2)))))OR((- (rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN 'BE' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND(((rt0.c2)AND(rt0.c2)))))AND((rt0.c1 IN ())))) ORDER BY ((((rt0.c0)|(NULL)))/((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((NULL IN (rt0.c1)))AND(((rt0.c0)/(rt0.c2)))))OR((- (rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN 'BE' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND(((rt0.c2)AND(rt0.c2)))))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)|(NULL)))/((rt0.c1 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((((NULL IN (rt0.c1)))AND(((rt0.c0)/(rt0.c2)))))OR((- (rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN 'BE' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND(((rt0.c2)AND(rt0.c2)))))AND((rt0.c1 IN ())))) ORDER BY ((((rt0.c0)|(NULL)))/((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((NULL IN (rt0.c1)))AND(((rt0.c0)/(rt0.c2)))))OR((- (rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN 'BE' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND(((rt0.c2)AND(rt0.c2)))))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)|(NULL)))/((rt0.c1 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((((NULL IN (rt0.c1)))AND(((rt0.c0)/(rt0.c2)))))OR((- (rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN 'BE' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND(((rt0.c2)AND(rt0.c2)))))AND((rt0.c1 IN ())))) ORDER BY ((((rt0.c0)|(NULL)))/((rt0.c1 IN ())))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)AND(vt0.c0)))))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)AND(vt0.c0)))))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)AND(vt0.c0)))))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (CAST(((t1.c2)IS NOT(vt0.c0)) AS NUMERIC)) ORDER BY (((t1.c0 IN ()))|(((t1.c2) BETWEEN (t1.c62) AND (t1.c62))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2)IS NOT(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY (((t1.c0 IN ()))|(((t1.c2) BETWEEN (t1.c62) AND (t1.c62)))));
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (CAST(((t1.c2)IS NOT(vt0.c0)) AS NUMERIC)) ORDER BY (((t1.c0 IN ()))|(((t1.c2) BETWEEN (t1.c62) AND (t1.c62))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2)IS NOT(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY (((t1.c0 IN ()))|(((t1.c2) BETWEEN (t1.c62) AND (t1.c62)))));
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (CAST(((t1.c2)IS NOT(vt0.c0)) AS NUMERIC)) ORDER BY (((t1.c0 IN ()))|(((t1.c2) BETWEEN (t1.c62) AND (t1.c62))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((- (HEX(DISTINCT NULL))));
SELECT SUM(count) FROM (SELECT (((- (HEX(DISTINCT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (HEX(DISTINCT NULL))));
SELECT SUM(count) FROM (SELECT (((- (HEX(DISTINCT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (HEX(DISTINCT NULL))));
SELECT * FROM rt0, vt0, t1 WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) AND ((((t1.c2)||(rt0.c1)))))) ORDER BY (((((rt0.c0 IN ()))AND(t1.c0)))AND(rt0.c2));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) AND ((((t1.c2)||(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY (((((rt0.c0 IN ()))AND(t1.c0)))AND(rt0.c2)));
SELECT * FROM rt0, vt0, t1 WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) AND ((((t1.c2)||(rt0.c1)))))) ORDER BY (((((rt0.c0 IN ()))AND(t1.c0)))AND(rt0.c2));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END)) AND ((((t1.c2)||(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY (((((rt0.c0 IN ()))AND(t1.c0)))AND(rt0.c2)));
SELECT COUNT(*) FROM t1, vt0 WHERE ((0.572274804598777 IN ())) ORDER BY (~ ((NOT (t1.c62))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.572274804598777 IN ())) IS TRUE)  as count FROM t1, vt0 ORDER BY (~ ((NOT (t1.c62))))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE ((0.572274804598777 IN ())) ORDER BY (~ ((NOT (t1.c62))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.572274804598777 IN ())) IS TRUE)  as count FROM t1, vt0 ORDER BY (~ ((NOT (t1.c62))))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE ((0.572274804598777 IN ())) ORDER BY (~ ((NOT (t1.c62))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON (((((t1.c62) IS TRUE)))<((((((vt0.c0)OR(-1.429183491E9)))AND(t1.c2))))) WHERE (((CASE WHEN NULL THEN '1386848603' WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c62 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN '1386848603' WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c62 END) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((((t1.c62) IS TRUE)))<((((((vt0.c0)OR(-1.429183491E9)))AND(t1.c2))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON (((((t1.c62) IS TRUE)))<((((((vt0.c0)OR(-1.429183491E9)))AND(t1.c2))))) WHERE (((CASE WHEN NULL THEN '1386848603' WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c62 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN '1386848603' WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c62 END) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((((t1.c62) IS TRUE)))<((((((vt0.c0)OR(-1.429183491E9)))AND(t1.c2))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON (((((t1.c62) IS TRUE)))<((((((vt0.c0)OR(-1.429183491E9)))AND(t1.c2))))) WHERE (((CASE WHEN NULL THEN '1386848603' WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c62 END) NOT NULL));
SELECT ALL * FROM t1, vt0 WHERE ((NOT (CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c0 END))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((NOT (CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c0 END))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((NOT (CASE WHEN t1.c0 THEN t1.c2 ELSE t1.c0 END)));
SELECT * FROM rt0, vt0, t1 WHERE ((((((t1.c0 IN (rt0.c1)))AND(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))))OR(((t1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0 IN (rt0.c1)))AND(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))))OR(((t1.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE ((((((t1.c0 IN (rt0.c1)))AND(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))))OR(((t1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0 IN (rt0.c1)))AND(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))))OR(((t1.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE ((((((t1.c0 IN (rt0.c1)))AND(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))))OR(((t1.c0) IS TRUE))));
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON t1.c62 WHERE ((NOT (CAST(t1.c62 AS REAL)))) ORDER BY (((NULL) NOTNULL) IN (((((t1.c2)OR(x'4db7')))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t1.c62 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON t1.c62 ORDER BY (((NULL) NOTNULL) IN (((((t1.c2)OR(x'4db7')))OR(vt0.c0)))) DESC);
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON t1.c62 WHERE ((NOT (CAST(t1.c62 AS REAL)))) ORDER BY (((NULL) NOTNULL) IN (((((t1.c2)OR(x'4db7')))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t1.c62 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON t1.c62 ORDER BY (((NULL) NOTNULL) IN (((((t1.c2)OR(x'4db7')))OR(vt0.c0)))) DESC);
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON t1.c62 WHERE ((NOT (CAST(t1.c62 AS REAL)))) ORDER BY (((NULL) NOTNULL) IN (((((t1.c2)OR(x'4db7')))OR(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (CAST((rt0.c2 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (CAST((rt0.c2 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (CAST((rt0.c2 IN ()) AS BLOB));
SELECT * FROM t1 WHERE ((- (((((((((t1.c62)AND(t1.c2)))OR(t1.c2)))AND(x'2ca2')))AND(t1.c62)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((t1.c62)AND(t1.c2)))OR(t1.c2)))AND(x'2ca2')))AND(t1.c62))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((- (((((((((t1.c62)AND(t1.c2)))OR(t1.c2)))AND(x'2ca2')))AND(t1.c62)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((t1.c62)AND(t1.c2)))OR(t1.c2)))AND(x'2ca2')))AND(t1.c62))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((- (((((((((t1.c62)AND(t1.c2)))OR(t1.c2)))AND(x'2ca2')))AND(t1.c62)))));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((((rt0.c0 IN (t1.c0, rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN x'' END) AND (((((t1.c0)OR(x'')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (t1.c0, rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN x'' END) AND (((((t1.c0)OR(x'')))OR(rt0.c0))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((((rt0.c0 IN (t1.c0, rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN x'' END) AND (((((t1.c0)OR(x'')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (t1.c0, rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN x'' END) AND (((((t1.c0)OR(x'')))OR(rt0.c0))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((((rt0.c0 IN (t1.c0, rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN x'' END) AND (((((t1.c0)OR(x'')))OR(rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (rt0.c0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c0) ISNULL))OR(((vt0.c0)IS(rt0.c0)))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(LOWER(vt0.c0))))AND(UPPER(DISTINCT 9.15942634E8))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) ISNULL))OR(((vt0.c0)IS(rt0.c0)))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(LOWER(vt0.c0))))AND(UPPER(DISTINCT 9.15942634E8)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c0) ISNULL))OR(((vt0.c0)IS(rt0.c0)))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(LOWER(vt0.c0))))AND(UPPER(DISTINCT 9.15942634E8))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) ISNULL))OR(((vt0.c0)IS(rt0.c0)))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(LOWER(vt0.c0))))AND(UPPER(DISTINCT 9.15942634E8)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c0) ISNULL))OR(((vt0.c0)IS(rt0.c0)))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(LOWER(vt0.c0))))AND(UPPER(DISTINCT 9.15942634E8))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (x'')))==((~ (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (x'')))=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (x'')))==((~ (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (x'')))=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (x'')))==((~ (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT NULL);
SELECT * FROM rt0, t1, vt0 WHERE (((-1005163291)LIKE(((rt0.c1)|(t1.c62))))) ORDER BY (((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((rt0.c2, t1.c2 COLLATE NOCASE, CASE rt0.c0  WHEN t1.c62 THEN t1.c62 WHEN rt0.c1 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((rt0.c0, (- (t1.c0)), (t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((-1005163291)LIKE(((rt0.c1)|(t1.c62))))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY (((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((rt0.c2, t1.c2 COLLATE NOCASE, CASE rt0.c0  WHEN t1.c62 THEN t1.c62 WHEN rt0.c1 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((rt0.c0, (- (t1.c0)), (t1.c0 IN ())))));
SELECT * FROM rt0, t1, vt0 WHERE (((-1005163291)LIKE(((rt0.c1)|(t1.c62))))) ORDER BY (((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((rt0.c2, t1.c2 COLLATE NOCASE, CASE rt0.c0  WHEN t1.c62 THEN t1.c62 WHEN rt0.c1 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((rt0.c0, (- (t1.c0)), (t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((-1005163291)LIKE(((rt0.c1)|(t1.c62))))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY (((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((rt0.c2, t1.c2 COLLATE NOCASE, CASE rt0.c0  WHEN t1.c62 THEN t1.c62 WHEN rt0.c1 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((rt0.c0, (- (t1.c0)), (t1.c0 IN ())))));
SELECT * FROM rt0, t1, vt0 WHERE (((-1005163291)LIKE(((rt0.c1)|(t1.c62))))) ORDER BY (((rt0.c2, rt0.c1, vt0.c0)) BETWEEN ((rt0.c2, t1.c2 COLLATE NOCASE, CASE rt0.c0  WHEN t1.c62 THEN t1.c62 WHEN rt0.c1 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((rt0.c0, (- (t1.c0)), (t1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN json_patch(vt0.c0, vt0.c0) WHEN CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN json_patch(vt0.c0, vt0.c0) WHEN CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN json_patch(vt0.c0, vt0.c0) WHEN CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN json_patch(vt0.c0, vt0.c0) WHEN CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN json_patch(vt0.c0, vt0.c0) WHEN CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt0 WHERE ((((0x7f99d0b9, rt0.c1, rt0.c2))<>((rt0.c2, rt0.c1, rt0.c2))) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((0x7f99d0b9, rt0.c1, rt0.c2))<>((rt0.c2, rt0.c1, rt0.c2))) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((0x7f99d0b9, rt0.c1, rt0.c2))<>((rt0.c2, rt0.c1, rt0.c2))) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((0x7f99d0b9, rt0.c1, rt0.c2))<>((rt0.c2, rt0.c1, rt0.c2))) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((0x7f99d0b9, rt0.c1, rt0.c2))<>((rt0.c2, rt0.c1, rt0.c2))) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0, rt0.c0, rt0.c0))==((vt0.c0, rt0.c0, rt0.c0))), (- (rt0.c1)), ((rt0.c0)LIKE(x'4dcc'))))<(((NOT (rt0.c0)), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)), (((rt0.c0))<=((rt0.c0))))))) ORDER BY CASE WHEN ((vt0.c0)*(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0, rt0.c0, rt0.c0))=((vt0.c0, rt0.c0, rt0.c0))), (- (rt0.c1)), ((rt0.c0)LIKE(x'4dcc'))))<(((NOT (rt0.c0)), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)), (((rt0.c0))<=((rt0.c0))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((vt0.c0)*(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0, rt0.c0, rt0.c0))==((vt0.c0, rt0.c0, rt0.c0))), (- (rt0.c1)), ((rt0.c0)LIKE(x'4dcc'))))<(((NOT (rt0.c0)), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)), (((rt0.c0))<=((rt0.c0))))))) ORDER BY CASE WHEN ((vt0.c0)*(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0, rt0.c0, rt0.c0))=((vt0.c0, rt0.c0, rt0.c0))), (- (rt0.c1)), ((rt0.c0)LIKE(x'4dcc'))))<(((NOT (rt0.c0)), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)), (((rt0.c0))<=((rt0.c0))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((vt0.c0)*(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0, rt0.c0, rt0.c0))==((vt0.c0, rt0.c0, rt0.c0))), (- (rt0.c1)), ((rt0.c0)LIKE(x'4dcc'))))<(((NOT (rt0.c0)), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)), (((rt0.c0))<=((rt0.c0))))))) ORDER BY CASE WHEN ((vt0.c0)*(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON ((((vt0.c0)AND(x'')))IS NOT(((t1.c0)GLOB(t1.c62)))) RIGHT OUTER JOIN rt0 ON ((((((((0.6804501681254231)AND(t1.c62 COLLATE BINARY)))OR(((t1.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((t1.c62) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)) WHERE (CAST((- (vt0.c0)) AS NUMERIC)) ORDER BY CAST(CASE rt0.c1  WHEN '-943886127' THEN t1.c2 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((((vt0.c0)AND(x'')))IS NOT(((t1.c0)GLOB(t1.c62)))) RIGHT OUTER JOIN rt0 ON ((((((((0.6804501681254231)AND(t1.c62 COLLATE BINARY)))OR(((t1.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((t1.c62) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)) ORDER BY CAST(CASE rt0.c1  WHEN '-943886127' THEN t1.c2 END AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON ((((vt0.c0)AND(x'')))IS NOT(((t1.c0)GLOB(t1.c62)))) RIGHT OUTER JOIN rt0 ON ((((((((0.6804501681254231)AND(t1.c62 COLLATE BINARY)))OR(((t1.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((t1.c62) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)) WHERE (CAST((- (vt0.c0)) AS NUMERIC)) ORDER BY CAST(CASE rt0.c1  WHEN '-943886127' THEN t1.c2 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((((vt0.c0)AND(x'')))IS NOT(((t1.c0)GLOB(t1.c62)))) RIGHT OUTER JOIN rt0 ON ((((((((0.6804501681254231)AND(t1.c62 COLLATE BINARY)))OR(((t1.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((t1.c62) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)) ORDER BY CAST(CASE rt0.c1  WHEN '-943886127' THEN t1.c2 END AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON ((((vt0.c0)AND(x'')))IS NOT(((t1.c0)GLOB(t1.c62)))) RIGHT OUTER JOIN rt0 ON ((((((((0.6804501681254231)AND(t1.c62 COLLATE BINARY)))OR(((t1.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((t1.c62) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)) WHERE (CAST((- (vt0.c0)) AS NUMERIC)) ORDER BY CAST(CASE rt0.c1  WHEN '-943886127' THEN t1.c2 END AS NUMERIC) DESC;
SELECT * FROM t1, vt0, rt0 WHERE (((((t1.c62) NOT BETWEEN (t1.c0) AND (rt0.c1)))>(5.1620856E7)));
SELECT SUM(count) FROM (SELECT ((((((t1.c62) NOT BETWEEN (t1.c0) AND (rt0.c1)))>(5.1620856E7))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT * FROM t1, vt0, rt0 WHERE (((((t1.c62) NOT BETWEEN (t1.c0) AND (rt0.c1)))>(5.1620856E7)));
SELECT SUM(count) FROM (SELECT ((((((t1.c62) NOT BETWEEN (t1.c0) AND (rt0.c1)))>(5.1620856E7))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT * FROM t1, vt0, rt0 WHERE (((((t1.c62) NOT BETWEEN (t1.c0) AND (rt0.c1)))>(5.1620856E7)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB) WHERE (((rt0.c1)<(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB) WHERE (((rt0.c1)<(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST(rt0.c1 COLLATE BINARY AS BLOB) WHERE (((rt0.c1)<(rt0.c1)) COLLATE BINARY);
SELECT * FROM vt0, t1, rt0 WHERE ((((~ (rt0.c2)))<=(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))<=(x''))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT * FROM vt0, t1, rt0 WHERE ((((~ (rt0.c2)))<=(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))<=(x''))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT * FROM vt0, t1, rt0 WHERE ((((~ (rt0.c2)))<=(x'')));
SELECT ALL * FROM t1 INNER JOIN vt0 ON (((x'fd7e')) NOT BETWEEN (((+ (t1.c62)))) AND (((t1.c2 IN (rt0.c0))))) FULL OUTER JOIN rt0 ON (((t1.c0 IN ()))<>((~ (rt0.c2)))) WHERE ((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((((rt0.c0)>>(rt0.c1)))))) ORDER BY (((t1.c0) ISNULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((((rt0.c0)>>(rt0.c1)))))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((x'fd7e')) NOT BETWEEN (((+ (t1.c62)))) AND (((t1.c2 IN (rt0.c0))))) FULL OUTER JOIN rt0 ON (((t1.c0 IN ()))<>((~ (rt0.c2)))) ORDER BY (((t1.c0) ISNULL) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t1 INNER JOIN vt0 ON (((x'fd7e')) NOT BETWEEN (((+ (t1.c62)))) AND (((t1.c2 IN (rt0.c0))))) FULL OUTER JOIN rt0 ON (((t1.c0 IN ()))<>((~ (rt0.c2)))) WHERE ((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((((rt0.c0)>>(rt0.c1)))))) ORDER BY (((t1.c0) ISNULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((t1.c0)) AND ((((rt0.c0)>>(rt0.c1)))))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((x'fd7e')) NOT BETWEEN (((+ (t1.c62)))) AND (((t1.c2 IN (rt0.c0))))) FULL OUTER JOIN rt0 ON (((t1.c0 IN ()))<>((~ (rt0.c2)))) ORDER BY (((t1.c0) ISNULL) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((CAST(t1.c2 AS TEXT))GLOB(((rt0.c2)<(rt0.c0))))) ORDER BY '1P'  NULLS FIRST, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS TEXT))GLOB(((rt0.c2)<(rt0.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY '1P'  NULLS FIRST, rt0.c1 DESC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((CAST(t1.c2 AS TEXT))GLOB(((rt0.c2)<(rt0.c0))))) ORDER BY '1P'  NULLS FIRST, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c2 AS TEXT))GLOB(((rt0.c2)<(rt0.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY '1P'  NULLS FIRST, rt0.c1 DESC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((CAST(t1.c2 AS TEXT))GLOB(((rt0.c2)<(rt0.c0))))) ORDER BY '1P'  NULLS FIRST, rt0.c1 DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (CASE ((t1.c62)%(NULL))  WHEN ((t1.c2) ISNULL) THEN NULL END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c62)%(NULL))  WHEN ((t1.c2) ISNULL) THEN NULL END) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (CASE ((t1.c62)%(NULL))  WHEN ((t1.c2) ISNULL) THEN NULL END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c62)%(NULL))  WHEN ((t1.c2) ISNULL) THEN NULL END) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (CASE ((t1.c62)%(NULL))  WHEN ((t1.c2) ISNULL) THEN NULL END);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (CHAR(t1.c2, t1.c2, t1.c2, t1.c62, t1.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (CHAR(t1.c2, t1.c2, t1.c2, t1.c62, t1.c2)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (CHAR(t1.c2, t1.c2, t1.c2, t1.c62, t1.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (CHAR(t1.c2, t1.c2, t1.c2, t1.c62, t1.c2)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (CHAR(t1.c2, t1.c2, t1.c2, t1.c62, t1.c2))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ())) ORDER BY (((~ (vt0.c0)))&(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))&(vt0.c0)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ())) ORDER BY (((~ (vt0.c0)))&(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))&(vt0.c0)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN ())) ORDER BY (((~ (vt0.c0)))&(vt0.c0));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON load_extension(rt0.c0) COLLATE BINARY WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1)<=(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY (((((vt0.c0, NULL, rt0.c1, x'', rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) AND ((vt0.c0, rt0.c1, vt0.c0, vt0.c0, rt0.c1)))) BETWEEN (rt0.c2 COLLATE BINARY) AND (CASE rt0.c2  WHEN '-2025364225' THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c1)<=(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON load_extension(rt0.c0) COLLATE BINARY ORDER BY (((((vt0.c0, NULL, rt0.c1, x'', rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) AND ((vt0.c0, rt0.c1, vt0.c0, vt0.c0, rt0.c1)))) BETWEEN (rt0.c2 COLLATE BINARY) AND (CASE rt0.c2  WHEN '-2025364225' THEN vt0.c0 END)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON load_extension(rt0.c0) COLLATE BINARY WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1)<=(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY (((((vt0.c0, NULL, rt0.c1, x'', rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) AND ((vt0.c0, rt0.c1, vt0.c0, vt0.c0, rt0.c1)))) BETWEEN (rt0.c2 COLLATE BINARY) AND (CASE rt0.c2  WHEN '-2025364225' THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c1)<=(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON load_extension(rt0.c0) COLLATE BINARY ORDER BY (((((vt0.c0, NULL, rt0.c1, x'', rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) AND ((vt0.c0, rt0.c1, vt0.c0, vt0.c0, rt0.c1)))) BETWEEN (rt0.c2 COLLATE BINARY) AND (CASE rt0.c2  WHEN '-2025364225' THEN vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (NULL) AND (((-379581030) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (NULL) AND (((-379581030) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (NULL) AND (((-379581030) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (NULL) AND (((-379581030) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (NULL) AND (((-379581030) NOT NULL))));
SELECT * FROM vt0, t1 WHERE ((((((x'd908', t1.c2, vt0.c0))<=((t1.c2, vt0.c0, vt0.c0))))IS NOT('0.9997553683645524')));
SELECT SUM(count) FROM (SELECT (((((((x'd908', t1.c2, vt0.c0))<=((t1.c2, vt0.c0, vt0.c0))))IS NOT('0.9997553683645524'))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((((x'd908', t1.c2, vt0.c0))<=((t1.c2, vt0.c0, vt0.c0))))IS NOT('0.9997553683645524')));
SELECT SUM(count) FROM (SELECT (((((((x'd908', t1.c2, vt0.c0))<=((t1.c2, vt0.c0, vt0.c0))))IS NOT('0.9997553683645524'))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((((x'd908', t1.c2, vt0.c0))<=((t1.c2, vt0.c0, vt0.c0))))IS NOT('0.9997553683645524')));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((0.3533633949353344)OR(((rt0.c0) IS FALSE))))OR(LOWER(rt0.c0)))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((((0.3533633949353344)OR(((rt0.c0) IS FALSE))))OR(LOWER(rt0.c0)))) IS TRUE)  as count FROM rt0, t1 ORDER BY x'');
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((0.3533633949353344)OR(((rt0.c0) IS FALSE))))OR(LOWER(rt0.c0)))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((((0.3533633949353344)OR(((rt0.c0) IS FALSE))))OR(LOWER(rt0.c0)))) IS TRUE)  as count FROM rt0, t1 ORDER BY x'');
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((0.3533633949353344)OR(((rt0.c0) IS FALSE))))OR(LOWER(rt0.c0)))) ORDER BY x'';
SELECT * FROM rt0 WHERE ((NOT (((NULL)=(rt0.c0))))) ORDER BY ((0x695f5823) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)==(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((0X695f5823) IS TRUE)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT (((NULL)=(rt0.c0))))) ORDER BY ((0x695f5823) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)==(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((0X695f5823) IS TRUE)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT (((NULL)=(rt0.c0))))) ORDER BY ((0x695f5823) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (x'9bc2dce7') ORDER BY CASE WHEN rt0.c1 COLLATE NOCASE THEN (rt0.c0 IN (2118718592)) END, 0.822237193105785  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'9bc2dce7') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 ORDER BY CASE WHEN rt0.c1 COLLATE NOCASE THEN (rt0.c0 IN (2118718592)) END, 0.822237193105785  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (x'9bc2dce7') ORDER BY CASE WHEN rt0.c1 COLLATE NOCASE THEN (rt0.c0 IN (2118718592)) END, 0.822237193105785  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'9bc2dce7') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 ORDER BY CASE WHEN rt0.c1 COLLATE NOCASE THEN (rt0.c0 IN (2118718592)) END, 0.822237193105785  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (x'9bc2dce7') ORDER BY CASE WHEN rt0.c1 COLLATE NOCASE THEN (rt0.c0 IN (2118718592)) END, 0.822237193105785  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)OR(((t1.c0)>(t1.c62)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)OR(((t1.c0)>(t1.c62))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)OR(((t1.c0)>(t1.c62)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)OR(((t1.c0)>(t1.c62))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)OR(((t1.c0)>(t1.c62)))));
SELECT ALL * FROM t1, rt0 WHERE ((((+ (t1.c0)))%((NOT (rt0.c1))))) ORDER BY (((t1.c62)AND('-269876758')) IN ((((rt0.c2)) NOT BETWEEN (('-1638341190')) AND ((t1.c2))), ((((((((t1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))OR(rt0.c0)))) DESC, ((((t1.c0)<=(rt0.c2)))*(CAST(rt0.c1 AS REAL)))  NULLS FIRST, ((CAST(t1.c62 AS NUMERIC)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t1.c0)))%((NOT (rt0.c1))))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((t1.c62)AND('-269876758')) IN ((((rt0.c2)) NOT BETWEEN (('-1638341190')) AND ((t1.c2))), ((((((((t1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))OR(rt0.c0)))) DESC, ((((t1.c0)<=(rt0.c2)))*(CAST(rt0.c1 AS REAL)))  NULLS FIRST, ((CAST(t1.c62 AS NUMERIC)) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM t1, rt0 WHERE ((((+ (t1.c0)))%((NOT (rt0.c1))))) ORDER BY (((t1.c62)AND('-269876758')) IN ((((rt0.c2)) NOT BETWEEN (('-1638341190')) AND ((t1.c2))), ((((((((t1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))OR(rt0.c0)))) DESC, ((((t1.c0)<=(rt0.c2)))*(CAST(rt0.c1 AS REAL)))  NULLS FIRST, ((CAST(t1.c62 AS NUMERIC)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t1.c0)))%((NOT (rt0.c1))))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((t1.c62)AND('-269876758')) IN ((((rt0.c2)) NOT BETWEEN (('-1638341190')) AND ((t1.c2))), ((((((((t1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))OR(rt0.c0)))) DESC, ((((t1.c0)<=(rt0.c2)))*(CAST(rt0.c1 AS REAL)))  NULLS FIRST, ((CAST(t1.c62 AS NUMERIC)) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM t1, rt0 WHERE ((((+ (t1.c0)))%((NOT (rt0.c1))))) ORDER BY (((t1.c62)AND('-269876758')) IN ((((rt0.c2)) NOT BETWEEN (('-1638341190')) AND ((t1.c2))), ((((((((t1.c0)AND(t1.c2)))OR(t1.c2)))OR(t1.c0)))OR(rt0.c0)))) DESC, ((((t1.c0)<=(rt0.c2)))*(CAST(rt0.c1 AS REAL)))  NULLS FIRST, ((CAST(t1.c62 AS NUMERIC)) IS FALSE) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (355677438) ORDER BY t1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((355677438) IS TRUE)  as count FROM t1 ORDER BY t1.c0 DESC);
SELECT COUNT(*) FROM t1 WHERE (355677438) ORDER BY t1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((355677438) IS TRUE)  as count FROM t1 ORDER BY t1.c0 DESC);
SELECT COUNT(*) FROM t1 WHERE (355677438) ORDER BY t1.c0 DESC;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN t1.c0 THEN t1.c62 END));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CASE WHEN t1.c0 THEN t1.c62 END)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN t1.c0 THEN t1.c62 END));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CASE WHEN t1.c0 THEN t1.c62 END)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN t1.c0 THEN t1.c62 END));
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (0.8396082696015227) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8396082696015227) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (0.8396082696015227) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8396082696015227) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (0.8396082696015227) ORDER BY x'' ASC;
SELECT * FROM t1, vt0, rt0 WHERE (((CASE WHEN t1.c0 THEN rt0.c0 END)>>(((((((((vt0.c0)OR(rt0.c1)))AND(t1.c0)))OR(t1.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c0 THEN rt0.c0 END)>>(((((((((vt0.c0)OR(rt0.c1)))AND(t1.c0)))OR(t1.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT * FROM t1, vt0, rt0 WHERE (((CASE WHEN t1.c0 THEN rt0.c0 END)>>(((((((((vt0.c0)OR(rt0.c1)))AND(t1.c0)))OR(t1.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c0 THEN rt0.c0 END)>>(((((((((vt0.c0)OR(rt0.c1)))AND(t1.c0)))OR(t1.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT * FROM t1, vt0, rt0 WHERE (((CASE WHEN t1.c0 THEN rt0.c0 END)>>(((((((((vt0.c0)OR(rt0.c1)))AND(t1.c0)))OR(t1.c0)))OR(rt0.c2)))));
SELECT COUNT(*) FROM t1 WHERE (((t1.c2) BETWEEN ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c2)))) AND (((((t1.c0)OR(t1.c2)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t1.c2) BETWEEN ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c2)))) AND (((((t1.c0)OR(t1.c2)))OR(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c2) BETWEEN ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c2)))) AND (((((t1.c0)OR(t1.c2)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t1.c2) BETWEEN ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c2)))) AND (((((t1.c0)OR(t1.c2)))OR(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c2) BETWEEN ((((t1.c0)) BETWEEN ((t1.c2)) AND ((t1.c2)))) AND (((((t1.c0)OR(t1.c2)))OR(t1.c0)))));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (~ (0.9319094369354601)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (~ (0.9319094369354601)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (~ (0.9319094369354601)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (~ (0.9319094369354601)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (~ (0.9319094369354601)) ELSE (vt0.c0 IN (vt0.c0, vt0.c0)) END) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (TYPEOF(rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((TYPEOF(rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TYPEOF(rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((TYPEOF(rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TYPEOF(rt0.c2) COLLATE BINARY);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((rt0.c2)IS(rt0.c1)) IN ()) WHERE (((((rt0.c2)&(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c2)IS(rt0.c1)) IN ()));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((rt0.c2)IS(rt0.c1)) IN ()) WHERE (((((rt0.c2)&(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c2)IS(rt0.c1)) IN ()));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((rt0.c2)IS(rt0.c1)) IN ()) WHERE (((((rt0.c2)&(rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((TOTAL_CHANGES())<=((((rt0.c0))>(('}QHG'))))) WHERE (rtreenode(rt0.c2 COLLATE BINARY, TRIM(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(rt0.c2 COLLATE BINARY, TRIM(rt0.c1))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((TOTAL_CHANGES())<=((((rt0.c0))>(('}QHG'))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((TOTAL_CHANGES())<=((((rt0.c0))>(('}QHG'))))) WHERE (rtreenode(rt0.c2 COLLATE BINARY, TRIM(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(rt0.c2 COLLATE BINARY, TRIM(rt0.c1))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((TOTAL_CHANGES())<=((((rt0.c0))>(('}QHG'))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((TOTAL_CHANGES())<=((((rt0.c0))>(('}QHG'))))) WHERE (rtreenode(rt0.c2 COLLATE BINARY, TRIM(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))IS NOT(0.9705318141695224))) ORDER BY CASE WHEN LIKELY('541080597') THEN ((x'')>=(vt0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c2 AS INTEGER) WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (+ (rt0.c1)) ELSE ((rt0.c1) NOTNULL) END, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<<(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))IS NOT(0.9705318141695224))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN LIKELY('541080597') THEN ((x'')>=(vt0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c2 AS INTEGER) WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (+ (rt0.c1)) ELSE ((rt0.c1) NOTNULL) END, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<<(rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))IS NOT(0.9705318141695224))) ORDER BY CASE WHEN LIKELY('541080597') THEN ((x'')>=(vt0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c2 AS INTEGER) WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (+ (rt0.c1)) ELSE ((rt0.c1) NOTNULL) END, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<<(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))IS NOT(0.9705318141695224))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN LIKELY('541080597') THEN ((x'')>=(vt0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c2 AS INTEGER) WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (+ (rt0.c1)) ELSE ((rt0.c1) NOTNULL) END, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<<(rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))IS NOT(0.9705318141695224))) ORDER BY CASE WHEN LIKELY('541080597') THEN ((x'')>=(vt0.c0)) WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c2 AS INTEGER) WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (+ (rt0.c1)) ELSE ((rt0.c1) NOTNULL) END, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<<(rt0.c0)) DESC;
SELECT ALL * FROM rt0 WHERE ('') ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))GLOB(((((((((x'')OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))), ((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c0)=(rt0.c2))) AND (load_extension(rt0.c1)))  NULLS FIRST, (+ (((rt0.c2)>(rt0.c0)))) ASC  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))GLOB(((((((((x'')OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))), ((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c0)==(rt0.c2))) AND (load_extension(rt0.c1)))  NULLS FIRST, (+ (((rt0.c2)>(rt0.c0)))) ASC  NULLS LAST, NULL);
SELECT ALL * FROM rt0 WHERE ('') ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))GLOB(((((((((x'')OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))), ((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c0)=(rt0.c2))) AND (load_extension(rt0.c1)))  NULLS FIRST, (+ (((rt0.c2)>(rt0.c0)))) ASC  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))GLOB(((((((((x'')OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))), ((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c0)==(rt0.c2))) AND (load_extension(rt0.c1)))  NULLS FIRST, (+ (((rt0.c2)>(rt0.c0)))) ASC  NULLS LAST, NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.8800122356355097);
SELECT SUM(count) FROM (SELECT ALL ((0.8800122356355097) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.8800122356355097);
SELECT SUM(count) FROM (SELECT ALL ((0.8800122356355097) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.8800122356355097);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY rt0.c2, SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, SQLITE_SOURCE_ID() DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY rt0.c2, SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, SQLITE_SOURCE_ID() DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY rt0.c2, SQLITE_SOURCE_ID() DESC  NULLS LAST;
