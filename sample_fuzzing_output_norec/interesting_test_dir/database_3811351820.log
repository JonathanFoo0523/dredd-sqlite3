-- Time: 2024/06/11 03:00:38
-- Database: database20
-- Database version: 3.40.0
-- seed value: 3811351820
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(''); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x'4bdc', 0.8737623607450707); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL, 0.043295715318780514); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 2ms;
ANALYZE; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(397618705) WHERE vt0.c0; -- 3ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INTEGER , +c4 REAL , +c5 INTEGER ); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''), (NULL), (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c0, c4, c1) VALUES (3.97618705E8, NULL, '-1688204079', 0.4320612270507017); -- 0ms;
UPDATE rt0 SET (c1)=(NULL) WHERE ((((rt0.c4)AND(COALESCE(DISTINCT rt0.c4, rt0.c0))))AND(rt0.c1 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (x'e2ab', x''), ('-1688204079', 0.9060733362794748), ('397618705', '710411419'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'') WHERE '0.9060733362794748' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3) VALUES ('', NULL); -- 0ms;
UPDATE OR ABORT vt0 SET c0=x''; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT ((((CAST(rt0.c5 AS INTEGER))AND(((NULL) IS TRUE))))OR(COUNT(*))) FROM rt0, vt0 ORDER BY (rt0.c1 IN (vt0.c1, rt0.c2)) COLLATE RTRIM DESC  NULLS LAST, ''  NULLS LAST; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c1, c4, c5) VALUES (0.807881911563946, x'', 0.20754115710054344, x''); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=('9A ') WHERE ((((vt0.c1)>=(vt0.c0)))IS(x'' COLLATE NOCASE)); -- 0ms;
PRAGMA threads = -5256855263993388846; -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c3, c5, c2, c4) VALUES (7.10411419E8, -1.688204079E9, '! ''Y_c1(', x'', '', '0.20754115710054344'); -- 1ms;
PRAGMA temp.reverse_unordered_selects = false; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=x'e243'; -- 2ms;
END TRANSACTION; -- 0ms;
ANALYZE temp; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c1, c0, c0)=('! ''Y_c1(', '710411419', x''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (397618705, 0.8794981813519936); -- 1ms;
ANALYZE; -- 5ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('397618705', 0.7452890404222424), ('908312494', '-1688204079'), (0.9070054845112546, 0X3623bfae), ('9A ', 9.08312494E8), (')~Oa70_}#', NULL); -- 1ms;
ANALYZE vt0; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA integrity_check; -- 0ms;
DROP TABLE IF EXISTS vt0; -- 0ms;
DROP VIEW v0; -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c4, c2, c0, c3) VALUES (-1818106335, NULL, NULL, 0.7871128002413252, ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3) VALUES (x'', 0.020331492718338007), (-767957591, '9A '), (NULL, 0.8183803887173965); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR FAIL INTO vt0(c1) VALUES (NULL); -- 1ms;
DELETE FROM vt0; -- 2ms;
UPDATE OR IGNORE vt0 SET c1=0.624748479634752 WHERE (((vt0.c0)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)))) AND (((vt0.c1 IN (vt0.c1, vt0.c0))))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 1ms;
PRAGMA temp.recursive_triggers; -- 0ms;
UPDATE rt0 SET (c2)=(0.7871128002413252); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(-678859130) WHERE ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END)>(CASE WHEN rt0.c1 THEN rt0.c4 END)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1635199841); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44895'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c5)=('9a ') WHERE -6.7885913E8; -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33553'); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE rt0 SET (c4, c3, c2)=(0.32532419955376246, 0.41000773203795804, 'қ9'); -- 1ms;
UPDATE OR IGNORE rt0 SET c3=45182189 WHERE (((((((rt0.c5, rt0.c5, rt0.c5))<=((rt0.c2, rt0.c1, rt0.c2))))OR((((rt0.c4))!=((rt0.c3))))))AND(0.12943306767500107)); -- 0ms;
INSERT OR REPLACE INTO rt0(c3) VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (''); -- 4ms;
UPDATE OR IGNORE vt0 SET c0=0.254389018076253 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((1596722316))))<>(json_insert(vt0.c1, vt0.c1, vt0.c0))); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c1, c5, c0) VALUES (x'', NULL, 977794661, x'777d', '354099729'), (0.7871128002413252, 0.30302487442565607, '<x', x'3099', '908312494'), (x'', 'r0ItI4', 0.7452890404222424, 1, CASE (((((((('G?')AND(x'')))AND('-1818106335')))AND(x'')))AND('DXZo踭'))  WHEN (('977794661')LIKE(3.54099729E8)) THEN NULL END), (NULL, 0xffffffffa59fc509, NULL, -1.516255991E9, x'7bee'), ('K', NULL, '-1256806952', '-678859130', NULL); -- 8ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.23447732356144446); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.2284424224432453); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES (0.1481855486207705, NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(0.5013148234060201) WHERE CASE WHEN ((rt0.c1)GLOB(rt0.c0)) THEN RTRIM(rt0.c4) WHEN (((rt0.c0, rt0.c3, rt0.c3))!=((rt0.c3, rt0.c2, rt0.c0))) THEN INSTR(rt0.c4, rt0.c5) WHEN 'now' THEN ((rt0.c2) NOT NULL) WHEN ((rt0.c2) NOT NULL) THEN rt0.c2 WHEN rt0.c2 THEN (('{z') BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((rt0.c0)>>(rt0.c4)) END; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.624748479634752) WHERE (((rt0.c1 IN ())) NOTNULL); -- 1ms;
REINDEX; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('' AS INTEGER))AND(((((x'5974')AND(x'')))OR('2_bj9}J')))))OR((NOT (x'')))))AND(-1292229727 COLLATE RTRIM)))OR(LTRIM(x''))); -- 0ms;
UPDATE vt0 SET c0='', c0=x'9478da58' WHERE TRIM((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))); -- 0ms;
UPDATE OR REPLACE rt0 SET c0='~LVdXC''|' WHERE NULL; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31595'); -- 1ms;
PRAGMA temp.application_id = 5218881142328888668; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0, c4, c3) VALUES (x'521d', 0.2522561669434751, x'6ddf', NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c3, c1) VALUES (NULL, 0.2320237427776467, ''); -- 0ms;
UPDATE OR IGNORE rt0 SET c5=0.3252796351255407, c3=0.13752362858700595; -- 1ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 5ms;
ANALYZE; -- 10ms;
REINDEX; -- 0ms;
ANALYZE; -- 10ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, rt0 WHERE ((((~ (rt0.c1)))>=('')));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))>=(''))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((~ (rt0.c1)))>=('')));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))>=(''))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((~ (rt0.c1)))>=('')));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c5)) NOT BETWEEN (((('1z''y')=(rt0.c0)))) AND ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))))) ORDER BY CASE ((0.019568224059294925) IS TRUE)  WHEN json_array_length(rt0.c5) THEN ((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c4)) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5)) NOT BETWEEN (((('1z''y')=(rt0.c0)))) AND ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((0.019568224059294925) IS TRUE)  WHEN json_array_length(rt0.c5) THEN ((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c4)) END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c5)) NOT BETWEEN (((('1z''y')=(rt0.c0)))) AND ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))))) ORDER BY CASE ((0.019568224059294925) IS TRUE)  WHEN json_array_length(rt0.c5) THEN ((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c4)) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5)) NOT BETWEEN (((('1z''y')=(rt0.c0)))) AND ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((0.019568224059294925) IS TRUE)  WHEN json_array_length(rt0.c5) THEN ((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c4)) END);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN 0.9501203154258432 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c1 END)%(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN vt0.c0 THEN 0.9501203154258432 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c1 END)%(rt0.c3))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN 0.9501203154258432 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c1 END)%(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN vt0.c0 THEN 0.9501203154258432 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c1 END)%(rt0.c3))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN 0.9501203154258432 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c1 END)%(rt0.c3)));
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON (+ (rt0.c4)) COLLATE RTRIM WHERE (CAST((rt0.c3 IN ()) AS TEXT)) ORDER BY ((((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c2))) NOTNULL) DESC, vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c3 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED FULL OUTER JOIN v0 ON (+ (rt0.c4)) COLLATE RTRIM ORDER BY ((((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c2))) NOTNULL) DESC, vt0.c1 DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON (+ (rt0.c4)) COLLATE RTRIM WHERE (CAST((rt0.c3 IN ()) AS TEXT)) ORDER BY ((((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c2))) NOTNULL) DESC, vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c3 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED FULL OUTER JOIN v0 ON (+ (rt0.c4)) COLLATE RTRIM ORDER BY ((((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c2))) NOTNULL) DESC, vt0.c1 DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON (+ (rt0.c4)) COLLATE RTRIM WHERE (CAST((rt0.c3 IN ()) AS TEXT)) ORDER BY ((((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c2))) NOTNULL) DESC, vt0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY 0.8061859190586609 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY 0.8061859190586609 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY 0.8061859190586609 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY 0.8061859190586609 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY 0.8061859190586609 DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE ((((((- (vt0.c1)))AND((NOT (0.12943306767500107)))))OR(vt0.c1 COLLATE BINARY))) ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c1)))AND((NOT (0.12943306767500107)))))OR(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))) IN ()));
SELECT ALL * FROM v0, vt0 WHERE ((((((- (vt0.c1)))AND((NOT (0.12943306767500107)))))OR(vt0.c1 COLLATE BINARY))) ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c1)))AND((NOT (0.12943306767500107)))))OR(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))) IN ()));
SELECT ALL * FROM v0, vt0 WHERE ((((((- (vt0.c1)))AND((NOT (0.12943306767500107)))))OR(vt0.c1 COLLATE BINARY))) ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))) IN ());
SELECT ALL COUNT(*) FROM rt0 WHERE (',4+') ORDER BY CAST(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 END AS REAL) DESC, (- (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((',4+') IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 END AS REAL) DESC, (- (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (',4+') ORDER BY CAST(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 END AS REAL) DESC, (- (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((',4+') IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 END AS REAL) DESC, (- (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (',4+') ORDER BY CAST(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 END AS REAL) DESC, (- (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END))  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (NULL);
SELECT ALL * FROM v0, vt0, rt0 WHERE (rt0.c4) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (rt0.c4) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (rt0.c4) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN v0.c0 END)+(((rt0.c3) BETWEEN (vt0.c0) AND (x'')))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN v0.c0 END)+(((rt0.c3) BETWEEN (vt0.c0) AND (x''))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN v0.c0 END)+(((rt0.c3) BETWEEN (vt0.c0) AND (x'')))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN v0.c0 END)+(((rt0.c3) BETWEEN (vt0.c0) AND (x''))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN v0.c0 END)+(((rt0.c3) BETWEEN (vt0.c0) AND (x'')))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON CAST((rt0.c3 IN ()) AS BLOB) RIGHT OUTER JOIN rt0 ON ((((((v0.c0))>((vt0.c1)))))<=((((rt0.c1)-(rt0.c5))))) WHERE (ABS(DISTINCT CAST(v0.c0 AS INTEGER))) ORDER BY 0.8183803887173965 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST((rt0.c3 IN ()) AS BLOB) RIGHT OUTER JOIN rt0 ON ((((((v0.c0))>((vt0.c1)))))<=((((rt0.c1)-(rt0.c5))))) ORDER BY 0.8183803887173965 DESC  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON CAST((rt0.c3 IN ()) AS BLOB) RIGHT OUTER JOIN rt0 ON ((((((v0.c0))>((vt0.c1)))))<=((((rt0.c1)-(rt0.c5))))) WHERE (ABS(DISTINCT CAST(v0.c0 AS INTEGER))) ORDER BY 0.8183803887173965 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST((rt0.c3 IN ()) AS BLOB) RIGHT OUTER JOIN rt0 ON ((((((v0.c0))>((vt0.c1)))))<=((((rt0.c1)-(rt0.c5))))) ORDER BY 0.8183803887173965 DESC  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON CAST((rt0.c3 IN ()) AS BLOB) RIGHT OUTER JOIN rt0 ON ((((((v0.c0))>((vt0.c1)))))<=((((rt0.c1)-(rt0.c5))))) WHERE (ABS(DISTINCT CAST(v0.c0 AS INTEGER))) ORDER BY 0.8183803887173965 DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((((((((v0.c0)OR(((v0.c0) IS FALSE))))OR(CAST('V!]Zz' AS NUMERIC))))OR((v0.c0 IN ()))))AND((((1080034006, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c0) AND (NULL))))  NULLS FIRST, GLOB(((v0.c0) BETWEEN (v0.c0) AND (x'')), CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(((v0.c0) IS FALSE))))OR(CAST('V!]Zz' AS NUMERIC))))OR((v0.c0 IN ()))))AND((((1080034006, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c0) AND (NULL))))  NULLS FIRST, GLOB(((v0.c0) BETWEEN (v0.c0) AND (x'')), CAST(v0.c0 AS INTEGER)));
SELECT * FROM v0 WHERE (((((((((v0.c0)OR(((v0.c0) IS FALSE))))OR(CAST('V!]Zz' AS NUMERIC))))OR((v0.c0 IN ()))))AND((((1080034006, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c0) AND (NULL))))  NULLS FIRST, GLOB(((v0.c0) BETWEEN (v0.c0) AND (x'')), CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(((v0.c0) IS FALSE))))OR(CAST('V!]Zz' AS NUMERIC))))OR((v0.c0 IN ()))))AND((((1080034006, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c0) AND (NULL))))  NULLS FIRST, GLOB(((v0.c0) BETWEEN (v0.c0) AND (x'')), CAST(v0.c0 AS INTEGER)));
SELECT * FROM v0 WHERE (((((((((v0.c0)OR(((v0.c0) IS FALSE))))OR(CAST('V!]Zz' AS NUMERIC))))OR((v0.c0 IN ()))))AND((((1080034006, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c0) AND (NULL))))  NULLS FIRST, GLOB(((v0.c0) BETWEEN (v0.c0) AND (x'')), CAST(v0.c0 AS INTEGER));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c5))) BETWEEN (((rt0.c3)=(v0.c0))) AND ((+ (rt0.c1)))) WHERE ((((((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)), (~ (0x28bf4b1a)), NULLIF(rt0.c4, rt0.c2)))>=(((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), CAST(rt0.c1 AS NUMERIC), rt0.c2 COLLATE NOCASE)))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)), (~ (0x28bf4b1a)), NULLIF(rt0.c4, rt0.c2)))>=(((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), CAST(rt0.c1 AS NUMERIC), rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c5))) BETWEEN (((rt0.c3)==(v0.c0))) AND ((+ (rt0.c1)))) ORDER BY rt0.c3);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c5))) BETWEEN (((rt0.c3)=(v0.c0))) AND ((+ (rt0.c1)))) WHERE ((((((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)), (~ (0x28bf4b1a)), NULLIF(rt0.c4, rt0.c2)))>=(((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), CAST(rt0.c1 AS NUMERIC), rt0.c2 COLLATE NOCASE)))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)), (~ (0x28bf4b1a)), NULLIF(rt0.c4, rt0.c2)))>=(((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), CAST(rt0.c1 AS NUMERIC), rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c5))) BETWEEN (((rt0.c3)==(v0.c0))) AND ((+ (rt0.c1)))) ORDER BY rt0.c3);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c5))) BETWEEN (((rt0.c3)=(v0.c0))) AND ((+ (rt0.c1)))) WHERE ((((((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)), (~ (0x28bf4b1a)), NULLIF(rt0.c4, rt0.c2)))>=(((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), CAST(rt0.c1 AS NUMERIC), rt0.c2 COLLATE NOCASE)))) ORDER BY rt0.c3;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((+ (((v0.c0) BETWEEN (rt0.c5) AND (rt0.c3))))) ORDER BY (((((~ (vt0.c0)))OR((((rt0.c5, vt0.c1, vt0.c1))<=((v0.c0, rt0.c4, rt0.c4))))))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) BETWEEN (rt0.c5) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((((~ (vt0.c0)))OR((((rt0.c5, vt0.c1, vt0.c1))<=((v0.c0, rt0.c4, rt0.c4))))))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)) DESC);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((+ (((v0.c0) BETWEEN (rt0.c5) AND (rt0.c3))))) ORDER BY (((((~ (vt0.c0)))OR((((rt0.c5, vt0.c1, vt0.c1))<=((v0.c0, rt0.c4, rt0.c4))))))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) BETWEEN (rt0.c5) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((((~ (vt0.c0)))OR((((rt0.c5, vt0.c1, vt0.c1))<=((v0.c0, rt0.c4, rt0.c4))))))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)) DESC);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((+ (((v0.c0) BETWEEN (rt0.c5) AND (rt0.c3))))) ORDER BY (((((~ (vt0.c0)))OR((((rt0.c5, vt0.c1, vt0.c1))<=((v0.c0, rt0.c4, rt0.c4))))))AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)) DESC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (0.8794981813519936);
SELECT SUM(count) FROM (SELECT ALL ((0.8794981813519936) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (0.8794981813519936);
SELECT SUM(count) FROM (SELECT ALL ((0.8794981813519936) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (0.8794981813519936);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)) BETWEEN ((0.2284424224432453)) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((0.2284424224432453)) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)) BETWEEN ((0.2284424224432453)) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((0.2284424224432453)) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)) BETWEEN ((0.2284424224432453)) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))));
SELECT ALL * FROM v0, vt0 WHERE (((((+ (v0.c0))))>=((((((v0.c0)OR(vt0.c0)))OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (v0.c0))))>=((((((v0.c0)OR(vt0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((+ (v0.c0))))>=((((((v0.c0)OR(vt0.c0)))OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (v0.c0))))>=((((((v0.c0)OR(vt0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((+ (v0.c0))))>=((((((v0.c0)OR(vt0.c0)))OR(vt0.c1))))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT ALL * FROM rt0 WHERE ((~ ((((rt0.c1))<>((rt0.c3)))))) ORDER BY (((rt0.c1) ISNULL) IN (((x'') BETWEEN (rt0.c1) AND (rt0.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c1))<>((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) ISNULL) IN (((x'') BETWEEN (rt0.c1) AND (rt0.c4)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ ((((rt0.c1))<>((rt0.c3)))))) ORDER BY (((rt0.c1) ISNULL) IN (((x'') BETWEEN (rt0.c1) AND (rt0.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c1))<>((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) ISNULL) IN (((x'') BETWEEN (rt0.c1) AND (rt0.c4)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ ((((rt0.c1))<>((rt0.c3)))))) ORDER BY (((rt0.c1) ISNULL) IN (((x'') BETWEEN (rt0.c1) AND (rt0.c4)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5)))OR(CASE WHEN rt0.c0 THEN rt0.c3 ELSE 0.32532419955376246 END))) ORDER BY CAST((~ (rt0.c2)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5)))OR(CASE WHEN rt0.c0 THEN rt0.c3 ELSE 0.32532419955376246 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST((~ (rt0.c2)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5)))OR(CASE WHEN rt0.c0 THEN rt0.c3 ELSE 0.32532419955376246 END))) ORDER BY CAST((~ (rt0.c2)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5)))OR(CASE WHEN rt0.c0 THEN rt0.c3 ELSE 0.32532419955376246 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST((~ (rt0.c2)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5)))OR(CASE WHEN rt0.c0 THEN rt0.c3 ELSE 0.32532419955376246 END))) ORDER BY CAST((~ (rt0.c2)) AS BLOB) DESC;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CAST(rt0.c0 AS INTEGER))))) ORDER BY ((x'')<<(((rt0.c4)>=(rt0.c0)))) ASC  NULLS FIRST, (- (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CAST(rt0.c0 AS INTEGER))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((x'')<<(((rt0.c4)>=(rt0.c0)))) ASC  NULLS FIRST, (- (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CAST(rt0.c0 AS INTEGER))))) ORDER BY ((x'')<<(((rt0.c4)>=(rt0.c0)))) ASC  NULLS FIRST, (- (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CAST(rt0.c0 AS INTEGER))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((x'')<<(((rt0.c4)>=(rt0.c0)))) ASC  NULLS FIRST, (- (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CAST(rt0.c0 AS INTEGER))))) ORDER BY ((x'')<<(((rt0.c4)>=(rt0.c0)))) ASC  NULLS FIRST, (- (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))) NOT NULL) WHERE (((((vt0.c0)GLOB(rt0.c1)))/(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(rt0.c1)))/(rt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))) NOT NULL) WHERE (((((vt0.c0)GLOB(rt0.c1)))/(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(rt0.c1)))/(rt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))) NOT NULL) WHERE (((((vt0.c0)GLOB(rt0.c1)))/(rt0.c0)));
SELECT * FROM rt0 WHERE ((+ (CAST(rt0.c1 AS BLOB)))) ORDER BY CAST(NULL AS REAL) ASC, rt0.c4;
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULL AS REAL) ASC, rt0.c4);
SELECT * FROM rt0 WHERE ((+ (CAST(rt0.c1 AS BLOB)))) ORDER BY CAST(NULL AS REAL) ASC, rt0.c4;
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULL AS REAL) ASC, rt0.c4);
SELECT * FROM rt0 WHERE ((+ (CAST(rt0.c1 AS BLOB)))) ORDER BY CAST(NULL AS REAL) ASC, rt0.c4;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN CAST(vt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN CAST(vt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN CAST(vt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN CAST(vt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN CAST(vt0.c1 AS REAL) END);
SELECT ALL * FROM v0 WHERE (((MIN(v0.c0, v0.c0, v0.c0, v0.c0)) IS TRUE)) ORDER BY CAST((+ (v0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((MIN(v0.c0, v0.c0, v0.c0, v0.c0)) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CAST((+ (v0.c0)) AS INTEGER) DESC);
SELECT ALL * FROM v0 WHERE (((MIN(v0.c0, v0.c0, v0.c0, v0.c0)) IS TRUE)) ORDER BY CAST((+ (v0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((MIN(v0.c0, v0.c0, v0.c0, v0.c0)) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CAST((+ (v0.c0)) AS INTEGER) DESC);
SELECT ALL * FROM v0 WHERE (((MIN(v0.c0, v0.c0, v0.c0, v0.c0)) IS TRUE)) ORDER BY CAST((+ (v0.c0)) AS INTEGER) DESC;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((rt0.c2)+(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)+(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON NULL);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((rt0.c2)+(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)+(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON NULL);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON NULL WHERE (((rt0.c2)+(rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c3)) BETWEEN ((0.5868368437221584)) AND (((rt0.c5 IN (rt0.c3)))))) ORDER BY ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN (((rt0.c2)<<(v0.c0))) AND (CAST(rt0.c5 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((0.5868368437221584)) AND (((rt0.c5 IN (rt0.c3)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN (((rt0.c2)<<(v0.c0))) AND (CAST(rt0.c5 AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c3)) BETWEEN ((0.5868368437221584)) AND (((rt0.c5 IN (rt0.c3)))))) ORDER BY ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN (((rt0.c2)<<(v0.c0))) AND (CAST(rt0.c5 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((0.5868368437221584)) AND (((rt0.c5 IN (rt0.c3)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN (((rt0.c2)<<(v0.c0))) AND (CAST(rt0.c5 AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c3)) BETWEEN ((0.5868368437221584)) AND (((rt0.c5 IN (rt0.c3)))))) ORDER BY ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN (((rt0.c2)<<(v0.c0))) AND (CAST(rt0.c5 AS REAL)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c4)&(rt0.c2))) IS TRUE) CROSS JOIN v0 ON (vt0.c1 IN (rt0.c1)) COLLATE RTRIM WHERE ((((((x'dac8')<(rt0.c4)), CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN v0.c0 END, ((rt0.c3) BETWEEN (rt0.c2) AND (NULL))))==((CASE WHEN 0.5720170945163301 THEN vt0.c0 ELSE rt0.c4 END, (((rt0.c2)) BETWEEN (('-1818106335')) AND ((rt0.c5))), ((x'') IS FALSE))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((((x'dac8')<(rt0.c4)), CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN v0.c0 END, ((rt0.c3) BETWEEN (rt0.c2) AND (NULL))))==((CASE WHEN 0.5720170945163301 THEN vt0.c0 ELSE rt0.c4 END, (((rt0.c2)) BETWEEN (('-1818106335')) AND ((rt0.c5))), ((x'') IS FALSE))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c4)&(rt0.c2))) IS TRUE) CROSS JOIN v0 ON (vt0.c1 IN (rt0.c1)) COLLATE RTRIM ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c4)&(rt0.c2))) IS TRUE) CROSS JOIN v0 ON (vt0.c1 IN (rt0.c1)) COLLATE RTRIM WHERE ((((((x'dac8')<(rt0.c4)), CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN v0.c0 END, ((rt0.c3) BETWEEN (rt0.c2) AND (NULL))))==((CASE WHEN 0.5720170945163301 THEN vt0.c0 ELSE rt0.c4 END, (((rt0.c2)) BETWEEN (('-1818106335')) AND ((rt0.c5))), ((x'') IS FALSE))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((((x'dac8')<(rt0.c4)), CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN v0.c0 END, ((rt0.c3) BETWEEN (rt0.c2) AND (NULL))))==((CASE WHEN 0.5720170945163301 THEN vt0.c0 ELSE rt0.c4 END, (((rt0.c2)) BETWEEN (('-1818106335')) AND ((rt0.c5))), ((x'') IS FALSE))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c4)&(rt0.c2))) IS TRUE) CROSS JOIN v0 ON (vt0.c1 IN (rt0.c1)) COLLATE RTRIM ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c4)&(rt0.c2))) IS TRUE) CROSS JOIN v0 ON (vt0.c1 IN (rt0.c1)) COLLATE RTRIM WHERE ((((((x'dac8')<(rt0.c4)), CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN v0.c0 END, ((rt0.c3) BETWEEN (rt0.c2) AND (NULL))))==((CASE WHEN 0.5720170945163301 THEN vt0.c0 ELSE rt0.c4 END, (((rt0.c2)) BETWEEN (('-1818106335')) AND ((rt0.c5))), ((x'') IS FALSE))))) ORDER BY vt0.c1 ASC;
SELECT * FROM rt0, vt0 WHERE ('') ORDER BY UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN -1.7976931348623157E308 END) ASC, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))AND(NULL)))OR(rt0.c0))) BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c2)))), 'r02Y踭Jo';
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, vt0 ORDER BY UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN -1.7976931348623157E308 END) ASC, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))AND(NULL)))OR(rt0.c0))) BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c2)))), 'r02Y踭Jo');
SELECT * FROM rt0, vt0 WHERE ('') ORDER BY UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN -1.7976931348623157E308 END) ASC, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))AND(NULL)))OR(rt0.c0))) BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c2)))), 'r02Y踭Jo';
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, vt0 ORDER BY UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN -1.7976931348623157E308 END) ASC, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))AND(NULL)))OR(rt0.c0))) BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c2)))), 'r02Y踭Jo');
SELECT * FROM rt0, vt0 WHERE ('') ORDER BY UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN -1.7976931348623157E308 END) ASC, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))AND(NULL)))OR(rt0.c0))) BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c2)))), 'r02Y踭Jo';
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((CASE x'bacc'  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END IN (NULL))) ORDER BY (~ (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 WHEN v0.c0 THEN x'' ELSE v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE x'bacc'  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END IN (NULL))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (~ (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 WHEN v0.c0 THEN x'' ELSE v0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((CASE x'bacc'  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END IN (NULL))) ORDER BY (~ (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 WHEN v0.c0 THEN x'' ELSE v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE x'bacc'  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END IN (NULL))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (~ (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 WHEN v0.c0 THEN x'' ELSE v0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((CASE x'bacc'  WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END IN (NULL))) ORDER BY (~ (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 WHEN v0.c0 THEN x'' ELSE v0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)/((((v0.c0))>=((rt0.c2))))) WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY rt0.c2  NULLS LAST, ((vt0.c1 COLLATE NOCASE) NOT NULL), DATE(rt0.c5, NULL, rt0.c1, rt0.c2, rt0.c2) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)/((((v0.c0))>=((rt0.c2))))) ORDER BY rt0.c2  NULLS LAST, ((vt0.c1 COLLATE NOCASE) NOT NULL), DATE(rt0.c5, NULL, rt0.c1, rt0.c2, rt0.c2) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)/((((v0.c0))>=((rt0.c2))))) WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY rt0.c2  NULLS LAST, ((vt0.c1 COLLATE NOCASE) NOT NULL), DATE(rt0.c5, NULL, rt0.c1, rt0.c2, rt0.c2) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)/((((v0.c0))>=((rt0.c2))))) ORDER BY rt0.c2  NULLS LAST, ((vt0.c1 COLLATE NOCASE) NOT NULL), DATE(rt0.c5, NULL, rt0.c1, rt0.c2, rt0.c2) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON ((rt0.c1)/((((v0.c0))>=((rt0.c2))))) WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY rt0.c2  NULLS LAST, ((vt0.c1 COLLATE NOCASE) NOT NULL), DATE(rt0.c5, NULL, rt0.c1, rt0.c2, rt0.c2) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN (- (rt0.c5)) ELSE CAST(NULL AS NUMERIC) END) ORDER BY ((((rt0.c5)=(rt0.c3))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN (- (rt0.c5)) ELSE CAST(NULL AS NUMERIC) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5)=(rt0.c3))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN (- (rt0.c5)) ELSE CAST(NULL AS NUMERIC) END) ORDER BY ((((rt0.c5)=(rt0.c3))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN (- (rt0.c5)) ELSE CAST(NULL AS NUMERIC) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5)=(rt0.c3))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN (- (rt0.c5)) ELSE CAST(NULL AS NUMERIC) END) ORDER BY ((((rt0.c5)=(rt0.c3))) ISNULL)  NULLS LAST;
SELECT * FROM vt0, v0, rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (rt0.c5);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) ORDER BY ((CAST(vt0.c1 AS BLOB)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CAST(vt0.c1 AS BLOB)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) ORDER BY ((CAST(vt0.c1 AS BLOB)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CAST(vt0.c1 AS BLOB)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) ORDER BY ((CAST(vt0.c1 AS BLOB)) IS TRUE) DESC;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((+ (CAST(rt0.c1 AS BLOB)))) ORDER BY MAX(CAST(rt0.c5 AS TEXT), ((rt0.c5) NOT BETWEEN (v0.c0) AND (rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY MAX(CAST(rt0.c5 AS TEXT), ((rt0.c5) NOT BETWEEN (v0.c0) AND (rt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((+ (CAST(rt0.c1 AS BLOB)))) ORDER BY MAX(CAST(rt0.c5 AS TEXT), ((rt0.c5) NOT BETWEEN (v0.c0) AND (rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY MAX(CAST(rt0.c5 AS TEXT), ((rt0.c5) NOT BETWEEN (v0.c0) AND (rt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((+ (CAST(rt0.c1 AS BLOB)))) ORDER BY MAX(CAST(rt0.c5 AS TEXT), ((rt0.c5) NOT BETWEEN (v0.c0) AND (rt0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ())) ORDER BY ((((((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))OR((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))))AND(CAST(0.38584579589792223 AS REAL))) ASC, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))OR((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))))AND(CAST(0.38584579589792223 AS REAL))) ASC, vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ())) ORDER BY ((((((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))OR((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))))AND(CAST(0.38584579589792223 AS REAL))) ASC, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))OR((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))))AND(CAST(0.38584579589792223 AS REAL))) ASC, vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ())) ORDER BY ((((((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))OR((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))))AND(CAST(0.38584579589792223 AS REAL))) ASC, vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)||(vt0.c0)))) AND (((~ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)||(vt0.c0)))) AND (((~ (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)||(vt0.c0)))) AND (((~ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)||(vt0.c0)))) AND (((~ (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)||(vt0.c0)))) AND (((~ (vt0.c1))))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c5))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c5))) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c5))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c5))) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c4)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c5))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (((vt0.c1)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)<(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (((vt0.c1)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)<(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (((vt0.c1)<(v0.c0)))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c4)>(rt0.c1))) AND (((rt0.c3) ISNULL)))) ORDER BY (rt0.c1 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c4)>(rt0.c1))) AND (((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (rt0.c1 IN ()) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c4)>(rt0.c1))) AND (((rt0.c3) ISNULL)))) ORDER BY (rt0.c1 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c4)>(rt0.c1))) AND (((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (rt0.c1 IN ()) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c4)>(rt0.c1))) AND (((rt0.c3) ISNULL)))) ORDER BY (rt0.c1 IN ()) COLLATE RTRIM ASC;
SELECT ALL * FROM v0, rt0 WHERE ((((SUBSTR(rt0.c0, rt0.c2), (((rt0.c4))<=((rt0.c0))), CAST(rt0.c3 AS NUMERIC)))<((((x'')&(rt0.c1)), ((rt0.c1) ISNULL), x'3789'))));
SELECT SUM(count) FROM (SELECT (((((SUBSTR(rt0.c0, rt0.c2), (((rt0.c4))<=((rt0.c0))), CAST(rt0.c3 AS NUMERIC)))<((((x'')&(rt0.c1)), ((rt0.c1) ISNULL), x'3789')))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((SUBSTR(rt0.c0, rt0.c2), (((rt0.c4))<=((rt0.c0))), CAST(rt0.c3 AS NUMERIC)))<((((x'')&(rt0.c1)), ((rt0.c1) ISNULL), x'3789'))));
SELECT SUM(count) FROM (SELECT (((((SUBSTR(rt0.c0, rt0.c2), (((rt0.c4))<=((rt0.c0))), CAST(rt0.c3 AS NUMERIC)))<((((x'')&(rt0.c1)), ((rt0.c1) ISNULL), x'3789')))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((SUBSTR(rt0.c0, rt0.c2), (((rt0.c4))<=((rt0.c0))), CAST(rt0.c3 AS NUMERIC)))<((((x'')&(rt0.c1)), ((rt0.c1) ISNULL), x'3789'))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((((rt0.c1)AND(v0.c0)))AND(x''))) NOTNULL) LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT NULL)) NOTNULL) WHERE (rt0.c5) ORDER BY ((((rt0.c2)AND(rt0.c5 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((rt0.c1)AND(v0.c0)))AND(x''))) NOTNULL) LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT NULL)) NOTNULL) ORDER BY ((((rt0.c2)AND(rt0.c5 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((((rt0.c1)AND(v0.c0)))AND(x''))) NOTNULL) LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT NULL)) NOTNULL) WHERE (rt0.c5) ORDER BY ((((rt0.c2)AND(rt0.c5 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((rt0.c1)AND(v0.c0)))AND(x''))) NOTNULL) LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT NULL)) NOTNULL) ORDER BY ((((rt0.c2)AND(rt0.c5 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((((rt0.c1)AND(v0.c0)))AND(x''))) NOTNULL) LEFT OUTER JOIN vt0 ON ((((v0.c0) NOT NULL)) NOTNULL) WHERE (rt0.c5) ORDER BY ((((rt0.c2)AND(rt0.c5 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))));
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END)IS NOT(LIKE(rt0.c2, v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END)IS NOT(LIKE(rt0.c2, v0.c0))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END)IS NOT(LIKE(rt0.c2, v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END)IS NOT(LIKE(rt0.c2, v0.c0))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END)IS NOT(LIKE(rt0.c2, v0.c0))) DESC;
SELECT ALL * FROM v0 NOT INDEXED, rt0 WHERE ((((((x'') BETWEEN (rt0.c2) AND (rt0.c2)), JULIANDAY(x'c2bf', rt0.c1, rt0.c2), ((rt0.c4) BETWEEN (v0.c0) AND (rt0.c2))))==(((rt0.c2 IN (rt0.c5, v0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c4 COLLATE RTRIM)))) ORDER BY (- (CASE 0.8061859190586609  WHEN rt0.c5 THEN x'6ae9' END)), ((rt0.c4 COLLATE RTRIM)IS(CAST(rt0.c4 AS REAL)))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((((rt0.c1))<>((rt0.c4)))) AND (rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((x'') BETWEEN (rt0.c2) AND (rt0.c2)), JULIANDAY(x'c2bf', rt0.c1, rt0.c2), ((rt0.c4) BETWEEN (v0.c0) AND (rt0.c2))))==(((rt0.c2 IN (rt0.c5, v0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c4 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (CASE 0.8061859190586609  WHEN rt0.c5 THEN x'6ae9' END)), ((rt0.c4 COLLATE RTRIM)IS(CAST(rt0.c4 AS REAL)))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((((rt0.c1))<>((rt0.c4)))) AND (rt0.c2)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 NOT INDEXED, rt0 WHERE ((((((x'') BETWEEN (rt0.c2) AND (rt0.c2)), JULIANDAY(x'c2bf', rt0.c1, rt0.c2), ((rt0.c4) BETWEEN (v0.c0) AND (rt0.c2))))==(((rt0.c2 IN (rt0.c5, v0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c4 COLLATE RTRIM)))) ORDER BY (- (CASE 0.8061859190586609  WHEN rt0.c5 THEN x'6ae9' END)), ((rt0.c4 COLLATE RTRIM)IS(CAST(rt0.c4 AS REAL)))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((((rt0.c1))<>((rt0.c4)))) AND (rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((x'') BETWEEN (rt0.c2) AND (rt0.c2)), JULIANDAY(x'c2bf', rt0.c1, rt0.c2), ((rt0.c4) BETWEEN (v0.c0) AND (rt0.c2))))==(((rt0.c2 IN (rt0.c5, v0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c4 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (CASE 0.8061859190586609  WHEN rt0.c5 THEN x'6ae9' END)), ((rt0.c4 COLLATE RTRIM)IS(CAST(rt0.c4 AS REAL)))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((((rt0.c1))<>((rt0.c4)))) AND (rt0.c2)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 NOT INDEXED, rt0 WHERE ((((((x'') BETWEEN (rt0.c2) AND (rt0.c2)), JULIANDAY(x'c2bf', rt0.c1, rt0.c2), ((rt0.c4) BETWEEN (v0.c0) AND (rt0.c2))))==(((rt0.c2 IN (rt0.c5, v0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c4 COLLATE RTRIM)))) ORDER BY (- (CASE 0.8061859190586609  WHEN rt0.c5 THEN x'6ae9' END)), ((rt0.c4 COLLATE RTRIM)IS(CAST(rt0.c4 AS REAL)))  NULLS LAST, ((CASE WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((((rt0.c1))<>((rt0.c4)))) AND (rt0.c2)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0, vt0 WHERE ((- (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c4 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c4 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((- (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c4 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c4 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((- (CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c4 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE (((((rt0.c5)<=(vt0.c1)))LIKE(((vt0.c0)LIKE(v0.c0))))) ORDER BY COALESCE(DISTINCT (vt0.c1 IN ()), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, CASE v0.c0  WHEN v0.c0 THEN NULL WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c0 THEN v0.c0 END, (rt0.c0 IN (rt0.c2))), json_valid(((rt0.c2) NOTNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)<=(vt0.c1)))LIKE(((vt0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0 ORDER BY COALESCE(DISTINCT (vt0.c1 IN ()), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, CASE v0.c0  WHEN v0.c0 THEN NULL WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c0 THEN v0.c0 END, (rt0.c0 IN (rt0.c2))), json_valid(((rt0.c2) NOTNULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE (((((rt0.c5)<=(vt0.c1)))LIKE(((vt0.c0)LIKE(v0.c0))))) ORDER BY COALESCE(DISTINCT (vt0.c1 IN ()), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, CASE v0.c0  WHEN v0.c0 THEN NULL WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c0 THEN v0.c0 END, (rt0.c0 IN (rt0.c2))), json_valid(((rt0.c2) NOTNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)<=(vt0.c1)))LIKE(((vt0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0 ORDER BY COALESCE(DISTINCT (vt0.c1 IN ()), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, CASE v0.c0  WHEN v0.c0 THEN NULL WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c0 THEN v0.c0 END, (rt0.c0 IN (rt0.c2))), json_valid(((rt0.c2) NOTNULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE (((((rt0.c5)<=(vt0.c1)))LIKE(((vt0.c0)LIKE(v0.c0))))) ORDER BY COALESCE(DISTINCT (vt0.c1 IN ()), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, CASE v0.c0  WHEN v0.c0 THEN NULL WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c0 THEN v0.c0 END, (rt0.c0 IN (rt0.c2))), json_valid(((rt0.c2) NOTNULL))  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c5 AS BLOB) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c3) NOT NULL) THEN (rt0.c4 IN (rt0.c3)) WHEN rt0.c4 THEN COALESCE(DISTINCT rt0.c5, rt0.c4) WHEN ((((((((rt0.c0)AND(rt0.c5)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) THEN (- (rt0.c4)) ELSE CAST(rt0.c3 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c5 AS BLOB) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c3) NOT NULL) THEN (rt0.c4 IN (rt0.c3)) WHEN rt0.c4 THEN COALESCE(DISTINCT rt0.c5, rt0.c4) WHEN ((((((((rt0.c0)AND(rt0.c5)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) THEN (- (rt0.c4)) ELSE CAST(rt0.c3 AS REAL) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c5 AS BLOB) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c3) NOT NULL) THEN (rt0.c4 IN (rt0.c3)) WHEN rt0.c4 THEN COALESCE(DISTINCT rt0.c5, rt0.c4) WHEN ((((((((rt0.c0)AND(rt0.c5)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) THEN (- (rt0.c4)) ELSE CAST(rt0.c3 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c5 AS BLOB) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c3) NOT NULL) THEN (rt0.c4 IN (rt0.c3)) WHEN rt0.c4 THEN COALESCE(DISTINCT rt0.c5, rt0.c4) WHEN ((((((((rt0.c0)AND(rt0.c5)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) THEN (- (rt0.c4)) ELSE CAST(rt0.c3 AS REAL) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c5 AS BLOB) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c3) NOT NULL) THEN (rt0.c4 IN (rt0.c3)) WHEN rt0.c4 THEN COALESCE(DISTINCT rt0.c5, rt0.c4) WHEN ((((((((rt0.c0)AND(rt0.c5)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) THEN (- (rt0.c4)) ELSE CAST(rt0.c3 AS REAL) END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(COALESCE(DISTINCT v0.c0, vt0.c1) AS BLOB)) ORDER BY (((~ (vt0.c1)))IS NOT(((vt0.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(DISTINCT v0.c0, vt0.c1) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((~ (vt0.c1)))IS NOT(((vt0.c1) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(COALESCE(DISTINCT v0.c0, vt0.c1) AS BLOB)) ORDER BY (((~ (vt0.c1)))IS NOT(((vt0.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(DISTINCT v0.c0, vt0.c1) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((~ (vt0.c1)))IS NOT(((vt0.c1) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(COALESCE(DISTINCT v0.c0, vt0.c1) AS BLOB)) ORDER BY (((~ (vt0.c1)))IS NOT(((vt0.c1) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c5)))AND(((vt0.c0) NOTNULL))))AND(CASE rt0.c2  WHEN '?dYQ' THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c5)))AND(((vt0.c0) NOTNULL))))AND(CASE rt0.c2  WHEN '?dYQ' THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c5)))AND(((vt0.c0) NOTNULL))))AND(CASE rt0.c2  WHEN '?dYQ' THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c5)))AND(((vt0.c0) NOTNULL))))AND(CASE rt0.c2  WHEN '?dYQ' THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c5)))AND(((vt0.c0) NOTNULL))))AND(CASE rt0.c2  WHEN '?dYQ' THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (0.8183803887173965);
SELECT SUM(count) FROM (SELECT ALL ((0.8183803887173965) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (0.8183803887173965);
SELECT SUM(count) FROM (SELECT ALL ((0.8183803887173965) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (0.8183803887173965);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((UNLIKELY(vt0.c0)))>=(((0.6567169350595069 IN ()))))) ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ((rt0.c5 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(vt0.c0)))>=(((0.6567169350595069 IN ()))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ((rt0.c5 IN ()))) DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((UNLIKELY(vt0.c0)))>=(((0.6567169350595069 IN ()))))) ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ((rt0.c5 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(vt0.c0)))>=(((0.6567169350595069 IN ()))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ((rt0.c5 IN ()))) DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((UNLIKELY(vt0.c0)))>=(((0.6567169350595069 IN ()))))) ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ((rt0.c5 IN ()))) DESC;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (x'') ORDER BY ((((rt0.c5)<(rt0.c2))) BETWEEN (((x'')>=(rt0.c1))) AND (((rt0.c1)/(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((rt0.c5)<(rt0.c2))) BETWEEN (((x'')>=(rt0.c1))) AND (((rt0.c1)/(rt0.c3)))));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (x'') ORDER BY ((((rt0.c5)<(rt0.c2))) BETWEEN (((x'')>=(rt0.c1))) AND (((rt0.c1)/(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((rt0.c5)<(rt0.c2))) BETWEEN (((x'')>=(rt0.c1))) AND (((rt0.c1)/(rt0.c3)))));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (x'') ORDER BY ((((rt0.c5)<(rt0.c2))) BETWEEN (((x'')>=(rt0.c1))) AND (((rt0.c1)/(rt0.c3))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) NOTNULL))) WHERE (((CAST(vt0.c1 AS INTEGER))>(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER))>(vt0.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) NOTNULL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) NOTNULL))) WHERE (((CAST(vt0.c1 AS INTEGER))>(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER))>(vt0.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) NOTNULL))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) NOTNULL))) WHERE (((CAST(vt0.c1 AS INTEGER))>(vt0.c1)));
SELECT ALL * FROM vt0, v0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY ((((((((((vt0.c0) IS FALSE))OR(((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))))AND(v0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((vt0.c0) IS FALSE))OR(((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))))AND(v0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY ((((((((((vt0.c0) IS FALSE))OR(((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))))AND(v0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((vt0.c0) IS FALSE))OR(((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))))AND(v0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY ((((((((((vt0.c0) IS FALSE))OR(((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))))AND(v0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT * FROM vt0, v0, rt0 WHERE (((((((vt0.c1)AND(rt0.c0)))OR(rt0.c3)))/(LIKE(rt0.c2, rt0.c1)))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(rt0.c0)))OR(rt0.c3)))/(LIKE(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM vt0, v0, rt0 WHERE (((((((vt0.c1)AND(rt0.c0)))OR(rt0.c3)))/(LIKE(rt0.c2, rt0.c1)))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(rt0.c0)))OR(rt0.c3)))/(LIKE(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM vt0, v0, rt0 WHERE (((((((vt0.c1)AND(rt0.c0)))OR(rt0.c3)))/(LIKE(rt0.c2, rt0.c1)))) ORDER BY rt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE 0.9997633114515393  WHEN CASE WHEN rt0.c0 THEN '-997985467' ELSE rt0.c4 END THEN 0.7387413326393594 END);
SELECT SUM(count) FROM (SELECT ((CASE 0.9997633114515393  WHEN CASE WHEN rt0.c0 THEN '-997985467' ELSE rt0.c4 END THEN 0.7387413326393594 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE 0.9997633114515393  WHEN CASE WHEN rt0.c0 THEN '-997985467' ELSE rt0.c4 END THEN 0.7387413326393594 END);
SELECT SUM(count) FROM (SELECT ((CASE 0.9997633114515393  WHEN CASE WHEN rt0.c0 THEN '-997985467' ELSE rt0.c4 END THEN 0.7387413326393594 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE 0.9997633114515393  WHEN CASE WHEN rt0.c0 THEN '-997985467' ELSE rt0.c4 END THEN 0.7387413326393594 END);
SELECT * FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))IS NOT(((rt0.c5)<>(vt0.c1)))) WHERE (vt0.c1) ORDER BY IFNULL('(ꙭ', CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))IS NOT(((rt0.c5)!=(vt0.c1)))) ORDER BY IFNULL('(ꙭ', CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END) DESC);
SELECT * FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))IS NOT(((rt0.c5)<>(vt0.c1)))) WHERE (vt0.c1) ORDER BY IFNULL('(ꙭ', CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))IS NOT(((rt0.c5)!=(vt0.c1)))) ORDER BY IFNULL('(ꙭ', CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END) DESC);
SELECT * FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))IS NOT(((rt0.c5)<>(vt0.c1)))) WHERE (vt0.c1) ORDER BY IFNULL('(ꙭ', CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END) DESC;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((CAST(vt0.c1 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((CAST(vt0.c1 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((CAST(vt0.c1 AS BLOB)) ISNULL));
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(((((((((rt0.c4)AND(v0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c4)AND(v0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(((((((((rt0.c4)AND(v0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c4)AND(v0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(((((((((rt0.c4)AND(v0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT CASE WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c3 END) WHERE ((~ ((- (rt0.c1))))) ORDER BY 0x45706dee, CAST(rt0.c3 COLLATE BINARY AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT CASE WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c3 END) ORDER BY 0X45706dee, CAST(rt0.c3 COLLATE BINARY AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT CASE WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c3 END) WHERE ((~ ((- (rt0.c1))))) ORDER BY 0x45706dee, CAST(rt0.c3 COLLATE BINARY AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT CASE WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c3 END) ORDER BY 0X45706dee, CAST(rt0.c3 COLLATE BINARY AS BLOB) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((v0.c0)IS(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0)IS(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0)IS(vt0.c0))) NOTNULL));
SELECT * FROM v0, vt0 WHERE (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) ORDER BY rt0.c4;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c4);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) ORDER BY rt0.c4;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c4);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM) ORDER BY rt0.c4;
SELECT ALL * FROM vt0, v0 WHERE ((((x'' IN (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((NOT (v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((x'' IN (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NOT (v0.c0)) IN ()) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((x'' IN (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((NOT (v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((x'' IN (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NOT (v0.c0)) IN ()) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((x'' IN (v0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((NOT (v0.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c4 END  WHEN CAST(vt0.c1 AS BLOB) THEN CAST(rt0.c2 AS REAL) WHEN (~ (vt0.c0)) THEN CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c5 END WHEN CAST(x'' AS REAL) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c4 END  WHEN CAST(vt0.c1 AS BLOB) THEN CAST(rt0.c2 AS REAL) WHEN (~ (vt0.c0)) THEN CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c5 END WHEN CAST(x'' AS REAL) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c4 END  WHEN CAST(vt0.c1 AS BLOB) THEN CAST(rt0.c2 AS REAL) WHEN (~ (vt0.c0)) THEN CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c5 END WHEN CAST(x'' AS REAL) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c4 END  WHEN CAST(vt0.c1 AS BLOB) THEN CAST(rt0.c2 AS REAL) WHEN (~ (vt0.c0)) THEN CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c5 END WHEN CAST(x'' AS REAL) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c4 END  WHEN CAST(vt0.c1 AS BLOB) THEN CAST(rt0.c2 AS REAL) WHEN (~ (vt0.c0)) THEN CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c5 END WHEN CAST(x'' AS REAL) THEN vt0.c0 COLLATE RTRIM END);
SELECT ALL * FROM vt0 WHERE (load_extension(((vt0.c0)<>(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ORDER BY (NOT ((~ (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(((vt0.c0)!=(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((~ (NULL))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (load_extension(((vt0.c0)<>(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ORDER BY (NOT ((~ (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(((vt0.c0)!=(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((~ (NULL))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.9959578202568231) ORDER BY ((((((rt0.c1))!=((rt0.c3))), (NOT (rt0.c4)), CAST(rt0.c3 AS BLOB)))<=(((rt0.c1 IN ()), (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, 0.682243664842086)) AND ((x'', rt0.c5, rt0.c1))), rt0.c5))) ASC;
SELECT SUM(count) FROM (SELECT ((0.9959578202568231) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1))<>((rt0.c3))), (NOT (rt0.c4)), CAST(rt0.c3 AS BLOB)))<=(((rt0.c1 IN ()), (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, 0.682243664842086)) AND ((x'', rt0.c5, rt0.c1))), rt0.c5))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (0.9959578202568231) ORDER BY ((((((rt0.c1))!=((rt0.c3))), (NOT (rt0.c4)), CAST(rt0.c3 AS BLOB)))<=(((rt0.c1 IN ()), (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, 0.682243664842086)) AND ((x'', rt0.c5, rt0.c1))), rt0.c5))) ASC;
SELECT SUM(count) FROM (SELECT ((0.9959578202568231) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1))<>((rt0.c3))), (NOT (rt0.c4)), CAST(rt0.c3 AS BLOB)))<=(((rt0.c1 IN ()), (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, 0.682243664842086)) AND ((x'', rt0.c5, rt0.c1))), rt0.c5))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (0.9959578202568231) ORDER BY ((((((rt0.c1))!=((rt0.c3))), (NOT (rt0.c4)), CAST(rt0.c3 AS BLOB)))<=(((rt0.c1 IN ()), (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, 0.682243664842086)) AND ((x'', rt0.c5, rt0.c1))), rt0.c5))) ASC;
SELECT * FROM v0, rt0 WHERE (((((((rt0.c5)OR(rt0.c0)))OR(rt0.c4)))==(rt0.c3))) ORDER BY (((rt0.c4, rt0.c4, rt0.c3)) NOT BETWEEN (((0x70ebc3d6 IN (rt0.c1, rt0.c2)), rt0.c2, CAST(v0.c0 AS REAL))) AND ((rt0.c4, ((((rt0.c1)AND(0.8061859190586609)))AND('')), ((rt0.c3) NOT NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5)OR(rt0.c0)))OR(rt0.c4)))==(rt0.c3))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c4, rt0.c4, rt0.c3)) NOT BETWEEN (((0X70ebc3d6 IN (rt0.c1, rt0.c2)), rt0.c2, CAST(v0.c0 AS REAL))) AND ((rt0.c4, ((((rt0.c1)AND(0.8061859190586609)))AND('')), ((rt0.c3) NOT NULL))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c5)OR(rt0.c0)))OR(rt0.c4)))==(rt0.c3))) ORDER BY (((rt0.c4, rt0.c4, rt0.c3)) NOT BETWEEN (((0x70ebc3d6 IN (rt0.c1, rt0.c2)), rt0.c2, CAST(v0.c0 AS REAL))) AND ((rt0.c4, ((((rt0.c1)AND(0.8061859190586609)))AND('')), ((rt0.c3) NOT NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5)OR(rt0.c0)))OR(rt0.c4)))==(rt0.c3))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c4, rt0.c4, rt0.c3)) NOT BETWEEN (((0X70ebc3d6 IN (rt0.c1, rt0.c2)), rt0.c2, CAST(v0.c0 AS REAL))) AND ((rt0.c4, ((((rt0.c1)AND(0.8061859190586609)))AND('')), ((rt0.c3) NOT NULL))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c5)OR(rt0.c0)))OR(rt0.c4)))==(rt0.c3))) ORDER BY (((rt0.c4, rt0.c4, rt0.c3)) NOT BETWEEN (((0x70ebc3d6 IN (rt0.c1, rt0.c2)), rt0.c2, CAST(v0.c0 AS REAL))) AND ((rt0.c4, ((((rt0.c1)AND(0.8061859190586609)))AND('')), ((rt0.c3) NOT NULL))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (~ (((vt0.c1)GLOB(vt0.c0)))) WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN MIN(vt0.c0, rt0.c2) THEN ((vt0.c0) NOTNULL) END) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1 COLLATE RTRIM  WHEN MIN(vt0.c0, rt0.c2) THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (~ (((vt0.c1)GLOB(vt0.c0)))) ORDER BY x'');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (~ (((vt0.c1)GLOB(vt0.c0)))) WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN MIN(vt0.c0, rt0.c2) THEN ((vt0.c0) NOTNULL) END) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1 COLLATE RTRIM  WHEN MIN(vt0.c0, rt0.c2) THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (~ (((vt0.c1)GLOB(vt0.c0)))) ORDER BY x'');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (~ (((vt0.c1)GLOB(vt0.c0)))) WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN MIN(vt0.c0, rt0.c2) THEN ((vt0.c0) NOTNULL) END) ORDER BY x'';
SELECT * FROM v0 WHERE (v0.c0) ORDER BY x''  NULLS LAST, CASE UPPER('xJ')  WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0)/(v0.c0)) THEN (((x''))!=((v0.c0))) WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS INTEGER) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY x''  NULLS LAST, CASE UPPER('xJ')  WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0)/(v0.c0)) THEN (((x''))<>((v0.c0))) WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS INTEGER) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END ASC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY x''  NULLS LAST, CASE UPPER('xJ')  WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0)/(v0.c0)) THEN (((x''))!=((v0.c0))) WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS INTEGER) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY x''  NULLS LAST, CASE UPPER('xJ')  WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0)/(v0.c0)) THEN (((x''))<>((v0.c0))) WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS INTEGER) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END ASC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY x''  NULLS LAST, CASE UPPER('xJ')  WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0)/(v0.c0)) THEN (((x''))!=((v0.c0))) WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS INTEGER) ELSE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END ASC;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE (CAST(0X319703df AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0X319703df AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE (CAST(0X319703df AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0X319703df AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE (CAST(0X319703df AS BLOB));
SELECT * FROM rt0, vt0, v0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c4))) NOT NULL)) ORDER BY ((CAST('' AS TEXT))IS NOT(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END)) ASC, CASE WHEN vt0.c0 THEN rt0.c3 END COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c4))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST('' AS TEXT))IS NOT(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END)) ASC, CASE WHEN vt0.c0 THEN rt0.c3 END COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c4))) NOT NULL)) ORDER BY ((CAST('' AS TEXT))IS NOT(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END)) ASC, CASE WHEN vt0.c0 THEN rt0.c3 END COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c4))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST('' AS TEXT))IS NOT(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END)) ASC, CASE WHEN vt0.c0 THEN rt0.c3 END COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c4))) NOT NULL)) ORDER BY ((CAST('' AS TEXT))IS NOT(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END)) ASC, CASE WHEN vt0.c0 THEN rt0.c3 END COLLATE NOCASE COLLATE NOCASE;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(LTRIM(vt0.c1, rt0.c5) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LTRIM(vt0.c1, rt0.c5) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(LTRIM(vt0.c1, rt0.c5) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LTRIM(vt0.c1, rt0.c5) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(LTRIM(vt0.c1, rt0.c5) AS NUMERIC));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((((((((((0X2b16ced)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c1)))OR(vt0.c0))))>=((rt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((0x2b16ced)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c1)))OR(vt0.c0))))>=((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((((((((((0X2b16ced)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c1)))OR(vt0.c0))))>=((rt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((0x2b16ced)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c1)))OR(vt0.c0))))>=((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((((((((((0X2b16ced)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c1)))OR(vt0.c0))))>=((rt0.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((rt0.c3) NOT NULL))GLOB((((vt0.c1)) NOT BETWEEN (('-1292229727')) AND ((v0.c0)))))) ORDER BY rt0.c5 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL))GLOB((((vt0.c1)) NOT BETWEEN (('-1292229727')) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY rt0.c5 DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((rt0.c3) NOT NULL))GLOB((((vt0.c1)) NOT BETWEEN (('-1292229727')) AND ((v0.c0)))))) ORDER BY rt0.c5 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL))GLOB((((vt0.c1)) NOT BETWEEN (('-1292229727')) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY rt0.c5 DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((rt0.c3) NOT NULL))GLOB((((vt0.c1)) NOT BETWEEN (('-1292229727')) AND ((v0.c0)))))) ORDER BY rt0.c5 DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c4 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS REAL)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c4 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS REAL)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c4 AS REAL)) IS TRUE));
SELECT * FROM rt0, v0, vt0 WHERE (((rt0.c4)-(rt0.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)-(rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((rt0.c4)-(rt0.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)-(rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((rt0.c4)-(rt0.c4)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((((((((v0.c0)AND(v0.c0)))AND('q')))OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((v0.c0)AND(v0.c0)))AND('q')))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((((((((v0.c0)AND(v0.c0)))AND('q')))OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((v0.c0)AND(v0.c0)))AND('q')))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((((((((v0.c0)AND(v0.c0)))AND('q')))OR(v0.c0)))AND(v0.c0)))));
SELECT ALL * FROM v0, vt0 WHERE (INSTR(vt0.c0, ((x'1e9a') NOT BETWEEN (v0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((INSTR(vt0.c0, ((x'1e9a') NOT BETWEEN (v0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (INSTR(vt0.c0, ((x'1e9a') NOT BETWEEN (v0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((INSTR(vt0.c0, ((x'1e9a') NOT BETWEEN (v0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (INSTR(vt0.c0, ((x'1e9a') NOT BETWEEN (v0.c0) AND (vt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (((((+ (rt0.c0))))>=(((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c4, rt0.c5, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ((((((+ (rt0.c0))))>=(((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c4, rt0.c5, rt0.c1))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((+ (rt0.c0))))>=(((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c4, rt0.c5, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ((((((+ (rt0.c0))))>=(((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c4, rt0.c5, rt0.c1))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((+ (rt0.c0))))>=(((((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c4, rt0.c5, rt0.c1)))))));
SELECT COUNT(*) FROM rt0 WHERE (json_remove(((((rt0.c3)AND(rt0.c3)))AND(rt0.c4)), TYPEOF(rt0.c3), NULLIF(rt0.c3, rt0.c5), ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((json_remove(((((rt0.c3)AND(rt0.c3)))AND(rt0.c4)), TYPEOF(rt0.c3), NULLIF(rt0.c3, rt0.c5), ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json_remove(((((rt0.c3)AND(rt0.c3)))AND(rt0.c4)), TYPEOF(rt0.c3), NULLIF(rt0.c3, rt0.c5), ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((json_remove(((((rt0.c3)AND(rt0.c3)))AND(rt0.c4)), TYPEOF(rt0.c3), NULLIF(rt0.c3, rt0.c5), ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1 IN ()))>(((rt0.c5)<=(rt0.c4)))) CROSS JOIN vt0 ON ((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c0)&(rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))) WHERE ((+ (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1 IN ()))>(((rt0.c5)<=(rt0.c4)))) CROSS JOIN vt0 ON ((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c0)&(rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1 IN ()))>(((rt0.c5)<=(rt0.c4)))) CROSS JOIN vt0 ON ((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c0)&(rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))) WHERE ((+ (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1 IN ()))>(((rt0.c5)<=(rt0.c4)))) CROSS JOIN vt0 ON ((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c0)&(rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1 IN ()))>(((rt0.c5)<=(rt0.c4)))) CROSS JOIN vt0 ON ((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c0)&(rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))) WHERE ((+ (CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)>>(v0.c0)) THEN vt0.c1 ELSE ((vt0.c1) NOTNULL) END WHERE (json_object(((((v0.c0)AND(v0.c0)))AND(vt0.c1)), vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((json_object(((((v0.c0)AND(v0.c0)))AND(vt0.c1)), vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)>>(v0.c0)) THEN vt0.c1 ELSE ((vt0.c1) NOTNULL) END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)>>(v0.c0)) THEN vt0.c1 ELSE ((vt0.c1) NOTNULL) END WHERE (json_object(((((v0.c0)AND(v0.c0)))AND(vt0.c1)), vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((json_object(((((v0.c0)AND(v0.c0)))AND(vt0.c1)), vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)>>(v0.c0)) THEN vt0.c1 ELSE ((vt0.c1) NOTNULL) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c4 COLLATE NOCASE) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN '1429619283' THEN rt0.c4 ELSE rt0.c5 END) AND (vt0.c0))) ORDER BY ((vt0.c0)AND((rt0.c5 IN (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE NOCASE) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN '1429619283' THEN rt0.c4 ELSE rt0.c5 END) AND (vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0)AND((rt0.c5 IN (rt0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c4 COLLATE NOCASE) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN '1429619283' THEN rt0.c4 ELSE rt0.c5 END) AND (vt0.c0))) ORDER BY ((vt0.c0)AND((rt0.c5 IN (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE NOCASE) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN '1429619283' THEN rt0.c4 ELSE rt0.c5 END) AND (vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0)AND((rt0.c5 IN (rt0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c4 COLLATE NOCASE) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN '1429619283' THEN rt0.c4 ELSE rt0.c5 END) AND (vt0.c0))) ORDER BY ((vt0.c0)AND((rt0.c5 IN (rt0.c3))))  NULLS LAST;
SELECT * FROM vt0, v0 WHERE ((((((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))))OR(((v0.c0) NOT NULL))))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0))) ORDER BY ((((((vt0.c1)>=(vt0.c1)))AND(vt0.c0)))OR((~ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))))OR(((v0.c0) NOT NULL))))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((vt0.c1)>=(vt0.c1)))AND(vt0.c0)))OR((~ (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))))OR(((v0.c0) NOT NULL))))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0))) ORDER BY ((((((vt0.c1)>=(vt0.c1)))AND(vt0.c0)))OR((~ (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))))OR(((v0.c0) NOT NULL))))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((vt0.c1)>=(vt0.c1)))AND(vt0.c0)))OR((~ (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))))OR(((v0.c0) NOT NULL))))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0))) ORDER BY ((((((vt0.c1)>=(vt0.c1)))AND(vt0.c0)))OR((~ (v0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c0)OR(vt0.c1)) COLLATE RTRIM) ORDER BY UPPER((('-515398035')+(vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)OR(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY UPPER((('-515398035')+(vt0.c1)))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c0)OR(vt0.c1)) COLLATE RTRIM) ORDER BY UPPER((('-515398035')+(vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)OR(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY UPPER((('-515398035')+(vt0.c1)))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c0)OR(vt0.c1)) COLLATE RTRIM) ORDER BY UPPER((('-515398035')+(vt0.c1)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3) ISNULL))AND((+ (rt0.c2)))))OR(((((((((((((rt0.c3)OR(x'027c1521d3e2')))AND(rt0.c2)))OR(rt0.c2)))AND(x'4d68')))AND(rt0.c1)))OR(rt0.c4)))))AND((~ (rt0.c1)))))OR(((rt0.c1)%(rt0.c2))))) ORDER BY ((rt0.c1)<(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3) ISNULL))AND((+ (rt0.c2)))))OR(((((((((((((rt0.c3)OR(x'027c1521d3e2')))AND(rt0.c2)))OR(rt0.c2)))AND(x'4d68')))AND(rt0.c1)))OR(rt0.c4)))))AND((~ (rt0.c1)))))OR(((rt0.c1)%(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3) ISNULL))AND((+ (rt0.c2)))))OR(((((((((((((rt0.c3)OR(x'027c1521d3e2')))AND(rt0.c2)))OR(rt0.c2)))AND(x'4d68')))AND(rt0.c1)))OR(rt0.c4)))))AND((~ (rt0.c1)))))OR(((rt0.c1)%(rt0.c2))))) ORDER BY ((rt0.c1)<(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3) ISNULL))AND((+ (rt0.c2)))))OR(((((((((((((rt0.c3)OR(x'027c1521d3e2')))AND(rt0.c2)))OR(rt0.c2)))AND(x'4d68')))AND(rt0.c1)))OR(rt0.c4)))))AND((~ (rt0.c1)))))OR(((rt0.c1)%(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3) ISNULL))AND((+ (rt0.c2)))))OR(((((((((((((rt0.c3)OR(x'027c1521d3e2')))AND(rt0.c2)))OR(rt0.c2)))AND(x'4d68')))AND(rt0.c1)))OR(rt0.c4)))))AND((~ (rt0.c1)))))OR(((rt0.c1)%(rt0.c2))))) ORDER BY ((rt0.c1)<(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (json_remove(rt0.c0 COLLATE NOCASE, ((((0.9959578202568231)OR(rt0.c1)))AND(x''))));
SELECT SUM(count) FROM (SELECT ((json_remove(rt0.c0 COLLATE NOCASE, ((((0.9959578202568231)OR(rt0.c1)))AND(x'')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_remove(rt0.c0 COLLATE NOCASE, ((((0.9959578202568231)OR(rt0.c1)))AND(x''))));
SELECT SUM(count) FROM (SELECT ((json_remove(rt0.c0 COLLATE NOCASE, ((((0.9959578202568231)OR(rt0.c1)))AND(x'')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((UNLIKELY(rt0.c3) IN ()));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(rt0.c3) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((UNLIKELY(rt0.c3) IN ()));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(rt0.c3) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((UNLIKELY(rt0.c3) IN ()));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c4))>=((v0.c0))) IN ()) CROSS JOIN rt0 ON (((('0.2284424224432453')<(x'988d')))|(x'' COLLATE BINARY)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c4))>=((v0.c0))) IN ()) CROSS JOIN rt0 ON (((('0.2284424224432453')<(x'988d')))|(x'' COLLATE BINARY)));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c4))>=((v0.c0))) IN ()) CROSS JOIN rt0 ON (((('0.2284424224432453')<(x'988d')))|(x'' COLLATE BINARY)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c4))>=((v0.c0))) IN ()) CROSS JOIN rt0 ON (((('0.2284424224432453')<(x'988d')))|(x'' COLLATE BINARY)));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c4))>=((v0.c0))) IN ()) CROSS JOIN rt0 ON (((('0.2284424224432453')<(x'988d')))|(x'' COLLATE BINARY)) WHERE (NULL);
SELECT * FROM rt0, v0, vt0 WHERE (v0.c0) ORDER BY (((((vt0.c0) IS FALSE)))=(((- (vt0.c0))))) DESC, (((rt0.c3 COLLATE BINARY))==((v0.c0))), CAST(CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((((vt0.c0) IS FALSE)))==(((- (vt0.c0))))) DESC, (((rt0.c3 COLLATE BINARY))==((v0.c0))), CAST(CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END AS INTEGER) DESC);
SELECT * FROM rt0, v0, vt0 WHERE (v0.c0) ORDER BY (((((vt0.c0) IS FALSE)))=(((- (vt0.c0))))) DESC, (((rt0.c3 COLLATE BINARY))==((v0.c0))), CAST(CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((((vt0.c0) IS FALSE)))==(((- (vt0.c0))))) DESC, (((rt0.c3 COLLATE BINARY))==((v0.c0))), CAST(CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END AS INTEGER) DESC);
SELECT * FROM rt0, v0, vt0 WHERE (v0.c0) ORDER BY (((((vt0.c0) IS FALSE)))=(((- (vt0.c0))))) DESC, (((rt0.c3 COLLATE BINARY))==((v0.c0))), CAST(CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)||(rt0.c2))) IS TRUE)) ORDER BY ((CASE 0.15128690254575528  WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)==(((rt0.c4)AND(rt0.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)||(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE 0.15128690254575528  WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)=(((rt0.c4)AND(rt0.c5)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)||(rt0.c2))) IS TRUE)) ORDER BY ((CASE 0.15128690254575528  WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)==(((rt0.c4)AND(rt0.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)||(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE 0.15128690254575528  WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)=(((rt0.c4)AND(rt0.c5)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)||(rt0.c2))) IS TRUE)) ORDER BY ((CASE 0.15128690254575528  WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)==(((rt0.c4)AND(rt0.c5)))) ASC  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((+ (ABS(DISTINCT v0.c0)))) ORDER BY ((((vt0.c1) NOT BETWEEN ('<x') AND (vt0.c1)))&((('')<<(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (ABS(DISTINCT v0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1) NOT BETWEEN ('<x') AND (vt0.c1)))&((('')<<(vt0.c1)))) DESC);
SELECT * FROM vt0, v0 WHERE ((+ (ABS(DISTINCT v0.c0)))) ORDER BY ((((vt0.c1) NOT BETWEEN ('<x') AND (vt0.c1)))&((('')<<(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (ABS(DISTINCT v0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1) NOT BETWEEN ('<x') AND (vt0.c1)))&((('')<<(vt0.c1)))) DESC);
SELECT * FROM vt0, v0 WHERE ((+ (ABS(DISTINCT v0.c0)))) ORDER BY ((((vt0.c1) NOT BETWEEN ('<x') AND (vt0.c1)))&((('')<<(vt0.c1)))) DESC;
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS TEXT) AS TEXT));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND (((rt0.c3)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND (((rt0.c3)|(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND (((rt0.c3)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND (((rt0.c3)|(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND (((rt0.c3)|(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((vt0.c0 IN ()))AND(LIKELIHOOD(DISTINCT vt0.c1, 0.4479079157368757))))OR(vt0.c0 COLLATE NOCASE)))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))AND(TYPEOF(DISTINCT vt0.c1))))AND(vt0.c1 COLLATE RTRIM)))AND((vt0.c0 IN (vt0.c0))))) ORDER BY CAST(DATETIME(vt0.c0, vt0.c1, vt0.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0 IN ()))AND(LIKELIHOOD(DISTINCT vt0.c1, 0.4479079157368757))))OR(vt0.c0 COLLATE NOCASE)))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))AND(TYPEOF(DISTINCT vt0.c1))))AND(vt0.c1 COLLATE RTRIM)))AND((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(DATETIME(vt0.c0, vt0.c1, vt0.c0) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((vt0.c0 IN ()))AND(LIKELIHOOD(DISTINCT vt0.c1, 0.4479079157368757))))OR(vt0.c0 COLLATE NOCASE)))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))AND(TYPEOF(DISTINCT vt0.c1))))AND(vt0.c1 COLLATE RTRIM)))AND((vt0.c0 IN (vt0.c0))))) ORDER BY CAST(DATETIME(vt0.c0, vt0.c1, vt0.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0 IN ()))AND(LIKELIHOOD(DISTINCT vt0.c1, 0.4479079157368757))))OR(vt0.c0 COLLATE NOCASE)))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))AND(TYPEOF(DISTINCT vt0.c1))))AND(vt0.c1 COLLATE RTRIM)))AND((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(DATETIME(vt0.c0, vt0.c1, vt0.c0) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((vt0.c0 IN ()))AND(LIKELIHOOD(DISTINCT vt0.c1, 0.4479079157368757))))OR(vt0.c0 COLLATE NOCASE)))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))AND(TYPEOF(DISTINCT vt0.c1))))AND(vt0.c1 COLLATE RTRIM)))AND((vt0.c0 IN (vt0.c0))))) ORDER BY CAST(DATETIME(vt0.c0, vt0.c1, vt0.c0) AS TEXT);
SELECT ALL * FROM v0 WHERE (((json_valid(v0.c0))AND(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((json_valid(v0.c0))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((json_valid(v0.c0))AND(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((json_valid(v0.c0))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((json_valid(v0.c0))AND(v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c1)AND(7.10411419E8)))AND(rt0.c1))  WHEN ((rt0.c1)<>(NULL)) THEN (((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c5, rt0.c1, rt0.c5))) END) ORDER BY ((CAST(rt0.c3 AS TEXT)) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c1)AND(7.10411419E8)))AND(rt0.c1))  WHEN ((rt0.c1)!=(NULL)) THEN (((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c5, rt0.c1, rt0.c5))) END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c1)AND(7.10411419E8)))AND(rt0.c1))  WHEN ((rt0.c1)<>(NULL)) THEN (((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c5, rt0.c1, rt0.c5))) END) ORDER BY ((CAST(rt0.c3 AS TEXT)) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c1)AND(7.10411419E8)))AND(rt0.c1))  WHEN ((rt0.c1)!=(NULL)) THEN (((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c5, rt0.c1, rt0.c5))) END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c1)AND(7.10411419E8)))AND(rt0.c1))  WHEN ((rt0.c1)<>(NULL)) THEN (((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c5, rt0.c1, rt0.c5))) END) ORDER BY ((CAST(rt0.c3 AS TEXT)) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c1)<(v0.c0)), 0.6541630655568195));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((rt0.c1)<(v0.c0)), 0.6541630655568195)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c1)<(v0.c0)), 0.6541630655568195));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((rt0.c1)<(v0.c0)), 0.6541630655568195)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c1)<(v0.c0)), 0.6541630655568195));
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN v0 ON TIME(rt0.c3, vt0.c1, rt0.c4) COLLATE RTRIM WHERE ((((NOT (vt0.c1))) BETWEEN (vt0.c0) AND ((+ (rt0.c4))))) ORDER BY (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())  NULLS FIRST, CAST((('') BETWEEN (vt0.c1) AND (v0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) BETWEEN (vt0.c0) AND ((+ (rt0.c4))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN v0 ON TIME(rt0.c3, vt0.c1, rt0.c4) COLLATE RTRIM ORDER BY (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())  NULLS FIRST, CAST((('') BETWEEN (vt0.c1) AND (v0.c0)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN v0 ON TIME(rt0.c3, vt0.c1, rt0.c4) COLLATE RTRIM WHERE ((((NOT (vt0.c1))) BETWEEN (vt0.c0) AND ((+ (rt0.c4))))) ORDER BY (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())  NULLS FIRST, CAST((('') BETWEEN (vt0.c1) AND (v0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) BETWEEN (vt0.c0) AND ((+ (rt0.c4))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN v0 ON TIME(rt0.c3, vt0.c1, rt0.c4) COLLATE RTRIM ORDER BY (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())  NULLS FIRST, CAST((('') BETWEEN (vt0.c1) AND (v0.c0)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN v0 ON TIME(rt0.c3, vt0.c1, rt0.c4) COLLATE RTRIM WHERE ((((NOT (vt0.c1))) BETWEEN (vt0.c0) AND ((+ (rt0.c4))))) ORDER BY (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2)) IN ())  NULLS FIRST, CAST((('') BETWEEN (vt0.c1) AND (v0.c0)) AS TEXT) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0, v0 WHERE ((((rt0.c5, rt0.c5, rt0.c1)) BETWEEN ((rt0.c5, v0.c0, rt0.c4)) AND ((vt0.c1, vt0.c0, vt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5, rt0.c5, rt0.c1)) BETWEEN ((rt0.c5, v0.c0, rt0.c4)) AND ((vt0.c1, vt0.c0, vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((rt0.c5, rt0.c5, rt0.c1)) BETWEEN ((rt0.c5, v0.c0, rt0.c4)) AND ((vt0.c1, vt0.c0, vt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5, rt0.c5, rt0.c1)) BETWEEN ((rt0.c5, v0.c0, rt0.c4)) AND ((vt0.c1, vt0.c0, vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((rt0.c5, rt0.c5, rt0.c1)) BETWEEN ((rt0.c5, v0.c0, rt0.c4)) AND ((vt0.c1, vt0.c0, vt0.c1))) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (((((((((((((((((CAST(v0.c0 AS INTEGER))AND(((v0.c0)-(v0.c0)))))AND(((v0.c0)||(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((v0.c0 IN ()))))AND((v0.c0 IN ()))))OR(((v0.c0) IS TRUE))))OR(((v0.c0)AND(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((((v0.c0))=((v0.c0)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((CAST(v0.c0 AS INTEGER))AND(((v0.c0)-(v0.c0)))))AND(((v0.c0)||(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((v0.c0 IN ()))))AND((v0.c0 IN ()))))OR(((v0.c0) IS TRUE))))OR(((v0.c0)AND(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))==((v0.c0)))) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((((((((((((CAST(v0.c0 AS INTEGER))AND(((v0.c0)-(v0.c0)))))AND(((v0.c0)||(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((v0.c0 IN ()))))AND((v0.c0 IN ()))))OR(((v0.c0) IS TRUE))))OR(((v0.c0)AND(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((((v0.c0))=((v0.c0)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((CAST(v0.c0 AS INTEGER))AND(((v0.c0)-(v0.c0)))))AND(((v0.c0)||(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((v0.c0 IN ()))))AND((v0.c0 IN ()))))OR(((v0.c0) IS TRUE))))OR(((v0.c0)AND(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))==((v0.c0)))) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((((((((((((CAST(v0.c0 AS INTEGER))AND(((v0.c0)-(v0.c0)))))AND(((v0.c0)||(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((v0.c0 IN ()))))AND((v0.c0 IN ()))))OR(((v0.c0) IS TRUE))))OR(((v0.c0)AND(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((((v0.c0))=((v0.c0)))) IS FALSE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((((NULL, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY ((NULLIF(vt0.c1, vt0.c1)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((NULL, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULLIF(vt0.c1, vt0.c1)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((((NULL, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY ((NULLIF(vt0.c1, vt0.c1)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((NULL, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULLIF(vt0.c1, vt0.c1)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((((NULL, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY ((NULLIF(vt0.c1, vt0.c1)) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (((rt0.c1 COLLATE RTRIM)IS(LIKELIHOOD(rt0.c1, 0.4908601987809724)))) ORDER BY TRIM(DISTINCT '45182189', CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)IS(LIKELIHOOD(rt0.c1, 0.4908601987809724)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY TRIM(DISTINCT '45182189', CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) DESC);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (((rt0.c1 COLLATE RTRIM)IS(LIKELIHOOD(rt0.c1, 0.4908601987809724)))) ORDER BY TRIM(DISTINCT '45182189', CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)IS(LIKELIHOOD(rt0.c1, 0.4908601987809724)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY TRIM(DISTINCT '45182189', CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) DESC);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (((rt0.c1 COLLATE RTRIM)IS(LIKELIHOOD(rt0.c1, 0.4908601987809724)))) ORDER BY TRIM(DISTINCT '45182189', CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (NULL)));
SELECT ALL * FROM vt0 WHERE ('977794661');
SELECT SUM(count) FROM (SELECT ALL (('977794661') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('977794661');
SELECT SUM(count) FROM (SELECT ALL (('977794661') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('977794661');
SELECT ALL * FROM v0, vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM)&((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)&((~ (rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM)&((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)&((~ (rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM)&((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS NUMERIC)) ORDER BY ((0.2284424224432453) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((0.2284424224432453) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS NUMERIC)) ORDER BY ((0.2284424224432453) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((0.2284424224432453) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS NUMERIC)) ORDER BY ((0.2284424224432453) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN (rt0.c0 IN (rt0.c5)) END) ORDER BY ((((rt0.c5) NOTNULL))>>(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c2 AS TEXT) THEN (rt0.c0 IN (rt0.c5)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5) NOTNULL))>>(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN (rt0.c0 IN (rt0.c5)) END) ORDER BY ((((rt0.c5) NOTNULL))>>(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c2 AS TEXT) THEN (rt0.c0 IN (rt0.c5)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5) NOTNULL))>>(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN (rt0.c0 IN (rt0.c5)) END) ORDER BY ((((rt0.c5) NOTNULL))>>(CAST(rt0.c0 AS NUMERIC)));
SELECT ALL * FROM vt0 WHERE (0x2240ee);
SELECT SUM(count) FROM (SELECT ALL ((0x2240ee) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0x2240ee);
SELECT SUM(count) FROM (SELECT ALL ((0x2240ee) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0x2240ee);
SELECT * FROM v0, rt0, vt0 WHERE (((((v0.c0)>>(rt0.c1)))GLOB(CASE rt0.c5  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(rt0.c1)))GLOB(CASE rt0.c5  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((v0.c0)>>(rt0.c1)))GLOB(CASE rt0.c5  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(rt0.c1)))GLOB(CASE rt0.c5  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((v0.c0)>>(rt0.c1)))GLOB(CASE rt0.c5  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT * FROM vt0 WHERE (NULLIF(((vt0.c0)IS(vt0.c1)), CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt0.c0)IS(vt0.c1)), CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(((vt0.c0)IS(vt0.c1)), CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt0.c0)IS(vt0.c1)), CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(((vt0.c0)IS(vt0.c1)), CAST(vt0.c1 AS NUMERIC)));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((rt0.c4)<=(vt0.c0)))+(rt0.c1 COLLATE BINARY)) WHERE ((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c4)<=(vt0.c0)))+(rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((rt0.c4)<=(vt0.c0)))+(rt0.c1 COLLATE BINARY)) WHERE ((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c4)<=(vt0.c0)))+(rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((rt0.c4)<=(vt0.c0)))+(rt0.c1 COLLATE BINARY)) WHERE ((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END IN ()));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((~ (x''))) ORDER BY ((((v0.c0 IN ()), CAST(rt0.c3 AS BLOB), ('' IN ())))>((CASE WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)), json_array_length(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (x''))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0 IN ()), CAST(rt0.c3 AS BLOB), ('' IN ())))>((CASE WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)), json_array_length(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((~ (x''))) ORDER BY ((((v0.c0 IN ()), CAST(rt0.c3 AS BLOB), ('' IN ())))>((CASE WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)), json_array_length(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (x''))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0 IN ()), CAST(rt0.c3 AS BLOB), ('' IN ())))>((CASE WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)), json_array_length(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((~ (x''))) ORDER BY ((((v0.c0 IN ()), CAST(rt0.c3 AS BLOB), ('' IN ())))>((CASE WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)), json_array_length(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END IN ())) ORDER BY (vt0.c1 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c1 IN ()) COLLATE RTRIM ASC);
SELECT * FROM vt0, rt0 WHERE ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END IN ())) ORDER BY (vt0.c1 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c1 IN ()) COLLATE RTRIM ASC);
SELECT * FROM vt0, rt0 WHERE ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END IN ())) ORDER BY (vt0.c1 IN ()) COLLATE RTRIM ASC;
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0)IS(1836719650)))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(1836719650)))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0)IS(1836719650)))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(1836719650)))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0)IS(1836719650)))AND(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((((((((((((rt0.c2) NOT NULL))AND((x'' IN (rt0.c2)))))OR(0.38584579589792223)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c4)IS NOT(vt0.c1)))))OR(((rt0.c3)LIKE('')))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))) WHERE (LIKELIHOOD(DISTINCT '-711773668', 0.5747519899311792)) ORDER BY (- (((vt0.c0)OR(vt0.c1)))), rt0.c0 DESC  NULLS FIRST, (NOT (((rt0.c2)-(rt0.c5)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT '-711773668', 0.5747519899311792)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((((((((((rt0.c2) NOT NULL))AND((x'' IN (rt0.c2)))))OR(0.38584579589792223)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c4)IS NOT(vt0.c1)))))OR(((rt0.c3)LIKE('')))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))) ORDER BY (- (((vt0.c0)OR(vt0.c1)))), rt0.c0 DESC  NULLS FIRST, (NOT (((rt0.c2)-(rt0.c5)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((((((((((((rt0.c2) NOT NULL))AND((x'' IN (rt0.c2)))))OR(0.38584579589792223)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c4)IS NOT(vt0.c1)))))OR(((rt0.c3)LIKE('')))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))) WHERE (LIKELIHOOD(DISTINCT '-711773668', 0.5747519899311792)) ORDER BY (- (((vt0.c0)OR(vt0.c1)))), rt0.c0 DESC  NULLS FIRST, (NOT (((rt0.c2)-(rt0.c5)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT '-711773668', 0.5747519899311792)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((((((((((rt0.c2) NOT NULL))AND((x'' IN (rt0.c2)))))OR(0.38584579589792223)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c4)IS NOT(vt0.c1)))))OR(((rt0.c3)LIKE('')))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))) ORDER BY (- (((vt0.c0)OR(vt0.c1)))), rt0.c0 DESC  NULLS FIRST, (NOT (((rt0.c2)-(rt0.c5)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((((((((((((rt0.c2) NOT NULL))AND((x'' IN (rt0.c2)))))OR(0.38584579589792223)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c4)IS NOT(vt0.c1)))))OR(((rt0.c3)LIKE('')))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))) WHERE (LIKELIHOOD(DISTINCT '-711773668', 0.5747519899311792)) ORDER BY (- (((vt0.c0)OR(vt0.c1)))), rt0.c0 DESC  NULLS FIRST, (NOT (((rt0.c2)-(rt0.c5)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c5 ELSE '1494167806' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c4 THEN rt0.c5 ELSE '1494167806' END IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c5 ELSE '1494167806' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c4 THEN rt0.c5 ELSE '1494167806' END IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c5 ELSE '1494167806' END IN ()));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON v0.c0 LEFT OUTER JOIN vt0 ON (rt0.c2 IN (v0.c0, vt0.c1)) COLLATE NOCASE WHERE (((0.33595722200819667)/(COALESCE(DISTINCT rt0.c4, 1.894499286E9, vt0.c1, rt0.c5, rt0.c4, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((0.33595722200819667)/(COALESCE(DISTINCT rt0.c4, 1.894499286E9, vt0.c1, rt0.c5, rt0.c4, rt0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON v0.c0 LEFT OUTER JOIN vt0 ON (rt0.c2 IN (v0.c0, vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON v0.c0 LEFT OUTER JOIN vt0 ON (rt0.c2 IN (v0.c0, vt0.c1)) COLLATE NOCASE WHERE (((0.33595722200819667)/(COALESCE(DISTINCT rt0.c4, 1.894499286E9, vt0.c1, rt0.c5, rt0.c4, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((0.33595722200819667)/(COALESCE(DISTINCT rt0.c4, 1.894499286E9, vt0.c1, rt0.c5, rt0.c4, rt0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON v0.c0 LEFT OUTER JOIN vt0 ON (rt0.c2 IN (v0.c0, vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON v0.c0 LEFT OUTER JOIN vt0 ON (rt0.c2 IN (v0.c0, vt0.c1)) COLLATE NOCASE WHERE (((0.33595722200819667)/(COALESCE(DISTINCT rt0.c4, 1.894499286E9, vt0.c1, rt0.c5, rt0.c4, rt0.c2))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c1))<=((vt0.c1))))) AND ((((vt0.c1)&(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((((vt0.c1))<=((vt0.c1))))) AND ((((vt0.c1)&(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c1))<=((vt0.c1))))) AND ((((vt0.c1)&(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((((vt0.c1))<=((vt0.c1))))) AND ((((vt0.c1)&(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((((vt0.c1))<=((vt0.c1))))) AND ((((vt0.c1)&(vt0.c1))))));
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN '288900749' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((IFNULL(DISTINCT v0.c0, v0.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN (((('-1813718023') IS TRUE))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN '288900749' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((IFNULL(DISTINCT v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((('-1813718023') IS TRUE))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN '288900749' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((IFNULL(DISTINCT v0.c0, v0.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN (((('-1813718023') IS TRUE))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN '288900749' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((IFNULL(DISTINCT v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((('-1813718023') IS TRUE))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN '288900749' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((IFNULL(DISTINCT v0.c0, v0.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN (((('-1813718023') IS TRUE))) AND (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))  NULLS LAST;
SELECT * FROM vt0 WHERE (0xffffffffe147a66d);
SELECT SUM(count) FROM (SELECT ((0Xffffffffe147a66d) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0xffffffffe147a66d);
SELECT SUM(count) FROM (SELECT ((0Xffffffffe147a66d) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0xffffffffe147a66d);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c3)))<(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN '' WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c4 END)) LEFT OUTER JOIN v0 ON ((TRIM(rt0.c2, rt0.c3)) BETWEEN (rt0.c3) AND ((rt0.c2 IN ()))) WHERE ((+ (((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c3)))<(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN '' WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c4 END)) LEFT OUTER JOIN v0 ON ((TRIM(rt0.c2, rt0.c3)) BETWEEN (rt0.c3) AND ((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c3)))<(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN '' WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c4 END)) LEFT OUTER JOIN v0 ON ((TRIM(rt0.c2, rt0.c3)) BETWEEN (rt0.c3) AND ((rt0.c2 IN ()))) WHERE ((+ (((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c3)))<(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN '' WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c4 END)) LEFT OUTER JOIN v0 ON ((TRIM(rt0.c2, rt0.c3)) BETWEEN (rt0.c3) AND ((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c3)))<(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN '' WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c4 END)) LEFT OUTER JOIN v0 ON ((TRIM(rt0.c2, rt0.c3)) BETWEEN (rt0.c3) AND ((rt0.c2 IN ()))) WHERE ((+ (((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)))OR(vt0.c1)))));
SELECT ALL * FROM v0 WHERE (((json_array_length(v0.c0))+(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((json_array_length(v0.c0))+(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((json_array_length(v0.c0))+(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((json_array_length(v0.c0))+(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((json_array_length(v0.c0))+(CAST(v0.c0 AS REAL))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0, v0 WHERE (0.5546319732996302);
SELECT SUM(count) FROM (SELECT ((0.5546319732996302) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (0.5546319732996302);
SELECT SUM(count) FROM (SELECT ((0.5546319732996302) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (0.5546319732996302);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((NULL) BETWEEN (-997985467) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS REAL) THEN x'' WHEN ((vt0.c0)-(vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c1))<>((vt0.c1))) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) WHEN ((vt0.c1)<<(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) WHEN (vt0.c1 IN ()) THEN CASE WHEN vt0.c0 THEN '288900749' END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) BETWEEN (-997985467) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS REAL) THEN x'' WHEN ((vt0.c0)-(vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c1))<>((vt0.c1))) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) WHEN ((vt0.c1)<<(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) WHEN (vt0.c1 IN ()) THEN CASE WHEN vt0.c0 THEN '288900749' END END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((NULL) BETWEEN (-997985467) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS REAL) THEN x'' WHEN ((vt0.c0)-(vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c1))<>((vt0.c1))) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) WHEN ((vt0.c1)<<(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) WHEN (vt0.c1 IN ()) THEN CASE WHEN vt0.c0 THEN '288900749' END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) BETWEEN (-997985467) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS REAL) THEN x'' WHEN ((vt0.c0)-(vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c1))<>((vt0.c1))) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) WHEN ((vt0.c1)<<(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) WHEN (vt0.c1 IN ()) THEN CASE WHEN vt0.c0 THEN '288900749' END END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((NULL) BETWEEN (-997985467) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS REAL) THEN x'' WHEN ((vt0.c0)-(vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((vt0.c1))<>((vt0.c1))) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))) WHEN ((vt0.c1)<<(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) WHEN (vt0.c1 IN ()) THEN CASE WHEN vt0.c0 THEN '288900749' END END ASC;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (+ (rt0.c4)) WHERE (((rt0.c2) NOT NULL) COLLATE BINARY) ORDER BY ((IFNULL(rt0.c4, rt0.c4))%((+ (0x6171adb3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (+ (rt0.c4)) ORDER BY ((IFNULL(rt0.c4, rt0.c4))%((+ (0X6171adb3)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (+ (rt0.c4)) WHERE (((rt0.c2) NOT NULL) COLLATE BINARY) ORDER BY ((IFNULL(rt0.c4, rt0.c4))%((+ (0x6171adb3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (+ (rt0.c4)) ORDER BY ((IFNULL(rt0.c4, rt0.c4))%((+ (0X6171adb3)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (+ (rt0.c4)) WHERE (((rt0.c2) NOT NULL) COLLATE BINARY) ORDER BY ((IFNULL(rt0.c4, rt0.c4))%((+ (0x6171adb3)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)|(vt0.c1)))<=('I^,')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)|(vt0.c1)))<=('I^,'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)|(vt0.c1)))<=('I^,')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)|(vt0.c1)))<=('I^,'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)|(vt0.c1)))<=('I^,')));
SELECT ALL * FROM vt0, v0 WHERE (((((TRIM(DISTINCT vt0.c0))AND(CAST(v0.c0 AS TEXT))))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt0.c0))AND(CAST(v0.c0 AS TEXT))))OR(vt0.c1))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((TRIM(DISTINCT vt0.c0))AND(CAST(v0.c0 AS TEXT))))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt0.c0))AND(CAST(v0.c0 AS TEXT))))OR(vt0.c1))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((TRIM(DISTINCT vt0.c0))AND(CAST(v0.c0 AS TEXT))))OR(vt0.c1)));
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((0.12943306767500107)OR(CAST(rt0.c2 AS BLOB))))AND(((rt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.12943306767500107)OR(CAST(rt0.c2 AS BLOB))))AND(((rt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((0.12943306767500107)OR(CAST(rt0.c2 AS BLOB))))AND(((rt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.12943306767500107)OR(CAST(rt0.c2 AS BLOB))))AND(((rt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((0.12943306767500107)OR(CAST(rt0.c2 AS BLOB))))AND(((rt0.c0)+(vt0.c0)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c5 THEN 'I^,' WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c0 END)OR((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c5 THEN 'I^,' WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c0 END)OR((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c5 THEN 'I^,' WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c0 END)OR((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c5 THEN 'I^,' WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c0 END)OR((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c5 THEN 'I^,' WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c0 END)OR((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))));
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c3)|(rt0.c3))) NOT NULL)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)|(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c1);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c3)|(rt0.c3))) NOT NULL)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)|(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c1);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c3)|(rt0.c3))) NOT NULL)) ORDER BY rt0.c1;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c5)<>(rt0.c0)) THEN (((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c4))) ELSE vt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c5)<>(rt0.c0)) THEN (((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c4))) ELSE vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c5)<>(rt0.c0)) THEN (((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c4))) ELSE vt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c5)<>(rt0.c0)) THEN (((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c4))) ELSE vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c5)<>(rt0.c0)) THEN (((rt0.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c4))) ELSE vt0.c1 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((('&{YHJ') IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((('&{YHJ') IS TRUE) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((('&{YHJ') IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((('&{YHJ') IS TRUE) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((('&{YHJ') IS TRUE) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((((rt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, x'')) AND ((v0.c0, x'', rt0.c5))))IS NOT(CAST(rt0.c2 AS NUMERIC)))) ORDER BY ((((CAST(rt0.c5 AS NUMERIC))AND(rt0.c1)))AND(CAST(rt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, x'')) AND ((v0.c0, x'', rt0.c5))))IS NOT(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((CAST(rt0.c5 AS NUMERIC))AND(rt0.c1)))AND(CAST(rt0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((((rt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, x'')) AND ((v0.c0, x'', rt0.c5))))IS NOT(CAST(rt0.c2 AS NUMERIC)))) ORDER BY ((((CAST(rt0.c5 AS NUMERIC))AND(rt0.c1)))AND(CAST(rt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, x'')) AND ((v0.c0, x'', rt0.c5))))IS NOT(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((CAST(rt0.c5 AS NUMERIC))AND(rt0.c1)))AND(CAST(rt0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((((rt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, x'')) AND ((v0.c0, x'', rt0.c5))))IS NOT(CAST(rt0.c2 AS NUMERIC)))) ORDER BY ((((CAST(rt0.c5 AS NUMERIC))AND(rt0.c1)))AND(CAST(rt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (((v0.c0, vt0.c1, rt0.c0)) NOT BETWEEN ((1755497255, ((rt0.c5) IS TRUE), ((((rt0.c4)AND(vt0.c1)))OR(vt0.c0)))) AND ((CAST(rt0.c4 AS NUMERIC), CASE rt0.c0  WHEN rt0.c3 THEN '' WHEN vt0.c1 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 END, (- (rt0.c5))))) WHERE (UNLIKELY(DISTINCT ((((rt0.c1)OR(rt0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((((rt0.c1)OR(rt0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (((v0.c0, vt0.c1, rt0.c0)) NOT BETWEEN ((1755497255, ((rt0.c5) IS TRUE), ((((rt0.c4)AND(vt0.c1)))OR(vt0.c0)))) AND ((CAST(rt0.c4 AS NUMERIC), CASE rt0.c0  WHEN rt0.c3 THEN '' WHEN vt0.c1 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 END, (- (rt0.c5))))));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (((v0.c0, vt0.c1, rt0.c0)) NOT BETWEEN ((1755497255, ((rt0.c5) IS TRUE), ((((rt0.c4)AND(vt0.c1)))OR(vt0.c0)))) AND ((CAST(rt0.c4 AS NUMERIC), CASE rt0.c0  WHEN rt0.c3 THEN '' WHEN vt0.c1 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 END, (- (rt0.c5))))) WHERE (UNLIKELY(DISTINCT ((((rt0.c1)OR(rt0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((((rt0.c1)OR(rt0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (((v0.c0, vt0.c1, rt0.c0)) NOT BETWEEN ((1755497255, ((rt0.c5) IS TRUE), ((((rt0.c4)AND(vt0.c1)))OR(vt0.c0)))) AND ((CAST(rt0.c4 AS NUMERIC), CASE rt0.c0  WHEN rt0.c3 THEN '' WHEN vt0.c1 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 END, (- (rt0.c5))))));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (((v0.c0, vt0.c1, rt0.c0)) NOT BETWEEN ((1755497255, ((rt0.c5) IS TRUE), ((((rt0.c4)AND(vt0.c1)))OR(vt0.c0)))) AND ((CAST(rt0.c4 AS NUMERIC), CASE rt0.c0  WHEN rt0.c3 THEN '' WHEN vt0.c1 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 END, (- (rt0.c5))))) WHERE (UNLIKELY(DISTINCT ((((rt0.c1)OR(rt0.c0)))AND(vt0.c1))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c3 END AS BLOB)) ORDER BY (((((rt0.c4)AND(vt0.c0)))OR(vt0.c0)) IN ()) ASC, (((+ (rt0.c2))) IS TRUE), ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 END)=(LIKE(rt0.c2, rt0.c4, 'J'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN rt0.c3 END AS BLOB)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((rt0.c4)AND(vt0.c0)))OR(vt0.c0)) IN ()) ASC, (((+ (rt0.c2))) IS TRUE), ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 END)==(LIKE(rt0.c2, rt0.c4, 'J'))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c3 END AS BLOB)) ORDER BY (((((rt0.c4)AND(vt0.c0)))OR(vt0.c0)) IN ()) ASC, (((+ (rt0.c2))) IS TRUE), ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 END)=(LIKE(rt0.c2, rt0.c4, 'J'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN rt0.c3 END AS BLOB)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((rt0.c4)AND(vt0.c0)))OR(vt0.c0)) IN ()) ASC, (((+ (rt0.c2))) IS TRUE), ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 END)==(LIKE(rt0.c2, rt0.c4, 'J'))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c3 END AS BLOB)) ORDER BY (((((rt0.c4)AND(vt0.c0)))OR(vt0.c0)) IN ()) ASC, (((+ (rt0.c2))) IS TRUE), ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 END)=(LIKE(rt0.c2, rt0.c4, 'J'))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON CAST((((rt0.c1))<=((rt0.c2))) AS TEXT) INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))==(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)) WHERE ((((+ (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CAST((((rt0.c1))<=((rt0.c2))) AS TEXT) INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON CAST((((rt0.c1))<=((rt0.c2))) AS TEXT) INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))==(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)) WHERE ((((+ (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CAST((((rt0.c1))<=((rt0.c2))) AS TEXT) INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON CAST((((rt0.c1))<=((rt0.c2))) AS TEXT) INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))==(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)) WHERE ((((+ (rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c4 END) NOT BETWEEN (((rt0.c1)&(rt0.c1))) AND ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c4 END) NOT BETWEEN (((rt0.c1)&(rt0.c1))) AND ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c4 END) NOT BETWEEN (((rt0.c1)&(rt0.c1))) AND ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c4 END) NOT BETWEEN (((rt0.c1)&(rt0.c1))) AND ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c4 END) NOT BETWEEN (((rt0.c1)&(rt0.c1))) AND ((rt0.c3 IN ()))));
SELECT * FROM vt0, v0 INNER JOIN rt0 ON ((((((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c2)))OR((((((((('-273511641')OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c5)))AND(rt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))) WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c4 AS NUMERIC), 0.5191955177283946));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CAST(rt0.c4 AS NUMERIC), 0.5191955177283946)) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((((((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c2)))OR((((((((('-273511641')OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c5)))AND(rt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))));
SELECT * FROM vt0, v0 INNER JOIN rt0 ON ((((((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c2)))OR((((((((('-273511641')OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c5)))AND(rt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))) WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c4 AS NUMERIC), 0.5191955177283946));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CAST(rt0.c4 AS NUMERIC), 0.5191955177283946)) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((((((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c2)))OR((((((((('-273511641')OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c5)))AND(rt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))));
SELECT * FROM vt0, v0 INNER JOIN rt0 ON ((((((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c2)))OR((((((((('-273511641')OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c5)))AND(rt0.c0)))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)))) WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c4 AS NUMERIC), 0.5191955177283946));
SELECT * FROM vt0 INNER JOIN v0 ON LOWER(DISTINCT (((v0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c4)))) RIGHT OUTER JOIN rt0 ON (('-1188842041')IS NOT(CASE WHEN 0.06781712960464747 THEN '' WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) WHERE ((('')+('(t-[')));
SELECT SUM(count) FROM (SELECT ALL (((('')+('(t-['))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON LOWER(DISTINCT (((v0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c4)))) RIGHT OUTER JOIN rt0 ON (('-1188842041')IS NOT(CASE WHEN 0.06781712960464747 THEN '' WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT * FROM vt0 INNER JOIN v0 ON LOWER(DISTINCT (((v0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c4)))) RIGHT OUTER JOIN rt0 ON (('-1188842041')IS NOT(CASE WHEN 0.06781712960464747 THEN '' WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) WHERE ((('')+('(t-[')));
SELECT SUM(count) FROM (SELECT ALL (((('')+('(t-['))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON LOWER(DISTINCT (((v0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c4)))) RIGHT OUTER JOIN rt0 ON (('-1188842041')IS NOT(CASE WHEN 0.06781712960464747 THEN '' WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT * FROM rt0, v0, vt0 WHERE ((((vt0.c1 IN ()))=((((vt0.c0, rt0.c5, v0.c0))>=((rt0.c2, rt0.c5, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))==((((vt0.c0, rt0.c5, v0.c0))>=((rt0.c2, rt0.c5, rt0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((((vt0.c1 IN ()))=((((vt0.c0, rt0.c5, v0.c0))>=((rt0.c2, rt0.c5, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))==((((vt0.c0, rt0.c5, v0.c0))>=((rt0.c2, rt0.c5, rt0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((((vt0.c1 IN ()))=((((vt0.c0, rt0.c5, v0.c0))>=((rt0.c2, rt0.c5, rt0.c1))))));
SELECT * FROM vt0, v0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, vt0.c1, v0.c0)) AND ((v0.c0, v0.c0, vt0.c1, v0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c1 IN ()))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, vt0.c1, v0.c0)) AND ((v0.c0, v0.c0, vt0.c1, v0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c1 IN ()))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))) ASC);
SELECT * FROM vt0, v0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, vt0.c1, v0.c0)) AND ((v0.c0, v0.c0, vt0.c1, v0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c1 IN ()))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, vt0.c1, v0.c0)) AND ((v0.c0, v0.c0, vt0.c1, v0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c1 IN ()))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))) ASC);
SELECT * FROM vt0, v0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, vt0.c1, v0.c0)) AND ((v0.c0, v0.c0, vt0.c1, v0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c1 IN ()))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))) ASC;
SELECT * FROM vt0 WHERE ((((((x'', vt0.c0, -1770181590, vt0.c1, vt0.c0))<>((NULL, vt0.c0, vt0.c0, vt0.c1, vt0.c0)))) NOT BETWEEN (NULL COLLATE NOCASE) AND ((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC, CASE WHEN 'unixepoch' THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((x'', vt0.c0, -1770181590, vt0.c1, vt0.c0))<>((NULL, vt0.c0, vt0.c0, vt0.c1, vt0.c0)))) NOT BETWEEN (NULL COLLATE NOCASE) AND ((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC, CASE WHEN 'unixepoch' THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((x'', vt0.c0, -1770181590, vt0.c1, vt0.c0))<>((NULL, vt0.c0, vt0.c0, vt0.c1, vt0.c0)))) NOT BETWEEN (NULL COLLATE NOCASE) AND ((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC, CASE WHEN 'unixepoch' THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((x'', vt0.c0, -1770181590, vt0.c1, vt0.c0))<>((NULL, vt0.c0, vt0.c0, vt0.c1, vt0.c0)))) NOT BETWEEN (NULL COLLATE NOCASE) AND ((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC, CASE WHEN 'unixepoch' THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((x'', vt0.c0, -1770181590, vt0.c1, vt0.c0))<>((NULL, vt0.c0, vt0.c0, vt0.c1, vt0.c0)))) NOT BETWEEN (NULL COLLATE NOCASE) AND ((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC, CASE WHEN 'unixepoch' THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((CASE vt0.c1  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END IN (((rt0.c5) ISNULL))));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c1  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END IN (((rt0.c5) ISNULL)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((CASE vt0.c1  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END IN (((rt0.c5) ISNULL))));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c1  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END IN (((rt0.c5) ISNULL)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((CASE vt0.c1  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END IN (((rt0.c5) ISNULL))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((~ (rt0.c1)))*(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))*(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((~ (rt0.c1)))*(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))*(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((~ (rt0.c1)))*(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END)));
SELECT ALL * FROM rt0, v0 WHERE (CAST(UPPER(rt0.c0) AS TEXT)) ORDER BY ('3_' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY ('3_' IN ()) ASC);
SELECT ALL * FROM rt0, v0 WHERE (CAST(UPPER(rt0.c0) AS TEXT)) ORDER BY ('3_' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY ('3_' IN ()) ASC);
SELECT ALL * FROM rt0, v0 WHERE (CAST(UPPER(rt0.c0) AS TEXT)) ORDER BY ('3_' IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((rt0.c2)/(rt0.c5)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)/(rt0.c5)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((rt0.c2)/(rt0.c5)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)/(rt0.c5)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((rt0.c2)/(rt0.c5)) AS NUMERIC));
SELECT * FROM rt0 WHERE (((rt0.c5) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c5) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c5) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c5) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c5) NOTNULL) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (-7.11773668E8) ORDER BY (~ (rt0.c1 COLLATE BINARY)), DATE(json_remove(rt0.c2, v0.c0), CASE rt0.c5  WHEN rt0.c0 THEN vt0.c1 WHEN 'UU' THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 ELSE rt0.c5 END, UPPER(DISTINCT rt0.c1), (vt0.c1 IN ()), rt0.c5 COLLATE BINARY)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-7.11773668E8) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (~ (rt0.c1 COLLATE BINARY)), DATE(json_remove(rt0.c2, v0.c0), CASE rt0.c5  WHEN rt0.c0 THEN vt0.c1 WHEN 'UU' THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 ELSE rt0.c5 END, UPPER(DISTINCT rt0.c1), (vt0.c1 IN ()), rt0.c5 COLLATE BINARY)  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (-7.11773668E8) ORDER BY (~ (rt0.c1 COLLATE BINARY)), DATE(json_remove(rt0.c2, v0.c0), CASE rt0.c5  WHEN rt0.c0 THEN vt0.c1 WHEN 'UU' THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 ELSE rt0.c5 END, UPPER(DISTINCT rt0.c1), (vt0.c1 IN ()), rt0.c5 COLLATE BINARY)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-7.11773668E8) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (~ (rt0.c1 COLLATE BINARY)), DATE(json_remove(rt0.c2, v0.c0), CASE rt0.c5  WHEN rt0.c0 THEN vt0.c1 WHEN 'UU' THEN rt0.c1 WHEN v0.c0 THEN vt0.c0 ELSE rt0.c5 END, UPPER(DISTINCT rt0.c1), (vt0.c1 IN ()), rt0.c5 COLLATE BINARY)  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((rt0.c4)AND(v0.c0)))OR(rt0.c1)))+((((v0.c0))!=((vt0.c0))))) CROSS JOIN vt0 ON ((rt0.c4)<<(0.9560008889779174)) WHERE (CASE CASE rt0.c0  WHEN v0.c0 THEN rt0.c5 END  WHEN (- (rt0.c4)) THEN LIKELIHOOD(DISTINCT x'', 0.9514837837361066) WHEN ((rt0.c3) BETWEEN (-1688204079) AND (vt0.c1)) THEN ((rt0.c0)&(rt0.c1)) WHEN CAST(rt0.c5 AS INTEGER) THEN vt0.c1 ELSE (((rt0.c1))<>((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c0  WHEN v0.c0 THEN rt0.c5 END  WHEN (- (rt0.c4)) THEN LIKELIHOOD(DISTINCT x'', 0.9514837837361066) WHEN ((rt0.c3) BETWEEN (-1688204079) AND (vt0.c1)) THEN ((rt0.c0)&(rt0.c1)) WHEN CAST(rt0.c5 AS INTEGER) THEN vt0.c1 ELSE (((rt0.c1))<>((rt0.c2))) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((rt0.c4)AND(v0.c0)))OR(rt0.c1)))+((((v0.c0))<>((vt0.c0))))) CROSS JOIN vt0 ON ((rt0.c4)<<(0.9560008889779174)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((rt0.c4)AND(v0.c0)))OR(rt0.c1)))+((((v0.c0))!=((vt0.c0))))) CROSS JOIN vt0 ON ((rt0.c4)<<(0.9560008889779174)) WHERE (CASE CASE rt0.c0  WHEN v0.c0 THEN rt0.c5 END  WHEN (- (rt0.c4)) THEN LIKELIHOOD(DISTINCT x'', 0.9514837837361066) WHEN ((rt0.c3) BETWEEN (-1688204079) AND (vt0.c1)) THEN ((rt0.c0)&(rt0.c1)) WHEN CAST(rt0.c5 AS INTEGER) THEN vt0.c1 ELSE (((rt0.c1))<>((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c0  WHEN v0.c0 THEN rt0.c5 END  WHEN (- (rt0.c4)) THEN LIKELIHOOD(DISTINCT x'', 0.9514837837361066) WHEN ((rt0.c3) BETWEEN (-1688204079) AND (vt0.c1)) THEN ((rt0.c0)&(rt0.c1)) WHEN CAST(rt0.c5 AS INTEGER) THEN vt0.c1 ELSE (((rt0.c1))<>((rt0.c2))) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((rt0.c4)AND(v0.c0)))OR(rt0.c1)))+((((v0.c0))<>((vt0.c0))))) CROSS JOIN vt0 ON ((rt0.c4)<<(0.9560008889779174)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN ())) ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5)) COLLATE RTRIM  NULLS FIRST, (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5)) COLLATE RTRIM  NULLS FIRST, (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN ())) ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5)) COLLATE RTRIM  NULLS FIRST, (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5)) COLLATE RTRIM  NULLS FIRST, (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN ())) ORDER BY ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5)) COLLATE RTRIM  NULLS FIRST, (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) IN ());
SELECT * FROM rt0, v0, vt0 WHERE (((x'67fabe9b')-(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((x'67fabe9b')-(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((x'67fabe9b')-(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((x'67fabe9b')-(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((x'67fabe9b')-(CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM v0 WHERE (((((((x'')AND(v0.c0)))OR(v0.c0)))>>(LTRIM(0.7700915306159489, v0.c0)))) ORDER BY x'f03f'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')AND(v0.c0)))OR(v0.c0)))>>(LTRIM(0.7700915306159489, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY x'f03f'  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((x'')AND(v0.c0)))OR(v0.c0)))>>(LTRIM(0.7700915306159489, v0.c0)))) ORDER BY x'f03f'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')AND(v0.c0)))OR(v0.c0)))>>(LTRIM(0.7700915306159489, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY x'f03f'  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((x'')AND(v0.c0)))OR(v0.c0)))>>(LTRIM(0.7700915306159489, v0.c0)))) ORDER BY x'f03f'  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))OR(x'3ae2'))) NOTNULL) WHERE (((((v0.c0))<=((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0))<=((v0.c0))) IN ())) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))OR(x'3ae2'))) NOTNULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))OR(x'3ae2'))) NOTNULL) WHERE (((((v0.c0))<=((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0))<=((v0.c0))) IN ())) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))OR(x'3ae2'))) NOTNULL));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))OR(x'3ae2'))) NOTNULL) WHERE (((((v0.c0))<=((v0.c0))) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE ('-1516255991') ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (('-1516255991') IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE ('-1516255991') ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (('-1516255991') IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE ('-1516255991') ORDER BY v0.c0;
SELECT ALL * FROM vt0 WHERE ((NULLIF(vt0.c1, vt0.c1) IN (CAST(vt0.c0 AS INTEGER)))) ORDER BY (((((vt0.c1) IS FALSE)))>=((CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(vt0.c1, vt0.c1) IN (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) IS FALSE)))>=((CAST(vt0.c1 AS BLOB)))));
SELECT ALL * FROM vt0 WHERE ((NULLIF(vt0.c1, vt0.c1) IN (CAST(vt0.c0 AS INTEGER)))) ORDER BY (((((vt0.c1) IS FALSE)))>=((CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(vt0.c1, vt0.c1) IN (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) IS FALSE)))>=((CAST(vt0.c1 AS BLOB)))));
SELECT ALL * FROM vt0 WHERE ((NULLIF(vt0.c1, vt0.c1) IN (CAST(vt0.c0 AS INTEGER)))) ORDER BY (((((vt0.c1) IS FALSE)))>=((CAST(vt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c3) ORDER BY (((((rt0.c5) NOT BETWEEN (v0.c0) AND (rt0.c5)), ((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))>=((((rt0.c1) NOT NULL), ABS(v0.c0), ((v0.c0)AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c5) NOT BETWEEN (v0.c0) AND (rt0.c5)), ((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))>=((((rt0.c1) NOT NULL), ABS(v0.c0), ((v0.c0)AND(rt0.c4))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c3) ORDER BY (((((rt0.c5) NOT BETWEEN (v0.c0) AND (rt0.c5)), ((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))>=((((rt0.c1) NOT NULL), ABS(v0.c0), ((v0.c0)AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c5) NOT BETWEEN (v0.c0) AND (rt0.c5)), ((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))>=((((rt0.c1) NOT NULL), ABS(v0.c0), ((v0.c0)AND(rt0.c4))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c3) ORDER BY (((((rt0.c5) NOT BETWEEN (v0.c0) AND (rt0.c5)), ((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))>=((((rt0.c1) NOT NULL), ABS(v0.c0), ((v0.c0)AND(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)) AS BLOB)) ORDER BY (((((rt0.c4 IN ()))AND(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)))))AND('-997985467'));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c4 IN ()))AND(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)))))AND('-997985467')));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)) AS BLOB)) ORDER BY (((((rt0.c4 IN ()))AND(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)))))AND('-997985467'));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c4 IN ()))AND(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)))))AND('-997985467')));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (NULLIF(DISTINCT rt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY rt0.c2 DESC  NULLS LAST, CAST(((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c2)))AND(vt0.c1)) AS INTEGER), (CAST(v0.c0 AS NUMERIC) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT rt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST, CAST(((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c2)))AND(vt0.c1)) AS INTEGER), (CAST(v0.c0 AS NUMERIC) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (NULLIF(DISTINCT rt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY rt0.c2 DESC  NULLS LAST, CAST(((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c2)))AND(vt0.c1)) AS INTEGER), (CAST(v0.c0 AS NUMERIC) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT rt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST, CAST(((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c2)))AND(vt0.c1)) AS INTEGER), (CAST(v0.c0 AS NUMERIC) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (NULLIF(DISTINCT rt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY rt0.c2 DESC  NULLS LAST, CAST(((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c5)))OR(rt0.c2)))AND(vt0.c1)) AS INTEGER), (CAST(v0.c0 AS NUMERIC) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE (((vt0.c0))>((NULL)))  WHEN (NULL IN ()) THEN ((((rt0.c3)OR(3.97618705E8)))AND(vt0.c1)) WHEN CASE WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 END THEN rt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN '1570815940' THEN rt0.c4 ELSE vt0.c0 END THEN CASE WHEN '2100465197' THEN rt0.c5 WHEN rt0.c5 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))>((NULL)))  WHEN (NULL IN ()) THEN ((((rt0.c3)OR(3.97618705E8)))AND(vt0.c1)) WHEN CASE WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 END THEN rt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN '1570815940' THEN rt0.c4 ELSE vt0.c0 END THEN CASE WHEN '2100465197' THEN rt0.c5 WHEN rt0.c5 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE (((vt0.c0))>((NULL)))  WHEN (NULL IN ()) THEN ((((rt0.c3)OR(3.97618705E8)))AND(vt0.c1)) WHEN CASE WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 END THEN rt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN '1570815940' THEN rt0.c4 ELSE vt0.c0 END THEN CASE WHEN '2100465197' THEN rt0.c5 WHEN rt0.c5 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))>((NULL)))  WHEN (NULL IN ()) THEN ((((rt0.c3)OR(3.97618705E8)))AND(vt0.c1)) WHEN CASE WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 END THEN rt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN '1570815940' THEN rt0.c4 ELSE vt0.c0 END THEN CASE WHEN '2100465197' THEN rt0.c5 WHEN rt0.c5 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE (((vt0.c0))>((NULL)))  WHEN (NULL IN ()) THEN ((((rt0.c3)OR(3.97618705E8)))AND(vt0.c1)) WHEN CASE WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c1 END THEN rt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN '1570815940' THEN rt0.c4 ELSE vt0.c0 END THEN CASE WHEN '2100465197' THEN rt0.c5 WHEN rt0.c5 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END END);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE NOCASE) ORDER BY CASE HEX(vt0.c1)  WHEN (vt0.c1 IN (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN NULLIF(vt0.c0, vt0.c1) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c1 END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE HEX(vt0.c1)  WHEN (vt0.c1 IN (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN NULLIF(vt0.c0, vt0.c1) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c1 END);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE NOCASE) ORDER BY CASE HEX(vt0.c1)  WHEN (vt0.c1 IN (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN NULLIF(vt0.c0, vt0.c1) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c1 END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE HEX(vt0.c1)  WHEN (vt0.c1 IN (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN NULLIF(vt0.c0, vt0.c1) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c1 END);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE NOCASE) ORDER BY CASE HEX(vt0.c1)  WHEN (vt0.c1 IN (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN NULLIF(vt0.c0, vt0.c1) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c1 END;
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS BLOB), ((x'')/(v0.c0)), (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, 0.8731629600723879)))))<((((v0.c0) IS FALSE), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0, 727817710, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('tf\rpB[M', v0.c0, v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS BLOB), ((x'')/(v0.c0)), (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, 0.8731629600723879)))))<((((v0.c0) IS FALSE), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0, 727817710, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('tf\rpB[M', v0.c0, v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS BLOB), ((x'')/(v0.c0)), (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, 0.8731629600723879)))))<((((v0.c0) IS FALSE), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0, 727817710, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('tf\rpB[M', v0.c0, v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS BLOB), ((x'')/(v0.c0)), (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, 0.8731629600723879)))))<((((v0.c0) IS FALSE), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0, 727817710, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('tf\rpB[M', v0.c0, v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS BLOB), ((x'')/(v0.c0)), (((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, 0.8731629600723879)))))<((((v0.c0) IS FALSE), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0, 727817710, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND (('tf\rpB[M', v0.c0, v0.c0)))))));
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c5, rt0.c1, rt0.c1, rt0.c2, rt0.c5)) BETWEEN ((((rt0.c4)IS NOT(NULL)), ((v0.c0)||(rt0.c2)), v0.c0, (((rt0.c3))<=((rt0.c2))), ((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.4320612270507017)), ((rt0.c0) ISNULL), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(rt0.c2 AS BLOB), ((rt0.c5)&(rt0.c0)))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (rt0.c5) AND (v0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5, rt0.c1, rt0.c1, rt0.c2, rt0.c5)) BETWEEN ((((rt0.c4)IS NOT(NULL)), ((v0.c0)||(rt0.c2)), v0.c0, (((rt0.c3))<=((rt0.c2))), ((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.4320612270507017)), ((rt0.c0) ISNULL), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(rt0.c2 AS BLOB), ((rt0.c5)&(rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (rt0.c5) AND (v0.c0)) AS TEXT) DESC);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c5, rt0.c1, rt0.c1, rt0.c2, rt0.c5)) BETWEEN ((((rt0.c4)IS NOT(NULL)), ((v0.c0)||(rt0.c2)), v0.c0, (((rt0.c3))<=((rt0.c2))), ((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.4320612270507017)), ((rt0.c0) ISNULL), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(rt0.c2 AS BLOB), ((rt0.c5)&(rt0.c0)))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (rt0.c5) AND (v0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5, rt0.c1, rt0.c1, rt0.c2, rt0.c5)) BETWEEN ((((rt0.c4)IS NOT(NULL)), ((v0.c0)||(rt0.c2)), v0.c0, (((rt0.c3))<=((rt0.c2))), ((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.4320612270507017)), ((rt0.c0) ISNULL), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(rt0.c2 AS BLOB), ((rt0.c5)&(rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (rt0.c5) AND (v0.c0)) AS TEXT) DESC);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c5, rt0.c1, rt0.c1, rt0.c2, rt0.c5)) BETWEEN ((((rt0.c4)IS NOT(NULL)), ((v0.c0)||(rt0.c2)), v0.c0, (((rt0.c3))<=((rt0.c2))), ((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.4320612270507017)), ((rt0.c0) ISNULL), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CAST(rt0.c2 AS BLOB), ((rt0.c5)&(rt0.c0)))))) ORDER BY CAST(((v0.c0) NOT BETWEEN (rt0.c5) AND (v0.c0)) AS TEXT) DESC;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)&(vt0.c1)) THEN ((vt0.c1) NOT NULL) ELSE (((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c0, vt0.c1, NULL))) END) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)&(vt0.c1)) THEN ((vt0.c1) NOT NULL) ELSE (((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c0, vt0.c1, NULL))) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)&(vt0.c1)) THEN ((vt0.c1) NOT NULL) ELSE (((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c0, vt0.c1, NULL))) END) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)&(vt0.c1)) THEN ((vt0.c1) NOT NULL) ELSE (((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c0, vt0.c1, NULL))) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)&(vt0.c1)) THEN ((vt0.c1) NOT NULL) ELSE (((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c0, vt0.c1, NULL))) END) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0.3563796403896904);
SELECT SUM(count) FROM (SELECT ((0.3563796403896904) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0.3563796403896904);
SELECT SUM(count) FROM (SELECT ((0.3563796403896904) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0.3563796403896904);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (-2028422734))) ORDER BY ((((v0.c0) IS FALSE))==(((NULL) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (-2028422734))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE))=(((NULL) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (-2028422734))) ORDER BY ((((v0.c0) IS FALSE))==(((NULL) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (-2028422734))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE))=(((NULL) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (-2028422734))) ORDER BY ((((v0.c0) IS FALSE))==(((NULL) NOT NULL))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0, vt0 WHERE (((NULLIF(DISTINCT v0.c0, 0.18289918260912852))IS NOT(((rt0.c1) IS FALSE)))) ORDER BY ((vt0.c1)OR(rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT v0.c0, 0.18289918260912852))IS NOT(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((vt0.c1)OR(rt0.c3))  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((NULLIF(DISTINCT v0.c0, 0.18289918260912852))IS NOT(((rt0.c1) IS FALSE)))) ORDER BY ((vt0.c1)OR(rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT v0.c0, 0.18289918260912852))IS NOT(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((vt0.c1)OR(rt0.c3))  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((NULLIF(DISTINCT v0.c0, 0.18289918260912852))IS NOT(((rt0.c1) IS FALSE)))) ORDER BY ((vt0.c1)OR(rt0.c3))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, '-1797456113', rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c0, '3h')))) NOT BETWEEN (((rt0.c2)/(0.8999440007599891))) AND (((rt0.c5) IS TRUE)))) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END IN (rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, '-1797456113', rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c0, '3h')))) NOT BETWEEN (((rt0.c2)/(0.8999440007599891))) AND (((rt0.c5) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END IN (rt0.c3))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, '-1797456113', rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c0, '3h')))) NOT BETWEEN (((rt0.c2)/(0.8999440007599891))) AND (((rt0.c5) IS TRUE)))) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END IN (rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, '-1797456113', rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c0, '3h')))) NOT BETWEEN (((rt0.c2)/(0.8999440007599891))) AND (((rt0.c5) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END IN (rt0.c3))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, '-1797456113', rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c0, '3h')))) NOT BETWEEN (((rt0.c2)/(0.8999440007599891))) AND (((rt0.c5) IS TRUE)))) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END IN (rt0.c3))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT (~ (rt0.c2)), (((rt0.c4, rt0.c0, rt0.c3))>((rt0.c5, NULL, rt0.c4))))) ORDER BY (((((rt0.c5 IN (rt0.c4)))OR(((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((rt0.c3)<=(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (~ (rt0.c2)), (((rt0.c4, rt0.c0, rt0.c3))>((rt0.c5, NULL, rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c5 IN (rt0.c4)))OR(((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((rt0.c3)<=(rt0.c4)))) ASC);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT (~ (rt0.c2)), (((rt0.c4, rt0.c0, rt0.c3))>((rt0.c5, NULL, rt0.c4))))) ORDER BY (((((rt0.c5 IN (rt0.c4)))OR(((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((rt0.c3)<=(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (~ (rt0.c2)), (((rt0.c4, rt0.c0, rt0.c3))>((rt0.c5, NULL, rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c5 IN (rt0.c4)))OR(((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((rt0.c3)<=(rt0.c4)))) ASC);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT (~ (rt0.c2)), (((rt0.c4, rt0.c0, rt0.c3))>((rt0.c5, NULL, rt0.c4))))) ORDER BY (((((rt0.c5 IN (rt0.c4)))OR(((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((rt0.c3)<=(rt0.c4)))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL)) ORDER BY '-1797456113'  NULLS LAST, ((((v0.c0)<(v0.c0))) BETWEEN ('') AND (CAST(v0.c0 AS REAL))), ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY '-1797456113'  NULLS LAST, ((((v0.c0)<(v0.c0))) BETWEEN ('') AND (CAST(v0.c0 AS REAL))), ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL)) ORDER BY '-1797456113'  NULLS LAST, ((((v0.c0)<(v0.c0))) BETWEEN ('') AND (CAST(v0.c0 AS REAL))), ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY '-1797456113'  NULLS LAST, ((((v0.c0)<(v0.c0))) BETWEEN ('') AND (CAST(v0.c0 AS REAL))), ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL)) ORDER BY '-1797456113'  NULLS LAST, ((((v0.c0)<(v0.c0))) BETWEEN ('') AND (CAST(v0.c0 AS REAL))), ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC;
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))>(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))>(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))>(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))>(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))>(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((0xffffffff8f80d4f7) NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffff8f80d4f7) NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((0xffffffff8f80d4f7) NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffff8f80d4f7) NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((0xffffffff8f80d4f7) NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE));
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (NULL);
SELECT ALL * FROM v0, vt0 WHERE ('') ORDER BY TRIM(DISTINCT CASE WHEN 'ZO' THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN -1.549662552E9 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((v0.c0)-('0.18289918260912852')))  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(LIKELIHOOD(vt0.c1, 0.020689925431288447))) ASC  NULLS LAST, CASE ((((((((((((0.1159631626866775)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(0X346633b9)))AND(vt0.c0)))OR(v0.c0))  WHEN ABS(vt0.c1) THEN ((((((((NULL)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, vt0 ORDER BY TRIM(DISTINCT CASE WHEN 'ZO' THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN -1.549662552E9 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((v0.c0)-('0.18289918260912852')))  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(LIKELIHOOD(vt0.c1, 0.020689925431288447))) ASC  NULLS LAST, CASE ((((((((((((0.1159631626866775)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(0X346633b9)))AND(vt0.c0)))OR(v0.c0))  WHEN ABS(vt0.c1) THEN ((((((((NULL)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ('') ORDER BY TRIM(DISTINCT CASE WHEN 'ZO' THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN -1.549662552E9 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((v0.c0)-('0.18289918260912852')))  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(LIKELIHOOD(vt0.c1, 0.020689925431288447))) ASC  NULLS LAST, CASE ((((((((((((0.1159631626866775)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(0X346633b9)))AND(vt0.c0)))OR(v0.c0))  WHEN ABS(vt0.c1) THEN ((((((((NULL)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, vt0 ORDER BY TRIM(DISTINCT CASE WHEN 'ZO' THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN -1.549662552E9 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((v0.c0)-('0.18289918260912852')))  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(LIKELIHOOD(vt0.c1, 0.020689925431288447))) ASC  NULLS LAST, CASE ((((((((((((0.1159631626866775)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(0X346633b9)))AND(vt0.c0)))OR(v0.c0))  WHEN ABS(vt0.c1) THEN ((((((((NULL)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ('') ORDER BY TRIM(DISTINCT CASE WHEN 'ZO' THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN -1.549662552E9 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((v0.c0)-('0.18289918260912852')))  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(LIKELIHOOD(vt0.c1, 0.020689925431288447))) ASC  NULLS LAST, CASE ((((((((((((0.1159631626866775)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(0X346633b9)))AND(vt0.c0)))OR(v0.c0))  WHEN ABS(vt0.c1) THEN ((((((((NULL)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END  NULLS LAST;
SELECT * FROM vt0 WHERE ((((NULL, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c1)&(vt0.c1)), '', vt0.c0 COLLATE NOCASE)) AND ((NULL, x'8e6f252e', CAST(vt0.c1 AS INTEGER))))) ORDER BY TRIM(((vt0.c1)|(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c1)&(vt0.c1)), '', vt0.c0 COLLATE NOCASE)) AND ((NULL, x'8e6f252e', CAST(vt0.c1 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(((vt0.c1)|(vt0.c1))) DESC);
SELECT * FROM vt0 WHERE ((((NULL, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c1)&(vt0.c1)), '', vt0.c0 COLLATE NOCASE)) AND ((NULL, x'8e6f252e', CAST(vt0.c1 AS INTEGER))))) ORDER BY TRIM(((vt0.c1)|(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c1)&(vt0.c1)), '', vt0.c0 COLLATE NOCASE)) AND ((NULL, x'8e6f252e', CAST(vt0.c1 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(((vt0.c1)|(vt0.c1))) DESC);
SELECT * FROM vt0 WHERE ((((NULL, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c1)&(vt0.c1)), '', vt0.c0 COLLATE NOCASE)) AND ((NULL, x'8e6f252e', CAST(vt0.c1 AS INTEGER))))) ORDER BY TRIM(((vt0.c1)|(vt0.c1))) DESC;
SELECT ALL * FROM vt0 WHERE ('') ORDER BY (((vt0.c0 IN (vt0.c1))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1))) NOTNULL) DESC);
SELECT ALL * FROM vt0 WHERE ('') ORDER BY (((vt0.c0 IN (vt0.c1))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1))) NOTNULL) DESC);
SELECT ALL * FROM vt0 WHERE ('') ORDER BY (((vt0.c0 IN (vt0.c1))) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (load_extension(((vt0.c0)<(rt0.c0)), (((vt0.c1))==((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((load_extension(((vt0.c0)<(rt0.c0)), (((vt0.c1))==((vt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (load_extension(((vt0.c0)<(rt0.c0)), (((vt0.c1))==((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((load_extension(((vt0.c0)<(rt0.c0)), (((vt0.c1))==((vt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM rt0, v0 WHERE (CASE rt0.c5 COLLATE BINARY  WHEN (((v0.c0, rt0.c3, rt0.c2))<((v0.c0, v0.c0, rt0.c0))) THEN ((rt0.c0)>(rt0.c3)) WHEN CASE rt0.c4  WHEN v0.c0 THEN rt0.c3 END THEN ((v0.c0)IS(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(NULL AS TEXT) WHEN 'h\n' THEN ((v0.c0) NOTNULL) WHEN ((rt0.c3)/(-114224703)) THEN rt0.c5 COLLATE NOCASE ELSE (((rt0.c5)) BETWEEN ((rt0.c3)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c5 COLLATE BINARY  WHEN (((v0.c0, rt0.c3, rt0.c2))<((v0.c0, v0.c0, rt0.c0))) THEN ((rt0.c0)>(rt0.c3)) WHEN CASE rt0.c4  WHEN v0.c0 THEN rt0.c3 END THEN ((v0.c0)IS(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(NULL AS TEXT) WHEN 'h\n' THEN ((v0.c0) NOTNULL) WHEN ((rt0.c3)/(-114224703)) THEN rt0.c5 COLLATE NOCASE ELSE (((rt0.c5)) BETWEEN ((rt0.c3)) AND ((v0.c0))) END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE rt0.c5 COLLATE BINARY  WHEN (((v0.c0, rt0.c3, rt0.c2))<((v0.c0, v0.c0, rt0.c0))) THEN ((rt0.c0)>(rt0.c3)) WHEN CASE rt0.c4  WHEN v0.c0 THEN rt0.c3 END THEN ((v0.c0)IS(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(NULL AS TEXT) WHEN 'h\n' THEN ((v0.c0) NOTNULL) WHEN ((rt0.c3)/(-114224703)) THEN rt0.c5 COLLATE NOCASE ELSE (((rt0.c5)) BETWEEN ((rt0.c3)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c5 COLLATE BINARY  WHEN (((v0.c0, rt0.c3, rt0.c2))<((v0.c0, v0.c0, rt0.c0))) THEN ((rt0.c0)>(rt0.c3)) WHEN CASE rt0.c4  WHEN v0.c0 THEN rt0.c3 END THEN ((v0.c0)IS(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(NULL AS TEXT) WHEN 'h\n' THEN ((v0.c0) NOTNULL) WHEN ((rt0.c3)/(-114224703)) THEN rt0.c5 COLLATE NOCASE ELSE (((rt0.c5)) BETWEEN ((rt0.c3)) AND ((v0.c0))) END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE rt0.c5 COLLATE BINARY  WHEN (((v0.c0, rt0.c3, rt0.c2))<((v0.c0, v0.c0, rt0.c0))) THEN ((rt0.c0)>(rt0.c3)) WHEN CASE rt0.c4  WHEN v0.c0 THEN rt0.c3 END THEN ((v0.c0)IS(rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN CAST(NULL AS TEXT) WHEN 'h\n' THEN ((v0.c0) NOTNULL) WHEN ((rt0.c3)/(-114224703)) THEN rt0.c5 COLLATE NOCASE ELSE (((rt0.c5)) BETWEEN ((rt0.c3)) AND ((v0.c0))) END);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (rt0.c2) AND (0.682243664842086)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3) NOT BETWEEN (rt0.c2) AND (0.682243664842086))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (rt0.c2) AND (0.682243664842086)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3) NOT BETWEEN (rt0.c2) AND (0.682243664842086))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (rt0.c2) AND (0.682243664842086)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (x'')))<>(((v0.c0)||(x'381e7f7a')))));
SELECT SUM(count) FROM (SELECT (((((~ (x'')))!=(((v0.c0)||(x'381e7f7a'))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (x'')))<>(((v0.c0)||(x'381e7f7a')))));
SELECT SUM(count) FROM (SELECT (((((~ (x'')))!=(((v0.c0)||(x'381e7f7a'))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (x'')))<>(((v0.c0)||(x'381e7f7a')))));
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (NOT (((vt0.c0)IS NOT(rt0.c3)))) WHERE ((((vt0.c1 IN ()))GLOB(MIN(rt0.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))GLOB(MIN(rt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (NOT (((vt0.c0)IS NOT(rt0.c3)))));
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (NOT (((vt0.c0)IS NOT(rt0.c3)))) WHERE ((((vt0.c1 IN ()))GLOB(MIN(rt0.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))GLOB(MIN(rt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (NOT (((vt0.c0)IS NOT(rt0.c3)))));
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (NOT (((vt0.c0)IS NOT(rt0.c3)))) WHERE ((((vt0.c1 IN ()))GLOB(MIN(rt0.c1, vt0.c0))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0) NOTNULL) AS INTEGER)) ORDER BY ((UNLIKELY(DISTINCT vt0.c1)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((UNLIKELY(DISTINCT vt0.c1)) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0) NOTNULL) AS INTEGER)) ORDER BY ((UNLIKELY(DISTINCT vt0.c1)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((UNLIKELY(DISTINCT vt0.c1)) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0) NOTNULL) AS INTEGER)) ORDER BY ((UNLIKELY(DISTINCT vt0.c1)) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)OR(((vt0.c1)LIKE(vt0.c1)))))AND(((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))) WHERE (CASE 0.29955501795453254  WHEN ((0.6338844590073425) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.29955501795453254  WHEN ((0.6338844590073425) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)OR(((vt0.c1)LIKE(vt0.c1)))))AND(((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)OR(((vt0.c1)LIKE(vt0.c1)))))AND(((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))) WHERE (CASE 0.29955501795453254  WHEN ((0.6338844590073425) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.29955501795453254  WHEN ((0.6338844590073425) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)OR(((vt0.c1)LIKE(vt0.c1)))))AND(((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)OR(((vt0.c1)LIKE(vt0.c1)))))AND(((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))) WHERE (CASE 0.29955501795453254  WHEN ((0.6338844590073425) NOT NULL) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) END);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((vt0.c1) ISNULL) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (((vt0.c0) IS FALSE) IN ()) WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 ELSE v0.c0 END))>=((((rt0.c5) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 ELSE v0.c0 END))>=((((rt0.c5) ISNULL))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((vt0.c1) ISNULL) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (((vt0.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((vt0.c1) ISNULL) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (((vt0.c0) IS FALSE) IN ()) WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 ELSE v0.c0 END))>=((((rt0.c5) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 ELSE v0.c0 END))>=((((rt0.c5) ISNULL))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((vt0.c1) ISNULL) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (((vt0.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((vt0.c1) ISNULL) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (((vt0.c0) IS FALSE) IN ()) WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 ELSE v0.c0 END))>=((((rt0.c5) ISNULL)))));
SELECT * FROM rt0 WHERE ((((((rt0.c1)<=(rt0.c3))))>((((rt0.c0) NOTNULL))))) ORDER BY (((NOT (rt0.c2)))<=(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<=(rt0.c3))))>((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c2)))<=(rt0.c2)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c1)<=(rt0.c3))))>((((rt0.c0) NOTNULL))))) ORDER BY (((NOT (rt0.c2)))<=(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<=(rt0.c3))))>((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c2)))<=(rt0.c2)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c1)<=(rt0.c3))))>((((rt0.c0) NOTNULL))))) ORDER BY (((NOT (rt0.c2)))<=(rt0.c2)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ('2100465197');
SELECT SUM(count) FROM (SELECT (('2100465197') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('2100465197');
SELECT SUM(count) FROM (SELECT (('2100465197') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('2100465197');
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c5)))AND(((rt0.c4) IS TRUE))))AND(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c5)))AND(((rt0.c4) IS TRUE))))AND(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c5)))AND(((rt0.c4) IS TRUE))))AND(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c5)))AND(((rt0.c4) IS TRUE))))AND(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c5)))AND(((rt0.c4) IS TRUE))))AND(((rt0.c3) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((NULL IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)==(((v0.c0)=(v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)==(((v0.c0)=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)==(((v0.c0)=(v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)==(((v0.c0)=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)==(((v0.c0)=(v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER)) ORDER BY (((rt0.c1, rt0.c3, rt0.c0, rt0.c5, rt0.c3)) BETWEEN ((((rt0.c0)IS(rt0.c3)), ((vt0.c1)*(rt0.c0)), CAST(rt0.c5 AS NUMERIC), vt0.c1 COLLATE RTRIM, (((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) AND (((((0.8797109482768247))<((rt0.c0))), (+ (rt0.c2)), ((((((((rt0.c5)AND(rt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(NULL)), ((0.7871128002413252) IS TRUE), rt0.c3)));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1, rt0.c3, rt0.c0, rt0.c5, rt0.c3)) BETWEEN ((((rt0.c0)IS(rt0.c3)), ((vt0.c1)*(rt0.c0)), CAST(rt0.c5 AS NUMERIC), vt0.c1 COLLATE RTRIM, (((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) AND (((((0.8797109482768247))<((rt0.c0))), (+ (rt0.c2)), ((((((((rt0.c5)AND(rt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(NULL)), ((0.7871128002413252) IS TRUE), rt0.c3))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER)) ORDER BY (((rt0.c1, rt0.c3, rt0.c0, rt0.c5, rt0.c3)) BETWEEN ((((rt0.c0)IS(rt0.c3)), ((vt0.c1)*(rt0.c0)), CAST(rt0.c5 AS NUMERIC), vt0.c1 COLLATE RTRIM, (((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) AND (((((0.8797109482768247))<((rt0.c0))), (+ (rt0.c2)), ((((((((rt0.c5)AND(rt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(NULL)), ((0.7871128002413252) IS TRUE), rt0.c3)));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1, rt0.c3, rt0.c0, rt0.c5, rt0.c3)) BETWEEN ((((rt0.c0)IS(rt0.c3)), ((vt0.c1)*(rt0.c0)), CAST(rt0.c5 AS NUMERIC), vt0.c1 COLLATE RTRIM, (((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) AND (((((0.8797109482768247))<((rt0.c0))), (+ (rt0.c2)), ((((((((rt0.c5)AND(rt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(NULL)), ((0.7871128002413252) IS TRUE), rt0.c3))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER)) ORDER BY (((rt0.c1, rt0.c3, rt0.c0, rt0.c5, rt0.c3)) BETWEEN ((((rt0.c0)IS(rt0.c3)), ((vt0.c1)*(rt0.c0)), CAST(rt0.c5 AS NUMERIC), vt0.c1 COLLATE RTRIM, (((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) AND (((((0.8797109482768247))<((rt0.c0))), (+ (rt0.c2)), ((((((((rt0.c5)AND(rt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(NULL)), ((0.7871128002413252) IS TRUE), rt0.c3)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ (vt0.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY '1813600790' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY '1813600790' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ (vt0.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY '1813600790' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY '1813600790' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ (vt0.c1)) COLLATE BINARY COLLATE NOCASE) ORDER BY '1813600790' DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE WHEN NULL THEN (rt0.c1 IN ()) ELSE 1570815940 END) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN (rt0.c1 IN ()) ELSE 1570815940 END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE WHEN NULL THEN (rt0.c1 IN ()) ELSE 1570815940 END) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN (rt0.c1 IN ()) ELSE 1570815940 END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE WHEN NULL THEN (rt0.c1 IN ()) ELSE 1570815940 END) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY CAST(NULL AS NUMERIC) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST(NULL AS NUMERIC) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY CAST(NULL AS NUMERIC) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST(NULL AS NUMERIC) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY CAST(NULL AS NUMERIC) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1)))>>(((((rt0.c1)AND(rt0.c5)))OR(rt0.c2))))) ORDER BY (((+ (rt0.c5)))>=(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN (rt0.c1)))>>(((((rt0.c1)AND(rt0.c5)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c5)))>=(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1)))>>(((((rt0.c1)AND(rt0.c5)))OR(rt0.c2))))) ORDER BY (((+ (rt0.c5)))>=(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN (rt0.c1)))>>(((((rt0.c1)AND(rt0.c5)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c5)))>=(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1)))>>(((((rt0.c1)AND(rt0.c5)))OR(rt0.c2))))) ORDER BY (((+ (rt0.c5)))>=(CAST(rt0.c1 AS INTEGER)));
SELECT * FROM rt0, v0 WHERE ((' 	940T3370566626812769584:1471-1327-Q' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((' 	940T3370566626812769584:1471-1327-Q' IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((' 	940T3370566626812769584:1471-1327-Q' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((' 	940T3370566626812769584:1471-1327-Q' IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((' 	940T3370566626812769584:1471-1327-Q' IN ()));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((vt0.c1)=(((rt0.c2) NOTNULL)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1)+(rt0.c0)))) AND (((((rt0.c1))<>((NULL))))))  NULLS LAST, 'R>.Q0cN|3', ((rt0.c5)>(v0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)=(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1)+(rt0.c0)))) AND (((((rt0.c1))<>((NULL))))))  NULLS LAST, 'R>.Q0cN|3', ((rt0.c5)>(v0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((vt0.c1)=(((rt0.c2) NOTNULL)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1)+(rt0.c0)))) AND (((((rt0.c1))<>((NULL))))))  NULLS LAST, 'R>.Q0cN|3', ((rt0.c5)>(v0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)=(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1)+(rt0.c0)))) AND (((((rt0.c1))<>((NULL))))))  NULLS LAST, 'R>.Q0cN|3', ((rt0.c5)>(v0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((vt0.c1)=(((rt0.c2) NOTNULL)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1)+(rt0.c0)))) AND (((((rt0.c1))<>((NULL))))))  NULLS LAST, 'R>.Q0cN|3', ((rt0.c5)>(v0.c0)) COLLATE RTRIM ASC;
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND (((((rt0.c5)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND (((((rt0.c5)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND (((((rt0.c5)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND (((((rt0.c5)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND (((((rt0.c5)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c2) NOTNULL))|(((rt0.c1) IS FALSE))) WHERE ((((vt0.c1 IN (rt0.c0, rt0.c5)))LIKE(json_type(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (rt0.c0, rt0.c5)))LIKE(json_type(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c2) NOTNULL))|(((rt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c2) NOTNULL))|(((rt0.c1) IS FALSE))) WHERE ((((vt0.c1 IN (rt0.c0, rt0.c5)))LIKE(json_type(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (rt0.c0, rt0.c5)))LIKE(json_type(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c2) NOTNULL))|(((rt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c2) NOTNULL))|(((rt0.c1) IS FALSE))) WHERE ((((vt0.c1 IN (rt0.c0, rt0.c5)))LIKE(json_type(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((HEX(DISTINCT rt0.c4))|(rt0.c3)) WHERE ((TRIM('710411419') IN ())) ORDER BY (((rt0.c5)) NOT BETWEEN (((v0.c0 IN ()))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END)))  NULLS LAST, rt0.c0, (- (ABS(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((TRIM('710411419') IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((HEX(DISTINCT rt0.c4))|(rt0.c3)) ORDER BY (((rt0.c5)) NOT BETWEEN (((v0.c0 IN ()))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END)))  NULLS LAST, rt0.c0, (- (ABS(DISTINCT rt0.c4))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((HEX(DISTINCT rt0.c4))|(rt0.c3)) WHERE ((TRIM('710411419') IN ())) ORDER BY (((rt0.c5)) NOT BETWEEN (((v0.c0 IN ()))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END)))  NULLS LAST, rt0.c0, (- (ABS(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((TRIM('710411419') IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((HEX(DISTINCT rt0.c4))|(rt0.c3)) ORDER BY (((rt0.c5)) NOT BETWEEN (((v0.c0 IN ()))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END)))  NULLS LAST, rt0.c0, (- (ABS(DISTINCT rt0.c4))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((HEX(DISTINCT rt0.c4))|(rt0.c3)) WHERE ((TRIM('710411419') IN ())) ORDER BY (((rt0.c5)) NOT BETWEEN (((v0.c0 IN ()))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END)))  NULLS LAST, rt0.c0, (- (ABS(DISTINCT rt0.c4)));
SELECT ALL * FROM vt0, v0 WHERE ((((('-1706157368') BETWEEN (vt0.c0) AND (vt0.c1)))=(vt0.c1))) ORDER BY (- (SQLITE_COMPILEOPTION_USED(vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-1706157368') BETWEEN (vt0.c0) AND (vt0.c1)))=(vt0.c1))) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (SQLITE_COMPILEOPTION_USED(vt0.c1)))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((('-1706157368') BETWEEN (vt0.c0) AND (vt0.c1)))=(vt0.c1))) ORDER BY (- (SQLITE_COMPILEOPTION_USED(vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-1706157368') BETWEEN (vt0.c0) AND (vt0.c1)))=(vt0.c1))) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (SQLITE_COMPILEOPTION_USED(vt0.c1)))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((('-1706157368') BETWEEN (vt0.c0) AND (vt0.c1)))=(vt0.c1))) ORDER BY (- (SQLITE_COMPILEOPTION_USED(vt0.c1)))  NULLS LAST;
SELECT ALL * FROM vt0, v0, rt0 WHERE (CAST((NULL IN (rt0.c0, v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NULL IN (rt0.c0, v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (CAST((NULL IN (rt0.c0, v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NULL IN (rt0.c0, v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (CAST((NULL IN (rt0.c0, v0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(rt0.c2)))&(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE (((((rt0.c3)<>(x'')))-((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)<>(x'')))-((NOT (NULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(rt0.c2)))&(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(rt0.c2)))&(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE (((((rt0.c3)<>(x'')))-((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)<>(x'')))-((NOT (NULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(rt0.c2)))&(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(rt0.c2)))&(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE (((((rt0.c3)<>(x'')))-((NOT (NULL)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (COALESCE(CAST(rt0.c1 AS BLOB), (vt0.c1 IN ()))) ORDER BY CAST(rt0.c0 AS TEXT) DESC, CASE WHEN rt0.c3 COLLATE RTRIM THEN SQLITE_VERSION() END ASC, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(rt0.c1 AS BLOB), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(rt0.c0 AS TEXT) DESC, CASE WHEN rt0.c3 COLLATE RTRIM THEN SQLITE_VERSION() END ASC, rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (COALESCE(CAST(rt0.c1 AS BLOB), (vt0.c1 IN ()))) ORDER BY CAST(rt0.c0 AS TEXT) DESC, CASE WHEN rt0.c3 COLLATE RTRIM THEN SQLITE_VERSION() END ASC, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(rt0.c1 AS BLOB), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(rt0.c0 AS TEXT) DESC, CASE WHEN rt0.c3 COLLATE RTRIM THEN SQLITE_VERSION() END ASC, rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (COALESCE(CAST(rt0.c1 AS BLOB), (vt0.c1 IN ()))) ORDER BY CAST(rt0.c0 AS TEXT) DESC, CASE WHEN rt0.c3 COLLATE RTRIM THEN SQLITE_VERSION() END ASC, rt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)-(((vt0.c0)>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)-(((vt0.c0)>(vt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)-(((vt0.c0)>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)-(((vt0.c0)>(vt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)-(((vt0.c0)>(vt0.c1)))));
SELECT * FROM v0, vt0, rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)IS NOT(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)IS NOT(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c0)) AS INTEGER));
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST((~ (rt0.c2)) AS TEXT) INNER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c2  WHEN x'' THEN vt0.c0 END) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c5 THEN vt0.c1 ELSE rt0.c3 END)) WHERE (json(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((json(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST((~ (rt0.c2)) AS TEXT) INNER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c2  WHEN x'' THEN vt0.c0 END) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c5 THEN vt0.c1 ELSE rt0.c3 END)));
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST((~ (rt0.c2)) AS TEXT) INNER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c2  WHEN x'' THEN vt0.c0 END) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c5 THEN vt0.c1 ELSE rt0.c3 END)) WHERE (json(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((json(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST((~ (rt0.c2)) AS TEXT) INNER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c2  WHEN x'' THEN vt0.c0 END) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c5 THEN vt0.c1 ELSE rt0.c3 END)));
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST((~ (rt0.c2)) AS TEXT) INNER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c2  WHEN x'' THEN vt0.c0 END) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c5 THEN vt0.c1 ELSE rt0.c3 END)) WHERE (json(rt0.c1 COLLATE BINARY));
SELECT * FROM v0, rt0 WHERE ((- ((((rt0.c5))>=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c5))>=((rt0.c1)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((- ((((rt0.c5))>=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c5))>=((rt0.c1)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((- ((((rt0.c5))>=((rt0.c1))))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((v0.c0 COLLATE NOCASE)IS(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)IS(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((v0.c0 COLLATE NOCASE)IS(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)IS(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((v0.c0 COLLATE NOCASE)IS(CAST(v0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c4, rt0.c0, rt0.c4, rt0.c4)) AND ((rt0.c4, rt0.c3, rt0.c0, rt0.c5, rt0.c3, rt0.c2, rt0.c1))))AND(rt0.c1))) ORDER BY ((+ (0.5601731584715822)) IN ()) ASC  NULLS FIRST, (NOT (((rt0.c3)GLOB(rt0.c5)))), ((rt0.c0) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c4, rt0.c0, rt0.c4, rt0.c4)) AND ((rt0.c4, rt0.c3, rt0.c0, rt0.c5, rt0.c3, rt0.c2, rt0.c1))))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((+ (0.5601731584715822)) IN ()) ASC  NULLS FIRST, (NOT (((rt0.c3)GLOB(rt0.c5)))), ((rt0.c0) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (rt0.c2)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c4, rt0.c0, rt0.c4, rt0.c4)) AND ((rt0.c4, rt0.c3, rt0.c0, rt0.c5, rt0.c3, rt0.c2, rt0.c1))))AND(rt0.c1))) ORDER BY ((+ (0.5601731584715822)) IN ()) ASC  NULLS FIRST, (NOT (((rt0.c3)GLOB(rt0.c5)))), ((rt0.c0) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c4, rt0.c0, rt0.c4, rt0.c4)) AND ((rt0.c4, rt0.c3, rt0.c0, rt0.c5, rt0.c3, rt0.c2, rt0.c1))))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((+ (0.5601731584715822)) IN ()) ASC  NULLS FIRST, (NOT (((rt0.c3)GLOB(rt0.c5)))), ((rt0.c0) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (rt0.c2)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c4, rt0.c0, rt0.c4, rt0.c4)) AND ((rt0.c4, rt0.c3, rt0.c0, rt0.c5, rt0.c3, rt0.c2, rt0.c1))))AND(rt0.c1))) ORDER BY ((+ (0.5601731584715822)) IN ()) ASC  NULLS FIRST, (NOT (((rt0.c3)GLOB(rt0.c5)))), ((rt0.c0) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (rt0.c2)) ASC;
SELECT * FROM v0, rt0, vt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN '-1818106335' END)AND(((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c1)))OR('-1818106335')))OR(rt0.c4)))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN rt0.c3 THEN '-1818106335' END)AND(((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c1)))OR('-1818106335')))OR(rt0.c4)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0, vt0 NOT INDEXED);
SELECT * FROM v0, rt0, vt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN '-1818106335' END)AND(((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c1)))OR('-1818106335')))OR(rt0.c4)))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN rt0.c3 THEN '-1818106335' END)AND(((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c1)))OR('-1818106335')))OR(rt0.c4)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, rt0, vt0 NOT INDEXED);
SELECT * FROM v0, rt0, vt0 WHERE (((((CASE rt0.c1  WHEN rt0.c3 THEN '-1818106335' END)AND(((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c1)))OR('-1818106335')))OR(rt0.c4)))))OR((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt0 ON (((LOWER(DISTINCT rt0.c5)))<((((rt0.c3) BETWEEN (rt0.c0) AND (vt0.c1))))) WHERE (MIN(rt0.c3, vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((MIN(rt0.c3, vt0.c1)) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON (((LOWER(DISTINCT rt0.c5)))<((((rt0.c3) BETWEEN (rt0.c0) AND (vt0.c1))))));
SELECT ALL COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt0 ON (((LOWER(DISTINCT rt0.c5)))<((((rt0.c3) BETWEEN (rt0.c0) AND (vt0.c1))))) WHERE (MIN(rt0.c3, vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((MIN(rt0.c3, vt0.c1)) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON (((LOWER(DISTINCT rt0.c5)))<((((rt0.c3) BETWEEN (rt0.c0) AND (vt0.c1))))));
SELECT ALL COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt0 ON (((LOWER(DISTINCT rt0.c5)))<((((rt0.c3) BETWEEN (rt0.c0) AND (vt0.c1))))) WHERE (MIN(rt0.c3, vt0.c1));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0))<(((+ (rt0.c4)))))) ORDER BY (0.19341257464050554 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))<(((+ (rt0.c4)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (0.19341257464050554 IN ()));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0))<(((+ (rt0.c4)))))) ORDER BY (0.19341257464050554 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))<(((+ (rt0.c4)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (0.19341257464050554 IN ()));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0))<(((+ (rt0.c4)))))) ORDER BY (0.19341257464050554 IN ());
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0 IN ()))AND(v0.c0)))OR((vt0.c0 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND(v0.c0)))OR((vt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0 IN ()))AND(v0.c0)))OR((vt0.c0 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND(v0.c0)))OR((vt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0 IN ()))AND(v0.c0)))OR((vt0.c0 IN (vt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE ('*02N踭Jo') ORDER BY CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.45013604948841635)))  WHEN ((v0.c0)|(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('*02N踭Jo') IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.45013604948841635)))  WHEN ((v0.c0)|(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ('*02N踭Jo') ORDER BY CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.45013604948841635)))  WHEN ((v0.c0)|(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('*02N踭Jo') IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.45013604948841635)))  WHEN ((v0.c0)|(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ('*02N踭Jo') ORDER BY CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.45013604948841635)))  WHEN ((v0.c0)|(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((- (CAST(v0.c0 AS TEXT)))) ORDER BY (((NOT (0.9912753431760444)))<=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (0.9912753431760444)))<=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (CAST(v0.c0 AS TEXT)))) ORDER BY (((NOT (0.9912753431760444)))<=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (0.9912753431760444)))<=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (CAST(v0.c0 AS TEXT)))) ORDER BY (((NOT (0.9912753431760444)))<=((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) DESC;
SELECT ALL * FROM vt0, v0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c1)) IN (CASE WHEN v0.c0 THEN vt0.c1 END, TRIM(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c1)) IN (CASE WHEN v0.c0 THEN vt0.c1 END, TRIM(DISTINCT v0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c1)) IN (CASE WHEN v0.c0 THEN vt0.c1 END, TRIM(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c1)) IN (CASE WHEN v0.c0 THEN vt0.c1 END, TRIM(DISTINCT v0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(vt0.c1)) IN (CASE WHEN v0.c0 THEN vt0.c1 END, TRIM(DISTINCT v0.c0))));
SELECT COUNT(*) FROM rt0, v0 WHERE (0.8021193604574199);
SELECT SUM(count) FROM (SELECT ((0.8021193604574199) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (0.8021193604574199);
SELECT SUM(count) FROM (SELECT ((0.8021193604574199) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (0.8021193604574199);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((LIKE(vt0.c1, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (highlight('VWbыfH7', vt0.c0, v0.c0, vt0.c0)))) ORDER BY LOWER(DISTINCT (((v0.c0, '354099729', vt0.c1))=((vt0.c0, vt0.c0, vt0.c1)))) DESC  NULLS FIRST, ((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)))<=(((v0.c0)<<(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c1, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (highlight('VWbыfH7', vt0.c0, v0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY LOWER(DISTINCT (((v0.c0, '354099729', vt0.c1))=((vt0.c0, vt0.c0, vt0.c1)))) DESC  NULLS FIRST, ((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)))<=(((v0.c0)<<(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((LIKE(vt0.c1, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (highlight('VWbыfH7', vt0.c0, v0.c0, vt0.c0)))) ORDER BY LOWER(DISTINCT (((v0.c0, '354099729', vt0.c1))=((vt0.c0, vt0.c0, vt0.c1)))) DESC  NULLS FIRST, ((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)))<=(((v0.c0)<<(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c1, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (highlight('VWbыfH7', vt0.c0, v0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY LOWER(DISTINCT (((v0.c0, '354099729', vt0.c1))=((vt0.c0, vt0.c0, vt0.c1)))) DESC  NULLS FIRST, ((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)))<=(((v0.c0)<<(v0.c0))))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (3.97618705E8) AND (rt0.c1)))==(CASE WHEN rt0.c5 THEN rt0.c5 END))) ORDER BY (+ (((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT BETWEEN (3.97618705E8) AND (rt0.c1)))==(CASE WHEN rt0.c5 THEN rt0.c5 END))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (3.97618705E8) AND (rt0.c1)))==(CASE WHEN rt0.c5 THEN rt0.c5 END))) ORDER BY (+ (((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT BETWEEN (3.97618705E8) AND (rt0.c1)))==(CASE WHEN rt0.c5 THEN rt0.c5 END))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT * FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (3.97618705E8) AND (rt0.c1)))==(CASE WHEN rt0.c5 THEN rt0.c5 END))) ORDER BY (+ (((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c3))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c4)>=(v0.c0))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END) AND (CAST(0.6655157620261716 AS REAL)))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c5 END)/(rt0.c5)), (((((((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))OR(CAST(vt0.c1 AS TEXT))))OR((rt0.c1 IN (vt0.c1)))))OR(v0.c0 COLLATE RTRIM)))AND((((rt0.c3, rt0.c0, rt0.c3))>((vt0.c0, rt0.c0, rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)>=(v0.c0))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END) AND (CAST(0.6655157620261716 AS REAL)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c5 END)/(rt0.c5)), (((((((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))OR(CAST(vt0.c1 AS TEXT))))OR((rt0.c1 IN (vt0.c1)))))OR(v0.c0 COLLATE RTRIM)))AND((((rt0.c3, rt0.c0, rt0.c3))>((vt0.c0, rt0.c0, rt0.c3))))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c4)>=(v0.c0))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END) AND (CAST(0.6655157620261716 AS REAL)))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c5 END)/(rt0.c5)), (((((((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))OR(CAST(vt0.c1 AS TEXT))))OR((rt0.c1 IN (vt0.c1)))))OR(v0.c0 COLLATE RTRIM)))AND((((rt0.c3, rt0.c0, rt0.c3))>((vt0.c0, rt0.c0, rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)>=(v0.c0))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END) AND (CAST(0.6655157620261716 AS REAL)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c5 END)/(rt0.c5)), (((((((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))OR(CAST(vt0.c1 AS TEXT))))OR((rt0.c1 IN (vt0.c1)))))OR(v0.c0 COLLATE RTRIM)))AND((((rt0.c3, rt0.c0, rt0.c3))>((vt0.c0, rt0.c0, rt0.c3))))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c4)>=(v0.c0))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END) AND (CAST(0.6655157620261716 AS REAL)))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c5 END)/(rt0.c5)), (((((((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))OR(CAST(vt0.c1 AS TEXT))))OR((rt0.c1 IN (vt0.c1)))))OR(v0.c0 COLLATE RTRIM)))AND((((rt0.c3, rt0.c0, rt0.c3))>((vt0.c0, rt0.c0, rt0.c3))))) ASC;
SELECT * FROM vt0, v0 WHERE ((('-2096587365') NOT NULL));
SELECT SUM(count) FROM (SELECT (((('-2096587365') NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((('-2096587365') NOT NULL));
SELECT SUM(count) FROM (SELECT (((('-2096587365') NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((('-2096587365') NOT NULL));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c5)-(NULLIF(rt0.c1, rt0.c5)))) ORDER BY rt0.c5 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c5)-(NULLIF(rt0.c1, rt0.c5)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY rt0.c5 COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c5)-(NULLIF(rt0.c1, rt0.c5)))) ORDER BY rt0.c5 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c5)-(NULLIF(rt0.c1, rt0.c5)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY rt0.c5 COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c5)-(NULLIF(rt0.c1, rt0.c5)))) ORDER BY rt0.c5 COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON '401108603' CROSS JOIN vt0 ON (TYPEOF(rt0.c3) IN ()) WHERE (NULL) ORDER BY (+ ('qc')), (((0.25335736995626323, vt0.c1, rt0.c2)) NOT BETWEEN (('', rt0.c4 COLLATE BINARY, v0.c0)) AND ((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '-955686058' WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END, CAST(vt0.c1 AS TEXT), (~ (rt0.c1)))))  NULLS FIRST, (((((((vt0.c1)AND(x'16b1')))OR(rt0.c5))))=((rt0.c3))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON '401108603' CROSS JOIN vt0 ON (TYPEOF(rt0.c3) IN ()) ORDER BY (+ ('qc')), (((0.25335736995626323, vt0.c1, rt0.c2)) NOT BETWEEN (('', rt0.c4 COLLATE BINARY, v0.c0)) AND ((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '-955686058' WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END, CAST(vt0.c1 AS TEXT), (~ (rt0.c1)))))  NULLS FIRST, (((((((vt0.c1)AND(x'16b1')))OR(rt0.c5))))==((rt0.c3))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON '401108603' CROSS JOIN vt0 ON (TYPEOF(rt0.c3) IN ()) WHERE (NULL) ORDER BY (+ ('qc')), (((0.25335736995626323, vt0.c1, rt0.c2)) NOT BETWEEN (('', rt0.c4 COLLATE BINARY, v0.c0)) AND ((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '-955686058' WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END, CAST(vt0.c1 AS TEXT), (~ (rt0.c1)))))  NULLS FIRST, (((((((vt0.c1)AND(x'16b1')))OR(rt0.c5))))=((rt0.c3))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON '401108603' CROSS JOIN vt0 ON (TYPEOF(rt0.c3) IN ()) ORDER BY (+ ('qc')), (((0.25335736995626323, vt0.c1, rt0.c2)) NOT BETWEEN (('', rt0.c4 COLLATE BINARY, v0.c0)) AND ((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '-955686058' WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END, CAST(vt0.c1 AS TEXT), (~ (rt0.c1)))))  NULLS FIRST, (((((((vt0.c1)AND(x'16b1')))OR(rt0.c5))))==((rt0.c3))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON '401108603' CROSS JOIN vt0 ON (TYPEOF(rt0.c3) IN ()) WHERE (NULL) ORDER BY (+ ('qc')), (((0.25335736995626323, vt0.c1, rt0.c2)) NOT BETWEEN (('', rt0.c4 COLLATE BINARY, v0.c0)) AND ((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '-955686058' WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END, CAST(vt0.c1 AS TEXT), (~ (rt0.c1)))))  NULLS FIRST, (((((((vt0.c1)AND(x'16b1')))OR(rt0.c5))))=((rt0.c3))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE 'G&'  WHEN vt0.c0 THEN rt0.c1 END, ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(NULL))))<>((((vt0.c1) NOT NULL), (rt0.c4 IN ()), rt0.c1)))) ORDER BY (((- (rt0.c4))) BETWEEN (((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((CASE 'G&'  WHEN vt0.c0 THEN rt0.c1 END, ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(NULL))))<>((((vt0.c1) NOT NULL), (rt0.c4 IN ()), rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY (((- (rt0.c4))) BETWEEN (((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (vt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE 'G&'  WHEN vt0.c0 THEN rt0.c1 END, ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(NULL))))<>((((vt0.c1) NOT NULL), (rt0.c4 IN ()), rt0.c1)))) ORDER BY (((- (rt0.c4))) BETWEEN (((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((CASE 'G&'  WHEN vt0.c0 THEN rt0.c1 END, ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(NULL))))<>((((vt0.c1) NOT NULL), (rt0.c4 IN ()), rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY (((- (rt0.c4))) BETWEEN (((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (vt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE 'G&'  WHEN vt0.c0 THEN rt0.c1 END, ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(NULL))))<>((((vt0.c1) NOT NULL), (rt0.c4 IN ()), rt0.c1)))) ORDER BY (((- (rt0.c4))) BETWEEN (((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (vt0.c1 COLLATE BINARY));
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((x'' IN ()));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) IS TRUE)) ORDER BY CAST(((v0.c0)>>(v0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)>>(v0.c0)) AS BLOB));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) IS TRUE)) ORDER BY CAST(((v0.c0)>>(v0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)>>(v0.c0)) AS BLOB));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) IS TRUE)) ORDER BY CAST(((v0.c0)>>(v0.c0)) AS BLOB);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((- (vt0.c0))))>=((((rt0.c4)>(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0))))>=((((rt0.c4)>(rt0.c3)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((- (vt0.c0))))>=((((rt0.c4)>(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0))))>=((((rt0.c4)>(rt0.c3)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((- (vt0.c0))))>=((((rt0.c4)>(rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (- (rt0.c3)) WHERE ((NOT (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (- (rt0.c3)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (- (rt0.c3)) WHERE ((NOT (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (- (rt0.c3)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (- (rt0.c3)) WHERE ((NOT (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END)));
SELECT ALL * FROM v0 WHERE (0x7ab5d6d1);
SELECT SUM(count) FROM (SELECT ALL ((0x7ab5d6d1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0x7ab5d6d1);
SELECT SUM(count) FROM (SELECT ALL ((0x7ab5d6d1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0x7ab5d6d1);
SELECT ALL * FROM rt0, vt0, v0 WHERE (ABS(DISTINCT (rt0.c4 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (rt0.c4 IN (rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (ABS(DISTINCT (rt0.c4 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (rt0.c4 IN (rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (ABS(DISTINCT (rt0.c4 IN (rt0.c2))));
SELECT * FROM vt0 WHERE ((~ (NULL))) ORDER BY ((((((((((x'')AND(vt0.c0)))OR(x'')))OR(vt0.c1)))OR(vt0.c0)))AND((vt0.c1 IN (vt0.c0)))) DESC, vt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((x'')AND(vt0.c0)))OR(x'')))OR(vt0.c1)))OR(vt0.c0)))AND((vt0.c1 IN (vt0.c0)))) DESC, vt0.c1);
SELECT * FROM vt0 WHERE ((~ (NULL))) ORDER BY ((((((((((x'')AND(vt0.c0)))OR(x'')))OR(vt0.c1)))OR(vt0.c0)))AND((vt0.c1 IN (vt0.c0)))) DESC, vt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((x'')AND(vt0.c0)))OR(x'')))OR(vt0.c1)))OR(vt0.c0)))AND((vt0.c1 IN (vt0.c0)))) DESC, vt0.c1);
SELECT * FROM vt0 WHERE ((~ (NULL))) ORDER BY ((((((((((x'')AND(vt0.c0)))OR(x'')))OR(vt0.c1)))OR(vt0.c0)))AND((vt0.c1 IN (vt0.c0)))) DESC, vt0.c1;
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c1) NOT NULL))OR(((rt0.c5)<<(rt0.c0)))))OR(UPPER(rt0.c5)))) ORDER BY ((((rt0.c0) IS FALSE)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT NULL))OR(((rt0.c5)<<(rt0.c0)))))OR(UPPER(rt0.c5)))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY ((((rt0.c0) IS FALSE)) IS TRUE) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c1) NOT NULL))OR(((rt0.c5)<<(rt0.c0)))))OR(UPPER(rt0.c5)))) ORDER BY ((((rt0.c0) IS FALSE)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT NULL))OR(((rt0.c5)<<(rt0.c0)))))OR(UPPER(rt0.c5)))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY ((((rt0.c0) IS FALSE)) IS TRUE) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c1) NOT NULL))OR(((rt0.c5)<<(rt0.c0)))))OR(UPPER(rt0.c5)))) ORDER BY ((((rt0.c0) IS FALSE)) IS TRUE) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2))) BETWEEN (((rt0.c2)IS(rt0.c0))) AND (rt0.c4)));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) BETWEEN (((rt0.c2)IS(rt0.c0))) AND (rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2))) BETWEEN (((rt0.c2)IS(rt0.c0))) AND (rt0.c4)));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) BETWEEN (((rt0.c2)IS(rt0.c0))) AND (rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2))) BETWEEN (((rt0.c2)IS(rt0.c0))) AND (rt0.c4)));
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE WHEN ((rt0.c5)GLOB(rt0.c3)) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c1)IS(vt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN (NOT (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) ELSE ((rt0.c4)!=(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c5)GLOB(rt0.c3)) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c1)IS(vt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN (NOT (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) ELSE ((rt0.c4)<>(rt0.c4)) END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE WHEN ((rt0.c5)GLOB(rt0.c3)) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c1)IS(vt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN (NOT (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) ELSE ((rt0.c4)!=(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c5)GLOB(rt0.c3)) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c1)IS(vt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN (NOT (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) ELSE ((rt0.c4)<>(rt0.c4)) END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE WHEN ((rt0.c5)GLOB(rt0.c3)) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c1)IS(vt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN (NOT (rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) ELSE ((rt0.c4)!=(rt0.c4)) END);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) ISNULL));
SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c2) ISNULL))<=((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))<=((NOT (NULL))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c2) ISNULL))<=((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))<=((NOT (NULL))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c2) ISNULL))<=((NOT (NULL)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((((('-873146424') IS TRUE))AND(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)))))OR(x'')) FULL OUTER JOIN vt0 ON ((CAST(0.30302487442565607 AS BLOB))<((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))) WHERE ((+ (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((((('-873146424') IS TRUE))AND(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)))))OR(x'')) FULL OUTER JOIN vt0 ON ((CAST(0.30302487442565607 AS BLOB))<((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((((('-873146424') IS TRUE))AND(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)))))OR(x'')) FULL OUTER JOIN vt0 ON ((CAST(0.30302487442565607 AS BLOB))<((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))) WHERE ((+ (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((((('-873146424') IS TRUE))AND(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)))))OR(x'')) FULL OUTER JOIN vt0 ON ((CAST(0.30302487442565607 AS BLOB))<((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (((((('-873146424') IS TRUE))AND(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)))))OR(x'')) FULL OUTER JOIN vt0 ON ((CAST(0.30302487442565607 AS BLOB))<((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))) WHERE ((+ (((rt0.c1) IS TRUE))));
SELECT COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (((((0.8487551043052124)GLOB(rt0.c2)))*(json_quote(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8487551043052124)GLOB(rt0.c2)))*(json_quote(v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (((((0.8487551043052124)GLOB(rt0.c2)))*(json_quote(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8487551043052124)GLOB(rt0.c2)))*(json_quote(v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (((((0.8487551043052124)GLOB(rt0.c2)))*(json_quote(v0.c0))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(CASE 0xffffffffdb48b377  WHEN vt0.c0 THEN v0.c0 ELSE rt0.c3 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE 0xffffffffdb48b377  WHEN vt0.c0 THEN v0.c0 ELSE rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(CASE 0xffffffffdb48b377  WHEN vt0.c0 THEN v0.c0 ELSE rt0.c3 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE 0xffffffffdb48b377  WHEN vt0.c0 THEN v0.c0 ELSE rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(CASE 0xffffffffdb48b377  WHEN vt0.c0 THEN v0.c0 ELSE rt0.c3 END AS BLOB));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((('Ty')>>(rt0.c4)))*(UNLIKELY(DISTINCT rt0.c3))) LEFT OUTER JOIN rt0 ON (((rt0.c5) IS FALSE) IN ()) WHERE (((((rt0.c4)OR(vt0.c0)))AND(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)OR(vt0.c0)))AND(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((('Ty')>>(rt0.c4)))*(UNLIKELY(DISTINCT rt0.c3))) LEFT OUTER JOIN rt0 ON (((rt0.c5) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((('Ty')>>(rt0.c4)))*(UNLIKELY(DISTINCT rt0.c3))) LEFT OUTER JOIN rt0 ON (((rt0.c5) IS FALSE) IN ()) WHERE (((((rt0.c4)OR(vt0.c0)))AND(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)OR(vt0.c0)))AND(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((('Ty')>>(rt0.c4)))*(UNLIKELY(DISTINCT rt0.c3))) LEFT OUTER JOIN rt0 ON (((rt0.c5) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))<=(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))<=(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))<=(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))<=(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))<=(((v0.c0) IS FALSE))));
SELECT ALL * FROM vt0, v0, rt0 NOT INDEXED WHERE ((((vt0.c0))=((v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))=((v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 NOT INDEXED WHERE ((((vt0.c0))=((v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))=((v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 NOT INDEXED WHERE ((((vt0.c0))=((v0.c0 COLLATE RTRIM))));
SELECT * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (ABS(vt0.c1)))) ORDER BY CASE json_remove(vt0.c0, vt0.c1, '0ﯢC~\n9', vt0.c1)  WHEN CAST(vt0.c0 AS REAL) THEN NULL COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (ABS(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE json_remove(vt0.c0, vt0.c1, '0ﯢC~\n9', vt0.c1)  WHEN CAST(vt0.c0 AS REAL) THEN NULL COLLATE BINARY END  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (ABS(vt0.c1)))) ORDER BY CASE json_remove(vt0.c0, vt0.c1, '0ﯢC~\n9', vt0.c1)  WHEN CAST(vt0.c0 AS REAL) THEN NULL COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (ABS(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE json_remove(vt0.c0, vt0.c1, '0ﯢC~\n9', vt0.c1)  WHEN CAST(vt0.c0 AS REAL) THEN NULL COLLATE BINARY END  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (ABS(vt0.c1)))) ORDER BY CASE json_remove(vt0.c0, vt0.c1, '0ﯢC~\n9', vt0.c1)  WHEN CAST(vt0.c0 AS REAL) THEN NULL COLLATE BINARY END  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((NOT (((v0.c0) NOTNULL)))) ORDER BY CAST(rt0.c2 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(rt0.c2 AS TEXT)  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((NOT (((v0.c0) NOTNULL)))) ORDER BY CAST(rt0.c2 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(rt0.c2 AS TEXT)  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((NOT (((v0.c0) NOTNULL)))) ORDER BY CAST(rt0.c2 AS TEXT)  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (UNLIKELY(DISTINCT (((rt0.c5))<>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((rt0.c5))<>((v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (UNLIKELY(DISTINCT (((rt0.c5))<>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((rt0.c5))<>((v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (UNLIKELY(DISTINCT (((rt0.c5))<>((v0.c0)))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((CASE rt0.c1  WHEN rt0.c4 THEN x'' END IN ())) ORDER BY CAST(((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c4 THEN x'' END IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((CASE rt0.c1  WHEN rt0.c4 THEN x'' END IN ())) ORDER BY CAST(((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c4 THEN x'' END IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((CASE rt0.c1  WHEN rt0.c4 THEN x'' END IN ())) ORDER BY CAST(((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)) AS TEXT) DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (((((((vt0.c0)OR(0.6723154222564725)))AND(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(0.6723154222564725)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((vt0.c0)OR(0.6723154222564725)))AND(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(0.6723154222564725)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((vt0.c0)OR(0.6723154222564725)))AND(vt0.c0))) ISNULL));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((((((rt0.c5)OR(vt0.c0)))AND(0.2771292018310705)))OR((rt0.c5 IN (vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0)))))) ORDER BY 0x4c26d223 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c5)OR(vt0.c0)))AND(0.2771292018310705)))OR((rt0.c5 IN (vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY 0X4c26d223 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((((((rt0.c5)OR(vt0.c0)))AND(0.2771292018310705)))OR((rt0.c5 IN (vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0)))))) ORDER BY 0x4c26d223 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c5)OR(vt0.c0)))AND(0.2771292018310705)))OR((rt0.c5 IN (vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY 0X4c26d223 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((x'') NOT BETWEEN (UPPER(rt0.c4)) AND (((rt0.c5)&(vt0.c1))))) ORDER BY (((rt0.c1))<((vt0.c0))) COLLATE BINARY ASC, (+ ((((vt0.c1))!=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (UPPER(rt0.c4)) AND (((rt0.c5)&(vt0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (((rt0.c1))<((vt0.c0))) COLLATE BINARY ASC, (+ ((((vt0.c1))!=((rt0.c0))))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((x'') NOT BETWEEN (UPPER(rt0.c4)) AND (((rt0.c5)&(vt0.c1))))) ORDER BY (((rt0.c1))<((vt0.c0))) COLLATE BINARY ASC, (+ ((((vt0.c1))!=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (UPPER(rt0.c4)) AND (((rt0.c5)&(vt0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (((rt0.c1))<((vt0.c0))) COLLATE BINARY ASC, (+ ((((vt0.c1))!=((rt0.c0))))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((x'') NOT BETWEEN (UPPER(rt0.c4)) AND (((rt0.c5)&(vt0.c1))))) ORDER BY (((rt0.c1))<((vt0.c0))) COLLATE BINARY ASC, (+ ((((vt0.c1))!=((rt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((vt0.c1 IN ())) AND (TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((vt0.c1 IN ())) AND (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((vt0.c1 IN ())) AND (TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((vt0.c1 IN ())) AND (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((vt0.c1 IN ())) AND (TRIM(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)AND(x'')))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)AND(x''))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)AND(x'')))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)AND(x''))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)AND(x'')))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c5)OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY) ORDER BY '', (~ (((x'')|(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY '', (~ (((x'')|(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c5)OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY) ORDER BY '', (~ (((x'')|(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY '', (~ (((x'')|(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c5)OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY) ORDER BY '', (~ (((x'')|(rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0, vt0 NOT INDEXED WHERE (((rt0.c1)>=(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>=(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 NOT INDEXED WHERE (((rt0.c1)>=(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>=(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 NOT INDEXED WHERE (((rt0.c1)>=(rt0.c1)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE rt0.c2  WHEN rt0.c5 THEN rt0.c2 END COLLATE NOCASE) ORDER BY ((((rt0.c4)|(0.048980555367943435)))=(((rt0.c1)%(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c5 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c4)|(0.048980555367943435)))=(((rt0.c1)%(v0.c0)))) ASC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE rt0.c2  WHEN rt0.c5 THEN rt0.c2 END COLLATE NOCASE) ORDER BY ((((rt0.c4)|(0.048980555367943435)))=(((rt0.c1)%(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c5 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c4)|(0.048980555367943435)))=(((rt0.c1)%(v0.c0)))) ASC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE rt0.c2  WHEN rt0.c5 THEN rt0.c2 END COLLATE NOCASE) ORDER BY ((((rt0.c4)|(0.048980555367943435)))=(((rt0.c1)%(v0.c0)))) ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1))<=((v0.c0))) IN (((v0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1))<=((v0.c0))) IN (((v0.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1))<=((v0.c0))) IN (((v0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1))<=((v0.c0))) IN (((v0.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1))<=((v0.c0))) IN (((v0.c0) NOTNULL))) ASC;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((~ (rt0.c5)))AND(json(rt0.c0))))OR('')));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c5)))AND(json(rt0.c0))))OR(''))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((~ (rt0.c5)))AND(json(rt0.c0))))OR('')));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c5)))AND(json(rt0.c0))))OR(''))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((~ (rt0.c5)))AND(json(rt0.c0))))OR('')));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c1)))))) ORDER BY ((HEX(vt0.c0)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((HEX(vt0.c0)) NOTNULL) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c1)))))) ORDER BY ((HEX(vt0.c0)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((HEX(vt0.c0)) NOTNULL) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c1)))))) ORDER BY ((HEX(vt0.c0)) NOTNULL) ASC;
SELECT ALL * FROM rt0 WHERE (CAST(LOWER(DISTINCT rt0.c2) AS TEXT)) ORDER BY (NOT (((rt0.c3) NOT NULL))), CASE WHEN 0.7623404150050044 THEN (rt0.c5 IN (rt0.c0)) WHEN ((rt0.c2)>=(rt0.c1)) THEN ((rt0.c4) IS FALSE) WHEN CAST(rt0.c4 AS NUMERIC) THEN (+ (rt0.c5)) END  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(DISTINCT rt0.c2) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c3) NOT NULL))), CASE WHEN 0.7623404150050044 THEN (rt0.c5 IN (rt0.c0)) WHEN ((rt0.c2)>=(rt0.c1)) THEN ((rt0.c4) IS FALSE) WHEN CAST(rt0.c4 AS NUMERIC) THEN (+ (rt0.c5)) END  NULLS FIRST, NULL);
SELECT ALL * FROM rt0 WHERE (CAST(LOWER(DISTINCT rt0.c2) AS TEXT)) ORDER BY (NOT (((rt0.c3) NOT NULL))), CASE WHEN 0.7623404150050044 THEN (rt0.c5 IN (rt0.c0)) WHEN ((rt0.c2)>=(rt0.c1)) THEN ((rt0.c4) IS FALSE) WHEN CAST(rt0.c4 AS NUMERIC) THEN (+ (rt0.c5)) END  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(DISTINCT rt0.c2) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c3) NOT NULL))), CASE WHEN 0.7623404150050044 THEN (rt0.c5 IN (rt0.c0)) WHEN ((rt0.c2)>=(rt0.c1)) THEN ((rt0.c4) IS FALSE) WHEN CAST(rt0.c4 AS NUMERIC) THEN (+ (rt0.c5)) END  NULLS FIRST, NULL);
SELECT ALL * FROM rt0 WHERE (CAST(LOWER(DISTINCT rt0.c2) AS TEXT)) ORDER BY (NOT (((rt0.c3) NOT NULL))), CASE WHEN 0.7623404150050044 THEN (rt0.c5 IN (rt0.c0)) WHEN ((rt0.c2)>=(rt0.c1)) THEN ((rt0.c4) IS FALSE) WHEN CAST(rt0.c4 AS NUMERIC) THEN (+ (rt0.c5)) END  NULLS FIRST, NULL;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c5)))AND(rt0.c2))) BETWEEN ((~ (rt0.c3))) AND (((rt0.c3)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c5)))AND(rt0.c2))) BETWEEN ((~ (rt0.c3))) AND (((rt0.c3)=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c5)))AND(rt0.c2))) BETWEEN ((~ (rt0.c3))) AND (((rt0.c3)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c5)))AND(rt0.c2))) BETWEEN ((~ (rt0.c3))) AND (((rt0.c3)=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c5)))AND(rt0.c2))) BETWEEN ((~ (rt0.c3))) AND (((rt0.c3)==(rt0.c2)))));
SELECT ALL * FROM rt0, vt0 WHERE (((0.8797109482768247)||(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8797109482768247)||(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((0.8797109482768247)||(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8797109482768247)||(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((0.8797109482768247)||(CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN v0 ON NULL WHERE (CAST(rt0.c5 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c5 AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON NULL);
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN v0 ON NULL WHERE (CAST(rt0.c5 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c5 AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON NULL);
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN v0 ON NULL WHERE (CAST(rt0.c5 AS INTEGER));
SELECT COUNT(*) FROM vt0, v0, rt0 NOT INDEXED WHERE (((((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c3))) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c1)IS(rt0.c2))))) ORDER BY ((((((((CASE WHEN rt0.c4 THEN rt0.c5 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)AND((('gR&& ZKR3')+(vt0.c1)))))AND((- (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c3))) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c1)IS(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((((CASE WHEN rt0.c4 THEN rt0.c5 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)AND((('gR&& ZKR3')+(vt0.c1)))))AND((- (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, v0, rt0 NOT INDEXED WHERE (((((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c3))) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c1)IS(rt0.c2))))) ORDER BY ((((((((CASE WHEN rt0.c4 THEN rt0.c5 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)AND((('gR&& ZKR3')+(vt0.c1)))))AND((- (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c3))) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c1)IS(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((((CASE WHEN rt0.c4 THEN rt0.c5 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)AND((('gR&& ZKR3')+(vt0.c1)))))AND((- (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, v0, rt0 NOT INDEXED WHERE (((((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c3))) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c1)IS(rt0.c2))))) ORDER BY ((((((((CASE WHEN rt0.c4 THEN rt0.c5 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END)AND((('gR&& ZKR3')+(vt0.c1)))))AND((- (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE)))AND(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c4 COLLATE BINARY AS BLOB)) ORDER BY (- (((rt0.c4)>>(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c4)>>(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c4 COLLATE BINARY AS BLOB)) ORDER BY (- (((rt0.c4)>>(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c4)>>(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c4 COLLATE BINARY AS BLOB)) ORDER BY (- (((rt0.c4)>>(rt0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((rt0.c1)<<(rt0.c1))) BETWEEN (((rt0.c1)=(rt0.c2))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<<(rt0.c1))) BETWEEN (((rt0.c1)=(rt0.c2))) AND (vt0.c0))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((rt0.c1)<<(rt0.c1))) BETWEEN (((rt0.c1)=(rt0.c2))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<<(rt0.c1))) BETWEEN (((rt0.c1)=(rt0.c2))) AND (vt0.c0))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((rt0.c1)<<(rt0.c1))) BETWEEN (((rt0.c1)=(rt0.c2))) AND (vt0.c0)));
SELECT ALL * FROM vt0, v0 WHERE ((NOT (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c1))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c1))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (vt0.c1)));
SELECT * FROM rt0, v0, vt0 WHERE ((('-644126063') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('-644126063') ISNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((('-644126063') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('-644126063') ISNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((('-644126063') ISNULL));
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c0 IN (rt0.c4)))OR(((((((((rt0.c2)OR(rt0.c5)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))))OR((- (rt0.c5)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN (rt0.c4)))OR(((((((((rt0.c2)OR(rt0.c5)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))))OR((- (rt0.c5))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c0 IN (rt0.c4)))OR(((((((((rt0.c2)OR(rt0.c5)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))))OR((- (rt0.c5)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN (rt0.c4)))OR(((((((((rt0.c2)OR(rt0.c5)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))))OR((- (rt0.c5))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c0 IN (rt0.c4)))OR(((((((((rt0.c2)OR(rt0.c5)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))))OR((- (rt0.c5)))));
SELECT * FROM vt0, rt0, v0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1) ISNULL))) AND (((((rt0.c5, NULL, NULL)) NOT BETWEEN ((vt0.c0, rt0.c5, rt0.c3)) AND ((vt0.c0, rt0.c4, rt0.c5)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((vt0.c1) ISNULL))) AND (((((rt0.c5, NULL, NULL)) NOT BETWEEN ((vt0.c0, rt0.c5, rt0.c3)) AND ((vt0.c0, rt0.c4, rt0.c5))))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1) ISNULL))) AND (((((rt0.c5, NULL, NULL)) NOT BETWEEN ((vt0.c0, rt0.c5, rt0.c3)) AND ((vt0.c0, rt0.c4, rt0.c5)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((vt0.c1) ISNULL))) AND (((((rt0.c5, NULL, NULL)) NOT BETWEEN ((vt0.c0, rt0.c5, rt0.c3)) AND ((vt0.c0, rt0.c4, rt0.c5))))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1) ISNULL))) AND (((((rt0.c5, NULL, NULL)) NOT BETWEEN ((vt0.c0, rt0.c5, rt0.c3)) AND ((vt0.c0, rt0.c4, rt0.c5)))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'') ORDER BY CASE WHEN (((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c4))) THEN ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST, rt0.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c4))) THEN ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST, rt0.c3 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'') ORDER BY CASE WHEN (((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c4))) THEN ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST, rt0.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c4))) THEN ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST, rt0.c3 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'') ORDER BY CASE WHEN (((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c4))) THEN ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST, rt0.c3 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0) NOTNULL));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((vt0.c1)&(x'')) IN (0.46470453578000104)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)&(x'')) IN (0.46470453578000104))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((vt0.c1)&(x'')) IN (0.46470453578000104)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)&(x'')) IN (0.46470453578000104))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((vt0.c1)&(x'')) IN (0.46470453578000104)));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (CASE WHEN '' THEN x'0860' END) AND ((('0.8999440007599891') ISNULL)))) ORDER BY ((((rt0.c1)%(rt0.c0)))>=(rt0.c3 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (CASE WHEN '' THEN x'0860' END) AND ((('0.8999440007599891') ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)%(rt0.c0)))>=(rt0.c3 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (CASE WHEN '' THEN x'0860' END) AND ((('0.8999440007599891') ISNULL)))) ORDER BY ((((rt0.c1)%(rt0.c0)))>=(rt0.c3 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (CASE WHEN '' THEN x'0860' END) AND ((('0.8999440007599891') ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)%(rt0.c0)))>=(rt0.c3 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (CASE WHEN '' THEN x'0860' END) AND ((('0.8999440007599891') ISNULL)))) ORDER BY ((((rt0.c1)%(rt0.c0)))>=(rt0.c3 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((MAX(rt0.c2, vt0.c1))AND(v0.c0)))AND(CAST(rt0.c3 AS TEXT))) WHERE (COALESCE(TYPEOF(rt0.c4), CAST(vt0.c0 AS INTEGER))) ORDER BY ((v0.c0)/(v0.c0)) COLLATE RTRIM DESC  NULLS LAST, (((CAST(rt0.c5 AS NUMERIC), rt0.c3 COLLATE RTRIM, rt0.c1 COLLATE RTRIM))=((((v0.c0)<=(rt0.c2)), (rt0.c1 IN ()), (NOT (vt0.c0))))), (((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN NULL WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c4 IN ()), CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c5 ELSE v0.c0 END))!=(((((v0.c0))!=((vt0.c1))), rt0.c2, ((rt0.c4) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(TYPEOF(rt0.c4), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((MAX(rt0.c2, vt0.c1))AND(v0.c0)))AND(CAST(rt0.c3 AS TEXT))) ORDER BY ((v0.c0)/(v0.c0)) COLLATE RTRIM DESC  NULLS LAST, (((CAST(rt0.c5 AS NUMERIC), rt0.c3 COLLATE RTRIM, rt0.c1 COLLATE RTRIM))==((((v0.c0)<=(rt0.c2)), (rt0.c1 IN ()), (NOT (vt0.c0))))), (((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN NULL WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c4 IN ()), CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c5 ELSE v0.c0 END))<>(((((v0.c0))<>((vt0.c1))), rt0.c2, ((rt0.c4) ISNULL)))) ASC);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((MAX(rt0.c2, vt0.c1))AND(v0.c0)))AND(CAST(rt0.c3 AS TEXT))) WHERE (COALESCE(TYPEOF(rt0.c4), CAST(vt0.c0 AS INTEGER))) ORDER BY ((v0.c0)/(v0.c0)) COLLATE RTRIM DESC  NULLS LAST, (((CAST(rt0.c5 AS NUMERIC), rt0.c3 COLLATE RTRIM, rt0.c1 COLLATE RTRIM))=((((v0.c0)<=(rt0.c2)), (rt0.c1 IN ()), (NOT (vt0.c0))))), (((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN NULL WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c4 IN ()), CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c5 ELSE v0.c0 END))!=(((((v0.c0))!=((vt0.c1))), rt0.c2, ((rt0.c4) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(TYPEOF(rt0.c4), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((MAX(rt0.c2, vt0.c1))AND(v0.c0)))AND(CAST(rt0.c3 AS TEXT))) ORDER BY ((v0.c0)/(v0.c0)) COLLATE RTRIM DESC  NULLS LAST, (((CAST(rt0.c5 AS NUMERIC), rt0.c3 COLLATE RTRIM, rt0.c1 COLLATE RTRIM))==((((v0.c0)<=(rt0.c2)), (rt0.c1 IN ()), (NOT (vt0.c0))))), (((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN NULL WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c4 IN ()), CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c5 ELSE v0.c0 END))<>(((((v0.c0))<>((vt0.c1))), rt0.c2, ((rt0.c4) ISNULL)))) ASC);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((MAX(rt0.c2, vt0.c1))AND(v0.c0)))AND(CAST(rt0.c3 AS TEXT))) WHERE (COALESCE(TYPEOF(rt0.c4), CAST(vt0.c0 AS INTEGER))) ORDER BY ((v0.c0)/(v0.c0)) COLLATE RTRIM DESC  NULLS LAST, (((CAST(rt0.c5 AS NUMERIC), rt0.c3 COLLATE RTRIM, rt0.c1 COLLATE RTRIM))=((((v0.c0)<=(rt0.c2)), (rt0.c1 IN ()), (NOT (vt0.c0))))), (((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN NULL WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c4 IN ()), CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c5 ELSE v0.c0 END))!=(((((v0.c0))!=((vt0.c1))), rt0.c2, ((rt0.c4) ISNULL)))) ASC;
SELECT * FROM v0 WHERE ((((v0.c0)-(v0.c0)) IN (NULL COLLATE RTRIM, ((v0.c0)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)-(v0.c0)) IN (NULL COLLATE RTRIM, ((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)-(v0.c0)) IN (NULL COLLATE RTRIM, ((v0.c0)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)-(v0.c0)) IN (NULL COLLATE RTRIM, ((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)-(v0.c0)) IN (NULL COLLATE RTRIM, ((v0.c0)OR(v0.c0)))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((NULL)LIKE(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) ORDER BY CASE WHEN ((vt0.c1)AND(rt0.c4)) THEN (rt0.c4 IN (rt0.c5)) WHEN (- (rt0.c4)) THEN -1688204079 WHEN ((rt0.c4) BETWEEN ('-414719415') AND (v0.c0)) THEN CASE WHEN vt0.c1 THEN '3_' WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c5 END ELSE CAST(vt0.c1 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CASE WHEN ((vt0.c1)AND(rt0.c4)) THEN (rt0.c4 IN (rt0.c5)) WHEN (- (rt0.c4)) THEN -1688204079 WHEN ((rt0.c4) BETWEEN ('-414719415') AND (v0.c0)) THEN CASE WHEN vt0.c1 THEN '3_' WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c5 END ELSE CAST(vt0.c1 AS INTEGER) END);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((NULL)LIKE(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) ORDER BY CASE WHEN ((vt0.c1)AND(rt0.c4)) THEN (rt0.c4 IN (rt0.c5)) WHEN (- (rt0.c4)) THEN -1688204079 WHEN ((rt0.c4) BETWEEN ('-414719415') AND (v0.c0)) THEN CASE WHEN vt0.c1 THEN '3_' WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c5 END ELSE CAST(vt0.c1 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CASE WHEN ((vt0.c1)AND(rt0.c4)) THEN (rt0.c4 IN (rt0.c5)) WHEN (- (rt0.c4)) THEN -1688204079 WHEN ((rt0.c4) BETWEEN ('-414719415') AND (v0.c0)) THEN CASE WHEN vt0.c1 THEN '3_' WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c5 END ELSE CAST(vt0.c1 AS INTEGER) END);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((NULL)LIKE(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) ORDER BY CASE WHEN ((vt0.c1)AND(rt0.c4)) THEN (rt0.c4 IN (rt0.c5)) WHEN (- (rt0.c4)) THEN -1688204079 WHEN ((rt0.c4) BETWEEN ('-414719415') AND (v0.c0)) THEN CASE WHEN vt0.c1 THEN '3_' WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c5 END ELSE CAST(vt0.c1 AS INTEGER) END;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- (v0.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c4) IS FALSE))LIKE((((vt0.c1, v0.c0, rt0.c0)) BETWEEN ((rt0.c4, vt0.c0, rt0.c5)) AND ((vt0.c0, vt0.c0, NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c4) IS FALSE))LIKE((((vt0.c1, v0.c0, rt0.c0)) BETWEEN ((rt0.c4, vt0.c0, rt0.c5)) AND ((vt0.c0, vt0.c0, NULL))))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- (v0.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c4) IS FALSE))LIKE((((vt0.c1, v0.c0, rt0.c0)) BETWEEN ((rt0.c4, vt0.c0, rt0.c5)) AND ((vt0.c0, vt0.c0, NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c4) IS FALSE))LIKE((((vt0.c1, v0.c0, rt0.c0)) BETWEEN ((rt0.c4, vt0.c0, rt0.c5)) AND ((vt0.c0, vt0.c0, NULL))))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- (v0.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c4) IS FALSE))LIKE((((vt0.c1, v0.c0, rt0.c0)) BETWEEN ((rt0.c4, vt0.c0, rt0.c5)) AND ((vt0.c0, vt0.c0, NULL)))));
SELECT ALL * FROM vt0 WHERE (HEX(((vt0.c1) ISNULL))) ORDER BY x'' ASC  NULLS FIRST, (- (((NULL)IS NOT('0.2284424224432453')))) DESC, (((((((vt0.c1, vt0.c1, vt0.c1))<=((0X781a1abd, vt0.c0, vt0.c1))))OR((vt0.c1 IN ()))))AND(NULL COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt0.c1) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS FIRST, (- (((NULL)IS NOT('0.2284424224432453')))) DESC, (((((((vt0.c1, vt0.c1, vt0.c1))<=((0x781a1abd, vt0.c0, vt0.c1))))OR((vt0.c1 IN ()))))AND(NULL COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0 WHERE (HEX(((vt0.c1) ISNULL))) ORDER BY x'' ASC  NULLS FIRST, (- (((NULL)IS NOT('0.2284424224432453')))) DESC, (((((((vt0.c1, vt0.c1, vt0.c1))<=((0X781a1abd, vt0.c0, vt0.c1))))OR((vt0.c1 IN ()))))AND(NULL COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt0.c1) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS FIRST, (- (((NULL)IS NOT('0.2284424224432453')))) DESC, (((((((vt0.c1, vt0.c1, vt0.c1))<=((0x781a1abd, vt0.c0, vt0.c1))))OR((vt0.c1 IN ()))))AND(NULL COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0 WHERE (HEX(((vt0.c1) ISNULL))) ORDER BY x'' ASC  NULLS FIRST, (- (((NULL)IS NOT('0.2284424224432453')))) DESC, (((((((vt0.c1, vt0.c1, vt0.c1))<=((0X781a1abd, vt0.c0, vt0.c1))))OR((vt0.c1 IN ()))))AND(NULL COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((HEX(rt0.c2)) NOTNULL)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c2)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((HEX(rt0.c2)) NOTNULL)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c2)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((HEX(rt0.c2)) NOTNULL)) ORDER BY x''  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((((('982970945')&(rt0.c4)))+((((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((rt0.c4, x'', rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c5)))))) ORDER BY ((((rt0.c2) NOT NULL)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('982970945')&(rt0.c4)))+((((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((rt0.c4, x'', rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c5)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2) NOT NULL)) IS FALSE)  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE ((((('982970945')&(rt0.c4)))+((((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((rt0.c4, x'', rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c5)))))) ORDER BY ((((rt0.c2) NOT NULL)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('982970945')&(rt0.c4)))+((((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((rt0.c4, x'', rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c5)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2) NOT NULL)) IS FALSE)  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE ((((('982970945')&(rt0.c4)))+((((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((rt0.c4, x'', rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c5)))))) ORDER BY ((((rt0.c2) NOT NULL)) IS FALSE)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c2)*(rt0.c1)))<=(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c1)))<=(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)*(rt0.c1)))<=(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c1)))<=(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)*(rt0.c1)))<=(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END)));
SELECT COUNT(*) FROM v0, rt0 WHERE (x'') ORDER BY (((((rt0.c2)AND(x'')))AND(rt0.c3)) IN ((- (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c2)AND(x'')))AND(rt0.c3)) IN ((- (rt0.c2)))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (x'') ORDER BY (((((rt0.c2)AND(x'')))AND(rt0.c3)) IN ((- (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c2)AND(x'')))AND(rt0.c3)) IN ((- (rt0.c2)))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (x'') ORDER BY (((((rt0.c2)AND(x'')))AND(rt0.c3)) IN ((- (rt0.c2)))) ASC;
SELECT * FROM v0, vt0 NOT INDEXED WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c1))>((v0.c0, vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c1)))OR('f{')))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c1))>((v0.c0, vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c1)))OR('f{')))))AND(v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 NOT INDEXED WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c1))>((v0.c0, vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c1)))OR('f{')))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c1))>((v0.c0, vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c1)))OR('f{')))))AND(v0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 NOT INDEXED WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c1))>((v0.c0, vt0.c0, vt0.c1))))AND(vt0.c0 COLLATE NOCASE)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c1)))OR('f{')))))AND(v0.c0)));
SELECT * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c0)%(v0.c0)))AND((((rt0.c2))>=((v0.c0))))))OR(((v0.c0)AND(rt0.c5)))))AND((- (rt0.c3)))))AND(CAST(rt0.c1 AS REAL))) WHERE (CASE ((rt0.c4)AND(vt0.c1))  WHEN (NOT (vt0.c1)) THEN ((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)) WHEN ((rt0.c1)<=(vt0.c1)) THEN ((vt0.c1) NOTNULL) WHEN (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((0.935765632685947, rt0.c3, vt0.c0)) AND ((rt0.c1, vt0.c1, rt0.c4))) THEN (- (rt0.c4)) ELSE (rt0.c1 IN ()) END) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE NOCASE  NULLS FIRST, rt0.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4)AND(vt0.c1))  WHEN (NOT (vt0.c1)) THEN ((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)) WHEN ((rt0.c1)<=(vt0.c1)) THEN ((vt0.c1) NOTNULL) WHEN (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((0.935765632685947, rt0.c3, vt0.c0)) AND ((rt0.c1, vt0.c1, rt0.c4))) THEN (- (rt0.c4)) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c0)%(v0.c0)))AND((((rt0.c2))>=((v0.c0))))))OR(((v0.c0)AND(rt0.c5)))))AND((- (rt0.c3)))))AND(CAST(rt0.c1 AS REAL))) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE NOCASE  NULLS FIRST, rt0.c3 DESC  NULLS FIRST);
SELECT * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c0)%(v0.c0)))AND((((rt0.c2))>=((v0.c0))))))OR(((v0.c0)AND(rt0.c5)))))AND((- (rt0.c3)))))AND(CAST(rt0.c1 AS REAL))) WHERE (CASE ((rt0.c4)AND(vt0.c1))  WHEN (NOT (vt0.c1)) THEN ((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)) WHEN ((rt0.c1)<=(vt0.c1)) THEN ((vt0.c1) NOTNULL) WHEN (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((0.935765632685947, rt0.c3, vt0.c0)) AND ((rt0.c1, vt0.c1, rt0.c4))) THEN (- (rt0.c4)) ELSE (rt0.c1 IN ()) END) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE NOCASE  NULLS FIRST, rt0.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4)AND(vt0.c1))  WHEN (NOT (vt0.c1)) THEN ((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)) WHEN ((rt0.c1)<=(vt0.c1)) THEN ((vt0.c1) NOTNULL) WHEN (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((0.935765632685947, rt0.c3, vt0.c0)) AND ((rt0.c1, vt0.c1, rt0.c4))) THEN (- (rt0.c4)) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c0)%(v0.c0)))AND((((rt0.c2))>=((v0.c0))))))OR(((v0.c0)AND(rt0.c5)))))AND((- (rt0.c3)))))AND(CAST(rt0.c1 AS REAL))) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE NOCASE  NULLS FIRST, rt0.c3 DESC  NULLS FIRST);
SELECT * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c0)%(v0.c0)))AND((((rt0.c2))>=((v0.c0))))))OR(((v0.c0)AND(rt0.c5)))))AND((- (rt0.c3)))))AND(CAST(rt0.c1 AS REAL))) WHERE (CASE ((rt0.c4)AND(vt0.c1))  WHEN (NOT (vt0.c1)) THEN ((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)) WHEN ((rt0.c1)<=(vt0.c1)) THEN ((vt0.c1) NOTNULL) WHEN (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((0.935765632685947, rt0.c3, vt0.c0)) AND ((rt0.c1, vt0.c1, rt0.c4))) THEN (- (rt0.c4)) ELSE (rt0.c1 IN ()) END) ORDER BY CAST(rt0.c2 AS BLOB) COLLATE NOCASE  NULLS FIRST, rt0.c3 DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((- (v0.c0))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((- (v0.c0))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((- (v0.c0))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS NUMERIC) DESC  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 END IN ()) WHERE ((((rt0.c2 IN ())) BETWEEN (((rt0.c5)-(rt0.c3))) AND ('8o'))) ORDER BY json_array(((rt0.c1) NOT NULL), CAST(rt0.c2 AS INTEGER), CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c4) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) BETWEEN (((rt0.c5)-(rt0.c3))) AND ('8o'))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 END IN ()) ORDER BY json_array(((rt0.c1) NOT NULL), CAST(rt0.c2 AS INTEGER), CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c4) DESC);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 END IN ()) WHERE ((((rt0.c2 IN ())) BETWEEN (((rt0.c5)-(rt0.c3))) AND ('8o'))) ORDER BY json_array(((rt0.c1) NOT NULL), CAST(rt0.c2 AS INTEGER), CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c4) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) BETWEEN (((rt0.c5)-(rt0.c3))) AND ('8o'))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 END IN ()) ORDER BY json_array(((rt0.c1) NOT NULL), CAST(rt0.c2 AS INTEGER), CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c4) DESC);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 END IN ()) WHERE ((((rt0.c2 IN ())) BETWEEN (((rt0.c5)-(rt0.c3))) AND ('8o'))) ORDER BY json_array(((rt0.c1) NOT NULL), CAST(rt0.c2 AS INTEGER), CASE WHEN rt0.c2 THEN vt0.c0 END, rt0.c4) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<>(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c1)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)!=(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<>(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c1)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)!=(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<>(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c1)<>(vt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CASE CAST(NULL AS BLOB)  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c3 END THEN NULL WHEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (rt0.c3)) THEN rt0.c3 COLLATE BINARY WHEN (((rt0.c2)) NOT BETWEEN ((-367973468)) AND ((rt0.c3))) THEN (((rt0.c0))<((rt0.c0))) ELSE ((rt0.c4)!=(rt0.c1)) END) ORDER BY TRIM(DISTINCT ((((((((rt0.c2)AND(rt0.c0)))AND('2244846')))OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c1)OR(rt0.c5)))OR(rt0.c3)))  NULLS FIRST, ((((((((CAST(rt0.c2 AS TEXT))AND((('QP&du洳')==(rt0.c1)))))OR(((rt0.c4)<=(rt0.c4)))))OR(TYPEOF(rt0.c4))))AND((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(NULL AS BLOB)  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c3 END THEN NULL WHEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (rt0.c3)) THEN rt0.c3 COLLATE BINARY WHEN (((rt0.c2)) NOT BETWEEN ((-367973468)) AND ((rt0.c3))) THEN (((rt0.c0))<((rt0.c0))) ELSE ((rt0.c4)!=(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT ((((((((rt0.c2)AND(rt0.c0)))AND('2244846')))OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c1)OR(rt0.c5)))OR(rt0.c3)))  NULLS FIRST, ((((((((CAST(rt0.c2 AS TEXT))AND((('QP&du洳')==(rt0.c1)))))OR(((rt0.c4)<=(rt0.c4)))))OR(TYPEOF(rt0.c4))))AND((NOT (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CASE CAST(NULL AS BLOB)  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c3 END THEN NULL WHEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (rt0.c3)) THEN rt0.c3 COLLATE BINARY WHEN (((rt0.c2)) NOT BETWEEN ((-367973468)) AND ((rt0.c3))) THEN (((rt0.c0))<((rt0.c0))) ELSE ((rt0.c4)!=(rt0.c1)) END) ORDER BY TRIM(DISTINCT ((((((((rt0.c2)AND(rt0.c0)))AND('2244846')))OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c1)OR(rt0.c5)))OR(rt0.c3)))  NULLS FIRST, ((((((((CAST(rt0.c2 AS TEXT))AND((('QP&du洳')==(rt0.c1)))))OR(((rt0.c4)<=(rt0.c4)))))OR(TYPEOF(rt0.c4))))AND((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(NULL AS BLOB)  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c3 END THEN NULL WHEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (rt0.c3)) THEN rt0.c3 COLLATE BINARY WHEN (((rt0.c2)) NOT BETWEEN ((-367973468)) AND ((rt0.c3))) THEN (((rt0.c0))<((rt0.c0))) ELSE ((rt0.c4)!=(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT ((((((((rt0.c2)AND(rt0.c0)))AND('2244846')))OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c1)OR(rt0.c5)))OR(rt0.c3)))  NULLS FIRST, ((((((((CAST(rt0.c2 AS TEXT))AND((('QP&du洳')==(rt0.c1)))))OR(((rt0.c4)<=(rt0.c4)))))OR(TYPEOF(rt0.c4))))AND((NOT (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CASE CAST(NULL AS BLOB)  WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c3 END THEN NULL WHEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (rt0.c3)) THEN rt0.c3 COLLATE BINARY WHEN (((rt0.c2)) NOT BETWEEN ((-367973468)) AND ((rt0.c3))) THEN (((rt0.c0))<((rt0.c0))) ELSE ((rt0.c4)!=(rt0.c1)) END) ORDER BY TRIM(DISTINCT ((((((((rt0.c2)AND(rt0.c0)))AND('2244846')))OR(rt0.c2)))OR(rt0.c2)), ((((rt0.c1)OR(rt0.c5)))OR(rt0.c3)))  NULLS FIRST, ((((((((CAST(rt0.c2 AS TEXT))AND((('QP&du洳')==(rt0.c1)))))OR(((rt0.c4)<=(rt0.c4)))))OR(TYPEOF(rt0.c4))))AND((NOT (rt0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (vt0.c0) ORDER BY ((((((rt0.c3)AND(rt0.c5)))AND(rt0.c5)))IS(NULLIF(rt0.c1, vt0.c1)))  NULLS LAST, CASE WHEN (~ (vt0.c1)) THEN rt0.c3 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((rt0.c3)AND(rt0.c5)))AND(rt0.c5)))IS(NULLIF(rt0.c1, vt0.c1)))  NULLS LAST, CASE WHEN (~ (vt0.c1)) THEN rt0.c3 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (vt0.c0) ORDER BY ((((((rt0.c3)AND(rt0.c5)))AND(rt0.c5)))IS(NULLIF(rt0.c1, vt0.c1)))  NULLS LAST, CASE WHEN (~ (vt0.c1)) THEN rt0.c3 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((rt0.c3)AND(rt0.c5)))AND(rt0.c5)))IS(NULLIF(rt0.c1, vt0.c1)))  NULLS LAST, CASE WHEN (~ (vt0.c1)) THEN rt0.c3 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (vt0.c0) ORDER BY ((((((rt0.c3)AND(rt0.c5)))AND(rt0.c5)))IS(NULLIF(rt0.c1, vt0.c1)))  NULLS LAST, CASE WHEN (~ (vt0.c1)) THEN rt0.c3 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON NULLIF(rt0.c1, CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) WHERE (((((- (rt0.c0))))!=((''))));
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c0))))!=(('')))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON NULLIF(rt0.c1, CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON NULLIF(rt0.c1, CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) WHERE (((((- (rt0.c0))))!=((''))));
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c0))))!=(('')))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON NULLIF(rt0.c1, CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON NULLIF(rt0.c1, CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) WHERE (((((- (rt0.c0))))!=((''))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c5)OR(rt0.c4))) NOT BETWEEN ((~ (rt0.c5))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)OR(rt0.c4))) NOT BETWEEN ((~ (rt0.c5))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c5)OR(rt0.c4))) NOT BETWEEN ((~ (rt0.c5))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)OR(rt0.c4))) NOT BETWEEN ((~ (rt0.c5))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c5)OR(rt0.c4))) NOT BETWEEN ((~ (rt0.c5))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))));
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c4 AS NUMERIC) AS NUMERIC)) ORDER BY CASE WHEN ((x'') NOTNULL) THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN (((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1))) WHEN (NOT (rt0.c4)) THEN (((('')OR(rt0.c2)))OR(rt0.c0)) ELSE (((rt0.c5)) BETWEEN ((x'')) AND ((rt0.c5))) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((x'') NOTNULL) THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN (((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1))) WHEN (NOT (rt0.c4)) THEN (((('')OR(rt0.c2)))OR(rt0.c0)) ELSE (((rt0.c5)) BETWEEN ((x'')) AND ((rt0.c5))) END DESC);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c4 AS NUMERIC) AS NUMERIC)) ORDER BY CASE WHEN ((x'') NOTNULL) THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN (((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1))) WHEN (NOT (rt0.c4)) THEN (((('')OR(rt0.c2)))OR(rt0.c0)) ELSE (((rt0.c5)) BETWEEN ((x'')) AND ((rt0.c5))) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((x'') NOTNULL) THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN (((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1))) WHEN (NOT (rt0.c4)) THEN (((('')OR(rt0.c2)))OR(rt0.c0)) ELSE (((rt0.c5)) BETWEEN ((x'')) AND ((rt0.c5))) END DESC);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c4 AS NUMERIC) AS NUMERIC)) ORDER BY CASE WHEN ((x'') NOTNULL) THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN (((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1))) WHEN (NOT (rt0.c4)) THEN (((('')OR(rt0.c2)))OR(rt0.c0)) ELSE (((rt0.c5)) BETWEEN ((x'')) AND ((rt0.c5))) END DESC;
SELECT * FROM vt0 CROSS JOIN rt0 ON (((- (vt0.c1)))>>((((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, NULL, vt0.c1))))) WHERE (CASE WHEN ((rt0.c1)|(rt0.c5)) THEN ((rt0.c3)==(vt0.c1)) ELSE (((rt0.c3))<=((rt0.c1))) END) ORDER BY (((~ (rt0.c2)))>(CAST(rt0.c5 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)|(rt0.c5)) THEN ((rt0.c3)=(vt0.c1)) ELSE (((rt0.c3))<=((rt0.c1))) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((- (vt0.c1)))>>((((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, NULL, vt0.c1))))) ORDER BY (((~ (rt0.c2)))>(CAST(rt0.c5 AS INTEGER)))  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((- (vt0.c1)))>>((((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, NULL, vt0.c1))))) WHERE (CASE WHEN ((rt0.c1)|(rt0.c5)) THEN ((rt0.c3)==(vt0.c1)) ELSE (((rt0.c3))<=((rt0.c1))) END) ORDER BY (((~ (rt0.c2)))>(CAST(rt0.c5 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)|(rt0.c5)) THEN ((rt0.c3)=(vt0.c1)) ELSE (((rt0.c3))<=((rt0.c1))) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((- (vt0.c1)))>>((((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, NULL, vt0.c1))))) ORDER BY (((~ (rt0.c2)))>(CAST(rt0.c5 AS INTEGER)))  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((- (vt0.c1)))>>((((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, NULL, vt0.c1))))) WHERE (CASE WHEN ((rt0.c1)|(rt0.c5)) THEN ((rt0.c3)==(vt0.c1)) ELSE (((rt0.c3))<=((rt0.c1))) END) ORDER BY (((~ (rt0.c2)))>(CAST(rt0.c5 AS INTEGER)))  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c5, v0.c0, rt0.c0)) NOT BETWEEN ((((x'') NOT NULL), (rt0.c3 IN ()), rt0.c4 COLLATE RTRIM)) AND (((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((v0.c0) NOT NULL), rt0.c1 COLLATE NOCASE)))) ORDER BY '' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c5, v0.c0, rt0.c0)) NOT BETWEEN ((((x'') NOT NULL), (rt0.c3 IN ()), rt0.c4 COLLATE RTRIM)) AND (((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((v0.c0) NOT NULL), rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY '' ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c5, v0.c0, rt0.c0)) NOT BETWEEN ((((x'') NOT NULL), (rt0.c3 IN ()), rt0.c4 COLLATE RTRIM)) AND (((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((v0.c0) NOT NULL), rt0.c1 COLLATE NOCASE)))) ORDER BY '' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c5, v0.c0, rt0.c0)) NOT BETWEEN ((((x'') NOT NULL), (rt0.c3 IN ()), rt0.c4 COLLATE RTRIM)) AND (((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((v0.c0) NOT NULL), rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY '' ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c5, v0.c0, rt0.c0)) NOT BETWEEN ((((x'') NOT NULL), (rt0.c3 IN ()), rt0.c4 COLLATE RTRIM)) AND (((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((v0.c0) NOT NULL), rt0.c1 COLLATE NOCASE)))) ORDER BY '' ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c3))) IN ())) ORDER BY NULL, (- (rt0.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY NULL, (- (rt0.c4))  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c3))) IN ())) ORDER BY NULL, (- (rt0.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY NULL, (- (rt0.c4))  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c3))) IN ())) ORDER BY NULL, (- (rt0.c4))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(((v0.c0)OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((v0.c0)OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(((v0.c0)OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((v0.c0)OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(((v0.c0)OR(v0.c0))));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY ((rt0.c3) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((rt0.c3) NOTNULL) ASC);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY ((rt0.c3) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((rt0.c3) NOTNULL) ASC);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY ((rt0.c3) NOTNULL) ASC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c3)AND(rt0.c5)))OR(rt0.c0)) IN ()) WHERE (ABS(DISTINCT (~ (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (~ (rt0.c3)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c3)AND(rt0.c5)))OR(rt0.c0)) IN ()));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c3)AND(rt0.c5)))OR(rt0.c0)) IN ()) WHERE (ABS(DISTINCT (~ (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (~ (rt0.c3)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c3)AND(rt0.c5)))OR(rt0.c0)) IN ()));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c3)AND(rt0.c5)))OR(rt0.c0)) IN ()) WHERE (ABS(DISTINCT (~ (rt0.c3))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (1483305214) ORDER BY (((rt0.c1)==(rt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((1483305214) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)==(rt0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (1483305214) ORDER BY (((rt0.c1)==(rt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((1483305214) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)==(rt0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (1483305214) ORDER BY (((rt0.c1)==(rt0.c1)) IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) ORDER BY ((((CAST(rt0.c0 AS NUMERIC))OR(CAST(rt0.c1 AS TEXT))))OR((((rt0.c2))>=((rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS NUMERIC))OR(CAST(rt0.c1 AS TEXT))))OR((((rt0.c2))>=((rt0.c3)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) ORDER BY ((((CAST(rt0.c0 AS NUMERIC))OR(CAST(rt0.c1 AS TEXT))))OR((((rt0.c2))>=((rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS NUMERIC))OR(CAST(rt0.c1 AS TEXT))))OR((((rt0.c2))>=((rt0.c3)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) ORDER BY ((((CAST(rt0.c0 AS NUMERIC))OR(CAST(rt0.c1 AS TEXT))))OR((((rt0.c2))>=((rt0.c3)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (3.97618705E8) ORDER BY (- (rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((3.97618705E8) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (3.97618705E8) ORDER BY (- (rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((3.97618705E8) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (3.97618705E8) ORDER BY (- (rt0.c1 COLLATE RTRIM));
SELECT ALL * FROM vt0 WHERE (CASE WHEN NULL THEN 0.9836694558017473 ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN 0.9836694558017473 ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN NULL THEN 0.9836694558017473 ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN 0.9836694558017473 ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN NULL THEN 0.9836694558017473 ELSE (~ (vt0.c0)) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((rt0.c5)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c5)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((rt0.c5)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c5)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((rt0.c5)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((rt0.c1)*(rt0.c2)))AND(rt0.c4)))AND(((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c5)))OR(rt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)*(rt0.c2)))AND(rt0.c4)))AND(((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c5)))OR(rt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((rt0.c1)*(rt0.c2)))AND(rt0.c4)))AND(((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c5)))OR(rt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)*(rt0.c2)))AND(rt0.c4)))AND(((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c5)))OR(rt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((rt0.c1)*(rt0.c2)))AND(rt0.c4)))AND(((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c5)))OR(rt0.c1)))OR(vt0.c0)))));
SELECT * FROM v0 WHERE (((((v0.c0) NOT NULL)) NOT NULL)) ORDER BY CAST(v0.c0 COLLATE BINARY AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 COLLATE BINARY AS TEXT) DESC);
SELECT * FROM v0 WHERE (((((v0.c0) NOT NULL)) NOT NULL)) ORDER BY CAST(v0.c0 COLLATE BINARY AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 COLLATE BINARY AS TEXT) DESC);
SELECT * FROM v0 WHERE (((((v0.c0) NOT NULL)) NOT NULL)) ORDER BY CAST(v0.c0 COLLATE BINARY AS TEXT) DESC;
SELECT * FROM vt0, rt0, v0 WHERE (((((((((((((((rt0.c5)OR(x'')))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c5)OR(x'')))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((((((((((((rt0.c5)OR(x'')))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c5)OR(x'')))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((((((((((((rt0.c5)OR(x'')))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2))) NOTNULL));
SELECT * FROM v0, rt0, vt0 WHERE ((+ ((((rt0.c5))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c5))<((vt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((+ ((((rt0.c5))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c5))<((vt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((+ ((((rt0.c5))<((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((+ (rt0.c0)))<('O{' COLLATE BINARY))) ORDER BY (((-1.516255991E9))<=((CAST(rt0.c0 AS NUMERIC)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))<('O{' COLLATE BINARY))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, rt0 ORDER BY (((-1.516255991E9))<=((CAST(rt0.c0 AS NUMERIC)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((+ (rt0.c0)))<('O{' COLLATE BINARY))) ORDER BY (((-1.516255991E9))<=((CAST(rt0.c0 AS NUMERIC)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))<('O{' COLLATE BINARY))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, rt0 ORDER BY (((-1.516255991E9))<=((CAST(rt0.c0 AS NUMERIC)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((+ (rt0.c0)))<('O{' COLLATE BINARY))) ORDER BY (((-1.516255991E9))<=((CAST(rt0.c0 AS NUMERIC)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 NOT INDEXED, v0 INNER JOIN rt0 ON ((((v0.c0) ISNULL)) BETWEEN (((v0.c0) NOTNULL)) AND ((rt0.c1 IN (rt0.c1, rt0.c0)))) WHERE (((CASE WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END)>(LIKELIHOOD(rt0.c5, 0.8602873950246979)))) ORDER BY CASE ((rt0.c0)GLOB(rt0.c2))  WHEN (NOT (rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c3)<<(rt0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND ('')) WHEN rt0.c3 THEN rt0.c0 COLLATE RTRIM END  NULLS LAST, ((((((rt0.c5)AND(0.9146345630528829)))OR(vt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END)>(LIKELIHOOD(rt0.c5, 0.8602873950246979)))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((((v0.c0) ISNULL)) BETWEEN (((v0.c0) NOTNULL)) AND ((rt0.c1 IN (rt0.c1, rt0.c0)))) ORDER BY CASE ((rt0.c0)GLOB(rt0.c2))  WHEN (NOT (rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c3)<<(rt0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND ('')) WHEN rt0.c3 THEN rt0.c0 COLLATE RTRIM END  NULLS LAST, ((((((rt0.c5)AND(0.9146345630528829)))OR(vt0.c1))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED, v0 INNER JOIN rt0 ON ((((v0.c0) ISNULL)) BETWEEN (((v0.c0) NOTNULL)) AND ((rt0.c1 IN (rt0.c1, rt0.c0)))) WHERE (((CASE WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END)>(LIKELIHOOD(rt0.c5, 0.8602873950246979)))) ORDER BY CASE ((rt0.c0)GLOB(rt0.c2))  WHEN (NOT (rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c3)<<(rt0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND ('')) WHEN rt0.c3 THEN rt0.c0 COLLATE RTRIM END  NULLS LAST, ((((((rt0.c5)AND(0.9146345630528829)))OR(vt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END)>(LIKELIHOOD(rt0.c5, 0.8602873950246979)))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((((v0.c0) ISNULL)) BETWEEN (((v0.c0) NOTNULL)) AND ((rt0.c1 IN (rt0.c1, rt0.c0)))) ORDER BY CASE ((rt0.c0)GLOB(rt0.c2))  WHEN (NOT (rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c3)<<(rt0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND ('')) WHEN rt0.c3 THEN rt0.c0 COLLATE RTRIM END  NULLS LAST, ((((((rt0.c5)AND(0.9146345630528829)))OR(vt0.c1))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED, v0 INNER JOIN rt0 ON ((((v0.c0) ISNULL)) BETWEEN (((v0.c0) NOTNULL)) AND ((rt0.c1 IN (rt0.c1, rt0.c0)))) WHERE (((CASE WHEN v0.c0 THEN rt0.c3 ELSE v0.c0 END)>(LIKELIHOOD(rt0.c5, 0.8602873950246979)))) ORDER BY CASE ((rt0.c0)GLOB(rt0.c2))  WHEN (NOT (rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c3)<<(rt0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND ('')) WHEN rt0.c3 THEN rt0.c0 COLLATE RTRIM END  NULLS LAST, ((((((rt0.c5)AND(0.9146345630528829)))OR(vt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((1494167806, v0.c0, v0.c0)) AND ((0.4320612270507017, v0.c0, v0.c0))) THEN (v0.c0 IN (v0.c0, v0.c0)) END) ORDER BY 0.9257405613887223, ((v0.c0) NOTNULL) DESC, (CASE '1209539344'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE BINARY  WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((1494167806, v0.c0, v0.c0)) AND ((0.4320612270507017, v0.c0, v0.c0))) THEN (v0.c0 IN (v0.c0, v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY 0.9257405613887223, ((v0.c0) NOTNULL) DESC, (CASE '1209539344'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((1494167806, v0.c0, v0.c0)) AND ((0.4320612270507017, v0.c0, v0.c0))) THEN (v0.c0 IN (v0.c0, v0.c0)) END) ORDER BY 0.9257405613887223, ((v0.c0) NOTNULL) DESC, (CASE '1209539344'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE BINARY  WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((1494167806, v0.c0, v0.c0)) AND ((0.4320612270507017, v0.c0, v0.c0))) THEN (v0.c0 IN (v0.c0, v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY 0.9257405613887223, ((v0.c0) NOTNULL) DESC, (CASE '1209539344'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((1494167806, v0.c0, v0.c0)) AND ((0.4320612270507017, v0.c0, v0.c0))) THEN (v0.c0 IN (v0.c0, v0.c0)) END) ORDER BY 0.9257405613887223, ((v0.c0) NOTNULL) DESC, (CASE '1209539344'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)<<(vt0.c1)) THEN json_quote(vt0.c1) WHEN ((vt0.c0)&(vt0.c1)) THEN vt0.c1 WHEN (NOT (vt0.c1)) THEN (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) WHEN (vt0.c0 IN (vt0.c0)) THEN -767957591 WHEN ((vt0.c1)==('')) THEN LIKELIHOOD(vt0.c0, 0.5207066886206848) ELSE ((vt0.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)<<(vt0.c1)) THEN json_quote(vt0.c1) WHEN ((vt0.c0)&(vt0.c1)) THEN vt0.c1 WHEN (NOT (vt0.c1)) THEN (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) WHEN (vt0.c0 IN (vt0.c0)) THEN -767957591 WHEN ((vt0.c1)=('')) THEN LIKELIHOOD(vt0.c0, 0.5207066886206848) ELSE ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)<<(vt0.c1)) THEN json_quote(vt0.c1) WHEN ((vt0.c0)&(vt0.c1)) THEN vt0.c1 WHEN (NOT (vt0.c1)) THEN (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) WHEN (vt0.c0 IN (vt0.c0)) THEN -767957591 WHEN ((vt0.c1)==('')) THEN LIKELIHOOD(vt0.c0, 0.5207066886206848) ELSE ((vt0.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)<<(vt0.c1)) THEN json_quote(vt0.c1) WHEN ((vt0.c0)&(vt0.c1)) THEN vt0.c1 WHEN (NOT (vt0.c1)) THEN (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) WHEN (vt0.c0 IN (vt0.c0)) THEN -767957591 WHEN ((vt0.c1)=('')) THEN LIKELIHOOD(vt0.c0, 0.5207066886206848) ELSE ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)<<(vt0.c1)) THEN json_quote(vt0.c1) WHEN ((vt0.c0)&(vt0.c1)) THEN vt0.c1 WHEN (NOT (vt0.c1)) THEN (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) WHEN (vt0.c0 IN (vt0.c0)) THEN -767957591 WHEN ((vt0.c1)==('')) THEN LIKELIHOOD(vt0.c0, 0.5207066886206848) ELSE ((vt0.c1) NOTNULL) END);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (x'')))GLOB((vt0.c0 IN (vt0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (x'')))GLOB((vt0.c0 IN (vt0.c0, v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (x'')))GLOB((vt0.c0 IN (vt0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (x'')))GLOB((vt0.c0 IN (vt0.c0, v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (x'')))GLOB((vt0.c0 IN (vt0.c0, v0.c0)))));
SELECT ALL * FROM v0 WHERE (((((v0.c0)%(v0.c0)))>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(v0.c0)))>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)%(v0.c0)))>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%(v0.c0)))>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)%(v0.c0)))>=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((NULL COLLATE BINARY)AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND((rt0.c5 IN ()))) WHERE (CASE WHEN (('U[')IS(rt0.c2)) THEN rt0.c0 COLLATE BINARY END) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('U[')IS(rt0.c2)) THEN rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((NULL COLLATE BINARY)AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND((rt0.c5 IN ()))) ORDER BY rt0.c4  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((NULL COLLATE BINARY)AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND((rt0.c5 IN ()))) WHERE (CASE WHEN (('U[')IS(rt0.c2)) THEN rt0.c0 COLLATE BINARY END) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('U[')IS(rt0.c2)) THEN rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((NULL COLLATE BINARY)AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND((rt0.c5 IN ()))) ORDER BY rt0.c4  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((NULL COLLATE BINARY)AND(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND((rt0.c5 IN ()))) WHERE (CASE WHEN (('U[')IS(rt0.c2)) THEN rt0.c0 COLLATE BINARY END) ORDER BY rt0.c4  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0, vt0 WHERE (x'') ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))-((+ (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))-((+ (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (x'') ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))-((+ (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))-((+ (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (x'') ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))-((+ (rt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>=((rt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>=((rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>=((rt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>=((rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>=((rt0.c0)))) NOTNULL));
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((((((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))>(JULIANDAY(rt0.c3, v0.c0, rt0.c1))) WHERE (GLOB(rt0.c2 COLLATE BINARY, rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((GLOB(rt0.c2 COLLATE BINARY, rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((((((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))>(JULIANDAY(rt0.c3, v0.c0, rt0.c1))));
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((((((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))>(JULIANDAY(rt0.c3, v0.c0, rt0.c1))) WHERE (GLOB(rt0.c2 COLLATE BINARY, rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((GLOB(rt0.c2 COLLATE BINARY, rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((((((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))>(JULIANDAY(rt0.c3, v0.c0, rt0.c1))));
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON ((((((((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))>(JULIANDAY(rt0.c3, v0.c0, rt0.c1))) WHERE (GLOB(rt0.c2 COLLATE BINARY, rt0.c2 COLLATE BINARY));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((IFNULL(v0.c0, rt0.c0))IS(((rt0.c1) BETWEEN (vt0.c1) AND (v0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(((((rt0.c5)OR(rt0.c0)))OR(rt0.c1))) WHERE ((((rt0.c2, rt0.c2, NULL)) NOT BETWEEN (((vt0.c0 IN ()), (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), '461318673')) AND ((rt0.c5 COLLATE NOCASE, '-1652924776', rt0.c3 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, NULL)) NOT BETWEEN (((vt0.c0 IN ()), (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), '461318673')) AND ((rt0.c5 COLLATE NOCASE, '-1652924776', rt0.c3 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((IFNULL(v0.c0, rt0.c0))IS(((rt0.c1) BETWEEN (vt0.c1) AND (v0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(((((rt0.c5)OR(rt0.c0)))OR(rt0.c1))));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((IFNULL(v0.c0, rt0.c0))IS(((rt0.c1) BETWEEN (vt0.c1) AND (v0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(((((rt0.c5)OR(rt0.c0)))OR(rt0.c1))) WHERE ((((rt0.c2, rt0.c2, NULL)) NOT BETWEEN (((vt0.c0 IN ()), (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), '461318673')) AND ((rt0.c5 COLLATE NOCASE, '-1652924776', rt0.c3 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, NULL)) NOT BETWEEN (((vt0.c0 IN ()), (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), '461318673')) AND ((rt0.c5 COLLATE NOCASE, '-1652924776', rt0.c3 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((IFNULL(v0.c0, rt0.c0))IS(((rt0.c1) BETWEEN (vt0.c1) AND (v0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(((((rt0.c5)OR(rt0.c0)))OR(rt0.c1))));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((IFNULL(v0.c0, rt0.c0))IS(((rt0.c1) BETWEEN (vt0.c1) AND (v0.c0)))) LEFT OUTER JOIN vt0 ON LIKELY(((((rt0.c5)OR(rt0.c0)))OR(rt0.c1))) WHERE ((((rt0.c2, rt0.c2, NULL)) NOT BETWEEN (((vt0.c0 IN ()), (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), '461318673')) AND ((rt0.c5 COLLATE NOCASE, '-1652924776', rt0.c3 COLLATE BINARY))));
SELECT * FROM v0, rt0, vt0 WHERE (IFNULL(UNLIKELY(vt0.c0), ((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c4))));
SELECT SUM(count) FROM (SELECT ((IFNULL(UNLIKELY(vt0.c0), ((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c4)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (IFNULL(UNLIKELY(vt0.c0), ((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c4))));
SELECT SUM(count) FROM (SELECT ((IFNULL(UNLIKELY(vt0.c0), ((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c4)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (IFNULL(UNLIKELY(vt0.c0), ((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c4))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR((((('o\n|wGh뾮')OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR((((('o\n|wGh뾮')OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR((((('o\n|wGh뾮')OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR((((('o\n|wGh뾮')OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR((((('o\n|wGh뾮')OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)IS(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ('718380849') ORDER BY IFNULL(((vt0.c0)<(vt0.c0)), ((vt0.c1) NOTNULL)) ASC  NULLS LAST, (NOT (((vt0.c1)>(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('718380849') IS TRUE)  as count FROM vt0 ORDER BY IFNULL(((vt0.c0)<(vt0.c0)), ((vt0.c1) NOTNULL)) ASC  NULLS LAST, (NOT (((vt0.c1)>(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ('718380849') ORDER BY IFNULL(((vt0.c0)<(vt0.c0)), ((vt0.c1) NOTNULL)) ASC  NULLS LAST, (NOT (((vt0.c1)>(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('718380849') IS TRUE)  as count FROM vt0 ORDER BY IFNULL(((vt0.c0)<(vt0.c0)), ((vt0.c1) NOTNULL)) ASC  NULLS LAST, (NOT (((vt0.c1)>(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ('718380849') ORDER BY IFNULL(((vt0.c0)<(vt0.c0)), ((vt0.c1) NOTNULL)) ASC  NULLS LAST, (NOT (((vt0.c1)>(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)+(vt0.c1)))OR(HEX(DISTINCT vt0.c1))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)+(vt0.c1)))OR(HEX(DISTINCT vt0.c1))))OR(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)+(vt0.c1)))OR(HEX(DISTINCT vt0.c1))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)+(vt0.c1)))OR(HEX(DISTINCT vt0.c1))))OR(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)+(vt0.c1)))OR(HEX(DISTINCT vt0.c1))))OR(NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((0.3722263962186855)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (json_quote(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.3722263962186855)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (json_quote(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((0.3722263962186855)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (json_quote(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.3722263962186855)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (json_quote(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((0.3722263962186855)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (json_quote(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))) ORDER BY json_insert(((vt0.c0) IS TRUE), NULLIF(vt0.c1, vt0.c0), ((vt0.c1)<<(vt0.c1)))  NULLS FIRST, vt0.c0 ASC, ((vt0.c1 COLLATE NOCASE)>((~ (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY json_insert(((vt0.c0) IS TRUE), NULLIF(vt0.c1, vt0.c0), ((vt0.c1)<<(vt0.c1)))  NULLS FIRST, vt0.c0 ASC, ((vt0.c1 COLLATE NOCASE)>((~ (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))) ORDER BY json_insert(((vt0.c0) IS TRUE), NULLIF(vt0.c1, vt0.c0), ((vt0.c1)<<(vt0.c1)))  NULLS FIRST, vt0.c0 ASC, ((vt0.c1 COLLATE NOCASE)>((~ (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY json_insert(((vt0.c0) IS TRUE), NULLIF(vt0.c1, vt0.c0), ((vt0.c1)<<(vt0.c1)))  NULLS FIRST, vt0.c0 ASC, ((vt0.c1 COLLATE NOCASE)>((~ (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0))))) ORDER BY json_insert(((vt0.c0) IS TRUE), NULLIF(vt0.c1, vt0.c0), ((vt0.c1)<<(vt0.c1)))  NULLS FIRST, vt0.c0 ASC, ((vt0.c1 COLLATE NOCASE)>((~ (vt0.c1))));
SELECT * FROM v0, rt0 WHERE (((v0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((v0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((v0.c0 COLLATE RTRIM) NOT NULL));
SELECT * FROM vt0 WHERE (CASE ((vt0.c1)||(vt0.c1))  WHEN (vt0.c0 IN (0.8133929816302311)) THEN json_insert(vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN x'' WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0))<=((vt0.c1))) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN x'' THEN ((vt0.c1)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)||(vt0.c1))  WHEN (vt0.c0 IN (0.8133929816302311)) THEN json_insert(vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN x'' WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0))<=((vt0.c1))) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN x'' THEN ((vt0.c1)>(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c1)||(vt0.c1))  WHEN (vt0.c0 IN (0.8133929816302311)) THEN json_insert(vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN x'' WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0))<=((vt0.c1))) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN x'' THEN ((vt0.c1)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)||(vt0.c1))  WHEN (vt0.c0 IN (0.8133929816302311)) THEN json_insert(vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN x'' WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0))<=((vt0.c1))) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN x'' THEN ((vt0.c1)>(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c1)||(vt0.c1))  WHEN (vt0.c0 IN (0.8133929816302311)) THEN json_insert(vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN x'' WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0))<=((vt0.c1))) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN x'' THEN ((vt0.c1)>(vt0.c0)) END);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c3 AS TEXT))OR(SUBSTR(rt0.c2, x''))))OR(((rt0.c2)OR(rt0.c1)))))AND(((rt0.c0) NOTNULL))))OR('-937231973'))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))) AND ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c5 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c3 AS TEXT))OR(SUBSTR(rt0.c2, x''))))OR(((rt0.c2)OR(rt0.c1)))))AND(((rt0.c0) NOTNULL))))OR('-937231973'))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))) AND ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c5 END))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c3 AS TEXT))OR(SUBSTR(rt0.c2, x''))))OR(((rt0.c2)OR(rt0.c1)))))AND(((rt0.c0) NOTNULL))))OR('-937231973'))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))) AND ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c5 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c3 AS TEXT))OR(SUBSTR(rt0.c2, x''))))OR(((rt0.c2)OR(rt0.c1)))))AND(((rt0.c0) NOTNULL))))OR('-937231973'))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))) AND ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c5 END))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c3 AS TEXT))OR(SUBSTR(rt0.c2, x''))))OR(((rt0.c2)OR(rt0.c1)))))AND(((rt0.c0) NOTNULL))))OR('-937231973'))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))) AND ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c5 END))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((vt0.c0)&(rt0.c1)) IN (x'', ((rt0.c2) IS TRUE)))) ORDER BY ((((rt0.c0)&(v0.c0)))>>(CASE WHEN 8.79113145E8 THEN rt0.c5 ELSE rt0.c2 END)), ((vt0.c0 COLLATE RTRIM) BETWEEN (rt0.c3 COLLATE NOCASE) AND (((1636351716)IS NOT(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)&(rt0.c1)) IN (x'', ((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c0)&(v0.c0)))>>(CASE WHEN 8.79113145E8 THEN rt0.c5 ELSE rt0.c2 END)), ((vt0.c0 COLLATE RTRIM) BETWEEN (rt0.c3 COLLATE NOCASE) AND (((1636351716)IS NOT(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((vt0.c0)&(rt0.c1)) IN (x'', ((rt0.c2) IS TRUE)))) ORDER BY ((((rt0.c0)&(v0.c0)))>>(CASE WHEN 8.79113145E8 THEN rt0.c5 ELSE rt0.c2 END)), ((vt0.c0 COLLATE RTRIM) BETWEEN (rt0.c3 COLLATE NOCASE) AND (((1636351716)IS NOT(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)&(rt0.c1)) IN (x'', ((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c0)&(v0.c0)))>>(CASE WHEN 8.79113145E8 THEN rt0.c5 ELSE rt0.c2 END)), ((vt0.c0 COLLATE RTRIM) BETWEEN (rt0.c3 COLLATE NOCASE) AND (((1636351716)IS NOT(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((((vt0.c0)&(rt0.c1)) IN (x'', ((rt0.c2) IS TRUE)))) ORDER BY ((((rt0.c0)&(v0.c0)))>>(CASE WHEN 8.79113145E8 THEN rt0.c5 ELSE rt0.c2 END)), ((vt0.c0 COLLATE RTRIM) BETWEEN (rt0.c3 COLLATE NOCASE) AND (((1636351716)IS NOT(rt0.c2))));
SELECT * FROM v0, vt0 WHERE (CASE x''  WHEN 0.8251389990992721 THEN v0.c0 ELSE vt0.c1 END COLLATE BINARY) ORDER BY (((((v0.c0) IS TRUE)))<>((TRIM(DISTINCT vt0.c1, vt0.c1)))) ASC, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE x'' END)>(LOWER(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN 0.8251389990992721 THEN v0.c0 ELSE vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c0) IS TRUE)))<>((TRIM(DISTINCT vt0.c1, vt0.c1)))) ASC, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE x'' END)>(LOWER(vt0.c1))));
SELECT * FROM v0, vt0 WHERE (CASE x''  WHEN 0.8251389990992721 THEN v0.c0 ELSE vt0.c1 END COLLATE BINARY) ORDER BY (((((v0.c0) IS TRUE)))<>((TRIM(DISTINCT vt0.c1, vt0.c1)))) ASC, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE x'' END)>(LOWER(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN 0.8251389990992721 THEN v0.c0 ELSE vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c0) IS TRUE)))<>((TRIM(DISTINCT vt0.c1, vt0.c1)))) ASC, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE x'' END)>(LOWER(vt0.c1))));
SELECT * FROM v0, vt0 WHERE (CASE x''  WHEN 0.8251389990992721 THEN v0.c0 ELSE vt0.c1 END COLLATE BINARY) ORDER BY (((((v0.c0) IS TRUE)))<>((TRIM(DISTINCT vt0.c1, vt0.c1)))) ASC, ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE x'' END)>(LOWER(vt0.c1)));
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c1) NOTNULL))%(((rt0.c3)<>(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))%(((rt0.c3)<>(rt0.c5))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c1) NOTNULL))%(((rt0.c3)<>(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))%(((rt0.c3)<>(rt0.c5))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c1) NOTNULL))%(((rt0.c3)<>(rt0.c5)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((CAST(rt0.c3 AS BLOB), CASE WHEN vt0.c1 THEN vt0.c0 END, -1.818106335E9))>(((~ (381029600)), ((rt0.c1) IS TRUE), (NOT (vt0.c1)))))) ORDER BY (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS LAST, ((((-1818106335)GLOB(vt0.c1)))IS(vt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c3 AS BLOB), CASE WHEN vt0.c1 THEN vt0.c0 END, -1.818106335E9))>(((~ (381029600)), ((rt0.c1) IS TRUE), (NOT (vt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS LAST, ((((-1818106335)GLOB(vt0.c1)))IS(vt0.c1 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((CAST(rt0.c3 AS BLOB), CASE WHEN vt0.c1 THEN vt0.c0 END, -1.818106335E9))>(((~ (381029600)), ((rt0.c1) IS TRUE), (NOT (vt0.c1)))))) ORDER BY (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS LAST, ((((-1818106335)GLOB(vt0.c1)))IS(vt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c3 AS BLOB), CASE WHEN vt0.c1 THEN vt0.c0 END, -1.818106335E9))>(((~ (381029600)), ((rt0.c1) IS TRUE), (NOT (vt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS LAST, ((((-1818106335)GLOB(vt0.c1)))IS(vt0.c1 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((CAST(rt0.c3 AS BLOB), CASE WHEN vt0.c1 THEN vt0.c0 END, -1.818106335E9))>(((~ (381029600)), ((rt0.c1) IS TRUE), (NOT (vt0.c1)))))) ORDER BY (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS LAST, ((((-1818106335)GLOB(vt0.c1)))IS(vt0.c1 COLLATE RTRIM)) ASC;
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c4)) BETWEEN ((CAST(x'' AS NUMERIC))) AND ((vt0.c0))) WHERE (CASE ((rt0.c0)!=(rt0.c0))  WHEN ((vt0.c1)%(rt0.c3)) THEN CAST(rt0.c0 AS TEXT) ELSE (vt0.c1 IN (rt0.c2)) END) ORDER BY CAST(rt0.c2 AS NUMERIC)  NULLS LAST, (((((vt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) NOT BETWEEN ((rt0.c3 IN ())) AND (((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) DESC, rt0.c5 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)<>(rt0.c0))  WHEN ((vt0.c1)%(rt0.c3)) THEN CAST(rt0.c0 AS TEXT) ELSE (vt0.c1 IN (rt0.c2)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c4)) BETWEEN ((CAST(x'' AS NUMERIC))) AND ((vt0.c0))) ORDER BY CAST(rt0.c2 AS NUMERIC)  NULLS LAST, (((((vt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) NOT BETWEEN ((rt0.c3 IN ())) AND (((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) DESC, rt0.c5 COLLATE BINARY);
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c4)) BETWEEN ((CAST(x'' AS NUMERIC))) AND ((vt0.c0))) WHERE (CASE ((rt0.c0)!=(rt0.c0))  WHEN ((vt0.c1)%(rt0.c3)) THEN CAST(rt0.c0 AS TEXT) ELSE (vt0.c1 IN (rt0.c2)) END) ORDER BY CAST(rt0.c2 AS NUMERIC)  NULLS LAST, (((((vt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) NOT BETWEEN ((rt0.c3 IN ())) AND (((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) DESC, rt0.c5 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)<>(rt0.c0))  WHEN ((vt0.c1)%(rt0.c3)) THEN CAST(rt0.c0 AS TEXT) ELSE (vt0.c1 IN (rt0.c2)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c4)) BETWEEN ((CAST(x'' AS NUMERIC))) AND ((vt0.c0))) ORDER BY CAST(rt0.c2 AS NUMERIC)  NULLS LAST, (((((vt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) NOT BETWEEN ((rt0.c3 IN ())) AND (((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) DESC, rt0.c5 COLLATE BINARY);
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c4)) BETWEEN ((CAST(x'' AS NUMERIC))) AND ((vt0.c0))) WHERE (CASE ((rt0.c0)!=(rt0.c0))  WHEN ((vt0.c1)%(rt0.c3)) THEN CAST(rt0.c0 AS TEXT) ELSE (vt0.c1 IN (rt0.c2)) END) ORDER BY CAST(rt0.c2 AS NUMERIC)  NULLS LAST, (((((vt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) NOT BETWEEN ((rt0.c3 IN ())) AND (((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) DESC, rt0.c5 COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((LTRIM(vt0.c1))|(((((v0.c0)AND(v0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c1))|(((((v0.c0)AND(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((LTRIM(vt0.c1))|(((((v0.c0)AND(v0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c1))|(((((v0.c0)AND(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((LTRIM(vt0.c1))|(((((v0.c0)AND(v0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((~ (-515398035)));
SELECT SUM(count) FROM (SELECT (((~ (-515398035))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((~ (-515398035)));
SELECT SUM(count) FROM (SELECT (((~ (-515398035))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((~ (-515398035)));
SELECT ALL * FROM rt0 NOT INDEXED, v0, vt0 WHERE (((TRIM(rt0.c2, x''))AND(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c2, x''))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, v0, vt0 WHERE (((TRIM(rt0.c2, x''))AND(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c2, x''))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, v0, vt0 WHERE (((TRIM(rt0.c2, x''))AND(rt0.c0 COLLATE BINARY)));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0 WHERE (CAST(((rt0.c5) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c5) ISNULL) AS TEXT)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0 WHERE (CAST(((rt0.c5) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c5) ISNULL) AS TEXT)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0 WHERE (CAST(((rt0.c5) ISNULL) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((rt0.c1 IN ()));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c5)||(rt0.c2)))>((rt0.c1 IN ())))) ORDER BY STRFTIME(UPPER(vt0.c1), '1094215623', CAST(rt0.c0 AS NUMERIC)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)||(rt0.c2)))>((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY STRFTIME(UPPER(vt0.c1), '1094215623', CAST(rt0.c0 AS NUMERIC)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c5)||(rt0.c2)))>((rt0.c1 IN ())))) ORDER BY STRFTIME(UPPER(vt0.c1), '1094215623', CAST(rt0.c0 AS NUMERIC)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)||(rt0.c2)))>((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY STRFTIME(UPPER(vt0.c1), '1094215623', CAST(rt0.c0 AS NUMERIC)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c5)||(rt0.c2)))>((rt0.c1 IN ())))) ORDER BY STRFTIME(UPPER(vt0.c1), '1094215623', CAST(rt0.c0 AS NUMERIC)) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (139043782) ORDER BY ((('', rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), (((rt0.c5))<=((rt0.c0))), ((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c5)))AND(rt0.c4)))) AND (('1522488381', CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN 0X5e661087 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN '0.0' ELSE rt0.c1 END, (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((139043782) IS TRUE)  as count FROM rt0 ORDER BY ((('', rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), (((rt0.c5))<=((rt0.c0))), ((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c5)))AND(rt0.c4)))) AND (('1522488381', CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN 0X5e661087 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN '0.0' ELSE rt0.c1 END, (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))))));
SELECT * FROM rt0 WHERE (139043782) ORDER BY ((('', rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), (((rt0.c5))<=((rt0.c0))), ((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c5)))AND(rt0.c4)))) AND (('1522488381', CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN 0X5e661087 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN '0.0' ELSE rt0.c1 END, (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((139043782) IS TRUE)  as count FROM rt0 ORDER BY ((('', rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), (((rt0.c5))<=((rt0.c0))), ((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c5)))AND(rt0.c4)))) AND (('1522488381', CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN 0X5e661087 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN '0.0' ELSE rt0.c1 END, (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))))));
SELECT * FROM rt0 WHERE (139043782) ORDER BY ((('', rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), (((rt0.c5))<=((rt0.c0))), ((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c5)))AND(rt0.c4)))) AND (('1522488381', CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN 0X5e661087 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN '0.0' ELSE rt0.c1 END, (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) NOT BETWEEN (rt0.c5 COLLATE RTRIM) AND (((rt0.c0)<=(rt0.c2))))) ORDER BY (+ (((rt0.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) NOT BETWEEN (rt0.c5 COLLATE RTRIM) AND (((rt0.c0)<=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c1) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) NOT BETWEEN (rt0.c5 COLLATE RTRIM) AND (((rt0.c0)<=(rt0.c2))))) ORDER BY (+ (((rt0.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) NOT BETWEEN (rt0.c5 COLLATE RTRIM) AND (((rt0.c0)<=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c1) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) NOT BETWEEN (rt0.c5 COLLATE RTRIM) AND (((rt0.c0)<=(rt0.c2))))) ORDER BY (+ (((rt0.c1) ISNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (NULL) ORDER BY (((rt0.c1) NOTNULL) IN ((((rt0.c5)) BETWEEN ((rt0.c1)) AND ((v0.c0))))), CAST(((vt0.c1)%(rt0.c5)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0 NOT INDEXED, vt0 ORDER BY (((rt0.c1) NOTNULL) IN ((((rt0.c5)) BETWEEN ((rt0.c1)) AND ((v0.c0))))), CAST(((vt0.c1)%(rt0.c5)) AS INTEGER) ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (NULL) ORDER BY (((rt0.c1) NOTNULL) IN ((((rt0.c5)) BETWEEN ((rt0.c1)) AND ((v0.c0))))), CAST(((vt0.c1)%(rt0.c5)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0 NOT INDEXED, vt0 ORDER BY (((rt0.c1) NOTNULL) IN ((((rt0.c5)) BETWEEN ((rt0.c1)) AND ((v0.c0))))), CAST(((vt0.c1)%(rt0.c5)) AS INTEGER) ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (NULL) ORDER BY (((rt0.c1) NOTNULL) IN ((((rt0.c5)) BETWEEN ((rt0.c1)) AND ((v0.c0))))), CAST(((vt0.c1)%(rt0.c5)) AS INTEGER) ASC;
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON (((('-1910044813')OR(x'b2bb')))AND(((v0.c0) BETWEEN (rt0.c2) AND (NULL)))) WHERE ((- ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON (((('-1910044813')OR(x'b2bb')))AND(((v0.c0) BETWEEN (rt0.c2) AND (NULL)))));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON (((('-1910044813')OR(x'b2bb')))AND(((v0.c0) BETWEEN (rt0.c2) AND (NULL)))) WHERE ((- ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON (((('-1910044813')OR(x'b2bb')))AND(((v0.c0) BETWEEN (rt0.c2) AND (NULL)))));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON (((('-1910044813')OR(x'b2bb')))AND(((v0.c0) BETWEEN (rt0.c2) AND (NULL)))) WHERE ((- ((rt0.c0 IN ()))));
SELECT * FROM vt0, v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY '381029600' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY '381029600' DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY '381029600' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY '381029600' DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)AND((v0.c0 IN (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY '381029600' DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (rt0.c0)) COLLATE BINARY);
SELECT * FROM rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c5);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY TRIM(DISTINCT rt0.c5) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT rt0.c5) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY TRIM(DISTINCT rt0.c5) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT rt0.c5) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY TRIM(DISTINCT rt0.c5) COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c5)))-(((rt0.c1)IS(rt0.c4))))) ORDER BY '-515398035'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c5)))-(((rt0.c1)IS(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY '-515398035'  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c5)))-(((rt0.c1)IS(rt0.c4))))) ORDER BY '-515398035'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c5)))-(((rt0.c1)IS(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY '-515398035'  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c5)))-(((rt0.c1)IS(rt0.c4))))) ORDER BY '-515398035'  NULLS LAST;
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c4);
SELECT * FROM rt0 WHERE (((((((((rt0.c5 COLLATE NOCASE)OR(((rt0.c3)GLOB(rt0.c2)))))AND(TRIM(DISTINCT rt0.c2))))AND(((rt0.c3) IS FALSE))))OR((((rt0.c5, rt0.c2, rt0.c1))<>((rt0.c5, rt0.c1, rt0.c5)))))) ORDER BY (((rt0.c0 IN ()))<<(rt0.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c5 COLLATE NOCASE)OR(((rt0.c3)GLOB(rt0.c2)))))AND(TRIM(DISTINCT rt0.c2))))AND(((rt0.c3) IS FALSE))))OR((((rt0.c5, rt0.c2, rt0.c1))<>((rt0.c5, rt0.c1, rt0.c5)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))<<(rt0.c3))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((rt0.c5 COLLATE NOCASE)OR(((rt0.c3)GLOB(rt0.c2)))))AND(TRIM(DISTINCT rt0.c2))))AND(((rt0.c3) IS FALSE))))OR((((rt0.c5, rt0.c2, rt0.c1))<>((rt0.c5, rt0.c1, rt0.c5)))))) ORDER BY (((rt0.c0 IN ()))<<(rt0.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c5 COLLATE NOCASE)OR(((rt0.c3)GLOB(rt0.c2)))))AND(TRIM(DISTINCT rt0.c2))))AND(((rt0.c3) IS FALSE))))OR((((rt0.c5, rt0.c2, rt0.c1))<>((rt0.c5, rt0.c1, rt0.c5)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))<<(rt0.c3))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((rt0.c5 COLLATE NOCASE)OR(((rt0.c3)GLOB(rt0.c2)))))AND(TRIM(DISTINCT rt0.c2))))AND(((rt0.c3) IS FALSE))))OR((((rt0.c5, rt0.c2, rt0.c1))<>((rt0.c5, rt0.c1, rt0.c5)))))) ORDER BY (((rt0.c0 IN ()))<<(rt0.c3))  NULLS FIRST;
SELECT ALL * FROM vt0, v0, rt0 WHERE (rt0.c1) ORDER BY ((((TRIM(vt0.c0))OR((((rt0.c1, rt0.c5, vt0.c1, vt0.c1, rt0.c0))>=((vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0))))))OR(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((TRIM(vt0.c0))OR((((rt0.c1, rt0.c5, vt0.c1, vt0.c1, rt0.c0))>=((vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0))))))OR(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (rt0.c1) ORDER BY ((((TRIM(vt0.c0))OR((((rt0.c1, rt0.c5, vt0.c1, vt0.c1, rt0.c0))>=((vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0))))))OR(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((TRIM(vt0.c0))OR((((rt0.c1, rt0.c5, vt0.c1, vt0.c1, rt0.c0))>=((vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0))))))OR(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (rt0.c1) ORDER BY ((((TRIM(vt0.c0))OR((((rt0.c1, rt0.c5, vt0.c1, vt0.c1, rt0.c0))>=((vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c0))))))OR(vt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c3 COLLATE RTRIM)));
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c1 COLLATE BINARY)-(ABS(''))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY)-(ABS('')))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c1 COLLATE BINARY)-(ABS(''))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY)-(ABS('')))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c1 COLLATE BINARY)-(ABS(''))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c1)IS NOT(vt0.c1)))||(((((rt0.c2)OR(rt0.c5)))AND(rt0.c2))))) ORDER BY ((((vt0.c0)AND(rt0.c4)))%((~ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS NOT(vt0.c1)))||(((((rt0.c2)OR(rt0.c5)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)AND(rt0.c4)))%((~ (rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c1)IS NOT(vt0.c1)))||(((((rt0.c2)OR(rt0.c5)))AND(rt0.c2))))) ORDER BY ((((vt0.c0)AND(rt0.c4)))%((~ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS NOT(vt0.c1)))||(((((rt0.c2)OR(rt0.c5)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)AND(rt0.c4)))%((~ (rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c1)IS NOT(vt0.c1)))||(((((rt0.c2)OR(rt0.c5)))AND(rt0.c2))))) ORDER BY ((((vt0.c0)AND(rt0.c4)))%((~ (rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((((NULL)AND(rt0.c4)))OR(rt0.c3)) AS TEXT)) ORDER BY TRIM(-3.67973468E8);
SELECT SUM(count) FROM (SELECT ((CAST(((((NULL)AND(rt0.c4)))OR(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY TRIM(-3.67973468E8));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((((NULL)AND(rt0.c4)))OR(rt0.c3)) AS TEXT)) ORDER BY TRIM(-3.67973468E8);
SELECT SUM(count) FROM (SELECT ((CAST(((((NULL)AND(rt0.c4)))OR(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY TRIM(-3.67973468E8));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((((NULL)AND(rt0.c4)))OR(rt0.c3)) AS TEXT)) ORDER BY TRIM(-3.67973468E8);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((NULL)<(TYPEOF(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((NULL)<(TYPEOF(vt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((NULL)<(TYPEOF(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((NULL)<(TYPEOF(vt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((NULL)<(TYPEOF(vt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)) BETWEEN (((~ (rt0.c3)))) AND ((((rt0.c4)|(rt0.c4))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN (((~ (rt0.c3)))) AND ((((rt0.c4)|(rt0.c4)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)) BETWEEN (((~ (rt0.c3)))) AND ((((rt0.c4)|(rt0.c4))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN (((~ (rt0.c3)))) AND ((((rt0.c4)|(rt0.c4)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)) BETWEEN (((~ (rt0.c3)))) AND ((((rt0.c4)|(rt0.c4))))));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) WHERE (((((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c4)))||((NOT (v0.c0))))) ORDER BY (((rt0.c5 IN ())) IS TRUE) DESC, (((v0.c0)) NOT BETWEEN ((((((((((rt0.c3)AND(rt0.c4)))AND(v0.c0)))OR(rt0.c5)))AND(rt0.c4)))) AND ((CASE WHEN rt0.c5 THEN x'' ELSE rt0.c3 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c4)))||((NOT (v0.c0))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) ORDER BY (((rt0.c5 IN ())) IS TRUE) DESC, (((v0.c0)) NOT BETWEEN ((((((((((rt0.c3)AND(rt0.c4)))AND(v0.c0)))OR(rt0.c5)))AND(rt0.c4)))) AND ((CASE WHEN rt0.c5 THEN x'' ELSE rt0.c3 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) WHERE (((((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c4)))||((NOT (v0.c0))))) ORDER BY (((rt0.c5 IN ())) IS TRUE) DESC, (((v0.c0)) NOT BETWEEN ((((((((((rt0.c3)AND(rt0.c4)))AND(v0.c0)))OR(rt0.c5)))AND(rt0.c4)))) AND ((CASE WHEN rt0.c5 THEN x'' ELSE rt0.c3 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c4)))||((NOT (v0.c0))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) ORDER BY (((rt0.c5 IN ())) IS TRUE) DESC, (((v0.c0)) NOT BETWEEN ((((((((((rt0.c3)AND(rt0.c4)))AND(v0.c0)))OR(rt0.c5)))AND(rt0.c4)))) AND ((CASE WHEN rt0.c5 THEN x'' ELSE rt0.c3 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((rt0.c3) IS FALSE) WHERE (((((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c4)))||((NOT (v0.c0))))) ORDER BY (((rt0.c5 IN ())) IS TRUE) DESC, (((v0.c0)) NOT BETWEEN ((((((((((rt0.c3)AND(rt0.c4)))AND(v0.c0)))OR(rt0.c5)))AND(rt0.c4)))) AND ((CASE WHEN rt0.c5 THEN x'' ELSE rt0.c3 END))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c1) ISNULL)) ORDER BY (((v0.c0)<=(rt0.c4)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((v0.c0)<=(rt0.c4)) IN ()) DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c1) ISNULL)) ORDER BY (((v0.c0)<=(rt0.c4)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((v0.c0)<=(rt0.c4)) IN ()) DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c1) ISNULL)) ORDER BY (((v0.c0)<=(rt0.c4)) IN ()) DESC;
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE ((load_extension(0Xffffffff8e8bdf23, rt0.c1) IN (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY '1017808891' DESC;
SELECT SUM(count) FROM (SELECT (((load_extension(0xffffffff8e8bdf23, rt0.c1) IN (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '1017808891' DESC);
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE ((load_extension(0Xffffffff8e8bdf23, rt0.c1) IN (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY '1017808891' DESC;
SELECT SUM(count) FROM (SELECT (((load_extension(0xffffffff8e8bdf23, rt0.c1) IN (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '1017808891' DESC);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((vt0.c1) IS FALSE) WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((~ (vt0.c1))))) ORDER BY (-1416965608 IN (((vt0.c1) BETWEEN (vt0.c0) AND (x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((vt0.c1) IS FALSE) ORDER BY (-1416965608 IN (((vt0.c1) BETWEEN (vt0.c0) AND (x'')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((vt0.c1) IS FALSE) WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((~ (vt0.c1))))) ORDER BY (-1416965608 IN (((vt0.c1) BETWEEN (vt0.c0) AND (x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((vt0.c1) IS FALSE) ORDER BY (-1416965608 IN (((vt0.c1) BETWEEN (vt0.c0) AND (x'')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON ((vt0.c1) IS FALSE) WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0) AND ((~ (vt0.c1))))) ORDER BY (-1416965608 IN (((vt0.c1) BETWEEN (vt0.c0) AND (x'')))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('')) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('')) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('')) END);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c5)))AND(rt0.c5)))IS NOT(rt0.c5)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c5)))AND(rt0.c5)))IS NOT(rt0.c5))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c5)))AND(rt0.c5)))IS NOT(rt0.c5)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c5)))AND(rt0.c5)))IS NOT(rt0.c5))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c5)))AND(rt0.c5)))IS NOT(rt0.c5)));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((v0.c0)=('388865874')) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)=('388865874')) IN ())) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((v0.c0)=('388865874')) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)=('388865874')) IN ())) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((v0.c0)=('388865874')) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c5, vt0.c1)) BETWEEN ((CAST(NULL AS TEXT), COALESCE(rt0.c2, vt0.c1), CASE WHEN vt0.c0 THEN vt0.c1 END)) AND ((((rt0.c2)LIKE(vt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)), (NOT (NULL)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))&(CAST(rt0.c4 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c5, vt0.c1)) BETWEEN ((CAST(NULL AS TEXT), COALESCE(rt0.c2, vt0.c1), CASE WHEN vt0.c0 THEN vt0.c1 END)) AND ((((rt0.c2)LIKE(vt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)), (NOT (NULL)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))&(CAST(rt0.c4 AS INTEGER))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c5, vt0.c1)) BETWEEN ((CAST(NULL AS TEXT), COALESCE(rt0.c2, vt0.c1), CASE WHEN vt0.c0 THEN vt0.c1 END)) AND ((((rt0.c2)LIKE(vt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)), (NOT (NULL)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))&(CAST(rt0.c4 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c5, vt0.c1)) BETWEEN ((CAST(NULL AS TEXT), COALESCE(rt0.c2, vt0.c1), CASE WHEN vt0.c0 THEN vt0.c1 END)) AND ((((rt0.c2)LIKE(vt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)), (NOT (NULL)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))&(CAST(rt0.c4 AS INTEGER))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c5, vt0.c1)) BETWEEN ((CAST(NULL AS TEXT), COALESCE(rt0.c2, vt0.c1), CASE WHEN vt0.c0 THEN vt0.c1 END)) AND ((((rt0.c2)LIKE(vt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)), (NOT (NULL)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))&(CAST(rt0.c4 AS INTEGER))) DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((- (rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((- (rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((- (rt0.c0)) AS TEXT));
SELECT * FROM vt0, v0, rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ('450880036');
SELECT SUM(count) FROM (SELECT (('450880036') IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ('450880036');
SELECT SUM(count) FROM (SELECT (('450880036') IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ('450880036');
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) NOTNULL));
SELECT * FROM rt0 INNER JOIN vt0 ON load_extension(rt0.c1 COLLATE BINARY, ((x'')LIKE(rt0.c3))) RIGHT OUTER JOIN v0 ON ((NOT (rt0.c1)) IN ()) WHERE (CASE ((rt0.c5) NOTNULL)  WHEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(vt0.c0)))AND(0.9077142247051193)))AND(vt0.c0)))OR(vt0.c1)))AND(rt0.c4)) THEN (rt0.c3 IN ()) ELSE 'RT{' END) ORDER BY CASE WHEN rt0.c4 THEN rt0.c2 END COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c5) NOTNULL)  WHEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(vt0.c0)))AND(0.9077142247051193)))AND(vt0.c0)))OR(vt0.c1)))AND(rt0.c4)) THEN (rt0.c3 IN ()) ELSE 'RT{' END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON load_extension(rt0.c1 COLLATE BINARY, ((x'')LIKE(rt0.c3))) RIGHT OUTER JOIN v0 ON ((NOT (rt0.c1)) IN ()) ORDER BY CASE WHEN rt0.c4 THEN rt0.c2 END COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt0 ON load_extension(rt0.c1 COLLATE BINARY, ((x'')LIKE(rt0.c3))) RIGHT OUTER JOIN v0 ON ((NOT (rt0.c1)) IN ()) WHERE (CASE ((rt0.c5) NOTNULL)  WHEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(vt0.c0)))AND(0.9077142247051193)))AND(vt0.c0)))OR(vt0.c1)))AND(rt0.c4)) THEN (rt0.c3 IN ()) ELSE 'RT{' END) ORDER BY CASE WHEN rt0.c4 THEN rt0.c2 END COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c5) NOTNULL)  WHEN ((((((((((((rt0.c2)OR(rt0.c3)))OR(vt0.c0)))AND(0.9077142247051193)))AND(vt0.c0)))OR(vt0.c1)))AND(rt0.c4)) THEN (rt0.c3 IN ()) ELSE 'RT{' END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON load_extension(rt0.c1 COLLATE BINARY, ((x'')LIKE(rt0.c3))) RIGHT OUTER JOIN v0 ON ((NOT (rt0.c1)) IN ()) ORDER BY CASE WHEN rt0.c4 THEN rt0.c2 END COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c5, rt0.c5, rt0.c5, v0.c0, rt0.c2)) BETWEEN ((vt0.c0 COLLATE BINARY, ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (((0.1725490223397803)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), (rt0.c4 IN ()), -997985467)) AND ((rt0.c5, CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END, CAST(x'' AS BLOB), (- (rt0.c3)), TYPEOF(DISTINCT rt0.c3))))) ORDER BY (((((vt0.c1, rt0.c5, rt0.c3))>((vt0.c0, rt0.c5, rt0.c0)))) BETWEEN ((((rt0.c0))<((rt0.c5)))) AND (((rt0.c2) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5, rt0.c5, rt0.c5, v0.c0, rt0.c2)) BETWEEN ((vt0.c0 COLLATE BINARY, ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (((0.1725490223397803)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), (rt0.c4 IN ()), -997985467)) AND ((rt0.c5, CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END, CAST(x'' AS BLOB), (- (rt0.c3)), TYPEOF(DISTINCT rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((((vt0.c1, rt0.c5, rt0.c3))>((vt0.c0, rt0.c5, rt0.c0)))) BETWEEN ((((rt0.c0))<((rt0.c5)))) AND (((rt0.c2) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c5, rt0.c5, rt0.c5, v0.c0, rt0.c2)) BETWEEN ((vt0.c0 COLLATE BINARY, ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (((0.1725490223397803)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), (rt0.c4 IN ()), -997985467)) AND ((rt0.c5, CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END, CAST(x'' AS BLOB), (- (rt0.c3)), TYPEOF(DISTINCT rt0.c3))))) ORDER BY (((((vt0.c1, rt0.c5, rt0.c3))>((vt0.c0, rt0.c5, rt0.c0)))) BETWEEN ((((rt0.c0))<((rt0.c5)))) AND (((rt0.c2) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5, rt0.c5, rt0.c5, v0.c0, rt0.c2)) BETWEEN ((vt0.c0 COLLATE BINARY, ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (((0.1725490223397803)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), (rt0.c4 IN ()), -997985467)) AND ((rt0.c5, CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END, CAST(x'' AS BLOB), (- (rt0.c3)), TYPEOF(DISTINCT rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((((vt0.c1, rt0.c5, rt0.c3))>((vt0.c0, rt0.c5, rt0.c0)))) BETWEEN ((((rt0.c0))<((rt0.c5)))) AND (((rt0.c2) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c5, rt0.c5, rt0.c5, v0.c0, rt0.c2)) BETWEEN ((vt0.c0 COLLATE BINARY, ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (((0.1725490223397803)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), (rt0.c4 IN ()), -997985467)) AND ((rt0.c5, CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END, CAST(x'' AS BLOB), (- (rt0.c3)), TYPEOF(DISTINCT rt0.c3))))) ORDER BY (((((vt0.c1, rt0.c5, rt0.c3))>((vt0.c0, rt0.c5, rt0.c0)))) BETWEEN ((((rt0.c0))<((rt0.c5)))) AND (((rt0.c2) NOT NULL)))  NULLS FIRST;
SELECT * FROM v0 WHERE (UPPER(DISTINCT x'') COLLATE NOCASE) ORDER BY (((((v0.c0 IN ()))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(CASE WHEN '勯1' THEN v0.c0 END)) DESC  NULLS LAST, (((((v0.c0)*(v0.c0))))>=((((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT x'') COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(CASE WHEN '勯1' THEN v0.c0 END)) DESC  NULLS LAST, (((((v0.c0)*(v0.c0))))>=((((((v0.c0)AND(v0.c0)))AND(v0.c0))))));
SELECT * FROM v0 WHERE (UPPER(DISTINCT x'') COLLATE NOCASE) ORDER BY (((((v0.c0 IN ()))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(CASE WHEN '勯1' THEN v0.c0 END)) DESC  NULLS LAST, (((((v0.c0)*(v0.c0))))>=((((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT x'') COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(CASE WHEN '勯1' THEN v0.c0 END)) DESC  NULLS LAST, (((((v0.c0)*(v0.c0))))>=((((((v0.c0)AND(v0.c0)))AND(v0.c0))))));
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c1)LIKE(vt0.c1))) IS TRUE)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)LIKE(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c1)LIKE(vt0.c1))) IS TRUE)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)LIKE(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c1)LIKE(vt0.c1))) IS TRUE)) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c4 THEN 0.0632774398933591 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c5 END) NOT BETWEEN (x'') AND ((NOT (rt0.c0))))) ORDER BY PRINTF(ABS(DISTINCT '(ꙭ'));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c4 THEN 0.0632774398933591 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c5 END) NOT BETWEEN (x'') AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY PRINTF(ABS(DISTINCT '(ꙭ')));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c4 THEN 0.0632774398933591 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c5 END) NOT BETWEEN (x'') AND ((NOT (rt0.c0))))) ORDER BY PRINTF(ABS(DISTINCT '(ꙭ'));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c4 THEN 0.0632774398933591 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c5 END) NOT BETWEEN (x'') AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY PRINTF(ABS(DISTINCT '(ꙭ')));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c4 THEN 0.0632774398933591 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c5 END) NOT BETWEEN (x'') AND ((NOT (rt0.c0))))) ORDER BY PRINTF(ABS(DISTINCT '(ꙭ'));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) ORDER BY ((rt0.c2 COLLATE NOCASE)*(((rt0.c5)OR(rt0.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((rt0.c2 COLLATE NOCASE)*(((rt0.c5)OR(rt0.c5)))) DESC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) ORDER BY ((rt0.c2 COLLATE NOCASE)*(((rt0.c5)OR(rt0.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((rt0.c2 COLLATE NOCASE)*(((rt0.c5)OR(rt0.c5)))) DESC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) ORDER BY ((rt0.c2 COLLATE NOCASE)*(((rt0.c5)OR(rt0.c5)))) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(NULL AS BLOB) COLLATE BINARY) ORDER BY (((rt0.c4) IS TRUE) IN (CASE WHEN rt0.c3 THEN rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c4) IS TRUE) IN (CASE WHEN rt0.c3 THEN rt0.c3 END)) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(NULL AS BLOB) COLLATE BINARY) ORDER BY (((rt0.c4) IS TRUE) IN (CASE WHEN rt0.c3 THEN rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c4) IS TRUE) IN (CASE WHEN rt0.c3 THEN rt0.c3 END)) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(NULL AS BLOB) COLLATE BINARY) ORDER BY (((rt0.c4) IS TRUE) IN (CASE WHEN rt0.c3 THEN rt0.c3 END)) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)>>(rt0.c2)))<<(((rt0.c0)GLOB(rt0.c5))))) ORDER BY ((((rt0.c3)>=(vt0.c0)))==((NOT (rt0.c1)))) ASC, COALESCE(DISTINCT ((vt0.c0)<>(vt0.c1)), rt0.c1 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(rt0.c2)))<<(((rt0.c0)GLOB(rt0.c5))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)>=(vt0.c0)))=((NOT (rt0.c1)))) ASC, COALESCE(DISTINCT ((vt0.c0)<>(vt0.c1)), rt0.c1 COLLATE RTRIM) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)>>(rt0.c2)))<<(((rt0.c0)GLOB(rt0.c5))))) ORDER BY ((((rt0.c3)>=(vt0.c0)))==((NOT (rt0.c1)))) ASC, COALESCE(DISTINCT ((vt0.c0)<>(vt0.c1)), rt0.c1 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(rt0.c2)))<<(((rt0.c0)GLOB(rt0.c5))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)>=(vt0.c0)))=((NOT (rt0.c1)))) ASC, COALESCE(DISTINCT ((vt0.c0)<>(vt0.c1)), rt0.c1 COLLATE RTRIM) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)>>(rt0.c2)))<<(((rt0.c0)GLOB(rt0.c5))))) ORDER BY ((((rt0.c3)>=(vt0.c0)))==((NOT (rt0.c1)))) ASC, COALESCE(DISTINCT ((vt0.c0)<>(vt0.c1)), rt0.c1 COLLATE RTRIM) DESC;
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (NULLIF(DISTINCT v0.c0, v0.c0)))) ORDER BY CASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS LAST, (((~ (194675359)))*(v0.c0)) ASC  NULLS FIRST, (((NOT (v0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (NULLIF(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS LAST, (((~ (194675359)))*(v0.c0)) ASC  NULLS FIRST, (((NOT (v0.c0))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (NULLIF(DISTINCT v0.c0, v0.c0)))) ORDER BY CASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS LAST, (((~ (194675359)))*(v0.c0)) ASC  NULLS FIRST, (((NOT (v0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (NULLIF(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS LAST, (((~ (194675359)))*(v0.c0)) ASC  NULLS FIRST, (((NOT (v0.c0))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (NULLIF(DISTINCT v0.c0, v0.c0)))) ORDER BY CASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE RTRIM ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END  NULLS LAST, (((~ (194675359)))*(v0.c0)) ASC  NULLS FIRST, (((NOT (v0.c0))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c3) IS FALSE))|(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS FALSE))|(NULL))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c3) IS FALSE))|(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS FALSE))|(NULL))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c3) IS FALSE))|(NULL)));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR((+ (v0.c0)))) WHERE (NULLIF(DISTINCT CAST(v0.c0 AS REAL), ((((vt0.c0)AND(v0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(v0.c0 AS REAL), ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR((+ (v0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR((+ (v0.c0)))) WHERE (NULLIF(DISTINCT CAST(v0.c0 AS REAL), ((((vt0.c0)AND(v0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(v0.c0 AS REAL), ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR((+ (v0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR((+ (v0.c0)))) WHERE (NULLIF(DISTINCT CAST(v0.c0 AS REAL), ((((vt0.c0)AND(v0.c0)))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0, vt0 WHERE (UNLIKELY(DISTINCT TRIM(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT TRIM(DISTINCT rt0.c4))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0, vt0 WHERE (UNLIKELY(DISTINCT TRIM(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT TRIM(DISTINCT rt0.c4))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0, vt0 WHERE (UNLIKELY(DISTINCT TRIM(DISTINCT rt0.c4)));
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT * FROM v0 INNER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) AS BLOB) FULL OUTER JOIN rt0 ON v0.c0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(rt0.c1)))OR(vt0.c0)))) AND ((CASE -1292229727  WHEN rt0.c0 THEN rt0.c3 END)))) ORDER BY ((rt0.c3)/(((rt0.c5) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(rt0.c1)))OR(vt0.c0)))) AND ((CASE -1292229727  WHEN rt0.c0 THEN rt0.c3 END)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) AS BLOB) FULL OUTER JOIN rt0 ON v0.c0 ORDER BY ((rt0.c3)/(((rt0.c5) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM v0 INNER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) AS BLOB) FULL OUTER JOIN rt0 ON v0.c0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(rt0.c1)))OR(vt0.c0)))) AND ((CASE -1292229727  WHEN rt0.c0 THEN rt0.c3 END)))) ORDER BY ((rt0.c3)/(((rt0.c5) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(rt0.c1)))OR(vt0.c0)))) AND ((CASE -1292229727  WHEN rt0.c0 THEN rt0.c3 END)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) AS BLOB) FULL OUTER JOIN rt0 ON v0.c0 ORDER BY ((rt0.c3)/(((rt0.c5) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c5)))) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c0)&(rt0.c3)))) WHERE (NULLIF(rt0.c1, (NOT (x''))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c1, (NOT (x'')))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c5)))) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c0)&(rt0.c3)))));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c5)))) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c0)&(rt0.c3)))) WHERE (NULLIF(rt0.c1, (NOT (x''))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c1, (NOT (x'')))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c5)))) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c0)&(rt0.c3)))));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c5)))) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c0)&(rt0.c3)))) WHERE (NULLIF(rt0.c1, (NOT (x''))));
SELECT * FROM v0, rt0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ((((rt0.c4))<((rt0.c1))), CASE rt0.c4  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c5 THEN vt0.c1 WHEN v0.c0 THEN rt0.c5 ELSE vt0.c0 END))) ORDER BY ((((v0.c0, rt0.c1, vt0.c1))!=((rt0.c4, rt0.c4, rt0.c3))) IN ()) ASC, (NOT ((NOT ('')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ((((rt0.c4))<((rt0.c1))), CASE rt0.c4  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c5 THEN vt0.c1 WHEN v0.c0 THEN rt0.c5 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((v0.c0, rt0.c1, vt0.c1))!=((rt0.c4, rt0.c4, rt0.c3))) IN ()) ASC, (NOT ((NOT ('')))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ((((rt0.c4))<((rt0.c1))), CASE rt0.c4  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c5 THEN vt0.c1 WHEN v0.c0 THEN rt0.c5 ELSE vt0.c0 END))) ORDER BY ((((v0.c0, rt0.c1, vt0.c1))!=((rt0.c4, rt0.c4, rt0.c3))) IN ()) ASC, (NOT ((NOT ('')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ((((rt0.c4))<((rt0.c1))), CASE rt0.c4  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c5 THEN vt0.c1 WHEN v0.c0 THEN rt0.c5 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((v0.c0, rt0.c1, vt0.c1))!=((rt0.c4, rt0.c4, rt0.c3))) IN ()) ASC, (NOT ((NOT ('')))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ((((rt0.c4))<((rt0.c1))), CASE rt0.c4  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c5 THEN vt0.c1 WHEN v0.c0 THEN rt0.c5 ELSE vt0.c0 END))) ORDER BY ((((v0.c0, rt0.c1, vt0.c1))!=((rt0.c4, rt0.c4, rt0.c3))) IN ()) ASC, (NOT ((NOT ('')))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((CASE WHEN vt0.c1 THEN rt0.c1 END)GLOB(CAST(vt0.c1 AS REAL)))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN rt0.c1 END)GLOB(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (+ (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((CASE WHEN vt0.c1 THEN rt0.c1 END)GLOB(CAST(vt0.c1 AS REAL)))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN rt0.c1 END)GLOB(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (+ (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((CASE WHEN vt0.c1 THEN rt0.c1 END)GLOB(CAST(vt0.c1 AS REAL)))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((vt0.c1) BETWEEN (0.18026326491397926) AND (vt0.c0))  WHEN (((vt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN CAST(vt0.c0 AS BLOB) ELSE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) BETWEEN (0.18026326491397926) AND (vt0.c0))  WHEN (((vt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN CAST(vt0.c0 AS BLOB) ELSE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((vt0.c1) BETWEEN (0.18026326491397926) AND (vt0.c0))  WHEN (((vt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN CAST(vt0.c0 AS BLOB) ELSE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) BETWEEN (0.18026326491397926) AND (vt0.c0))  WHEN (((vt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN CAST(vt0.c0 AS BLOB) ELSE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((vt0.c1) BETWEEN (0.18026326491397926) AND (vt0.c0))  WHEN (((vt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN CAST(vt0.c0 AS BLOB) ELSE CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((NULL)) NOT BETWEEN ((CAST(0.4219126511514333 AS BLOB))) AND ((((((NULL)AND(v0.c0)))AND(vt0.c1)))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((vt0.c1)AND(v0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN ((CAST(0.4219126511514333 AS BLOB))) AND ((((((NULL)AND(v0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((vt0.c1)AND(v0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((NULL)) NOT BETWEEN ((CAST(0.4219126511514333 AS BLOB))) AND ((((((NULL)AND(v0.c0)))AND(vt0.c1)))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((vt0.c1)AND(v0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN ((CAST(0.4219126511514333 AS BLOB))) AND ((((((NULL)AND(v0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((vt0.c1)AND(v0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((NULL)) NOT BETWEEN ((CAST(0.4219126511514333 AS BLOB))) AND ((((((NULL)AND(v0.c0)))AND(vt0.c1)))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((vt0.c1)AND(v0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 AS REAL)) ORDER BY '1591141530'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY '1591141530'  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 AS REAL)) ORDER BY '1591141530'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY '1591141530'  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 AS REAL)) ORDER BY '1591141530'  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ('%U&NB1樼~');
SELECT SUM(count) FROM (SELECT ALL (('%U&NB1樼~') IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ('%U&NB1樼~');
SELECT SUM(count) FROM (SELECT ALL (('%U&NB1樼~') IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ('%U&NB1樼~');
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((+ ((rt0.c2 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c2 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((+ ((rt0.c2 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c2 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((+ ((rt0.c2 IN (rt0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c0) NOT NULL) WHERE ((NOT (rt0.c5)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((CASE rt0.c4  WHEN rt0.c5 THEN x'6b1f' ELSE rt0.c5 END)&(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c4))))  NULLS FIRST, CASE ((v0.c0) BETWEEN (v0.c0) AND (rt0.c5))  WHEN rt0.c3 THEN (rt0.c2 IN ()) WHEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (rt0.c4)) THEN (((rt0.c3, rt0.c4, rt0.c3, rt0.c5, rt0.c1))>((NULL, v0.c0, rt0.c3, v0.c0, x''))) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c4)%(rt0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c5)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c0) NOT NULL) ORDER BY ((CASE rt0.c4  WHEN rt0.c5 THEN x'6b1f' ELSE rt0.c5 END)&(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c4))))  NULLS FIRST, CASE ((v0.c0) BETWEEN (v0.c0) AND (rt0.c5))  WHEN rt0.c3 THEN (rt0.c2 IN ()) WHEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (rt0.c4)) THEN (((rt0.c3, rt0.c4, rt0.c3, rt0.c5, rt0.c1))>((NULL, v0.c0, rt0.c3, v0.c0, x''))) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c4)%(rt0.c3)) END  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c0) NOT NULL) WHERE ((NOT (rt0.c5)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((CASE rt0.c4  WHEN rt0.c5 THEN x'6b1f' ELSE rt0.c5 END)&(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c4))))  NULLS FIRST, CASE ((v0.c0) BETWEEN (v0.c0) AND (rt0.c5))  WHEN rt0.c3 THEN (rt0.c2 IN ()) WHEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (rt0.c4)) THEN (((rt0.c3, rt0.c4, rt0.c3, rt0.c5, rt0.c1))>((NULL, v0.c0, rt0.c3, v0.c0, x''))) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c4)%(rt0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c5)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c0) NOT NULL) ORDER BY ((CASE rt0.c4  WHEN rt0.c5 THEN x'6b1f' ELSE rt0.c5 END)&(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c4))))  NULLS FIRST, CASE ((v0.c0) BETWEEN (v0.c0) AND (rt0.c5))  WHEN rt0.c3 THEN (rt0.c2 IN ()) WHEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (rt0.c4)) THEN (((rt0.c3, rt0.c4, rt0.c3, rt0.c5, rt0.c1))>((NULL, v0.c0, rt0.c3, v0.c0, x''))) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c4)%(rt0.c3)) END  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c0) NOT NULL) WHERE ((NOT (rt0.c5)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((CASE rt0.c4  WHEN rt0.c5 THEN x'6b1f' ELSE rt0.c5 END)&(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c4))))  NULLS FIRST, CASE ((v0.c0) BETWEEN (v0.c0) AND (rt0.c5))  WHEN rt0.c3 THEN (rt0.c2 IN ()) WHEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (rt0.c4)) THEN (((rt0.c3, rt0.c4, rt0.c3, rt0.c5, rt0.c1))>((NULL, v0.c0, rt0.c3, v0.c0, x''))) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c4)%(rt0.c3)) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (vt0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (vt0.c0 IN ()) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (vt0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (vt0.c0 IN ()) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (vt0.c0 IN ()) ASC;
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (COALESCE(((((rt0.c5)OR(vt0.c0)))AND(x'')), CASE WHEN 0.5011541846152661 THEN vt0.c1 ELSE rt0.c5 END));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((rt0.c5)OR(vt0.c0)))AND(x'')), CASE WHEN 0.5011541846152661 THEN vt0.c1 ELSE rt0.c5 END)) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (COALESCE(((((rt0.c5)OR(vt0.c0)))AND(x'')), CASE WHEN 0.5011541846152661 THEN vt0.c1 ELSE rt0.c5 END));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((rt0.c5)OR(vt0.c0)))AND(x'')), CASE WHEN 0.5011541846152661 THEN vt0.c1 ELSE rt0.c5 END)) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (COALESCE(((((rt0.c5)OR(vt0.c0)))AND(x'')), CASE WHEN 0.5011541846152661 THEN vt0.c1 ELSE rt0.c5 END));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL * FROM vt0, rt0 WHERE ('X/');
SELECT SUM(count) FROM (SELECT ALL (('X/') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ('X/');
SELECT SUM(count) FROM (SELECT ALL (('X/') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ('X/');
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((vt0.c0)>(rt0.c2)))%(TRIM(DISTINCT rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(rt0.c2)))%(TRIM(DISTINCT rt0.c5)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((vt0.c0)>(rt0.c2)))%(TRIM(DISTINCT rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(rt0.c2)))%(TRIM(DISTINCT rt0.c5)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((vt0.c0)>(rt0.c2)))%(TRIM(DISTINCT rt0.c5))));
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (CASE WHEN ((v0.c0)<(v0.c0)) THEN v0.c0 ELSE x'9576' END) ORDER BY SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS BLOB)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)<(v0.c0)) THEN v0.c0 ELSE x'9576' END) IS TRUE)  as count FROM v0 ORDER BY SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS BLOB)) DESC);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (CASE WHEN ((v0.c0)<(v0.c0)) THEN v0.c0 ELSE x'9576' END) ORDER BY SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS BLOB)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)<(v0.c0)) THEN v0.c0 ELSE x'9576' END) IS TRUE)  as count FROM v0 ORDER BY SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS BLOB)) DESC);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (CASE WHEN ((v0.c0)<(v0.c0)) THEN v0.c0 ELSE x'9576' END) ORDER BY SQLITE_COMPILEOPTION_USED(CAST(v0.c0 AS BLOB)) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c4, rt0.c1)) BETWEEN ((rt0.c3, rt0.c5, rt0.c0)) AND ((rt0.c5, rt0.c5, rt0.c4))) AS NUMERIC)) ORDER BY (((rt0.c3 IN ()))<(NULL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, rt0.c4, rt0.c1)) BETWEEN ((rt0.c3, rt0.c5, rt0.c0)) AND ((rt0.c5, rt0.c5, rt0.c4))) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ()))<(NULL)));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c4, rt0.c1)) BETWEEN ((rt0.c3, rt0.c5, rt0.c0)) AND ((rt0.c5, rt0.c5, rt0.c4))) AS NUMERIC)) ORDER BY (((rt0.c3 IN ()))<(NULL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, rt0.c4, rt0.c1)) BETWEEN ((rt0.c3, rt0.c5, rt0.c0)) AND ((rt0.c5, rt0.c5, rt0.c4))) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ()))<(NULL)));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0, rt0.c4, rt0.c1)) BETWEEN ((rt0.c3, rt0.c5, rt0.c0)) AND ((rt0.c5, rt0.c5, rt0.c4))) AS NUMERIC)) ORDER BY (((rt0.c3 IN ()))<(NULL));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN ((NOT ('')), rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON rt0.c1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN ((NOT ('')), rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON rt0.c1);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN ((NOT ('')), rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON rt0.c1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN ((NOT ('')), rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON rt0.c1);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN ((NOT ('')), rt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN v0 ON rt0.c1 WHERE (rt0.c3);
SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c0)))>(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)*(v0.c0)))>(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c0)))>(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)*(v0.c0)))>(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c0)))>(v0.c0)));
SELECT * FROM rt0 WHERE (((0X69b79c2b) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CAST(rt0.c4 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((0X69b79c2b) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CAST(rt0.c4 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((0X69b79c2b) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CAST(rt0.c4 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((0X69b79c2b) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CAST(rt0.c4 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((0X69b79c2b) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CAST(rt0.c4 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((LOWER(DISTINCT rt0.c2))+(CASE WHEN rt0.c1 THEN '1635557754' WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN -1990816347 END))) ORDER BY LIKE((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE v0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT rt0.c2))+(CASE WHEN rt0.c1 THEN '1635557754' WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN -1990816347 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY LIKE((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE v0.c0 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((LOWER(DISTINCT rt0.c2))+(CASE WHEN rt0.c1 THEN '1635557754' WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN -1990816347 END))) ORDER BY LIKE((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE v0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT rt0.c2))+(CASE WHEN rt0.c1 THEN '1635557754' WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN -1990816347 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY LIKE((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE v0.c0 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((LOWER(DISTINCT rt0.c2))+(CASE WHEN rt0.c1 THEN '1635557754' WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN -1990816347 END))) ORDER BY LIKE((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE v0.c0 END)  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c4) ORDER BY (((vt0.c0)AND(rt0.c5)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0)AND(rt0.c5)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c4) ORDER BY (((vt0.c0)AND(rt0.c5)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0)AND(rt0.c5)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c4) ORDER BY (((vt0.c0)AND(rt0.c5)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((rt0.c0 IN ())) NOT NULL) WHERE ((((rt0.c0, rt0.c4, v0.c0)) BETWEEN ((rt0.c5, rt0.c2, rt0.c2)) AND ((rt0.c3, rt0.c5, rt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c4, v0.c0)) BETWEEN ((rt0.c5, rt0.c2, rt0.c2)) AND ((rt0.c3, rt0.c5, rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c0 IN ())) NOT NULL));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((rt0.c0 IN ())) NOT NULL) WHERE ((((rt0.c0, rt0.c4, v0.c0)) BETWEEN ((rt0.c5, rt0.c2, rt0.c2)) AND ((rt0.c3, rt0.c5, rt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c4, v0.c0)) BETWEEN ((rt0.c5, rt0.c2, rt0.c2)) AND ((rt0.c3, rt0.c5, rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c0 IN ())) NOT NULL));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((rt0.c0 IN ())) NOT NULL) WHERE ((((rt0.c0, rt0.c4, v0.c0)) BETWEEN ((rt0.c5, rt0.c2, rt0.c2)) AND ((rt0.c3, rt0.c5, rt0.c1))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((v0.c0)-(vt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)-(rt0.c5)) THEN UPPER(DISTINCT rt0.c0) WHEN rt0.c3 THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.7700915306159489)) WHEN 0Xffffffff9b600cd1 THEN ((((vt0.c1)AND(rt0.c0)))AND(x'b16c')) WHEN (v0.c0 IN (rt0.c2, rt0.c3, rt0.c3)) THEN v0.c0 END) ORDER BY NULL DESC, (CAST(0.8766191649398457 AS INTEGER) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)-(vt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)-(rt0.c5)) THEN UPPER(DISTINCT rt0.c0) WHEN rt0.c3 THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.7700915306159489)) WHEN 0xffffffff9b600cd1 THEN ((((vt0.c1)AND(rt0.c0)))AND(x'b16c')) WHEN (v0.c0 IN (rt0.c2, rt0.c3, rt0.c3)) THEN v0.c0 END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY NULL DESC, (CAST(0.8766191649398457 AS INTEGER) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((v0.c0)-(vt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)-(rt0.c5)) THEN UPPER(DISTINCT rt0.c0) WHEN rt0.c3 THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.7700915306159489)) WHEN 0Xffffffff9b600cd1 THEN ((((vt0.c1)AND(rt0.c0)))AND(x'b16c')) WHEN (v0.c0 IN (rt0.c2, rt0.c3, rt0.c3)) THEN v0.c0 END) ORDER BY NULL DESC, (CAST(0.8766191649398457 AS INTEGER) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)-(vt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)-(rt0.c5)) THEN UPPER(DISTINCT rt0.c0) WHEN rt0.c3 THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.7700915306159489)) WHEN 0xffffffff9b600cd1 THEN ((((vt0.c1)AND(rt0.c0)))AND(x'b16c')) WHEN (v0.c0 IN (rt0.c2, rt0.c3, rt0.c3)) THEN v0.c0 END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY NULL DESC, (CAST(0.8766191649398457 AS INTEGER) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((v0.c0)-(vt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)-(rt0.c5)) THEN UPPER(DISTINCT rt0.c0) WHEN rt0.c3 THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.7700915306159489)) WHEN 0Xffffffff9b600cd1 THEN ((((vt0.c1)AND(rt0.c0)))AND(x'b16c')) WHEN (v0.c0 IN (rt0.c2, rt0.c3, rt0.c3)) THEN v0.c0 END) ORDER BY NULL DESC, (CAST(0.8766191649398457 AS INTEGER) IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY (((((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.5154194431468019)) AND ((v0.c0, v0.c0, ''))))OR(UNLIKELY(v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(MIN(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))AND(v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.5154194431468019)) AND ((v0.c0, v0.c0, ''))))OR(UNLIKELY(v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(MIN(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))AND(v0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY (((((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.5154194431468019)) AND ((v0.c0, v0.c0, ''))))OR(UNLIKELY(v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(MIN(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))AND(v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.5154194431468019)) AND ((v0.c0, v0.c0, ''))))OR(UNLIKELY(v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(MIN(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))AND(v0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY (((((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.5154194431468019)) AND ((v0.c0, v0.c0, ''))))OR(UNLIKELY(v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(MIN(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))AND(v0.c0)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((- (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (rt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (0.8512982560915302) ORDER BY 0.9909644444661643 ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8512982560915302) IS TRUE)  as count FROM rt0 ORDER BY 0.9909644444661643 ASC);
SELECT COUNT(*) FROM rt0 WHERE (0.8512982560915302) ORDER BY 0.9909644444661643 ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8512982560915302) IS TRUE)  as count FROM rt0 ORDER BY 0.9909644444661643 ASC);
SELECT COUNT(*) FROM rt0 WHERE (0.8512982560915302) ORDER BY 0.9909644444661643 ASC;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c3, rt0.c4, 0.2284424224432453)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c3)) AND ((rt0.c4, rt0.c5, rt0.c0))) IN ())) ORDER BY ((((rt0.c4) IS TRUE))>=(CASE rt0.c5  WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3, rt0.c4, 0.2284424224432453)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c3)) AND ((rt0.c4, rt0.c5, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c4) IS TRUE))>=(CASE rt0.c5  WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN v0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c3, rt0.c4, 0.2284424224432453)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c3)) AND ((rt0.c4, rt0.c5, rt0.c0))) IN ())) ORDER BY ((((rt0.c4) IS TRUE))>=(CASE rt0.c5  WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3, rt0.c4, 0.2284424224432453)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c3)) AND ((rt0.c4, rt0.c5, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c4) IS TRUE))>=(CASE rt0.c5  WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN v0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c3, rt0.c4, 0.2284424224432453)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c3)) AND ((rt0.c4, rt0.c5, rt0.c0))) IN ())) ORDER BY ((((rt0.c4) IS TRUE))>=(CASE rt0.c5  WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN v0.c0 END))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE IFNULL(vt0.c1, vt0.c0)  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(vt0.c1, vt0.c0)  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE IFNULL(vt0.c1, vt0.c0)  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(vt0.c1, vt0.c0)  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE IFNULL(vt0.c1, vt0.c0)  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END);
SELECT COUNT(*) FROM v0, vt0 WHERE (('DiQ9U' IN ())) ORDER BY 0.5126531310881947 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('DiQ9U' IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.5126531310881947 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (('DiQ9U' IN ())) ORDER BY 0.5126531310881947 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('DiQ9U' IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.5126531310881947 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (('DiQ9U' IN ())) ORDER BY 0.5126531310881947 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((INSTR(v0.c0, v0.c0))!=((((x'118c', v0.c0, v0.c0))>((NULL, x'', v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(v0.c0, v0.c0))!=((((x'118c', v0.c0, v0.c0))>((NULL, x'', v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((INSTR(v0.c0, v0.c0))!=((((x'118c', v0.c0, v0.c0))>((NULL, x'', v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(v0.c0, v0.c0))!=((((x'118c', v0.c0, v0.c0))>((NULL, x'', v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((INSTR(v0.c0, v0.c0))!=((((x'118c', v0.c0, v0.c0))>((NULL, x'', v0.c0))))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((((-6.7885913E8)>=(rt0.c5)), (NULL IN ()), (((rt0.c2, rt0.c2, vt0.c0))>((rt0.c1, rt0.c3, vt0.c1)))))>=(((vt0.c1 IN ()), rt0.c5 COLLATE RTRIM, (~ ('')))))) ORDER BY CAST((rt0.c5 IN (vt0.c1, rt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((-6.7885913E8)>=(rt0.c5)), (NULL IN ()), (((rt0.c2, rt0.c2, vt0.c0))>((rt0.c1, rt0.c3, vt0.c1)))))>=(((vt0.c1 IN ()), rt0.c5 COLLATE RTRIM, (~ ('')))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST((rt0.c5 IN (vt0.c1, rt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((((-6.7885913E8)>=(rt0.c5)), (NULL IN ()), (((rt0.c2, rt0.c2, vt0.c0))>((rt0.c1, rt0.c3, vt0.c1)))))>=(((vt0.c1 IN ()), rt0.c5 COLLATE RTRIM, (~ ('')))))) ORDER BY CAST((rt0.c5 IN (vt0.c1, rt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((-6.7885913E8)>=(rt0.c5)), (NULL IN ()), (((rt0.c2, rt0.c2, vt0.c0))>((rt0.c1, rt0.c3, vt0.c1)))))>=(((vt0.c1 IN ()), rt0.c5 COLLATE RTRIM, (~ ('')))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST((rt0.c5 IN (vt0.c1, rt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((((-6.7885913E8)>=(rt0.c5)), (NULL IN ()), (((rt0.c2, rt0.c2, vt0.c0))>((rt0.c1, rt0.c3, vt0.c1)))))>=(((vt0.c1 IN ()), rt0.c5 COLLATE RTRIM, (~ ('')))))) ORDER BY CAST((rt0.c5 IN (vt0.c1, rt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) IS FALSE)) ORDER BY ((~ (x'0514')) IN (((vt0.c1) NOT NULL), TRIM(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((~ (x'0514')) IN (((vt0.c1) NOT NULL), TRIM(vt0.c0))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) IS FALSE)) ORDER BY ((~ (x'0514')) IN (((vt0.c1) NOT NULL), TRIM(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((~ (x'0514')) IN (((vt0.c1) NOT NULL), TRIM(vt0.c0))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) IS FALSE)) ORDER BY ((~ (x'0514')) IN (((vt0.c1) NOT NULL), TRIM(vt0.c0))) DESC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((TYPEOF(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TYPEOF(v0.c0) IN ())) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((TYPEOF(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TYPEOF(v0.c0) IN ())) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((TYPEOF(v0.c0) IN ()));
SELECT * FROM v0, vt0 WHERE (CAST(((((v0.c0)AND(v0.c0)))OR(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(v0.c0)))OR(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(((((v0.c0)AND(v0.c0)))OR(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(v0.c0)))OR(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(((((v0.c0)AND(v0.c0)))OR(vt0.c1)) AS NUMERIC));
SELECT * FROM vt0, rt0, v0 WHERE ((- (UPPER(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((- (UPPER(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((- (UPPER(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((- (UPPER(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((- (UPPER(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))|(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))|(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))|(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))|(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))|(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0, rt0 WHERE (((((x'bc4f') NOT NULL))|('')));
SELECT SUM(count) FROM (SELECT ((((((x'bc4f') NOT NULL))|(''))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((x'bc4f') NOT NULL))|('')));
SELECT SUM(count) FROM (SELECT ((((((x'bc4f') NOT NULL))|(''))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((x'bc4f') NOT NULL))|('')));
SELECT * FROM vt0 WHERE (load_extension((vt0.c0 IN ()), ((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((load_extension((vt0.c0 IN ()), ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (load_extension((vt0.c0 IN ()), ((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((load_extension((vt0.c0 IN ()), ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS TRUE)) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c4  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS TRUE)) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c4  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS TRUE)) ORDER BY rt0.c4  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (highlight((((1.583747207E9))>=((vt0.c1))), (((vt0.c1))<=((vt0.c0))), (vt0.c1 IN (vt0.c1, vt0.c0)), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((highlight((((1.583747207E9))>=((vt0.c1))), (((vt0.c1))<=((vt0.c0))), (vt0.c1 IN (vt0.c1, vt0.c0)), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (highlight((((1.583747207E9))>=((vt0.c1))), (((vt0.c1))<=((vt0.c0))), (vt0.c1 IN (vt0.c1, vt0.c0)), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((highlight((((1.583747207E9))>=((vt0.c1))), (((vt0.c1))<=((vt0.c0))), (vt0.c1 IN (vt0.c1, vt0.c0)), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ('0r') ORDER BY (((rt0.c5 IN (rt0.c0))) NOT BETWEEN (((((rt0.c2)AND(NULL)))OR(rt0.c0))) AND (((rt0.c1)LIKE(rt0.c1)))) DESC  NULLS FIRST, ((CAST(rt0.c4 AS INTEGER)) BETWEEN (((rt0.c5) ISNULL)) AND ((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0r') IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((rt0.c5 IN (rt0.c0))) NOT BETWEEN (((((rt0.c2)AND(NULL)))OR(rt0.c0))) AND (((rt0.c1)LIKE(rt0.c1)))) DESC  NULLS FIRST, ((CAST(rt0.c4 AS INTEGER)) BETWEEN (((rt0.c5) ISNULL)) AND ((+ (vt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ('0r') ORDER BY (((rt0.c5 IN (rt0.c0))) NOT BETWEEN (((((rt0.c2)AND(NULL)))OR(rt0.c0))) AND (((rt0.c1)LIKE(rt0.c1)))) DESC  NULLS FIRST, ((CAST(rt0.c4 AS INTEGER)) BETWEEN (((rt0.c5) ISNULL)) AND ((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0r') IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((rt0.c5 IN (rt0.c0))) NOT BETWEEN (((((rt0.c2)AND(NULL)))OR(rt0.c0))) AND (((rt0.c1)LIKE(rt0.c1)))) DESC  NULLS FIRST, ((CAST(rt0.c4 AS INTEGER)) BETWEEN (((rt0.c5) ISNULL)) AND ((+ (vt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ('0r') ORDER BY (((rt0.c5 IN (rt0.c0))) NOT BETWEEN (((((rt0.c2)AND(NULL)))OR(rt0.c0))) AND (((rt0.c1)LIKE(rt0.c1)))) DESC  NULLS FIRST, ((CAST(rt0.c4 AS INTEGER)) BETWEEN (((rt0.c5) ISNULL)) AND ((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (UPPER(DISTINCT (((rt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (((rt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (UPPER(DISTINCT (((rt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (((rt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (UPPER(DISTINCT (((rt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0) NOTNULL) IN ())  NULLS LAST, ((vt0.c1)==(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOTNULL) IN ())  NULLS LAST, ((vt0.c1)==(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0) NOTNULL) IN ())  NULLS LAST, ((vt0.c1)==(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOTNULL) IN ())  NULLS LAST, ((vt0.c1)==(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0) NOTNULL) IN ())  NULLS LAST, ((vt0.c1)==(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST((NOT (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((NOT (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((NOT (vt0.c1)) AS NUMERIC));
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOT NULL), ((((v0.c0)OR('1892487817')))OR('-1481933223')), ((v0.c0) NOT NULL)))<>((((v0.c0)LIKE(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, x'e0e2'))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL), ((((v0.c0)OR('1892487817')))OR('-1481933223')), ((v0.c0) NOT NULL)))!=((((v0.c0)LIKE(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, x'e0e2')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOT NULL), ((((v0.c0)OR('1892487817')))OR('-1481933223')), ((v0.c0) NOT NULL)))<>((((v0.c0)LIKE(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, x'e0e2'))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL), ((((v0.c0)OR('1892487817')))OR('-1481933223')), ((v0.c0) NOT NULL)))!=((((v0.c0)LIKE(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, x'e0e2')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) NOT NULL), ((((v0.c0)OR('1892487817')))OR('-1481933223')), ((v0.c0) NOT NULL)))<>((((v0.c0)LIKE(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, x'e0e2'))));
SELECT ALL * FROM rt0 WHERE ('/7');
SELECT SUM(count) FROM (SELECT (('/7') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('/7');
SELECT SUM(count) FROM (SELECT (('/7') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('/7');
SELECT ALL * FROM rt0, v0, vt0 WHERE (NULL) ORDER BY ((((v0.c0) IS FALSE))>(((('1836719650', rt0.c2, vt0.c0)) BETWEEN (('-767957591', rt0.c3, rt0.c0)) AND ((v0.c0, rt0.c1, '1680853576'))))), CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c5 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0, vt0 NOT INDEXED ORDER BY ((((v0.c0) IS FALSE))>(((('1836719650', rt0.c2, vt0.c0)) BETWEEN (('-767957591', rt0.c3, rt0.c0)) AND ((v0.c0, rt0.c1, '1680853576'))))), CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c5 END COLLATE RTRIM ASC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (NULL) ORDER BY ((((v0.c0) IS FALSE))>(((('1836719650', rt0.c2, vt0.c0)) BETWEEN (('-767957591', rt0.c3, rt0.c0)) AND ((v0.c0, rt0.c1, '1680853576'))))), CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c5 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0, vt0 NOT INDEXED ORDER BY ((((v0.c0) IS FALSE))>(((('1836719650', rt0.c2, vt0.c0)) BETWEEN (('-767957591', rt0.c3, rt0.c0)) AND ((v0.c0, rt0.c1, '1680853576'))))), CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c5 END COLLATE RTRIM ASC);
SELECT ALL * FROM rt0, v0, vt0 WHERE (NULL) ORDER BY ((((v0.c0) IS FALSE))>(((('1836719650', rt0.c2, vt0.c0)) BETWEEN (('-767957591', rt0.c3, rt0.c0)) AND ((v0.c0, rt0.c1, '1680853576'))))), CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c5 END COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) AS REAL)) ORDER BY SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) AS REAL)) ORDER BY SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) AS REAL)) ORDER BY SQLITE_COMPILEOPTION_GET(rt0.c2) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (NULL COLLATE NOCASE);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE rt0.c4 COLLATE BINARY  WHEN ((NULL) BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c4)) ELSE ((rt0.c3) NOTNULL) END) ORDER BY ((((rt0.c5)<=(rt0.c2)))<(rt0.c3 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c4 COLLATE BINARY  WHEN ((NULL) BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c4)) ELSE ((rt0.c3) NOTNULL) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c5)<=(rt0.c2)))<(rt0.c3 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE rt0.c4 COLLATE BINARY  WHEN ((NULL) BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c4)) ELSE ((rt0.c3) NOTNULL) END) ORDER BY ((((rt0.c5)<=(rt0.c2)))<(rt0.c3 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c4 COLLATE BINARY  WHEN ((NULL) BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c4)) ELSE ((rt0.c3) NOTNULL) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c5)<=(rt0.c2)))<(rt0.c3 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE rt0.c4 COLLATE BINARY  WHEN ((NULL) BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c4)) ELSE ((rt0.c3) NOTNULL) END) ORDER BY ((((rt0.c5)<=(rt0.c2)))<(rt0.c3 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ('1277612579' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('1277612579' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('1277612579' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('1277612579' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('1277612579' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'229f');
SELECT SUM(count) FROM (SELECT ((x'229f') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'229f');
SELECT SUM(count) FROM (SELECT ((x'229f') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'229f');
SELECT ALL * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND((~ (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY (NOT (v0.c0))  NULLS LAST, ((((((((((v0.c0) ISNULL))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)/(v0.c0)))))AND((~ (v0.c0)))))AND((- (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND((~ (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0))  NULLS LAST, ((((((((((v0.c0) ISNULL))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)/(v0.c0)))))AND((~ (v0.c0)))))AND((- (v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND((~ (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY (NOT (v0.c0))  NULLS LAST, ((((((((((v0.c0) ISNULL))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)/(v0.c0)))))AND((~ (v0.c0)))))AND((- (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND((~ (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0))  NULLS LAST, ((((((((((v0.c0) ISNULL))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)/(v0.c0)))))AND((~ (v0.c0)))))AND((- (v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND((~ (v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY (NOT (v0.c0))  NULLS LAST, ((((((((((v0.c0) ISNULL))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)/(v0.c0)))))AND((~ (v0.c0)))))AND((- (v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c5)>>(((x'')>(rt0.c4))))) ORDER BY (((PRINTF(rt0.c1, rt0.c0, rt0.c0)))<=((((rt0.c5) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5)>>(((x'')>(rt0.c4))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((PRINTF(rt0.c1, rt0.c0, rt0.c0)))<=((((rt0.c5) NOT NULL)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c5)>>(((x'')>(rt0.c4))))) ORDER BY (((PRINTF(rt0.c1, rt0.c0, rt0.c0)))<=((((rt0.c5) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5)>>(((x'')>(rt0.c4))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((PRINTF(rt0.c1, rt0.c0, rt0.c0)))<=((((rt0.c5) NOT NULL)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c5)>>(((x'')>(rt0.c4))))) ORDER BY (((PRINTF(rt0.c1, rt0.c0, rt0.c0)))<=((((rt0.c5) NOT NULL))));
SELECT ALL * FROM v0 WHERE ((((('-132289982')&(v0.c0))) BETWEEN ((NULL IN (v0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((('-132289982')&(v0.c0))) BETWEEN ((NULL IN (v0.c0))) AND (NULL))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((('-132289982')&(v0.c0))) BETWEEN ((NULL IN (v0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((('-132289982')&(v0.c0))) BETWEEN ((NULL IN (v0.c0))) AND (NULL))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((('-132289982')&(v0.c0))) BETWEEN ((NULL IN (v0.c0))) AND (NULL)));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(0Xffffffff84fda215)))))AND(vt0.c1)))AND(((((0.8572863770144298)AND(x'')))OR(vt0.c1)))))OR((x'46a0' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(0Xffffffff84fda215)))))AND(vt0.c1)))AND(((((0.8572863770144298)AND(x'')))OR(vt0.c1)))))OR((x'46a0' IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(0Xffffffff84fda215)))))AND(vt0.c1)))AND(((((0.8572863770144298)AND(x'')))OR(vt0.c1)))))OR((x'46a0' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(0Xffffffff84fda215)))))AND(vt0.c1)))AND(((((0.8572863770144298)AND(x'')))OR(vt0.c1)))))OR((x'46a0' IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(0Xffffffff84fda215)))))AND(vt0.c1)))AND(((((0.8572863770144298)AND(x'')))OR(vt0.c1)))))OR((x'46a0' IN ()))));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c5 COLLATE RTRIM) ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c5))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED('X*+pcw')) AND (INSTR(rt0.c4, rt0.c5)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c5 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c5))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED('X*+pcw')) AND (INSTR(rt0.c4, rt0.c5)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c5 COLLATE RTRIM) ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c5))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED('X*+pcw')) AND (INSTR(rt0.c4, rt0.c5)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c5 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c5))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED('X*+pcw')) AND (INSTR(rt0.c4, rt0.c5)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c5 COLLATE RTRIM) ORDER BY ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c5))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED('X*+pcw')) AND (INSTR(rt0.c4, rt0.c5)))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0 WHERE (CAST((rt0.c5 IN ()) AS NUMERIC)) ORDER BY (((- (vt0.c1))) IS TRUE)  NULLS LAST, (~ (((((((((vt0.c1)OR(vt0.c0)))OR(rt0.c5)))AND(vt0.c0)))AND(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c5 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((- (vt0.c1))) IS TRUE)  NULLS LAST, (~ (((((((((vt0.c1)OR(vt0.c0)))OR(rt0.c5)))AND(vt0.c0)))AND(rt0.c4)))) ASC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CAST((rt0.c5 IN ()) AS NUMERIC)) ORDER BY (((- (vt0.c1))) IS TRUE)  NULLS LAST, (~ (((((((((vt0.c1)OR(vt0.c0)))OR(rt0.c5)))AND(vt0.c0)))AND(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c5 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((- (vt0.c1))) IS TRUE)  NULLS LAST, (~ (((((((((vt0.c1)OR(vt0.c0)))OR(rt0.c5)))AND(vt0.c0)))AND(rt0.c4)))) ASC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CAST((rt0.c5 IN ()) AS NUMERIC)) ORDER BY (((- (vt0.c1))) IS TRUE)  NULLS LAST, (~ (((((((((vt0.c1)OR(vt0.c0)))OR(rt0.c5)))AND(vt0.c0)))AND(rt0.c4)))) ASC;
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c5)))) WHERE (((((CAST(vt0.c0 AS REAL))AND(0.7830306213074306)))OR(1e500)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS REAL))AND(0.7830306213074306)))OR(1e500))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c5)))));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c5)))) WHERE (((((CAST(vt0.c0 AS REAL))AND(0.7830306213074306)))OR(1e500)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS REAL))AND(0.7830306213074306)))OR(1e500))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c5)))));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c4)))) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c5)))) WHERE (((((CAST(vt0.c0 AS REAL))AND(0.7830306213074306)))OR(1e500)));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE (vt0.c0 IN ())  WHEN rt0.c3 COLLATE RTRIM THEN ((v0.c0)<<(v0.c0)) ELSE CAST(rt0.c2 AS BLOB) END CROSS JOIN v0 ON ((((rt0.c5)IS(vt0.c1)))||(((rt0.c5) NOTNULL))) WHERE (((((rt0.c1)LIKE(rt0.c1)))-(v0.c0))) ORDER BY (((rt0.c5)) BETWEEN ((CASE WHEN rt0.c2 THEN vt0.c0 END)) AND ((((((((((0.08208439473963902)OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c1)))-(v0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE (vt0.c0 IN ())  WHEN rt0.c3 COLLATE RTRIM THEN ((v0.c0)<<(v0.c0)) ELSE CAST(rt0.c2 AS BLOB) END CROSS JOIN v0 ON ((((rt0.c5)IS(vt0.c1)))||(((rt0.c5) NOTNULL))) ORDER BY (((rt0.c5)) BETWEEN ((CASE WHEN rt0.c2 THEN vt0.c0 END)) AND ((((((((((0.08208439473963902)OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c2))))) ASC);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE (vt0.c0 IN ())  WHEN rt0.c3 COLLATE RTRIM THEN ((v0.c0)<<(v0.c0)) ELSE CAST(rt0.c2 AS BLOB) END CROSS JOIN v0 ON ((((rt0.c5)IS(vt0.c1)))||(((rt0.c5) NOTNULL))) WHERE (((((rt0.c1)LIKE(rt0.c1)))-(v0.c0))) ORDER BY (((rt0.c5)) BETWEEN ((CASE WHEN rt0.c2 THEN vt0.c0 END)) AND ((((((((((0.08208439473963902)OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c1)))-(v0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE (vt0.c0 IN ())  WHEN rt0.c3 COLLATE RTRIM THEN ((v0.c0)<<(v0.c0)) ELSE CAST(rt0.c2 AS BLOB) END CROSS JOIN v0 ON ((((rt0.c5)IS(vt0.c1)))||(((rt0.c5) NOTNULL))) ORDER BY (((rt0.c5)) BETWEEN ((CASE WHEN rt0.c2 THEN vt0.c0 END)) AND ((((((((((0.08208439473963902)OR(rt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c2))))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(TYPEOF(rt0.c3) AS INTEGER)) ORDER BY ((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c4)>>(rt0.c2))) AND (JULIANDAY(rt0.c1, rt0.c5, rt0.c4))), ((((rt0.c3)>(rt0.c5))) BETWEEN (1736983666) AND (((rt0.c3)<=(rt0.c5))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(rt0.c3) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c4)>>(rt0.c2))) AND (JULIANDAY(rt0.c1, rt0.c5, rt0.c4))), ((((rt0.c3)>(rt0.c5))) BETWEEN (1736983666) AND (((rt0.c3)<=(rt0.c5))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(TYPEOF(rt0.c3) AS INTEGER)) ORDER BY ((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c4)>>(rt0.c2))) AND (JULIANDAY(rt0.c1, rt0.c5, rt0.c4))), ((((rt0.c3)>(rt0.c5))) BETWEEN (1736983666) AND (((rt0.c3)<=(rt0.c5))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(rt0.c3) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c4)>>(rt0.c2))) AND (JULIANDAY(rt0.c1, rt0.c5, rt0.c4))), ((((rt0.c3)>(rt0.c5))) BETWEEN (1736983666) AND (((rt0.c3)<=(rt0.c5))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(TYPEOF(rt0.c3) AS INTEGER)) ORDER BY ((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c4)>>(rt0.c2))) AND (JULIANDAY(rt0.c1, rt0.c5, rt0.c4))), ((((rt0.c3)>(rt0.c5))) BETWEEN (1736983666) AND (((rt0.c3)<=(rt0.c5))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((8.79113145E8)GLOB(((rt0.c1) NOT NULL)))) ORDER BY (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END IN ()) ASC  NULLS LAST, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((8.79113145E8)GLOB(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END IN ()) ASC  NULLS LAST, x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((8.79113145E8)GLOB(((rt0.c1) NOT NULL)))) ORDER BY (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END IN ()) ASC  NULLS LAST, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((8.79113145E8)GLOB(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END IN ()) ASC  NULLS LAST, x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((8.79113145E8)GLOB(((rt0.c1) NOT NULL)))) ORDER BY (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END IN ()) ASC  NULLS LAST, x'' DESC  NULLS LAST;
SELECT * FROM v0 WHERE ((((((v0.c0)IS(v0.c0))))>((CAST(v0.c0 AS INTEGER))))) ORDER BY v0.c0 ASC  NULLS FIRST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)IS(v0.c0))))>((CAST(v0.c0 AS INTEGER))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c0)IS(v0.c0))))>((CAST(v0.c0 AS INTEGER))))) ORDER BY v0.c0 ASC  NULLS FIRST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)IS(v0.c0))))>((CAST(v0.c0 AS INTEGER))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c0)IS(v0.c0))))>((CAST(v0.c0 AS INTEGER))))) ORDER BY v0.c0 ASC  NULLS FIRST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2, rt0.c3, v0.c0, NULL, rt0.c5)) NOT BETWEEN ((CAST(x'' AS REAL), ((rt0.c5)*(0.3805688187688455)), ((rt0.c1) IS TRUE), rt0.c1, UPPER(rt0.c5))) AND ((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)), rt0.c3 COLLATE BINARY, CASE WHEN NULL THEN v0.c0 END, (rt0.c1 IN (rt0.c5, v0.c0)), ((((rt0.c5)AND(rt0.c1)))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c3, v0.c0, NULL, rt0.c5)) NOT BETWEEN ((CAST(x'' AS REAL), ((rt0.c5)*(0.3805688187688455)), ((rt0.c1) IS TRUE), rt0.c1, UPPER(rt0.c5))) AND ((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)), rt0.c3 COLLATE BINARY, CASE WHEN NULL THEN v0.c0 END, (rt0.c1 IN (rt0.c5, v0.c0)), ((((rt0.c5)AND(rt0.c1)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2, rt0.c3, v0.c0, NULL, rt0.c5)) NOT BETWEEN ((CAST(x'' AS REAL), ((rt0.c5)*(0.3805688187688455)), ((rt0.c1) IS TRUE), rt0.c1, UPPER(rt0.c5))) AND ((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)), rt0.c3 COLLATE BINARY, CASE WHEN NULL THEN v0.c0 END, (rt0.c1 IN (rt0.c5, v0.c0)), ((((rt0.c5)AND(rt0.c1)))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c3, v0.c0, NULL, rt0.c5)) NOT BETWEEN ((CAST(x'' AS REAL), ((rt0.c5)*(0.3805688187688455)), ((rt0.c1) IS TRUE), rt0.c1, UPPER(rt0.c5))) AND ((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)), rt0.c3 COLLATE BINARY, CASE WHEN NULL THEN v0.c0 END, (rt0.c1 IN (rt0.c5, v0.c0)), ((((rt0.c5)AND(rt0.c1)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2, rt0.c3, v0.c0, NULL, rt0.c5)) NOT BETWEEN ((CAST(x'' AS REAL), ((rt0.c5)*(0.3805688187688455)), ((rt0.c1) IS TRUE), rt0.c1, UPPER(rt0.c5))) AND ((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)), rt0.c3 COLLATE BINARY, CASE WHEN NULL THEN v0.c0 END, (rt0.c1 IN (rt0.c5, v0.c0)), ((((rt0.c5)AND(rt0.c1)))AND(rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.26761338107885857)OR(rt0.c1)) COLLATE NOCASE) ORDER BY (((((rt0.c3)<<(rt0.c5)), rt0.c0, (rt0.c3 IN ())))=((450880036, CAST(rt0.c2 AS BLOB), ((rt0.c0)-(rt0.c3)))))  NULLS LAST, TRIM(((rt0.c1) NOTNULL)) ASC, (((((rt0.c0, rt0.c0, rt0.c5))==((rt0.c5, rt0.c3, rt0.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.26761338107885857)OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3)<<(rt0.c5)), rt0.c0, (rt0.c3 IN ())))==((450880036, CAST(rt0.c2 AS BLOB), ((rt0.c0)-(rt0.c3)))))  NULLS LAST, TRIM(((rt0.c1) NOTNULL)) ASC, (((((rt0.c0, rt0.c0, rt0.c5))==((rt0.c5, rt0.c3, rt0.c0)))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.26761338107885857)OR(rt0.c1)) COLLATE NOCASE) ORDER BY (((((rt0.c3)<<(rt0.c5)), rt0.c0, (rt0.c3 IN ())))=((450880036, CAST(rt0.c2 AS BLOB), ((rt0.c0)-(rt0.c3)))))  NULLS LAST, TRIM(((rt0.c1) NOTNULL)) ASC, (((((rt0.c0, rt0.c0, rt0.c5))==((rt0.c5, rt0.c3, rt0.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.26761338107885857)OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3)<<(rt0.c5)), rt0.c0, (rt0.c3 IN ())))==((450880036, CAST(rt0.c2 AS BLOB), ((rt0.c0)-(rt0.c3)))))  NULLS LAST, TRIM(((rt0.c1) NOTNULL)) ASC, (((((rt0.c0, rt0.c0, rt0.c5))==((rt0.c5, rt0.c3, rt0.c0)))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.26761338107885857)OR(rt0.c1)) COLLATE NOCASE) ORDER BY (((((rt0.c3)<<(rt0.c5)), rt0.c0, (rt0.c3 IN ())))=((450880036, CAST(rt0.c2 AS BLOB), ((rt0.c0)-(rt0.c3)))))  NULLS LAST, TRIM(((rt0.c1) NOTNULL)) ASC, (((((rt0.c0, rt0.c0, rt0.c5))==((rt0.c5, rt0.c3, rt0.c0)))) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON '' INNER JOIN v0 ON ((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END)OR(rt0.c1)))AND(((rt0.c5)<=(v0.c0)))) WHERE ('') ORDER BY 'd஖0c.5' ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON '' INNER JOIN v0 ON ((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END)OR(rt0.c1)))AND(((rt0.c5)<=(v0.c0)))) ORDER BY 'd஖0c.5' ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON '' INNER JOIN v0 ON ((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END)OR(rt0.c1)))AND(((rt0.c5)<=(v0.c0)))) WHERE ('') ORDER BY 'd஖0c.5' ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON '' INNER JOIN v0 ON ((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END)OR(rt0.c1)))AND(((rt0.c5)<=(v0.c0)))) ORDER BY 'd஖0c.5' ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON '' INNER JOIN v0 ON ((((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END)OR(rt0.c1)))AND(((rt0.c5)<=(v0.c0)))) WHERE ('') ORDER BY 'd஖0c.5' ASC;
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND ('］'))) AND (((vt0.c1)=(vt0.c0))))) ORDER BY (((((vt0.c0 IN ()))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND ('］'))) AND (((vt0.c1)==(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND ('］'))) AND (((vt0.c1)=(vt0.c0))))) ORDER BY (((((vt0.c0 IN ()))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND ('］'))) AND (((vt0.c1)==(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND ('］'))) AND (((vt0.c1)=(vt0.c0))))) ORDER BY (((((vt0.c0 IN ()))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT * FROM rt0, v0 FULL OUTER JOIN vt0 ON json_object(rt0.c1, v0.c0, rt0.c0, v0.c0) COLLATE BINARY WHERE (((((vt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c4)))>('-2129881039'))) ORDER BY TRIM(((rt0.c2)/(rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c4)))>('-2129881039'))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON json_object(rt0.c1, v0.c0, rt0.c0, v0.c0) COLLATE BINARY ORDER BY TRIM(((rt0.c2)/(rt0.c3))) DESC);
SELECT * FROM rt0, v0 FULL OUTER JOIN vt0 ON json_object(rt0.c1, v0.c0, rt0.c0, v0.c0) COLLATE BINARY WHERE (((((vt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c4)))>('-2129881039'))) ORDER BY TRIM(((rt0.c2)/(rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c4)))>('-2129881039'))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON json_object(rt0.c1, v0.c0, rt0.c0, v0.c0) COLLATE BINARY ORDER BY TRIM(((rt0.c2)/(rt0.c3))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (TIME('', (rt0.c2 IN (rt0.c1)), '1636351716')) ORDER BY ((((((((vt0.c1)OR(((rt0.c3) NOTNULL))))AND((rt0.c2 IN (rt0.c3)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.3569219003567241))))OR(((rt0.c3) ISNULL))) ASC, vt0.c0, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TIME('', (rt0.c2 IN (rt0.c1)), '1636351716')) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((vt0.c1)OR(((rt0.c3) NOTNULL))))AND((rt0.c2 IN (rt0.c3)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.3569219003567241))))OR(((rt0.c3) ISNULL))) ASC, vt0.c0, vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (TIME('', (rt0.c2 IN (rt0.c1)), '1636351716')) ORDER BY ((((((((vt0.c1)OR(((rt0.c3) NOTNULL))))AND((rt0.c2 IN (rt0.c3)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.3569219003567241))))OR(((rt0.c3) ISNULL))) ASC, vt0.c0, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TIME('', (rt0.c2 IN (rt0.c1)), '1636351716')) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((vt0.c1)OR(((rt0.c3) NOTNULL))))AND((rt0.c2 IN (rt0.c3)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.3569219003567241))))OR(((rt0.c3) ISNULL))) ASC, vt0.c0, vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (TIME('', (rt0.c2 IN (rt0.c1)), '1636351716')) ORDER BY ((((((((vt0.c1)OR(((rt0.c3) NOTNULL))))AND((rt0.c2 IN (rt0.c3)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.3569219003567241))))OR(((rt0.c3) ISNULL))) ASC, vt0.c0, vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((DATE(rt0.c2, rt0.c1, rt0.c5))<=(TRIM(DISTINCT rt0.c4)))) ORDER BY NULL ASC  NULLS FIRST, x'a1da' COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((DATE(rt0.c2, rt0.c1, rt0.c5))<=(TRIM(DISTINCT rt0.c4)))) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL ASC  NULLS FIRST, x'a1da' COLLATE RTRIM DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((DATE(rt0.c2, rt0.c1, rt0.c5))<=(TRIM(DISTINCT rt0.c4)))) ORDER BY NULL ASC  NULLS FIRST, x'a1da' COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((DATE(rt0.c2, rt0.c1, rt0.c5))<=(TRIM(DISTINCT rt0.c4)))) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL ASC  NULLS FIRST, x'a1da' COLLATE RTRIM DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((DATE(rt0.c2, rt0.c1, rt0.c5))<=(TRIM(DISTINCT rt0.c4)))) ORDER BY NULL ASC  NULLS FIRST, x'a1da' COLLATE RTRIM DESC;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3)&(rt0.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c3)<(rt0.c1))) NOT BETWEEN ((((vt0.c0, rt0.c1, rt0.c4)) BETWEEN ((rt0.c1, rt0.c0, rt0.c5)) AND ((rt0.c0, vt0.c0, vt0.c0)))) AND (CASE WHEN rt0.c3 THEN rt0.c5 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)&(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)<(rt0.c1))) NOT BETWEEN ((((vt0.c0, rt0.c1, rt0.c4)) BETWEEN ((rt0.c1, rt0.c0, rt0.c5)) AND ((rt0.c0, vt0.c0, vt0.c0)))) AND (CASE WHEN rt0.c3 THEN rt0.c5 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3)&(rt0.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c3)<(rt0.c1))) NOT BETWEEN ((((vt0.c0, rt0.c1, rt0.c4)) BETWEEN ((rt0.c1, rt0.c0, rt0.c5)) AND ((rt0.c0, vt0.c0, vt0.c0)))) AND (CASE WHEN rt0.c3 THEN rt0.c5 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)&(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)<(rt0.c1))) NOT BETWEEN ((((vt0.c0, rt0.c1, rt0.c4)) BETWEEN ((rt0.c1, rt0.c0, rt0.c5)) AND ((rt0.c0, vt0.c0, vt0.c0)))) AND (CASE WHEN rt0.c3 THEN rt0.c5 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3)&(rt0.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c3)<(rt0.c1))) NOT BETWEEN ((((vt0.c0, rt0.c1, rt0.c4)) BETWEEN ((rt0.c1, rt0.c0, rt0.c5)) AND ((rt0.c0, vt0.c0, vt0.c0)))) AND (CASE WHEN rt0.c3 THEN rt0.c5 END))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c4)*(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)*(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c4)*(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)*(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c4)*(v0.c0)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((CAST(rt0.c5 AS BLOB) IN ())) ORDER BY x'' ASC  NULLS FIRST, ((rt0.c3 COLLATE NOCASE)IS NOT((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c5 AS BLOB) IN ())) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC  NULLS FIRST, ((rt0.c3 COLLATE NOCASE)IS NOT((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((CAST(rt0.c5 AS BLOB) IN ())) ORDER BY x'' ASC  NULLS FIRST, ((rt0.c3 COLLATE NOCASE)IS NOT((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c5 AS BLOB) IN ())) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC  NULLS FIRST, ((rt0.c3 COLLATE NOCASE)IS NOT((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((CAST(rt0.c5 AS BLOB) IN ())) ORDER BY x'' ASC  NULLS FIRST, ((rt0.c3 COLLATE NOCASE)IS NOT((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN '*n\r䄛mPz' END COLLATE BINARY WHERE (((((rt0.c1) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN '*n\r䄛mPz' END COLLATE BINARY);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN '*n\r䄛mPz' END COLLATE BINARY WHERE (((((rt0.c1) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN '*n\r䄛mPz' END COLLATE BINARY);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN '*n\r䄛mPz' END COLLATE BINARY WHERE (((((rt0.c1) NOTNULL)) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((('')&(rt0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((('')&(rt0.c4))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((('')&(rt0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((('')&(rt0.c4))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((('')&(rt0.c4))) ISNULL));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((vt0.c1)) NOT BETWEEN (((v0.c0 IN ()))) AND ((UPPER(vt0.c0))))) ORDER BY (+ (((rt0.c4)!=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN (((v0.c0 IN ()))) AND ((UPPER(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (+ (((rt0.c4)!=(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((vt0.c1)) NOT BETWEEN (((v0.c0 IN ()))) AND ((UPPER(vt0.c0))))) ORDER BY (+ (((rt0.c4)!=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN (((v0.c0 IN ()))) AND ((UPPER(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (+ (((rt0.c4)!=(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((vt0.c1)) NOT BETWEEN (((v0.c0 IN ()))) AND ((UPPER(vt0.c0))))) ORDER BY (+ (((rt0.c4)!=(vt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c1)));
SELECT * FROM rt0, vt0, v0 WHERE (-1549662552);
SELECT SUM(count) FROM (SELECT ALL ((-1549662552) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (-1549662552);
SELECT SUM(count) FROM (SELECT ALL ((-1549662552) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (-1549662552);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((((x''))>=((x''))))IS NOT(CASE rt0.c3  WHEN rt0.c3 THEN vt0.c1 ELSE '1042596967' END))) ORDER BY (NOT (rt0.c0)) ASC  NULLS LAST, CASE WHEN rt0.c4 COLLATE NOCASE THEN v0.c0 WHEN (((rt0.c0, rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((rt0.c5, v0.c0, rt0.c4))) THEN ((rt0.c2)<<(vt0.c0)) WHEN ((rt0.c4)|(rt0.c4)) THEN (rt0.c3 IN ()) ELSE DATETIME(rt0.c4, rt0.c4, rt0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x''))>=((x''))))IS NOT(CASE rt0.c3  WHEN rt0.c3 THEN vt0.c1 ELSE '1042596967' END))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (NOT (rt0.c0)) ASC  NULLS LAST, CASE WHEN rt0.c4 COLLATE NOCASE THEN v0.c0 WHEN (((rt0.c0, rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((rt0.c5, v0.c0, rt0.c4))) THEN ((rt0.c2)<<(vt0.c0)) WHEN ((rt0.c4)|(rt0.c4)) THEN (rt0.c3 IN ()) ELSE DATETIME(rt0.c4, rt0.c4, rt0.c0) END  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((((x''))>=((x''))))IS NOT(CASE rt0.c3  WHEN rt0.c3 THEN vt0.c1 ELSE '1042596967' END))) ORDER BY (NOT (rt0.c0)) ASC  NULLS LAST, CASE WHEN rt0.c4 COLLATE NOCASE THEN v0.c0 WHEN (((rt0.c0, rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((rt0.c5, v0.c0, rt0.c4))) THEN ((rt0.c2)<<(vt0.c0)) WHEN ((rt0.c4)|(rt0.c4)) THEN (rt0.c3 IN ()) ELSE DATETIME(rt0.c4, rt0.c4, rt0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x''))>=((x''))))IS NOT(CASE rt0.c3  WHEN rt0.c3 THEN vt0.c1 ELSE '1042596967' END))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (NOT (rt0.c0)) ASC  NULLS LAST, CASE WHEN rt0.c4 COLLATE NOCASE THEN v0.c0 WHEN (((rt0.c0, rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((rt0.c5, v0.c0, rt0.c4))) THEN ((rt0.c2)<<(vt0.c0)) WHEN ((rt0.c4)|(rt0.c4)) THEN (rt0.c3 IN ()) ELSE DATETIME(rt0.c4, rt0.c4, rt0.c0) END  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((((x''))>=((x''))))IS NOT(CASE rt0.c3  WHEN rt0.c3 THEN vt0.c1 ELSE '1042596967' END))) ORDER BY (NOT (rt0.c0)) ASC  NULLS LAST, CASE WHEN rt0.c4 COLLATE NOCASE THEN v0.c0 WHEN (((rt0.c0, rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((rt0.c5, v0.c0, rt0.c4))) THEN ((rt0.c2)<<(vt0.c0)) WHEN ((rt0.c4)|(rt0.c4)) THEN (rt0.c3 IN ()) ELSE DATETIME(rt0.c4, rt0.c4, rt0.c0) END  NULLS LAST;
SELECT * FROM vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT * FROM vt0, rt0 WHERE ((~ (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((~ (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((~ (((vt0.c1) IS TRUE))));
SELECT * FROM vt0, v0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY (((v0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)>(vt0.c0)), UPPER(vt0.c0), (((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))))) AND ((CAST(vt0.c1 AS REAL), vt0.c0, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)>(vt0.c0)), UPPER(vt0.c0), (((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))))) AND ((CAST(vt0.c1 AS REAL), vt0.c0, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) ASC);
SELECT * FROM vt0, v0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY (((v0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)>(vt0.c0)), UPPER(vt0.c0), (((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))))) AND ((CAST(vt0.c1 AS REAL), vt0.c0, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)>(vt0.c0)), UPPER(vt0.c0), (((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))))) AND ((CAST(vt0.c1 AS REAL), vt0.c0, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) ASC);
SELECT * FROM vt0, v0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY (((v0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)>(vt0.c0)), UPPER(vt0.c0), (((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))))) AND ((CAST(vt0.c1 AS REAL), vt0.c0, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) ASC;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (+ (CAST(v0.c0 AS INTEGER))) ASC, v0.c0 DESC, ((((v0.c0)<(v0.c0)))<(((v0.c0)*(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (+ (CAST(v0.c0 AS INTEGER))) ASC, v0.c0 DESC, ((((v0.c0)<(v0.c0)))<(((v0.c0)*(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (+ (CAST(v0.c0 AS INTEGER))) ASC, v0.c0 DESC, ((((v0.c0)<(v0.c0)))<(((v0.c0)*(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (+ (CAST(v0.c0 AS INTEGER))) ASC, v0.c0 DESC, ((((v0.c0)<(v0.c0)))<(((v0.c0)*(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (+ (CAST(v0.c0 AS INTEGER))) ASC, v0.c0 DESC, ((((v0.c0)<(v0.c0)))<(((v0.c0)*(v0.c0)))) DESC;
SELECT * FROM v0, rt0, vt0 WHERE ('0.5720170945163301');
SELECT SUM(count) FROM (SELECT ALL (('0.5720170945163301') IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ('0.5720170945163301');
SELECT SUM(count) FROM (SELECT ALL (('0.5720170945163301') IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ('0.5720170945163301');
SELECT * FROM rt0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT * FROM rt0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT * FROM rt0, vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (TYPEOF(DISTINCT 0.9070054845112546)) ORDER BY UNLIKELY(((rt0.c5)>>(rt0.c3))) ASC, json_object(CASE WHEN rt0.c1 THEN vt0.c0 END, rt0.c1)  NULLS FIRST, ((0X28bf4b1a) BETWEEN ((rt0.c5 IN ())) AND (((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT 0.9070054845112546)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY UNLIKELY(((rt0.c5)>>(rt0.c3))) ASC, json_object(CASE WHEN rt0.c1 THEN vt0.c0 END, rt0.c1)  NULLS FIRST, ((0X28bf4b1a) BETWEEN ((rt0.c5 IN ())) AND (((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (TYPEOF(DISTINCT 0.9070054845112546)) ORDER BY UNLIKELY(((rt0.c5)>>(rt0.c3))) ASC, json_object(CASE WHEN rt0.c1 THEN vt0.c0 END, rt0.c1)  NULLS FIRST, ((0X28bf4b1a) BETWEEN ((rt0.c5 IN ())) AND (((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT 0.9070054845112546)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY UNLIKELY(((rt0.c5)>>(rt0.c3))) ASC, json_object(CASE WHEN rt0.c1 THEN vt0.c0 END, rt0.c1)  NULLS FIRST, ((0X28bf4b1a) BETWEEN ((rt0.c5 IN ())) AND (((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT * FROM rt0, vt0, v0 WHERE (vt0.c0) ORDER BY ((LENGTH(vt0.c0))||(rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((LENGTH(vt0.c0))||(rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, v0 WHERE (vt0.c0) ORDER BY ((LENGTH(vt0.c0))||(rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((LENGTH(vt0.c0))||(rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, v0 WHERE (vt0.c0) ORDER BY ((LENGTH(vt0.c0))||(rt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) AS REAL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN 0x67884472 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)!=(vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN 0x67884472 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)!=(vt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) AS REAL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN 0x67884472 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)!=(vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN 0x67884472 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)!=(vt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) AS REAL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN 0x67884472 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)!=(vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 NOT INDEXED, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c5 WHEN vt0.c1 THEN rt0.c1 END AS NUMERIC)) ORDER BY (((((0.4589999414547761)GLOB(rt0.c5))))>=((((rt0.c2) BETWEEN (rt0.c3) AND (v0.c0))))) ASC, (((vt0.c0, rt0.c1, rt0.c0)) BETWEEN (((('-1132641537')IS NOT(rt0.c3)), ((0.7046096410577108) NOTNULL), ((rt0.c1) IS TRUE))) AND ((CASE WHEN v0.c0 THEN NULL END, ((rt0.c3) BETWEEN (0.06486326228280037) AND (rt0.c5)), rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c5 WHEN vt0.c1 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((((0.4589999414547761)GLOB(rt0.c5))))>=((((rt0.c2) BETWEEN (rt0.c3) AND (v0.c0))))) ASC, (((vt0.c0, rt0.c1, rt0.c0)) BETWEEN (((('-1132641537')IS NOT(rt0.c3)), ((0.7046096410577108) NOTNULL), ((rt0.c1) IS TRUE))) AND ((CASE WHEN v0.c0 THEN NULL END, ((rt0.c3) BETWEEN (0.06486326228280037) AND (rt0.c5)), rt0.c2))) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 NOT INDEXED, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c5 WHEN vt0.c1 THEN rt0.c1 END AS NUMERIC)) ORDER BY (((((0.4589999414547761)GLOB(rt0.c5))))>=((((rt0.c2) BETWEEN (rt0.c3) AND (v0.c0))))) ASC, (((vt0.c0, rt0.c1, rt0.c0)) BETWEEN (((('-1132641537')IS NOT(rt0.c3)), ((0.7046096410577108) NOTNULL), ((rt0.c1) IS TRUE))) AND ((CASE WHEN v0.c0 THEN NULL END, ((rt0.c3) BETWEEN (0.06486326228280037) AND (rt0.c5)), rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c5 WHEN vt0.c1 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((((0.4589999414547761)GLOB(rt0.c5))))>=((((rt0.c2) BETWEEN (rt0.c3) AND (v0.c0))))) ASC, (((vt0.c0, rt0.c1, rt0.c0)) BETWEEN (((('-1132641537')IS NOT(rt0.c3)), ((0.7046096410577108) NOTNULL), ((rt0.c1) IS TRUE))) AND ((CASE WHEN v0.c0 THEN NULL END, ((rt0.c3) BETWEEN (0.06486326228280037) AND (rt0.c5)), rt0.c2))) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 NOT INDEXED, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c5 WHEN vt0.c1 THEN rt0.c1 END AS NUMERIC)) ORDER BY (((((0.4589999414547761)GLOB(rt0.c5))))>=((((rt0.c2) BETWEEN (rt0.c3) AND (v0.c0))))) ASC, (((vt0.c0, rt0.c1, rt0.c0)) BETWEEN (((('-1132641537')IS NOT(rt0.c3)), ((0.7046096410577108) NOTNULL), ((rt0.c1) IS TRUE))) AND ((CASE WHEN v0.c0 THEN NULL END, ((rt0.c3) BETWEEN (0.06486326228280037) AND (rt0.c5)), rt0.c2))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END) AND (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END) AND (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END) AND (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END) AND (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' ELSE v0.c0 END) AND (((v0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((0.976406754282416)&(NULL))) ORDER BY (+ (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.976406754282416)&(NULL))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (+ (vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((0.976406754282416)&(NULL))) ORDER BY (+ (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.976406754282416)&(NULL))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (+ (vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((0.976406754282416)&(NULL))) ORDER BY (+ (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((~ (rt0.c0)))OR((((NULL, NULL, vt0.c0)) BETWEEN ((rt0.c0, vt0.c1, rt0.c5)) AND ((rt0.c3, vt0.c0, vt0.c0))))) WHERE ((((rt0.c3)||(rt0.c3)) IN ())) ORDER BY ((rt0.c4 COLLATE BINARY)>(((vt0.c1)||(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)||(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((~ (rt0.c0)))OR((((NULL, NULL, vt0.c0)) BETWEEN ((rt0.c0, vt0.c1, rt0.c5)) AND ((rt0.c3, vt0.c0, vt0.c0))))) ORDER BY ((rt0.c4 COLLATE BINARY)>(((vt0.c1)||(NULL)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((~ (rt0.c0)))OR((((NULL, NULL, vt0.c0)) BETWEEN ((rt0.c0, vt0.c1, rt0.c5)) AND ((rt0.c3, vt0.c0, vt0.c0))))) WHERE ((((rt0.c3)||(rt0.c3)) IN ())) ORDER BY ((rt0.c4 COLLATE BINARY)>(((vt0.c1)||(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)||(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((~ (rt0.c0)))OR((((NULL, NULL, vt0.c0)) BETWEEN ((rt0.c0, vt0.c1, rt0.c5)) AND ((rt0.c3, vt0.c0, vt0.c0))))) ORDER BY ((rt0.c4 COLLATE BINARY)>(((vt0.c1)||(NULL)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((~ (rt0.c0)))OR((((NULL, NULL, vt0.c0)) BETWEEN ((rt0.c0, vt0.c1, rt0.c5)) AND ((rt0.c3, vt0.c0, vt0.c0))))) WHERE ((((rt0.c3)||(rt0.c3)) IN ())) ORDER BY ((rt0.c4 COLLATE BINARY)>(((vt0.c1)||(NULL))));
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c5)))<((NOT (rt0.c4))))) ORDER BY 0.927393063294796 ASC;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c5)))<((NOT (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY 0.927393063294796 ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c5)))<((NOT (rt0.c4))))) ORDER BY 0.927393063294796 ASC;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c5)))<((NOT (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY 0.927393063294796 ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c5)))<((NOT (rt0.c4))))) ORDER BY 0.927393063294796 ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)%(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c4 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)%(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE BINARY DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)%(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c4 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)%(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE BINARY DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)%(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE BINARY DESC;
SELECT ALL * FROM rt0 WHERE (ABS(((rt0.c5)||(rt0.c5)))) ORDER BY ((((rt0.c0)LIKE(rt0.c2)))-(rt0.c5 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((ABS(((rt0.c5)||(rt0.c5)))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((rt0.c0)LIKE(rt0.c2)))-(rt0.c5 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (ABS(((rt0.c5)||(rt0.c5)))) ORDER BY ((((rt0.c0)LIKE(rt0.c2)))-(rt0.c5 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((ABS(((rt0.c5)||(rt0.c5)))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((rt0.c0)LIKE(rt0.c2)))-(rt0.c5 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (ABS(((rt0.c5)||(rt0.c5)))) ORDER BY ((((rt0.c0)LIKE(rt0.c2)))-(rt0.c5 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c5)))<=(((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) WHERE (((0.3650990772609062)<<(COALESCE(DISTINCT rt0.c4, rt0.c5, rt0.c4, rt0.c2, rt0.c3, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((0.3650990772609062)<<(COALESCE(DISTINCT rt0.c4, rt0.c5, rt0.c4, rt0.c2, rt0.c3, vt0.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c5)))<=(((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c5)))<=(((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) WHERE (((0.3650990772609062)<<(COALESCE(DISTINCT rt0.c4, rt0.c5, rt0.c4, rt0.c2, rt0.c3, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((0.3650990772609062)<<(COALESCE(DISTINCT rt0.c4, rt0.c5, rt0.c4, rt0.c2, rt0.c3, vt0.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c5)))<=(((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c5)))<=(((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) WHERE (((0.3650990772609062)<<(COALESCE(DISTINCT rt0.c4, rt0.c5, rt0.c4, rt0.c2, rt0.c3, vt0.c1))));
SELECT * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN 0.5154194431468019 END  WHEN CASE 'v2OGb''x'  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c5 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c5))) ELSE NULLIF(rt0.c4, NULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN 0.5154194431468019 END  WHEN CASE 'v2OGb''x'  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c5 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c5))) ELSE NULLIF(rt0.c4, NULL) END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN 0.5154194431468019 END  WHEN CASE 'v2OGb''x'  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c5 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c5))) ELSE NULLIF(rt0.c4, NULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN 0.5154194431468019 END  WHEN CASE 'v2OGb''x'  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c5 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c5))) ELSE NULLIF(rt0.c4, NULL) END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN 0.5154194431468019 END  WHEN CASE 'v2OGb''x'  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c5 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c5))) ELSE NULLIF(rt0.c4, NULL) END ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1))) BETWEEN (((((rt0.c4)OR(rt0.c4)))AND(rt0.c1))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1))) BETWEEN (((((rt0.c4)OR(rt0.c4)))AND(rt0.c1))) AND (x''))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1))) BETWEEN (((((rt0.c4)OR(rt0.c4)))AND(rt0.c1))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1))) BETWEEN (((((rt0.c4)OR(rt0.c4)))AND(rt0.c1))) AND (x''))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1))) BETWEEN (((((rt0.c4)OR(rt0.c4)))AND(rt0.c1))) AND (x'')));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY (((vt0.c0, 0Xffffffffa3beb3ce, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, 0Xffffffffa3beb3ce, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY (((vt0.c0, 0Xffffffffa3beb3ce, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, 0Xffffffffa3beb3ce, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY (((vt0.c0, 0Xffffffffa3beb3ce, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c0 WHERE (((CAST(v0.c0 AS BLOB)) NOT BETWEEN (vt0.c0) AND (((v0.c0)AND(vt0.c1))))) ORDER BY ((('310173667')) NOT BETWEEN ((v0.c0)) AND ((((v0.c0) BETWEEN (0.41000773203795804) AND (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) NOT BETWEEN (vt0.c0) AND (((v0.c0)AND(vt0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c0 ORDER BY ((('310173667')) NOT BETWEEN ((v0.c0)) AND ((((v0.c0) BETWEEN (0.41000773203795804) AND (vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c0 WHERE (((CAST(v0.c0 AS BLOB)) NOT BETWEEN (vt0.c0) AND (((v0.c0)AND(vt0.c1))))) ORDER BY ((('310173667')) NOT BETWEEN ((v0.c0)) AND ((((v0.c0) BETWEEN (0.41000773203795804) AND (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) NOT BETWEEN (vt0.c0) AND (((v0.c0)AND(vt0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c0 ORDER BY ((('310173667')) NOT BETWEEN ((v0.c0)) AND ((((v0.c0) BETWEEN (0.41000773203795804) AND (vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c0 WHERE (((CAST(v0.c0 AS BLOB)) NOT BETWEEN (vt0.c0) AND (((v0.c0)AND(vt0.c1))))) ORDER BY ((('310173667')) NOT BETWEEN ((v0.c0)) AND ((((v0.c0) BETWEEN (0.41000773203795804) AND (vt0.c0)))))  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((0.31165919648261475))!=(((vt0.c1 IN ())))) INNER JOIN v0 ON ((rt0.c2 IN (vt0.c0)) IN ()) WHERE (((((((v0.c0)OR('381029600')))AND(v0.c0)))IS((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR('381029600')))AND(v0.c0)))IS((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((0.31165919648261475))!=(((vt0.c1 IN ())))) INNER JOIN v0 ON ((rt0.c2 IN (vt0.c0)) IN ()));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((0.31165919648261475))!=(((vt0.c1 IN ())))) INNER JOIN v0 ON ((rt0.c2 IN (vt0.c0)) IN ()) WHERE (((((((v0.c0)OR('381029600')))AND(v0.c0)))IS((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR('381029600')))AND(v0.c0)))IS((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((0.31165919648261475))!=(((vt0.c1 IN ())))) INNER JOIN v0 ON ((rt0.c2 IN (vt0.c0)) IN ()));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((0.31165919648261475))!=(((vt0.c1 IN ())))) INNER JOIN v0 ON ((rt0.c2 IN (vt0.c0)) IN ()) WHERE (((((((v0.c0)OR('381029600')))AND(v0.c0)))IS((NOT (rt0.c2)))));
SELECT * FROM rt0, vt0 WHERE ('fo7uc{c') ORDER BY (((((rt0.c1)IS NOT(rt0.c5)), CASE NULL  WHEN rt0.c0 THEN 0Xffffffff8ab82a90 END, (rt0.c0 IN (rt0.c1))))>(((('')OR(rt0.c3)), (rt0.c1 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('fo7uc{c') IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c1)IS NOT(rt0.c5)), CASE NULL  WHEN rt0.c0 THEN 0xffffffff8ab82a90 END, (rt0.c0 IN (rt0.c1))))>(((('')OR(rt0.c3)), (rt0.c1 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1))))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ('fo7uc{c') ORDER BY (((((rt0.c1)IS NOT(rt0.c5)), CASE NULL  WHEN rt0.c0 THEN 0Xffffffff8ab82a90 END, (rt0.c0 IN (rt0.c1))))>(((('')OR(rt0.c3)), (rt0.c1 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('fo7uc{c') IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c1)IS NOT(rt0.c5)), CASE NULL  WHEN rt0.c0 THEN 0xffffffff8ab82a90 END, (rt0.c0 IN (rt0.c1))))>(((('')OR(rt0.c3)), (rt0.c1 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1))))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ('fo7uc{c') ORDER BY (((((rt0.c1)IS NOT(rt0.c5)), CASE NULL  WHEN rt0.c0 THEN 0Xffffffff8ab82a90 END, (rt0.c0 IN (rt0.c1))))>(((('')OR(rt0.c3)), (rt0.c1 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1))))) ASC  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(0.27027652395419965))) ORDER BY LIKELIHOOD(DISTINCT ((v0.c0) ISNULL), 0.10447649363669276) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(0.27027652395419965))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD(DISTINCT ((v0.c0) ISNULL), 0.10447649363669276) ASC);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(0.27027652395419965))) ORDER BY LIKELIHOOD(DISTINCT ((v0.c0) ISNULL), 0.10447649363669276) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(0.27027652395419965))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD(DISTINCT ((v0.c0) ISNULL), 0.10447649363669276) ASC);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(0.27027652395419965))) ORDER BY LIKELIHOOD(DISTINCT ((v0.c0) ISNULL), 0.10447649363669276) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c0)%(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)%(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c0)%(v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)%(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c0)%(v0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY CASE ((rt0.c5)AND(0.15128690254575528))  WHEN rt0.c4 COLLATE NOCASE THEN vt0.c1 WHEN (rt0.c3 IN ()) THEN ((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN v0.c0 THEN (NULL IN (rt0.c0, rt0.c0)) END  NULLS FIRST, TRIM(((rt0.c0)GLOB(rt0.c4)), ((x'')+(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE ((rt0.c5)AND(0.15128690254575528))  WHEN rt0.c4 COLLATE NOCASE THEN vt0.c1 WHEN (rt0.c3 IN ()) THEN ((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN v0.c0 THEN (NULL IN (rt0.c0, rt0.c0)) END  NULLS FIRST, TRIM(((rt0.c0)GLOB(rt0.c4)), ((x'')+(rt0.c0))) DESC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY CASE ((rt0.c5)AND(0.15128690254575528))  WHEN rt0.c4 COLLATE NOCASE THEN vt0.c1 WHEN (rt0.c3 IN ()) THEN ((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN v0.c0 THEN (NULL IN (rt0.c0, rt0.c0)) END  NULLS FIRST, TRIM(((rt0.c0)GLOB(rt0.c4)), ((x'')+(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE ((rt0.c5)AND(0.15128690254575528))  WHEN rt0.c4 COLLATE NOCASE THEN vt0.c1 WHEN (rt0.c3 IN ()) THEN ((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN v0.c0 THEN (NULL IN (rt0.c0, rt0.c0)) END  NULLS FIRST, TRIM(((rt0.c0)GLOB(rt0.c4)), ((x'')+(rt0.c0))) DESC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY CASE ((rt0.c5)AND(0.15128690254575528))  WHEN rt0.c4 COLLATE NOCASE THEN vt0.c1 WHEN (rt0.c3 IN ()) THEN ((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN v0.c0 THEN (NULL IN (rt0.c0, rt0.c0)) END  NULLS FIRST, TRIM(((rt0.c0)GLOB(rt0.c4)), ((x'')+(rt0.c0))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((('')+(vt0.c1)), ((vt0.c1)|(vt0.c1)), vt0.c0 COLLATE RTRIM)) AND ((NULL, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), json_object(vt0.c1, vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((('')+(vt0.c1)), ((vt0.c1)|(vt0.c1)), vt0.c0 COLLATE RTRIM)) AND ((NULL, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), json_object(vt0.c1, vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((('')+(vt0.c1)), ((vt0.c1)|(vt0.c1)), vt0.c0 COLLATE RTRIM)) AND ((NULL, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), json_object(vt0.c1, vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((('')+(vt0.c1)), ((vt0.c1)|(vt0.c1)), vt0.c0 COLLATE RTRIM)) AND ((NULL, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), json_object(vt0.c1, vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((('')+(vt0.c1)), ((vt0.c1)|(vt0.c1)), vt0.c0 COLLATE RTRIM)) AND ((NULL, ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), json_object(vt0.c1, vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (IFNULL(DISTINCT vt0.c0, v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt0.c0, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (IFNULL(DISTINCT vt0.c0, v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt0.c0, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (IFNULL(DISTINCT vt0.c0, v0.c0) COLLATE RTRIM);
SELECT * FROM rt0, vt0 WHERE (json_extract(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c3)OR(rt0.c5)))) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND((((rt0.c4))!=((rt0.c2))))))OR(CAST(rt0.c5 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((json_extract(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c3)OR(rt0.c5)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND((((rt0.c4))!=((rt0.c2))))))OR(CAST(rt0.c5 AS INTEGER))) DESC);
SELECT * FROM rt0, vt0 WHERE (json_extract(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c3)OR(rt0.c5)))) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND((((rt0.c4))!=((rt0.c2))))))OR(CAST(rt0.c5 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((json_extract(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c3)OR(rt0.c5)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND((((rt0.c4))!=((rt0.c2))))))OR(CAST(rt0.c5 AS INTEGER))) DESC);
SELECT * FROM vt0, rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR(x'')))OR(((0.15120181984839098) NOTNULL)))) ORDER BY ((((vt0.c0) ISNULL)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)OR(x'')))OR(((0.15120181984839098) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR(x'')))OR(((0.15120181984839098) NOTNULL)))) ORDER BY ((((vt0.c0) ISNULL)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)OR(x'')))OR(((0.15120181984839098) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR(x'')))OR(((0.15120181984839098) NOTNULL)))) ORDER BY ((((vt0.c0) ISNULL)) NOTNULL);
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (~ (CAST(rt0.c4 AS INTEGER))) WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c5)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (~ (CAST(rt0.c4 AS INTEGER))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (~ (CAST(rt0.c4 AS INTEGER))) WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c5)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (~ (CAST(rt0.c4 AS INTEGER))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (~ (CAST(rt0.c4 AS INTEGER))) WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c5)) COLLATE RTRIM);
SELECT ALL * FROM v0, rt0 WHERE (TRIM(DISTINCT rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (TRIM(DISTINCT rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (TRIM(DISTINCT rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS NUMERIC)));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c2)/(rt0.c4)) COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((((((rt0.c3)AND(rt0.c1)))AND(0.045542849801332275)))AND(rt0.c1)))OR(v0.c0)) WHEN '1680853576' THEN DATE(vt0.c1, rt0.c4, rt0.c5) WHEN CASE WHEN v0.c0 THEN '-2025842264' ELSE rt0.c2 END THEN CASE WHEN 0x54768654 THEN x'102a07d5' END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)/(rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CASE WHEN ((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((((((rt0.c3)AND(rt0.c1)))AND(0.045542849801332275)))AND(rt0.c1)))OR(v0.c0)) WHEN '1680853576' THEN DATE(vt0.c1, rt0.c4, rt0.c5) WHEN CASE WHEN v0.c0 THEN '-2025842264' ELSE rt0.c2 END THEN CASE WHEN 0X54768654 THEN x'102a07d5' END END ASC);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c2)/(rt0.c4)) COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((((((rt0.c3)AND(rt0.c1)))AND(0.045542849801332275)))AND(rt0.c1)))OR(v0.c0)) WHEN '1680853576' THEN DATE(vt0.c1, rt0.c4, rt0.c5) WHEN CASE WHEN v0.c0 THEN '-2025842264' ELSE rt0.c2 END THEN CASE WHEN 0x54768654 THEN x'102a07d5' END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)/(rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CASE WHEN ((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((((((rt0.c3)AND(rt0.c1)))AND(0.045542849801332275)))AND(rt0.c1)))OR(v0.c0)) WHEN '1680853576' THEN DATE(vt0.c1, rt0.c4, rt0.c5) WHEN CASE WHEN v0.c0 THEN '-2025842264' ELSE rt0.c2 END THEN CASE WHEN 0X54768654 THEN x'102a07d5' END END ASC);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c2)/(rt0.c4)) COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((((((rt0.c3)AND(rt0.c1)))AND(0.045542849801332275)))AND(rt0.c1)))OR(v0.c0)) WHEN '1680853576' THEN DATE(vt0.c1, rt0.c4, rt0.c5) WHEN CASE WHEN v0.c0 THEN '-2025842264' ELSE rt0.c2 END THEN CASE WHEN 0x54768654 THEN x'102a07d5' END END ASC;
