-- Time: 2024/06/11 01:50:21
-- Database: database72
-- Database version: 3.40.0
-- seed value: 2036530972
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL , PRIMARY KEY (c0 DESC, c0 ASC)); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 TEXT ); -- 0ms;
REINDEX  rt1; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE t0 SET c0=0Xffffffffad68e51b WHERE TRIM(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 4ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE rt1 SET (c2, c1, c1)=(0.03787844921827377, 0.1986679320006084, NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-257361982 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1385634533) BETWEEN (NULL) AND (x'208b'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-1277914646 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-714162021 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-257361982'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1559131744 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '942104938 sz=-714162021 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-714162021'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4808204237781809 IN ())) NOT BETWEEN (((0.20295057898980773) BETWEEN (0.10815745190101023) AND (NULL))) AND (('0.1986679320006084' IN (NULL, '')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 sz=-1385634533 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1277914646 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-714162021 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-1385634533'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) BETWEEN ('147102510' COLLATE RTRIM) AND (DATE(-1.277914646E9, x'', 0.10815745190101023, -1.277914646E9, x'5285'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1653582655 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1817972129 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1916151825 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '-936031869 -951845508 sz=-797023157 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=1063522482 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (-1277914646)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1822267258 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-1408815378 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '2 sz=-714162021 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '1947932106 0 sz=-714162021 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1086820738 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (x''))) NOT BETWEEN (((x'bcf5') NOT NULL)) AND (x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=989223416 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) NOT BETWEEN ((('')>=('F'))) AND ((~ (0.5471048565199562)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('-103799401' IN ())  WHEN CAST('1947932106' AS TEXT) THEN (((('-2136183997')AND(x'')))OR(']&')) ELSE ((x'')>>('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1391647699 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)+(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '2 sz=-797023157 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1556061569'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -2.57361982E8; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('~2')) NOT BETWEEN ((NULL)) AND (('6'))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-2094193481'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN ((((NULL) NOT BETWEEN (0.8767633190051893) AND (0.9201650608837927)))) AND (((~ (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=263956014'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR('-854160967')))OR(NULL)) COLLATE NOCASE; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1772000516'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '\r4' THEN 1.947932106E9 END)AND(((NULL)<<('qN')))))AND(-1.408815378E9)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT ('263956014')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0xffffffffffab97b6 THEN 0x3827616a END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('4777218' IN ()))LIKE(((0.9201650608837927)IS(0.2870646664085478)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS(NULL) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-250088634 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((9.89223416E8)IS NOT('-1772000516')))IS(((0.5076775110474177)>=('+')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '2'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.1738630091493487)) NOT BETWEEN ((((x'') NOT BETWEEN (NULL) AND ('')))) AND ((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=989223416 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '1391647699 -714358108 sz=1132170079 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1097053155 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 sz=942104938 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1518743564 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '4 sz=-1298847136 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '0 sz=1943728214'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((UNLIKELY('-1377286687')))>((((NULL) BETWEEN (NULL) AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1298847136 2 sz=1501499656 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((('~2')<(NULL)))) AND ((((((0.7851378000204686)AND('0.5471048565199562')))OR(x'5a96'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1822267258 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=380163151'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-12878012'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')%(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-2072484373'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1947932106' COLLATE BINARY)OR((0.9388255098422181 IN ()))))AND((NOT (0.19735424240698785)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-270174183 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-1277914646 2 sz=-2136183997 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-257361982 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 -2109061399 sz=-1435190285'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 -2021876772 sz=1774087704 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 -877385172'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=246539831 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1814089422 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=569875720 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, NULL, NULL, NULL, x'07cd')) NOT BETWEEN (('1344114479', '0.4808204237781809', '', NULL, NULL)) AND ((0.6116805937945229, 0.36405725283909074, 0.19735424240698785, x'', 'AAux')))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT 'F', NULL))IS((NOT (0Xfffffffff77fa92c)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '263956014 -854160967 sz=1518743564 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)) NOT BETWEEN ((-1.377286687E9)) AND (('-2136183997'))))AND(((0.942922620637502)<(NULL)))))OR(((((-223778228)OR(0.9240459694124599)))OR(x'8b6d6dcf')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1344114479'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('', 4777218.0, NULL)) NOT BETWEEN (('1573123522', x'1f23', '-328618769')) AND ((x'', 0.09133991682220322, NULL))))IS NOT(0X437b8b5f)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.46535104737640265 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '263956014 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c429')+('')))>=(rtreenode(NULL, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=594840938 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-750095102 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '1439768762 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('0.9201650608837927')))AND(((((439195829)OR('旫*Ru')))OR(0xffffffff877c9bdc)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1119984587'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1433012394 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('210191782') NOT BETWEEN ('') AND ('旫*Ru')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '550609442 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 sz=1776577762'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '2 sz=-2630790'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (-1369513613))))<=(((((('1411380519')AND(1556061569)))OR(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1653582655 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (x'51e8')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-228086096'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-223778228 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(-2089965284 COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1411380519 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('1851605454')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-1998591898 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.03787844921827377) NOT BETWEEN (x'65f8') AND ('')) IN (CAST(0x11e2b2c AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-869499545 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-7.50095102E8)>=('-1377286687')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '425446132 994347682 sz=-931673419 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=681563350'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '1501499656 0 sz=2118590715'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=100404278 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '994347682 sz=1559131744 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '2 sz=464121383 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '-1371578972 405447356 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-1369513613'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '1376634900 -1369513613 sz=989223416'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)==(x'c03b')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=681563350 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '2 sz=202728061'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)IS NOT('')) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2033177610'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1774087704 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '1382905877 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 sz=-1277914646 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5947587764514961 AS NUMERIC) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '-2089965284 sz=-642404459'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 sz=1486069071 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 sz=-1794534984 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-487515071 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=501660713 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1916151825 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.18680431654452623))=((NULL)))))<=(((('')||('1382905877'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '2 -717932145 sz=106920070'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '1653582655 sz=1851605454'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '-1377286687 sz=1472101990'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-1940048715'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8369946078817104; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('>\n想*c(톅䔕' IN (NULL, x''))))<((CAST(0x741b15ca AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1357708014'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((('847818857')OR(x'')))AND(-1519224486)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-659074063 0 sz=1082898032 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0.08732103860632612 AS INTEGER), 'vO', INSTR(0.5452635881831367, x'')))>((CASE NULL  WHEN 545407870 THEN 0.46535104737640265 WHEN x'' THEN x'' WHEN NULL THEN 'nowX2U' ELSE x'' END, (0.7332782367987154 IN ()), ((((((((0.6116805937945229)OR(NULL)))AND(0.27068321477873214)))OR(0.7759431973889392)))OR(0.7653075698336969))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-2109061399'; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array((- (0xffffffffadf5f103)), CASE '-1143513580'  WHEN 0.4808204237781809 THEN NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1480891417'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-684185476'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-9223372036854775808'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (x'') AND ('%(')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1132170079 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '4 sz=-1794534984'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1086820738 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1907459462 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '\nVu'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.28404022792952255) IS TRUE))-(TYPEOF(DISTINCT x'b847'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1204533944'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-328618769 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-927467746 sz=1092857202'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1860037387'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=2002376951'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 sz=2118590715 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1916151825'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1774087704 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (0.9086512397296829, 0.5328618617887566))) NOT BETWEEN (((x'')*(x''))) AND (CASE 'LG\n鴈'  WHEN '989223416' THEN 0.21441666945997429 WHEN NULL THEN '106920070' WHEN -1511394739 THEN NULL ELSE '-1097053155' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1344114479 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '-1298847136 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '-795852975'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS BLOB))OR((((('-1435190285')OR(NULL)))OR('!Mss!R)')))))AND((+ (0.32707829788155496)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-951845508 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 sz=-1339752220 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1143473392 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (0.8369946078817104)))OR((('X''>A')|(NULL)))))AND((NOT (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))==((0.8172943583399395)))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT NULL))>>(CAST('1851605454' AS BLOB))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1705374407 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'5ac9')))|(NULL)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.09239613498964372) BETWEEN (x'a4bb') AND (0.5162678290548862)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2037611335 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_remove(NULL, '-1435190285'))/((((('-714162021')AND(1807638115)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '354140427 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=2127786133 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 sz=-2033177610 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '0 0 sz=-2089965284'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', x'', '-2089965284')) BETWEEN ((((0.7920135814430147) ISNULL), ((x'a5ce') IS TRUE), CASE NULL  WHEN 0.2805415520416086 THEN 0.15109865357358476 END)) AND ((((0x65702080)-('-1969294567')), (('kJ') NOTNULL), ((('278980358')) NOT BETWEEN ((0.06232417150417735)) AND ((0.8574273045395325)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.04681002946637314) NOT BETWEEN (NULL) AND (1)))GLOB((('vꘂo*>EAl쫴') NOT NULL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1260888793'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND (x'')))&(((0.4804010662475602) NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(0.7388832266089195)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'' AS REAL))AND(((((-2103004225)AND('-855266514')))OR('jfnj1')))))OR(((x'')=(NULL)))))AND(NULL)))AND(CASE x'02ae'  WHEN 1918166945 THEN '1518743564' WHEN x'' THEN '-1' WHEN NULL THEN ']0gc' WHEN NULL THEN x'' WHEN '210191782' THEN 2.715401404415063E-4 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-1328498244 sz=1486069071'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=841149898 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ ('0.06232417150417735'))  WHEN ('' IN (NULL)) THEN ((0xffffffffd9b5af95) NOT BETWEEN ('0.27068321477873214') AND ('147102510')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.41076960770143567)>=(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-538965199 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=849580778 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=814153451 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT BETWEEN (0.7724210978985727) AND ('-1303791206')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-1567628634 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 -1085350322 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 sz=0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((x'', '', x''))<=((0Xffffffff80ac6b43, 0.4359350470672718, 0.5577541220185908))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-1254219982 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '-1665064485 0 sz=-1004424460 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '656270915'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '2 sz=-2630790'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-2121040859 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-1247900074'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=100404278'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.6477117620037115)) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1983728881 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-12878012 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '1280648541 -585502576 sz=145395871'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(((x'') IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '-495786472'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1767819706 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=45373215 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((817028663)*(0.6071593516209987)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-2026747302 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((1943728214)+('-750095102')), (NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('852968725' IN ())) BETWEEN ('' COLLATE NOCASE) AND (('-2089965284' IN (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '2 sz=-308954899'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((- (-2136183997))) NOT BETWEEN (0.3002452009764993) AND ((((0Xfffffffff75dac0b)) NOT BETWEEN (('-2033177610')) AND ((-228086096))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1534982350')AND(-1.435190285E9)))AND(x'')))AND('')))AND(-1053797370))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'a06e')OR('-1411609805')))OR(x'ce27'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=626366849'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (SUBSTR('-156975449', 0.9086512397296829))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1019041390'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- ('')))OR((x'' IN ()))))AND((('-1798524083') NOT BETWEEN (NULL) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '47897587 -1960084439 sz=-1067917099'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-1825653972 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND('-750095102')))OR(((NULL) BETWEEN ('-1277914646') AND (1463625834)))))AND(json_object('', 'g~~/Vffa'))))OR((NOT ('kj')))))AND(CASE WHEN 'vꘂo*>EAl쫴' THEN 0.1647532823970158 WHEN x'' THEN '106920070' WHEN NULL THEN 'X6n(l' WHEN x'' THEN x'6db3' WHEN '520538109' THEN NULL ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '-717932145'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 2005577137'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1830007397'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=1832779065 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1280040310'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -543035726; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1264439256'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-962441086 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=458626712 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=449929745'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'')|(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'd968') ISNULL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '0 9223372036854775807 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN (NULL) AND ((0.34849412605605923 IN (0.19433017651514894, x'd13d')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 -1315458189 sz=-579591571 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-1095776272'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=255766296 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-2027027620 -1298847136 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=501660713 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '-1963176361 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-951375488 COLLATE BINARY AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND('')))OR(0.5989876670119223)))AND(x'')))OR(0.469711654294667)))-(5.01660713E8 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.20295057898980773') NOTNULL)) NOT BETWEEN (((((0.6715851094072571)AND(0.18680431654452623)))OR(0.993644136807506))) AND ((('\r4')=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-142174169 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-1408815378 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN x'75d6' THEN 0.7851378000204686 ELSE x'' END AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((((0.2219421438152256)AND(0.01895441487826599)))AND(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)=(CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-1377286687'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=1411380519 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((NULL)OR(NULL)))OR(0.11852133096002593)))AND(x'')))OR(NULL)) THEN TYPEOF(x'b7a1') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '-1155958853 sz=1472101990 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '720542031 2 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (x'') AND ('.~>X')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-285846805 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('m_^!?W') BETWEEN ('') AND ('106920070')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert((('Ul')%(0.9786639874299816)), ((0.6287931750143622) IS FALSE), (('7a')>=(1.556061569E9)), 671636616, ((NULL) NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.21095462756064065)/(NULL))) NOT BETWEEN (CAST('AAux' AS REAL)) AND ('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 -720355103 sz=-2040420029 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-2072484373 sz=-649778079 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-2003478833'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('旫') NOT BETWEEN (x'') AND (x'')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1411380519 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-591310359'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1492470139'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=758114799 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-931673419 0 sz=-746450641'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '-1801618647'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1908449082 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1653582655 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'8291')OR(CAST('-1037898132' AS BLOB))))OR((('')/('-1298847136')))))OR((('C')/(x'')))))AND(CAST('-1597106870' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((NULL)GLOB(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1286462492'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((- (0.3917532579669114)))AND(CASE WHEN 0xffffffffe8cd2f35 THEN 0.08732103860632612 WHEN NULL THEN -195837591 WHEN x'' THEN x'' END)))AND(((x'')*(853721894)))))OR((x'dd95' IN ('')))))AND(x'')))AND((- ('1617367595')))))AND(CASE WHEN NULL THEN '0.4808204237781809' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(0.7851378000204686)))AND(x'')))>=(((x'e5136cfb') IS FALSE))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=537221588'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (COALESCE(0xffffffff9eae2f19, 1817972129))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=1559131744 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-1442125963 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1674958968 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('&v')OR('')))OR(x'')))AND(NULL)))AND(x'')))>>(((x'') BETWEEN (-1.119984587E9) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1671928752 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '-30923065 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))IS(((0.8315348663644742)OR(-1236967181)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '464121383 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-110328926 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1916151825 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1653582655 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '2 sz=-1478877740 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '210191782 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.1828395666945445 THEN '-1236967181' ELSE NULL END) NOTNULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('-869499545' COLLATE NOCASE) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-1408815378'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(CAST(0.49406742306581497 AS TEXT), ((NULL)>=(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-639126146 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=824883251 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(0.8343268598891334 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'')) NOT BETWEEN ((x'')) AND ((-1.998591898E9)))  WHEN CAST(-2.50088634E8 AS INTEGER) THEN x'b8f4' COLLATE BINARY WHEN (((x'92b26d02', '-661836513', '-223778228'))=(('f', 0.22399497243364075, 1.776577762E9))) THEN (((-1.369513613E9)) BETWEEN ((NULL)) AND (('3n	r_ '))) WHEN ((x'61fc') IS FALSE) THEN (((((((('/}I뀋I,')AND(-1.277914646E9)))AND(0.48722820210220563)))OR(2.02728061E8)))OR(-1450477668)) ELSE (('kH K')/(0.026699660282753168)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR('')))OR(x'fa16')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-2094193481 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=501660713 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1224785529'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 2125463332; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CHANGES())) AND ((('246539831' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOTNULL))>=(CASE WHEN NULL THEN -1818429113 WHEN 0.7441618838281517 THEN 0.993644136807506 WHEN 'Ⓑ' THEN 0xffffffffb2952a60 ELSE '360383497' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN x'' WHEN 0X5cbf9d81 THEN x'660f' WHEN x'' THEN 'X''>A' END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1472101990 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-1434312855 sz=-154100090 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1376634900 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-1419837814 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2121945527 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, '鬮樧', 0.3224827355754888))<((x'', 0.5076775110474177, '-1998591898'))))-(((x'')%(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN json_patch('ul', x'23ad') THEN (((NULL)) BETWEEN ((0.3843662057486701)) AND ((NULL))) WHEN CASE WHEN '-487515071' THEN 0.6729754309288937 WHEN '-1435190285' THEN x'' WHEN NULL THEN ',80' ELSE 0Xffffffffaef02c0f END THEN (((x'')) NOT BETWEEN ((0.7388832266089195)) AND ((577316746))) WHEN '#SY' COLLATE NOCASE THEN CAST('0.993644136807506' AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((-1.772000516E9))<=((0.7184411656781954))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1774087704 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 sz=792319916 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-871452635 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-142628564 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-252266901'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '425446132 -1678189324 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1344114479 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 sz=153714090'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=783428241'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5866433093760699))<=((0.9786639874299816))))/(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-1687907824 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1123172474 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.22257439035063398 COLLATE NOCASE)AND((NOT (NULL)))))AND(((NULL) BETWEEN (x'') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1456732483' IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json(x'2d40'))OR(CASE WHEN '501660713' THEN NULL ELSE 'LG\n鴈' END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (NULL) AND (x'')))LIKE(('餩v' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))-(1.559131744E9 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '1473340388 sz=-399772251 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1939979650 1954503682 sz=1625734553 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((1628764520)OR(NULL)))AND(0.7375867048499142)))AND(0.761140163397363)))OR(0.18817110793916225)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SUBSTR(0.2805415520416086, ''))+((NULL IN ('0.3843662057486701', NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN -7.14358108E8 THEN 0x58939d4f END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1573123522 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '-1588883943 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=410611944 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-487515071 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0xffffffff96ee8cce)AND('1776577762')))OR((NULL IN ()))))AND(((0.1622895863360656)||(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6287931750143622) NOT BETWEEN ('0.32707829788155496') AND ('195517632'))) BETWEEN (((((NULL)AND(x'f291')))AND(NULL))) AND ((('-2136183997')<(x'1b68')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=550609442 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1556061569'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1035627969 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (0.39814731769851164)))AND(((-127587796) IS FALSE))))OR(x'f299')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL, 'L', '147102510')) NOT BETWEEN ((NULL, x'ee0e', NULL)) AND ((NULL, NULL, '511426672')))))>=(((- ('L'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-2023006596 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '1123350525 sz=1806260378 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-276062743 sz=1063522482 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2K þr픠')OR('1134300620'))) BETWEEN ((0.7903309216251037 IN (NULL, '-1250511192'))) AND (((0xffffffff9657bcd7) BETWEEN ('294824227') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '2 1184260888 sz=1604856415 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((NULL)AND('-1369513613')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-2630790 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2046157123 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-1013397025 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1767362949 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X102f1bb5)<<(('1686521629' IN (x'bef6')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=1653582655 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5162678290548862, -936031869, NULL))==((NULL, 0.4601373341523547, 379577922))), TRIM('0韐2⩊'), 1909857124 COLLATE RTRIM))<((('-12878012' IN ()), CASE 0.2718808064876126  WHEN 0.942922620637502 THEN x'' END, LOWER('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 sz=-146269310 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1451775814 IN ()))AND((('') ISNULL))))AND((('-5531722') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '-38144112 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-241193800 1772839857 sz=1376634900 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1489551694 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT (('')%(0.989165370906592)), 0.1744100282611738); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '439195829 sz=-2117082336 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=550609442 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1954231461')<<(0.321506139658012)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ((((0.8369946078817104))==(('*,'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=215059056 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)>>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1752313341 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1441664941 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=965282746'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-535422539 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '877779267 sz=-1349228316 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7024154115996202, 0.5176931793582952, x'809b'))=(('M섖', x'', 0.5026693115726805))))||(((-1e500) NOT BETWEEN (2014353614) AND (-1269451056)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('681563350')OR(x'')))OR('0.06232417150417735')) AS NUMERIC); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(0X3827616a)))OR(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=96213404 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '915304368 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1439768762 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=464121383'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-717932145 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 720069893 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.8120580843457278 ELSE '-1600312207' END)>>((('-2021876772')GLOB(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 sz=1281439137'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0X32d74515 IN ())  WHEN CASE '	gui&'  WHEN 0.5731931343078811 THEN '' ELSE 0.9153322183952813 END THEN (~ (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=925585862'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('繦\B,f胨JZ\n')OR(-1.940048715E9)))AND(-1236967181)))AND('qJvl')))OR(0.857743444473837))) IS FALSE); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.06966366490477194 IN ('1501499656', 0.10153457514391573)))>=(CASE WHEN '1767362949' THEN x'4e04' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0Xfffffffffc94d5df) BETWEEN ('▗<O') AND ('983338353'))  WHEN (~ ('2K þr픠')) THEN json_array_length(NULL, -2630790) WHEN json_remove(1048559007, '-1483462309') THEN CASE x'3f51'  WHEN x'b0f1' THEN 0.2870646664085478 ELSE x'' END WHEN CASE WHEN '742938621' THEN 0.040725357565548626 END THEN ((-268719541)GLOB('1916151825')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('%%B-M0' AS NUMERIC) THEN ABS(-1544081378) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (0x699dbf06, x''))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-257361982 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-9223372036854775808') NOT BETWEEN (0xffffffffa2ad7bee) AND (NULL)))>=(((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-935842958'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=166840221 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 1.382905877E9 THEN (~ (0.3225170056530825)) WHEN x'' THEN (~ ('380163151')) WHEN '-2021876772' THEN json(0.3002452009764993) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')=('')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((~ ('ddMY')), HEX(0x2cddb2c0)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '2 sz=670522330 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-444150071 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1814512015 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1898431018 1870176907'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1502474602'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=210334680 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '664903586 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '1382905877 1433012394 sz=1851605454 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2118590715 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1654861087'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX((+ (-1371578972))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '1080356684 sz=-581169353 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')&(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1912516330' IN (NULL))) NOT BETWEEN (CAST('f+slE|O' AS INTEGER)) AND (((NULL)<>(0.6445514404990899)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(DISTINCT NULL, 0.04993007053991105)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'M섖'  WHEN NULL THEN 0.6216004913981142 WHEN x'' THEN '1083832210' WHEN '>' THEN x'' END)IS NOT(CASE x'baaa'  WHEN 0.6079891960955234 THEN 'CH' ELSE '246539831' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-1375230829 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1779427553 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=26922660'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-797023157 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT BETWEEN ((((NULL))==((NULL)))) AND (((x'35fb')IS NOT(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '915246409 0 sz=263956014 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'3c9a' COLLATE NOCASE)LIKE(TOTAL_CHANGES())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-697668979'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-163946559' COLLATE RTRIM)AND(CASE WHEN x'f3ef' THEN 0.7024154115996202 ELSE -655791111 END)))AND(('-9223372036854775808' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '-1236967181 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '-1371578972 sz=294336023 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1742298565 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=569875720 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1439768762 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '501660713 sz=-223778228 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1456771034 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-142628564'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN '185940724' THEN 0Xffffffffcc2c7d67 WHEN x'' THEN 'yB' WHEN x'' THEN x'3961' ELSE x'b896' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'62be')<=(NULL))) NOT BETWEEN (CASE '-2630790'  WHEN NULL THEN x'' WHEN '联莿(a&\n>n' THEN 1450713590 WHEN 0.1057708282859754 THEN x'' ELSE NULL END) AND (CAST(NULL AS REAL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=384362984'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-750095102' IN (CAST(0.18817110793916225 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1014900253 noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (1496491881) AND (x'')))IS((NULL IN (0Xfffffffff8184ba4, NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1778713823'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.6405065943405818 IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1418151309')AND('-5531722')))OR(x'')))+(((((NULL)AND(x'bc52')))OR(',赪AoQ▗')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-6786247 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('6\+,f胨JZ\n') IS FALSE)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<=('1573123522'))) NOT BETWEEN (UNLIKELY(0Xffffffff9c7b7b14)) AND (LOWER(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-1492168895 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '989223416 sz=1918166945 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('n' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '2 sz=-144911664 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-912404808 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1385634533 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('4777218')||(0.09633514620875194)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('1484736251'))) BETWEEN (((NULL) IS TRUE)) AND (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '1055823265'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-2109061399 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((-585466720)!=(x''))  WHEN CASE WHEN x'' THEN '{' END THEN HEX(DISTINCT 0.3157806322208826) WHEN (x'ccf6' IN ('kvX(%C)', x'')) THEN 0Xfffffffff267aeb0 WHEN (('')LIKE(x'f33e')) THEN (('') BETWEEN (0.6876922049846953) AND ('0.3843662057486701')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (NULL)), NULL, ((x'825a') NOT NULL)))>=((((0.5854214779412688)IS NOT(NULL)), CASE 0.5986072395257931  WHEN NULL THEN NULL WHEN x'3f74' THEN '' WHEN NULL THEN 9223372036854775807 END, 0.2870646664085478))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '0 sz=-717932145'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=202728061 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN '' THEN NULL WHEN ']0gc' THEN x'' WHEN NULL THEN -928650314 ELSE '1774087704' END)OR(((('-1385634533')) BETWEEN ((x'')) AND ((-1030553982))))))OR(((((((((x'')AND('A*<{')))OR('-803842161')))AND('')))AND(NULL)))))OR(((x'')<=(0.2850839619142117)))))OR((- (-38046275)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5280126715676363) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS BLOB)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-869499545 -1633660026 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN 0X7b76f495 THEN NULL ELSE NULL END) BETWEEN ((NOT (0.7903309216251037))) AND (CAST(0.39356831449149166 AS BLOB))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=325691595 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '2070458820 sz=102374934'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object((- (0.27962828149164887)), ((-1503903862)|(0X57be7e66))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(((NULL) BETWEEN (x'') AND (0.7272578775740187)))))AND(CASE NULL  WHEN 0.07906297674446627 THEN 'Fln#	⬬y	' ELSE NULL END)))OR(IFNULL('942312571', '920568524'))))OR(((NULL) NOTNULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 0 sz=954526881 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((((((('Uq')OR(x'')))AND(x'')))OR(0Xffffffff961b2600)))AND(x'31e1')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=18754348 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1851605454 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'35a5')) BETWEEN (('')) AND ((0.6995105270175155))) AS BLOB); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=473932482 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-1940048715 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-90705509'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-1.03799401E8 IN (x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT BETWEEN ('1884723946') AND (x'e461')))AND(((NULL) NOT BETWEEN (x'71974a77') AND ('99242500')))))OR(((NULL) NOT BETWEEN (0.28605488663229717) AND ('>H')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '1918166945 -1803347788 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1731156289'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-103799401 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=851405603 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((~ ('<J|')))AND((('-257361982')AND(NULL)))))AND((NOT ('464121383')))))AND(((((((((x'')OR('-877385172')))OR(NULL)))OR(0.11852133096002593)))OR(0xffffffffe7ac8b3f)))))OR((('')IS(0X8c49b2e)))))OR(CASE WHEN x'3a2f' THEN x'' END)))AND(('1103881760' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKE('1266468656', x'9f81', 'y') IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('' IN ()))OR('5Z')))AND((('942104938') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1698596265 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1437035479 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8231863158539368, ((0.5319859952343134) NOT NULL), (NULL IN ())))>(((0.9793122380017371 IN ()), CASE WHEN '-^)uxg◔' THEN x'' END, (NOT ('537886680'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1850840859 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5139278604559581) ISNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '-1970979631 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-270174183'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') BETWEEN ('') AND (x'b2ba')) THEN '	zyiZ' WHEN ((0.3901942816061613)||(x'')) THEN ((((x'2c68')AND('%j')))AND(x'')) WHEN '' THEN (- (x'797f')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5395616515181063) NOTNULL))IS NOT((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '696558266 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1867272708'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'b1cd') NOT BETWEEN (0Xfffffffff117f346) AND (')')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'') BETWEEN ('-869441190') AND ('-2116695846')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1814089422'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '1814089422 sz=-1879084189 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-567676632 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1783177114 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '328522782 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=1767362949 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-142628564 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2044434000 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-12878012 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x''))<>(('0.3917532579669114')))  WHEN x'' THEN ((0xbf91de4) IS TRUE) ELSE ((0.5646725151457619) ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-250088634'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.15109865357358476)) BETWEEN ((0.41303608976063644)) AND ((0.04363070429847493))))/(CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5471048565199562)) NOT BETWEEN (((((('+\r9^&')AND(NULL)))OR('UsQW')))) AND ((x''))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=499872685'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN '' WHEN 0.8129493298769213 THEN NULL WHEN 0.5797085938727193 THEN x'' ELSE '-1341559572' END)AND(('-233809377' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('')))OR('1486069071')))OR(NULL)))AND(-7.14358108E8))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN x'' THEN 0xffffffff96c11b31 WHEN 0.347333855436158 THEN '-1236967181' WHEN x'' THEN '' ELSE 'MvU<' END COLLATE BINARY COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((-1947250344)-(-1.385634533E9)) IN ((('2145011452') NOT BETWEEN (1.518743564E9) AND (501660713)), ((((((((0.7375867048499142)AND(x'')))OR(0.5594902991178057)))OR(NULL)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((x'')AND('')))OR('489772450')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('Oᗊ')>=(-1998591898)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1731184414 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.8038070690280599 IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0x1ba9ee27)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(NULL COLLATE NOCASE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (0.05558383712429127)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '2027561297 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=439195829 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', '261066351 sz=-877385172 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=154157728 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-115694976 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1616120832) IS FALSE) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-250088634 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-1375590922 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '4 84614985 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 832769299; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND(x'')))OR(0x5782f27a)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_t0_1', ' sz=-1435190285 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((NULL)) AND ((x'a116'))))LIKE((- ('dGdb_o}')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((2056173473 IN ()))|(CASE NULL  WHEN '1501499656' THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension((('0.32707829788155496') NOTNULL)); -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
ANALYZE t0; -- 12ms;
PRAGMA temp.shrink_memory; -- 0ms;
REINDEX; -- 1ms;
DELETE FROM rt1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c59 REAL; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=('-103799401') WHERE ('0.7184411656781954' IN ()); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA main.incremental_vacuum; -- 0ms;
UPDATE OR IGNORE t0 SET (c59, c59)=(x'', 0.9201650608837927) WHERE (((t0.c0)) NOT BETWEEN ((((t0.c59)/(0.6544327829668906)))) AND ((((t0.c0)<<(t0.c0))))); -- 0ms;
UPDATE OR ABORT rt1 SET (c3)=(x'39d52bed') WHERE (rt1.c1 COLLATE NOCASE IN ()); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL rt1 SET c1=0.011281692498547158; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET c59=NULL WHERE CAST(((t0.c59)==(t0.c0)) AS BLOB); -- 0ms;
UPDATE OR IGNORE rt1 SET c2='L' WHERE (((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((((rt1.c2) IS TRUE), (rt1.c1 IN ()), (((rt1.c1, rt1.c2, rt1.c0))>((rt1.c2, rt1.c2, x'cf60'))))) AND ((CAST(rt1.c0 AS TEXT), (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c0))), CASE WHEN rt1.c3 THEN rt1.c3 END))); -- 0ms;
PRAGMA cell_size_check = false; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA journal_mode = MEMORY; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE rt1 SET c2='x%dI' WHERE (((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)), CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END, json_array_length(rt1.c1, rt1.c0)))>((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)), (rt1.c0 IN ()), ((rt1.c0)GLOB(rt1.c0))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(CAST(1.817972129E9 AS NUMERIC)); -- 0ms;
PRAGMA main.checkpoint_fullfsync = true; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c2)=(NULL, x'') WHERE HEX(x''); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=x'' WHERE ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (CASE '1770283744'  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c0 END) AND (CAST(rt1.c0 AS INTEGER))); -- 0ms;
UPDATE t0 SET (c59)=(-511281848) WHERE ((t0.c59) NOTNULL) COLLATE RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c2='-854160967', c0=0.029697806719917175, c2=x'' WHERE rt1.c0; -- 0ms;
VACUUM; -- 2ms;
PRAGMA secure_delete = false; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c39; -- 1ms;
UPDATE t0 SET (c39, c59, c59, c59)=('', 'LP', 'Ⓑ', NULL) WHERE '-786123858'; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
REINDEX; -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT ((((((((((rt1.c0)||(t0.c59)))OR(COUNT(*))))AND(((t0.c59) NOT BETWEEN (rt1.c3) AND (t0.c39)))))AND(MAX(t0.c39))))AND(0.6310039648867637)) FROM t0, rt1; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET (c39)=(0xffffffff9f157b38) WHERE (- (0.42870804123366835)); -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c2)=(NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt1 SET c3=NULL; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0 CROSS JOIN v0 ON ((((t0.c59)LIKE(t0.c59))) NOT NULL) WHERE (t0.c59) ORDER BY '-1279335653'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((t0.c59)LIKE(t0.c59))) NOT NULL) ORDER BY '-1279335653'  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN v0 ON ((((t0.c59)LIKE(t0.c59))) NOT NULL) WHERE (t0.c59) ORDER BY '-1279335653'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((t0.c59)LIKE(t0.c59))) NOT NULL) ORDER BY '-1279335653'  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN v0 ON ((((t0.c59)LIKE(t0.c59))) NOT NULL) WHERE (t0.c59) ORDER BY '-1279335653'  NULLS FIRST;
SELECT ALL * FROM v0, rt1, t0 WHERE ((((ABS(DISTINCT '-1495176055')))==((((((((((t0.c59)OR(t0.c59)))AND(rt1.c1)))AND(rt1.c3)))AND(rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((ABS(DISTINCT '-1495176055')))==((((((((((t0.c59)OR(t0.c59)))AND(rt1.c1)))AND(rt1.c3)))AND(rt1.c0)))))) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL * FROM v0, rt1, t0 WHERE ((((ABS(DISTINCT '-1495176055')))==((((((((((t0.c59)OR(t0.c59)))AND(rt1.c1)))AND(rt1.c3)))AND(rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((ABS(DISTINCT '-1495176055')))==((((((((((t0.c59)OR(t0.c59)))AND(rt1.c1)))AND(rt1.c3)))AND(rt1.c0)))))) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL * FROM v0, rt1, t0 WHERE ((((ABS(DISTINCT '-1495176055')))==((((((((((t0.c59)OR(t0.c59)))AND(rt1.c1)))AND(rt1.c3)))AND(rt1.c0))))));
SELECT ALL * FROM t0, v0, rt1 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY rt1.c2  NULLS LAST);
SELECT ALL * FROM t0, v0, rt1 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY rt1.c2  NULLS LAST);
SELECT ALL * FROM t0, v0, rt1 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY rt1.c2  NULLS LAST;
SELECT * FROM rt1, v0, t0 WHERE ((('-671546270' IN ('-1097053155', rt1.c3)) IN ())) ORDER BY (- (CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST, ((((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))), CAST(rt1.c3 AS BLOB), CASE WHEN rt1.c2 THEN t0.c39 ELSE v0.c0 END))>=((((rt1.c0)+(rt1.c2)), (((rt1.c2, rt1.c3, v0.c0))==((rt1.c1, t0.c59, t0.c39))), rt1.c3 COLLATE NOCASE))) ASC, CASE ((rt1.c3) NOTNULL)  WHEN (rt1.c3 IN ()) THEN 0.007984758719695062 WHEN ((v0.c0) BETWEEN (v0.c0) AND (0.30275336728282054)) THEN ((t0.c39)GLOB(t0.c39)) WHEN ((rt1.c0)|(v0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c3 WHEN 'f' THEN t0.c59 WHEN v0.c0 THEN v0.c0 END ELSE ((rt1.c0)||(rt1.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-671546270' IN ('-1097053155', rt1.c3)) IN ())) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY (- (CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST, ((((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))), CAST(rt1.c3 AS BLOB), CASE WHEN rt1.c2 THEN t0.c39 ELSE v0.c0 END))>=((((rt1.c0)+(rt1.c2)), (((rt1.c2, rt1.c3, v0.c0))==((rt1.c1, t0.c59, t0.c39))), rt1.c3 COLLATE NOCASE))) ASC, CASE ((rt1.c3) NOTNULL)  WHEN (rt1.c3 IN ()) THEN 0.007984758719695062 WHEN ((v0.c0) BETWEEN (v0.c0) AND (0.30275336728282054)) THEN ((t0.c39)GLOB(t0.c39)) WHEN ((rt1.c0)|(v0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c3 WHEN 'f' THEN t0.c59 WHEN v0.c0 THEN v0.c0 END ELSE ((rt1.c0)||(rt1.c1)) END DESC  NULLS FIRST);
SELECT * FROM rt1, v0, t0 WHERE ((('-671546270' IN ('-1097053155', rt1.c3)) IN ())) ORDER BY (- (CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST, ((((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))), CAST(rt1.c3 AS BLOB), CASE WHEN rt1.c2 THEN t0.c39 ELSE v0.c0 END))>=((((rt1.c0)+(rt1.c2)), (((rt1.c2, rt1.c3, v0.c0))==((rt1.c1, t0.c59, t0.c39))), rt1.c3 COLLATE NOCASE))) ASC, CASE ((rt1.c3) NOTNULL)  WHEN (rt1.c3 IN ()) THEN 0.007984758719695062 WHEN ((v0.c0) BETWEEN (v0.c0) AND (0.30275336728282054)) THEN ((t0.c39)GLOB(t0.c39)) WHEN ((rt1.c0)|(v0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c3 WHEN 'f' THEN t0.c59 WHEN v0.c0 THEN v0.c0 END ELSE ((rt1.c0)||(rt1.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-671546270' IN ('-1097053155', rt1.c3)) IN ())) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY (- (CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST, ((((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))), CAST(rt1.c3 AS BLOB), CASE WHEN rt1.c2 THEN t0.c39 ELSE v0.c0 END))>=((((rt1.c0)+(rt1.c2)), (((rt1.c2, rt1.c3, v0.c0))==((rt1.c1, t0.c59, t0.c39))), rt1.c3 COLLATE NOCASE))) ASC, CASE ((rt1.c3) NOTNULL)  WHEN (rt1.c3 IN ()) THEN 0.007984758719695062 WHEN ((v0.c0) BETWEEN (v0.c0) AND (0.30275336728282054)) THEN ((t0.c39)GLOB(t0.c39)) WHEN ((rt1.c0)|(v0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c3 WHEN 'f' THEN t0.c59 WHEN v0.c0 THEN v0.c0 END ELSE ((rt1.c0)||(rt1.c1)) END DESC  NULLS FIRST);
SELECT * FROM rt1, v0, t0 WHERE ((('-671546270' IN ('-1097053155', rt1.c3)) IN ())) ORDER BY (- (CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST, ((((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))), CAST(rt1.c3 AS BLOB), CASE WHEN rt1.c2 THEN t0.c39 ELSE v0.c0 END))>=((((rt1.c0)+(rt1.c2)), (((rt1.c2, rt1.c3, v0.c0))==((rt1.c1, t0.c59, t0.c39))), rt1.c3 COLLATE NOCASE))) ASC, CASE ((rt1.c3) NOTNULL)  WHEN (rt1.c3 IN ()) THEN 0.007984758719695062 WHEN ((v0.c0) BETWEEN (v0.c0) AND (0.30275336728282054)) THEN ((t0.c39)GLOB(t0.c39)) WHEN ((rt1.c0)|(v0.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c3 WHEN 'f' THEN t0.c59 WHEN v0.c0 THEN v0.c0 END ELSE ((rt1.c0)||(rt1.c1)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((CASE t0.c59  WHEN v0.c0 THEN t0.c39 END) NOT BETWEEN (t0.c59) AND (((v0.c0)+(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c59  WHEN v0.c0 THEN t0.c39 END) NOT BETWEEN (t0.c59) AND (((v0.c0)+(v0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((CASE t0.c59  WHEN v0.c0 THEN t0.c39 END) NOT BETWEEN (t0.c59) AND (((v0.c0)+(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c59  WHEN v0.c0 THEN t0.c39 END) NOT BETWEEN (t0.c59) AND (((v0.c0)+(v0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((CASE t0.c59  WHEN v0.c0 THEN t0.c39 END) NOT BETWEEN (t0.c59) AND (((v0.c0)+(v0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN (((rt1.c2 IN ()))) AND ((((rt1.c1)-(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN (((rt1.c2 IN ()))) AND ((((rt1.c1)-(rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN (((rt1.c2 IN ()))) AND ((((rt1.c1)-(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN (((rt1.c2 IN ()))) AND ((((rt1.c1)-(rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN (((rt1.c2 IN ()))) AND ((((rt1.c1)-(rt1.c1))))));
SELECT ALL * FROM rt1, t0 WHERE (UNLIKELY(((((((((t0.c39)AND(rt1.c3)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((((((t0.c39)AND(rt1.c3)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (UNLIKELY(((((((((t0.c39)AND(rt1.c3)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((((((t0.c39)AND(rt1.c3)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (UNLIKELY(((((((((t0.c39)AND(rt1.c3)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0))));
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN v0 ON ((~ (rt1.c1)) IN ()) WHERE (((rt1.c1)/(json_array(rt1.c0, t0.c59)))) ORDER BY ((CAST('-1298847136' AS INTEGER)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)/(json_array(rt1.c0, t0.c59)))) IS TRUE)  as count FROM t0, rt1 INNER JOIN v0 ON ((~ (rt1.c1)) IN ()) ORDER BY ((CAST('-1298847136' AS INTEGER)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN v0 ON ((~ (rt1.c1)) IN ()) WHERE (((rt1.c1)/(json_array(rt1.c0, t0.c59)))) ORDER BY ((CAST('-1298847136' AS INTEGER)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)/(json_array(rt1.c0, t0.c59)))) IS TRUE)  as count FROM t0, rt1 INNER JOIN v0 ON ((~ (rt1.c1)) IN ()) ORDER BY ((CAST('-1298847136' AS INTEGER)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN v0 ON ((~ (rt1.c1)) IN ()) WHERE (((rt1.c1)/(json_array(rt1.c0, t0.c59)))) ORDER BY ((CAST('-1298847136' AS INTEGER)) IS TRUE);
SELECT ALL COUNT(*) FROM t0 WHERE (('689940089' IN ())) ORDER BY (((t0.c39)) BETWEEN ((t0.c59)) AND (((- (t0.c39))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('689940089' IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c39)) BETWEEN ((t0.c59)) AND (((- (t0.c39))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (('689940089' IN ())) ORDER BY (((t0.c39)) BETWEEN ((t0.c59)) AND (((- (t0.c39))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('689940089' IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c39)) BETWEEN ((t0.c59)) AND (((- (t0.c39))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (('689940089' IN ())) ORDER BY (((t0.c39)) BETWEEN ((t0.c59)) AND (((- (t0.c39))))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((((v0.c0 COLLATE NOCASE)OR(CASE 0.13505109941032423  WHEN t0.c39 THEN t0.c39 END)))AND(((v0.c0) NOTNULL))) WHERE (((v0.c0 COLLATE RTRIM) ISNULL)) ORDER BY ((((t0.c39) NOTNULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((v0.c0 COLLATE NOCASE)OR(CASE 0.13505109941032423  WHEN t0.c39 THEN t0.c39 END)))AND(((v0.c0) NOTNULL))) ORDER BY ((((t0.c39) NOTNULL)) IS TRUE) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((((v0.c0 COLLATE NOCASE)OR(CASE 0.13505109941032423  WHEN t0.c39 THEN t0.c39 END)))AND(((v0.c0) NOTNULL))) WHERE (((v0.c0 COLLATE RTRIM) ISNULL)) ORDER BY ((((t0.c39) NOTNULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((v0.c0 COLLATE NOCASE)OR(CASE 0.13505109941032423  WHEN t0.c39 THEN t0.c39 END)))AND(((v0.c0) NOTNULL))) ORDER BY ((((t0.c39) NOTNULL)) IS TRUE) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((((v0.c0 COLLATE NOCASE)OR(CASE 0.13505109941032423  WHEN t0.c39 THEN t0.c39 END)))AND(((v0.c0) NOTNULL))) WHERE (((v0.c0 COLLATE RTRIM) ISNULL)) ORDER BY ((((t0.c39) NOTNULL)) IS TRUE) DESC;
SELECT ALL * FROM v0, t0 NATURAL JOIN rt1 WHERE ((((v0.c0)) BETWEEN (((t0.c39 IN ()))) AND ((CAST(t0.c59 AS REAL))))) ORDER BY (((('')OR(rt1.c2 COLLATE NOCASE)))OR(((rt1.c1) ISNULL))), ((('-782032537'))!=((CAST(rt1.c1 AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN (((t0.c39 IN ()))) AND ((CAST(t0.c59 AS REAL))))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN rt1 ORDER BY (((('')OR(rt1.c2 COLLATE NOCASE)))OR(((rt1.c1) ISNULL))), ((('-782032537'))!=((CAST(rt1.c1 AS INTEGER))))  NULLS LAST);
SELECT ALL * FROM v0, t0 NATURAL JOIN rt1 WHERE ((((v0.c0)) BETWEEN (((t0.c39 IN ()))) AND ((CAST(t0.c59 AS REAL))))) ORDER BY (((('')OR(rt1.c2 COLLATE NOCASE)))OR(((rt1.c1) ISNULL))), ((('-782032537'))!=((CAST(rt1.c1 AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN (((t0.c39 IN ()))) AND ((CAST(t0.c59 AS REAL))))) IS TRUE)  as count FROM v0, t0 NATURAL JOIN rt1 ORDER BY (((('')OR(rt1.c2 COLLATE NOCASE)))OR(((rt1.c1) ISNULL))), ((('-782032537'))!=((CAST(rt1.c1 AS INTEGER))))  NULLS LAST);
SELECT ALL * FROM v0, t0 NATURAL JOIN rt1 WHERE ((((v0.c0)) BETWEEN (((t0.c39 IN ()))) AND ((CAST(t0.c59 AS REAL))))) ORDER BY (((('')OR(rt1.c2 COLLATE NOCASE)))OR(((rt1.c1) ISNULL))), ((('-782032537'))!=((CAST(rt1.c1 AS INTEGER))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((LOWER(rt1.c3)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt1.c3)) NOT NULL)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((LOWER(rt1.c3)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt1.c3)) NOT NULL)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((LOWER(rt1.c3)) NOT NULL));
SELECT ALL * FROM t0, rt1 WHERE (((MIN(rt1.c3, rt1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((MIN(rt1.c3, rt1.c0)) IS FALSE)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((MIN(rt1.c3, rt1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((MIN(rt1.c3, rt1.c0)) IS FALSE)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((MIN(rt1.c3, rt1.c0)) IS FALSE));
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (((t0.c39)) NOT BETWEEN ((t0.c59)) AND ((((rt1.c2)&(x'6cf9'))))) RIGHT OUTER JOIN v0 ON ((rt1.c0) ISNULL) WHERE (UNLIKELY(DISTINCT (~ (rt1.c3))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (~ (rt1.c3)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (((t0.c39)) NOT BETWEEN ((t0.c59)) AND ((((rt1.c2)&(x'6cf9'))))) RIGHT OUTER JOIN v0 ON ((rt1.c0) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (((t0.c39)) NOT BETWEEN ((t0.c59)) AND ((((rt1.c2)&(x'6cf9'))))) RIGHT OUTER JOIN v0 ON ((rt1.c0) ISNULL) WHERE (UNLIKELY(DISTINCT (~ (rt1.c3))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (~ (rt1.c3)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (((t0.c39)) NOT BETWEEN ((t0.c59)) AND ((((rt1.c2)&(x'6cf9'))))) RIGHT OUTER JOIN v0 ON ((rt1.c0) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (((t0.c39)) NOT BETWEEN ((t0.c59)) AND ((((rt1.c2)&(x'6cf9'))))) RIGHT OUTER JOIN v0 ON ((rt1.c0) ISNULL) WHERE (UNLIKELY(DISTINCT (~ (rt1.c3))));
SELECT * FROM v0 WHERE (x'') ORDER BY (((((v0.c0)-(v0.c0)), 1.47210199E9, v0.c0 COLLATE BINARY))<>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)-(v0.c0)), 1.47210199E9, v0.c0 COLLATE BINARY))<>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (x'') ORDER BY (((((v0.c0)-(v0.c0)), 1.47210199E9, v0.c0 COLLATE BINARY))<>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)-(v0.c0)), 1.47210199E9, v0.c0 COLLATE BINARY))<>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (x'') ORDER BY (((((v0.c0)-(v0.c0)), 1.47210199E9, v0.c0 COLLATE BINARY))<>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c39 THEN t0.c59 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c39 THEN t0.c59 END AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c39 THEN t0.c59 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c39 THEN t0.c59 END AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c39 THEN t0.c59 END AS REAL));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c59)) BETWEEN ((((t0.c59)+(v0.c0)))) AND ((((v0.c0)<<(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c59)) BETWEEN ((((t0.c59)+(v0.c0)))) AND ((((v0.c0)<<(v0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c59)) BETWEEN ((((t0.c59)+(v0.c0)))) AND ((((v0.c0)<<(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c59)) BETWEEN ((((t0.c59)+(v0.c0)))) AND ((((v0.c0)<<(v0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c59)) BETWEEN ((((t0.c59)+(v0.c0)))) AND ((((v0.c0)<<(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) IS FALSE));
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON json_insert(t0.c39 COLLATE BINARY, ((t0.c59)=(t0.c39)), ((t0.c59)+(t0.c39))) WHERE (((((v0.c0) NOTNULL)) BETWEEN (CAST(t0.c39 AS NUMERIC)) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) BETWEEN (CAST(t0.c39 AS NUMERIC)) AND (NULL))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON json_insert(t0.c39 COLLATE BINARY, ((t0.c59)=(t0.c39)), ((t0.c59)+(t0.c39))));
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON json_insert(t0.c39 COLLATE BINARY, ((t0.c59)=(t0.c39)), ((t0.c59)+(t0.c39))) WHERE (((((v0.c0) NOTNULL)) BETWEEN (CAST(t0.c39 AS NUMERIC)) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) BETWEEN (CAST(t0.c39 AS NUMERIC)) AND (NULL))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON json_insert(t0.c39 COLLATE BINARY, ((t0.c59)=(t0.c39)), ((t0.c59)+(t0.c39))));
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON json_insert(t0.c39 COLLATE BINARY, ((t0.c59)=(t0.c39)), ((t0.c59)+(t0.c39))) WHERE (((((v0.c0) NOTNULL)) BETWEEN (CAST(t0.c39 AS NUMERIC)) AND (NULL)));
SELECT COUNT(*) FROM v0, rt1 WHERE (((+ (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((+ (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((+ (v0.c0)) IN ()));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (rt1.c1 COLLATE RTRIM IN ()) INNER JOIN rt1 ON ((CASE rt1.c3  WHEN t0.c59 THEN rt1.c1 ELSE rt1.c1 END) NOTNULL) WHERE (MAX(((v0.c0)IS NOT(rt1.c2)), (rt1.c0 IN ()))) ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL ((MAX(((v0.c0)IS NOT(rt1.c2)), (rt1.c0 IN ()))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (rt1.c1 COLLATE RTRIM IN ()) INNER JOIN rt1 ON ((CASE rt1.c3  WHEN t0.c59 THEN rt1.c1 ELSE rt1.c1 END) NOTNULL) ORDER BY LAST_INSERT_ROWID());
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (rt1.c1 COLLATE RTRIM IN ()) INNER JOIN rt1 ON ((CASE rt1.c3  WHEN t0.c59 THEN rt1.c1 ELSE rt1.c1 END) NOTNULL) WHERE (MAX(((v0.c0)IS NOT(rt1.c2)), (rt1.c0 IN ()))) ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL ((MAX(((v0.c0)IS NOT(rt1.c2)), (rt1.c0 IN ()))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (rt1.c1 COLLATE RTRIM IN ()) INNER JOIN rt1 ON ((CASE rt1.c3  WHEN t0.c59 THEN rt1.c1 ELSE rt1.c1 END) NOTNULL) ORDER BY LAST_INSERT_ROWID());
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (rt1.c1 COLLATE RTRIM IN ()) INNER JOIN rt1 ON ((CASE rt1.c3  WHEN t0.c59 THEN rt1.c1 ELSE rt1.c1 END) NOTNULL) WHERE (MAX(((v0.c0)IS NOT(rt1.c2)), (rt1.c0 IN ()))) ORDER BY LAST_INSERT_ROWID();
SELECT ALL * FROM rt1 WHERE (CAST(LIKELY(rt1.c3) AS INTEGER)) ORDER BY ((CAST(rt1.c3 AS REAL)) IS TRUE) DESC, (((rt1.c1 IN (rt1.c0)))<<(CAST(rt1.c2 AS NUMERIC))), ((rt1.c2)IS NOT((+ (rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(rt1.c3) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c3 AS REAL)) IS TRUE) DESC, (((rt1.c1 IN (rt1.c0)))<<(CAST(rt1.c2 AS NUMERIC))), ((rt1.c2)IS NOT((+ (rt1.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST(LIKELY(rt1.c3) AS INTEGER)) ORDER BY ((CAST(rt1.c3 AS REAL)) IS TRUE) DESC, (((rt1.c1 IN (rt1.c0)))<<(CAST(rt1.c2 AS NUMERIC))), ((rt1.c2)IS NOT((+ (rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(rt1.c3) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c3 AS REAL)) IS TRUE) DESC, (((rt1.c1 IN (rt1.c0)))<<(CAST(rt1.c2 AS NUMERIC))), ((rt1.c2)IS NOT((+ (rt1.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST(LIKELY(rt1.c3) AS INTEGER)) ORDER BY ((CAST(rt1.c3 AS REAL)) IS TRUE) DESC, (((rt1.c1 IN (rt1.c0)))<<(CAST(rt1.c2 AS NUMERIC))), ((rt1.c2)IS NOT((+ (rt1.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (LIKELIHOOD(DISTINCT ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), 0.9730531667426647)) ORDER BY ((CAST(rt1.c1 AS TEXT)) IS TRUE) ASC, ((((rt1.c3 IN ())))!=(((t0.c39 IN (rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), 0.9730531667426647)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((CAST(rt1.c1 AS TEXT)) IS TRUE) ASC, ((((rt1.c3 IN ())))!=(((t0.c39 IN (rt1.c3)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (LIKELIHOOD(DISTINCT ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), 0.9730531667426647)) ORDER BY ((CAST(rt1.c1 AS TEXT)) IS TRUE) ASC, ((((rt1.c3 IN ())))!=(((t0.c39 IN (rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), 0.9730531667426647)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((CAST(rt1.c1 AS TEXT)) IS TRUE) ASC, ((((rt1.c3 IN ())))!=(((t0.c39 IN (rt1.c3)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (LIKELIHOOD(DISTINCT ((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), 0.9730531667426647)) ORDER BY ((CAST(rt1.c1 AS TEXT)) IS TRUE) ASC, ((((rt1.c3 IN ())))!=(((t0.c39 IN (rt1.c3)))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE (((t0.c39))>=((t0.c39)))  WHEN (((t0.c59)) BETWEEN ((t0.c39)) AND ((-2025618503))) THEN (NOT (t0.c59)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c39))>=((t0.c39)))  WHEN (((t0.c59)) BETWEEN ((t0.c39)) AND ((-2025618503))) THEN (NOT (t0.c59)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE (((t0.c39))>=((t0.c39)))  WHEN (((t0.c59)) BETWEEN ((t0.c39)) AND ((-2025618503))) THEN (NOT (t0.c59)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c39))>=((t0.c39)))  WHEN (((t0.c59)) BETWEEN ((t0.c39)) AND ((-2025618503))) THEN (NOT (t0.c59)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE (((t0.c39))>=((t0.c39)))  WHEN (((t0.c59)) BETWEEN ((t0.c39)) AND ((-2025618503))) THEN (NOT (t0.c59)) END);
SELECT COUNT(*) FROM rt1, v0 WHERE (CASE ((x'5e2e19a8') BETWEEN (rt1.c2) AND (rt1.c3))  WHEN (~ (rt1.c2)) THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'5e2e19a8') BETWEEN (rt1.c2) AND (rt1.c3))  WHEN (~ (rt1.c2)) THEN v0.c0 END) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (CASE ((x'5e2e19a8') BETWEEN (rt1.c2) AND (rt1.c3))  WHEN (~ (rt1.c2)) THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'5e2e19a8') BETWEEN (rt1.c2) AND (rt1.c3))  WHEN (~ (rt1.c2)) THEN v0.c0 END) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (CASE ((x'5e2e19a8') BETWEEN (rt1.c2) AND (rt1.c3))  WHEN (~ (rt1.c2)) THEN v0.c0 END);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((NULL IN ())) ORDER BY ((CASE rt1.c0  WHEN v0.c0 THEN rt1.c2 ELSE v0.c0 END)GLOB(CAST(rt1.c2 AS NUMERIC))), NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY ((CASE rt1.c0  WHEN v0.c0 THEN rt1.c2 ELSE v0.c0 END)GLOB(CAST(rt1.c2 AS NUMERIC))), NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((NULL IN ())) ORDER BY ((CASE rt1.c0  WHEN v0.c0 THEN rt1.c2 ELSE v0.c0 END)GLOB(CAST(rt1.c2 AS NUMERIC))), NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY ((CASE rt1.c0  WHEN v0.c0 THEN rt1.c2 ELSE v0.c0 END)GLOB(CAST(rt1.c2 AS NUMERIC))), NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((NULL IN ())) ORDER BY ((CASE rt1.c0  WHEN v0.c0 THEN rt1.c2 ELSE v0.c0 END)GLOB(CAST(rt1.c2 AS NUMERIC))), NULL DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c59);
SELECT ALL COUNT(*) FROM v0 WHERE (5.01660713E8) ORDER BY ((v0.c0)<=(((NULL) NOTNULL))), CAST(((v0.c0)<<('1439768762')) AS REAL) ASC  NULLS LAST, LENGTH(CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((5.01660713E8) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)<=(((NULL) NOTNULL))), CAST(((v0.c0)<<('1439768762')) AS REAL) ASC  NULLS LAST, LENGTH(CAST(v0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM v0 WHERE (5.01660713E8) ORDER BY ((v0.c0)<=(((NULL) NOTNULL))), CAST(((v0.c0)<<('1439768762')) AS REAL) ASC  NULLS LAST, LENGTH(CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((5.01660713E8) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)<=(((NULL) NOTNULL))), CAST(((v0.c0)<<('1439768762')) AS REAL) ASC  NULLS LAST, LENGTH(CAST(v0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM v0 WHERE (5.01660713E8) ORDER BY ((v0.c0)<=(((NULL) NOTNULL))), CAST(((v0.c0)<<('1439768762')) AS REAL) ASC  NULLS LAST, LENGTH(CAST(v0.c0 AS INTEGER));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON (((((t0.c59)+(rt1.c1)), ((rt1.c3)/(rt1.c3)), CASE WHEN rt1.c0 THEN rt1.c1 WHEN t0.c39 THEN t0.c59 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END, ((rt1.c3)IS NOT(rt1.c1)), ((rt1.c3) NOT BETWEEN (t0.c39) AND (t0.c39))))<=(('-1464081953', CASE WHEN t0.c39 THEN rt1.c0 ELSE rt1.c1 END, t0.c59 COLLATE RTRIM, ((t0.c59) BETWEEN (0.5989876670119223) AND (rt1.c3)), ((((t0.c39)OR(rt1.c2)))AND(x'3f4a'))))) WHERE (((((0Xffffffffe9516136)OR(rt1.c2 COLLATE BINARY)))OR((((t0.c39))<((t0.c39))))));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffe9516136)OR(rt1.c2 COLLATE BINARY)))OR((((t0.c39))<((t0.c39)))))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((((t0.c59)+(rt1.c1)), ((rt1.c3)/(rt1.c3)), CASE WHEN rt1.c0 THEN rt1.c1 WHEN t0.c39 THEN t0.c59 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END, ((rt1.c3)IS NOT(rt1.c1)), ((rt1.c3) NOT BETWEEN (t0.c39) AND (t0.c39))))<=(('-1464081953', CASE WHEN t0.c39 THEN rt1.c0 ELSE rt1.c1 END, t0.c59 COLLATE RTRIM, ((t0.c59) BETWEEN (0.5989876670119223) AND (rt1.c3)), ((((t0.c39)OR(rt1.c2)))AND(x'3f4a'))))));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON (((((t0.c59)+(rt1.c1)), ((rt1.c3)/(rt1.c3)), CASE WHEN rt1.c0 THEN rt1.c1 WHEN t0.c39 THEN t0.c59 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END, ((rt1.c3)IS NOT(rt1.c1)), ((rt1.c3) NOT BETWEEN (t0.c39) AND (t0.c39))))<=(('-1464081953', CASE WHEN t0.c39 THEN rt1.c0 ELSE rt1.c1 END, t0.c59 COLLATE RTRIM, ((t0.c59) BETWEEN (0.5989876670119223) AND (rt1.c3)), ((((t0.c39)OR(rt1.c2)))AND(x'3f4a'))))) WHERE (((((0Xffffffffe9516136)OR(rt1.c2 COLLATE BINARY)))OR((((t0.c39))<((t0.c39))))));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffe9516136)OR(rt1.c2 COLLATE BINARY)))OR((((t0.c39))<((t0.c39)))))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((((t0.c59)+(rt1.c1)), ((rt1.c3)/(rt1.c3)), CASE WHEN rt1.c0 THEN rt1.c1 WHEN t0.c39 THEN t0.c59 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END, ((rt1.c3)IS NOT(rt1.c1)), ((rt1.c3) NOT BETWEEN (t0.c39) AND (t0.c39))))<=(('-1464081953', CASE WHEN t0.c39 THEN rt1.c0 ELSE rt1.c1 END, t0.c59 COLLATE RTRIM, ((t0.c59) BETWEEN (0.5989876670119223) AND (rt1.c3)), ((((t0.c39)OR(rt1.c2)))AND(x'3f4a'))))));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON (((((t0.c59)+(rt1.c1)), ((rt1.c3)/(rt1.c3)), CASE WHEN rt1.c0 THEN rt1.c1 WHEN t0.c39 THEN t0.c59 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END, ((rt1.c3)IS NOT(rt1.c1)), ((rt1.c3) NOT BETWEEN (t0.c39) AND (t0.c39))))<=(('-1464081953', CASE WHEN t0.c39 THEN rt1.c0 ELSE rt1.c1 END, t0.c59 COLLATE RTRIM, ((t0.c59) BETWEEN (0.5989876670119223) AND (rt1.c3)), ((((t0.c39)OR(rt1.c2)))AND(x'3f4a'))))) WHERE (((((0Xffffffffe9516136)OR(rt1.c2 COLLATE BINARY)))OR((((t0.c39))<((t0.c39))))));
SELECT ALL * FROM t0, rt1, v0 WHERE (((((rt1.c0)<>(rt1.c1)))>=(((((rt1.c1)AND(rt1.c1)))OR(rt1.c2))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)!=(rt1.c1)))>=(((((rt1.c1)AND(rt1.c1)))OR(rt1.c2))))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY v0.c0 ASC);
SELECT ALL * FROM t0, rt1, v0 WHERE (((((rt1.c0)<>(rt1.c1)))>=(((((rt1.c1)AND(rt1.c1)))OR(rt1.c2))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)!=(rt1.c1)))>=(((((rt1.c1)AND(rt1.c1)))OR(rt1.c2))))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY v0.c0 ASC);
SELECT ALL * FROM t0, rt1, v0 WHERE (((((rt1.c0)<>(rt1.c1)))>=(((((rt1.c1)AND(rt1.c1)))OR(rt1.c2))))) ORDER BY v0.c0 ASC;
SELECT * FROM rt1, t0, v0 WHERE (COALESCE(DISTINCT 0x6522751f, CASE rt1.c3  WHEN t0.c59 THEN v0.c0 END)) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT 0x6522751f, CASE rt1.c3  WHEN t0.c59 THEN v0.c0 END)) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY rt1.c2 ASC);
SELECT * FROM rt1, t0, v0 WHERE (COALESCE(DISTINCT 0x6522751f, CASE rt1.c3  WHEN t0.c59 THEN v0.c0 END)) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT 0x6522751f, CASE rt1.c3  WHEN t0.c59 THEN v0.c0 END)) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY rt1.c2 ASC);
SELECT * FROM rt1, t0, v0 WHERE (COALESCE(DISTINCT 0x6522751f, CASE rt1.c3  WHEN t0.c59 THEN v0.c0 END)) ORDER BY rt1.c2 ASC;
SELECT ALL COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN t0 ON rt1.c2 WHERE (((((t0.c59) ISNULL)) NOT NULL)) ORDER BY (~ (((rt1.c2) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c59) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN t0 ON rt1.c2 ORDER BY (~ (((rt1.c2) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN t0 ON rt1.c2 WHERE (((((t0.c59) ISNULL)) NOT NULL)) ORDER BY (~ (((rt1.c2) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c59) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN t0 ON rt1.c2 ORDER BY (~ (((rt1.c2) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN t0 ON rt1.c2 WHERE (((((t0.c59) ISNULL)) NOT NULL)) ORDER BY (~ (((rt1.c2) IS FALSE))) DESC;
SELECT ALL * FROM rt1, t0, v0 WHERE ((~ ((- (t0.c59))))) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END)+(((((((((((((v0.c0)OR(t0.c39)))OR(t0.c39)))OR(v0.c0)))AND(rt1.c1)))OR(rt1.c3)))OR(NULL)))) DESC  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt1.c0 ELSE t0.c59 END)<<((~ (t0.c39)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (t0.c59))))) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END)+(((((((((((((v0.c0)OR(t0.c39)))OR(t0.c39)))OR(v0.c0)))AND(rt1.c1)))OR(rt1.c3)))OR(NULL)))) DESC  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt1.c0 ELSE t0.c59 END)<<((~ (t0.c39)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, v0 WHERE ((~ ((- (t0.c59))))) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END)+(((((((((((((v0.c0)OR(t0.c39)))OR(t0.c39)))OR(v0.c0)))AND(rt1.c1)))OR(rt1.c3)))OR(NULL)))) DESC  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt1.c0 ELSE t0.c59 END)<<((~ (t0.c39)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (t0.c59))))) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END)+(((((((((((((v0.c0)OR(t0.c39)))OR(t0.c39)))OR(v0.c0)))AND(rt1.c1)))OR(rt1.c3)))OR(NULL)))) DESC  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt1.c0 ELSE t0.c59 END)<<((~ (t0.c39)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, v0 WHERE ((~ ((- (t0.c59))))) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 END)+(((((((((((((v0.c0)OR(t0.c39)))OR(t0.c39)))OR(v0.c0)))AND(rt1.c1)))OR(rt1.c3)))OR(NULL)))) DESC  NULLS FIRST, ((CASE WHEN v0.c0 THEN rt1.c0 ELSE t0.c59 END)<<((~ (t0.c39)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)-(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0)-(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)-(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0)-(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)-(v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c39) NOT BETWEEN (t0.c59) AND (t0.c59)))+(CAST(t0.c39 AS NUMERIC)))) ORDER BY ((t0.c59 IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c39) NOT BETWEEN (t0.c59) AND (t0.c59)))+(CAST(t0.c39 AS NUMERIC)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c59 IN ()) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c39) NOT BETWEEN (t0.c59) AND (t0.c59)))+(CAST(t0.c39 AS NUMERIC)))) ORDER BY ((t0.c59 IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c39) NOT BETWEEN (t0.c59) AND (t0.c59)))+(CAST(t0.c39 AS NUMERIC)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c59 IN ()) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c39) NOT BETWEEN (t0.c59) AND (t0.c59)))+(CAST(t0.c39 AS NUMERIC)))) ORDER BY ((t0.c59 IN ()) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0, rt1 WHERE ((((json_insert(rt1.c2, rt1.c1, rt1.c1, 0.4760906437053417, t0.c39)))=((CASE WHEN rt1.c0 THEN rt1.c1 END))));
SELECT SUM(count) FROM (SELECT (((((json_insert(rt1.c2, rt1.c1, rt1.c1, 0.4760906437053417, t0.c39)))=((CASE WHEN rt1.c0 THEN rt1.c1 END)))) IS TRUE)  as count FROM t0, v0, rt1);
SELECT ALL * FROM t0, v0, rt1 WHERE ((((json_insert(rt1.c2, rt1.c1, rt1.c1, 0.4760906437053417, t0.c39)))=((CASE WHEN rt1.c0 THEN rt1.c1 END))));
SELECT SUM(count) FROM (SELECT (((((json_insert(rt1.c2, rt1.c1, rt1.c1, 0.4760906437053417, t0.c39)))=((CASE WHEN rt1.c0 THEN rt1.c1 END)))) IS TRUE)  as count FROM t0, v0, rt1);
SELECT ALL * FROM t0, v0, rt1 WHERE ((((json_insert(rt1.c2, rt1.c1, rt1.c1, 0.4760906437053417, t0.c39)))=((CASE WHEN rt1.c0 THEN rt1.c1 END))));
SELECT * FROM t0 WHERE (t0.c39);
SELECT SUM(count) FROM (SELECT ((t0.c39) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c39);
SELECT SUM(count) FROM (SELECT ((t0.c39) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c39);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((NOT (rt1.c2)))||(CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2)))||(CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((NOT (rt1.c2)))||(CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2)))||(CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((NOT (rt1.c2)))||(CAST(rt1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM rt1, t0, v0 WHERE ((- (((v0.c0)>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT COUNT(*) FROM rt1, t0, v0 WHERE ((- (((v0.c0)>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT COUNT(*) FROM rt1, t0, v0 WHERE ((- (((v0.c0)>=(v0.c0)))));
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (((((t0.c39) NOT NULL))IS(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((t0.c39) NOT NULL))IS(rt1.c2))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (((((t0.c39) NOT NULL))IS(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((t0.c39) NOT NULL))IS(rt1.c2))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (((((t0.c39) NOT NULL))IS(rt1.c2)));
SELECT * FROM rt1 WHERE ((((((NOT (rt1.c2)))AND(rt1.c1 COLLATE BINARY)))OR((~ (x''))))) ORDER BY x'e1ab' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt1.c2)))AND(rt1.c1 COLLATE BINARY)))OR((~ (x''))))) IS TRUE)  as count FROM rt1 ORDER BY x'e1ab' DESC);
SELECT * FROM rt1 WHERE ((((((NOT (rt1.c2)))AND(rt1.c1 COLLATE BINARY)))OR((~ (x''))))) ORDER BY x'e1ab' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt1.c2)))AND(rt1.c1 COLLATE BINARY)))OR((~ (x''))))) IS TRUE)  as count FROM rt1 ORDER BY x'e1ab' DESC);
SELECT * FROM rt1 WHERE ((((((NOT (rt1.c2)))AND(rt1.c1 COLLATE BINARY)))OR((~ (x''))))) ORDER BY x'e1ab' DESC;
SELECT ALL * FROM t0, rt1 WHERE ((rt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((rt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((rt1.c0 IN ()));
SELECT ALL * FROM t0, v0, rt1 WHERE (((t0.c59) NOT BETWEEN (((rt1.c1) ISNULL)) AND (json(t0.c39)))) ORDER BY (((rt1.c2)&(rt1.c3)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c59) NOT BETWEEN (((rt1.c1) ISNULL)) AND (json(t0.c39)))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY (((rt1.c2)&(rt1.c3)) IN ()));
SELECT ALL * FROM t0, v0, rt1 WHERE (((t0.c59) NOT BETWEEN (((rt1.c1) ISNULL)) AND (json(t0.c39)))) ORDER BY (((rt1.c2)&(rt1.c3)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c59) NOT BETWEEN (((rt1.c1) ISNULL)) AND (json(t0.c39)))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY (((rt1.c2)&(rt1.c3)) IN ()));
SELECT ALL * FROM t0, v0, rt1 WHERE (((t0.c59) NOT BETWEEN (((rt1.c1) ISNULL)) AND (json(t0.c39)))) ORDER BY (((rt1.c2)&(rt1.c3)) IN ());
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE ((((rt1.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE ((((rt1.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE ((((rt1.c1) ISNULL) IN ()));
SELECT COUNT(*) FROM t0, rt1, v0 WHERE ((('')*(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((('')*(rt1.c0))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE ((('')*(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((('')*(rt1.c0))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE ((('')*(rt1.c0)));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON (((((('')AND(t0.c39)))OR(rt1.c2)))==(x'')) FULL OUTER JOIN rt1 ON ((CAST('' AS REAL))<<(SQLITE_COMPILEOPTION_USED(rt1.c2))) WHERE (CASE WHEN rt1.c0 THEN t0.c39 ELSE rt1.c3 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 THEN t0.c39 ELSE rt1.c3 END COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (((((('')AND(t0.c39)))OR(rt1.c2)))=(x'')) FULL OUTER JOIN rt1 ON ((CAST('' AS REAL))<<(SQLITE_COMPILEOPTION_USED(rt1.c2))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON (((((('')AND(t0.c39)))OR(rt1.c2)))==(x'')) FULL OUTER JOIN rt1 ON ((CAST('' AS REAL))<<(SQLITE_COMPILEOPTION_USED(rt1.c2))) WHERE (CASE WHEN rt1.c0 THEN t0.c39 ELSE rt1.c3 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 THEN t0.c39 ELSE rt1.c3 END COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (((((('')AND(t0.c39)))OR(rt1.c2)))=(x'')) FULL OUTER JOIN rt1 ON ((CAST('' AS REAL))<<(SQLITE_COMPILEOPTION_USED(rt1.c2))));
SELECT * FROM v0 WHERE (LIKELIHOOD(DISTINCT CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'78df' END, 0.8203898883296249));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'78df' END, 0.8203898883296249)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKELIHOOD(DISTINCT CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'78df' END, 0.8203898883296249));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'78df' END, 0.8203898883296249)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKELIHOOD(DISTINCT CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE x'78df' END, 0.8203898883296249));
SELECT ALL * FROM rt1 WHERE ((rt1.c3 IN (((rt1.c1)>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c3 IN (((rt1.c1)>(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((rt1.c3 IN (((rt1.c1)>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c3 IN (((rt1.c1)>(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((rt1.c3 IN (((rt1.c1)>(rt1.c1)))));
SELECT ALL * FROM t0 WHERE (t0.c59) ORDER BY (NOT (((t0.c39) NOT BETWEEN (0.6658716428535713) AND (t0.c59))));
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c39) NOT BETWEEN (0.6658716428535713) AND (t0.c59)))));
SELECT ALL * FROM t0 WHERE (t0.c59) ORDER BY (NOT (((t0.c39) NOT BETWEEN (0.6658716428535713) AND (t0.c59))));
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c39) NOT BETWEEN (0.6658716428535713) AND (t0.c59)))));
SELECT ALL * FROM t0 WHERE (t0.c59) ORDER BY (NOT (((t0.c39) NOT BETWEEN (0.6658716428535713) AND (t0.c59))));
SELECT COUNT(*) FROM rt1 NOT INDEXED, v0, t0 WHERE ((CAST(x'' AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS TEXT) IN ())) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1 NOT INDEXED, v0, t0 WHERE ((CAST(x'' AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS TEXT) IN ())) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1 NOT INDEXED, v0, t0 WHERE ((CAST(x'' AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((v0.c0)/(v0.c0)) IN ())) ORDER BY (((- (t0.c59)))<((rt1.c1 IN (t0.c39, t0.c39))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)/(v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY (((- (t0.c59)))<((rt1.c1 IN (t0.c39, t0.c39))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((v0.c0)/(v0.c0)) IN ())) ORDER BY (((- (t0.c59)))<((rt1.c1 IN (t0.c39, t0.c39))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)/(v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY (((- (t0.c59)))<((rt1.c1 IN (t0.c39, t0.c39))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((v0.c0)/(v0.c0)) IN ())) ORDER BY (((- (t0.c59)))<((rt1.c1 IN (t0.c39, t0.c39))))  NULLS LAST;
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON json_insert(rt1.c0, rt1.c1, rt1.c0) COLLATE RTRIM WHERE (CASE ((((rt1.c1)OR(rt1.c0)))AND(t0.c39))  WHEN ((((t0.c39)OR(t0.c39)))OR(t0.c39)) THEN (((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c3, t0.c39, 'Ha0')) AND ((rt1.c1, rt1.c2, rt1.c1))) WHEN (- (rt1.c2)) THEN TYPEOF(rt1.c3) WHEN ((t0.c39)<(rt1.c1)) THEN ((rt1.c2) BETWEEN (t0.c39) AND (rt1.c1)) END) ORDER BY rt1.c3 DESC  NULLS LAST, (~ (((925511353)>(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt1.c1)OR(rt1.c0)))AND(t0.c39))  WHEN ((((t0.c39)OR(t0.c39)))OR(t0.c39)) THEN (((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c3, t0.c39, 'Ha0')) AND ((rt1.c1, rt1.c2, rt1.c1))) WHEN (- (rt1.c2)) THEN TYPEOF(rt1.c3) WHEN ((t0.c39)<(rt1.c1)) THEN ((rt1.c2) BETWEEN (t0.c39) AND (rt1.c1)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON json_insert(rt1.c0, rt1.c1, rt1.c0) COLLATE RTRIM ORDER BY rt1.c3 DESC  NULLS LAST, (~ (((925511353)>(rt1.c0)))) ASC);
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON json_insert(rt1.c0, rt1.c1, rt1.c0) COLLATE RTRIM WHERE (CASE ((((rt1.c1)OR(rt1.c0)))AND(t0.c39))  WHEN ((((t0.c39)OR(t0.c39)))OR(t0.c39)) THEN (((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c3, t0.c39, 'Ha0')) AND ((rt1.c1, rt1.c2, rt1.c1))) WHEN (- (rt1.c2)) THEN TYPEOF(rt1.c3) WHEN ((t0.c39)<(rt1.c1)) THEN ((rt1.c2) BETWEEN (t0.c39) AND (rt1.c1)) END) ORDER BY rt1.c3 DESC  NULLS LAST, (~ (((925511353)>(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt1.c1)OR(rt1.c0)))AND(t0.c39))  WHEN ((((t0.c39)OR(t0.c39)))OR(t0.c39)) THEN (((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c3, t0.c39, 'Ha0')) AND ((rt1.c1, rt1.c2, rt1.c1))) WHEN (- (rt1.c2)) THEN TYPEOF(rt1.c3) WHEN ((t0.c39)<(rt1.c1)) THEN ((rt1.c2) BETWEEN (t0.c39) AND (rt1.c1)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON json_insert(rt1.c0, rt1.c1, rt1.c0) COLLATE RTRIM ORDER BY rt1.c3 DESC  NULLS LAST, (~ (((925511353)>(rt1.c0)))) ASC);
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON json_insert(rt1.c0, rt1.c1, rt1.c0) COLLATE RTRIM WHERE (CASE ((((rt1.c1)OR(rt1.c0)))AND(t0.c39))  WHEN ((((t0.c39)OR(t0.c39)))OR(t0.c39)) THEN (((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c3, t0.c39, 'Ha0')) AND ((rt1.c1, rt1.c2, rt1.c1))) WHEN (- (rt1.c2)) THEN TYPEOF(rt1.c3) WHEN ((t0.c39)<(rt1.c1)) THEN ((rt1.c2) BETWEEN (t0.c39) AND (rt1.c1)) END) ORDER BY rt1.c3 DESC  NULLS LAST, (~ (((925511353)>(rt1.c0)))) ASC;
SELECT ALL * FROM rt1, v0, t0 WHERE (((x'') IS FALSE)) ORDER BY v0.c0 ASC  NULLS LAST, v0.c0 DESC, t0.c39 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY v0.c0 ASC  NULLS LAST, v0.c0 DESC, t0.c39 ASC);
SELECT ALL * FROM rt1, v0, t0 WHERE (((x'') IS FALSE)) ORDER BY v0.c0 ASC  NULLS LAST, v0.c0 DESC, t0.c39 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY v0.c0 ASC  NULLS LAST, v0.c0 DESC, t0.c39 ASC);
SELECT ALL * FROM rt1, v0, t0 WHERE (((x'') IS FALSE)) ORDER BY v0.c0 ASC  NULLS LAST, v0.c0 DESC, t0.c39 ASC;
SELECT * FROM t0 WHERE (((((t0.c59 IN ())))<=(((0.5728247622737794 IN (t0.c39, t0.c39))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c59 IN ())))<=(((0.5728247622737794 IN (t0.c39, t0.c39)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c59 IN ())))<=(((0.5728247622737794 IN (t0.c39, t0.c39))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c59 IN ())))<=(((0.5728247622737794 IN (t0.c39, t0.c39)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c59 IN ())))<=(((0.5728247622737794 IN (t0.c39, t0.c39))))));
SELECT COUNT(*) FROM t0, v0, rt1 WHERE (CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS NUMERIC)) IS TRUE)  as count FROM t0, v0, rt1);
SELECT COUNT(*) FROM t0, v0, rt1 WHERE (CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS NUMERIC)) IS TRUE)  as count FROM t0, v0, rt1);
SELECT COUNT(*) FROM t0, v0, rt1 WHERE (CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS NUMERIC));
SELECT COUNT(*) FROM rt1 WHERE (((x'df00')IS NOT(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'df00')IS NOT(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((x'df00')IS NOT(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'df00')IS NOT(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((x'df00')IS NOT(rt1.c0)) COLLATE BINARY);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON '214317979' WHERE ((- (t0.c39))) ORDER BY v0.c0, t0.c39;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c39))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON '214317979' ORDER BY v0.c0, t0.c39);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON '214317979' WHERE ((- (t0.c39))) ORDER BY v0.c0, t0.c39;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c39))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON '214317979' ORDER BY v0.c0, t0.c39);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON '214317979' WHERE ((- (t0.c39))) ORDER BY v0.c0, t0.c39;
SELECT * FROM t0 WHERE ((((t0.c39)) BETWEEN ((((t0.c39) NOT BETWEEN (t0.c39) AND (t0.c59)))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c39)) BETWEEN ((((t0.c39) NOT BETWEEN (t0.c39) AND (t0.c59)))) AND ((NULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c39)) BETWEEN ((((t0.c39) NOT BETWEEN (t0.c39) AND (t0.c59)))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c39)) BETWEEN ((((t0.c39) NOT BETWEEN (t0.c39) AND (t0.c59)))) AND ((NULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c39)) BETWEEN ((((t0.c39) NOT BETWEEN (t0.c39) AND (t0.c59)))) AND ((NULL))));
SELECT ALL * FROM t0, v0, rt1 WHERE (((('D\') BETWEEN (rt1.c0) AND (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('D\') BETWEEN (rt1.c0) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM t0, v0 NOT INDEXED, rt1);
SELECT ALL * FROM t0, v0, rt1 WHERE (((('D\') BETWEEN (rt1.c0) AND (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('D\') BETWEEN (rt1.c0) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM t0, v0 NOT INDEXED, rt1);
SELECT ALL * FROM t0, v0, rt1 WHERE (((('D\') BETWEEN (rt1.c0) AND (rt1.c0)) IN ()));
SELECT ALL * FROM t0, v0, rt1 WHERE ((((rt1.c0)) BETWEEN (((v0.c0 IN (rt1.c2)))) AND ((((rt1.c2)<>(rt1.c1)))))) ORDER BY CAST(CASE WHEN '-1145267381' THEN rt1.c3 END AS INTEGER) ASC  NULLS LAST, v0.c0  NULLS FIRST, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN (((v0.c0 IN (rt1.c2)))) AND ((((rt1.c2)<>(rt1.c1)))))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY CAST(CASE WHEN '-1145267381' THEN rt1.c3 END AS INTEGER) ASC  NULLS LAST, v0.c0  NULLS FIRST, v0.c0 DESC);
SELECT ALL * FROM t0, v0, rt1 WHERE ((((rt1.c0)) BETWEEN (((v0.c0 IN (rt1.c2)))) AND ((((rt1.c2)<>(rt1.c1)))))) ORDER BY CAST(CASE WHEN '-1145267381' THEN rt1.c3 END AS INTEGER) ASC  NULLS LAST, v0.c0  NULLS FIRST, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN (((v0.c0 IN (rt1.c2)))) AND ((((rt1.c2)<>(rt1.c1)))))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY CAST(CASE WHEN '-1145267381' THEN rt1.c3 END AS INTEGER) ASC  NULLS LAST, v0.c0  NULLS FIRST, v0.c0 DESC);
SELECT ALL * FROM t0, v0, rt1 WHERE ((((rt1.c0)) BETWEEN (((v0.c0 IN (rt1.c2)))) AND ((((rt1.c2)<>(rt1.c1)))))) ORDER BY CAST(CASE WHEN '-1145267381' THEN rt1.c3 END AS INTEGER) ASC  NULLS LAST, v0.c0  NULLS FIRST, v0.c0 DESC;
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CASE ((t0.c39)/(t0.c59))  WHEN (~ (rt1.c1)) THEN ((rt1.c1) NOT NULL) ELSE rt1.c3 COLLATE RTRIM END) ORDER BY '1916151825'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c39)/(t0.c59))  WHEN (~ (rt1.c1)) THEN ((rt1.c1) NOT NULL) ELSE rt1.c3 COLLATE RTRIM END) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY '1916151825'  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CASE ((t0.c39)/(t0.c59))  WHEN (~ (rt1.c1)) THEN ((rt1.c1) NOT NULL) ELSE rt1.c3 COLLATE RTRIM END) ORDER BY '1916151825'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c39)/(t0.c59))  WHEN (~ (rt1.c1)) THEN ((rt1.c1) NOT NULL) ELSE rt1.c3 COLLATE RTRIM END) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY '1916151825'  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CASE ((t0.c39)/(t0.c59))  WHEN (~ (rt1.c1)) THEN ((rt1.c1) NOT NULL) ELSE rt1.c3 COLLATE RTRIM END) ORDER BY '1916151825'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (((NULLIF(t0.c39, t0.c59)) NOT NULL)) ORDER BY ('LP' IN ()) DESC, 'mvu<' DESC  NULLS FIRST, (((CASE WHEN rt1.c3 THEN t0.c39 WHEN rt1.c3 THEN rt1.c0 WHEN v0.c0 THEN NULL ELSE rt1.c1 END))<=((NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t0.c39, t0.c59)) NOT NULL)) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY ('LP' IN ()) DESC, 'mvu<' DESC  NULLS FIRST, (((CASE WHEN rt1.c3 THEN t0.c39 WHEN rt1.c3 THEN rt1.c0 WHEN v0.c0 THEN NULL ELSE rt1.c1 END))<=((NULL))) DESC);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (((NULLIF(t0.c39, t0.c59)) NOT NULL)) ORDER BY ('LP' IN ()) DESC, 'mvu<' DESC  NULLS FIRST, (((CASE WHEN rt1.c3 THEN t0.c39 WHEN rt1.c3 THEN rt1.c0 WHEN v0.c0 THEN NULL ELSE rt1.c1 END))<=((NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t0.c39, t0.c59)) NOT NULL)) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY ('LP' IN ()) DESC, 'mvu<' DESC  NULLS FIRST, (((CASE WHEN rt1.c3 THEN t0.c39 WHEN rt1.c3 THEN rt1.c0 WHEN v0.c0 THEN NULL ELSE rt1.c1 END))<=((NULL))) DESC);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (((NULLIF(t0.c39, t0.c59)) NOT NULL)) ORDER BY ('LP' IN ()) DESC, 'mvu<' DESC  NULLS FIRST, (((CASE WHEN rt1.c3 THEN t0.c39 WHEN rt1.c3 THEN rt1.c0 WHEN v0.c0 THEN NULL ELSE rt1.c1 END))<=((NULL))) DESC;
SELECT ALL * FROM t0, v0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, v0, rt1);
SELECT ALL * FROM t0, v0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, v0, rt1);
SELECT ALL * FROM t0, v0, rt1 WHERE (x'');
SELECT COUNT(*) FROM v0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CASE '1218881212'  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)<<(t0.c59))) ORDER BY (((((rt1.c3))>((rt1.c0))))<<(rt1.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE '1218881212'  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)<<(t0.c59))) IS TRUE)  as count FROM rt1, t0 ORDER BY (((((rt1.c3))>((rt1.c0))))<<(rt1.c2 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CASE '1218881212'  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)<<(t0.c59))) ORDER BY (((((rt1.c3))>((rt1.c0))))<<(rt1.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE '1218881212'  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)<<(t0.c59))) IS TRUE)  as count FROM rt1, t0 ORDER BY (((((rt1.c3))>((rt1.c0))))<<(rt1.c2 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CASE '1218881212'  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)<<(t0.c59))) ORDER BY (((((rt1.c3))>((rt1.c0))))<<(rt1.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c1 IN ()))>=(SQLITE_COMPILEOPTION_USED(rt1.c3)))) ORDER BY CASE ((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0))  WHEN ((rt1.c2) ISNULL) THEN ((v0.c0) IS FALSE) ELSE ((rt1.c2)+(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))>=(SQLITE_COMPILEOPTION_USED(rt1.c3)))) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE ((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0))  WHEN ((rt1.c2) ISNULL) THEN ((v0.c0) IS FALSE) ELSE ((rt1.c2)+(v0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c1 IN ()))>=(SQLITE_COMPILEOPTION_USED(rt1.c3)))) ORDER BY CASE ((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0))  WHEN ((rt1.c2) ISNULL) THEN ((v0.c0) IS FALSE) ELSE ((rt1.c2)+(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))>=(SQLITE_COMPILEOPTION_USED(rt1.c3)))) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE ((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0))  WHEN ((rt1.c2) ISNULL) THEN ((v0.c0) IS FALSE) ELSE ((rt1.c2)+(v0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c1 IN ()))>=(SQLITE_COMPILEOPTION_USED(rt1.c3)))) ORDER BY CASE ((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0))  WHEN ((rt1.c2) ISNULL) THEN ((v0.c0) IS FALSE) ELSE ((rt1.c2)+(v0.c0)) END  NULLS FIRST;
SELECT * FROM t0, rt1, v0 WHERE (((((('2002600424') ISNULL)))<>((((t0.c59)>(t0.c59)))))) ORDER BY ((rt1.c3) NOT BETWEEN (((rt1.c3) NOTNULL)) AND (IFNULL(DISTINCT rt1.c2, rt1.c3))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('2002600424') ISNULL)))<>((((t0.c59)>(t0.c59)))))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY ((rt1.c3) NOT BETWEEN (((rt1.c3) NOTNULL)) AND (IFNULL(DISTINCT rt1.c2, rt1.c3))) DESC  NULLS LAST);
SELECT * FROM t0, rt1, v0 WHERE (((((('2002600424') ISNULL)))<>((((t0.c59)>(t0.c59)))))) ORDER BY ((rt1.c3) NOT BETWEEN (((rt1.c3) NOTNULL)) AND (IFNULL(DISTINCT rt1.c2, rt1.c3))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('2002600424') ISNULL)))<>((((t0.c59)>(t0.c59)))))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY ((rt1.c3) NOT BETWEEN (((rt1.c3) NOTNULL)) AND (IFNULL(DISTINCT rt1.c2, rt1.c3))) DESC  NULLS LAST);
SELECT * FROM t0, rt1, v0 WHERE (((((('2002600424') ISNULL)))<>((((t0.c59)>(t0.c59)))))) ORDER BY ((rt1.c3) NOT BETWEEN (((rt1.c3) NOTNULL)) AND (IFNULL(DISTINCT rt1.c2, rt1.c3))) DESC  NULLS LAST;
SELECT * FROM t0, rt1, v0 WHERE (((t0.c59) BETWEEN ('4777218') AND (t0.c59)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c59) BETWEEN ('4777218') AND (t0.c59)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1, v0);
SELECT * FROM t0, rt1, v0 WHERE (((t0.c59) BETWEEN ('4777218') AND (t0.c59)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c59) BETWEEN ('4777218') AND (t0.c59)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1, v0);
SELECT * FROM t0, rt1, v0 WHERE (((t0.c59) BETWEEN ('4777218') AND (t0.c59)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CASE ((rt1.c0)==(v0.c0))  WHEN ((rt1.c3)<=(v0.c0)) THEN ((((rt1.c2)OR(x'')))OR(rt1.c0)) ELSE CAST('J靺' AS INTEGER) END WHERE (((((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c3))) BETWEEN (((v0.c0)==(v0.c0))) AND (v0.c0))) ORDER BY ((COALESCE(v0.c0, rt1.c3, rt1.c0, v0.c0))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c3))) BETWEEN (((v0.c0)==(v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON CASE ((rt1.c0)==(v0.c0))  WHEN ((rt1.c3)<=(v0.c0)) THEN ((((rt1.c2)OR(x'')))OR(rt1.c0)) ELSE CAST('J靺' AS INTEGER) END ORDER BY ((COALESCE(v0.c0, rt1.c3, rt1.c0, v0.c0))OR(NULL)) DESC);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CASE ((rt1.c0)==(v0.c0))  WHEN ((rt1.c3)<=(v0.c0)) THEN ((((rt1.c2)OR(x'')))OR(rt1.c0)) ELSE CAST('J靺' AS INTEGER) END WHERE (((((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c3))) BETWEEN (((v0.c0)==(v0.c0))) AND (v0.c0))) ORDER BY ((COALESCE(v0.c0, rt1.c3, rt1.c0, v0.c0))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c3))) BETWEEN (((v0.c0)==(v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON CASE ((rt1.c0)==(v0.c0))  WHEN ((rt1.c3)<=(v0.c0)) THEN ((((rt1.c2)OR(x'')))OR(rt1.c0)) ELSE CAST('J靺' AS INTEGER) END ORDER BY ((COALESCE(v0.c0, rt1.c3, rt1.c0, v0.c0))OR(NULL)) DESC);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CASE ((rt1.c0)==(v0.c0))  WHEN ((rt1.c3)<=(v0.c0)) THEN ((((rt1.c2)OR(x'')))OR(rt1.c0)) ELSE CAST('J靺' AS INTEGER) END WHERE (((((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c3))) BETWEEN (((v0.c0)==(v0.c0))) AND (v0.c0))) ORDER BY ((COALESCE(v0.c0, rt1.c3, rt1.c0, v0.c0))OR(NULL)) DESC;
SELECT COUNT(*) FROM t0, rt1, v0 WHERE ('h\r(0IXp[ ') ORDER BY x'5666'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('h\r(0IXp[ ') IS TRUE)  as count FROM t0, rt1, v0 ORDER BY x'5666'  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE ('h\r(0IXp[ ') ORDER BY x'5666'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('h\r(0IXp[ ') IS TRUE)  as count FROM t0, rt1, v0 ORDER BY x'5666'  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE ('h\r(0IXp[ ') ORDER BY x'5666'  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c39)!=(t0.c59))) BETWEEN ('') AND (((t0.c59) NOT NULL)))) ORDER BY ((UPPER(DISTINCT t0.c59))<(TRIM(t0.c59, t0.c59))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c39)<>(t0.c59))) BETWEEN ('') AND (((t0.c59) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((UPPER(DISTINCT t0.c59))<(TRIM(t0.c59, t0.c59))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c39)!=(t0.c59))) BETWEEN ('') AND (((t0.c59) NOT NULL)))) ORDER BY ((UPPER(DISTINCT t0.c59))<(TRIM(t0.c59, t0.c59))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c39)<>(t0.c59))) BETWEEN ('') AND (((t0.c59) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((UPPER(DISTINCT t0.c59))<(TRIM(t0.c59, t0.c59))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c39)!=(t0.c59))) BETWEEN ('') AND (((t0.c59) NOT NULL)))) ORDER BY ((UPPER(DISTINCT t0.c59))<(TRIM(t0.c59, t0.c59))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY UNLIKELY(((x'') BETWEEN (0.7718204185128719) AND (v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(((x'') BETWEEN (0.7718204185128719) AND (v0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY UNLIKELY(((x'') BETWEEN (0.7718204185128719) AND (v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(((x'') BETWEEN (0.7718204185128719) AND (v0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY UNLIKELY(((x'') BETWEEN (0.7718204185128719) AND (v0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c59)) BETWEEN (((- (rt1.c3)))) AND ((((rt1.c0)<<(t0.c59)))))) ORDER BY CAST(((rt1.c1) IS FALSE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c59)) BETWEEN (((- (rt1.c3)))) AND ((((rt1.c0)<<(t0.c59)))))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(((rt1.c1) IS FALSE) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c59)) BETWEEN (((- (rt1.c3)))) AND ((((rt1.c0)<<(t0.c59)))))) ORDER BY CAST(((rt1.c1) IS FALSE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c59)) BETWEEN (((- (rt1.c3)))) AND ((((rt1.c0)<<(t0.c59)))))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(((rt1.c1) IS FALSE) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c59)) BETWEEN (((- (rt1.c3)))) AND ((((rt1.c0)<<(t0.c59)))))) ORDER BY CAST(((rt1.c1) IS FALSE) AS BLOB) ASC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON ((rt1.c3)>>(rt1.c2)) COLLATE NOCASE COLLATE BINARY LEFT OUTER JOIN rt1 ON ((t0.c39 COLLATE NOCASE) IS TRUE) WHERE (rt1.c1) ORDER BY CASE ((((rt1.c1)AND(v0.c0)))OR(rt1.c3))  WHEN (v0.c0 IN (t0.c59)) THEN DATE(rt1.c1, rt1.c3, x'8fed', v0.c0, rt1.c2) ELSE '' END DESC  NULLS FIRST, ((((((rt1.c3)OR(rt1.c2)))OR(x'')))OR(rt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((rt1.c3)>>(rt1.c2)) COLLATE NOCASE COLLATE BINARY LEFT OUTER JOIN rt1 ON ((t0.c39 COLLATE NOCASE) IS TRUE) ORDER BY CASE ((((rt1.c1)AND(v0.c0)))OR(rt1.c3))  WHEN (v0.c0 IN (t0.c59)) THEN DATE(rt1.c1, rt1.c3, x'8fed', v0.c0, rt1.c2) ELSE '' END DESC  NULLS FIRST, ((((((rt1.c3)OR(rt1.c2)))OR(x'')))OR(rt1.c1)) DESC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON ((rt1.c3)>>(rt1.c2)) COLLATE NOCASE COLLATE BINARY LEFT OUTER JOIN rt1 ON ((t0.c39 COLLATE NOCASE) IS TRUE) WHERE (rt1.c1) ORDER BY CASE ((((rt1.c1)AND(v0.c0)))OR(rt1.c3))  WHEN (v0.c0 IN (t0.c59)) THEN DATE(rt1.c1, rt1.c3, x'8fed', v0.c0, rt1.c2) ELSE '' END DESC  NULLS FIRST, ((((((rt1.c3)OR(rt1.c2)))OR(x'')))OR(rt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((rt1.c3)>>(rt1.c2)) COLLATE NOCASE COLLATE BINARY LEFT OUTER JOIN rt1 ON ((t0.c39 COLLATE NOCASE) IS TRUE) ORDER BY CASE ((((rt1.c1)AND(v0.c0)))OR(rt1.c3))  WHEN (v0.c0 IN (t0.c59)) THEN DATE(rt1.c1, rt1.c3, x'8fed', v0.c0, rt1.c2) ELSE '' END DESC  NULLS FIRST, ((((((rt1.c3)OR(rt1.c2)))OR(x'')))OR(rt1.c1)) DESC);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((CAST(rt1.c0 AS TEXT))) AND (((~ (0.5819116506599148)))))) ORDER BY (+ ((('4P&0L') NOT BETWEEN (rt1.c1) AND (t0.c59)))) ASC  NULLS FIRST, json_object((~ (rt1.c2)), (NOT (rt1.c3)), ((((rt1.c3)AND(t0.c59)))AND(rt1.c2)), ((NULL)>(x''))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((CAST(rt1.c0 AS TEXT))) AND (((~ (0.5819116506599148)))))) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY (+ ((('4P&0L') NOT BETWEEN (rt1.c1) AND (t0.c59)))) ASC  NULLS FIRST, json_object((~ (rt1.c2)), (NOT (rt1.c3)), ((((rt1.c3)AND(t0.c59)))AND(rt1.c2)), ((NULL)>(x''))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((CAST(rt1.c0 AS TEXT))) AND (((~ (0.5819116506599148)))))) ORDER BY (+ ((('4P&0L') NOT BETWEEN (rt1.c1) AND (t0.c59)))) ASC  NULLS FIRST, json_object((~ (rt1.c2)), (NOT (rt1.c3)), ((((rt1.c3)AND(t0.c59)))AND(rt1.c2)), ((NULL)>(x''))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((CAST(rt1.c0 AS TEXT))) AND (((~ (0.5819116506599148)))))) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY (+ ((('4P&0L') NOT BETWEEN (rt1.c1) AND (t0.c59)))) ASC  NULLS FIRST, json_object((~ (rt1.c2)), (NOT (rt1.c3)), ((((rt1.c3)AND(t0.c59)))AND(rt1.c2)), ((NULL)>(x''))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((CAST(rt1.c0 AS TEXT))) AND (((~ (0.5819116506599148)))))) ORDER BY (+ ((('4P&0L') NOT BETWEEN (rt1.c1) AND (t0.c59)))) ASC  NULLS FIRST, json_object((~ (rt1.c2)), (NOT (rt1.c3)), ((((rt1.c3)AND(t0.c59)))AND(rt1.c2)), ((NULL)>(x''))) DESC  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE (((NULL)+(((((((((t0.c39)OR(t0.c39)))AND(v0.c0)))AND(t0.c59)))OR(t0.c39))))) ORDER BY CAST(load_extension(t0.c59) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)+(((((((((t0.c39)OR(t0.c39)))AND(v0.c0)))AND(t0.c59)))OR(t0.c39))))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(load_extension(t0.c59) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (((NULL)+(((((((((t0.c39)OR(t0.c39)))AND(v0.c0)))AND(t0.c59)))OR(t0.c39))))) ORDER BY CAST(load_extension(t0.c59) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)+(((((((((t0.c39)OR(t0.c39)))AND(v0.c0)))AND(t0.c59)))OR(t0.c39))))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(load_extension(t0.c59) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (((NULL)+(((((((((t0.c39)OR(t0.c39)))AND(v0.c0)))AND(t0.c59)))OR(t0.c39))))) ORDER BY CAST(load_extension(t0.c59) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (((v0.c0)GLOB(v0.c0)) COLLATE NOCASE) ORDER BY ((((t0.c59)||(t0.c39)))%(0Xe26570))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)GLOB(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c59)||(t0.c39)))%(0xe26570))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((v0.c0)GLOB(v0.c0)) COLLATE NOCASE) ORDER BY ((((t0.c59)||(t0.c39)))%(0Xe26570))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)GLOB(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c59)||(t0.c39)))%(0xe26570))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((v0.c0)GLOB(v0.c0)) COLLATE NOCASE) ORDER BY ((((t0.c59)||(t0.c39)))%(0Xe26570))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((rt1.c0)+(rt1.c0))) IS TRUE)) ORDER BY ((rt1.c0)OR(rt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)+(rt1.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((rt1.c0)OR(rt1.c0)) DESC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((rt1.c0)+(rt1.c0))) IS TRUE)) ORDER BY ((rt1.c0)OR(rt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)+(rt1.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((rt1.c0)OR(rt1.c0)) DESC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((rt1.c0)+(rt1.c0))) IS TRUE)) ORDER BY ((rt1.c0)OR(rt1.c0)) DESC;
SELECT * FROM v0 WHERE (CASE ((v0.c0)+(v0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)<=(v0.c0)) ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)+(v0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)<=(v0.c0)) ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((v0.c0)+(v0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)<=(v0.c0)) ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)+(v0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)<=(v0.c0)) ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((v0.c0)+(v0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)<=(v0.c0)) ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((((((((((t0.c39 IN (t0.c59)))AND(t0.c59 COLLATE NOCASE)))OR(((t0.c39)OR(t0.c39)))))OR(((t0.c59)|(t0.c39)))))OR('')))OR(((v0.c0)OR('-2062438545')))))AND((('-1768549085') BETWEEN (v0.c0) AND (t0.c59))))) ORDER BY (((+ (v0.c0)))=(((((v0.c0)AND(t0.c59)))OR(t0.c39))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((t0.c39 IN (t0.c59)))AND(t0.c59 COLLATE NOCASE)))OR(((t0.c39)OR(t0.c39)))))OR(((t0.c59)|(t0.c39)))))OR('')))OR(((v0.c0)OR('-2062438545')))))AND((('-1768549085') BETWEEN (v0.c0) AND (t0.c59))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((+ (v0.c0)))==(((((v0.c0)AND(t0.c59)))OR(t0.c39))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((((((((((t0.c39 IN (t0.c59)))AND(t0.c59 COLLATE NOCASE)))OR(((t0.c39)OR(t0.c39)))))OR(((t0.c59)|(t0.c39)))))OR('')))OR(((v0.c0)OR('-2062438545')))))AND((('-1768549085') BETWEEN (v0.c0) AND (t0.c59))))) ORDER BY (((+ (v0.c0)))=(((((v0.c0)AND(t0.c59)))OR(t0.c39))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((t0.c39 IN (t0.c59)))AND(t0.c59 COLLATE NOCASE)))OR(((t0.c39)OR(t0.c39)))))OR(((t0.c59)|(t0.c39)))))OR('')))OR(((v0.c0)OR('-2062438545')))))AND((('-1768549085') BETWEEN (v0.c0) AND (t0.c59))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((+ (v0.c0)))==(((((v0.c0)AND(t0.c59)))OR(t0.c39))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((((((((((t0.c39 IN (t0.c59)))AND(t0.c59 COLLATE NOCASE)))OR(((t0.c39)OR(t0.c39)))))OR(((t0.c59)|(t0.c39)))))OR('')))OR(((v0.c0)OR('-2062438545')))))AND((('-1768549085') BETWEEN (v0.c0) AND (t0.c59))))) ORDER BY (((+ (v0.c0)))=(((((v0.c0)AND(t0.c59)))OR(t0.c39))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c0)))<=(''))) ORDER BY ((((v0.c0)||(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0) ISNULL)))  NULLS LAST, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))<=(''))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)||(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0) ISNULL)))  NULLS LAST, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c0)))<=(''))) ORDER BY ((((v0.c0)||(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0) ISNULL)))  NULLS LAST, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))<=(''))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)||(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0) ISNULL)))  NULLS LAST, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c0)))<=(''))) ORDER BY ((((v0.c0)||(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0) ISNULL)))  NULLS LAST, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE '13'  WHEN rt1.c1 THEN (+ (rt1.c2)) END) ORDER BY ((((x'6948') IS FALSE)) NOT BETWEEN (CASE ''  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) AND (x'' COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE '13'  WHEN rt1.c1 THEN (+ (rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY ((((x'6948') IS FALSE)) NOT BETWEEN (CASE ''  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) AND (x'' COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE '13'  WHEN rt1.c1 THEN (+ (rt1.c2)) END) ORDER BY ((((x'6948') IS FALSE)) NOT BETWEEN (CASE ''  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) AND (x'' COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE '13'  WHEN rt1.c1 THEN (+ (rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY ((((x'6948') IS FALSE)) NOT BETWEEN (CASE ''  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) AND (x'' COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE '13'  WHEN rt1.c1 THEN (+ (rt1.c2)) END) ORDER BY ((((x'6948') IS FALSE)) NOT BETWEEN (CASE ''  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END) AND (x'' COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1, v0 NOT INDEXED WHERE (((((((((rt1.c1)AND(rt1.c0)))AND(v0.c0)))AND(rt1.c1)))OR(rtreenode(rt1.c1, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1)AND(rt1.c0)))AND(v0.c0)))AND(rt1.c1)))OR(rtreenode(rt1.c1, v0.c0)))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT COUNT(*) FROM t0, rt1, v0 NOT INDEXED WHERE (((((((((rt1.c1)AND(rt1.c0)))AND(v0.c0)))AND(rt1.c1)))OR(rtreenode(rt1.c1, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1)AND(rt1.c0)))AND(v0.c0)))AND(rt1.c1)))OR(rtreenode(rt1.c1, v0.c0)))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT COUNT(*) FROM t0, rt1, v0 NOT INDEXED WHERE (((((((((rt1.c1)AND(rt1.c0)))AND(v0.c0)))AND(rt1.c1)))OR(rtreenode(rt1.c1, v0.c0))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON ((((t0.c59)<=(rt1.c2)))|(UPPER(DISTINCT NULL))) INNER JOIN t0 ON ((t0.c39 COLLATE NOCASE) NOT BETWEEN (CASE t0.c59  WHEN v0.c0 THEN t0.c39 ELSE rt1.c0 END) AND (t0.c39 COLLATE RTRIM)) WHERE ((((+ (v0.c0)))>>((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0)))>>((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((((t0.c59)<=(rt1.c2)))|(UPPER(DISTINCT NULL))) INNER JOIN t0 ON ((t0.c39 COLLATE NOCASE) NOT BETWEEN (CASE t0.c59  WHEN v0.c0 THEN t0.c39 ELSE rt1.c0 END) AND (t0.c39 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON ((((t0.c59)<=(rt1.c2)))|(UPPER(DISTINCT NULL))) INNER JOIN t0 ON ((t0.c39 COLLATE NOCASE) NOT BETWEEN (CASE t0.c59  WHEN v0.c0 THEN t0.c39 ELSE rt1.c0 END) AND (t0.c39 COLLATE RTRIM)) WHERE ((((+ (v0.c0)))>>((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0)))>>((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((((t0.c59)<=(rt1.c2)))|(UPPER(DISTINCT NULL))) INNER JOIN t0 ON ((t0.c39 COLLATE NOCASE) NOT BETWEEN (CASE t0.c59  WHEN v0.c0 THEN t0.c39 ELSE rt1.c0 END) AND (t0.c39 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c1)))&(-2.109061399E9))) ORDER BY ((rt1.c0)=((~ (rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c1)))&(-2.109061399E9))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((rt1.c0)=((~ (rt1.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c1)))&(-2.109061399E9))) ORDER BY ((rt1.c0)=((~ (rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c1)))&(-2.109061399E9))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((rt1.c0)=((~ (rt1.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c1)))&(-2.109061399E9))) ORDER BY ((rt1.c0)=((~ (rt1.c3))))  NULLS FIRST;
SELECT * FROM rt1, t0, v0 WHERE (LIKELIHOOD(DISTINCT rt1.c1, 0.5727793190145666) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt1.c1, 0.5727793190145666) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, v0);
SELECT * FROM rt1, t0, v0 WHERE (LIKELIHOOD(DISTINCT rt1.c1, 0.5727793190145666) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt1.c1, 0.5727793190145666) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, v0);
SELECT * FROM rt1, t0, v0 WHERE (LIKELIHOOD(DISTINCT rt1.c1, 0.5727793190145666) COLLATE BINARY);
SELECT ALL * FROM t0, rt1 WHERE (json_valid((('')!=(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid((('')!=(rt1.c2)))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (json_valid((('')!=(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_valid((('')!=(rt1.c2)))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (json_valid((('')!=(rt1.c2))));
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (CASE WHEN 405447356 THEN ((t0.c39) IS FALSE) END) ORDER BY (((rt1.c0)) BETWEEN ((CHANGES())) AND ((CASE WHEN rt1.c1 THEN t0.c39 END)))  NULLS FIRST, (- (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 405447356 THEN ((t0.c39) IS FALSE) END) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY (((rt1.c0)) BETWEEN ((CHANGES())) AND ((CASE WHEN rt1.c1 THEN t0.c39 END)))  NULLS FIRST, (- (NULL)) DESC);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (CASE WHEN 405447356 THEN ((t0.c39) IS FALSE) END) ORDER BY (((rt1.c0)) BETWEEN ((CHANGES())) AND ((CASE WHEN rt1.c1 THEN t0.c39 END)))  NULLS FIRST, (- (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 405447356 THEN ((t0.c39) IS FALSE) END) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY (((rt1.c0)) BETWEEN ((CHANGES())) AND ((CASE WHEN rt1.c1 THEN t0.c39 END)))  NULLS FIRST, (- (NULL)) DESC);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (CASE WHEN 405447356 THEN ((t0.c39) IS FALSE) END) ORDER BY (((rt1.c0)) BETWEEN ((CHANGES())) AND ((CASE WHEN rt1.c1 THEN t0.c39 END)))  NULLS FIRST, (- (NULL)) DESC;
SELECT * FROM t0, rt1 WHERE (((((((((((((rt1.c1)AND(rt1.c0)))AND(t0.c59)))AND((t0.c59 IN ()))))OR((- (rt1.c0)))))AND(LIKELY(DISTINCT rt1.c0))))AND(rt1.c1 COLLATE RTRIM))) ORDER BY t0.c59 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c1)AND(rt1.c0)))AND(t0.c59)))AND((t0.c59 IN ()))))OR((- (rt1.c0)))))AND(LIKELY(DISTINCT rt1.c0))))AND(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1 NOT INDEXED ORDER BY t0.c59 ASC);
SELECT * FROM t0, rt1 WHERE (((((((((((((rt1.c1)AND(rt1.c0)))AND(t0.c59)))AND((t0.c59 IN ()))))OR((- (rt1.c0)))))AND(LIKELY(DISTINCT rt1.c0))))AND(rt1.c1 COLLATE RTRIM))) ORDER BY t0.c59 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c1)AND(rt1.c0)))AND(t0.c59)))AND((t0.c59 IN ()))))OR((- (rt1.c0)))))AND(LIKELY(DISTINCT rt1.c0))))AND(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1 NOT INDEXED ORDER BY t0.c59 ASC);
SELECT * FROM t0, rt1 WHERE (((((((((((((rt1.c1)AND(rt1.c0)))AND(t0.c59)))AND((t0.c59 IN ()))))OR((- (rt1.c0)))))AND(LIKELY(DISTINCT rt1.c0))))AND(rt1.c1 COLLATE RTRIM))) ORDER BY t0.c59 ASC;
SELECT * FROM v0, t0 NOT INDEXED, rt1 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((t0.c39)AND(NULL)))AND(rt1.c1))) AND (((v0.c0) NOT BETWEEN (t0.c39) AND (rt1.c1))))) ORDER BY ((((CAST(rt1.c0 AS REAL))OR((rt1.c3 IN ()))))OR(v0.c0)) DESC, (((rt1.c0)) NOT BETWEEN (('344918130')) AND (((((rt1.c3))>=((t0.c39))))))  NULLS LAST, ((rt1.c3 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((t0.c39)AND(NULL)))AND(rt1.c1))) AND (((v0.c0) NOT BETWEEN (t0.c39) AND (rt1.c1))))) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY ((((CAST(rt1.c0 AS REAL))OR((rt1.c3 IN ()))))OR(v0.c0)) DESC, (((rt1.c0)) NOT BETWEEN (('344918130')) AND (((((rt1.c3))>=((t0.c39))))))  NULLS LAST, ((rt1.c3 IN ()) IN ()));
SELECT * FROM v0, t0 NOT INDEXED, rt1 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((t0.c39)AND(NULL)))AND(rt1.c1))) AND (((v0.c0) NOT BETWEEN (t0.c39) AND (rt1.c1))))) ORDER BY ((((CAST(rt1.c0 AS REAL))OR((rt1.c3 IN ()))))OR(v0.c0)) DESC, (((rt1.c0)) NOT BETWEEN (('344918130')) AND (((((rt1.c3))>=((t0.c39))))))  NULLS LAST, ((rt1.c3 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((t0.c39)AND(NULL)))AND(rt1.c1))) AND (((v0.c0) NOT BETWEEN (t0.c39) AND (rt1.c1))))) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY ((((CAST(rt1.c0 AS REAL))OR((rt1.c3 IN ()))))OR(v0.c0)) DESC, (((rt1.c0)) NOT BETWEEN (('344918130')) AND (((((rt1.c3))>=((t0.c39))))))  NULLS LAST, ((rt1.c3 IN ()) IN ()));
SELECT * FROM v0, t0 NOT INDEXED, rt1 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((t0.c39)AND(NULL)))AND(rt1.c1))) AND (((v0.c0) NOT BETWEEN (t0.c39) AND (rt1.c1))))) ORDER BY ((((CAST(rt1.c0 AS REAL))OR((rt1.c3 IN ()))))OR(v0.c0)) DESC, (((rt1.c0)) NOT BETWEEN (('344918130')) AND (((((rt1.c3))>=((t0.c39))))))  NULLS LAST, ((rt1.c3 IN ()) IN ());
SELECT ALL * FROM rt1, v0, t0 WHERE (((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END)AND(((v0.c0) NOT NULL))))AND(((rt1.c3) BETWEEN (t0.c59) AND (x''))))) ORDER BY ((CAST(v0.c0 AS REAL)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END)AND(((v0.c0) NOT NULL))))AND(((rt1.c3) BETWEEN (t0.c59) AND (x''))))) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY ((CAST(v0.c0 AS REAL)) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0, t0 WHERE (((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END)AND(((v0.c0) NOT NULL))))AND(((rt1.c3) BETWEEN (t0.c59) AND (x''))))) ORDER BY ((CAST(v0.c0 AS REAL)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END)AND(((v0.c0) NOT NULL))))AND(((rt1.c3) BETWEEN (t0.c59) AND (x''))))) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY ((CAST(v0.c0 AS REAL)) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0, t0 WHERE (((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END)AND(((v0.c0) NOT NULL))))AND(((rt1.c3) BETWEEN (t0.c59) AND (x''))))) ORDER BY ((CAST(v0.c0 AS REAL)) ISNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((- (rt1.c0))) NOTNULL)) ORDER BY ((TOTAL_CHANGES()) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((TOTAL_CHANGES()) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((- (rt1.c0))) NOTNULL)) ORDER BY ((TOTAL_CHANGES()) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((TOTAL_CHANGES()) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((- (rt1.c0))) NOTNULL)) ORDER BY ((TOTAL_CHANGES()) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE 0.21441666945997429  WHEN rt1.c0 THEN (((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c3, rt1.c3, rt1.c3))) END) ORDER BY 0.04681002946637314  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE 0.21441666945997429  WHEN rt1.c0 THEN (((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c3, rt1.c3, rt1.c3))) END) IS TRUE)  as count FROM rt1 ORDER BY 0.04681002946637314  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE 0.21441666945997429  WHEN rt1.c0 THEN (((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c3, rt1.c3, rt1.c3))) END) ORDER BY 0.04681002946637314  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE 0.21441666945997429  WHEN rt1.c0 THEN (((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c3, rt1.c3, rt1.c3))) END) IS TRUE)  as count FROM rt1 ORDER BY 0.04681002946637314  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE 0.21441666945997429  WHEN rt1.c0 THEN (((rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c3, rt1.c3, rt1.c3))) END) ORDER BY 0.04681002946637314  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ('') ORDER BY (((rt1.c1)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c0 WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 END)) AND ((((rt1.c3)GLOB(rt1.c3))))) ASC  NULLS LAST, (('\nVu')>(((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c0 WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 END)) AND ((((rt1.c3)GLOB(rt1.c3))))) ASC  NULLS LAST, (('\nVu')>(((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ('') ORDER BY (((rt1.c1)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c0 WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 END)) AND ((((rt1.c3)GLOB(rt1.c3))))) ASC  NULLS LAST, (('\nVu')>(((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c0 WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 END)) AND ((((rt1.c3)GLOB(rt1.c3))))) ASC  NULLS LAST, (('\nVu')>(((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ('') ORDER BY (((rt1.c1)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c0 WHEN '' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 END)) AND ((((rt1.c3)GLOB(rt1.c3))))) ASC  NULLS LAST, (('\nVu')>(((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((CHAR(rt1.c2))!=(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(rt1.c2))<>(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((CHAR(rt1.c2))!=(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(rt1.c2))<>(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((CHAR(rt1.c2))!=(rt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, v0 WHERE (UNLIKELY(x''));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(x'')) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (UNLIKELY(x''));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(x'')) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (UNLIKELY(x''));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON ((((((((((((((((v0.c0)OR(t0.c39)))AND(rt1.c3)))AND(t0.c39)))AND(rt1.c1)))AND(t0.c39)))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))OR(((t0.c59)<>(t0.c59)))))OR((('-1888038961') ISNULL))) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID() WHERE ((((x'b9c2', ((((t0.c59)OR(t0.c59)))AND(rt1.c2)), (v0.c0 IN ())))=((((((t0.c39)OR(rt1.c0)))AND(rt1.c3)), rt1.c1 COLLATE RTRIM, 0.6939359688141119)))) ORDER BY ((((rt1.c2) IS TRUE)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'b9c2', ((((t0.c59)OR(t0.c59)))AND(rt1.c2)), (v0.c0 IN ())))=((((((t0.c39)OR(rt1.c0)))AND(rt1.c3)), rt1.c1 COLLATE RTRIM, 0.6939359688141119)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON ((((((((((((((((v0.c0)OR(t0.c39)))AND(rt1.c3)))AND(t0.c39)))AND(rt1.c1)))AND(t0.c39)))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))OR(((t0.c59)<>(t0.c59)))))OR((('-1888038961') ISNULL))) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID() ORDER BY ((((rt1.c2) IS TRUE)) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON ((((((((((((((((v0.c0)OR(t0.c39)))AND(rt1.c3)))AND(t0.c39)))AND(rt1.c1)))AND(t0.c39)))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))OR(((t0.c59)<>(t0.c59)))))OR((('-1888038961') ISNULL))) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID() WHERE ((((x'b9c2', ((((t0.c59)OR(t0.c59)))AND(rt1.c2)), (v0.c0 IN ())))=((((((t0.c39)OR(rt1.c0)))AND(rt1.c3)), rt1.c1 COLLATE RTRIM, 0.6939359688141119)))) ORDER BY ((((rt1.c2) IS TRUE)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'b9c2', ((((t0.c59)OR(t0.c59)))AND(rt1.c2)), (v0.c0 IN ())))=((((((t0.c39)OR(rt1.c0)))AND(rt1.c3)), rt1.c1 COLLATE RTRIM, 0.6939359688141119)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON ((((((((((((((((v0.c0)OR(t0.c39)))AND(rt1.c3)))AND(t0.c39)))AND(rt1.c1)))AND(t0.c39)))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))OR(((t0.c59)<>(t0.c59)))))OR((('-1888038961') ISNULL))) FULL OUTER JOIN v0 ON LAST_INSERT_ROWID() ORDER BY ((((rt1.c2) IS TRUE)) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (UNLIKELY(x'') COLLATE BINARY) ORDER BY CAST((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))) AS TEXT), ((((TIME(rt1.c3, rt1.c3, rt1.c0))AND(rt1.c3)))AND(ROUND(rt1.c3, rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(x'') COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))) AS TEXT), ((((TIME(rt1.c3, rt1.c3, rt1.c0))AND(rt1.c3)))AND(ROUND(rt1.c3, rt1.c1))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (UNLIKELY(x'') COLLATE BINARY) ORDER BY CAST((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))) AS TEXT), ((((TIME(rt1.c3, rt1.c3, rt1.c0))AND(rt1.c3)))AND(ROUND(rt1.c3, rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(x'') COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))) AS TEXT), ((((TIME(rt1.c3, rt1.c3, rt1.c0))AND(rt1.c3)))AND(ROUND(rt1.c3, rt1.c1))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (UNLIKELY(x'') COLLATE BINARY) ORDER BY CAST((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))) AS TEXT), ((((TIME(rt1.c3, rt1.c3, rt1.c0))AND(rt1.c3)))AND(ROUND(rt1.c3, rt1.c1))) ASC;
SELECT ALL * FROM t0 WHERE ((CAST(t0.c59 AS TEXT) IN (CASE WHEN t0.c39 THEN t0.c39 END)));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c59 AS TEXT) IN (CASE WHEN t0.c39 THEN t0.c39 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c59 AS TEXT) IN (CASE WHEN t0.c39 THEN t0.c39 END)));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c59 AS TEXT) IN (CASE WHEN t0.c39 THEN t0.c39 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c59 AS TEXT) IN (CASE WHEN t0.c39 THEN t0.c39 END)));
SELECT * FROM t0 INNER JOIN v0 ON CASE CASE rt1.c2  WHEN rt1.c0 THEN t0.c39 ELSE rt1.c1 END  WHEN (- (rt1.c0)) THEN CAST(1132170079 AS NUMERIC) ELSE (+ (t0.c59)) END INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN '-1312994083' END WHERE (((((((((((((rt1.c3)OR(t0.c59)))AND(rt1.c2)))OR(NULL)))OR(rt1.c1 COLLATE RTRIM)))OR(CASE v0.c0  WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN t0.c59 WHEN rt1.c0 THEN 0.5040881770326935 ELSE rt1.c1 END)))OR('p瘃')));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c3)OR(t0.c59)))AND(rt1.c2)))OR(NULL)))OR(rt1.c1 COLLATE RTRIM)))OR(CASE v0.c0  WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN t0.c59 WHEN rt1.c0 THEN 0.5040881770326935 ELSE rt1.c1 END)))OR('p瘃'))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CASE CASE rt1.c2  WHEN rt1.c0 THEN t0.c39 ELSE rt1.c1 END  WHEN (- (rt1.c0)) THEN CAST(1132170079 AS NUMERIC) ELSE (+ (t0.c59)) END INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN '-1312994083' END);
SELECT * FROM t0 INNER JOIN v0 ON CASE CASE rt1.c2  WHEN rt1.c0 THEN t0.c39 ELSE rt1.c1 END  WHEN (- (rt1.c0)) THEN CAST(1132170079 AS NUMERIC) ELSE (+ (t0.c59)) END INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN '-1312994083' END WHERE (((((((((((((rt1.c3)OR(t0.c59)))AND(rt1.c2)))OR(NULL)))OR(rt1.c1 COLLATE RTRIM)))OR(CASE v0.c0  WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN t0.c59 WHEN rt1.c0 THEN 0.5040881770326935 ELSE rt1.c1 END)))OR('p瘃')));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c3)OR(t0.c59)))AND(rt1.c2)))OR(NULL)))OR(rt1.c1 COLLATE RTRIM)))OR(CASE v0.c0  WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN t0.c59 WHEN rt1.c0 THEN 0.5040881770326935 ELSE rt1.c1 END)))OR('p瘃'))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CASE CASE rt1.c2  WHEN rt1.c0 THEN t0.c39 ELSE rt1.c1 END  WHEN (- (rt1.c0)) THEN CAST(1132170079 AS NUMERIC) ELSE (+ (t0.c59)) END INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN '-1312994083' END);
SELECT * FROM t0 INNER JOIN v0 ON CASE CASE rt1.c2  WHEN rt1.c0 THEN t0.c39 ELSE rt1.c1 END  WHEN (- (rt1.c0)) THEN CAST(1132170079 AS NUMERIC) ELSE (+ (t0.c59)) END INNER JOIN rt1 ON CASE WHEN rt1.c1 THEN '-1312994083' END WHERE (((((((((((((rt1.c3)OR(t0.c59)))AND(rt1.c2)))OR(NULL)))OR(rt1.c1 COLLATE RTRIM)))OR(CASE v0.c0  WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN t0.c59 WHEN rt1.c0 THEN 0.5040881770326935 ELSE rt1.c1 END)))OR('p瘃')));
SELECT COUNT(*) FROM t0, v0, rt1 WHERE (CASE WHEN ((rt1.c1) NOTNULL) THEN ((v0.c0)*(rt1.c0)) ELSE ((v0.c0) BETWEEN (t0.c59) AND (t0.c39)) END) ORDER BY (+ (((rt1.c0) BETWEEN (t0.c59) AND (v0.c0)))) DESC  NULLS LAST, (((((v0.c0, t0.c59, v0.c0, '2Q', rt1.c2))<>((x'2981', v0.c0, rt1.c0, t0.c39, '')))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1) NOTNULL) THEN ((v0.c0)*(rt1.c0)) ELSE ((v0.c0) BETWEEN (t0.c59) AND (t0.c39)) END) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY (+ (((rt1.c0) BETWEEN (t0.c59) AND (v0.c0)))) DESC  NULLS LAST, (((((v0.c0, t0.c59, v0.c0, '2Q', rt1.c2))!=((x'2981', v0.c0, rt1.c0, t0.c39, '')))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, rt1 WHERE (CASE WHEN ((rt1.c1) NOTNULL) THEN ((v0.c0)*(rt1.c0)) ELSE ((v0.c0) BETWEEN (t0.c59) AND (t0.c39)) END) ORDER BY (+ (((rt1.c0) BETWEEN (t0.c59) AND (v0.c0)))) DESC  NULLS LAST, (((((v0.c0, t0.c59, v0.c0, '2Q', rt1.c2))<>((x'2981', v0.c0, rt1.c0, t0.c39, '')))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1) NOTNULL) THEN ((v0.c0)*(rt1.c0)) ELSE ((v0.c0) BETWEEN (t0.c59) AND (t0.c39)) END) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY (+ (((rt1.c0) BETWEEN (t0.c59) AND (v0.c0)))) DESC  NULLS LAST, (((((v0.c0, t0.c59, v0.c0, '2Q', rt1.c2))!=((x'2981', v0.c0, rt1.c0, t0.c39, '')))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, rt1 WHERE (CASE WHEN ((rt1.c1) NOTNULL) THEN ((v0.c0)*(rt1.c0)) ELSE ((v0.c0) BETWEEN (t0.c59) AND (t0.c39)) END) ORDER BY (+ (((rt1.c0) BETWEEN (t0.c59) AND (v0.c0)))) DESC  NULLS LAST, (((((v0.c0, t0.c59, v0.c0, '2Q', rt1.c2))<>((x'2981', v0.c0, rt1.c0, t0.c39, '')))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (x'a3bc') ORDER BY CASE 'w'  WHEN (('z0NC[棹')&(t0.c59)) THEN ((v0.c0)==(rt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((x'a3bc') IS TRUE)  as count FROM v0, t0, rt1 ORDER BY CASE 'w'  WHEN (('z0NC[棹')&(t0.c59)) THEN ((v0.c0)==(rt1.c0)) END ASC);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (x'a3bc') ORDER BY CASE 'w'  WHEN (('z0NC[棹')&(t0.c59)) THEN ((v0.c0)==(rt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((x'a3bc') IS TRUE)  as count FROM v0, t0, rt1 ORDER BY CASE 'w'  WHEN (('z0NC[棹')&(t0.c59)) THEN ((v0.c0)==(rt1.c0)) END ASC);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (x'a3bc') ORDER BY CASE 'w'  WHEN (('z0NC[棹')&(t0.c59)) THEN ((v0.c0)==(rt1.c0)) END ASC;
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c3)GLOB(t0.c59))) IS TRUE) RIGHT OUTER JOIN t0 ON ((t0.c39)<=(rt1.c3 COLLATE RTRIM)) WHERE (ABS((t0.c59 IN (rt1.c1)))) ORDER BY t0.c59  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((t0.c59 IN (rt1.c1)))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((rt1.c3)GLOB(t0.c59))) IS TRUE) RIGHT OUTER JOIN t0 ON ((t0.c39)<=(rt1.c3 COLLATE RTRIM)) ORDER BY t0.c59  NULLS FIRST);
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c3)GLOB(t0.c59))) IS TRUE) RIGHT OUTER JOIN t0 ON ((t0.c39)<=(rt1.c3 COLLATE RTRIM)) WHERE (ABS((t0.c59 IN (rt1.c1)))) ORDER BY t0.c59  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((t0.c59 IN (rt1.c1)))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((rt1.c3)GLOB(t0.c59))) IS TRUE) RIGHT OUTER JOIN t0 ON ((t0.c39)<=(rt1.c3 COLLATE RTRIM)) ORDER BY t0.c59  NULLS FIRST);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c2))<=((t0.c39))) COLLATE NOCASE WHERE (CASE WHEN CASE WHEN t0.c59 THEN t0.c59 END THEN ((t0.c59)<=(1555476011)) ELSE ((rt1.c3)>=(x'e09b')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c59 THEN t0.c59 END THEN ((t0.c59)<=(1555476011)) ELSE ((rt1.c3)>=(x'e09b')) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c2))<=((t0.c39))) COLLATE NOCASE);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c2))<=((t0.c39))) COLLATE NOCASE WHERE (CASE WHEN CASE WHEN t0.c59 THEN t0.c59 END THEN ((t0.c59)<=(1555476011)) ELSE ((rt1.c3)>=(x'e09b')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c59 THEN t0.c59 END THEN ((t0.c59)<=(1555476011)) ELSE ((rt1.c3)>=(x'e09b')) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c2))<=((t0.c39))) COLLATE NOCASE);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c2))<=((t0.c39))) COLLATE NOCASE WHERE (CASE WHEN CASE WHEN t0.c59 THEN t0.c59 END THEN ((t0.c59)<=(1555476011)) ELSE ((rt1.c3)>=(x'e09b')) END);
SELECT ALL * FROM v0, t0, rt1 WHERE (((((v0.c0)%(rt1.c0)))+((+ (t0.c59))))) ORDER BY ((CAST(rt1.c1 AS TEXT)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(rt1.c0)))+((+ (t0.c59))))) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY ((CAST(rt1.c1 AS TEXT)) IS FALSE) ASC);
SELECT ALL * FROM v0, t0, rt1 WHERE (((((v0.c0)%(rt1.c0)))+((+ (t0.c59))))) ORDER BY ((CAST(rt1.c1 AS TEXT)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(rt1.c0)))+((+ (t0.c59))))) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY ((CAST(rt1.c1 AS TEXT)) IS FALSE) ASC);
SELECT ALL * FROM v0, t0, rt1 WHERE (((((v0.c0)%(rt1.c0)))+((+ (t0.c59))))) ORDER BY ((CAST(rt1.c1 AS TEXT)) IS FALSE) ASC;
SELECT ALL * FROM rt1, v0 WHERE (CASE WHEN ('' IN (v0.c0)) THEN ((rt1.c3) ISNULL) END) ORDER BY ((((((rt1.c3, v0.c0, rt1.c2))>=((rt1.c2, v0.c0, rt1.c0)))))>=((CAST(v0.c0 AS INTEGER)))) DESC, CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN 'u' THEN x'86ee' ELSE rt1.c1 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ('' IN (v0.c0)) THEN ((rt1.c3) ISNULL) END) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((((rt1.c3, v0.c0, rt1.c2))>=((rt1.c2, v0.c0, rt1.c0)))))>=((CAST(v0.c0 AS INTEGER)))) DESC, CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN 'u' THEN x'86ee' ELSE rt1.c1 END COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (CASE WHEN ('' IN (v0.c0)) THEN ((rt1.c3) ISNULL) END) ORDER BY ((((((rt1.c3, v0.c0, rt1.c2))>=((rt1.c2, v0.c0, rt1.c0)))))>=((CAST(v0.c0 AS INTEGER)))) DESC, CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN 'u' THEN x'86ee' ELSE rt1.c1 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ('' IN (v0.c0)) THEN ((rt1.c3) ISNULL) END) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((((rt1.c3, v0.c0, rt1.c2))>=((rt1.c2, v0.c0, rt1.c0)))))>=((CAST(v0.c0 AS INTEGER)))) DESC, CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN 'u' THEN x'86ee' ELSE rt1.c1 END COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (CASE WHEN ('' IN (v0.c0)) THEN ((rt1.c3) ISNULL) END) ORDER BY ((((((rt1.c3, v0.c0, rt1.c2))>=((rt1.c2, v0.c0, rt1.c0)))))>=((CAST(v0.c0 AS INTEGER)))) DESC, CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN 'u' THEN x'86ee' ELSE rt1.c1 END COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 NATURAL JOIN rt1 WHERE (((((t0.c59)=(rt1.c2))) BETWEEN (((NULL)<=(rt1.c1))) AND (UNLIKELY(t0.c59)))) ORDER BY (((t0.c39)LIKE(rt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c59)==(rt1.c2))) BETWEEN (((NULL)<=(rt1.c1))) AND (UNLIKELY(t0.c59)))) IS TRUE)  as count FROM t0, v0 NATURAL JOIN rt1 ORDER BY (((t0.c39)LIKE(rt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, v0 NATURAL JOIN rt1 WHERE (((((t0.c59)=(rt1.c2))) BETWEEN (((NULL)<=(rt1.c1))) AND (UNLIKELY(t0.c59)))) ORDER BY (((t0.c39)LIKE(rt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c59)==(rt1.c2))) BETWEEN (((NULL)<=(rt1.c1))) AND (UNLIKELY(t0.c59)))) IS TRUE)  as count FROM t0, v0 NATURAL JOIN rt1 ORDER BY (((t0.c39)LIKE(rt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, v0 NATURAL JOIN rt1 WHERE (((((t0.c59)=(rt1.c2))) BETWEEN (((NULL)<=(rt1.c1))) AND (UNLIKELY(t0.c59)))) ORDER BY (((t0.c39)LIKE(rt1.c0)) IN ());
SELECT COUNT(*) FROM v0, t0, rt1 WHERE ((((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)) IN ())) ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE '|P!#' END))<((((v0.c0) NOTNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)) IN ())) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE '|P!#' END))<((((v0.c0) NOTNULL))))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE ((((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)) IN ())) ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE '|P!#' END))<((((v0.c0) NOTNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)) IN ())) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE '|P!#' END))<((((v0.c0) NOTNULL))))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE ((((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)) IN ())) ORDER BY (((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE '|P!#' END))<((((v0.c0) NOTNULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE ((((((rt1.c2) NOT BETWEEN (t0.c39) AND (rt1.c2)), CAST(rt1.c2 AS BLOB), ((t0.c39) NOT BETWEEN (v0.c0) AND (rt1.c3)), LIKELIHOOD(rt1.c0, 0.3129753434195166), (+ (rt1.c0))))<>((ABS(NULL), (((rt1.c3))==((t0.c59))), ((((((((t0.c59)AND(rt1.c1)))OR(v0.c0)))OR(rt1.c2)))OR(t0.c59)), CAST(rt1.c3 AS INTEGER), CASE v0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN 0xffffffff9eb64afb THEN t0.c39 WHEN rt1.c3 THEN '1635827757' ELSE rt1.c2 END)))) ORDER BY (((rt1.c1)) BETWEEN ((json_array_length(rt1.c3, t0.c59))) AND ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(t0.c59)))AND(5.6987572E8)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2) NOT BETWEEN (t0.c39) AND (rt1.c2)), CAST(rt1.c2 AS BLOB), ((t0.c39) NOT BETWEEN (v0.c0) AND (rt1.c3)), LIKELIHOOD(rt1.c0, 0.3129753434195166), (+ (rt1.c0))))!=((ABS(NULL), (((rt1.c3))==((t0.c59))), ((((((((t0.c59)AND(rt1.c1)))OR(v0.c0)))OR(rt1.c2)))OR(t0.c59)), CAST(rt1.c3 AS INTEGER), CASE v0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN 0Xffffffff9eb64afb THEN t0.c39 WHEN rt1.c3 THEN '1635827757' ELSE rt1.c2 END)))) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (((rt1.c1)) BETWEEN ((json_array_length(rt1.c3, t0.c59))) AND ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(t0.c59)))AND(5.6987572E8))))));
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE ((((((rt1.c2) NOT BETWEEN (t0.c39) AND (rt1.c2)), CAST(rt1.c2 AS BLOB), ((t0.c39) NOT BETWEEN (v0.c0) AND (rt1.c3)), LIKELIHOOD(rt1.c0, 0.3129753434195166), (+ (rt1.c0))))<>((ABS(NULL), (((rt1.c3))==((t0.c59))), ((((((((t0.c59)AND(rt1.c1)))OR(v0.c0)))OR(rt1.c2)))OR(t0.c59)), CAST(rt1.c3 AS INTEGER), CASE v0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN 0xffffffff9eb64afb THEN t0.c39 WHEN rt1.c3 THEN '1635827757' ELSE rt1.c2 END)))) ORDER BY (((rt1.c1)) BETWEEN ((json_array_length(rt1.c3, t0.c59))) AND ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(t0.c59)))AND(5.6987572E8)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2) NOT BETWEEN (t0.c39) AND (rt1.c2)), CAST(rt1.c2 AS BLOB), ((t0.c39) NOT BETWEEN (v0.c0) AND (rt1.c3)), LIKELIHOOD(rt1.c0, 0.3129753434195166), (+ (rt1.c0))))!=((ABS(NULL), (((rt1.c3))==((t0.c59))), ((((((((t0.c59)AND(rt1.c1)))OR(v0.c0)))OR(rt1.c2)))OR(t0.c59)), CAST(rt1.c3 AS INTEGER), CASE v0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN 0Xffffffff9eb64afb THEN t0.c39 WHEN rt1.c3 THEN '1635827757' ELSE rt1.c2 END)))) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (((rt1.c1)) BETWEEN ((json_array_length(rt1.c3, t0.c59))) AND ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(t0.c59)))AND(5.6987572E8))))));
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE ((((((rt1.c2) NOT BETWEEN (t0.c39) AND (rt1.c2)), CAST(rt1.c2 AS BLOB), ((t0.c39) NOT BETWEEN (v0.c0) AND (rt1.c3)), LIKELIHOOD(rt1.c0, 0.3129753434195166), (+ (rt1.c0))))<>((ABS(NULL), (((rt1.c3))==((t0.c59))), ((((((((t0.c59)AND(rt1.c1)))OR(v0.c0)))OR(rt1.c2)))OR(t0.c59)), CAST(rt1.c3 AS INTEGER), CASE v0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN 0xffffffff9eb64afb THEN t0.c39 WHEN rt1.c3 THEN '1635827757' ELSE rt1.c2 END)))) ORDER BY (((rt1.c1)) BETWEEN ((json_array_length(rt1.c3, t0.c59))) AND ((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(t0.c59)))AND(5.6987572E8)))));
SELECT * FROM t0 WHERE (((((0.45659318494346657)AND(json_insert(t0.c59, t0.c59, t0.c59))))OR((t0.c59 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.45659318494346657)AND(json_insert(t0.c59, t0.c59, t0.c59))))OR((t0.c59 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((0.45659318494346657)AND(json_insert(t0.c59, t0.c59, t0.c59))))OR((t0.c59 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.45659318494346657)AND(json_insert(t0.c59, t0.c59, t0.c59))))OR((t0.c59 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((0.45659318494346657)AND(json_insert(t0.c59, t0.c59, t0.c59))))OR((t0.c59 IN ()))));
SELECT ALL * FROM rt1 INNER JOIN t0 ON rt1.c2 INNER JOIN v0 ON UPPER(0.6211778799375132) WHERE (CAST(CAST(rt1.c3 AS INTEGER) AS BLOB)) ORDER BY SUBSTR((t0.c59 IN ()), CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN rt1.c2 WHEN t0.c59 THEN rt1.c1 END) DESC  NULLS LAST, CAST(rt1.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c3 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON rt1.c2 INNER JOIN v0 ON UPPER(0.6211778799375132) ORDER BY SUBSTR((t0.c59 IN ()), CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN rt1.c2 WHEN t0.c59 THEN rt1.c1 END) DESC  NULLS LAST, CAST(rt1.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 INNER JOIN t0 ON rt1.c2 INNER JOIN v0 ON UPPER(0.6211778799375132) WHERE (CAST(CAST(rt1.c3 AS INTEGER) AS BLOB)) ORDER BY SUBSTR((t0.c59 IN ()), CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN rt1.c2 WHEN t0.c59 THEN rt1.c1 END) DESC  NULLS LAST, CAST(rt1.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c3 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON rt1.c2 INNER JOIN v0 ON UPPER(0.6211778799375132) ORDER BY SUBSTR((t0.c59 IN ()), CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN rt1.c2 WHEN t0.c59 THEN rt1.c1 END) DESC  NULLS LAST, CAST(rt1.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 INNER JOIN t0 ON rt1.c2 INNER JOIN v0 ON UPPER(0.6211778799375132) WHERE (CAST(CAST(rt1.c3 AS INTEGER) AS BLOB)) ORDER BY SUBSTR((t0.c59 IN ()), CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN rt1.c2 WHEN t0.c59 THEN rt1.c1 END) DESC  NULLS LAST, CAST(rt1.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (v0.c0) ORDER BY ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt1, v0 ORDER BY ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (v0.c0) ORDER BY ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt1, v0 ORDER BY ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (v0.c0) ORDER BY ((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE NOCASE COLLATE NOCASE;
SELECT ALL * FROM rt1, v0 WHERE (((((((((((rt1.c2)||(rt1.c1)))AND(-2.136183997E9)))AND(rt1.c2 COLLATE RTRIM)))AND(CAST(rt1.c2 AS INTEGER))))OR(((rt1.c3) BETWEEN (rt1.c3) AND (v0.c0))))) ORDER BY (((0.10815745190101023)%(v0.c0)) IN ((- (v0.c0)), NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)||(rt1.c1)))AND(-2.136183997E9)))AND(rt1.c2 COLLATE RTRIM)))AND(CAST(rt1.c2 AS INTEGER))))OR(((rt1.c3) BETWEEN (rt1.c3) AND (v0.c0))))) IS TRUE)  as count FROM rt1, v0 ORDER BY (((0.10815745190101023)%(v0.c0)) IN ((- (v0.c0)), NULL)) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (((((((((((rt1.c2)||(rt1.c1)))AND(-2.136183997E9)))AND(rt1.c2 COLLATE RTRIM)))AND(CAST(rt1.c2 AS INTEGER))))OR(((rt1.c3) BETWEEN (rt1.c3) AND (v0.c0))))) ORDER BY (((0.10815745190101023)%(v0.c0)) IN ((- (v0.c0)), NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)||(rt1.c1)))AND(-2.136183997E9)))AND(rt1.c2 COLLATE RTRIM)))AND(CAST(rt1.c2 AS INTEGER))))OR(((rt1.c3) BETWEEN (rt1.c3) AND (v0.c0))))) IS TRUE)  as count FROM rt1, v0 ORDER BY (((0.10815745190101023)%(v0.c0)) IN ((- (v0.c0)), NULL)) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (((((((((((rt1.c2)||(rt1.c1)))AND(-2.136183997E9)))AND(rt1.c2 COLLATE RTRIM)))AND(CAST(rt1.c2 AS INTEGER))))OR(((rt1.c3) BETWEEN (rt1.c3) AND (v0.c0))))) ORDER BY (((0.10815745190101023)%(v0.c0)) IN ((- (v0.c0)), NULL)) ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (DATETIME(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c39)), ((t0.c39)<=(t0.c59)), ((t0.c59)&(t0.c59))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c39)), ((t0.c39)<=(t0.c59)), ((t0.c59)&(t0.c59)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (DATETIME(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c39)), ((t0.c39)<=(t0.c59)), ((t0.c59)&(t0.c59))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c39)), ((t0.c39)<=(t0.c59)), ((t0.c59)&(t0.c59)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (DATETIME(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c39)), ((t0.c39)<=(t0.c59)), ((t0.c59)&(t0.c59))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN UNLIKELY(DISTINCT v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN UNLIKELY(DISTINCT v0.c0) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN UNLIKELY(DISTINCT v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN UNLIKELY(DISTINCT v0.c0) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN UNLIKELY(DISTINCT v0.c0) END);
SELECT * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT * FROM t0 WHERE ((((((t0.c59)|(t0.c39)), ((t0.c59)LIKE(0xfffffffff98f4fd2)), (+ (t0.c59))))==((CASE t0.c59  WHEN '1916151825' THEN 0.1934430889861345 ELSE t0.c59 END, (((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((t0.c39))), NULL COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((t0.c59)|(t0.c39)), ((t0.c59)LIKE(0Xfffffffff98f4fd2)), (+ (t0.c59))))=((CASE t0.c59  WHEN '1916151825' THEN 0.1934430889861345 ELSE t0.c59 END, (((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((t0.c39))), NULL COLLATE RTRIM)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c59)|(t0.c39)), ((t0.c59)LIKE(0xfffffffff98f4fd2)), (+ (t0.c59))))==((CASE t0.c59  WHEN '1916151825' THEN 0.1934430889861345 ELSE t0.c59 END, (((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((t0.c39))), NULL COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((t0.c59)|(t0.c39)), ((t0.c59)LIKE(0Xfffffffff98f4fd2)), (+ (t0.c59))))=((CASE t0.c59  WHEN '1916151825' THEN 0.1934430889861345 ELSE t0.c59 END, (((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((t0.c39))), NULL COLLATE RTRIM)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c59)|(t0.c39)), ((t0.c59)LIKE(0xfffffffff98f4fd2)), (+ (t0.c59))))==((CASE t0.c59  WHEN '1916151825' THEN 0.1934430889861345 ELSE t0.c59 END, (((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((t0.c39))), NULL COLLATE RTRIM))));
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)>=(rt1.c3))) ORDER BY ((rt1.c3)%(rt1.c3)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE BINARY)>=(rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c3)%(rt1.c3)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)>=(rt1.c3))) ORDER BY ((rt1.c3)%(rt1.c3)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE BINARY)>=(rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c3)%(rt1.c3)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)>=(rt1.c3))) ORDER BY ((rt1.c3)%(rt1.c3)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS TEXT));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (rtreenode(((((rt1.c2)OR(t0.c59)))OR(rt1.c3)), ((t0.c39) BETWEEN (t0.c39) AND ('-1614929118')))) ORDER BY CASE (NOT (rt1.c2))  WHEN rt1.c3 COLLATE NOCASE THEN (NOT ('歃6)*x&uDF')) WHEN LIKE(rt1.c1, rt1.c3, 'M') THEN CASE WHEN rt1.c3 THEN t0.c39 ELSE rt1.c3 END WHEN (((rt1.c3)) NOT BETWEEN ((x'6a3d')) AND ((rt1.c1))) THEN rt1.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((((rt1.c2)OR(t0.c59)))OR(rt1.c3)), ((t0.c39) BETWEEN (t0.c39) AND ('-1614929118')))) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE (NOT (rt1.c2))  WHEN rt1.c3 COLLATE NOCASE THEN (NOT ('歃6)*x&uDF')) WHEN LIKE(rt1.c1, rt1.c3, 'M') THEN CASE WHEN rt1.c3 THEN t0.c39 ELSE rt1.c3 END WHEN (((rt1.c3)) NOT BETWEEN ((x'6a3d')) AND ((rt1.c1))) THEN rt1.c2 END DESC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (rtreenode(((((rt1.c2)OR(t0.c59)))OR(rt1.c3)), ((t0.c39) BETWEEN (t0.c39) AND ('-1614929118')))) ORDER BY CASE (NOT (rt1.c2))  WHEN rt1.c3 COLLATE NOCASE THEN (NOT ('歃6)*x&uDF')) WHEN LIKE(rt1.c1, rt1.c3, 'M') THEN CASE WHEN rt1.c3 THEN t0.c39 ELSE rt1.c3 END WHEN (((rt1.c3)) NOT BETWEEN ((x'6a3d')) AND ((rt1.c1))) THEN rt1.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((((rt1.c2)OR(t0.c59)))OR(rt1.c3)), ((t0.c39) BETWEEN (t0.c39) AND ('-1614929118')))) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE (NOT (rt1.c2))  WHEN rt1.c3 COLLATE NOCASE THEN (NOT ('歃6)*x&uDF')) WHEN LIKE(rt1.c1, rt1.c3, 'M') THEN CASE WHEN rt1.c3 THEN t0.c39 ELSE rt1.c3 END WHEN (((rt1.c3)) NOT BETWEEN ((x'6a3d')) AND ((rt1.c1))) THEN rt1.c2 END DESC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (rtreenode(((((rt1.c2)OR(t0.c59)))OR(rt1.c3)), ((t0.c39) BETWEEN (t0.c39) AND ('-1614929118')))) ORDER BY CASE (NOT (rt1.c2))  WHEN rt1.c3 COLLATE NOCASE THEN (NOT ('歃6)*x&uDF')) WHEN LIKE(rt1.c1, rt1.c3, 'M') THEN CASE WHEN rt1.c3 THEN t0.c39 ELSE rt1.c3 END WHEN (((rt1.c3)) NOT BETWEEN ((x'6a3d')) AND ((rt1.c1))) THEN rt1.c2 END DESC;
SELECT ALL * FROM rt1 LEFT OUTER JOIN v0 ON (('0.7851378000204686')<<(CAST(rt1.c3 AS INTEGER))) LEFT OUTER JOIN t0 ON NULL WHERE ('645596883');
SELECT SUM(count) FROM (SELECT (('645596883') IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON (('0.7851378000204686')<<(CAST(rt1.c3 AS INTEGER))) LEFT OUTER JOIN t0 ON NULL);
SELECT ALL * FROM rt1 LEFT OUTER JOIN v0 ON (('0.7851378000204686')<<(CAST(rt1.c3 AS INTEGER))) LEFT OUTER JOIN t0 ON NULL WHERE ('645596883');
SELECT SUM(count) FROM (SELECT (('645596883') IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON (('0.7851378000204686')<<(CAST(rt1.c3 AS INTEGER))) LEFT OUTER JOIN t0 ON NULL);
SELECT ALL * FROM rt1 LEFT OUTER JOIN v0 ON (('0.7851378000204686')<<(CAST(rt1.c3 AS INTEGER))) LEFT OUTER JOIN t0 ON NULL WHERE ('645596883');
SELECT ALL * FROM v0, t0, rt1 WHERE ((~ (((((rt1.c1)AND(0.7441618838281517)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt1.c1)AND(0.7441618838281517)))AND(rt1.c2))))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL * FROM v0, t0, rt1 WHERE ((~ (((((rt1.c1)AND(0.7441618838281517)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt1.c1)AND(0.7441618838281517)))AND(rt1.c2))))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL * FROM v0, t0, rt1 WHERE ((~ (((((rt1.c1)AND(0.7441618838281517)))AND(rt1.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c39) BETWEEN (t0.c39) AND (t0.c39))) BETWEEN (CAST(t0.c39 AS INTEGER)) AND (CASE WHEN t0.c39 THEN t0.c59 WHEN t0.c39 THEN t0.c59 WHEN x'' THEN t0.c39 END))) ORDER BY (((t0.c39) BETWEEN (t0.c39) AND (t0.c59)) IN ()), load_extension(((t0.c39) BETWEEN (t0.c39) AND (t0.c59))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c39) BETWEEN (t0.c39) AND (t0.c39))) BETWEEN (CAST(t0.c39 AS INTEGER)) AND (CASE WHEN t0.c39 THEN t0.c59 WHEN t0.c39 THEN t0.c59 WHEN x'' THEN t0.c39 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c39) BETWEEN (t0.c39) AND (t0.c59)) IN ()), load_extension(((t0.c39) BETWEEN (t0.c39) AND (t0.c59))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c39) BETWEEN (t0.c39) AND (t0.c39))) BETWEEN (CAST(t0.c39 AS INTEGER)) AND (CASE WHEN t0.c39 THEN t0.c59 WHEN t0.c39 THEN t0.c59 WHEN x'' THEN t0.c39 END))) ORDER BY (((t0.c39) BETWEEN (t0.c39) AND (t0.c59)) IN ()), load_extension(((t0.c39) BETWEEN (t0.c39) AND (t0.c59))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c39) BETWEEN (t0.c39) AND (t0.c39))) BETWEEN (CAST(t0.c39 AS INTEGER)) AND (CASE WHEN t0.c39 THEN t0.c59 WHEN t0.c39 THEN t0.c59 WHEN x'' THEN t0.c39 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c39) BETWEEN (t0.c39) AND (t0.c59)) IN ()), load_extension(((t0.c39) BETWEEN (t0.c39) AND (t0.c59))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c39) BETWEEN (t0.c39) AND (t0.c39))) BETWEEN (CAST(t0.c39 AS INTEGER)) AND (CASE WHEN t0.c39 THEN t0.c59 WHEN t0.c39 THEN t0.c59 WHEN x'' THEN t0.c39 END))) ORDER BY (((t0.c39) BETWEEN (t0.c39) AND (t0.c59)) IN ()), load_extension(((t0.c39) BETWEEN (t0.c39) AND (t0.c59))) DESC;
SELECT * FROM v0, rt1 NATURAL JOIN t0 WHERE (CASE WHEN (((rt1.c0)) BETWEEN ((NULL)) AND ((rt1.c3))) THEN ((rt1.c3) NOT BETWEEN ('-180787981') AND (v0.c0)) ELSE rt1.c3 END) ORDER BY ((((rt1.c1)LIKE(rt1.c1)))!=(t0.c59))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c0)) BETWEEN ((NULL)) AND ((rt1.c3))) THEN ((rt1.c3) NOT BETWEEN ('-180787981') AND (v0.c0)) ELSE rt1.c3 END) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN t0 ORDER BY ((((rt1.c1)LIKE(rt1.c1)))!=(t0.c59))  NULLS LAST);
SELECT * FROM v0, rt1 NATURAL JOIN t0 WHERE (CASE WHEN (((rt1.c0)) BETWEEN ((NULL)) AND ((rt1.c3))) THEN ((rt1.c3) NOT BETWEEN ('-180787981') AND (v0.c0)) ELSE rt1.c3 END) ORDER BY ((((rt1.c1)LIKE(rt1.c1)))!=(t0.c59))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c0)) BETWEEN ((NULL)) AND ((rt1.c3))) THEN ((rt1.c3) NOT BETWEEN ('-180787981') AND (v0.c0)) ELSE rt1.c3 END) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN t0 ORDER BY ((((rt1.c1)LIKE(rt1.c1)))!=(t0.c59))  NULLS LAST);
SELECT * FROM v0, rt1 NATURAL JOIN t0 WHERE (CASE WHEN (((rt1.c0)) BETWEEN ((NULL)) AND ((rt1.c3))) THEN ((rt1.c3) NOT BETWEEN ('-180787981') AND (v0.c0)) ELSE rt1.c3 END) ORDER BY ((((rt1.c1)LIKE(rt1.c1)))!=(t0.c59))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (-91775725) ORDER BY CAST(0.6305577889300427 AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((-91775725) IS TRUE)  as count FROM v0 ORDER BY CAST(0.6305577889300427 AS REAL) ASC);
SELECT ALL * FROM v0 WHERE (-91775725) ORDER BY CAST(0.6305577889300427 AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((-91775725) IS TRUE)  as count FROM v0 ORDER BY CAST(0.6305577889300427 AS REAL) ASC);
SELECT ALL * FROM v0 WHERE (-91775725) ORDER BY CAST(0.6305577889300427 AS REAL) ASC;
SELECT COUNT(*) FROM rt1 NATURAL JOIN v0 WHERE (TRIM(((x'') BETWEEN (rt1.c1) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((x'') BETWEEN (rt1.c1) AND (v0.c0)))) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN v0 WHERE (TRIM(((x'') BETWEEN (rt1.c1) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((x'') BETWEEN (rt1.c1) AND (v0.c0)))) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN v0 WHERE (TRIM(((x'') BETWEEN (rt1.c1) AND (v0.c0))));
SELECT ALL * FROM t0, v0, rt1 WHERE ((~ ((t0.c59 IN ())))) ORDER BY ((CAST(x'' AS BLOB))/((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c59 IN ())))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY ((CAST(x'' AS BLOB))/((v0.c0 IN ()))));
SELECT ALL * FROM t0, v0, rt1 WHERE ((~ ((t0.c59 IN ())))) ORDER BY ((CAST(x'' AS BLOB))/((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c59 IN ())))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY ((CAST(x'' AS BLOB))/((v0.c0 IN ()))));
SELECT ALL * FROM t0, v0, rt1 WHERE ((~ ((t0.c59 IN ())))) ORDER BY ((CAST(x'' AS BLOB))/((v0.c0 IN ())));
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN ()), v0.c0, 0.7382845449099239)) AND ((LIKELY(v0.c0), ((((v0.c0)OR(v0.c0)))AND(x'')), ''))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN ()), v0.c0, 0.7382845449099239)) AND ((LIKELY(v0.c0), ((((v0.c0)OR(v0.c0)))AND(x'')), '')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN ()), v0.c0, 0.7382845449099239)) AND ((LIKELY(v0.c0), ((((v0.c0)OR(v0.c0)))AND(x'')), ''))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN ()), v0.c0, 0.7382845449099239)) AND ((LIKELY(v0.c0), ((((v0.c0)OR(v0.c0)))AND(x'')), '')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN ()), v0.c0, 0.7382845449099239)) AND ((LIKELY(v0.c0), ((((v0.c0)OR(v0.c0)))AND(x'')), ''))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((-7.50095102E8)>>(t0.c59 COLLATE NOCASE))) ORDER BY CASE (('')>(t0.c39))  WHEN ROUND(t0.c59, t0.c59) THEN '1612682232' WHEN ((t0.c39) ISNULL) THEN t0.c59 WHEN json_array_length(t0.c59) THEN -7.14358108E8 ELSE t0.c59 COLLATE NOCASE END, t0.c39 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-7.50095102E8)>>(t0.c59 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY CASE (('')>(t0.c39))  WHEN ROUND(t0.c59, t0.c59) THEN '1612682232' WHEN ((t0.c39) ISNULL) THEN t0.c59 WHEN json_array_length(t0.c59) THEN -7.14358108E8 ELSE t0.c59 COLLATE NOCASE END, t0.c39 COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((-7.50095102E8)>>(t0.c59 COLLATE NOCASE))) ORDER BY CASE (('')>(t0.c39))  WHEN ROUND(t0.c59, t0.c59) THEN '1612682232' WHEN ((t0.c39) ISNULL) THEN t0.c59 WHEN json_array_length(t0.c59) THEN -7.14358108E8 ELSE t0.c59 COLLATE NOCASE END, t0.c39 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-7.50095102E8)>>(t0.c59 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY CASE (('')>(t0.c39))  WHEN ROUND(t0.c59, t0.c59) THEN '1612682232' WHEN ((t0.c39) ISNULL) THEN t0.c59 WHEN json_array_length(t0.c59) THEN -7.14358108E8 ELSE t0.c59 COLLATE NOCASE END, t0.c39 COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((-7.50095102E8)>>(t0.c59 COLLATE NOCASE))) ORDER BY CASE (('')>(t0.c39))  WHEN ROUND(t0.c59, t0.c59) THEN '1612682232' WHEN ((t0.c39) ISNULL) THEN t0.c59 WHEN json_array_length(t0.c59) THEN -7.14358108E8 ELSE t0.c59 COLLATE NOCASE END, t0.c39 COLLATE BINARY  NULLS LAST;
SELECT * FROM rt1, v0 WHERE (0.8343268598891334) ORDER BY CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c1 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((0.8343268598891334) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c1 END COLLATE BINARY DESC);
SELECT * FROM rt1, v0 WHERE (0.8343268598891334) ORDER BY CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c1 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((0.8343268598891334) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c1 END COLLATE BINARY DESC);
SELECT * FROM rt1, v0 WHERE (0.8343268598891334) ORDER BY CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c1 END COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((((t0.c59, t0.c59, t0.c59)) NOT BETWEEN ((t0.c39, t0.c59, 0.7903309216251037)) AND ((t0.c39, NULL, t0.c39))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t0.c59, t0.c59, t0.c59)) NOT BETWEEN ((t0.c39, t0.c59, 0.7903309216251037)) AND ((t0.c39, NULL, t0.c39)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((((t0.c59, t0.c59, t0.c59)) NOT BETWEEN ((t0.c39, t0.c59, 0.7903309216251037)) AND ((t0.c39, NULL, t0.c39))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t0.c59, t0.c59, t0.c59)) NOT BETWEEN ((t0.c39, t0.c59, 0.7903309216251037)) AND ((t0.c39, NULL, t0.c39)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((((t0.c59, t0.c59, t0.c59)) NOT BETWEEN ((t0.c39, t0.c59, 0.7903309216251037)) AND ((t0.c39, NULL, t0.c39))))));
SELECT ALL * FROM t0, v0 WHERE ((- ((v0.c0 IN ())))) ORDER BY v0.c0, (((v0.c0)) NOT BETWEEN ((((NULL) NOT BETWEEN (t0.c59) AND (t0.c39)))) AND ((((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0, (((v0.c0)) NOT BETWEEN ((((NULL) NOT BETWEEN (t0.c59) AND (t0.c39)))) AND ((((v0.c0) NOTNULL)))));
SELECT ALL * FROM t0, v0 WHERE ((- ((v0.c0 IN ())))) ORDER BY v0.c0, (((v0.c0)) NOT BETWEEN ((((NULL) NOT BETWEEN (t0.c59) AND (t0.c39)))) AND ((((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0, (((v0.c0)) NOT BETWEEN ((((NULL) NOT BETWEEN (t0.c59) AND (t0.c39)))) AND ((((v0.c0) NOTNULL)))));
SELECT ALL * FROM t0, v0 WHERE ((- ((v0.c0 IN ())))) ORDER BY v0.c0, (((v0.c0)) NOT BETWEEN ((((NULL) NOT BETWEEN (t0.c59) AND (t0.c39)))) AND ((((v0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM t0, rt1, v0);
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM t0, rt1, v0);
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE (rt1.c1);
SELECT ALL * FROM rt1, t0 WHERE (((((0.20437678410954663)|(rt1.c3))) BETWEEN (((((x'')AND(rt1.c1)))AND(rt1.c0))) AND (CASE 0Xffffffff8399ac85  WHEN rt1.c2 THEN t0.c39 END)));
SELECT SUM(count) FROM (SELECT ((((((0.20437678410954663)|(rt1.c3))) BETWEEN (((((x'')AND(rt1.c1)))AND(rt1.c0))) AND (CASE 0xffffffff8399ac85  WHEN rt1.c2 THEN t0.c39 END))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((((0.20437678410954663)|(rt1.c3))) BETWEEN (((((x'')AND(rt1.c1)))AND(rt1.c0))) AND (CASE 0Xffffffff8399ac85  WHEN rt1.c2 THEN t0.c39 END)));
SELECT SUM(count) FROM (SELECT ((((((0.20437678410954663)|(rt1.c3))) BETWEEN (((((x'')AND(rt1.c1)))AND(rt1.c0))) AND (CASE 0xffffffff8399ac85  WHEN rt1.c2 THEN t0.c39 END))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((((0.20437678410954663)|(rt1.c3))) BETWEEN (((((x'')AND(rt1.c1)))AND(rt1.c0))) AND (CASE 0Xffffffff8399ac85  WHEN rt1.c2 THEN t0.c39 END)));
SELECT COUNT(*) FROM v0, rt1, t0 WHERE ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) IN (((((((((t0.c39)AND(v0.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)), ((t0.c39)<(rt1.c1))))) ORDER BY CAST(CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN rt1.c1 WHEN t0.c39 THEN t0.c39 ELSE rt1.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) IN (((((((((t0.c39)AND(v0.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)), ((t0.c39)<(rt1.c1))))) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY CAST(CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN rt1.c1 WHEN t0.c39 THEN t0.c39 ELSE rt1.c0 END AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, t0 WHERE ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) IN (((((((((t0.c39)AND(v0.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)), ((t0.c39)<(rt1.c1))))) ORDER BY CAST(CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN rt1.c1 WHEN t0.c39 THEN t0.c39 ELSE rt1.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) IN (((((((((t0.c39)AND(v0.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)), ((t0.c39)<(rt1.c1))))) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY CAST(CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN rt1.c1 WHEN t0.c39 THEN t0.c39 ELSE rt1.c0 END AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, t0 WHERE ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) IN (((((((((t0.c39)AND(v0.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)), ((t0.c39)<(rt1.c1))))) ORDER BY CAST(CASE WHEN rt1.c1 THEN v0.c0 WHEN v0.c0 THEN rt1.c1 WHEN t0.c39 THEN t0.c39 ELSE rt1.c0 END AS NUMERIC) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (CAST(((v0.c0) ISNULL) AS NUMERIC)) ORDER BY CAST(CAST(t0.c39 AS NUMERIC) AS BLOB), rt1.c0 DESC, (('1573123522')IS(CASE WHEN v0.c0 THEN rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY CAST(CAST(t0.c39 AS NUMERIC) AS BLOB), rt1.c0 DESC, (('1573123522')IS(CASE WHEN v0.c0 THEN rt1.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (CAST(((v0.c0) ISNULL) AS NUMERIC)) ORDER BY CAST(CAST(t0.c39 AS NUMERIC) AS BLOB), rt1.c0 DESC, (('1573123522')IS(CASE WHEN v0.c0 THEN rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY CAST(CAST(t0.c39 AS NUMERIC) AS BLOB), rt1.c0 DESC, (('1573123522')IS(CASE WHEN v0.c0 THEN rt1.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (CAST(((v0.c0) ISNULL) AS NUMERIC)) ORDER BY CAST(CAST(t0.c39 AS NUMERIC) AS BLOB), rt1.c0 DESC, (('1573123522')IS(CASE WHEN v0.c0 THEN rt1.c2 END))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN v0 ON (((NOT (rt1.c0))) NOT NULL) WHERE (((((((t0.c59))<((t0.c39)))))<=((CASE WHEN rt1.c2 THEN NULL WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)))) ORDER BY ((NULLIF('?\rlylF^', rt1.c2)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c59))<((t0.c39)))))<=((CASE WHEN rt1.c2 THEN NULL WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)))) IS TRUE)  as count FROM rt1, t0 CROSS JOIN v0 ON (((NOT (rt1.c0))) NOT NULL) ORDER BY ((NULLIF('?\rlylF^', rt1.c2)) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN v0 ON (((NOT (rt1.c0))) NOT NULL) WHERE (((((((t0.c59))<((t0.c39)))))<=((CASE WHEN rt1.c2 THEN NULL WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)))) ORDER BY ((NULLIF('?\rlylF^', rt1.c2)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c59))<((t0.c39)))))<=((CASE WHEN rt1.c2 THEN NULL WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)))) IS TRUE)  as count FROM rt1, t0 CROSS JOIN v0 ON (((NOT (rt1.c0))) NOT NULL) ORDER BY ((NULLIF('?\rlylF^', rt1.c2)) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN v0 ON (((NOT (rt1.c0))) NOT NULL) WHERE (((((((t0.c59))<((t0.c39)))))<=((CASE WHEN rt1.c2 THEN NULL WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)))) ORDER BY ((NULLIF('?\rlylF^', rt1.c2)) IS TRUE) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE ('-854160967') ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (('-854160967') IS TRUE)  as count FROM rt1 ORDER BY x'' ASC);
SELECT * FROM rt1 WHERE ('-854160967') ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (('-854160967') IS TRUE)  as count FROM rt1 ORDER BY x'' ASC);
SELECT * FROM rt1 WHERE ('-854160967') ORDER BY x'' ASC;
SELECT * FROM rt1 WHERE (HEX(DISTINCT 0.8980562247112991)) ORDER BY CAST(rt1.c0 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT 0.8980562247112991)) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 COLLATE NOCASE AS BLOB));
SELECT * FROM rt1 WHERE (HEX(DISTINCT 0.8980562247112991)) ORDER BY CAST(rt1.c0 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT 0.8980562247112991)) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 COLLATE NOCASE AS BLOB));
SELECT * FROM rt1 WHERE (HEX(DISTINCT 0.8980562247112991)) ORDER BY CAST(rt1.c0 COLLATE NOCASE AS BLOB);
SELECT ALL * FROM t0, rt1 WHERE ((NOT (((t0.c39) ISNULL)))) ORDER BY ((CASE WHEN rt1.c0 THEN t0.c59 END)LIKE((rt1.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c39) ISNULL)))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((CASE WHEN rt1.c0 THEN t0.c59 END)LIKE((rt1.c2 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE ((NOT (((t0.c39) ISNULL)))) ORDER BY ((CASE WHEN rt1.c0 THEN t0.c59 END)LIKE((rt1.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c39) ISNULL)))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((CASE WHEN rt1.c0 THEN t0.c59 END)LIKE((rt1.c2 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE ((NOT (((t0.c39) ISNULL)))) ORDER BY ((CASE WHEN rt1.c0 THEN t0.c59 END)LIKE((rt1.c2 IN ()))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((IFNULL(rt1.c2, NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(rt1.c2, NULL) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((IFNULL(rt1.c2, NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(rt1.c2, NULL) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((IFNULL(rt1.c2, NULL) IN ()));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((((t0.c59) BETWEEN (t0.c59) AND (t0.c59)))*(((((0.9412401011391422)OR(v0.c0)))OR(t0.c59)))) WHERE (((x'') NOT BETWEEN (RTRIM(t0.c59)) AND (((t0.c39)>(t0.c59))))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS REAL) ASC  NULLS LAST, CAST(((v0.c0)>>(t0.c59)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (RTRIM(t0.c59)) AND (((t0.c39)>(t0.c59))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((t0.c59) BETWEEN (t0.c59) AND (t0.c59)))*(((((0.9412401011391422)OR(v0.c0)))OR(t0.c59)))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS REAL) ASC  NULLS LAST, CAST(((v0.c0)>>(t0.c59)) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((((t0.c59) BETWEEN (t0.c59) AND (t0.c59)))*(((((0.9412401011391422)OR(v0.c0)))OR(t0.c59)))) WHERE (((x'') NOT BETWEEN (RTRIM(t0.c59)) AND (((t0.c39)>(t0.c59))))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS REAL) ASC  NULLS LAST, CAST(((v0.c0)>>(t0.c59)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (RTRIM(t0.c59)) AND (((t0.c39)>(t0.c59))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((t0.c59) BETWEEN (t0.c59) AND (t0.c59)))*(((((0.9412401011391422)OR(v0.c0)))OR(t0.c59)))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS REAL) ASC  NULLS LAST, CAST(((v0.c0)>>(t0.c59)) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((((t0.c59) BETWEEN (t0.c59) AND (t0.c59)))*(((((0.9412401011391422)OR(v0.c0)))OR(t0.c59)))) WHERE (((x'') NOT BETWEEN (RTRIM(t0.c59)) AND (((t0.c39)>(t0.c59))))) ORDER BY CAST(CAST(v0.c0 AS REAL) AS REAL) ASC  NULLS LAST, CAST(((v0.c0)>>(t0.c59)) AS NUMERIC) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)-(v0.c0))) NOT BETWEEN (NULL) AND ((((v0.c0))<((1732762521)))))) ORDER BY ((CAST(v0.c0 AS TEXT))IS NOT((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)-(v0.c0))) NOT BETWEEN (NULL) AND ((((v0.c0))<((1732762521)))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT))IS NOT((v0.c0 IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)-(v0.c0))) NOT BETWEEN (NULL) AND ((((v0.c0))<((1732762521)))))) ORDER BY ((CAST(v0.c0 AS TEXT))IS NOT((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)-(v0.c0))) NOT BETWEEN (NULL) AND ((((v0.c0))<((1732762521)))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT))IS NOT((v0.c0 IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)-(v0.c0))) NOT BETWEEN (NULL) AND ((((v0.c0))<((1732762521)))))) ORDER BY ((CAST(v0.c0 AS TEXT))IS NOT((v0.c0 IN ())));
SELECT ALL * FROM rt1, v0, t0 WHERE ((((((t0.c39) BETWEEN (rt1.c1) AND (t0.c39))))>=((((rt1.c2)||(rt1.c2)))))) ORDER BY CASE ((((((((((((rt1.c1)AND(rt1.c0)))OR(v0.c0)))OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))  WHEN ((rt1.c2)>(t0.c39)) THEN ((t0.c59) IS TRUE) WHEN rt1.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN ((rt1.c2)>>(rt1.c2)) THEN ((t0.c59)%(t0.c59)) ELSE ((v0.c0) NOT NULL) END  NULLS FIRST, ((((((rt1.c3)AND(t0.c39)))AND(rt1.c3))) NOTNULL) DESC, (((((1139200484, rt1.c1, rt1.c3))<>((rt1.c3, v0.c0, NULL))))-(((rt1.c1)+(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c39) BETWEEN (rt1.c1) AND (t0.c39))))>=((((rt1.c2)||(rt1.c2)))))) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY CASE ((((((((((((rt1.c1)AND(rt1.c0)))OR(v0.c0)))OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))  WHEN ((rt1.c2)>(t0.c39)) THEN ((t0.c59) IS TRUE) WHEN rt1.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN ((rt1.c2)>>(rt1.c2)) THEN ((t0.c59)%(t0.c59)) ELSE ((v0.c0) NOT NULL) END  NULLS FIRST, ((((((rt1.c3)AND(t0.c39)))AND(rt1.c3))) NOTNULL) DESC, (((((1139200484, rt1.c1, rt1.c3))<>((rt1.c3, v0.c0, NULL))))-(((rt1.c1)+(rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1, v0, t0 WHERE ((((((t0.c39) BETWEEN (rt1.c1) AND (t0.c39))))>=((((rt1.c2)||(rt1.c2)))))) ORDER BY CASE ((((((((((((rt1.c1)AND(rt1.c0)))OR(v0.c0)))OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))  WHEN ((rt1.c2)>(t0.c39)) THEN ((t0.c59) IS TRUE) WHEN rt1.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN ((rt1.c2)>>(rt1.c2)) THEN ((t0.c59)%(t0.c59)) ELSE ((v0.c0) NOT NULL) END  NULLS FIRST, ((((((rt1.c3)AND(t0.c39)))AND(rt1.c3))) NOTNULL) DESC, (((((1139200484, rt1.c1, rt1.c3))<>((rt1.c3, v0.c0, NULL))))-(((rt1.c1)+(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c39) BETWEEN (rt1.c1) AND (t0.c39))))>=((((rt1.c2)||(rt1.c2)))))) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY CASE ((((((((((((rt1.c1)AND(rt1.c0)))OR(v0.c0)))OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))  WHEN ((rt1.c2)>(t0.c39)) THEN ((t0.c59) IS TRUE) WHEN rt1.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN ((rt1.c2)>>(rt1.c2)) THEN ((t0.c59)%(t0.c59)) ELSE ((v0.c0) NOT NULL) END  NULLS FIRST, ((((((rt1.c3)AND(t0.c39)))AND(rt1.c3))) NOTNULL) DESC, (((((1139200484, rt1.c1, rt1.c3))<>((rt1.c3, v0.c0, NULL))))-(((rt1.c1)+(rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1, v0, t0 WHERE ((((((t0.c39) BETWEEN (rt1.c1) AND (t0.c39))))>=((((rt1.c2)||(rt1.c2)))))) ORDER BY CASE ((((((((((((rt1.c1)AND(rt1.c0)))OR(v0.c0)))OR(rt1.c3)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))  WHEN ((rt1.c2)>(t0.c39)) THEN ((t0.c59) IS TRUE) WHEN rt1.c0 COLLATE RTRIM THEN (v0.c0 IN ()) WHEN ((rt1.c2)>>(rt1.c2)) THEN ((t0.c59)%(t0.c59)) ELSE ((v0.c0) NOT NULL) END  NULLS FIRST, ((((((rt1.c3)AND(t0.c39)))AND(rt1.c3))) NOTNULL) DESC, (((((1139200484, rt1.c1, rt1.c3))<>((rt1.c3, v0.c0, NULL))))-(((rt1.c1)+(rt1.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c59) ORDER BY CAST(((v0.c0) NOTNULL) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((v0.c0) NOTNULL) AS TEXT) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c59) ORDER BY CAST(((v0.c0) NOTNULL) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((v0.c0) NOTNULL) AS TEXT) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c59) ORDER BY CAST(((v0.c0) NOTNULL) AS TEXT) ASC;
SELECT ALL * FROM t0 WHERE ((((- (t0.c39)))|(CAST(t0.c39 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c39)))|(CAST(t0.c39 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c39)))|(CAST(t0.c39 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c39)))|(CAST(t0.c39 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c39)))|(CAST(t0.c39 AS NUMERIC))));
SELECT * FROM rt1 CROSS JOIN t0 ON (((((t0.c39, rt1.c2, t0.c59, rt1.c3, t0.c59)) BETWEEN ((t0.c59, rt1.c1, t0.c39, rt1.c1, t0.c59)) AND ((t0.c59, rt1.c0, rt1.c3, -1998591898, ''))))>>(UNLIKELY(v0.c0))) RIGHT OUTER JOIN v0 ON ((t0.c59 IN ()) IN ()) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((((t0.c39, rt1.c2, t0.c59, rt1.c3, t0.c59)) BETWEEN ((t0.c59, rt1.c1, t0.c39, rt1.c1, t0.c59)) AND ((t0.c59, rt1.c0, rt1.c3, -1998591898, ''))))>>(UNLIKELY(v0.c0))) RIGHT OUTER JOIN v0 ON ((t0.c59 IN ()) IN ()));
SELECT * FROM rt1 CROSS JOIN t0 ON (((((t0.c39, rt1.c2, t0.c59, rt1.c3, t0.c59)) BETWEEN ((t0.c59, rt1.c1, t0.c39, rt1.c1, t0.c59)) AND ((t0.c59, rt1.c0, rt1.c3, -1998591898, ''))))>>(UNLIKELY(v0.c0))) RIGHT OUTER JOIN v0 ON ((t0.c59 IN ()) IN ()) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((((t0.c39, rt1.c2, t0.c59, rt1.c3, t0.c59)) BETWEEN ((t0.c59, rt1.c1, t0.c39, rt1.c1, t0.c59)) AND ((t0.c59, rt1.c0, rt1.c3, -1998591898, ''))))>>(UNLIKELY(v0.c0))) RIGHT OUTER JOIN v0 ON ((t0.c59 IN ()) IN ()));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY json_remove(((v0.c0)*(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY json_remove(((v0.c0)*(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY json_remove(((v0.c0)*(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY json_remove(((v0.c0)*(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY json_remove(((v0.c0)*(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c3 THEN (~ (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c3 THEN (~ (NULL)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c3 THEN (~ (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c3 THEN (~ (NULL)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c3 THEN (~ (NULL)) END);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, t0.c59)) AND ((t0.c59, rt1.c1, t0.c59))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, t0.c59)) AND ((t0.c59, rt1.c1, t0.c59))) IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, t0.c59)) AND ((t0.c59, rt1.c1, t0.c59))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, t0.c59)) AND ((t0.c59, rt1.c1, t0.c59))) IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, t0.c59)) AND ((t0.c59, rt1.c1, t0.c59))) IN ()));
SELECT ALL * FROM v0, rt1, t0 WHERE (LTRIM(((rt1.c3)<(t0.c39)))) ORDER BY (((((((v0.c0, rt1.c3, v0.c0))<((t0.c39, t0.c59, t0.c39))))AND(CAST(t0.c39 AS BLOB))))OR(0.1302098196607363)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt1.c3)<(t0.c39)))) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (((((((v0.c0, rt1.c3, v0.c0))<((t0.c39, t0.c59, t0.c39))))AND(CAST(t0.c39 AS BLOB))))OR(0.1302098196607363)) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt1, t0 WHERE (LTRIM(((rt1.c3)<(t0.c39)))) ORDER BY (((((((v0.c0, rt1.c3, v0.c0))<((t0.c39, t0.c59, t0.c39))))AND(CAST(t0.c39 AS BLOB))))OR(0.1302098196607363)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt1.c3)<(t0.c39)))) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (((((((v0.c0, rt1.c3, v0.c0))<((t0.c39, t0.c59, t0.c39))))AND(CAST(t0.c39 AS BLOB))))OR(0.1302098196607363)) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt1, t0 WHERE (LTRIM(((rt1.c3)<(t0.c39)))) ORDER BY (((((((v0.c0, rt1.c3, v0.c0))<((t0.c39, t0.c59, t0.c39))))AND(CAST(t0.c39 AS BLOB))))OR(0.1302098196607363)) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND ((x'' IN ())))) ORDER BY ((((((NULL)<>(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(CAST(v0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND ((x'' IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((((NULL)<>(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(CAST(v0.c0 AS REAL))) DESC);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND ((x'' IN ())))) ORDER BY ((((((NULL)<>(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(CAST(v0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND ((x'' IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((((NULL)<>(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(CAST(v0.c0 AS REAL))) DESC);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND ((x'' IN ())))) ORDER BY ((((((NULL)<>(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(CAST(v0.c0 AS REAL))) DESC;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON ((((CAST(rt1.c3 AS NUMERIC))AND(HEX(DISTINCT NULL))))OR((((rt1.c2, NULL, rt1.c2))<((rt1.c2, rt1.c2, '+糙l'))))) WHERE ((((v0.c0, rt1.c0, rt1.c2)) BETWEEN ((CAST(0Xffffffffb30dd3c9 AS NUMERIC), UNLIKELY(rt1.c0), x'')) AND ((((rt1.c3) BETWEEN (v0.c0) AND (v0.c0)), rtreenode(rt1.c1, 0.7924372575005132), x'3bdee732'))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt1.c0, rt1.c2)) BETWEEN ((CAST(0xffffffffb30dd3c9 AS NUMERIC), UNLIKELY(rt1.c0), x'')) AND ((((rt1.c3) BETWEEN (v0.c0) AND (v0.c0)), rtreenode(rt1.c1, 0.7924372575005132), x'3bdee732')))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((((CAST(rt1.c3 AS NUMERIC))AND(HEX(DISTINCT NULL))))OR((((rt1.c2, NULL, rt1.c2))<((rt1.c2, rt1.c2, '+糙l'))))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON ((((CAST(rt1.c3 AS NUMERIC))AND(HEX(DISTINCT NULL))))OR((((rt1.c2, NULL, rt1.c2))<((rt1.c2, rt1.c2, '+糙l'))))) WHERE ((((v0.c0, rt1.c0, rt1.c2)) BETWEEN ((CAST(0Xffffffffb30dd3c9 AS NUMERIC), UNLIKELY(rt1.c0), x'')) AND ((((rt1.c3) BETWEEN (v0.c0) AND (v0.c0)), rtreenode(rt1.c1, 0.7924372575005132), x'3bdee732'))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt1.c0, rt1.c2)) BETWEEN ((CAST(0xffffffffb30dd3c9 AS NUMERIC), UNLIKELY(rt1.c0), x'')) AND ((((rt1.c3) BETWEEN (v0.c0) AND (v0.c0)), rtreenode(rt1.c1, 0.7924372575005132), x'3bdee732')))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((((CAST(rt1.c3 AS NUMERIC))AND(HEX(DISTINCT NULL))))OR((((rt1.c2, NULL, rt1.c2))<((rt1.c2, rt1.c2, '+糙l'))))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON ((((CAST(rt1.c3 AS NUMERIC))AND(HEX(DISTINCT NULL))))OR((((rt1.c2, NULL, rt1.c2))<((rt1.c2, rt1.c2, '+糙l'))))) WHERE ((((v0.c0, rt1.c0, rt1.c2)) BETWEEN ((CAST(0Xffffffffb30dd3c9 AS NUMERIC), UNLIKELY(rt1.c0), x'')) AND ((((rt1.c3) BETWEEN (v0.c0) AND (v0.c0)), rtreenode(rt1.c1, 0.7924372575005132), x'3bdee732'))));
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (((((t0.c59)<=(rt1.c3)))&(((t0.c39)LIKE(rt1.c2))))) ORDER BY CASE WHEN CAST(rt1.c2 AS TEXT) THEN rt1.c1 COLLATE BINARY ELSE (t0.c39 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c59)<=(rt1.c3)))&(((t0.c39)LIKE(rt1.c2))))) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY CASE WHEN CAST(rt1.c2 AS TEXT) THEN rt1.c1 COLLATE BINARY ELSE (t0.c39 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (((((t0.c59)<=(rt1.c3)))&(((t0.c39)LIKE(rt1.c2))))) ORDER BY CASE WHEN CAST(rt1.c2 AS TEXT) THEN rt1.c1 COLLATE BINARY ELSE (t0.c39 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c59)<=(rt1.c3)))&(((t0.c39)LIKE(rt1.c2))))) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY CASE WHEN CAST(rt1.c2 AS TEXT) THEN rt1.c1 COLLATE BINARY ELSE (t0.c39 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (((((t0.c59)<=(rt1.c3)))&(((t0.c39)LIKE(rt1.c2))))) ORDER BY CASE WHEN CAST(rt1.c2 AS TEXT) THEN rt1.c1 COLLATE BINARY ELSE (t0.c39 IN ()) END  NULLS FIRST;
SELECT ALL * FROM v0, rt1, t0 WHERE (json_array((t0.c39 IN ()), ((rt1.c3)-(rt1.c2)), ((((rt1.c1)OR(rt1.c0)))OR(v0.c0)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE t0.c59 END));
SELECT SUM(count) FROM (SELECT ((json_array((t0.c39 IN ()), ((rt1.c3)-(rt1.c2)), ((((rt1.c1)OR(rt1.c0)))OR(v0.c0)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE t0.c59 END)) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL * FROM v0, rt1, t0 WHERE (json_array((t0.c39 IN ()), ((rt1.c3)-(rt1.c2)), ((((rt1.c1)OR(rt1.c0)))OR(v0.c0)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE t0.c59 END));
SELECT SUM(count) FROM (SELECT ((json_array((t0.c39 IN ()), ((rt1.c3)-(rt1.c2)), ((((rt1.c1)OR(rt1.c0)))OR(v0.c0)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE t0.c59 END)) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL * FROM v0, rt1, t0 WHERE (json_array((t0.c39 IN ()), ((rt1.c3)-(rt1.c2)), ((((rt1.c1)OR(rt1.c0)))OR(v0.c0)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE t0.c59 END));
SELECT * FROM t0 WHERE ((NOT ((t0.c59 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c59 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT ((t0.c59 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c59 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT ((t0.c59 IN ()))));
SELECT COUNT(*) FROM v0 WHERE (x'898d') ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (0.14443839473364273))));
SELECT SUM(count) FROM (SELECT ((x'898d') IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (0.14443839473364273)))));
SELECT COUNT(*) FROM v0 WHERE (x'898d') ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (0.14443839473364273))));
SELECT SUM(count) FROM (SELECT ((x'898d') IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (0.14443839473364273)))));
SELECT COUNT(*) FROM v0 WHERE (x'898d') ORDER BY ((v0.c0 COLLATE RTRIM) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (0.14443839473364273))));
SELECT * FROM t0 FULL OUTER JOIN rt1 ON (- (((rt1.c3) NOT NULL))) FULL OUTER JOIN v0 ON CASE WHEN (~ (rt1.c1)) THEN IFNULL(t0.c39, t0.c59) ELSE ((((rt1.c2)OR(rt1.c2)))OR(x'')) END WHERE ((((rt1.c0 COLLATE RTRIM))=((rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 COLLATE RTRIM))=((rt1.c3)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (- (((rt1.c3) NOT NULL))) FULL OUTER JOIN v0 ON CASE WHEN (~ (rt1.c1)) THEN IFNULL(t0.c39, t0.c59) ELSE ((((rt1.c2)OR(rt1.c2)))OR(x'')) END);
SELECT * FROM t0 FULL OUTER JOIN rt1 ON (- (((rt1.c3) NOT NULL))) FULL OUTER JOIN v0 ON CASE WHEN (~ (rt1.c1)) THEN IFNULL(t0.c39, t0.c59) ELSE ((((rt1.c2)OR(rt1.c2)))OR(x'')) END WHERE ((((rt1.c0 COLLATE RTRIM))=((rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 COLLATE RTRIM))=((rt1.c3)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (- (((rt1.c3) NOT NULL))) FULL OUTER JOIN v0 ON CASE WHEN (~ (rt1.c1)) THEN IFNULL(t0.c39, t0.c59) ELSE ((((rt1.c2)OR(rt1.c2)))OR(x'')) END);
SELECT * FROM t0 FULL OUTER JOIN rt1 ON (- (((rt1.c3) NOT NULL))) FULL OUTER JOIN v0 ON CASE WHEN (~ (rt1.c1)) THEN IFNULL(t0.c39, t0.c59) ELSE ((((rt1.c2)OR(rt1.c2)))OR(x'')) END WHERE ((((rt1.c0 COLLATE RTRIM))=((rt1.c3))));
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (rt1.c0) ORDER BY t0.c59;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY t0.c59);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (rt1.c0) ORDER BY t0.c59;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY t0.c59);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (rt1.c0) ORDER BY t0.c59;
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((NULLIF(DISTINCT rt1.c0, t0.c39) IN ())) ORDER BY (~ (((rt1.c0) ISNULL))) ASC  NULLS FIRST, ((rt1.c0 COLLATE NOCASE)IS(ABS(rt1.c3)));
SELECT SUM(count) FROM (SELECT (((NULLIF(DISTINCT rt1.c0, t0.c39) IN ())) IS TRUE)  as count FROM v0, t0 NOT INDEXED, rt1 ORDER BY (~ (((rt1.c0) ISNULL))) ASC  NULLS FIRST, ((rt1.c0 COLLATE NOCASE)IS(ABS(rt1.c3))));
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((NULLIF(DISTINCT rt1.c0, t0.c39) IN ())) ORDER BY (~ (((rt1.c0) ISNULL))) ASC  NULLS FIRST, ((rt1.c0 COLLATE NOCASE)IS(ABS(rt1.c3)));
SELECT SUM(count) FROM (SELECT (((NULLIF(DISTINCT rt1.c0, t0.c39) IN ())) IS TRUE)  as count FROM v0, t0 NOT INDEXED, rt1 ORDER BY (~ (((rt1.c0) ISNULL))) ASC  NULLS FIRST, ((rt1.c0 COLLATE NOCASE)IS(ABS(rt1.c3))));
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((NULLIF(DISTINCT rt1.c0, t0.c39) IN ())) ORDER BY (~ (((rt1.c0) ISNULL))) ASC  NULLS FIRST, ((rt1.c0 COLLATE NOCASE)IS(ABS(rt1.c3)));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON t0.c39 RIGHT OUTER JOIN v0 ON ((DATETIME(t0.c39, t0.c39, rt1.c1, rt1.c0, rt1.c1)) IS FALSE) WHERE (((((rt1.c1) NOTNULL))AND(CHAR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOTNULL))AND(CHAR(rt1.c0)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON t0.c39 RIGHT OUTER JOIN v0 ON ((DATETIME(t0.c39, t0.c39, rt1.c1, rt1.c0, rt1.c1)) IS FALSE));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON t0.c39 RIGHT OUTER JOIN v0 ON ((DATETIME(t0.c39, t0.c39, rt1.c1, rt1.c0, rt1.c1)) IS FALSE) WHERE (((((rt1.c1) NOTNULL))AND(CHAR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOTNULL))AND(CHAR(rt1.c0)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON t0.c39 RIGHT OUTER JOIN v0 ON ((DATETIME(t0.c39, t0.c39, rt1.c1, rt1.c0, rt1.c1)) IS FALSE));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON t0.c39 RIGHT OUTER JOIN v0 ON ((DATETIME(t0.c39, t0.c39, rt1.c1, rt1.c0, rt1.c1)) IS FALSE) WHERE (((((rt1.c1) NOTNULL))AND(CHAR(rt1.c0))));
SELECT ALL * FROM rt1 INNER JOIN v0 ON ((((((((t0.c59)AND(v0.c0)))OR(t0.c39)))OR(t0.c59)))AND(rt1.c1)) COLLATE RTRIM FULL OUTER JOIN t0 ON x'' WHERE ((~ (SQLITE_COMPILEOPTION_GET(rt1.c2)))) ORDER BY ((rt1.c1 COLLATE NOCASE)%(CAST(t0.c59 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_COMPILEOPTION_GET(rt1.c2)))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON ((((((((t0.c59)AND(v0.c0)))OR(t0.c39)))OR(t0.c59)))AND(rt1.c1)) COLLATE RTRIM FULL OUTER JOIN t0 ON x'' ORDER BY ((rt1.c1 COLLATE NOCASE)%(CAST(t0.c59 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM rt1 INNER JOIN v0 ON ((((((((t0.c59)AND(v0.c0)))OR(t0.c39)))OR(t0.c59)))AND(rt1.c1)) COLLATE RTRIM FULL OUTER JOIN t0 ON x'' WHERE ((~ (SQLITE_COMPILEOPTION_GET(rt1.c2)))) ORDER BY ((rt1.c1 COLLATE NOCASE)%(CAST(t0.c59 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_COMPILEOPTION_GET(rt1.c2)))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON ((((((((t0.c59)AND(v0.c0)))OR(t0.c39)))OR(t0.c59)))AND(rt1.c1)) COLLATE RTRIM FULL OUTER JOIN t0 ON x'' ORDER BY ((rt1.c1 COLLATE NOCASE)%(CAST(t0.c59 AS NUMERIC)))  NULLS LAST);
SELECT * FROM t0 WHERE ((NOT ((t0.c59 IN ())))) ORDER BY ((((t0.c39)%(0xffffffffec69acef)))%(((t0.c59) IS FALSE))) DESC  NULLS FIRST, ((((t0.c39)+(t0.c39)))GLOB(t0.c39 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c59 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c39)%(0xffffffffec69acef)))%(((t0.c59) IS FALSE))) DESC  NULLS FIRST, ((((t0.c39)+(t0.c39)))GLOB(t0.c39 COLLATE NOCASE)) ASC);
SELECT * FROM t0 WHERE ((NOT ((t0.c59 IN ())))) ORDER BY ((((t0.c39)%(0xffffffffec69acef)))%(((t0.c59) IS FALSE))) DESC  NULLS FIRST, ((((t0.c39)+(t0.c39)))GLOB(t0.c39 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c59 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c39)%(0xffffffffec69acef)))%(((t0.c59) IS FALSE))) DESC  NULLS FIRST, ((((t0.c39)+(t0.c39)))GLOB(t0.c39 COLLATE NOCASE)) ASC);
SELECT * FROM t0 WHERE ((NOT ((t0.c59 IN ())))) ORDER BY ((((t0.c39)%(0xffffffffec69acef)))%(((t0.c59) IS FALSE))) DESC  NULLS FIRST, ((((t0.c39)+(t0.c39)))GLOB(t0.c39 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM rt1, v0, t0 WHERE ((- (CAST(rt1.c3 AS TEXT)))) ORDER BY ((ABS(rt1.c1)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt1.c3 AS TEXT)))) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY ((ABS(rt1.c1)) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE ((- (CAST(rt1.c3 AS TEXT)))) ORDER BY ((ABS(rt1.c1)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt1.c3 AS TEXT)))) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY ((ABS(rt1.c1)) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE ((- (CAST(rt1.c3 AS TEXT)))) ORDER BY ((ABS(rt1.c1)) IS TRUE) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt1, v0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY CASE ((rt1.c0)IS NOT(v0.c0))  WHEN -2136183997 THEN CASE WHEN rt1.c3 THEN v0.c0 WHEN '' THEN t0.c39 WHEN rt1.c1 THEN rt1.c2 END ELSE 0xffffffffb504f3f0 END;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY CASE ((rt1.c0)IS NOT(v0.c0))  WHEN -2136183997 THEN CASE WHEN rt1.c3 THEN v0.c0 WHEN '' THEN t0.c39 WHEN rt1.c1 THEN rt1.c2 END ELSE 0Xffffffffb504f3f0 END);
SELECT ALL * FROM t0, rt1, v0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY CASE ((rt1.c0)IS NOT(v0.c0))  WHEN -2136183997 THEN CASE WHEN rt1.c3 THEN v0.c0 WHEN '' THEN t0.c39 WHEN rt1.c1 THEN rt1.c2 END ELSE 0xffffffffb504f3f0 END;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY CASE ((rt1.c0)IS NOT(v0.c0))  WHEN -2136183997 THEN CASE WHEN rt1.c3 THEN v0.c0 WHEN '' THEN t0.c39 WHEN rt1.c1 THEN rt1.c2 END ELSE 0Xffffffffb504f3f0 END);
SELECT ALL * FROM t0, rt1, v0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY CASE ((rt1.c0)IS NOT(v0.c0))  WHEN -2136183997 THEN CASE WHEN rt1.c3 THEN v0.c0 WHEN '' THEN t0.c39 WHEN rt1.c1 THEN rt1.c2 END ELSE 0xffffffffb504f3f0 END;
SELECT ALL * FROM t0, rt1 WHERE ((((+ (t0.c59)))&(rt1.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c59)))&(rt1.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((+ (t0.c59)))&(rt1.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c59)))&(rt1.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((+ (t0.c59)))&(rt1.c3 COLLATE RTRIM)));
SELECT * FROM t0, rt1 WHERE (((((((((((((rt1.c1 COLLATE RTRIM)AND(((rt1.c0)>>(rt1.c1)))))OR((((rt1.c3, t0.c39, rt1.c2)) NOT BETWEEN ((rt1.c2, '', rt1.c0)) AND ((t0.c39, rt1.c0, rt1.c2))))))AND(rt1.c0)))AND(CAST(NULL AS TEXT))))OR((~ (rt1.c0)))))OR(rt1.c0))) ORDER BY 1414644249, LIKELY(UNLIKELY(rt1.c3)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c1 COLLATE RTRIM)AND(((rt1.c0)>>(rt1.c1)))))OR((((rt1.c3, t0.c39, rt1.c2)) NOT BETWEEN ((rt1.c2, '', rt1.c0)) AND ((t0.c39, rt1.c0, rt1.c2))))))AND(rt1.c0)))AND(CAST(NULL AS TEXT))))OR((~ (rt1.c0)))))OR(rt1.c0))) IS TRUE)  as count FROM t0, rt1 ORDER BY 1414644249, LIKELY(UNLIKELY(rt1.c3)) ASC);
SELECT * FROM t0, rt1 WHERE (((((((((((((rt1.c1 COLLATE RTRIM)AND(((rt1.c0)>>(rt1.c1)))))OR((((rt1.c3, t0.c39, rt1.c2)) NOT BETWEEN ((rt1.c2, '', rt1.c0)) AND ((t0.c39, rt1.c0, rt1.c2))))))AND(rt1.c0)))AND(CAST(NULL AS TEXT))))OR((~ (rt1.c0)))))OR(rt1.c0))) ORDER BY 1414644249, LIKELY(UNLIKELY(rt1.c3)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c1 COLLATE RTRIM)AND(((rt1.c0)>>(rt1.c1)))))OR((((rt1.c3, t0.c39, rt1.c2)) NOT BETWEEN ((rt1.c2, '', rt1.c0)) AND ((t0.c39, rt1.c0, rt1.c2))))))AND(rt1.c0)))AND(CAST(NULL AS TEXT))))OR((~ (rt1.c0)))))OR(rt1.c0))) IS TRUE)  as count FROM t0, rt1 ORDER BY 1414644249, LIKELY(UNLIKELY(rt1.c3)) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c39, t0.c59, t0.c39)) NOT BETWEEN ((t0.c59 COLLATE RTRIM, ((t0.c59) NOT NULL), t0.c59)) AND ((CASE t0.c59  WHEN t0.c59 THEN '-1369513613' END, CASE t0.c39  WHEN t0.c59 THEN t0.c39 ELSE t0.c59 END, (t0.c59 IN ()))))) ORDER BY ((((t0.c59) BETWEEN (t0.c59) AND (t0.c59))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c39, t0.c59, t0.c39)) NOT BETWEEN ((t0.c59 COLLATE RTRIM, ((t0.c59) NOT NULL), t0.c59)) AND ((CASE t0.c59  WHEN t0.c59 THEN '-1369513613' END, CASE t0.c39  WHEN t0.c59 THEN t0.c39 ELSE t0.c59 END, (t0.c59 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c59) BETWEEN (t0.c59) AND (t0.c59))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c39, t0.c59, t0.c39)) NOT BETWEEN ((t0.c59 COLLATE RTRIM, ((t0.c59) NOT NULL), t0.c59)) AND ((CASE t0.c59  WHEN t0.c59 THEN '-1369513613' END, CASE t0.c39  WHEN t0.c59 THEN t0.c39 ELSE t0.c59 END, (t0.c59 IN ()))))) ORDER BY ((((t0.c59) BETWEEN (t0.c59) AND (t0.c59))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c39, t0.c59, t0.c39)) NOT BETWEEN ((t0.c59 COLLATE RTRIM, ((t0.c59) NOT NULL), t0.c59)) AND ((CASE t0.c59  WHEN t0.c59 THEN '-1369513613' END, CASE t0.c39  WHEN t0.c59 THEN t0.c39 ELSE t0.c59 END, (t0.c59 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c59) BETWEEN (t0.c59) AND (t0.c59))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c39, t0.c59, t0.c39)) NOT BETWEEN ((t0.c59 COLLATE RTRIM, ((t0.c59) NOT NULL), t0.c59)) AND ((CASE t0.c59  WHEN t0.c59 THEN '-1369513613' END, CASE t0.c39  WHEN t0.c59 THEN t0.c39 ELSE t0.c59 END, (t0.c59 IN ()))))) ORDER BY ((((t0.c59) BETWEEN (t0.c59) AND (t0.c59))) IS FALSE) ASC  NULLS LAST;
SELECT * FROM rt1 FULL OUTER JOIN t0 ON ((((v0.c0)-(rt1.c2))) ISNULL) LEFT OUTER JOIN v0 ON CASE WHEN CAST(rt1.c0 AS TEXT) THEN LOWER(DISTINCT rt1.c0) WHEN ((rt1.c3) IS FALSE) THEN v0.c0 WHEN ((v0.c0)<=(t0.c59)) THEN ((rt1.c1) NOT BETWEEN (v0.c0) AND (t0.c39)) END WHERE (NULLIF(DISTINCT ((1.7976931348623157E308)OR(rt1.c1)), ((((rt1.c1)AND(rt1.c3)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((1.7976931348623157E308)OR(rt1.c1)), ((((rt1.c1)AND(rt1.c3)))AND(rt1.c1)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((((v0.c0)-(rt1.c2))) ISNULL) LEFT OUTER JOIN v0 ON CASE WHEN CAST(rt1.c0 AS TEXT) THEN LOWER(DISTINCT rt1.c0) WHEN ((rt1.c3) IS FALSE) THEN v0.c0 WHEN ((v0.c0)<=(t0.c59)) THEN ((rt1.c1) NOT BETWEEN (v0.c0) AND (t0.c39)) END);
SELECT * FROM rt1 FULL OUTER JOIN t0 ON ((((v0.c0)-(rt1.c2))) ISNULL) LEFT OUTER JOIN v0 ON CASE WHEN CAST(rt1.c0 AS TEXT) THEN LOWER(DISTINCT rt1.c0) WHEN ((rt1.c3) IS FALSE) THEN v0.c0 WHEN ((v0.c0)<=(t0.c59)) THEN ((rt1.c1) NOT BETWEEN (v0.c0) AND (t0.c39)) END WHERE (NULLIF(DISTINCT ((1.7976931348623157E308)OR(rt1.c1)), ((((rt1.c1)AND(rt1.c3)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((1.7976931348623157E308)OR(rt1.c1)), ((((rt1.c1)AND(rt1.c3)))AND(rt1.c1)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((((v0.c0)-(rt1.c2))) ISNULL) LEFT OUTER JOIN v0 ON CASE WHEN CAST(rt1.c0 AS TEXT) THEN LOWER(DISTINCT rt1.c0) WHEN ((rt1.c3) IS FALSE) THEN v0.c0 WHEN ((v0.c0)<=(t0.c59)) THEN ((rt1.c1) NOT BETWEEN (v0.c0) AND (t0.c39)) END);
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c39) NOT NULL)))<((((((t0.c59)OR(t0.c59)))AND(t0.c39))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c39) NOT NULL)))<((((((t0.c59)OR(t0.c59)))AND(t0.c39)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c39) NOT NULL)))<((((((t0.c59)OR(t0.c59)))AND(t0.c39))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c39) NOT NULL)))<((((((t0.c59)OR(t0.c59)))AND(t0.c39)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c39) NOT NULL)))<((((((t0.c59)OR(t0.c59)))AND(t0.c39))))));
SELECT ALL * FROM v0, rt1, t0 WHERE (((((v0.c0) NOTNULL))IS NOT((((rt1.c1, t0.c39, v0.c0))<=((rt1.c0, t0.c59, t0.c59))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))IS NOT((((rt1.c1, t0.c39, v0.c0))<=((rt1.c0, t0.c59, t0.c59)))))) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL * FROM v0, rt1, t0 WHERE (((((v0.c0) NOTNULL))IS NOT((((rt1.c1, t0.c39, v0.c0))<=((rt1.c0, t0.c59, t0.c59))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))IS NOT((((rt1.c1, t0.c39, v0.c0))<=((rt1.c0, t0.c59, t0.c59)))))) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL * FROM v0, rt1, t0 WHERE (((((v0.c0) NOTNULL))IS NOT((((rt1.c1, t0.c39, v0.c0))<=((rt1.c0, t0.c59, t0.c59))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c39) IS TRUE)) BETWEEN ((~ (t0.c39))) AND (((t0.c59)GLOB(t0.c59))))) ORDER BY ((((0.5964023147442266)=(t0.c59)))+(((t0.c59) NOT BETWEEN (t0.c59) AND (0.42790748465687034)))), ((((1.573123522E9) IS TRUE)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((t0.c39) IS TRUE)) BETWEEN ((~ (t0.c39))) AND (((t0.c59)GLOB(t0.c59))))) IS TRUE)  as count FROM t0 ORDER BY ((((0.5964023147442266)==(t0.c59)))+(((t0.c59) NOT BETWEEN (t0.c59) AND (0.42790748465687034)))), ((((1.573123522E9) IS TRUE)) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c39) IS TRUE)) BETWEEN ((~ (t0.c39))) AND (((t0.c59)GLOB(t0.c59))))) ORDER BY ((((0.5964023147442266)=(t0.c59)))+(((t0.c59) NOT BETWEEN (t0.c59) AND (0.42790748465687034)))), ((((1.573123522E9) IS TRUE)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((t0.c39) IS TRUE)) BETWEEN ((~ (t0.c39))) AND (((t0.c59)GLOB(t0.c59))))) IS TRUE)  as count FROM t0 ORDER BY ((((0.5964023147442266)==(t0.c59)))+(((t0.c59) NOT BETWEEN (t0.c59) AND (0.42790748465687034)))), ((((1.573123522E9) IS TRUE)) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c39) IS TRUE)) BETWEEN ((~ (t0.c39))) AND (((t0.c59)GLOB(t0.c59))))) ORDER BY ((((0.5964023147442266)=(t0.c59)))+(((t0.c59) NOT BETWEEN (t0.c59) AND (0.42790748465687034)))), ((((1.573123522E9) IS TRUE)) NOTNULL);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT(0.7850265788005579)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)IS NOT(0.7850265788005579))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT(0.7850265788005579)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)IS NOT(0.7850265788005579))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT(0.7850265788005579)));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c59) IS TRUE))OR((((t0.c39)) BETWEEN ((t0.c39)) AND ((t0.c59))))))OR(CASE WHEN t0.c39 THEN t0.c39 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c59) IS TRUE))OR((((t0.c39)) BETWEEN ((t0.c39)) AND ((t0.c59))))))OR(CASE WHEN t0.c39 THEN t0.c39 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c59) IS TRUE))OR((((t0.c39)) BETWEEN ((t0.c39)) AND ((t0.c59))))))OR(CASE WHEN t0.c39 THEN t0.c39 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c59) IS TRUE))OR((((t0.c39)) BETWEEN ((t0.c39)) AND ((t0.c59))))))OR(CASE WHEN t0.c39 THEN t0.c39 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c59) IS TRUE))OR((((t0.c39)) BETWEEN ((t0.c39)) AND ((t0.c59))))))OR(CASE WHEN t0.c39 THEN t0.c39 END)));
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CAST(1.382905877E9 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(1.382905877E9 AS BLOB)) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CAST(1.382905877E9 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(1.382905877E9 AS BLOB)) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CAST(1.382905877E9 AS BLOB));
SELECT ALL * FROM rt1, t0, v0 WHERE (((((t0.c39)>(rt1.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c39)>(rt1.c3))) ISNULL)) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL * FROM rt1, t0, v0 WHERE (((((t0.c39)>(rt1.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c39)>(rt1.c3))) ISNULL)) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL * FROM rt1, t0, v0 WHERE (((((t0.c39)>(rt1.c3))) ISNULL));
SELECT COUNT(*) FROM v0, t0 NOT INDEXED, rt1 WHERE ('1472101990') ORDER BY CASE (((rt1.c3))>=((x'')))  WHEN (+ ('!su{K{*#')) THEN (NOT (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (('1472101990') IS TRUE)  as count FROM v0, t0, rt1 ORDER BY CASE (((rt1.c3))>=((x'')))  WHEN (+ ('!su{K{*#')) THEN (NOT (v0.c0)) END);
SELECT COUNT(*) FROM v0, t0 NOT INDEXED, rt1 WHERE ('1472101990') ORDER BY CASE (((rt1.c3))>=((x'')))  WHEN (+ ('!su{K{*#')) THEN (NOT (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (('1472101990') IS TRUE)  as count FROM v0, t0, rt1 ORDER BY CASE (((rt1.c3))>=((x'')))  WHEN (+ ('!su{K{*#')) THEN (NOT (v0.c0)) END);
SELECT COUNT(*) FROM v0, t0 NOT INDEXED, rt1 WHERE ('1472101990') ORDER BY CASE (((rt1.c3))>=((x'')))  WHEN (+ ('!su{K{*#')) THEN (NOT (v0.c0)) END;
SELECT COUNT(*) FROM v0 WHERE (LOWER(v0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(v0.c0)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LOWER(v0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(v0.c0)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LOWER(v0.c0));
SELECT COUNT(*) FROM t0, v0 WHERE (((((((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((t0.c39))), CASE WHEN t0.c39 THEN t0.c59 ELSE v0.c0 END, ('' IN ())))>((((((v0.c0)OR(v0.c0)))AND(t0.c59)), (((t0.c39, NULL, v0.c0))>((t0.c59, t0.c39, 0.03904928197943003))), (x'' IN ()))))) ORDER BY (((((t0.c59))>=((t0.c59))))*(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((t0.c39))), CASE WHEN t0.c39 THEN t0.c59 ELSE v0.c0 END, ('' IN ())))>((((((v0.c0)OR(v0.c0)))AND(t0.c59)), (((t0.c39, NULL, v0.c0))>((t0.c59, t0.c39, 0.03904928197943003))), (x'' IN ()))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((((t0.c59))>=((t0.c59))))*(x'')) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((t0.c39))), CASE WHEN t0.c39 THEN t0.c59 ELSE v0.c0 END, ('' IN ())))>((((((v0.c0)OR(v0.c0)))AND(t0.c59)), (((t0.c39, NULL, v0.c0))>((t0.c59, t0.c39, 0.03904928197943003))), (x'' IN ()))))) ORDER BY (((((t0.c59))>=((t0.c59))))*(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((t0.c39))), CASE WHEN t0.c39 THEN t0.c59 ELSE v0.c0 END, ('' IN ())))>((((((v0.c0)OR(v0.c0)))AND(t0.c59)), (((t0.c39, NULL, v0.c0))>((t0.c59, t0.c39, 0.03904928197943003))), (x'' IN ()))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((((t0.c59))>=((t0.c59))))*(x'')) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((t0.c59)) NOT BETWEEN ((t0.c59)) AND ((t0.c39))), CASE WHEN t0.c39 THEN t0.c59 ELSE v0.c0 END, ('' IN ())))>((((((v0.c0)OR(v0.c0)))AND(t0.c59)), (((t0.c39, NULL, v0.c0))>((t0.c59, t0.c39, 0.03904928197943003))), (x'' IN ()))))) ORDER BY (((((t0.c59))>=((t0.c59))))*(x'')) ASC;
SELECT * FROM rt1 WHERE (((((rt1.c0)-(rt1.c3)))>>((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ORDER BY (((((x'e995c1c8'))>=((rt1.c3))))>(((rt1.c2)>(rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)-(rt1.c3)))>>((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (((((x'e995c1c8'))>=((rt1.c3))))>(((rt1.c2)>(rt1.c3)))) DESC);
SELECT * FROM rt1 WHERE (((((rt1.c0)-(rt1.c3)))>>((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ORDER BY (((((x'e995c1c8'))>=((rt1.c3))))>(((rt1.c2)>(rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)-(rt1.c3)))>>((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (((((x'e995c1c8'))>=((rt1.c3))))>(((rt1.c2)>(rt1.c3)))) DESC);
SELECT * FROM rt1 WHERE (((((rt1.c0)-(rt1.c3)))>>((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ORDER BY (((((x'e995c1c8'))>=((rt1.c3))))>(((rt1.c2)>(rt1.c3)))) DESC;
SELECT * FROM v0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM v0, rt1 INNER JOIN t0 ON (((((((((t0.c39 IN (rt1.c0, v0.c0)))AND(t0.c39 COLLATE NOCASE)))OR(CAST(t0.c39 AS TEXT))))AND(((((rt1.c0)AND(t0.c39)))AND(rt1.c3)))))AND(((rt1.c3) NOTNULL))) WHERE (rt1.c1 COLLATE BINARY) ORDER BY ((('XQB' IN (rt1.c1, rt1.c0))) ISNULL)  NULLS FIRST, (((((+ (rt1.c3)))AND(((v0.c0)IS(rt1.c1)))))OR(((x'') NOT BETWEEN (rt1.c2) AND (t0.c59)))) DESC  NULLS LAST, (((rt1.c0)) BETWEEN ((((((rt1.c3)OR(v0.c0)))OR(rt1.c0)))) AND ((((v0.c0) IS FALSE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1 COLLATE BINARY) IS TRUE)  as count FROM v0, rt1 INNER JOIN t0 ON (((((((((t0.c39 IN (rt1.c0, v0.c0)))AND(t0.c39 COLLATE NOCASE)))OR(CAST(t0.c39 AS TEXT))))AND(((((rt1.c0)AND(t0.c39)))AND(rt1.c3)))))AND(((rt1.c3) NOTNULL))) ORDER BY ((('XQB' IN (rt1.c1, rt1.c0))) ISNULL)  NULLS FIRST, (((((+ (rt1.c3)))AND(((v0.c0)IS(rt1.c1)))))OR(((x'') NOT BETWEEN (rt1.c2) AND (t0.c59)))) DESC  NULLS LAST, (((rt1.c0)) BETWEEN ((((((rt1.c3)OR(v0.c0)))OR(rt1.c0)))) AND ((((v0.c0) IS FALSE)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 INNER JOIN t0 ON (((((((((t0.c39 IN (rt1.c0, v0.c0)))AND(t0.c39 COLLATE NOCASE)))OR(CAST(t0.c39 AS TEXT))))AND(((((rt1.c0)AND(t0.c39)))AND(rt1.c3)))))AND(((rt1.c3) NOTNULL))) WHERE (rt1.c1 COLLATE BINARY) ORDER BY ((('XQB' IN (rt1.c1, rt1.c0))) ISNULL)  NULLS FIRST, (((((+ (rt1.c3)))AND(((v0.c0)IS(rt1.c1)))))OR(((x'') NOT BETWEEN (rt1.c2) AND (t0.c59)))) DESC  NULLS LAST, (((rt1.c0)) BETWEEN ((((((rt1.c3)OR(v0.c0)))OR(rt1.c0)))) AND ((((v0.c0) IS FALSE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1 COLLATE BINARY) IS TRUE)  as count FROM v0, rt1 INNER JOIN t0 ON (((((((((t0.c39 IN (rt1.c0, v0.c0)))AND(t0.c39 COLLATE NOCASE)))OR(CAST(t0.c39 AS TEXT))))AND(((((rt1.c0)AND(t0.c39)))AND(rt1.c3)))))AND(((rt1.c3) NOTNULL))) ORDER BY ((('XQB' IN (rt1.c1, rt1.c0))) ISNULL)  NULLS FIRST, (((((+ (rt1.c3)))AND(((v0.c0)IS(rt1.c1)))))OR(((x'') NOT BETWEEN (rt1.c2) AND (t0.c59)))) DESC  NULLS LAST, (((rt1.c0)) BETWEEN ((((((rt1.c3)OR(v0.c0)))OR(rt1.c0)))) AND ((((v0.c0) IS FALSE)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 INNER JOIN t0 ON (((((((((t0.c39 IN (rt1.c0, v0.c0)))AND(t0.c39 COLLATE NOCASE)))OR(CAST(t0.c39 AS TEXT))))AND(((((rt1.c0)AND(t0.c39)))AND(rt1.c3)))))AND(((rt1.c3) NOTNULL))) WHERE (rt1.c1 COLLATE BINARY) ORDER BY ((('XQB' IN (rt1.c1, rt1.c0))) ISNULL)  NULLS FIRST, (((((+ (rt1.c3)))AND(((v0.c0)IS(rt1.c1)))))OR(((x'') NOT BETWEEN (rt1.c2) AND (t0.c59)))) DESC  NULLS LAST, (((rt1.c0)) BETWEEN ((((((rt1.c3)OR(v0.c0)))OR(rt1.c0)))) AND ((((v0.c0) IS FALSE)))) ASC  NULLS FIRST;
SELECT * FROM v0, t0 LEFT OUTER JOIN rt1 ON (((((rt1.c2))>((rt1.c3))))!=((t0.c39 IN ()))) WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN rt1 ON (((((rt1.c2))>((rt1.c3))))<>((t0.c39 IN ()))));
SELECT * FROM v0, t0 LEFT OUTER JOIN rt1 ON (((((rt1.c2))>((rt1.c3))))!=((t0.c39 IN ()))) WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN rt1 ON (((((rt1.c2))>((rt1.c3))))<>((t0.c39 IN ()))));
SELECT * FROM v0, t0 LEFT OUTER JOIN rt1 ON (((((rt1.c2))>((rt1.c3))))!=((t0.c39 IN ()))) WHERE (t0.c59);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE ((NOT (CAST(t0.c39 AS REAL))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c39 AS REAL)))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE ((NOT (CAST(t0.c39 AS REAL))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c39 AS REAL)))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE ((NOT (CAST(t0.c39 AS REAL))));
SELECT ALL * FROM t0 WHERE ((((t0.c39)) BETWEEN ((((t0.c39)IS NOT(t0.c59)))) AND ((t0.c59))));
SELECT SUM(count) FROM (SELECT (((((t0.c39)) BETWEEN ((((t0.c39)IS NOT(t0.c59)))) AND ((t0.c59)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c39)) BETWEEN ((((t0.c39)IS NOT(t0.c59)))) AND ((t0.c59))));
SELECT SUM(count) FROM (SELECT (((((t0.c39)) BETWEEN ((((t0.c39)IS NOT(t0.c59)))) AND ((t0.c59)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c39)) BETWEEN ((((t0.c39)IS NOT(t0.c59)))) AND ((t0.c59))));
SELECT COUNT(*) FROM t0, rt1, v0 WHERE (2.63956014E8);
SELECT SUM(count) FROM (SELECT ((2.63956014E8) IS TRUE)  as count FROM t0, rt1, v0);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE (2.63956014E8);
SELECT SUM(count) FROM (SELECT ((2.63956014E8) IS TRUE)  as count FROM t0, rt1, v0);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE (2.63956014E8);
SELECT COUNT(*) FROM t0, v0, rt1 WHERE (((((rt1.c3)<=(rt1.c0)))LIKE((((rt1.c3))>((rt1.c0)))))) ORDER BY CASE WHEN HEX(rt1.c2) THEN ((rt1.c0)=(t0.c39)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)<=(rt1.c0)))LIKE((((rt1.c3))>((rt1.c0)))))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY CASE WHEN HEX(rt1.c2) THEN ((rt1.c0)==(t0.c39)) END DESC);
SELECT COUNT(*) FROM t0, v0, rt1 WHERE (((((rt1.c3)<=(rt1.c0)))LIKE((((rt1.c3))>((rt1.c0)))))) ORDER BY CASE WHEN HEX(rt1.c2) THEN ((rt1.c0)=(t0.c39)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)<=(rt1.c0)))LIKE((((rt1.c3))>((rt1.c0)))))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY CASE WHEN HEX(rt1.c2) THEN ((rt1.c0)==(t0.c39)) END DESC);
SELECT COUNT(*) FROM t0, v0, rt1 WHERE (((((rt1.c3)<=(rt1.c0)))LIKE((((rt1.c3))>((rt1.c0)))))) ORDER BY CASE WHEN HEX(rt1.c2) THEN ((rt1.c0)=(t0.c39)) END DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CAST(v0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CAST(v0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CAST(v0.c0 AS BLOB)))));
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((rt1.c2)AND(t0.c39)))OR(rt1.c2)) IN ())) ORDER BY (((NULL))<=((((rt1.c3) NOTNULL)))), ((((t0.c39)GLOB(rt1.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)AND(t0.c39)))OR(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, t0 ORDER BY (((NULL))<=((((rt1.c3) NOTNULL)))), ((((t0.c39)GLOB(rt1.c2))) NOT NULL));
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((rt1.c2)AND(t0.c39)))OR(rt1.c2)) IN ())) ORDER BY (((NULL))<=((((rt1.c3) NOTNULL)))), ((((t0.c39)GLOB(rt1.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)AND(t0.c39)))OR(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, t0 ORDER BY (((NULL))<=((((rt1.c3) NOTNULL)))), ((((t0.c39)GLOB(rt1.c2))) NOT NULL));
SELECT COUNT(*) FROM rt1, t0 WHERE ((((((rt1.c2)AND(t0.c39)))OR(rt1.c2)) IN ())) ORDER BY (((NULL))<=((((rt1.c3) NOTNULL)))), ((((t0.c39)GLOB(rt1.c2))) NOT NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c59);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON (NOT ((('') NOT BETWEEN (NULL) AND (t0.c59)))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (NOT ((('') NOT BETWEEN (NULL) AND (t0.c59)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON (NOT ((('') NOT BETWEEN (NULL) AND (t0.c59)))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (NOT ((('') NOT BETWEEN (NULL) AND (t0.c59)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON (NOT ((('') NOT BETWEEN (NULL) AND (t0.c59)))) WHERE (rt1.c0);
SELECT * FROM t0, v0 WHERE (x'8752') ORDER BY CAST(json_object(t0.c59, '') AS REAL), (((v0.c0, (NULL IN (v0.c0)), 1943728214))<=((v0.c0, t0.c39, '-1827354733'))) ASC, (((((((((((t0.c59, t0.c59, t0.c59)) BETWEEN ((t0.c39, t0.c39, t0.c59)) AND ((v0.c0, t0.c39, v0.c0))))OR(((NULL) ISNULL))))AND(CAST(t0.c39 AS TEXT))))OR(CAST(t0.c59 AS INTEGER))))OR((t0.c39 IN (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'8752') IS TRUE)  as count FROM t0, v0 ORDER BY CAST(json_object(t0.c59, '') AS REAL), (((v0.c0, (NULL IN (v0.c0)), 1943728214))<=((v0.c0, t0.c39, '-1827354733'))) ASC, (((((((((((t0.c59, t0.c59, t0.c59)) BETWEEN ((t0.c39, t0.c39, t0.c59)) AND ((v0.c0, t0.c39, v0.c0))))OR(((NULL) ISNULL))))AND(CAST(t0.c39 AS TEXT))))OR(CAST(t0.c59 AS INTEGER))))OR((t0.c39 IN (v0.c0)))) DESC);
SELECT * FROM t0, v0 WHERE (x'8752') ORDER BY CAST(json_object(t0.c59, '') AS REAL), (((v0.c0, (NULL IN (v0.c0)), 1943728214))<=((v0.c0, t0.c39, '-1827354733'))) ASC, (((((((((((t0.c59, t0.c59, t0.c59)) BETWEEN ((t0.c39, t0.c39, t0.c59)) AND ((v0.c0, t0.c39, v0.c0))))OR(((NULL) ISNULL))))AND(CAST(t0.c39 AS TEXT))))OR(CAST(t0.c59 AS INTEGER))))OR((t0.c39 IN (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'8752') IS TRUE)  as count FROM t0, v0 ORDER BY CAST(json_object(t0.c59, '') AS REAL), (((v0.c0, (NULL IN (v0.c0)), 1943728214))<=((v0.c0, t0.c39, '-1827354733'))) ASC, (((((((((((t0.c59, t0.c59, t0.c59)) BETWEEN ((t0.c39, t0.c39, t0.c59)) AND ((v0.c0, t0.c39, v0.c0))))OR(((NULL) ISNULL))))AND(CAST(t0.c39 AS TEXT))))OR(CAST(t0.c59 AS INTEGER))))OR((t0.c39 IN (v0.c0)))) DESC);
SELECT * FROM t0, v0 WHERE (x'8752') ORDER BY CAST(json_object(t0.c59, '') AS REAL), (((v0.c0, (NULL IN (v0.c0)), 1943728214))<=((v0.c0, t0.c39, '-1827354733'))) ASC, (((((((((((t0.c59, t0.c59, t0.c59)) BETWEEN ((t0.c39, t0.c39, t0.c59)) AND ((v0.c0, t0.c39, v0.c0))))OR(((NULL) ISNULL))))AND(CAST(t0.c39 AS TEXT))))OR(CAST(t0.c59 AS INTEGER))))OR((t0.c39 IN (v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((rt1.c2 COLLATE BINARY)OR(((t0.c59)<>(rt1.c3)))) FULL OUTER JOIN rt1 ON (NOT (rt1.c1)) COLLATE RTRIM WHERE (CASE WHEN NULLIF(t0.c39, rt1.c3) THEN ((((t0.c59)OR(rt1.c3)))AND(t0.c59)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(t0.c39, rt1.c3) THEN ((((t0.c59)OR(rt1.c3)))AND(t0.c59)) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((rt1.c2 COLLATE BINARY)OR(((t0.c59)<>(rt1.c3)))) FULL OUTER JOIN rt1 ON (NOT (rt1.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((rt1.c2 COLLATE BINARY)OR(((t0.c59)<>(rt1.c3)))) FULL OUTER JOIN rt1 ON (NOT (rt1.c1)) COLLATE RTRIM WHERE (CASE WHEN NULLIF(t0.c39, rt1.c3) THEN ((((t0.c59)OR(rt1.c3)))AND(t0.c59)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(t0.c39, rt1.c3) THEN ((((t0.c59)OR(rt1.c3)))AND(t0.c59)) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((rt1.c2 COLLATE BINARY)OR(((t0.c59)<>(rt1.c3)))) FULL OUTER JOIN rt1 ON (NOT (rt1.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (IFNULL((~ (t0.c59)), rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((~ (t0.c59)), rt1.c1)) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (IFNULL((~ (t0.c59)), rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((~ (t0.c59)), rt1.c1)) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (IFNULL((~ (t0.c59)), rt1.c1));
SELECT * FROM t0 WHERE (((((((t0.c39)AND(t0.c59)))OR(t0.c39)))||(((t0.c39) BETWEEN (t0.c39) AND (t0.c39))))) ORDER BY ((((t0.c39) BETWEEN (0.5601918712211016) AND (t0.c39))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c39)AND(t0.c59)))OR(t0.c39)))||(((t0.c39) BETWEEN (t0.c39) AND (t0.c39))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c39) BETWEEN (0.5601918712211016) AND (t0.c39))) NOTNULL)  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((t0.c39)AND(t0.c59)))OR(t0.c39)))||(((t0.c39) BETWEEN (t0.c39) AND (t0.c39))))) ORDER BY ((((t0.c39) BETWEEN (0.5601918712211016) AND (t0.c39))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c39)AND(t0.c59)))OR(t0.c39)))||(((t0.c39) BETWEEN (t0.c39) AND (t0.c39))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c39) BETWEEN (0.5601918712211016) AND (t0.c39))) NOTNULL)  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((t0.c39)AND(t0.c59)))OR(t0.c39)))||(((t0.c39) BETWEEN (t0.c39) AND (t0.c39))))) ORDER BY ((((t0.c39) BETWEEN (0.5601918712211016) AND (t0.c39))) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (CASE (((rt1.c3))>((t0.c39)))  WHEN ((0.3591891832578745)-(rt1.c0)) THEN (v0.c0 IN ()) END) ORDER BY (((rt1.c1))<(((~ (t0.c39))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c3))>((t0.c39)))  WHEN ((0.3591891832578745)-(rt1.c0)) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY (((rt1.c1))<(((~ (t0.c39))))) DESC);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (CASE (((rt1.c3))>((t0.c39)))  WHEN ((0.3591891832578745)-(rt1.c0)) THEN (v0.c0 IN ()) END) ORDER BY (((rt1.c1))<(((~ (t0.c39))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c3))>((t0.c39)))  WHEN ((0.3591891832578745)-(rt1.c0)) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY (((rt1.c1))<(((~ (t0.c39))))) DESC);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (CASE (((rt1.c3))>((t0.c39)))  WHEN ((0.3591891832578745)-(rt1.c0)) THEN (v0.c0 IN ()) END) ORDER BY (((rt1.c1))<(((~ (t0.c39))))) DESC;
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((rt1.c2, rt1.c3, v0.c0)) NOT BETWEEN (((rt1.c2 IN ()), ((t0.c59) BETWEEN (rt1.c2) AND (NULL)), (((t0.c39))<((rt1.c3))))) AND ((((((t0.c39)AND(t0.c39)))OR(t0.c39)), 0.6396600392275449, ((t0.c59)>>(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c3, v0.c0)) NOT BETWEEN (((rt1.c2 IN ()), ((t0.c59) BETWEEN (rt1.c2) AND (NULL)), (((t0.c39))<((rt1.c3))))) AND ((((((t0.c39)AND(t0.c39)))OR(t0.c39)), 0.6396600392275449, ((t0.c59)>>(rt1.c3)))))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((rt1.c2, rt1.c3, v0.c0)) NOT BETWEEN (((rt1.c2 IN ()), ((t0.c59) BETWEEN (rt1.c2) AND (NULL)), (((t0.c39))<((rt1.c3))))) AND ((((((t0.c39)AND(t0.c39)))OR(t0.c39)), 0.6396600392275449, ((t0.c59)>>(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c3, v0.c0)) NOT BETWEEN (((rt1.c2 IN ()), ((t0.c59) BETWEEN (rt1.c2) AND (NULL)), (((t0.c39))<((rt1.c3))))) AND ((((((t0.c39)AND(t0.c39)))OR(t0.c39)), 0.6396600392275449, ((t0.c59)>>(rt1.c3)))))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((rt1.c2, rt1.c3, v0.c0)) NOT BETWEEN (((rt1.c2 IN ()), ((t0.c59) BETWEEN (rt1.c2) AND (NULL)), (((t0.c39))<((rt1.c3))))) AND ((((((t0.c39)AND(t0.c39)))OR(t0.c39)), 0.6396600392275449, ((t0.c59)>>(rt1.c3))))));
SELECT * FROM v0 WHERE (((((v0.c0)/(v0.c0)))-((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(v0.c0)))-((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)/(v0.c0)))-((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(v0.c0)))-((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)/(v0.c0)))-((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT * FROM v0, rt1 FULL OUTER JOIN t0 ON CAST(ABS(rt1.c0) AS INTEGER) WHERE (0.9375550996033);
SELECT SUM(count) FROM (SELECT ALL ((0.9375550996033) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN t0 ON CAST(ABS(rt1.c0) AS INTEGER));
SELECT * FROM v0, rt1 FULL OUTER JOIN t0 ON CAST(ABS(rt1.c0) AS INTEGER) WHERE (0.9375550996033);
SELECT SUM(count) FROM (SELECT ALL ((0.9375550996033) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN t0 ON CAST(ABS(rt1.c0) AS INTEGER));
SELECT * FROM v0, rt1 FULL OUTER JOIN t0 ON CAST(ABS(rt1.c0) AS INTEGER) WHERE (0.9375550996033);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ())) ORDER BY rt1.c1 ASC, ((((((((((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c0)))AND(x'')))AND(((NULL)IS NOT(rt1.c2)))))OR(((rt1.c1) NOTNULL))))AND(((rt1.c3) ISNULL))))AND(((rt1.c3)>>(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c1 ASC, ((((((((((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c0)))AND(x'')))AND(((NULL)IS NOT(rt1.c2)))))OR(((rt1.c1) NOTNULL))))AND(((rt1.c3) ISNULL))))AND(((rt1.c3)>>(rt1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ())) ORDER BY rt1.c1 ASC, ((((((((((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c0)))AND(x'')))AND(((NULL)IS NOT(rt1.c2)))))OR(((rt1.c1) NOTNULL))))AND(((rt1.c3) ISNULL))))AND(((rt1.c3)>>(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c1 ASC, ((((((((((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c0)))AND(x'')))AND(((NULL)IS NOT(rt1.c2)))))OR(((rt1.c1) NOTNULL))))AND(((rt1.c3) ISNULL))))AND(((rt1.c3)>>(rt1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ())) ORDER BY rt1.c1 ASC, ((((((((((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c0)))AND(x'')))AND(((NULL)IS NOT(rt1.c2)))))OR(((rt1.c1) NOTNULL))))AND(((rt1.c3) ISNULL))))AND(((rt1.c3)>>(rt1.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 WHERE (ROUND((((t0.c59))>((NULL))), ((((((((((((t0.c59)OR(rt1.c3)))AND(t0.c39)))AND(rt1.c3)))AND(t0.c39)))OR(rt1.c0)))OR(t0.c39))));
SELECT SUM(count) FROM (SELECT ((ROUND((((t0.c59))>((NULL))), ((((((((((((t0.c59)OR(rt1.c3)))AND(t0.c39)))AND(rt1.c3)))AND(t0.c39)))OR(rt1.c0)))OR(t0.c39)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON rt1.c2);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 WHERE (ROUND((((t0.c59))>((NULL))), ((((((((((((t0.c59)OR(rt1.c3)))AND(t0.c39)))AND(rt1.c3)))AND(t0.c39)))OR(rt1.c0)))OR(t0.c39))));
SELECT SUM(count) FROM (SELECT ((ROUND((((t0.c59))>((NULL))), ((((((((((((t0.c59)OR(rt1.c3)))AND(t0.c39)))AND(rt1.c3)))AND(t0.c39)))OR(rt1.c0)))OR(t0.c39)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON rt1.c2);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 WHERE (ROUND((((t0.c59))>((NULL))), ((((((((((((t0.c59)OR(rt1.c3)))AND(t0.c39)))AND(rt1.c3)))AND(t0.c39)))OR(rt1.c0)))OR(t0.c39))));
SELECT COUNT(*) FROM t0 WHERE (LIKELY(t0.c39) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LIKELY(t0.c39) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LIKELY(t0.c39) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LIKELY(t0.c39) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LIKELY(t0.c39) COLLATE RTRIM);
SELECT * FROM t0, rt1 FULL OUTER JOIN v0 ON (+ (((rt1.c2) ISNULL))) WHERE (((((((((CAST(rt1.c3 AS REAL))OR(((t0.c59) NOTNULL))))OR(((t0.c39)%(v0.c0)))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))))AND(rtreenode(v0.c0, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt1.c3 AS REAL))OR(((t0.c59) NOTNULL))))OR(((t0.c39)%(v0.c0)))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))))AND(rtreenode(v0.c0, rt1.c0)))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN v0 ON (+ (((rt1.c2) ISNULL))));
SELECT * FROM t0, rt1 FULL OUTER JOIN v0 ON (+ (((rt1.c2) ISNULL))) WHERE (((((((((CAST(rt1.c3 AS REAL))OR(((t0.c59) NOTNULL))))OR(((t0.c39)%(v0.c0)))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))))AND(rtreenode(v0.c0, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt1.c3 AS REAL))OR(((t0.c59) NOTNULL))))OR(((t0.c39)%(v0.c0)))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))))AND(rtreenode(v0.c0, rt1.c0)))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN v0 ON (+ (((rt1.c2) ISNULL))));
SELECT * FROM t0, rt1 FULL OUTER JOIN v0 ON (+ (((rt1.c2) ISNULL))) WHERE (((((((((CAST(rt1.c3 AS REAL))OR(((t0.c59) NOTNULL))))OR(((t0.c39)%(v0.c0)))))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))))AND(rtreenode(v0.c0, rt1.c0))));
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c1) IS FALSE) IN (t0.c39 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) IS FALSE) IN (t0.c39 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c1) IS FALSE) IN (t0.c39 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1) IS FALSE) IN (t0.c39 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c1) IS FALSE) IN (t0.c39 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (- (CAST(rt1.c3 AS TEXT))) INNER JOIN t0 ON (CAST(v0.c0 AS REAL) IN (((rt1.c3)<=(t0.c59)))) WHERE ((rt1.c2 IN ())) ORDER BY (~ (((rt1.c3)+(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (- (CAST(rt1.c3 AS TEXT))) INNER JOIN t0 ON (CAST(v0.c0 AS REAL) IN (((rt1.c3)<=(t0.c59)))) ORDER BY (~ (((rt1.c3)+(v0.c0)))) DESC);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (- (CAST(rt1.c3 AS TEXT))) INNER JOIN t0 ON (CAST(v0.c0 AS REAL) IN (((rt1.c3)<=(t0.c59)))) WHERE ((rt1.c2 IN ())) ORDER BY (~ (((rt1.c3)+(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (- (CAST(rt1.c3 AS TEXT))) INNER JOIN t0 ON (CAST(v0.c0 AS REAL) IN (((rt1.c3)<=(t0.c59)))) ORDER BY (~ (((rt1.c3)+(v0.c0)))) DESC);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (- (CAST(rt1.c3 AS TEXT))) INNER JOIN t0 ON (CAST(v0.c0 AS REAL) IN (((rt1.c3)<=(t0.c59)))) WHERE ((rt1.c2 IN ())) ORDER BY (~ (((rt1.c3)+(v0.c0)))) DESC;
SELECT * FROM v0 WHERE (((((((v0.c0)GLOB(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN 0x7254e7a1 END)))AND(NULLIF(DISTINCT v0.c0, v0.c0)))) ORDER BY (((((~ (v0.c0)))AND(CASE WHEN v0.c0 THEN 1.3766349E9 END)))AND(((v0.c0)>=(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)GLOB(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN 0x7254e7a1 END)))AND(NULLIF(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((((~ (v0.c0)))AND(CASE WHEN v0.c0 THEN 1.3766349E9 END)))AND(((v0.c0)>=(v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((v0.c0)GLOB(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN 0x7254e7a1 END)))AND(NULLIF(DISTINCT v0.c0, v0.c0)))) ORDER BY (((((~ (v0.c0)))AND(CASE WHEN v0.c0 THEN 1.3766349E9 END)))AND(((v0.c0)>=(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)GLOB(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN 0x7254e7a1 END)))AND(NULLIF(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((((~ (v0.c0)))AND(CASE WHEN v0.c0 THEN 1.3766349E9 END)))AND(((v0.c0)>=(v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((v0.c0)GLOB(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN 0x7254e7a1 END)))AND(NULLIF(DISTINCT v0.c0, v0.c0)))) ORDER BY (((((~ (v0.c0)))AND(CASE WHEN v0.c0 THEN 1.3766349E9 END)))AND(((v0.c0)>=(v0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt1 INNER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN (MIN(rt1.c0, v0.c0)) AND (v0.c0 COLLATE NOCASE)) WHERE (CASE WHEN ((rt1.c0) ISNULL) THEN rt1.c3 COLLATE RTRIM ELSE ((v0.c0) ISNULL) END) ORDER BY ((rt1.c1)-(NULL));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0) ISNULL) THEN rt1.c3 COLLATE RTRIM ELSE ((v0.c0) ISNULL) END) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN (MIN(rt1.c0, v0.c0)) AND (v0.c0 COLLATE NOCASE)) ORDER BY ((rt1.c1)-(NULL)));
SELECT * FROM rt1 INNER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN (MIN(rt1.c0, v0.c0)) AND (v0.c0 COLLATE NOCASE)) WHERE (CASE WHEN ((rt1.c0) ISNULL) THEN rt1.c3 COLLATE RTRIM ELSE ((v0.c0) ISNULL) END) ORDER BY ((rt1.c1)-(NULL));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0) ISNULL) THEN rt1.c3 COLLATE RTRIM ELSE ((v0.c0) ISNULL) END) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN (MIN(rt1.c0, v0.c0)) AND (v0.c0 COLLATE NOCASE)) ORDER BY ((rt1.c1)-(NULL)));
SELECT * FROM rt1 INNER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN (MIN(rt1.c0, v0.c0)) AND (v0.c0 COLLATE NOCASE)) WHERE (CASE WHEN ((rt1.c0) ISNULL) THEN rt1.c3 COLLATE RTRIM ELSE ((v0.c0) ISNULL) END) ORDER BY ((rt1.c1)-(NULL));
SELECT * FROM v0, t0 WHERE ((- (0.18407947561506155)));
SELECT SUM(count) FROM (SELECT ALL (((- (0.18407947561506155))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((- (0.18407947561506155)));
SELECT SUM(count) FROM (SELECT ALL (((- (0.18407947561506155))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((- (0.18407947561506155)));
SELECT * FROM t0, rt1 WHERE (((((((rt1.c2)<(rt1.c3)))OR(rt1.c0)))AND(CAST(0.88837091299384 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)<(rt1.c3)))OR(rt1.c0)))AND(CAST(0.88837091299384 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((((rt1.c2)<(rt1.c3)))OR(rt1.c0)))AND(CAST(0.88837091299384 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)<(rt1.c3)))OR(rt1.c0)))AND(CAST(0.88837091299384 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((((rt1.c2)<(rt1.c3)))OR(rt1.c0)))AND(CAST(0.88837091299384 AS NUMERIC))));
SELECT COUNT(*) FROM v0, rt1, t0 WHERE ((+ (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt1, t0);
SELECT COUNT(*) FROM v0, rt1, t0 WHERE ((+ (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt1, t0);
SELECT COUNT(*) FROM v0, rt1, t0 WHERE ((+ (v0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE (-356894037);
SELECT SUM(count) FROM (SELECT ((-356894037) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (-356894037);
SELECT SUM(count) FROM (SELECT ((-356894037) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (-356894037);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN 0.8238761463993626 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 END AS REAL) CROSS JOIN t0 ON (+ (v0.c0 COLLATE BINARY)) WHERE ((- (((rt1.c3) IS TRUE)))) ORDER BY 'kB'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN 0.8238761463993626 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 END AS REAL) CROSS JOIN t0 ON (+ (v0.c0 COLLATE BINARY)) ORDER BY 'kB'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN 0.8238761463993626 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 END AS REAL) CROSS JOIN t0 ON (+ (v0.c0 COLLATE BINARY)) WHERE ((- (((rt1.c3) IS TRUE)))) ORDER BY 'kB'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN 0.8238761463993626 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 END AS REAL) CROSS JOIN t0 ON (+ (v0.c0 COLLATE BINARY)) ORDER BY 'kB'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN 0.8238761463993626 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 END AS REAL) CROSS JOIN t0 ON (+ (v0.c0 COLLATE BINARY)) WHERE ((- (((rt1.c3) IS TRUE)))) ORDER BY 'kB'  NULLS FIRST;
SELECT ALL * FROM v0 INNER JOIN t0 ON CAST(((v0.c0)>(v0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c1 AS REAL) AS REAL) WHERE ((((rt1.c0, rt1.c1, t0.c59)) NOT BETWEEN (('', CAST(rt1.c2 AS TEXT), CASE v0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)) AND ((rt1.c3, ((v0.c0) BETWEEN (rt1.c0) AND (t0.c59)), ABS(DISTINCT v0.c0))))) ORDER BY ((((((NULL)OR(v0.c0)))AND(rt1.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c1, t0.c59)) NOT BETWEEN (('', CAST(rt1.c2 AS TEXT), CASE v0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)) AND ((rt1.c3, ((v0.c0) BETWEEN (rt1.c0) AND (t0.c59)), ABS(DISTINCT v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CAST(((v0.c0)>(v0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c1 AS REAL) AS REAL) ORDER BY ((((((NULL)OR(v0.c0)))AND(rt1.c1))) NOTNULL) ASC);
SELECT ALL * FROM v0 INNER JOIN t0 ON CAST(((v0.c0)>(v0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c1 AS REAL) AS REAL) WHERE ((((rt1.c0, rt1.c1, t0.c59)) NOT BETWEEN (('', CAST(rt1.c2 AS TEXT), CASE v0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)) AND ((rt1.c3, ((v0.c0) BETWEEN (rt1.c0) AND (t0.c59)), ABS(DISTINCT v0.c0))))) ORDER BY ((((((NULL)OR(v0.c0)))AND(rt1.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c1, t0.c59)) NOT BETWEEN (('', CAST(rt1.c2 AS TEXT), CASE v0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)) AND ((rt1.c3, ((v0.c0) BETWEEN (rt1.c0) AND (t0.c59)), ABS(DISTINCT v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CAST(((v0.c0)>(v0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c1 AS REAL) AS REAL) ORDER BY ((((((NULL)OR(v0.c0)))AND(rt1.c1))) NOTNULL) ASC);
SELECT ALL * FROM v0 INNER JOIN t0 ON CAST(((v0.c0)>(v0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c1 AS REAL) AS REAL) WHERE ((((rt1.c0, rt1.c1, t0.c59)) NOT BETWEEN (('', CAST(rt1.c2 AS TEXT), CASE v0.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)) AND ((rt1.c3, ((v0.c0) BETWEEN (rt1.c0) AND (t0.c59)), ABS(DISTINCT v0.c0))))) ORDER BY ((((((NULL)OR(v0.c0)))AND(rt1.c1))) NOTNULL) ASC;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((((((t0.c59)AND(t0.c39)))OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c3)) THEN CAST(rt1.c1 AS INTEGER) END WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((((((t0.c59)AND(t0.c39)))OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c3)) THEN CAST(rt1.c1 AS INTEGER) END);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((((((t0.c59)AND(t0.c39)))OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c3)) THEN CAST(rt1.c1 AS INTEGER) END WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((((((t0.c59)AND(t0.c39)))OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c3)) THEN CAST(rt1.c1 AS INTEGER) END);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN t0 ON CASE WHEN ((((((((t0.c59)AND(t0.c39)))OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c3)) THEN CAST(rt1.c1 AS INTEGER) END WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM rt1, v0, t0 WHERE (((((((v0.c0)<<(t0.c39)))AND(CASE WHEN v0.c0 THEN t0.c39 END)))AND((((rt1.c3))==((rt1.c3)))))) ORDER BY CAST(((v0.c0)>=(rt1.c2)) AS INTEGER), (~ (v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)<<(t0.c39)))AND(CASE WHEN v0.c0 THEN t0.c39 END)))AND((((rt1.c3))==((rt1.c3)))))) IS TRUE)  as count FROM rt1 NOT INDEXED, v0, t0 ORDER BY CAST(((v0.c0)>=(rt1.c2)) AS INTEGER), (~ (v0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, t0 WHERE (((((((v0.c0)<<(t0.c39)))AND(CASE WHEN v0.c0 THEN t0.c39 END)))AND((((rt1.c3))==((rt1.c3)))))) ORDER BY CAST(((v0.c0)>=(rt1.c2)) AS INTEGER), (~ (v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)<<(t0.c39)))AND(CASE WHEN v0.c0 THEN t0.c39 END)))AND((((rt1.c3))==((rt1.c3)))))) IS TRUE)  as count FROM rt1 NOT INDEXED, v0, t0 ORDER BY CAST(((v0.c0)>=(rt1.c2)) AS INTEGER), (~ (v0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, t0 WHERE (((((((v0.c0)<<(t0.c39)))AND(CASE WHEN v0.c0 THEN t0.c39 END)))AND((((rt1.c3))==((rt1.c3)))))) ORDER BY CAST(((v0.c0)>=(rt1.c2)) AS INTEGER), (~ (v0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))%(((rt1.c3) IS TRUE)))) ORDER BY CASE WHEN CASE '-1940048715'  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END THEN ((rt1.c2) NOT BETWEEN (x'') AND (rt1.c1)) WHEN '-1040967283' THEN ((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)) WHEN CAST(0.4315991092102286 AS INTEGER) THEN TRIM(rt1.c3, rt1.c1) ELSE (rt1.c0 IN (rt1.c3)) END;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))%(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CASE '-1940048715'  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END THEN ((rt1.c2) NOT BETWEEN (x'') AND (rt1.c1)) WHEN '-1040967283' THEN ((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)) WHEN CAST(0.4315991092102286 AS INTEGER) THEN TRIM(rt1.c3, rt1.c1) ELSE (rt1.c0 IN (rt1.c3)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))%(((rt1.c3) IS TRUE)))) ORDER BY CASE WHEN CASE '-1940048715'  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END THEN ((rt1.c2) NOT BETWEEN (x'') AND (rt1.c1)) WHEN '-1040967283' THEN ((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)) WHEN CAST(0.4315991092102286 AS INTEGER) THEN TRIM(rt1.c3, rt1.c1) ELSE (rt1.c0 IN (rt1.c3)) END;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))%(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CASE '-1940048715'  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END THEN ((rt1.c2) NOT BETWEEN (x'') AND (rt1.c1)) WHEN '-1040967283' THEN ((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)) WHEN CAST(0.4315991092102286 AS INTEGER) THEN TRIM(rt1.c3, rt1.c1) ELSE (rt1.c0 IN (rt1.c3)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))%(((rt1.c3) IS TRUE)))) ORDER BY CASE WHEN CASE '-1940048715'  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END THEN ((rt1.c2) NOT BETWEEN (x'') AND (rt1.c1)) WHEN '-1040967283' THEN ((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)) WHEN CAST(0.4315991092102286 AS INTEGER) THEN TRIM(rt1.c3, rt1.c1) ELSE (rt1.c0 IN (rt1.c3)) END;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((v0.c0))) COLLATE RTRIM) ORDER BY (((v0.c0) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0 ORDER BY (((v0.c0) NOT NULL) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((v0.c0))) COLLATE RTRIM) ORDER BY (((v0.c0) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0 ORDER BY (((v0.c0) NOT NULL) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((v0.c0))) COLLATE RTRIM) ORDER BY (((v0.c0) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, v0, rt1 WHERE ((((NOT (t0.c39)))>=(COALESCE(DISTINCT t0.c39, rt1.c0, rt1.c3, rt1.c0)))) ORDER BY (((((('380163151')AND(t0.c39)))OR(-2.03317761E9))) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (v0.c0));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c39)))>=(COALESCE(DISTINCT t0.c39, rt1.c0, rt1.c3, rt1.c0)))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY (((((('380163151')AND(t0.c39)))OR(-2.03317761E9))) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (v0.c0)));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, v0, rt1 WHERE ((((NOT (t0.c39)))>=(COALESCE(DISTINCT t0.c39, rt1.c0, rt1.c3, rt1.c0)))) ORDER BY (((((('380163151')AND(t0.c39)))OR(-2.03317761E9))) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (v0.c0));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c39)))>=(COALESCE(DISTINCT t0.c39, rt1.c0, rt1.c3, rt1.c0)))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY (((((('380163151')AND(t0.c39)))OR(-2.03317761E9))) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (v0.c0)));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, v0, rt1 WHERE ((((NOT (t0.c39)))>=(COALESCE(DISTINCT t0.c39, rt1.c0, rt1.c3, rt1.c0)))) ORDER BY (((((('380163151')AND(t0.c39)))OR(-2.03317761E9))) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (v0.c0));
SELECT * FROM t0 WHERE ((+ ((((t0.c39))!=((t0.c59)))))) ORDER BY ((t0.c39) BETWEEN (t0.c39) AND (t0.c39))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t0.c39))<>((t0.c59)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c39) BETWEEN (t0.c39) AND (t0.c39))  NULLS LAST);
SELECT * FROM t0 WHERE ((+ ((((t0.c39))!=((t0.c59)))))) ORDER BY ((t0.c39) BETWEEN (t0.c39) AND (t0.c39))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t0.c39))<>((t0.c59)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c39) BETWEEN (t0.c39) AND (t0.c39))  NULLS LAST);
SELECT * FROM t0 WHERE ((+ ((((t0.c39))!=((t0.c59)))))) ORDER BY ((t0.c39) BETWEEN (t0.c39) AND (t0.c39))  NULLS LAST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON x'02ab' WHERE (((((rt1.c1)%(v0.c0)))IS NOT(rt1.c1 COLLATE NOCASE))) ORDER BY x'3883'  NULLS FIRST, ((rt1.c3) IS TRUE) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)%(v0.c0)))IS NOT(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON x'02ab' ORDER BY x'3883'  NULLS FIRST, ((rt1.c3) IS TRUE) COLLATE BINARY DESC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON x'02ab' WHERE (((((rt1.c1)%(v0.c0)))IS NOT(rt1.c1 COLLATE NOCASE))) ORDER BY x'3883'  NULLS FIRST, ((rt1.c3) IS TRUE) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)%(v0.c0)))IS NOT(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON x'02ab' ORDER BY x'3883'  NULLS FIRST, ((rt1.c3) IS TRUE) COLLATE BINARY DESC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON x'02ab' WHERE (((((rt1.c1)%(v0.c0)))IS NOT(rt1.c1 COLLATE NOCASE))) ORDER BY x'3883'  NULLS FIRST, ((rt1.c3) IS TRUE) COLLATE BINARY DESC;
SELECT * FROM t0, rt1, v0 WHERE (CAST((v0.c0 IN (t0.c59)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN (t0.c59)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1, v0);
SELECT * FROM t0, rt1, v0 WHERE (CAST((v0.c0 IN (t0.c59)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN (t0.c59)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1, v0);
SELECT * FROM t0, rt1, v0 WHERE (CAST((v0.c0 IN (t0.c59)) AS NUMERIC));
SELECT ALL * FROM t0 WHERE ((((~ (t0.c39))) ISNULL)) ORDER BY t0.c59 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c39))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c59 DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c39))) ISNULL)) ORDER BY t0.c59 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c39))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c59 DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c39))) ISNULL)) ORDER BY t0.c59 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1, v0 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM t0, rt1, v0);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM t0, rt1, v0);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE (t0.c59);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c39)AND(((t0.c59)-(t0.c59)))))OR(CASE WHEN '2067522765' THEN t0.c39 ELSE t0.c59 END)))OR((~ (t0.c39)))))AND(t0.c39 COLLATE BINARY)))AND('1518743564')))AND('Kv&1E灩Vz'))) ORDER BY (((NOT (t0.c39)))<=((('702082642')GLOB(t0.c39))))  NULLS FIRST, (~ ((t0.c59 IN ())))  NULLS LAST, ((CAST(t0.c59 AS TEXT))GLOB(TIME(t0.c39, t0.c39, t0.c59)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c39)AND(((t0.c59)-(t0.c59)))))OR(CASE WHEN '2067522765' THEN t0.c39 ELSE t0.c59 END)))OR((~ (t0.c39)))))AND(t0.c39 COLLATE BINARY)))AND('1518743564')))AND('Kv&1E灩Vz'))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c39)))<=((('702082642')GLOB(t0.c39))))  NULLS FIRST, (~ ((t0.c59 IN ())))  NULLS LAST, ((CAST(t0.c59 AS TEXT))GLOB(TIME(t0.c39, t0.c39, t0.c59)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c39)AND(((t0.c59)-(t0.c59)))))OR(CASE WHEN '2067522765' THEN t0.c39 ELSE t0.c59 END)))OR((~ (t0.c39)))))AND(t0.c39 COLLATE BINARY)))AND('1518743564')))AND('Kv&1E灩Vz'))) ORDER BY (((NOT (t0.c39)))<=((('702082642')GLOB(t0.c39))))  NULLS FIRST, (~ ((t0.c59 IN ())))  NULLS LAST, ((CAST(t0.c59 AS TEXT))GLOB(TIME(t0.c39, t0.c39, t0.c59)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c39)AND(((t0.c59)-(t0.c59)))))OR(CASE WHEN '2067522765' THEN t0.c39 ELSE t0.c59 END)))OR((~ (t0.c39)))))AND(t0.c39 COLLATE BINARY)))AND('1518743564')))AND('Kv&1E灩Vz'))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c39)))<=((('702082642')GLOB(t0.c39))))  NULLS FIRST, (~ ((t0.c59 IN ())))  NULLS LAST, ((CAST(t0.c59 AS TEXT))GLOB(TIME(t0.c39, t0.c39, t0.c59)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c39)AND(((t0.c59)-(t0.c59)))))OR(CASE WHEN '2067522765' THEN t0.c39 ELSE t0.c59 END)))OR((~ (t0.c39)))))AND(t0.c39 COLLATE BINARY)))AND('1518743564')))AND('Kv&1E灩Vz'))) ORDER BY (((NOT (t0.c39)))<=((('702082642')GLOB(t0.c39))))  NULLS FIRST, (~ ((t0.c59 IN ())))  NULLS LAST, ((CAST(t0.c59 AS TEXT))GLOB(TIME(t0.c39, t0.c39, t0.c59)))  NULLS LAST;
SELECT ALL * FROM t0, rt1 WHERE (((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN t0.c59 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 END)GLOB((~ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN t0.c59 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 END)GLOB((~ (rt1.c3))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN t0.c59 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 END)GLOB((~ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN t0.c59 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 END)GLOB((~ (rt1.c3))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 WHEN t0.c59 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 END)GLOB((~ (rt1.c3)))));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON UPPER(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))) WHERE (((((((((((rt1.c3) IS FALSE))AND((((rt1.c1)) BETWEEN ((x'ab29')) AND ((v0.c0))))))OR(LOWER(rt1.c1))))OR(((rt1.c2)%(rt1.c1)))))OR(CASE WHEN rt1.c0 THEN rt1.c3 END))) ORDER BY ((((rt1.c2)%(rt1.c0)))||(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3) IS FALSE))AND((((rt1.c1)) BETWEEN ((x'ab29')) AND ((v0.c0))))))OR(LOWER(rt1.c1))))OR(((rt1.c2)%(rt1.c1)))))OR(CASE WHEN rt1.c0 THEN rt1.c3 END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON UPPER(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))) ORDER BY ((((rt1.c2)%(rt1.c0)))||(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN rt1 ON UPPER(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))) WHERE (((((((((((rt1.c3) IS FALSE))AND((((rt1.c1)) BETWEEN ((x'ab29')) AND ((v0.c0))))))OR(LOWER(rt1.c1))))OR(((rt1.c2)%(rt1.c1)))))OR(CASE WHEN rt1.c0 THEN rt1.c3 END))) ORDER BY ((((rt1.c2)%(rt1.c0)))||(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3) IS FALSE))AND((((rt1.c1)) BETWEEN ((x'ab29')) AND ((v0.c0))))))OR(LOWER(rt1.c1))))OR(((rt1.c2)%(rt1.c1)))))OR(CASE WHEN rt1.c0 THEN rt1.c3 END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON UPPER(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))) ORDER BY ((((rt1.c2)%(rt1.c0)))||(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN rt1 ON UPPER(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))) WHERE (((((((((((rt1.c3) IS FALSE))AND((((rt1.c1)) BETWEEN ((x'ab29')) AND ((v0.c0))))))OR(LOWER(rt1.c1))))OR(((rt1.c2)%(rt1.c1)))))OR(CASE WHEN rt1.c0 THEN rt1.c3 END))) ORDER BY ((((rt1.c2)%(rt1.c0)))||(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST;
SELECT * FROM rt1, v0 WHERE (((((rt1.c3)IS(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (0.3704112098864045) AND (rt1.c2))))) ORDER BY (rt1.c3 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)IS(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (0.3704112098864045) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, v0 ORDER BY (rt1.c3 COLLATE BINARY IN ())  NULLS LAST);
SELECT * FROM rt1, v0 WHERE (((((rt1.c3)IS(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (0.3704112098864045) AND (rt1.c2))))) ORDER BY (rt1.c3 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)IS(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (0.3704112098864045) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, v0 ORDER BY (rt1.c3 COLLATE BINARY IN ())  NULLS LAST);
SELECT * FROM rt1, v0 WHERE (((((rt1.c3)IS(rt1.c0)))OR(((rt1.c1) NOT BETWEEN (0.3704112098864045) AND (rt1.c2))))) ORDER BY (rt1.c3 COLLATE BINARY IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, rt1 WHERE ((~ (CASE v0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE v0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE ((~ (CASE v0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE v0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE ((~ (CASE v0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB))IS NOT(IFNULL(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB))IS NOT(IFNULL(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB))IS NOT(IFNULL(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB))IS NOT(IFNULL(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB))IS NOT(IFNULL(v0.c0, v0.c0))));
SELECT ALL * FROM t0 WHERE (((t0.c59) BETWEEN (t0.c59) AND (t0.c59)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c59) BETWEEN (t0.c59) AND (t0.c59)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c59) BETWEEN (t0.c59) AND (t0.c59)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c59) BETWEEN (t0.c59) AND (t0.c59)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c59) BETWEEN (t0.c59) AND (t0.c59)) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)*(v0.c0)))AND(v0.c0)))AND(SQLITE_SOURCE_ID()))) ORDER BY ((0Xffffffffc8354983 COLLATE BINARY) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)*(v0.c0)))AND(v0.c0)))AND(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM v0 ORDER BY ((0Xffffffffc8354983 COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0 WHERE (((((((v0.c0)*(v0.c0)))AND(v0.c0)))AND(SQLITE_SOURCE_ID()))) ORDER BY ((0Xffffffffc8354983 COLLATE BINARY) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)*(v0.c0)))AND(v0.c0)))AND(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM v0 ORDER BY ((0Xffffffffc8354983 COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0 WHERE (((((((v0.c0)*(v0.c0)))AND(v0.c0)))AND(SQLITE_SOURCE_ID()))) ORDER BY ((0Xffffffffc8354983 COLLATE BINARY) ISNULL);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((((((NULL, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, v0.c0, rt1.c2)) AND ((v0.c0, rt1.c0, rt1.c2))))OR(NULL)))AND(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((NULL, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, v0.c0, rt1.c2)) AND ((v0.c0, rt1.c0, rt1.c2))))OR(NULL)))AND(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((((((NULL, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, v0.c0, rt1.c2)) AND ((v0.c0, rt1.c0, rt1.c2))))OR(NULL)))AND(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((NULL, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, v0.c0, rt1.c2)) AND ((v0.c0, rt1.c0, rt1.c2))))OR(NULL)))AND(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((((((NULL, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, v0.c0, rt1.c2)) AND ((v0.c0, rt1.c0, rt1.c2))))OR(NULL)))AND(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT * FROM v0, rt1, t0 WHERE ((((rt1.c2 IN ())) NOTNULL)) ORDER BY (~ (t0.c59)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (~ (t0.c59)) ASC);
SELECT * FROM v0, rt1, t0 WHERE ((((rt1.c2 IN ())) NOTNULL)) ORDER BY (~ (t0.c59)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (~ (t0.c59)) ASC);
SELECT * FROM v0, rt1, t0 WHERE ((((rt1.c2 IN ())) NOTNULL)) ORDER BY (~ (t0.c59)) ASC;
SELECT ALL * FROM rt1, t0 WHERE (rt1.c1) ORDER BY ((((x'') BETWEEN (rt1.c1) AND ('Y'))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((x'') BETWEEN (rt1.c1) AND ('Y'))) IS TRUE) ASC);
SELECT ALL * FROM rt1, t0 WHERE (rt1.c1) ORDER BY ((((x'') BETWEEN (rt1.c1) AND ('Y'))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((x'') BETWEEN (rt1.c1) AND ('Y'))) IS TRUE) ASC);
SELECT ALL * FROM rt1, t0 WHERE (rt1.c1) ORDER BY ((((x'') BETWEEN (rt1.c1) AND ('Y'))) IS TRUE) ASC;
SELECT * FROM t0, rt1 WHERE ((~ (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c3))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((~ (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c3))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((~ (rt1.c3)));
SELECT * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.7118631741321194))<<(LIKELIHOOD(DISTINCT v0.c0, 0.65201923471072)))) ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (GLOB(v0.c0, v0.c0)) AND (((v0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(v0.c0, 0.7118631741321194))<<(LIKELIHOOD(DISTINCT v0.c0, 0.65201923471072)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (GLOB(v0.c0, v0.c0)) AND (((v0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.7118631741321194))<<(LIKELIHOOD(DISTINCT v0.c0, 0.65201923471072)))) ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (GLOB(v0.c0, v0.c0)) AND (((v0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(v0.c0, 0.7118631741321194))<<(LIKELIHOOD(DISTINCT v0.c0, 0.65201923471072)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (GLOB(v0.c0, v0.c0)) AND (((v0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((LIKELIHOOD(v0.c0, 0.7118631741321194))<<(LIKELIHOOD(DISTINCT v0.c0, 0.65201923471072)))) ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (GLOB(v0.c0, v0.c0)) AND (((v0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((UNLIKELY(t0.c59)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(t0.c59)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((UNLIKELY(t0.c59)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(t0.c59)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((UNLIKELY(t0.c59)) ISNULL));
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON ((rt1.c2)==(t0.c39)) COLLATE RTRIM COLLATE BINARY WHERE (((rt1.c1 COLLATE NOCASE)-(((rt1.c3)>>(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE)-(((rt1.c3)>>(rt1.c3))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((rt1.c2)==(t0.c39)) COLLATE RTRIM COLLATE BINARY);
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON ((rt1.c2)==(t0.c39)) COLLATE RTRIM COLLATE BINARY WHERE (((rt1.c1 COLLATE NOCASE)-(((rt1.c3)>>(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE)-(((rt1.c3)>>(rt1.c3))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((rt1.c2)==(t0.c39)) COLLATE RTRIM COLLATE BINARY);
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON ((rt1.c2)==(t0.c39)) COLLATE RTRIM COLLATE BINARY WHERE (((rt1.c1 COLLATE NOCASE)-(((rt1.c3)>>(rt1.c3)))));
SELECT ALL * FROM rt1, v0, t0 WHERE ('-717932145') ORDER BY ((((((rt1.c1) NOTNULL))OR(((v0.c0)IS NOT(rt1.c2)))))OR((((v0.c0))<((rt1.c2))))), (((((rt1.c2, rt1.c3, t0.c59)) NOT BETWEEN ((t0.c39, t0.c59, t0.c59)) AND ((rt1.c2, t0.c39, rt1.c2))))OR(ABS(t0.c59))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-717932145') IS TRUE)  as count FROM rt1, v0, t0 ORDER BY ((((((rt1.c1) NOTNULL))OR(((v0.c0)IS NOT(rt1.c2)))))OR((((v0.c0))<((rt1.c2))))), (((((rt1.c2, rt1.c3, t0.c59)) NOT BETWEEN ((t0.c39, t0.c59, t0.c59)) AND ((rt1.c2, t0.c39, rt1.c2))))OR(ABS(t0.c59))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0, t0 WHERE ('-717932145') ORDER BY ((((((rt1.c1) NOTNULL))OR(((v0.c0)IS NOT(rt1.c2)))))OR((((v0.c0))<((rt1.c2))))), (((((rt1.c2, rt1.c3, t0.c59)) NOT BETWEEN ((t0.c39, t0.c59, t0.c59)) AND ((rt1.c2, t0.c39, rt1.c2))))OR(ABS(t0.c59))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-717932145') IS TRUE)  as count FROM rt1, v0, t0 ORDER BY ((((((rt1.c1) NOTNULL))OR(((v0.c0)IS NOT(rt1.c2)))))OR((((v0.c0))<((rt1.c2))))), (((((rt1.c2, rt1.c3, t0.c59)) NOT BETWEEN ((t0.c39, t0.c59, t0.c59)) AND ((rt1.c2, t0.c39, rt1.c2))))OR(ABS(t0.c59))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0, t0 WHERE ('-717932145') ORDER BY ((((((rt1.c1) NOTNULL))OR(((v0.c0)IS NOT(rt1.c2)))))OR((((v0.c0))<((rt1.c2))))), (((((rt1.c2, rt1.c3, t0.c59)) NOT BETWEEN ((t0.c39, t0.c59, t0.c59)) AND ((rt1.c2, t0.c39, rt1.c2))))OR(ABS(t0.c59))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, v0 WHERE (ABS(CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (ABS(CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (ABS(CAST(v0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM rt1, t0 WHERE (((((t0.c39) ISNULL))IS(CAST(t0.c59 AS TEXT)))) ORDER BY LENGTH(((((((((rt1.c3)AND(t0.c39)))OR(rt1.c2)))AND(rt1.c2)))AND(t0.c39)));
SELECT SUM(count) FROM (SELECT ((((((t0.c39) ISNULL))IS(CAST(t0.c59 AS TEXT)))) IS TRUE)  as count FROM rt1, t0 ORDER BY LENGTH(((((((((rt1.c3)AND(t0.c39)))OR(rt1.c2)))AND(rt1.c2)))AND(t0.c39))));
SELECT COUNT(*) FROM rt1, t0 WHERE (((((t0.c39) ISNULL))IS(CAST(t0.c59 AS TEXT)))) ORDER BY LENGTH(((((((((rt1.c3)AND(t0.c39)))OR(rt1.c2)))AND(rt1.c2)))AND(t0.c39)));
SELECT SUM(count) FROM (SELECT ((((((t0.c39) ISNULL))IS(CAST(t0.c59 AS TEXT)))) IS TRUE)  as count FROM rt1, t0 ORDER BY LENGTH(((((((((rt1.c3)AND(t0.c39)))OR(rt1.c2)))AND(rt1.c2)))AND(t0.c39))));
SELECT COUNT(*) FROM rt1, t0 WHERE (((((t0.c39) ISNULL))IS(CAST(t0.c59 AS TEXT)))) ORDER BY LENGTH(((((((((rt1.c3)AND(t0.c39)))OR(rt1.c2)))AND(rt1.c2)))AND(t0.c39)));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CAST(TYPEOF(DISTINCT rt1.c1) AS TEXT)) ORDER BY (+ (CAST(rt1.c1 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(DISTINCT rt1.c1) AS TEXT)) IS TRUE)  as count FROM v0, rt1 ORDER BY (+ (CAST(rt1.c1 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CAST(TYPEOF(DISTINCT rt1.c1) AS TEXT)) ORDER BY (+ (CAST(rt1.c1 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(DISTINCT rt1.c1) AS TEXT)) IS TRUE)  as count FROM v0, rt1 ORDER BY (+ (CAST(rt1.c1 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CAST(TYPEOF(DISTINCT rt1.c1) AS TEXT)) ORDER BY (+ (CAST(rt1.c1 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (LIKELY(((((t0.c59)AND(v0.c0)))AND(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((t0.c59)AND(v0.c0)))AND(NULL)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (LIKELY(((((t0.c59)AND(v0.c0)))AND(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((t0.c59)AND(v0.c0)))AND(NULL)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (LIKELY(((((t0.c59)AND(v0.c0)))AND(NULL))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c39)%(t0.c39)))LIKE(t0.c59))) ORDER BY CASE WHEN CAST(x'e0f4' AS NUMERIC) THEN CASE WHEN t0.c59 THEN t0.c59 ELSE t0.c59 END ELSE SQLITE_VERSION() END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c39)%(t0.c39)))LIKE(t0.c59))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(x'e0f4' AS NUMERIC) THEN CASE WHEN t0.c59 THEN t0.c59 ELSE t0.c59 END ELSE SQLITE_VERSION() END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c39)%(t0.c39)))LIKE(t0.c59))) ORDER BY CASE WHEN CAST(x'e0f4' AS NUMERIC) THEN CASE WHEN t0.c59 THEN t0.c59 ELSE t0.c59 END ELSE SQLITE_VERSION() END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c39)%(t0.c39)))LIKE(t0.c59))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(x'e0f4' AS NUMERIC) THEN CASE WHEN t0.c59 THEN t0.c59 ELSE t0.c59 END ELSE SQLITE_VERSION() END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c39)%(t0.c39)))LIKE(t0.c59))) ORDER BY CASE WHEN CAST(x'e0f4' AS NUMERIC) THEN CASE WHEN t0.c59 THEN t0.c59 ELSE t0.c59 END ELSE SQLITE_VERSION() END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(t0.c39 AS NUMERIC)) ORDER BY TRIM(((((((((t0.c39)AND(t0.c59)))OR(t0.c59)))AND(t0.c59)))AND(t0.c39)), (t0.c59 IN ()))  NULLS LAST, 0.3766365640369068 ASC  NULLS FIRST, ((t0.c59) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c39 AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY TRIM(((((((((t0.c39)AND(t0.c59)))OR(t0.c59)))AND(t0.c59)))AND(t0.c39)), (t0.c59 IN ()))  NULLS LAST, 0.3766365640369068 ASC  NULLS FIRST, ((t0.c59) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(t0.c39 AS NUMERIC)) ORDER BY TRIM(((((((((t0.c39)AND(t0.c59)))OR(t0.c59)))AND(t0.c59)))AND(t0.c39)), (t0.c59 IN ()))  NULLS LAST, 0.3766365640369068 ASC  NULLS FIRST, ((t0.c59) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c39 AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY TRIM(((((((((t0.c39)AND(t0.c59)))OR(t0.c59)))AND(t0.c59)))AND(t0.c39)), (t0.c59 IN ()))  NULLS LAST, 0.3766365640369068 ASC  NULLS FIRST, ((t0.c59) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(t0.c39 AS NUMERIC)) ORDER BY TRIM(((((((((t0.c39)AND(t0.c59)))OR(t0.c59)))AND(t0.c59)))AND(t0.c39)), (t0.c59 IN ()))  NULLS LAST, 0.3766365640369068 ASC  NULLS FIRST, ((t0.c59) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ORDER BY CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ORDER BY CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ORDER BY CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) DESC;
SELECT * FROM v0, t0 WHERE (NULL) ORDER BY CASE WHEN t0.c39 COLLATE BINARY THEN CASE WHEN t0.c59 THEN v0.c0 ELSE t0.c39 END WHEN (v0.c0 IN ()) THEN ((NULL)>>(t0.c59)) WHEN ((t0.c59)/(t0.c39)) THEN NULL ELSE (v0.c0 IN ('-1489431763')) END  NULLS LAST, ((NULLIF(v0.c0, v0.c0)) BETWEEN (0.26376170115940434) AND (((((((((((((t0.c39)AND(t0.c39)))AND(t0.c39)))AND(v0.c0)))OR(t0.c39)))OR(t0.c39)))OR(t0.c59)))), ((v0.c0) NOT BETWEEN (t0.c59) AND ('#%X')) COLLATE BINARY COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN t0.c39 COLLATE BINARY THEN CASE WHEN t0.c59 THEN v0.c0 ELSE t0.c39 END WHEN (v0.c0 IN ()) THEN ((NULL)>>(t0.c59)) WHEN ((t0.c59)/(t0.c39)) THEN NULL ELSE (v0.c0 IN ('-1489431763')) END  NULLS LAST, ((NULLIF(v0.c0, v0.c0)) BETWEEN (0.26376170115940434) AND (((((((((((((t0.c39)AND(t0.c39)))AND(t0.c39)))AND(v0.c0)))OR(t0.c39)))OR(t0.c39)))OR(t0.c59)))), ((v0.c0) NOT BETWEEN (t0.c59) AND ('#%X')) COLLATE BINARY COLLATE RTRIM);
SELECT * FROM v0, t0 WHERE (NULL) ORDER BY CASE WHEN t0.c39 COLLATE BINARY THEN CASE WHEN t0.c59 THEN v0.c0 ELSE t0.c39 END WHEN (v0.c0 IN ()) THEN ((NULL)>>(t0.c59)) WHEN ((t0.c59)/(t0.c39)) THEN NULL ELSE (v0.c0 IN ('-1489431763')) END  NULLS LAST, ((NULLIF(v0.c0, v0.c0)) BETWEEN (0.26376170115940434) AND (((((((((((((t0.c39)AND(t0.c39)))AND(t0.c39)))AND(v0.c0)))OR(t0.c39)))OR(t0.c39)))OR(t0.c59)))), ((v0.c0) NOT BETWEEN (t0.c59) AND ('#%X')) COLLATE BINARY COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN t0.c39 COLLATE BINARY THEN CASE WHEN t0.c59 THEN v0.c0 ELSE t0.c39 END WHEN (v0.c0 IN ()) THEN ((NULL)>>(t0.c59)) WHEN ((t0.c59)/(t0.c39)) THEN NULL ELSE (v0.c0 IN ('-1489431763')) END  NULLS LAST, ((NULLIF(v0.c0, v0.c0)) BETWEEN (0.26376170115940434) AND (((((((((((((t0.c39)AND(t0.c39)))AND(t0.c39)))AND(v0.c0)))OR(t0.c39)))OR(t0.c39)))OR(t0.c59)))), ((v0.c0) NOT BETWEEN (t0.c59) AND ('#%X')) COLLATE BINARY COLLATE RTRIM);
SELECT * FROM v0, t0 WHERE (NULL) ORDER BY CASE WHEN t0.c39 COLLATE BINARY THEN CASE WHEN t0.c59 THEN v0.c0 ELSE t0.c39 END WHEN (v0.c0 IN ()) THEN ((NULL)>>(t0.c59)) WHEN ((t0.c59)/(t0.c39)) THEN NULL ELSE (v0.c0 IN ('-1489431763')) END  NULLS LAST, ((NULLIF(v0.c0, v0.c0)) BETWEEN (0.26376170115940434) AND (((((((((((((t0.c39)AND(t0.c39)))AND(t0.c39)))AND(v0.c0)))OR(t0.c39)))OR(t0.c39)))OR(t0.c59)))), ((v0.c0) NOT BETWEEN (t0.c59) AND ('#%X')) COLLATE BINARY COLLATE RTRIM;
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (((((((rt1.c1)OR(rt1.c2)))AND(t0.c39))))<((((0.18680431654452623)<=(t0.c39))))) LEFT OUTER JOIN t0 ON (~ (((rt1.c1)LIKE(t0.c59)))) WHERE (CASE WHEN (t0.c39 IN ()) THEN (0.695844610848363 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c39 IN ()) THEN (0.695844610848363 IN ()) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON (((((((rt1.c1)OR(rt1.c2)))AND(t0.c39))))<((((0.18680431654452623)<=(t0.c39))))) LEFT OUTER JOIN t0 ON (~ (((rt1.c1)LIKE(t0.c59)))));
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (((((((rt1.c1)OR(rt1.c2)))AND(t0.c39))))<((((0.18680431654452623)<=(t0.c39))))) LEFT OUTER JOIN t0 ON (~ (((rt1.c1)LIKE(t0.c59)))) WHERE (CASE WHEN (t0.c39 IN ()) THEN (0.695844610848363 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c39 IN ()) THEN (0.695844610848363 IN ()) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON (((((((rt1.c1)OR(rt1.c2)))AND(t0.c39))))<((((0.18680431654452623)<=(t0.c39))))) LEFT OUTER JOIN t0 ON (~ (((rt1.c1)LIKE(t0.c59)))));
SELECT COUNT(*) FROM v0, t0, rt1 WHERE ((((rt1.c2)AND(v0.c0)) IN (v0.c0 COLLATE NOCASE, (~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)AND(v0.c0)) IN (v0.c0 COLLATE NOCASE, (~ (rt1.c2))))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE ((((rt1.c2)AND(v0.c0)) IN (v0.c0 COLLATE NOCASE, (~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)AND(v0.c0)) IN (v0.c0 COLLATE NOCASE, (~ (rt1.c2))))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE ((((rt1.c2)AND(v0.c0)) IN (v0.c0 COLLATE NOCASE, (~ (rt1.c2)))));
SELECT COUNT(*) FROM v0, rt1, t0 WHERE (x'') ORDER BY CASE ((v0.c0)%(v0.c0))  WHEN (((v0.c0))=((rt1.c0))) THEN '-649176927' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt1, t0 ORDER BY CASE ((v0.c0)%(v0.c0))  WHEN (((v0.c0))==((rt1.c0))) THEN '-649176927' END  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, t0 WHERE (x'') ORDER BY CASE ((v0.c0)%(v0.c0))  WHEN (((v0.c0))=((rt1.c0))) THEN '-649176927' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt1, t0 ORDER BY CASE ((v0.c0)%(v0.c0))  WHEN (((v0.c0))==((rt1.c0))) THEN '-649176927' END  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, t0 WHERE (x'') ORDER BY CASE ((v0.c0)%(v0.c0))  WHEN (((v0.c0))=((rt1.c0))) THEN '-649176927' END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)+(((v0.c0)OR(v0.c0))))) ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY ASC  NULLS FIRST, ((v0.c0)>(v0.c0)) COLLATE NOCASE, ((CAST(v0.c0 AS INTEGER))LIKE(CAST(v0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)+(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY ASC  NULLS FIRST, ((v0.c0)>(v0.c0)) COLLATE NOCASE, ((CAST(v0.c0 AS INTEGER))LIKE(CAST(v0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)+(((v0.c0)OR(v0.c0))))) ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY ASC  NULLS FIRST, ((v0.c0)>(v0.c0)) COLLATE NOCASE, ((CAST(v0.c0 AS INTEGER))LIKE(CAST(v0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)+(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY ASC  NULLS FIRST, ((v0.c0)>(v0.c0)) COLLATE NOCASE, ((CAST(v0.c0 AS INTEGER))LIKE(CAST(v0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)+(((v0.c0)OR(v0.c0))))) ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY ASC  NULLS FIRST, ((v0.c0)>(v0.c0)) COLLATE NOCASE, ((CAST(v0.c0 AS INTEGER))LIKE(CAST(v0.c0 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (x'') ORDER BY x''  NULLS FIRST, (((((rt1.c0 IN ()))AND((- (t0.c59)))))AND(((rt1.c2)*(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, t0 ORDER BY x''  NULLS FIRST, (((((rt1.c0 IN ()))AND((- (t0.c59)))))AND(((rt1.c2)*(rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (x'') ORDER BY x''  NULLS FIRST, (((((rt1.c0 IN ()))AND((- (t0.c59)))))AND(((rt1.c2)*(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, t0 ORDER BY x''  NULLS FIRST, (((((rt1.c0 IN ()))AND((- (t0.c59)))))AND(((rt1.c2)*(rt1.c2))))  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (t0.c59) ORDER BY ((t0.c59) BETWEEN (((((t0.c59)AND(t0.c59)))AND(t0.c59))) AND (((1344114479) NOT BETWEEN (t0.c59) AND (x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c59) BETWEEN (((((t0.c59)AND(t0.c59)))AND(t0.c59))) AND (((1344114479) NOT BETWEEN (t0.c59) AND (x'')))) DESC  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (t0.c59) ORDER BY ((t0.c59) BETWEEN (((((t0.c59)AND(t0.c59)))AND(t0.c59))) AND (((1344114479) NOT BETWEEN (t0.c59) AND (x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c59) BETWEEN (((((t0.c59)AND(t0.c59)))AND(t0.c59))) AND (((1344114479) NOT BETWEEN (t0.c59) AND (x'')))) DESC  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (t0.c59) ORDER BY ((t0.c59) BETWEEN (((((t0.c59)AND(t0.c59)))AND(t0.c59))) AND (((1344114479) NOT BETWEEN (t0.c59) AND (x'')))) DESC  NULLS FIRST;
SELECT * FROM rt1, v0, t0 WHERE (CAST(t0.c39 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c39 AS TEXT)) IS TRUE)  as count FROM rt1, v0, t0);
SELECT * FROM rt1, v0, t0 WHERE (CAST(t0.c39 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c39 AS TEXT)) IS TRUE)  as count FROM rt1, v0, t0);
SELECT * FROM rt1, v0, t0 WHERE (CAST(t0.c39 AS TEXT));
SELECT ALL * FROM rt1, t0 WHERE (rt1.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt1.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (rt1.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt1.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (rt1.c2 COLLATE RTRIM);
SELECT * FROM t0 WHERE ((((~ (t0.c39))) NOT BETWEEN (UPPER(DISTINCT t0.c39)) AND (((((x'6bba')AND(t0.c59)))OR(t0.c59))))) ORDER BY CAST(((t0.c59) NOT NULL) AS INTEGER) ASC  NULLS FIRST, ((t0.c59) NOTNULL)  NULLS FIRST, (NOT ((~ (t0.c39))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c39))) NOT BETWEEN (UPPER(DISTINCT t0.c39)) AND (((((x'6bba')AND(t0.c59)))OR(t0.c59))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c59) NOT NULL) AS INTEGER) ASC  NULLS FIRST, ((t0.c59) NOTNULL)  NULLS FIRST, (NOT ((~ (t0.c39))))  NULLS FIRST);
SELECT * FROM t0 WHERE ((((~ (t0.c39))) NOT BETWEEN (UPPER(DISTINCT t0.c39)) AND (((((x'6bba')AND(t0.c59)))OR(t0.c59))))) ORDER BY CAST(((t0.c59) NOT NULL) AS INTEGER) ASC  NULLS FIRST, ((t0.c59) NOTNULL)  NULLS FIRST, (NOT ((~ (t0.c39))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c39))) NOT BETWEEN (UPPER(DISTINCT t0.c39)) AND (((((x'6bba')AND(t0.c59)))OR(t0.c59))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c59) NOT NULL) AS INTEGER) ASC  NULLS FIRST, ((t0.c59) NOTNULL)  NULLS FIRST, (NOT ((~ (t0.c39))))  NULLS FIRST);
SELECT * FROM t0 WHERE ((((~ (t0.c39))) NOT BETWEEN (UPPER(DISTINCT t0.c39)) AND (((((x'6bba')AND(t0.c59)))OR(t0.c59))))) ORDER BY CAST(((t0.c59) NOT NULL) AS INTEGER) ASC  NULLS FIRST, ((t0.c59) NOTNULL)  NULLS FIRST, (NOT ((~ (t0.c39))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt1, t0 WHERE ((((t0.c59) IS TRUE) IN ())) ORDER BY (((~ (rt1.c1)))LIKE(((((v0.c0)AND(rt1.c2)))OR(t0.c39)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c59) IS TRUE) IN ())) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (((~ (rt1.c1)))LIKE(((((v0.c0)AND(rt1.c2)))OR(t0.c39)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, t0 WHERE ((((t0.c59) IS TRUE) IN ())) ORDER BY (((~ (rt1.c1)))LIKE(((((v0.c0)AND(rt1.c2)))OR(t0.c39)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c59) IS TRUE) IN ())) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (((~ (rt1.c1)))LIKE(((((v0.c0)AND(rt1.c2)))OR(t0.c39)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, t0 WHERE ((((t0.c59) IS TRUE) IN ())) ORDER BY (((~ (rt1.c1)))LIKE(((((v0.c0)AND(rt1.c2)))OR(t0.c39)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ('tI>ඡL渘') ORDER BY (((((t0.c59)&(t0.c39))))<((0.7258825325840301)));
SELECT SUM(count) FROM (SELECT ALL (('tI>ඡL渘') IS TRUE)  as count FROM v0, t0 ORDER BY (((((t0.c59)&(t0.c39))))<((0.7258825325840301))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ('tI>ඡL渘') ORDER BY (((((t0.c59)&(t0.c39))))<((0.7258825325840301)));
SELECT SUM(count) FROM (SELECT ALL (('tI>ඡL渘') IS TRUE)  as count FROM v0, t0 ORDER BY (((((t0.c59)&(t0.c39))))<((0.7258825325840301))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ('tI>ඡL渘') ORDER BY (((((t0.c59)&(t0.c39))))<((0.7258825325840301)));
SELECT COUNT(*) FROM v0, t0 WHERE ('l');
SELECT SUM(count) FROM (SELECT (('l') IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ('l');
SELECT SUM(count) FROM (SELECT (('l') IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ('l');
SELECT COUNT(*) FROM rt1, t0 WHERE ((- ((NULL IN ())))) ORDER BY x'6660';
SELECT SUM(count) FROM (SELECT (((- ((NULL IN ())))) IS TRUE)  as count FROM rt1, t0 ORDER BY x'6660');
SELECT COUNT(*) FROM rt1, t0 WHERE ((- ((NULL IN ())))) ORDER BY x'6660';
SELECT SUM(count) FROM (SELECT (((- ((NULL IN ())))) IS TRUE)  as count FROM rt1, t0 ORDER BY x'6660');
SELECT COUNT(*) FROM rt1, t0 WHERE ((- ((NULL IN ())))) ORDER BY x'6660';
SELECT COUNT(*) FROM t0 WHERE (((((t0.c39)=(x''))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c39)==(x''))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c39)=(x''))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c39)==(x''))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c39)=(x''))) ISNULL));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((((((rt1.c0 COLLATE RTRIM)AND(((rt1.c0)AND(0.3762161173229873)))))AND(((rt1.c2)<>(t0.c59)))))AND(NULL)))OR((~ (rt1.c0))))) ORDER BY 0.5434236580589666;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c0 COLLATE RTRIM)AND(((rt1.c0)AND(0.3762161173229873)))))AND(((rt1.c2)<>(t0.c59)))))AND(NULL)))OR((~ (rt1.c0))))) IS TRUE)  as count FROM rt1, t0 ORDER BY 0.5434236580589666);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((((((rt1.c0 COLLATE RTRIM)AND(((rt1.c0)AND(0.3762161173229873)))))AND(((rt1.c2)<>(t0.c59)))))AND(NULL)))OR((~ (rt1.c0))))) ORDER BY 0.5434236580589666;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c0 COLLATE RTRIM)AND(((rt1.c0)AND(0.3762161173229873)))))AND(((rt1.c2)<>(t0.c59)))))AND(NULL)))OR((~ (rt1.c0))))) IS TRUE)  as count FROM rt1, t0 ORDER BY 0.5434236580589666);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((((((rt1.c0 COLLATE RTRIM)AND(((rt1.c0)AND(0.3762161173229873)))))AND(((rt1.c2)<>(t0.c59)))))AND(NULL)))OR((~ (rt1.c0))))) ORDER BY 0.5434236580589666;
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON (((rt1.c1)) BETWEEN ((((1486069071) BETWEEN (v0.c0) AND (rt1.c3)))) AND (((NOT (rt1.c0))))) WHERE (CASE WHEN rt1.c3 COLLATE NOCASE THEN (NOT (v0.c0)) END) ORDER BY (((((((((v0.c0 IN (rt1.c1)))AND((((x'')) BETWEEN ((v0.c0)) AND ((rt1.c0))))))AND(CAST(rt1.c0 AS INTEGER))))AND(LENGTH(rt1.c1))))AND((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c3 COLLATE NOCASE THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (((rt1.c1)) BETWEEN ((((1486069071) BETWEEN (v0.c0) AND (rt1.c3)))) AND (((NOT (rt1.c0))))) ORDER BY (((((((((v0.c0 IN (rt1.c1)))AND((((x'')) BETWEEN ((v0.c0)) AND ((rt1.c0))))))AND(CAST(rt1.c0 AS INTEGER))))AND(LENGTH(rt1.c1))))AND((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON (((rt1.c1)) BETWEEN ((((1486069071) BETWEEN (v0.c0) AND (rt1.c3)))) AND (((NOT (rt1.c0))))) WHERE (CASE WHEN rt1.c3 COLLATE NOCASE THEN (NOT (v0.c0)) END) ORDER BY (((((((((v0.c0 IN (rt1.c1)))AND((((x'')) BETWEEN ((v0.c0)) AND ((rt1.c0))))))AND(CAST(rt1.c0 AS INTEGER))))AND(LENGTH(rt1.c1))))AND((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c3 COLLATE NOCASE THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (((rt1.c1)) BETWEEN ((((1486069071) BETWEEN (v0.c0) AND (rt1.c3)))) AND (((NOT (rt1.c0))))) ORDER BY (((((((((v0.c0 IN (rt1.c1)))AND((((x'')) BETWEEN ((v0.c0)) AND ((rt1.c0))))))AND(CAST(rt1.c0 AS INTEGER))))AND(LENGTH(rt1.c1))))AND((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON (((rt1.c1)) BETWEEN ((((1486069071) BETWEEN (v0.c0) AND (rt1.c3)))) AND (((NOT (rt1.c0))))) WHERE (CASE WHEN rt1.c3 COLLATE NOCASE THEN (NOT (v0.c0)) END) ORDER BY (((((((((v0.c0 IN (rt1.c1)))AND((((x'')) BETWEEN ((v0.c0)) AND ((rt1.c0))))))AND(CAST(rt1.c0 AS INTEGER))))AND(LENGTH(rt1.c1))))AND((NOT (v0.c0))));
SELECT * FROM rt1 WHERE (CAST((NOT (rt1.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt1.c2)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((NOT (rt1.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt1.c2)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((NOT (rt1.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c59 THEN t0.c59 WHEN t0.c39 THEN t0.c39 WHEN t0.c39 THEN t0.c39 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c59 THEN t0.c59 WHEN t0.c39 THEN t0.c39 WHEN t0.c39 THEN t0.c39 END) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c59 THEN t0.c59 WHEN t0.c39 THEN t0.c39 WHEN t0.c39 THEN t0.c39 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c59 THEN t0.c59 WHEN t0.c39 THEN t0.c39 WHEN t0.c39 THEN t0.c39 END) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c59 THEN t0.c59 WHEN t0.c39 THEN t0.c39 WHEN t0.c39 THEN t0.c39 END) NOT NULL));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((v0.c0) IS TRUE));
SELECT * FROM t0, rt1, v0 WHERE ((+ (((rt1.c3)-(t0.c39)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c3)-(t0.c39))))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT * FROM t0, rt1, v0 WHERE ((+ (((rt1.c3)-(t0.c39)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c3)-(t0.c39))))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT * FROM t0, rt1, v0 WHERE ((+ (((rt1.c3)-(t0.c39)))));
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0) IS TRUE) THEN (v0.c0 IN (v0.c0)) ELSE (+ ('-1059284379')) END) ORDER BY CAST((+ (NULL)) AS BLOB)  NULLS LAST, ((((v0.c0)-(v0.c0)))-(((v0.c0)IS(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN ((v0.c0) IS TRUE) THEN (v0.c0 IN (v0.c0)) ELSE (+ ('-1059284379')) END) IS TRUE)  as count FROM v0 ORDER BY CAST((+ (NULL)) AS BLOB)  NULLS LAST, ((((v0.c0)-(v0.c0)))-(((v0.c0)IS(v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0) IS TRUE) THEN (v0.c0 IN (v0.c0)) ELSE (+ ('-1059284379')) END) ORDER BY CAST((+ (NULL)) AS BLOB)  NULLS LAST, ((((v0.c0)-(v0.c0)))-(((v0.c0)IS(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN ((v0.c0) IS TRUE) THEN (v0.c0 IN (v0.c0)) ELSE (+ ('-1059284379')) END) IS TRUE)  as count FROM v0 ORDER BY CAST((+ (NULL)) AS BLOB)  NULLS LAST, ((((v0.c0)-(v0.c0)))-(((v0.c0)IS(v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0) IS TRUE) THEN (v0.c0 IN (v0.c0)) ELSE (+ ('-1059284379')) END) ORDER BY CAST((+ (NULL)) AS BLOB)  NULLS LAST, ((((v0.c0)-(v0.c0)))-(((v0.c0)IS(v0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY ((((((v0.c0))<=((v0.c0))), ((v0.c0)-(v0.c0)), (+ (v0.c0))))<=((((v0.c0)!=(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0))))) DESC  NULLS LAST, CASE ((v0.c0) IS TRUE)  WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN (v0.c0 IN (v0.c0)) THEN '&p' WHEN ((((v0.c0)OR('-270174183')))AND(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0))<=((v0.c0))), ((v0.c0)-(v0.c0)), (+ (v0.c0))))<=((((v0.c0)!=(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0))))) DESC  NULLS LAST, CASE ((v0.c0) IS TRUE)  WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN (v0.c0 IN (v0.c0)) THEN '&p' WHEN ((((v0.c0)OR('-270174183')))AND(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY ((((((v0.c0))<=((v0.c0))), ((v0.c0)-(v0.c0)), (+ (v0.c0))))<=((((v0.c0)!=(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0))))) DESC  NULLS LAST, CASE ((v0.c0) IS TRUE)  WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN (v0.c0 IN (v0.c0)) THEN '&p' WHEN ((((v0.c0)OR('-270174183')))AND(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0))<=((v0.c0))), ((v0.c0)-(v0.c0)), (+ (v0.c0))))<=((((v0.c0)!=(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0))))) DESC  NULLS LAST, CASE ((v0.c0) IS TRUE)  WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN (v0.c0 IN (v0.c0)) THEN '&p' WHEN ((((v0.c0)OR('-270174183')))AND(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY ((((((v0.c0))<=((v0.c0))), ((v0.c0)-(v0.c0)), (+ (v0.c0))))<=((((v0.c0)!=(v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0))))) DESC  NULLS LAST, CASE ((v0.c0) IS TRUE)  WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN (v0.c0 IN (v0.c0)) THEN '&p' WHEN ((((v0.c0)OR('-270174183')))AND(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 LEFT OUTER JOIN rt1 ON (rt1.c3 IN ()) WHERE ((((((((((v0.c0 IN (rt1.c0)))OR('' COLLATE RTRIM)))OR(t0.c59)))AND(((rt1.c2)!=(t0.c59)))))OR(rt1.c3))) ORDER BY ((((((rt1.c0) NOT NULL))OR('gw')))AND((+ (v0.c0)))), (~ (x''));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN (rt1.c0)))OR('' COLLATE RTRIM)))OR(t0.c59)))AND(((rt1.c2)<>(t0.c59)))))OR(rt1.c3))) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN rt1 ON (rt1.c3 IN ()) ORDER BY ((((((rt1.c0) NOT NULL))OR('gw')))AND((+ (v0.c0)))), (~ (x'')));
SELECT COUNT(*) FROM t0, v0 LEFT OUTER JOIN rt1 ON (rt1.c3 IN ()) WHERE ((((((((((v0.c0 IN (rt1.c0)))OR('' COLLATE RTRIM)))OR(t0.c59)))AND(((rt1.c2)!=(t0.c59)))))OR(rt1.c3))) ORDER BY ((((((rt1.c0) NOT NULL))OR('gw')))AND((+ (v0.c0)))), (~ (x''));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN (rt1.c0)))OR('' COLLATE RTRIM)))OR(t0.c59)))AND(((rt1.c2)<>(t0.c59)))))OR(rt1.c3))) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN rt1 ON (rt1.c3 IN ()) ORDER BY ((((((rt1.c0) NOT NULL))OR('gw')))AND((+ (v0.c0)))), (~ (x'')));
SELECT COUNT(*) FROM t0, v0 LEFT OUTER JOIN rt1 ON (rt1.c3 IN ()) WHERE ((((((((((v0.c0 IN (rt1.c0)))OR('' COLLATE RTRIM)))OR(t0.c59)))AND(((rt1.c2)!=(t0.c59)))))OR(rt1.c3))) ORDER BY ((((((rt1.c0) NOT NULL))OR('gw')))AND((+ (v0.c0)))), (~ (x''));
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c39)OR(t0.c39))))) ORDER BY ((((t0.c59)=(t0.c59))) BETWEEN (CASE t0.c59  WHEN t0.c39 THEN t0.c39 END) AND (((t0.c59) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c39)OR(t0.c39))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c59)=(t0.c59))) BETWEEN (CASE t0.c59  WHEN t0.c39 THEN t0.c39 END) AND (((t0.c59) ISNULL)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c39)OR(t0.c39))))) ORDER BY ((((t0.c59)=(t0.c59))) BETWEEN (CASE t0.c59  WHEN t0.c39 THEN t0.c39 END) AND (((t0.c59) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c39)OR(t0.c39))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c59)=(t0.c59))) BETWEEN (CASE t0.c59  WHEN t0.c39 THEN t0.c39 END) AND (((t0.c59) ISNULL)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c39)OR(t0.c39))))) ORDER BY ((((t0.c59)=(t0.c59))) BETWEEN (CASE t0.c59  WHEN t0.c39 THEN t0.c39 END) AND (((t0.c59) ISNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1 INNER JOIN t0 ON 0xffffffffa557f2f1 WHERE (CASE WHEN CAST(rt1.c3 AS INTEGER) THEN (rt1.c1 IN ()) END) ORDER BY CAST(((v0.c0)LIKE(rt1.c0)) AS NUMERIC), ((CAST(rt1.c1 AS TEXT))GLOB((rt1.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c3 AS INTEGER) THEN (rt1.c1 IN ()) END) IS TRUE)  as count FROM v0, rt1 INNER JOIN t0 ON 0Xffffffffa557f2f1 ORDER BY CAST(((v0.c0)LIKE(rt1.c0)) AS NUMERIC), ((CAST(rt1.c1 AS TEXT))GLOB((rt1.c2 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 INNER JOIN t0 ON 0xffffffffa557f2f1 WHERE (CASE WHEN CAST(rt1.c3 AS INTEGER) THEN (rt1.c1 IN ()) END) ORDER BY CAST(((v0.c0)LIKE(rt1.c0)) AS NUMERIC), ((CAST(rt1.c1 AS TEXT))GLOB((rt1.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c3 AS INTEGER) THEN (rt1.c1 IN ()) END) IS TRUE)  as count FROM v0, rt1 INNER JOIN t0 ON 0Xffffffffa557f2f1 ORDER BY CAST(((v0.c0)LIKE(rt1.c0)) AS NUMERIC), ((CAST(rt1.c1 AS TEXT))GLOB((rt1.c2 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 INNER JOIN t0 ON 0xffffffffa557f2f1 WHERE (CASE WHEN CAST(rt1.c3 AS INTEGER) THEN (rt1.c1 IN ()) END) ORDER BY CAST(((v0.c0)LIKE(rt1.c0)) AS NUMERIC), ((CAST(rt1.c1 AS TEXT))GLOB((rt1.c2 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CAST((NOT (rt1.c0)) AS NUMERIC)) ORDER BY ((0.2859036247789809) ISNULL), TRIM(DISTINCT (rt1.c3 IN (rt1.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY ((0.2859036247789809) ISNULL), TRIM(DISTINCT (rt1.c3 IN (rt1.c2)))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST((NOT (rt1.c0)) AS NUMERIC)) ORDER BY ((0.2859036247789809) ISNULL), TRIM(DISTINCT (rt1.c3 IN (rt1.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY ((0.2859036247789809) ISNULL), TRIM(DISTINCT (rt1.c3 IN (rt1.c2)))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST((NOT (rt1.c0)) AS NUMERIC)) ORDER BY ((0.2859036247789809) ISNULL), TRIM(DISTINCT (rt1.c3 IN (rt1.c2)))  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c59) BETWEEN (((('izbV\i', t0.c39, t0.c39)) BETWEEN ((t0.c59, t0.c39, t0.c39)) AND ((t0.c59, t0.c39, t0.c39)))) AND (((t0.c59) BETWEEN (t0.c39) AND (t0.c59)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c59) BETWEEN (((('izbV\i', t0.c39, t0.c39)) BETWEEN ((t0.c59, t0.c39, t0.c39)) AND ((t0.c59, t0.c39, t0.c39)))) AND (((t0.c59) BETWEEN (t0.c39) AND (t0.c59))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c59) BETWEEN (((('izbV\i', t0.c39, t0.c39)) BETWEEN ((t0.c59, t0.c39, t0.c39)) AND ((t0.c59, t0.c39, t0.c39)))) AND (((t0.c59) BETWEEN (t0.c39) AND (t0.c59)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c59) BETWEEN (((('izbV\i', t0.c39, t0.c39)) BETWEEN ((t0.c59, t0.c39, t0.c39)) AND ((t0.c59, t0.c39, t0.c39)))) AND (((t0.c59) BETWEEN (t0.c39) AND (t0.c59))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c59) BETWEEN (((('izbV\i', t0.c39, t0.c39)) BETWEEN ((t0.c59, t0.c39, t0.c39)) AND ((t0.c59, t0.c39, t0.c39)))) AND (((t0.c59) BETWEEN (t0.c39) AND (t0.c59)))));
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM v0, t0, rt1);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM v0, t0, rt1);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (rt1.c1);
SELECT ALL * FROM t0 INNER JOIN v0 ON (NULL IN ()) LEFT OUTER JOIN rt1 ON ((CAST(rt1.c3 AS BLOB)) ISNULL) WHERE (((((v0.c0)IS(rt1.c3)))GLOB(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS(rt1.c3)))GLOB(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (NULL IN ()) LEFT OUTER JOIN rt1 ON ((CAST(rt1.c3 AS BLOB)) ISNULL));
SELECT ALL * FROM t0 INNER JOIN v0 ON (NULL IN ()) LEFT OUTER JOIN rt1 ON ((CAST(rt1.c3 AS BLOB)) ISNULL) WHERE (((((v0.c0)IS(rt1.c3)))GLOB(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS(rt1.c3)))GLOB(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (NULL IN ()) LEFT OUTER JOIN rt1 ON ((CAST(rt1.c3 AS BLOB)) ISNULL));
SELECT ALL * FROM t0 INNER JOIN v0 ON (NULL IN ()) LEFT OUTER JOIN rt1 ON ((CAST(rt1.c3 AS BLOB)) ISNULL) WHERE (((((v0.c0)IS(rt1.c3)))GLOB(v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (((((((t0.c39)OR(rt1.c0)))OR(rt1.c3)))<=((((rt1.c1, '-714358108', rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, t0.c39, rt1.c3)))))) ORDER BY (((t0.c59)) NOT BETWEEN ((((v0.c0)=(rt1.c3)))) AND (((NOT (x'')))))  NULLS FIRST, -2051529410 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c39)OR(rt1.c0)))OR(rt1.c3)))<=((((rt1.c1, '-714358108', rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, t0.c39, rt1.c3)))))) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY (((t0.c59)) NOT BETWEEN ((((v0.c0)==(rt1.c3)))) AND (((NOT (x'')))))  NULLS FIRST, -2051529410 ASC);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (((((((t0.c39)OR(rt1.c0)))OR(rt1.c3)))<=((((rt1.c1, '-714358108', rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, t0.c39, rt1.c3)))))) ORDER BY (((t0.c59)) NOT BETWEEN ((((v0.c0)=(rt1.c3)))) AND (((NOT (x'')))))  NULLS FIRST, -2051529410 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c39)OR(rt1.c0)))OR(rt1.c3)))<=((((rt1.c1, '-714358108', rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, t0.c39, rt1.c3)))))) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY (((t0.c59)) NOT BETWEEN ((((v0.c0)==(rt1.c3)))) AND (((NOT (x'')))))  NULLS FIRST, -2051529410 ASC);
SELECT * FROM v0, t0 WHERE (CASE ((((t0.c39)OR(t0.c59)))OR(t0.c39))  WHEN (t0.c59 IN (v0.c0)) THEN ((NULL) ISNULL) END) ORDER BY v0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c39)OR(t0.c59)))OR(t0.c39))  WHEN (t0.c59 IN (v0.c0)) THEN ((NULL) ISNULL) END) IS TRUE)  as count FROM v0, t0 ORDER BY v0.c0 COLLATE NOCASE);
SELECT * FROM v0, t0 WHERE (CASE ((((t0.c39)OR(t0.c59)))OR(t0.c39))  WHEN (t0.c59 IN (v0.c0)) THEN ((NULL) ISNULL) END) ORDER BY v0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c39)OR(t0.c59)))OR(t0.c39))  WHEN (t0.c59 IN (v0.c0)) THEN ((NULL) ISNULL) END) IS TRUE)  as count FROM v0, t0 ORDER BY v0.c0 COLLATE NOCASE);
SELECT * FROM v0, t0 WHERE (CASE ((((t0.c39)OR(t0.c59)))OR(t0.c39))  WHEN (t0.c59 IN (v0.c0)) THEN ((NULL) ISNULL) END) ORDER BY v0.c0 COLLATE NOCASE;
SELECT * FROM v0, rt1, t0 WHERE (CASE json_array_length(rt1.c2)  WHEN rt1.c2 THEN rt1.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(rt1.c2)  WHEN rt1.c2 THEN rt1.c2 COLLATE RTRIM END) IS TRUE)  as count FROM v0, rt1, t0);
SELECT * FROM v0, rt1, t0 WHERE (CASE json_array_length(rt1.c2)  WHEN rt1.c2 THEN rt1.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(rt1.c2)  WHEN rt1.c2 THEN rt1.c2 COLLATE RTRIM END) IS TRUE)  as count FROM v0, rt1, t0);
SELECT * FROM v0, rt1, t0 WHERE (CASE json_array_length(rt1.c2)  WHEN rt1.c2 THEN rt1.c2 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c3)-(rt1.c0)))OR(TYPEOF(rt1.c2))))AND(ABS(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)-(rt1.c0)))OR(TYPEOF(rt1.c2))))AND(ABS(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c3)-(rt1.c0)))OR(TYPEOF(rt1.c2))))AND(ABS(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)-(rt1.c0)))OR(TYPEOF(rt1.c2))))AND(ABS(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c3)-(rt1.c0)))OR(TYPEOF(rt1.c2))))AND(ABS(rt1.c1))));
SELECT * FROM rt1, v0 WHERE ((((rt1.c3 IN ())) NOT BETWEEN ((NOT (v0.c0))) AND (CAST(rt1.c0 AS INTEGER)))) ORDER BY (((- (rt1.c3)))GLOB((rt1.c3 IN (rt1.c1, NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 IN ())) NOT BETWEEN ((NOT (v0.c0))) AND (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, v0 ORDER BY (((- (rt1.c3)))GLOB((rt1.c3 IN (rt1.c1, NULL)))));
SELECT * FROM rt1, v0 WHERE ((((rt1.c3 IN ())) NOT BETWEEN ((NOT (v0.c0))) AND (CAST(rt1.c0 AS INTEGER)))) ORDER BY (((- (rt1.c3)))GLOB((rt1.c3 IN (rt1.c1, NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 IN ())) NOT BETWEEN ((NOT (v0.c0))) AND (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, v0 ORDER BY (((- (rt1.c3)))GLOB((rt1.c3 IN (rt1.c1, NULL)))));
SELECT * FROM rt1, v0 WHERE ((((rt1.c3 IN ())) NOT BETWEEN ((NOT (v0.c0))) AND (CAST(rt1.c0 AS INTEGER)))) ORDER BY (((- (rt1.c3)))GLOB((rt1.c3 IN (rt1.c1, NULL))));
SELECT * FROM rt1, v0 WHERE (CASE CAST(rt1.c2 AS NUMERIC)  WHEN CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 END THEN (+ (v0.c0)) WHEN (((v0.c0))<=((rt1.c0))) THEN ((rt1.c2)>=(rt1.c2)) WHEN ((v0.c0) IS TRUE) THEN ((((((((rt1.c1)OR(rt1.c3)))AND('')))AND(v0.c0)))AND(rt1.c2)) END) ORDER BY NULLIF(((rt1.c0) IS FALSE), x'');
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c2 AS NUMERIC)  WHEN CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 END THEN (+ (v0.c0)) WHEN (((v0.c0))<=((rt1.c0))) THEN ((rt1.c2)>=(rt1.c2)) WHEN ((v0.c0) IS TRUE) THEN ((((((((rt1.c1)OR(rt1.c3)))AND('')))AND(v0.c0)))AND(rt1.c2)) END) IS TRUE)  as count FROM rt1, v0 ORDER BY NULLIF(((rt1.c0) IS FALSE), x''));
SELECT * FROM rt1, v0 WHERE (CASE CAST(rt1.c2 AS NUMERIC)  WHEN CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 END THEN (+ (v0.c0)) WHEN (((v0.c0))<=((rt1.c0))) THEN ((rt1.c2)>=(rt1.c2)) WHEN ((v0.c0) IS TRUE) THEN ((((((((rt1.c1)OR(rt1.c3)))AND('')))AND(v0.c0)))AND(rt1.c2)) END) ORDER BY NULLIF(((rt1.c0) IS FALSE), x'');
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c2 AS NUMERIC)  WHEN CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 END THEN (+ (v0.c0)) WHEN (((v0.c0))<=((rt1.c0))) THEN ((rt1.c2)>=(rt1.c2)) WHEN ((v0.c0) IS TRUE) THEN ((((((((rt1.c1)OR(rt1.c3)))AND('')))AND(v0.c0)))AND(rt1.c2)) END) IS TRUE)  as count FROM rt1, v0 ORDER BY NULLIF(((rt1.c0) IS FALSE), x''));
SELECT * FROM rt1, v0 WHERE (CASE CAST(rt1.c2 AS NUMERIC)  WHEN CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 END THEN (+ (v0.c0)) WHEN (((v0.c0))<=((rt1.c0))) THEN ((rt1.c2)>=(rt1.c2)) WHEN ((v0.c0) IS TRUE) THEN ((((((((rt1.c1)OR(rt1.c3)))AND('')))AND(v0.c0)))AND(rt1.c2)) END) ORDER BY NULLIF(((rt1.c0) IS FALSE), x'');
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON (NOT ((- (t0.c59)))) FULL OUTER JOIN rt1 ON rt1.c1 WHERE (((((t0.c39)%(rt1.c2)))IS NOT(TRIM(DISTINCT rt1.c3, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((t0.c39)%(rt1.c2)))IS NOT(TRIM(DISTINCT rt1.c3, v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (NOT ((- (t0.c59)))) FULL OUTER JOIN rt1 ON rt1.c1);
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON (NOT ((- (t0.c59)))) FULL OUTER JOIN rt1 ON rt1.c1 WHERE (((((t0.c39)%(rt1.c2)))IS NOT(TRIM(DISTINCT rt1.c3, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((t0.c39)%(rt1.c2)))IS NOT(TRIM(DISTINCT rt1.c3, v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (NOT ((- (t0.c59)))) FULL OUTER JOIN rt1 ON rt1.c1);
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON (NOT ((- (t0.c59)))) FULL OUTER JOIN rt1 ON rt1.c1 WHERE (((((t0.c39)%(rt1.c2)))IS NOT(TRIM(DISTINCT rt1.c3, v0.c0))));
SELECT ALL * FROM v0 WHERE ('Ꜧ') ORDER BY ((((v0.c0 IN ())))<((v0.c0)));
SELECT SUM(count) FROM (SELECT (('Ꜧ') IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 IN ())))<((v0.c0))));
SELECT ALL * FROM v0 WHERE ('Ꜧ') ORDER BY ((((v0.c0 IN ())))<((v0.c0)));
SELECT SUM(count) FROM (SELECT (('Ꜧ') IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 IN ())))<((v0.c0))));
SELECT ALL * FROM v0 WHERE ('Ꜧ') ORDER BY ((((v0.c0 IN ())))<((v0.c0)));
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ORDER BY (- (v0.c0 COLLATE BINARY)), v0.c0, CAST(v0.c0 AS INTEGER) COLLATE RTRIM COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c0 COLLATE BINARY)), v0.c0, CAST(v0.c0 AS INTEGER) COLLATE RTRIM COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ORDER BY (- (v0.c0 COLLATE BINARY)), v0.c0, CAST(v0.c0 AS INTEGER) COLLATE RTRIM COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c0 COLLATE BINARY)), v0.c0, CAST(v0.c0 AS INTEGER) COLLATE RTRIM COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ORDER BY (- (v0.c0 COLLATE BINARY)), v0.c0, CAST(v0.c0 AS INTEGER) COLLATE RTRIM COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS NUMERIC))OR(((t0.c59)<>(rt1.c1)))))OR(CAST(rt1.c0 AS TEXT))))OR(((t0.c39)AND('')))))AND(v0.c0)) FULL OUTER JOIN t0 ON ((((rt1.c0)IS NOT(t0.c59)))=(((rt1.c0)<=('1817972129')))) WHERE (((((NULL)AND((((rt1.c1))<=((rt1.c2))))))AND(((((rt1.c0)OR(rt1.c3)))AND(t0.c39))))) ORDER BY CASE WHEN t0.c39 THEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)) WHEN ((t0.c39) ISNULL) THEN t0.c59 WHEN ((rt1.c1) NOT NULL) THEN '' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND((((rt1.c1))<=((rt1.c2))))))AND(((((rt1.c0)OR(rt1.c3)))AND(t0.c39))))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS NUMERIC))OR(((t0.c59)!=(rt1.c1)))))OR(CAST(rt1.c0 AS TEXT))))OR(((t0.c39)AND('')))))AND(v0.c0)) FULL OUTER JOIN t0 ON ((((rt1.c0)IS NOT(t0.c59)))==(((rt1.c0)<=('1817972129')))) ORDER BY CASE WHEN t0.c39 THEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)) WHEN ((t0.c39) ISNULL) THEN t0.c59 WHEN ((rt1.c1) NOT NULL) THEN '' END ASC  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS NUMERIC))OR(((t0.c59)<>(rt1.c1)))))OR(CAST(rt1.c0 AS TEXT))))OR(((t0.c39)AND('')))))AND(v0.c0)) FULL OUTER JOIN t0 ON ((((rt1.c0)IS NOT(t0.c59)))=(((rt1.c0)<=('1817972129')))) WHERE (((((NULL)AND((((rt1.c1))<=((rt1.c2))))))AND(((((rt1.c0)OR(rt1.c3)))AND(t0.c39))))) ORDER BY CASE WHEN t0.c39 THEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)) WHEN ((t0.c39) ISNULL) THEN t0.c59 WHEN ((rt1.c1) NOT NULL) THEN '' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND((((rt1.c1))<=((rt1.c2))))))AND(((((rt1.c0)OR(rt1.c3)))AND(t0.c39))))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((((((CAST(v0.c0 AS NUMERIC))OR(((t0.c59)!=(rt1.c1)))))OR(CAST(rt1.c0 AS TEXT))))OR(((t0.c39)AND('')))))AND(v0.c0)) FULL OUTER JOIN t0 ON ((((rt1.c0)IS NOT(t0.c59)))==(((rt1.c0)<=('1817972129')))) ORDER BY CASE WHEN t0.c39 THEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)) WHEN ((t0.c39) ISNULL) THEN t0.c59 WHEN ((rt1.c1) NOT NULL) THEN '' END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((- (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (((v0.c0) IS FALSE))));
SELECT * FROM rt1 WHERE (((('1918166945' IN ()))>>(((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((('1918166945' IN ()))>>(((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((('1918166945' IN ()))>>(((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((('1918166945' IN ()))>>(((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((('1918166945' IN ()))>>(((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c3)))));
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 COLLATE NOCASE ELSE rt1.c0 END) ORDER BY CAST((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN rt1.c2 COLLATE NOCASE ELSE rt1.c0 END) IS TRUE)  as count FROM v0, rt1 ORDER BY CAST((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 COLLATE NOCASE ELSE rt1.c0 END) ORDER BY CAST((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN rt1.c2 COLLATE NOCASE ELSE rt1.c0 END) IS TRUE)  as count FROM v0, rt1 ORDER BY CAST((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 COLLATE NOCASE ELSE rt1.c0 END) ORDER BY CAST((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) AS INTEGER) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE ((NOT (('1051809820' IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (('1051809820' IN (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (('1051809820' IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (('1051809820' IN (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (('1051809820' IN (v0.c0)))));
SELECT * FROM rt1, t0, v0 WHERE ((~ (0.18680431654452623 COLLATE RTRIM))) ORDER BY COALESCE((t0.c59 IN ('')), (((x'7fd7', rt1.c3, rt1.c1))>((rt1.c3, t0.c39, rt1.c1))), (~ (rt1.c2)), CAST(rt1.c0 AS REAL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (0.18680431654452623 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY COALESCE((t0.c59 IN ('')), (((x'7fd7', rt1.c3, rt1.c1))>((rt1.c3, t0.c39, rt1.c1))), (~ (rt1.c2)), CAST(rt1.c0 AS REAL)) DESC);
SELECT * FROM rt1, t0, v0 WHERE ((~ (0.18680431654452623 COLLATE RTRIM))) ORDER BY COALESCE((t0.c59 IN ('')), (((x'7fd7', rt1.c3, rt1.c1))>((rt1.c3, t0.c39, rt1.c1))), (~ (rt1.c2)), CAST(rt1.c0 AS REAL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (0.18680431654452623 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY COALESCE((t0.c59 IN ('')), (((x'7fd7', rt1.c3, rt1.c1))>((rt1.c3, t0.c39, rt1.c1))), (~ (rt1.c2)), CAST(rt1.c0 AS REAL)) DESC);
SELECT * FROM rt1, t0, v0 WHERE ((~ (0.18680431654452623 COLLATE RTRIM))) ORDER BY COALESCE((t0.c59 IN ('')), (((x'7fd7', rt1.c3, rt1.c1))>((rt1.c3, t0.c39, rt1.c1))), (~ (rt1.c2)), CAST(rt1.c0 AS REAL)) DESC;
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN (rt1.c1 IN ()) WHEN 1080211704 THEN CASE WHEN 'P৶WD~' THEN rt1.c1 END WHEN rt1.c0 THEN ((((rt1.c3)OR('1086449786')))AND(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN (rt1.c1 IN ()) WHEN 1080211704 THEN CASE WHEN 'P৶WD~' THEN rt1.c1 END WHEN rt1.c0 THEN ((((rt1.c3)OR('1086449786')))AND(rt1.c3)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN (rt1.c1 IN ()) WHEN 1080211704 THEN CASE WHEN 'P৶WD~' THEN rt1.c1 END WHEN rt1.c0 THEN ((((rt1.c3)OR('1086449786')))AND(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN (rt1.c1 IN ()) WHEN 1080211704 THEN CASE WHEN 'P৶WD~' THEN rt1.c1 END WHEN rt1.c0 THEN ((((rt1.c3)OR('1086449786')))AND(rt1.c3)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN (rt1.c1 IN ()) WHEN 1080211704 THEN CASE WHEN 'P৶WD~' THEN rt1.c1 END WHEN rt1.c0 THEN ((((rt1.c3)OR('1086449786')))AND(rt1.c3)) END);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (0.09133991682220322);
SELECT SUM(count) FROM (SELECT ALL ((0.09133991682220322) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (0.09133991682220322);
SELECT SUM(count) FROM (SELECT ALL ((0.09133991682220322) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (0.09133991682220322);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c59)AND(t0.c39))) BETWEEN (((t0.c39) ISNULL)) AND (x''))) ORDER BY ((NULL) ISNULL), ((((((((((((((NULL)OR(t0.c59)))OR(t0.c39)))AND('_HA</*')))AND(t0.c59)))AND(t0.c59)))AND(t0.c39)))>=(((((t0.c59)OR(t0.c59)))AND(t0.c39)))), (- ('')) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c59)AND(t0.c39))) BETWEEN (((t0.c39) ISNULL)) AND (x''))) IS TRUE)  as count FROM t0 ORDER BY ((NULL) ISNULL), ((((((((((((((NULL)OR(t0.c59)))OR(t0.c39)))AND('_HA</*')))AND(t0.c59)))AND(t0.c59)))AND(t0.c39)))>=(((((t0.c59)OR(t0.c59)))AND(t0.c39)))), (- ('')) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c59)AND(t0.c39))) BETWEEN (((t0.c39) ISNULL)) AND (x''))) ORDER BY ((NULL) ISNULL), ((((((((((((((NULL)OR(t0.c59)))OR(t0.c39)))AND('_HA</*')))AND(t0.c59)))AND(t0.c59)))AND(t0.c39)))>=(((((t0.c59)OR(t0.c59)))AND(t0.c39)))), (- ('')) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c59)AND(t0.c39))) BETWEEN (((t0.c39) ISNULL)) AND (x''))) IS TRUE)  as count FROM t0 ORDER BY ((NULL) ISNULL), ((((((((((((((NULL)OR(t0.c59)))OR(t0.c39)))AND('_HA</*')))AND(t0.c59)))AND(t0.c59)))AND(t0.c39)))>=(((((t0.c59)OR(t0.c59)))AND(t0.c39)))), (- ('')) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c59)AND(t0.c39))) BETWEEN (((t0.c39) ISNULL)) AND (x''))) ORDER BY ((NULL) ISNULL), ((((((((((((((NULL)OR(t0.c59)))OR(t0.c39)))AND('_HA</*')))AND(t0.c59)))AND(t0.c59)))AND(t0.c39)))>=(((((t0.c59)OR(t0.c59)))AND(t0.c39)))), (- ('')) ASC;
SELECT * FROM t0 WHERE (((t0.c59)>=(((t0.c39) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c59)>=(((t0.c39) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c59)>=(((t0.c39) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c59)>=(((t0.c39) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c59)>=(((t0.c39) NOTNULL))));
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN v0 ON 'd,\X	y]Sf' WHERE ((((rt1.c1)) NOT BETWEEN ((NULL)) AND (((rt1.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((NULL)) AND (((rt1.c2 IN ()))))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN v0 ON 'd,\X	y]Sf');
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN v0 ON 'd,\X	y]Sf' WHERE ((((rt1.c1)) NOT BETWEEN ((NULL)) AND (((rt1.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((NULL)) AND (((rt1.c2 IN ()))))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN v0 ON 'd,\X	y]Sf');
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN v0 ON 'd,\X	y]Sf' WHERE ((((rt1.c1)) NOT BETWEEN ((NULL)) AND (((rt1.c2 IN ())))));
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((1.063522482E9)<=(rt1.c1)) IN ())) ORDER BY (rt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST, ((v0.c0 COLLATE NOCASE)<(((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((((1.063522482E9)<=(rt1.c1)) IN ())) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY (rt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST, ((v0.c0 COLLATE NOCASE)<(((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((1.063522482E9)<=(rt1.c1)) IN ())) ORDER BY (rt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST, ((v0.c0 COLLATE NOCASE)<(((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((((1.063522482E9)<=(rt1.c1)) IN ())) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY (rt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST, ((v0.c0 COLLATE NOCASE)<(((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((1.063522482E9)<=(rt1.c1)) IN ())) ORDER BY (rt1.c0 IN ()) COLLATE RTRIM  NULLS FIRST, ((v0.c0 COLLATE NOCASE)<(((v0.c0) IS TRUE)));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END COLLATE RTRIM WHERE ((ABS(DISTINCT rt1.c0) IN ())) ORDER BY CASE WHEN ((x'') BETWEEN (rt1.c1) AND (rt1.c0)) THEN CASE rt1.c2  WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN 1063522482 WHEN v0.c0 THEN rt1.c0 ELSE rt1.c3 END END, rt1.c0  NULLS LAST, CAST((rt1.c2 IN ()) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((ABS(DISTINCT rt1.c0) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END COLLATE RTRIM ORDER BY CASE WHEN ((x'') BETWEEN (rt1.c1) AND (rt1.c0)) THEN CASE rt1.c2  WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN 1063522482 WHEN v0.c0 THEN rt1.c0 ELSE rt1.c3 END END, rt1.c0  NULLS LAST, CAST((rt1.c2 IN ()) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END COLLATE RTRIM WHERE ((ABS(DISTINCT rt1.c0) IN ())) ORDER BY CASE WHEN ((x'') BETWEEN (rt1.c1) AND (rt1.c0)) THEN CASE rt1.c2  WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN 1063522482 WHEN v0.c0 THEN rt1.c0 ELSE rt1.c3 END END, rt1.c0  NULLS LAST, CAST((rt1.c2 IN ()) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((ABS(DISTINCT rt1.c0) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END COLLATE RTRIM ORDER BY CASE WHEN ((x'') BETWEEN (rt1.c1) AND (rt1.c0)) THEN CASE rt1.c2  WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN 1063522482 WHEN v0.c0 THEN rt1.c0 ELSE rt1.c3 END END, rt1.c0  NULLS LAST, CAST((rt1.c2 IN ()) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END COLLATE RTRIM WHERE ((ABS(DISTINCT rt1.c0) IN ())) ORDER BY CASE WHEN ((x'') BETWEEN (rt1.c1) AND (rt1.c0)) THEN CASE rt1.c2  WHEN v0.c0 THEN rt1.c0 WHEN rt1.c1 THEN 1063522482 WHEN v0.c0 THEN rt1.c0 ELSE rt1.c3 END END, rt1.c0  NULLS LAST, CAST((rt1.c2 IN ()) AS TEXT) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1 FULL OUTER JOIN t0 ON ((((v0.c0) NOTNULL)) BETWEEN (((t0.c59) BETWEEN (rt1.c2) AND (t0.c39))) AND (CASE t0.c39  WHEN rt1.c3 THEN rt1.c0 WHEN t0.c39 THEN rt1.c0 WHEN t0.c59 THEN rt1.c0 END)) WHERE ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) IN (0.8591612992388286, v0.c0))) ORDER BY TYPEOF(DISTINCT ((rt1.c3)IS(rt1.c3))), rt1.c0 COLLATE NOCASE  NULLS LAST, (+ ((~ (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) IN (0.8591612992388286, v0.c0))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN t0 ON ((((v0.c0) NOTNULL)) BETWEEN (((t0.c59) BETWEEN (rt1.c2) AND (t0.c39))) AND (CASE t0.c39  WHEN rt1.c3 THEN rt1.c0 WHEN t0.c39 THEN rt1.c0 WHEN t0.c59 THEN rt1.c0 END)) ORDER BY TYPEOF(DISTINCT ((rt1.c3)IS(rt1.c3))), rt1.c0 COLLATE NOCASE  NULLS LAST, (+ ((~ (rt1.c2)))) DESC);
SELECT COUNT(*) FROM v0, rt1 FULL OUTER JOIN t0 ON ((((v0.c0) NOTNULL)) BETWEEN (((t0.c59) BETWEEN (rt1.c2) AND (t0.c39))) AND (CASE t0.c39  WHEN rt1.c3 THEN rt1.c0 WHEN t0.c39 THEN rt1.c0 WHEN t0.c59 THEN rt1.c0 END)) WHERE ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) IN (0.8591612992388286, v0.c0))) ORDER BY TYPEOF(DISTINCT ((rt1.c3)IS(rt1.c3))), rt1.c0 COLLATE NOCASE  NULLS LAST, (+ ((~ (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) IN (0.8591612992388286, v0.c0))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN t0 ON ((((v0.c0) NOTNULL)) BETWEEN (((t0.c59) BETWEEN (rt1.c2) AND (t0.c39))) AND (CASE t0.c39  WHEN rt1.c3 THEN rt1.c0 WHEN t0.c39 THEN rt1.c0 WHEN t0.c59 THEN rt1.c0 END)) ORDER BY TYPEOF(DISTINCT ((rt1.c3)IS(rt1.c3))), rt1.c0 COLLATE NOCASE  NULLS LAST, (+ ((~ (rt1.c2)))) DESC);
SELECT COUNT(*) FROM v0, rt1 FULL OUTER JOIN t0 ON ((((v0.c0) NOTNULL)) BETWEEN (((t0.c59) BETWEEN (rt1.c2) AND (t0.c39))) AND (CASE t0.c39  WHEN rt1.c3 THEN rt1.c0 WHEN t0.c39 THEN rt1.c0 WHEN t0.c59 THEN rt1.c0 END)) WHERE ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) IN (0.8591612992388286, v0.c0))) ORDER BY TYPEOF(DISTINCT ((rt1.c3)IS(rt1.c3))), rt1.c0 COLLATE NOCASE  NULLS LAST, (+ ((~ (rt1.c2)))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((NOT (t0.c39)))OR(CASE WHEN t0.c39 THEN t0.c59 WHEN t0.c59 THEN t0.c59 WHEN t0.c59 THEN t0.c59 END)))OR(((t0.c39) NOT NULL)))) ORDER BY CAST(t0.c39 AS INTEGER) ASC  NULLS FIRST, CAST(0.8757909498357177 AS INTEGER) COLLATE BINARY  NULLS LAST, (- ((((t0.c39))=((t0.c59)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c39)))OR(CASE WHEN t0.c39 THEN t0.c59 WHEN t0.c59 THEN t0.c59 WHEN t0.c59 THEN t0.c59 END)))OR(((t0.c39) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c39 AS INTEGER) ASC  NULLS FIRST, CAST(0.8757909498357177 AS INTEGER) COLLATE BINARY  NULLS LAST, (- ((((t0.c39))=((t0.c59)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((NOT (t0.c39)))OR(CASE WHEN t0.c39 THEN t0.c59 WHEN t0.c59 THEN t0.c59 WHEN t0.c59 THEN t0.c59 END)))OR(((t0.c39) NOT NULL)))) ORDER BY CAST(t0.c39 AS INTEGER) ASC  NULLS FIRST, CAST(0.8757909498357177 AS INTEGER) COLLATE BINARY  NULLS LAST, (- ((((t0.c39))=((t0.c59)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c39)))OR(CASE WHEN t0.c39 THEN t0.c59 WHEN t0.c59 THEN t0.c59 WHEN t0.c59 THEN t0.c59 END)))OR(((t0.c39) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c39 AS INTEGER) ASC  NULLS FIRST, CAST(0.8757909498357177 AS INTEGER) COLLATE BINARY  NULLS LAST, (- ((((t0.c39))=((t0.c59)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((NOT (t0.c39)))OR(CASE WHEN t0.c39 THEN t0.c59 WHEN t0.c59 THEN t0.c59 WHEN t0.c59 THEN t0.c59 END)))OR(((t0.c39) NOT NULL)))) ORDER BY CAST(t0.c39 AS INTEGER) ASC  NULLS FIRST, CAST(0.8757909498357177 AS INTEGER) COLLATE BINARY  NULLS LAST, (- ((((t0.c39))=((t0.c59)))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c39))>=((rt1.c1))) COLLATE NOCASE) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c39))>=((rt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c39))>=((rt1.c1))) COLLATE NOCASE) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c39))>=((rt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c39))>=((rt1.c1))) COLLATE NOCASE) ORDER BY x''  NULLS FIRST;
SELECT ALL * FROM v0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (rt1.c3);
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON (((((t0.c39))<>((rt1.c2))))||(((rt1.c2)GLOB(rt1.c0)))) WHERE (((((((t0.c39) NOTNULL))AND(((rt1.c2) NOTNULL))))OR(((rt1.c0)*(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c39) NOTNULL))AND(((rt1.c2) NOTNULL))))OR(((rt1.c0)*(rt1.c1))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (((((t0.c39))<>((rt1.c2))))||(((rt1.c2)GLOB(rt1.c0)))));
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON (((((t0.c39))<>((rt1.c2))))||(((rt1.c2)GLOB(rt1.c0)))) WHERE (((((((t0.c39) NOTNULL))AND(((rt1.c2) NOTNULL))))OR(((rt1.c0)*(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c39) NOTNULL))AND(((rt1.c2) NOTNULL))))OR(((rt1.c0)*(rt1.c1))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (((((t0.c39))<>((rt1.c2))))||(((rt1.c2)GLOB(rt1.c0)))));
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON (((((t0.c39))<>((rt1.c2))))||(((rt1.c2)GLOB(rt1.c0)))) WHERE (((((((t0.c39) NOTNULL))AND(((rt1.c2) NOTNULL))))OR(((rt1.c0)*(rt1.c1)))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<<((v0.c0 IN (0.03787844921827377))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<<((v0.c0 IN (0.03787844921827377)))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<<((v0.c0 IN (0.03787844921827377))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<<((v0.c0 IN (0.03787844921827377)))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<<((v0.c0 IN (0.03787844921827377))));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CAST(((v0.c0) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CAST(((v0.c0) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CAST(((v0.c0) NOTNULL) AS BLOB));
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY HEX((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY HEX((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY HEX((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY HEX((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY HEX((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1, t0 WHERE (('T' IN ())) ORDER BY (((x'') IS FALSE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('T' IN ())) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (((x'') IS FALSE) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, t0 WHERE (('T' IN ())) ORDER BY (((x'') IS FALSE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('T' IN ())) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (((x'') IS FALSE) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, t0 WHERE (('T' IN ())) ORDER BY (((x'') IS FALSE) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE ((((((v0.c0)AND(v0.c0)))AND(rt1.c3)) IN ())) ORDER BY CASE ((rt1.c1)*(rt1.c0))  WHEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c0)OR(x'')) WHEN ((v0.c0) NOTNULL) THEN ((rt1.c1)>(rt1.c1)) WHEN -9.36031869E8 THEN ((v0.c0)&(NULL)) ELSE ((((v0.c0)AND(rt1.c0)))AND(rt1.c3)) END ASC  NULLS FIRST, ((NULLIF(DISTINCT rt1.c0, '1518743564'))<>(CHANGES()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(v0.c0)))AND(rt1.c3)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY CASE ((rt1.c1)*(rt1.c0))  WHEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c0)OR(x'')) WHEN ((v0.c0) NOTNULL) THEN ((rt1.c1)>(rt1.c1)) WHEN -9.36031869E8 THEN ((v0.c0)&(NULL)) ELSE ((((v0.c0)AND(rt1.c0)))AND(rt1.c3)) END ASC  NULLS FIRST, ((NULLIF(DISTINCT rt1.c0, '1518743564'))<>(CHANGES()))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE ((((((v0.c0)AND(v0.c0)))AND(rt1.c3)) IN ())) ORDER BY CASE ((rt1.c1)*(rt1.c0))  WHEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c0)OR(x'')) WHEN ((v0.c0) NOTNULL) THEN ((rt1.c1)>(rt1.c1)) WHEN -9.36031869E8 THEN ((v0.c0)&(NULL)) ELSE ((((v0.c0)AND(rt1.c0)))AND(rt1.c3)) END ASC  NULLS FIRST, ((NULLIF(DISTINCT rt1.c0, '1518743564'))<>(CHANGES()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(v0.c0)))AND(rt1.c3)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY CASE ((rt1.c1)*(rt1.c0))  WHEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c0)OR(x'')) WHEN ((v0.c0) NOTNULL) THEN ((rt1.c1)>(rt1.c1)) WHEN -9.36031869E8 THEN ((v0.c0)&(NULL)) ELSE ((((v0.c0)AND(rt1.c0)))AND(rt1.c3)) END ASC  NULLS FIRST, ((NULLIF(DISTINCT rt1.c0, '1518743564'))<>(CHANGES()))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE ((((((v0.c0)AND(v0.c0)))AND(rt1.c3)) IN ())) ORDER BY CASE ((rt1.c1)*(rt1.c0))  WHEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN ((rt1.c0)OR(x'')) WHEN ((v0.c0) NOTNULL) THEN ((rt1.c1)>(rt1.c1)) WHEN -9.36031869E8 THEN ((v0.c0)&(NULL)) ELSE ((((v0.c0)AND(rt1.c0)))AND(rt1.c3)) END ASC  NULLS FIRST, ((NULLIF(DISTINCT rt1.c0, '1518743564'))<>(CHANGES()))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)<<(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0, x'', v0.c0, v0.c0, v0.c0))>((v0.c0, 0.6033915657623043, '1308761162', v0.c0, v0.c0))) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)<<(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0, x'', v0.c0, v0.c0, v0.c0))>((v0.c0, 0.6033915657623043, '1308761162', v0.c0, v0.c0))) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)<<(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0, x'', v0.c0, v0.c0, v0.c0))>((v0.c0, 0.6033915657623043, '1308761162', v0.c0, v0.c0))) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)<<(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0, x'', v0.c0, v0.c0, v0.c0))>((v0.c0, 0.6033915657623043, '1308761162', v0.c0, v0.c0))) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)<<(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0, x'', v0.c0, v0.c0, v0.c0))>((v0.c0, 0.6033915657623043, '1308761162', v0.c0, v0.c0))) WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END END);
SELECT * FROM rt1 WHERE (((((rt1.c0)<=(rt1.c1)))+((((rt1.c1, rt1.c1, rt1.c3, rt1.c0, rt1.c3))!=((rt1.c3, rt1.c2, rt1.c0, rt1.c2, rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<=(rt1.c1)))+((((rt1.c1, rt1.c1, rt1.c3, rt1.c0, rt1.c3))!=((rt1.c3, rt1.c2, rt1.c0, rt1.c2, rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0)<=(rt1.c1)))+((((rt1.c1, rt1.c1, rt1.c3, rt1.c0, rt1.c3))!=((rt1.c3, rt1.c2, rt1.c0, rt1.c2, rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<=(rt1.c1)))+((((rt1.c1, rt1.c1, rt1.c3, rt1.c0, rt1.c3))!=((rt1.c3, rt1.c2, rt1.c0, rt1.c2, rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0)<=(rt1.c1)))+((((rt1.c1, rt1.c1, rt1.c3, rt1.c0, rt1.c3))!=((rt1.c3, rt1.c2, rt1.c0, rt1.c2, rt1.c0))))));
SELECT COUNT(*) FROM t0, rt1 INNER JOIN v0 ON (((rt1.c1))!=(((rt1.c0 IN ())))) WHERE (((((NULL) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t0, rt1 INNER JOIN v0 ON (((rt1.c1))!=(((rt1.c0 IN ())))));
SELECT COUNT(*) FROM t0, rt1 INNER JOIN v0 ON (((rt1.c1))!=(((rt1.c0 IN ())))) WHERE (((((NULL) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM t0, rt1 INNER JOIN v0 ON (((rt1.c1))!=(((rt1.c0 IN ())))));
SELECT COUNT(*) FROM t0, rt1 INNER JOIN v0 ON (((rt1.c1))!=(((rt1.c0 IN ())))) WHERE (((((NULL) IS TRUE)) IS FALSE));
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE (json_quote(((t0.c59) NOTNULL))) ORDER BY (((+ (rt1.c0)))<>(CASE rt1.c3  WHEN v0.c0 THEN rt1.c3 END))  NULLS FIRST, (((((v0.c0 IN ()))OR(NULLIF(DISTINCT '', t0.c59))))AND((NOT (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((t0.c59) NOTNULL))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY (((+ (rt1.c0)))!=(CASE rt1.c3  WHEN v0.c0 THEN rt1.c3 END))  NULLS FIRST, (((((v0.c0 IN ()))OR(NULLIF(DISTINCT '', t0.c59))))AND((NOT (rt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE (json_quote(((t0.c59) NOTNULL))) ORDER BY (((+ (rt1.c0)))<>(CASE rt1.c3  WHEN v0.c0 THEN rt1.c3 END))  NULLS FIRST, (((((v0.c0 IN ()))OR(NULLIF(DISTINCT '', t0.c59))))AND((NOT (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((t0.c59) NOTNULL))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY (((+ (rt1.c0)))!=(CASE rt1.c3  WHEN v0.c0 THEN rt1.c3 END))  NULLS FIRST, (((((v0.c0 IN ()))OR(NULLIF(DISTINCT '', t0.c59))))AND((NOT (rt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE (json_quote(((t0.c59) NOTNULL))) ORDER BY (((+ (rt1.c0)))<>(CASE rt1.c3  WHEN v0.c0 THEN rt1.c3 END))  NULLS FIRST, (((((v0.c0 IN ()))OR(NULLIF(DISTINCT '', t0.c59))))AND((NOT (rt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE ('ꦗ|#t(Y >') ORDER BY MIN(((t0.c59)IS NOT(t0.c59)), CAST(t0.c59 AS INTEGER), ((((((((t0.c59)AND(t0.c59)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), TRIM(NULL)) ASC, ((SUBSTR(t0.c59, t0.c59))>=(((t0.c59)<=(t0.c59)))) DESC  NULLS FIRST, ((v0.c0 COLLATE BINARY)LIKE((t0.c59 IN (v0.c0, t0.c39)))) DESC;
SELECT SUM(count) FROM (SELECT (('ꦗ|#t(Y >') IS TRUE)  as count FROM t0, v0 ORDER BY MIN(((t0.c59)IS NOT(t0.c59)), CAST(t0.c59 AS INTEGER), ((((((((t0.c59)AND(t0.c59)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), TRIM(NULL)) ASC, ((SUBSTR(t0.c59, t0.c59))>=(((t0.c59)<=(t0.c59)))) DESC  NULLS FIRST, ((v0.c0 COLLATE BINARY)LIKE((t0.c59 IN (v0.c0, t0.c39)))) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE ('ꦗ|#t(Y >') ORDER BY MIN(((t0.c59)IS NOT(t0.c59)), CAST(t0.c59 AS INTEGER), ((((((((t0.c59)AND(t0.c59)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), TRIM(NULL)) ASC, ((SUBSTR(t0.c59, t0.c59))>=(((t0.c59)<=(t0.c59)))) DESC  NULLS FIRST, ((v0.c0 COLLATE BINARY)LIKE((t0.c59 IN (v0.c0, t0.c39)))) DESC;
SELECT SUM(count) FROM (SELECT (('ꦗ|#t(Y >') IS TRUE)  as count FROM t0, v0 ORDER BY MIN(((t0.c59)IS NOT(t0.c59)), CAST(t0.c59 AS INTEGER), ((((((((t0.c59)AND(t0.c59)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), TRIM(NULL)) ASC, ((SUBSTR(t0.c59, t0.c59))>=(((t0.c59)<=(t0.c59)))) DESC  NULLS FIRST, ((v0.c0 COLLATE BINARY)LIKE((t0.c59 IN (v0.c0, t0.c39)))) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE ('ꦗ|#t(Y >') ORDER BY MIN(((t0.c59)IS NOT(t0.c59)), CAST(t0.c59 AS INTEGER), ((((((((t0.c59)AND(t0.c59)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), TRIM(NULL)) ASC, ((SUBSTR(t0.c59, t0.c59))>=(((t0.c59)<=(t0.c59)))) DESC  NULLS FIRST, ((v0.c0 COLLATE BINARY)LIKE((t0.c59 IN (v0.c0, t0.c39)))) DESC;
SELECT * FROM t0 NATURAL JOIN v0 WHERE (((t0.c59 COLLATE RTRIM) NOT BETWEEN (t0.c39 COLLATE NOCASE) AND (json_object(v0.c0, t0.c59))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c59 COLLATE RTRIM) NOT BETWEEN (t0.c39 COLLATE NOCASE) AND (json_object(v0.c0, t0.c59)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (((t0.c59 COLLATE RTRIM) NOT BETWEEN (t0.c39 COLLATE NOCASE) AND (json_object(v0.c0, t0.c59))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c59 COLLATE RTRIM) NOT BETWEEN (t0.c39 COLLATE NOCASE) AND (json_object(v0.c0, t0.c59)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (((t0.c59 COLLATE RTRIM) NOT BETWEEN (t0.c39 COLLATE NOCASE) AND (json_object(v0.c0, t0.c59))));
SELECT * FROM v0 WHERE (PRINTF((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((v0.c0 IN ()))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (PRINTF((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((v0.c0 IN ()))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (PRINTF((v0.c0 IN ())));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON CASE rt1.c2  WHEN t0.c59 THEN rt1.c0 ELSE rt1.c2 END COLLATE RTRIM WHERE (((LIKELY(0X1de6bc29))-(((0.9717021853786326)|('鬮樧'))))) ORDER BY UPPER(DISTINCT ((((rt1.c3)AND(rt1.c3)))AND(t0.c59))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(0X1de6bc29))-(((0.9717021853786326)|('鬮樧'))))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CASE rt1.c2  WHEN t0.c59 THEN rt1.c0 ELSE rt1.c2 END COLLATE RTRIM ORDER BY UPPER(DISTINCT ((((rt1.c3)AND(rt1.c3)))AND(t0.c59))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON CASE rt1.c2  WHEN t0.c59 THEN rt1.c0 ELSE rt1.c2 END COLLATE RTRIM WHERE (((LIKELY(0X1de6bc29))-(((0.9717021853786326)|('鬮樧'))))) ORDER BY UPPER(DISTINCT ((((rt1.c3)AND(rt1.c3)))AND(t0.c59))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(0X1de6bc29))-(((0.9717021853786326)|('鬮樧'))))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON CASE rt1.c2  WHEN t0.c59 THEN rt1.c0 ELSE rt1.c2 END COLLATE RTRIM ORDER BY UPPER(DISTINCT ((((rt1.c3)AND(rt1.c3)))AND(t0.c59))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON CASE rt1.c2  WHEN t0.c59 THEN rt1.c0 ELSE rt1.c2 END COLLATE RTRIM WHERE (((LIKELY(0X1de6bc29))-(((0.9717021853786326)|('鬮樧'))))) ORDER BY UPPER(DISTINCT ((((rt1.c3)AND(rt1.c3)))AND(t0.c59))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (CAST(rt1.c3 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c3 AS INTEGER)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (CAST(rt1.c3 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c3 AS INTEGER)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (CAST(rt1.c3 AS INTEGER));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON (- (t0.c59)) CROSS JOIN t0 ON CAST((NOT (rt1.c2)) AS REAL) WHERE (((rt1.c0 COLLATE BINARY) BETWEEN ((+ (t0.c39))) AND (((t0.c39)>=(rt1.c3))))) ORDER BY NULLIF(((v0.c0)!=(t0.c39)), ((t0.c39)-(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE BINARY) BETWEEN ((+ (t0.c39))) AND (((t0.c39)>=(rt1.c3))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON (- (t0.c59)) CROSS JOIN t0 ON CAST((NOT (rt1.c2)) AS REAL) ORDER BY NULLIF(((v0.c0)!=(t0.c39)), ((t0.c39)-(rt1.c2))));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON (- (t0.c59)) CROSS JOIN t0 ON CAST((NOT (rt1.c2)) AS REAL) WHERE (((rt1.c0 COLLATE BINARY) BETWEEN ((+ (t0.c39))) AND (((t0.c39)>=(rt1.c3))))) ORDER BY NULLIF(((v0.c0)!=(t0.c39)), ((t0.c39)-(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE BINARY) BETWEEN ((+ (t0.c39))) AND (((t0.c39)>=(rt1.c3))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON (- (t0.c59)) CROSS JOIN t0 ON CAST((NOT (rt1.c2)) AS REAL) ORDER BY NULLIF(((v0.c0)!=(t0.c39)), ((t0.c39)-(rt1.c2))));
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)IS NOT(SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE RTRIM)IS NOT(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)IS NOT(SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE RTRIM)IS NOT(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)IS NOT(SQLITE_SOURCE_ID())));
SELECT ALL * FROM rt1, t0, v0 WHERE (LENGTH(((((t0.c59)AND(t0.c39)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((((t0.c59)AND(t0.c39)))AND(rt1.c1)))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL * FROM rt1, t0, v0 WHERE (LENGTH(((((t0.c59)AND(t0.c39)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((((t0.c59)AND(t0.c39)))AND(rt1.c1)))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL * FROM rt1, t0, v0 WHERE (LENGTH(((((t0.c59)AND(t0.c39)))AND(rt1.c1))));
SELECT * FROM t0 WHERE (((LIKELIHOOD(DISTINCT t0.c59, 0.529553451052157))>=((((t0.c39, t0.c59, t0.c39)) NOT BETWEEN ((t0.c59, t0.c39, t0.c59)) AND ((t0.c39, t0.c59, t0.c39)))))) ORDER BY (((+ (t0.c59)))LIKE((t0.c59 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT t0.c59, 0.529553451052157))>=((((t0.c39, t0.c59, t0.c39)) NOT BETWEEN ((t0.c59, t0.c39, t0.c59)) AND ((t0.c39, t0.c59, t0.c39)))))) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c59)))LIKE((t0.c59 IN ()))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((LIKELIHOOD(DISTINCT t0.c59, 0.529553451052157))>=((((t0.c39, t0.c59, t0.c39)) NOT BETWEEN ((t0.c59, t0.c39, t0.c59)) AND ((t0.c39, t0.c59, t0.c39)))))) ORDER BY (((+ (t0.c59)))LIKE((t0.c59 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT t0.c59, 0.529553451052157))>=((((t0.c39, t0.c59, t0.c39)) NOT BETWEEN ((t0.c59, t0.c39, t0.c59)) AND ((t0.c39, t0.c59, t0.c39)))))) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c59)))LIKE((t0.c59 IN ()))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((LIKELIHOOD(DISTINCT t0.c59, 0.529553451052157))>=((((t0.c39, t0.c59, t0.c39)) NOT BETWEEN ((t0.c59, t0.c39, t0.c59)) AND ((t0.c39, t0.c59, t0.c39)))))) ORDER BY (((+ (t0.c59)))LIKE((t0.c59 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c39)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c39)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c39)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c39)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c39)) AS NUMERIC));
SELECT * FROM rt1 WHERE (MAX(CASE WHEN rt1.c1 THEN 'dZ)fe?' END, CAST(rt1.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((MAX(CASE WHEN rt1.c1 THEN 'dZ)fe?' END, CAST(rt1.c1 AS TEXT))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (MAX(CASE WHEN rt1.c1 THEN 'dZ)fe?' END, CAST(rt1.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((MAX(CASE WHEN rt1.c1 THEN 'dZ)fe?' END, CAST(rt1.c1 AS TEXT))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (MAX(CASE WHEN rt1.c1 THEN 'dZ)fe?' END, CAST(rt1.c1 AS TEXT)));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0, v0.c0, '-2094193481')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))<(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, '-2094193481')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))<(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0, v0.c0, '-2094193481')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))<(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, '-2094193481')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))<(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0, v0.c0, '-2094193481')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))<(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2)))%(rt1.c0 COLLATE RTRIM))) ORDER BY ((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((((rt1.c3)AND(rt1.c3)))AND(0.8899886869696942))) AND (((((rt1.c2)OR(rt1.c3)))AND(rt1.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))%(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((((rt1.c3)AND(rt1.c3)))AND(0.8899886869696942))) AND (((((rt1.c2)OR(rt1.c3)))AND(rt1.c3)))) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2)))%(rt1.c0 COLLATE RTRIM))) ORDER BY ((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((((rt1.c3)AND(rt1.c3)))AND(0.8899886869696942))) AND (((((rt1.c2)OR(rt1.c3)))AND(rt1.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))%(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((((rt1.c3)AND(rt1.c3)))AND(0.8899886869696942))) AND (((((rt1.c2)OR(rt1.c3)))AND(rt1.c3)))) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2)))%(rt1.c0 COLLATE RTRIM))) ORDER BY ((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((((rt1.c3)AND(rt1.c3)))AND(0.8899886869696942))) AND (((((rt1.c2)OR(rt1.c3)))AND(rt1.c3)))) ASC;
SELECT ALL * FROM rt1, t0, v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL * FROM rt1, t0, v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL * FROM rt1, t0, v0 WHERE ((v0.c0 IN ()));
SELECT ALL COUNT(*) FROM rt1, v0, t0 WHERE ((((((rt1.c3))<>((rt1.c3)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3))<>((rt1.c3)))) ISNULL)) IS TRUE)  as count FROM rt1, v0, t0);
SELECT ALL COUNT(*) FROM rt1, v0, t0 WHERE ((((((rt1.c3))<>((rt1.c3)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3))<>((rt1.c3)))) ISNULL)) IS TRUE)  as count FROM rt1, v0, t0);
SELECT ALL COUNT(*) FROM rt1, v0, t0 WHERE ((((((rt1.c3))<>((rt1.c3)))) ISNULL));
SELECT * FROM rt1 WHERE (((((rt1.c2)/(rt1.c2))) NOT BETWEEN (((rt1.c0)AND(rt1.c3))) AND (((rt1.c3)/(rt1.c2))))) ORDER BY COALESCE(((rt1.c2) NOTNULL), (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)/(rt1.c2))) NOT BETWEEN (((rt1.c0)AND(rt1.c3))) AND (((rt1.c3)/(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY COALESCE(((rt1.c2) NOTNULL), (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))) ASC);
SELECT * FROM rt1 WHERE (((((rt1.c2)/(rt1.c2))) NOT BETWEEN (((rt1.c0)AND(rt1.c3))) AND (((rt1.c3)/(rt1.c2))))) ORDER BY COALESCE(((rt1.c2) NOTNULL), (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)/(rt1.c2))) NOT BETWEEN (((rt1.c0)AND(rt1.c3))) AND (((rt1.c3)/(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY COALESCE(((rt1.c2) NOTNULL), (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))) ASC);
SELECT * FROM rt1 WHERE (((((rt1.c2)/(rt1.c2))) NOT BETWEEN (((rt1.c0)AND(rt1.c3))) AND (((rt1.c3)/(rt1.c2))))) ORDER BY COALESCE(((rt1.c2) NOTNULL), (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))) ASC;
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN v0 WHERE ((NOT (t0.c59 COLLATE BINARY))) ORDER BY UNLIKELY(((rt1.c2)||(rt1.c0))) DESC  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c59 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN v0 ORDER BY UNLIKELY(((rt1.c2)||(rt1.c0))) DESC  NULLS FIRST, x'' ASC);
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN v0 WHERE ((NOT (t0.c59 COLLATE BINARY))) ORDER BY UNLIKELY(((rt1.c2)||(rt1.c0))) DESC  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c59 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN v0 ORDER BY UNLIKELY(((rt1.c2)||(rt1.c0))) DESC  NULLS FIRST, x'' ASC);
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN v0 WHERE ((NOT (t0.c59 COLLATE BINARY))) ORDER BY UNLIKELY(((rt1.c2)||(rt1.c0))) DESC  NULLS FIRST, x'' ASC;
SELECT COUNT(*) FROM t0, rt1 WHERE ((HEX(rt1.c0) IN ())) ORDER BY ((t0.c59 COLLATE NOCASE) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((HEX(rt1.c0) IN ())) IS TRUE)  as count FROM t0, rt1 ORDER BY ((t0.c59 COLLATE NOCASE) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 WHERE ((HEX(rt1.c0) IN ())) ORDER BY ((t0.c59 COLLATE NOCASE) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((HEX(rt1.c0) IN ())) IS TRUE)  as count FROM t0, rt1 ORDER BY ((t0.c59 COLLATE NOCASE) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 WHERE ((HEX(rt1.c0) IN ())) ORDER BY ((t0.c59 COLLATE NOCASE) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (NULL) ORDER BY ((+ (t0.c59)) IN (t0.c39, v0.c0 COLLATE NOCASE)) DESC, (((t0.c59 IN ())) BETWEEN (NULL) AND ((((v0.c0, t0.c59, t0.c59)) NOT BETWEEN ((t0.c59, x'92aa', t0.c59)) AND ((x'', x'', t0.c59))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0 ORDER BY ((+ (t0.c59)) IN (t0.c39, v0.c0 COLLATE NOCASE)) DESC, (((t0.c59 IN ())) BETWEEN (NULL) AND ((((v0.c0, t0.c59, t0.c59)) NOT BETWEEN ((t0.c59, x'92aa', t0.c59)) AND ((x'', x'', t0.c59))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (NULL) ORDER BY ((+ (t0.c59)) IN (t0.c39, v0.c0 COLLATE NOCASE)) DESC, (((t0.c59 IN ())) BETWEEN (NULL) AND ((((v0.c0, t0.c59, t0.c59)) NOT BETWEEN ((t0.c59, x'92aa', t0.c59)) AND ((x'', x'', t0.c59))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0 ORDER BY ((+ (t0.c59)) IN (t0.c39, v0.c0 COLLATE NOCASE)) DESC, (((t0.c59 IN ())) BETWEEN (NULL) AND ((((v0.c0, t0.c59, t0.c59)) NOT BETWEEN ((t0.c59, x'92aa', t0.c59)) AND ((x'', x'', t0.c59))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (NULL) ORDER BY ((+ (t0.c59)) IN (t0.c39, v0.c0 COLLATE NOCASE)) DESC, (((t0.c59 IN ())) BETWEEN (NULL) AND ((((v0.c0, t0.c59, t0.c59)) NOT BETWEEN ((t0.c59, x'92aa', t0.c59)) AND ((x'', x'', t0.c59))))) DESC  NULLS FIRST;
SELECT * FROM v0, rt1, t0 WHERE ((((((v0.c0 IN ()))AND(((((v0.c0)OR(v0.c0)))OR(t0.c59)))))OR(-9.51845508E8)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(((((v0.c0)OR(v0.c0)))OR(t0.c59)))))OR(-9.51845508E8))) IS TRUE)  as count FROM v0, rt1, t0);
SELECT * FROM v0, rt1, t0 WHERE ((((((v0.c0 IN ()))AND(((((v0.c0)OR(v0.c0)))OR(t0.c59)))))OR(-9.51845508E8)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(((((v0.c0)OR(v0.c0)))OR(t0.c59)))))OR(-9.51845508E8))) IS TRUE)  as count FROM v0, rt1, t0);
SELECT * FROM v0, rt1, t0 WHERE ((((((v0.c0 IN ()))AND(((((v0.c0)OR(v0.c0)))OR(t0.c59)))))OR(-9.51845508E8)));
SELECT ALL * FROM rt1 WHERE ('-2136183997' COLLATE RTRIM) ORDER BY ((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) IN ());
SELECT SUM(count) FROM (SELECT ALL (('-2136183997' COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) IN ()));
SELECT ALL * FROM rt1 WHERE ('-2136183997' COLLATE RTRIM) ORDER BY ((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) IN ());
SELECT SUM(count) FROM (SELECT ALL (('-2136183997' COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) IN ()));
SELECT ALL * FROM rt1 WHERE ('-2136183997' COLLATE RTRIM) ORDER BY ((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) IN ());
SELECT * FROM v0 WHERE (CASE (v0.c0 IN (v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)<<(v0.c0)) WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ORDER BY ((v0.c0 COLLATE BINARY)OR(((0.1526047648456078) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN (v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)<<(v0.c0)) WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY)OR(((0.1526047648456078) ISNULL))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE (v0.c0 IN (v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)<<(v0.c0)) WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ORDER BY ((v0.c0 COLLATE BINARY)OR(((0.1526047648456078) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN (v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)<<(v0.c0)) WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY)OR(((0.1526047648456078) ISNULL))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE (v0.c0 IN (v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)<<(v0.c0)) WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ORDER BY ((v0.c0 COLLATE BINARY)OR(((0.1526047648456078) ISNULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1 WHERE (((((rt1.c0)IS(NULL)))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN v0.c0 THEN rt1.c3 ELSE rt1.c2 END))) ORDER BY ((((((((((((rt1.c0)AND('\r2JV')))OR(rt1.c3)))OR(rt1.c0)))OR(v0.c0)))AND(((rt1.c0) ISNULL))))AND((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)IS(NULL)))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN v0.c0 THEN rt1.c3 ELSE rt1.c2 END))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((((((((((rt1.c0)AND('\r2JV')))OR(rt1.c3)))OR(rt1.c0)))OR(v0.c0)))AND(((rt1.c0) ISNULL))))AND((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 WHERE (((((rt1.c0)IS(NULL)))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN v0.c0 THEN rt1.c3 ELSE rt1.c2 END))) ORDER BY ((((((((((((rt1.c0)AND('\r2JV')))OR(rt1.c3)))OR(rt1.c0)))OR(v0.c0)))AND(((rt1.c0) ISNULL))))AND((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)IS(NULL)))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN v0.c0 THEN rt1.c3 ELSE rt1.c2 END))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((((((((((rt1.c0)AND('\r2JV')))OR(rt1.c3)))OR(rt1.c0)))OR(v0.c0)))AND(((rt1.c0) ISNULL))))AND((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 WHERE (((((rt1.c0)IS(NULL)))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN v0.c0 THEN rt1.c3 ELSE rt1.c2 END))) ORDER BY ((((((((((((rt1.c0)AND('\r2JV')))OR(rt1.c3)))OR(rt1.c0)))OR(v0.c0)))AND(((rt1.c0) ISNULL))))AND((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3)))))  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN ((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN (0.35526756381347546 IN ()) WHEN (('-905026726')||('-968806518')) THEN ((rt1.c1) NOTNULL) WHEN NULL THEN x'' ELSE (t0.c39 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN (0.35526756381347546 IN ()) WHEN (('-905026726')||('-968806518')) THEN ((rt1.c1) NOTNULL) WHEN NULL THEN x'' ELSE (t0.c39 IN ()) END) IS TRUE)  as count FROM rt1, t0 NOT INDEXED);
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN ((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN (0.35526756381347546 IN ()) WHEN (('-905026726')||('-968806518')) THEN ((rt1.c1) NOTNULL) WHEN NULL THEN x'' ELSE (t0.c39 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN (0.35526756381347546 IN ()) WHEN (('-905026726')||('-968806518')) THEN ((rt1.c1) NOTNULL) WHEN NULL THEN x'' ELSE (t0.c39 IN ()) END) IS TRUE)  as count FROM rt1, t0 NOT INDEXED);
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN ((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c2)) THEN (0.35526756381347546 IN ()) WHEN (('-905026726')||('-968806518')) THEN ((rt1.c1) NOTNULL) WHEN NULL THEN x'' ELSE (t0.c39 IN ()) END);
SELECT * FROM v0, t0, rt1 WHERE ((+ (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT * FROM v0, t0, rt1 WHERE ((+ (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT * FROM v0, t0, rt1 WHERE ((+ (((v0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c39)AND(0x5620eff8)))AND(t0.c39))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c39)AND(0X5620eff8)))AND(t0.c39))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c39)AND(0x5620eff8)))AND(t0.c39))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c39)AND(0X5620eff8)))AND(t0.c39))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c39)AND(0x5620eff8)))AND(t0.c39))) ISNULL));
SELECT ALL * FROM rt1, t0 INNER JOIN v0 ON ((((0xffffffffa706efdf) IS TRUE))-(((t0.c59) BETWEEN (rt1.c0) AND (rt1.c3)))) WHERE (((LIKE(rt1.c1, rt1.c3))%(((rt1.c2)>=(rt1.c1))))) ORDER BY (((~ (t0.c39))) IS TRUE) ASC  NULLS LAST, CASE (+ (t0.c39))  WHEN (rt1.c3 IN ()) THEN ((rt1.c0)|(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(rt1.c1, rt1.c3))%(((rt1.c2)>=(rt1.c1))))) IS TRUE)  as count FROM rt1, t0 INNER JOIN v0 ON ((((0Xffffffffa706efdf) IS TRUE))-(((t0.c59) BETWEEN (rt1.c0) AND (rt1.c3)))) ORDER BY (((~ (t0.c39))) IS TRUE) ASC  NULLS LAST, CASE (+ (t0.c39))  WHEN (rt1.c3 IN ()) THEN ((rt1.c0)|(rt1.c0)) END);
SELECT ALL * FROM rt1, t0 INNER JOIN v0 ON ((((0xffffffffa706efdf) IS TRUE))-(((t0.c59) BETWEEN (rt1.c0) AND (rt1.c3)))) WHERE (((LIKE(rt1.c1, rt1.c3))%(((rt1.c2)>=(rt1.c1))))) ORDER BY (((~ (t0.c39))) IS TRUE) ASC  NULLS LAST, CASE (+ (t0.c39))  WHEN (rt1.c3 IN ()) THEN ((rt1.c0)|(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(rt1.c1, rt1.c3))%(((rt1.c2)>=(rt1.c1))))) IS TRUE)  as count FROM rt1, t0 INNER JOIN v0 ON ((((0Xffffffffa706efdf) IS TRUE))-(((t0.c59) BETWEEN (rt1.c0) AND (rt1.c3)))) ORDER BY (((~ (t0.c39))) IS TRUE) ASC  NULLS LAST, CASE (+ (t0.c39))  WHEN (rt1.c3 IN ()) THEN ((rt1.c0)|(rt1.c0)) END);
SELECT ALL * FROM rt1, t0 INNER JOIN v0 ON ((((0xffffffffa706efdf) IS TRUE))-(((t0.c59) BETWEEN (rt1.c0) AND (rt1.c3)))) WHERE (((LIKE(rt1.c1, rt1.c3))%(((rt1.c2)>=(rt1.c1))))) ORDER BY (((~ (t0.c39))) IS TRUE) ASC  NULLS LAST, CASE (+ (t0.c39))  WHEN (rt1.c3 IN ()) THEN ((rt1.c0)|(rt1.c0)) END;
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1)*(rt1.c3))))>((CAST(rt1.c2 AS NUMERIC))))) ORDER BY load_extension(((rt1.c3)!=(rt1.c1)), CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)*(rt1.c3))))>((CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt1 ORDER BY load_extension(((rt1.c3)<>(rt1.c1)), CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 END) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1)*(rt1.c3))))>((CAST(rt1.c2 AS NUMERIC))))) ORDER BY load_extension(((rt1.c3)!=(rt1.c1)), CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)*(rt1.c3))))>((CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt1 ORDER BY load_extension(((rt1.c3)<>(rt1.c1)), CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 END) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1)*(rt1.c3))))>((CAST(rt1.c2 AS NUMERIC))))) ORDER BY load_extension(((rt1.c3)!=(rt1.c1)), CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 END) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>(((v0.c0)>>(v0.c0))))) ORDER BY ((((v0.c0)>>(v0.c0))) NOT NULL) ASC, ((((v0.c0)/(v0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>>(v0.c0))) NOT NULL) ASC, ((((v0.c0)/(v0.c0))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>(((v0.c0)>>(v0.c0))))) ORDER BY ((((v0.c0)>>(v0.c0))) NOT NULL) ASC, ((((v0.c0)/(v0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>>(v0.c0))) NOT NULL) ASC, ((((v0.c0)/(v0.c0))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>(((v0.c0)>>(v0.c0))))) ORDER BY ((((v0.c0)>>(v0.c0))) NOT NULL) ASC, ((((v0.c0)/(v0.c0))) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM rt1 NOT INDEXED, v0 WHERE (CAST((v0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1 NOT INDEXED, v0 WHERE (CAST((v0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1 NOT INDEXED, v0 WHERE (CAST((v0.c0 IN ()) AS REAL));
SELECT * FROM rt1, t0, v0 WHERE (((((CAST(rt1.c3 AS NUMERIC))AND(((rt1.c0) NOT BETWEEN ('tc') AND (rt1.c2)))))AND(((((v0.c0)AND(t0.c39)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c3 AS NUMERIC))AND(((rt1.c0) NOT BETWEEN ('tc') AND (rt1.c2)))))AND(((((v0.c0)AND(t0.c39)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT * FROM rt1, t0, v0 WHERE (((((CAST(rt1.c3 AS NUMERIC))AND(((rt1.c0) NOT BETWEEN ('tc') AND (rt1.c2)))))AND(((((v0.c0)AND(t0.c39)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c3 AS NUMERIC))AND(((rt1.c0) NOT BETWEEN ('tc') AND (rt1.c2)))))AND(((((v0.c0)AND(t0.c39)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT * FROM rt1, t0, v0 WHERE (((((CAST(rt1.c3 AS NUMERIC))AND(((rt1.c0) NOT BETWEEN ('tc') AND (rt1.c2)))))AND(((((v0.c0)AND(t0.c39)))AND(rt1.c2)))));
SELECT * FROM rt1 WHERE ((((((((((((rt1.c0)AND(rt1.c1)))OR(x'')))OR(rt1.c1)))OR(rt1.c1)), NULL, ((rt1.c3)IS NOT(rt1.c2))))<=((((rt1.c0) ISNULL), ((((x'')OR(rt1.c2)))OR(rt1.c2)), (('-753886758') BETWEEN (rt1.c2) AND (rt1.c3)))))) ORDER BY ((((CAST(rt1.c1 AS INTEGER))AND(0.6957055978373912)))AND('-1792254296')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c0)AND(rt1.c1)))OR(x'')))OR(rt1.c1)))OR(rt1.c1)), NULL, ((rt1.c3)IS NOT(rt1.c2))))<=((((rt1.c0) ISNULL), ((((x'')OR(rt1.c2)))OR(rt1.c2)), (('-753886758') BETWEEN (rt1.c2) AND (rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(rt1.c1 AS INTEGER))AND(0.6957055978373912)))AND('-1792254296')) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((((((((((rt1.c0)AND(rt1.c1)))OR(x'')))OR(rt1.c1)))OR(rt1.c1)), NULL, ((rt1.c3)IS NOT(rt1.c2))))<=((((rt1.c0) ISNULL), ((((x'')OR(rt1.c2)))OR(rt1.c2)), (('-753886758') BETWEEN (rt1.c2) AND (rt1.c3)))))) ORDER BY ((((CAST(rt1.c1 AS INTEGER))AND(0.6957055978373912)))AND('-1792254296')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c0)AND(rt1.c1)))OR(x'')))OR(rt1.c1)))OR(rt1.c1)), NULL, ((rt1.c3)IS NOT(rt1.c2))))<=((((rt1.c0) ISNULL), ((((x'')OR(rt1.c2)))OR(rt1.c2)), (('-753886758') BETWEEN (rt1.c2) AND (rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(rt1.c1 AS INTEGER))AND(0.6957055978373912)))AND('-1792254296')) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((((((((((rt1.c0)AND(rt1.c1)))OR(x'')))OR(rt1.c1)))OR(rt1.c1)), NULL, ((rt1.c3)IS NOT(rt1.c2))))<=((((rt1.c0) ISNULL), ((((x'')OR(rt1.c2)))OR(rt1.c2)), (('-753886758') BETWEEN (rt1.c2) AND (rt1.c3)))))) ORDER BY ((((CAST(rt1.c1 AS INTEGER))AND(0.6957055978373912)))AND('-1792254296')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE ((+ (((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))OR(t0.c39)))AND(t0.c59)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))OR(t0.c39)))AND(t0.c59))))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE ((+ (((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))OR(t0.c39)))AND(t0.c59)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))OR(t0.c39)))AND(t0.c59))))) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE ((+ (((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))OR(t0.c39)))AND(t0.c59)))));
SELECT COUNT(*) FROM v0 WHERE (CASE x''  WHEN (' .y}7W0?' IN ()) THEN (- (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)GLOB(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ABS(DISTINCT v0.c0) ELSE ((v0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (' .y}7W0?' IN ()) THEN (- (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)GLOB(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ABS(DISTINCT v0.c0) ELSE ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE x''  WHEN (' .y}7W0?' IN ()) THEN (- (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)GLOB(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ABS(DISTINCT v0.c0) ELSE ((v0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (' .y}7W0?' IN ()) THEN (- (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)GLOB(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ABS(DISTINCT v0.c0) ELSE ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE x''  WHEN (' .y}7W0?' IN ()) THEN (- (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)GLOB(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ABS(DISTINCT v0.c0) ELSE ((v0.c0) IS TRUE) END);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))>>((NOT (0.41473949123463505))))) ORDER BY (((~ (v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE))>>((NOT (0.41473949123463505))))) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0) NOTNULL))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))>>((NOT (0.41473949123463505))))) ORDER BY (((~ (v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE))>>((NOT (0.41473949123463505))))) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0) NOTNULL))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))>>((NOT (0.41473949123463505))))) ORDER BY (((~ (v0.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0) NOTNULL)));
SELECT * FROM rt1, t0 INNER JOIN v0 ON json_array_length(CAST(rt1.c3 AS BLOB)) WHERE ((((rt1.c1)AND(t0.c39)) IN (((((((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)))AND(t0.c59)))OR(t0.c59)), '2006162676')));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)AND(t0.c39)) IN (((((((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)))AND(t0.c59)))OR(t0.c59)), '2006162676'))) IS TRUE)  as count FROM rt1, t0 INNER JOIN v0 ON json_array_length(CAST(rt1.c3 AS BLOB)));
SELECT * FROM rt1, t0 INNER JOIN v0 ON json_array_length(CAST(rt1.c3 AS BLOB)) WHERE ((((rt1.c1)AND(t0.c39)) IN (((((((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)))AND(t0.c59)))OR(t0.c59)), '2006162676')));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)AND(t0.c39)) IN (((((((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)))AND(t0.c59)))OR(t0.c59)), '2006162676'))) IS TRUE)  as count FROM rt1, t0 INNER JOIN v0 ON json_array_length(CAST(rt1.c3 AS BLOB)));
SELECT * FROM rt1, t0 INNER JOIN v0 ON json_array_length(CAST(rt1.c3 AS BLOB)) WHERE ((((rt1.c1)AND(t0.c39)) IN (((((((((rt1.c3)AND(rt1.c2)))AND(rt1.c0)))AND(t0.c59)))OR(t0.c59)), '2006162676')));
SELECT ALL * FROM t0, rt1 WHERE (x'') ORDER BY ((CASE WHEN rt1.c3 THEN t0.c39 END) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt1 ORDER BY ((CASE WHEN rt1.c3 THEN t0.c39 END) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (x'') ORDER BY ((CASE WHEN rt1.c3 THEN t0.c39 END) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt1 ORDER BY ((CASE WHEN rt1.c3 THEN t0.c39 END) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (x'') ORDER BY ((CASE WHEN rt1.c3 THEN t0.c39 END) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM rt1, v0 WHERE (rt1.c3) ORDER BY TIME(rt1.c2, rt1.c3, rt1.c0, rt1.c1, rt1.c0) COLLATE NOCASE COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, v0 ORDER BY TIME(rt1.c2, rt1.c3, rt1.c0, rt1.c1, rt1.c0) COLLATE NOCASE COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE (rt1.c3) ORDER BY TIME(rt1.c2, rt1.c3, rt1.c0, rt1.c1, rt1.c0) COLLATE NOCASE COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, v0 ORDER BY TIME(rt1.c2, rt1.c3, rt1.c0, rt1.c1, rt1.c0) COLLATE NOCASE COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE (rt1.c3) ORDER BY TIME(rt1.c2, rt1.c3, rt1.c0, rt1.c1, rt1.c0) COLLATE NOCASE COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM rt1, v0 WHERE ('1556061569');
SELECT SUM(count) FROM (SELECT ALL (('1556061569') IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE ('1556061569');
SELECT SUM(count) FROM (SELECT ALL (('1556061569') IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE ('1556061569');
SELECT ALL COUNT(*) FROM rt1 WHERE (((COALESCE(DISTINCT rt1.c0, rt1.c1))&(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY (~ (rt1.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt1.c0, rt1.c1))&(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((COALESCE(DISTINCT rt1.c0, rt1.c1))&(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY (~ (rt1.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt1.c0, rt1.c1))&(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((COALESCE(DISTINCT rt1.c0, rt1.c1))&(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY (~ (rt1.c0)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CAST(((v0.c0)<(t0.c39)) AS BLOB)) ORDER BY (((+ (rt1.c2)))||((rt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<(t0.c39)) AS BLOB)) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (((+ (rt1.c2)))||((rt1.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CAST(((v0.c0)<(t0.c39)) AS BLOB)) ORDER BY (((+ (rt1.c2)))||((rt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<(t0.c39)) AS BLOB)) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (((+ (rt1.c2)))||((rt1.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CAST(((v0.c0)<(t0.c39)) AS BLOB)) ORDER BY (((+ (rt1.c2)))||((rt1.c0 IN ()))) ASC;
SELECT COUNT(*) FROM t0, v0 WHERE (CASE ((v0.c0)<>(NULL))  WHEN ((t0.c59) ISNULL) THEN 'v(' WHEN (NOT (t0.c59)) THEN ((v0.c0)LIKE(t0.c59)) WHEN CASE WHEN t0.c39 THEN NULL ELSE v0.c0 END THEN 0.7800557080660123 WHEN (x'5210' IN ()) THEN ((v0.c0)<(t0.c39)) WHEN ((t0.c59) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(t0.c59 AS NUMERIC) END) ORDER BY JULIANDAY(((t0.c39)*(t0.c39)), (v0.c0 IN ()), (~ (t0.c59)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)!=(NULL))  WHEN ((t0.c59) ISNULL) THEN 'v(' WHEN (NOT (t0.c59)) THEN ((v0.c0)LIKE(t0.c59)) WHEN CASE WHEN t0.c39 THEN NULL ELSE v0.c0 END THEN 0.7800557080660123 WHEN (x'5210' IN ()) THEN ((v0.c0)<(t0.c39)) WHEN ((t0.c59) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(t0.c59 AS NUMERIC) END) IS TRUE)  as count FROM t0, v0 ORDER BY JULIANDAY(((t0.c39)*(t0.c39)), (v0.c0 IN ()), (~ (t0.c59)))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (CASE ((v0.c0)<>(NULL))  WHEN ((t0.c59) ISNULL) THEN 'v(' WHEN (NOT (t0.c59)) THEN ((v0.c0)LIKE(t0.c59)) WHEN CASE WHEN t0.c39 THEN NULL ELSE v0.c0 END THEN 0.7800557080660123 WHEN (x'5210' IN ()) THEN ((v0.c0)<(t0.c39)) WHEN ((t0.c59) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(t0.c59 AS NUMERIC) END) ORDER BY JULIANDAY(((t0.c39)*(t0.c39)), (v0.c0 IN ()), (~ (t0.c59)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)!=(NULL))  WHEN ((t0.c59) ISNULL) THEN 'v(' WHEN (NOT (t0.c59)) THEN ((v0.c0)LIKE(t0.c59)) WHEN CASE WHEN t0.c39 THEN NULL ELSE v0.c0 END THEN 0.7800557080660123 WHEN (x'5210' IN ()) THEN ((v0.c0)<(t0.c39)) WHEN ((t0.c59) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(t0.c59 AS NUMERIC) END) IS TRUE)  as count FROM t0, v0 ORDER BY JULIANDAY(((t0.c39)*(t0.c39)), (v0.c0 IN ()), (~ (t0.c59)))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (CASE ((v0.c0)<>(NULL))  WHEN ((t0.c59) ISNULL) THEN 'v(' WHEN (NOT (t0.c59)) THEN ((v0.c0)LIKE(t0.c59)) WHEN CASE WHEN t0.c39 THEN NULL ELSE v0.c0 END THEN 0.7800557080660123 WHEN (x'5210' IN ()) THEN ((v0.c0)<(t0.c39)) WHEN ((t0.c59) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(t0.c59 AS NUMERIC) END) ORDER BY JULIANDAY(((t0.c39)*(t0.c39)), (v0.c0 IN ()), (~ (t0.c59)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(x'' AS NUMERIC));
SELECT ALL * FROM rt1 WHERE (((rt1.c3) NOT BETWEEN ('-487515071') AND (rt1.c2)) COLLATE RTRIM) ORDER BY (- ('-1725005245')), ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)>=(rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN ('-487515071') AND (rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (- ('-1725005245')), ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)>=(rt1.c0))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c3) NOT BETWEEN ('-487515071') AND (rt1.c2)) COLLATE RTRIM) ORDER BY (- ('-1725005245')), ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)>=(rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN ('-487515071') AND (rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (- ('-1725005245')), ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)>=(rt1.c0))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c3) NOT BETWEEN ('-487515071') AND (rt1.c2)) COLLATE RTRIM) ORDER BY (- ('-1725005245')), ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)>=(rt1.c0))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1 WHERE (((((((v0.c0)OR(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (((v0.c0)>(NULL))) AND (((x'')<=(rt1.c3))))) ORDER BY ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (((v0.c0)>(NULL))) AND (((x'')<=(rt1.c3))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END) IS TRUE));
SELECT COUNT(*) FROM v0, rt1 WHERE (((((((v0.c0)OR(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (((v0.c0)>(NULL))) AND (((x'')<=(rt1.c3))))) ORDER BY ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (((v0.c0)>(NULL))) AND (((x'')<=(rt1.c3))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END) IS TRUE));
SELECT COUNT(*) FROM v0, rt1 WHERE (((((((v0.c0)OR(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (((v0.c0)>(NULL))) AND (((x'')<=(rt1.c3))))) ORDER BY ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END) IS TRUE);
SELECT * FROM v0 FULL OUTER JOIN rt1 ON (((CAST(rt1.c1 AS TEXT)))<(((rt1.c0 IN ())))) WHERE (((CAST(x'ade9' AS NUMERIC))+((((0.5831992375955469))!=((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'ade9' AS NUMERIC))+((((0.5831992375955469))!=((rt1.c2)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON (((CAST(rt1.c1 AS TEXT)))<(((rt1.c0 IN ())))));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON (((CAST(rt1.c1 AS TEXT)))<(((rt1.c0 IN ())))) WHERE (((CAST(x'ade9' AS NUMERIC))+((((0.5831992375955469))!=((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'ade9' AS NUMERIC))+((((0.5831992375955469))!=((rt1.c2)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON (((CAST(rt1.c1 AS TEXT)))<(((rt1.c0 IN ())))));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON (((CAST(rt1.c1 AS TEXT)))<(((rt1.c0 IN ())))) WHERE (((CAST(x'ade9' AS NUMERIC))+((((0.5831992375955469))!=((rt1.c2))))));
SELECT * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((0.4804010662475602)) AND ((v0.c0)))) AND (((v0.c0) IS FALSE)))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((0.4804010662475602)) AND ((v0.c0)))) AND (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((0.4804010662475602)) AND ((v0.c0)))) AND (((v0.c0) IS FALSE)))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((0.4804010662475602)) AND ((v0.c0)))) AND (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((0.4804010662475602)) AND ((v0.c0)))) AND (((v0.c0) IS FALSE)))) ORDER BY v0.c0  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (TYPEOF(CAST(rt1.c2 AS NUMERIC))) ORDER BY (((((rt1.c3))<=((rt1.c2))))IS NOT(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c3))<=((rt1.c2))))IS NOT(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (TYPEOF(CAST(rt1.c2 AS NUMERIC))) ORDER BY (((((rt1.c3))<=((rt1.c2))))IS NOT(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c3))<=((rt1.c2))))IS NOT(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (TYPEOF(CAST(rt1.c2 AS NUMERIC))) ORDER BY (((((rt1.c3))<=((rt1.c2))))IS NOT(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((- (v0.c0)))||(json_valid(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))||(json_valid(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((- (v0.c0)))||(json_valid(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))||(json_valid(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((- (v0.c0)))||(json_valid(v0.c0))));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c59 THEN t0.c59 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c59 THEN t0.c59 COLLATE RTRIM END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c59 THEN t0.c59 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c59 THEN t0.c59 COLLATE RTRIM END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c59 THEN t0.c59 COLLATE RTRIM END);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)AND('~<B9Xe]y3')))OR(v0.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((TYPEOF(DISTINCT v0.c0)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND('~<B9Xe]y3')))OR(v0.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((TYPEOF(DISTINCT v0.c0)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)AND('~<B9Xe]y3')))OR(v0.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((TYPEOF(DISTINCT v0.c0)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND('~<B9Xe]y3')))OR(v0.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((TYPEOF(DISTINCT v0.c0)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)AND('~<B9Xe]y3')))OR(v0.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY ((TYPEOF(DISTINCT v0.c0)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0 COLLATE NOCASE));
SELECT ALL * FROM t0, v0 WHERE (((((t0.c39))>=((0.13998360631008566))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c39))>=((0.13998360631008566))) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c39))>=((0.13998360631008566))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c39))>=((0.13998360631008566))) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c39))>=((0.13998360631008566))) IN ()));
SELECT COUNT(*) FROM rt1 WHERE (json_array(((rt1.c3) NOT NULL), rt1.c3)) ORDER BY (NOT ((((rt1.c3))>=((rt1.c0))))), (((~ (rt1.c2)))GLOB('114563323'));
SELECT SUM(count) FROM (SELECT ((json_array(((rt1.c3) NOT NULL), rt1.c3)) IS TRUE)  as count FROM rt1 ORDER BY (NOT ((((rt1.c3))>=((rt1.c0))))), (((~ (rt1.c2)))GLOB('114563323')));
SELECT COUNT(*) FROM rt1 WHERE (json_array(((rt1.c3) NOT NULL), rt1.c3)) ORDER BY (NOT ((((rt1.c3))>=((rt1.c0))))), (((~ (rt1.c2)))GLOB('114563323'));
SELECT SUM(count) FROM (SELECT ((json_array(((rt1.c3) NOT NULL), rt1.c3)) IS TRUE)  as count FROM rt1 ORDER BY (NOT ((((rt1.c3))>=((rt1.c0))))), (((~ (rt1.c2)))GLOB('114563323')));
SELECT COUNT(*) FROM rt1 WHERE (json_array(((rt1.c3) NOT NULL), rt1.c3)) ORDER BY (NOT ((((rt1.c3))>=((rt1.c0))))), (((~ (rt1.c2)))GLOB('114563323'));
SELECT * FROM t0, rt1, v0 WHERE ((- (LIKELIHOOD(rt1.c1, 0.08768070104810277)))) ORDER BY ((((rt1.c2) IS FALSE))>>(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (LIKELIHOOD(rt1.c1, 0.08768070104810277)))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY ((((rt1.c2) IS FALSE))>>(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM t0, rt1, v0 WHERE ((- (LIKELIHOOD(rt1.c1, 0.08768070104810277)))) ORDER BY ((((rt1.c2) IS FALSE))>>(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (LIKELIHOOD(rt1.c1, 0.08768070104810277)))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY ((((rt1.c2) IS FALSE))>>(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM t0, rt1, v0 WHERE ((- (LIKELIHOOD(rt1.c1, 0.08768070104810277)))) ORDER BY ((((rt1.c2) IS FALSE))>>(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE ((- ((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END)OR(((rt1.c0) BETWEEN (0.8677861351432873) AND (rt1.c2)))))AND((- (rt1.c1))));
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END)OR(((rt1.c0) BETWEEN (0.8677861351432873) AND (rt1.c2)))))AND((- (rt1.c1)))));
SELECT * FROM rt1 WHERE ((- ((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END)OR(((rt1.c0) BETWEEN (0.8677861351432873) AND (rt1.c2)))))AND((- (rt1.c1))));
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END)OR(((rt1.c0) BETWEEN (0.8677861351432873) AND (rt1.c2)))))AND((- (rt1.c1)))));
SELECT * FROM rt1 WHERE ((- ((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END)OR(((rt1.c0) BETWEEN (0.8677861351432873) AND (rt1.c2)))))AND((- (rt1.c1))));
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON IFNULL(DISTINCT ((((NULL)OR(t0.c39)))OR(rt1.c1)), rt1.c0) WHERE (CASE 0.2555082931079645 COLLATE BINARY  WHEN (t0.c59 IN ()) THEN CAST(rt1.c1 AS REAL) ELSE (rt1.c3 IN ()) END) ORDER BY ((CASE WHEN NULL THEN '' ELSE rt1.c1 END)<=((((t0.c39)) BETWEEN ((t0.c39)) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE 0.2555082931079645 COLLATE BINARY  WHEN (t0.c59 IN ()) THEN CAST(rt1.c1 AS REAL) ELSE (rt1.c3 IN ()) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON IFNULL(DISTINCT ((((NULL)OR(t0.c39)))OR(rt1.c1)), rt1.c0) ORDER BY ((CASE WHEN NULL THEN '' ELSE rt1.c1 END)<=((((t0.c39)) BETWEEN ((t0.c39)) AND ((rt1.c0))))));
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON IFNULL(DISTINCT ((((NULL)OR(t0.c39)))OR(rt1.c1)), rt1.c0) WHERE (CASE 0.2555082931079645 COLLATE BINARY  WHEN (t0.c59 IN ()) THEN CAST(rt1.c1 AS REAL) ELSE (rt1.c3 IN ()) END) ORDER BY ((CASE WHEN NULL THEN '' ELSE rt1.c1 END)<=((((t0.c39)) BETWEEN ((t0.c39)) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE 0.2555082931079645 COLLATE BINARY  WHEN (t0.c59 IN ()) THEN CAST(rt1.c1 AS REAL) ELSE (rt1.c3 IN ()) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON IFNULL(DISTINCT ((((NULL)OR(t0.c39)))OR(rt1.c1)), rt1.c0) ORDER BY ((CASE WHEN NULL THEN '' ELSE rt1.c1 END)<=((((t0.c39)) BETWEEN ((t0.c39)) AND ((rt1.c0))))));
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON IFNULL(DISTINCT ((((NULL)OR(t0.c39)))OR(rt1.c1)), rt1.c0) WHERE (CASE 0.2555082931079645 COLLATE BINARY  WHEN (t0.c59 IN ()) THEN CAST(rt1.c1 AS REAL) ELSE (rt1.c3 IN ()) END) ORDER BY ((CASE WHEN NULL THEN '' ELSE rt1.c1 END)<=((((t0.c39)) BETWEEN ((t0.c39)) AND ((rt1.c0)))));
SELECT COUNT(*) FROM v0, t0 WHERE ((- (((t0.c59) BETWEEN (t0.c39) AND (t0.c59)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c59) BETWEEN (t0.c39) AND (t0.c59))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((- (((t0.c59) BETWEEN (t0.c39) AND (t0.c59)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c59) BETWEEN (t0.c39) AND (t0.c59))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((- (((t0.c59) BETWEEN (t0.c39) AND (t0.c59)))));
SELECT ALL * FROM t0, v0, rt1 WHERE (LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c3))) ORDER BY HEX((- (rt1.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c3))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY HEX((- (rt1.c2))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0, rt1 WHERE (LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c3))) ORDER BY HEX((- (rt1.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c3))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY HEX((- (rt1.c2))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0, rt1 WHERE (LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c3))) ORDER BY HEX((- (rt1.c2))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, v0, rt1 WHERE ('7痺');
SELECT SUM(count) FROM (SELECT ALL (('7痺') IS TRUE)  as count FROM t0, v0, rt1);
SELECT ALL * FROM t0, v0, rt1 WHERE ('7痺');
SELECT SUM(count) FROM (SELECT ALL (('7痺') IS TRUE)  as count FROM t0, v0, rt1);
SELECT ALL * FROM t0, v0, rt1 WHERE ('7痺');
SELECT * FROM t0 WHERE ((- (0.6875641701004254))) ORDER BY SUBSTR(t0.c59, 0.530798738884615) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((- (0.6875641701004254))) IS TRUE)  as count FROM t0 ORDER BY SUBSTR(t0.c59, 0.530798738884615) COLLATE NOCASE);
SELECT * FROM t0 WHERE ((- (0.6875641701004254))) ORDER BY SUBSTR(t0.c59, 0.530798738884615) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((- (0.6875641701004254))) IS TRUE)  as count FROM t0 ORDER BY SUBSTR(t0.c59, 0.530798738884615) COLLATE NOCASE);
SELECT * FROM t0 WHERE ((- (0.6875641701004254))) ORDER BY SUBSTR(t0.c59, 0.530798738884615) COLLATE NOCASE;
SELECT COUNT(*) FROM rt1, t0, v0 WHERE (0.33836527831752305) ORDER BY ((HEX(rt1.c0))AND(((((((((rt1.c3)AND(rt1.c1)))AND(t0.c39)))OR(rt1.c1)))OR(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.33836527831752305) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY ((HEX(rt1.c0))AND(((((((((rt1.c3)AND(rt1.c1)))AND(t0.c39)))OR(rt1.c1)))OR(rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0, v0 WHERE (0.33836527831752305) ORDER BY ((HEX(rt1.c0))AND(((((((((rt1.c3)AND(rt1.c1)))AND(t0.c39)))OR(rt1.c1)))OR(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.33836527831752305) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY ((HEX(rt1.c0))AND(((((((((rt1.c3)AND(rt1.c1)))AND(t0.c39)))OR(rt1.c1)))OR(rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0, v0 WHERE (0.33836527831752305) ORDER BY ((HEX(rt1.c0))AND(((((((((rt1.c3)AND(rt1.c1)))AND(t0.c39)))OR(rt1.c1)))OR(rt1.c1))))  NULLS LAST;
SELECT * FROM v0, t0 WHERE (((CASE t0.c39  WHEN t0.c59 THEN t0.c59 WHEN t0.c59 THEN t0.c59 WHEN x'' THEN t0.c39 ELSE x'' END)&(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c39  WHEN t0.c59 THEN t0.c59 WHEN t0.c59 THEN t0.c59 WHEN x'' THEN t0.c39 ELSE x'' END)&(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((CASE t0.c39  WHEN t0.c59 THEN t0.c59 WHEN t0.c59 THEN t0.c59 WHEN x'' THEN t0.c39 ELSE x'' END)&(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c39  WHEN t0.c59 THEN t0.c59 WHEN t0.c59 THEN t0.c59 WHEN x'' THEN t0.c39 ELSE x'' END)&(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((CASE t0.c39  WHEN t0.c59 THEN t0.c59 WHEN t0.c59 THEN t0.c59 WHEN x'' THEN t0.c39 ELSE x'' END)&(((t0.c59) NOT BETWEEN (t0.c59) AND (t0.c59)))));
SELECT * FROM rt1, v0 CROSS JOIN t0 ON ((t0.c59)IS NOT('\q')) COLLATE BINARY WHERE (((((((t0.c59)OR(t0.c39)))AND(rt1.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c59)OR(t0.c39)))AND(rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt1, v0 CROSS JOIN t0 ON ((t0.c59)IS NOT('\q')) COLLATE BINARY);
SELECT * FROM rt1, v0 CROSS JOIN t0 ON ((t0.c59)IS NOT('\q')) COLLATE BINARY WHERE (((((((t0.c59)OR(t0.c39)))AND(rt1.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c59)OR(t0.c39)))AND(rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt1, v0 CROSS JOIN t0 ON ((t0.c59)IS NOT('\q')) COLLATE BINARY);
SELECT * FROM rt1, v0 CROSS JOIN t0 ON ((t0.c59)IS NOT('\q')) COLLATE BINARY WHERE (((((((t0.c59)OR(t0.c39)))AND(rt1.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((+ ((+ (t0.c59)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (t0.c59))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((+ ((+ (t0.c59)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (t0.c59))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((+ ((+ (t0.c59)))));
SELECT * FROM v0 WHERE (((((v0.c0)OR(v0.c0))) IS FALSE)) ORDER BY ((((v0.c0) ISNULL))LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC) DESC  NULLS LAST, CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) ISNULL))LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC) DESC  NULLS LAST, CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER) ASC);
SELECT * FROM v0 WHERE (((((v0.c0)OR(v0.c0))) IS FALSE)) ORDER BY ((((v0.c0) ISNULL))LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC) DESC  NULLS LAST, CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) ISNULL))LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC) DESC  NULLS LAST, CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER) ASC);
SELECT * FROM v0 WHERE (((((v0.c0)OR(v0.c0))) IS FALSE)) ORDER BY ((((v0.c0) ISNULL))LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS NUMERIC) DESC  NULLS LAST, CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER) ASC;
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON CAST(((v0.c0) BETWEEN (v0.c0) AND (rt1.c2)) AS INTEGER) CROSS JOIN t0 ON ((CASE ''  WHEN t0.c39 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c2 THEN rt1.c3 END) IS TRUE) WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON CAST(((v0.c0) BETWEEN (v0.c0) AND (rt1.c2)) AS INTEGER) CROSS JOIN t0 ON ((CASE ''  WHEN t0.c39 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c2 THEN rt1.c3 END) IS TRUE));
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON CAST(((v0.c0) BETWEEN (v0.c0) AND (rt1.c2)) AS INTEGER) CROSS JOIN t0 ON ((CASE ''  WHEN t0.c39 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c2 THEN rt1.c3 END) IS TRUE) WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON CAST(((v0.c0) BETWEEN (v0.c0) AND (rt1.c2)) AS INTEGER) CROSS JOIN t0 ON ((CASE ''  WHEN t0.c39 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c2 THEN rt1.c3 END) IS TRUE));
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON CAST(((v0.c0) BETWEEN (v0.c0) AND (rt1.c2)) AS INTEGER) CROSS JOIN t0 ON ((CASE ''  WHEN t0.c39 THEN v0.c0 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c2 THEN rt1.c3 END) IS TRUE) WHERE (t0.c59);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c59) NOT NULL)  WHEN ((t0.c39) BETWEEN (NULL) AND (t0.c39)) THEN (((t0.c59, NULL, t0.c39))<((t0.c59, t0.c39, t0.c39))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c59) NOT NULL)  WHEN ((t0.c39) BETWEEN (NULL) AND (t0.c39)) THEN (((t0.c59, NULL, t0.c39))<((t0.c59, t0.c39, t0.c39))) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c59) NOT NULL)  WHEN ((t0.c39) BETWEEN (NULL) AND (t0.c39)) THEN (((t0.c59, NULL, t0.c39))<((t0.c59, t0.c39, t0.c39))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c59) NOT NULL)  WHEN ((t0.c39) BETWEEN (NULL) AND (t0.c39)) THEN (((t0.c59, NULL, t0.c39))<((t0.c59, t0.c39, t0.c39))) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c59) NOT NULL)  WHEN ((t0.c39) BETWEEN (NULL) AND (t0.c39)) THEN (((t0.c59, NULL, t0.c39))<((t0.c59, t0.c39, t0.c39))) END);
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON (((~ (rt1.c1)))IS NOT('￿3')) WHERE ((~ (CAST(rt1.c2 AS TEXT)))) ORDER BY (((((t0.c39)OR(t0.c59)))OR('-289462028')) IN (rt1.c1));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((~ (rt1.c1)))IS NOT('￿3')) ORDER BY (((((t0.c39)OR(t0.c59)))OR('-289462028')) IN (rt1.c1)));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON (((~ (rt1.c1)))IS NOT('￿3')) WHERE ((~ (CAST(rt1.c2 AS TEXT)))) ORDER BY (((((t0.c39)OR(t0.c59)))OR('-289462028')) IN (rt1.c1));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((~ (rt1.c1)))IS NOT('￿3')) ORDER BY (((((t0.c39)OR(t0.c59)))OR('-289462028')) IN (rt1.c1)));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON (((~ (rt1.c1)))IS NOT('￿3')) WHERE ((~ (CAST(rt1.c2 AS TEXT)))) ORDER BY (((((t0.c39)OR(t0.c59)))OR('-289462028')) IN (rt1.c1));
SELECT * FROM v0, t0 WHERE (((CAST(t0.c39 AS BLOB)) NOT BETWEEN (((t0.c59)>=(v0.c0))) AND (((v0.c0)<=(t0.c39))))) ORDER BY CAST((+ (t0.c59)) AS TEXT)  NULLS FIRST, ((((t0.c59)+(v0.c0)))=(((((v0.c0)AND(t0.c59)))OR(v0.c0)))) ASC, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c39 AS BLOB)) NOT BETWEEN (((t0.c59)>=(v0.c0))) AND (((v0.c0)<=(t0.c39))))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST((+ (t0.c59)) AS TEXT)  NULLS FIRST, ((((t0.c59)+(v0.c0)))==(((((v0.c0)AND(t0.c59)))OR(v0.c0)))) ASC, v0.c0 DESC);
SELECT * FROM v0, t0 WHERE (((CAST(t0.c39 AS BLOB)) NOT BETWEEN (((t0.c59)>=(v0.c0))) AND (((v0.c0)<=(t0.c39))))) ORDER BY CAST((+ (t0.c59)) AS TEXT)  NULLS FIRST, ((((t0.c59)+(v0.c0)))=(((((v0.c0)AND(t0.c59)))OR(v0.c0)))) ASC, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c39 AS BLOB)) NOT BETWEEN (((t0.c59)>=(v0.c0))) AND (((v0.c0)<=(t0.c39))))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST((+ (t0.c59)) AS TEXT)  NULLS FIRST, ((((t0.c59)+(v0.c0)))==(((((v0.c0)AND(t0.c59)))OR(v0.c0)))) ASC, v0.c0 DESC);
SELECT * FROM v0, t0 WHERE (((CAST(t0.c39 AS BLOB)) NOT BETWEEN (((t0.c59)>=(v0.c0))) AND (((v0.c0)<=(t0.c39))))) ORDER BY CAST((+ (t0.c59)) AS TEXT)  NULLS FIRST, ((((t0.c59)+(v0.c0)))=(((((v0.c0)AND(t0.c59)))OR(v0.c0)))) ASC, v0.c0 DESC;
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE (((load_extension(rt1.c1)) NOT BETWEEN (((rt1.c0)<(rt1.c2))) AND (((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY ((((t0.c59)+(rt1.c0)))AND(((t0.c39)||(t0.c39)))) ASC;
SELECT SUM(count) FROM (SELECT ((((load_extension(rt1.c1)) NOT BETWEEN (((rt1.c0)<(rt1.c2))) AND (((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY ((((t0.c59)+(rt1.c0)))AND(((t0.c39)||(t0.c39)))) ASC);
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE (((load_extension(rt1.c1)) NOT BETWEEN (((rt1.c0)<(rt1.c2))) AND (((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY ((((t0.c59)+(rt1.c0)))AND(((t0.c39)||(t0.c39)))) ASC;
SELECT SUM(count) FROM (SELECT ((((load_extension(rt1.c1)) NOT BETWEEN (((rt1.c0)<(rt1.c2))) AND (((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY ((((t0.c59)+(rt1.c0)))AND(((t0.c39)||(t0.c39)))) ASC);
SELECT ALL COUNT(*) FROM t0, rt1, v0 WHERE (((load_extension(rt1.c1)) NOT BETWEEN (((rt1.c0)<(rt1.c2))) AND (((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY ((((t0.c59)+(rt1.c0)))AND(((t0.c39)||(t0.c39)))) ASC;
SELECT ALL COUNT(*) FROM v0, rt1 FULL OUTER JOIN t0 ON ((rt1.c2) NOT BETWEEN (rt1.c3) AND (v0.c0)) COLLATE BINARY WHERE ((((rt1.c2)) NOT BETWEEN (((((t0.c39))<((x''))))) AND (((((t0.c59)) BETWEEN ((t0.c59)) AND ((rt1.c2))))))) ORDER BY t0.c39 ASC, (((- (-1369513613))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((((t0.c39))<((x''))))) AND (((((t0.c59)) BETWEEN ((t0.c59)) AND ((rt1.c2))))))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN t0 ON ((rt1.c2) NOT BETWEEN (rt1.c3) AND (v0.c0)) COLLATE BINARY ORDER BY t0.c39 ASC, (((- (-1369513613))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 FULL OUTER JOIN t0 ON ((rt1.c2) NOT BETWEEN (rt1.c3) AND (v0.c0)) COLLATE BINARY WHERE ((((rt1.c2)) NOT BETWEEN (((((t0.c39))<((x''))))) AND (((((t0.c59)) BETWEEN ((t0.c59)) AND ((rt1.c2))))))) ORDER BY t0.c39 ASC, (((- (-1369513613))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((((t0.c39))<((x''))))) AND (((((t0.c59)) BETWEEN ((t0.c59)) AND ((rt1.c2))))))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN t0 ON ((rt1.c2) NOT BETWEEN (rt1.c3) AND (v0.c0)) COLLATE BINARY ORDER BY t0.c39 ASC, (((- (-1369513613))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 FULL OUTER JOIN t0 ON ((rt1.c2) NOT BETWEEN (rt1.c3) AND (v0.c0)) COLLATE BINARY WHERE ((((rt1.c2)) NOT BETWEEN (((((t0.c39))<((x''))))) AND (((((t0.c59)) BETWEEN ((t0.c59)) AND ((rt1.c2))))))) ORDER BY t0.c39 ASC, (((- (-1369513613))) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((((rt1.c2)IS(t0.c59)))OR(CAST(t0.c39 AS TEXT))))OR(rt1.c2 COLLATE BINARY)) INNER JOIN t0 ON CASE WHEN rt1.c0 THEN v0.c0 ELSE rt1.c0 END COLLATE RTRIM WHERE ((((- (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((((rt1.c2)IS(t0.c59)))OR(CAST(t0.c39 AS TEXT))))OR(rt1.c2 COLLATE BINARY)) INNER JOIN t0 ON CASE WHEN rt1.c0 THEN v0.c0 ELSE rt1.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((((rt1.c2)IS(t0.c59)))OR(CAST(t0.c39 AS TEXT))))OR(rt1.c2 COLLATE BINARY)) INNER JOIN t0 ON CASE WHEN rt1.c0 THEN v0.c0 ELSE rt1.c0 END COLLATE RTRIM WHERE ((((- (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((((rt1.c2)IS(t0.c59)))OR(CAST(t0.c39 AS TEXT))))OR(rt1.c2 COLLATE BINARY)) INNER JOIN t0 ON CASE WHEN rt1.c0 THEN v0.c0 ELSE rt1.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((((rt1.c2)IS(t0.c59)))OR(CAST(t0.c39 AS TEXT))))OR(rt1.c2 COLLATE BINARY)) INNER JOIN t0 ON CASE WHEN rt1.c0 THEN v0.c0 ELSE rt1.c0 END COLLATE RTRIM WHERE ((((- (v0.c0))) NOT NULL));
SELECT * FROM v0 WHERE (CAST(0.14195046482137996 AS REAL)) ORDER BY CAST(json_patch(v0.c0, v0.c0) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.14195046482137996 AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CAST(json_patch(v0.c0, v0.c0) AS INTEGER));
SELECT * FROM v0 WHERE (CAST(0.14195046482137996 AS REAL)) ORDER BY CAST(json_patch(v0.c0, v0.c0) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.14195046482137996 AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CAST(json_patch(v0.c0, v0.c0) AS INTEGER));
SELECT * FROM v0 WHERE (CAST(0.14195046482137996 AS REAL)) ORDER BY CAST(json_patch(v0.c0, v0.c0) AS INTEGER);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0))))<((((rt1.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0))))<((((rt1.c0) NOTNULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0))))<((((rt1.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0))))<((((rt1.c0) NOTNULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0))))<((((rt1.c0) NOTNULL)))));
SELECT * FROM t0, v0 WHERE (t0.c59) ORDER BY ((CASE WHEN v0.c0 THEN t0.c59 END)*(((t0.c39)|(t0.c39))));
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM t0, v0 ORDER BY ((CASE WHEN v0.c0 THEN t0.c59 END)*(((t0.c39)|(t0.c39)))));
SELECT * FROM t0, v0 WHERE (t0.c59) ORDER BY ((CASE WHEN v0.c0 THEN t0.c59 END)*(((t0.c39)|(t0.c39))));
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM t0, v0 ORDER BY ((CASE WHEN v0.c0 THEN t0.c59 END)*(((t0.c39)|(t0.c39)))));
SELECT * FROM t0, v0 WHERE (t0.c59) ORDER BY ((CASE WHEN v0.c0 THEN t0.c59 END)*(((t0.c39)|(t0.c39))));
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (t0.c59);
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((((rt1.c0) NOT BETWEEN (t0.c39) AND (''))))>=((((v0.c0) NOTNULL)))) RIGHT OUTER JOIN v0 ON ((NOT (rt1.c1)) IN (((rt1.c3)IS NOT(t0.c39)))) WHERE (((((t0.c39 IN (t0.c39)), (~ (rt1.c0)), (((v0.c0))<=((t0.c39)))))!=((CASE t0.c39  WHEN rt1.c1 THEN t0.c59 ELSE t0.c59 END, CAST(rt1.c0 AS NUMERIC), ABS(t0.c39))))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c39 IN (t0.c39)), (~ (rt1.c0)), (((v0.c0))<=((t0.c39)))))<>((CASE t0.c39  WHEN rt1.c1 THEN t0.c59 ELSE t0.c59 END, CAST(rt1.c0 AS NUMERIC), ABS(t0.c39))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (((((rt1.c0) NOT BETWEEN (t0.c39) AND (''))))>=((((v0.c0) NOTNULL)))) RIGHT OUTER JOIN v0 ON ((NOT (rt1.c1)) IN (((rt1.c3)IS NOT(t0.c39)))) ORDER BY v0.c0 ASC  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((((rt1.c0) NOT BETWEEN (t0.c39) AND (''))))>=((((v0.c0) NOTNULL)))) RIGHT OUTER JOIN v0 ON ((NOT (rt1.c1)) IN (((rt1.c3)IS NOT(t0.c39)))) WHERE (((((t0.c39 IN (t0.c39)), (~ (rt1.c0)), (((v0.c0))<=((t0.c39)))))!=((CASE t0.c39  WHEN rt1.c1 THEN t0.c59 ELSE t0.c59 END, CAST(rt1.c0 AS NUMERIC), ABS(t0.c39))))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c39 IN (t0.c39)), (~ (rt1.c0)), (((v0.c0))<=((t0.c39)))))<>((CASE t0.c39  WHEN rt1.c1 THEN t0.c59 ELSE t0.c59 END, CAST(rt1.c0 AS NUMERIC), ABS(t0.c39))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (((((rt1.c0) NOT BETWEEN (t0.c39) AND (''))))>=((((v0.c0) NOTNULL)))) RIGHT OUTER JOIN v0 ON ((NOT (rt1.c1)) IN (((rt1.c3)IS NOT(t0.c39)))) ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c39) ORDER BY (((((((((('-2136183997')IS(t0.c59)))AND(CASE WHEN '5\r6D<Rl{|' THEN '' ELSE t0.c59 END)))AND((t0.c39 IN (t0.c59, t0.c39)))))AND(CASE WHEN t0.c39 THEN t0.c39 WHEN t0.c39 THEN t0.c59 WHEN 0Xffffffff926e648e THEN t0.c39 END)))OR(CAST(t0.c59 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c39) IS TRUE)  as count FROM t0 ORDER BY (((((((((('-2136183997')IS(t0.c59)))AND(CASE WHEN '5\r6D<Rl{|' THEN '' ELSE t0.c59 END)))AND((t0.c39 IN (t0.c59, t0.c39)))))AND(CASE WHEN t0.c39 THEN t0.c39 WHEN t0.c39 THEN t0.c59 WHEN 0xffffffff926e648e THEN t0.c39 END)))OR(CAST(t0.c59 AS TEXT))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c39) ORDER BY (((((((((('-2136183997')IS(t0.c59)))AND(CASE WHEN '5\r6D<Rl{|' THEN '' ELSE t0.c59 END)))AND((t0.c39 IN (t0.c59, t0.c39)))))AND(CASE WHEN t0.c39 THEN t0.c39 WHEN t0.c39 THEN t0.c59 WHEN 0Xffffffff926e648e THEN t0.c39 END)))OR(CAST(t0.c59 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c39) IS TRUE)  as count FROM t0 ORDER BY (((((((((('-2136183997')IS(t0.c59)))AND(CASE WHEN '5\r6D<Rl{|' THEN '' ELSE t0.c59 END)))AND((t0.c39 IN (t0.c59, t0.c39)))))AND(CASE WHEN t0.c39 THEN t0.c39 WHEN t0.c39 THEN t0.c59 WHEN 0xffffffff926e648e THEN t0.c39 END)))OR(CAST(t0.c59 AS TEXT))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c39) ORDER BY (((((((((('-2136183997')IS(t0.c59)))AND(CASE WHEN '5\r6D<Rl{|' THEN '' ELSE t0.c59 END)))AND((t0.c39 IN (t0.c59, t0.c39)))))AND(CASE WHEN t0.c39 THEN t0.c39 WHEN t0.c39 THEN t0.c59 WHEN 0Xffffffff926e648e THEN t0.c39 END)))OR(CAST(t0.c59 AS TEXT))) ASC  NULLS FIRST;
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID() WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID());
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID() WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID());
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID() WHERE (((NULL) NOTNULL));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((((((NOT (t0.c59)))OR((~ (t0.c39)))))AND(((t0.c59) NOTNULL)))) ORDER BY ((((((v0.c0)AND(t0.c59)))OR(v0.c0))) NOT NULL) ASC  NULLS FIRST, CASE WHEN (t0.c59 IN (t0.c39, t0.c39, t0.c59)) THEN ((t0.c59) BETWEEN (v0.c0) AND (t0.c59)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c59)))OR((~ (t0.c39)))))AND(((t0.c59) NOTNULL)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((((((v0.c0)AND(t0.c59)))OR(v0.c0))) NOT NULL) ASC  NULLS FIRST, CASE WHEN (t0.c59 IN (t0.c39, t0.c39, t0.c59)) THEN ((t0.c59) BETWEEN (v0.c0) AND (t0.c59)) END ASC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((((((NOT (t0.c59)))OR((~ (t0.c39)))))AND(((t0.c59) NOTNULL)))) ORDER BY ((((((v0.c0)AND(t0.c59)))OR(v0.c0))) NOT NULL) ASC  NULLS FIRST, CASE WHEN (t0.c59 IN (t0.c39, t0.c39, t0.c59)) THEN ((t0.c59) BETWEEN (v0.c0) AND (t0.c59)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c59)))OR((~ (t0.c39)))))AND(((t0.c59) NOTNULL)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((((((v0.c0)AND(t0.c59)))OR(v0.c0))) NOT NULL) ASC  NULLS FIRST, CASE WHEN (t0.c59 IN (t0.c39, t0.c39, t0.c59)) THEN ((t0.c59) BETWEEN (v0.c0) AND (t0.c59)) END ASC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((((((NOT (t0.c59)))OR((~ (t0.c39)))))AND(((t0.c59) NOTNULL)))) ORDER BY ((((((v0.c0)AND(t0.c59)))OR(v0.c0))) NOT NULL) ASC  NULLS FIRST, CASE WHEN (t0.c59 IN (t0.c39, t0.c39, t0.c59)) THEN ((t0.c59) BETWEEN (v0.c0) AND (t0.c59)) END ASC;
SELECT * FROM t0 WHERE (((((t0.c59 COLLATE RTRIM)AND(t0.c59)))OR(CASE t0.c39  WHEN t0.c39 THEN t0.c59 ELSE t0.c59 END))) ORDER BY ((((((((t0.c39)OR(t0.c39)))AND('d臠b~(NX|')))AND(0.7375867048499142)))AND(0Xfffffffffcd30271))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c59 COLLATE RTRIM)AND(t0.c59)))OR(CASE t0.c39  WHEN t0.c39 THEN t0.c59 ELSE t0.c59 END))) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c39)OR(t0.c39)))AND('d臠b~(NX|')))AND(0.7375867048499142)))AND(0xfffffffffcd30271))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c59 COLLATE RTRIM)AND(t0.c59)))OR(CASE t0.c39  WHEN t0.c39 THEN t0.c59 ELSE t0.c59 END))) ORDER BY ((((((((t0.c39)OR(t0.c39)))AND('d臠b~(NX|')))AND(0.7375867048499142)))AND(0Xfffffffffcd30271))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c59 COLLATE RTRIM)AND(t0.c59)))OR(CASE t0.c39  WHEN t0.c39 THEN t0.c59 ELSE t0.c59 END))) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c39)OR(t0.c39)))AND('d臠b~(NX|')))AND(0.7375867048499142)))AND(0xfffffffffcd30271))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c59 COLLATE RTRIM)AND(t0.c59)))OR(CASE t0.c39  WHEN t0.c39 THEN t0.c59 ELSE t0.c59 END))) ORDER BY ((((((((t0.c39)OR(t0.c39)))AND('d臠b~(NX|')))AND(0.7375867048499142)))AND(0Xfffffffffcd30271))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(NULL AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN CAST(v0.c0 AS NUMERIC) THEN NULL WHEN (v0.c0 IN (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, x'', v0.c0))) THEN LTRIM(v0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN CAST(v0.c0 AS NUMERIC) THEN NULL WHEN (v0.c0 IN (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, x'', v0.c0))) THEN LTRIM(v0.c0, v0.c0) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN CAST(v0.c0 AS NUMERIC) THEN NULL WHEN (v0.c0 IN (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, x'', v0.c0))) THEN LTRIM(v0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN CAST(v0.c0 AS NUMERIC) THEN NULL WHEN (v0.c0 IN (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, x'', v0.c0))) THEN LTRIM(v0.c0, v0.c0) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN CAST(v0.c0 AS NUMERIC) THEN NULL WHEN (v0.c0 IN (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, x'', v0.c0))) THEN LTRIM(v0.c0, v0.c0) END);
SELECT ALL * FROM rt1 WHERE ('tE_');
SELECT SUM(count) FROM (SELECT (('tE_') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ('tE_');
SELECT SUM(count) FROM (SELECT (('tE_') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ('tE_');
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<(((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<(((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<(((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<(((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<(((v0.c0)*(v0.c0)))));
SELECT * FROM t0, rt1 WHERE (((((rt1.c0)OR(CASE t0.c39  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)))OR(((rt1.c1)>=(-487515071))))) ORDER BY ((((((t0.c39)LIKE(rt1.c1)))AND((rt1.c3 IN ()))))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)OR(CASE t0.c39  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)))OR(((rt1.c1)>=(-487515071))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((t0.c39)LIKE(rt1.c1)))AND((rt1.c3 IN ()))))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT * FROM t0, rt1 WHERE (((((rt1.c0)OR(CASE t0.c39  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)))OR(((rt1.c1)>=(-487515071))))) ORDER BY ((((((t0.c39)LIKE(rt1.c1)))AND((rt1.c3 IN ()))))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)OR(CASE t0.c39  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)))OR(((rt1.c1)>=(-487515071))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((t0.c39)LIKE(rt1.c1)))AND((rt1.c3 IN ()))))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT * FROM t0, rt1 WHERE (((((rt1.c0)OR(CASE t0.c39  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)))OR(((rt1.c1)>=(-487515071))))) ORDER BY ((((((t0.c39)LIKE(rt1.c1)))AND((rt1.c3 IN ()))))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c1))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((rt1.c1)AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c1)AND(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((rt1.c1)AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c1)AND(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((rt1.c1)AND(rt1.c1)))));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((v0.c0)OR(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)))))OR(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)))))OR(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((v0.c0)OR(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)))))OR(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)))))OR(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((v0.c0)OR(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)))))OR(CAST(v0.c0 AS BLOB))));
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL) ASC);
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL) ASC);
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL) ASC;
SELECT * FROM v0, t0 WHERE (((((t0.c59)AND(t0.c59)))AND(t0.c39)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c59)AND(t0.c59)))AND(t0.c39)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c59)AND(t0.c59)))AND(t0.c39)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c59)AND(t0.c59)))AND(t0.c39)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c59)AND(t0.c59)))AND(t0.c39)) COLLATE NOCASE);
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((t0.c59)AND(rt1.c3))) NOT NULL) LEFT OUTER JOIN t0 ON ((rt1.c2 IN ()) IN ()) WHERE (((CAST(t0.c59 AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c59 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((t0.c59)AND(rt1.c3))) NOT NULL) LEFT OUTER JOIN t0 ON ((rt1.c2 IN ()) IN ()));
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((t0.c59)AND(rt1.c3))) NOT NULL) LEFT OUTER JOIN t0 ON ((rt1.c2 IN ()) IN ()) WHERE (((CAST(t0.c59 AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c59 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((t0.c59)AND(rt1.c3))) NOT NULL) LEFT OUTER JOIN t0 ON ((rt1.c2 IN ()) IN ()));
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((t0.c59)AND(rt1.c3))) NOT NULL) LEFT OUTER JOIN t0 ON ((rt1.c2 IN ()) IN ()) WHERE (((CAST(t0.c59 AS TEXT)) NOT NULL));
SELECT ALL * FROM rt1, t0, v0 WHERE (((((rt1.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL * FROM rt1, t0, v0 WHERE (((((rt1.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL * FROM rt1, t0, v0 WHERE (((((rt1.c0) NOT NULL)) IS FALSE));
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (json_array(t0.c59, t0.c39) COLLATE RTRIM) ORDER BY (((x'') NOT BETWEEN (rt1.c0) AND (t0.c59)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array(t0.c59, t0.c39) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY (((x'') NOT BETWEEN (rt1.c0) AND (t0.c59)) IN ()) ASC);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (json_array(t0.c59, t0.c39) COLLATE RTRIM) ORDER BY (((x'') NOT BETWEEN (rt1.c0) AND (t0.c59)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array(t0.c59, t0.c39) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY (((x'') NOT BETWEEN (rt1.c0) AND (t0.c59)) IN ()) ASC);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (json_array(t0.c59, t0.c39) COLLATE RTRIM) ORDER BY (((x'') NOT BETWEEN (rt1.c0) AND (t0.c59)) IN ()) ASC;
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))||(UPPER('147102510'))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))||(UPPER('147102510')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))||(UPPER('147102510'))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))||(UPPER('147102510')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))||(UPPER('147102510'))));
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON (NOT (((((rt1.c0)OR(v0.c0)))OR(rt1.c2)))) WHERE (((((rt1.c1)*(rt1.c1)))<=((((rt1.c3))!=((rt1.c3)))))) ORDER BY (((((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))AND(CAST(rt1.c2 AS TEXT))))OR(((rt1.c0)*(rt1.c2)))))OR(TYPEOF(DISTINCT 0.2591769054322619))))AND((v0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)*(rt1.c1)))<=((((rt1.c3))!=((rt1.c3)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (NOT (((((rt1.c0)OR(v0.c0)))OR(rt1.c2)))) ORDER BY (((((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))AND(CAST(rt1.c2 AS TEXT))))OR(((rt1.c0)*(rt1.c2)))))OR(TYPEOF(DISTINCT 0.2591769054322619))))AND((v0.c0 IN ()))) ASC);
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON (NOT (((((rt1.c0)OR(v0.c0)))OR(rt1.c2)))) WHERE (((((rt1.c1)*(rt1.c1)))<=((((rt1.c3))!=((rt1.c3)))))) ORDER BY (((((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))AND(CAST(rt1.c2 AS TEXT))))OR(((rt1.c0)*(rt1.c2)))))OR(TYPEOF(DISTINCT 0.2591769054322619))))AND((v0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)*(rt1.c1)))<=((((rt1.c3))!=((rt1.c3)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (NOT (((((rt1.c0)OR(v0.c0)))OR(rt1.c2)))) ORDER BY (((((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))AND(CAST(rt1.c2 AS TEXT))))OR(((rt1.c0)*(rt1.c2)))))OR(TYPEOF(DISTINCT 0.2591769054322619))))AND((v0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE (t0.c59);
SELECT ALL * FROM t0, v0, rt1 WHERE (CASE WHEN ((t0.c59) NOTNULL) THEN (((t0.c39))=((t0.c39))) WHEN ((t0.c59)<<(rt1.c3)) THEN rt1.c2 COLLATE RTRIM WHEN '165938893' THEN CAST(rt1.c3 AS INTEGER) END) ORDER BY (((('FALSE'))==((v0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c59) NOTNULL) THEN (((t0.c39))==((t0.c39))) WHEN ((t0.c59)<<(rt1.c3)) THEN rt1.c2 COLLATE RTRIM WHEN '165938893' THEN CAST(rt1.c3 AS INTEGER) END) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY (((('FALSE'))==((v0.c0))) IN ()) DESC);
SELECT ALL * FROM t0, v0, rt1 WHERE (CASE WHEN ((t0.c59) NOTNULL) THEN (((t0.c39))=((t0.c39))) WHEN ((t0.c59)<<(rt1.c3)) THEN rt1.c2 COLLATE RTRIM WHEN '165938893' THEN CAST(rt1.c3 AS INTEGER) END) ORDER BY (((('FALSE'))==((v0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c59) NOTNULL) THEN (((t0.c39))==((t0.c39))) WHEN ((t0.c59)<<(rt1.c3)) THEN rt1.c2 COLLATE RTRIM WHEN '165938893' THEN CAST(rt1.c3 AS INTEGER) END) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY (((('FALSE'))==((v0.c0))) IN ()) DESC);
SELECT ALL * FROM t0, v0, rt1 WHERE (CASE WHEN ((t0.c59) NOTNULL) THEN (((t0.c39))=((t0.c39))) WHEN ((t0.c59)<<(rt1.c3)) THEN rt1.c2 COLLATE RTRIM WHEN '165938893' THEN CAST(rt1.c3 AS INTEGER) END) ORDER BY (((('FALSE'))==((v0.c0))) IN ()) DESC;
SELECT * FROM t0 WHERE ((LIKELIHOOD(t0.c59, 0.4993859126726792) IN ())) ORDER BY (((((((((((t0.c59))>=((t0.c59))))OR((+ (t0.c39)))))AND(((t0.c39)LIKE(t0.c59)))))AND(((t0.c39)%(t0.c39)))))OR(((NULL) IS TRUE)))  NULLS FIRST, ((CAST(t0.c39 AS TEXT)) BETWEEN ((t0.c39 IN ())) AND ((((t0.c39))>((t0.c59)))));
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(t0.c59, 0.4993859126726792) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c59))>=((t0.c59))))OR((+ (t0.c39)))))AND(((t0.c39)LIKE(t0.c59)))))AND(((t0.c39)%(t0.c39)))))OR(((NULL) IS TRUE)))  NULLS FIRST, ((CAST(t0.c39 AS TEXT)) BETWEEN ((t0.c39 IN ())) AND ((((t0.c39))>((t0.c59))))));
SELECT * FROM t0 WHERE ((LIKELIHOOD(t0.c59, 0.4993859126726792) IN ())) ORDER BY (((((((((((t0.c59))>=((t0.c59))))OR((+ (t0.c39)))))AND(((t0.c39)LIKE(t0.c59)))))AND(((t0.c39)%(t0.c39)))))OR(((NULL) IS TRUE)))  NULLS FIRST, ((CAST(t0.c39 AS TEXT)) BETWEEN ((t0.c39 IN ())) AND ((((t0.c39))>((t0.c59)))));
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(t0.c59, 0.4993859126726792) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c59))>=((t0.c59))))OR((+ (t0.c39)))))AND(((t0.c39)LIKE(t0.c59)))))AND(((t0.c39)%(t0.c39)))))OR(((NULL) IS TRUE)))  NULLS FIRST, ((CAST(t0.c39 AS TEXT)) BETWEEN ((t0.c39 IN ())) AND ((((t0.c39))>((t0.c59))))));
SELECT * FROM t0 WHERE ((LIKELIHOOD(t0.c59, 0.4993859126726792) IN ())) ORDER BY (((((((((((t0.c59))>=((t0.c59))))OR((+ (t0.c39)))))AND(((t0.c39)LIKE(t0.c59)))))AND(((t0.c39)%(t0.c39)))))OR(((NULL) IS TRUE)))  NULLS FIRST, ((CAST(t0.c39 AS TEXT)) BETWEEN ((t0.c39 IN ())) AND ((((t0.c39))>((t0.c59)))));
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c59) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c59) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c59) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c59) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c59) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOT NULL))>>(highlight(rt1.c3, rt1.c0, rt1.c3, rt1.c3)))) ORDER BY (+ (rt1.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT NULL))>>(highlight(rt1.c3, rt1.c0, rt1.c3, rt1.c3)))) IS TRUE)  as count FROM rt1 ORDER BY (+ (rt1.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOT NULL))>>(highlight(rt1.c3, rt1.c0, rt1.c3, rt1.c3)))) ORDER BY (+ (rt1.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT NULL))>>(highlight(rt1.c3, rt1.c0, rt1.c3, rt1.c3)))) IS TRUE)  as count FROM rt1 ORDER BY (+ (rt1.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOT NULL))>>(highlight(rt1.c3, rt1.c0, rt1.c3, rt1.c3)))) ORDER BY (+ (rt1.c1)) COLLATE NOCASE;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (HEX(rt1.c1) IN (UPPER(DISTINCT rt1.c1))) RIGHT OUTER JOIN t0 ON ((((rt1.c1) NOT NULL))>(((rt1.c1) ISNULL))) WHERE (CASE TRIM(t0.c59)  WHEN (NOT (rt1.c0)) THEN ((t0.c59) NOT BETWEEN (t0.c59) AND (rt1.c1)) ELSE rt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(t0.c59)  WHEN (NOT (rt1.c0)) THEN ((t0.c59) NOT BETWEEN (t0.c59) AND (rt1.c1)) ELSE rt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (HEX(rt1.c1) IN (UPPER(DISTINCT rt1.c1))) RIGHT OUTER JOIN t0 ON ((((rt1.c1) NOT NULL))>(((rt1.c1) ISNULL))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (HEX(rt1.c1) IN (UPPER(DISTINCT rt1.c1))) RIGHT OUTER JOIN t0 ON ((((rt1.c1) NOT NULL))>(((rt1.c1) ISNULL))) WHERE (CASE TRIM(t0.c59)  WHEN (NOT (rt1.c0)) THEN ((t0.c59) NOT BETWEEN (t0.c59) AND (rt1.c1)) ELSE rt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(t0.c59)  WHEN (NOT (rt1.c0)) THEN ((t0.c59) NOT BETWEEN (t0.c59) AND (rt1.c1)) ELSE rt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (HEX(rt1.c1) IN (UPPER(DISTINCT rt1.c1))) RIGHT OUTER JOIN t0 ON ((((rt1.c1) NOT NULL))>(((rt1.c1) ISNULL))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON (HEX(rt1.c1) IN (UPPER(DISTINCT rt1.c1))) RIGHT OUTER JOIN t0 ON ((((rt1.c1) NOT NULL))>(((rt1.c1) ISNULL))) WHERE (CASE TRIM(t0.c59)  WHEN (NOT (rt1.c0)) THEN ((t0.c59) NOT BETWEEN (t0.c59) AND (rt1.c1)) ELSE rt1.c0 COLLATE NOCASE END);
SELECT COUNT(*) FROM t0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (x'');
SELECT COUNT(*) FROM t0, v0 WHERE (((CASE t0.c59  WHEN v0.c0 THEN t0.c59 END) BETWEEN (load_extension(NULL, v0.c0)) AND (((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c59  WHEN v0.c0 THEN t0.c59 END) BETWEEN (load_extension(NULL, v0.c0)) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((CASE t0.c59  WHEN v0.c0 THEN t0.c59 END) BETWEEN (load_extension(NULL, v0.c0)) AND (((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c59  WHEN v0.c0 THEN t0.c59 END) BETWEEN (load_extension(NULL, v0.c0)) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((CASE t0.c59  WHEN v0.c0 THEN t0.c59 END) BETWEEN (load_extension(NULL, v0.c0)) AND (((v0.c0) NOT NULL))));
SELECT * FROM v0, rt1 WHERE (CAST(-1.42628564E8 AS NUMERIC)) ORDER BY x'' DESC  NULLS FIRST, ((((((((v0.c0)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c3)) COLLATE RTRIM ASC  NULLS LAST, CAST(rt1.c2 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(-1.42628564E8 AS NUMERIC)) IS TRUE)  as count FROM v0, rt1 ORDER BY x'' DESC  NULLS FIRST, ((((((((v0.c0)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c3)) COLLATE RTRIM ASC  NULLS LAST, CAST(rt1.c2 AS BLOB));
SELECT * FROM v0, rt1 WHERE (CAST(-1.42628564E8 AS NUMERIC)) ORDER BY x'' DESC  NULLS FIRST, ((((((((v0.c0)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c3)) COLLATE RTRIM ASC  NULLS LAST, CAST(rt1.c2 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(-1.42628564E8 AS NUMERIC)) IS TRUE)  as count FROM v0, rt1 ORDER BY x'' DESC  NULLS FIRST, ((((((((v0.c0)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c3)) COLLATE RTRIM ASC  NULLS LAST, CAST(rt1.c2 AS BLOB));
SELECT * FROM v0, rt1 WHERE (CAST(-1.42628564E8 AS NUMERIC)) ORDER BY x'' DESC  NULLS FIRST, ((((((((v0.c0)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c3)) COLLATE RTRIM ASC  NULLS LAST, CAST(rt1.c2 AS BLOB);
SELECT ALL * FROM v0 INNER JOIN rt1 ON ((((((((((rt1.c3) ISNULL))OR(CAST(NULL AS BLOB))))OR(LIKE(rt1.c2, t0.c39, 'F'))))OR(((rt1.c2) BETWEEN (t0.c39) AND (t0.c39)))))OR(t0.c59 COLLATE RTRIM)) FULL OUTER JOIN t0 ON (((rt1.c0)) NOT BETWEEN ((NULL)) AND ((CAST(rt1.c1 AS INTEGER)))) WHERE (((json_type(rt1.c0)) BETWEEN (v0.c0) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((json_type(rt1.c0)) BETWEEN (v0.c0) AND (rt1.c3))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((((((((((rt1.c3) ISNULL))OR(CAST(NULL AS BLOB))))OR(LIKE(rt1.c2, t0.c39, 'F'))))OR(((rt1.c2) BETWEEN (t0.c39) AND (t0.c39)))))OR(t0.c59 COLLATE RTRIM)) FULL OUTER JOIN t0 ON (((rt1.c0)) NOT BETWEEN ((NULL)) AND ((CAST(rt1.c1 AS INTEGER)))));
SELECT ALL * FROM v0 INNER JOIN rt1 ON ((((((((((rt1.c3) ISNULL))OR(CAST(NULL AS BLOB))))OR(LIKE(rt1.c2, t0.c39, 'F'))))OR(((rt1.c2) BETWEEN (t0.c39) AND (t0.c39)))))OR(t0.c59 COLLATE RTRIM)) FULL OUTER JOIN t0 ON (((rt1.c0)) NOT BETWEEN ((NULL)) AND ((CAST(rt1.c1 AS INTEGER)))) WHERE (((json_type(rt1.c0)) BETWEEN (v0.c0) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((json_type(rt1.c0)) BETWEEN (v0.c0) AND (rt1.c3))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((((((((((rt1.c3) ISNULL))OR(CAST(NULL AS BLOB))))OR(LIKE(rt1.c2, t0.c39, 'F'))))OR(((rt1.c2) BETWEEN (t0.c39) AND (t0.c39)))))OR(t0.c59 COLLATE RTRIM)) FULL OUTER JOIN t0 ON (((rt1.c0)) NOT BETWEEN ((NULL)) AND ((CAST(rt1.c1 AS INTEGER)))));
SELECT ALL * FROM v0 CROSS JOIN rt1 ON (((rt1.c3, v0.c0, t0.c59)) NOT BETWEEN ((((t0.c39) BETWEEN (t0.c59) AND (rt1.c2)), CASE t0.c59  WHEN t0.c59 THEN rt1.c3 ELSE t0.c59 END, CAST(rt1.c3 AS REAL))) AND (('-869499545', (- ('1063522482')), CAST(rt1.c1 AS TEXT)))) RIGHT OUTER JOIN t0 ON (((0.8485916991657616)) BETWEEN ((((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)))) AND ((((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c3))))) WHERE (CAST((((rt1.c1, v0.c0, rt1.c0)) BETWEEN ((v0.c0, rt1.c1, rt1.c0)) AND ((rt1.c0, t0.c59, rt1.c2))) AS REAL)) ORDER BY (('1814089422' COLLATE RTRIM)IS((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1, v0.c0, rt1.c0)) BETWEEN ((v0.c0, rt1.c1, rt1.c0)) AND ((rt1.c0, t0.c59, rt1.c2))) AS REAL)) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (((rt1.c3, v0.c0, t0.c59)) NOT BETWEEN ((((t0.c39) BETWEEN (t0.c59) AND (rt1.c2)), CASE t0.c59  WHEN t0.c59 THEN rt1.c3 ELSE t0.c59 END, CAST(rt1.c3 AS REAL))) AND (('-869499545', (- ('1063522482')), CAST(rt1.c1 AS TEXT)))) RIGHT OUTER JOIN t0 ON (((0.8485916991657616)) BETWEEN ((((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)))) AND ((((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c3))))) ORDER BY (('1814089422' COLLATE RTRIM)IS((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))));
SELECT ALL * FROM v0 CROSS JOIN rt1 ON (((rt1.c3, v0.c0, t0.c59)) NOT BETWEEN ((((t0.c39) BETWEEN (t0.c59) AND (rt1.c2)), CASE t0.c59  WHEN t0.c59 THEN rt1.c3 ELSE t0.c59 END, CAST(rt1.c3 AS REAL))) AND (('-869499545', (- ('1063522482')), CAST(rt1.c1 AS TEXT)))) RIGHT OUTER JOIN t0 ON (((0.8485916991657616)) BETWEEN ((((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)))) AND ((((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c3))))) WHERE (CAST((((rt1.c1, v0.c0, rt1.c0)) BETWEEN ((v0.c0, rt1.c1, rt1.c0)) AND ((rt1.c0, t0.c59, rt1.c2))) AS REAL)) ORDER BY (('1814089422' COLLATE RTRIM)IS((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1, v0.c0, rt1.c0)) BETWEEN ((v0.c0, rt1.c1, rt1.c0)) AND ((rt1.c0, t0.c59, rt1.c2))) AS REAL)) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (((rt1.c3, v0.c0, t0.c59)) NOT BETWEEN ((((t0.c39) BETWEEN (t0.c59) AND (rt1.c2)), CASE t0.c59  WHEN t0.c59 THEN rt1.c3 ELSE t0.c59 END, CAST(rt1.c3 AS REAL))) AND (('-869499545', (- ('1063522482')), CAST(rt1.c1 AS TEXT)))) RIGHT OUTER JOIN t0 ON (((0.8485916991657616)) BETWEEN ((((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c0)))) AND ((((t0.c39) NOT BETWEEN (rt1.c3) AND (rt1.c3))))) ORDER BY (('1814089422' COLLATE RTRIM)IS((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c59)OR((('398613327') NOT NULL))))AND(CAST(t0.c59 AS NUMERIC)))) ORDER BY ((CAST(t0.c39 AS REAL)) NOT BETWEEN ((t0.c39 IN ())) AND (t0.c59))  NULLS FIRST, ((CAST(t0.c39 AS REAL))+('-1e500'))  NULLS FIRST, (((((t0.c39)) BETWEEN ((t0.c39)) AND ((t0.c59))))/(t0.c39 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c59)OR((('398613327') NOT NULL))))AND(CAST(t0.c59 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c39 AS REAL)) NOT BETWEEN ((t0.c39 IN ())) AND (t0.c59))  NULLS FIRST, ((CAST(t0.c39 AS REAL))+('-1e500'))  NULLS FIRST, (((((t0.c39)) BETWEEN ((t0.c39)) AND ((t0.c59))))/(t0.c39 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c59)OR((('398613327') NOT NULL))))AND(CAST(t0.c59 AS NUMERIC)))) ORDER BY ((CAST(t0.c39 AS REAL)) NOT BETWEEN ((t0.c39 IN ())) AND (t0.c59))  NULLS FIRST, ((CAST(t0.c39 AS REAL))+('-1e500'))  NULLS FIRST, (((((t0.c39)) BETWEEN ((t0.c39)) AND ((t0.c59))))/(t0.c39 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c59)OR((('398613327') NOT NULL))))AND(CAST(t0.c59 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c39 AS REAL)) NOT BETWEEN ((t0.c39 IN ())) AND (t0.c59))  NULLS FIRST, ((CAST(t0.c39 AS REAL))+('-1e500'))  NULLS FIRST, (((((t0.c39)) BETWEEN ((t0.c39)) AND ((t0.c59))))/(t0.c39 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c59)OR((('398613327') NOT NULL))))AND(CAST(t0.c59 AS NUMERIC)))) ORDER BY ((CAST(t0.c39 AS REAL)) NOT BETWEEN ((t0.c39 IN ())) AND (t0.c59))  NULLS FIRST, ((CAST(t0.c39 AS REAL))+('-1e500'))  NULLS FIRST, (((((t0.c39)) BETWEEN ((t0.c39)) AND ((t0.c59))))/(t0.c39 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM rt1, v0, t0 WHERE (((((rt1.c1)&(rt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)&(rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1, v0, t0);
SELECT * FROM rt1, v0, t0 WHERE (((((rt1.c1)&(rt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)&(rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1, v0, t0);
SELECT * FROM rt1, v0, t0 WHERE (((((rt1.c1)&(rt1.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (SQLITE_COMPILEOPTION_GET(((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c1)))) ORDER BY (((CASE WHEN t0.c39 THEN rt1.c3 END, ((rt1.c1) ISNULL), NULL))<=(((rt1.c3 IN ()), rt1.c2 COLLATE RTRIM, CASE rt1.c1  WHEN t0.c39 THEN rt1.c0 ELSE rt1.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c1)))) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (((CASE WHEN t0.c39 THEN rt1.c3 END, ((rt1.c1) ISNULL), NULL))<=(((rt1.c3 IN ()), rt1.c2 COLLATE RTRIM, CASE rt1.c1  WHEN t0.c39 THEN rt1.c0 ELSE rt1.c2 END))) ASC);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (SQLITE_COMPILEOPTION_GET(((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c1)))) ORDER BY (((CASE WHEN t0.c39 THEN rt1.c3 END, ((rt1.c1) ISNULL), NULL))<=(((rt1.c3 IN ()), rt1.c2 COLLATE RTRIM, CASE rt1.c1  WHEN t0.c39 THEN rt1.c0 ELSE rt1.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c1)))) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY (((CASE WHEN t0.c39 THEN rt1.c3 END, ((rt1.c1) ISNULL), NULL))<=(((rt1.c3 IN ()), rt1.c2 COLLATE RTRIM, CASE rt1.c1  WHEN t0.c39 THEN rt1.c0 ELSE rt1.c2 END))) ASC);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (SQLITE_COMPILEOPTION_GET(((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c1)))) ORDER BY (((CASE WHEN t0.c39 THEN rt1.c3 END, ((rt1.c1) ISNULL), NULL))<=(((rt1.c3 IN ()), rt1.c2 COLLATE RTRIM, CASE rt1.c1  WHEN t0.c39 THEN rt1.c0 ELSE rt1.c2 END))) ASC;
SELECT COUNT(*) FROM rt1, t0, v0 WHERE ((((- (x'')))+((rt1.c1 IN ())))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((- (x'')))+((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY x'');
SELECT COUNT(*) FROM rt1, t0, v0 WHERE ((((- (x'')))+((rt1.c1 IN ())))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((- (x'')))+((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY x'');
SELECT COUNT(*) FROM rt1, t0, v0 WHERE ((((- (x'')))+((rt1.c1 IN ())))) ORDER BY x'';
SELECT * FROM v0, rt1, t0 WHERE (((((((((rt1.c3 COLLATE RTRIM)AND(((t0.c39)%(v0.c0)))))OR((t0.c59 IN ()))))OR(((0x71ffcf69) BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c2)GLOB(t0.c39)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c3 COLLATE RTRIM)AND(((t0.c39)%(v0.c0)))))OR((t0.c59 IN ()))))OR(((0X71ffcf69) BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c2)GLOB(t0.c39))))) IS TRUE)  as count FROM v0, rt1, t0);
SELECT * FROM v0, rt1, t0 WHERE (((((((((rt1.c3 COLLATE RTRIM)AND(((t0.c39)%(v0.c0)))))OR((t0.c59 IN ()))))OR(((0x71ffcf69) BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c2)GLOB(t0.c39)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c3 COLLATE RTRIM)AND(((t0.c39)%(v0.c0)))))OR((t0.c59 IN ()))))OR(((0X71ffcf69) BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c2)GLOB(t0.c39))))) IS TRUE)  as count FROM v0, rt1, t0);
SELECT * FROM v0, rt1, t0 WHERE (((((((((rt1.c3 COLLATE RTRIM)AND(((t0.c39)%(v0.c0)))))OR((t0.c59 IN ()))))OR(((0x71ffcf69) BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c2)GLOB(t0.c39)))));
SELECT * FROM t0 INNER JOIN v0 ON ((((rt1.c1)OR(rt1.c0))) NOTNULL) INNER JOIN rt1 ON json_patch((rt1.c1 IN (t0.c59)), ((((rt1.c1)AND(t0.c39)))AND(rt1.c1))) WHERE (((((v0.c0)GLOB(NULL)))&(((rt1.c2)||(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)GLOB(NULL)))&(((rt1.c2)||(NULL))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((rt1.c1)OR(rt1.c0))) NOTNULL) INNER JOIN rt1 ON json_patch((rt1.c1 IN (t0.c59)), ((((rt1.c1)AND(t0.c39)))AND(rt1.c1))));
SELECT * FROM t0 INNER JOIN v0 ON ((((rt1.c1)OR(rt1.c0))) NOTNULL) INNER JOIN rt1 ON json_patch((rt1.c1 IN (t0.c59)), ((((rt1.c1)AND(t0.c39)))AND(rt1.c1))) WHERE (((((v0.c0)GLOB(NULL)))&(((rt1.c2)||(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)GLOB(NULL)))&(((rt1.c2)||(NULL))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((rt1.c1)OR(rt1.c0))) NOTNULL) INNER JOIN rt1 ON json_patch((rt1.c1 IN (t0.c59)), ((((rt1.c1)AND(t0.c39)))AND(rt1.c1))));
SELECT * FROM t0 INNER JOIN v0 ON ((((rt1.c1)OR(rt1.c0))) NOTNULL) INNER JOIN rt1 ON json_patch((rt1.c1 IN (t0.c59)), ((((rt1.c1)AND(t0.c39)))AND(rt1.c1))) WHERE (((((v0.c0)GLOB(NULL)))&(((rt1.c2)||(NULL)))));
SELECT ALL * FROM rt1 NOT INDEXED, v0, t0 WHERE (HEX(((rt1.c1) BETWEEN (t0.c39) AND (rt1.c2)))) ORDER BY (('	') IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(((rt1.c1) BETWEEN (t0.c39) AND (rt1.c2)))) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY (('	') IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt1 NOT INDEXED, v0, t0 WHERE (HEX(((rt1.c1) BETWEEN (t0.c39) AND (rt1.c2)))) ORDER BY (('	') IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(((rt1.c1) BETWEEN (t0.c39) AND (rt1.c2)))) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY (('	') IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt1 NOT INDEXED, v0, t0 WHERE (HEX(((rt1.c1) BETWEEN (t0.c39) AND (rt1.c2)))) ORDER BY (('	') IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1 WHERE (((((CAST(rt1.c3 AS BLOB))OR((rt1.c0 IN ()))))OR(rt1.c2))) ORDER BY (((((rt1.c3))<=((rt1.c1)))) ISNULL)  NULLS FIRST, ((+ (rt1.c3)) IN ('g-'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c3 AS BLOB))OR((rt1.c0 IN ()))))OR(rt1.c2))) IS TRUE)  as count FROM v0, rt1 ORDER BY (((((rt1.c3))<=((rt1.c1)))) ISNULL)  NULLS FIRST, ((+ (rt1.c3)) IN ('g-'))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1 WHERE (((((CAST(rt1.c3 AS BLOB))OR((rt1.c0 IN ()))))OR(rt1.c2))) ORDER BY (((((rt1.c3))<=((rt1.c1)))) ISNULL)  NULLS FIRST, ((+ (rt1.c3)) IN ('g-'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c3 AS BLOB))OR((rt1.c0 IN ()))))OR(rt1.c2))) IS TRUE)  as count FROM v0, rt1 ORDER BY (((((rt1.c3))<=((rt1.c1)))) ISNULL)  NULLS FIRST, ((+ (rt1.c3)) IN ('g-'))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1 WHERE (((((CAST(rt1.c3 AS BLOB))OR((rt1.c0 IN ()))))OR(rt1.c2))) ORDER BY (((((rt1.c3))<=((rt1.c1)))) ISNULL)  NULLS FIRST, ((+ (rt1.c3)) IN ('g-'))  NULLS FIRST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c3))) NOT BETWEEN ('-1371578972') AND (((rt1.c3)IS NOT(rt1.c0)))) RIGHT OUTER JOIN t0 ON ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2)))>=(UNLIKELY(DISTINCT rt1.c1))) WHERE ((((rt1.c3)) BETWEEN (((~ (rt1.c2)))) AND ((((rt1.c3) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) BETWEEN (((~ (rt1.c2)))) AND ((((rt1.c3) NOTNULL))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c3))) NOT BETWEEN ('-1371578972') AND (((rt1.c3)IS NOT(rt1.c0)))) RIGHT OUTER JOIN t0 ON ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2)))>=(UNLIKELY(DISTINCT rt1.c1))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c3))) NOT BETWEEN ('-1371578972') AND (((rt1.c3)IS NOT(rt1.c0)))) RIGHT OUTER JOIN t0 ON ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2)))>=(UNLIKELY(DISTINCT rt1.c1))) WHERE ((((rt1.c3)) BETWEEN (((~ (rt1.c2)))) AND ((((rt1.c3) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) BETWEEN (((~ (rt1.c2)))) AND ((((rt1.c3) NOTNULL))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c3))) NOT BETWEEN ('-1371578972') AND (((rt1.c3)IS NOT(rt1.c0)))) RIGHT OUTER JOIN t0 ON ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2)))>=(UNLIKELY(DISTINCT rt1.c1))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c3))) NOT BETWEEN ('-1371578972') AND (((rt1.c3)IS NOT(rt1.c0)))) RIGHT OUTER JOIN t0 ON ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c2)))>=(UNLIKELY(DISTINCT rt1.c1))) WHERE ((((rt1.c3)) BETWEEN (((~ (rt1.c2)))) AND ((((rt1.c3) NOTNULL)))));
SELECT * FROM v0, t0, rt1 WHERE ('-42318754') ORDER BY NULL, (((rt1.c2, rt1.c2, t0.c59)) BETWEEN (((((NULL)) NOT BETWEEN ((rt1.c1)) AND (('-1346968638'))), NULL, TRIM(t0.c39))) AND ((((v0.c0) BETWEEN (rt1.c3) AND (rt1.c1)), 1122236784, t0.c39)))  NULLS FIRST, ((rt1.c3 IN (t0.c59, 0.5033545746265076)) IN (((((((((v0.c0)OR(t0.c39)))AND(t0.c39)))OR(t0.c39)))OR(v0.c0)), 4.39195829E8));
SELECT SUM(count) FROM (SELECT ALL (('-42318754') IS TRUE)  as count FROM v0, t0, rt1 NOT INDEXED ORDER BY NULL, (((rt1.c2, rt1.c2, t0.c59)) BETWEEN (((((NULL)) NOT BETWEEN ((rt1.c1)) AND (('-1346968638'))), NULL, TRIM(t0.c39))) AND ((((v0.c0) BETWEEN (rt1.c3) AND (rt1.c1)), 1122236784, t0.c39)))  NULLS FIRST, ((rt1.c3 IN (t0.c59, 0.5033545746265076)) IN (((((((((v0.c0)OR(t0.c39)))AND(t0.c39)))OR(t0.c39)))OR(v0.c0)), 4.39195829E8)));
SELECT * FROM v0, t0, rt1 WHERE ('-42318754') ORDER BY NULL, (((rt1.c2, rt1.c2, t0.c59)) BETWEEN (((((NULL)) NOT BETWEEN ((rt1.c1)) AND (('-1346968638'))), NULL, TRIM(t0.c39))) AND ((((v0.c0) BETWEEN (rt1.c3) AND (rt1.c1)), 1122236784, t0.c39)))  NULLS FIRST, ((rt1.c3 IN (t0.c59, 0.5033545746265076)) IN (((((((((v0.c0)OR(t0.c39)))AND(t0.c39)))OR(t0.c39)))OR(v0.c0)), 4.39195829E8));
SELECT SUM(count) FROM (SELECT ALL (('-42318754') IS TRUE)  as count FROM v0, t0, rt1 NOT INDEXED ORDER BY NULL, (((rt1.c2, rt1.c2, t0.c59)) BETWEEN (((((NULL)) NOT BETWEEN ((rt1.c1)) AND (('-1346968638'))), NULL, TRIM(t0.c39))) AND ((((v0.c0) BETWEEN (rt1.c3) AND (rt1.c1)), 1122236784, t0.c39)))  NULLS FIRST, ((rt1.c3 IN (t0.c59, 0.5033545746265076)) IN (((((((((v0.c0)OR(t0.c39)))AND(t0.c39)))OR(t0.c39)))OR(v0.c0)), 4.39195829E8)));
SELECT * FROM v0, t0, rt1 WHERE ('-42318754') ORDER BY NULL, (((rt1.c2, rt1.c2, t0.c59)) BETWEEN (((((NULL)) NOT BETWEEN ((rt1.c1)) AND (('-1346968638'))), NULL, TRIM(t0.c39))) AND ((((v0.c0) BETWEEN (rt1.c3) AND (rt1.c1)), 1122236784, t0.c39)))  NULLS FIRST, ((rt1.c3 IN (t0.c59, 0.5033545746265076)) IN (((((((((v0.c0)OR(t0.c39)))AND(t0.c39)))OR(t0.c39)))OR(v0.c0)), 4.39195829E8));
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c1)+(rt1.c3))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))) AND (rt1.c2)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((rt1.c1)+(rt1.c3))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))) AND (rt1.c2)));
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c1)+(rt1.c3))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))) AND (rt1.c2)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((rt1.c1)+(rt1.c3))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))) AND (rt1.c2)));
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((((rt1.c1)+(rt1.c3))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))) AND (rt1.c2)) WHERE (NULL);
SELECT COUNT(*) FROM t0 WHERE ((~ (TRIM(t0.c39, t0.c39)))) ORDER BY (((NOT ('-1825078219')))>=(t0.c39 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((~ (TRIM(t0.c39, t0.c39)))) IS TRUE)  as count FROM t0 ORDER BY (((NOT ('-1825078219')))>=(t0.c39 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 WHERE ((~ (TRIM(t0.c39, t0.c39)))) ORDER BY (((NOT ('-1825078219')))>=(t0.c39 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((~ (TRIM(t0.c39, t0.c39)))) IS TRUE)  as count FROM t0 ORDER BY (((NOT ('-1825078219')))>=(t0.c39 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 WHERE ((~ (TRIM(t0.c39, t0.c39)))) ORDER BY (((NOT ('-1825078219')))>=(t0.c39 COLLATE RTRIM));
SELECT COUNT(*) FROM t0, rt1, v0 WHERE ('LP') ORDER BY (- (((x'1820')<>(rt1.c3)))), ((v0.c0 COLLATE NOCASE)<(rt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('LP') IS TRUE)  as count FROM t0, rt1, v0 ORDER BY (- (((x'1820')!=(rt1.c3)))), ((v0.c0 COLLATE NOCASE)<(rt1.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE ('LP') ORDER BY (- (((x'1820')<>(rt1.c3)))), ((v0.c0 COLLATE NOCASE)<(rt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('LP') IS TRUE)  as count FROM t0, rt1, v0 ORDER BY (- (((x'1820')!=(rt1.c3)))), ((v0.c0 COLLATE NOCASE)<(rt1.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE ('LP') ORDER BY (- (((x'1820')<>(rt1.c3)))), ((v0.c0 COLLATE NOCASE)<(rt1.c0)) DESC  NULLS LAST;
SELECT * FROM v0, t0 CROSS JOIN rt1 ON (((t0.c39 COLLATE BINARY))>((((((v0.c0)AND(rt1.c1)))AND(rt1.c3))))) WHERE ('-931673419' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-931673419' COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 CROSS JOIN rt1 ON (((t0.c39 COLLATE BINARY))>((((((v0.c0)AND(rt1.c1)))AND(rt1.c3))))));
SELECT * FROM v0, t0 CROSS JOIN rt1 ON (((t0.c39 COLLATE BINARY))>((((((v0.c0)AND(rt1.c1)))AND(rt1.c3))))) WHERE ('-931673419' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-931673419' COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 CROSS JOIN rt1 ON (((t0.c39 COLLATE BINARY))>((((((v0.c0)AND(rt1.c1)))AND(rt1.c3))))));
SELECT * FROM v0, t0 CROSS JOIN rt1 ON (((t0.c39 COLLATE BINARY))>((((((v0.c0)AND(rt1.c1)))AND(rt1.c3))))) WHERE ('-931673419' COLLATE NOCASE);
SELECT * FROM rt1 CROSS JOIN t0 ON (- (rt1.c0)) COLLATE NOCASE WHERE ((((NOT (0.39814731769851164)))IS NOT(((t0.c39) BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY TYPEOF(DISTINCT (rt1.c0 IN (t0.c39)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (0.39814731769851164)))IS NOT(((t0.c39) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (- (rt1.c0)) COLLATE NOCASE ORDER BY TYPEOF(DISTINCT (rt1.c0 IN (t0.c39))));
SELECT * FROM rt1 CROSS JOIN t0 ON (- (rt1.c0)) COLLATE NOCASE WHERE ((((NOT (0.39814731769851164)))IS NOT(((t0.c39) BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY TYPEOF(DISTINCT (rt1.c0 IN (t0.c39)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (0.39814731769851164)))IS NOT(((t0.c39) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (- (rt1.c0)) COLLATE NOCASE ORDER BY TYPEOF(DISTINCT (rt1.c0 IN (t0.c39))));
SELECT * FROM rt1 CROSS JOIN t0 ON (- (rt1.c0)) COLLATE NOCASE WHERE ((((NOT (0.39814731769851164)))IS NOT(((t0.c39) BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY TYPEOF(DISTINCT (rt1.c0 IN (t0.c39)));
SELECT * FROM t0 WHERE (((t0.c39) BETWEEN (((t0.c59) NOT BETWEEN (t0.c39) AND (1670018486))) AND (json_array_length(t0.c39))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c39) BETWEEN (((t0.c59) NOT BETWEEN (t0.c39) AND (1670018486))) AND (json_array_length(t0.c39)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c39) BETWEEN (((t0.c59) NOT BETWEEN (t0.c39) AND (1670018486))) AND (json_array_length(t0.c39))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c39) BETWEEN (((t0.c59) NOT BETWEEN (t0.c39) AND (1670018486))) AND (json_array_length(t0.c39)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c39) BETWEEN (((t0.c59) NOT BETWEEN (t0.c39) AND (1670018486))) AND (json_array_length(t0.c39))));
SELECT COUNT(*) FROM v0 WHERE (HEX(DISTINCT (v0.c0 IN (v0.c0)))) ORDER BY (- (v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (v0.c0 IN (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (HEX(DISTINCT (v0.c0 IN (v0.c0)))) ORDER BY (- (v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (v0.c0 IN (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (HEX(DISTINCT (v0.c0 IN (v0.c0)))) ORDER BY (- (v0.c0))  NULLS FIRST;
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON CASE WHEN NULL THEN ((rt1.c2)IS(t0.c59)) ELSE CAST(v0.c0 AS NUMERIC) END INNER JOIN t0 ON '1132170079' WHERE ((((((((((((v0.c0)) BETWEEN ((t0.c39)) AND ((t0.c59))))OR((- (rt1.c2)))))OR(0.6704581352161353)))AND(t0.c59)))AND(((rt1.c1)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0)) BETWEEN ((t0.c39)) AND ((t0.c59))))OR((- (rt1.c2)))))OR(0.6704581352161353)))AND(t0.c59)))AND(((rt1.c1)*(v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON CASE WHEN NULL THEN ((rt1.c2)IS(t0.c59)) ELSE CAST(v0.c0 AS NUMERIC) END INNER JOIN t0 ON '1132170079');
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON CASE WHEN NULL THEN ((rt1.c2)IS(t0.c59)) ELSE CAST(v0.c0 AS NUMERIC) END INNER JOIN t0 ON '1132170079' WHERE ((((((((((((v0.c0)) BETWEEN ((t0.c39)) AND ((t0.c59))))OR((- (rt1.c2)))))OR(0.6704581352161353)))AND(t0.c59)))AND(((rt1.c1)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0)) BETWEEN ((t0.c39)) AND ((t0.c59))))OR((- (rt1.c2)))))OR(0.6704581352161353)))AND(t0.c59)))AND(((rt1.c1)*(v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON CASE WHEN NULL THEN ((rt1.c2)IS(t0.c59)) ELSE CAST(v0.c0 AS NUMERIC) END INNER JOIN t0 ON '1132170079');
SELECT * FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND((v0.c0 IN ()))))AND((v0.c0 IN ()))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(LIKELY(v0.c0)))) ORDER BY (('Q0gc')-(v0.c0)) COLLATE RTRIM, CASE WHEN CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END, (((((+ (v0.c0)))OR((v0.c0 IN ()))))AND(((v0.c0)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND((v0.c0 IN ()))))AND((v0.c0 IN ()))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(LIKELY(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (('Q0gc')-(v0.c0)) COLLATE RTRIM, CASE WHEN CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END, (((((+ (v0.c0)))OR((v0.c0 IN ()))))AND(((v0.c0)>=(v0.c0)))));
SELECT * FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND((v0.c0 IN ()))))AND((v0.c0 IN ()))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(LIKELY(v0.c0)))) ORDER BY (('Q0gc')-(v0.c0)) COLLATE RTRIM, CASE WHEN CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END, (((((+ (v0.c0)))OR((v0.c0 IN ()))))AND(((v0.c0)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND((v0.c0 IN ()))))AND((v0.c0 IN ()))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(LIKELY(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (('Q0gc')-(v0.c0)) COLLATE RTRIM, CASE WHEN CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END, (((((+ (v0.c0)))OR((v0.c0 IN ()))))AND(((v0.c0)>=(v0.c0)))));
SELECT * FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND((v0.c0 IN ()))))AND((v0.c0 IN ()))))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))OR(LIKELY(v0.c0)))) ORDER BY (('Q0gc')-(v0.c0)) COLLATE RTRIM, CASE WHEN CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END, (((((+ (v0.c0)))OR((v0.c0 IN ()))))AND(((v0.c0)>=(v0.c0))));
SELECT ALL * FROM t0, rt1 WHERE (CAST(((rt1.c3) BETWEEN (rt1.c3) AND (t0.c39)) AS NUMERIC)) ORDER BY CASE (rt1.c3 IN ())  WHEN rt1.c2 COLLATE BINARY THEN MAX(rt1.c1, t0.c39) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3) BETWEEN (rt1.c3) AND (t0.c39)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE (rt1.c3 IN ())  WHEN rt1.c2 COLLATE BINARY THEN MAX(rt1.c1, t0.c39) END  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (CAST(((rt1.c3) BETWEEN (rt1.c3) AND (t0.c39)) AS NUMERIC)) ORDER BY CASE (rt1.c3 IN ())  WHEN rt1.c2 COLLATE BINARY THEN MAX(rt1.c1, t0.c39) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3) BETWEEN (rt1.c3) AND (t0.c39)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE (rt1.c3 IN ())  WHEN rt1.c2 COLLATE BINARY THEN MAX(rt1.c1, t0.c39) END  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (CAST(((rt1.c3) BETWEEN (rt1.c3) AND (t0.c39)) AS NUMERIC)) ORDER BY CASE (rt1.c3 IN ())  WHEN rt1.c2 COLLATE BINARY THEN MAX(rt1.c1, t0.c39) END  NULLS FIRST;
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE ((((((rt1.c3)+(rt1.c1))))>((x''))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)+(rt1.c1))))>((x'')))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1);
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE ((((((rt1.c3)+(rt1.c1))))>((x''))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)+(rt1.c1))))>((x'')))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1);
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE ((((((rt1.c3)+(rt1.c1))))>((x''))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((v0.c0)IS(v0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)IS(v0.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((v0.c0)IS(v0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)IS(v0.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((v0.c0)IS(v0.c0)) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1) IS TRUE))%(((rt1.c2)+(rt1.c0)))) WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1) IS TRUE))%(((rt1.c2)+(rt1.c0)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1) IS TRUE))%(((rt1.c2)+(rt1.c0)))) WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1) IS TRUE))%(((rt1.c2)+(rt1.c0)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1) IS TRUE))%(((rt1.c2)+(rt1.c0)))) WHERE (t0.c59);
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON ((((+ (t0.c59))))<((CAST(t0.c39 AS REAL)))) WHERE (CASE ((t0.c59) NOT BETWEEN ('1532816579') AND (v0.c0))  WHEN 0X5dc3f5c2 COLLATE NOCASE THEN ((v0.c0)IS(t0.c59)) ELSE '504753198' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c59) NOT BETWEEN ('1532816579') AND (v0.c0))  WHEN 0x5dc3f5c2 COLLATE NOCASE THEN ((v0.c0)IS(t0.c59)) ELSE '504753198' END) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((+ (t0.c59))))<((CAST(t0.c39 AS REAL)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON ((((+ (t0.c59))))<((CAST(t0.c39 AS REAL)))) WHERE (CASE ((t0.c59) NOT BETWEEN ('1532816579') AND (v0.c0))  WHEN 0X5dc3f5c2 COLLATE NOCASE THEN ((v0.c0)IS(t0.c59)) ELSE '504753198' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c59) NOT BETWEEN ('1532816579') AND (v0.c0))  WHEN 0x5dc3f5c2 COLLATE NOCASE THEN ((v0.c0)IS(t0.c59)) ELSE '504753198' END) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((+ (t0.c59))))<((CAST(t0.c39 AS REAL)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON ((((+ (t0.c59))))<((CAST(t0.c39 AS REAL)))) WHERE (CASE ((t0.c59) NOT BETWEEN ('1532816579') AND (v0.c0))  WHEN 0X5dc3f5c2 COLLATE NOCASE THEN ((v0.c0)IS(t0.c59)) ELSE '504753198' END);
SELECT * FROM rt1, t0, v0 WHERE ((((t0.c39)>=(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c39)>=(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, t0, v0);
SELECT * FROM rt1, t0, v0 WHERE ((((t0.c39)>=(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c39)>=(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, t0, v0);
SELECT * FROM rt1, t0, v0 WHERE ((((t0.c39)>=(rt1.c2)) IN ()));
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0, rt1);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0, rt1);
SELECT COUNT(*) FROM v0, t0, rt1 WHERE (v0.c0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE ((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN (('dp', v0.c0, (((rt1.c1))>((v0.c0))))) AND ((CAST(t0.c59 AS INTEGER), ((((rt1.c0)OR(t0.c59)))AND(v0.c0)), CAST(rt1.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN (('dp', v0.c0, (((rt1.c1))>((v0.c0))))) AND ((CAST(t0.c59 AS INTEGER), ((((rt1.c0)OR(t0.c59)))AND(v0.c0)), CAST(rt1.c0 AS INTEGER))))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE ((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN (('dp', v0.c0, (((rt1.c1))>((v0.c0))))) AND ((CAST(t0.c59 AS INTEGER), ((((rt1.c0)OR(t0.c59)))AND(v0.c0)), CAST(rt1.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN (('dp', v0.c0, (((rt1.c1))>((v0.c0))))) AND ((CAST(t0.c59 AS INTEGER), ((((rt1.c0)OR(t0.c59)))AND(v0.c0)), CAST(rt1.c0 AS INTEGER))))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT COUNT(*) FROM rt1, v0, t0 WHERE ((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN (('dp', v0.c0, (((rt1.c1))>((v0.c0))))) AND ((CAST(t0.c59 AS INTEGER), ((((rt1.c0)OR(t0.c59)))AND(v0.c0)), CAST(rt1.c0 AS INTEGER)))));
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT COUNT(*) FROM t0, rt1 NATURAL JOIN v0 WHERE (CASE WHEN t0.c59 THEN ((((rt1.c2)OR('-1681014292')))AND(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c59 THEN ((((rt1.c2)OR('-1681014292')))AND(rt1.c0)) END) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0, rt1 NATURAL JOIN v0 WHERE (CASE WHEN t0.c59 THEN ((((rt1.c2)OR('-1681014292')))AND(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c59 THEN ((((rt1.c2)OR('-1681014292')))AND(rt1.c0)) END) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0, rt1 NATURAL JOIN v0 WHERE (CASE WHEN t0.c59 THEN ((((rt1.c2)OR('-1681014292')))AND(rt1.c0)) END);
SELECT * FROM t0 WHERE (((((((((((((t0.c39)OR(t0.c39)))AND(t0.c39)))OR(t0.c39)))AND(t0.c59)))OR(((t0.c59)>=(t0.c39)))))AND(x''))) ORDER BY 0.9217426253869098 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c39)OR(t0.c39)))AND(t0.c39)))OR(t0.c39)))AND(t0.c59)))OR(((t0.c59)>=(t0.c39)))))AND(x''))) IS TRUE)  as count FROM t0 ORDER BY 0.9217426253869098 DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((((((((t0.c39)OR(t0.c39)))AND(t0.c39)))OR(t0.c39)))AND(t0.c59)))OR(((t0.c59)>=(t0.c39)))))AND(x''))) ORDER BY 0.9217426253869098 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c39)OR(t0.c39)))AND(t0.c39)))OR(t0.c39)))AND(t0.c59)))OR(((t0.c59)>=(t0.c39)))))AND(x''))) IS TRUE)  as count FROM t0 ORDER BY 0.9217426253869098 DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((((((((t0.c39)OR(t0.c39)))AND(t0.c39)))OR(t0.c39)))AND(t0.c59)))OR(((t0.c59)>=(t0.c39)))))AND(x''))) ORDER BY 0.9217426253869098 DESC  NULLS FIRST;
SELECT * FROM t0 CROSS JOIN rt1 ON ((((rt1.c3)-(rt1.c2)))IS NOT((((t0.c39)) BETWEEN ((t0.c59)) AND ((t0.c39))))) WHERE (rt1.c1) ORDER BY ((IFNULL(rt1.c1, t0.c39)) NOTNULL) ASC  NULLS FIRST, (((t0.c39)) BETWEEN ((t0.c59 COLLATE NOCASE)) AND (((((t0.c39, rt1.c2, rt1.c1))=((rt1.c0, rt1.c1, rt1.c0)))))), 'tBhC';
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((((rt1.c3)-(rt1.c2)))IS NOT((((t0.c39)) BETWEEN ((t0.c59)) AND ((t0.c39))))) ORDER BY ((IFNULL(rt1.c1, t0.c39)) NOTNULL) ASC  NULLS FIRST, (((t0.c39)) BETWEEN ((t0.c59 COLLATE NOCASE)) AND (((((t0.c39, rt1.c2, rt1.c1))==((rt1.c0, rt1.c1, rt1.c0)))))), 'tBhC');
SELECT * FROM t0 CROSS JOIN rt1 ON ((((rt1.c3)-(rt1.c2)))IS NOT((((t0.c39)) BETWEEN ((t0.c59)) AND ((t0.c39))))) WHERE (rt1.c1) ORDER BY ((IFNULL(rt1.c1, t0.c39)) NOTNULL) ASC  NULLS FIRST, (((t0.c39)) BETWEEN ((t0.c59 COLLATE NOCASE)) AND (((((t0.c39, rt1.c2, rt1.c1))=((rt1.c0, rt1.c1, rt1.c0)))))), 'tBhC';
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((((rt1.c3)-(rt1.c2)))IS NOT((((t0.c39)) BETWEEN ((t0.c59)) AND ((t0.c39))))) ORDER BY ((IFNULL(rt1.c1, t0.c39)) NOTNULL) ASC  NULLS FIRST, (((t0.c39)) BETWEEN ((t0.c59 COLLATE NOCASE)) AND (((((t0.c39, rt1.c2, rt1.c1))==((rt1.c0, rt1.c1, rt1.c0)))))), 'tBhC');
SELECT * FROM t0 CROSS JOIN rt1 ON ((((rt1.c3)-(rt1.c2)))IS NOT((((t0.c39)) BETWEEN ((t0.c59)) AND ((t0.c39))))) WHERE (rt1.c1) ORDER BY ((IFNULL(rt1.c1, t0.c39)) NOTNULL) ASC  NULLS FIRST, (((t0.c39)) BETWEEN ((t0.c59 COLLATE NOCASE)) AND (((((t0.c39, rt1.c2, rt1.c1))=((rt1.c0, rt1.c1, rt1.c0)))))), 'tBhC';
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)) IN ())) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)) IN ())) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)) IN ()));
SELECT COUNT(*) FROM t0, v0 WHERE ((t0.c59 IN ()) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((t0.c59 IN ()) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((t0.c59 IN ()) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((t0.c59 IN ()) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((t0.c59 IN ()) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM rt1, t0, v0 WHERE (((t0.c39) NOT BETWEEN (t0.c59) AND (t0.c59)) COLLATE NOCASE) ORDER BY ((rt1.c2)LIKE(v0.c0)) COLLATE RTRIM COLLATE NOCASE DESC, ((((NOT (rt1.c3))))>=(((((0.20960988270504832))>((0.7515392062853322)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c39) NOT BETWEEN (t0.c59) AND (t0.c59)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY ((rt1.c2)LIKE(v0.c0)) COLLATE RTRIM COLLATE NOCASE DESC, ((((NOT (rt1.c3))))>=(((((0.20960988270504832))>((0.7515392062853322)))))) DESC);
SELECT ALL * FROM rt1, t0, v0 WHERE (((t0.c39) NOT BETWEEN (t0.c59) AND (t0.c59)) COLLATE NOCASE) ORDER BY ((rt1.c2)LIKE(v0.c0)) COLLATE RTRIM COLLATE NOCASE DESC, ((((NOT (rt1.c3))))>=(((((0.20960988270504832))>((0.7515392062853322)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c39) NOT BETWEEN (t0.c59) AND (t0.c59)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY ((rt1.c2)LIKE(v0.c0)) COLLATE RTRIM COLLATE NOCASE DESC, ((((NOT (rt1.c3))))>=(((((0.20960988270504832))>((0.7515392062853322)))))) DESC);
SELECT ALL * FROM rt1, t0, v0 WHERE (((t0.c39) NOT BETWEEN (t0.c59) AND (t0.c59)) COLLATE NOCASE) ORDER BY ((rt1.c2)LIKE(v0.c0)) COLLATE RTRIM COLLATE NOCASE DESC, ((((NOT (rt1.c3))))>=(((((0.20960988270504832))>((0.7515392062853322)))))) DESC;
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(t0.c39 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c39 AS INTEGER)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(t0.c39 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c39 AS INTEGER)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(t0.c39 AS INTEGER));
SELECT * FROM t0, rt1 RIGHT OUTER JOIN v0 ON (+ ((((t0.c39))<=((t0.c39))))) WHERE ((((t0.c59, x'', rt1.c3)) BETWEEN ((TRIM(rt1.c0, t0.c39), ((rt1.c2) NOTNULL), (((rt1.c0)) NOT BETWEEN ((t0.c59)) AND ((rt1.c3))))) AND ((IFNULL(DISTINCT v0.c0, t0.c39), t0.c39 COLLATE RTRIM, x'be3a49e9'))));
SELECT SUM(count) FROM (SELECT (((((t0.c59, x'', rt1.c3)) BETWEEN ((TRIM(rt1.c0, t0.c39), ((rt1.c2) NOTNULL), (((rt1.c0)) NOT BETWEEN ((t0.c59)) AND ((rt1.c3))))) AND ((IFNULL(DISTINCT v0.c0, t0.c39), t0.c39 COLLATE RTRIM, x'be3a49e9')))) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN v0 ON (+ ((((t0.c39))<=((t0.c39))))));
SELECT * FROM t0, rt1 RIGHT OUTER JOIN v0 ON (+ ((((t0.c39))<=((t0.c39))))) WHERE ((((t0.c59, x'', rt1.c3)) BETWEEN ((TRIM(rt1.c0, t0.c39), ((rt1.c2) NOTNULL), (((rt1.c0)) NOT BETWEEN ((t0.c59)) AND ((rt1.c3))))) AND ((IFNULL(DISTINCT v0.c0, t0.c39), t0.c39 COLLATE RTRIM, x'be3a49e9'))));
SELECT SUM(count) FROM (SELECT (((((t0.c59, x'', rt1.c3)) BETWEEN ((TRIM(rt1.c0, t0.c39), ((rt1.c2) NOTNULL), (((rt1.c0)) NOT BETWEEN ((t0.c59)) AND ((rt1.c3))))) AND ((IFNULL(DISTINCT v0.c0, t0.c39), t0.c39 COLLATE RTRIM, x'be3a49e9')))) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN v0 ON (+ ((((t0.c39))<=((t0.c39))))));
SELECT * FROM t0, rt1 RIGHT OUTER JOIN v0 ON (+ ((((t0.c39))<=((t0.c39))))) WHERE ((((t0.c59, x'', rt1.c3)) BETWEEN ((TRIM(rt1.c0, t0.c39), ((rt1.c2) NOTNULL), (((rt1.c0)) NOT BETWEEN ((t0.c59)) AND ((rt1.c3))))) AND ((IFNULL(DISTINCT v0.c0, t0.c39), t0.c39 COLLATE RTRIM, x'be3a49e9'))));
SELECT ALL COUNT(*) FROM t0 WHERE (('+శ' IN ((- (t0.c59)), (((t0.c39))=((t0.c39)))))) ORDER BY ((((t0.c39)+(t0.c39))) NOT BETWEEN (((t0.c39) IS TRUE)) AND (((NULL) NOTNULL))) DESC  NULLS FIRST, ((((((((((t0.c59)OR(t0.c39)))OR(t0.c39)))AND(t0.c59)))OR(t0.c39))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('+శ' IN ((- (t0.c59)), (((t0.c39))=((t0.c39)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c39)+(t0.c39))) NOT BETWEEN (((t0.c39) IS TRUE)) AND (((NULL) NOTNULL))) DESC  NULLS FIRST, ((((((((((t0.c59)OR(t0.c39)))OR(t0.c39)))AND(t0.c59)))OR(t0.c39))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (('+శ' IN ((- (t0.c59)), (((t0.c39))=((t0.c39)))))) ORDER BY ((((t0.c39)+(t0.c39))) NOT BETWEEN (((t0.c39) IS TRUE)) AND (((NULL) NOTNULL))) DESC  NULLS FIRST, ((((((((((t0.c59)OR(t0.c39)))OR(t0.c39)))AND(t0.c59)))OR(t0.c39))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('+శ' IN ((- (t0.c59)), (((t0.c39))=((t0.c39)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c39)+(t0.c39))) NOT BETWEEN (((t0.c39) IS TRUE)) AND (((NULL) NOTNULL))) DESC  NULLS FIRST, ((((((((((t0.c59)OR(t0.c39)))OR(t0.c39)))AND(t0.c59)))OR(t0.c39))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (('+శ' IN ((- (t0.c59)), (((t0.c39))=((t0.c39)))))) ORDER BY ((((t0.c39)+(t0.c39))) NOT BETWEEN (((t0.c39) IS TRUE)) AND (((NULL) NOTNULL))) DESC  NULLS FIRST, ((((((((((t0.c59)OR(t0.c39)))OR(t0.c39)))AND(t0.c59)))OR(t0.c39))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((v0.c0)) BETWEEN ((((v0.c0)!=(v0.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0)!=(v0.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((v0.c0)) BETWEEN ((((v0.c0)!=(v0.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0)!=(v0.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((v0.c0)) BETWEEN ((((v0.c0)!=(v0.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE ((0.9488259646734635 IN ())) ORDER BY CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)==(v0.c0)) END  NULLS LAST, (((CAST(v0.c0 AS BLOB)))=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((0.9488259646734635 IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)=(v0.c0)) END  NULLS LAST, (((CAST(v0.c0 AS BLOB)))==((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((0.9488259646734635 IN ())) ORDER BY CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)==(v0.c0)) END  NULLS LAST, (((CAST(v0.c0 AS BLOB)))=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((0.9488259646734635 IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)=(v0.c0)) END  NULLS LAST, (((CAST(v0.c0 AS BLOB)))==((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((0.9488259646734635 IN ())) ORDER BY CASE ((v0.c0)IS NOT(v0.c0))  WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)==(v0.c0)) END  NULLS LAST, (((CAST(v0.c0 AS BLOB)))=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((NULL) IS TRUE)) ORDER BY CASE WHEN CAST(t0.c39 AS NUMERIC) THEN (- (t0.c39)) ELSE (~ (t0.c39)) END ASC  NULLS LAST, ((((t0.c39)*(t0.c59)))%(NULLIF(t0.c59, t0.c59)));
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c39 AS NUMERIC) THEN (- (t0.c39)) ELSE (~ (t0.c39)) END ASC  NULLS LAST, ((((t0.c39)*(t0.c59)))%(NULLIF(t0.c59, t0.c59))));
SELECT * FROM t0 WHERE (((NULL) IS TRUE)) ORDER BY CASE WHEN CAST(t0.c39 AS NUMERIC) THEN (- (t0.c39)) ELSE (~ (t0.c39)) END ASC  NULLS LAST, ((((t0.c39)*(t0.c59)))%(NULLIF(t0.c59, t0.c59)));
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CAST(t0.c39 AS NUMERIC) THEN (- (t0.c39)) ELSE (~ (t0.c39)) END ASC  NULLS LAST, ((((t0.c39)*(t0.c59)))%(NULLIF(t0.c59, t0.c59))));
SELECT * FROM t0 WHERE (((NULL) IS TRUE)) ORDER BY CASE WHEN CAST(t0.c39 AS NUMERIC) THEN (- (t0.c39)) ELSE (~ (t0.c39)) END ASC  NULLS LAST, ((((t0.c39)*(t0.c59)))%(NULLIF(t0.c59, t0.c59)));
SELECT ALL * FROM t0, rt1, v0 WHERE (((CASE t0.c59  WHEN rt1.c1 THEN t0.c39 END) NOT BETWEEN (t0.c59) AND ((+ (rt1.c1))))) ORDER BY ((t0.c59)<>('xU')) DESC  NULLS LAST, (+ (((((t0.c39)OR(v0.c0)))AND(t0.c59))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c59  WHEN rt1.c1 THEN t0.c39 END) NOT BETWEEN (t0.c59) AND ((+ (rt1.c1))))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY ((t0.c59)!=('xU')) DESC  NULLS LAST, (+ (((((t0.c39)OR(v0.c0)))AND(t0.c59))))  NULLS LAST);
SELECT ALL * FROM t0, rt1, v0 WHERE (((CASE t0.c59  WHEN rt1.c1 THEN t0.c39 END) NOT BETWEEN (t0.c59) AND ((+ (rt1.c1))))) ORDER BY ((t0.c59)<>('xU')) DESC  NULLS LAST, (+ (((((t0.c39)OR(v0.c0)))AND(t0.c59))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c59  WHEN rt1.c1 THEN t0.c39 END) NOT BETWEEN (t0.c59) AND ((+ (rt1.c1))))) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY ((t0.c59)!=('xU')) DESC  NULLS LAST, (+ (((((t0.c39)OR(v0.c0)))AND(t0.c59))))  NULLS LAST);
SELECT ALL * FROM t0, rt1, v0 WHERE (((CASE t0.c59  WHEN rt1.c1 THEN t0.c39 END) NOT BETWEEN (t0.c59) AND ((+ (rt1.c1))))) ORDER BY ((t0.c59)<>('xU')) DESC  NULLS LAST, (+ (((((t0.c39)OR(v0.c0)))AND(t0.c59))))  NULLS LAST;
SELECT * FROM rt1, v0 WHERE (highlight(((v0.c0) IS FALSE), rt1.c2, (((v0.c0, rt1.c1, x'c2ec'))>=((rt1.c0, rt1.c1, ''))), rt1.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((highlight(((v0.c0) IS FALSE), rt1.c2, (((v0.c0, rt1.c1, x'c2ec'))>=((rt1.c0, rt1.c1, ''))), rt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt1 NOT INDEXED, v0);
SELECT * FROM rt1, v0 WHERE (highlight(((v0.c0) IS FALSE), rt1.c2, (((v0.c0, rt1.c1, x'c2ec'))>=((rt1.c0, rt1.c1, ''))), rt1.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((highlight(((v0.c0) IS FALSE), rt1.c2, (((v0.c0, rt1.c1, x'c2ec'))>=((rt1.c0, rt1.c1, ''))), rt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt1 NOT INDEXED, v0);
SELECT * FROM rt1, v0 WHERE (highlight(((v0.c0) IS FALSE), rt1.c2, (((v0.c0, rt1.c1, x'c2ec'))>=((rt1.c0, rt1.c1, ''))), rt1.c1 COLLATE RTRIM));
SELECT ALL * FROM rt1, v0, t0 WHERE (CASE t0.c59  WHEN rt1.c1 THEN x'' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c59  WHEN rt1.c1 THEN x'' END COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, t0);
SELECT ALL * FROM rt1, v0, t0 WHERE (CASE t0.c59  WHEN rt1.c1 THEN x'' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c59  WHEN rt1.c1 THEN x'' END COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, t0);
SELECT ALL * FROM rt1, v0, t0 WHERE (CASE t0.c59  WHEN rt1.c1 THEN x'' END COLLATE RTRIM);
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN rt1 WHERE (CAST(rt1.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS BLOB)) IS TRUE)  as count FROM v0, t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN rt1 WHERE (CAST(rt1.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS BLOB)) IS TRUE)  as count FROM v0, t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM v0, t0 NATURAL JOIN rt1 WHERE (CAST(rt1.c1 AS BLOB));
SELECT ALL * FROM t0, rt1 WHERE (((((t0.c59) NOT BETWEEN (t0.c39) AND (rt1.c3)))IS NOT(CAST(t0.c39 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c59) NOT BETWEEN (t0.c39) AND (rt1.c3)))IS NOT(CAST(t0.c39 AS BLOB)))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((((t0.c59) NOT BETWEEN (t0.c39) AND (rt1.c3)))IS NOT(CAST(t0.c39 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c59) NOT BETWEEN (t0.c39) AND (rt1.c3)))IS NOT(CAST(t0.c39 AS BLOB)))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((((t0.c59) NOT BETWEEN (t0.c39) AND (rt1.c3)))IS NOT(CAST(t0.c39 AS BLOB))));
SELECT COUNT(*) FROM rt1 WHERE ((((CAST(rt1.c0 AS NUMERIC)))<((((rt1.c3)%(rt1.c3))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c0 AS NUMERIC)))<((((rt1.c3)%(rt1.c3)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((CAST(rt1.c0 AS NUMERIC)))<((((rt1.c3)%(rt1.c3))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c0 AS NUMERIC)))<((((rt1.c3)%(rt1.c3)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((CAST(rt1.c0 AS NUMERIC)))<((((rt1.c3)%(rt1.c3))))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((((((t0.c39)IS(rt1.c1)))OR(((t0.c59)>>(rt1.c3)))))AND(rt1.c3 COLLATE RTRIM)) WHERE ((((((x'9064') BETWEEN (rt1.c2) AND (t0.c39)), ((t0.c39)<<(rt1.c2)), rt1.c0 COLLATE RTRIM))>(((0x32361708 IN ()), ((((rt1.c0)OR(rt1.c2)))OR(0.42621290042619675)), ((t0.c59) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((x'9064') BETWEEN (rt1.c2) AND (t0.c39)), ((t0.c39)<<(rt1.c2)), rt1.c0 COLLATE RTRIM))>(((0X32361708 IN ()), ((((rt1.c0)OR(rt1.c2)))OR(0.42621290042619675)), ((t0.c59) NOT NULL))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((((((t0.c39)IS(rt1.c1)))OR(((t0.c59)>>(rt1.c3)))))AND(rt1.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((((((t0.c39)IS(rt1.c1)))OR(((t0.c59)>>(rt1.c3)))))AND(rt1.c3 COLLATE RTRIM)) WHERE ((((((x'9064') BETWEEN (rt1.c2) AND (t0.c39)), ((t0.c39)<<(rt1.c2)), rt1.c0 COLLATE RTRIM))>(((0x32361708 IN ()), ((((rt1.c0)OR(rt1.c2)))OR(0.42621290042619675)), ((t0.c59) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((x'9064') BETWEEN (rt1.c2) AND (t0.c39)), ((t0.c39)<<(rt1.c2)), rt1.c0 COLLATE RTRIM))>(((0X32361708 IN ()), ((((rt1.c0)OR(rt1.c2)))OR(0.42621290042619675)), ((t0.c59) NOT NULL))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((((((t0.c39)IS(rt1.c1)))OR(((t0.c59)>>(rt1.c3)))))AND(rt1.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((((((t0.c39)IS(rt1.c1)))OR(((t0.c59)>>(rt1.c3)))))AND(rt1.c3 COLLATE RTRIM)) WHERE ((((((x'9064') BETWEEN (rt1.c2) AND (t0.c39)), ((t0.c39)<<(rt1.c2)), rt1.c0 COLLATE RTRIM))>(((0x32361708 IN ()), ((((rt1.c0)OR(rt1.c2)))OR(0.42621290042619675)), ((t0.c59) NOT NULL)))));
SELECT * FROM t0, rt1 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ((t0.c59) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (t0.c59);
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((((x'')AND(CASE rt1.c2  WHEN t0.c39 THEN t0.c39 ELSE t0.c39 END)))AND(((NULL)+(t0.c39)))) WHERE (((x'' COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((x'')AND(CASE rt1.c2  WHEN t0.c39 THEN t0.c39 ELSE t0.c39 END)))AND(((NULL)+(t0.c39)))));
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((((x'')AND(CASE rt1.c2  WHEN t0.c39 THEN t0.c39 ELSE t0.c39 END)))AND(((NULL)+(t0.c39)))) WHERE (((x'' COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((x'')AND(CASE rt1.c2  WHEN t0.c39 THEN t0.c39 ELSE t0.c39 END)))AND(((NULL)+(t0.c39)))));
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON ((((x'')AND(CASE rt1.c2  WHEN t0.c39 THEN t0.c39 ELSE t0.c39 END)))AND(((NULL)+(t0.c39)))) WHERE (((x'' COLLATE NOCASE) NOT NULL));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CASE ((t0.c39)*(t0.c59))  WHEN ((((((((((((v0.c0)AND(0.3102122275350092)))OR(t0.c59)))OR(t0.c39)))AND(v0.c0)))OR(t0.c59)))AND(t0.c39)) THEN (((v0.c0))>((v0.c0))) WHEN CAST(t0.c39 AS NUMERIC) THEN t0.c39 WHEN t0.c59 COLLATE NOCASE THEN CASE t0.c59  WHEN t0.c39 THEN t0.c59 WHEN t0.c39 THEN v0.c0 WHEN v0.c0 THEN t0.c39 END END WHERE (COALESCE(t0.c39 COLLATE NOCASE, (((v0.c0)) BETWEEN ((NULL)) AND ((t0.c39)))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(t0.c39 COLLATE NOCASE, (((v0.c0)) BETWEEN ((NULL)) AND ((t0.c39))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CASE ((t0.c39)*(t0.c59))  WHEN ((((((((((((v0.c0)AND(0.3102122275350092)))OR(t0.c59)))OR(t0.c39)))AND(v0.c0)))OR(t0.c59)))AND(t0.c39)) THEN (((v0.c0))>((v0.c0))) WHEN CAST(t0.c39 AS NUMERIC) THEN t0.c39 WHEN t0.c59 COLLATE NOCASE THEN CASE t0.c59  WHEN t0.c39 THEN t0.c59 WHEN t0.c39 THEN v0.c0 WHEN v0.c0 THEN t0.c39 END END);
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CASE ((t0.c39)*(t0.c59))  WHEN ((((((((((((v0.c0)AND(0.3102122275350092)))OR(t0.c59)))OR(t0.c39)))AND(v0.c0)))OR(t0.c59)))AND(t0.c39)) THEN (((v0.c0))>((v0.c0))) WHEN CAST(t0.c39 AS NUMERIC) THEN t0.c39 WHEN t0.c59 COLLATE NOCASE THEN CASE t0.c59  WHEN t0.c39 THEN t0.c59 WHEN t0.c39 THEN v0.c0 WHEN v0.c0 THEN t0.c39 END END WHERE (COALESCE(t0.c39 COLLATE NOCASE, (((v0.c0)) BETWEEN ((NULL)) AND ((t0.c39)))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(t0.c39 COLLATE NOCASE, (((v0.c0)) BETWEEN ((NULL)) AND ((t0.c39))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CASE ((t0.c39)*(t0.c59))  WHEN ((((((((((((v0.c0)AND(0.3102122275350092)))OR(t0.c59)))OR(t0.c39)))AND(v0.c0)))OR(t0.c59)))AND(t0.c39)) THEN (((v0.c0))>((v0.c0))) WHEN CAST(t0.c39 AS NUMERIC) THEN t0.c39 WHEN t0.c59 COLLATE NOCASE THEN CASE t0.c59  WHEN t0.c39 THEN t0.c59 WHEN t0.c39 THEN v0.c0 WHEN v0.c0 THEN t0.c39 END END);
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CASE ((t0.c39)*(t0.c59))  WHEN ((((((((((((v0.c0)AND(0.3102122275350092)))OR(t0.c59)))OR(t0.c39)))AND(v0.c0)))OR(t0.c59)))AND(t0.c39)) THEN (((v0.c0))>((v0.c0))) WHEN CAST(t0.c39 AS NUMERIC) THEN t0.c39 WHEN t0.c59 COLLATE NOCASE THEN CASE t0.c59  WHEN t0.c39 THEN t0.c59 WHEN t0.c39 THEN v0.c0 WHEN v0.c0 THEN t0.c39 END END WHERE (COALESCE(t0.c39 COLLATE NOCASE, (((v0.c0)) BETWEEN ((NULL)) AND ((t0.c39)))));
SELECT * FROM t0, rt1 WHERE (CASE ((t0.c39) NOT BETWEEN (rt1.c1) AND (rt1.c0))  WHEN ((0.7126106360276098)!=(t0.c39)) THEN (rt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c39) NOT BETWEEN (rt1.c1) AND (rt1.c0))  WHEN ((0.7126106360276098)<>(t0.c39)) THEN (rt1.c0 IN ()) END) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CASE ((t0.c39) NOT BETWEEN (rt1.c1) AND (rt1.c0))  WHEN ((0.7126106360276098)!=(t0.c39)) THEN (rt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c39) NOT BETWEEN (rt1.c1) AND (rt1.c0))  WHEN ((0.7126106360276098)<>(t0.c39)) THEN (rt1.c0 IN ()) END) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CASE ((t0.c39) NOT BETWEEN (rt1.c1) AND (rt1.c0))  WHEN ((0.7126106360276098)!=(t0.c39)) THEN (rt1.c0 IN ()) END);
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(((rt1.c0)==(rt1.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)==(rt1.c3)) AS REAL)) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(((rt1.c0)==(rt1.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)==(rt1.c3)) AS REAL)) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(((rt1.c0)==(rt1.c3)) AS REAL));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c1)) NOT BETWEEN (('1814089422')) AND ((rt1.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1)) NOT BETWEEN (('1814089422')) AND ((rt1.c1))) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c1)) NOT BETWEEN (('1814089422')) AND ((rt1.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1)) NOT BETWEEN (('1814089422')) AND ((rt1.c1))) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c1)) NOT BETWEEN (('1814089422')) AND ((rt1.c1))) AS TEXT));
SELECT * FROM v0 NOT INDEXED, rt1, t0 WHERE (((t0.c39) NOT BETWEEN ((rt1.c1 IN ())) AND ((- (t0.c39))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c39) NOT BETWEEN ((rt1.c1 IN ())) AND ((- (t0.c39))))) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY NULL  NULLS LAST);
SELECT * FROM v0 NOT INDEXED, rt1, t0 WHERE (((t0.c39) NOT BETWEEN ((rt1.c1 IN ())) AND ((- (t0.c39))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c39) NOT BETWEEN ((rt1.c1 IN ())) AND ((- (t0.c39))))) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY NULL  NULLS LAST);
SELECT * FROM v0 NOT INDEXED, rt1, t0 WHERE (((t0.c39) NOT BETWEEN ((rt1.c1 IN ())) AND ((- (t0.c39))))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, rt1 WHERE (0.48096846876184884) ORDER BY ((t0.c39)IS NOT(rt1.c1)) COLLATE NOCASE  NULLS LAST, (((t0.c39 IN ()))>>(((((rt1.c0)OR(v0.c0)))AND(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.48096846876184884) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY ((t0.c39)IS NOT(rt1.c1)) COLLATE NOCASE  NULLS LAST, (((t0.c39 IN ()))>>(((((rt1.c0)OR(v0.c0)))AND(rt1.c2)))) DESC);
SELECT COUNT(*) FROM t0, v0, rt1 WHERE (0.48096846876184884) ORDER BY ((t0.c39)IS NOT(rt1.c1)) COLLATE NOCASE  NULLS LAST, (((t0.c39 IN ()))>>(((((rt1.c0)OR(v0.c0)))AND(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.48096846876184884) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY ((t0.c39)IS NOT(rt1.c1)) COLLATE NOCASE  NULLS LAST, (((t0.c39 IN ()))>>(((((rt1.c0)OR(v0.c0)))AND(rt1.c2)))) DESC);
SELECT COUNT(*) FROM t0, v0, rt1 WHERE (0.48096846876184884) ORDER BY ((t0.c39)IS NOT(rt1.c1)) COLLATE NOCASE  NULLS LAST, (((t0.c39 IN ()))>>(((((rt1.c0)OR(v0.c0)))AND(rt1.c2)))) DESC;
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)>(((rt1.c2)IS NOT(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)>(((rt1.c2)IS NOT(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)>(((rt1.c2)IS NOT(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)>(((rt1.c2)IS NOT(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)>(((rt1.c2)IS NOT(rt1.c3)))));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((rt1.c2) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((rt1.c2) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((rt1.c2) NOTNULL)) IS TRUE));
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (((rt1.c0)LIKE(rt1.c0)) IN ()) FULL OUTER JOIN t0 ON ((((v0.c0)AND(rt1.c2)))AND(t0.c39)) COLLATE RTRIM WHERE (json_array_length(v0.c0) COLLATE BINARY) ORDER BY ((((rt1.c1 COLLATE RTRIM)OR(((t0.c59)<<(v0.c0)))))AND((((rt1.c2))!=((t0.c39))))) ASC  NULLS FIRST, (~ (CAST(rt1.c1 AS NUMERIC)))  NULLS FIRST, t0.c59  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(v0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON (((rt1.c0)LIKE(rt1.c0)) IN ()) FULL OUTER JOIN t0 ON ((((v0.c0)AND(rt1.c2)))AND(t0.c39)) COLLATE RTRIM ORDER BY ((((rt1.c1 COLLATE RTRIM)OR(((t0.c59)<<(v0.c0)))))AND((((rt1.c2))<>((t0.c39))))) ASC  NULLS FIRST, (~ (CAST(rt1.c1 AS NUMERIC)))  NULLS FIRST, t0.c59  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (((rt1.c0)LIKE(rt1.c0)) IN ()) FULL OUTER JOIN t0 ON ((((v0.c0)AND(rt1.c2)))AND(t0.c39)) COLLATE RTRIM WHERE (json_array_length(v0.c0) COLLATE BINARY) ORDER BY ((((rt1.c1 COLLATE RTRIM)OR(((t0.c59)<<(v0.c0)))))AND((((rt1.c2))!=((t0.c39))))) ASC  NULLS FIRST, (~ (CAST(rt1.c1 AS NUMERIC)))  NULLS FIRST, t0.c59  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(v0.c0) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON (((rt1.c0)LIKE(rt1.c0)) IN ()) FULL OUTER JOIN t0 ON ((((v0.c0)AND(rt1.c2)))AND(t0.c39)) COLLATE RTRIM ORDER BY ((((rt1.c1 COLLATE RTRIM)OR(((t0.c59)<<(v0.c0)))))AND((((rt1.c2))<>((t0.c39))))) ASC  NULLS FIRST, (~ (CAST(rt1.c1 AS NUMERIC)))  NULLS FIRST, t0.c59  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (((rt1.c0)LIKE(rt1.c0)) IN ()) FULL OUTER JOIN t0 ON ((((v0.c0)AND(rt1.c2)))AND(t0.c39)) COLLATE RTRIM WHERE (json_array_length(v0.c0) COLLATE BINARY) ORDER BY ((((rt1.c1 COLLATE RTRIM)OR(((t0.c59)<<(v0.c0)))))AND((((rt1.c2))!=((t0.c39))))) ASC  NULLS FIRST, (~ (CAST(rt1.c1 AS NUMERIC)))  NULLS FIRST, t0.c59  NULLS LAST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN v0 ON ((((((((((t0.c59) NOT NULL))AND((((rt1.c1))!=((t0.c59))))))AND(v0.c0)))AND((- (v0.c0)))))OR((((x''))<((t0.c59))))) CROSS JOIN t0 ON rt1.c0 WHERE ((+ ((rt1.c3 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt1.c3 IN (rt1.c1))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((((((((((t0.c59) NOT NULL))AND((((rt1.c1))<>((t0.c59))))))AND(v0.c0)))AND((- (v0.c0)))))OR((((x''))<((t0.c59))))) CROSS JOIN t0 ON rt1.c0);
SELECT ALL * FROM rt1 LEFT OUTER JOIN v0 ON ((((((((((t0.c59) NOT NULL))AND((((rt1.c1))!=((t0.c59))))))AND(v0.c0)))AND((- (v0.c0)))))OR((((x''))<((t0.c59))))) CROSS JOIN t0 ON rt1.c0 WHERE ((+ ((rt1.c3 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt1.c3 IN (rt1.c1))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((((((((((t0.c59) NOT NULL))AND((((rt1.c1))<>((t0.c59))))))AND(v0.c0)))AND((- (v0.c0)))))OR((((x''))<((t0.c59))))) CROSS JOIN t0 ON rt1.c0);
SELECT * FROM t0 WHERE (CAST(((t0.c39)>>(-1650261499)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c39)>>(-1650261499)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c39)>>(-1650261499)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c39)>>(-1650261499)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c39)>>(-1650261499)) AS BLOB));
SELECT COUNT(*) FROM v0, rt1, t0 WHERE (CAST(((t0.c39) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c39) IS TRUE) AS REAL)) IS TRUE)  as count FROM v0, rt1, t0);
SELECT COUNT(*) FROM v0, rt1, t0 WHERE (CAST(((t0.c39) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c39) IS TRUE) AS REAL)) IS TRUE)  as count FROM v0, rt1, t0);
SELECT COUNT(*) FROM v0, rt1, t0 WHERE (CAST(((t0.c39) IS TRUE) AS REAL));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY (rt1.c3 COLLATE RTRIM IN ()) DESC  NULLS FIRST, ((x'')=(((((rt1.c0)OR(x'')))OR(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c3 COLLATE RTRIM IN ()) DESC  NULLS FIRST, ((x'')=(((((rt1.c0)OR(x'')))OR(rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY (rt1.c3 COLLATE RTRIM IN ()) DESC  NULLS FIRST, ((x'')=(((((rt1.c0)OR(x'')))OR(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c3 COLLATE RTRIM IN ()) DESC  NULLS FIRST, ((x'')=(((((rt1.c0)OR(x'')))OR(rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY (rt1.c3 COLLATE RTRIM IN ()) DESC  NULLS FIRST, ((x'')=(((((rt1.c0)OR(x'')))OR(rt1.c2)))) ASC;
SELECT * FROM t0, v0, rt1 WHERE (CASE WHEN ((rt1.c3)>>(v0.c0)) THEN ((NULL) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c3)>>(v0.c0)) THEN ((NULL) IS TRUE) END) IS TRUE)  as count FROM t0, v0, rt1);
SELECT * FROM t0, v0, rt1 WHERE (CASE WHEN ((rt1.c3)>>(v0.c0)) THEN ((NULL) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c3)>>(v0.c0)) THEN ((NULL) IS TRUE) END) IS TRUE)  as count FROM t0, v0, rt1);
SELECT * FROM t0, v0, rt1 WHERE (CASE WHEN ((rt1.c3)>>(v0.c0)) THEN ((NULL) IS TRUE) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT * FROM rt1, t0, v0 WHERE (((((NULL)OR(rt1.c3))) IS FALSE)) ORDER BY (((+ (rt1.c2))) IS TRUE), rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(rt1.c3))) IS FALSE)) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY (((+ (rt1.c2))) IS TRUE), rt1.c0 ASC  NULLS FIRST);
SELECT * FROM rt1, t0, v0 WHERE (((((NULL)OR(rt1.c3))) IS FALSE)) ORDER BY (((+ (rt1.c2))) IS TRUE), rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(rt1.c3))) IS FALSE)) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY (((+ (rt1.c2))) IS TRUE), rt1.c0 ASC  NULLS FIRST);
SELECT * FROM rt1, t0, v0 WHERE (((((NULL)OR(rt1.c3))) IS FALSE)) ORDER BY (((+ (rt1.c2))) IS TRUE), rt1.c0 ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))>>(rt1.c0 COLLATE RTRIM))) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN (rt1.c3) AND (((x'') IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))>>(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN (rt1.c3) AND (((x'') IS TRUE))) DESC);
SELECT * FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))>>(rt1.c0 COLLATE RTRIM))) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN (rt1.c3) AND (((x'') IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))>>(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN (rt1.c3) AND (((x'') IS TRUE))) DESC);
SELECT * FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))>>(rt1.c0 COLLATE RTRIM))) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN (rt1.c3) AND (((x'') IS TRUE))) DESC;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON -1.385634533E9 WHERE (((0.8964424707473622)LIKE(((rt1.c0)IS(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8964424707473622)LIKE(((rt1.c0)IS(rt1.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON -1.385634533E9);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON -1.385634533E9 WHERE (((0.8964424707473622)LIKE(((rt1.c0)IS(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8964424707473622)LIKE(((rt1.c0)IS(rt1.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON -1.385634533E9);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON -1.385634533E9 WHERE (((0.8964424707473622)LIKE(((rt1.c0)IS(rt1.c0)))));
SELECT * FROM rt1 WHERE ('1334455483') ORDER BY (((((rt1.c2, rt1.c2, rt1.c1))<>((rt1.c0, rt1.c0, rt1.c3))))OR((~ (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1334455483') IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2, rt1.c2, rt1.c1))!=((rt1.c0, rt1.c0, rt1.c3))))OR((~ (rt1.c2)))) DESC);
SELECT * FROM rt1 WHERE ('1334455483') ORDER BY (((((rt1.c2, rt1.c2, rt1.c1))<>((rt1.c0, rt1.c0, rt1.c3))))OR((~ (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1334455483') IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2, rt1.c2, rt1.c1))!=((rt1.c0, rt1.c0, rt1.c3))))OR((~ (rt1.c2)))) DESC);
SELECT * FROM rt1 WHERE ('1334455483') ORDER BY (((((rt1.c2, rt1.c2, rt1.c1))<>((rt1.c0, rt1.c0, rt1.c3))))OR((~ (rt1.c2)))) DESC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((rt1.c3, rt1.c3, t0.c39)) BETWEEN ((((((rt1.c3)AND(v0.c0)))OR(rt1.c3)), IFNULL(rt1.c3, rt1.c0), (((t0.c59, v0.c0, x'01ffacae'))<=((v0.c0, rt1.c2, t0.c39))))) AND (((((rt1.c1, rt1.c0, t0.c39))<=((v0.c0, t0.c39, t0.c39))), json_object(v0.c0, rt1.c2), ((rt1.c0) BETWEEN (rt1.c3) AND (t0.c39))))) LEFT OUTER JOIN rt1 ON (((rt1.c3, 0Xffffffffac072eee, rt1.c3, rt1.c3, rt1.c0)) NOT BETWEEN ((rt1.c3 COLLATE NOCASE, (t0.c39 IN ()), rt1.c0, rt1.c3, json_array_length(NULL))) AND ((CASE WHEN rt1.c0 THEN t0.c59 WHEN rt1.c1 THEN v0.c0 WHEN 0.1879568205114588 THEN rt1.c0 END, 0.18082307896081706, CAST(t0.c59 AS BLOB), (((rt1.c3))<=(('-257361982'))), ((rt1.c2)IS(t0.c59))))) WHERE ((((((((((rt1.c0 IN ()))AND((((t0.c39))>=((rt1.c0))))))AND(((rt1.c2)>>(rt1.c0)))))OR((((t0.c59, rt1.c2, t0.c59)) NOT BETWEEN ((0x2ef2104c, rt1.c0, t0.c59)) AND ((rt1.c3, rt1.c0, rt1.c0))))))AND((((0.0, rt1.c0, -2.072484373E9))>((t0.c59, rt1.c3, '-1270106471')))))) ORDER BY ((rt1.c2 COLLATE RTRIM)<=(CASE rt1.c1  WHEN t0.c39 THEN rt1.c1 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c0 IN ()))AND((((t0.c39))>=((rt1.c0))))))AND(((rt1.c2)>>(rt1.c0)))))OR((((t0.c59, rt1.c2, t0.c59)) NOT BETWEEN ((0x2ef2104c, rt1.c0, t0.c59)) AND ((rt1.c3, rt1.c0, rt1.c0))))))AND((((0.0, rt1.c0, -2.072484373E9))>((t0.c59, rt1.c3, '-1270106471')))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((rt1.c3, rt1.c3, t0.c39)) BETWEEN ((((((rt1.c3)AND(v0.c0)))OR(rt1.c3)), IFNULL(rt1.c3, rt1.c0), (((t0.c59, v0.c0, x'01ffacae'))<=((v0.c0, rt1.c2, t0.c39))))) AND (((((rt1.c1, rt1.c0, t0.c39))<=((v0.c0, t0.c39, t0.c39))), json_object(v0.c0, rt1.c2), ((rt1.c0) BETWEEN (rt1.c3) AND (t0.c39))))) LEFT OUTER JOIN rt1 ON (((rt1.c3, 0Xffffffffac072eee, rt1.c3, rt1.c3, rt1.c0)) NOT BETWEEN ((rt1.c3 COLLATE NOCASE, (t0.c39 IN ()), rt1.c0, rt1.c3, json_array_length(NULL))) AND ((CASE WHEN rt1.c0 THEN t0.c59 WHEN rt1.c1 THEN v0.c0 WHEN 0.1879568205114588 THEN rt1.c0 END, 0.18082307896081706, CAST(t0.c59 AS BLOB), (((rt1.c3))<=(('-257361982'))), ((rt1.c2)IS(t0.c59))))) ORDER BY ((rt1.c2 COLLATE RTRIM)<=(CASE rt1.c1  WHEN t0.c39 THEN rt1.c1 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END))  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (((rt1.c3, rt1.c3, t0.c39)) BETWEEN ((((((rt1.c3)AND(v0.c0)))OR(rt1.c3)), IFNULL(rt1.c3, rt1.c0), (((t0.c59, v0.c0, x'01ffacae'))<=((v0.c0, rt1.c2, t0.c39))))) AND (((((rt1.c1, rt1.c0, t0.c39))<=((v0.c0, t0.c39, t0.c39))), json_object(v0.c0, rt1.c2), ((rt1.c0) BETWEEN (rt1.c3) AND (t0.c39))))) LEFT OUTER JOIN rt1 ON (((rt1.c3, 0Xffffffffac072eee, rt1.c3, rt1.c3, rt1.c0)) NOT BETWEEN ((rt1.c3 COLLATE NOCASE, (t0.c39 IN ()), rt1.c0, rt1.c3, json_array_length(NULL))) AND ((CASE WHEN rt1.c0 THEN t0.c59 WHEN rt1.c1 THEN v0.c0 WHEN 0.1879568205114588 THEN rt1.c0 END, 0.18082307896081706, CAST(t0.c59 AS BLOB), (((rt1.c3))<=(('-257361982'))), ((rt1.c2)IS(t0.c59))))) WHERE ((((((((((rt1.c0 IN ()))AND((((t0.c39))>=((rt1.c0))))))AND(((rt1.c2)>>(rt1.c0)))))OR((((t0.c59, rt1.c2, t0.c59)) NOT BETWEEN ((0x2ef2104c, rt1.c0, t0.c59)) AND ((rt1.c3, rt1.c0, rt1.c0))))))AND((((0.0, rt1.c0, -2.072484373E9))>((t0.c59, rt1.c3, '-1270106471')))))) ORDER BY ((rt1.c2 COLLATE RTRIM)<=(CASE rt1.c1  WHEN t0.c39 THEN rt1.c1 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c0 IN ()))AND((((t0.c39))>=((rt1.c0))))))AND(((rt1.c2)>>(rt1.c0)))))OR((((t0.c59, rt1.c2, t0.c59)) NOT BETWEEN ((0x2ef2104c, rt1.c0, t0.c59)) AND ((rt1.c3, rt1.c0, rt1.c0))))))AND((((0.0, rt1.c0, -2.072484373E9))>((t0.c59, rt1.c3, '-1270106471')))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((rt1.c3, rt1.c3, t0.c39)) BETWEEN ((((((rt1.c3)AND(v0.c0)))OR(rt1.c3)), IFNULL(rt1.c3, rt1.c0), (((t0.c59, v0.c0, x'01ffacae'))<=((v0.c0, rt1.c2, t0.c39))))) AND (((((rt1.c1, rt1.c0, t0.c39))<=((v0.c0, t0.c39, t0.c39))), json_object(v0.c0, rt1.c2), ((rt1.c0) BETWEEN (rt1.c3) AND (t0.c39))))) LEFT OUTER JOIN rt1 ON (((rt1.c3, 0Xffffffffac072eee, rt1.c3, rt1.c3, rt1.c0)) NOT BETWEEN ((rt1.c3 COLLATE NOCASE, (t0.c39 IN ()), rt1.c0, rt1.c3, json_array_length(NULL))) AND ((CASE WHEN rt1.c0 THEN t0.c59 WHEN rt1.c1 THEN v0.c0 WHEN 0.1879568205114588 THEN rt1.c0 END, 0.18082307896081706, CAST(t0.c59 AS BLOB), (((rt1.c3))<=(('-257361982'))), ((rt1.c2)IS(t0.c59))))) ORDER BY ((rt1.c2 COLLATE RTRIM)<=(CASE rt1.c1  WHEN t0.c39 THEN rt1.c1 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON ((rt1.c1)GLOB((((rt1.c1))=((t0.c59))))) WHERE ((((CAST('' AS REAL)))<((((rt1.c0)/(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((CAST('' AS REAL)))<((((rt1.c0)/(rt1.c2)))))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON ((rt1.c1)GLOB((((rt1.c1))=((t0.c59))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON ((rt1.c1)GLOB((((rt1.c1))=((t0.c59))))) WHERE ((((CAST('' AS REAL)))<((((rt1.c0)/(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((CAST('' AS REAL)))<((((rt1.c0)/(rt1.c2)))))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON ((rt1.c1)GLOB((((rt1.c1))=((t0.c59))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON ((rt1.c1)GLOB((((rt1.c1))=((t0.c59))))) WHERE ((((CAST('' AS REAL)))<((((rt1.c0)/(rt1.c2))))));
SELECT ALL * FROM rt1, v0 WHERE ((((v0.c0 COLLATE NOCASE))=((105267273))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE NOCASE))==((105267273)))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE ((((v0.c0 COLLATE NOCASE))=((105267273))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE NOCASE))==((105267273)))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE ((((v0.c0 COLLATE NOCASE))=((105267273))));
SELECT * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL * FROM t0, v0, rt1 WHERE (((((IFNULL(t0.c59, rt1.c2))OR(((rt1.c1)<=(t0.c39)))))OR(rt1.c0 COLLATE RTRIM))) ORDER BY ((((rt1.c1)%(rt1.c2)))AND(t0.c39 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(t0.c59, rt1.c2))OR(((rt1.c1)<=(t0.c39)))))OR(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY ((((rt1.c1)%(rt1.c2)))AND(t0.c39 COLLATE RTRIM)));
SELECT ALL * FROM t0, v0, rt1 WHERE (((((IFNULL(t0.c59, rt1.c2))OR(((rt1.c1)<=(t0.c39)))))OR(rt1.c0 COLLATE RTRIM))) ORDER BY ((((rt1.c1)%(rt1.c2)))AND(t0.c39 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(t0.c59, rt1.c2))OR(((rt1.c1)<=(t0.c39)))))OR(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY ((((rt1.c1)%(rt1.c2)))AND(t0.c39 COLLATE RTRIM)));
SELECT ALL * FROM t0, v0, rt1 WHERE (((((IFNULL(t0.c59, rt1.c2))OR(((rt1.c1)<=(t0.c39)))))OR(rt1.c0 COLLATE RTRIM))) ORDER BY ((((rt1.c1)%(rt1.c2)))AND(t0.c39 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE) NOT NULL)) ORDER BY CAST(((rt1.c2)/(rt1.c1)) AS REAL) DESC, '1776577762' DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c2)/(rt1.c1)) AS REAL) DESC, '1776577762' DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE) NOT NULL)) ORDER BY CAST(((rt1.c2)/(rt1.c1)) AS REAL) DESC, '1776577762' DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c2)/(rt1.c1)) AS REAL) DESC, '1776577762' DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE) NOT NULL)) ORDER BY CAST(((rt1.c2)/(rt1.c1)) AS REAL) DESC, '1776577762' DESC;
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON '90' LEFT OUTER JOIN t0 ON ((v0.c0 COLLATE RTRIM) IS TRUE) WHERE (((((NULL)&(rt1.c1))) BETWEEN ((~ (rt1.c2))) AND (LOWER(DISTINCT rt1.c0)))) ORDER BY CAST(CASE NULL  WHEN rt1.c1 THEN t0.c59 ELSE t0.c39 END AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)&(rt1.c1))) BETWEEN ((~ (rt1.c2))) AND (LOWER(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON '90' LEFT OUTER JOIN t0 ON ((v0.c0 COLLATE RTRIM) IS TRUE) ORDER BY CAST(CASE NULL  WHEN rt1.c1 THEN t0.c59 ELSE t0.c39 END AS TEXT));
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON '90' LEFT OUTER JOIN t0 ON ((v0.c0 COLLATE RTRIM) IS TRUE) WHERE (((((NULL)&(rt1.c1))) BETWEEN ((~ (rt1.c2))) AND (LOWER(DISTINCT rt1.c0)))) ORDER BY CAST(CASE NULL  WHEN rt1.c1 THEN t0.c59 ELSE t0.c39 END AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)&(rt1.c1))) BETWEEN ((~ (rt1.c2))) AND (LOWER(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON '90' LEFT OUTER JOIN t0 ON ((v0.c0 COLLATE RTRIM) IS TRUE) ORDER BY CAST(CASE NULL  WHEN rt1.c1 THEN t0.c59 ELSE t0.c39 END AS TEXT));
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON '90' LEFT OUTER JOIN t0 ON ((v0.c0 COLLATE RTRIM) IS TRUE) WHERE (((((NULL)&(rt1.c1))) BETWEEN ((~ (rt1.c2))) AND (LOWER(DISTINCT rt1.c0)))) ORDER BY CAST(CASE NULL  WHEN rt1.c1 THEN t0.c59 ELSE t0.c39 END AS TEXT);
SELECT COUNT(*) FROM t0 WHERE (ABS(DISTINCT ((t0.c59) BETWEEN (t0.c59) AND (t0.c39))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((t0.c59) BETWEEN (t0.c59) AND (t0.c39)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (ABS(DISTINCT ((t0.c59) BETWEEN (t0.c59) AND (t0.c39))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((t0.c59) BETWEEN (t0.c59) AND (t0.c39)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (ABS(DISTINCT ((t0.c59) BETWEEN (t0.c59) AND (t0.c39))));
SELECT ALL * FROM rt1 WHERE ((+ (TRIM(DISTINCT rt1.c2)))) ORDER BY ((((((((((((rt1.c3)AND((rt1.c3 IN ()))))AND(rt1.c3 COLLATE RTRIM)))AND((((rt1.c3))>((rt1.c0))))))OR((rt1.c1 IN (rt1.c3, rt1.c1)))))AND(((rt1.c2)!=(rt1.c0)))))OR((rt1.c3 IN ()))), (((rt1.c3)==(rt1.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (TRIM(DISTINCT rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((rt1.c3)AND((rt1.c3 IN ()))))AND(rt1.c3 COLLATE RTRIM)))AND((((rt1.c3))>((rt1.c0))))))OR((rt1.c1 IN (rt1.c3, rt1.c1)))))AND(((rt1.c2)!=(rt1.c0)))))OR((rt1.c3 IN ()))), (((rt1.c3)==(rt1.c2)) IN ())  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((+ (TRIM(DISTINCT rt1.c2)))) ORDER BY ((((((((((((rt1.c3)AND((rt1.c3 IN ()))))AND(rt1.c3 COLLATE RTRIM)))AND((((rt1.c3))>((rt1.c0))))))OR((rt1.c1 IN (rt1.c3, rt1.c1)))))AND(((rt1.c2)!=(rt1.c0)))))OR((rt1.c3 IN ()))), (((rt1.c3)==(rt1.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (TRIM(DISTINCT rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((rt1.c3)AND((rt1.c3 IN ()))))AND(rt1.c3 COLLATE RTRIM)))AND((((rt1.c3))>((rt1.c0))))))OR((rt1.c1 IN (rt1.c3, rt1.c1)))))AND(((rt1.c2)!=(rt1.c0)))))OR((rt1.c3 IN ()))), (((rt1.c3)==(rt1.c2)) IN ())  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((+ (TRIM(DISTINCT rt1.c2)))) ORDER BY ((((((((((((rt1.c3)AND((rt1.c3 IN ()))))AND(rt1.c3 COLLATE RTRIM)))AND((((rt1.c3))>((rt1.c0))))))OR((rt1.c1 IN (rt1.c3, rt1.c1)))))AND(((rt1.c2)!=(rt1.c0)))))OR((rt1.c3 IN ()))), (((rt1.c3)==(rt1.c2)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (UNLIKELY(((t0.c39) NOT NULL))) ORDER BY TRIM(DISTINCT rt1.c0) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((t0.c39) NOT NULL))) IS TRUE)  as count FROM t0, rt1 ORDER BY TRIM(DISTINCT rt1.c0) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (UNLIKELY(((t0.c39) NOT NULL))) ORDER BY TRIM(DISTINCT rt1.c0) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((t0.c39) NOT NULL))) IS TRUE)  as count FROM t0, rt1 ORDER BY TRIM(DISTINCT rt1.c0) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (UNLIKELY(((t0.c39) NOT NULL))) ORDER BY TRIM(DISTINCT rt1.c0) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)<(rt1.c1)) IN ())) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)<(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)<(rt1.c1)) IN ())) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)<(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)<(rt1.c1)) IN ())) ORDER BY rt1.c3;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c3) AND (NULL)))) AND (((- (rt1.c2)))))) ORDER BY LOWER(((rt1.c1)>=(rt1.c2)))  NULLS FIRST, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c3) AND (NULL)))) AND (((- (rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY LOWER(((rt1.c1)>=(rt1.c2)))  NULLS FIRST, x''  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c3) AND (NULL)))) AND (((- (rt1.c2)))))) ORDER BY LOWER(((rt1.c1)>=(rt1.c2)))  NULLS FIRST, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c3) AND (NULL)))) AND (((- (rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY LOWER(((rt1.c1)>=(rt1.c2)))  NULLS FIRST, x''  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c3) AND (NULL)))) AND (((- (rt1.c2)))))) ORDER BY LOWER(((rt1.c1)>=(rt1.c2)))  NULLS FIRST, x''  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c59);
SELECT SUM(count) FROM (SELECT ALL ((t0.c59) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c59);
SELECT ALL * FROM rt1, v0, t0 WHERE (106920070) ORDER BY ((x'')IS(((v0.c0)!=(0.834463532601877)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((106920070) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY ((x'')IS(((v0.c0)<>(0.834463532601877)))) DESC);
SELECT ALL * FROM rt1, v0, t0 WHERE (106920070) ORDER BY ((x'')IS(((v0.c0)!=(0.834463532601877)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((106920070) IS TRUE)  as count FROM rt1, v0, t0 ORDER BY ((x'')IS(((v0.c0)<>(0.834463532601877)))) DESC);
SELECT ALL * FROM rt1, v0, t0 WHERE (106920070) ORDER BY ((x'')IS(((v0.c0)!=(0.834463532601877)))) DESC;
SELECT ALL COUNT(*) FROM t0, rt1 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (CAST((rt1.c2 IN (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN v0 ON v0.c0);
SELECT ALL COUNT(*) FROM t0, rt1 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (CAST((rt1.c2 IN (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN v0 ON v0.c0);
SELECT ALL COUNT(*) FROM t0, rt1 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (CAST((rt1.c2 IN (rt1.c2)) AS TEXT));
SELECT * FROM rt1 WHERE (CAST(rt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS REAL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(rt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS REAL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(rt1.c0 AS REAL));
SELECT * FROM v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) ISNULL));
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (((CASE WHEN rt1.c2 THEN t0.c39 ELSE t0.c59 END) IS TRUE)) ORDER BY ((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN ((v0.c0 IN ())) AND (((t0.c39) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN t0.c39 ELSE t0.c59 END) IS TRUE)) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY ((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN ((v0.c0 IN ())) AND (((t0.c39) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (((CASE WHEN rt1.c2 THEN t0.c39 ELSE t0.c59 END) IS TRUE)) ORDER BY ((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN ((v0.c0 IN ())) AND (((t0.c39) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN t0.c39 ELSE t0.c59 END) IS TRUE)) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY ((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN ((v0.c0 IN ())) AND (((t0.c39) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (((CASE WHEN rt1.c2 THEN t0.c39 ELSE t0.c59 END) IS TRUE)) ORDER BY ((CAST(rt1.c2 AS INTEGER)) NOT BETWEEN ((v0.c0 IN ())) AND (((t0.c39) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)!=(rt1.c3)))>>(((rt1.c0) BETWEEN (t0.c59) AND (t0.c39)))) WHERE (CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) ORDER BY SQLITE_VERSION() ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)!=(rt1.c3)))>>(((rt1.c0) BETWEEN (t0.c59) AND (t0.c39)))) ORDER BY SQLITE_VERSION() ASC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)!=(rt1.c3)))>>(((rt1.c0) BETWEEN (t0.c59) AND (t0.c39)))) WHERE (CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) ORDER BY SQLITE_VERSION() ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)!=(rt1.c3)))>>(((rt1.c0) BETWEEN (t0.c59) AND (t0.c39)))) ORDER BY SQLITE_VERSION() ASC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((rt1.c2)!=(rt1.c3)))>>(((rt1.c0) BETWEEN (t0.c59) AND (t0.c39)))) WHERE (CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) ORDER BY SQLITE_VERSION() ASC;
SELECT ALL * FROM rt1, v0 INNER JOIN t0 ON CASE WHEN ((((t0.c59)AND(t0.c39)))AND(rt1.c0)) THEN (((rt1.c0))<>((rt1.c3))) WHEN ((NULL)OR(rt1.c3)) THEN '' COLLATE BINARY WHEN rt1.c1 THEN ((t0.c39)<=(rt1.c1)) ELSE (((0.2692497745988359)) NOT BETWEEN ((rt1.c3)) AND ((t0.c39))) END WHERE ((((NOT (t0.c39))) BETWEEN ((((t0.c59))<=((rt1.c3)))) AND (((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3))))) ORDER BY ((((rt1.c2 IN (t0.c39))))==((CASE t0.c39  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c39))) BETWEEN ((((t0.c59))<=((rt1.c3)))) AND (((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, v0 INNER JOIN t0 ON CASE WHEN ((((t0.c59)AND(t0.c39)))AND(rt1.c0)) THEN (((rt1.c0))<>((rt1.c3))) WHEN ((NULL)OR(rt1.c3)) THEN '' COLLATE BINARY WHEN rt1.c1 THEN ((t0.c39)<=(rt1.c1)) ELSE (((0.2692497745988359)) NOT BETWEEN ((rt1.c3)) AND ((t0.c39))) END ORDER BY ((((rt1.c2 IN (t0.c39))))=((CASE t0.c39  WHEN v0.c0 THEN v0.c0 END))));
SELECT ALL * FROM rt1, v0 INNER JOIN t0 ON CASE WHEN ((((t0.c59)AND(t0.c39)))AND(rt1.c0)) THEN (((rt1.c0))<>((rt1.c3))) WHEN ((NULL)OR(rt1.c3)) THEN '' COLLATE BINARY WHEN rt1.c1 THEN ((t0.c39)<=(rt1.c1)) ELSE (((0.2692497745988359)) NOT BETWEEN ((rt1.c3)) AND ((t0.c39))) END WHERE ((((NOT (t0.c39))) BETWEEN ((((t0.c59))<=((rt1.c3)))) AND (((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3))))) ORDER BY ((((rt1.c2 IN (t0.c39))))==((CASE t0.c39  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c39))) BETWEEN ((((t0.c59))<=((rt1.c3)))) AND (((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, v0 INNER JOIN t0 ON CASE WHEN ((((t0.c59)AND(t0.c39)))AND(rt1.c0)) THEN (((rt1.c0))<>((rt1.c3))) WHEN ((NULL)OR(rt1.c3)) THEN '' COLLATE BINARY WHEN rt1.c1 THEN ((t0.c39)<=(rt1.c1)) ELSE (((0.2692497745988359)) NOT BETWEEN ((rt1.c3)) AND ((t0.c39))) END ORDER BY ((((rt1.c2 IN (t0.c39))))=((CASE t0.c39  WHEN v0.c0 THEN v0.c0 END))));
SELECT ALL * FROM rt1, v0 INNER JOIN t0 ON CASE WHEN ((((t0.c59)AND(t0.c39)))AND(rt1.c0)) THEN (((rt1.c0))<>((rt1.c3))) WHEN ((NULL)OR(rt1.c3)) THEN '' COLLATE BINARY WHEN rt1.c1 THEN ((t0.c39)<=(rt1.c1)) ELSE (((0.2692497745988359)) NOT BETWEEN ((rt1.c3)) AND ((t0.c39))) END WHERE ((((NOT (t0.c39))) BETWEEN ((((t0.c59))<=((rt1.c3)))) AND (((v0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3))))) ORDER BY ((((rt1.c2 IN (t0.c39))))==((CASE t0.c39  WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM t0 WHERE ((((NULL))<=((((((t0.c39)AND('-1083886333')))OR('9U|'))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=((((((t0.c39)AND('-1083886333')))OR('9U|')))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((NULL))<=((((((t0.c39)AND('-1083886333')))OR('9U|'))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=((((((t0.c39)AND('-1083886333')))OR('9U|')))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((NULL))<=((((((t0.c39)AND('-1083886333')))OR('9U|'))))));
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN t0 ON ((rt1.c2) IS TRUE) COLLATE NOCASE WHERE (((((rt1.c3, rt1.c2, t0.c39)) BETWEEN ((v0.c0, rt1.c3, rt1.c0)) AND ((rt1.c1, 0.46785728420182027, rt1.c2))) IN (CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3, rt1.c2, t0.c39)) BETWEEN ((v0.c0, rt1.c3, rt1.c0)) AND ((rt1.c1, 0.46785728420182027, rt1.c2))) IN (CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN t0 ON ((rt1.c2) IS TRUE) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN t0 ON ((rt1.c2) IS TRUE) COLLATE NOCASE WHERE (((((rt1.c3, rt1.c2, t0.c39)) BETWEEN ((v0.c0, rt1.c3, rt1.c0)) AND ((rt1.c1, 0.46785728420182027, rt1.c2))) IN (CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3, rt1.c2, t0.c39)) BETWEEN ((v0.c0, rt1.c3, rt1.c0)) AND ((rt1.c1, 0.46785728420182027, rt1.c2))) IN (CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN t0 ON ((rt1.c2) IS TRUE) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, v0 RIGHT OUTER JOIN t0 ON ((rt1.c2) IS TRUE) COLLATE NOCASE WHERE (((((rt1.c3, rt1.c2, t0.c39)) BETWEEN ((v0.c0, rt1.c3, rt1.c0)) AND ((rt1.c1, 0.46785728420182027, rt1.c2))) IN (CAST(rt1.c0 AS NUMERIC))));
SELECT ALL * FROM rt1, v0, t0 WHERE (TRIM(DISTINCT ((rt1.c1)LIKE(rt1.c1)), CAST(rt1.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt1.c1)LIKE(rt1.c1)), CAST(rt1.c2 AS INTEGER))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT ALL * FROM rt1, v0, t0 WHERE (TRIM(DISTINCT ((rt1.c1)LIKE(rt1.c1)), CAST(rt1.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt1.c1)LIKE(rt1.c1)), CAST(rt1.c2 AS INTEGER))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT ALL * FROM rt1, v0, t0 WHERE (TRIM(DISTINCT ((rt1.c1)LIKE(rt1.c1)), CAST(rt1.c2 AS INTEGER)));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((UPPER(DISTINCT rt1.c2)) IS TRUE)) ORDER BY HEX(((t0.c59) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT rt1.c2)) IS TRUE)) IS TRUE)  as count FROM t0, rt1 ORDER BY HEX(((t0.c59) IS FALSE)) ASC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((UPPER(DISTINCT rt1.c2)) IS TRUE)) ORDER BY HEX(((t0.c59) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT rt1.c2)) IS TRUE)) IS TRUE)  as count FROM t0, rt1 ORDER BY HEX(((t0.c59) IS FALSE)) ASC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((UPPER(DISTINCT rt1.c2)) IS TRUE)) ORDER BY HEX(((t0.c59) IS FALSE)) ASC;
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON (((((x'61fa'))>((rt1.c0)))) NOT BETWEEN (rt1.c1) AND ((('-1371578972') NOT NULL))) WHERE (((NULLIF(DISTINCT rt1.c3, t0.c59))GLOB(((rt1.c2)|(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT rt1.c3, t0.c59))GLOB(((rt1.c2)|(rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON (((((x'61fa'))>((rt1.c0)))) NOT BETWEEN (rt1.c1) AND ((('-1371578972') NOT NULL))));
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON (((((x'61fa'))>((rt1.c0)))) NOT BETWEEN (rt1.c1) AND ((('-1371578972') NOT NULL))) WHERE (((NULLIF(DISTINCT rt1.c3, t0.c59))GLOB(((rt1.c2)|(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT rt1.c3, t0.c59))GLOB(((rt1.c2)|(rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON (((((x'61fa'))>((rt1.c0)))) NOT BETWEEN (rt1.c1) AND ((('-1371578972') NOT NULL))));
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON (((((x'61fa'))>((rt1.c0)))) NOT BETWEEN (rt1.c1) AND ((('-1371578972') NOT NULL))) WHERE (((NULLIF(DISTINCT rt1.c3, t0.c59))GLOB(((rt1.c2)|(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON IFNULL(DISTINCT ((((rt1.c3)OR(rt1.c3)))AND(rt1.c2)), '0.8767633190051893') WHERE ('-717932145');
SELECT SUM(count) FROM (SELECT ALL (('-717932145') IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON IFNULL(DISTINCT ((((rt1.c3)OR(rt1.c3)))AND(rt1.c2)), '0.8767633190051893'));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON IFNULL(DISTINCT ((((rt1.c3)OR(rt1.c3)))AND(rt1.c2)), '0.8767633190051893') WHERE ('-717932145');
SELECT SUM(count) FROM (SELECT ALL (('-717932145') IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON IFNULL(DISTINCT ((((rt1.c3)OR(rt1.c3)))AND(rt1.c2)), '0.8767633190051893'));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON IFNULL(DISTINCT ((((rt1.c3)OR(rt1.c3)))AND(rt1.c2)), '0.8767633190051893') WHERE ('-717932145');
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (((((((rt1.c3))>((rt1.c0)))))=((t0.c39 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3))>((rt1.c0)))))=((t0.c39 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (((((((rt1.c3))>((rt1.c0)))))=((t0.c39 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3))>((rt1.c0)))))=((t0.c39 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (((((((rt1.c3))>((rt1.c0)))))=((t0.c39 COLLATE RTRIM))));
SELECT ALL * FROM rt1, t0, v0 WHERE (((rt1.c2 COLLATE BINARY) NOT NULL)) ORDER BY ((((((((CAST(0.2533605138475047 AS TEXT))OR(((((((((rt1.c2)AND(t0.c39)))AND(rt1.c0)))AND(v0.c0)))AND(rt1.c1)))))OR(CASE rt1.c0  WHEN t0.c59 THEN rt1.c3 WHEN rt1.c1 THEN NULL WHEN t0.c39 THEN rt1.c2 END)))OR(((0.9086512397296829) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(CASE WHEN v0.c0 THEN NULL ELSE rt1.c0 END)) ASC  NULLS FIRST, rt1.c1, (x'47f9' IN ());
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY ((((((((CAST(0.2533605138475047 AS TEXT))OR(((((((((rt1.c2)AND(t0.c39)))AND(rt1.c0)))AND(v0.c0)))AND(rt1.c1)))))OR(CASE rt1.c0  WHEN t0.c59 THEN rt1.c3 WHEN rt1.c1 THEN NULL WHEN t0.c39 THEN rt1.c2 END)))OR(((0.9086512397296829) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(CASE WHEN v0.c0 THEN NULL ELSE rt1.c0 END)) ASC  NULLS FIRST, rt1.c1, (x'47f9' IN ()));
SELECT ALL * FROM rt1, t0, v0 WHERE (((rt1.c2 COLLATE BINARY) NOT NULL)) ORDER BY ((((((((CAST(0.2533605138475047 AS TEXT))OR(((((((((rt1.c2)AND(t0.c39)))AND(rt1.c0)))AND(v0.c0)))AND(rt1.c1)))))OR(CASE rt1.c0  WHEN t0.c59 THEN rt1.c3 WHEN rt1.c1 THEN NULL WHEN t0.c39 THEN rt1.c2 END)))OR(((0.9086512397296829) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(CASE WHEN v0.c0 THEN NULL ELSE rt1.c0 END)) ASC  NULLS FIRST, rt1.c1, (x'47f9' IN ());
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY ((((((((CAST(0.2533605138475047 AS TEXT))OR(((((((((rt1.c2)AND(t0.c39)))AND(rt1.c0)))AND(v0.c0)))AND(rt1.c1)))))OR(CASE rt1.c0  WHEN t0.c59 THEN rt1.c3 WHEN rt1.c1 THEN NULL WHEN t0.c39 THEN rt1.c2 END)))OR(((0.9086512397296829) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(CASE WHEN v0.c0 THEN NULL ELSE rt1.c0 END)) ASC  NULLS FIRST, rt1.c1, (x'47f9' IN ()));
SELECT ALL * FROM rt1, t0, v0 WHERE (((rt1.c2 COLLATE BINARY) NOT NULL)) ORDER BY ((((((((CAST(0.2533605138475047 AS TEXT))OR(((((((((rt1.c2)AND(t0.c39)))AND(rt1.c0)))AND(v0.c0)))AND(rt1.c1)))))OR(CASE rt1.c0  WHEN t0.c59 THEN rt1.c3 WHEN rt1.c1 THEN NULL WHEN t0.c39 THEN rt1.c2 END)))OR(((0.9086512397296829) BETWEEN (rt1.c3) AND (rt1.c3)))))AND(CASE WHEN v0.c0 THEN NULL ELSE rt1.c0 END)) ASC  NULLS FIRST, rt1.c1, (x'47f9' IN ());
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(ABS(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(ABS(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(ABS(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(ABS(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(CASE WHEN v0.c0 THEN v0.c0 END)))OR(ABS(v0.c0))));
SELECT ALL * FROM t0, v0 WHERE (x'') ORDER BY CASE (~ (t0.c59))  WHEN ((t0.c39) NOT BETWEEN (v0.c0) AND (t0.c39)) THEN NULL COLLATE BINARY END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, v0 ORDER BY CASE (~ (t0.c59))  WHEN ((t0.c39) NOT BETWEEN (v0.c0) AND (t0.c39)) THEN NULL COLLATE BINARY END DESC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (x'') ORDER BY CASE (~ (t0.c59))  WHEN ((t0.c39) NOT BETWEEN (v0.c0) AND (t0.c39)) THEN NULL COLLATE BINARY END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, v0 ORDER BY CASE (~ (t0.c59))  WHEN ((t0.c39) NOT BETWEEN (v0.c0) AND (t0.c39)) THEN NULL COLLATE BINARY END DESC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (x'') ORDER BY CASE (~ (t0.c59))  WHEN ((t0.c39) NOT BETWEEN (v0.c0) AND (t0.c39)) THEN NULL COLLATE BINARY END DESC  NULLS LAST;
