-- Time: 2024/06/09 22:12:29
-- Database: database30
-- Database version: 3.40.0
-- seed value: 3804910030
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 2ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=954925511 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1970960652 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1896723298 sz=-2121422624'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-124822103 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '954925511 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('417269208') AND (NULL)))>=(((((0.3270894485574486)OR(x'')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('-2121422624')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1468611032 noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=845416753 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))>=(('9223372036854775807' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((NOT (x'')))) AND (((NULL IN (0.3270894485574486, -632381768))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=-124822103 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((((((0Xffffffff818da8e0)AND(0.840765720695106)))AND(NULL)))OR(x'')))OR('~Y^1')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-962650121 sz=-1421965085 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'1c91')) NOT BETWEEN ((0.47987867080656865)) AND (('-2121422624'))))<(((0xffffffffee041953) BETWEEN ('R|') AND (0.6131804104331399)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('X' AS REAL))IS NOT(CASE '-124822103'  WHEN NULL THEN 0.7351309925167147 WHEN NULL THEN '0.47987867080656865' WHEN 1 THEN 1.896723298E9 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||(NULL)))GLOB((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffc69f1ff7 IN ('', x'', 0.03365445127125011)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=241569553'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=241569553'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CASE 0.8261053589514783  WHEN x'' THEN 0Xffffffffa876c628 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-673472307 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE NULL  WHEN '~Y^1' THEN '903063360' WHEN '926669349' THEN 422834246 WHEN NULL THEN '241569553' END)OR(((0Xffffffffda4e9eb8)/('-2121422624')))))AND(TRIM(-411454253, 0.3182843229855802))))OR(x'' COLLATE RTRIM)))OR(((x'') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1781105209 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1858768247 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 -1610042367 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-347137444'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-471527820 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2121422624'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS BLOB) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT ('')))AND(CAST(-1641540824 AS BLOB))))OR(((((NULL)AND(x'247d3889')))OR(0.7650590955782596)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-927895629 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-548372788 2 -1610042367 sz=-849753631'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('954925511')) IN ('1f', 0.33175151930004443 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4010271483835097)OR(0.29189870996102407)))LIKE(((NULL)*(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((0.9404392668305396)&(NULL)), (+ (x'')), CASE 0.43698124505583036  WHEN x'' THEN x'e2e9' WHEN -8.49753631E8 THEN 'Pv' WHEN 0.7983770260432279 THEN '' ELSE -5.48372788E8 END, (((NULL, '-2127817366', 0X45ef686)) BETWEEN ((0xffffffffe779b4d3, 0.6647438149284433, '-962650121')) AND ((x'ca47', 0.4041078296635445, NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1393921872 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(NULL AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 577192734; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1841951706 sz=-2140845346 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0xffffffffd7dba0cd  WHEN 0.29189870996102407 THEN '' WHEN '-1584122797' THEN NULL WHEN NULL THEN 0.2106940033429564 WHEN NULL THEN '-86982703' WHEN NULL THEN x'' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-508946823 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-566089361'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1990582123 2 sz=-301721261 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '321120073 -876532927 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'')AND(NULL)))OR(0x50968e8b)))OR(NULL)))AND(0Xffffffffc0d3c6ba)))OR(HEX(DISTINCT 0.3020934199050437))))OR((('J)DZ')/(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS TEXT) AS REAL); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN (((((NULL, 0Xffffffffbf10eca6, 0.4570277999404223)) NOT BETWEEN ((0.5329047964282785, x'', '903063360')) AND ((0.6880276078671667, 0.8138263260798093, x''))))) AND ((CASE '}8쐪t 4mj'  WHEN '1062850556' THEN '''' ELSE x'c8a4' END))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((CHANGES(), (((0.29189870996102407)) BETWEEN ((-411454253)) AND ((-1.584122797E9))), ''''))<=((((-1290253757)<=(x'baf3')), ((0.2876296804500459)>('1888963641')), CASE WHEN '0.6880276078671667' THEN 0X41257271 END))); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ ('?sE')) THEN (('877632954') IS TRUE) ELSE x'' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-r'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-218040299 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '845416753 sz=1970960652 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.7983770260432279)<(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (NULL) AND (x''))) BETWEEN (((0.002313778930426391) IS TRUE)) AND ((0.47987867080656865 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0x21f0519a IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'f677')!=('1f')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-849753631 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('') AND (-2121422624)))OR(((0.35522614182635615) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1517583768 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 4 sz=-962650121'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1543952818 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-471527820 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (((((0.5544267892280242)OR(1.990582123E9)))OR(x''))) AND (0.002313778930426391 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.30796393761379925)) NOT BETWEEN ((((((0x44db9ea8)AND(x'4c37')))OR('. ,n끎I')))) AND (('-1561162743'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=359414051 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((('횟r')OR('')))AND(x'4a89')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=396878681 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(x'ad9e', 0.38807953810736295) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=24536433 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '1841951706'  WHEN 0.6059686604879326 THEN 0.028191061218059255 WHEN 0.258511475905714 THEN x'' WHEN '-1059862854' THEN x'' END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-234955488')>>(0Xffffffffea6991bd)) THEN (('?sE') NOT BETWEEN ('0.6647438149284433') AND (x'b28a')) ELSE ((((NULL)OR(0.465075114489946)))AND('-213467337')) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('')|(0.30796393761379925))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1888963641') IS FALSE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1394461528 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.9377915078695856)|(x'')))OR(((('D ^# Y온*e', x'2a67', 0x72c4d519)) NOT BETWEEN ((-1584122797, x'', NULL)) AND ((1.352044171E9, '䗢', x''))))))AND(((0.22643711378125086) NOT BETWEEN ('1176344834') AND (',\r%')))))AND('0.4010271483835097')))AND(((0.08216037459959691) BETWEEN (x'') AND (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2140845346 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.028191061218059255)|(x''))) NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)*(-3.62180163E8)) THEN ((NULL)IS NOT(0.8679027991565903)) ELSE (x'' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1239650239'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-178689389 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN (-2140845346, 0.17121751134267738)) IN (((x'5a8a')<=(0.6559950547856528)), (('') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((NULL, NULL, ''))>((NULL, x'', '1144559062'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'Da'  WHEN '-2131052061' THEN NULL WHEN '' THEN NULL WHEN 1.155243688E9 THEN 8.45416753E8 ELSE '-64733002' END)/((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1685686026 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1160816588 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '396878681' THEN NULL WHEN 0.8188580788045214 THEN '}W' WHEN x'' THEN '-1313577761' END) IS TRUE); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-362180163'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1685686026 sz=-1421965085 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'04ff')OR(0.27358800966430363)))-(CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=854787116 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '2~'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=877632954'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1372618590'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '528017008 0 sz=-1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1914004343 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1266286180')) NOT BETWEEN (('Dx삈CD')) AND ((0xffffffffcd58c90c))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-86982703 24536433 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)GLOB(((0.6682920298326703) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1562603810 581258635 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=932362056 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'ae98' THEN 348837016 ELSE x'' END AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT 0.8128649416342143)) BETWEEN ((((NULL))<((1665869962)))) AND (((0.8630438702496877) NOT BETWEEN ('581258635') AND (0.6732412555941888)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x''))=((''))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('i*q1q#!\n%') NOT BETWEEN ('1246077579') AND ('528017008')))||(('\r~' IN ('-1522319502')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(x'') AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=604334477 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-904809192 sz=755946992 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=773634394'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3991468279485958)LIKE(0Xffffffffbf513294))) NOT BETWEEN (ABS('')) AND (CASE NULL  WHEN NULL THEN 0.27358800966430363 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=25149576 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.8526175239262817))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=577192734 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=895411641 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1448367429 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2088438935 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8446251188545876)IS NOT(x''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)/((('0.27358800966430363')/(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1468611032 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=675420087 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'')AND(('1799533983' IN ()))))AND(CASE '577192734'  WHEN '' THEN NULL WHEN x'dbffab19' THEN x'' WHEN x'' THEN '' ELSE x'' END)))AND((- (NULL)))))OR(CASE WHEN '' THEN 'nS' END)))OR(((NULL)GLOB(NULL)))))AND((((NULL)) NOT BETWEEN ((0.8338127545705984)) AND ((''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('-557395845' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-632381768'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1f')<(((NULL) NOT NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=241569553 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('410363656' COLLATE BINARY) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=33341433 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1448367429 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ('-2121422624', '455319234')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2377461525966541)||('')))IS(rtreenode(-4.11454253E8, 0.5488495563681538))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=2036252411 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1008994531 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((',\r%')&('-213467337')))); -- 3ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((0.10920839872035448)OR('-1925365712')))AND(x'')))AND(-632381768)))OR(0.8888314764221039)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (0.8783868668360836)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1952947563 sz=-1919672535 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '24536433 -1244909044 sz=-772295877 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE 0X2267431e  WHEN x'b8df' THEN '뿑m' WHEN 0X344f9dba THEN 'sB' WHEN 2115618571 THEN '-1394031797' WHEN NULL THEN NULL WHEN NULL THEN NULL END)AND((((('[>럊䂶]*떟4')OR('215378946')))AND(0.011731692122351256)))))OR((((('')AND(0.840765720695106)))AND(x'5210')))))OR(SQLITE_VERSION())))AND(((x'')/(NULL)))); -- 2ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS BLOB); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-876532927'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-673472307 sz=9223372036854775807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=310263601 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1914004343 sz=-178689389 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-435903402 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-547971391)>>('lc')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-632381768 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1873366886 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.8188580788045214)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1632757478 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=819980307 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1359241661 4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-548372788 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=771164436 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<<(''))) NOT BETWEEN (0.8704326551075666) AND ((((x''))<>((0.17121751134267738))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.9982075555917836 AS REAL) COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5544267892280242)GLOB(0.9602812700975257)))<(UNLIKELY(DISTINCT '0.6880276078671667'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(x'' COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-539384271 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1774790119'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS NUMERIC)  WHEN ABS('') THEN ((((((((((((NULL)AND(0Xffffffffd38787c0)))AND('-347137444')))AND(1.665869962E9)))AND(0xffffffff88b2e19f)))AND(NULL)))OR(x'')) ELSE x'4cde' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('(_T' AS TEXT) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=879849531 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -951327894 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((+ ('826747477')))AND(((1.352044171E9)>>(NULL)))))AND(0.05868878939022415 COLLATE BINARY)))OR(((0.9501554979237008)>>('-1522319502')))))OR(((0.6961794931736021)*(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1237981586 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-327582045 -362180163 sz=1042074019 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 -362180163 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8064391210453838, '877632954', x'')) BETWEEN (('-1421965085', NULL, '569397658')) AND (('tQa()', 0.20769031776700064, NULL))) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1834164800 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.25485671143732447)IS NOT('w#f\nu(')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-849753631 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=417269208 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1947458478 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-2088438935 sz=40780518 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((9223372036854775807 IN ()))IS(x'612a' COLLATE NOCASE)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2127817366 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1817690588 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (JULIANDAY(0.7466609296704415, x'bcdb03c5', 0.7466609296704415, '', NULL, x'', x'') IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1965767858 sz=358111120 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-1085197676 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2121422624 493741858 sz=-916558511 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2141778923'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1327878129 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0xffffffff8807c9b8) NOT BETWEEN (0.21380643901498564) AND ('趙uCq%Wv\r\r')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1680509676 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1894484502'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1416054242 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1953326747 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-142370069 -1522319502 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=73332358 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('rn')>>(((0.3579319456375576) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9662837737775408) NOT BETWEEN ('') AND (0.6815176041446369))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1805703044 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(CAST(NULL AS BLOB)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=417269208 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1584122797 -632381768 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((ABS(0.366433550396143)))<=((CAST(0.6961794931736021 AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS TEXT))-(((((((((x'')AND(NULL)))AND('-362180163')))AND(NULL)))OR(0x5e80da1d)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1711592169' IN ())) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=675420087 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-218040299 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1641540824 -1431267674 sz=-321101837'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT x'') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('䂶TT,zD*G'))!=(('y'))) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=615277263'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2131052061 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=30718287 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1195865784 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-457392021 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND('-362180163')))AND('0.6880276078671667'))) BETWEEN (((0.8584944482561586)+(0.8704326551075666))) AND ((-5.48372788E8 IN (x'', 'I7W')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CAST(NULL AS INTEGER))) AND ((CAST('-1059862854' AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=895411641 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('586348961')&('')))AND(CAST('2107344337' AS REAL))))AND('-2121422624' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) NOT BETWEEN ((('}w') NOT NULL)) AND (((((x'')OR(0.3388053775834876)))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-671087488 -765875808 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-562132572 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=755946992'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '273624789'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'f9d9')GLOB('uA9	湰')))OR(((NULL) BETWEEN (NULL) AND (0.0299397444888142)))))AND(('-1524860880' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((-2.13467337E8) NOT BETWEEN ('x+<6Ei') AND (NULL)))AND(CASE WHEN -1256986201 THEN x'' END)))OR(NULL COLLATE RTRIM)))AND(INSTR(1.781105209E9, '>I'))))OR((((NULL)) BETWEEN (('-814365268')) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1416054242 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.44918740147858893)OR('')))OR('926669349')))AND(((0.8280209095886453) NOTNULL))))AND((+ (0.672453625090669)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json((+ ('1e500'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1345895341 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '778673418 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('125221549')||(x''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-178689389 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=981393854'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=894383497 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 845416753 sz=-508946823'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN (x'') AND ('g2Io\r')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.583628356442152 COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((NULL)AND(x'')))OR(NULL)))AND('417269208')))AND(0.6726648850637323)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((NULL)+(x'719b'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=576783799 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (SQLITE_VERSION())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1908675796 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-183916493 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-996364051 sz=-729160528'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TRIM(x''))OR((NOT ('926669349')))))OR(('755946992' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((0.21960577263417347)OR(x'2d08')))OR('-547544466')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=-2140845346 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=604334477 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1472086236'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.9820158825847063)AND('1990582123')))OR(0.13638228201554925)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffd55f04dc IN ())) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (0.04273479326038876)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.7161366526286657 IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((((0.6182936275984084)OR('755946992')))AND('De8]cp|#堙'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1113611217 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-130359888 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=854787116 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(0.6623695522564078)) NOT BETWEEN ((('')<<(''))) AND (((0.6969118181501345)>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '341143243 sz=-1059862854 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1562603810 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN x'' ELSE 0Xffffffffdc180e05 END)<=((+ ('tQa()')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-563404901 -599583077 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.50404275490107)&('趙uCq%Wv\r\r')) THEN (0.50404275490107 IN ()) WHEN (- (NULL)) THEN ((((NULL)OR(0.04723238012193609)))AND(NULL)) WHEN ((((x'')OR(0.9642962982339905)))AND('2131499988')) THEN x'' COLLATE RTRIM WHEN CASE WHEN x'' THEN '334623383' WHEN 1092973169 THEN '1098650129' WHEN 0.8553565529907452 THEN x'' ELSE 'V547dvX' END THEN (((NULL)) BETWEEN ((0.15984620840584107)) AND ((NULL))) WHEN json_type('-1372618590') THEN CASE WHEN '-983124255' THEN NULL WHEN NULL THEN '359414051' WHEN NULL THEN '0.9642962982339905' ELSE NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-347137444 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.41184999447718973)))%(((((x'')OR(NULL)))AND(0.28438083125894176)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.47987867080656865)) BETWEEN (('')) AND ((NULLIF(DISTINCT NULL, 0.611039249951731)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-86982703'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1211139484 1603951897 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1832004992 sz=-1411969706 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1849400089 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-219284454 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CASE WHEN 'pv' THEN 0.9221400693050287 ELSE '#V' END)AND((('m餄\n^Pq_n5')IS NOT('45c-N뇨	')))))AND((0.830736609263635 IN ()))))OR(((x'b907')IS(x'')))))OR((NOT (x'c4d8')))))OR(HEX(x''))))AND(((0.08416485961585607) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1040851615 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((((((NULL)AND(NULL)))AND('0.04273479326038876')))OR('zl')))OR(NULL)))OR(x'')))AND(0.7528411009342387)) AS NUMERIC); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- ((~ ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-362180163 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-41407665'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND(x'')))OR('-872315399')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '604334477'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-513110710 -1104071348 sz=1523692443 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)LIKE(CAST(x'' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1102449258'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -632381768'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((0xffffffffcbc12b41))!=((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1778146493'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0X1 AS TEXT) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-55175127 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('5\r')AND(NULL)))OR(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-612177968 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -1454529200 sz=2070582220 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 903063360 sz=-1345852421'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-2068654433 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN UNLIKELY('2023596231') THEN CAST('740541040' AS BLOB) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1551586211 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 1092973169 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-64733002'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1858768247 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))-(((NULL) BETWEEN (x'') AND ('klo(X')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))IS NOT(('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN GLOB(NULL, x'e43b') THEN ((0xffffffffb62ea911) ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1799533983 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2145230811 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '625166072'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2094492289 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1799401362'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.611039249951731'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1989336879 sz=-633025810'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1059862854 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('D8pQ&7b32')OR(NULL)))AND(6.75420087E8)))AND((-972474285 IN ('Td')))))OR(8.77632954E8 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1092973169 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-991337597 0 sz=1734868114 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0X4cfaf14a)))OR('hz~J2IH⌮j' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1522319502 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1168182130'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2013746405 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '456191684 sz=-326291884'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9098214596962525))<((0.17160749068054726))), (((-1421965085)) BETWEEN (('-1147617614')) AND ((x'5b5c'))), (((('-1308744338')AND(NULL)))AND(0.8248542138560269))))>(((('?X9t') NOT BETWEEN ('129796376') AND (0Xffffffff818da8e0)), ((x'4059')AND(NULL)), 5.77192734E8 COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1888963641 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'' COLLATE BINARY)OR((((x''))<=((x''))))))OR(((x'')=(0.44584096053878886)))))AND(((x'4ce2')GLOB(NULL)))))OR(CASE WHEN 0.1670162881224797 THEN NULL WHEN x'' THEN '-360262647' WHEN x'e8b7' THEN NULL ELSE 0xffffffffff7a30b2 END)))AND(CASE '0.8064391210453838'  WHEN '-64733002' THEN 'Ccl(&Yq' END)))AND(((((((((NULL)OR('M')))AND(0.8214926707606557)))AND(x'')))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.840765720695106 COLLATE NOCASE THEN json_object(x'', x'2b53', x'', 0.477575886670464) WHEN ((((x'bd50')OR(0.41184999447718973)))AND(0.4010271483835097)) THEN (('])l')|(x'')) WHEN (((NULL))>=((368677737))) THEN CAST('-660825983' AS INTEGER) WHEN ((x'') NOT NULL) THEN ((0.8980059832166981)>=(x'')) WHEN CASE WHEN NULL THEN '-2068654433' WHEN 0.892796140034437 THEN 0.4666437995949462 WHEN 0.9098214596962525 THEN x'b30e' WHEN '|.ꮔt?' THEN '348837016' WHEN x'' THEN '-1521224271' ELSE NULL END THEN (((x'')) NOT BETWEEN ((NULL)) AND ((NULL))) ELSE (('-1489545166')&(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (1.062850556E9) AND (0.4647096678366681)))>(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-494714000'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-362180163 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.30796393761379925 THEN NULL ELSE 0.790289251117303 END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1085197676 sz=-138428775 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-719415566 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT x'') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (QUOTE(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1451404547 sz=-2069172210 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1372933516'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-852079631 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((('114647286')+(0.4122303510273597)), 0.5251853756795267); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (('[p')/(0.7351309925167147)), ((((0.7027745418905353)OR(x'')))AND(NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=37029323 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1421965085 sz=-178689389 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE '-158191084'  WHEN 113025865 THEN '895411641' ELSE NULL END THEN (((NULL))!=((0.3591735143416994))) ELSE '1781105209' COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (1.781105209E9))) BETWEEN (CAST(0.2841669922149289 AS BLOB)) AND ((((0.1284505657744488)) NOT BETWEEN ((NULL)) AND ((0.703449140552293))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN x'' THEN 0.5219339420058167 ELSE NULL END)AND((x'' IN (NULL, 'j~')))))OR(('-0.0' IN ()))))OR(CAST('' AS INTEGER))))OR((+ ('1530669358')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2097822520 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-851125769 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=255850532 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1506586265' AS BLOB)) NOT BETWEEN (((x'') BETWEEN (0.03679376691815195) AND (NULL))) AND ((('td')!=('1799533983')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((x'' IN (1176794768))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-218040299 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1630117082'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CAST(NULL AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=425155631'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=1970960652 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -885065092 sz=-1431704116 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)>>(x''))))>=(('iw'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) BETWEEN (NULL) AND (NULL)), (- ('')), (NOT (0.14099237535601417))))>=((((((x'0bcd1117')AND(NULL)))OR(x'')), CASE NULL  WHEN 'now' THEN '1176344834' END, ((x'') NOT BETWEEN (0X217fe64c) AND ('989142286'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND(0.22643711378125086)))OR(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-86982703')LIKE('-364615984'))) NOT BETWEEN (CASE WHEN '' THEN NULL ELSE ')e+㒰' END) AND (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-753605834 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CAST(NULL AS NUMERIC))) AND (('-1567388560' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=581258635'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE ''  WHEN x'' THEN 'fSǇj' END  WHEN CAST('#' AS TEXT) THEN STRFTIME(x'e792', x'', NULL) WHEN (- (0.8280209095886453)) THEN NULL WHEN ((x'') BETWEEN (x'') AND (0X57f2a71e)) THEN (('-53134149') NOT BETWEEN (0.8311474060365648) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN NULL ELSE 0.2536701024723368 END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.246077579E9)LIKE(((x'') NOT BETWEEN (x'') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((0.9982075555917836))<((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1033266711) NOT NULL))GLOB(0xffffffffe89bea1f COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-849819380 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1352044171'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-876532927 744969688 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 'oF[sr抩' THEN '' WHEN x'' THEN 0Xffffffffb0d7bb79 WHEN 0.548996439390648 THEN NULL ELSE 0.913330433331464 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TOTAL_CHANGES())IS NOT((((('-64733002')OR('')))AND(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1566864717 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND(0.19622301399647812)))AND(0Xffffffff9e51df5e)))AND('-977047898')))AND(((0.8838532816632382)+(-3.01721261E8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')|('134494137'))) BETWEEN (((-305481328)>(0.30612140138417765))) AND (CAST('-2121422624' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-824664797 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-178689389 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')/('1005814318')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('635233381')AND(x'')))OR(0Xffffffff97708adc)))>=(x'f0d6')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1525939072 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('M' AS BLOB))GLOB(CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-849819380 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (0.6131804104331399)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN (0.5725323053052158))  WHEN CASE NULL  WHEN 1092973169 THEN -247657310 END THEN (+ ('IP')) WHEN CASE '-2088438935'  WHEN x'69e3' THEN '' ELSE '-904809192' END THEN (NOT (x'')) WHEN x'e0b1' THEN 0.9098214596962525 COLLATE BINARY ELSE ('73332358' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1228710231 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0xfffffffff1fedd20 AS TEXT))<((NOT (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=403924464 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-2068654433 sz=396878681'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=578001606'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1902173050 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=-1238318038'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x3c64e159)%(6.75420087E8)), ABS(DISTINCT NULL), ((-2127817366) NOT BETWEEN (0.32227569125626876) AND (0.35522614182635615))))<=(((('-632381768')==(0x3f7e1b9f)), '454569290', ((9.32362056E8) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '550562386 sz=-1113979179'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-548372788 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1646758460 sz=-1517583768'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-673472307 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1665869962'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-849819380 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-849063893 sz=-673472307 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=289900329 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1925502233 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-424038637 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1963454514 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(NULL COLLATE BINARY, ((' +1')>=(x''))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1930004200'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1085197676 sz=1359026528 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)=(x'')))AND(((NULL)GLOB(NULL)))))OR(NULL COLLATE BINARY)))AND(((x'')>>('')))))AND((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(CAST('늃<' AS BLOB), (('') IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1201964289'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (- ('WBzM'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=1495318353 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((('')AND('-671795109')))OR(0X6b42b59f)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN x'' THEN NULL ELSE x'' END)OR((('')<<(0.17470697802415736)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2131052061'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1751744974 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1424262184'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (x'514c'))  WHEN ((0.5156004443037536) NOT BETWEEN ('') AND ('700020447')) THEN 0xfffffffff5d04a15 ELSE LIKELY(x'') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-568477172 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1246077579 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1239464593 sz=-1878822167 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1016959884 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(CAST(0.7700793803420858 AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1991318166 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.44078433638172065) IS TRUE))!=(TRIM(DISTINCT x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF(DISTINCT 0Xffffffffde258984, 't''dYK') IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LOWER(DISTINCT 0.583628356442152) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 sz=-2139336305 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.11333114078366835)OR(x'')))OR(0Xffffffffd13c3091)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-101170414 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')+('')))>((((((((('⣟Ik_?BgFf')OR(0.9566082376882195)))AND('-509994382')))AND(x'')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2037492159 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-570598510 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-78725240 sz=1699894645 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')*(0.8585464057129909)))OR((('-854028119') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('vnkm?G')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1784351057 unordered noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '422834246 -1641540824 sz=-1932248302 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'25c0')AND(NULL)))OR(x'')))<((((NULL))==((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.2958483521158648 COLLATE BINARY THEN LIKELIHOOD(0.055700861369520016, 0.9803401514898468) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1787639767 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2072467122 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffb07358d2 COLLATE BINARY)AND(0.8704326551075666 COLLATE NOCASE)))AND((((('榚l䳵ik')AND(NULL)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN json_patch(0x5b4b73dc, 0.09930628082800252) THEN '0.9221400693050287' COLLATE BINARY ELSE CAST(317081559 AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('%I9[3rER\' COLLATE RTRIM) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1983637738 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-411454253 sz=1677005818 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1845672846'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH(((NULL)*('TY''*'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN ((('')<<(270055131))) AND (((0.4669331877987818) NOT BETWEEN (x'2097') AND ('IvGJO')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1807238801 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '845416753 sz=762632925 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1590474210 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1561162743 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '422834246'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('|j??')AND(((0.4122173263153327) BETWEEN ('l-7ArR,z') AND ('	[')))))OR(((NULL) NOT BETWEEN (0.7721598865090413) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS NUMERIC)  WHEN NULL COLLATE BINARY THEN ((']_GzcCyz')*(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 sz=162635994 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '926669349 1352044171'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-124822103')<=(0.9281372308541919)))/(((NULL)+('v괣')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1372618590 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '848136984 0 sz=-693567897'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=22505694'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=-1279866407 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=132918508 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1160816588 2 sz=-62626641'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-411454253 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((NULL) BETWEEN (NULL) AND (' f')))OR((+ ('-64733002')))))OR((('r(KC-7\rSt')*('')))))AND(((NULL) NOT BETWEEN (NULL) AND (NULL)))))OR((('66023567') NOT BETWEEN (1.896723298E9) AND ('-1126756223')))))OR(CAST(NULL AS BLOB))))AND((((NULL))>((x''))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'')||((('742476509')>>(0xffffffff80654ade)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1417510130 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')%(NULL)))||(((NULL)<=(-1.858768247E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-304726616 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN NULL THEN NULL WHEN '-0.0' THEN x'' WHEN 0.9829533378526615 THEN '-1477995310' END)OR(((x'')>=('m餄\n^pq_n5')))))AND((('1227357998')>(0.22650166018868578)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1123178152'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -471527820'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 785159971 sz=-1661830555'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1365526595 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1706023829 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.978820889928854)) NOT BETWEEN ((((((-1.584122797E9)OR(NULL)))AND(NULL)))) AND ((((((NULL)AND(x'')))OR(''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '747082957 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT '-927895629', NULL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-709206282 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '926669349 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN '*(' THEN 'Br\nU' ELSE 0.4773917281586728 END)OR(((0.877086735173742)>=(0.19872006588627877)))))AND((('[ 4￿y<')&('45853436')))))AND(CAST(NULL AS NUMERIC))))AND(0.17949518719715574 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'cd6f')OR(x'')))OR(0.39608262699863384))))<=(((((NULL)) NOT BETWEEN ((0.12300263103387199)) AND (('1266286180')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((('nl?ঞd1^8J', 0.44606175058211084, '2021413452')) NOT BETWEEN (('', 0X5f52e74a, NULL)) AND ((NULL, x'', '0.05868878939022415'))))OR(((((0.7937290236401363)OR('')))OR('-962650121')))))OR(('1970960652' IN ()))))OR((x'' IN ()))))OR((('?m') ISNULL))))OR((~ (NULL)))))OR(((-1.290253757E9)GLOB(-1059862854)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1448367429 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-673472307'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.24188267362282545)LIKE(NULL)))+((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=803389383 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('1092973169')||(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1461595831 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS REAL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=235402795 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '703680290 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN ((~ (NULL))) AND (IFNULL(DISTINCT NULL, 1.888963641E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '661059579 643030578 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('')<=(0.3880114999452544)))AND((0xffffffffa5433f72 IN ()))))AND(((-213467337)<=('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN NULL THEN 0X34c0e31e WHEN '-875381924' THEN '854787116' WHEN NULL THEN '1352044171' ELSE 'PI' END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-310477294'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=724259992 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-904809192'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=130931617 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('}y', 1.543952818E9, -2126181582)) NOT BETWEEN (((NOT ('1352044171')), ((0.44918740147858893) NOT BETWEEN (0Xfd5e3f3) AND (x'')), (((0.6147828694281937)) BETWEEN (('l-|A^R,z')) AND ((NULL))))) AND ((((x'')IS(NULL)), ((' ') NOT BETWEEN (NULL) AND ('933591085')), (NOT (x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('94#[S!\r' COLLATE BINARY)OR(((NULL)|('0.8138263260798093')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('')))LIKE((('')>>(x'4e85')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('SK9')) NOT BETWEEN ((NULL)) AND ((x''))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1039342802 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1337773541'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=-557478178 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-962650121'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9362146105246143, 'vY', NULL))>((0x355ee5b9, NULL, NULL))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-471527820 unordered noskipscan'); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c4, c2) VALUES (x'db1e', x'', NULL, x''); -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
PRAGMA main.soft_heap_limit = 9219817787880887380; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
PRAGMA main.application_id = -7015762060218856984; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c1)=(0.9098214596962525, NULL); -- 0ms;
PRAGMA main.checkpoint_fullfsync = false; -- 0ms;
INSERT OR REPLACE INTO rt1(c1) VALUES ('-12480943'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES (0.21380643901498564, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0X76858c00), (0.1614342724923905), (x''); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0, c4) VALUES (NULL, 0.9750825270167358, 0.28584287873772607); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2) VALUES (NULL, '[>럊䂶]*떟4'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1015399246 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-9223372036854775808 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1448367429'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(CASE WHEN '1OBSD9QZM' THEN x'9a0a' ELSE x'' END, ((('')) BETWEEN (('j)dz')) AND (('WBzM')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1259430063')>(x'7732')))<<((0X5f09467a IN (0.2354499102504778, -1942593122)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6562256313266998)AND((((x'')) NOT BETWEEN (('Vl[')) AND (('21855157'))))))OR((((0xffffffffb9629b57)) NOT BETWEEN (('')) AND ((0.20279598224080575))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1911444918 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1990582123 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-137990645'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '270712768 sz=-922434796 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '864182694 sz=-1891384249 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1822787002'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1686508458 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1 sz=-2121422624 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-1043719215') NOTNULL) THEN CASE WHEN '(_T' THEN 0.2944314968874998 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2140845346 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-8.4981938E8)) BETWEEN ((CASE WHEN x'' THEN 0.47987867080656865 ELSE x'' END)) AND (((((('')OR(x'')))OR(x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY)-(CASE NULL  WHEN NULL THEN 417269208 ELSE x'' END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'8f26306f') BETWEEN ('') AND (0.4567607168659019)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN ('') AND (NULL)))AND((NOT (NULL)))))AND((('83')GLOB(0.4512296965399164)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1160816588 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.9377915078695856')<<('I8595373550393819726:3398298800198475769:1039:1402T1283-1122 -383319413807729038:8122056698430803521T#cG')))OR(((0Xffffffffb630c42a)-('')))))OR('' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', NULL)) BETWEEN (((('25149576') NOT NULL), (~ ('bf')), CAST('5.<돂' AS TEXT))) AND ((((x'')||('-1657446907')), (('712845952') BETWEEN (x'') AND (NULL)), (~ (-881012903))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1641540824 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=321120073 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('EqFr')<(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=371691902'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((x'90d60348') ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1293737125'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1527196461 sz=1246077579 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)|(0Xffffffffba4e35be)) THEN 0.14820165824397247 COLLATE BINARY WHEN (x'' IN ()) THEN (((x'')) BETWEEN ((-1634719814)) AND ((0xc446e0b))) WHEN CAST(x'' AS BLOB) THEN ((NULL)OR(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.3270894485574486)OR(x'')))OR(NULL)))OR(x'')))OR('359414051')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'0170'))>(('OKw|'))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1182178405'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') IS TRUE))OR(CAST(NULL AS INTEGER))))OR(((x'') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '926669349 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.2775901969033887) ISNULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2131052061'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 1852285447 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1516098836 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1830817687'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=442324482'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2131052061 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) NOT BETWEEN (NULL) AND ('')))AND(-5.08946823E8 COLLATE RTRIM)))OR(((('-435901894')) NOT BETWEEN ((x'')) AND ((0.1282263963216238))))))OR(((0.7869490216880339) NOT BETWEEN (x'') AND (0.9820166313569794)))))AND(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-557395845 sz=-283427217'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (0.04990499284817418)))AND((((('-124822103')AND(x'')))OR('845416753')))))OR(((NULL)+(x'e684')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1805601255'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-293637593'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1035299992 sz=-1401986148 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1296580546'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 -476671373'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)GLOB((((x'', 'Br\nU', x'7d70')) NOT BETWEEN ((0X53c55d80, 3.21120073E8, x'')) AND (('Sj33{4a7', 'WlCᙹ+5', ''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-391386800' AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.9642962982339905  WHEN 1.888963641E9 THEN '' END) BETWEEN (NULL COLLATE RTRIM) AND ((~ (0.18755849738012909)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=1978376373 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-266935095 sz=-1410459089 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1116010647 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0X4747be66 AS REAL))<<(((((0.05868878939022415)AND(0.7655680687652854)))AND(-8.6982703E7)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'')AND(1349486386)))OR(NULL)))OR(NULL)))AND(-1.313577761E9)) IN (((0.7048080360781501) NOT BETWEEN (-758017150) AND (NULL)), '' COLLATE RTRIM)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('tS' AS REAL)) NOT BETWEEN (((0Xffffffff80fab9e3)>=('⣟Ik_?BgFf'))) AND (((NULL)<>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.551304208515267 AS NUMERIC)) BETWEEN ((~ (''))) AND (((((x'61b4')OR(0.8414243169205143)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('1OBSD9QZM' AS INTEGER) THEN ((x'')&(x'')) WHEN CASE 0.2395646063683321  WHEN '>鞪GilH,#(' THEN -183077449 WHEN NULL THEN 0X9596808 WHEN x'' THEN NULL ELSE '9%''''#' END THEN '-74477606' COLLATE NOCASE WHEN ((-1468611032) BETWEEN (0.8912892476247466) AND (-178689389)) THEN (0.9221400693050287 IN ()) WHEN ((3.96878681E8)IS(0.15628970243504237)) THEN ((((x'')AND('-r')))OR(NULL)) WHEN ((0.465075114489946) IS FALSE) THEN (('')GLOB('-156749123')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('䗢')AND(x'7520')) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-691472266'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(NULL AS REAL))AND(((((0.30550775474652003)OR(x'')))AND('-178689389')))))OR((('') NOT BETWEEN (x'') AND (676152194)))))AND((('0.04723238012193609') BETWEEN ('') AND (0.997790206169343)))))AND((((x'dac5', x'10ba', 'M}Ǉ{|')) BETWEEN ((0.44270865766604284, NULL, NULL)) AND ((0.23347252582179168, 0xffffffff80b4735b, ''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=237390201 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2131052061 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((INSTR(0.6461622949336815, NULL), (+ ('0.25485671143732447')), NULL))<=((((NULL)=('373987067')), x'' COLLATE RTRIM, CAST(NULL AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('&')||(json_type(x''))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((0.258511475905714 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')<=(NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(DISTINCT NULL, x'cf20', 0.2830360759352455, 0x21f0519a))<<(CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('417269208' AS TEXT)) NOT BETWEEN (((((NULL)AND(NULL)))OR(x''))) AND (LIKELIHOOD(DISTINCT 0.044933997391298, 0.9169970676880695))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-362180163'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((0.4020710426716936))>((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -213467337 sz=-895283870'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (NULL) AND (0.9662837737775408))) NOT BETWEEN (CAST(0.9092048161492223 AS TEXT)) AND ('-2092965007' COLLATE RTRIM)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1363024868 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN '293412775' WHEN 0.465075114489946 THEN x'' WHEN '-1226154345' THEN NULL ELSE 0.46107216439828935 END) BETWEEN (((NULL)|(NULL))) AND ((((('0.13638228201554925')AND('j툞*]qu1')))OR('')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-971418066'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '562640187 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0Xffffffffa25511ff)))||(COALESCE(692112003, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2016648569 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '348837016 0 sz=-1212935202 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(0xb57cab8)))/((('cJ') BETWEEN ('845416753') AND ('-1028846054')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1021020062 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-1489212625 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('{3') ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('XwAz') NOT BETWEEN (NULL) AND (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('1912175533')))-(('-R' IN (-8.4981938E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UPPER(NULL))OR(((x'') BETWEEN (NULL) AND (x'')))))OR(((x'') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((('')<>(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.15085740915531054; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1570944221 sz=266277679 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((6.75420087E8) NOTNULL) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1095030627'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-460029057'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '380707290 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(COALESCE(0.6131804104331399, x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 1.352044171E9  WHEN x'' THEN '0.002313778930426391' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((932362056 IN (0.9685697733444071)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-552008570'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '782449867 sz=348837016'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '755946992 sz=1351122728 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '4 sz=954925511'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '740539016 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-849753631'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'20a5' THEN 0.9098214596962525 END)IS NOT((((x'')) NOT BETWEEN ((-1e500)) AND (('-1417315703'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-262221918 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1531299220 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-362180163'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1322876798 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('') ISNULL))==(CASE WHEN NULL THEN x'' WHEN '^A/M<' THEN -1792805437 WHEN '' THEN '71*!' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '437392839 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1184751331'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=73332358 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (0.7827586003037037)))AND(((((0.04723238012193609)AND('-1594965562')))AND(0.3395934846266866)))))OR(NULLIF('369839650', 0.8667789327234526))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=569397658 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1976183074 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1867449580'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=941441122 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') IS TRUE) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=577192734 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('25763185' AS NUMERIC) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1408513164 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=523638967 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1468611032'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1448367429 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '6 sz=-864678995 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-987057064'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=319899264 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1749706622 sz=399626389'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-702242508 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1841951706 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')=(x'')))*(LOWER(125259417))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'7e66' IN ()))<=((NULL IN (x'a299')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8584944482561586)) NOT BETWEEN ((HEX(-6.73472307E8))) AND ((('-1' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-760989293 -347137444 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 sz=321120073 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -3.01721261E8  WHEN -1584122797 THEN NULL END)>>(((((x'02b0cda4')OR('')))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '0.50404275490107'  WHEN NULL THEN '569397658' ELSE x'' END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'') NOT BETWEEN (NULL) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1896723298'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (0.3816568068108871)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1290253757 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1605472282 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-2042481514'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) IS TRUE)  WHEN (('-98384615') BETWEEN ('r5') AND (x'')) THEN (~ (0.8138263260798093)) WHEN (- ('')) THEN ((((NULL)OR('430423211')))AND(0.7420378384900935)) WHEN NULL THEN ((NULL)IS(NULL)) ELSE ((('-926944360', NULL, ''))!=((NULL, NULL, 468963227))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('TRUE' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-250303843 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-301721261'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-879060930 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=24536433'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-64733002 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-477085085'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT x'') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 -1959725460 sz=42688037 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN '' THEN '' END)OR(CAST(0.35523036587630297 AS REAL))))AND((((0.25485671143732447, NULL, 'd~')) BETWEEN ((x'', '4q).~/ROZ', '422834246')) AND ((NULL, 0.6800157764358009, 9.54925511E8))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-308352672 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=845416753'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('4P2') NOTNULL) IN (((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))<(((x'eb9a')OR(0Xffffffffbf10eca6)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND('-1535766377')))OR(0Xfffffffffd51d8e8))) NOT BETWEEN (json_extract('1352044171', x'')) AND (((NULL)>=(0.5711171019352741)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=362157169 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((0.15518123579585652)AND(0X1ec1f4ff)))OR(x'')))AND(0.09062275803403619)))OR('1063734836')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.6483340088114886)AND('W+')))AND(0.08189218405081466)))AND(('341330737' IN ()))))OR(CASE WHEN 0.2573842756449143 THEN '-2001185341' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1537865386 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1073162834 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=117969921 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '24536433 -1528066666 sz=845416753 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1522319502 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-977187268 0 sz=-1977528460 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1367864371 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=755946992 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-64733002'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffe2c8c358 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=675420087 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (('')) AND (('1916968239'))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'f492')<(NULL))  WHEN (('-1160816588')<<(x'1730')) THEN ((0.28438083125894176)GLOB(x'8460')) ELSE ((x'')==(0.3453274316437106)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-548372788 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1352187054 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1421965085 24335788 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1945715223 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'83e7ce2d')OR('25')))OR(NULL)))&(((NULL) ISNULL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('?5') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-90926108 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1502202240 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=417269208 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN NULL ELSE '1144559062' END) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-823079399'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=569397658 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1082009511 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(-1297100694) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=495276109 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1301922995'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-949229420 -1701353580 sz=973780917 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.27411229854765784)IS NOT(x'b32d')) THEN TRIM(1346680901, '-1085197676') ELSE ((NULL)*(0.3991468279485958)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -1845208556 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-566089361 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 -1199748566 sz=-1239021575 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1576095879'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1623884346 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_valid(x'') IN (CAST(x'' AS BLOB))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-226826217'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (NULL) AND ('-849819380')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (x'') AND (''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-621381668 sz=-508234076'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=1165608247 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '1246077579'  WHEN '-344994717' THEN '-1650491648' ELSE x'' END)OR(((NULL) NOT BETWEEN (NULL) AND (NULL)))))AND(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1415284904 unordered'); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=630077871'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1685192462 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(((0.42132972612467245)>>(NULL)), 0.9751350304250443 COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1313577761 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-213467337 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1278901188'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 0.9973759963241154  WHEN '-1102782782' THEN '}W' ELSE 0.8128649416342143 END  WHEN ((0Xffffffffd5a35f8e)||(x'')) THEN (0.38947039418455653 IN ()) ELSE ((NULL) BETWEEN (NULL) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1373368390 sz=1262473024 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=669568429 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-2113298882 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN 0xffffffffa7c7f8aa THEN x'' WHEN '퉺	F' THEN NULL WHEN '轐8㓍W' THEN 'ﴂX' ELSE 0xffffffffb41e67e4 END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1599233846 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN ((NULL) BETWEEN (x'5f4b') AND (x'')) WHEN (((0.4459809292811654)) NOT BETWEEN ((x'')) AND (('1062850556'))) THEN ((('954925511', 0.354466141939231, NULL)) BETWEEN ((x'', 'r(KC-7\rSt', '')) AND ((x'', '-2147353478', 'Mr'))) WHEN CAST(0.296659570535742 AS INTEGER) THEN ((1247897690)<=(0X344f9dba)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-2083690396 1239650239'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.899013201803971)) BETWEEN ((((0.8364560118451198) NOT NULL))) AND ((((0.19122975120256802)IS NOT(-1.610042367E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2116099242 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN 'OLn﹋*%<' THEN 'l-7arr,z' ELSE 422834246 END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-740978852 0 sz=-750170569'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>>(CASE '179864894'  WHEN x'' THEN '273153134' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1990582123 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.2106940033429564)OR((('0.028191061218059255') BETWEEN (0.7528411009342387) AND ('-411454253')))))OR(((NULL) NOT BETWEEN (NULL) AND (NULL)))))AND(x'a9afeadd')))AND((NULL IN (0.27064775410672615)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=839937101 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) NOT BETWEEN ((~ (-792608212))) AND ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '215485798'  WHEN 'UX' THEN 'Y''bZ0+)' END) BETWEEN (((NULL) NOT BETWEEN (x'9652') AND (x''))) AND (CASE x''  WHEN x'' THEN NULL ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1791108226 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.907735491720977))==((0.12669020076489246)))  WHEN (((x'', x'', NULL)) NOT BETWEEN ((NULL, x'', 0.9488498952943724)) AND ((0.6215338419609157, NULL, ''))) THEN CAST('vY' AS BLOB) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT NULL))AND(((0.7351309925167147) NOT NULL))))OR(x'')); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT CASE -1290253757  WHEN 0.023302061976949173 THEN '' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1841951706 sz=1781105209 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-548372788 0 sz=-392832368 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((-1705716515) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '265654290 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'a4dbd25b')OR(NULL)))OR('0.8138263260798093')))OR(0.19071158402119837)))AND(0.4010271483835097)))AND(0Xffffffffb1725ed4)))AND((('')<=(0X2bb5aa61)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN IFNULL(NULL, 1102866576) THEN ((0.10102573073693011)&(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1799533983'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'82a3') IS FALSE) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '67428705 675420087 sz=-1388845166 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, NULL, 0.05749940249040675)) NOT BETWEEN (((((0.6059686604879326, '', -2121422624))==((-2094594960, NULL, '5D'))), (+ ('1808630951')), CASE WHEN x'' THEN '' ELSE x'' END)) AND (((x'1030cb77' IN ()), (NOT ('0.41184999447718973')), ((NULL)*(x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1416054242'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1063923135 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-100345453 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')==('1''')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('sk9' IN ()))<<((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((0.9592223294663184)) AND ((NULL))))<>(LIKE(x'', '', '#'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-675682862 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1176344834 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1197700128'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '396878681 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS INTEGER))OR(x'' COLLATE RTRIM)))AND(CASE '\r1NPIX'  WHEN 0.19882937134203582 THEN '1685686026' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH('' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1762082169 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 -1262693077 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1308822919 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-651548714 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'3f7f')IS NOT(x'2fc4')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-42499051 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')LIKE((- (-1810911154)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (x'658b') AND ('-904809192'))) NOT BETWEEN (((((0.9173776707888582)AND(NULL)))AND(1266286180))) AND (TYPEOF(DISTINCT '⢊!|'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0.7138975938094007 WHEN 0xffffffffd6469a3b THEN '' WHEN -1372618590 THEN NULL END) NOT BETWEEN (json_insert(0.37843504367839065, 0.8959071970387136, 'zZ')) AND (((0.672453625090669)*('-1522319502')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=409969468 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 210283211 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-212950619 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.47012241343771355)AND('')))GLOB('932362056')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=311981021 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((903063360) NOT NULL))IS((~ (0.8427520470067051)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(COALESCE(DISTINCT NULL, 0.5763138465502711), (- (' v'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -1527942998 THEN 0X42bffb2e WHEN 0.9098214596962525 THEN NULL WHEN NULL THEN 0Xfffffffff0f66da5 END)IS((~ (0.2301862814986314)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 sz=169043875'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('ofa')) BETWEEN ((CAST(0.8865229025096393 AS REAL))) AND (((('-1205153506')>>(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-2140845346 sz=755955710'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '4 2 2 -362180163 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-557395845 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR(x'')))OR(x'6437')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN (NULL) AND (0.4103086722628507)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=517794270 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-347859112 sz=-673472307 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '422834246'  WHEN '袛ិ' THEN -1103995892 ELSE NULL END) NOT BETWEEN ((((NULL)) NOT BETWEEN (('-959990074')) AND (('()')))) AND ((((('675420087')OR(1.56260381E9)))OR(x'a2af')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1888963641 AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1178844901 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=-1492172683 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7654309325265309 COLLATE RTRIM)OR(('2QR' IN (0.017455125765331037)))))OR((+ ('1799533983')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-927895629 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1990582123 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.17160749068054726) IS TRUE)))!=((CASE WHEN '0.7351309925167147' THEN 'vmXW' WHEN x'73a2' THEN 0.9052689645085914 WHEN x'' THEN NULL ELSE x'' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2017877872 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1372618590 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.20769031776700064') IS TRUE)) BETWEEN (-420065817) AND ((- ('-748129816')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=1471368870'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-130027960 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-382668000 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1371174496 sz=755946992 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5598136852721832; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-590217719 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1896723298 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1433533773 1766980657 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=858254723 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1561162743 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.05868878939022415; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-362180163'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 sz=-1238318038 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'42be'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((('-145658846')AND(0X6a448a7b)))AND(x'e2bd')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%(0.7528411009342387))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=290268295'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1389773147'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(CAST('-1024824944' AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('0.50404275490107')OR('0.8280209095886453')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-460587249'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((((NULL)||('&')))) AND ((((0.07602121765896563)|(x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN ('0.28438083125894176') AND (0.475751102133651)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1393921872 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1444939523 643421935 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('|.ꮔt?' COLLATE NOCASE, CASE WHEN -1160816588 THEN x'9b7e' WHEN '417269208' THEN NULL WHEN 0.2672881459332669 THEN x'' ELSE '0.9098214596962525' END, NULL COLLATE NOCASE))==((((1667379406)GLOB('0.258511475905714')), (('407547535')<=(x'')), (('') NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.06404996991652856) BETWEEN (0.7000618482404155) AND (NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1416054242 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '742247633 2 sz=-1584122797'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((514548921)<<('537356580')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (NULL IN (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1352044171 0 sz=1692313949 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=275173707 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1386357099 sz=-1473310088 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-436232317 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((-1453368710)<=(NULL))) BETWEEN (CAST(0.47987867080656865 AS BLOB)) AND (((0xffffffffc91be88a)|(0.5965262606431179)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')!=(0.468662135101248))) BETWEEN ('f&') AND (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1888963641 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-1173386058 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1299134360')<=(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) BETWEEN ((0.5544267892280242 IN ())) AND (((NULL)<<('978507576')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ (0.2819151500145918)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-673472307'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(((NULL) IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=839387817 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8087509851625271)OR(x'')))AND(NULL)) IN (ABS(DISTINCT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-438145071'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'049f' THEN 0x57ed751 WHEN NULL THEN 0X29f466b WHEN NULL THEN '|(El^''' ELSE x'3d5c' END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 321899618 sz=-1135093574 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=495170904'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-673472307'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=321120073 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1186563199) NOT BETWEEN (NULL) AND ('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 845416753 sz=25149576 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1031132664 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1266286180 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(DISTINCT 0.671107641824558, 0.24097762216442242)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1953432535 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1160816588 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1799533983 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-508946823 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0X4cd814f7 AS REAL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN (CAST(0.5213119706364858 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('-705706368' AS TEXT))AND(((936651665)AND('x轐')))))OR(((0.6890072127767245) IS FALSE))))OR(((x'') BETWEEN (NULL) AND ('emW	')))))OR(json(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (x'')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('608384902') NOT BETWEEN (-557395845) AND ('')) THEN (((((((('-1640375972')AND(NULL)))OR(NULL)))OR('1266286180')))OR(0.39542358691373547)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('P0)k1Fg') BETWEEN (NULL) AND (x'')) THEN NULL COLLATE RTRIM ELSE CAST(NULL AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -1700028706 sz=1781105209 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.02867089954435942 AS TEXT))&(((NULL) BETWEEN (NULL) AND (x'd3f6')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-300990018 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS INTEGER))AND(((1.448367429E9) IS FALSE))))AND((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6127444941515311) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=895411641 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2022031980 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2137264369'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2035516604 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1994008271 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('877632954' AS BLOB)) NOT BETWEEN ((x'' IN ())) AND (CAST('1448367429' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=877632954 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-164584593 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1276141945 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((x'') NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (0.961021074804452) AND (0.888942607787092))) BETWEEN (0.5794453760573871) AND (x'')); -- 1ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(x'' COLLATE NOCASE, CAST('SS' AS TEXT), (('牱0to q\n\n')!=(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=383884020 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=738196319 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ ('-1088801623')))AND((('-1522319502') NOT BETWEEN (NULL) AND (NULL)))))OR((((x'f5d0')) NOT BETWEEN ((NULL)) AND ((0.7126828083313193))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1 2 sz=-678134050 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1647021088')<=(x'39cb' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1293310391 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 954925511 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)%(0xffffffffff2d5a63)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 0 sz=375760926 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_remove(1.092973169E9, 'Y6XP', 0x32f3042c, '581258635'))%(0.8783868668360836)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-117494147'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -301721261'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE(0.9247483971068872, NULL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '悔u[7b~hA'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT x'', NULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1160816588 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1350727223 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-347137444 0 sz=-471527820'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-700730978 1274846751'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOTNULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '854787116 sz=-1254739938'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1313577761 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-849819380 914313277 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR(x'', x'') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL('-951728678', CAST('' AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-650856838'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN x'' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1004708340'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1059862854' THEN NULL WHEN NULL THEN 0xffffffffb177f9e6 WHEN '-962650121' THEN '3\' END)LIKE(((x'')%(0.9387074688104394)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '9223372036854775807 sz=-896894601 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1822390220 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 1176344834 sz=1799533983'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1535208205'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1265527600 sz=-250704256'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('384888234')OR(x''))))>(((- (0.9504550611759761))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -1477785245 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ ('-1421965085')) IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-188495265' COLLATE RTRIM)AND((x'' IN ('420382706')))))AND(('-904809192' IN ()))))OR((~ ('RsU.9KJl1')))))AND(((('854787116', x'5ff9', 0.22643711378125086)) BETWEEN ((0.6732412555941888, 0.9385011803115313, 0.8504370121684351)) AND ((x'dfbd', 0.6906535173232263, x''))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1488380102'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))!=(((x'0f40') NOT NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 656329428 sz=-138905973 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1059862854 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 sz=-1870018594 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2058003630'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6976799966634177) NOT NULL)))<>((CAST(x'11d6' AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1527257570 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-268120290 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-38936842) NOT BETWEEN (x'') AND (NULL)))IS(CASE WHEN NULL THEN 0xffffffffe30f9b2f WHEN 0.4201417796003658 THEN NULL WHEN '1394461528' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1247905938 1258588360 sz=420192228'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=744210497 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '658660623 sz=-127266554 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-904809192 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1521561654 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' COLLATE NOCASE THEN CAST('-1744782056' AS NUMERIC) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1256040619 -1927889034 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=245331964 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-2044570284'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((((('-876532927')OR(0.8584230472897455)))AND(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1517583768 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('321120073') IS FALSE)) NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1417968291 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1160816588 sz=-178689389 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2131052061 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1214157697'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('V7&Xv9QM8') NOT NULL)  WHEN ((x'') BETWEEN (NULL) AND ('456583088')) THEN CASE WHEN 0.010080160250734438 THEN -488407369 WHEN 0.6765619051392685 THEN 0.9332900399229002 WHEN '306907434' THEN x'' ELSE 0.737049942613042 END ELSE CASE WHEN 'v.' THEN '' WHEN -1317561119 THEN '' WHEN '643614027' THEN '1266286180' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=2121392186 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE 0.9378768181711746  WHEN 0.15474279675110958 THEN '䂶tt,zd*g' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-495156368'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)-(CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (TRIM(0X31115884))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKELY(DISTINCT 3.21120073E8) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1484754635 1841951706 sz=704986791'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1117555622 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=856838585 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-987818713 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1372618590'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1960227602 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -218040299 sz=1543952818 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1629357375 0 sz=1976132274 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1871206272 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=2119963977 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=903063360 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('e㽲' COLLATE BINARY) BETWEEN (((x'')==(0.1904218616772616))) AND ((((((((('LKj捊ZI')AND('-859029293')))AND('0.41184999447718973')))AND(0.26691356103714814)))AND(8.54787116E8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array((((((((('-1482168038')OR('vFdR~䗢4')))AND(0.004022255222545068)))AND('')))AND(x'')), (('-397355279')!=(0x17fc088))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN '' END)LIKE(((((x'')AND('-876532927')))OR(0.19968647606339118)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)||(ABS(DISTINCT x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=-356523142 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')AND(x'365b')))OR(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-423886998 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(('-548372788' IN ()), CAST('[]' AS BLOB), '|j??' COLLATE NOCASE, ((NULL)|(-2.18040299E8))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1267824622 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6051449190913833; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LAST_INSERT_ROWID())IS(((0.670247717724092)||(0.21960577263417347)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((-361651037)>=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) BETWEEN (39084134) AND (NULL)))AND(TRIM(DISTINCT '+F', NULL))))OR(json_array('a+', 0xffffffffc006c035))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0Xffffffffb49cbaaf)-(x'')) THEN (NOT (NULL)) WHEN 0xffffffff8384f369 COLLATE RTRIM THEN CASE -389588471  WHEN '-472168029' THEN x'' ELSE '2140557412' END WHEN ((x'') NOTNULL) THEN CAST(0.6943983314217885 AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 -1333070301 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-6.4733002E7 COLLATE NOCASE AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=417269208 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('604334477') NOT BETWEEN (NULL) AND ('0.5329047964282785')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-548372788 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1723159758 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (0x4f2bbef6))))<=((0.5829300837619061))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8167329608299837)AND(0.17529400263635142)))OR(x'')))>((('1870466629')||(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.9820158825847063' IN ()))-(0.5570985488074074 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=359414051 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'' THEN '' WHEN -1241909681 THEN 0x8e8cc27 WHEN 0.682222681939482 THEN NULL ELSE 0.9637971209542807 END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-566089361 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=44401879 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (-1511220578))) BETWEEN (((((((((0.947365064633448)AND(0.7181657507708569)))OR('-2131052061')))OR('2090301754')))AND(NULL))) AND (CASE '1448367429'  WHEN x'58ac' THEN 0.973560981347875 ELSE '-218040299' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=517348235'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)-(2.41569553E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.2688681667382955)LIKE(UNLIKELY(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-278520246 sz=-1460466488 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 -592394133 sz=-1078113868'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN ('tQa()') AND (x'e246')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>('a랅')))>(CASE WHEN 0.6131804104331399 THEN '1062850556' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.630882244346556)=(NULL))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((~ ('569397658')))) AND ((CAST(5.28017008E8 AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'6147' IN ()))*('1616210138' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.19340163859892467 IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN '-1561162743' COLLATE RTRIM THEN ((-1.810911154E9) BETWEEN (0.6815176041446369) AND (x'0ad6')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=-178689389 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=657149493'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1292172390 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1692366362 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-218040299 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1781105209 sz=1990582123 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'709c' COLLATE NOCASE)LIKE((('v41Q')>(417269208)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH((- (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-962650121'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1421257877 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('-1641540824')) NOT BETWEEN ((NULL)) AND ((-2088438935))) THEN NULL COLLATE NOCASE WHEN (- ('581258635')) THEN ((0.5937680464245153)-('926669349')) WHEN CASE 0.5413783248457938  WHEN -793986484 THEN x'' END THEN CAST(x'' AS BLOB) ELSE (NOT ('rn')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-531985396 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xfffffffff0804e01, NULL, x'7623'))<=((x'', x'', NULL))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-53619366 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES (0.8116542604809404, '321120073'), (0.4335927640401359, '-1273624287'), ('-1040011983', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (0.6050273855310759); -- 0ms;
SELECT rtreecheck('rt1'); -- 1ms;
INSERT OR ABORT INTO rt1(c1, c2) VALUES ('>t', x''); -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES ('-1461219284', x'e930'), ('', ''), ('t,', NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c1, c2) VALUES (NULL, 'j/', x''); -- 0ms;
ANALYZE main; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -1238876800 noskipscan'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA secure_delete; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_autocheckpoint = 3666637771834747547; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c4) VALUES ('-1905760570', x''), (x'', 0.17160749068054726), (0x5c06d9b2, '6+3fj]k'); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
PRAGMA cache_size; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c4, c3) VALUES ('', '581258635', 0.4939675072220361); -- 0ms;
DELETE FROM sqlite_stat1; -- 10ms;
DROP TABLE rt1; -- 25ms;
PRAGMA cache_spill = -267455426134555689; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c3, c2, c0) VALUES (NULL, x'c08348a7', '-301721261', NULL, 'i*q1q#!\n%'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0, c3, c2) VALUES (NULL, '槗TiE 	v', NULL, NULL), (NULL, NULL, 'nS', '1416054242'), (x'', NULL, x'd6f4', 8.95411641E8); -- 0ms;
PRAGMA temp.short_column_names = true; -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (x'57e9', x'', x'', 0.5696384479692765, x''), (0.8515322674963707, '632896552', 1500448991, -9.27895629E8, NULL), ('}B', -2.088438935E9, NULL, '(tjC', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c3) VALUES (NULL, '581258635', 0X56545545), (0x430e72e3, NULL, x''), ('0.611039249951731', NULL, 0.8755630345513303); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(x''); -- 5ms;
INSERT OR ABORT INTO rt0(c0) VALUES (-1315247612); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (1.665869962E9); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('Gⵇ'); -- 0ms;
UPDATE OR REPLACE rt0 SET c4=0.23821588948348693 WHERE HEX(DISTINCT (rt0.c3 IN (rt0.c4, rt0.c2))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('-2121422624', '-1650322427', NULL, 0Xffffffff884cbe11, x''); -- 0ms;
PRAGMA journal_size_limit = -41961873899653868; -- 0ms;
INSERT OR ABORT INTO rt0(c4, c0, c3, c2, c1) VALUES (-856494845, x'b6ed81a2e7e3', '1416054242', NULL, ''), (0.6682920298326703, '쬐?BAqKo|', 0.8630438702496877, '870536703', 0.09856215730610463), (NULL, '-1226816082', '1246077579', '1896723298', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3) VALUES ('', x'3491'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT NULL FROM vt0 GROUP BY vt0.c0; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 3ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (1.239650239E9); -- 0ms;
PRAGMA stats; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((ABS(DISTINCT v0.c0)) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (json_insert(7.3332358E7, rt0.c2, rt0.c2, rt0.c0, rt0.c3))) WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c3) AND ('954925511'))))) ORDER BY 'now' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) NOT BETWEEN (rt0.c3) AND ('954925511'))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((ABS(DISTINCT v0.c0)) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (json_insert(7.3332358E7, rt0.c2, rt0.c2, rt0.c0, rt0.c3))) ORDER BY 'now' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((ABS(DISTINCT v0.c0)) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (json_insert(7.3332358E7, rt0.c2, rt0.c2, rt0.c0, rt0.c3))) WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c3) AND ('954925511'))))) ORDER BY 'now' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) NOT BETWEEN (rt0.c3) AND ('954925511'))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((ABS(DISTINCT v0.c0)) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (json_insert(7.3332358E7, rt0.c2, rt0.c2, rt0.c0, rt0.c3))) ORDER BY 'now' ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END, ((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c3)), ((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE -1429608022 END, MIN(vt0.c0, rt0.c2, rt0.c2, rt0.c2), rt0.c1)))) ORDER BY TYPEOF(CAST(rt0.c4 AS BLOB)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END, ((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c3)), ((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE -1429608022 END, MIN(vt0.c0, rt0.c2, rt0.c2, rt0.c2), rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TYPEOF(CAST(rt0.c4 AS BLOB)) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END, ((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c3)), ((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE -1429608022 END, MIN(vt0.c0, rt0.c2, rt0.c2, rt0.c2), rt0.c1)))) ORDER BY TYPEOF(CAST(rt0.c4 AS BLOB)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END, ((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c3)), ((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE -1429608022 END, MIN(vt0.c0, rt0.c2, rt0.c2, rt0.c2), rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TYPEOF(CAST(rt0.c4 AS BLOB)) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END, ((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c3)), ((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE -1429608022 END, MIN(vt0.c0, rt0.c2, rt0.c2, rt0.c2), rt0.c1)))) ORDER BY TYPEOF(CAST(rt0.c4 AS BLOB)) ASC;
SELECT * FROM v0 WHERE (((0xffffffff93caa87e) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffff93caa87e) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((0xffffffff93caa87e) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffff93caa87e) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((0xffffffff93caa87e) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE, ((x'')&(rt0.c3)), CASE WHEN rt0.c3 THEN vt0.c0 END)) AND (((rt0.c1 IN (rt0.c3, vt0.c0)), TRIM(DISTINCT rt0.c4, rt0.c4), ((rt0.c1) NOT BETWEEN (vt0.c0) AND ('1394461528'))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE, ((x'')&(rt0.c3)), CASE WHEN rt0.c3 THEN vt0.c0 END)) AND (((rt0.c1 IN (rt0.c3, vt0.c0)), TRIM(DISTINCT rt0.c4, rt0.c4), ((rt0.c1) NOT BETWEEN (vt0.c0) AND ('1394461528')))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE, ((x'')&(rt0.c3)), CASE WHEN rt0.c3 THEN vt0.c0 END)) AND (((rt0.c1 IN (rt0.c3, vt0.c0)), TRIM(DISTINCT rt0.c4, rt0.c4), ((rt0.c1) NOT BETWEEN (vt0.c0) AND ('1394461528'))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE, ((x'')&(rt0.c3)), CASE WHEN rt0.c3 THEN vt0.c0 END)) AND (((rt0.c1 IN (rt0.c3, vt0.c0)), TRIM(DISTINCT rt0.c4, rt0.c4), ((rt0.c1) NOT BETWEEN (vt0.c0) AND ('1394461528')))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1, vt0.c0, rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE, ((x'')&(rt0.c3)), CASE WHEN rt0.c3 THEN vt0.c0 END)) AND (((rt0.c1 IN (rt0.c3, vt0.c0)), TRIM(DISTINCT rt0.c4, rt0.c4), ((rt0.c1) NOT BETWEEN (vt0.c0) AND ('1394461528'))))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((rt0.c4)GLOB(v0.c0)))OR(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c4 END)))OR(((((v0.c0)AND(rt0.c0)))OR(rt0.c3)))) FULL OUTER JOIN rt0 ON (0.5889476532580371 IN ()) COLLATE NOCASE WHERE (LOWER(-452265775));
SELECT SUM(count) FROM (SELECT ((LOWER(-452265775)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((rt0.c4)GLOB(v0.c0)))OR(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c4 END)))OR(((((v0.c0)AND(rt0.c0)))OR(rt0.c3)))) FULL OUTER JOIN rt0 ON (0.5889476532580371 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((rt0.c4)GLOB(v0.c0)))OR(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c4 END)))OR(((((v0.c0)AND(rt0.c0)))OR(rt0.c3)))) FULL OUTER JOIN rt0 ON (0.5889476532580371 IN ()) COLLATE NOCASE WHERE (LOWER(-452265775));
SELECT SUM(count) FROM (SELECT ((LOWER(-452265775)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((rt0.c4)GLOB(v0.c0)))OR(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c4 END)))OR(((((v0.c0)AND(rt0.c0)))OR(rt0.c3)))) FULL OUTER JOIN rt0 ON (0.5889476532580371 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(rt0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(rt0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(rt0.c1 AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((((((((((vt0.c0) NOT NULL))AND(((vt0.c0)AND(vt0.c0)))))OR((- (vt0.c0)))))AND('-261435993')))OR(json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) NOT NULL))AND(((vt0.c0)AND(vt0.c0)))))OR((- (vt0.c0)))))AND('-261435993')))OR(json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((((((((((vt0.c0) NOT NULL))AND(((vt0.c0)AND(vt0.c0)))))OR((- (vt0.c0)))))AND('-261435993')))OR(json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) NOT NULL))AND(((vt0.c0)AND(vt0.c0)))))OR((- (vt0.c0)))))AND('-261435993')))OR(json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0) NOTNULL));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS TEXT)) ORDER BY (~ (((rt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c0) ISNULL))) ASC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS TEXT)) ORDER BY (~ (((rt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c0) ISNULL))) ASC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS TEXT)) ORDER BY (~ (((rt0.c0) ISNULL))) ASC;
SELECT ALL * FROM v0 WHERE (((((v0.c0)-(NULL)))GLOB(((v0.c0)OR(v0.c0))))) ORDER BY ((((v0.c0) NOT NULL)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)-(NULL)))GLOB(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL)) ISNULL));
SELECT ALL * FROM v0 WHERE (((((v0.c0)-(NULL)))GLOB(((v0.c0)OR(v0.c0))))) ORDER BY ((((v0.c0) NOT NULL)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)-(NULL)))GLOB(((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL)) ISNULL));
SELECT ALL * FROM v0 WHERE (((((v0.c0)-(NULL)))GLOB(((v0.c0)OR(v0.c0))))) ORDER BY ((((v0.c0) NOT NULL)) ISNULL);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 END)<=(((vt0.c0)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 END)<=(((vt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 END)<=(((vt0.c0)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 END)<=(((vt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 END)<=(((vt0.c0)LIKE(rt0.c2)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)GLOB(0.7232876655622967)))IS NOT(((vt0.c0)>(vt0.c0))))) ORDER BY ((((((0.8652283114860505))<>((vt0.c0)))))>=(((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(0.7232876655622967)))IS NOT(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED ORDER BY ((((((0.8652283114860505))<>((vt0.c0)))))>=(((NOT (vt0.c0))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)GLOB(0.7232876655622967)))IS NOT(((vt0.c0)>(vt0.c0))))) ORDER BY ((((((0.8652283114860505))<>((vt0.c0)))))>=(((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(0.7232876655622967)))IS NOT(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED ORDER BY ((((((0.8652283114860505))<>((vt0.c0)))))>=(((NOT (vt0.c0))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)GLOB(0.7232876655622967)))IS NOT(((vt0.c0)>(vt0.c0))))) ORDER BY ((((((0.8652283114860505))<>((vt0.c0)))))>=(((NOT (vt0.c0)))));
SELECT * FROM v0, vt0 WHERE (CAST('4301521' AS NUMERIC)) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)==(CAST(v0.c0 AS BLOB))), v0.c0  NULLS LAST, '-1570772511'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('4301521' AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)=(CAST(v0.c0 AS BLOB))), v0.c0  NULLS LAST, '-1570772511'  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CAST('4301521' AS NUMERIC)) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)==(CAST(v0.c0 AS BLOB))), v0.c0  NULLS LAST, '-1570772511'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('4301521' AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)=(CAST(v0.c0 AS BLOB))), v0.c0  NULLS LAST, '-1570772511'  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CAST('4301521' AS NUMERIC)) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)==(CAST(v0.c0 AS BLOB))), v0.c0  NULLS LAST, '-1570772511'  NULLS LAST;
SELECT * FROM v0 WHERE (((NULL COLLATE RTRIM) BETWEEN (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((((v0.c0))>=(('508927939'))))));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM) BETWEEN (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((((v0.c0))>=(('508927939')))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((NULL COLLATE RTRIM) BETWEEN (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((((v0.c0))>=(('508927939'))))));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM) BETWEEN (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((((v0.c0))>=(('508927939')))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((NULL COLLATE RTRIM) BETWEEN (CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((((v0.c0))>=(('508927939'))))));
SELECT * FROM rt0, vt0 WHERE (((DATETIME(rt0.c4, rt0.c4, rt0.c4))==((- (vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(rt0.c4, rt0.c4, rt0.c4))=((- (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC);
SELECT * FROM rt0, vt0 WHERE (((DATETIME(rt0.c4, rt0.c4, rt0.c4))==((- (vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(rt0.c4, rt0.c4, rt0.c4))=((- (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC);
SELECT * FROM rt0, vt0 WHERE (((DATETIME(rt0.c4, rt0.c4, rt0.c4))==((- (vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((~ ((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c4 IN ())))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((~ ((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c4 IN ())))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((~ ((rt0.c4 IN ()))));
SELECT ALL * FROM vt0 WHERE (0.5141561976183633) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) NOTNULL))))AND(CAST(vt0.c0 AS TEXT))) DESC, (~ (((vt0.c0) IS FALSE))) ASC, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5141561976183633) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) NOTNULL))))AND(CAST(vt0.c0 AS TEXT))) DESC, (~ (((vt0.c0) IS FALSE))) ASC, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (0.5141561976183633) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) NOTNULL))))AND(CAST(vt0.c0 AS TEXT))) DESC, (~ (((vt0.c0) IS FALSE))) ASC, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5141561976183633) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) NOTNULL))))AND(CAST(vt0.c0 AS TEXT))) DESC, (~ (((vt0.c0) IS FALSE))) ASC, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (0.5141561976183633) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) NOTNULL))))AND(CAST(vt0.c0 AS TEXT))) DESC, (~ (((vt0.c0) IS FALSE))) ASC, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c4)>>(vt0.c0)))GLOB(rt0.c4)) INNER JOIN rt0 ON (((NOT (v0.c0)))*(((rt0.c4) BETWEEN (rt0.c0) AND (v0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c4)>>(vt0.c0)))GLOB(rt0.c4)) INNER JOIN rt0 ON (((NOT (v0.c0)))*(((rt0.c4) BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c4)>>(vt0.c0)))GLOB(rt0.c4)) INNER JOIN rt0 ON (((NOT (v0.c0)))*(((rt0.c4) BETWEEN (rt0.c0) AND (v0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c4)>>(vt0.c0)))GLOB(rt0.c4)) INNER JOIN rt0 ON (((NOT (v0.c0)))*(((rt0.c4) BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE x'977a' END)OR(CAST(vt0.c0 AS TEXT))))AND(CAST('1670622429' AS REAL))))AND(((((vt0.c0)AND(x'50b9')))OR(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY ((((((NULL)>=(vt0.c0)))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)IS(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE x'977a' END)OR(CAST(vt0.c0 AS TEXT))))AND(CAST('1670622429' AS REAL))))AND(((((vt0.c0)AND(x'50b9')))OR(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((((NULL)>=(vt0.c0)))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)IS(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE x'977a' END)OR(CAST(vt0.c0 AS TEXT))))AND(CAST('1670622429' AS REAL))))AND(((((vt0.c0)AND(x'50b9')))OR(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY ((((((NULL)>=(vt0.c0)))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)IS(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE x'977a' END)OR(CAST(vt0.c0 AS TEXT))))AND(CAST('1670622429' AS REAL))))AND(((((vt0.c0)AND(x'50b9')))OR(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((((NULL)>=(vt0.c0)))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)IS(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE x'977a' END)OR(CAST(vt0.c0 AS TEXT))))AND(CAST('1670622429' AS REAL))))AND(((((vt0.c0)AND(x'50b9')))OR(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY ((((((NULL)>=(vt0.c0)))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)IS(vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED((((x'')) BETWEEN ((v0.c0)) AND ((vt0.c0)))) WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)IS(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)IS(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED((((x'')) BETWEEN ((v0.c0)) AND ((vt0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED((((x'')) BETWEEN ((v0.c0)) AND ((vt0.c0)))) WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)IS(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)IS(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED((((x'')) BETWEEN ((v0.c0)) AND ((vt0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED((((x'')) BETWEEN ((v0.c0)) AND ((vt0.c0)))) WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)IS(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT * FROM vt0 WHERE ((~ ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ ((~ (vt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c4)*(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)*(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c4)*(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)*(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c4)*(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))*(((rt0.c3)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))*(((rt0.c3)<(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))*(((rt0.c3)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))*(((rt0.c3)<(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))*(((rt0.c3)<(rt0.c1)))));
SELECT * FROM v0 WHERE (((v0.c0)<<(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0)<<(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)<<(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0)<<(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)<<(v0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c1 AS TEXT), rt0.c4))!=(((rt0.c0 IN ()), (((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c4)) AND (('D&xBW蒪껄h', rt0.c2, rt0.c3))), ((x'') NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c1 AS TEXT), rt0.c4))<>(((rt0.c0 IN ()), (((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c4)) AND (('D&xBW蒪껄h', rt0.c2, rt0.c3))), ((x'') NOT NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c1 AS TEXT), rt0.c4))!=(((rt0.c0 IN ()), (((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c4)) AND (('D&xBW蒪껄h', rt0.c2, rt0.c3))), ((x'') NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c1 AS TEXT), rt0.c4))<>(((rt0.c0 IN ()), (((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c4)) AND (('D&xBW蒪껄h', rt0.c2, rt0.c3))), ((x'') NOT NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)), CAST(rt0.c1 AS TEXT), rt0.c4))!=(((rt0.c0 IN ()), (((rt0.c3, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c4)) AND (('D&xBW蒪껄h', rt0.c2, rt0.c3))), ((x'') NOT NULL)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON rt0.c4 CROSS JOIN vt0 ON (- ((v0.c0 IN ()))) WHERE (CAST((NOT (rt0.c2)) AS NUMERIC)) ORDER BY (vt0.c0 COLLATE NOCASE IN ((~ (rt0.c4)), json_array_length(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON rt0.c4 CROSS JOIN vt0 ON (- ((v0.c0 IN ()))) ORDER BY (vt0.c0 COLLATE NOCASE IN ((~ (rt0.c4)), json_array_length(rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON rt0.c4 CROSS JOIN vt0 ON (- ((v0.c0 IN ()))) WHERE (CAST((NOT (rt0.c2)) AS NUMERIC)) ORDER BY (vt0.c0 COLLATE NOCASE IN ((~ (rt0.c4)), json_array_length(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON rt0.c4 CROSS JOIN vt0 ON (- ((v0.c0 IN ()))) ORDER BY (vt0.c0 COLLATE NOCASE IN ((~ (rt0.c4)), json_array_length(rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON rt0.c4 CROSS JOIN vt0 ON (- ((v0.c0 IN ()))) WHERE (CAST((NOT (rt0.c2)) AS NUMERIC)) ORDER BY (vt0.c0 COLLATE NOCASE IN ((~ (rt0.c4)), json_array_length(rt0.c1))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)) THEN ((rt0.c3)>(rt0.c0)) ELSE ((rt0.c4)<>(rt0.c1)) END) ORDER BY (((rt0.c0))<=((((rt0.c2)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)) THEN ((rt0.c3)>(rt0.c0)) ELSE ((rt0.c4)!=(rt0.c1)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0))<=((((rt0.c2)IS(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)) THEN ((rt0.c3)>(rt0.c0)) ELSE ((rt0.c4)<>(rt0.c1)) END) ORDER BY (((rt0.c0))<=((((rt0.c2)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)) THEN ((rt0.c3)>(rt0.c0)) ELSE ((rt0.c4)!=(rt0.c1)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0))<=((((rt0.c2)IS(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)) THEN ((rt0.c3)>(rt0.c0)) ELSE ((rt0.c4)<>(rt0.c1)) END) ORDER BY (((rt0.c0))<=((((rt0.c2)IS(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((LIKELY(vt0.c0) IN ())) ORDER BY CASE ((((rt0.c3)OR(NULL)))AND(''))  WHEN '-876532927' THEN (((vt0.c0, rt0.c2, rt0.c3))!=((vt0.c0, vt0.c0, rt0.c0))) ELSE rt0.c4 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(vt0.c0) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((((rt0.c3)OR(NULL)))AND(''))  WHEN '-876532927' THEN (((vt0.c0, rt0.c2, rt0.c3))!=((vt0.c0, vt0.c0, rt0.c0))) ELSE rt0.c4 END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((LIKELY(vt0.c0) IN ())) ORDER BY CASE ((((rt0.c3)OR(NULL)))AND(''))  WHEN '-876532927' THEN (((vt0.c0, rt0.c2, rt0.c3))!=((vt0.c0, vt0.c0, rt0.c0))) ELSE rt0.c4 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(vt0.c0) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((((rt0.c3)OR(NULL)))AND(''))  WHEN '-876532927' THEN (((vt0.c0, rt0.c2, rt0.c3))!=((vt0.c0, vt0.c0, rt0.c0))) ELSE rt0.c4 END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((LIKELY(vt0.c0) IN ())) ORDER BY CASE ((((rt0.c3)OR(NULL)))AND(''))  WHEN '-876532927' THEN (((vt0.c0, rt0.c2, rt0.c3))!=((vt0.c0, vt0.c0, rt0.c0))) ELSE rt0.c4 END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c4)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c4)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c4)) AS NUMERIC));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE rt0.c4 END WHERE ((rt0.c0 IN ('', (rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ('', (rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE rt0.c4 END);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE rt0.c4 END WHERE ((rt0.c0 IN ('', (rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ('', (rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE rt0.c4 END);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE rt0.c4 END WHERE ((rt0.c0 IN ('', (rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((COALESCE(x'514b', x'', rt0.c1, NULL)) IS FALSE) ASC  NULLS FIRST, ((((- (rt0.c3))))<(((NOT (rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(x'514b', x'', rt0.c1, NULL)) IS FALSE) ASC  NULLS FIRST, ((((- (rt0.c3))))<(((NOT (rt0.c2))))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((COALESCE(x'514b', x'', rt0.c1, NULL)) IS FALSE) ASC  NULLS FIRST, ((((- (rt0.c3))))<(((NOT (rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(x'514b', x'', rt0.c1, NULL)) IS FALSE) ASC  NULLS FIRST, ((((- (rt0.c3))))<(((NOT (rt0.c2))))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((COALESCE(x'514b', x'', rt0.c1, NULL)) IS FALSE) ASC  NULLS FIRST, ((((- (rt0.c3))))<(((NOT (rt0.c2))))) ASC;
SELECT * FROM vt0, rt0, v0 WHERE (((rt0.c4 COLLATE BINARY) BETWEEN (((vt0.c0)<=(rt0.c4))) AND (CASE WHEN '73332358' THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 ELSE NULL END))) ORDER BY ((vt0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE BINARY) BETWEEN (((vt0.c0)<=(rt0.c4))) AND (CASE WHEN '73332358' THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 ELSE NULL END))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((vt0.c0) NOTNULL));
SELECT * FROM vt0, rt0, v0 WHERE (((rt0.c4 COLLATE BINARY) BETWEEN (((vt0.c0)<=(rt0.c4))) AND (CASE WHEN '73332358' THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 ELSE NULL END))) ORDER BY ((vt0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE BINARY) BETWEEN (((vt0.c0)<=(rt0.c4))) AND (CASE WHEN '73332358' THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 ELSE NULL END))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((vt0.c0) NOTNULL));
SELECT * FROM vt0, rt0, v0 WHERE (((rt0.c4 COLLATE BINARY) BETWEEN (((vt0.c0)<=(rt0.c4))) AND (CASE WHEN '73332358' THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 ELSE NULL END))) ORDER BY ((vt0.c0) NOTNULL);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (x'a7e5cf36');
SELECT SUM(count) FROM (SELECT ((x'a7e5cf36') IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (x'a7e5cf36');
SELECT SUM(count) FROM (SELECT ((x'a7e5cf36') IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (x'a7e5cf36');
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS REAL) AS INTEGER) WHERE (((rt0.c3) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE NOCASE) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS REAL) AS INTEGER) ORDER BY rt0.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS REAL) AS INTEGER) WHERE (((rt0.c3) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE NOCASE) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS REAL) AS INTEGER) ORDER BY rt0.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS REAL) AS INTEGER) WHERE (((rt0.c3) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE NOCASE) ORDER BY rt0.c3  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2)IS NOT(rt0.c3))) NOT BETWEEN (HEX(rt0.c4)) AND ((((-2.127817366E9, rt0.c3, NULL))==((rt0.c4, rt0.c0, rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)IS NOT(rt0.c3))) NOT BETWEEN (HEX(rt0.c4)) AND ((((-2.127817366E9, rt0.c3, NULL))=((rt0.c4, rt0.c0, rt0.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2)IS NOT(rt0.c3))) NOT BETWEEN (HEX(rt0.c4)) AND ((((-2.127817366E9, rt0.c3, NULL))==((rt0.c4, rt0.c0, rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)IS NOT(rt0.c3))) NOT BETWEEN (HEX(rt0.c4)) AND ((((-2.127817366E9, rt0.c3, NULL))=((rt0.c4, rt0.c0, rt0.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2)IS NOT(rt0.c3))) NOT BETWEEN (HEX(rt0.c4)) AND ((((-2.127817366E9, rt0.c3, NULL))==((rt0.c4, rt0.c0, rt0.c3)))))  NULLS LAST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c4)))<(rt0.c4)) WHERE (RTRIM(ABS(DISTINCT v0.c0))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(ABS(DISTINCT v0.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c4)))<(rt0.c4)) ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c4)))<(rt0.c4)) WHERE (RTRIM(ABS(DISTINCT v0.c0))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(ABS(DISTINCT v0.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c4)))<(rt0.c4)) ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c4)))<(rt0.c4)) WHERE (RTRIM(ABS(DISTINCT v0.c0))) ORDER BY NULL ASC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (((((((-394807726)AND(v0.c0)))AND(rt0.c3)))|(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((-394807726)AND(v0.c0)))AND(rt0.c3)))|(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((-394807726)AND(v0.c0)))AND(rt0.c3)))|(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((-394807726)AND(v0.c0)))AND(rt0.c3)))|(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((-394807726)AND(v0.c0)))AND(rt0.c3)))|(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (~ (rt0.c3)) WHERE ((((rt0.c2)<<(rt0.c1)) IN ())) ORDER BY ((rt0.c4)|(rt0.c4)) COLLATE NOCASE  NULLS FIRST, (((v0.c0 IN (rt0.c0))) BETWEEN (((rt0.c3)>(v0.c0))) AND (LIKE(rt0.c2, rt0.c3, ')'))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<<(rt0.c1)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (~ (rt0.c3)) ORDER BY ((rt0.c4)|(rt0.c4)) COLLATE NOCASE  NULLS FIRST, (((v0.c0 IN (rt0.c0))) BETWEEN (((rt0.c3)>(v0.c0))) AND (LIKE(rt0.c2, rt0.c3, ')'))) ASC);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (~ (rt0.c3)) WHERE ((((rt0.c2)<<(rt0.c1)) IN ())) ORDER BY ((rt0.c4)|(rt0.c4)) COLLATE NOCASE  NULLS FIRST, (((v0.c0 IN (rt0.c0))) BETWEEN (((rt0.c3)>(v0.c0))) AND (LIKE(rt0.c2, rt0.c3, ')'))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<<(rt0.c1)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (~ (rt0.c3)) ORDER BY ((rt0.c4)|(rt0.c4)) COLLATE NOCASE  NULLS FIRST, (((v0.c0 IN (rt0.c0))) BETWEEN (((rt0.c3)>(v0.c0))) AND (LIKE(rt0.c2, rt0.c3, ')'))) ASC);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (~ (rt0.c3)) WHERE ((((rt0.c2)<<(rt0.c1)) IN ())) ORDER BY ((rt0.c4)|(rt0.c4)) COLLATE NOCASE  NULLS FIRST, (((v0.c0 IN (rt0.c0))) BETWEEN (((rt0.c3)>(v0.c0))) AND (LIKE(rt0.c2, rt0.c3, ')'))) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY) NOT NULL));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) WHERE ((((((rt0.c0)<(vt0.c0))))<=(((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))) ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((rt0.c3)) BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)<(vt0.c0))))<=(((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((rt0.c3)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) WHERE ((((((rt0.c0)<(vt0.c0))))<=(((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))) ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((rt0.c3)) BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)<(vt0.c0))))<=(((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((rt0.c3)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON (NOT (CAST(vt0.c0 AS REAL))) WHERE ((((((rt0.c0)<(vt0.c0))))<=(((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c3))))))) ORDER BY ((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((rt0.c3)) BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT * FROM vt0, v0 WHERE ('\r');
SELECT SUM(count) FROM (SELECT (('\r') IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ('\r');
SELECT SUM(count) FROM (SELECT (('\r') IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ('\r');
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((rt0.c1)IS NOT(rt0.c2)) COLLATE NOCASE FULL OUTER JOIN v0 ON rt0.c2 WHERE (((rt0.c1)>>(((vt0.c0)<>(rt0.c0))))) ORDER BY (((rt0.c3)IS NOT('YoO7')) IN ()), rt0.c4 DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(((vt0.c0)!=(rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((rt0.c1)IS NOT(rt0.c2)) COLLATE NOCASE FULL OUTER JOIN v0 ON rt0.c2 ORDER BY (((rt0.c3)IS NOT('YoO7')) IN ()), rt0.c4 DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((rt0.c1)IS NOT(rt0.c2)) COLLATE NOCASE FULL OUTER JOIN v0 ON rt0.c2 WHERE (((rt0.c1)>>(((vt0.c0)<>(rt0.c0))))) ORDER BY (((rt0.c3)IS NOT('YoO7')) IN ()), rt0.c4 DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(((vt0.c0)!=(rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((rt0.c1)IS NOT(rt0.c2)) COLLATE NOCASE FULL OUTER JOIN v0 ON rt0.c2 ORDER BY (((rt0.c3)IS NOT('YoO7')) IN ()), rt0.c4 DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((rt0.c1)IS NOT(rt0.c2)) COLLATE NOCASE FULL OUTER JOIN v0 ON rt0.c2 WHERE (((rt0.c1)>>(((vt0.c0)<>(rt0.c0))))) ORDER BY (((rt0.c3)IS NOT('YoO7')) IN ()), rt0.c4 DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, x'', rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)), ((((rt0.c3)OR(x'')))OR(rt0.c2)), ((rt0.c4)LIKE(rt0.c4)), ((rt0.c3) ISNULL), CASE x''  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c4 WHEN '-1560007782' THEN rt0.c4 ELSE rt0.c2 END)) AND ((rt0.c1, ((rt0.c2) BETWEEN (rt0.c4) AND (NULL)), ((rt0.c3)<(rt0.c4)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, x'', rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)), ((((rt0.c3)OR(x'')))OR(rt0.c2)), ((rt0.c4)LIKE(rt0.c4)), ((rt0.c3) ISNULL), CASE x''  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c4 WHEN '-1560007782' THEN rt0.c4 ELSE rt0.c2 END)) AND ((rt0.c1, ((rt0.c2) BETWEEN (rt0.c4) AND (NULL)), ((rt0.c3)<(rt0.c4)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c0) ISNULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, x'', rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)), ((((rt0.c3)OR(x'')))OR(rt0.c2)), ((rt0.c4)LIKE(rt0.c4)), ((rt0.c3) ISNULL), CASE x''  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c4 WHEN '-1560007782' THEN rt0.c4 ELSE rt0.c2 END)) AND ((rt0.c1, ((rt0.c2) BETWEEN (rt0.c4) AND (NULL)), ((rt0.c3)<(rt0.c4)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, x'', rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)), ((((rt0.c3)OR(x'')))OR(rt0.c2)), ((rt0.c4)LIKE(rt0.c4)), ((rt0.c3) ISNULL), CASE x''  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c4 WHEN '-1560007782' THEN rt0.c4 ELSE rt0.c2 END)) AND ((rt0.c1, ((rt0.c2) BETWEEN (rt0.c4) AND (NULL)), ((rt0.c3)<(rt0.c4)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c0) ISNULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, x'', rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)), ((((rt0.c3)OR(x'')))OR(rt0.c2)), ((rt0.c4)LIKE(rt0.c4)), ((rt0.c3) ISNULL), CASE x''  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c4 WHEN '-1560007782' THEN rt0.c4 ELSE rt0.c2 END)) AND ((rt0.c1, ((rt0.c2) BETWEEN (rt0.c4) AND (NULL)), ((rt0.c3)<(rt0.c4)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c0) ISNULL)))));
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))GLOB((rt0.c1 IN (rt0.c1))))) ORDER BY ((CASE rt0.c1  WHEN 0X7fe6cae7 THEN v0.c0 END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))GLOB((rt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE rt0.c1  WHEN 0X7fe6cae7 THEN v0.c0 END) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))GLOB((rt0.c1 IN (rt0.c1))))) ORDER BY ((CASE rt0.c1  WHEN 0X7fe6cae7 THEN v0.c0 END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))GLOB((rt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE rt0.c1  WHEN 0X7fe6cae7 THEN v0.c0 END) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))GLOB((rt0.c1 IN (rt0.c1))))) ORDER BY ((CASE rt0.c1  WHEN 0X7fe6cae7 THEN v0.c0 END) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((NOT ((v0.c0 IN ())))) ORDER BY (((((+ (v0.c0)))AND((('1453832799') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(TYPEOF(vt0.c0))), LOWER(DISTINCT vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((((+ (v0.c0)))AND((('1453832799') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(TYPEOF(vt0.c0))), LOWER(DISTINCT vt0.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((NOT ((v0.c0 IN ())))) ORDER BY (((((+ (v0.c0)))AND((('1453832799') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(TYPEOF(vt0.c0))), LOWER(DISTINCT vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((((+ (v0.c0)))AND((('1453832799') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(TYPEOF(vt0.c0))), LOWER(DISTINCT vt0.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((NOT ((v0.c0 IN ())))) ORDER BY (((((+ (v0.c0)))AND((('1453832799') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(TYPEOF(vt0.c0))), LOWER(DISTINCT vt0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('-1e500');
SELECT SUM(count) FROM (SELECT ALL (('-1e500') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('-1e500');
SELECT SUM(count) FROM (SELECT ALL (('-1e500') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('-1e500');
SELECT * FROM vt0, v0 WHERE ((NOT ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT ((v0.c0 IN ()))));
SELECT * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS REAL))OR(NULL))) ORDER BY CAST(rt0.c4 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))OR(NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c4 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS REAL))OR(NULL))) ORDER BY CAST(rt0.c4 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))OR(NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c4 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS REAL))OR(NULL))) ORDER BY CAST(rt0.c4 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((- (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (+ (v0.c0)), CAST(v0.c0 AS NUMERIC), '574615314' COLLATE RTRIM))==(((x'' IN (v0.c0)), ((v0.c0)/(v0.c0)), ((v0.c0)*(0.675368482653915)), 0.9820969244587505, ((v0.c0)<(v0.c0)))))) ORDER BY ((((((v0.c0))=((v0.c0))), (v0.c0 IN ()), CASE WHEN v0.c0 THEN v0.c0 END))<(((x'c21f' IN ()), (NOT (NULL)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((- (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (+ (v0.c0)), CAST(v0.c0 AS NUMERIC), '574615314' COLLATE RTRIM))=(((x'' IN (v0.c0)), ((v0.c0)/(v0.c0)), ((v0.c0)*(0.675368482653915)), 0.9820969244587505, ((v0.c0)<(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0))=((v0.c0))), (v0.c0 IN ()), CASE WHEN v0.c0 THEN v0.c0 END))<(((x'c21f' IN ()), (NOT (NULL)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))));
SELECT * FROM v0 WHERE (((((- (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (+ (v0.c0)), CAST(v0.c0 AS NUMERIC), '574615314' COLLATE RTRIM))==(((x'' IN (v0.c0)), ((v0.c0)/(v0.c0)), ((v0.c0)*(0.675368482653915)), 0.9820969244587505, ((v0.c0)<(v0.c0)))))) ORDER BY ((((((v0.c0))=((v0.c0))), (v0.c0 IN ()), CASE WHEN v0.c0 THEN v0.c0 END))<(((x'c21f' IN ()), (NOT (NULL)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((- (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (+ (v0.c0)), CAST(v0.c0 AS NUMERIC), '574615314' COLLATE RTRIM))=(((x'' IN (v0.c0)), ((v0.c0)/(v0.c0)), ((v0.c0)*(0.675368482653915)), 0.9820969244587505, ((v0.c0)<(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0))=((v0.c0))), (v0.c0 IN ()), CASE WHEN v0.c0 THEN v0.c0 END))<(((x'c21f' IN ()), (NOT (NULL)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))));
SELECT * FROM v0 WHERE (((((- (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), (+ (v0.c0)), CAST(v0.c0 AS NUMERIC), '574615314' COLLATE RTRIM))==(((x'' IN (v0.c0)), ((v0.c0)/(v0.c0)), ((v0.c0)*(0.675368482653915)), 0.9820969244587505, ((v0.c0)<(v0.c0)))))) ORDER BY ((((((v0.c0))=((v0.c0))), (v0.c0 IN ()), CASE WHEN v0.c0 THEN v0.c0 END))<(((x'c21f' IN ()), (NOT (NULL)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt0 ON UNLIKELY(DISTINCT (((rt0.c2, rt0.c1, rt0.c4))>=((v0.c0, rt0.c3, rt0.c3)))) WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (0.23117598731666855))) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (0.23117598731666855))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON UNLIKELY(DISTINCT (((rt0.c2, rt0.c1, rt0.c4))>=((v0.c0, rt0.c3, rt0.c3)))) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt0 ON UNLIKELY(DISTINCT (((rt0.c2, rt0.c1, rt0.c4))>=((v0.c0, rt0.c3, rt0.c3)))) WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (0.23117598731666855))) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (0.23117598731666855))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON UNLIKELY(DISTINCT (((rt0.c2, rt0.c1, rt0.c4))>=((v0.c0, rt0.c3, rt0.c3)))) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt0 ON UNLIKELY(DISTINCT (((rt0.c2, rt0.c1, rt0.c4))>=((v0.c0, rt0.c3, rt0.c3)))) WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))) AND (0.23117598731666855))) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN x'' THEN COALESCE(vt0.c0, vt0.c0) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN x'' THEN COALESCE(vt0.c0, vt0.c0) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN x'' THEN COALESCE(vt0.c0, vt0.c0) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN x'' THEN COALESCE(vt0.c0, vt0.c0) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN x'' THEN COALESCE(vt0.c0, vt0.c0) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON '2^k' CROSS JOIN v0 ON ((0xffffffffde676247)&(rt0.c2)) COLLATE BINARY WHERE ((((rt0.c1)) BETWEEN ((PRINTF(rt0.c0, rt0.c4, ''))) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (v0.c0)))))) ORDER BY ABS(((rt0.c4)|(rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((PRINTF(rt0.c0, rt0.c4, ''))) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (v0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON '2^k' CROSS JOIN v0 ON ((0xffffffffde676247)&(rt0.c2)) COLLATE BINARY ORDER BY ABS(((rt0.c4)|(rt0.c3))) DESC);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON '2^k' CROSS JOIN v0 ON ((0xffffffffde676247)&(rt0.c2)) COLLATE BINARY WHERE ((((rt0.c1)) BETWEEN ((PRINTF(rt0.c0, rt0.c4, ''))) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (v0.c0)))))) ORDER BY ABS(((rt0.c4)|(rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((PRINTF(rt0.c0, rt0.c4, ''))) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (v0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON '2^k' CROSS JOIN v0 ON ((0xffffffffde676247)&(rt0.c2)) COLLATE BINARY ORDER BY ABS(((rt0.c4)|(rt0.c3))) DESC);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON '2^k' CROSS JOIN v0 ON ((0xffffffffde676247)&(rt0.c2)) COLLATE BINARY WHERE ((((rt0.c1)) BETWEEN ((PRINTF(rt0.c0, rt0.c4, ''))) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (v0.c0)))))) ORDER BY ABS(((rt0.c4)|(rt0.c3))) DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON x'' WHERE (((((((((((rt0.c1)%(rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR('0.0')))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))OR(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY ((((CASE rt0.c2  WHEN rt0.c4 THEN '0.8261053589514783' END)OR(((rt0.c4) IS TRUE))))OR((NOT (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)%(rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR('0.0')))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))OR(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON x'' ORDER BY ((((CASE rt0.c2  WHEN rt0.c4 THEN '0.8261053589514783' END)OR(((rt0.c4) IS TRUE))))OR((NOT (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON x'' WHERE (((((((((((rt0.c1)%(rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR('0.0')))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))OR(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY ((((CASE rt0.c2  WHEN rt0.c4 THEN '0.8261053589514783' END)OR(((rt0.c4) IS TRUE))))OR((NOT (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)%(rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR('0.0')))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))OR(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON x'' ORDER BY ((((CASE rt0.c2  WHEN rt0.c4 THEN '0.8261053589514783' END)OR(((rt0.c4) IS TRUE))))OR((NOT (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON x'' WHERE (((((((((((rt0.c1)%(rt0.c1)))OR(rt0.c0 COLLATE BINARY)))OR('0.0')))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)))OR(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY ((((CASE rt0.c2  WHEN rt0.c4 THEN '0.8261053589514783' END)OR(((rt0.c4) IS TRUE))))OR((NOT (rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4 IN ()))=(((rt0.c2)<<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ()))==(((rt0.c2)<<(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4 IN ()))=(((rt0.c2)<<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ()))==(((rt0.c2)<<(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4 IN ()))=(((rt0.c2)<<(rt0.c3)))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL) WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 END) BETWEEN (((((rt0.c4)OR(rt0.c3)))AND(rt0.c3))) AND (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 END) BETWEEN (((((rt0.c4)OR(rt0.c3)))AND(rt0.c3))) AND (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL) WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 END) BETWEEN (((((rt0.c4)OR(rt0.c3)))AND(rt0.c3))) AND (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 END) BETWEEN (((((rt0.c4)OR(rt0.c3)))AND(rt0.c3))) AND (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL) WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 END) BETWEEN (((((rt0.c4)OR(rt0.c3)))AND(rt0.c3))) AND (SQLITE_SOURCE_ID())));
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(3.59414051E8)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(3.59414051E8)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(3.59414051E8)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(3.59414051E8)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(3.59414051E8)) IN ()));
SELECT * FROM vt0 WHERE (((((TYPEOF(DISTINCT vt0.c0))AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (-1) AND (0.46780056179563945))))) ORDER BY LOWER(((vt0.c0)/(vt0.c0))) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c0)<(vt0.c0))))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(DISTINCT vt0.c0))AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (-1) AND (0.46780056179563945))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(((vt0.c0)/(vt0.c0))) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c0)<(vt0.c0))))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((TYPEOF(DISTINCT vt0.c0))AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (-1) AND (0.46780056179563945))))) ORDER BY LOWER(((vt0.c0)/(vt0.c0))) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c0)<(vt0.c0))))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(DISTINCT vt0.c0))AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (-1) AND (0.46780056179563945))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(((vt0.c0)/(vt0.c0))) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c0)<(vt0.c0))))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((TYPEOF(DISTINCT vt0.c0))AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (-1) AND (0.46780056179563945))))) ORDER BY LOWER(((vt0.c0)/(vt0.c0))) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c0)<(vt0.c0))))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (UPPER(vt0.c0))));
SELECT ALL * FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 END, '1796734155', ((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0))))!=(((rt0.c2 IN ()), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)), LIKELY(rt0.c2))))) ORDER BY ((((((((CAST(rt0.c2 AS REAL))AND(rt0.c0)))AND((+ (rt0.c2)))))AND(CASE NULL  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END)))OR(CASE WHEN 0.33175151930004443 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'ccbebc54' THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN rt0.c0 END, '1796734155', ((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0))))<>(((rt0.c2 IN ()), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)), LIKELY(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CAST(rt0.c2 AS REAL))AND(rt0.c0)))AND((+ (rt0.c2)))))AND(CASE NULL  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END)))OR(CASE WHEN 0.33175151930004443 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'ccbebc54' THEN rt0.c1 END)));
SELECT ALL * FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 END, '1796734155', ((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0))))!=(((rt0.c2 IN ()), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)), LIKELY(rt0.c2))))) ORDER BY ((((((((CAST(rt0.c2 AS REAL))AND(rt0.c0)))AND((+ (rt0.c2)))))AND(CASE NULL  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END)))OR(CASE WHEN 0.33175151930004443 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'ccbebc54' THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN rt0.c0 END, '1796734155', ((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0))))<>(((rt0.c2 IN ()), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)), LIKELY(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CAST(rt0.c2 AS REAL))AND(rt0.c0)))AND((+ (rt0.c2)))))AND(CASE NULL  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END)))OR(CASE WHEN 0.33175151930004443 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'ccbebc54' THEN rt0.c1 END)));
SELECT ALL * FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 END, '1796734155', ((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0))))!=(((rt0.c2 IN ()), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)), LIKELY(rt0.c2))))) ORDER BY ((((((((CAST(rt0.c2 AS REAL))AND(rt0.c0)))AND((+ (rt0.c2)))))AND(CASE NULL  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END)))OR(CASE WHEN 0.33175151930004443 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'ccbebc54' THEN rt0.c1 END));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))|(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0)))|(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))|(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0)))|(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))|(((vt0.c0) IS TRUE))));
SELECT ALL * FROM v0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c3 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c4 THEN rt0.c3 END) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c3 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c4 THEN rt0.c3 END) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c3 END) IS TRUE));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((rt0.c0)+(x''))) ORDER BY (CHAR(rt0.c0) IN (((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)+(x''))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (CHAR(rt0.c0) IN (((vt0.c0)IS(vt0.c0)))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((rt0.c0)+(x''))) ORDER BY (CHAR(rt0.c0) IN (((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)+(x''))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (CHAR(rt0.c0) IN (((vt0.c0)IS(vt0.c0)))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((rt0.c0)+(x''))) ORDER BY (CHAR(rt0.c0) IN (((vt0.c0)IS(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)||(rt0.c2))) IS FALSE)) ORDER BY json_array_length((~ (vt0.c0)), CAST(rt0.c2 AS INTEGER)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)||(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY json_array_length((~ (vt0.c0)), CAST(rt0.c2 AS INTEGER)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)||(rt0.c2))) IS FALSE)) ORDER BY json_array_length((~ (vt0.c0)), CAST(rt0.c2 AS INTEGER)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)||(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY json_array_length((~ (vt0.c0)), CAST(rt0.c2 AS INTEGER)) DESC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((((((((((((((rt0.c0, rt0.c3, rt0.c4, rt0.c4, rt0.c1))!=((rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c1))))OR((((vt0.c0, rt0.c4, rt0.c4))!=((rt0.c0, v0.c0, rt0.c4))))))AND(vt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 END)))AND((rt0.c1 IN ()))))OR(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))))OR((- (rt0.c0)))) RIGHT OUTER JOIN v0 ON 0.6164633379358972 WHERE (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c1 END) NOT BETWEEN (rt0.c1) AND (((((rt0.c0)AND(rt0.c3)))AND(rt0.c4))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c1 END) NOT BETWEEN (rt0.c1) AND (((((rt0.c0)AND(rt0.c3)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((((((((((((rt0.c0, rt0.c3, rt0.c4, rt0.c4, rt0.c1))<>((rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c1))))OR((((vt0.c0, rt0.c4, rt0.c4))<>((rt0.c0, v0.c0, rt0.c4))))))AND(vt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 END)))AND((rt0.c1 IN ()))))OR(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))))OR((- (rt0.c0)))) RIGHT OUTER JOIN v0 ON 0.6164633379358972 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((((((((((((((rt0.c0, rt0.c3, rt0.c4, rt0.c4, rt0.c1))!=((rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c1))))OR((((vt0.c0, rt0.c4, rt0.c4))!=((rt0.c0, v0.c0, rt0.c4))))))AND(vt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 END)))AND((rt0.c1 IN ()))))OR(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))))OR((- (rt0.c0)))) RIGHT OUTER JOIN v0 ON 0.6164633379358972 WHERE (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c1 END) NOT BETWEEN (rt0.c1) AND (((((rt0.c0)AND(rt0.c3)))AND(rt0.c4))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c1 END) NOT BETWEEN (rt0.c1) AND (((((rt0.c0)AND(rt0.c3)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((((((((((((rt0.c0, rt0.c3, rt0.c4, rt0.c4, rt0.c1))<>((rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c1))))OR((((vt0.c0, rt0.c4, rt0.c4))<>((rt0.c0, v0.c0, rt0.c4))))))AND(vt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 END)))AND((rt0.c1 IN ()))))OR(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))))OR((- (rt0.c0)))) RIGHT OUTER JOIN v0 ON 0.6164633379358972 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((((((((((((((rt0.c0, rt0.c3, rt0.c4, rt0.c4, rt0.c1))!=((rt0.c2, vt0.c0, rt0.c4, rt0.c1, rt0.c1))))OR((((vt0.c0, rt0.c4, rt0.c4))!=((rt0.c0, v0.c0, rt0.c4))))))AND(vt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 END)))AND((rt0.c1 IN ()))))OR(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)))))OR((- (rt0.c0)))) RIGHT OUTER JOIN v0 ON 0.6164633379358972 WHERE (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN x'' WHEN rt0.c4 THEN rt0.c1 END) NOT BETWEEN (rt0.c1) AND (((((rt0.c0)AND(rt0.c3)))AND(rt0.c4))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS TEXT)) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS TEXT)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS TEXT)) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS TEXT)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) AS TEXT)) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))||(((vt0.c0)GLOB(vt0.c0)))));
SELECT * FROM v0 WHERE ((((((v0.c0))==((v0.c0)))) NOT BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))=((v0.c0)))) NOT BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0))==((v0.c0)))) NOT BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))=((v0.c0)))) NOT BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0))==((v0.c0)))) NOT BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c2 IN ('0.8188580788045214')) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ('0.8188580788045214')) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c2 IN ('0.8188580788045214')) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ('0.8188580788045214')) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c2 IN ('0.8188580788045214')) AS REAL));
SELECT ALL * FROM rt0, vt0, v0 WHERE (CAST(((rt0.c2)-(rt0.c0)) AS TEXT)) ORDER BY (((rt0.c0 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)-(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c0 IN ())) IS FALSE));
SELECT ALL * FROM rt0, vt0, v0 WHERE (CAST(((rt0.c2)-(rt0.c0)) AS TEXT)) ORDER BY (((rt0.c0 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)-(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c0 IN ())) IS FALSE));
SELECT ALL * FROM rt0, vt0, v0 WHERE (CAST(((rt0.c2)-(rt0.c0)) AS TEXT)) ORDER BY (((rt0.c0 IN ())) IS FALSE);
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((((v0.c0)AND(rt0.c1)))OR(rt0.c1))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((((((v0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))AND('0.13638228201554925')))) CROSS JOIN rt0 ON ((((vt0.c0)!=(v0.c0))) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(rt0.c4)))OR(NULL)))) WHERE ((((rt0.c2 IN ()))IS(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))IS(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((v0.c0)AND(rt0.c1)))OR(rt0.c1))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((((((v0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))AND('0.13638228201554925')))) CROSS JOIN rt0 ON ((((vt0.c0)<>(v0.c0))) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(rt0.c4)))OR(NULL)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((((v0.c0)AND(rt0.c1)))OR(rt0.c1))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((((((v0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))AND('0.13638228201554925')))) CROSS JOIN rt0 ON ((((vt0.c0)!=(v0.c0))) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(rt0.c4)))OR(NULL)))) WHERE ((((rt0.c2 IN ()))IS(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))IS(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((v0.c0)AND(rt0.c1)))OR(rt0.c1))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((((((v0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))AND('0.13638228201554925')))) CROSS JOIN rt0 ON ((((vt0.c0)<>(v0.c0))) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(rt0.c4)))OR(NULL)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((((v0.c0)AND(rt0.c1)))OR(rt0.c1))) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((((((((v0.c0)AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))AND('0.13638228201554925')))) CROSS JOIN rt0 ON ((((vt0.c0)!=(v0.c0))) BETWEEN (vt0.c0) AND (((((vt0.c0)OR(rt0.c4)))OR(NULL)))) WHERE ((((rt0.c2 IN ()))IS(((rt0.c3) IS TRUE))));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((rt0.c4 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c4 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((rt0.c4 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c4 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((rt0.c4 COLLATE NOCASE IN ()));
SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0))>((v0.c0)))))) ORDER BY ((((LIKELY(DISTINCT v0.c0))AND((- (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c0))>((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((LIKELY(DISTINCT v0.c0))AND((- (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0))>((v0.c0)))))) ORDER BY ((((LIKELY(DISTINCT v0.c0))AND((- (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c0))>((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((LIKELY(DISTINCT v0.c0))AND((- (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0))>((v0.c0)))))) ORDER BY ((((LIKELY(DISTINCT v0.c0))AND((- (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (TRIM(CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(CAST(vt0.c0 AS NUMERIC)));
SELECT * FROM vt0, rt0 WHERE ((+ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((+ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((+ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT * FROM rt0, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN rt0.c4 COLLATE NOCASE THEN rt0.c4 WHEN ((0.21393478926327347)>>(rt0.c3)) THEN UPPER('') WHEN ((rt0.c4) IS FALSE) THEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((0.061960780378018776))) ELSE (+ (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN rt0.c4 COLLATE NOCASE THEN rt0.c4 WHEN ((0.21393478926327347)>>(rt0.c3)) THEN UPPER('') WHEN ((rt0.c4) IS FALSE) THEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((0.061960780378018776))) ELSE (+ (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN rt0.c4 COLLATE NOCASE THEN rt0.c4 WHEN ((0.21393478926327347)>>(rt0.c3)) THEN UPPER('') WHEN ((rt0.c4) IS FALSE) THEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((0.061960780378018776))) ELSE (+ (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c0))  WHEN rt0.c4 COLLATE NOCASE THEN rt0.c4 WHEN ((0.21393478926327347)>>(rt0.c3)) THEN UPPER('') WHEN ((rt0.c4) IS FALSE) THEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((0.061960780378018776))) ELSE (+ (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN rt0.c4 COLLATE NOCASE THEN rt0.c4 WHEN ((0.21393478926327347)>>(rt0.c3)) THEN UPPER('') WHEN ((rt0.c4) IS FALSE) THEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((0.061960780378018776))) ELSE (+ (rt0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE ((' &燲 vQ' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((' &燲 vQ' IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((' &燲 vQ' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((' &燲 vQ' IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((' &燲 vQ' IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((~ (NULL)) COLLATE RTRIM) ORDER BY (((vt0.c0 IN (vt0.c0)))LIKE(NULL));
SELECT SUM(count) FROM (SELECT (((~ (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0)))LIKE(NULL)));
SELECT COUNT(*) FROM vt0 WHERE ((~ (NULL)) COLLATE RTRIM) ORDER BY (((vt0.c0 IN (vt0.c0)))LIKE(NULL));
SELECT SUM(count) FROM (SELECT (((~ (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0)))LIKE(NULL)));
SELECT COUNT(*) FROM vt0 WHERE ((~ (NULL)) COLLATE RTRIM) ORDER BY (((vt0.c0 IN (vt0.c0)))LIKE(NULL));
SELECT ALL * FROM v0 WHERE (-1166355856) ORDER BY ((((v0.c0) NOTNULL))>=(((v0.c0)*(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-1166355856) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOTNULL))>=(((v0.c0)*(v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE (-1166355856) ORDER BY ((((v0.c0) NOTNULL))>=(((v0.c0)*(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-1166355856) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOTNULL))>=(((v0.c0)*(v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE (-1166355856) ORDER BY ((((v0.c0) NOTNULL))>=(((v0.c0)*(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((- (v0.c0)) IN (((rt0.c1) ISNULL), ((v0.c0)-(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((- (v0.c0)) IN (((rt0.c1) ISNULL), ((v0.c0)-(rt0.c1))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((- (v0.c0)) IN (((rt0.c1) ISNULL), ((v0.c0)-(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((- (v0.c0)) IN (((rt0.c1) ISNULL), ((v0.c0)-(rt0.c1))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((- (v0.c0)) IN (((rt0.c1) ISNULL), ((v0.c0)-(rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER)) ORDER BY CASE WHEN json_type(vt0.c0) THEN (NOT (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN json_type(vt0.c0) THEN (NOT (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER)) ORDER BY CASE WHEN json_type(vt0.c0) THEN (NOT (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN json_type(vt0.c0) THEN (NOT (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER)) ORDER BY CASE WHEN json_type(vt0.c0) THEN (NOT (vt0.c0)) END;
SELECT * FROM vt0, v0 WHERE ((((v0.c0 IN ()))AND(((vt0.c0) IS FALSE)))) ORDER BY ((v0.c0)<=(vt0.c0)) COLLATE RTRIM  NULLS FIRST, v0.c0 ASC, ((((((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (v0.c0)))))AND(((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND((NOT (0.8018447268764697)))))AND((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0)<=(vt0.c0)) COLLATE RTRIM  NULLS FIRST, v0.c0 ASC, ((((((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (v0.c0)))))AND(((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND((NOT (0.8018447268764697)))))AND((v0.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((v0.c0 IN ()))AND(((vt0.c0) IS FALSE)))) ORDER BY ((v0.c0)<=(vt0.c0)) COLLATE RTRIM  NULLS FIRST, v0.c0 ASC, ((((((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (v0.c0)))))AND(((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND((NOT (0.8018447268764697)))))AND((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0)<=(vt0.c0)) COLLATE RTRIM  NULLS FIRST, v0.c0 ASC, ((((((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((- (v0.c0)))))AND(((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND((NOT (0.8018447268764697)))))AND((v0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)IS NOT(rt0.c1))) NOT BETWEEN (ABS(DISTINCT rt0.c1)) AND (((rt0.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)IS NOT(rt0.c1))) NOT BETWEEN (ABS(DISTINCT rt0.c1)) AND (((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)IS NOT(rt0.c1))) NOT BETWEEN (ABS(DISTINCT rt0.c1)) AND (((rt0.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)IS NOT(rt0.c1))) NOT BETWEEN (ABS(DISTINCT rt0.c1)) AND (((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)IS NOT(rt0.c1))) NOT BETWEEN (ABS(DISTINCT rt0.c1)) AND (((rt0.c4) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS TEXT)) BETWEEN ((- (rt0.c4))) AND (((rt0.c2)&(0.7148894162840713))))) ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT)) BETWEEN ((- (rt0.c4))) AND (((rt0.c2)&(0.7148894162840713))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS TEXT)) BETWEEN ((- (rt0.c4))) AND (((rt0.c2)&(0.7148894162840713))))) ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT)) BETWEEN ((- (rt0.c4))) AND (((rt0.c2)&(0.7148894162840713))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS TEXT)) BETWEEN ((- (rt0.c4))) AND (((rt0.c2)&(0.7148894162840713))))) ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (CASE ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c2))  WHEN (rt0.c4 IN ()) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) ELSE rt0.c1 END) ORDER BY (~ ((('') NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c2))  WHEN (rt0.c4 IN ()) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) ELSE rt0.c1 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ ((('') NOT NULL))) ASC);
SELECT * FROM rt0, vt0 WHERE (CASE ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c2))  WHEN (rt0.c4 IN ()) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) ELSE rt0.c1 END) ORDER BY (~ ((('') NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c2))  WHEN (rt0.c4 IN ()) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) ELSE rt0.c1 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ ((('') NOT NULL))) ASC);
SELECT * FROM rt0, vt0 WHERE (CASE ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c2))  WHEN (rt0.c4 IN ()) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) ELSE rt0.c1 END) ORDER BY (~ ((('') NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (NULL) ORDER BY CAST(NULL AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(NULL AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (NULL) ORDER BY CAST(NULL AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(NULL AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (NULL) ORDER BY CAST(NULL AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((rt0.c3 IN (NULL, v0.c0))) AND (((((rt0.c3)OR(rt0.c3)))OR(v0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((NULL)) AND ((CASE WHEN -1319188356 THEN vt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((rt0.c3 IN (NULL, v0.c0))) AND (((((rt0.c3)OR(rt0.c3)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((vt0.c0)) BETWEEN ((NULL)) AND ((CASE WHEN -1319188356 THEN vt0.c0 END))) DESC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((rt0.c3 IN (NULL, v0.c0))) AND (((((rt0.c3)OR(rt0.c3)))OR(v0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((NULL)) AND ((CASE WHEN -1319188356 THEN vt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((rt0.c3 IN (NULL, v0.c0))) AND (((((rt0.c3)OR(rt0.c3)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((vt0.c0)) BETWEEN ((NULL)) AND ((CASE WHEN -1319188356 THEN vt0.c0 END))) DESC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((rt0.c3 IN (NULL, v0.c0))) AND (((((rt0.c3)OR(rt0.c3)))OR(v0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((NULL)) AND ((CASE WHEN -1319188356 THEN vt0.c0 END))) DESC;
SELECT ALL * FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c0 END)OR(LIKELIHOOD(rt0.c4, 0.5714871681338011))))AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c3 THEN rt0.c0 END)OR(LIKELIHOOD(rt0.c4, 0.5714871681338011))))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c0 END)OR(LIKELIHOOD(rt0.c4, 0.5714871681338011))))AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c3 THEN rt0.c0 END)OR(LIKELIHOOD(rt0.c4, 0.5714871681338011))))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c0 END)OR(LIKELIHOOD(rt0.c4, 0.5714871681338011))))AND(rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))==(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))=(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))==(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))=(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))==(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0 IN ()))%(((rt0.c4)*(rt0.c0))))) ORDER BY CAST(CASE rt0.c4  WHEN v0.c0 THEN rt0.c1 END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))%(((rt0.c4)*(rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(CASE rt0.c4  WHEN v0.c0 THEN rt0.c1 END AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0 IN ()))%(((rt0.c4)*(rt0.c0))))) ORDER BY CAST(CASE rt0.c4  WHEN v0.c0 THEN rt0.c1 END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))%(((rt0.c4)*(rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(CASE rt0.c4  WHEN v0.c0 THEN rt0.c1 END AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0 IN ()))%(((rt0.c4)*(rt0.c0))))) ORDER BY CAST(CASE rt0.c4  WHEN v0.c0 THEN rt0.c1 END AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((rt0.c2))<=((rt0.c1))) COLLATE BINARY FULL OUTER JOIN rt0 ON ((x'')&('')) WHERE (CAST(((NULL)*(NULL)) AS NUMERIC)) ORDER BY 0.8019797698724902 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)*(NULL)) AS NUMERIC)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((rt0.c2))<=((rt0.c1))) COLLATE BINARY FULL OUTER JOIN rt0 ON ((x'')&('')) ORDER BY 0.8019797698724902 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((rt0.c2))<=((rt0.c1))) COLLATE BINARY FULL OUTER JOIN rt0 ON ((x'')&('')) WHERE (CAST(((NULL)*(NULL)) AS NUMERIC)) ORDER BY 0.8019797698724902 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)*(NULL)) AS NUMERIC)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((rt0.c2))<=((rt0.c1))) COLLATE BINARY FULL OUTER JOIN rt0 ON ((x'')&('')) ORDER BY 0.8019797698724902 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((vt0.c0) NOTNULL))AND(((rt0.c0) ISNULL))))AND(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))AND(((rt0.c0) ISNULL))))AND(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((vt0.c0) NOTNULL))AND(((rt0.c0) ISNULL))))AND(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))AND(((rt0.c0) ISNULL))))AND(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((vt0.c0) NOTNULL))AND(((rt0.c0) ISNULL))))AND(CAST(v0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (((v0.c0)LIKE(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)LIKE(rt0.c4))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (((v0.c0)LIKE(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)LIKE(rt0.c4))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (((v0.c0)LIKE(rt0.c4)))));
SELECT ALL * FROM v0, rt0 WHERE (CAST((((rt0.c1))>=((rt0.c4))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))>=((rt0.c4))) AS INTEGER)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST((((rt0.c1))>=((rt0.c4))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))>=((rt0.c4))) AS INTEGER)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST((((rt0.c1))>=((rt0.c4))) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((((((CAST(rt0.c3 AS REAL))AND(((vt0.c0)&(rt0.c4)))))OR(((((rt0.c1)AND(rt0.c0)))AND(v0.c0)))))OR(rt0.c2)))AND(((rt0.c3)LIKE(rt0.c1))))) ORDER BY rt0.c2  NULLS FIRST, (~ ((NOT (NULL)))) ASC  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c3 AS REAL))AND(((vt0.c0)&(rt0.c4)))))OR(((((rt0.c1)AND(rt0.c0)))AND(v0.c0)))))OR(rt0.c2)))AND(((rt0.c3)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c2  NULLS FIRST, (~ ((NOT (NULL)))) ASC  NULLS FIRST, NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((((((CAST(rt0.c3 AS REAL))AND(((vt0.c0)&(rt0.c4)))))OR(((((rt0.c1)AND(rt0.c0)))AND(v0.c0)))))OR(rt0.c2)))AND(((rt0.c3)LIKE(rt0.c1))))) ORDER BY rt0.c2  NULLS FIRST, (~ ((NOT (NULL)))) ASC  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c3 AS REAL))AND(((vt0.c0)&(rt0.c4)))))OR(((((rt0.c1)AND(rt0.c0)))AND(v0.c0)))))OR(rt0.c2)))AND(((rt0.c3)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c2  NULLS FIRST, (~ ((NOT (NULL)))) ASC  NULLS FIRST, NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((((((CAST(rt0.c3 AS REAL))AND(((vt0.c0)&(rt0.c4)))))OR(((((rt0.c1)AND(rt0.c0)))AND(v0.c0)))))OR(rt0.c2)))AND(((rt0.c3)LIKE(rt0.c1))))) ORDER BY rt0.c2  NULLS FIRST, (~ ((NOT (NULL)))) ASC  NULLS FIRST, NULL ASC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE ((- (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((- (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((- (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((- (v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 WHERE (COALESCE(((v0.c0) ISNULL), ((v0.c0) NOT NULL), ((v0.c0) ISNULL), ((v0.c0)|(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((v0.c0) ISNULL), ((v0.c0) NOT NULL), ((v0.c0) ISNULL), ((v0.c0)|(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (COALESCE(((v0.c0) ISNULL), ((v0.c0) NOT NULL), ((v0.c0) ISNULL), ((v0.c0)|(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((v0.c0) ISNULL), ((v0.c0) NOT NULL), ((v0.c0) ISNULL), ((v0.c0)|(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (COALESCE(((v0.c0) ISNULL), ((v0.c0) NOT NULL), ((v0.c0) ISNULL), ((v0.c0)|(v0.c0))));
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS TRUE));
SELECT ALL * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN DATE(vt0.c0, vt0.c0, vt0.c0) END) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN 0.3270894485574486 THEN (vt0.c0 IN ()) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST, (((CAST(vt0.c0 AS NUMERIC)))<=((vt0.c0 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN DATE(vt0.c0, vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN 0.3270894485574486 THEN (vt0.c0 IN ()) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST, (((CAST(vt0.c0 AS NUMERIC)))<=((vt0.c0 COLLATE NOCASE))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN DATE(vt0.c0, vt0.c0, vt0.c0) END) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN 0.3270894485574486 THEN (vt0.c0 IN ()) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST, (((CAST(vt0.c0 AS NUMERIC)))<=((vt0.c0 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN DATE(vt0.c0, vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN 0.3270894485574486 THEN (vt0.c0 IN ()) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST, (((CAST(vt0.c0 AS NUMERIC)))<=((vt0.c0 COLLATE NOCASE))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN DATE(vt0.c0, vt0.c0, vt0.c0) END) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN 0.3270894485574486 THEN (vt0.c0 IN ()) WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST, (((CAST(vt0.c0 AS NUMERIC)))<=((vt0.c0 COLLATE NOCASE))) ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((-2110252644)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ())))) WHERE (TRIM(DISTINCT ((0.6057375622882963)>>(vt0.c0)), ''));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((0.6057375622882963)>>(vt0.c0)), '')) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((-2110252644)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ())))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((-2110252644)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ())))) WHERE (TRIM(DISTINCT ((0.6057375622882963)>>(vt0.c0)), ''));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((0.6057375622882963)>>(vt0.c0)), '')) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((-2110252644)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ())))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((-2110252644)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((vt0.c0 IN ())))) WHERE (TRIM(DISTINCT ((0.6057375622882963)>>(vt0.c0)), ''));
SELECT COUNT(*) FROM rt0 WHERE (MAX(CAST(rt0.c2 AS INTEGER), ((rt0.c2)=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((MAX(CAST(rt0.c2 AS INTEGER), ((rt0.c2)==(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (MAX(CAST(rt0.c2 AS INTEGER), ((rt0.c2)=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((MAX(CAST(rt0.c2 AS INTEGER), ((rt0.c2)==(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (MAX(CAST(rt0.c2 AS INTEGER), ((rt0.c2)=(rt0.c2))));
SELECT ALL * FROM rt0, v0 WHERE (json_quote(rt0.c4) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((json_quote(rt0.c4) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (json_quote(rt0.c4) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((json_quote(rt0.c4) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (json_quote(rt0.c4) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c1)%(vt0.c0))) AND (CAST(rt0.c3 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c1)%(vt0.c0))) AND (CAST(rt0.c3 AS REAL))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c1)%(vt0.c0))) AND (CAST(rt0.c3 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c1)%(vt0.c0))) AND (CAST(rt0.c3 AS REAL))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c1)%(vt0.c0))) AND (CAST(rt0.c3 AS REAL))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(((rt0.c0) IS FALSE))))OR('1062850556'))) ORDER BY (((rt0.c4)=(x'8132')) IN ((rt0.c2 IN ()), TRIM(rt0.c2, rt0.c4))) DESC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(((rt0.c0) IS FALSE))))OR('1062850556'))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4)==(x'8132')) IN ((rt0.c2 IN ()), TRIM(rt0.c2, rt0.c4))) DESC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER)) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(((rt0.c0) IS FALSE))))OR('1062850556'))) ORDER BY (((rt0.c4)=(x'8132')) IN ((rt0.c2 IN ()), TRIM(rt0.c2, rt0.c4))) DESC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(((rt0.c0) IS FALSE))))OR('1062850556'))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4)==(x'8132')) IN ((rt0.c2 IN ()), TRIM(rt0.c2, rt0.c4))) DESC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER)) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(((rt0.c0) IS FALSE))))OR('1062850556'))) ORDER BY (((rt0.c4)=(x'8132')) IN ((rt0.c2 IN ()), TRIM(rt0.c2, rt0.c4))) DESC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER)) IS FALSE) DESC  NULLS FIRST;
SELECT * FROM vt0, v0, rt0 WHERE ((NOT ((((rt0.c3))<((vt0.c0)))))) ORDER BY ((((rt0.c2)>=(v0.c0)))IS(((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c3))<((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c2)>=(v0.c0)))IS(((rt0.c0) IS FALSE))));
SELECT * FROM vt0, v0, rt0 WHERE ((NOT ((((rt0.c3))<((vt0.c0)))))) ORDER BY ((((rt0.c2)>=(v0.c0)))IS(((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c3))<((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c2)>=(v0.c0)))IS(((rt0.c0) IS FALSE))));
SELECT * FROM vt0, v0, rt0 WHERE ((NOT ((((rt0.c3))<((vt0.c0)))))) ORDER BY ((((rt0.c2)>=(v0.c0)))IS(((rt0.c0) IS FALSE)));
SELECT COUNT(*) FROM v0 WHERE ((+ (0.6545563315972114)));
SELECT SUM(count) FROM (SELECT ALL (((+ (0.6545563315972114))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (0.6545563315972114)));
SELECT SUM(count) FROM (SELECT ALL (((+ (0.6545563315972114))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (0.6545563315972114)));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((v0.c0)IS NOT(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS NOT(rt0.c2))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((v0.c0)IS NOT(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS NOT(rt0.c2))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((v0.c0)IS NOT(rt0.c2)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST('1266286180' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST('1266286180' AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST('1266286180' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST('1266286180' AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST('1266286180' AS BLOB));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))) FULL OUTER JOIN rt0 ON ((((((((x'')OR(LIKELY(DISTINCT vt0.c0))))OR((rt0.c2 IN ()))))OR(0.6646072047218288)))OR((~ (rt0.c1)))) WHERE (((vt0.c0)<=(NULLIF(DISTINCT rt0.c4, v0.c0)))) ORDER BY ((TRIM(DISTINCT vt0.c0)) BETWEEN (TRIM(DISTINCT rt0.c1)) AND ((+ (rt0.c3))))  NULLS FIRST, 0.04723238012193609, ((v0.c0 COLLATE NOCASE) BETWEEN (rt0.c4 COLLATE RTRIM) AND (CAST(rt0.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=(NULLIF(DISTINCT rt0.c4, v0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))) FULL OUTER JOIN rt0 ON ((((((((x'')OR(LIKELY(DISTINCT vt0.c0))))OR((rt0.c2 IN ()))))OR(0.6646072047218288)))OR((~ (rt0.c1)))) ORDER BY ((TRIM(DISTINCT vt0.c0)) BETWEEN (TRIM(DISTINCT rt0.c1)) AND ((+ (rt0.c3))))  NULLS FIRST, 0.04723238012193609, ((v0.c0 COLLATE NOCASE) BETWEEN (rt0.c4 COLLATE RTRIM) AND (CAST(rt0.c1 AS BLOB))) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))) FULL OUTER JOIN rt0 ON ((((((((x'')OR(LIKELY(DISTINCT vt0.c0))))OR((rt0.c2 IN ()))))OR(0.6646072047218288)))OR((~ (rt0.c1)))) WHERE (((vt0.c0)<=(NULLIF(DISTINCT rt0.c4, v0.c0)))) ORDER BY ((TRIM(DISTINCT vt0.c0)) BETWEEN (TRIM(DISTINCT rt0.c1)) AND ((+ (rt0.c3))))  NULLS FIRST, 0.04723238012193609, ((v0.c0 COLLATE NOCASE) BETWEEN (rt0.c4 COLLATE RTRIM) AND (CAST(rt0.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=(NULLIF(DISTINCT rt0.c4, v0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (- (((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))) FULL OUTER JOIN rt0 ON ((((((((x'')OR(LIKELY(DISTINCT vt0.c0))))OR((rt0.c2 IN ()))))OR(0.6646072047218288)))OR((~ (rt0.c1)))) ORDER BY ((TRIM(DISTINCT vt0.c0)) BETWEEN (TRIM(DISTINCT rt0.c1)) AND ((+ (rt0.c3))))  NULLS FIRST, 0.04723238012193609, ((v0.c0 COLLATE NOCASE) BETWEEN (rt0.c4 COLLATE RTRIM) AND (CAST(rt0.c1 AS BLOB))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((~ (vt0.c0))))));
SELECT * FROM vt0, rt0 WHERE (((CASE rt0.c4  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END) BETWEEN (((0.7535423595805731) NOT NULL)) AND (((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c4  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END) BETWEEN (((0.7535423595805731) NOT NULL)) AND (((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE rt0.c4  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END) BETWEEN (((0.7535423595805731) NOT NULL)) AND (((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c4  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END) BETWEEN (((0.7535423595805731) NOT NULL)) AND (((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE rt0.c4  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END) BETWEEN (((0.7535423595805731) NOT NULL)) AND (((rt0.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (0.7567977879663066) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (0.7567977879663066) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (0.7567977879663066) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (0.7567977879663066) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (0.7567977879663066) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1))) IS FALSE));
SELECT ALL * FROM rt0, v0 WHERE (CASE rt0.c1  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN rt0.c1 COLLATE BINARY WHEN 0xffffffffcdbb84a9 THEN CASE rt0.c1  WHEN rt0.c2 THEN x'4e0c' WHEN rt0.c0 THEN rt0.c1 WHEN -6.32381768E8 THEN v0.c0 ELSE rt0.c1 END WHEN ((v0.c0)<=(rt0.c4)) THEN (0.766085622133199 IN ()) END) ORDER BY rt0.c0 ASC, ((((rt0.c4)OR(rt0.c0)))AND(v0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN rt0.c1 COLLATE BINARY WHEN 0xffffffffcdbb84a9 THEN CASE rt0.c1  WHEN rt0.c2 THEN x'4e0c' WHEN rt0.c0 THEN rt0.c1 WHEN -6.32381768E8 THEN v0.c0 ELSE rt0.c1 END WHEN ((v0.c0)<=(rt0.c4)) THEN (0.766085622133199 IN ()) END) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0 ASC, ((((rt0.c4)OR(rt0.c0)))AND(v0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM rt0, v0 WHERE (CASE rt0.c1  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN rt0.c1 COLLATE BINARY WHEN 0xffffffffcdbb84a9 THEN CASE rt0.c1  WHEN rt0.c2 THEN x'4e0c' WHEN rt0.c0 THEN rt0.c1 WHEN -6.32381768E8 THEN v0.c0 ELSE rt0.c1 END WHEN ((v0.c0)<=(rt0.c4)) THEN (0.766085622133199 IN ()) END) ORDER BY rt0.c0 ASC, ((((rt0.c4)OR(rt0.c0)))AND(v0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN rt0.c1 COLLATE BINARY WHEN 0xffffffffcdbb84a9 THEN CASE rt0.c1  WHEN rt0.c2 THEN x'4e0c' WHEN rt0.c0 THEN rt0.c1 WHEN -6.32381768E8 THEN v0.c0 ELSE rt0.c1 END WHEN ((v0.c0)<=(rt0.c4)) THEN (0.766085622133199 IN ()) END) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0 ASC, ((((rt0.c4)OR(rt0.c0)))AND(v0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM rt0, v0 WHERE (CASE rt0.c1  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN rt0.c1 COLLATE BINARY WHEN 0xffffffffcdbb84a9 THEN CASE rt0.c1  WHEN rt0.c2 THEN x'4e0c' WHEN rt0.c0 THEN rt0.c1 WHEN -6.32381768E8 THEN v0.c0 ELSE rt0.c1 END WHEN ((v0.c0)<=(rt0.c4)) THEN (0.766085622133199 IN ()) END) ORDER BY rt0.c0 ASC, ((((rt0.c4)OR(rt0.c0)))AND(v0.c0)) COLLATE BINARY ASC;
SELECT * FROM v0, rt0 WHERE (CAST((((x'')) BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS REAL)) ORDER BY '0.03365445127125011';
SELECT SUM(count) FROM (SELECT ALL ((CAST((((x'')) BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY '0.03365445127125011');
SELECT * FROM v0, rt0 WHERE (CAST((((x'')) BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS REAL)) ORDER BY '0.03365445127125011';
SELECT SUM(count) FROM (SELECT ALL ((CAST((((x'')) BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY '0.03365445127125011');
SELECT * FROM v0, rt0 WHERE (CAST((((x'')) BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS REAL)) ORDER BY '0.03365445127125011';
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((v0.c0) IS TRUE))<<(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE))<<(rt0.c1))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((v0.c0) IS TRUE))<<(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE))<<(rt0.c1))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((v0.c0) IS TRUE))<<(rt0.c1)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)=(CASE WHEN -1.610042367E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)=(CASE WHEN -1.610042367E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)=(CASE WHEN -1.610042367E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)=(CASE WHEN -1.610042367E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)=(CASE WHEN -1.610042367E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (((((+ ('-341356002')))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c3) IS TRUE))) WHERE (SUBSTR(((rt0.c2) NOTNULL), CAST(rt0.c4 AS INTEGER))) ORDER BY ((((NULL)<>(rt0.c1))) NOT BETWEEN (UNLIKELY(rt0.c4)) AND (GLOB(rt0.c4, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((rt0.c2) NOTNULL), CAST(rt0.c4 AS INTEGER))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((((+ ('-341356002')))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c3) IS TRUE))) ORDER BY ((((NULL)!=(rt0.c1))) NOT BETWEEN (UNLIKELY(rt0.c4)) AND (GLOB(rt0.c4, rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (((((+ ('-341356002')))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c3) IS TRUE))) WHERE (SUBSTR(((rt0.c2) NOTNULL), CAST(rt0.c4 AS INTEGER))) ORDER BY ((((NULL)<>(rt0.c1))) NOT BETWEEN (UNLIKELY(rt0.c4)) AND (GLOB(rt0.c4, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((rt0.c2) NOTNULL), CAST(rt0.c4 AS INTEGER))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((((+ ('-341356002')))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c3) IS TRUE))) ORDER BY ((((NULL)!=(rt0.c1))) NOT BETWEEN (UNLIKELY(rt0.c4)) AND (GLOB(rt0.c4, rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (((((+ ('-341356002')))AND(rt0.c1 COLLATE NOCASE)))OR(((rt0.c3) IS TRUE))) WHERE (SUBSTR(((rt0.c2) NOTNULL), CAST(rt0.c4 AS INTEGER))) ORDER BY ((((NULL)<>(rt0.c1))) NOT BETWEEN (UNLIKELY(rt0.c4)) AND (GLOB(rt0.c4, rt0.c1))) ASC;
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))GLOB(CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))GLOB(CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))GLOB(CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))GLOB(CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))GLOB(CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))-(vt0.c0))) ORDER BY ((((vt0.c0)AND(((vt0.c0) IS FALSE))))OR(((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))-(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(((vt0.c0) IS FALSE))))OR(((vt0.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))-(vt0.c0))) ORDER BY ((((vt0.c0)AND(((vt0.c0) IS FALSE))))OR(((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))-(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(((vt0.c0) IS FALSE))))OR(((vt0.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))-(vt0.c0))) ORDER BY ((((vt0.c0)AND(((vt0.c0) IS FALSE))))OR(((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND ((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND ((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND ((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND ((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND ((((vt0.c0))<=((vt0.c0))))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0))==((v0.c0))) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))==((v0.c0))) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0))==((v0.c0))) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))==((v0.c0))) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0))==((v0.c0))) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN (- (rt0.c3)) THEN CAST('^_O%' AS INTEGER) ELSE ((rt0.c1) IS TRUE) END) ORDER BY CAST(((rt0.c1)AND(rt0.c4)) AS REAL) ASC, (((NULL IN ()))GLOB(rt0.c3)) ASC, (((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))))==((((vt0.c0) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c3)) THEN CAST('^_O%' AS INTEGER) ELSE ((rt0.c1) IS TRUE) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST(((rt0.c1)AND(rt0.c4)) AS REAL) ASC, (((NULL IN ()))GLOB(rt0.c3)) ASC, (((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))))==((((vt0.c0) ISNULL)))) ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN (- (rt0.c3)) THEN CAST('^_O%' AS INTEGER) ELSE ((rt0.c1) IS TRUE) END) ORDER BY CAST(((rt0.c1)AND(rt0.c4)) AS REAL) ASC, (((NULL IN ()))GLOB(rt0.c3)) ASC, (((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))))==((((vt0.c0) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c3)) THEN CAST('^_O%' AS INTEGER) ELSE ((rt0.c1) IS TRUE) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST(((rt0.c1)AND(rt0.c4)) AS REAL) ASC, (((NULL IN ()))GLOB(rt0.c3)) ASC, (((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))))==((((vt0.c0) ISNULL)))) ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN (- (rt0.c3)) THEN CAST('^_O%' AS INTEGER) ELSE ((rt0.c1) IS TRUE) END) ORDER BY CAST(((rt0.c1)AND(rt0.c4)) AS REAL) ASC, (((NULL IN ()))GLOB(rt0.c3)) ASC, (((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2))))==((((vt0.c0) ISNULL)))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c2 IN ())) BETWEEN (DATETIME(rt0.c2, rt0.c3, rt0.c4)) AND ((+ (rt0.c4)))) WHERE (UPPER(DISTINCT json(rt0.c1))) ORDER BY load_extension(((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)), vt0.c0 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT json(rt0.c1))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c2 IN ())) BETWEEN (DATETIME(rt0.c2, rt0.c3, rt0.c4)) AND ((+ (rt0.c4)))) ORDER BY load_extension(((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)), vt0.c0 COLLATE BINARY) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c2 IN ())) BETWEEN (DATETIME(rt0.c2, rt0.c3, rt0.c4)) AND ((+ (rt0.c4)))) WHERE (UPPER(DISTINCT json(rt0.c1))) ORDER BY load_extension(((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)), vt0.c0 COLLATE BINARY) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT json(rt0.c1))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c2 IN ())) BETWEEN (DATETIME(rt0.c2, rt0.c3, rt0.c4)) AND ((+ (rt0.c4)))) ORDER BY load_extension(((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)), vt0.c0 COLLATE BINARY) DESC);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN (((x'')) BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN rt0.c4 THEN CAST(rt0.c2 AS REAL) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1)|(v0.c0)) ELSE (((rt0.c4))!=((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN ()) THEN (((x'')) BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN rt0.c4 THEN CAST(rt0.c2 AS REAL) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1)|(v0.c0)) ELSE (((rt0.c4))!=((v0.c0))) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN (((x'')) BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN rt0.c4 THEN CAST(rt0.c2 AS REAL) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1)|(v0.c0)) ELSE (((rt0.c4))!=((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN ()) THEN (((x'')) BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN rt0.c4 THEN CAST(rt0.c2 AS REAL) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1)|(v0.c0)) ELSE (((rt0.c4))!=((v0.c0))) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN (((x'')) BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN rt0.c4 THEN CAST(rt0.c2 AS REAL) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1)|(v0.c0)) ELSE (((rt0.c4))!=((v0.c0))) END);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((~ (CASE '^Vb'  WHEN rt0.c4 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE '^Vb'  WHEN rt0.c4 THEN rt0.c1 END))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((~ (CASE '^Vb'  WHEN rt0.c4 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE '^Vb'  WHEN rt0.c4 THEN rt0.c1 END))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((~ (CASE '^Vb'  WHEN rt0.c4 THEN rt0.c1 END)));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (1.393921872E9);
SELECT SUM(count) FROM (SELECT ((1.393921872E9) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (1.393921872E9);
SELECT SUM(count) FROM (SELECT ((1.393921872E9) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (1.393921872E9);
SELECT * FROM vt0, rt0, v0 WHERE (CAST(((NULL) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (CAST(((NULL) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (CAST(((NULL) ISNULL) AS BLOB));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((((((((((((vt0.c0)/(vt0.c0)))AND(LOWER(DISTINCT vt0.c0))))AND(0.018799213038361184)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))AND((((NULL))>((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((((vt0.c0)/(vt0.c0)))AND(LOWER(DISTINCT vt0.c0))))AND(0.018799213038361184)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))AND((((NULL))>((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((((((((((((vt0.c0)/(vt0.c0)))AND(LOWER(DISTINCT vt0.c0))))AND(0.018799213038361184)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))AND((((NULL))>((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((((vt0.c0)/(vt0.c0)))AND(LOWER(DISTINCT vt0.c0))))AND(0.018799213038361184)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))AND((((NULL))>((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((((((((((((vt0.c0)/(vt0.c0)))AND(LOWER(DISTINCT vt0.c0))))AND(0.018799213038361184)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))AND((((NULL))>((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) BETWEEN (((0.1889993371822185 IN ()))) AND (((rt0.c4 IN ()))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((json_type(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((0.1889993371822185 IN ()))) AND (((rt0.c4 IN ()))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((json_type(NULL)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) BETWEEN (((0.1889993371822185 IN ()))) AND (((rt0.c4 IN ()))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((json_type(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((0.1889993371822185 IN ()))) AND (((rt0.c4 IN ()))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((json_type(NULL)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) BETWEEN (((0.1889993371822185 IN ()))) AND (((rt0.c4 IN ()))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((json_type(NULL))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((TRIM(vt0.c0, v0.c0) IN ())) ORDER BY (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()) DESC  NULLS FIRST, (((vt0.c0)*(v0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(vt0.c0, v0.c0) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()) DESC  NULLS FIRST, (((vt0.c0)*(v0.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((TRIM(vt0.c0, v0.c0) IN ())) ORDER BY (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()) DESC  NULLS FIRST, (((vt0.c0)*(v0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(vt0.c0, v0.c0) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()) DESC  NULLS FIRST, (((vt0.c0)*(v0.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((TRIM(vt0.c0, v0.c0) IN ())) ORDER BY (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()) DESC  NULLS FIRST, (((vt0.c0)*(v0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((('321120073') NOTNULL))AND(((rt0.c0)>(rt0.c4)))))OR((rt0.c0 IN ())))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('321120073') NOTNULL))AND(((rt0.c0)>(rt0.c4)))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((('321120073') NOTNULL))AND(((rt0.c0)>(rt0.c4)))))OR((rt0.c0 IN ())))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('321120073') NOTNULL))AND(((rt0.c0)>(rt0.c4)))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((('321120073') NOTNULL))AND(((rt0.c0)>(rt0.c4)))))OR((rt0.c0 IN ())))) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM v0, rt0, vt0 WHERE ('') ORDER BY (- (json_array_length(rt0.c3))) DESC  NULLS FIRST, ((CAST('1239650239' AS BLOB)) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN 0.9688996758139002 THEN rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (- (json_array_length(rt0.c3))) DESC  NULLS FIRST, ((CAST('1239650239' AS BLOB)) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN 0.9688996758139002 THEN rt0.c0 END)) ASC);
SELECT ALL * FROM v0, rt0, vt0 WHERE ('') ORDER BY (- (json_array_length(rt0.c3))) DESC  NULLS FIRST, ((CAST('1239650239' AS BLOB)) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN 0.9688996758139002 THEN rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (- (json_array_length(rt0.c3))) DESC  NULLS FIRST, ((CAST('1239650239' AS BLOB)) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN 0.9688996758139002 THEN rt0.c0 END)) ASC);
SELECT ALL * FROM v0, rt0, vt0 WHERE ('') ORDER BY (- (json_array_length(rt0.c3))) DESC  NULLS FIRST, ((CAST('1239650239' AS BLOB)) BETWEEN (((rt0.c2) NOTNULL)) AND (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN 0.9688996758139002 THEN rt0.c0 END)) ASC;
SELECT * FROM rt0 WHERE (HEX(rt0.c1 COLLATE RTRIM)) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM rt0 WHERE (HEX(rt0.c1 COLLATE RTRIM)) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT * FROM rt0 WHERE (HEX(rt0.c1 COLLATE RTRIM)) ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.9780702231704015) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((0.9780702231704015) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.9780702231704015) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((0.9780702231704015) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.9780702231704015) IS FALSE));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (- ((((vt0.c0, rt0.c2, rt0.c4))<=((rt0.c3, v0.c0, rt0.c1))))) INNER JOIN rt0 ON ((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) ISNULL) WHERE (((((((x'')+(rt0.c1)))AND(((rt0.c0)&(rt0.c2)))))OR(DATE(v0.c0, v0.c0, 0.4954339763912077)))) ORDER BY ((NULL) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')+(rt0.c1)))AND(((rt0.c0)&(rt0.c2)))))OR(DATE(v0.c0, v0.c0, 0.4954339763912077)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (- ((((vt0.c0, rt0.c2, rt0.c4))<=((rt0.c3, v0.c0, rt0.c1))))) INNER JOIN rt0 ON ((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) ISNULL) ORDER BY ((NULL) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (- ((((vt0.c0, rt0.c2, rt0.c4))<=((rt0.c3, v0.c0, rt0.c1))))) INNER JOIN rt0 ON ((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) ISNULL) WHERE (((((((x'')+(rt0.c1)))AND(((rt0.c0)&(rt0.c2)))))OR(DATE(v0.c0, v0.c0, 0.4954339763912077)))) ORDER BY ((NULL) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')+(rt0.c1)))AND(((rt0.c0)&(rt0.c2)))))OR(DATE(v0.c0, v0.c0, 0.4954339763912077)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (- ((((vt0.c0, rt0.c2, rt0.c4))<=((rt0.c3, v0.c0, rt0.c1))))) INNER JOIN rt0 ON ((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) ISNULL) ORDER BY ((NULL) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN (NOT (0.7271443775995708)) THEN '-1584122797' WHEN ((rt0.c4)/(vt0.c0)) THEN (('2x k11L') NOT NULL) WHEN (~ (0.05868878939022415)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (0.7271443775995708)) THEN '-1584122797' WHEN ((rt0.c4)/(vt0.c0)) THEN (('2x k11L') NOT NULL) WHEN (~ (0.05868878939022415)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN (NOT (0.7271443775995708)) THEN '-1584122797' WHEN ((rt0.c4)/(vt0.c0)) THEN (('2x k11L') NOT NULL) WHEN (~ (0.05868878939022415)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (0.7271443775995708)) THEN '-1584122797' WHEN ((rt0.c4)/(vt0.c0)) THEN (('2x k11L') NOT NULL) WHEN (~ (0.05868878939022415)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN (NOT (0.7271443775995708)) THEN '-1584122797' WHEN ((rt0.c4)/(vt0.c0)) THEN (('2x k11L') NOT NULL) WHEN (~ (0.05868878939022415)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(((((rt0.c4)OR(rt0.c0)))AND(rt0.c4)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c4)OR(rt0.c0)))AND(rt0.c4)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(((((rt0.c4)OR(rt0.c0)))AND(rt0.c4)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c4)OR(rt0.c0)))AND(rt0.c4)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(((((rt0.c4)OR(rt0.c0)))AND(rt0.c4)) AS INTEGER));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY rt0.c4 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c4 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY rt0.c4 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c4 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY rt0.c4 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((0.43698124505583036 IN (CAST(1.543952818E9 AS TEXT)))) ORDER BY SQLITE_COMPILEOPTION_USED((vt0.c0 IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((0.43698124505583036 IN (CAST(1.543952818E9 AS TEXT)))) IS TRUE)  as count FROM v0, vt0 ORDER BY SQLITE_COMPILEOPTION_USED((vt0.c0 IN (vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((0.43698124505583036 IN (CAST(1.543952818E9 AS TEXT)))) ORDER BY SQLITE_COMPILEOPTION_USED((vt0.c0 IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((0.43698124505583036 IN (CAST(1.543952818E9 AS TEXT)))) IS TRUE)  as count FROM v0, vt0 ORDER BY SQLITE_COMPILEOPTION_USED((vt0.c0 IN (vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((0.43698124505583036 IN (CAST(1.543952818E9 AS TEXT)))) ORDER BY SQLITE_COMPILEOPTION_USED((vt0.c0 IN (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((~ (rt0.c0)) IN ((('')GLOB(rt0.c1)), (+ (rt0.c3))))) ORDER BY (((rt0.c2 IN ()))||(UNLIKELY(rt0.c3))) ASC, (+ (rt0.c3)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c0)) IN ((('')GLOB(rt0.c1)), (+ (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((rt0.c2 IN ()))||(UNLIKELY(rt0.c3))) ASC, (+ (rt0.c3)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((~ (rt0.c0)) IN ((('')GLOB(rt0.c1)), (+ (rt0.c3))))) ORDER BY (((rt0.c2 IN ()))||(UNLIKELY(rt0.c3))) ASC, (+ (rt0.c3)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c0)) IN ((('')GLOB(rt0.c1)), (+ (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((rt0.c2 IN ()))||(UNLIKELY(rt0.c3))) ASC, (+ (rt0.c3)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((~ (rt0.c0)) IN ((('')GLOB(rt0.c1)), (+ (rt0.c3))))) ORDER BY (((rt0.c2 IN ()))||(UNLIKELY(rt0.c3))) ASC, (+ (rt0.c3)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c2) ORDER BY rt0.c0 ASC  NULLS FIRST, NULL DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0 ASC  NULLS FIRST, NULL DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c2) ORDER BY rt0.c0 ASC  NULLS FIRST, NULL DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0 ASC  NULLS FIRST, NULL DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c2) ORDER BY rt0.c0 ASC  NULLS FIRST, NULL DESC;
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c2) ISNULL) AS INTEGER)) ORDER BY LOWER(DISTINCT (rt0.c1 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY LOWER(DISTINCT (rt0.c1 IN ()))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c2) ISNULL) AS INTEGER)) ORDER BY LOWER(DISTINCT (rt0.c1 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY LOWER(DISTINCT (rt0.c1 IN ()))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c2) ISNULL) AS INTEGER)) ORDER BY LOWER(DISTINCT (rt0.c1 IN ()))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c3)>>(rt0.c1)))) AND ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c3)IS(rt0.c2)))) AND ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((rt0.c3)>>(rt0.c1)))) AND ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c3)IS(rt0.c2)))) AND ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c3)>>(rt0.c1)))) AND ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c3)IS(rt0.c2)))) AND ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((rt0.c3)>>(rt0.c1)))) AND ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c3)IS(rt0.c2)))) AND ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c3)>>(rt0.c1)))) AND ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c3)IS(rt0.c2)))) AND ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))));
SELECT * FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN ())) ORDER BY CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)&(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL));
SELECT * FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN ())) ORDER BY CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)&(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL));
SELECT * FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN ())) ORDER BY CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)OR(((vt0.c0) ISNULL)))) ORDER BY CAST(rt0.c3 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(rt0.c3 AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)OR(((vt0.c0) ISNULL)))) ORDER BY CAST(rt0.c3 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(rt0.c3 AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)OR(((vt0.c0) ISNULL)))) ORDER BY CAST(rt0.c3 AS NUMERIC) DESC;
SELECT * FROM vt0, v0, rt0 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))) ELSE (rt0.c0 IN (vt0.c0)) END) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))) ELSE (rt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY rt0.c4  NULLS LAST);
SELECT * FROM vt0, v0, rt0 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))) ELSE (rt0.c0 IN (vt0.c0)) END) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))) ELSE (rt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY rt0.c4  NULLS LAST);
SELECT * FROM vt0, v0, rt0 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))) ELSE (rt0.c0 IN (vt0.c0)) END) ORDER BY rt0.c4  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0))==((CAST(rt0.c4 AS REAL))))) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))==((CAST(rt0.c4 AS REAL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0))==((CAST(rt0.c4 AS REAL))))) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))==((CAST(rt0.c4 AS REAL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0))==((CAST(rt0.c4 AS REAL))))) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (UNLIKELY(DISTINCT (((rt0.c0, '0.35522614182635615', rt0.c4))<>((rt0.c3, rt0.c1, v0.c0))))) ORDER BY ((CASE WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END)LIKE(CAST(rt0.c4 AS BLOB))), CAST(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((rt0.c0, '0.35522614182635615', rt0.c4))!=((rt0.c3, rt0.c1, v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CASE WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END)LIKE(CAST(rt0.c4 AS BLOB))), CAST(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (UNLIKELY(DISTINCT (((rt0.c0, '0.35522614182635615', rt0.c4))<>((rt0.c3, rt0.c1, v0.c0))))) ORDER BY ((CASE WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END)LIKE(CAST(rt0.c4 AS BLOB))), CAST(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((rt0.c0, '0.35522614182635615', rt0.c4))!=((rt0.c3, rt0.c1, v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CASE WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END)LIKE(CAST(rt0.c4 AS BLOB))), CAST(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (UNLIKELY(DISTINCT (((rt0.c0, '0.35522614182635615', rt0.c4))<>((rt0.c3, rt0.c1, v0.c0))))) ORDER BY ((CASE WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END)LIKE(CAST(rt0.c4 AS BLOB))), CAST(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)) AS TEXT) ASC;
SELECT ALL * FROM v0 WHERE ('-673472307');
SELECT SUM(count) FROM (SELECT ALL (('-673472307') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('-673472307');
SELECT SUM(count) FROM (SELECT ALL (('-673472307') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('-673472307');
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CAST(rt0.c4 AS NUMERIC) COLLATE RTRIM CROSS JOIN rt0 ON v0.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY WHERE (((((((rt0.c0) NOTNULL))OR(((rt0.c4)<<(v0.c0)))))AND(1327014454))) ORDER BY ((LOWER(DISTINCT rt0.c4))||(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)))AND(vt0.c0)))), ((rt0.c2 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOTNULL))OR(((rt0.c4)<<(v0.c0)))))AND(1327014454))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(rt0.c4 AS NUMERIC) COLLATE RTRIM CROSS JOIN rt0 ON v0.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY ORDER BY ((LOWER(DISTINCT rt0.c4))||(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)))AND(vt0.c0)))), ((rt0.c2 COLLATE RTRIM) NOTNULL));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CAST(rt0.c4 AS NUMERIC) COLLATE RTRIM CROSS JOIN rt0 ON v0.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY WHERE (((((((rt0.c0) NOTNULL))OR(((rt0.c4)<<(v0.c0)))))AND(1327014454))) ORDER BY ((LOWER(DISTINCT rt0.c4))||(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)))AND(vt0.c0)))), ((rt0.c2 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOTNULL))OR(((rt0.c4)<<(v0.c0)))))AND(1327014454))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(rt0.c4 AS NUMERIC) COLLATE RTRIM CROSS JOIN rt0 ON v0.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY ORDER BY ((LOWER(DISTINCT rt0.c4))||(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)))AND(vt0.c0)))), ((rt0.c2 COLLATE RTRIM) NOTNULL));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CAST(rt0.c4 AS NUMERIC) COLLATE RTRIM CROSS JOIN rt0 ON v0.c0 COLLATE BINARY COLLATE RTRIM COLLATE BINARY WHERE (((((((rt0.c0) NOTNULL))OR(((rt0.c4)<<(v0.c0)))))AND(1327014454))) ORDER BY ((LOWER(DISTINCT rt0.c4))||(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)))AND(vt0.c0)))), ((rt0.c2 COLLATE RTRIM) NOTNULL);
SELECT ALL * FROM vt0, v0 WHERE (CAST((- (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST((- (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST((- (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (LIKELIHOOD(((vt0.c0)==('-0.0')), 0.11521915864782017));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c0)=('-0.0')), 0.11521915864782017)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (LIKELIHOOD(((vt0.c0)==('-0.0')), 0.11521915864782017));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c0)=('-0.0')), 0.11521915864782017)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (LIKELIHOOD(((vt0.c0)==('-0.0')), 0.11521915864782017));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((0.28461743508084647) NOT BETWEEN (0.3856468337538522) AND ('-2068654433')) THEN (rt0.c4 IN ()) WHEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c3)) THEN rt0.c0 WHEN 0.6130851769856704 COLLATE BINARY THEN vt0.c0 ELSE CAST(rt0.c4 AS INTEGER) END CROSS JOIN v0 ON (((((x'' IN (rt0.c2, x'')))AND((((x'1ff6', rt0.c2, vt0.c0))!=((vt0.c0, vt0.c0, NULL))))))AND(((rt0.c2) NOT NULL))) WHERE ((~ (rt0.c0 COLLATE BINARY))) ORDER BY CAST(((rt0.c3)AND(x'4c3d')) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((0.28461743508084647) NOT BETWEEN (0.3856468337538522) AND ('-2068654433')) THEN (rt0.c4 IN ()) WHEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c3)) THEN rt0.c0 WHEN 0.6130851769856704 COLLATE BINARY THEN vt0.c0 ELSE CAST(rt0.c4 AS INTEGER) END CROSS JOIN v0 ON (((((x'' IN (rt0.c2, x'')))AND((((x'1ff6', rt0.c2, vt0.c0))!=((vt0.c0, vt0.c0, NULL))))))AND(((rt0.c2) NOT NULL))) ORDER BY CAST(((rt0.c3)AND(x'4c3d')) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((0.28461743508084647) NOT BETWEEN (0.3856468337538522) AND ('-2068654433')) THEN (rt0.c4 IN ()) WHEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c3)) THEN rt0.c0 WHEN 0.6130851769856704 COLLATE BINARY THEN vt0.c0 ELSE CAST(rt0.c4 AS INTEGER) END CROSS JOIN v0 ON (((((x'' IN (rt0.c2, x'')))AND((((x'1ff6', rt0.c2, vt0.c0))!=((vt0.c0, vt0.c0, NULL))))))AND(((rt0.c2) NOT NULL))) WHERE ((~ (rt0.c0 COLLATE BINARY))) ORDER BY CAST(((rt0.c3)AND(x'4c3d')) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((0.28461743508084647) NOT BETWEEN (0.3856468337538522) AND ('-2068654433')) THEN (rt0.c4 IN ()) WHEN ((((rt0.c0)OR(v0.c0)))AND(rt0.c3)) THEN rt0.c0 WHEN 0.6130851769856704 COLLATE BINARY THEN vt0.c0 ELSE CAST(rt0.c4 AS INTEGER) END CROSS JOIN v0 ON (((((x'' IN (rt0.c2, x'')))AND((((x'1ff6', rt0.c2, vt0.c0))!=((vt0.c0, vt0.c0, NULL))))))AND(((rt0.c2) NOT NULL))) ORDER BY CAST(((rt0.c3)AND(x'4c3d')) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (- (((((vt0.c0)OR(rt0.c4)))OR(vt0.c0)))) WHERE (((CAST(rt0.c1 AS INTEGER))IS((- (rt0.c2))))) ORDER BY (((0.9683753805013742))==((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))IS((- (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (- (((((vt0.c0)OR(rt0.c4)))OR(vt0.c0)))) ORDER BY (((0.9683753805013742))=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (- (((((vt0.c0)OR(rt0.c4)))OR(vt0.c0)))) WHERE (((CAST(rt0.c1 AS INTEGER))IS((- (rt0.c2))))) ORDER BY (((0.9683753805013742))==((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))IS((- (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (- (((((vt0.c0)OR(rt0.c4)))OR(vt0.c0)))) ORDER BY (((0.9683753805013742))=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON (- (((((vt0.c0)OR(rt0.c4)))OR(vt0.c0)))) WHERE (((CAST(rt0.c1 AS INTEGER))IS((- (rt0.c2))))) ORDER BY (((0.9683753805013742))==((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ('-459052747');
SELECT SUM(count) FROM (SELECT ALL (('-459052747') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ('-459052747');
SELECT SUM(count) FROM (SELECT ALL (('-459052747') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ('-459052747');
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((((('-1774337011')OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((((((('-1774337011')OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((((('-1774337011')OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((((((('-1774337011')OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((((('-1774337011')OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c3)) COLLATE NOCASE);
SELECT * FROM rt0, vt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c3 END  WHEN CASE WHEN rt0.c1 THEN rt0.c4 END THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE rt0.c0 END) ORDER BY ((CAST(rt0.c4 AS NUMERIC))|(IFNULL(rt0.c0, rt0.c3)));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c2 THEN rt0.c3 END  WHEN CASE WHEN rt0.c1 THEN rt0.c4 END THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c4 AS NUMERIC))|(IFNULL(rt0.c0, rt0.c3))));
SELECT * FROM rt0, vt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c3 END  WHEN CASE WHEN rt0.c1 THEN rt0.c4 END THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE rt0.c0 END) ORDER BY ((CAST(rt0.c4 AS NUMERIC))|(IFNULL(rt0.c0, rt0.c3)));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c2 THEN rt0.c3 END  WHEN CASE WHEN rt0.c1 THEN rt0.c4 END THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c4 AS NUMERIC))|(IFNULL(rt0.c0, rt0.c3))));
SELECT * FROM rt0, vt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c3 END  WHEN CASE WHEN rt0.c1 THEN rt0.c4 END THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE rt0.c0 END) ORDER BY ((CAST(rt0.c4 AS NUMERIC))|(IFNULL(rt0.c0, rt0.c3)));
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0)<<(vt0.c0)), ((v0.c0)OR(vt0.c0)), ((vt0.c0)<=(v0.c0))))<((((vt0.c0)>(vt0.c0)), (('0.8261053589514783')<<(v0.c0)), ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)<<(vt0.c0)), ((v0.c0)OR(vt0.c0)), ((vt0.c0)<=(v0.c0))))<((((vt0.c0)>(vt0.c0)), (('0.8261053589514783')<<(v0.c0)), ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0)<<(vt0.c0)), ((v0.c0)OR(vt0.c0)), ((vt0.c0)<=(v0.c0))))<((((vt0.c0)>(vt0.c0)), (('0.8261053589514783')<<(v0.c0)), ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)<<(vt0.c0)), ((v0.c0)OR(vt0.c0)), ((vt0.c0)<=(v0.c0))))<((((vt0.c0)>(vt0.c0)), (('0.8261053589514783')<<(v0.c0)), ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0)<<(vt0.c0)), ((v0.c0)OR(vt0.c0)), ((vt0.c0)<=(v0.c0))))<((((vt0.c0)>(vt0.c0)), (('0.8261053589514783')<<(v0.c0)), ((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c0)LIKE(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c0)LIKE(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c0)LIKE(v0.c0)))));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY TRIM(DISTINCT CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END), CASE WHEN LOWER(DISTINCT v0.c0) THEN json_array_length(v0.c0, vt0.c0) ELSE ((v0.c0)>>(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY TRIM(DISTINCT CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END), CASE WHEN LOWER(DISTINCT v0.c0) THEN json_array_length(v0.c0, vt0.c0) ELSE ((v0.c0)>>(vt0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY TRIM(DISTINCT CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END), CASE WHEN LOWER(DISTINCT v0.c0) THEN json_array_length(v0.c0, vt0.c0) ELSE ((v0.c0)>>(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY TRIM(DISTINCT CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END), CASE WHEN LOWER(DISTINCT v0.c0) THEN json_array_length(v0.c0, vt0.c0) ELSE ((v0.c0)>>(vt0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY TRIM(DISTINCT CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END), CASE WHEN LOWER(DISTINCT v0.c0) THEN json_array_length(v0.c0, vt0.c0) ELSE ((v0.c0)>>(vt0.c0)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('>I') ORDER BY IFNULL(((vt0.c0)*(NULL)), vt0.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('>I') IS TRUE)  as count FROM vt0, rt0 ORDER BY IFNULL(((vt0.c0)*(NULL)), vt0.c0 COLLATE RTRIM) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('>I') ORDER BY IFNULL(((vt0.c0)*(NULL)), vt0.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('>I') IS TRUE)  as count FROM vt0, rt0 ORDER BY IFNULL(((vt0.c0)*(NULL)), vt0.c0 COLLATE RTRIM) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('>I') ORDER BY IFNULL(((vt0.c0)*(NULL)), vt0.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c0)=(v0.c0))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((v0.c0)=(v0.c0))) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c0)=(v0.c0))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((v0.c0)=(v0.c0))) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c0)=(v0.c0))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0 IN (rt0.c0)))+(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt0.c0)))+(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0 IN (rt0.c0)))+(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt0.c0)))+(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0 IN (rt0.c0)))+(rt0.c1)));
SELECT ALL * FROM v0 WHERE (CAST((+ (v0.c0)) AS REAL)) ORDER BY v0.c0 ASC  NULLS FIRST, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND((- (v0.c0)))) DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND((- (v0.c0)))) DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST((+ (v0.c0)) AS REAL)) ORDER BY v0.c0 ASC  NULLS FIRST, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND((- (v0.c0)))) DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND((- (v0.c0)))) DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST((+ (v0.c0)) AS REAL)) ORDER BY v0.c0 ASC  NULLS FIRST, ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND((- (v0.c0)))) DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (((v0.c0, rt0.c2, rt0.c2)) BETWEEN ((HEX(rt0.c3), (rt0.c1 IN ()), CAST(rt0.c4 AS NUMERIC))) AND ((CASE v0.c0  WHEN rt0.c3 THEN v0.c0 END, ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)), (NOT (867286711))))) WHERE (CASE rt0.c3  WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))) END) ORDER BY NULL  NULLS LAST, ((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((0.035274420867770884)))))!=((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))) END) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((v0.c0, rt0.c2, rt0.c2)) BETWEEN ((HEX(rt0.c3), (rt0.c1 IN ()), CAST(rt0.c4 AS NUMERIC))) AND ((CASE v0.c0  WHEN rt0.c3 THEN v0.c0 END, ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)), (NOT (867286711))))) ORDER BY NULL  NULLS LAST, ((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((0.035274420867770884)))))<>((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (((v0.c0, rt0.c2, rt0.c2)) BETWEEN ((HEX(rt0.c3), (rt0.c1 IN ()), CAST(rt0.c4 AS NUMERIC))) AND ((CASE v0.c0  WHEN rt0.c3 THEN v0.c0 END, ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)), (NOT (867286711))))) WHERE (CASE rt0.c3  WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))) END) ORDER BY NULL  NULLS LAST, ((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((0.035274420867770884)))))!=((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))) END) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((v0.c0, rt0.c2, rt0.c2)) BETWEEN ((HEX(rt0.c3), (rt0.c1 IN ()), CAST(rt0.c4 AS NUMERIC))) AND ((CASE v0.c0  WHEN rt0.c3 THEN v0.c0 END, ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)), (NOT (867286711))))) ORDER BY NULL  NULLS LAST, ((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((0.035274420867770884)))))<>((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (((v0.c0, rt0.c2, rt0.c2)) BETWEEN ((HEX(rt0.c3), (rt0.c1 IN ()), CAST(rt0.c4 AS NUMERIC))) AND ((CASE v0.c0  WHEN rt0.c3 THEN v0.c0 END, ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)), (NOT (867286711))))) WHERE (CASE rt0.c3  WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))) END) ORDER BY NULL  NULLS LAST, ((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((0.035274420867770884)))))!=((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((+ ((((rt0.c3, vt0.c0, v0.c0, v0.c0, v0.c0))>((rt0.c1, v0.c0, v0.c0, rt0.c1, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3, vt0.c0, v0.c0, v0.c0, v0.c0))>((rt0.c1, v0.c0, v0.c0, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((+ ((((rt0.c3, vt0.c0, v0.c0, v0.c0, v0.c0))>((rt0.c1, v0.c0, v0.c0, rt0.c1, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3, vt0.c0, v0.c0, v0.c0, v0.c0))>((rt0.c1, v0.c0, v0.c0, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((+ ((((rt0.c3, vt0.c0, v0.c0, v0.c0, v0.c0))>((rt0.c1, v0.c0, v0.c0, rt0.c1, rt0.c1))))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c1) WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (rt0.c3 IN ()) ELSE LAST_INSERT_ROWID() END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE RTRIM THEN (rt0.c3 IN ()) ELSE LAST_INSERT_ROWID() END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c1));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c1) WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (rt0.c3 IN ()) ELSE LAST_INSERT_ROWID() END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE RTRIM THEN (rt0.c3 IN ()) ELSE LAST_INSERT_ROWID() END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c1));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c1) WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (rt0.c3 IN ()) ELSE LAST_INSERT_ROWID() END);
SELECT ALL * FROM rt0 WHERE (rt0.c3 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3 COLLATE RTRIM);
SELECT ALL * FROM v0, vt0 WHERE ((((CAST('' AS INTEGER), 0.1271324357465673, ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)+(v0.c0)), CAST(x'' AS NUMERIC)))>(((- (8.77632954E8)), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST('' AS INTEGER), 0.1271324357465673, ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)+(v0.c0)), CAST(x'' AS NUMERIC)))>(((- (8.77632954E8)), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((CAST('' AS INTEGER), 0.1271324357465673, ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)+(v0.c0)), CAST(x'' AS NUMERIC)))>(((- (8.77632954E8)), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST('' AS INTEGER), 0.1271324357465673, ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)+(v0.c0)), CAST(x'' AS NUMERIC)))>(((- (8.77632954E8)), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((CAST('' AS INTEGER), 0.1271324357465673, ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)+(v0.c0)), CAST(x'' AS NUMERIC)))>(((- (8.77632954E8)), ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))/(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))/(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))/(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))/(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))/(vt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (json_type((~ (x''))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((~ (x'')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_type((~ (x''))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((~ (x'')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_type((~ (x''))));
SELECT ALL * FROM v0, vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (x'');
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((0.6588744912654139)AND(((rt0.c0) IS TRUE))))AND((((NULL, rt0.c1, rt0.c4))<((rt0.c3, rt0.c4, vt0.c0))))) WHERE (rt0.c4) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))-((rt0.c3 IN ()))), (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c2)||(vt0.c0)))) DESC  NULLS FIRST, CASE CAST(vt0.c0 AS NUMERIC)  WHEN rt0.c4 THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((0.6588744912654139)AND(((rt0.c0) IS TRUE))))AND((((NULL, rt0.c1, rt0.c4))<((rt0.c3, rt0.c4, vt0.c0))))) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))-((rt0.c3 IN ()))), (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c2)||(vt0.c0)))) DESC  NULLS FIRST, CASE CAST(vt0.c0 AS NUMERIC)  WHEN rt0.c4 THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) END ASC  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((0.6588744912654139)AND(((rt0.c0) IS TRUE))))AND((((NULL, rt0.c1, rt0.c4))<((rt0.c3, rt0.c4, vt0.c0))))) WHERE (rt0.c4) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))-((rt0.c3 IN ()))), (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c2)||(vt0.c0)))) DESC  NULLS FIRST, CASE CAST(vt0.c0 AS NUMERIC)  WHEN rt0.c4 THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((0.6588744912654139)AND(((rt0.c0) IS TRUE))))AND((((NULL, rt0.c1, rt0.c4))<((rt0.c3, rt0.c4, vt0.c0))))) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))-((rt0.c3 IN ()))), (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c2)||(vt0.c0)))) DESC  NULLS FIRST, CASE CAST(vt0.c0 AS NUMERIC)  WHEN rt0.c4 THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) END ASC  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((0.6588744912654139)AND(((rt0.c0) IS TRUE))))AND((((NULL, rt0.c1, rt0.c4))<((rt0.c3, rt0.c4, vt0.c0))))) WHERE (rt0.c4) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))-((rt0.c3 IN ()))), (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c2)||(vt0.c0)))) DESC  NULLS FIRST, CASE CAST(vt0.c0 AS NUMERIC)  WHEN rt0.c4 THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) END ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (LTRIM(CASE rt0.c1  WHEN NULL THEN rt0.c1 END, ((rt0.c1)LIKE(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((LTRIM(CASE rt0.c1  WHEN NULL THEN rt0.c1 END, ((rt0.c1)LIKE(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LTRIM(CASE rt0.c1  WHEN NULL THEN rt0.c1 END, ((rt0.c1)LIKE(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((LTRIM(CASE rt0.c1  WHEN NULL THEN rt0.c1 END, ((rt0.c1)LIKE(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LTRIM(CASE rt0.c1  WHEN NULL THEN rt0.c1 END, ((rt0.c1)LIKE(rt0.c2))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3))))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3))))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3))))) WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 END COLLATE RTRIM) ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c2 END)AND((((rt0.c1, rt0.c3, rt0.c2))=((rt0.c0, rt0.c4, rt0.c2))))))OR((rt0.c4 IN ()))))AND(((rt0.c0)LIKE(rt0.c1)))))OR((((rt0.c3))<>((rt0.c0)))))  NULLS LAST, '-2127817366' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c2 END)AND((((rt0.c1, rt0.c3, rt0.c2))=((rt0.c0, rt0.c4, rt0.c2))))))OR((rt0.c4 IN ()))))AND(((rt0.c0)LIKE(rt0.c1)))))OR((((rt0.c3))<>((rt0.c0)))))  NULLS LAST, '-2127817366' DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 END COLLATE RTRIM) ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c2 END)AND((((rt0.c1, rt0.c3, rt0.c2))=((rt0.c0, rt0.c4, rt0.c2))))))OR((rt0.c4 IN ()))))AND(((rt0.c0)LIKE(rt0.c1)))))OR((((rt0.c3))<>((rt0.c0)))))  NULLS LAST, '-2127817366' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c2 END)AND((((rt0.c1, rt0.c3, rt0.c2))=((rt0.c0, rt0.c4, rt0.c2))))))OR((rt0.c4 IN ()))))AND(((rt0.c0)LIKE(rt0.c1)))))OR((((rt0.c3))<>((rt0.c0)))))  NULLS LAST, '-2127817366' DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 END COLLATE RTRIM) ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c2 END)AND((((rt0.c1, rt0.c3, rt0.c2))=((rt0.c0, rt0.c4, rt0.c2))))))OR((rt0.c4 IN ()))))AND(((rt0.c0)LIKE(rt0.c1)))))OR((((rt0.c3))<>((rt0.c0)))))  NULLS LAST, '-2127817366' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)*('YT')))AND(rt0.c2)))AND(((rt0.c0)IS NOT(rt0.c4))))) ORDER BY ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)*('YT')))AND(rt0.c2)))AND(((rt0.c0)IS NOT(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)*('YT')))AND(rt0.c2)))AND(((rt0.c0)IS NOT(rt0.c4))))) ORDER BY ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)*('YT')))AND(rt0.c2)))AND(((rt0.c0)IS NOT(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)*('YT')))AND(rt0.c2)))AND(((rt0.c0)IS NOT(rt0.c4))))) ORDER BY ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))) ISNULL);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN ((rt0.c3) IS TRUE) THEN (rt0.c4 IN ()) WHEN IFNULL(DISTINCT vt0.c0, rt0.c4) THEN (- (vt0.c0)) WHEN x'd700' THEN vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3) IS TRUE) THEN (rt0.c4 IN ()) WHEN IFNULL(DISTINCT vt0.c0, rt0.c4) THEN (- (vt0.c0)) WHEN x'd700' THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN ((rt0.c3) IS TRUE) THEN (rt0.c4 IN ()) WHEN IFNULL(DISTINCT vt0.c0, rt0.c4) THEN (- (vt0.c0)) WHEN x'd700' THEN vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3) IS TRUE) THEN (rt0.c4 IN ()) WHEN IFNULL(DISTINCT vt0.c0, rt0.c4) THEN (- (vt0.c0)) WHEN x'd700' THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN ((rt0.c3) IS TRUE) THEN (rt0.c4 IN ()) WHEN IFNULL(DISTINCT vt0.c0, rt0.c4) THEN (- (vt0.c0)) WHEN x'd700' THEN vt0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CASE v0.c0  WHEN 0.8364692438143733 THEN v0.c0 WHEN vt0.c0 THEN '381062521' WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)/(vt0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) WHEN v0.c0 THEN (v0.c0 IN (vt0.c0, v0.c0)) END WHERE ((((((vt0.c0) ISNULL)))<=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, CASE v0.c0  WHEN 0x59df4f67 THEN vt0.c0 END COLLATE BINARY DESC, CASE (+ (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM WHEN (vt0.c0 IN (v0.c0)) THEN 4.22834246E8 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) ISNULL)))<=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CASE v0.c0  WHEN 0.8364692438143733 THEN v0.c0 WHEN vt0.c0 THEN '381062521' WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)/(vt0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) WHEN v0.c0 THEN (v0.c0 IN (vt0.c0, v0.c0)) END ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, CASE v0.c0  WHEN 0x59df4f67 THEN vt0.c0 END COLLATE BINARY DESC, CASE (+ (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM WHEN (vt0.c0 IN (v0.c0)) THEN 4.22834246E8 END  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CASE v0.c0  WHEN 0.8364692438143733 THEN v0.c0 WHEN vt0.c0 THEN '381062521' WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)/(vt0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) WHEN v0.c0 THEN (v0.c0 IN (vt0.c0, v0.c0)) END WHERE ((((((vt0.c0) ISNULL)))<=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, CASE v0.c0  WHEN 0x59df4f67 THEN vt0.c0 END COLLATE BINARY DESC, CASE (+ (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM WHEN (vt0.c0 IN (v0.c0)) THEN 4.22834246E8 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) ISNULL)))<=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CASE v0.c0  WHEN 0.8364692438143733 THEN v0.c0 WHEN vt0.c0 THEN '381062521' WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)/(vt0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) WHEN v0.c0 THEN (v0.c0 IN (vt0.c0, v0.c0)) END ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, CASE v0.c0  WHEN 0x59df4f67 THEN vt0.c0 END COLLATE BINARY DESC, CASE (+ (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM WHEN (vt0.c0 IN (v0.c0)) THEN 4.22834246E8 END  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CASE v0.c0  WHEN 0.8364692438143733 THEN v0.c0 WHEN vt0.c0 THEN '381062521' WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)/(vt0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) WHEN v0.c0 THEN (v0.c0 IN (vt0.c0, v0.c0)) END WHERE ((((((vt0.c0) ISNULL)))<=((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, CASE v0.c0  WHEN 0x59df4f67 THEN vt0.c0 END COLLATE BINARY DESC, CASE (+ (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE RTRIM WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM WHEN (vt0.c0 IN (v0.c0)) THEN 4.22834246E8 END  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))) ORDER BY rt0.c0;
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c4 COLLATE RTRIM) BETWEEN (((((NULL)AND(rt0.c1)))OR(rt0.c4))) AND (((vt0.c0) IS FALSE)))) ORDER BY ((((rt0.c3)OR(rt0.c2)))OR(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE RTRIM) BETWEEN (((((NULL)AND(rt0.c1)))OR(rt0.c4))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c3)OR(rt0.c2)))OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c4 COLLATE RTRIM) BETWEEN (((((NULL)AND(rt0.c1)))OR(rt0.c4))) AND (((vt0.c0) IS FALSE)))) ORDER BY ((((rt0.c3)OR(rt0.c2)))OR(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE RTRIM) BETWEEN (((((NULL)AND(rt0.c1)))OR(rt0.c4))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c3)OR(rt0.c2)))OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((rt0.c4 COLLATE RTRIM) BETWEEN (((((NULL)AND(rt0.c1)))OR(rt0.c4))) AND (((vt0.c0) IS FALSE)))) ORDER BY ((((rt0.c3)OR(rt0.c2)))OR(vt0.c0)) COLLATE NOCASE;
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, NULL, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, NULL, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, NULL, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, NULL, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, NULL, vt0.c0))))));
SELECT * FROM v0, rt0, vt0 WHERE ((((((rt0.c3))<=((rt0.c1))))<(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0x11919efa THEN v0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))<=((rt0.c1))))<(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0X11919efa THEN v0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((((((rt0.c3))<=((rt0.c1))))<(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0x11919efa THEN v0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))<=((rt0.c1))))<(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0X11919efa THEN v0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((((((rt0.c3))<=((rt0.c1))))<(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN 0x11919efa THEN v0.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM v0, vt0 WHERE (INSTR(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((v0.c0)=(v0.c0)))) ORDER BY COALESCE(vt0.c0, (NOT ('-1766271910'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((v0.c0)==(v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY COALESCE(vt0.c0, (NOT ('-1766271910'))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (INSTR(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((v0.c0)=(v0.c0)))) ORDER BY COALESCE(vt0.c0, (NOT ('-1766271910'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((v0.c0)==(v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY COALESCE(vt0.c0, (NOT ('-1766271910'))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (INSTR(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)), ((v0.c0)=(v0.c0)))) ORDER BY COALESCE(vt0.c0, (NOT ('-1766271910'))) ASC;
SELECT COUNT(*) FROM v0 WHERE ('32592203' COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('32592203' COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('32592203' COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('32592203' COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('32592203' COLLATE NOCASE COLLATE BINARY);
SELECT * FROM vt0 WHERE (((((((((((((IFNULL(DISTINCT vt0.c0, vt0.c0))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(json_quote(vt0.c0))))AND(((vt0.c0)<<(NULL)))))AND((vt0.c0 IN ()))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((TRIM(DISTINCT vt0.c0, vt0.c0)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((IFNULL(DISTINCT vt0.c0, vt0.c0))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(json_quote(vt0.c0))))AND(((vt0.c0)<<(NULL)))))AND((vt0.c0 IN ()))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(DISTINCT vt0.c0, vt0.c0)) ISNULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((((IFNULL(DISTINCT vt0.c0, vt0.c0))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(json_quote(vt0.c0))))AND(((vt0.c0)<<(NULL)))))AND((vt0.c0 IN ()))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((TRIM(DISTINCT vt0.c0, vt0.c0)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((IFNULL(DISTINCT vt0.c0, vt0.c0))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(json_quote(vt0.c0))))AND(((vt0.c0)<<(NULL)))))AND((vt0.c0 IN ()))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(DISTINCT vt0.c0, vt0.c0)) ISNULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((((IFNULL(DISTINCT vt0.c0, vt0.c0))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(json_quote(vt0.c0))))AND(((vt0.c0)<<(NULL)))))AND((vt0.c0 IN ()))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((TRIM(DISTINCT vt0.c0, vt0.c0)) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(CAST(0.9133741406478079 AS REAL) AS BLOB)) ORDER BY ((((- (rt0.c3)), (+ (rt0.c4)), ((vt0.c0)/(rt0.c1))))<=((CAST(rt0.c2 AS TEXT), LIKELIHOOD(DISTINCT rt0.c4, 0.8127062608967588), (~ (rt0.c0))))) DESC  NULLS LAST, (((((((rt0.c4)OR(rt0.c4)))AND(v0.c0))))>=((rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0.9133741406478079 AS REAL) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((- (rt0.c3)), (+ (rt0.c4)), ((vt0.c0)/(rt0.c1))))<=((CAST(rt0.c2 AS TEXT), LIKELIHOOD(DISTINCT rt0.c4, 0.8127062608967588), (~ (rt0.c0))))) DESC  NULLS LAST, (((((((rt0.c4)OR(rt0.c4)))AND(v0.c0))))>=((rt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(CAST(0.9133741406478079 AS REAL) AS BLOB)) ORDER BY ((((- (rt0.c3)), (+ (rt0.c4)), ((vt0.c0)/(rt0.c1))))<=((CAST(rt0.c2 AS TEXT), LIKELIHOOD(DISTINCT rt0.c4, 0.8127062608967588), (~ (rt0.c0))))) DESC  NULLS LAST, (((((((rt0.c4)OR(rt0.c4)))AND(v0.c0))))>=((rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0.9133741406478079 AS REAL) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((- (rt0.c3)), (+ (rt0.c4)), ((vt0.c0)/(rt0.c1))))<=((CAST(rt0.c2 AS TEXT), LIKELIHOOD(DISTINCT rt0.c4, 0.8127062608967588), (~ (rt0.c0))))) DESC  NULLS LAST, (((((((rt0.c4)OR(rt0.c4)))AND(v0.c0))))>=((rt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(CAST(0.9133741406478079 AS REAL) AS BLOB)) ORDER BY ((((- (rt0.c3)), (+ (rt0.c4)), ((vt0.c0)/(rt0.c1))))<=((CAST(rt0.c2 AS TEXT), LIKELIHOOD(DISTINCT rt0.c4, 0.8127062608967588), (~ (rt0.c0))))) DESC  NULLS LAST, (((((((rt0.c4)OR(rt0.c4)))AND(v0.c0))))>=((rt0.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)AND(((rt0.c2) IS TRUE))))AND(((rt0.c1) ISNULL))) LEFT OUTER JOIN v0 ON (+ ((NOT (rt0.c4)))) WHERE ((((vt0.c0 COLLATE BINARY))<((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))))) ORDER BY (((rt0.c4)) NOT BETWEEN ((HEX(rt0.c0))) AND (((((('528017008')AND(v0.c0)))OR(vt0.c0))))), TYPEOF(((NULL)OR(v0.c0))) DESC  NULLS FIRST, (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) IN ())  NULLS FIRST, ((((((v0.c0)OR(rt0.c0)))AND(rt0.c3)))*((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))<((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)AND(((rt0.c2) IS TRUE))))AND(((rt0.c1) ISNULL))) LEFT OUTER JOIN v0 ON (+ ((NOT (rt0.c4)))) ORDER BY (((rt0.c4)) NOT BETWEEN ((HEX(rt0.c0))) AND (((((('528017008')AND(v0.c0)))OR(vt0.c0))))), TYPEOF(((NULL)OR(v0.c0))) DESC  NULLS FIRST, (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) IN ())  NULLS FIRST, ((((((v0.c0)OR(rt0.c0)))AND(rt0.c3)))*((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)AND(((rt0.c2) IS TRUE))))AND(((rt0.c1) ISNULL))) LEFT OUTER JOIN v0 ON (+ ((NOT (rt0.c4)))) WHERE ((((vt0.c0 COLLATE BINARY))<((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))))) ORDER BY (((rt0.c4)) NOT BETWEEN ((HEX(rt0.c0))) AND (((((('528017008')AND(v0.c0)))OR(vt0.c0))))), TYPEOF(((NULL)OR(v0.c0))) DESC  NULLS FIRST, (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) IN ())  NULLS FIRST, ((((((v0.c0)OR(rt0.c0)))AND(rt0.c3)))*((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))<((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)AND(((rt0.c2) IS TRUE))))AND(((rt0.c1) ISNULL))) LEFT OUTER JOIN v0 ON (+ ((NOT (rt0.c4)))) ORDER BY (((rt0.c4)) NOT BETWEEN ((HEX(rt0.c0))) AND (((((('528017008')AND(v0.c0)))OR(vt0.c0))))), TYPEOF(((NULL)OR(v0.c0))) DESC  NULLS FIRST, (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) IN ())  NULLS FIRST, ((((((v0.c0)OR(rt0.c0)))AND(rt0.c3)))*((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)AND(((rt0.c2) IS TRUE))))AND(((rt0.c1) ISNULL))) LEFT OUTER JOIN v0 ON (+ ((NOT (rt0.c4)))) WHERE ((((vt0.c0 COLLATE BINARY))<((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))))) ORDER BY (((rt0.c4)) NOT BETWEEN ((HEX(rt0.c0))) AND (((((('528017008')AND(v0.c0)))OR(vt0.c0))))), TYPEOF(((NULL)OR(v0.c0))) DESC  NULLS FIRST, (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)) IN ())  NULLS FIRST, ((((((v0.c0)OR(rt0.c0)))AND(rt0.c3)))*((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 WHERE (NULLIF(((rt0.c1) IS TRUE), CASE WHEN rt0.c1 THEN 0.6969118181501345 ELSE rt0.c0 END)) ORDER BY CAST((((rt0.c0, rt0.c0, rt0.c1))=((rt0.c2, 'cS', rt0.c0))) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt0.c1) IS TRUE), CASE WHEN rt0.c1 THEN 0.6969118181501345 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 ORDER BY CAST((((rt0.c0, rt0.c0, rt0.c1))=((rt0.c2, 'cS', rt0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 WHERE (NULLIF(((rt0.c1) IS TRUE), CASE WHEN rt0.c1 THEN 0.6969118181501345 ELSE rt0.c0 END)) ORDER BY CAST((((rt0.c0, rt0.c0, rt0.c1))=((rt0.c2, 'cS', rt0.c0))) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt0.c1) IS TRUE), CASE WHEN rt0.c1 THEN 0.6969118181501345 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 ORDER BY CAST((((rt0.c0, rt0.c0, rt0.c1))=((rt0.c2, 'cS', rt0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 WHERE (NULLIF(((rt0.c1) IS TRUE), CASE WHEN rt0.c1 THEN 0.6969118181501345 ELSE rt0.c0 END)) ORDER BY CAST((((rt0.c0, rt0.c0, rt0.c1))=((rt0.c2, 'cS', rt0.c0))) AS TEXT);
SELECT ALL * FROM v0 WHERE (ABS(((((v0.c0)AND(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (ABS(((((v0.c0)AND(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (ABS(((((v0.c0)AND(v0.c0)))AND(v0.c0))));
SELECT * FROM vt0 WHERE (ABS(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY ((vt0.c0)LIKE(LOWER(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)LIKE(LOWER(vt0.c0))));
SELECT * FROM vt0 WHERE (ABS(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY ((vt0.c0)LIKE(LOWER(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)LIKE(LOWER(vt0.c0))));
SELECT * FROM vt0 WHERE (ABS(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY ((vt0.c0)LIKE(LOWER(vt0.c0)));
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<=((vt0.c0))) THEN ((vt0.c0)>=(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((755946992, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((581258635, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN vt0.c0 COLLATE NOCASE ELSE vt0.c0 END) ORDER BY (~ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))<=((vt0.c0))) THEN ((vt0.c0)>=(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((755946992, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((581258635, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN vt0.c0 COLLATE NOCASE ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<=((vt0.c0))) THEN ((vt0.c0)>=(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((755946992, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((581258635, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN vt0.c0 COLLATE NOCASE ELSE vt0.c0 END) ORDER BY (~ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))<=((vt0.c0))) THEN ((vt0.c0)>=(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((755946992, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((581258635, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN vt0.c0 COLLATE NOCASE ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<=((vt0.c0))) THEN ((vt0.c0)>=(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((755946992, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((581258635, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN vt0.c0 COLLATE NOCASE ELSE vt0.c0 END) ORDER BY (~ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ('972029963')));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS NUMERIC) IN ('972029963'))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ('972029963')));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS NUMERIC) IN ('972029963'))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ('972029963')));
SELECT COUNT(*) FROM v0 WHERE (LTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (v0.c0 IN ()))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (v0.c0 IN ()))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LTRIM(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (v0.c0 IN ())));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (LIKELIHOOD(DISTINCT v0.c0, 0.7297904993206891) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT v0.c0, 0.7297904993206891) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (LIKELIHOOD(DISTINCT v0.c0, 0.7297904993206891) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT v0.c0, 0.7297904993206891) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (LIKELIHOOD(DISTINCT v0.c0, 0.7297904993206891) COLLATE NOCASE);
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON ((rt0.c4) NOT NULL) COLLATE NOCASE WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) IN ())) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((rt0.c4) NOT NULL) COLLATE NOCASE);
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON ((rt0.c4) NOT NULL) COLLATE NOCASE WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) IN ())) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((rt0.c4) NOT NULL) COLLATE NOCASE);
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON ((rt0.c4) NOT NULL) COLLATE NOCASE WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) IN ()));
SELECT ALL * FROM rt0, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)/(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)/(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)/(v0.c0))) NOTNULL));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((NULL)%(((((-1.78689389E8)AND(rt0.c4)))OR(rt0.c3)))) WHERE ((((- (rt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND (rt0.c1))) ORDER BY ((rt0.c0) BETWEEN ('2019254679' COLLATE NOCASE) AND (((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))), ((((rt0.c0)<<(vt0.c0)))=((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND (rt0.c1))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((NULL)%(((((-1.78689389E8)AND(rt0.c4)))OR(rt0.c3)))) ORDER BY ((rt0.c0) BETWEEN ('2019254679' COLLATE NOCASE) AND (((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))), ((((rt0.c0)<<(vt0.c0)))=((rt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((NULL)%(((((-1.78689389E8)AND(rt0.c4)))OR(rt0.c3)))) WHERE ((((- (rt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND (rt0.c1))) ORDER BY ((rt0.c0) BETWEEN ('2019254679' COLLATE NOCASE) AND (((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))), ((((rt0.c0)<<(vt0.c0)))=((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND (rt0.c1))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((NULL)%(((((-1.78689389E8)AND(rt0.c4)))OR(rt0.c3)))) ORDER BY ((rt0.c0) BETWEEN ('2019254679' COLLATE NOCASE) AND (((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))), ((((rt0.c0)<<(vt0.c0)))=((rt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((NULL)%(((((-1.78689389E8)AND(rt0.c4)))OR(rt0.c3)))) WHERE ((((- (rt0.c0))) NOT BETWEEN ((rt0.c4 IN ())) AND (rt0.c1))) ORDER BY ((rt0.c0) BETWEEN ('2019254679' COLLATE NOCASE) AND (((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))), ((((rt0.c0)<<(vt0.c0)))=((rt0.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT NULL))IS((~ (rt0.c3))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((x'')) AND ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL))IS((~ (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((x'')) AND ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT NULL))IS((~ (rt0.c3))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((x'')) AND ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL))IS((~ (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((x'')) AND ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT NULL))IS((~ (rt0.c3))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((x'')) AND ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN json_insert(rt0.c2, vt0.c0, rt0.c1, rt0.c4, rt0.c4) THEN ((vt0.c0)||(rt0.c2)) WHEN ((rt0.c2)<(rt0.c4)) THEN ((rt0.c1)IS NOT(rt0.c3)) WHEN ((rt0.c3)LIKE(vt0.c0)) THEN CHANGES() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_insert(rt0.c2, vt0.c0, rt0.c1, rt0.c4, rt0.c4) THEN ((vt0.c0)||(rt0.c2)) WHEN ((rt0.c2)<(rt0.c4)) THEN ((rt0.c1)IS NOT(rt0.c3)) WHEN ((rt0.c3)LIKE(vt0.c0)) THEN CHANGES() END) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN json_insert(rt0.c2, vt0.c0, rt0.c1, rt0.c4, rt0.c4) THEN ((vt0.c0)||(rt0.c2)) WHEN ((rt0.c2)<(rt0.c4)) THEN ((rt0.c1)IS NOT(rt0.c3)) WHEN ((rt0.c3)LIKE(vt0.c0)) THEN CHANGES() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_insert(rt0.c2, vt0.c0, rt0.c1, rt0.c4, rt0.c4) THEN ((vt0.c0)||(rt0.c2)) WHEN ((rt0.c2)<(rt0.c4)) THEN ((rt0.c1)IS NOT(rt0.c3)) WHEN ((rt0.c3)LIKE(vt0.c0)) THEN CHANGES() END) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (rt0.c3) ORDER BY ((((x'') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c4)<=(rt0.c0)))) ASC  NULLS LAST, ((((((vt0.c0)IS NOT('-105724975')))AND(((rt0.c4) BETWEEN (rt0.c3) AND (NULL)))))AND(rt0.c0 COLLATE NOCASE))  NULLS FIRST, CASE WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)) THEN v0.c0 WHEN CAST('쉤fov' AS TEXT) THEN (rt0.c3 IN ()) WHEN load_extension(rt0.c3) THEN ((v0.c0)<(rt0.c0)) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((x'') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c4)<=(rt0.c0)))) ASC  NULLS LAST, ((((((vt0.c0)IS NOT('-105724975')))AND(((rt0.c4) BETWEEN (rt0.c3) AND (NULL)))))AND(rt0.c0 COLLATE NOCASE))  NULLS FIRST, CASE WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)) THEN v0.c0 WHEN CAST('쉤fov' AS TEXT) THEN (rt0.c3 IN ()) WHEN load_extension(rt0.c3) THEN ((v0.c0)<(rt0.c0)) ELSE vt0.c0 END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (rt0.c3) ORDER BY ((((x'') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c4)<=(rt0.c0)))) ASC  NULLS LAST, ((((((vt0.c0)IS NOT('-105724975')))AND(((rt0.c4) BETWEEN (rt0.c3) AND (NULL)))))AND(rt0.c0 COLLATE NOCASE))  NULLS FIRST, CASE WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)) THEN v0.c0 WHEN CAST('쉤fov' AS TEXT) THEN (rt0.c3 IN ()) WHEN load_extension(rt0.c3) THEN ((v0.c0)<(rt0.c0)) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((x'') BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c4)<=(rt0.c0)))) ASC  NULLS LAST, ((((((vt0.c0)IS NOT('-105724975')))AND(((rt0.c4) BETWEEN (rt0.c3) AND (NULL)))))AND(rt0.c0 COLLATE NOCASE))  NULLS FIRST, CASE WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)) THEN v0.c0 WHEN CAST('쉤fov' AS TEXT) THEN (rt0.c3 IN ()) WHEN load_extension(rt0.c3) THEN ((v0.c0)<(rt0.c0)) ELSE vt0.c0 END DESC  NULLS FIRST);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR((rt0.c4 IN ()))))OR(rt0.c3 COLLATE RTRIM)) CROSS JOIN rt0 ON ((CAST(rt0.c1 AS REAL))AND((((rt0.c2))>=((v0.c0))))) WHERE (((rt0.c3) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR((rt0.c4 IN ()))))OR(rt0.c3 COLLATE RTRIM)) CROSS JOIN rt0 ON ((CAST(rt0.c1 AS REAL))AND((((rt0.c2))>=((v0.c0))))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR((rt0.c4 IN ()))))OR(rt0.c3 COLLATE RTRIM)) CROSS JOIN rt0 ON ((CAST(rt0.c1 AS REAL))AND((((rt0.c2))>=((v0.c0))))) WHERE (((rt0.c3) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS BLOB))OR((rt0.c4 IN ()))))OR(rt0.c3 COLLATE RTRIM)) CROSS JOIN rt0 ON ((CAST(rt0.c1 AS REAL))AND((((rt0.c2))>=((v0.c0))))));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON ABS(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1))) WHERE (((((SQLITE_COMPILEOPTION_GET(rt0.c3))OR((+ (vt0.c0)))))AND((rt0.c4 IN ())))) ORDER BY ((v0.c0)AND(rt0.c2)) COLLATE RTRIM DESC, ((vt0.c0) IS TRUE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((SQLITE_COMPILEOPTION_GET(rt0.c3))OR((+ (vt0.c0)))))AND((rt0.c4 IN ())))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ABS(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1))) ORDER BY ((v0.c0)AND(rt0.c2)) COLLATE RTRIM DESC, ((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON ABS(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1))) WHERE (((((SQLITE_COMPILEOPTION_GET(rt0.c3))OR((+ (vt0.c0)))))AND((rt0.c4 IN ())))) ORDER BY ((v0.c0)AND(rt0.c2)) COLLATE RTRIM DESC, ((vt0.c0) IS TRUE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((SQLITE_COMPILEOPTION_GET(rt0.c3))OR((+ (vt0.c0)))))AND((rt0.c4 IN ())))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ABS(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1))) ORDER BY ((v0.c0)AND(rt0.c2)) COLLATE RTRIM DESC, ((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON ABS(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1))) WHERE (((((SQLITE_COMPILEOPTION_GET(rt0.c3))OR((+ (vt0.c0)))))AND((rt0.c4 IN ())))) ORDER BY ((v0.c0)AND(rt0.c2)) COLLATE RTRIM DESC, ((vt0.c0) IS TRUE) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN (v0.c0)) AS BLOB)) ORDER BY CAST(((v0.c0) NOT NULL) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT NULL) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN (v0.c0)) AS BLOB)) ORDER BY CAST(((v0.c0) NOT NULL) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT NULL) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN (v0.c0)) AS BLOB)) ORDER BY CAST(((v0.c0) NOT NULL) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((NULL IN ()))GLOB(((rt0.c3) NOT BETWEEN (vt0.c0) AND (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))GLOB(((rt0.c3) NOT BETWEEN (vt0.c0) AND (x''))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((NULL IN ()))GLOB(((rt0.c3) NOT BETWEEN (vt0.c0) AND (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))GLOB(((rt0.c3) NOT BETWEEN (vt0.c0) AND (x''))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((NULL IN ()))GLOB(((rt0.c3) NOT BETWEEN (vt0.c0) AND (x'')))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0xffffffff91ea2bec WHEN vt0.c0 THEN rt0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0xffffffff91ea2bec WHEN vt0.c0 THEN rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0xffffffff91ea2bec WHEN vt0.c0 THEN rt0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0xffffffff91ea2bec WHEN vt0.c0 THEN rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN 0xffffffff91ea2bec WHEN vt0.c0 THEN rt0.c1 END) NOT NULL));
SELECT * FROM v0, vt0 WHERE (UNICODE(((v0.c0) BETWEEN (vt0.c0) AND (x''))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((v0.c0) BETWEEN (vt0.c0) AND (x'')))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (UNICODE(((v0.c0) BETWEEN (vt0.c0) AND (x''))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((v0.c0) BETWEEN (vt0.c0) AND (x'')))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (UNICODE(((v0.c0) BETWEEN (vt0.c0) AND (x''))));
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((- (((((rt0.c2)OR(rt0.c1)))AND(v0.c0))))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c2)OR(rt0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CAST(rt0.c2 COLLATE NOCASE AS INTEGER));
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((- (((((rt0.c2)OR(rt0.c1)))AND(v0.c0))))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c2)OR(rt0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CAST(rt0.c2 COLLATE NOCASE AS INTEGER));
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((- (((((rt0.c2)OR(rt0.c1)))AND(v0.c0))))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS INTEGER);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (NULL) AND (rt0.c3)))|(CASE WHEN rt0.c0 THEN NULL END))) ORDER BY (NOT (((rt0.c4)/(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (NULL) AND (rt0.c3)))|(CASE WHEN rt0.c0 THEN NULL END))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c4)/(rt0.c3)))) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (NULL) AND (rt0.c3)))|(CASE WHEN rt0.c0 THEN NULL END))) ORDER BY (NOT (((rt0.c4)/(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (NULL) AND (rt0.c3)))|(CASE WHEN rt0.c0 THEN NULL END))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c4)/(rt0.c3)))) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (NULL) AND (rt0.c3)))|(CASE WHEN rt0.c0 THEN NULL END))) ORDER BY (NOT (((rt0.c4)/(rt0.c3)))) DESC;
SELECT ALL * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY TYPEOF((((vt0.c0))>((vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF((((vt0.c0))>((vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY TYPEOF((((vt0.c0))>((vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF((((vt0.c0))>((vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY TYPEOF((((vt0.c0))>((vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0) IS TRUE) COLLATE RTRIM) ORDER BY ((((vt0.c0)IS NOT('')))/((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)IS NOT('')))/((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0) IS TRUE) COLLATE RTRIM) ORDER BY ((((vt0.c0)IS NOT('')))/((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)IS NOT('')))/((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0) IS TRUE) COLLATE RTRIM) ORDER BY ((((vt0.c0)IS NOT('')))/((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) ASC;
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(((rt0.c4)LIKE(rt0.c3)) AS REAL) INNER JOIN vt0 ON rt0.c3 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(((rt0.c4)LIKE(rt0.c3)) AS REAL) INNER JOIN vt0 ON rt0.c3);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(((rt0.c4)LIKE(rt0.c3)) AS REAL) INNER JOIN vt0 ON rt0.c3 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(((rt0.c4)LIKE(rt0.c3)) AS REAL) INNER JOIN vt0 ON rt0.c3);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(((rt0.c4)LIKE(rt0.c3)) AS REAL) INNER JOIN vt0 ON rt0.c3 WHERE (rt0.c0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2)LIKE(rt0.c2)), ((969900597)*(rt0.c3)), x'96b9'))>=((((vt0.c0) ISNULL), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((vt0.c0)%(x'')))))) ORDER BY (rt0.c1 IN (rt0.c0, rt0.c4)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)LIKE(rt0.c2)), ((969900597)*(rt0.c3)), x'96b9'))>=((((vt0.c0) ISNULL), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((vt0.c0)%(x'')))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c1 IN (rt0.c0, rt0.c4)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2)LIKE(rt0.c2)), ((969900597)*(rt0.c3)), x'96b9'))>=((((vt0.c0) ISNULL), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((vt0.c0)%(x'')))))) ORDER BY (rt0.c1 IN (rt0.c0, rt0.c4)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)LIKE(rt0.c2)), ((969900597)*(rt0.c3)), x'96b9'))>=((((vt0.c0) ISNULL), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((vt0.c0)%(x'')))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c1 IN (rt0.c0, rt0.c4)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2)LIKE(rt0.c2)), ((969900597)*(rt0.c3)), x'96b9'))>=((((vt0.c0) ISNULL), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((vt0.c0)%(x'')))))) ORDER BY (rt0.c1 IN (rt0.c0, rt0.c4)) COLLATE NOCASE;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((v0.c0 IN ()))<=(((rt0.c0)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))<=(((rt0.c0)%(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((v0.c0 IN ()))<=(((rt0.c0)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))<=(((rt0.c0)%(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((v0.c0 IN ()))<=(((rt0.c0)%(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1858768247' WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1858768247' WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1858768247' WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1858768247' WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1858768247' WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END AS TEXT));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN v0.c0 END)) AND ((((((vt0.c0)AND(rt0.c3)))OR(0.18170094615203636))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN v0.c0 END)) AND ((((((vt0.c0)AND(rt0.c3)))OR(0.18170094615203636)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN v0.c0 END)) AND ((((((vt0.c0)AND(rt0.c3)))OR(0.18170094615203636))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN v0.c0 END)) AND ((((((vt0.c0)AND(rt0.c3)))OR(0.18170094615203636)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN v0.c0 END)) AND ((((((vt0.c0)AND(rt0.c3)))OR(0.18170094615203636))))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (json_array_length(rt0.c4) COLLATE BINARY) ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)), (((rt0.c3)) NOT BETWEEN ((8.77632954E8)) AND ((rt0.c1))), vt0.c0)) AND (((NOT (rt0.c3)), NULL, (rt0.c2 IN (rt0.c1))))), ((((((((((((((vt0.c0)AND('趙UCQ%WV\r\r')))AND(vt0.c0)))OR(rt0.c3)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array_length(rt0.c4) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)), (((rt0.c3)) NOT BETWEEN ((8.77632954E8)) AND ((rt0.c1))), vt0.c0)) AND (((NOT (rt0.c3)), NULL, (rt0.c2 IN (rt0.c1))))), ((((((((((((((vt0.c0)AND('趙UCQ%WV\r\r')))AND(vt0.c0)))OR(rt0.c3)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (json_array_length(rt0.c4) COLLATE BINARY) ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)), (((rt0.c3)) NOT BETWEEN ((8.77632954E8)) AND ((rt0.c1))), vt0.c0)) AND (((NOT (rt0.c3)), NULL, (rt0.c2 IN (rt0.c1))))), ((((((((((((((vt0.c0)AND('趙UCQ%WV\r\r')))AND(vt0.c0)))OR(rt0.c3)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array_length(rt0.c4) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)), (((rt0.c3)) NOT BETWEEN ((8.77632954E8)) AND ((rt0.c1))), vt0.c0)) AND (((NOT (rt0.c3)), NULL, (rt0.c2 IN (rt0.c1))))), ((((((((((((((vt0.c0)AND('趙UCQ%WV\r\r')))AND(vt0.c0)))OR(rt0.c3)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (json_array_length(rt0.c4) COLLATE BINARY) ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c1)), (((rt0.c3)) NOT BETWEEN ((8.77632954E8)) AND ((rt0.c1))), vt0.c0)) AND (((NOT (rt0.c3)), NULL, (rt0.c2 IN (rt0.c1))))), ((((((((((((((vt0.c0)AND('趙UCQ%WV\r\r')))AND(vt0.c0)))OR(rt0.c3)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((v0.c0 IN ()));
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN ((NULL) IS FALSE) THEN ((((v0.c0)OR(rt0.c2)))OR(rt0.c1)) ELSE ('604334477' IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL) IS FALSE) THEN ((((v0.c0)OR(rt0.c2)))OR(rt0.c1)) ELSE ('604334477' IN ()) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN ((NULL) IS FALSE) THEN ((((v0.c0)OR(rt0.c2)))OR(rt0.c1)) ELSE ('604334477' IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL) IS FALSE) THEN ((((v0.c0)OR(rt0.c2)))OR(rt0.c1)) ELSE ('604334477' IN ()) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN ((NULL) IS FALSE) THEN ((((v0.c0)OR(rt0.c2)))OR(rt0.c1)) ELSE ('604334477' IN ()) END);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (0.9714659538157366);
SELECT SUM(count) FROM (SELECT ALL ((0.9714659538157366) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (0.9714659538157366);
SELECT SUM(count) FROM (SELECT ALL ((0.9714659538157366) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (0.9714659538157366);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((vt0.c0, vt0.c0, v0.c0))!=((vt0.c0, rt0.c2, rt0.c0)))) BETWEEN (((vt0.c0)<(rt0.c2))) AND (RTRIM(rt0.c4)))) ORDER BY ((rt0.c2)AND(v0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, v0.c0))<>((vt0.c0, rt0.c2, rt0.c0)))) BETWEEN (((vt0.c0)<(rt0.c2))) AND (RTRIM(rt0.c4)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((rt0.c2)AND(v0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((vt0.c0, vt0.c0, v0.c0))!=((vt0.c0, rt0.c2, rt0.c0)))) BETWEEN (((vt0.c0)<(rt0.c2))) AND (RTRIM(rt0.c4)))) ORDER BY ((rt0.c2)AND(v0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, v0.c0))<>((vt0.c0, rt0.c2, rt0.c0)))) BETWEEN (((vt0.c0)<(rt0.c2))) AND (RTRIM(rt0.c4)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((rt0.c2)AND(v0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((vt0.c0, vt0.c0, v0.c0))!=((vt0.c0, rt0.c2, rt0.c0)))) BETWEEN (((vt0.c0)<(rt0.c2))) AND (RTRIM(rt0.c4)))) ORDER BY ((rt0.c2)AND(v0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((JULIANDAY(v0.c0, v0.c0, v0.c0, v0.c0, 'g\r'))AND((((v0.c0, x'', '-1914004343', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) NOTNULL)))) ORDER BY (((NOT (v0.c0)))=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC, (((((((v0.c0))<=((v0.c0))))AND(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((JULIANDAY(v0.c0, v0.c0, v0.c0, v0.c0, 'g\r'))AND((((v0.c0, x'', '-1914004343', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))==(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC, (((((((v0.c0))<=((v0.c0))))AND(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL * FROM v0 WHERE (((((JULIANDAY(v0.c0, v0.c0, v0.c0, v0.c0, 'g\r'))AND((((v0.c0, x'', '-1914004343', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) NOTNULL)))) ORDER BY (((NOT (v0.c0)))=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC, (((((((v0.c0))<=((v0.c0))))AND(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((JULIANDAY(v0.c0, v0.c0, v0.c0, v0.c0, 'g\r'))AND((((v0.c0, x'', '-1914004343', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))==(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC, (((((((v0.c0))<=((v0.c0))))AND(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL * FROM v0 WHERE (((((JULIANDAY(v0.c0, v0.c0, v0.c0, v0.c0, 'g\r'))AND((((v0.c0, x'', '-1914004343', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))))OR(((v0.c0) NOTNULL)))) ORDER BY (((NOT (v0.c0)))=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST, (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC, (((((((v0.c0))<=((v0.c0))))AND(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) END) ORDER BY vt0.c0, (((((NULL))<=((vt0.c0)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS REAL)  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (((((NULL))<=((vt0.c0)))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) END) ORDER BY vt0.c0, (((((NULL))<=((vt0.c0)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS REAL)  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (((((NULL))<=((vt0.c0)))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) END) ORDER BY vt0.c0, (((((NULL))<=((vt0.c0)))) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (-651606903) ORDER BY CAST(((rt0.c3) NOT NULL) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-651606903) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c3) NOT NULL) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (-651606903) ORDER BY CAST(((rt0.c3) NOT NULL) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-651606903) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c3) NOT NULL) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (-651606903) ORDER BY CAST(((rt0.c3) NOT NULL) AS TEXT) DESC;
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c1)>>(rt0.c2))))>=((((v0.c0)+(rt0.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c1)>>(rt0.c2))))>=((((v0.c0)+(rt0.c4)))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c1)>>(rt0.c2))))>=((((v0.c0)+(rt0.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c1)>>(rt0.c2))))>=((((v0.c0)+(rt0.c4)))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c1)>>(rt0.c2))))>=((((v0.c0)+(rt0.c4)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((+ (rt0.c2))) ISNULL)) ORDER BY (- (rt0.c2)) ASC, (((rt0.c2 IN ())) NOT NULL)  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c4)))AND(0xffffffff812c156a)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (rt0.c2)) ASC, (((rt0.c2 IN ())) NOT NULL)  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c4)))AND(0Xffffffff812c156a)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((+ (rt0.c2))) ISNULL)) ORDER BY (- (rt0.c2)) ASC, (((rt0.c2 IN ())) NOT NULL)  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c4)))AND(0xffffffff812c156a)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (rt0.c2)) ASC, (((rt0.c2 IN ())) NOT NULL)  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c4)))AND(0Xffffffff812c156a)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((+ (rt0.c2))) ISNULL)) ORDER BY (- (rt0.c2)) ASC, (((rt0.c2 IN ())) NOT NULL)  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c4)))AND(0xffffffff812c156a)) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((v0.c0 IN (rt0.c4, rt0.c3))))<>((LIKELIHOOD(DISTINCT rt0.c2, 0.6518750282042955)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN (rt0.c4, rt0.c3))))<>((LIKELIHOOD(DISTINCT rt0.c2, 0.6518750282042955))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((v0.c0 IN (rt0.c4, rt0.c3))))<>((LIKELIHOOD(DISTINCT rt0.c2, 0.6518750282042955)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN (rt0.c4, rt0.c3))))<>((LIKELIHOOD(DISTINCT rt0.c2, 0.6518750282042955))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((v0.c0 IN (rt0.c4, rt0.c3))))<>((LIKELIHOOD(DISTINCT rt0.c2, 0.6518750282042955)))));
SELECT * FROM rt0 WHERE (LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT ALL * FROM v0 WHERE ((~ (0.5281053028137345)));
SELECT SUM(count) FROM (SELECT (((~ (0.5281053028137345))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (0.5281053028137345)));
SELECT SUM(count) FROM (SELECT (((~ (0.5281053028137345))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (0.5281053028137345)));
SELECT * FROM rt0, v0 WHERE (TYPEOF(CAST(x'' AS REAL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CAST(x'' AS REAL))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (TYPEOF(CAST(x'' AS REAL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CAST(x'' AS REAL))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (TYPEOF(CAST(x'' AS REAL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(rt0.c4)) ORDER BY COALESCE((((rt0.c4))<>((rt0.c0))), ((rt0.c3) IS TRUE), ((rt0.c2)*(rt0.c4)), 0X470548b6) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(rt0.c4)) IS TRUE)  as count FROM rt0 ORDER BY COALESCE((((rt0.c4))!=((rt0.c0))), ((rt0.c3) IS TRUE), ((rt0.c2)*(rt0.c4)), 0x470548b6) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(rt0.c4)) ORDER BY COALESCE((((rt0.c4))<>((rt0.c0))), ((rt0.c3) IS TRUE), ((rt0.c2)*(rt0.c4)), 0X470548b6) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(rt0.c4)) IS TRUE)  as count FROM rt0 ORDER BY COALESCE((((rt0.c4))!=((rt0.c0))), ((rt0.c3) IS TRUE), ((rt0.c2)*(rt0.c4)), 0x470548b6) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(rt0.c4)) ORDER BY COALESCE((((rt0.c4))<>((rt0.c0))), ((rt0.c3) IS TRUE), ((rt0.c2)*(rt0.c4)), 0X470548b6) ASC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((((v0.c0)IS NOT(vt0.c0)))<<(CAST(v0.c0 AS TEXT)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(vt0.c0)))<<(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((v0.c0)IS NOT(vt0.c0)))<<(CAST(v0.c0 AS TEXT)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(vt0.c0)))<<(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((v0.c0)IS NOT(vt0.c0)))<<(CAST(v0.c0 AS TEXT)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((rt0.c1) IS FALSE))+(CAST(vt0.c0 AS BLOB))) FULL OUTER JOIN rt0 ON NULL WHERE (((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE COLLATE NOCASE) ORDER BY 'Cp\>)-C0' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((rt0.c1) IS FALSE))+(CAST(vt0.c0 AS BLOB))) FULL OUTER JOIN rt0 ON NULL ORDER BY 'Cp\>)-C0' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((rt0.c1) IS FALSE))+(CAST(vt0.c0 AS BLOB))) FULL OUTER JOIN rt0 ON NULL WHERE (((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE COLLATE NOCASE) ORDER BY 'Cp\>)-C0' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((rt0.c1) IS FALSE))+(CAST(vt0.c0 AS BLOB))) FULL OUTER JOIN rt0 ON NULL ORDER BY 'Cp\>)-C0' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((vt0.c0)OR(rt0.c3)) IN ())) ORDER BY ((CAST(rt0.c1 AS REAL))>=((~ (rt0.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)OR(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((CAST(rt0.c1 AS REAL))>=((~ (rt0.c4)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((vt0.c0)OR(rt0.c3)) IN ())) ORDER BY ((CAST(rt0.c1 AS REAL))>=((~ (rt0.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)OR(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((CAST(rt0.c1 AS REAL))>=((~ (rt0.c4)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((vt0.c0)OR(rt0.c3)) IN ())) ORDER BY ((CAST(rt0.c1 AS REAL))>=((~ (rt0.c4)))) DESC;
SELECT ALL * FROM rt0, v0 WHERE (CASE ((rt0.c4) NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN x'307e' END) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))-(CAST(rt0.c2 AS INTEGER))), CASE LIKELY(rt0.c3)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2)) THEN CAST(rt0.c1 AS BLOB) ELSE NULL END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c4) NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN x'307e' END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))-(CAST(rt0.c2 AS INTEGER))), CASE LIKELY(rt0.c3)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2)) THEN CAST(rt0.c1 AS BLOB) ELSE NULL END  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CASE ((rt0.c4) NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN x'307e' END) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))-(CAST(rt0.c2 AS INTEGER))), CASE LIKELY(rt0.c3)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2)) THEN CAST(rt0.c1 AS BLOB) ELSE NULL END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c4) NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN x'307e' END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))-(CAST(rt0.c2 AS INTEGER))), CASE LIKELY(rt0.c3)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2)) THEN CAST(rt0.c1 AS BLOB) ELSE NULL END  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CASE ((rt0.c4) NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN x'307e' END) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))-(CAST(rt0.c2 AS INTEGER))), CASE LIKELY(rt0.c3)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2)) THEN CAST(rt0.c1 AS BLOB) ELSE NULL END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (RTRIM((- (vt0.c0)))) ORDER BY (x'78fd' IN (vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((RTRIM((- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (x'78fd' IN (vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (RTRIM((- (vt0.c0)))) ORDER BY (x'78fd' IN (vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((RTRIM((- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (x'78fd' IN (vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (RTRIM((- (vt0.c0)))) ORDER BY (x'78fd' IN (vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON rt0.c2 WHERE (((vt0.c0 COLLATE NOCASE)/(CAST(rt0.c4 AS NUMERIC)))) ORDER BY (+ (((rt0.c3) BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)/(CAST(rt0.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON rt0.c2 ORDER BY (+ (((rt0.c3) BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON rt0.c2 WHERE (((vt0.c0 COLLATE NOCASE)/(CAST(rt0.c4 AS NUMERIC)))) ORDER BY (+ (((rt0.c3) BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)/(CAST(rt0.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON rt0.c2 ORDER BY (+ (((rt0.c3) BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON rt0.c2 WHERE (((vt0.c0 COLLATE NOCASE)/(CAST(rt0.c4 AS NUMERIC)))) ORDER BY (+ (((rt0.c3) BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((UPPER(NULL)))<((0.3632750087691853 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((UPPER(NULL)))<((0.3632750087691853 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((UPPER(NULL)))<((0.3632750087691853 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((UPPER(NULL)))<((0.3632750087691853 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((UPPER(NULL)))<((0.3632750087691853 COLLATE NOCASE))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(((v0.c0)AND(rt0.c2)) AS REAL)) ORDER BY (('676899123')<>(x'')) DESC, x'';
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)AND(rt0.c2)) AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (('676899123')<>(x'')) DESC, x'');
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(((v0.c0)AND(rt0.c2)) AS REAL)) ORDER BY (('676899123')<>(x'')) DESC, x'';
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)AND(rt0.c2)) AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (('676899123')<>(x'')) DESC, x'');
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(((v0.c0)AND(rt0.c2)) AS REAL)) ORDER BY (('676899123')<>(x'')) DESC, x'';
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (SQLITE_VERSION()) ORDER BY (+ (TRIM(DISTINCT rt0.c4, rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (+ (TRIM(DISTINCT rt0.c4, rt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (SQLITE_VERSION()) ORDER BY (+ (TRIM(DISTINCT rt0.c4, rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (+ (TRIM(DISTINCT rt0.c4, rt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (SQLITE_VERSION()) ORDER BY (+ (TRIM(DISTINCT rt0.c4, rt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON x'' WHERE (((rt0.c4 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON x'' WHERE (((rt0.c4 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON x'' WHERE (((rt0.c4 COLLATE NOCASE) IS FALSE));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0)==(v0.c0))) AND (v0.c0 COLLATE RTRIM))) ORDER BY CASE ''  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE RTRIM WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0)=(v0.c0))) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY CASE ''  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE RTRIM WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0)==(v0.c0))) AND (v0.c0 COLLATE RTRIM))) ORDER BY CASE ''  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE RTRIM WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0)=(v0.c0))) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY CASE ''  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE RTRIM WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0)==(v0.c0))) AND (v0.c0 COLLATE RTRIM))) ORDER BY CASE ''  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE RTRIM WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 END ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))<=(rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST, ((((((rt0.c2)%(rt0.c2)))OR((((x'6feb')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))<=(rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST, ((((((rt0.c2)%(rt0.c2)))OR((((x'6feb')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))<=(rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST, ((((((rt0.c2)%(rt0.c2)))OR((((x'6feb')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))<=(rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST, ((((((rt0.c2)%(rt0.c2)))OR((((x'6feb')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c4) ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c0)))<=(rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST, ((((((rt0.c2)%(rt0.c2)))OR((((x'6feb')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CASE WHEN rt0.c3 THEN rt0.c3 END))) ORDER BY MIN(((rt0.c2)LIKE(rt0.c3)), rt0.c1) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c3 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY MIN(((rt0.c2)LIKE(rt0.c3)), rt0.c1) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CASE WHEN rt0.c3 THEN rt0.c3 END))) ORDER BY MIN(((rt0.c2)LIKE(rt0.c3)), rt0.c1) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c3 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY MIN(((rt0.c2)LIKE(rt0.c3)), rt0.c1) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CASE WHEN rt0.c3 THEN rt0.c3 END))) ORDER BY MIN(((rt0.c2)LIKE(rt0.c3)), rt0.c1) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)<=(v0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0, NULL, v0.c0))<((0.830736609263635, vt0.c0, v0.c0)))))) ORDER BY TYPEOF(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('now'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(v0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0, NULL, v0.c0))<((0.830736609263635, vt0.c0, v0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY TYPEOF(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('now'))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)<=(v0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0, NULL, v0.c0))<((0.830736609263635, vt0.c0, v0.c0)))))) ORDER BY TYPEOF(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('now'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(v0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0, NULL, v0.c0))<((0.830736609263635, vt0.c0, v0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY TYPEOF(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('now'))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)<=(v0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0, NULL, v0.c0))<((0.830736609263635, vt0.c0, v0.c0)))))) ORDER BY TYPEOF(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('now'))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)<>(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR((('') IS FALSE)))) ORDER BY 0.8871839251582433 ASC  NULLS LAST, SQLITE_COMPILEOPTION_USED((('<YaC*푎Rp')OR(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)<>(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR((('') IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY 0.8871839251582433 ASC  NULLS LAST, SQLITE_COMPILEOPTION_USED((('<YaC*푎Rp')OR(v0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)<>(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR((('') IS FALSE)))) ORDER BY 0.8871839251582433 ASC  NULLS LAST, SQLITE_COMPILEOPTION_USED((('<YaC*푎Rp')OR(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)<>(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR((('') IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY 0.8871839251582433 ASC  NULLS LAST, SQLITE_COMPILEOPTION_USED((('<YaC*푎Rp')OR(v0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)<>(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR((('') IS FALSE)))) ORDER BY 0.8871839251582433 ASC  NULLS LAST, SQLITE_COMPILEOPTION_USED((('<YaC*푎Rp')OR(v0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN ((((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0)))) AND ((+ (NULL))))) ORDER BY ((((v0.c0)%(NULL))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN ((((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0)))) AND ((+ (NULL))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)%(NULL))) NOT NULL));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN ((((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0)))) AND ((+ (NULL))))) ORDER BY ((((v0.c0)%(NULL))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN ((((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0)))) AND ((+ (NULL))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)%(NULL))) NOT NULL));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN ((((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0)))) AND ((+ (NULL))))) ORDER BY ((((v0.c0)%(NULL))) NOT NULL);
SELECT * FROM vt0, v0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('2040391973') AND (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('2040391973') AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('2040391973') AND (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('2040391973') AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('2040391973') AND (v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0)) COLLATE RTRIM) ORDER BY 'IQ';
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY 'IQ');
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0)) COLLATE RTRIM) ORDER BY 'IQ';
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY 'IQ');
SELECT COUNT(*) FROM v0 WHERE ((+ (v0.c0)) COLLATE RTRIM) ORDER BY 'IQ';
SELECT ALL COUNT(*) FROM vt0 WHERE (((ABS(vt0.c0))%((vt0.c0 IN ())))) ORDER BY COALESCE(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c0))%((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((ABS(vt0.c0))%((vt0.c0 IN ())))) ORDER BY COALESCE(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c0))%((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((ABS(vt0.c0))%((vt0.c0 IN ())))) ORDER BY COALESCE(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END IN ()) WHERE ((((((rt0.c0))>=((rt0.c1)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>=((rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END IN ()));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END IN ()) WHERE ((((((rt0.c0))>=((rt0.c1)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>=((rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END IN ()));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END IN ()) WHERE ((((((rt0.c0))>=((rt0.c1)))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) IS FALSE))));
SELECT * FROM vt0 WHERE (((((((('')AND(vt0.c0)))OR(vt0.c0))))<>((((vt0.c0) NOTNULL))))) ORDER BY (((0.50404275490107)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((UNLIKELY(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((('')AND(vt0.c0)))OR(vt0.c0))))<>((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0 ORDER BY (((0.50404275490107)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((UNLIKELY(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (((((((('')AND(vt0.c0)))OR(vt0.c0))))<>((((vt0.c0) NOTNULL))))) ORDER BY (((0.50404275490107)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((UNLIKELY(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((('')AND(vt0.c0)))OR(vt0.c0))))<>((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0 ORDER BY (((0.50404275490107)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((UNLIKELY(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (((((((('')AND(vt0.c0)))OR(vt0.c0))))<>((((vt0.c0) NOTNULL))))) ORDER BY (((0.50404275490107)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((UNLIKELY(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON (+ (((rt0.c1)/(rt0.c2)))) WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c3)) IS FALSE)) ORDER BY ((v0.c0)IS(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST, (((NOT (rt0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND ((vt0.c0 IN (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(rt0.c3)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON (+ (((rt0.c1)/(rt0.c2)))) ORDER BY ((v0.c0)IS(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST, (((NOT (rt0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND ((vt0.c0 IN (rt0.c4)))));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON (+ (((rt0.c1)/(rt0.c2)))) WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c3)) IS FALSE)) ORDER BY ((v0.c0)IS(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST, (((NOT (rt0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND ((vt0.c0 IN (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(rt0.c3)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON (+ (((rt0.c1)/(rt0.c2)))) ORDER BY ((v0.c0)IS(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST, (((NOT (rt0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND ((vt0.c0 IN (rt0.c4)))));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON (+ (((rt0.c1)/(rt0.c2)))) WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c3)) IS FALSE)) ORDER BY ((v0.c0)IS(rt0.c0)) COLLATE BINARY ASC  NULLS FIRST, (((NOT (rt0.c2))) BETWEEN (rt0.c1 COLLATE NOCASE) AND ((vt0.c0 IN (rt0.c4))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c4  WHEN x'' THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE WHEN ((rt0.c2)AND(rt0.c2)) THEN rt0.c1 ELSE (((rt0.c1, rt0.c1, rt0.c4))<>((rt0.c0, rt0.c1, rt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN x'' THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2)AND(rt0.c2)) THEN rt0.c1 ELSE (((rt0.c1, rt0.c1, rt0.c4))!=((rt0.c0, rt0.c1, rt0.c0))) END DESC);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c4  WHEN x'' THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE WHEN ((rt0.c2)AND(rt0.c2)) THEN rt0.c1 ELSE (((rt0.c1, rt0.c1, rt0.c4))<>((rt0.c0, rt0.c1, rt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN x'' THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2)AND(rt0.c2)) THEN rt0.c1 ELSE (((rt0.c1, rt0.c1, rt0.c4))!=((rt0.c0, rt0.c1, rt0.c0))) END DESC);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c4  WHEN x'' THEN rt0.c0 ELSE rt0.c1 END COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE WHEN ((rt0.c2)AND(rt0.c2)) THEN rt0.c1 ELSE (((rt0.c1, rt0.c1, rt0.c4))<>((rt0.c0, rt0.c1, rt0.c0))) END DESC;
SELECT * FROM v0, rt0, vt0 WHERE (((LOWER(DISTINCT rt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT rt0.c1)) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((LOWER(DISTINCT rt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT rt0.c1)) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((LOWER(DISTINCT rt0.c1)) NOTNULL));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(((((((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))AND('劶H')) AS REAL) WHERE (((((((rt0.c4)>=(rt0.c4)))AND(v0.c0 COLLATE BINARY)))OR(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)>=(rt0.c4)))AND(v0.c0 COLLATE BINARY)))OR(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(((((((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))AND('劶H')) AS REAL));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(((((((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))AND('劶H')) AS REAL) WHERE (((((((rt0.c4)>=(rt0.c4)))AND(v0.c0 COLLATE BINARY)))OR(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)>=(rt0.c4)))AND(v0.c0 COLLATE BINARY)))OR(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(((((((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))AND('劶H')) AS REAL));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(((((((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))AND('劶H')) AS REAL) WHERE (((((((rt0.c4)>=(rt0.c4)))AND(v0.c0 COLLATE BINARY)))OR(((rt0.c3) NOT NULL))));
SELECT * FROM v0, rt0 WHERE ((- (((rt0.c4)=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c4)=(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((- (((rt0.c4)=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c4)=(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((- (((rt0.c4)=(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))))>=((v0.c0)))) ORDER BY CASE WHEN ((rt0.c4)GLOB(vt0.c0)) THEN (NOT (rt0.c2)) WHEN rt0.c4 THEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c4) NOTNULL) THEN '-2121422624' WHEN (((rt0.c2, x'', vt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.33175151930004443, x'12e2', rt0.c1))) THEN IFNULL(DISTINCT v0.c0, rt0.c1) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c4) BETWEEN (rt0.c2) AND (x'')) END;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))))>=((v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE WHEN ((rt0.c4)GLOB(vt0.c0)) THEN (NOT (rt0.c2)) WHEN rt0.c4 THEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c4) NOTNULL) THEN '-2121422624' WHEN (((rt0.c2, x'', vt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.33175151930004443, x'12e2', rt0.c1))) THEN IFNULL(DISTINCT v0.c0, rt0.c1) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c4) BETWEEN (rt0.c2) AND (x'')) END);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))))>=((v0.c0)))) ORDER BY CASE WHEN ((rt0.c4)GLOB(vt0.c0)) THEN (NOT (rt0.c2)) WHEN rt0.c4 THEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c4) NOTNULL) THEN '-2121422624' WHEN (((rt0.c2, x'', vt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.33175151930004443, x'12e2', rt0.c1))) THEN IFNULL(DISTINCT v0.c0, rt0.c1) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c4) BETWEEN (rt0.c2) AND (x'')) END;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))))>=((v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE WHEN ((rt0.c4)GLOB(vt0.c0)) THEN (NOT (rt0.c2)) WHEN rt0.c4 THEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c4) NOTNULL) THEN '-2121422624' WHEN (((rt0.c2, x'', vt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.33175151930004443, x'12e2', rt0.c1))) THEN IFNULL(DISTINCT v0.c0, rt0.c1) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c4) BETWEEN (rt0.c2) AND (x'')) END);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))))>=((v0.c0)))) ORDER BY CASE WHEN ((rt0.c4)GLOB(vt0.c0)) THEN (NOT (rt0.c2)) WHEN rt0.c4 THEN ((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c4) NOTNULL) THEN '-2121422624' WHEN (((rt0.c2, x'', vt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.33175151930004443, x'12e2', rt0.c1))) THEN IFNULL(DISTINCT v0.c0, rt0.c1) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c4) BETWEEN (rt0.c2) AND (x'')) END;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT * FROM rt0 WHERE (((((- (rt0.c0))))<((IFNULL(DISTINCT rt0.c0, rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt0.c0))))<((IFNULL(DISTINCT rt0.c0, rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((- (rt0.c0))))<((IFNULL(DISTINCT rt0.c0, rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt0.c0))))<((IFNULL(DISTINCT rt0.c0, rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((- (rt0.c0))))<((IFNULL(DISTINCT rt0.c0, rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c4 END)AND(((rt0.c4)-(rt0.c1)))))AND(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c4 THEN rt0.c4 END)AND(((rt0.c4)-(rt0.c1)))))AND(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c4 END)AND(((rt0.c4)-(rt0.c1)))))AND(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c4 THEN rt0.c4 END)AND(((rt0.c4)-(rt0.c1)))))AND(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c4 END)AND(((rt0.c4)-(rt0.c1)))))AND(rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((rt0.c1 IN ()))));
SELECT * FROM rt0, v0, vt0 WHERE (LIKELY(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (LIKELY(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (LIKELY(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE ((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(v0.c0)))AND(vt0.c0))))<=((((rt0.c1)GLOB(rt0.c2)))))) ORDER BY ((0Xffffffffeffdd79b) BETWEEN (CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) ASC, ((((('569397658', v0.c0, rt0.c0)) BETWEEN ((rt0.c2, x'', rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c0))))>(((v0.c0)<(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(v0.c0)))AND(vt0.c0))))<=((((rt0.c1)GLOB(rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0 ORDER BY ((0Xffffffffeffdd79b) BETWEEN (CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) ASC, ((((('569397658', v0.c0, rt0.c0)) BETWEEN ((rt0.c2, x'', rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c0))))>(((v0.c0)<(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE ((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(v0.c0)))AND(vt0.c0))))<=((((rt0.c1)GLOB(rt0.c2)))))) ORDER BY ((0Xffffffffeffdd79b) BETWEEN (CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) ASC, ((((('569397658', v0.c0, rt0.c0)) BETWEEN ((rt0.c2, x'', rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c0))))>(((v0.c0)<(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(v0.c0)))AND(vt0.c0))))<=((((rt0.c1)GLOB(rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0 ORDER BY ((0Xffffffffeffdd79b) BETWEEN (CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) ASC, ((((('569397658', v0.c0, rt0.c0)) BETWEEN ((rt0.c2, x'', rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c0))))>(((v0.c0)<(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE ((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(v0.c0)))AND(vt0.c0))))<=((((rt0.c1)GLOB(rt0.c2)))))) ORDER BY ((0Xffffffffeffdd79b) BETWEEN (CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)) ASC, ((((('569397658', v0.c0, rt0.c0)) BETWEEN ((rt0.c2, x'', rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c0))))>(((v0.c0)<(rt0.c4))));
SELECT * FROM v0, rt0 FULL OUTER JOIN vt0 ON CAST((rt0.c1 IN ()) AS BLOB) WHERE ((((rt0.c4)) NOT BETWEEN (((- (rt0.c3)))) AND (((~ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN (((- (rt0.c3)))) AND (((~ (rt0.c3)))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON CAST((rt0.c1 IN ()) AS BLOB));
SELECT * FROM v0, rt0 FULL OUTER JOIN vt0 ON CAST((rt0.c1 IN ()) AS BLOB) WHERE ((((rt0.c4)) NOT BETWEEN (((- (rt0.c3)))) AND (((~ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN (((- (rt0.c3)))) AND (((~ (rt0.c3)))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON CAST((rt0.c1 IN ()) AS BLOB));
SELECT * FROM v0, rt0 FULL OUTER JOIN vt0 ON CAST((rt0.c1 IN ()) AS BLOB) WHERE ((((rt0.c4)) NOT BETWEEN (((- (rt0.c3)))) AND (((~ (rt0.c3))))));
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((rt0.c4 IN ()) IN ()) WHERE (((CAST(569397658 AS INTEGER)) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c1)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(569397658 AS INTEGER)) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c1)GLOB(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((rt0.c4 IN ()) IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((rt0.c4 IN ()) IN ()) WHERE (((CAST(569397658 AS INTEGER)) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c1)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(569397658 AS INTEGER)) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c1)GLOB(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((rt0.c4 IN ()) IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((rt0.c4 IN ()) IN ()) WHERE (((CAST(569397658 AS INTEGER)) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c1)GLOB(rt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (LIKE(vt0.c0, vt0.c0, 'r'))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (LIKE(vt0.c0, vt0.c0, 'r')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (LIKE(vt0.c0, vt0.c0, 'r'))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (LIKE(vt0.c0, vt0.c0, 'r')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (LIKE(vt0.c0, vt0.c0, 'r'))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((- (rt0.c0))))) ORDER BY ((rt0.c3)<<(0.15984620840584107))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3)<<(0.15984620840584107))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((- (rt0.c0))))) ORDER BY ((rt0.c3)<<(0.15984620840584107))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3)<<(0.15984620840584107))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((- (rt0.c0))))) ORDER BY ((rt0.c3)<<(0.15984620840584107))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN (rt0.c1)))&(((0.5329047964282785)<>(rt0.c3)))) WHERE (((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))%(CAST(v0.c0 AS TEXT)))) ORDER BY (- (v0.c0)) COLLATE RTRIM DESC, UPPER(DISTINCT rt0.c0)  NULLS FIRST, ((x'' IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))%(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN (rt0.c1)))&(((0.5329047964282785)<>(rt0.c3)))) ORDER BY (- (v0.c0)) COLLATE RTRIM DESC, UPPER(DISTINCT rt0.c0)  NULLS FIRST, ((x'' IN ()) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN (rt0.c1)))&(((0.5329047964282785)<>(rt0.c3)))) WHERE (((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))%(CAST(v0.c0 AS TEXT)))) ORDER BY (- (v0.c0)) COLLATE RTRIM DESC, UPPER(DISTINCT rt0.c0)  NULLS FIRST, ((x'' IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))%(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN (rt0.c1)))&(((0.5329047964282785)<>(rt0.c3)))) ORDER BY (- (v0.c0)) COLLATE RTRIM DESC, UPPER(DISTINCT rt0.c0)  NULLS FIRST, ((x'' IN ()) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (((vt0.c0 IN (rt0.c1)))&(((0.5329047964282785)<>(rt0.c3)))) WHERE (((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))%(CAST(v0.c0 AS TEXT)))) ORDER BY (- (v0.c0)) COLLATE RTRIM DESC, UPPER(DISTINCT rt0.c0)  NULLS FIRST, ((x'' IN ()) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON rt0.c3 INNER JOIN vt0 ON CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (NOT (rt0.c4)) THEN ((rt0.c0) ISNULL) WHEN TRIM(DISTINCT rt0.c0, rt0.c3) THEN NULL WHEN (((rt0.c0))<((rt0.c0))) THEN ((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)) WHEN (rt0.c1 IN ()) THEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))) END WHERE (((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON rt0.c3 INNER JOIN vt0 ON CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (NOT (rt0.c4)) THEN ((rt0.c0) ISNULL) WHEN TRIM(DISTINCT rt0.c0, rt0.c3) THEN NULL WHEN (((rt0.c0))<((rt0.c0))) THEN ((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)) WHEN (rt0.c1 IN ()) THEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))) END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON rt0.c3 INNER JOIN vt0 ON CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (NOT (rt0.c4)) THEN ((rt0.c0) ISNULL) WHEN TRIM(DISTINCT rt0.c0, rt0.c3) THEN NULL WHEN (((rt0.c0))<((rt0.c0))) THEN ((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)) WHEN (rt0.c1 IN ()) THEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))) END WHERE (((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON rt0.c3 INNER JOIN vt0 ON CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (NOT (rt0.c4)) THEN ((rt0.c0) ISNULL) WHEN TRIM(DISTINCT rt0.c0, rt0.c3) THEN NULL WHEN (((rt0.c0))<((rt0.c0))) THEN ((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)) WHEN (rt0.c1 IN ()) THEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))) END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON rt0.c3 INNER JOIN vt0 ON CASE WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN (NOT (rt0.c4)) THEN ((rt0.c0) ISNULL) WHEN TRIM(DISTINCT rt0.c0, rt0.c3) THEN NULL WHEN (((rt0.c0))<((rt0.c0))) THEN ((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)) WHEN (rt0.c1 IN ()) THEN (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))) END WHERE (((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)) THEN CASE NULL  WHEN rt0.c0 THEN rt0.c3 END END WHERE ((((((rt0.c1))<=((rt0.c4)))) NOT BETWEEN ((rt0.c3 IN (rt0.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((rt0.c4)))) NOT BETWEEN ((rt0.c3 IN (rt0.c0))) AND (x''))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)) THEN CASE NULL  WHEN rt0.c0 THEN rt0.c3 END END);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)) THEN CASE NULL  WHEN rt0.c0 THEN rt0.c3 END END WHERE ((((((rt0.c1))<=((rt0.c4)))) NOT BETWEEN ((rt0.c3 IN (rt0.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((rt0.c4)))) NOT BETWEEN ((rt0.c3 IN (rt0.c0))) AND (x''))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)) THEN CASE NULL  WHEN rt0.c0 THEN rt0.c3 END END);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)) THEN CASE NULL  WHEN rt0.c0 THEN rt0.c3 END END WHERE ((((((rt0.c1))<=((rt0.c4)))) NOT BETWEEN ((rt0.c3 IN (rt0.c0))) AND (x'')));
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c0)))&(((v0.c0)GLOB(v0.c0))))) ORDER BY (((+ (1792043300)))<(1614988503)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))&(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((+ (1792043300)))<(1614988503)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c0)))&(((v0.c0)GLOB(v0.c0))))) ORDER BY (((+ (1792043300)))<(1614988503)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))&(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((+ (1792043300)))<(1614988503)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c0)))&(((v0.c0)GLOB(v0.c0))))) ORDER BY (((+ (1792043300)))<(1614988503)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)) IN ())) ORDER BY 1423985952 DESC;
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY 1423985952 DESC);
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)) IN ())) ORDER BY 1423985952 DESC;
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY 1423985952 DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((NULL)LIKE(rt0.c2)) END INNER JOIN v0 ON rt0.c0 WHERE (((((NULL)AND(vt0.c0 COLLATE NOCASE)))OR(((((rt0.c3)OR(v0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(vt0.c0 COLLATE NOCASE)))OR(((((rt0.c3)OR(v0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((NULL)LIKE(rt0.c2)) END INNER JOIN v0 ON rt0.c0);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((NULL)LIKE(rt0.c2)) END INNER JOIN v0 ON rt0.c0 WHERE (((((NULL)AND(vt0.c0 COLLATE NOCASE)))OR(((((rt0.c3)OR(v0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(vt0.c0 COLLATE NOCASE)))OR(((((rt0.c3)OR(v0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((NULL)LIKE(rt0.c2)) END INNER JOIN v0 ON rt0.c0);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((NULL)LIKE(rt0.c2)) END INNER JOIN v0 ON rt0.c0 WHERE (((((NULL)AND(vt0.c0 COLLATE NOCASE)))OR(((((rt0.c3)OR(v0.c0)))OR(rt0.c0)))));
SELECT ALL * FROM rt0, v0 WHERE ((+ (v0.c0))) ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN SQLITE_SOURCE_ID() WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (v0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END WHEN (rt0.c3 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END ELSE (- (v0.c0)) END ASC, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN SQLITE_SOURCE_ID() WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (v0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END WHEN (rt0.c3 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END ELSE (- (v0.c0)) END ASC, v0.c0 ASC);
SELECT ALL * FROM rt0, v0 WHERE ((+ (v0.c0))) ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN SQLITE_SOURCE_ID() WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (v0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END WHEN (rt0.c3 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END ELSE (- (v0.c0)) END ASC, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((+ (v0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN SQLITE_SOURCE_ID() WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (v0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END WHEN (rt0.c3 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END ELSE (- (v0.c0)) END ASC, v0.c0 ASC);
SELECT ALL * FROM rt0, v0 WHERE ((+ (v0.c0))) ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN SQLITE_SOURCE_ID() WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (v0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END WHEN (rt0.c3 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END ELSE (- (v0.c0)) END ASC, v0.c0 ASC;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c1);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)||(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((vt0.c0 COLLATE BINARY)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)||(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)||(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((vt0.c0 COLLATE BINARY)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)||(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)||(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((vt0.c0 COLLATE BINARY)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((CAST(v0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE)))OR(CASE v0.c0  WHEN 0.36179490125368374 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))) ORDER BY ((((v0.c0) NOTNULL)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CASE WHEN v0.c0 THEN 4.17269208E8 END))  NULLS LAST, NULL  NULLS LAST, CASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE)))OR(CASE v0.c0  WHEN 0.36179490125368374 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) NOTNULL)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CASE WHEN v0.c0 THEN 4.17269208E8 END))  NULLS LAST, NULL  NULLS LAST, CASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((CAST(v0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE)))OR(CASE v0.c0  WHEN 0.36179490125368374 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))) ORDER BY ((((v0.c0) NOTNULL)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CASE WHEN v0.c0 THEN 4.17269208E8 END))  NULLS LAST, NULL  NULLS LAST, CASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE)))OR(CASE v0.c0  WHEN 0.36179490125368374 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) NOTNULL)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CASE WHEN v0.c0 THEN 4.17269208E8 END))  NULLS LAST, NULL  NULLS LAST, CASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((CAST(v0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE)))OR(CASE v0.c0  WHEN 0.36179490125368374 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END))) ORDER BY ((((v0.c0) NOTNULL)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (CASE WHEN v0.c0 THEN 4.17269208E8 END))  NULLS LAST, NULL  NULLS LAST, CASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (NULL);
SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c0)))%(((v0.c0)||(v0.c0))))) ORDER BY ((((0.4500975490930652)<>(v0.c0)))<<('')) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(v0.c0)))%(((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((0.4500975490930652)!=(v0.c0)))<<('')) ASC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c0)))%(((v0.c0)||(v0.c0))))) ORDER BY ((((0.4500975490930652)<>(v0.c0)))<<('')) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(v0.c0)))%(((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((0.4500975490930652)!=(v0.c0)))<<('')) ASC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c0)))%(((v0.c0)||(v0.c0))))) ORDER BY ((((0.4500975490930652)<>(v0.c0)))<<('')) ASC;
SELECT * FROM vt0, rt0 WHERE ((+ (rt0.c4)) COLLATE RTRIM) ORDER BY (NOT (json_quote(rt0.c1))) DESC  NULLS FIRST, (((((((((+ (rt0.c1)))OR((rt0.c4 IN ()))))AND(rt0.c0)))AND(((((x'')OR(rt0.c4)))OR(rt0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN x'2f0c' WHEN vt0.c0 THEN NULL WHEN 0X479e6af7 THEN rt0.c4 ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (json_quote(rt0.c1))) DESC  NULLS FIRST, (((((((((+ (rt0.c1)))OR((rt0.c4 IN ()))))AND(rt0.c0)))AND(((((x'')OR(rt0.c4)))OR(rt0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN x'2f0c' WHEN vt0.c0 THEN NULL WHEN 0x479e6af7 THEN rt0.c4 ELSE rt0.c2 END))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((+ (rt0.c4)) COLLATE RTRIM) ORDER BY (NOT (json_quote(rt0.c1))) DESC  NULLS FIRST, (((((((((+ (rt0.c1)))OR((rt0.c4 IN ()))))AND(rt0.c0)))AND(((((x'')OR(rt0.c4)))OR(rt0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN x'2f0c' WHEN vt0.c0 THEN NULL WHEN 0X479e6af7 THEN rt0.c4 ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (json_quote(rt0.c1))) DESC  NULLS FIRST, (((((((((+ (rt0.c1)))OR((rt0.c4 IN ()))))AND(rt0.c0)))AND(((((x'')OR(rt0.c4)))OR(rt0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN x'2f0c' WHEN vt0.c0 THEN NULL WHEN 0x479e6af7 THEN rt0.c4 ELSE rt0.c2 END))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((+ (rt0.c4)) COLLATE RTRIM) ORDER BY (NOT (json_quote(rt0.c1))) DESC  NULLS FIRST, (((((((((+ (rt0.c1)))OR((rt0.c4 IN ()))))AND(rt0.c0)))AND(((((x'')OR(rt0.c4)))OR(rt0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN x'2f0c' WHEN vt0.c0 THEN NULL WHEN 0X479e6af7 THEN rt0.c4 ELSE rt0.c2 END))  NULLS LAST;
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) WHERE (((((rt0.c0) IS TRUE))<=(CAST(rt0.c3 AS INTEGER)))) ORDER BY ((((NOT (rt0.c1))))>((((rt0.c3)>>(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))<=(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) ORDER BY ((((NOT (rt0.c1))))>((((rt0.c3)>>(rt0.c4))))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) WHERE (((((rt0.c0) IS TRUE))<=(CAST(rt0.c3 AS INTEGER)))) ORDER BY ((((NOT (rt0.c1))))>((((rt0.c3)>>(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))<=(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) ORDER BY ((((NOT (rt0.c1))))>((((rt0.c3)>>(rt0.c4))))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) WHERE (((((rt0.c0) IS TRUE))<=(CAST(rt0.c3 AS INTEGER)))) ORDER BY ((((NOT (rt0.c1))))>((((rt0.c3)>>(rt0.c4)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))>(json_extract(vt0.c0, vt0.c0))), v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))>(json_extract(vt0.c0, vt0.c0))), v0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))>(json_extract(vt0.c0, vt0.c0))), v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))>(json_extract(vt0.c0, vt0.c0))), v0.c0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (NULL COLLATE NOCASE) ORDER BY CASE LTRIM(rt0.c1, rt0.c2)  WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) THEN TRIM(DISTINCT vt0.c0) ELSE x'' END ASC;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE LTRIM(rt0.c1, rt0.c2)  WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) THEN TRIM(DISTINCT vt0.c0) ELSE x'' END ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (NULL COLLATE NOCASE) ORDER BY CASE LTRIM(rt0.c1, rt0.c2)  WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) THEN TRIM(DISTINCT vt0.c0) ELSE x'' END ASC;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE LTRIM(rt0.c1, rt0.c2)  WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) THEN TRIM(DISTINCT vt0.c0) ELSE x'' END ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (NULL COLLATE NOCASE) ORDER BY CASE LTRIM(rt0.c1, rt0.c2)  WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)) THEN TRIM(DISTINCT vt0.c0) ELSE x'' END ASC;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST(CAST(rt0.c0 AS REAL) AS REAL) CROSS JOIN vt0 ON ((CASE WHEN NULL THEN rt0.c3 END) BETWEEN ((('-964043676')<>(vt0.c0))) AND (MAX(rt0.c0, v0.c0))) WHERE (rt0.c4) ORDER BY ((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)) COLLATE BINARY ASC, ((((((((((rt0.c2)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c1)))OR(rt0.c3)))<<(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CAST(CAST(rt0.c0 AS REAL) AS REAL) CROSS JOIN vt0 ON ((CASE WHEN NULL THEN rt0.c3 END) BETWEEN ((('-964043676')!=(vt0.c0))) AND (MAX(rt0.c0, v0.c0))) ORDER BY ((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)) COLLATE BINARY ASC, ((((((((((rt0.c2)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c1)))OR(rt0.c3)))<<(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST(CAST(rt0.c0 AS REAL) AS REAL) CROSS JOIN vt0 ON ((CASE WHEN NULL THEN rt0.c3 END) BETWEEN ((('-964043676')<>(vt0.c0))) AND (MAX(rt0.c0, v0.c0))) WHERE (rt0.c4) ORDER BY ((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)) COLLATE BINARY ASC, ((((((((((rt0.c2)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c1)))OR(rt0.c3)))<<(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CAST(CAST(rt0.c0 AS REAL) AS REAL) CROSS JOIN vt0 ON ((CASE WHEN NULL THEN rt0.c3 END) BETWEEN ((('-964043676')!=(vt0.c0))) AND (MAX(rt0.c0, v0.c0))) ORDER BY ((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)) COLLATE BINARY ASC, ((((((((((rt0.c2)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c1)))OR(rt0.c3)))<<(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CAST(CAST(rt0.c0 AS REAL) AS REAL) CROSS JOIN vt0 ON ((CASE WHEN NULL THEN rt0.c3 END) BETWEEN ((('-964043676')<>(vt0.c0))) AND (MAX(rt0.c0, v0.c0))) WHERE (rt0.c4) ORDER BY ((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)) COLLATE BINARY ASC, ((((((((((rt0.c2)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c1)))OR(rt0.c3)))<<(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT * FROM vt0, v0, rt0 WHERE (((((0.0936010235611161)|(vt0.c0)))>=(((rt0.c0)>(241569553))))) ORDER BY highlight(rt0.c4 COLLATE BINARY, ((((v0.c0)AND(rt0.c0)))AND(rt0.c3)), CAST(NULL AS NUMERIC), UNLIKELY(v0.c0)), rt0.c2 ASC, ((((NULL)+(rt0.c2))) BETWEEN ((+ (vt0.c0))) AND (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.0936010235611161)|(vt0.c0)))>=(((rt0.c0)>(241569553))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY highlight(rt0.c4 COLLATE BINARY, ((((v0.c0)AND(rt0.c0)))AND(rt0.c3)), CAST(NULL AS NUMERIC), UNLIKELY(v0.c0)), rt0.c2 ASC, ((((NULL)+(rt0.c2))) BETWEEN ((+ (vt0.c0))) AND (rt0.c2)) ASC);
SELECT * FROM vt0, v0, rt0 WHERE (((((0.0936010235611161)|(vt0.c0)))>=(((rt0.c0)>(241569553))))) ORDER BY highlight(rt0.c4 COLLATE BINARY, ((((v0.c0)AND(rt0.c0)))AND(rt0.c3)), CAST(NULL AS NUMERIC), UNLIKELY(v0.c0)), rt0.c2 ASC, ((((NULL)+(rt0.c2))) BETWEEN ((+ (vt0.c0))) AND (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.0936010235611161)|(vt0.c0)))>=(((rt0.c0)>(241569553))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY highlight(rt0.c4 COLLATE BINARY, ((((v0.c0)AND(rt0.c0)))AND(rt0.c3)), CAST(NULL AS NUMERIC), UNLIKELY(v0.c0)), rt0.c2 ASC, ((((NULL)+(rt0.c2))) BETWEEN ((+ (vt0.c0))) AND (rt0.c2)) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ ((((vt0.c0, rt0.c0, rt0.c1))<>((rt0.c2, rt0.c2, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0, rt0.c0, rt0.c1))!=((rt0.c2, rt0.c2, rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ ((((vt0.c0, rt0.c0, rt0.c1))<>((rt0.c2, rt0.c2, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0, rt0.c0, rt0.c1))!=((rt0.c2, rt0.c2, rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ ((((vt0.c0, rt0.c0, rt0.c1))<>((rt0.c2, rt0.c2, rt0.c3))))));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c1 AS REAL)  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN rt0.c3 COLLATE BINARY THEN rt0.c1 WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c4)OR(rt0.c1)) ELSE ((rt0.c3) ISNULL) END) ORDER BY CASE ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3))  WHEN (rt0.c2 IN ()) THEN (rt0.c2 IN (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS REAL)  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN rt0.c3 COLLATE BINARY THEN rt0.c1 WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c4)OR(rt0.c1)) ELSE ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3))  WHEN (rt0.c2 IN ()) THEN (rt0.c2 IN (rt0.c0)) END ASC);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c1 AS REAL)  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN rt0.c3 COLLATE BINARY THEN rt0.c1 WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c4)OR(rt0.c1)) ELSE ((rt0.c3) ISNULL) END) ORDER BY CASE ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3))  WHEN (rt0.c2 IN ()) THEN (rt0.c2 IN (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS REAL)  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN rt0.c3 COLLATE BINARY THEN rt0.c1 WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c4)OR(rt0.c1)) ELSE ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3))  WHEN (rt0.c2 IN ()) THEN (rt0.c2 IN (rt0.c0)) END ASC);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c1 AS REAL)  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN rt0.c3 COLLATE BINARY THEN rt0.c1 WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c4)OR(rt0.c1)) ELSE ((rt0.c3) ISNULL) END) ORDER BY CASE ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3))  WHEN (rt0.c2 IN ()) THEN (rt0.c2 IN (rt0.c0)) END ASC;
SELECT * FROM rt0, vt0, v0 WHERE (((rt0.c3)LIKE(rt0.c1)) COLLATE BINARY) ORDER BY ((DATE(v0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c4, vt0.c0)) NOT BETWEEN (rt0.c4) AND (((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)LIKE(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((DATE(v0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c4, vt0.c0)) NOT BETWEEN (rt0.c4) AND (((vt0.c0) IS TRUE))) DESC);
SELECT * FROM rt0, vt0, v0 WHERE (((rt0.c3)LIKE(rt0.c1)) COLLATE BINARY) ORDER BY ((DATE(v0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c4, vt0.c0)) NOT BETWEEN (rt0.c4) AND (((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)LIKE(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((DATE(v0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c4, vt0.c0)) NOT BETWEEN (rt0.c4) AND (((vt0.c0) IS TRUE))) DESC);
SELECT * FROM rt0, vt0, v0 WHERE (((rt0.c3)LIKE(rt0.c1)) COLLATE BINARY) ORDER BY ((DATE(v0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c4, vt0.c0)) NOT BETWEEN (rt0.c4) AND (((vt0.c0) IS TRUE))) DESC;
SELECT * FROM vt0, v0, rt0 WHERE ((('-1648997754')<=(json_array(0.9450183231313366, rt0.c4))));
SELECT SUM(count) FROM (SELECT (((('-1648997754')<=(json_array(0.9450183231313366, rt0.c4)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((('-1648997754')<=(json_array(0.9450183231313366, rt0.c4))));
SELECT SUM(count) FROM (SELECT (((('-1648997754')<=(json_array(0.9450183231313366, rt0.c4)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((('-1648997754')<=(json_array(0.9450183231313366, rt0.c4))));
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON (CAST(rt0.c3 AS INTEGER) IN (((rt0.c0)||(vt0.c0)), ((rt0.c0)IS(v0.c0)))) WHERE (MIN(vt0.c0 COLLATE NOCASE, rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((MIN(vt0.c0 COLLATE NOCASE, rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON (CAST(rt0.c3 AS INTEGER) IN (((rt0.c0)||(vt0.c0)), ((rt0.c0)IS(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON (CAST(rt0.c3 AS INTEGER) IN (((rt0.c0)||(vt0.c0)), ((rt0.c0)IS(v0.c0)))) WHERE (MIN(vt0.c0 COLLATE NOCASE, rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((MIN(vt0.c0 COLLATE NOCASE, rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON (CAST(rt0.c3 AS INTEGER) IN (((rt0.c0)||(vt0.c0)), ((rt0.c0)IS(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON (CAST(rt0.c3 AS INTEGER) IN (((rt0.c0)||(vt0.c0)), ((rt0.c0)IS(v0.c0)))) WHERE (MIN(vt0.c0 COLLATE NOCASE, rt0.c1 COLLATE BINARY));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (json_object(NULL, v0.c0)))) ORDER BY IFNULL(DISTINCT ((v0.c0)<=(v0.c0)), ((v0.c0)LIKE(0.3991468279485958)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (json_object(NULL, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY IFNULL(DISTINCT ((v0.c0)<=(v0.c0)), ((v0.c0)LIKE(0.3991468279485958))));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (json_object(NULL, v0.c0)))) ORDER BY IFNULL(DISTINCT ((v0.c0)<=(v0.c0)), ((v0.c0)LIKE(0.3991468279485958)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (json_object(NULL, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY IFNULL(DISTINCT ((v0.c0)<=(v0.c0)), ((v0.c0)LIKE(0.3991468279485958))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((~ ((+ (rt0.c2))))) ORDER BY ((x'')/(CAST(v0.c0 AS INTEGER))), ((rt0.c3 COLLATE NOCASE)%(x''));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((x'')/(CAST(v0.c0 AS INTEGER))), ((rt0.c3 COLLATE NOCASE)%(x'')));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((~ ((+ (rt0.c2))))) ORDER BY ((x'')/(CAST(v0.c0 AS INTEGER))), ((rt0.c3 COLLATE NOCASE)%(x''));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((x'')/(CAST(v0.c0 AS INTEGER))), ((rt0.c3 COLLATE NOCASE)%(x'')));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((~ ((+ (rt0.c2))))) ORDER BY ((x'')/(CAST(v0.c0 AS INTEGER))), ((rt0.c3 COLLATE NOCASE)%(x''));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (DATE((~ (rt0.c4)), rt0.c4 COLLATE BINARY, ((rt0.c1)-(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((DATE((~ (rt0.c4)), rt0.c4 COLLATE BINARY, ((rt0.c1)-(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (DATE((~ (rt0.c4)), rt0.c4 COLLATE BINARY, ((rt0.c1)-(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((DATE((~ (rt0.c4)), rt0.c4 COLLATE BINARY, ((rt0.c1)-(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (DATE((~ (rt0.c4)), rt0.c4 COLLATE BINARY, ((rt0.c1)-(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (CAST(CASE 'Ktg-n)]'  WHEN rt0.c3 THEN rt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE 'Ktg-n)]'  WHEN rt0.c3 THEN rt0.c1 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CASE 'Ktg-n)]'  WHEN rt0.c3 THEN rt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE 'Ktg-n)]'  WHEN rt0.c3 THEN rt0.c1 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CASE 'Ktg-n)]'  WHEN rt0.c3 THEN rt0.c1 END AS INTEGER));
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c2)<<(rt0.c0)) COLLATE RTRIM) ORDER BY ((CAST(rt0.c3 AS INTEGER))OR(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<<(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CAST(rt0.c3 AS INTEGER))OR(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))) DESC);
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c2)<<(rt0.c0)) COLLATE RTRIM) ORDER BY ((CAST(rt0.c3 AS INTEGER))OR(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<<(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CAST(rt0.c3 AS INTEGER))OR(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))) DESC);
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c2)<<(rt0.c0)) COLLATE RTRIM) ORDER BY ((CAST(rt0.c3 AS INTEGER))OR(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))) DESC;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((CAST(v0.c0 AS TEXT))>=(((rt0.c2) IS TRUE)))) ORDER BY ((((rt0.c1)AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c4))))))AND((((rt0.c4))>((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))>=(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c1)AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c4))))))AND((((rt0.c4))>((rt0.c0))))) DESC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((CAST(v0.c0 AS TEXT))>=(((rt0.c2) IS TRUE)))) ORDER BY ((((rt0.c1)AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c4))))))AND((((rt0.c4))>((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))>=(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c1)AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c4))))))AND((((rt0.c4))>((rt0.c0))))) DESC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((CAST(v0.c0 AS TEXT))>=(((rt0.c2) IS TRUE)))) ORDER BY ((((rt0.c1)AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c4))))))AND((((rt0.c4))>((rt0.c0))))) DESC;
SELECT * FROM rt0, v0, vt0 WHERE ((~ ('1394461528'))) ORDER BY (~ ((+ (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('1394461528'))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (~ ((+ (rt0.c1))))  NULLS LAST);
SELECT * FROM rt0, v0, vt0 WHERE ((~ ('1394461528'))) ORDER BY (~ ((+ (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('1394461528'))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (~ ((+ (rt0.c1))))  NULLS LAST);
SELECT * FROM rt0, v0, vt0 WHERE ((~ ('1394461528'))) ORDER BY (~ ((+ (rt0.c1))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1, NULL, rt0.c3))!=((rt0.c2, rt0.c4, rt0.c3))))AND(rt0.c1 COLLATE NOCASE)))OR('')));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1, NULL, rt0.c3))<>((rt0.c2, rt0.c4, rt0.c3))))AND(rt0.c1 COLLATE NOCASE)))OR(''))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1, NULL, rt0.c3))!=((rt0.c2, rt0.c4, rt0.c3))))AND(rt0.c1 COLLATE NOCASE)))OR('')));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1, NULL, rt0.c3))<>((rt0.c2, rt0.c4, rt0.c3))))AND(rt0.c1 COLLATE NOCASE)))OR(''))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1, NULL, rt0.c3))!=((rt0.c2, rt0.c4, rt0.c3))))AND(rt0.c1 COLLATE NOCASE)))OR('')));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL)) ORDER BY ((v0.c0 IN ()) IN (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((v0.c0 IN ()) IN (NULL)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL)) ORDER BY ((v0.c0 IN ()) IN (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((v0.c0 IN ()) IN (NULL)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL)) ORDER BY ((v0.c0 IN ()) IN (NULL)) DESC  NULLS LAST;
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)<<(rt0.c4)))) AND (((rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c1)<<(rt0.c4)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)<<(rt0.c4)))) AND (((rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c1)<<(rt0.c4)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c1)<<(rt0.c4)))) AND (((rt0.c2 IN ())))));
SELECT COUNT(*) FROM v0, vt0 WHERE (0.9881882060896705) ORDER BY (((v0.c0)IS NOT(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((0.9881882060896705) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)IS NOT(v0.c0)) IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE (0.9881882060896705) ORDER BY (((v0.c0)IS NOT(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((0.9881882060896705) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)IS NOT(v0.c0)) IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE (0.9881882060896705) ORDER BY (((v0.c0)IS NOT(v0.c0)) IN ());
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c2 END)) AND (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) ORDER BY (((rt0.c3)) BETWEEN ((((vt0.c0)>>(rt0.c2)))) AND (((+ (NULL))))), ((((CAST(vt0.c0 AS REAL))OR(((rt0.c2)||(rt0.c0)))))AND((rt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c2 END)) AND (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((rt0.c3)) BETWEEN ((((vt0.c0)>>(rt0.c2)))) AND (((+ (NULL))))), ((((CAST(vt0.c0 AS REAL))OR(((rt0.c2)||(rt0.c0)))))AND((rt0.c1 IN ()))) DESC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c2 END)) AND (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) ORDER BY (((rt0.c3)) BETWEEN ((((vt0.c0)>>(rt0.c2)))) AND (((+ (NULL))))), ((((CAST(vt0.c0 AS REAL))OR(((rt0.c2)||(rt0.c0)))))AND((rt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c2 END)) AND (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((rt0.c3)) BETWEEN ((((vt0.c0)>>(rt0.c2)))) AND (((+ (NULL))))), ((((CAST(vt0.c0 AS REAL))OR(((rt0.c2)||(rt0.c0)))))AND((rt0.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((rt0.c4)=(rt0.c2))) FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (rt0.c4 IN ()), (((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))) AND (((NOT (v0.c0)), (rt0.c3 IN ()), (rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (rt0.c4 IN ()), (((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))) AND (((NOT (v0.c0)), (rt0.c3 IN ()), (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((rt0.c4)==(rt0.c2))) FULL OUTER JOIN rt0 ON rt0.c2);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((rt0.c4)=(rt0.c2))) FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (rt0.c4 IN ()), (((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))) AND (((NOT (v0.c0)), (rt0.c3 IN ()), (rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (rt0.c4 IN ()), (((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))) AND (((NOT (v0.c0)), (rt0.c3 IN ()), (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((rt0.c4)==(rt0.c2))) FULL OUTER JOIN rt0 ON rt0.c2);
SELECT ALL * FROM rt0, vt0, v0 WHERE ('[p');
SELECT SUM(count) FROM (SELECT ALL (('[p') IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ('[p');
SELECT SUM(count) FROM (SELECT ALL (('[p') IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ('[p');
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c1)OR(0.023634687299069146)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))||(HEX(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)OR(0.023634687299069146)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))||(HEX(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c1)OR(0.023634687299069146)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))||(HEX(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)OR(0.023634687299069146)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))||(HEX(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((((((rt0.c1)OR(0.023634687299069146)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))||(HEX(DISTINCT v0.c0))));
SELECT ALL * FROM rt0, v0 WHERE ((((~ (rt0.c4))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c4))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((~ (rt0.c4))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c4))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((~ (rt0.c4))) IS FALSE));
SELECT * FROM vt0 WHERE ((('Di3')<=(((('', vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY (~ (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((('Di3')<=(((('', vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE ((('Di3')<=(((('', vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY (~ (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((('Di3')<=(((('', vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE ((('Di3')<=(((('', vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY (~ (vt0.c0 COLLATE RTRIM));
SELECT * FROM rt0, v0 WHERE ((0.41184999447718973 IN ()));
SELECT SUM(count) FROM (SELECT (((0.41184999447718973 IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((0.41184999447718973 IN ()));
SELECT SUM(count) FROM (SELECT (((0.41184999447718973 IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((0.41184999447718973 IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (v0.c0) AND (v0.c0 COLLATE RTRIM))) ORDER BY -411454253 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (v0.c0) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY -411454253 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (v0.c0) AND (v0.c0 COLLATE RTRIM))) ORDER BY -411454253 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (v0.c0) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY -411454253 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON vt0.c0 WHERE (((vt0.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON vt0.c0 WHERE (((vt0.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON vt0.c0 WHERE (((vt0.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM rt0 WHERE (LOWER(rt0.c4));
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c4)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LOWER(rt0.c4));
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c4)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LOWER(rt0.c4));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c0)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((vt0.c0)||(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c0)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((vt0.c0)||(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c0)||(vt0.c0))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0) IS TRUE) WHERE (((((vt0.c0)>=(v0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(v0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0) IS TRUE));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0) IS TRUE) WHERE (((((vt0.c0)>=(v0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(v0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0) IS TRUE));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0) IS TRUE) WHERE (((((vt0.c0)>=(v0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN ())) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN ())) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN ())) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ('J''vo⾉') ORDER BY rt0.c2 DESC  NULLS LAST, ((rt0.c1)|(((((((((((((vt0.c0)AND(NULL)))AND(rt0.c0)))OR(NULL)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('J''vo⾉') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST, ((rt0.c1)|(((((((((((((vt0.c0)AND(NULL)))AND(rt0.c0)))OR(NULL)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c4)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ('J''vo⾉') ORDER BY rt0.c2 DESC  NULLS LAST, ((rt0.c1)|(((((((((((((vt0.c0)AND(NULL)))AND(rt0.c0)))OR(NULL)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('J''vo⾉') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST, ((rt0.c1)|(((((((((((((vt0.c0)AND(NULL)))AND(rt0.c0)))OR(NULL)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c4)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ('J''vo⾉') ORDER BY rt0.c2 DESC  NULLS LAST, ((rt0.c1)|(((((((((((((vt0.c0)AND(NULL)))AND(rt0.c0)))OR(NULL)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c4)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(NULL)))OR(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(NULL)))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(NULL)))OR(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(NULL)))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(NULL)))OR(v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, vt0 WHERE (NULLIF(DISTINCT (vt0.c0 IN (v0.c0)), (NOT (v0.c0)))) ORDER BY 0.3037399772914712  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (vt0.c0 IN (v0.c0)), (NOT (v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.3037399772914712  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (NULLIF(DISTINCT (vt0.c0 IN (v0.c0)), (NOT (v0.c0)))) ORDER BY 0.3037399772914712  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (vt0.c0 IN (v0.c0)), (NOT (v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.3037399772914712  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (NULLIF(DISTINCT (vt0.c0 IN (v0.c0)), (NOT (v0.c0)))) ORDER BY 0.3037399772914712  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY ((CAST(rt0.c0 AS BLOB))!=((rt0.c4 IN (rt0.c4)))), (~ (((vt0.c0)-(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c0 AS BLOB))<>((rt0.c4 IN (rt0.c4)))), (~ (((vt0.c0)-(rt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY ((CAST(rt0.c0 AS BLOB))!=((rt0.c4 IN (rt0.c4)))), (~ (((vt0.c0)-(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c0 AS BLOB))<>((rt0.c4 IN (rt0.c4)))), (~ (((vt0.c0)-(rt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY ((CAST(rt0.c0 AS BLOB))!=((rt0.c4 IN (rt0.c4)))), (~ (((vt0.c0)-(rt0.c0))));
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 WHERE ((~ (((vt0.c0) IS TRUE)))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END AS BLOB) ASC, CAST('-575375181' AS NUMERIC) ASC, ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c0)))=(((rt0.c1)OR(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END AS BLOB) ASC, CAST('-575375181' AS NUMERIC) ASC, ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c0)))==(((rt0.c1)OR(NULL))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 WHERE ((~ (((vt0.c0) IS TRUE)))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END AS BLOB) ASC, CAST('-575375181' AS NUMERIC) ASC, ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c0)))=(((rt0.c1)OR(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END AS BLOB) ASC, CAST('-575375181' AS NUMERIC) ASC, ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c0)))==(((rt0.c1)OR(NULL))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 WHERE ((~ (((vt0.c0) IS TRUE)))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END AS BLOB) ASC, CAST('-575375181' AS NUMERIC) ASC, ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c0)))=(((rt0.c1)OR(NULL))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((HEX(vt0.c0))<>(rt0.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0))<>(rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((HEX(vt0.c0))<>(rt0.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0))<>(rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((HEX(vt0.c0))<>(rt0.c4 COLLATE RTRIM)));
SELECT * FROM rt0, vt0, v0 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))IS NOT(((rt0.c0)%('5p)QYj')))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))IS NOT(((rt0.c0)%('5p)QYj'))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))IS NOT(((rt0.c0)%('5p)QYj')))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))IS NOT(((rt0.c0)%('5p)QYj'))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))IS NOT(((rt0.c0)%('5p)QYj')))));
SELECT COUNT(*) FROM v0, vt0 WHERE (0.28106416983255567);
SELECT SUM(count) FROM (SELECT ((0.28106416983255567) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (0.28106416983255567);
SELECT SUM(count) FROM (SELECT ((0.28106416983255567) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (0.28106416983255567);
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 WHERE (CAST((- (-1642730847)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((- (-1642730847)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON vt0.c0);
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 WHERE (CAST((- (-1642730847)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((- (-1642730847)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON vt0.c0);
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON vt0.c0 WHERE (CAST((- (-1642730847)) AS INTEGER));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c4) BETWEEN ('') AND (v0.c0))) BETWEEN (((rt0.c3)-(vt0.c0))) AND (((rt0.c1) NOT BETWEEN ('-172635127') AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN ('') AND (v0.c0))) BETWEEN (((rt0.c3)-(vt0.c0))) AND (((rt0.c1) NOT BETWEEN ('-172635127') AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c4) BETWEEN ('') AND (v0.c0))) BETWEEN (((rt0.c3)-(vt0.c0))) AND (((rt0.c1) NOT BETWEEN ('-172635127') AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN ('') AND (v0.c0))) BETWEEN (((rt0.c3)-(vt0.c0))) AND (((rt0.c1) NOT BETWEEN ('-172635127') AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c4) BETWEEN ('') AND (v0.c0))) BETWEEN (((rt0.c3)-(vt0.c0))) AND (((rt0.c1) NOT BETWEEN ('-172635127') AND (v0.c0)))));
SELECT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0 IN ()))AND((((vt0.c0))>((vt0.c0))))))AND(((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND((((vt0.c0))>((vt0.c0))))))AND(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0 IN ()))AND((((vt0.c0))>((vt0.c0))))))AND(((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND((((vt0.c0))>((vt0.c0))))))AND(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0 IN ()))AND((((vt0.c0))>((vt0.c0))))))AND(((vt0.c0)+(vt0.c0)))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((vt0.c0 IN ()) IN (rt0.c4)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN (rt0.c4))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((vt0.c0 IN ()) IN (rt0.c4)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN (rt0.c4))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((vt0.c0 IN ()) IN (rt0.c4)));
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 END);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((('Vr䰹풘덢')LIKE(rt0.c0))) IS TRUE)) ORDER BY (('0.840765720695106')IS(((rt0.c4)<=(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((((('Vr䰹풘덢')LIKE(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (('0.840765720695106')IS(((rt0.c4)<=(rt0.c4)))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((('Vr䰹풘덢')LIKE(rt0.c0))) IS TRUE)) ORDER BY (('0.840765720695106')IS(((rt0.c4)<=(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((((('Vr䰹풘덢')LIKE(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY (('0.840765720695106')IS(((rt0.c4)<=(rt0.c4)))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((('Vr䰹풘덢')LIKE(rt0.c0))) IS TRUE)) ORDER BY (('0.840765720695106')IS(((rt0.c4)<=(rt0.c4))));
SELECT * FROM rt0 CROSS JOIN vt0 ON 0.8521597125673521 WHERE ((('.!') NOT NULL)) ORDER BY ((((rt0.c1)GLOB(rt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((('.!') NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON 0.8521597125673521 ORDER BY ((((rt0.c1)GLOB(rt0.c1))) IS FALSE));
SELECT * FROM rt0 CROSS JOIN vt0 ON 0.8521597125673521 WHERE ((('.!') NOT NULL)) ORDER BY ((((rt0.c1)GLOB(rt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((('.!') NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON 0.8521597125673521 ORDER BY ((((rt0.c1)GLOB(rt0.c1))) IS FALSE));
SELECT * FROM rt0 CROSS JOIN vt0 ON 0.8521597125673521 WHERE ((('.!') NOT NULL)) ORDER BY ((((rt0.c1)GLOB(rt0.c1))) IS FALSE);
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN v0 ON (x'' IN ((v0.c0 IN ()))) WHERE (((((rt0.c1) NOT BETWEEN ('73332358') AND (rt0.c1))) IS TRUE)) ORDER BY ((((rt0.c0)AND((+ (rt0.c0)))))AND(((rt0.c0) BETWEEN ('2054122661') AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN ('73332358') AND (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON (x'' IN ((v0.c0 IN ()))) ORDER BY ((((rt0.c0)AND((+ (rt0.c0)))))AND(((rt0.c0) BETWEEN ('2054122661') AND (rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN v0 ON (x'' IN ((v0.c0 IN ()))) WHERE (((((rt0.c1) NOT BETWEEN ('73332358') AND (rt0.c1))) IS TRUE)) ORDER BY ((((rt0.c0)AND((+ (rt0.c0)))))AND(((rt0.c0) BETWEEN ('2054122661') AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN ('73332358') AND (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON (x'' IN ((v0.c0 IN ()))) ORDER BY ((((rt0.c0)AND((+ (rt0.c0)))))AND(((rt0.c0) BETWEEN ('2054122661') AND (rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN v0 ON (x'' IN ((v0.c0 IN ()))) WHERE (((((rt0.c1) NOT BETWEEN ('73332358') AND (rt0.c1))) IS TRUE)) ORDER BY ((((rt0.c0)AND((+ (rt0.c0)))))AND(((rt0.c0) BETWEEN ('2054122661') AND (rt0.c3)))) DESC;
SELECT ALL * FROM v0, rt0 WHERE ((((x'b7da' IN ())) BETWEEN (((rt0.c0)/(rt0.c2))) AND (((rt0.c1)|('-1451299391'))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((x'b7da' IN ())) BETWEEN (((rt0.c0)/(rt0.c2))) AND (((rt0.c1)|('-1451299391'))))) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL DESC);
SELECT ALL * FROM v0, rt0 WHERE ((((x'b7da' IN ())) BETWEEN (((rt0.c0)/(rt0.c2))) AND (((rt0.c1)|('-1451299391'))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((x'b7da' IN ())) BETWEEN (((rt0.c0)/(rt0.c2))) AND (((rt0.c1)|('-1451299391'))))) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL DESC);
SELECT ALL * FROM v0, rt0 WHERE ((((x'b7da' IN ())) BETWEEN (((rt0.c0)/(rt0.c2))) AND (((rt0.c1)|('-1451299391'))))) ORDER BY NULL DESC;
SELECT * FROM v0 INNER JOIN vt0 ON (((NOT (vt0.c0))) IS FALSE) WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0)IS(0.15890405925791695)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0)IS(0.15890405925791695))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((NOT (vt0.c0))) IS FALSE));
SELECT * FROM v0 INNER JOIN vt0 ON (((NOT (vt0.c0))) IS FALSE) WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0)IS(0.15890405925791695)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0)IS(0.15890405925791695))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((NOT (vt0.c0))) IS FALSE));
SELECT * FROM v0 INNER JOIN vt0 ON (((NOT (vt0.c0))) IS FALSE) WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0)IS(0.15890405925791695)))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE (+ (rt0.c3))  WHEN CAST(v0.c0 AS BLOB) THEN 0.13638228201554925 END) ORDER BY CAST(((rt0.c4) NOTNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c3))  WHEN CAST(v0.c0 AS BLOB) THEN 0.13638228201554925 END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST(((rt0.c4) NOTNULL) AS INTEGER));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE (+ (rt0.c3))  WHEN CAST(v0.c0 AS BLOB) THEN 0.13638228201554925 END) ORDER BY CAST(((rt0.c4) NOTNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c3))  WHEN CAST(v0.c0 AS BLOB) THEN 0.13638228201554925 END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST(((rt0.c4) NOTNULL) AS INTEGER));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE (+ (rt0.c3))  WHEN CAST(v0.c0 AS BLOB) THEN 0.13638228201554925 END) ORDER BY CAST(((rt0.c4) NOTNULL) AS INTEGER);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE BINARY WHERE ((((v0.c0)) BETWEEN ((TRIM(DISTINCT rt0.c0, rt0.c0))) AND ((0.25322223133909616)))) ORDER BY (('}lU-kxFI듓') BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))) AND (((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((TRIM(DISTINCT rt0.c0, rt0.c0))) AND ((0.25322223133909616)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE BINARY ORDER BY (('}lU-kxFI듓') BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))) AND (((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE BINARY WHERE ((((v0.c0)) BETWEEN ((TRIM(DISTINCT rt0.c0, rt0.c0))) AND ((0.25322223133909616)))) ORDER BY (('}lU-kxFI듓') BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))) AND (((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((TRIM(DISTINCT rt0.c0, rt0.c0))) AND ((0.25322223133909616)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE BINARY ORDER BY (('}lU-kxFI듓') BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))) AND (((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE BINARY WHERE ((((v0.c0)) BETWEEN ((TRIM(DISTINCT rt0.c0, rt0.c0))) AND ((0.25322223133909616)))) ORDER BY (('}lU-kxFI듓') BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0))) AND (((rt0.c2) NOT NULL)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))))OR(rt0.c1 COLLATE NOCASE)) WHERE (((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>=((rt0.c0 COLLATE BINARY)))) ORDER BY CASE -6.32381768E8  WHEN (rt0.c1 IN ()) THEN TRIM(DISTINCT rt0.c4, rt0.c0) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>=((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))))OR(rt0.c1 COLLATE NOCASE)) ORDER BY CASE -6.32381768E8  WHEN (rt0.c1 IN ()) THEN TRIM(DISTINCT rt0.c4, rt0.c0) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))))OR(rt0.c1 COLLATE NOCASE)) WHERE (((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>=((rt0.c0 COLLATE BINARY)))) ORDER BY CASE -6.32381768E8  WHEN (rt0.c1 IN ()) THEN TRIM(DISTINCT rt0.c4, rt0.c0) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>=((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))))OR(rt0.c1 COLLATE NOCASE)) ORDER BY CASE -6.32381768E8  WHEN (rt0.c1 IN ()) THEN TRIM(DISTINCT rt0.c4, rt0.c0) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND(((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))))OR(rt0.c1 COLLATE NOCASE)) WHERE (((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>=((rt0.c0 COLLATE BINARY)))) ORDER BY CASE -6.32381768E8  WHEN (rt0.c1 IN ()) THEN TRIM(DISTINCT rt0.c4, rt0.c0) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(0.34573162946340164))) ORDER BY vt0.c0 ASC, (TRIM(x'', vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(0.34573162946340164))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, (TRIM(x'', vt0.c0) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(0.34573162946340164))) ORDER BY vt0.c0 ASC, (TRIM(x'', vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(0.34573162946340164))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, (TRIM(x'', vt0.c0) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(0.34573162946340164))) ORDER BY vt0.c0 ASC, (TRIM(x'', vt0.c0) IN ());
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c0 COLLATE BINARY IN ())) ORDER BY CAST(vt0.c0 AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(vt0.c0 AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c0 COLLATE BINARY IN ())) ORDER BY CAST(vt0.c0 AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(vt0.c0 AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c0 COLLATE BINARY IN ())) ORDER BY CAST(vt0.c0 AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c2))) NOT BETWEEN (0x623a9345) AND ((- (rt0.c4))))) ORDER BY ((((((((((rt0.c3) ISNULL))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(x'')))AND((rt0.c0 IN ()))))OR((rt0.c4 IN ())))  NULLS LAST, ((rt0.c1 IN ()) IN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 END, CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c2))) NOT BETWEEN (0x623a9345) AND ((- (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c3) ISNULL))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(x'')))AND((rt0.c0 IN ()))))OR((rt0.c4 IN ())))  NULLS LAST, ((rt0.c1 IN ()) IN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 END, CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c2))) NOT BETWEEN (0x623a9345) AND ((- (rt0.c4))))) ORDER BY ((((((((((rt0.c3) ISNULL))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(x'')))AND((rt0.c0 IN ()))))OR((rt0.c4 IN ())))  NULLS LAST, ((rt0.c1 IN ()) IN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 END, CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c2))) NOT BETWEEN (0x623a9345) AND ((- (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c3) ISNULL))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(x'')))AND((rt0.c0 IN ()))))OR((rt0.c4 IN ())))  NULLS LAST, ((rt0.c1 IN ()) IN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 END, CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c2))) NOT BETWEEN (0x623a9345) AND ((- (rt0.c4))))) ORDER BY ((((((((((rt0.c3) ISNULL))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))AND(x'')))AND((rt0.c0 IN ()))))OR((rt0.c4 IN ())))  NULLS LAST, ((rt0.c1 IN ()) IN (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 END, CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)) BETWEEN ((1970960652)) AND ((rt0.c1))) IN (((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) BETWEEN ((1970960652)) AND ((rt0.c1))) IN (((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)) BETWEEN ((1970960652)) AND ((rt0.c1))) IN (((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) BETWEEN ((1970960652)) AND ((rt0.c1))) IN (((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)) BETWEEN ((1970960652)) AND ((rt0.c1))) IN (((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN (('532892058')<(rt0.c0)) THEN CASE WHEN rt0.c1 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('532892058')<(rt0.c0)) THEN CASE WHEN rt0.c1 THEN v0.c0 END END) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN (('532892058')<(rt0.c0)) THEN CASE WHEN rt0.c1 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('532892058')<(rt0.c0)) THEN CASE WHEN rt0.c1 THEN v0.c0 END END) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN (('532892058')<(rt0.c0)) THEN CASE WHEN rt0.c1 THEN v0.c0 END END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY))==((CASE WHEN rt0.c3 THEN rt0.c3 END)))) ORDER BY ((((rt0.c2)<>(rt0.c1)))OR(((rt0.c1)|(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE BINARY))==((CASE WHEN rt0.c3 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)<>(rt0.c1)))OR(((rt0.c1)|(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY))==((CASE WHEN rt0.c3 THEN rt0.c3 END)))) ORDER BY ((((rt0.c2)<>(rt0.c1)))OR(((rt0.c1)|(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE BINARY))==((CASE WHEN rt0.c3 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)<>(rt0.c1)))OR(((rt0.c1)|(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY))==((CASE WHEN rt0.c3 THEN rt0.c3 END)))) ORDER BY ((((rt0.c2)<>(rt0.c1)))OR(((rt0.c1)|(rt0.c1)))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE ((('1266286180') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('1266286180') NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((('1266286180') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('1266286180') NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((('1266286180') NOTNULL));
SELECT * FROM v0, rt0 WHERE (0.15576123383807072 COLLATE RTRIM) ORDER BY (((rt0.c2)) BETWEEN (((- (rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT ((0.15576123383807072 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2)) BETWEEN (((- (rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM))) DESC);
SELECT * FROM v0, rt0 WHERE (0.15576123383807072 COLLATE RTRIM) ORDER BY (((rt0.c2)) BETWEEN (((- (rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT ((0.15576123383807072 COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c2)) BETWEEN (((- (rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM))) DESC);
SELECT * FROM v0, rt0 WHERE (0.15576123383807072 COLLATE RTRIM) ORDER BY (((rt0.c2)) BETWEEN (((- (rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (LENGTH(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LENGTH(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LENGTH(v0.c0));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c4)))%(((0.50404275490107)%(rt0.c4))))) ORDER BY (((rt0.c3)!=(rt0.c3)) IN ()) ASC  NULLS LAST, (((((rt0.c1, rt0.c1, rt0.c3))<=((rt0.c1, rt0.c1, rt0.c1))))LIKE(rt0.c3)) DESC, ((((rt0.c0)=(rt0.c2)))*(x''));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c4)))%(((0.50404275490107)%(rt0.c4))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c3)!=(rt0.c3)) IN ()) ASC  NULLS LAST, (((((rt0.c1, rt0.c1, rt0.c3))<=((rt0.c1, rt0.c1, rt0.c1))))LIKE(rt0.c3)) DESC, ((((rt0.c0)==(rt0.c2)))*(x'')));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c4)))%(((0.50404275490107)%(rt0.c4))))) ORDER BY (((rt0.c3)!=(rt0.c3)) IN ()) ASC  NULLS LAST, (((((rt0.c1, rt0.c1, rt0.c3))<=((rt0.c1, rt0.c1, rt0.c1))))LIKE(rt0.c3)) DESC, ((((rt0.c0)=(rt0.c2)))*(x''));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c4)))%(((0.50404275490107)%(rt0.c4))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c3)!=(rt0.c3)) IN ()) ASC  NULLS LAST, (((((rt0.c1, rt0.c1, rt0.c3))<=((rt0.c1, rt0.c1, rt0.c1))))LIKE(rt0.c3)) DESC, ((((rt0.c0)==(rt0.c2)))*(x'')));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c4)))%(((0.50404275490107)%(rt0.c4))))) ORDER BY (((rt0.c3)!=(rt0.c3)) IN ()) ASC  NULLS LAST, (((((rt0.c1, rt0.c1, rt0.c3))<=((rt0.c1, rt0.c1, rt0.c1))))LIKE(rt0.c3)) DESC, ((((rt0.c0)=(rt0.c2)))*(x''));
SELECT ALL * FROM rt0, v0 WHERE (((CASE rt0.c4  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c4  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CASE rt0.c4  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c4  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CASE rt0.c4  WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END) NOTNULL));
SELECT ALL * FROM v0, rt0, vt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)>=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)>=(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)>=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)>=(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)>=(vt0.c0)) IN ()));
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY);
SELECT * FROM v0 WHERE ((((0x512625e)%(v0.c0)) IN ())) ORDER BY UPPER(DISTINCT v0.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0x512625e)%(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY UPPER(DISTINCT v0.c0)  NULLS LAST);
SELECT * FROM v0 WHERE ((((0x512625e)%(v0.c0)) IN ())) ORDER BY UPPER(DISTINCT v0.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0x512625e)%(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY UPPER(DISTINCT v0.c0)  NULLS LAST);
SELECT * FROM v0 WHERE ((((0x512625e)%(v0.c0)) IN ())) ORDER BY UPPER(DISTINCT v0.c0)  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((NULL)) AND (((NOT (rt0.c0)))))) ORDER BY ((rt0.c4) BETWEEN (x'949bf99fb5d7') AND (CAST('91407144' AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((NULL)) AND (((NOT (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4) BETWEEN (x'949bf99fb5d7') AND (CAST('91407144' AS TEXT))));
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((NULL)) AND (((NOT (rt0.c0)))))) ORDER BY ((rt0.c4) BETWEEN (x'949bf99fb5d7') AND (CAST('91407144' AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((NULL)) AND (((NOT (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4) BETWEEN (x'949bf99fb5d7') AND (CAST('91407144' AS TEXT))));
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((NULL)) AND (((NOT (rt0.c0)))))) ORDER BY ((rt0.c4) BETWEEN (x'949bf99fb5d7') AND (CAST('91407144' AS TEXT)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((+ (rt0.c0)))+(((rt0.c1)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))+(((rt0.c1)<(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((+ (rt0.c0)))+(((rt0.c1)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))+(((rt0.c1)<(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((+ (rt0.c0)))+(((rt0.c1)<(vt0.c0)))));
SELECT ALL * FROM rt0, v0 WHERE ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END IN (rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE (((x'9f4d') IS TRUE));
SELECT SUM(count) FROM (SELECT ((((x'9f4d') IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'9f4d') IS TRUE));
SELECT SUM(count) FROM (SELECT ((((x'9f4d') IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'9f4d') IS TRUE));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))-(((vt0.c0)&(rt0.c0)))) WHERE (CAST(((rt0.c0)>>(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)>>(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))-(((vt0.c0)&(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))-(((vt0.c0)&(rt0.c0)))) WHERE (CAST(((rt0.c0)>>(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)>>(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))-(((vt0.c0)&(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))-(((vt0.c0)&(rt0.c0)))) WHERE (CAST(((rt0.c0)>>(rt0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE (((((((((rt0.c2 COLLATE RTRIM)AND(((rt0.c2)<<(vt0.c0)))))AND(NULLIF(vt0.c0, rt0.c3))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((vt0.c0) NOT NULL)))) ORDER BY ((UPPER(DISTINCT rt0.c1))OR(((rt0.c1) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2 COLLATE RTRIM)AND(((rt0.c2)<<(vt0.c0)))))AND(NULLIF(vt0.c0, rt0.c3))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0 ORDER BY ((UPPER(DISTINCT rt0.c1))OR(((rt0.c1) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE (((((((((rt0.c2 COLLATE RTRIM)AND(((rt0.c2)<<(vt0.c0)))))AND(NULLIF(vt0.c0, rt0.c3))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((vt0.c0) NOT NULL)))) ORDER BY ((UPPER(DISTINCT rt0.c1))OR(((rt0.c1) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2 COLLATE RTRIM)AND(((rt0.c2)<<(vt0.c0)))))AND(NULLIF(vt0.c0, rt0.c3))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0 ORDER BY ((UPPER(DISTINCT rt0.c1))OR(((rt0.c1) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE (((((((((rt0.c2 COLLATE RTRIM)AND(((rt0.c2)<<(vt0.c0)))))AND(NULLIF(vt0.c0, rt0.c3))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((vt0.c0) NOT NULL)))) ORDER BY ((UPPER(DISTINCT rt0.c1))OR(((rt0.c1) IS FALSE))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((((v0.c0) NOTNULL)))>=(((~ (vt0.c0)))))) ORDER BY (((CASE WHEN NULL THEN rt0.c3 WHEN 0.0299397444888142 THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 END))<=((((v0.c0)<<(v0.c0))))) ASC, ((0.6143764475016498)AND(CAST(rt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOTNULL)))>=(((~ (vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((CASE WHEN NULL THEN rt0.c3 WHEN 0.0299397444888142 THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 END))<=((((v0.c0)<<(v0.c0))))) ASC, ((0.6143764475016498)AND(CAST(rt0.c0 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((((v0.c0) NOTNULL)))>=(((~ (vt0.c0)))))) ORDER BY (((CASE WHEN NULL THEN rt0.c3 WHEN 0.0299397444888142 THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 END))<=((((v0.c0)<<(v0.c0))))) ASC, ((0.6143764475016498)AND(CAST(rt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOTNULL)))>=(((~ (vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((CASE WHEN NULL THEN rt0.c3 WHEN 0.0299397444888142 THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 END))<=((((v0.c0)<<(v0.c0))))) ASC, ((0.6143764475016498)AND(CAST(rt0.c0 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((((v0.c0) NOTNULL)))>=(((~ (vt0.c0)))))) ORDER BY (((CASE WHEN NULL THEN rt0.c3 WHEN 0.0299397444888142 THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 END))<=((((v0.c0)<<(v0.c0))))) ASC, ((0.6143764475016498)AND(CAST(rt0.c0 AS NUMERIC))) DESC;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON json_type(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) RIGHT OUTER JOIN v0 ON ((((((((rt0.c4)OR(rt0.c4)))OR(0.5445235561877657)))AND(CAST(vt0.c0 AS TEXT))))OR(x'')) WHERE (((((rt0.c2 IN ())))<=((((v0.c0) ISNULL))))) ORDER BY ((((v0.c0) ISNULL)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 IN ())))<=((((v0.c0) ISNULL))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON json_type(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) RIGHT OUTER JOIN v0 ON ((((((((rt0.c4)OR(rt0.c4)))OR(0.5445235561877657)))AND(CAST(vt0.c0 AS TEXT))))OR(x'')) ORDER BY ((((v0.c0) ISNULL)) IS FALSE) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON json_type(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) RIGHT OUTER JOIN v0 ON ((((((((rt0.c4)OR(rt0.c4)))OR(0.5445235561877657)))AND(CAST(vt0.c0 AS TEXT))))OR(x'')) WHERE (((((rt0.c2 IN ())))<=((((v0.c0) ISNULL))))) ORDER BY ((((v0.c0) ISNULL)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 IN ())))<=((((v0.c0) ISNULL))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON json_type(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) RIGHT OUTER JOIN v0 ON ((((((((rt0.c4)OR(rt0.c4)))OR(0.5445235561877657)))AND(CAST(vt0.c0 AS TEXT))))OR(x'')) ORDER BY ((((v0.c0) ISNULL)) IS FALSE) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON json_type(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) RIGHT OUTER JOIN v0 ON ((((((((rt0.c4)OR(rt0.c4)))OR(0.5445235561877657)))AND(CAST(vt0.c0 AS TEXT))))OR(x'')) WHERE (((((rt0.c2 IN ())))<=((((v0.c0) ISNULL))))) ORDER BY ((((v0.c0) ISNULL)) IS FALSE) DESC;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN ((+ (v0.c0))) AND (NULL)) WHERE (CAST(0.9363295761874133 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0.9363295761874133 AS REAL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN ((+ (v0.c0))) AND (NULL)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN ((+ (v0.c0))) AND (NULL)) WHERE (CAST(0.9363295761874133 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0.9363295761874133 AS REAL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN ((+ (v0.c0))) AND (NULL)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN ((+ (v0.c0))) AND (NULL)) WHERE (CAST(0.9363295761874133 AS REAL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((0.5488495563681538) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.5488495563681538) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((0.5488495563681538) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.5488495563681538) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((0.5488495563681538) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((ABS(rt0.c4)) BETWEEN (((rt0.c2)/(rt0.c2))) AND (rt0.c1)) ASC, CAST(((rt0.c4)|(rt0.c3)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((ABS(rt0.c4)) BETWEEN (((rt0.c2)/(rt0.c2))) AND (rt0.c1)) ASC, CAST(((rt0.c4)|(rt0.c3)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((ABS(rt0.c4)) BETWEEN (((rt0.c2)/(rt0.c2))) AND (rt0.c1)) ASC, CAST(((rt0.c4)|(rt0.c3)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((ABS(rt0.c4)) BETWEEN (((rt0.c2)/(rt0.c2))) AND (rt0.c1)) ASC, CAST(((rt0.c4)|(rt0.c3)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((ABS(rt0.c4)) BETWEEN (((rt0.c2)/(rt0.c2))) AND (rt0.c1)) ASC, CAST(((rt0.c4)|(rt0.c3)) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (x'');
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))%(((rt0.c2)-(rt0.c1))))) ORDER BY (((((~ (rt0.c0)))AND(CAST(NULL AS REAL))))AND(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))%(((rt0.c2)-(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((~ (rt0.c0)))AND(CAST(NULL AS REAL))))AND(rt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))%(((rt0.c2)-(rt0.c1))))) ORDER BY (((((~ (rt0.c0)))AND(CAST(NULL AS REAL))))AND(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))%(((rt0.c2)-(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((~ (rt0.c0)))AND(CAST(NULL AS REAL))))AND(rt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))%(((rt0.c2)-(rt0.c1))))) ORDER BY (((((~ (rt0.c0)))AND(CAST(NULL AS REAL))))AND(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)-(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)-(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)-(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)-(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)-(vt0.c0)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (CAST(CAST(0.06657407955389472 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0.06657407955389472 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(CAST(0.06657407955389472 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0.06657407955389472 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(CAST(0.06657407955389472 AS INTEGER) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END) ISNULL)) ORDER BY ((((((((LAST_INSERT_ROWID())OR(((rt0.c4)GLOB(rt0.c2)))))AND(((rt0.c1)>(rt0.c3)))))AND(LIKE(rt0.c2, rt0.c4))))OR(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)) ASC  NULLS FIRST, CAST(CAST(rt0.c1 AS BLOB) AS BLOB) ASC  NULLS FIRST, CAST((+ (rt0.c3)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((LAST_INSERT_ROWID())OR(((rt0.c4)GLOB(rt0.c2)))))AND(((rt0.c1)>(rt0.c3)))))AND(LIKE(rt0.c2, rt0.c4))))OR(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)) ASC  NULLS FIRST, CAST(CAST(rt0.c1 AS BLOB) AS BLOB) ASC  NULLS FIRST, CAST((+ (rt0.c3)) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END) ISNULL)) ORDER BY ((((((((LAST_INSERT_ROWID())OR(((rt0.c4)GLOB(rt0.c2)))))AND(((rt0.c1)>(rt0.c3)))))AND(LIKE(rt0.c2, rt0.c4))))OR(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)) ASC  NULLS FIRST, CAST(CAST(rt0.c1 AS BLOB) AS BLOB) ASC  NULLS FIRST, CAST((+ (rt0.c3)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((LAST_INSERT_ROWID())OR(((rt0.c4)GLOB(rt0.c2)))))AND(((rt0.c1)>(rt0.c3)))))AND(LIKE(rt0.c2, rt0.c4))))OR(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)) ASC  NULLS FIRST, CAST(CAST(rt0.c1 AS BLOB) AS BLOB) ASC  NULLS FIRST, CAST((+ (rt0.c3)) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END) ISNULL)) ORDER BY ((((((((LAST_INSERT_ROWID())OR(((rt0.c4)GLOB(rt0.c2)))))AND(((rt0.c1)>(rt0.c3)))))AND(LIKE(rt0.c2, rt0.c4))))OR(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)) ASC  NULLS FIRST, CAST(CAST(rt0.c1 AS BLOB) AS BLOB) ASC  NULLS FIRST, CAST((+ (rt0.c3)) AS BLOB) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((((((((rt0.c1)&(vt0.c0)))OR((~ (rt0.c2)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((-1.522319502E9))))))OR(((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))))OR(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)&(vt0.c0)))OR((~ (rt0.c2)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((-1.522319502E9))))))OR(((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))))OR(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((((((((rt0.c1)&(vt0.c0)))OR((~ (rt0.c2)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((-1.522319502E9))))))OR(((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))))OR(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)&(vt0.c0)))OR((~ (rt0.c2)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((-1.522319502E9))))))OR(((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))))OR(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((((((((rt0.c1)&(vt0.c0)))OR((~ (rt0.c2)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((-1.522319502E9))))))OR(((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))))OR(((rt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)LIKE(rt0.c1)) IN ())) ORDER BY json_patch((3.48837016E8 IN ()), rt0.c4 COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)LIKE(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY json_patch((3.48837016E8 IN ()), rt0.c4 COLLATE NOCASE) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)LIKE(rt0.c1)) IN ())) ORDER BY json_patch((3.48837016E8 IN ()), rt0.c4 COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)LIKE(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY json_patch((3.48837016E8 IN ()), rt0.c4 COLLATE NOCASE) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)LIKE(rt0.c1)) IN ())) ORDER BY json_patch((3.48837016E8 IN ()), rt0.c4 COLLATE NOCASE) DESC;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((NULLIF(vt0.c0, rt0.c4))AND(CASE WHEN rt0.c4 THEN rt0.c2 END)))OR(rt0.c2))) ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END)<<(CAST(NULL AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULLIF(vt0.c0, rt0.c4))AND(CASE WHEN rt0.c4 THEN rt0.c2 END)))OR(rt0.c2))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END)<<(CAST(NULL AS NUMERIC))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((NULLIF(vt0.c0, rt0.c4))AND(CASE WHEN rt0.c4 THEN rt0.c2 END)))OR(rt0.c2))) ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END)<<(CAST(NULL AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULLIF(vt0.c0, rt0.c4))AND(CASE WHEN rt0.c4 THEN rt0.c2 END)))OR(rt0.c2))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END)<<(CAST(NULL AS NUMERIC))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((NULLIF(vt0.c0, rt0.c4))AND(CASE WHEN rt0.c4 THEN rt0.c2 END)))OR(rt0.c2))) ORDER BY ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END)<<(CAST(NULL AS NUMERIC))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (('-1211651991') IS FALSE) THEN rt0.c2 ELSE TRIM(DISTINCT '\횟') END) ORDER BY ((((rt0.c2)/('m#!6sW'))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((rt0.c4)-(-381439502))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('-1211651991') IS FALSE) THEN rt0.c2 ELSE TRIM(DISTINCT '\횟') END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)/('m#!6sW'))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((rt0.c4)-(-381439502))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (('-1211651991') IS FALSE) THEN rt0.c2 ELSE TRIM(DISTINCT '\횟') END) ORDER BY ((((rt0.c2)/('m#!6sW'))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((rt0.c4)-(-381439502))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('-1211651991') IS FALSE) THEN rt0.c2 ELSE TRIM(DISTINCT '\횟') END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)/('m#!6sW'))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((rt0.c4)-(-381439502))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (('-1211651991') IS FALSE) THEN rt0.c2 ELSE TRIM(DISTINCT '\횟') END) ORDER BY ((((rt0.c2)/('m#!6sW'))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((rt0.c4)-(-381439502))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((COALESCE(vt0.c0, vt0.c0, vt0.c0, 0.4399669454397853), ((vt0.c0) NOTNULL), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))<((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), x'', ((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((COALESCE(vt0.c0, vt0.c0, vt0.c0, 0.4399669454397853), ((vt0.c0) NOTNULL), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))<((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), x'', ((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((COALESCE(vt0.c0, vt0.c0, vt0.c0, 0.4399669454397853), ((vt0.c0) NOTNULL), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))<((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), x'', ((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((COALESCE(vt0.c0, vt0.c0, vt0.c0, 0.4399669454397853), ((vt0.c0) NOTNULL), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))<((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), x'', ((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((COALESCE(vt0.c0, vt0.c0, vt0.c0, 0.4399669454397853), ((vt0.c0) NOTNULL), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))<((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), x'', ((vt0.c0) IS TRUE)))));
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))/((((v0.c0, v0.c0, v0.c0))<=((NULL, v0.c0, '')))))) ORDER BY ((((v0.c0)OR(v0.c0))) BETWEEN (TYPEOF(v0.c0)) AND ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))/((((v0.c0, v0.c0, v0.c0))<=((NULL, v0.c0, '')))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c0))) BETWEEN (TYPEOF(v0.c0)) AND ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))/((((v0.c0, v0.c0, v0.c0))<=((NULL, v0.c0, '')))))) ORDER BY ((((v0.c0)OR(v0.c0))) BETWEEN (TYPEOF(v0.c0)) AND ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))/((((v0.c0, v0.c0, v0.c0))<=((NULL, v0.c0, '')))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c0))) BETWEEN (TYPEOF(v0.c0)) AND ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))/((((v0.c0, v0.c0, v0.c0))<=((NULL, v0.c0, '')))))) ORDER BY ((((v0.c0)OR(v0.c0))) BETWEEN (TYPEOF(v0.c0)) AND ((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))  NULLS FIRST;
SELECT * FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY CAST(((v0.c0) IS TRUE) AS TEXT), (((v0.c0 IN ()))IS NOT(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) IS TRUE) AS TEXT), (((v0.c0 IN ()))IS NOT(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY CAST(((v0.c0) IS TRUE) AS TEXT), (((v0.c0 IN ()))IS NOT(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) IS TRUE) AS TEXT), (((v0.c0 IN ()))IS NOT(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY CAST(((v0.c0) IS TRUE) AS TEXT), (((v0.c0 IN ()))IS NOT(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0)==(v0.c0))) BETWEEN ((~ (v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((- (v0.c0)))IS(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))  NULLS LAST, ((((v0.c0)LIKE(v0.c0)))<<(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)==(v0.c0))) BETWEEN ((~ (v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))IS(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))  NULLS LAST, ((((v0.c0)LIKE(v0.c0)))<<(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)==(v0.c0))) BETWEEN ((~ (v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((- (v0.c0)))IS(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))  NULLS LAST, ((((v0.c0)LIKE(v0.c0)))<<(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)==(v0.c0))) BETWEEN ((~ (v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))IS(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))  NULLS LAST, ((((v0.c0)LIKE(v0.c0)))<<(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)==(v0.c0))) BETWEEN ((~ (v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((- (v0.c0)))IS(((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))  NULLS LAST, ((((v0.c0)LIKE(v0.c0)))<<(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (-5.57395845E8) ORDER BY ((rt0.c4 COLLATE NOCASE)>((~ (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((-5.57395845E8) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4 COLLATE NOCASE)>((~ (rt0.c4)))));
SELECT * FROM rt0 WHERE (-5.57395845E8) ORDER BY ((rt0.c4 COLLATE NOCASE)>((~ (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((-5.57395845E8) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4 COLLATE NOCASE)>((~ (rt0.c4)))));
SELECT * FROM rt0 WHERE (-5.57395845E8) ORDER BY ((rt0.c4 COLLATE NOCASE)>((~ (rt0.c4))));
SELECT * FROM v0, vt0 NOT INDEXED NATURAL JOIN rt0 WHERE (CASE ((rt0.c1)<<(x'fd07'))  WHEN (NOT (v0.c0)) THEN ((vt0.c0)<<(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)<<(x'fd07'))  WHEN (NOT (v0.c0)) THEN ((vt0.c0)<<(rt0.c1)) END) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT * FROM v0, vt0 NOT INDEXED NATURAL JOIN rt0 WHERE (CASE ((rt0.c1)<<(x'fd07'))  WHEN (NOT (v0.c0)) THEN ((vt0.c0)<<(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)<<(x'fd07'))  WHEN (NOT (v0.c0)) THEN ((vt0.c0)<<(rt0.c1)) END) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT * FROM v0, vt0 NOT INDEXED NATURAL JOIN rt0 WHERE (CASE ((rt0.c1)<<(x'fd07'))  WHEN (NOT (v0.c0)) THEN ((vt0.c0)<<(rt0.c1)) END);
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c3, rt0.c2, vt0.c0)) NOT BETWEEN ((((rt0.c1)|(rt0.c1)), ((rt0.c3)+(rt0.c0)), CAST(vt0.c0 AS TEXT))) AND ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c1) ISNULL), ((((rt0.c1)AND(NULL)))AND(vt0.c0))))) WHERE (CASE (NOT (rt0.c0))  WHEN ((rt0.c1)>=(vt0.c0)) THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END ELSE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) END) ORDER BY ((rt0.c4) NOT BETWEEN ((((rt0.c4))=((rt0.c0)))) AND ((NOT (rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c0))  WHEN ((rt0.c1)>=(vt0.c0)) THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END ELSE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c3, rt0.c2, vt0.c0)) NOT BETWEEN ((((rt0.c1)|(rt0.c1)), ((rt0.c3)+(rt0.c0)), CAST(vt0.c0 AS TEXT))) AND ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c1) ISNULL), ((((rt0.c1)AND(NULL)))AND(vt0.c0))))) ORDER BY ((rt0.c4) NOT BETWEEN ((((rt0.c4))=((rt0.c0)))) AND ((NOT (rt0.c4)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c3, rt0.c2, vt0.c0)) NOT BETWEEN ((((rt0.c1)|(rt0.c1)), ((rt0.c3)+(rt0.c0)), CAST(vt0.c0 AS TEXT))) AND ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c1) ISNULL), ((((rt0.c1)AND(NULL)))AND(vt0.c0))))) WHERE (CASE (NOT (rt0.c0))  WHEN ((rt0.c1)>=(vt0.c0)) THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END ELSE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) END) ORDER BY ((rt0.c4) NOT BETWEEN ((((rt0.c4))=((rt0.c0)))) AND ((NOT (rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c0))  WHEN ((rt0.c1)>=(vt0.c0)) THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END ELSE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c3, rt0.c2, vt0.c0)) NOT BETWEEN ((((rt0.c1)|(rt0.c1)), ((rt0.c3)+(rt0.c0)), CAST(vt0.c0 AS TEXT))) AND ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c1) ISNULL), ((((rt0.c1)AND(NULL)))AND(vt0.c0))))) ORDER BY ((rt0.c4) NOT BETWEEN ((((rt0.c4))=((rt0.c0)))) AND ((NOT (rt0.c4)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (((rt0.c3, rt0.c2, vt0.c0)) NOT BETWEEN ((((rt0.c1)|(rt0.c1)), ((rt0.c3)+(rt0.c0)), CAST(vt0.c0 AS TEXT))) AND ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c1) ISNULL), ((((rt0.c1)AND(NULL)))AND(vt0.c0))))) WHERE (CASE (NOT (rt0.c0))  WHEN ((rt0.c1)>=(vt0.c0)) THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END ELSE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) END) ORDER BY ((rt0.c4) NOT BETWEEN ((((rt0.c4))=((rt0.c0)))) AND ((NOT (rt0.c4)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN vt0 ON (rt0.c4 IN ()) COLLATE RTRIM WHERE (((((((x'20a4')OR(vt0.c0)))AND(-479592905))) NOTNULL)) ORDER BY ((((vt0.c0) IS FALSE))>>(((((rt0.c2)AND(v0.c0)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'20a4')OR(vt0.c0)))AND(-479592905))) NOTNULL)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN vt0 ON (rt0.c4 IN ()) COLLATE RTRIM ORDER BY ((((vt0.c0) IS FALSE))>>(((((rt0.c2)AND(v0.c0)))OR(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN vt0 ON (rt0.c4 IN ()) COLLATE RTRIM WHERE (((((((x'20a4')OR(vt0.c0)))AND(-479592905))) NOTNULL)) ORDER BY ((((vt0.c0) IS FALSE))>>(((((rt0.c2)AND(v0.c0)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'20a4')OR(vt0.c0)))AND(-479592905))) NOTNULL)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN vt0 ON (rt0.c4 IN ()) COLLATE RTRIM ORDER BY ((((vt0.c0) IS FALSE))>>(((((rt0.c2)AND(v0.c0)))OR(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON NULL LEFT OUTER JOIN vt0 ON (rt0.c4 IN ()) COLLATE RTRIM WHERE (((((((x'20a4')OR(vt0.c0)))AND(-479592905))) NOTNULL)) ORDER BY ((((vt0.c0) IS FALSE))>>(((((rt0.c2)AND(v0.c0)))OR(rt0.c0))))  NULLS FIRST;
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOTNULL));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOTNULL))+((~ (vt0.c0))))) ORDER BY ((((rtreenode(v0.c0, vt0.c0))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND ('-124822103')))))AND(((vt0.c0)%(v0.c0)))) ASC  NULLS LAST, NULL ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))+((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((rtreenode(v0.c0, vt0.c0))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND ('-124822103')))))AND(((vt0.c0)%(v0.c0)))) ASC  NULLS LAST, NULL ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOTNULL))+((~ (vt0.c0))))) ORDER BY ((((rtreenode(v0.c0, vt0.c0))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND ('-124822103')))))AND(((vt0.c0)%(v0.c0)))) ASC  NULLS LAST, NULL ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))+((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((rtreenode(v0.c0, vt0.c0))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND ('-124822103')))))AND(((vt0.c0)%(v0.c0)))) ASC  NULLS LAST, NULL ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOTNULL))+((~ (vt0.c0))))) ORDER BY ((((rtreenode(v0.c0, vt0.c0))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND ('-124822103')))))AND(((vt0.c0)%(v0.c0)))) ASC  NULLS LAST, NULL ASC;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END WHERE (((v0.c0)GLOB(('gB' IN (v0.c0))))) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), x'38f2', ((v0.c0)&(v0.c0)))) AND ((((v0.c0) IS TRUE), vt0.c0, CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)GLOB(('gB' IN (v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), x'38f2', ((v0.c0)&(v0.c0)))) AND ((((v0.c0) IS TRUE), vt0.c0, CAST(v0.c0 AS TEXT)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END WHERE (((v0.c0)GLOB(('gB' IN (v0.c0))))) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), x'38f2', ((v0.c0)&(v0.c0)))) AND ((((v0.c0) IS TRUE), vt0.c0, CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)GLOB(('gB' IN (v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), x'38f2', ((v0.c0)&(v0.c0)))) AND ((((v0.c0) IS TRUE), vt0.c0, CAST(v0.c0 AS TEXT)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) IS TRUE) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END WHERE (((v0.c0)GLOB(('gB' IN (v0.c0))))) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), x'38f2', ((v0.c0)&(v0.c0)))) AND ((((v0.c0) IS TRUE), vt0.c0, CAST(v0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS INTEGER)) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)%((~ (rt0.c2)))) WHERE (UPPER(DISTINCT ((x'e664') NOT NULL))) ORDER BY '-437470003'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((x'e664') NOT NULL))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)%((~ (rt0.c2)))) ORDER BY '-437470003'  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)%((~ (rt0.c2)))) WHERE (UPPER(DISTINCT ((x'e664') NOT NULL))) ORDER BY '-437470003'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((x'e664') NOT NULL))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)%((~ (rt0.c2)))) ORDER BY '-437470003'  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)%((~ (rt0.c2)))) WHERE (UPPER(DISTINCT ((x'e664') NOT NULL))) ORDER BY '-437470003'  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (((x'') NOT NULL)) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))AND(((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(((581258635)%(v0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS FIRST, (((vt0.c0))>=((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT NULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))AND(((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(((581258635)%(v0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS FIRST, (((vt0.c0))>=((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((x'') NOT NULL)) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))AND(((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(((581258635)%(v0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS FIRST, (((vt0.c0))>=((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT NULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))AND(((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(((581258635)%(v0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS FIRST, (((vt0.c0))>=((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((x'') NOT NULL)) ORDER BY ((((((((CAST(vt0.c0 AS NUMERIC))AND(((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(((581258635)%(v0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS FIRST, (((vt0.c0))>=((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (NULL) ORDER BY CAST(rt0.c1 AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST(rt0.c1 AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (NULL) ORDER BY CAST(rt0.c1 AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST(rt0.c1 AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (NULL) ORDER BY CAST(rt0.c1 AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((- ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((- ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((- ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN (((rt0.c3))>=((v0.c0))) THEN v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c3))>=((v0.c0))) THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN (((rt0.c3))>=((v0.c0))) THEN v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c3))>=((v0.c0))) THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN (((rt0.c3))>=((v0.c0))) THEN v0.c0 COLLATE RTRIM END);
SELECT * FROM rt0 WHERE (0.9098214596962525);
SELECT SUM(count) FROM (SELECT ((0.9098214596962525) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.9098214596962525);
SELECT SUM(count) FROM (SELECT ((0.9098214596962525) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.9098214596962525);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((0Xffffffffef1b7042 IN ())) ORDER BY TYPEOF(((((rt0.c2)AND(rt0.c3)))OR(rt0.c2))), (((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((0Xffffffffef1b7042 IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY TYPEOF(((((rt0.c2)AND(rt0.c3)))OR(rt0.c2))), (((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((0Xffffffffef1b7042 IN ())) ORDER BY TYPEOF(((((rt0.c2)AND(rt0.c3)))OR(rt0.c2))), (((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((0Xffffffffef1b7042 IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY TYPEOF(((((rt0.c2)AND(rt0.c3)))OR(rt0.c2))), (((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((0Xffffffffef1b7042 IN ())) ORDER BY TYPEOF(((((rt0.c2)AND(rt0.c3)))OR(rt0.c2))), (((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ());
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c1) NOTNULL))>('-2121422624')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))>('-2121422624'))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c1) NOTNULL))>('-2121422624')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))>('-2121422624'))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c1) NOTNULL))>('-2121422624')));
SELECT ALL * FROM rt0, v0 WHERE (CAST((+ (rt0.c3)) AS INTEGER)) ORDER BY (+ (CAST(rt0.c4 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ (CAST(rt0.c4 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CAST((+ (rt0.c3)) AS INTEGER)) ORDER BY (+ (CAST(rt0.c4 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ (CAST(rt0.c4 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CAST((+ (rt0.c3)) AS INTEGER)) ORDER BY (+ (CAST(rt0.c4 AS REAL))) DESC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (CAST(CAST(rt0.c4 AS BLOB) AS TEXT)) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0);
SELECT * FROM rt0, vt0 WHERE (CAST(CAST(rt0.c4 AS BLOB) AS TEXT)) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0);
SELECT * FROM rt0, vt0 WHERE (CAST(CAST(rt0.c4 AS BLOB) AS TEXT)) ORDER BY rt0.c0;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END) NOTNULL) WHERE ((((CAST(rt0.c2 AS BLOB)))<((rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS BLOB)))<((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END) NOTNULL) WHERE ((((CAST(rt0.c2 AS BLOB)))<((rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS BLOB)))<((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END) NOTNULL) WHERE ((((CAST(rt0.c2 AS BLOB)))<((rt0.c0 COLLATE RTRIM))));
SELECT ALL * FROM rt0, v0, vt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((rt0.c1 IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON x'' WHERE (((((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((v0.c0)&(rt0.c1)))))OR(UPPER(DISTINCT rt0.c0))))OR(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((v0.c0)&(rt0.c1)))))OR(UPPER(DISTINCT rt0.c0))))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 LEFT OUTER JOIN vt0 ON x'');
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON x'' WHERE (((((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((v0.c0)&(rt0.c1)))))OR(UPPER(DISTINCT rt0.c0))))OR(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((v0.c0)&(rt0.c1)))))OR(UPPER(DISTINCT rt0.c0))))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 LEFT OUTER JOIN vt0 ON x'');
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON x'' WHERE (((((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((v0.c0)&(rt0.c1)))))OR(UPPER(DISTINCT rt0.c0))))OR(((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))-(STRFTIME(v0.c0, v0.c0, v0.c0)))) ORDER BY ((((((((v0.c0 COLLATE RTRIM)AND(LIKELY(DISTINCT v0.c0))))OR((~ (v0.c0)))))OR(v0.c0)))OR(NULLIF(NULL, v0.c0))), (- (v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)=(v0.c0)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END WHEN (~ (v0.c0)) THEN json_array_length(v0.c0, v0.c0) WHEN (v0.c0 IN ()) THEN (v0.c0 IN ('')) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN (- (v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE))-(STRFTIME(v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0 COLLATE RTRIM)AND(LIKELY(DISTINCT v0.c0))))OR((~ (v0.c0)))))OR(v0.c0)))OR(NULLIF(NULL, v0.c0))), (- (v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)==(v0.c0)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END WHEN (~ (v0.c0)) THEN json_array_length(v0.c0, v0.c0) WHEN (v0.c0 IN ()) THEN (v0.c0 IN ('')) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN (- (v0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))-(STRFTIME(v0.c0, v0.c0, v0.c0)))) ORDER BY ((((((((v0.c0 COLLATE RTRIM)AND(LIKELY(DISTINCT v0.c0))))OR((~ (v0.c0)))))OR(v0.c0)))OR(NULLIF(NULL, v0.c0))), (- (v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)=(v0.c0)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END WHEN (~ (v0.c0)) THEN json_array_length(v0.c0, v0.c0) WHEN (v0.c0 IN ()) THEN (v0.c0 IN ('')) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN (- (v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE))-(STRFTIME(v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0 COLLATE RTRIM)AND(LIKELY(DISTINCT v0.c0))))OR((~ (v0.c0)))))OR(v0.c0)))OR(NULLIF(NULL, v0.c0))), (- (v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)==(v0.c0)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END WHEN (~ (v0.c0)) THEN json_array_length(v0.c0, v0.c0) WHEN (v0.c0 IN ()) THEN (v0.c0 IN ('')) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN (- (v0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))-(STRFTIME(v0.c0, v0.c0, v0.c0)))) ORDER BY ((((((((v0.c0 COLLATE RTRIM)AND(LIKELY(DISTINCT v0.c0))))OR((~ (v0.c0)))))OR(v0.c0)))OR(NULLIF(NULL, v0.c0))), (- (v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST, CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)=(v0.c0)) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END WHEN (~ (v0.c0)) THEN json_array_length(v0.c0, v0.c0) WHEN (v0.c0 IN ()) THEN (v0.c0 IN ('')) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN (- (v0.c0)) END DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))OR((rt0.c2 IN ()))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))OR((rt0.c2 IN ()))))AND(v0.c0))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))OR((rt0.c2 IN ()))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))OR((rt0.c2 IN ()))))AND(v0.c0))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))OR((rt0.c2 IN ()))))AND(v0.c0)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c4)||(rt0.c1)))LIKE(((rt0.c4) NOT NULL)))) ORDER BY CAST((((vt0.c0))>((rt0.c4))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)||(rt0.c1)))LIKE(((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((((vt0.c0))>((rt0.c4))) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c4)||(rt0.c1)))LIKE(((rt0.c4) NOT NULL)))) ORDER BY CAST((((vt0.c0))>((rt0.c4))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)||(rt0.c1)))LIKE(((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((((vt0.c0))>((rt0.c4))) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c4)||(rt0.c1)))LIKE(((rt0.c4) NOT NULL)))) ORDER BY CAST((((vt0.c0))>((rt0.c4))) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (('\nyY\r' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('\nyY\r' IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (('\nyY\r' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('\nyY\r' IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (('\nyY\r' IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_valid((NOT (vt0.c0)))) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_valid((NOT (vt0.c0)))) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_valid((NOT (vt0.c0)))) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (LOWER(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (LOWER(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (LOWER(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (0.6717270582282918) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)||(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.6717270582282918) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)||(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (0.6717270582282918) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)||(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.6717270582282918) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)||(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (0.6717270582282918) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)||(vt0.c0)))) DESC;
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN rt0.c3 COLLATE BINARY WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c3 AS REAL) WHEN TYPEOF(DISTINCT v0.c0) THEN COALESCE(DISTINCT rt0.c0, rt0.c4) END) ORDER BY (((rt0.c0)) BETWEEN ((v0.c0)) AND ((0.2865182000809293))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c0 IN ()) THEN rt0.c3 COLLATE BINARY WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c3 AS REAL) WHEN TYPEOF(DISTINCT v0.c0) THEN COALESCE(DISTINCT rt0.c0, rt0.c4) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((rt0.c0)) BETWEEN ((v0.c0)) AND ((0.2865182000809293))) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN rt0.c3 COLLATE BINARY WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c3 AS REAL) WHEN TYPEOF(DISTINCT v0.c0) THEN COALESCE(DISTINCT rt0.c0, rt0.c4) END) ORDER BY (((rt0.c0)) BETWEEN ((v0.c0)) AND ((0.2865182000809293))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c0 IN ()) THEN rt0.c3 COLLATE BINARY WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c3 AS REAL) WHEN TYPEOF(DISTINCT v0.c0) THEN COALESCE(DISTINCT rt0.c0, rt0.c4) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((rt0.c0)) BETWEEN ((v0.c0)) AND ((0.2865182000809293))) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN rt0.c3 COLLATE BINARY WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c3 AS REAL) WHEN TYPEOF(DISTINCT v0.c0) THEN COALESCE(DISTINCT rt0.c0, rt0.c4) END) ORDER BY (((rt0.c0)) BETWEEN ((v0.c0)) AND ((0.2865182000809293))) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (rt0.c4))) ORDER BY CAST((('-1658621349') NOT BETWEEN (x'') AND (rt0.c4)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c4))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((('-1658621349') NOT BETWEEN (x'') AND (rt0.c4)) AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (rt0.c4))) ORDER BY CAST((('-1658621349') NOT BETWEEN (x'') AND (rt0.c4)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c4))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((('-1658621349') NOT BETWEEN (x'') AND (rt0.c4)) AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (rt0.c4))) ORDER BY CAST((('-1658621349') NOT BETWEEN (x'') AND (rt0.c4)) AS TEXT) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))=(((NOT (0.16498899002156509))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))=(((NOT (0.16498899002156509)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))=(((NOT (0.16498899002156509))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))=(((NOT (0.16498899002156509)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))=(((NOT (0.16498899002156509))))));
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND ((- (vt0.c0))))) ORDER BY ((json_quote(vt0.c0))&((- (vt0.c0)))), ((vt0.c0) IS FALSE) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((json_quote(vt0.c0))&((- (vt0.c0)))), ((vt0.c0) IS FALSE) COLLATE RTRIM DESC);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND ((- (vt0.c0))))) ORDER BY ((json_quote(vt0.c0))&((- (vt0.c0)))), ((vt0.c0) IS FALSE) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((json_quote(vt0.c0))&((- (vt0.c0)))), ((vt0.c0) IS FALSE) COLLATE RTRIM DESC);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND ((- (vt0.c0))))) ORDER BY ((json_quote(vt0.c0))&((- (vt0.c0)))), ((vt0.c0) IS FALSE) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c4 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c4 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c4 AS BLOB));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((('306834696', vt0.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c4)) AND ((rt0.c4, rt0.c1, rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((('306834696', vt0.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c4)) AND ((rt0.c4, rt0.c1, rt0.c3))) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((('306834696', vt0.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c4)) AND ((rt0.c4, rt0.c1, rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((('306834696', vt0.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c4)) AND ((rt0.c4, rt0.c1, rt0.c3))) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((('306834696', vt0.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c4)) AND ((rt0.c4, rt0.c1, rt0.c3))) IN ()));
SELECT ALL * FROM vt0 WHERE ((((NOT ('-770490642')))>>(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((NOT ('-770490642')))>>(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT ('-770490642')))>>(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((NOT ('-770490642')))>>(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT ('-770490642')))>>(LOWER(vt0.c0))));
SELECT * FROM rt0, vt0, v0 WHERE (((((((v0.c0)OR(rt0.c3)))AND(vt0.c0)))|(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN ((((vt0.c0, rt0.c3, 0.1681360065706463)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c1, 's')))) AND (x'')) ASC  NULLS LAST, ((((NULL COLLATE BINARY)OR(('-362180163' IN ()))))AND((NOT (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(rt0.c3)))AND(vt0.c0)))|(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN ((((vt0.c0, rt0.c3, 0.1681360065706463)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c1, 's')))) AND (x'')) ASC  NULLS LAST, ((((NULL COLLATE BINARY)OR(('-362180163' IN ()))))AND((NOT (rt0.c0))))  NULLS LAST);
SELECT * FROM rt0, vt0, v0 WHERE (((((((v0.c0)OR(rt0.c3)))AND(vt0.c0)))|(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN ((((vt0.c0, rt0.c3, 0.1681360065706463)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c1, 's')))) AND (x'')) ASC  NULLS LAST, ((((NULL COLLATE BINARY)OR(('-362180163' IN ()))))AND((NOT (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(rt0.c3)))AND(vt0.c0)))|(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN ((((vt0.c0, rt0.c3, 0.1681360065706463)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c1, 's')))) AND (x'')) ASC  NULLS LAST, ((((NULL COLLATE BINARY)OR(('-362180163' IN ()))))AND((NOT (rt0.c0))))  NULLS LAST);
SELECT * FROM rt0, vt0, v0 WHERE (((((((v0.c0)OR(rt0.c3)))AND(vt0.c0)))|(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN ((((vt0.c0, rt0.c3, 0.1681360065706463)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c1, 's')))) AND (x'')) ASC  NULLS LAST, ((((NULL COLLATE BINARY)OR(('-362180163' IN ()))))AND((NOT (rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))/(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'4ce1')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))/(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'4ce1'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))/(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'4ce1')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))/(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'4ce1'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))/(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'4ce1')))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('') ORDER BY json_array_length(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), (NOT (load_extension(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, vt0 ORDER BY json_array_length(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), (NOT (load_extension(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('') ORDER BY json_array_length(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), (NOT (load_extension(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, vt0 ORDER BY json_array_length(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), (NOT (load_extension(vt0.c0, vt0.c0))));
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS TEXT)) IS FALSE)) ORDER BY LIKELIHOOD(((rt0.c3) ISNULL), 0.712265564303414)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM v0, rt0 ORDER BY LIKELIHOOD(((rt0.c3) ISNULL), 0.712265564303414)  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS TEXT)) IS FALSE)) ORDER BY LIKELIHOOD(((rt0.c3) ISNULL), 0.712265564303414)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM v0, rt0 ORDER BY LIKELIHOOD(((rt0.c3) ISNULL), 0.712265564303414)  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS TEXT)) IS FALSE)) ORDER BY LIKELIHOOD(((rt0.c3) ISNULL), 0.712265564303414)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE NULL  WHEN CAST(rt0.c2 AS NUMERIC) THEN (rt0.c3 IN ()) WHEN (+ (rt0.c4)) THEN ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)) WHEN rt0.c1 COLLATE NOCASE THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CAST(rt0.c2 AS NUMERIC) THEN (rt0.c3 IN ()) WHEN (+ (rt0.c4)) THEN ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)) WHEN rt0.c1 COLLATE NOCASE THEN rt0.c0 END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE NULL  WHEN CAST(rt0.c2 AS NUMERIC) THEN (rt0.c3 IN ()) WHEN (+ (rt0.c4)) THEN ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)) WHEN rt0.c1 COLLATE NOCASE THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CAST(rt0.c2 AS NUMERIC) THEN (rt0.c3 IN ()) WHEN (+ (rt0.c4)) THEN ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)) WHEN rt0.c1 COLLATE NOCASE THEN rt0.c0 END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE NULL  WHEN CAST(rt0.c2 AS NUMERIC) THEN (rt0.c3 IN ()) WHEN (+ (rt0.c4)) THEN ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)) WHEN rt0.c1 COLLATE NOCASE THEN rt0.c0 END);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS INTEGER) END) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NOT (vt0.c0))))  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NOT (vt0.c0))))  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS INTEGER) END) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NOT (vt0.c0))))  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NOT (vt0.c0))))  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS INTEGER) END) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((NOT (vt0.c0))))  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE ((- (CAST(v0.c0 AS BLOB)))) ORDER BY CAST((v0.c0 IN ()) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((- (CAST(v0.c0 AS BLOB)))) ORDER BY CAST((v0.c0 IN ()) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((- (CAST(v0.c0 AS BLOB)))) ORDER BY CAST((v0.c0 IN ()) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ('rA 5wPr');
SELECT SUM(count) FROM (SELECT ALL (('rA 5wPr') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ('rA 5wPr');
SELECT SUM(count) FROM (SELECT ALL (('rA 5wPr') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ('rA 5wPr');
SELECT ALL * FROM v0, rt0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ('');
SELECT * FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND((('1715221841')&(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) IS FALSE))))AND((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND((('1715221841')&(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) IS FALSE))))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND((('1715221841')&(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) IS FALSE))))AND((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND((('1715221841')&(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) IS FALSE))))AND((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND((('1715221841')&(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) IS FALSE))))AND((+ (v0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON NULL LEFT OUTER JOIN vt0 ON CASE WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END THEN '0.21960577263417347' END WHERE (x'') ORDER BY ((v0.c0)*(((v0.c0) IS FALSE))) DESC, ((CAST(x'' AS REAL))-((+ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON NULL LEFT OUTER JOIN vt0 ON CASE WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END THEN '0.21960577263417347' END ORDER BY ((v0.c0)*(((v0.c0) IS FALSE))) DESC, ((CAST(x'' AS REAL))-((+ (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON NULL LEFT OUTER JOIN vt0 ON CASE WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END THEN '0.21960577263417347' END WHERE (x'') ORDER BY ((v0.c0)*(((v0.c0) IS FALSE))) DESC, ((CAST(x'' AS REAL))-((+ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON NULL LEFT OUTER JOIN vt0 ON CASE WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END THEN '0.21960577263417347' END ORDER BY ((v0.c0)*(((v0.c0) IS FALSE))) DESC, ((CAST(x'' AS REAL))-((+ (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON NULL LEFT OUTER JOIN vt0 ON CASE WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END THEN '0.21960577263417347' END WHERE (x'') ORDER BY ((v0.c0)*(((v0.c0) IS FALSE))) DESC, ((CAST(x'' AS REAL))-((+ (v0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) DESC, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) DESC, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) DESC, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) DESC, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) DESC, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 COLLATE RTRIM THEN (((rt0.c4))<=((x''))) WHEN rt0.c1 COLLATE RTRIM THEN ((((x'')OR(rt0.c1)))OR(rt0.c0)) WHEN CASE WHEN vt0.c0 THEN rt0.c2 END THEN x'8f3d' ELSE (((v0.c0))>=((rt0.c1))) END RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 COLLATE RTRIM THEN (((rt0.c4))<=((x''))) WHEN rt0.c1 COLLATE RTRIM THEN ((((x'')OR(rt0.c1)))OR(rt0.c0)) WHEN CASE WHEN vt0.c0 THEN rt0.c2 END THEN x'8f3d' ELSE (((v0.c0))>=((rt0.c1))) END RIGHT OUTER JOIN vt0 ON rt0.c1);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 COLLATE RTRIM THEN (((rt0.c4))<=((x''))) WHEN rt0.c1 COLLATE RTRIM THEN ((((x'')OR(rt0.c1)))OR(rt0.c0)) WHEN CASE WHEN vt0.c0 THEN rt0.c2 END THEN x'8f3d' ELSE (((v0.c0))>=((rt0.c1))) END RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 COLLATE RTRIM THEN (((rt0.c4))<=((x''))) WHEN rt0.c1 COLLATE RTRIM THEN ((((x'')OR(rt0.c1)))OR(rt0.c0)) WHEN CASE WHEN vt0.c0 THEN rt0.c2 END THEN x'8f3d' ELSE (((v0.c0))>=((rt0.c1))) END RIGHT OUTER JOIN vt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((MIN(vt0.c0, vt0.c0))+(((0.9684382207686978)IS(')*띈7Ov')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((MIN(vt0.c0, vt0.c0))+(((0.9684382207686978)IS(')*띈7Ov')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((MIN(vt0.c0, vt0.c0))+(((0.9684382207686978)IS(')*띈7Ov')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((MIN(vt0.c0, vt0.c0))+(((0.9684382207686978)IS(')*띈7Ov')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((MIN(vt0.c0, vt0.c0))+(((0.9684382207686978)IS(')*띈7Ov')))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0)AND(rt0.c4)))AND(v0.c0)) COLLATE BINARY WHERE (v0.c0) ORDER BY (((v0.c0)) BETWEEN ((1158831790)) AND (((((vt0.c0))<=((rt0.c4))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0)AND(rt0.c4)))AND(v0.c0)) COLLATE BINARY ORDER BY (((v0.c0)) BETWEEN ((1158831790)) AND (((((vt0.c0))<=((rt0.c4))))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0)AND(rt0.c4)))AND(v0.c0)) COLLATE BINARY WHERE (v0.c0) ORDER BY (((v0.c0)) BETWEEN ((1158831790)) AND (((((vt0.c0))<=((rt0.c4))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0)AND(rt0.c4)))AND(v0.c0)) COLLATE BINARY ORDER BY (((v0.c0)) BETWEEN ((1158831790)) AND (((((vt0.c0))<=((rt0.c4))))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((((v0.c0)AND(rt0.c4)))AND(v0.c0)) COLLATE BINARY WHERE (v0.c0) ORDER BY (((v0.c0)) BETWEEN ((1158831790)) AND (((((vt0.c0))<=((rt0.c4))))))  NULLS LAST;
SELECT * FROM v0 WHERE (CAST(((v0.c0)OR(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)OR(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c0)OR(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)OR(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((v0.c0)OR(v0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))<=((~ (vt0.c0))))) ORDER BY (((~ (vt0.c0)))<=(((vt0.c0)IS(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))<=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))<=(((vt0.c0)IS(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))<=((~ (vt0.c0))))) ORDER BY (((~ (vt0.c0)))<=(((vt0.c0)IS(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))<=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))<=(((vt0.c0)IS(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))<=((~ (vt0.c0))))) ORDER BY (((~ (vt0.c0)))<=(((vt0.c0)IS(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((''))))*(((((rt0.c1)OR(rt0.c2)))OR('	B_9Y/IN5')))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((''))))*(((((rt0.c1)OR(rt0.c2)))OR('	B_9Y/IN5'))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((''))))*(((((rt0.c1)OR(rt0.c2)))OR('	B_9Y/IN5')))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((''))))*(((((rt0.c1)OR(rt0.c2)))OR('	B_9Y/IN5'))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((''))))*(((((rt0.c1)OR(rt0.c2)))OR('	B_9Y/IN5')))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (((- (v0.c0))) NOT NULL) FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN rt0.c1 COLLATE NOCASE END WHERE (LOWER(((rt0.c4) BETWEEN (rt0.c2) AND (0x33114a76)))) ORDER BY CASE ((((NULL)AND(v0.c0)))AND('1925502233'))  WHEN 0.258511475905714 THEN (rt0.c3 IN ()) END  NULLS LAST, CAST(rt0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS FIRST, (('-1421965085') NOT BETWEEN (((rt0.c1)<=(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c4) BETWEEN (rt0.c2) AND (0X33114a76)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((- (v0.c0))) NOT NULL) FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN rt0.c1 COLLATE NOCASE END ORDER BY CASE ((((NULL)AND(v0.c0)))AND('1925502233'))  WHEN 0.258511475905714 THEN (rt0.c3 IN ()) END  NULLS LAST, CAST(rt0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS FIRST, (('-1421965085') NOT BETWEEN (((rt0.c1)<=(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (((- (v0.c0))) NOT NULL) FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN rt0.c1 COLLATE NOCASE END WHERE (LOWER(((rt0.c4) BETWEEN (rt0.c2) AND (0x33114a76)))) ORDER BY CASE ((((NULL)AND(v0.c0)))AND('1925502233'))  WHEN 0.258511475905714 THEN (rt0.c3 IN ()) END  NULLS LAST, CAST(rt0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS FIRST, (('-1421965085') NOT BETWEEN (((rt0.c1)<=(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c4) BETWEEN (rt0.c2) AND (0X33114a76)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((- (v0.c0))) NOT NULL) FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN rt0.c1 COLLATE NOCASE END ORDER BY CASE ((((NULL)AND(v0.c0)))AND('1925502233'))  WHEN 0.258511475905714 THEN (rt0.c3 IN ()) END  NULLS LAST, CAST(rt0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS FIRST, (('-1421965085') NOT BETWEEN (((rt0.c1)<=(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (((- (v0.c0))) NOT NULL) FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN rt0.c1 COLLATE NOCASE END WHERE (LOWER(((rt0.c4) BETWEEN (rt0.c2) AND (0x33114a76)))) ORDER BY CASE ((((NULL)AND(v0.c0)))AND('1925502233'))  WHEN 0.258511475905714 THEN (rt0.c3 IN ()) END  NULLS LAST, CAST(rt0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS FIRST, (('-1421965085') NOT BETWEEN (((rt0.c1)<=(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END));
SELECT ALL * FROM vt0, v0 WHERE ((((~ ('')))<<(((v0.c0)>=(x''))))) ORDER BY ((v0.c0) NOT BETWEEN ((0.07061854955563696 IN ())) AND (((NULL) NOT BETWEEN (v0.c0) AND (vt0.c0)))) DESC, ((((((v0.c0) NOT NULL))AND(CAST(vt0.c0 AS INTEGER))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, (~ (CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((~ ('')))<<(((v0.c0)>=(x''))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0) NOT BETWEEN ((0.07061854955563696 IN ())) AND (((NULL) NOT BETWEEN (v0.c0) AND (vt0.c0)))) DESC, ((((((v0.c0) NOT NULL))AND(CAST(vt0.c0 AS INTEGER))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, (~ (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0, v0 WHERE ((((~ ('')))<<(((v0.c0)>=(x''))))) ORDER BY ((v0.c0) NOT BETWEEN ((0.07061854955563696 IN ())) AND (((NULL) NOT BETWEEN (v0.c0) AND (vt0.c0)))) DESC, ((((((v0.c0) NOT NULL))AND(CAST(vt0.c0 AS INTEGER))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, (~ (CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((~ ('')))<<(((v0.c0)>=(x''))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0) NOT BETWEEN ((0.07061854955563696 IN ())) AND (((NULL) NOT BETWEEN (v0.c0) AND (vt0.c0)))) DESC, ((((((v0.c0) NOT NULL))AND(CAST(vt0.c0 AS INTEGER))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, (~ (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0, v0 WHERE ((((~ ('')))<<(((v0.c0)>=(x''))))) ORDER BY ((v0.c0) NOT BETWEEN ((0.07061854955563696 IN ())) AND (((NULL) NOT BETWEEN (v0.c0) AND (vt0.c0)))) DESC, ((((((v0.c0) NOT NULL))AND(CAST(vt0.c0 AS INTEGER))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, (~ (CAST(vt0.c0 AS NUMERIC)));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (NOT (((rt0.c0)GLOB(NULL)))) RIGHT OUTER JOIN vt0 ON (- ((vt0.c0 IN ()))) WHERE (IFNULL(DISTINCT CAST(vt0.c0 AS BLOB), CASE v0.c0  WHEN v0.c0 THEN 0.73353207940596 ELSE vt0.c0 END)) ORDER BY ((((rt0.c0)<<(rt0.c0)))+(((0.24811265867901888) NOT BETWEEN (rt0.c2) AND (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(vt0.c0 AS BLOB), CASE v0.c0  WHEN v0.c0 THEN 0.73353207940596 ELSE vt0.c0 END)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (NOT (((rt0.c0)GLOB(NULL)))) RIGHT OUTER JOIN vt0 ON (- ((vt0.c0 IN ()))) ORDER BY ((((rt0.c0)<<(rt0.c0)))+(((0.24811265867901888) NOT BETWEEN (rt0.c2) AND (rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (NOT (((rt0.c0)GLOB(NULL)))) RIGHT OUTER JOIN vt0 ON (- ((vt0.c0 IN ()))) WHERE (IFNULL(DISTINCT CAST(vt0.c0 AS BLOB), CASE v0.c0  WHEN v0.c0 THEN 0.73353207940596 ELSE vt0.c0 END)) ORDER BY ((((rt0.c0)<<(rt0.c0)))+(((0.24811265867901888) NOT BETWEEN (rt0.c2) AND (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(vt0.c0 AS BLOB), CASE v0.c0  WHEN v0.c0 THEN 0.73353207940596 ELSE vt0.c0 END)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (NOT (((rt0.c0)GLOB(NULL)))) RIGHT OUTER JOIN vt0 ON (- ((vt0.c0 IN ()))) ORDER BY ((((rt0.c0)<<(rt0.c0)))+(((0.24811265867901888) NOT BETWEEN (rt0.c2) AND (rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (NOT (((rt0.c0)GLOB(NULL)))) RIGHT OUTER JOIN vt0 ON (- ((vt0.c0 IN ()))) WHERE (IFNULL(DISTINCT CAST(vt0.c0 AS BLOB), CASE v0.c0  WHEN v0.c0 THEN 0.73353207940596 ELSE vt0.c0 END)) ORDER BY ((((rt0.c0)<<(rt0.c0)))+(((0.24811265867901888) NOT BETWEEN (rt0.c2) AND (rt0.c3))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0)>>(v0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.3187380517456174, -3.62180163E8, NULL, v0.c0, vt0.c0)) AND ((v0.c0, NULL, v0.c0, vt0.c0, vt0.c0))))<>((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(v0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.3187380517456174, -3.62180163E8, NULL, v0.c0, vt0.c0)) AND ((v0.c0, NULL, v0.c0, vt0.c0, vt0.c0))))!=((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0)>>(v0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.3187380517456174, -3.62180163E8, NULL, v0.c0, vt0.c0)) AND ((v0.c0, NULL, v0.c0, vt0.c0, vt0.c0))))<>((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(v0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.3187380517456174, -3.62180163E8, NULL, v0.c0, vt0.c0)) AND ((v0.c0, NULL, v0.c0, vt0.c0, vt0.c0))))!=((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0)>>(v0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.3187380517456174, -3.62180163E8, NULL, v0.c0, vt0.c0)) AND ((v0.c0, NULL, v0.c0, vt0.c0, vt0.c0))))<>((v0.c0 IN ())));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN CAST(x'' AS REAL) THEN ((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c1)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c0)))AND(rt0.c2)) END) ORDER BY CASE WHEN x'' THEN LIKELIHOOD(rt0.c3, 0.5051095123538896) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(x'' AS REAL) THEN ((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c1)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE WHEN x'' THEN LIKELIHOOD(rt0.c3, 0.5051095123538896) END ASC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN CAST(x'' AS REAL) THEN ((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c1)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c0)))AND(rt0.c2)) END) ORDER BY CASE WHEN x'' THEN LIKELIHOOD(rt0.c3, 0.5051095123538896) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(x'' AS REAL) THEN ((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c1)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE WHEN x'' THEN LIKELIHOOD(rt0.c3, 0.5051095123538896) END ASC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN CAST(x'' AS REAL) THEN ((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c1)))OR(v0.c0)))OR(rt0.c1)))AND(v0.c0)))AND(rt0.c2)) END) ORDER BY CASE WHEN x'' THEN LIKELIHOOD(rt0.c3, 0.5051095123538896) END ASC;
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN ('''躋') AND (0xffffffff8f58d5d2))) ORDER BY (- ((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) NOT BETWEEN ('''躋') AND (0xffffffff8f58d5d2))) IS TRUE)  as count FROM v0 ORDER BY (- ((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN ('''躋') AND (0xffffffff8f58d5d2))) ORDER BY (- ((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) NOT BETWEEN ('''躋') AND (0xffffffff8f58d5d2))) IS TRUE)  as count FROM v0 ORDER BY (- ((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN ('''躋') AND (0xffffffff8f58d5d2))) ORDER BY (- ((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0))))=((CAST(v0.c0 AS INTEGER))))) ORDER BY ((((((v0.c0))>=(('m')))))<>((''))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)AND(v0.c0)))OR(v0.c0))))==((CAST(v0.c0 AS INTEGER))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0))>=(('m')))))!=((''))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0))))=((CAST(v0.c0 AS INTEGER))))) ORDER BY ((((((v0.c0))>=(('m')))))<>((''))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)AND(v0.c0)))OR(v0.c0))))==((CAST(v0.c0 AS INTEGER))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0))>=(('m')))))!=((''))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0))))=((CAST(v0.c0 AS INTEGER))))) ORDER BY ((((((v0.c0))>=(('m')))))<>((''))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((- (rt0.c0)))IS(x''))) ORDER BY ABS(((rt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))IS(x''))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ABS(((rt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((- (rt0.c0)))IS(x''))) ORDER BY ABS(((rt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))IS(x''))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ABS(((rt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((- (rt0.c0)))IS(x''))) ORDER BY ABS(((rt0.c0) ISNULL));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((('KI') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('KI') NOTNULL)) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((('KI') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('KI') NOTNULL)) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((('KI') NOTNULL));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((LOWER(DISTINCT rt0.c0)) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (json_insert(rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c2)))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))>(((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'0214')))))) DESC  NULLS LAST, ((((vt0.c0))>(('౭+z/ઢ)'))) IN (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt0.c0)) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (json_insert(rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c2)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))>(((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'0214')))))) DESC  NULLS LAST, ((((vt0.c0))>(('౭+z/ઢ)'))) IN (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((LOWER(DISTINCT rt0.c0)) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (json_insert(rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c2)))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))>(((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'0214')))))) DESC  NULLS LAST, ((((vt0.c0))>(('౭+z/ઢ)'))) IN (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt0.c0)) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (json_insert(rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c2)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))>(((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'0214')))))) DESC  NULLS LAST, ((((vt0.c0))>(('౭+z/ઢ)'))) IN (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((LOWER(DISTINCT rt0.c0)) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (json_insert(rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c2)))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))>(((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'0214')))))) DESC  NULLS LAST, ((((vt0.c0))>(('౭+z/ઢ)'))) IN (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE BINARY) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) IS FALSE)) AND ((+ (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) IS FALSE)) AND ((+ (v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE BINARY) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) IS FALSE)) AND ((+ (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) IS FALSE)) AND ((+ (v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE BINARY) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) IS FALSE)) AND ((+ (v0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY (((NULL)) NOT BETWEEN ((CASE WHEN x'' THEN vt0.c0 END)) AND (((('.䰰榍m,Hf') IS FALSE)))) DESC, (((((vt0.c0 IN ()))AND(((vt0.c0)IS('CS')))))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) NOT BETWEEN ((CASE WHEN x'' THEN vt0.c0 END)) AND (((('.䰰榍m,Hf') IS FALSE)))) DESC, (((((vt0.c0 IN ()))AND(((vt0.c0)IS('CS')))))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY (((NULL)) NOT BETWEEN ((CASE WHEN x'' THEN vt0.c0 END)) AND (((('.䰰榍m,Hf') IS FALSE)))) DESC, (((((vt0.c0 IN ()))AND(((vt0.c0)IS('CS')))))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) NOT BETWEEN ((CASE WHEN x'' THEN vt0.c0 END)) AND (((('.䰰榍m,Hf') IS FALSE)))) DESC, (((((vt0.c0 IN ()))AND(((vt0.c0)IS('CS')))))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' END))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY ((rt0.c4 COLLATE BINARY)<=((~ (rt0.c3)))) ASC, rt0.c0, '776588060' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c4 COLLATE BINARY)<=((~ (rt0.c3)))) ASC, rt0.c0, '776588060' DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY ((rt0.c4 COLLATE BINARY)<=((~ (rt0.c3)))) ASC, rt0.c0, '776588060' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c4 COLLATE BINARY)<=((~ (rt0.c3)))) ASC, rt0.c0, '776588060' DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY ((rt0.c4 COLLATE BINARY)<=((~ (rt0.c3)))) ASC, rt0.c0, '776588060' DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((CAST(NULL AS REAL)))>((((v0.c0)|(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(NULL AS REAL)))>((((v0.c0)|(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((CAST(NULL AS REAL)))>((((v0.c0)|(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(NULL AS REAL)))>((((v0.c0)|(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((CAST(NULL AS REAL)))>((((v0.c0)|(v0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN 0.521328962223909 THEN UNLIKELY(NULL) ELSE rt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.521328962223909 THEN UNLIKELY(NULL) ELSE rt0.c1 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN 0.521328962223909 THEN UNLIKELY(NULL) ELSE rt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.521328962223909 THEN UNLIKELY(NULL) ELSE rt0.c1 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN 0.521328962223909 THEN UNLIKELY(NULL) ELSE rt0.c1 END);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((((((((rt0.c4)AND(rt0.c2)))OR(7.3332358E7)))OR(x'')))OR(rt0.c3))  WHEN json_extract(vt0.c0, vt0.c0, '-1878495114', vt0.c0, rt0.c0, vt0.c0) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((NULL))) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c4)AND(rt0.c2)))OR(7.3332358E7)))OR(x'')))OR(rt0.c3))  WHEN json_extract(vt0.c0, vt0.c0, '-1878495114', vt0.c0, rt0.c0, vt0.c0) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((NULL))) ELSE vt0.c0 END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((((((((rt0.c4)AND(rt0.c2)))OR(7.3332358E7)))OR(x'')))OR(rt0.c3))  WHEN json_extract(vt0.c0, vt0.c0, '-1878495114', vt0.c0, rt0.c0, vt0.c0) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((NULL))) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c4)AND(rt0.c2)))OR(7.3332358E7)))OR(x'')))OR(rt0.c3))  WHEN json_extract(vt0.c0, vt0.c0, '-1878495114', vt0.c0, rt0.c0, vt0.c0) THEN (((rt0.c2)) BETWEEN ((v0.c0)) AND ((NULL))) ELSE vt0.c0 END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ ((rt0.c0 IN ())))) ORDER BY rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c3 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ ((rt0.c0 IN ())))) ORDER BY rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c3 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ ((rt0.c0 IN ())))) ORDER BY rt0.c3 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NOT INDEXED CROSS JOIN rt0 ON ((((CASE WHEN 0.07940473244410295 THEN vt0.c0 ELSE rt0.c3 END)OR(((rt0.c4)=(rt0.c3)))))AND(CAST(rt0.c3 AS INTEGER))) WHERE (x'33ba677e');
SELECT SUM(count) FROM (SELECT ((x'33ba677e') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((CASE WHEN 0.07940473244410295 THEN vt0.c0 ELSE rt0.c3 END)OR(((rt0.c4)==(rt0.c3)))))AND(CAST(rt0.c3 AS INTEGER))));
SELECT COUNT(*) FROM vt0 NOT INDEXED CROSS JOIN rt0 ON ((((CASE WHEN 0.07940473244410295 THEN vt0.c0 ELSE rt0.c3 END)OR(((rt0.c4)=(rt0.c3)))))AND(CAST(rt0.c3 AS INTEGER))) WHERE (x'33ba677e');
SELECT SUM(count) FROM (SELECT ((x'33ba677e') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((CASE WHEN 0.07940473244410295 THEN vt0.c0 ELSE rt0.c3 END)OR(((rt0.c4)==(rt0.c3)))))AND(CAST(rt0.c3 AS INTEGER))));
SELECT COUNT(*) FROM vt0 NOT INDEXED CROSS JOIN rt0 ON ((((CASE WHEN 0.07940473244410295 THEN vt0.c0 ELSE rt0.c3 END)OR(((rt0.c4)=(rt0.c3)))))AND(CAST(rt0.c3 AS INTEGER))) WHERE (x'33ba677e');
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c1)*(vt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))) NOT BETWEEN (((((v0.c0)AND(rt0.c0)))OR(vt0.c0))) AND (((rt0.c4)>(rt0.c0)))) DESC  NULLS FIRST, (((((NULL, x'', rt0.c4))<((rt0.c2, vt0.c0, rt0.c4)))) BETWEEN (TRIM(rt0.c2)) AND (0.567285410107143)), CASE WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END THEN (~ (v0.c0)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE '0.0' END WHEN (rt0.c4 IN (vt0.c0)) THEN ((rt0.c2)IS NOT(v0.c0)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN (((rt0.c3))>=((rt0.c4))) WHEN NULL THEN ((6.04334477E8)LIKE(rt0.c2)) WHEN ((rt0.c1)<<(NULL)) THEN (~ (rt0.c2)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))) NOT BETWEEN (((((v0.c0)AND(rt0.c0)))OR(vt0.c0))) AND (((rt0.c4)>(rt0.c0)))) DESC  NULLS FIRST, (((((NULL, x'', rt0.c4))<((rt0.c2, vt0.c0, rt0.c4)))) BETWEEN (TRIM(rt0.c2)) AND (0.567285410107143)), CASE WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END THEN (~ (v0.c0)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE '0.0' END WHEN (rt0.c4 IN (vt0.c0)) THEN ((rt0.c2)IS NOT(v0.c0)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN (((rt0.c3))>=((rt0.c4))) WHEN NULL THEN ((6.04334477E8)LIKE(rt0.c2)) WHEN ((rt0.c1)<<(NULL)) THEN (~ (rt0.c2)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) END DESC);
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c1)*(vt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))) NOT BETWEEN (((((v0.c0)AND(rt0.c0)))OR(vt0.c0))) AND (((rt0.c4)>(rt0.c0)))) DESC  NULLS FIRST, (((((NULL, x'', rt0.c4))<((rt0.c2, vt0.c0, rt0.c4)))) BETWEEN (TRIM(rt0.c2)) AND (0.567285410107143)), CASE WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END THEN (~ (v0.c0)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE '0.0' END WHEN (rt0.c4 IN (vt0.c0)) THEN ((rt0.c2)IS NOT(v0.c0)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN (((rt0.c3))>=((rt0.c4))) WHEN NULL THEN ((6.04334477E8)LIKE(rt0.c2)) WHEN ((rt0.c1)<<(NULL)) THEN (~ (rt0.c2)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))) NOT BETWEEN (((((v0.c0)AND(rt0.c0)))OR(vt0.c0))) AND (((rt0.c4)>(rt0.c0)))) DESC  NULLS FIRST, (((((NULL, x'', rt0.c4))<((rt0.c2, vt0.c0, rt0.c4)))) BETWEEN (TRIM(rt0.c2)) AND (0.567285410107143)), CASE WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END THEN (~ (v0.c0)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE '0.0' END WHEN (rt0.c4 IN (vt0.c0)) THEN ((rt0.c2)IS NOT(v0.c0)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN (((rt0.c3))>=((rt0.c4))) WHEN NULL THEN ((6.04334477E8)LIKE(rt0.c2)) WHEN ((rt0.c1)<<(NULL)) THEN (~ (rt0.c2)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) END DESC);
SELECT * FROM v0, rt0, vt0 WHERE (((rt0.c1)*(vt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))) NOT BETWEEN (((((v0.c0)AND(rt0.c0)))OR(vt0.c0))) AND (((rt0.c4)>(rt0.c0)))) DESC  NULLS FIRST, (((((NULL, x'', rt0.c4))<((rt0.c2, vt0.c0, rt0.c4)))) BETWEEN (TRIM(rt0.c2)) AND (0.567285410107143)), CASE WHEN CASE rt0.c0  WHEN v0.c0 THEN v0.c0 END THEN (~ (v0.c0)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE '0.0' END WHEN (rt0.c4 IN (vt0.c0)) THEN ((rt0.c2)IS NOT(v0.c0)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN (((rt0.c3))>=((rt0.c4))) WHEN NULL THEN ((6.04334477E8)LIKE(rt0.c2)) WHEN ((rt0.c1)<<(NULL)) THEN (~ (rt0.c2)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) END DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (rt0.c2) ORDER BY ((CAST(rt0.c4 AS BLOB)) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((vt0.c0) NOTNULL))) ASC, CAST(((rt0.c0)LIKE(v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CAST(rt0.c4 AS BLOB)) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((vt0.c0) NOTNULL))) ASC, CAST(((rt0.c0)LIKE(v0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (rt0.c2) ORDER BY ((CAST(rt0.c4 AS BLOB)) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((vt0.c0) NOTNULL))) ASC, CAST(((rt0.c0)LIKE(v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CAST(rt0.c4 AS BLOB)) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((vt0.c0) NOTNULL))) ASC, CAST(((rt0.c0)LIKE(v0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (rt0.c2) ORDER BY ((CAST(rt0.c4 AS BLOB)) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((vt0.c0) NOTNULL))) ASC, CAST(((rt0.c0)LIKE(v0.c0)) AS TEXT);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY UPPER('i๴')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY UPPER('i๴')  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY UPPER('i๴')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY UPPER('i๴')  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY UPPER('i๴')  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c2) ORDER BY (((rt0.c2 IN (rt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((rt0.c2 IN (rt0.c2))) IS FALSE));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c2) ORDER BY (((rt0.c2 IN (rt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((rt0.c2 IN (rt0.c2))) IS FALSE));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c2) ORDER BY (((rt0.c2 IN (rt0.c2))) IS FALSE);
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)LIKE(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)) WHERE ((- (rt0.c2)) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((x'e01f') ISNULL) THEN (+ (NULL)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)LIKE(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((x'e01f') ISNULL) THEN (+ (NULL)) END DESC);
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)LIKE(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)) WHERE ((- (rt0.c2)) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((x'e01f') ISNULL) THEN (+ (NULL)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)LIKE(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((x'e01f') ISNULL) THEN (+ (NULL)) END DESC);
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)LIKE(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)) WHERE ((- (rt0.c2)) COLLATE NOCASE COLLATE RTRIM) ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN ((x'e01f') ISNULL) THEN (+ (NULL)) END DESC;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)/(v0.c0)) AS NUMERIC)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)/(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY x'' DESC);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)/(v0.c0)) AS NUMERIC)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)/(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY x'' DESC);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)/(v0.c0)) AS NUMERIC)) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON ((((((((((((rt0.c4 COLLATE RTRIM)OR(((rt0.c0)>(rt0.c2)))))AND(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c2)))))AND(((rt0.c2)<(vt0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((vt0.c0)GLOB(rt0.c4)))) WHERE (((0x4f1c2ed)>=(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((IFNULL(rt0.c2, v0.c0))<>(((((rt0.c2)AND(vt0.c0)))AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((((0X4f1c2ed)>=(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((((((((((((rt0.c4 COLLATE RTRIM)OR(((rt0.c0)>(rt0.c2)))))AND(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c2)))))AND(((rt0.c2)<(vt0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((vt0.c0)GLOB(rt0.c4)))) ORDER BY ((IFNULL(rt0.c2, v0.c0))<>(((((rt0.c2)AND(vt0.c0)))AND(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON ((((((((((((rt0.c4 COLLATE RTRIM)OR(((rt0.c0)>(rt0.c2)))))AND(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c2)))))AND(((rt0.c2)<(vt0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((vt0.c0)GLOB(rt0.c4)))) WHERE (((0x4f1c2ed)>=(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((IFNULL(rt0.c2, v0.c0))<>(((((rt0.c2)AND(vt0.c0)))AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((((0X4f1c2ed)>=(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((((((((((((rt0.c4 COLLATE RTRIM)OR(((rt0.c0)>(rt0.c2)))))AND(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c2)))))AND(((rt0.c2)<(vt0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((vt0.c0)GLOB(rt0.c4)))) ORDER BY ((IFNULL(rt0.c2, v0.c0))<>(((((rt0.c2)AND(vt0.c0)))AND(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON ((((((((((((rt0.c4 COLLATE RTRIM)OR(((rt0.c0)>(rt0.c2)))))AND(((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c2)))))AND(((rt0.c2)<(vt0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((vt0.c0)GLOB(rt0.c4)))) WHERE (((0x4f1c2ed)>=(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((IFNULL(rt0.c2, v0.c0))<>(((((rt0.c2)AND(vt0.c0)))AND(rt0.c4))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((v0.c0 IN (rt0.c1))) NOTNULL) RIGHT OUTER JOIN v0 ON (((((rt0.c3, '-828024596', '581258635', v0.c0, rt0.c4))<=((rt0.c1, vt0.c0, rt0.c4, rt0.c3, rt0.c0))))IS((+ (vt0.c0)))) WHERE (((((rt0.c1)<<(vt0.c0))) NOT BETWEEN ((NOT (rt0.c4))) AND ((+ (0.5488495563681538))))) ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(vt0.c0))) NOT BETWEEN ((NOT (rt0.c4))) AND ((+ (0.5488495563681538))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((v0.c0 IN (rt0.c1))) NOTNULL) RIGHT OUTER JOIN v0 ON (((((rt0.c3, '-828024596', '581258635', v0.c0, rt0.c4))<=((rt0.c1, vt0.c0, rt0.c4, rt0.c3, rt0.c0))))IS((+ (vt0.c0)))) ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL) DESC);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((v0.c0 IN (rt0.c1))) NOTNULL) RIGHT OUTER JOIN v0 ON (((((rt0.c3, '-828024596', '581258635', v0.c0, rt0.c4))<=((rt0.c1, vt0.c0, rt0.c4, rt0.c3, rt0.c0))))IS((+ (vt0.c0)))) WHERE (((((rt0.c1)<<(vt0.c0))) NOT BETWEEN ((NOT (rt0.c4))) AND ((+ (0.5488495563681538))))) ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(vt0.c0))) NOT BETWEEN ((NOT (rt0.c4))) AND ((+ (0.5488495563681538))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((v0.c0 IN (rt0.c1))) NOTNULL) RIGHT OUTER JOIN v0 ON (((((rt0.c3, '-828024596', '581258635', v0.c0, rt0.c4))<=((rt0.c1, vt0.c0, rt0.c4, rt0.c3, rt0.c0))))IS((+ (vt0.c0)))) ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c0) ISNULL) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c1)) WHEN (NOT (NULL)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN GLOB(rt0.c0, x'') THEN ((rt0.c3)&(rt0.c2)) END WHERE (x'') ORDER BY (vt0.c0 COLLATE RTRIM IN (((rt0.c2)IS(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c0) ISNULL) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c1)) WHEN (NOT (NULL)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN GLOB(rt0.c0, x'') THEN ((rt0.c3)&(rt0.c2)) END ORDER BY (vt0.c0 COLLATE RTRIM IN (((rt0.c2)IS(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c0) ISNULL) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c1)) WHEN (NOT (NULL)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN GLOB(rt0.c0, x'') THEN ((rt0.c3)&(rt0.c2)) END WHERE (x'') ORDER BY (vt0.c0 COLLATE RTRIM IN (((rt0.c2)IS(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c0) ISNULL) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c1)) WHEN (NOT (NULL)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN GLOB(rt0.c0, x'') THEN ((rt0.c3)&(rt0.c2)) END ORDER BY (vt0.c0 COLLATE RTRIM IN (((rt0.c2)IS(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c0) ISNULL) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c1)) WHEN (NOT (NULL)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN GLOB(rt0.c0, x'') THEN ((rt0.c3)&(rt0.c2)) END WHERE (x'') ORDER BY (vt0.c0 COLLATE RTRIM IN (((rt0.c2)IS(rt0.c3))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END))) ORDER BY (- (((rt0.c1)IS NOT(rt0.c0)))), ((CAST(rt0.c1 AS NUMERIC)) BETWEEN ((NOT (rt0.c3))) AND ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC  NULLS LAST, LIKELIHOOD(DISTINCT (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), 0.11818938854060945) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c1)IS NOT(rt0.c0)))), ((CAST(rt0.c1 AS NUMERIC)) BETWEEN ((NOT (rt0.c3))) AND ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC  NULLS LAST, LIKELIHOOD(DISTINCT (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), 0.11818938854060945) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END))) ORDER BY (- (((rt0.c1)IS NOT(rt0.c0)))), ((CAST(rt0.c1 AS NUMERIC)) BETWEEN ((NOT (rt0.c3))) AND ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC  NULLS LAST, LIKELIHOOD(DISTINCT (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), 0.11818938854060945) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c1)IS NOT(rt0.c0)))), ((CAST(rt0.c1 AS NUMERIC)) BETWEEN ((NOT (rt0.c3))) AND ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC  NULLS LAST, LIKELIHOOD(DISTINCT (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), 0.11818938854060945) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END))) ORDER BY (- (((rt0.c1)IS NOT(rt0.c0)))), ((CAST(rt0.c1 AS NUMERIC)) BETWEEN ((NOT (rt0.c3))) AND ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC  NULLS LAST, LIKELIHOOD(DISTINCT (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), 0.11818938854060945) DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))-(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))-(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))-(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))-(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))-(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT * FROM v0, vt0, rt0 WHERE (((((((rt0.c0)OR(v0.c0)))AND(rt0.c2))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3)))) AND (CAST(1.246077579E9 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(v0.c0)))AND(rt0.c2))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3)))) AND (CAST(1.246077579E9 AS REAL)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((((((rt0.c0)OR(v0.c0)))AND(rt0.c2))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3)))) AND (CAST(1.246077579E9 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(v0.c0)))AND(rt0.c2))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3)))) AND (CAST(1.246077579E9 AS REAL)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((((((rt0.c0)OR(v0.c0)))AND(rt0.c2))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3)))) AND (CAST(1.246077579E9 AS REAL))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)<(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)<(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)<(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM v0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM v0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CHANGES());
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c3);
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c1))<=((v0.c0))) COLLATE BINARY WHERE (((((rt0.c2) NOT NULL))>=(((rt0.c1)%(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))>=(((rt0.c1)%(rt0.c4))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c1))<=((v0.c0))) COLLATE BINARY);
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c1))<=((v0.c0))) COLLATE BINARY WHERE (((((rt0.c2) NOT NULL))>=(((rt0.c1)%(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))>=(((rt0.c1)%(rt0.c4))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((rt0.c1))<=((v0.c0))) COLLATE BINARY);
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c1))<=((v0.c0))) COLLATE BINARY WHERE (((((rt0.c2) NOT NULL))>=(((rt0.c1)%(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE ((~ (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE ((~ (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE ((~ (((vt0.c0)&(vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (UNICODE((('0.8888314764221039')=(rt0.c1)))) ORDER BY IFNULL((((rt0.c0)) BETWEEN (('pga')) AND ((rt0.c0))), (+ (rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((('0.8888314764221039')=(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY IFNULL((((rt0.c0)) BETWEEN (('pga')) AND ((rt0.c0))), (+ (rt0.c2))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (UNICODE((('0.8888314764221039')=(rt0.c1)))) ORDER BY IFNULL((((rt0.c0)) BETWEEN (('pga')) AND ((rt0.c0))), (+ (rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((('0.8888314764221039')=(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY IFNULL((((rt0.c0)) BETWEEN (('pga')) AND ((rt0.c0))), (+ (rt0.c2))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (UNICODE((('0.8888314764221039')=(rt0.c1)))) ORDER BY IFNULL((((rt0.c0)) BETWEEN (('pga')) AND ((rt0.c0))), (+ (rt0.c2))) DESC;
SELECT * FROM v0 WHERE (((((((v0.c0)|(v0.c0)))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE BINARY))) ORDER BY (- (CAST(v0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)|(v0.c0)))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(v0.c0 AS REAL))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((v0.c0)|(v0.c0)))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE BINARY))) ORDER BY (- (CAST(v0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)|(v0.c0)))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(v0.c0 AS REAL))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((v0.c0)|(v0.c0)))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE BINARY))) ORDER BY (- (CAST(v0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((((rt0.c0)>>(rt0.c2)))OR((+ (rt0.c4)))))AND(((rt0.c3)OR(rt0.c3)))) FULL OUTER JOIN rt0 ON (((((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))>=((((rt0.c1)==(v0.c0))))) WHERE (0.05504909135151781) ORDER BY ((CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END)>=(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.05504909135151781) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((((rt0.c0)>>(rt0.c2)))OR((+ (rt0.c4)))))AND(((rt0.c3)OR(rt0.c3)))) FULL OUTER JOIN rt0 ON (((((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))>=((((rt0.c1)=(v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END)>=(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST, NULL ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((((rt0.c0)>>(rt0.c2)))OR((+ (rt0.c4)))))AND(((rt0.c3)OR(rt0.c3)))) FULL OUTER JOIN rt0 ON (((((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))>=((((rt0.c1)==(v0.c0))))) WHERE (0.05504909135151781) ORDER BY ((CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END)>=(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.05504909135151781) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((((rt0.c0)>>(rt0.c2)))OR((+ (rt0.c4)))))AND(((rt0.c3)OR(rt0.c3)))) FULL OUTER JOIN rt0 ON (((((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))>=((((rt0.c1)=(v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END)>=(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS FIRST, NULL ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'') ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'') ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (x'') ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) IS FALSE);
SELECT ALL * FROM vt0, rt0 WHERE (LIKELY(DISTINCT rt0.c4) COLLATE RTRIM) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))GLOB(CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN -124822103 WHEN rt0.c2 THEN rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT rt0.c4) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))GLOB(CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN -124822103 WHEN rt0.c2 THEN rt0.c2 END))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (LIKELY(DISTINCT rt0.c4) COLLATE RTRIM) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))GLOB(CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN -124822103 WHEN rt0.c2 THEN rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT rt0.c4) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))GLOB(CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN -124822103 WHEN rt0.c2 THEN rt0.c2 END))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (LIKELY(DISTINCT rt0.c4) COLLATE RTRIM) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))GLOB(CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN -124822103 WHEN rt0.c2 THEN rt0.c2 END))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ('');
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE NOCASE)) AND ((((rt0.c3)-(rt0.c0)))))) ORDER BY ((((rt0.c4)IS(rt0.c3))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE NOCASE)) AND ((((rt0.c3)-(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c4)IS(rt0.c3))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE NOCASE)) AND ((((rt0.c3)-(rt0.c0)))))) ORDER BY ((((rt0.c4)IS(rt0.c3))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE NOCASE)) AND ((((rt0.c3)-(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c4)IS(rt0.c3))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE NOCASE)) AND ((((rt0.c3)-(rt0.c0)))))) ORDER BY ((((rt0.c4)IS(rt0.c3))) IS FALSE) ASC;
SELECT ALL * FROM vt0 WHERE (((('1416054242' IN ()))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY x''  NULLS LAST, ((((((((((vt0.c0)*(vt0.c0)))AND(vt0.c0)))AND('-1460871395')))AND(0.7328997512317873)))OR(((0Xfffffffff300f815) NOT BETWEEN (vt0.c0) AND (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('1416054242' IN ()))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST, ((((((((((vt0.c0)*(vt0.c0)))AND(vt0.c0)))AND('-1460871395')))AND(0.7328997512317873)))OR(((0xfffffffff300f815) NOT BETWEEN (vt0.c0) AND (NULL))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((('1416054242' IN ()))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY x''  NULLS LAST, ((((((((((vt0.c0)*(vt0.c0)))AND(vt0.c0)))AND('-1460871395')))AND(0.7328997512317873)))OR(((0Xfffffffff300f815) NOT BETWEEN (vt0.c0) AND (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('1416054242' IN ()))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST, ((((((((((vt0.c0)*(vt0.c0)))AND(vt0.c0)))AND('-1460871395')))AND(0.7328997512317873)))OR(((0xfffffffff300f815) NOT BETWEEN (vt0.c0) AND (NULL))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((('1416054242' IN ()))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY x''  NULLS LAST, ((((((((((vt0.c0)*(vt0.c0)))AND(vt0.c0)))AND('-1460871395')))AND(0.7328997512317873)))OR(((0Xfffffffff300f815) NOT BETWEEN (vt0.c0) AND (NULL))))  NULLS LAST;
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (- ((rt0.c1 IN ()))) WHERE (((+ (rt0.c4)) IN (((rt0.c0)>=(rt0.c0))))) ORDER BY ((((((rt0.c4)OR('1393921872')))OR(rt0.c4)))%(((rt0.c1) NOTNULL))) ASC, ((((rt0.c4)<<(v0.c0)))GLOB(NULL)), ((SQLITE_SOURCE_ID())>=((+ (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c4)) IN (((rt0.c0)>=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (- ((rt0.c1 IN ()))) ORDER BY ((((((rt0.c4)OR('1393921872')))OR(rt0.c4)))%(((rt0.c1) NOTNULL))) ASC, ((((rt0.c4)<<(v0.c0)))GLOB(NULL)), ((SQLITE_SOURCE_ID())>=((+ (rt0.c0)))) DESC);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (- ((rt0.c1 IN ()))) WHERE (((+ (rt0.c4)) IN (((rt0.c0)>=(rt0.c0))))) ORDER BY ((((((rt0.c4)OR('1393921872')))OR(rt0.c4)))%(((rt0.c1) NOTNULL))) ASC, ((((rt0.c4)<<(v0.c0)))GLOB(NULL)), ((SQLITE_SOURCE_ID())>=((+ (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c4)) IN (((rt0.c0)>=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (- ((rt0.c1 IN ()))) ORDER BY ((((((rt0.c4)OR('1393921872')))OR(rt0.c4)))%(((rt0.c1) NOTNULL))) ASC, ((((rt0.c4)<<(v0.c0)))GLOB(NULL)), ((SQLITE_SOURCE_ID())>=((+ (rt0.c0)))) DESC);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (- ((rt0.c1 IN ()))) WHERE (((+ (rt0.c4)) IN (((rt0.c0)>=(rt0.c0))))) ORDER BY ((((((rt0.c4)OR('1393921872')))OR(rt0.c4)))%(((rt0.c1) NOTNULL))) ASC, ((((rt0.c4)<<(v0.c0)))GLOB(NULL)), ((SQLITE_SOURCE_ID())>=((+ (rt0.c0)))) DESC;
SELECT ALL * FROM rt0, v0 LEFT OUTER JOIN vt0 ON 'cx+t?_' WHERE (((((((v0.c0)OR(vt0.c0)))OR(rt0.c2))) NOTNULL)) ORDER BY CAST(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(vt0.c0)))OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON 'cx+t?_' ORDER BY CAST(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 LEFT OUTER JOIN vt0 ON 'cx+t?_' WHERE (((((((v0.c0)OR(vt0.c0)))OR(rt0.c2))) NOTNULL)) ORDER BY CAST(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(vt0.c0)))OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON 'cx+t?_' ORDER BY CAST(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 LEFT OUTER JOIN vt0 ON 'cx+t?_' WHERE (((((((v0.c0)OR(vt0.c0)))OR(rt0.c2))) NOTNULL)) ORDER BY CAST(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (STRFTIME(rt0.c0, rt0.c3 COLLATE NOCASE, ((((rt0.c2)OR(rt0.c3)))AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((STRFTIME(rt0.c0, rt0.c3 COLLATE NOCASE, ((((rt0.c2)OR(rt0.c3)))AND(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (STRFTIME(rt0.c0, rt0.c3 COLLATE NOCASE, ((((rt0.c2)OR(rt0.c3)))AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((STRFTIME(rt0.c0, rt0.c3 COLLATE NOCASE, ((((rt0.c2)OR(rt0.c3)))AND(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (STRFTIME(rt0.c0, rt0.c3 COLLATE NOCASE, ((((rt0.c2)OR(rt0.c3)))AND(rt0.c4))));
SELECT * FROM vt0 WHERE (CASE WHEN ((((NULL)OR(vt0.c0)))OR('-2121422624')) THEN ((vt0.c0)|(vt0.c0)) ELSE NULL END) ORDER BY vt0.c0, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((NULL)OR(vt0.c0)))OR('-2121422624')) THEN ((vt0.c0)|(vt0.c0)) ELSE NULL END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, vt0.c0 ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ((((NULL)OR(vt0.c0)))OR('-2121422624')) THEN ((vt0.c0)|(vt0.c0)) ELSE NULL END) ORDER BY vt0.c0, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((NULL)OR(vt0.c0)))OR('-2121422624')) THEN ((vt0.c0)|(vt0.c0)) ELSE NULL END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, vt0.c0 ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ((((NULL)OR(vt0.c0)))OR('-2121422624')) THEN ((vt0.c0)|(vt0.c0)) ELSE NULL END) ORDER BY vt0.c0, vt0.c0 ASC;
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c3)!=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)<>(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c3)!=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)<>(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c3)!=(rt0.c1)) IN ()));
SELECT * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN json_array(x'6a23', v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN json_array(x'6a23', v0.c0) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN json_array(x'6a23', v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN json_array(x'6a23', v0.c0) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN json_array(x'6a23', v0.c0) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c0, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c3))), rt0.c4 COLLATE NOCASE, rt0.c1)) AND ((((rt0.c3)|(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)), (- (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c3))), rt0.c4 COLLATE NOCASE, rt0.c1)) AND ((((rt0.c3)|(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)), (- (rt0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c0, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c3))), rt0.c4 COLLATE NOCASE, rt0.c1)) AND ((((rt0.c3)|(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)), (- (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c3))), rt0.c4 COLLATE NOCASE, rt0.c1)) AND ((((rt0.c3)|(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)), (- (rt0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c0, rt0.c2, rt0.c2)) BETWEEN (((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c3))), rt0.c4 COLLATE NOCASE, rt0.c1)) AND ((((rt0.c3)|(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)), (- (rt0.c0))))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON CAST(CAST(v0.c0 AS TEXT) AS TEXT) WHERE ('1796804497') ORDER BY ((('', NULL COLLATE RTRIM, (vt0.c0 IN ()), (~ (v0.c0)), ((v0.c0) ISNULL)))>((((NULL)+(v0.c0)), vt0.c0, ((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)|(v0.c0)), CAST(vt0.c0 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT (('1796804497') IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(CAST(v0.c0 AS TEXT) AS TEXT) ORDER BY ((('', NULL COLLATE RTRIM, (vt0.c0 IN ()), (~ (v0.c0)), ((v0.c0) ISNULL)))>((((NULL)+(v0.c0)), vt0.c0, ((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)|(v0.c0)), CAST(vt0.c0 AS REAL)))) ASC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON CAST(CAST(v0.c0 AS TEXT) AS TEXT) WHERE ('1796804497') ORDER BY ((('', NULL COLLATE RTRIM, (vt0.c0 IN ()), (~ (v0.c0)), ((v0.c0) ISNULL)))>((((NULL)+(v0.c0)), vt0.c0, ((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)|(v0.c0)), CAST(vt0.c0 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT (('1796804497') IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(CAST(v0.c0 AS TEXT) AS TEXT) ORDER BY ((('', NULL COLLATE RTRIM, (vt0.c0 IN ()), (~ (v0.c0)), ((v0.c0) ISNULL)))>((((NULL)+(v0.c0)), vt0.c0, ((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)|(v0.c0)), CAST(vt0.c0 AS REAL)))) ASC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON CAST(CAST(v0.c0 AS TEXT) AS TEXT) WHERE ('1796804497') ORDER BY ((('', NULL COLLATE RTRIM, (vt0.c0 IN ()), (~ (v0.c0)), ((v0.c0) ISNULL)))>((((NULL)+(v0.c0)), vt0.c0, ((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)|(v0.c0)), CAST(vt0.c0 AS REAL)))) ASC;
SELECT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT NULL))=(((v0.c0)IS(rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) WHERE (CASE WHEN (('') NOT NULL) THEN (+ (rt0.c4)) WHEN (+ (v0.c0)) THEN ((rt0.c1)GLOB(rt0.c2)) WHEN (rt0.c0 IN (rt0.c3)) THEN x'' ELSE 0.715663461581918 COLLATE RTRIM END) ORDER BY ((CAST(rt0.c4 AS REAL))GLOB(rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, (((0.3977658855480931))<>((((rt0.c4)>('J,'))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('') NOT NULL) THEN (+ (rt0.c4)) WHEN (+ (v0.c0)) THEN ((rt0.c1)GLOB(rt0.c2)) WHEN (rt0.c0 IN (rt0.c3)) THEN x'' ELSE 0.715663461581918 COLLATE RTRIM END) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT NULL))==(((v0.c0)IS(rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) ORDER BY ((CAST(rt0.c4 AS REAL))GLOB(rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, (((0.3977658855480931))!=((((rt0.c4)>('J,'))))) ASC);
SELECT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT NULL))=(((v0.c0)IS(rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) WHERE (CASE WHEN (('') NOT NULL) THEN (+ (rt0.c4)) WHEN (+ (v0.c0)) THEN ((rt0.c1)GLOB(rt0.c2)) WHEN (rt0.c0 IN (rt0.c3)) THEN x'' ELSE 0.715663461581918 COLLATE RTRIM END) ORDER BY ((CAST(rt0.c4 AS REAL))GLOB(rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, (((0.3977658855480931))<>((((rt0.c4)>('J,'))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('') NOT NULL) THEN (+ (rt0.c4)) WHEN (+ (v0.c0)) THEN ((rt0.c1)GLOB(rt0.c2)) WHEN (rt0.c0 IN (rt0.c3)) THEN x'' ELSE 0.715663461581918 COLLATE RTRIM END) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT NULL))==(((v0.c0)IS(rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) ORDER BY ((CAST(rt0.c4 AS REAL))GLOB(rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, (((0.3977658855480931))!=((((rt0.c4)>('J,'))))) ASC);
SELECT * FROM v0 CROSS JOIN rt0 ON ((((rt0.c0) NOT NULL))=(((v0.c0)IS(rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) WHERE (CASE WHEN (('') NOT NULL) THEN (+ (rt0.c4)) WHEN (+ (v0.c0)) THEN ((rt0.c1)GLOB(rt0.c2)) WHEN (rt0.c0 IN (rt0.c3)) THEN x'' ELSE 0.715663461581918 COLLATE RTRIM END) ORDER BY ((CAST(rt0.c4 AS REAL))GLOB(rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, (((0.3977658855480931))<>((((rt0.c4)>('J,'))))) ASC;
SELECT * FROM rt0, v0, vt0 WHERE (((((((((((rt0.c4)%(rt0.c3)))OR(CAST(rt0.c0 AS TEXT))))OR(((v0.c0)&(v0.c0)))))OR(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END)))OR((rt0.c2 IN ())))) ORDER BY COALESCE(DISTINCT (v0.c0 IN ()), CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c4)%(rt0.c3)))OR(CAST(rt0.c0 AS TEXT))))OR(((v0.c0)&(v0.c0)))))OR(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END)))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY COALESCE(DISTINCT (v0.c0 IN ()), CAST(NULL AS INTEGER)));
SELECT * FROM rt0, v0, vt0 WHERE (((((((((((rt0.c4)%(rt0.c3)))OR(CAST(rt0.c0 AS TEXT))))OR(((v0.c0)&(v0.c0)))))OR(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END)))OR((rt0.c2 IN ())))) ORDER BY COALESCE(DISTINCT (v0.c0 IN ()), CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c4)%(rt0.c3)))OR(CAST(rt0.c0 AS TEXT))))OR(((v0.c0)&(v0.c0)))))OR(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END)))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY COALESCE(DISTINCT (v0.c0 IN ()), CAST(NULL AS INTEGER)));
SELECT * FROM rt0, v0, vt0 WHERE (((((((((((rt0.c4)%(rt0.c3)))OR(CAST(rt0.c0 AS TEXT))))OR(((v0.c0)&(v0.c0)))))OR(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END)))OR((rt0.c2 IN ())))) ORDER BY COALESCE(DISTINCT (v0.c0 IN ()), CAST(NULL AS INTEGER));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON GLOB(((rt0.c2) NOTNULL), ((rt0.c2) NOTNULL)) WHERE (rt0.c3) ORDER BY ((((CASE WHEN rt0.c2 THEN x'' ELSE rt0.c0 END)AND(rt0.c0 COLLATE NOCASE)))AND((rt0.c2 IN ()))) DESC  NULLS FIRST, CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON GLOB(((rt0.c2) NOTNULL), ((rt0.c2) NOTNULL)) ORDER BY ((((CASE WHEN rt0.c2 THEN x'' ELSE rt0.c0 END)AND(rt0.c0 COLLATE NOCASE)))AND((rt0.c2 IN ()))) DESC  NULLS FIRST, CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON GLOB(((rt0.c2) NOTNULL), ((rt0.c2) NOTNULL)) WHERE (rt0.c3) ORDER BY ((((CASE WHEN rt0.c2 THEN x'' ELSE rt0.c0 END)AND(rt0.c0 COLLATE NOCASE)))AND((rt0.c2 IN ()))) DESC  NULLS FIRST, CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON GLOB(((rt0.c2) NOTNULL), ((rt0.c2) NOTNULL)) ORDER BY ((((CASE WHEN rt0.c2 THEN x'' ELSE rt0.c0 END)AND(rt0.c0 COLLATE NOCASE)))AND((rt0.c2 IN ()))) DESC  NULLS FIRST, CASE WHEN (rt0.c1 IN ()) THEN rt0.c0 END ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c4)-(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4)-(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c4)-(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4)-(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c4)-(rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (NOT (rt0.c2)) END) ORDER BY ((((rt0.c1)&(rt0.c1))) NOT BETWEEN (((rt0.c3)||(rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)&(rt0.c1))) NOT BETWEEN (((rt0.c3)||(rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (NOT (rt0.c2)) END) ORDER BY ((((rt0.c1)&(rt0.c1))) NOT BETWEEN (((rt0.c3)||(rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)&(rt0.c1))) NOT BETWEEN (((rt0.c3)||(rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (NOT (rt0.c2)) END) ORDER BY ((((rt0.c1)&(rt0.c1))) NOT BETWEEN (((rt0.c3)||(rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0, 0.030507137376137194, rt0.c2)) BETWEEN (((NOT (rt0.c0)), rt0.c1, ((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c3)))) AND ((LIKELY(DISTINCT v0.c0), rt0.c1 COLLATE BINARY, CASE v0.c0  WHEN v0.c0 THEN rt0.c4 ELSE 0Xffffffffc8b16fb3 END))) RIGHT OUTER JOIN vt0 ON v0.c0 WHERE ((((((- ('-2127817366')))OR(((rt0.c2) NOTNULL))))OR(rt0.c2))) ORDER BY CASE WHEN UPPER(rt0.c0) THEN ((vt0.c0) NOTNULL) ELSE TRIM(DISTINCT rt0.c4, v0.c0) END, v0.c0, CAST(((rt0.c4)LIKE(vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((- ('-2127817366')))OR(((rt0.c2) NOTNULL))))OR(rt0.c2))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0, 0.030507137376137194, rt0.c2)) BETWEEN (((NOT (rt0.c0)), rt0.c1, ((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c3)))) AND ((LIKELY(DISTINCT v0.c0), rt0.c1 COLLATE BINARY, CASE v0.c0  WHEN v0.c0 THEN rt0.c4 ELSE 0Xffffffffc8b16fb3 END))) RIGHT OUTER JOIN vt0 ON v0.c0 ORDER BY CASE WHEN UPPER(rt0.c0) THEN ((vt0.c0) NOTNULL) ELSE TRIM(DISTINCT rt0.c4, v0.c0) END, v0.c0, CAST(((rt0.c4)LIKE(vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0, 0.030507137376137194, rt0.c2)) BETWEEN (((NOT (rt0.c0)), rt0.c1, ((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c3)))) AND ((LIKELY(DISTINCT v0.c0), rt0.c1 COLLATE BINARY, CASE v0.c0  WHEN v0.c0 THEN rt0.c4 ELSE 0Xffffffffc8b16fb3 END))) RIGHT OUTER JOIN vt0 ON v0.c0 WHERE ((((((- ('-2127817366')))OR(((rt0.c2) NOTNULL))))OR(rt0.c2))) ORDER BY CASE WHEN UPPER(rt0.c0) THEN ((vt0.c0) NOTNULL) ELSE TRIM(DISTINCT rt0.c4, v0.c0) END, v0.c0, CAST(((rt0.c4)LIKE(vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((- ('-2127817366')))OR(((rt0.c2) NOTNULL))))OR(rt0.c2))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((v0.c0, 0.030507137376137194, rt0.c2)) BETWEEN (((NOT (rt0.c0)), rt0.c1, ((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c3)))) AND ((LIKELY(DISTINCT v0.c0), rt0.c1 COLLATE BINARY, CASE v0.c0  WHEN v0.c0 THEN rt0.c4 ELSE 0Xffffffffc8b16fb3 END))) RIGHT OUTER JOIN vt0 ON v0.c0 ORDER BY CASE WHEN UPPER(rt0.c0) THEN ((vt0.c0) NOTNULL) ELSE TRIM(DISTINCT rt0.c4, v0.c0) END, v0.c0, CAST(((rt0.c4)LIKE(vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((((x'')AND(rt0.c1)))OR(0xffffffffdcd88066))) BETWEEN (((rt0.c0)GLOB(v0.c0))) AND ((((rt0.c3, v0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c3, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')AND(rt0.c1)))OR(0Xffffffffdcd88066))) BETWEEN (((rt0.c0)GLOB(v0.c0))) AND ((((rt0.c3, v0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c3, v0.c0)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((((x'')AND(rt0.c1)))OR(0xffffffffdcd88066))) BETWEEN (((rt0.c0)GLOB(v0.c0))) AND ((((rt0.c3, v0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c3, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')AND(rt0.c1)))OR(0Xffffffffdcd88066))) BETWEEN (((rt0.c0)GLOB(v0.c0))) AND ((((rt0.c3, v0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c3, v0.c0)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((((x'')AND(rt0.c1)))OR(0xffffffffdcd88066))) BETWEEN (((rt0.c0)GLOB(v0.c0))) AND ((((rt0.c3, v0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c0, v0.c0)) AND ((rt0.c2, rt0.c3, v0.c0))))));
SELECT * FROM vt0 WHERE ((((NULLIF(DISTINCT 'wJG', vt0.c0)))=((((0.18419587667453585) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULLIF(DISTINCT 'wJG', vt0.c0)))==((((0.18419587667453585) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NULLIF(DISTINCT 'wJG', vt0.c0)))=((((0.18419587667453585) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULLIF(DISTINCT 'wJG', vt0.c0)))==((((0.18419587667453585) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NULLIF(DISTINCT 'wJG', vt0.c0)))=((((0.18419587667453585) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT * FROM vt0, rt0, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN ((rt0.c4 IN ())) AND (0.5480806306577886 COLLATE NOCASE))) ORDER BY json_remove(((rt0.c1)OR(rt0.c4)), CAST(rt0.c3 AS INTEGER)) ASC  NULLS FIRST, (rt0.c4 IN ()) DESC, (((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(vt0.c0)))OR(rt0.c0)) IN ((rt0.c3 IN (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN ((rt0.c4 IN ())) AND (0.5480806306577886 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY json_remove(((rt0.c1)OR(rt0.c4)), CAST(rt0.c3 AS INTEGER)) ASC  NULLS FIRST, (rt0.c4 IN ()) DESC, (((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(vt0.c0)))OR(rt0.c0)) IN ((rt0.c3 IN (rt0.c0))))  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN ((rt0.c4 IN ())) AND (0.5480806306577886 COLLATE NOCASE))) ORDER BY json_remove(((rt0.c1)OR(rt0.c4)), CAST(rt0.c3 AS INTEGER)) ASC  NULLS FIRST, (rt0.c4 IN ()) DESC, (((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(vt0.c0)))OR(rt0.c0)) IN ((rt0.c3 IN (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN ((rt0.c4 IN ())) AND (0.5480806306577886 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY json_remove(((rt0.c1)OR(rt0.c4)), CAST(rt0.c3 AS INTEGER)) ASC  NULLS FIRST, (rt0.c4 IN ()) DESC, (((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))AND(vt0.c0)))OR(rt0.c0)) IN ((rt0.c3 IN (rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN v0.c0 COLLATE BINARY WHEN CASE NULL  WHEN '1483945614' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN v0.c0 WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))) THEN NULL ELSE CAST(v0.c0 AS TEXT) END) ORDER BY (NOT (v0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c0 AS REAL) THEN v0.c0 COLLATE BINARY WHEN CASE NULL  WHEN '1483945614' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN v0.c0 WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))) THEN NULL ELSE CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN v0.c0 COLLATE BINARY WHEN CASE NULL  WHEN '1483945614' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN v0.c0 WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))) THEN NULL ELSE CAST(v0.c0 AS TEXT) END) ORDER BY (NOT (v0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c0 AS REAL) THEN v0.c0 COLLATE BINARY WHEN CASE NULL  WHEN '1483945614' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN v0.c0 WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))) THEN NULL ELSE CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN v0.c0 COLLATE BINARY WHEN CASE NULL  WHEN '1483945614' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN v0.c0 WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))) THEN NULL ELSE CAST(v0.c0 AS TEXT) END) ORDER BY (NOT (v0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (1942123298) ORDER BY CAST(LTRIM(rt0.c2, rt0.c3) AS BLOB) ASC, (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN rt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((1942123298) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(LTRIM(rt0.c2, rt0.c3) AS BLOB) ASC, (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN rt0.c1 END IN ()));
SELECT * FROM v0, rt0 WHERE (1942123298) ORDER BY CAST(LTRIM(rt0.c2, rt0.c3) AS BLOB) ASC, (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN rt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((1942123298) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(LTRIM(rt0.c2, rt0.c3) AS BLOB) ASC, (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN rt0.c1 END IN ()));
SELECT * FROM v0, rt0 WHERE (1942123298) ORDER BY CAST(LTRIM(rt0.c2, rt0.c3) AS BLOB) ASC, (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN rt0.c1 END IN ());
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (-213148627) AND (vt0.c0)))>=(0.19637076377275364)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (-213148627) AND (vt0.c0)))>=(0.19637076377275364))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (-213148627) AND (vt0.c0)))>=(0.19637076377275364)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (-213148627) AND (vt0.c0)))>=(0.19637076377275364))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (-213148627) AND (vt0.c0)))>=(0.19637076377275364)));
SELECT COUNT(*) FROM rt0, v0 WHERE ('-632381768') ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (NULL) AND ((- (rt0.c3)))), rt0.c3, LTRIM((((rt0.c0))==((v0.c0))), (rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT ALL (('-632381768') IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (NULL) AND ((- (rt0.c3)))), rt0.c3, LTRIM((((rt0.c0))==((v0.c0))), (rt0.c3 IN ())));
SELECT COUNT(*) FROM rt0, v0 WHERE ('-632381768') ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (NULL) AND ((- (rt0.c3)))), rt0.c3, LTRIM((((rt0.c0))==((v0.c0))), (rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT ALL (('-632381768') IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (NULL) AND ((- (rt0.c3)))), rt0.c3, LTRIM((((rt0.c0))==((v0.c0))), (rt0.c3 IN ())));
SELECT COUNT(*) FROM rt0, v0 WHERE ('-632381768') ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (NULL) AND ((- (rt0.c3)))), rt0.c3, LTRIM((((rt0.c0))==((v0.c0))), (rt0.c3 IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)))IS NOT(json_quote(rt0.c3)))) ORDER BY ((((rt0.c2) NOT NULL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)))IS NOT(json_quote(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT NULL)) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)))IS NOT(json_quote(rt0.c3)))) ORDER BY ((((rt0.c2) NOT NULL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)))IS NOT(json_quote(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT NULL)) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)))IS NOT(json_quote(rt0.c3)))) ORDER BY ((((rt0.c2) NOT NULL)) NOT NULL) DESC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c4)) IN ())) ORDER BY ((rt0.c4 COLLATE BINARY)/((x'' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c4 COLLATE BINARY)/((x'' IN ()))) ASC);
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c4)) IN ())) ORDER BY ((rt0.c4 COLLATE BINARY)/((x'' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) BETWEEN (v0.c0) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c4 COLLATE BINARY)/((x'' IN ()))) ASC);
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c4)) IN ())) ORDER BY ((rt0.c4 COLLATE BINARY)/((x'' IN ()))) ASC;
SELECT * FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((v0.c0 COLLATE BINARY)))) ORDER BY ((TRIM(v0.c0)) BETWEEN (((v0.c0)-(v0.c0))) AND ((-1032906452 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0 ORDER BY ((TRIM(v0.c0)) BETWEEN (((v0.c0)-(v0.c0))) AND ((-1032906452 IN (v0.c0)))));
SELECT * FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((v0.c0 COLLATE BINARY)))) ORDER BY ((TRIM(v0.c0)) BETWEEN (((v0.c0)-(v0.c0))) AND ((-1032906452 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0 ORDER BY ((TRIM(v0.c0)) BETWEEN (((v0.c0)-(v0.c0))) AND ((-1032906452 IN (v0.c0)))));
SELECT * FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<((v0.c0 COLLATE BINARY)))) ORDER BY ((TRIM(v0.c0)) BETWEEN (((v0.c0)-(v0.c0))) AND ((-1032906452 IN (v0.c0))));
SELECT * FROM vt0, rt0, v0 WHERE (HEX(DISTINCT rt0.c1)) ORDER BY CASE CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END  WHEN ((vt0.c0)&(vt0.c0)) THEN (NOT (rt0.c0)) WHEN (((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c4, rt0.c4))) THEN (rt0.c2 IN (rt0.c0)) WHEN (NOT (vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT rt0.c1)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END  WHEN ((vt0.c0)&(vt0.c0)) THEN (NOT (rt0.c0)) WHEN (((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c4, rt0.c4))) THEN (rt0.c2 IN (rt0.c0)) WHEN (NOT (vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END ASC  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (HEX(DISTINCT rt0.c1)) ORDER BY CASE CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END  WHEN ((vt0.c0)&(vt0.c0)) THEN (NOT (rt0.c0)) WHEN (((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c4, rt0.c4))) THEN (rt0.c2 IN (rt0.c0)) WHEN (NOT (vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT rt0.c1)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END  WHEN ((vt0.c0)&(vt0.c0)) THEN (NOT (rt0.c0)) WHEN (((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c4, rt0.c4))) THEN (rt0.c2 IN (rt0.c0)) WHEN (NOT (vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END ASC  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (HEX(DISTINCT rt0.c1)) ORDER BY CASE CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END  WHEN ((vt0.c0)&(vt0.c0)) THEN (NOT (rt0.c0)) WHEN (((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c4, rt0.c4))) THEN (rt0.c2 IN (rt0.c0)) WHEN (NOT (vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CASE WHEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) THEN v0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN '1973161076' THEN ((v0.c0)%(x'')) END) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND ((((x''))<=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) THEN v0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN '1973161076' THEN ((v0.c0)%(x'')) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND ((((x''))<=((v0.c0))))));
SELECT ALL * FROM v0 WHERE (CASE WHEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) THEN v0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN '1973161076' THEN ((v0.c0)%(x'')) END) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND ((((x''))<=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) THEN v0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN '1973161076' THEN ((v0.c0)%(x'')) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND ((((x''))<=((v0.c0))))));
SELECT ALL * FROM v0 WHERE (CASE WHEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) THEN v0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END WHEN '1973161076' THEN ((v0.c0)%(x'')) END) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND ((((x''))<=((v0.c0)))));
SELECT * FROM rt0, vt0 WHERE ((- (((rt0.c3)<=(rt0.c2))))) ORDER BY (((rt0.c1))>((rt0.c3))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)<=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1))>((rt0.c3))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((- (((rt0.c3)<=(rt0.c2))))) ORDER BY (((rt0.c1))>((rt0.c3))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)<=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1))>((rt0.c3))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((- (((rt0.c3)<=(rt0.c2))))) ORDER BY (((rt0.c1))>((rt0.c3))) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL)) IS FALSE));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (((vt0.c0)*(rt0.c1))) AND (((vt0.c0)<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (((vt0.c0)*(rt0.c1))) AND (((vt0.c0)<(rt0.c3))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (((vt0.c0)*(rt0.c1))) AND (((vt0.c0)<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (((vt0.c0)*(rt0.c1))) AND (((vt0.c0)<(rt0.c3))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (((vt0.c0)*(rt0.c1))) AND (((vt0.c0)<(rt0.c3)))));
SELECT * FROM rt0, v0, vt0 WHERE (CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) AS TEXT)) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT * FROM rt0, v0, vt0 WHERE (CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) AS TEXT)) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT * FROM rt0, v0, vt0 WHERE (CAST(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)) AS TEXT)) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (v0.c0 IN ('1563960071')) ELSE ((v0.c0)>(v0.c0)) END) ORDER BY 422834246 DESC, (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN ('-1593391279') AND (v0.c0)))) AND ((((v0.c0)-(v0.c0))))), ((v0.c0 COLLATE RTRIM) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (v0.c0 IN ('1563960071')) ELSE ((v0.c0)>(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY 422834246 DESC, (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN ('-1593391279') AND (v0.c0)))) AND ((((v0.c0)-(v0.c0))))), ((v0.c0 COLLATE RTRIM) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (v0.c0 IN ('1563960071')) ELSE ((v0.c0)>(v0.c0)) END) ORDER BY 422834246 DESC, (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN ('-1593391279') AND (v0.c0)))) AND ((((v0.c0)-(v0.c0))))), ((v0.c0 COLLATE RTRIM) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (v0.c0 IN ('1563960071')) ELSE ((v0.c0)>(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY 422834246 DESC, (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN ('-1593391279') AND (v0.c0)))) AND ((((v0.c0)-(v0.c0))))), ((v0.c0 COLLATE RTRIM) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, x'', vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, x'', vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, x'', vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, x'', vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, x'', vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE DESC;
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))<=(((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))<=(((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON v0.c0);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))<=(((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))<=(((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON v0.c0);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))<=(((v0.c0)AND(v0.c0)))));
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE CASE WHEN rt0.c4 THEN vt0.c0 END  WHEN (rt0.c4 IN (0.5553883075373982, rt0.c0)) THEN ((((rt0.c4)AND(rt0.c1)))AND(0x355ee5b9)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c4 THEN vt0.c0 END  WHEN (rt0.c4 IN (0.5553883075373982, rt0.c0)) THEN ((((rt0.c4)AND(rt0.c1)))AND(0X355ee5b9)) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE CASE WHEN rt0.c4 THEN vt0.c0 END  WHEN (rt0.c4 IN (0.5553883075373982, rt0.c0)) THEN ((((rt0.c4)AND(rt0.c1)))AND(0x355ee5b9)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c4 THEN vt0.c0 END  WHEN (rt0.c4 IN (0.5553883075373982, rt0.c0)) THEN ((((rt0.c4)AND(rt0.c1)))AND(0X355ee5b9)) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CASE CASE WHEN rt0.c4 THEN vt0.c0 END  WHEN (rt0.c4 IN (0.5553883075373982, rt0.c0)) THEN ((((rt0.c4)AND(rt0.c1)))AND(0x355ee5b9)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4)<(rt0.c4)) COLLATE NOCASE) ORDER BY ((555530052) NOT BETWEEN (TYPEOF(rt0.c0)) AND (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)<(rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((555530052) NOT BETWEEN (TYPEOF(rt0.c0)) AND (rt0.c2)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4)<(rt0.c4)) COLLATE NOCASE) ORDER BY ((555530052) NOT BETWEEN (TYPEOF(rt0.c0)) AND (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)<(rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((555530052) NOT BETWEEN (TYPEOF(rt0.c0)) AND (rt0.c2)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c4)<(rt0.c4)) COLLATE NOCASE) ORDER BY ((555530052) NOT BETWEEN (TYPEOF(rt0.c0)) AND (rt0.c2)) ASC;
