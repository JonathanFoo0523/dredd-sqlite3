-- Time: 2024/06/09 11:25:55
-- Database: database44
-- Database version: 3.40.0
-- seed value: 3611056144
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INT ); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (NULL, 'WY6cZ'); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c3, c0, c2) VALUES (0xffffffffd15834f4, x'', '1974053405'), ('-986493563', x'', 513031270), ('-986493563', '-1329930782', NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (''), (x''), (NULL); -- 0ms;
ANALYZE rt0; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2, c3) VALUES (0.5808896071023226, NULL, ''); -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c1) VALUES (NULL, '-782748428', -7.82748428E8); -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES (NULL), (x'a91a'), (1850916615); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (1.850916615E9), (0.822559102605199), ('pgj0uiB'); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c2, c0, c3) VALUES ('513031270', 'J	s0k ', '㓴Q', 0.5808896071023226); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0) VALUES ('1-500000', 0.414636554507968); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=('2053396980') WHERE 0.5167107116572087; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('-1209437736', LIKELY(CASE WHEN 0.8321319115746072 THEN '' END)); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c3, c2) VALUES (0.640946155618865, '', 0.686939312019849); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1) VALUES (NULL, 0.6020957522113819); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c3) VALUES ('%._.V䝒4+', x'd165', 0.23068116905142677), ('oQv퉨', NULL, NULL), ('vnwaLtC)', -1.209437736E9, x'3143'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c2)=('-873808844', ' soYNuyIS') WHERE ((rt0.c0) IS FALSE) COLLATE BINARY; -- 0ms;
REINDEX RTRIM; -- 0ms;
COMMIT; -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1, c3, c0) VALUES (NULL, '', '*Y!wXD%(', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('-1209437736', '-2016376779'), (0.9553078334562484, x'0a5b56f6'), (NULL, NULL); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE rt0 SET (c3)=(0xffffffffa9ed1c45) WHERE (SQLITE_COMPILEOPTION_USED(rt0.c2) IN ()); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c1, c2, c0) VALUES (NULL, NULL, x'', 0.9294640896253931), ('WY6cZ', 0x7761274a, 0.36009207625336237, NULL), ('0.822559102605199', NULL, x'', ''), (NULL, '2R', NULL, 0Xfffffffff4321855), ('', 0.0, '', NULL), (x'a417', '-399274294', NULL, 0.9603646723696431), ('KJIG', 0.8476713465272925, 0.9603646723696431, 0.35636857410023914); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c0) VALUES (NULL, 0.8476713465272925, ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c0) VALUES (0.640946155618865, NULL, x''); -- 0ms;
VACUUM; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0=x'8b945de8', c3=x'' WHERE rt0.c3; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.8698826516274645 WHERE (((rt0.c0 IN ()))OR((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))))); -- 0ms;
DELETE FROM rt0 WHERE ((((((((rt0.c0 COLLATE NOCASE)OR(CAST(rt0.c3 AS REAL))))AND(LOWER(DISTINCT rt0.c3))))OR(0X0)))OR(TYPEOF(DISTINCT rt0.c0))); -- 0ms;
PRAGMA integrity_check; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL) WHERE (((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((CASE WHEN rt0.c2 THEN 0.3369653499210433 ELSE rt0.c1 END, (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), 0.8848503398766439)) AND (((~ (rt0.c2)), (rt0.c2 IN (rt0.c1, rt0.c1)), rt0.c3 COLLATE RTRIM))); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (x'', '513031270'), (0xffffffffa88801f3, x''), ('9D', NULL); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'4e89', 'TT', 'D2C', x'8bdd'), (455699771, 2.05339698E9, x'', NULL), (0.6775432245208651, NULL, NULL, '1003451940'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c2, c3) VALUES (NULL, ((((((((((0.35636857410023914)AND('瘈}')))AND('549640400')))AND(0.6020957522113819)))OR(NULL))) BETWEEN ((((0.3758768605179301)) BETWEEN ((x'5047')) AND ((0.7428567717836391)))) AND (((NULL)<(NULL)))), x''); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c3, c1) VALUES (NULL, 0x3bcf7624, NULL); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED, tokenize = "ascii"); -- 1ms;
UPDATE OR IGNORE rt0 SET c0=0.6844121611514872; -- 0ms;
ANALYZE vt0; -- 1ms;
VACUUM; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0xffffffffcbeabc34 WHERE vt0.c1; -- 1ms;
COMMIT; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=-1147989770; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1324410109); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('Co') WHERE ((CASE WHEN vt0.c1 THEN x'' END) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c1 COLLATE NOCASE)); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1985739744); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(x'2b47'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1154916524); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT CAST('r' AS BLOB) FROM vt0, rt0 WHERE (CAST(((NULL)IS NOT('')) AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('N?'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES ('-1730342514'), (''), (NULL), ('n>'), (0.6844121611514872); -- 3ms;
UPDATE OR IGNORE rt0 SET c3=-951029410, c2=0x3c4d0f1d WHERE CAST(rt0.c1 COLLATE BINARY AS NUMERIC); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (''); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (((('815413268' IN ('-460992322', x'1609')))OR(''))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c2) VALUES (0.275801791537183, '-2032538573', x'44c9d5e0'), (x'', NULL, '513031270'), (x'', '', 0.5181858456682031); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 796108669); -- 10ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN NULL ELSE rt0.c1 END)) LEFT OUTER JOIN v0 ON UPPER(DISTINCT t0.c0) WHERE ((((rt0.c3 IN (rt0.c2))) BETWEEN ('') AND (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c2))) BETWEEN ('') AND (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN NULL ELSE rt0.c1 END)) LEFT OUTER JOIN v0 ON UPPER(DISTINCT t0.c0));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN NULL ELSE rt0.c1 END)) LEFT OUTER JOIN v0 ON UPPER(DISTINCT t0.c0) WHERE ((((rt0.c3 IN (rt0.c2))) BETWEEN ('') AND (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (rt0.c2))) BETWEEN ('') AND (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN NULL ELSE rt0.c1 END)) LEFT OUTER JOIN v0 ON UPPER(DISTINCT t0.c0));
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN x'' THEN (((vt0.c1))!=((rt0.c1))) END) ORDER BY CASE WHEN ((rt0.c3)<<(rt0.c0)) THEN ((((v0.c0)AND(rt0.c1)))OR(vt0.c1)) ELSE (~ (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN (((vt0.c1))!=((rt0.c1))) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE WHEN ((rt0.c3)<<(rt0.c0)) THEN ((((v0.c0)AND(rt0.c1)))OR(vt0.c1)) ELSE (~ (vt0.c0)) END  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN x'' THEN (((vt0.c1))!=((rt0.c1))) END) ORDER BY CASE WHEN ((rt0.c3)<<(rt0.c0)) THEN ((((v0.c0)AND(rt0.c1)))OR(vt0.c1)) ELSE (~ (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN (((vt0.c1))!=((rt0.c1))) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE WHEN ((rt0.c3)<<(rt0.c0)) THEN ((((v0.c0)AND(rt0.c1)))OR(vt0.c1)) ELSE (~ (vt0.c0)) END  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN x'' THEN (((vt0.c1))!=((rt0.c1))) END) ORDER BY CASE WHEN ((rt0.c3)<<(rt0.c0)) THEN ((((v0.c0)AND(rt0.c1)))OR(vt0.c1)) ELSE (~ (vt0.c0)) END  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (v0.c0);
SELECT * FROM t0, vt0 WHERE ((((0.554806604419479)/(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((0.554806604419479)/(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((0.554806604419479)/(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((0.554806604419479)/(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((0.554806604419479)/(t0.c0)) IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) WHERE (((((v0.c0 COLLATE RTRIM)AND(((v0.c0) IS FALSE))))AND((((vt0.c1))>=((vt0.c1)))))) ORDER BY ((((vt0.c0)&(vt0.c0)))<>(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)AND(((v0.c0) IS FALSE))))AND((((vt0.c1))>=((vt0.c1)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) ORDER BY ((((vt0.c0)&(vt0.c0)))!=(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) WHERE (((((v0.c0 COLLATE RTRIM)AND(((v0.c0) IS FALSE))))AND((((vt0.c1))>=((vt0.c1)))))) ORDER BY ((((vt0.c0)&(vt0.c0)))<>(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)AND(((v0.c0) IS FALSE))))AND((((vt0.c1))>=((vt0.c1)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) ORDER BY ((((vt0.c0)&(vt0.c0)))!=(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS INTEGER) WHERE (((((v0.c0 COLLATE RTRIM)AND(((v0.c0) IS FALSE))))AND((((vt0.c1))>=((vt0.c1)))))) ORDER BY ((((vt0.c0)&(vt0.c0)))<>(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT * FROM t0, v0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((rt0.c1 IN ())) AND ((+ (t0.c0)))) WHERE ((((((((((((((('jW')AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(NULL))) IS FALSE)) ORDER BY (- ((rt0.c0 IN ()))) DESC, CAST(rt0.c3 AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((('jW')AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(NULL))) IS FALSE)) IS TRUE)  as count FROM t0, v0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((rt0.c1 IN ())) AND ((+ (t0.c0)))) ORDER BY (- ((rt0.c0 IN ()))) DESC, CAST(rt0.c3 AS TEXT) DESC  NULLS FIRST);
SELECT * FROM t0, v0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((rt0.c1 IN ())) AND ((+ (t0.c0)))) WHERE ((((((((((((((('jW')AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(NULL))) IS FALSE)) ORDER BY (- ((rt0.c0 IN ()))) DESC, CAST(rt0.c3 AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((('jW')AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(NULL))) IS FALSE)) IS TRUE)  as count FROM t0, v0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((rt0.c1 IN ())) AND ((+ (t0.c0)))) ORDER BY (- ((rt0.c0 IN ()))) DESC, CAST(rt0.c3 AS TEXT) DESC  NULLS FIRST);
SELECT * FROM t0, v0 INNER JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((rt0.c1 IN ())) AND ((+ (t0.c0)))) WHERE ((((((((((((((('jW')AND(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(NULL))) IS FALSE)) ORDER BY (- ((rt0.c0 IN ()))) DESC, CAST(rt0.c3 AS TEXT) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN ((rt0.c0)<=(rt0.c3)) THEN rt0.c2 END) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c1) AND ('F]*q~9')))AND('0.8321319115746072')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN ())  WHEN ((rt0.c0)<=(rt0.c3)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c1) AND ('F]*q~9')))AND('0.8321319115746072')) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN ((rt0.c0)<=(rt0.c3)) THEN rt0.c2 END) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c1) AND ('F]*q~9')))AND('0.8321319115746072')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN ())  WHEN ((rt0.c0)<=(rt0.c3)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c1) AND ('F]*q~9')))AND('0.8321319115746072')) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN ((rt0.c0)<=(rt0.c3)) THEN rt0.c2 END) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c1) AND ('F]*q~9')))AND('0.8321319115746072')) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (IFNULL(((rt0.c0) IS TRUE), '-399274294')) ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) IN ()) ASC, rt0.c1  NULLS FIRST, STRFTIME(((((((((rt0.c2)AND(rt0.c3)))OR(']J&q')))AND(1986821990)))AND(rt0.c2)), CAST(rt0.c3 AS INTEGER), ((rt0.c1)/(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c0) IS TRUE), '-399274294')) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) IN ()) ASC, rt0.c1  NULLS FIRST, STRFTIME(((((((((rt0.c2)AND(rt0.c3)))OR(']J&q')))AND(1986821990)))AND(rt0.c2)), CAST(rt0.c3 AS INTEGER), ((rt0.c1)/(rt0.c3))));
SELECT * FROM rt0 WHERE (IFNULL(((rt0.c0) IS TRUE), '-399274294')) ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) IN ()) ASC, rt0.c1  NULLS FIRST, STRFTIME(((((((((rt0.c2)AND(rt0.c3)))OR(']J&q')))AND(1986821990)))AND(rt0.c2)), CAST(rt0.c3 AS INTEGER), ((rt0.c1)/(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c0) IS TRUE), '-399274294')) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) IN ()) ASC, rt0.c1  NULLS FIRST, STRFTIME(((((((((rt0.c2)AND(rt0.c3)))OR(']J&q')))AND(1986821990)))AND(rt0.c2)), CAST(rt0.c3 AS INTEGER), ((rt0.c1)/(rt0.c3))));
SELECT * FROM rt0 WHERE (IFNULL(((rt0.c0) IS TRUE), '-399274294')) ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) IN ()) ASC, rt0.c1  NULLS FIRST, STRFTIME(((((((((rt0.c2)AND(rt0.c3)))OR(']J&q')))AND(1986821990)))AND(rt0.c2)), CAST(rt0.c3 AS INTEGER), ((rt0.c1)/(rt0.c3)));
SELECT COUNT(*) FROM v0, rt0, t0 WHERE ((((+ (t0.c0))) BETWEEN (rt0.c1) AND (LIKELIHOOD(rt0.c1, 0.9030323296247518))));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0))) BETWEEN (rt0.c1) AND (LIKELIHOOD(rt0.c1, 0.9030323296247518)))) IS TRUE)  as count FROM v0, rt0, t0);
SELECT COUNT(*) FROM v0, rt0, t0 WHERE ((((+ (t0.c0))) BETWEEN (rt0.c1) AND (LIKELIHOOD(rt0.c1, 0.9030323296247518))));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0))) BETWEEN (rt0.c1) AND (LIKELIHOOD(rt0.c1, 0.9030323296247518)))) IS TRUE)  as count FROM v0, rt0, t0);
SELECT COUNT(*) FROM v0, rt0, t0 WHERE ((((+ (t0.c0))) BETWEEN (rt0.c1) AND (LIKELIHOOD(rt0.c1, 0.9030323296247518))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON '-198043563' WHERE (((((((rt0.c3)OR(rt0.c0)))OR(v0.c0))) NOT BETWEEN (((rt0.c3)>>(v0.c0))) AND (((rt0.c2)|(rt0.c3))))) ORDER BY (((rt0.c3 COLLATE RTRIM, (((rt0.c0, rt0.c0, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))), ((rt0.c3) NOT NULL)))<=((CAST(rt0.c2 AS TEXT), CASE WHEN x'' THEN rt0.c0 END, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(rt0.c0)))OR(v0.c0))) NOT BETWEEN (((rt0.c3)>>(v0.c0))) AND (((rt0.c2)|(rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON '-198043563' ORDER BY (((rt0.c3 COLLATE RTRIM, (((rt0.c0, rt0.c0, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))), ((rt0.c3) NOT NULL)))<=((CAST(rt0.c2 AS TEXT), CASE WHEN x'' THEN rt0.c0 END, rt0.c1))) ASC);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON '-198043563' WHERE (((((((rt0.c3)OR(rt0.c0)))OR(v0.c0))) NOT BETWEEN (((rt0.c3)>>(v0.c0))) AND (((rt0.c2)|(rt0.c3))))) ORDER BY (((rt0.c3 COLLATE RTRIM, (((rt0.c0, rt0.c0, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))), ((rt0.c3) NOT NULL)))<=((CAST(rt0.c2 AS TEXT), CASE WHEN x'' THEN rt0.c0 END, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(rt0.c0)))OR(v0.c0))) NOT BETWEEN (((rt0.c3)>>(v0.c0))) AND (((rt0.c2)|(rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON '-198043563' ORDER BY (((rt0.c3 COLLATE RTRIM, (((rt0.c0, rt0.c0, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))), ((rt0.c3) NOT NULL)))<=((CAST(rt0.c2 AS TEXT), CASE WHEN x'' THEN rt0.c0 END, rt0.c1))) ASC);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON '-198043563' WHERE (((((((rt0.c3)OR(rt0.c0)))OR(v0.c0))) NOT BETWEEN (((rt0.c3)>>(v0.c0))) AND (((rt0.c2)|(rt0.c3))))) ORDER BY (((rt0.c3 COLLATE RTRIM, (((rt0.c0, rt0.c0, v0.c0)) BETWEEN ((rt0.c0, rt0.c1, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))), ((rt0.c3) NOT NULL)))<=((CAST(rt0.c2 AS TEXT), CASE WHEN x'' THEN rt0.c0 END, rt0.c1))) ASC;
SELECT * FROM t0 CROSS JOIN v0 ON ((NULLIF(t0.c0, vt0.c1)) BETWEEN (vt0.c1) AND (CAST(t0.c0 AS NUMERIC))) RIGHT OUTER JOIN vt0 ON (((((vt0.c0)<<(t0.c0))))<=((((t0.c0)%(v0.c0))))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((NULLIF(t0.c0, vt0.c1)) BETWEEN (vt0.c1) AND (CAST(t0.c0 AS NUMERIC))) RIGHT OUTER JOIN vt0 ON (((((vt0.c0)<<(t0.c0))))<=((((t0.c0)%(v0.c0))))));
SELECT * FROM t0 CROSS JOIN v0 ON ((NULLIF(t0.c0, vt0.c1)) BETWEEN (vt0.c1) AND (CAST(t0.c0 AS NUMERIC))) RIGHT OUTER JOIN vt0 ON (((((vt0.c0)<<(t0.c0))))<=((((t0.c0)%(v0.c0))))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((NULLIF(t0.c0, vt0.c1)) BETWEEN (vt0.c1) AND (CAST(t0.c0 AS NUMERIC))) RIGHT OUTER JOIN vt0 ON (((((vt0.c0)<<(t0.c0))))<=((((t0.c0)%(v0.c0))))));
SELECT ALL * FROM v0, vt0, t0 WHERE ((~ ((((vt0.c1))==((vt0.c0)))))) ORDER BY (+ ((x'2c14' IN (vt0.c0, vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c1))==((vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (+ ((x'2c14' IN (vt0.c0, vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0 WHERE ((~ ((((vt0.c1))==((vt0.c0)))))) ORDER BY (+ ((x'2c14' IN (vt0.c0, vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c1))==((vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (+ ((x'2c14' IN (vt0.c0, vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t0 WHERE ((~ ((((vt0.c1))==((vt0.c0)))))) ORDER BY (+ ((x'2c14' IN (vt0.c0, vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM t0, vt0, rt0, v0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(rt0.c2))) NOT NULL)) ORDER BY LIKELY('-2032538573') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))AND(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0, v0 ORDER BY LIKELY('-2032538573') ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0, v0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(rt0.c2))) NOT NULL)) ORDER BY LIKELY('-2032538573') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))AND(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0, v0 ORDER BY LIKELY('-2032538573') ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0, v0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(rt0.c2))) NOT NULL)) ORDER BY LIKELY('-2032538573') ASC  NULLS LAST;
SELECT * FROM v0, t0 INNER JOIN rt0 ON (((rt0.c1, rt0.c2, t0.c0)) BETWEEN (((((rt0.c0, 815413268, rt0.c1))<((rt0.c3, rt0.c2, t0.c0))), ((rt0.c3) NOT NULL), CAST(v0.c0 AS REAL))) AND (((NOT (rt0.c0)), rtreenode(rt0.c1, NULL), UNICODE(v0.c0)))) WHERE (((((v0.c0) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND ((0.707191631277956 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND ((0.707191631277956 IN (v0.c0))))) IS TRUE)  as count FROM v0, t0 INNER JOIN rt0 ON (((rt0.c1, rt0.c2, t0.c0)) BETWEEN (((((rt0.c0, 815413268, rt0.c1))<((rt0.c3, rt0.c2, t0.c0))), ((rt0.c3) NOT NULL), CAST(v0.c0 AS REAL))) AND (((NOT (rt0.c0)), rtreenode(rt0.c1, NULL), UNICODE(v0.c0)))));
SELECT * FROM v0, t0 INNER JOIN rt0 ON (((rt0.c1, rt0.c2, t0.c0)) BETWEEN (((((rt0.c0, 815413268, rt0.c1))<((rt0.c3, rt0.c2, t0.c0))), ((rt0.c3) NOT NULL), CAST(v0.c0 AS REAL))) AND (((NOT (rt0.c0)), rtreenode(rt0.c1, NULL), UNICODE(v0.c0)))) WHERE (((((v0.c0) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND ((0.707191631277956 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND ((0.707191631277956 IN (v0.c0))))) IS TRUE)  as count FROM v0, t0 INNER JOIN rt0 ON (((rt0.c1, rt0.c2, t0.c0)) BETWEEN (((((rt0.c0, 815413268, rt0.c1))<((rt0.c3, rt0.c2, t0.c0))), ((rt0.c3) NOT NULL), CAST(v0.c0 AS REAL))) AND (((NOT (rt0.c0)), rtreenode(rt0.c1, NULL), UNICODE(v0.c0)))));
SELECT * FROM v0, t0 INNER JOIN rt0 ON (((rt0.c1, rt0.c2, t0.c0)) BETWEEN (((((rt0.c0, 815413268, rt0.c1))<((rt0.c3, rt0.c2, t0.c0))), ((rt0.c3) NOT NULL), CAST(v0.c0 AS REAL))) AND (((NOT (rt0.c0)), rtreenode(rt0.c1, NULL), UNICODE(v0.c0)))) WHERE (((((v0.c0) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((rt0.c2 IN ())) AND ((0.707191631277956 IN (v0.c0)))));
SELECT COUNT(*) FROM v0, vt0, rt0, t0 WHERE (((IFNULL(DISTINCT NULL, rt0.c2))==((rt0.c2 IN ())))) ORDER BY ((((((vt0.c1)<(rt0.c3)))AND('B' COLLATE BINARY)))AND(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT NULL, rt0.c2))=((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, vt0, rt0, t0 ORDER BY ((((((vt0.c1)<(rt0.c3)))AND('B' COLLATE BINARY)))AND(NULL)) ASC);
SELECT COUNT(*) FROM v0, vt0, rt0, t0 WHERE (((IFNULL(DISTINCT NULL, rt0.c2))==((rt0.c2 IN ())))) ORDER BY ((((((vt0.c1)<(rt0.c3)))AND('B' COLLATE BINARY)))AND(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT NULL, rt0.c2))=((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, vt0, rt0, t0 ORDER BY ((((((vt0.c1)<(rt0.c3)))AND('B' COLLATE BINARY)))AND(NULL)) ASC);
SELECT COUNT(*) FROM v0, vt0, rt0, t0 WHERE (((IFNULL(DISTINCT NULL, rt0.c2))==((rt0.c2 IN ())))) ORDER BY ((((((vt0.c1)<(rt0.c3)))AND('B' COLLATE BINARY)))AND(NULL)) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))IS NOT((- (rt0.c2))))) ORDER BY 0.9631344437582584 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))IS NOT((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY 0.9631344437582584 ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))IS NOT((- (rt0.c2))))) ORDER BY 0.9631344437582584 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))IS NOT((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY 0.9631344437582584 ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))IS NOT((- (rt0.c2))))) ORDER BY 0.9631344437582584 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY TRIM(DISTINCT CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY TRIM(DISTINCT CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY TRIM(DISTINCT CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END) DESC;
SELECT COUNT(*) FROM v0 WHERE ((- (((x'b168')*(v0.c0))))) ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (x'7bc1')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((x'b168')*(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (x'7bc1')))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((- (((x'b168')*(v0.c0))))) ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (x'7bc1')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((x'b168')*(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (x'7bc1')))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((- (((x'b168')*(v0.c0))))) ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (x'7bc1')))) ASC;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0) IS TRUE))*(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c2)))) DESC  NULLS FIRST, (~ ((+ (rt0.c0)))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS TRUE))*(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c2)))) DESC  NULLS FIRST, (~ ((+ (rt0.c0)))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0) IS TRUE))*(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c2)))) DESC  NULLS FIRST, (~ ((+ (rt0.c0)))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS TRUE))*(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c2)))) DESC  NULLS FIRST, (~ ((+ (rt0.c0)))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0) IS TRUE))*(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c2)))) DESC  NULLS FIRST, (~ ((+ (rt0.c0)))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((v0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((CAST(vt0.c0 AS BLOB)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, v0, rt0 NOT INDEXED ORDER BY ((CAST(vt0.c0 AS BLOB)) ISNULL) ASC);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((v0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((CAST(vt0.c0 AS BLOB)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, v0, rt0 NOT INDEXED ORDER BY ((CAST(vt0.c0 AS BLOB)) ISNULL) ASC);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((v0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((CAST(vt0.c0 AS BLOB)) ISNULL) ASC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.2580607919095764 THEN vt0.c1 WHEN 0.6147848146336848 THEN v0.c0 WHEN vt0.c0 THEN t0.c0 END)IS(((t0.c0) NOTNULL))) CROSS JOIN v0 ON ((LIKELY(vt0.c1)) NOT BETWEEN ((vt0.c0 IN ())) AND (NULL)) WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c1 AS REAL)) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c1 AS REAL)) AND ((- (v0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.2580607919095764 THEN vt0.c1 WHEN 0.6147848146336848 THEN v0.c0 WHEN vt0.c0 THEN t0.c0 END)IS(((t0.c0) NOTNULL))) CROSS JOIN v0 ON ((LIKELY(vt0.c1)) NOT BETWEEN ((vt0.c0 IN ())) AND (NULL)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.2580607919095764 THEN vt0.c1 WHEN 0.6147848146336848 THEN v0.c0 WHEN vt0.c0 THEN t0.c0 END)IS(((t0.c0) NOTNULL))) CROSS JOIN v0 ON ((LIKELY(vt0.c1)) NOT BETWEEN ((vt0.c0 IN ())) AND (NULL)) WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c1 AS REAL)) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c1 AS REAL)) AND ((- (v0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.2580607919095764 THEN vt0.c1 WHEN 0.6147848146336848 THEN v0.c0 WHEN vt0.c0 THEN t0.c0 END)IS(((t0.c0) NOTNULL))) CROSS JOIN v0 ON ((LIKELY(vt0.c1)) NOT BETWEEN ((vt0.c0 IN ())) AND (NULL)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((CASE WHEN v0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0.2580607919095764 THEN vt0.c1 WHEN 0.6147848146336848 THEN v0.c0 WHEN vt0.c0 THEN t0.c0 END)IS(((t0.c0) NOTNULL))) CROSS JOIN v0 ON ((LIKELY(vt0.c1)) NOT BETWEEN ((vt0.c0 IN ())) AND (NULL)) WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c1 AS REAL)) AND ((- (v0.c0)))));
SELECT * FROM t0, v0 CROSS JOIN rt0 ON (((((t0.c0 IN ()))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))))OR(rt0.c1 COLLATE RTRIM)) CROSS JOIN vt0 ON x'' WHERE (((UNLIKELY(DISTINCT vt0.c0)) NOT BETWEEN ((rt0.c0 IN ())) AND (json_quote(vt0.c1)))) ORDER BY CASE WHEN ((((((((v0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)) THEN (x'' IN ()) ELSE ((t0.c0) NOT BETWEEN (rt0.c0) AND ('0.8698826516274645')) END;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT vt0.c0)) NOT BETWEEN ((rt0.c0 IN ())) AND (json_quote(vt0.c1)))) IS TRUE)  as count FROM t0, v0 CROSS JOIN rt0 ON (((((t0.c0 IN ()))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))))OR(rt0.c1 COLLATE RTRIM)) CROSS JOIN vt0 ON x'' ORDER BY CASE WHEN ((((((((v0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)) THEN (x'' IN ()) ELSE ((t0.c0) NOT BETWEEN (rt0.c0) AND ('0.8698826516274645')) END);
SELECT * FROM t0, v0 CROSS JOIN rt0 ON (((((t0.c0 IN ()))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))))OR(rt0.c1 COLLATE RTRIM)) CROSS JOIN vt0 ON x'' WHERE (((UNLIKELY(DISTINCT vt0.c0)) NOT BETWEEN ((rt0.c0 IN ())) AND (json_quote(vt0.c1)))) ORDER BY CASE WHEN ((((((((v0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)) THEN (x'' IN ()) ELSE ((t0.c0) NOT BETWEEN (rt0.c0) AND ('0.8698826516274645')) END;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT vt0.c0)) NOT BETWEEN ((rt0.c0 IN ())) AND (json_quote(vt0.c1)))) IS TRUE)  as count FROM t0, v0 CROSS JOIN rt0 ON (((((t0.c0 IN ()))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))))OR(rt0.c1 COLLATE RTRIM)) CROSS JOIN vt0 ON x'' ORDER BY CASE WHEN ((((((((v0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)) THEN (x'' IN ()) ELSE ((t0.c0) NOT BETWEEN (rt0.c0) AND ('0.8698826516274645')) END);
SELECT * FROM t0, v0 CROSS JOIN rt0 ON (((((t0.c0 IN ()))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)))))OR(rt0.c1 COLLATE RTRIM)) CROSS JOIN vt0 ON x'' WHERE (((UNLIKELY(DISTINCT vt0.c0)) NOT BETWEEN ((rt0.c0 IN ())) AND (json_quote(vt0.c1)))) ORDER BY CASE WHEN ((((((((v0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)) THEN (x'' IN ()) ELSE ((t0.c0) NOT BETWEEN (rt0.c0) AND ('0.8698826516274645')) END;
SELECT * FROM t0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)IS NOT((((rt0.c1, rt0.c3, v0.c0))<((v0.c0, rt0.c2, rt0.c2))))) INNER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON -347285050 WHERE (SUBSTR(NULL, rt0.c0)) ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN vt0.c1 END THEN CAST(v0.c0 AS INTEGER) ELSE CASE rt0.c0  WHEN rt0.c2 THEN '-782748428' END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(NULL, rt0.c0)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)IS NOT((((rt0.c1, rt0.c3, v0.c0))<((v0.c0, rt0.c2, rt0.c2))))) INNER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON -347285050 ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN vt0.c1 END THEN CAST(v0.c0 AS INTEGER) ELSE CASE rt0.c0  WHEN rt0.c2 THEN '-782748428' END END  NULLS LAST);
SELECT * FROM t0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)IS NOT((((rt0.c1, rt0.c3, v0.c0))<((v0.c0, rt0.c2, rt0.c2))))) INNER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON -347285050 WHERE (SUBSTR(NULL, rt0.c0)) ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN vt0.c1 END THEN CAST(v0.c0 AS INTEGER) ELSE CASE rt0.c0  WHEN rt0.c2 THEN '-782748428' END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(NULL, rt0.c0)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)IS NOT((((rt0.c1, rt0.c3, v0.c0))<((v0.c0, rt0.c2, rt0.c2))))) INNER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON -347285050 ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN vt0.c1 END THEN CAST(v0.c0 AS INTEGER) ELSE CASE rt0.c0  WHEN rt0.c2 THEN '-782748428' END END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c3 AS INTEGER))>=('-26608706'))) ORDER BY ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE -1780096551 END) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND ((rt0.c2 IN (rt0.c0)))), ((rt0.c0 IN (rt0.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS INTEGER))>=('-26608706'))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE -1780096551 END) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND ((rt0.c2 IN (rt0.c0)))), ((rt0.c0 IN (rt0.c3)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c3 AS INTEGER))>=('-26608706'))) ORDER BY ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE -1780096551 END) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND ((rt0.c2 IN (rt0.c0)))), ((rt0.c0 IN (rt0.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS INTEGER))>=('-26608706'))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE -1780096551 END) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND ((rt0.c2 IN (rt0.c0)))), ((rt0.c0 IN (rt0.c3)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c3 AS INTEGER))>=('-26608706'))) ORDER BY ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE -1780096551 END) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND ((rt0.c2 IN (rt0.c0)))), ((rt0.c0 IN (rt0.c3)) IN ())  NULLS LAST;
SELECT * FROM v0 WHERE ((+ (((((v0.c0)AND(v0.c0)))AND('0.275801791537183')))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((v0.c0)AND(v0.c0)))AND('0.275801791537183'))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (((((v0.c0)AND(v0.c0)))AND('0.275801791537183')))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((v0.c0)AND(v0.c0)))AND('0.275801791537183'))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (((((v0.c0)AND(v0.c0)))AND('0.275801791537183')))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c2);
SELECT ALL * FROM v0, vt0, rt0, t0 WHERE (((((vt0.c0, rt0.c3, 0.421319365780809))>((vt0.c0, rt0.c2, x''))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, rt0.c3, 0.421319365780809))>((vt0.c0, rt0.c2, x''))) IN ())) IS TRUE)  as count FROM v0, vt0, rt0, t0);
SELECT ALL * FROM v0, vt0, rt0, t0 WHERE (((((vt0.c0, rt0.c3, 0.421319365780809))>((vt0.c0, rt0.c2, x''))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, rt0.c3, 0.421319365780809))>((vt0.c0, rt0.c2, x''))) IN ())) IS TRUE)  as count FROM v0, vt0, rt0, t0);
SELECT ALL * FROM v0, vt0, rt0, t0 WHERE (((((vt0.c0, rt0.c3, 0.421319365780809))>((vt0.c0, rt0.c2, x''))) IN ()));
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (CAST(LIKELY(DISTINCT rt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT rt0.c0) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (CAST(LIKELY(DISTINCT rt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT rt0.c0) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (CAST(LIKELY(DISTINCT rt0.c0) AS NUMERIC));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((x'd8dc' IN ())) NOTNULL)) ORDER BY ((((((((vt0.c1)OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE  NULLS LAST, ((((rt0.c3)IS('1011683101'))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'd8dc' IN ())) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((vt0.c1)OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE  NULLS LAST, ((((rt0.c3)IS('1011683101'))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((x'd8dc' IN ())) NOTNULL)) ORDER BY ((((((((vt0.c1)OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE  NULLS LAST, ((((rt0.c3)IS('1011683101'))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'd8dc' IN ())) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((vt0.c1)OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE  NULLS LAST, ((((rt0.c3)IS('1011683101'))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((x'd8dc' IN ())) NOTNULL)) ORDER BY ((((((((vt0.c1)OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE  NULLS LAST, ((((rt0.c3)IS('1011683101'))) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM t0, v0, rt0 WHERE (('-573521843' IN ())) ORDER BY CASE ((v0.c0)LIKE(rt0.c2))  WHEN '1397867229' THEN CASE WHEN NULL THEN t0.c0 ELSE v0.c0 END END;
SELECT SUM(count) FROM (SELECT ((('-573521843' IN ())) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY CASE ((v0.c0)LIKE(rt0.c2))  WHEN '1397867229' THEN CASE WHEN NULL THEN t0.c0 ELSE v0.c0 END END);
SELECT * FROM t0, v0, rt0 WHERE (('-573521843' IN ())) ORDER BY CASE ((v0.c0)LIKE(rt0.c2))  WHEN '1397867229' THEN CASE WHEN NULL THEN t0.c0 ELSE v0.c0 END END;
SELECT SUM(count) FROM (SELECT ((('-573521843' IN ())) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY CASE ((v0.c0)LIKE(rt0.c2))  WHEN '1397867229' THEN CASE WHEN NULL THEN t0.c0 ELSE v0.c0 END END);
SELECT * FROM t0, v0, rt0 WHERE (('-573521843' IN ())) ORDER BY CASE ((v0.c0)LIKE(rt0.c2))  WHEN '1397867229' THEN CASE WHEN NULL THEN t0.c0 ELSE v0.c0 END END;
SELECT COUNT(*) FROM v0, vt0, t0, rt0 WHERE (((((((((((((((rt0.c1) NOT BETWEEN ('c,') AND ('2103641131')))AND(rt0.c2 COLLATE BINARY)))OR(((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c0 END)))OR((+ (vt0.c1)))))OR((rt0.c0 IN ()))))OR(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1) NOT BETWEEN ('c,') AND ('2103641131')))AND(rt0.c2 COLLATE BINARY)))OR(((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c0 END)))OR((+ (vt0.c1)))))OR((rt0.c0 IN ()))))OR(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, t0, rt0);
SELECT COUNT(*) FROM v0, vt0, t0, rt0 WHERE (((((((((((((((rt0.c1) NOT BETWEEN ('c,') AND ('2103641131')))AND(rt0.c2 COLLATE BINARY)))OR(((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c0 END)))OR((+ (vt0.c1)))))OR((rt0.c0 IN ()))))OR(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1) NOT BETWEEN ('c,') AND ('2103641131')))AND(rt0.c2 COLLATE BINARY)))OR(((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c0 END)))OR((+ (vt0.c1)))))OR((rt0.c0 IN ()))))OR(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, t0, rt0);
SELECT COUNT(*) FROM v0, vt0, t0, rt0 WHERE (((((((((((((((rt0.c1) NOT BETWEEN ('c,') AND ('2103641131')))AND(rt0.c2 COLLATE BINARY)))OR(((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c0 END)))OR((+ (vt0.c1)))))OR((rt0.c0 IN ()))))OR(((rt0.c3) NOT NULL))));
SELECT ALL * FROM v0, t0 WHERE (LTRIM(t0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((LTRIM(t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (LTRIM(t0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((LTRIM(t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (LTRIM(t0.c0 COLLATE BINARY));
SELECT * FROM rt0, v0 LEFT OUTER JOIN t0 ON CASE WHEN LOWER(DISTINCT rt0.c1) THEN SQLITE_COMPILEOPTION_USED(rt0.c0) WHEN ((NULL)||(rt0.c0)) THEN NULL WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(rt0.c3 AS INTEGER) WHEN ((vt0.c0)+(vt0.c1)) THEN ((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)) WHEN rt0.c0 THEN 0.414636554507968 ELSE rt0.c0 END LEFT OUTER JOIN vt0 ON ((((((((((x'8f8a')OR(rt0.c3)))OR(rt0.c1)))OR(t0.c0)))OR(rt0.c3))) NOT BETWEEN (TRIM(t0.c0)) AND (((-1606694889)OR(rt0.c2)))) WHERE (((CASE -4.95892654E8  WHEN t0.c0 THEN v0.c0 END)>=(((vt0.c0) NOT BETWEEN ('1579184331') AND (rt0.c0))))) ORDER BY ((- (rt0.c3)) IN (((((v0.c0)OR(rt0.c3)))OR(t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE -4.95892654E8  WHEN t0.c0 THEN v0.c0 END)>=(((vt0.c0) NOT BETWEEN ('1579184331') AND (rt0.c0))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN t0 ON CASE WHEN LOWER(DISTINCT rt0.c1) THEN SQLITE_COMPILEOPTION_USED(rt0.c0) WHEN ((NULL)||(rt0.c0)) THEN NULL WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(rt0.c3 AS INTEGER) WHEN ((vt0.c0)+(vt0.c1)) THEN ((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)) WHEN rt0.c0 THEN 0.414636554507968 ELSE rt0.c0 END LEFT OUTER JOIN vt0 ON ((((((((((x'8f8a')OR(rt0.c3)))OR(rt0.c1)))OR(t0.c0)))OR(rt0.c3))) NOT BETWEEN (TRIM(t0.c0)) AND (((-1606694889)OR(rt0.c2)))) ORDER BY ((- (rt0.c3)) IN (((((v0.c0)OR(rt0.c3)))OR(t0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0, v0 LEFT OUTER JOIN t0 ON CASE WHEN LOWER(DISTINCT rt0.c1) THEN SQLITE_COMPILEOPTION_USED(rt0.c0) WHEN ((NULL)||(rt0.c0)) THEN NULL WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(rt0.c3 AS INTEGER) WHEN ((vt0.c0)+(vt0.c1)) THEN ((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)) WHEN rt0.c0 THEN 0.414636554507968 ELSE rt0.c0 END LEFT OUTER JOIN vt0 ON ((((((((((x'8f8a')OR(rt0.c3)))OR(rt0.c1)))OR(t0.c0)))OR(rt0.c3))) NOT BETWEEN (TRIM(t0.c0)) AND (((-1606694889)OR(rt0.c2)))) WHERE (((CASE -4.95892654E8  WHEN t0.c0 THEN v0.c0 END)>=(((vt0.c0) NOT BETWEEN ('1579184331') AND (rt0.c0))))) ORDER BY ((- (rt0.c3)) IN (((((v0.c0)OR(rt0.c3)))OR(t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE -4.95892654E8  WHEN t0.c0 THEN v0.c0 END)>=(((vt0.c0) NOT BETWEEN ('1579184331') AND (rt0.c0))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN t0 ON CASE WHEN LOWER(DISTINCT rt0.c1) THEN SQLITE_COMPILEOPTION_USED(rt0.c0) WHEN ((NULL)||(rt0.c0)) THEN NULL WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(rt0.c3 AS INTEGER) WHEN ((vt0.c0)+(vt0.c1)) THEN ((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)) WHEN rt0.c0 THEN 0.414636554507968 ELSE rt0.c0 END LEFT OUTER JOIN vt0 ON ((((((((((x'8f8a')OR(rt0.c3)))OR(rt0.c1)))OR(t0.c0)))OR(rt0.c3))) NOT BETWEEN (TRIM(t0.c0)) AND (((-1606694889)OR(rt0.c2)))) ORDER BY ((- (rt0.c3)) IN (((((v0.c0)OR(rt0.c3)))OR(t0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0, v0 WHERE (CAST((rt0.c0 IN (rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, t0, v0);
SELECT ALL * FROM rt0, vt0, t0, v0 WHERE (CAST((rt0.c0 IN (rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, t0, v0);
SELECT ALL * FROM rt0, vt0, t0, v0 WHERE (CAST((rt0.c0 IN (rt0.c0)) AS BLOB));
SELECT ALL * FROM t0 CROSS JOIN v0 ON '-347285050' INNER JOIN rt0 ON (((- (vt0.c1))) ISNULL) INNER JOIN vt0 ON ((((((rt0.c3)GLOB(rt0.c1)))AND(CAST(rt0.c3 AS NUMERIC))))AND(vt0.c0 COLLATE RTRIM)) WHERE ((((rt0.c1, rt0.c0, '')) NOT BETWEEN ((CAST(NULL AS TEXT), ((v0.c0) NOTNULL), (- (rt0.c1)))) AND ((CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 END, ((((((((rt0.c0)AND(NULL)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, '')) NOT BETWEEN ((CAST(NULL AS TEXT), ((v0.c0) NOTNULL), (- (rt0.c1)))) AND ((CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 END, ((((((((rt0.c0)AND(NULL)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)), vt0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON '-347285050' INNER JOIN rt0 ON (((- (vt0.c1))) ISNULL) INNER JOIN vt0 ON ((((((rt0.c3)GLOB(rt0.c1)))AND(CAST(rt0.c3 AS NUMERIC))))AND(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0 CROSS JOIN v0 ON '-347285050' INNER JOIN rt0 ON (((- (vt0.c1))) ISNULL) INNER JOIN vt0 ON ((((((rt0.c3)GLOB(rt0.c1)))AND(CAST(rt0.c3 AS NUMERIC))))AND(vt0.c0 COLLATE RTRIM)) WHERE ((((rt0.c1, rt0.c0, '')) NOT BETWEEN ((CAST(NULL AS TEXT), ((v0.c0) NOTNULL), (- (rt0.c1)))) AND ((CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 END, ((((((((rt0.c0)AND(NULL)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, '')) NOT BETWEEN ((CAST(NULL AS TEXT), ((v0.c0) NOTNULL), (- (rt0.c1)))) AND ((CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 END, ((((((((rt0.c0)AND(NULL)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)), vt0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON '-347285050' INNER JOIN rt0 ON (((- (vt0.c1))) ISNULL) INNER JOIN vt0 ON ((((((rt0.c3)GLOB(rt0.c1)))AND(CAST(rt0.c3 AS NUMERIC))))AND(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0 CROSS JOIN v0 ON '-347285050' INNER JOIN rt0 ON (((- (vt0.c1))) ISNULL) INNER JOIN vt0 ON ((((((rt0.c3)GLOB(rt0.c1)))AND(CAST(rt0.c3 AS NUMERIC))))AND(vt0.c0 COLLATE RTRIM)) WHERE ((((rt0.c1, rt0.c0, '')) NOT BETWEEN ((CAST(NULL AS TEXT), ((v0.c0) NOTNULL), (- (rt0.c1)))) AND ((CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 END, ((((((((rt0.c0)AND(NULL)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)), vt0.c0))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((0.707191631277956)))) ORDER BY CASE WHEN (~ (t0.c0)) THEN t0.c0 END DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((0.707191631277956)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (~ (t0.c0)) THEN t0.c0 END DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((0.707191631277956)))) ORDER BY CASE WHEN (~ (t0.c0)) THEN t0.c0 END DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((0.707191631277956)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (~ (t0.c0)) THEN t0.c0 END DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((0.707191631277956)))) ORDER BY CASE WHEN (~ (t0.c0)) THEN t0.c0 END DESC;
SELECT ALL * FROM v0 WHERE (0.008759398790620376) ORDER BY (((((v0.c0)OR(v0.c0))))<((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ASC  NULLS FIRST, CAST((+ (v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((0.008759398790620376) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0))))<((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ASC  NULLS FIRST, CAST((+ (v0.c0)) AS TEXT));
SELECT ALL * FROM v0 WHERE (0.008759398790620376) ORDER BY (((((v0.c0)OR(v0.c0))))<((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ASC  NULLS FIRST, CAST((+ (v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((0.008759398790620376) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0))))<((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ASC  NULLS FIRST, CAST((+ (v0.c0)) AS TEXT));
SELECT ALL * FROM v0 WHERE (0.008759398790620376) ORDER BY (((((v0.c0)OR(v0.c0))))<((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ASC  NULLS FIRST, CAST((+ (v0.c0)) AS TEXT);
SELECT ALL * FROM t0, rt0, v0 NOT INDEXED, vt0 WHERE (CAST(((((rt0.c3)OR(rt0.c2)))AND(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c3)OR(rt0.c2)))AND(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, rt0, v0, vt0);
SELECT ALL * FROM t0, rt0, v0 NOT INDEXED, vt0 WHERE (CAST(((((rt0.c3)OR(rt0.c2)))AND(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c3)OR(rt0.c2)))AND(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, rt0, v0, vt0);
SELECT ALL * FROM t0, rt0, v0 NOT INDEXED, vt0 WHERE (CAST(((((rt0.c3)OR(rt0.c2)))AND(t0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) ISNULL) IN ())) ORDER BY (~ (((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM v0 ORDER BY (~ (((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) ISNULL) IN ())) ORDER BY (~ (((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM v0 ORDER BY (~ (((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) ISNULL) IN ())) ORDER BY (~ (((v0.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT vt0.c0))OR(vt0.c1 COLLATE RTRIM)))AND((((v0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))) LEFT OUTER JOIN v0 ON (CAST(vt0.c1 AS TEXT) IN ()) WHERE ((((((rt0.c1)<=(t0.c0))))<=((CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY CASE CASE WHEN rt0.c3 THEN v0.c0 ELSE rt0.c2 END  WHEN ((vt0.c0)>=(v0.c0)) THEN (NOT (v0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<=(t0.c0))))<=((CASE WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT vt0.c0))OR(vt0.c1 COLLATE RTRIM)))AND((((v0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))) LEFT OUTER JOIN v0 ON (CAST(vt0.c1 AS TEXT) IN ()) ORDER BY CASE CASE WHEN rt0.c3 THEN v0.c0 ELSE rt0.c2 END  WHEN ((vt0.c0)>=(v0.c0)) THEN (NOT (v0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT vt0.c0))OR(vt0.c1 COLLATE RTRIM)))AND((((v0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))) LEFT OUTER JOIN v0 ON (CAST(vt0.c1 AS TEXT) IN ()) WHERE ((((((rt0.c1)<=(t0.c0))))<=((CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY CASE CASE WHEN rt0.c3 THEN v0.c0 ELSE rt0.c2 END  WHEN ((vt0.c0)>=(v0.c0)) THEN (NOT (v0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<=(t0.c0))))<=((CASE WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT vt0.c0))OR(vt0.c1 COLLATE RTRIM)))AND((((v0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))) LEFT OUTER JOIN v0 ON (CAST(vt0.c1 AS TEXT) IN ()) ORDER BY CASE CASE WHEN rt0.c3 THEN v0.c0 ELSE rt0.c2 END  WHEN ((vt0.c0)>=(v0.c0)) THEN (NOT (v0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN rt0 ON ((((HEX(DISTINCT vt0.c0))OR(vt0.c1 COLLATE RTRIM)))AND((((v0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))) LEFT OUTER JOIN v0 ON (CAST(vt0.c1 AS TEXT) IN ()) WHERE ((((((rt0.c1)<=(t0.c0))))<=((CASE WHEN v0.c0 THEN v0.c0 END)))) ORDER BY CASE CASE WHEN rt0.c3 THEN v0.c0 ELSE rt0.c2 END  WHEN ((vt0.c0)>=(v0.c0)) THEN (NOT (v0.c0)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN rt0 ON CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1) NOTNULL) END WHERE ((-986493563 IN ())) ORDER BY (((vt0.c0)) BETWEEN ((((((v0.c0)OR(vt0.c0)))OR(rt0.c1)))) AND (((((rt0.c0, rt0.c1, rt0.c0))!=((vt0.c1, vt0.c0, -1.467481613E9)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((-986493563 IN ())) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt0 ON CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1) NOTNULL) END ORDER BY (((vt0.c0)) BETWEEN ((((((v0.c0)OR(vt0.c0)))OR(rt0.c1)))) AND (((((rt0.c0, rt0.c1, rt0.c0))<>((vt0.c1, vt0.c0, -1.467481613E9)))))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN rt0 ON CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1) NOTNULL) END WHERE ((-986493563 IN ())) ORDER BY (((vt0.c0)) BETWEEN ((((((v0.c0)OR(vt0.c0)))OR(rt0.c1)))) AND (((((rt0.c0, rt0.c1, rt0.c0))!=((vt0.c1, vt0.c0, -1.467481613E9)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((-986493563 IN ())) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt0 ON CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1) NOTNULL) END ORDER BY (((vt0.c0)) BETWEEN ((((((v0.c0)OR(vt0.c0)))OR(rt0.c1)))) AND (((((rt0.c0, rt0.c1, rt0.c0))<>((vt0.c1, vt0.c0, -1.467481613E9)))))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN rt0 ON CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1) NOTNULL) END WHERE ((-986493563 IN ())) ORDER BY (((vt0.c0)) BETWEEN ((((((v0.c0)OR(vt0.c0)))OR(rt0.c1)))) AND (((((rt0.c0, rt0.c1, rt0.c0))!=((vt0.c1, vt0.c0, -1.467481613E9)))))) ASC;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c3, rt0.c3, t0.c0)) NOT BETWEEN ((-2469514 COLLATE NOCASE, ((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c1)), ((rt0.c3) NOT NULL))) AND ((rt0.c1, x'', ((rt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c3, t0.c0)) NOT BETWEEN ((-2469514 COLLATE NOCASE, ((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c1)), ((rt0.c3) NOT NULL))) AND ((rt0.c1, x'', ((rt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c3, rt0.c3, t0.c0)) NOT BETWEEN ((-2469514 COLLATE NOCASE, ((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c1)), ((rt0.c3) NOT NULL))) AND ((rt0.c1, x'', ((rt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c3, t0.c0)) NOT BETWEEN ((-2469514 COLLATE NOCASE, ((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c1)), ((rt0.c3) NOT NULL))) AND ((rt0.c1, x'', ((rt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c3, rt0.c3, t0.c0)) NOT BETWEEN ((-2469514 COLLATE NOCASE, ((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c1)), ((rt0.c3) NOT NULL))) AND ((rt0.c1, x'', ((rt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON CASE rt0.c3 COLLATE NOCASE  WHEN rt0.c3 THEN CAST(rt0.c3 AS REAL) END WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c3)=(rt0.c3)))) AND ((((rt0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c3)=(rt0.c3)))) AND ((((rt0.c1) NOT NULL))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE rt0.c3 COLLATE NOCASE  WHEN rt0.c3 THEN CAST(rt0.c3 AS REAL) END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON CASE rt0.c3 COLLATE NOCASE  WHEN rt0.c3 THEN CAST(rt0.c3 AS REAL) END WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c3)=(rt0.c3)))) AND ((((rt0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((rt0.c3)=(rt0.c3)))) AND ((((rt0.c1) NOT NULL))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE rt0.c3 COLLATE NOCASE  WHEN rt0.c3 THEN CAST(rt0.c3 AS REAL) END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON CASE rt0.c3 COLLATE NOCASE  WHEN rt0.c3 THEN CAST(rt0.c3 AS REAL) END WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c3)=(rt0.c3)))) AND ((((rt0.c1) NOT NULL)))));
SELECT * FROM t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((rt0.c2))<((rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((rt0.c2))<((rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((rt0.c2))<((rt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((vt0.c1)) BETWEEN ((v0.c0)) AND ((t0.c0)))) NOT NULL) INNER JOIN v0 ON ((vt0.c1)>=(CAST(t0.c0 AS TEXT))) WHERE (((((t0.c0)IS NOT(v0.c0))) BETWEEN (LIKELY(DISTINCT v0.c0)) AND ((NOT (vt0.c1))))) ORDER BY IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE BINARY, ((((((((((t0.c0)*(vt0.c1)))OR((((v0.c0, v0.c0, '밴<[]', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, v0.c0, t0.c0, t0.c0)) AND ((vt0.c1, v0.c0, v0.c0, vt0.c1, v0.c0))))))AND(SQLITE_COMPILEOPTION_USED(v0.c0))))OR(((vt0.c0)AND(vt0.c0)))))AND('Ov' COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS NOT(v0.c0))) BETWEEN (LIKELY(DISTINCT v0.c0)) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((vt0.c1)) BETWEEN ((v0.c0)) AND ((t0.c0)))) NOT NULL) INNER JOIN v0 ON ((vt0.c1)>=(CAST(t0.c0 AS TEXT))) ORDER BY IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE BINARY, ((((((((((t0.c0)*(vt0.c1)))OR((((v0.c0, v0.c0, '밴<[]', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, v0.c0, t0.c0, t0.c0)) AND ((vt0.c1, v0.c0, v0.c0, vt0.c1, v0.c0))))))AND(SQLITE_COMPILEOPTION_USED(v0.c0))))OR(((vt0.c0)AND(vt0.c0)))))AND('Ov' COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((vt0.c1)) BETWEEN ((v0.c0)) AND ((t0.c0)))) NOT NULL) INNER JOIN v0 ON ((vt0.c1)>=(CAST(t0.c0 AS TEXT))) WHERE (((((t0.c0)IS NOT(v0.c0))) BETWEEN (LIKELY(DISTINCT v0.c0)) AND ((NOT (vt0.c1))))) ORDER BY IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE BINARY, ((((((((((t0.c0)*(vt0.c1)))OR((((v0.c0, v0.c0, '밴<[]', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, v0.c0, t0.c0, t0.c0)) AND ((vt0.c1, v0.c0, v0.c0, vt0.c1, v0.c0))))))AND(SQLITE_COMPILEOPTION_USED(v0.c0))))OR(((vt0.c0)AND(vt0.c0)))))AND('Ov' COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS NOT(v0.c0))) BETWEEN (LIKELY(DISTINCT v0.c0)) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((vt0.c1)) BETWEEN ((v0.c0)) AND ((t0.c0)))) NOT NULL) INNER JOIN v0 ON ((vt0.c1)>=(CAST(t0.c0 AS TEXT))) ORDER BY IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE BINARY, ((((((((((t0.c0)*(vt0.c1)))OR((((v0.c0, v0.c0, '밴<[]', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, v0.c0, t0.c0, t0.c0)) AND ((vt0.c1, v0.c0, v0.c0, vt0.c1, v0.c0))))))AND(SQLITE_COMPILEOPTION_USED(v0.c0))))OR(((vt0.c0)AND(vt0.c0)))))AND('Ov' COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((vt0.c1)) BETWEEN ((v0.c0)) AND ((t0.c0)))) NOT NULL) INNER JOIN v0 ON ((vt0.c1)>=(CAST(t0.c0 AS TEXT))) WHERE (((((t0.c0)IS NOT(v0.c0))) BETWEEN (LIKELY(DISTINCT v0.c0)) AND ((NOT (vt0.c1))))) ORDER BY IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE BINARY, ((((((((((t0.c0)*(vt0.c1)))OR((((v0.c0, v0.c0, '밴<[]', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, v0.c0, t0.c0, t0.c0)) AND ((vt0.c1, v0.c0, v0.c0, vt0.c1, v0.c0))))))AND(SQLITE_COMPILEOPTION_USED(v0.c0))))OR(((vt0.c0)AND(vt0.c0)))))AND('Ov' COLLATE NOCASE)) ASC;
SELECT ALL * FROM rt0, vt0, t0, v0 WHERE (((((((0.7156690735086467)OR(rt0.c1)))AND(x''))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((0.7156690735086467)OR(rt0.c1)))AND(x''))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, t0, v0);
SELECT ALL * FROM rt0, vt0, t0, v0 WHERE (((((((0.7156690735086467)OR(rt0.c1)))AND(x''))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((0.7156690735086467)OR(rt0.c1)))AND(x''))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, t0, v0);
SELECT ALL * FROM rt0, vt0, t0, v0 WHERE (((((((0.7156690735086467)OR(rt0.c1)))AND(x''))) NOT NULL));
SELECT * FROM t0 FULL OUTER JOIN v0 ON ((((vt0.c1)LIKE(vt0.c1)))OR(((t0.c0)LIKE(vt0.c0)))) INNER JOIN vt0 ON ((CASE WHEN v0.c0 THEN t0.c0 END)/((t0.c0 IN ()))) WHERE (json_remove((((vt0.c1))<=((vt0.c1))), CASE vt0.c1  WHEN vt0.c0 THEN NULL END)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_remove((((vt0.c1))<=((vt0.c1))), CASE vt0.c1  WHEN vt0.c0 THEN NULL END)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((vt0.c1)LIKE(vt0.c1)))OR(((t0.c0)LIKE(vt0.c0)))) INNER JOIN vt0 ON ((CASE WHEN v0.c0 THEN t0.c0 END)/((t0.c0 IN ()))) ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN v0 ON ((((vt0.c1)LIKE(vt0.c1)))OR(((t0.c0)LIKE(vt0.c0)))) INNER JOIN vt0 ON ((CASE WHEN v0.c0 THEN t0.c0 END)/((t0.c0 IN ()))) WHERE (json_remove((((vt0.c1))<=((vt0.c1))), CASE vt0.c1  WHEN vt0.c0 THEN NULL END)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_remove((((vt0.c1))<=((vt0.c1))), CASE vt0.c1  WHEN vt0.c0 THEN NULL END)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((vt0.c1)LIKE(vt0.c1)))OR(((t0.c0)LIKE(vt0.c0)))) INNER JOIN vt0 ON ((CASE WHEN v0.c0 THEN t0.c0 END)/((t0.c0 IN ()))) ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (0.5549316008901771) ORDER BY (v0.c0 IN ()) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.5549316008901771) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (0.5549316008901771) ORDER BY (v0.c0 IN ()) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.5549316008901771) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (0.5549316008901771) ORDER BY (v0.c0 IN ()) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN 0.11656974762402639 THEN vt0.c0 ELSE vt0.c0 END THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c1) NOTNULL) END) ORDER BY ((vt0.c1)==(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN 0.11656974762402639 THEN vt0.c0 ELSE vt0.c0 END THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)=(vt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN 0.11656974762402639 THEN vt0.c0 ELSE vt0.c0 END THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c1) NOTNULL) END) ORDER BY ((vt0.c1)==(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN 0.11656974762402639 THEN vt0.c0 ELSE vt0.c0 END THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)=(vt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN 0.11656974762402639 THEN vt0.c0 ELSE vt0.c0 END THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c1) NOTNULL) END) ORDER BY ((vt0.c1)==(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0) IS FALSE)))>((((t0.c0)AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0) IS FALSE)))>((((t0.c0)AND(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0) IS FALSE)))>((((t0.c0)AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0) IS FALSE)))>((((t0.c0)AND(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0) IS FALSE)))>((((t0.c0)AND(t0.c0))))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0, v0 WHERE (((rt0.c2)<=(rt0.c2 COLLATE BINARY))) ORDER BY (((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<=(((NOT (rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<=(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY (((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<=(((NOT (rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, v0 WHERE (((rt0.c2)<=(rt0.c2 COLLATE BINARY))) ORDER BY (((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<=(((NOT (rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<=(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY (((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<=(((NOT (rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, v0 WHERE (((rt0.c2)<=(rt0.c2 COLLATE BINARY))) ORDER BY (((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<=(((NOT (rt0.c1))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT * FROM vt0, t0 FULL OUTER JOIN v0 ON CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) END WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) END);
SELECT * FROM vt0, t0 FULL OUTER JOIN v0 ON CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) END WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) END);
SELECT * FROM vt0, t0 FULL OUTER JOIN v0 ON CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)) THEN CAST(vt0.c0 AS BLOB) END WHERE (vt0.c1);
SELECT * FROM t0, vt0 WHERE ((((~ (vt0.c0)))<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((vt0.c0 IN ()) IN ((((NULL))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 IN ()) IN ((((NULL))>=((vt0.c0))))));
SELECT * FROM t0, vt0 WHERE ((((~ (vt0.c0)))<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((vt0.c0 IN ()) IN ((((NULL))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 IN ()) IN ((((NULL))>=((vt0.c0))))));
SELECT * FROM t0, vt0 WHERE ((((~ (vt0.c0)))<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((vt0.c0 IN ()) IN ((((NULL))>=((vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((0X1 COLLATE RTRIM)>=((rt0.c3 IN (rt0.c2, t0.c0))))) ORDER BY ((((((x'')) BETWEEN ((x'112e')) AND ((rt0.c0)))))>((((t0.c0) BETWEEN (rt0.c3) AND (rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0x1 COLLATE RTRIM)>=((rt0.c3 IN (rt0.c2, t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((x'')) BETWEEN ((x'112e')) AND ((rt0.c0)))))>((((t0.c0) BETWEEN (rt0.c3) AND (rt0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((0X1 COLLATE RTRIM)>=((rt0.c3 IN (rt0.c2, t0.c0))))) ORDER BY ((((((x'')) BETWEEN ((x'112e')) AND ((rt0.c0)))))>((((t0.c0) BETWEEN (rt0.c3) AND (rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0x1 COLLATE RTRIM)>=((rt0.c3 IN (rt0.c2, t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((x'')) BETWEEN ((x'112e')) AND ((rt0.c0)))))>((((t0.c0) BETWEEN (rt0.c3) AND (rt0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((0X1 COLLATE RTRIM)>=((rt0.c3 IN (rt0.c2, t0.c0))))) ORDER BY ((((((x'')) BETWEEN ((x'112e')) AND ((rt0.c0)))))>((((t0.c0) BETWEEN (rt0.c3) AND (rt0.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0, vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY) ORDER BY TRIM(DISTINCT rt0.c3, vt0.c1) COLLATE BINARY DESC  NULLS FIRST, (NOT (vt0.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, v0, vt0, rt0 ORDER BY TRIM(DISTINCT rt0.c3, vt0.c1) COLLATE BINARY DESC  NULLS FIRST, (NOT (vt0.c1 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY) ORDER BY TRIM(DISTINCT rt0.c3, vt0.c1) COLLATE BINARY DESC  NULLS FIRST, (NOT (vt0.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, v0, vt0, rt0 ORDER BY TRIM(DISTINCT rt0.c3, vt0.c1) COLLATE BINARY DESC  NULLS FIRST, (NOT (vt0.c1 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY) ORDER BY TRIM(DISTINCT rt0.c3, vt0.c1) COLLATE BINARY DESC  NULLS FIRST, (NOT (vt0.c1 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)-(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END) ORDER BY 0.642693848568004 ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)-(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM t0 ORDER BY 0.642693848568004 ASC);
SELECT ALL * FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)-(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END) ORDER BY 0.642693848568004 ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)-(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM t0 ORDER BY 0.642693848568004 ASC);
SELECT ALL * FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)-(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END) ORDER BY 0.642693848568004 ASC;
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((- (NULL)) IN (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((- (NULL)) IN (vt0.c1))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((- (NULL)) IN (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((- (NULL)) IN (vt0.c1))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((- (NULL)) IN (vt0.c1)));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)-(rt0.c2)))>=(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) INNER JOIN v0 ON rt0.c2 COLLATE BINARY COLLATE BINARY FULL OUTER JOIN t0 ON (((((-1808875469, vt0.c1, v0.c0, vt0.c1, rt0.c1))<=((rt0.c2, rt0.c3, v0.c0, vt0.c0, rt0.c1))))LIKE(x'50b8')) WHERE (((LIKELIHOOD(DISTINCT NULL, 0.3724594633224204))*('0.23068116905142677')));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT NULL, 0.3724594633224204))*('0.23068116905142677'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)-(rt0.c2)))>=(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) INNER JOIN v0 ON rt0.c2 COLLATE BINARY COLLATE BINARY FULL OUTER JOIN t0 ON (((((-1808875469, vt0.c1, v0.c0, vt0.c1, rt0.c1))<=((rt0.c2, rt0.c3, v0.c0, vt0.c0, rt0.c1))))LIKE(x'50b8')));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)-(rt0.c2)))>=(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) INNER JOIN v0 ON rt0.c2 COLLATE BINARY COLLATE BINARY FULL OUTER JOIN t0 ON (((((-1808875469, vt0.c1, v0.c0, vt0.c1, rt0.c1))<=((rt0.c2, rt0.c3, v0.c0, vt0.c0, rt0.c1))))LIKE(x'50b8')) WHERE (((LIKELIHOOD(DISTINCT NULL, 0.3724594633224204))*('0.23068116905142677')));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT NULL, 0.3724594633224204))*('0.23068116905142677'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)-(rt0.c2)))>=(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) INNER JOIN v0 ON rt0.c2 COLLATE BINARY COLLATE BINARY FULL OUTER JOIN t0 ON (((((-1808875469, vt0.c1, v0.c0, vt0.c1, rt0.c1))<=((rt0.c2, rt0.c3, v0.c0, vt0.c0, rt0.c1))))LIKE(x'50b8')));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)-(rt0.c2)))>=(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) INNER JOIN v0 ON rt0.c2 COLLATE BINARY COLLATE BINARY FULL OUTER JOIN t0 ON (((((-1808875469, vt0.c1, v0.c0, vt0.c1, rt0.c1))<=((rt0.c2, rt0.c3, v0.c0, vt0.c0, rt0.c1))))LIKE(x'50b8')) WHERE (((LIKELIHOOD(DISTINCT NULL, 0.3724594633224204))*('0.23068116905142677')));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (- (((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))) WHERE (((((((vt0.c0)OR(vt0.c1)))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY))) ORDER BY highlight((+ (vt0.c1)), (+ (vt0.c1)), (~ (v0.c0)), 0.9553078334562484)  NULLS FIRST, NULLIF(DISTINCT ((0.5265556465318144)OR(v0.c0)), (~ (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (- (((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))) ORDER BY highlight((+ (vt0.c1)), (+ (vt0.c1)), (~ (v0.c0)), 0.9553078334562484)  NULLS FIRST, NULLIF(DISTINCT ((0.5265556465318144)OR(v0.c0)), (~ (v0.c0)))  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (- (((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))) WHERE (((((((vt0.c0)OR(vt0.c1)))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY))) ORDER BY highlight((+ (vt0.c1)), (+ (vt0.c1)), (~ (v0.c0)), 0.9553078334562484)  NULLS FIRST, NULLIF(DISTINCT ((0.5265556465318144)OR(v0.c0)), (~ (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))AND((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (- (((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))) ORDER BY highlight((+ (vt0.c1)), (+ (vt0.c1)), (~ (v0.c0)), 0.9553078334562484)  NULLS FIRST, NULLIF(DISTINCT ((0.5265556465318144)OR(v0.c0)), (~ (v0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS TEXT));
SELECT * FROM t0 WHERE (CASE ((t0.c0)<=(t0.c0))  WHEN NULLIF(t0.c0, t0.c0) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0)<=(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT NULL) END) ORDER BY CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)<=(t0.c0))  WHEN NULLIF(t0.c0, t0.c0) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0)<=(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT NULL) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS REAL) ASC);
SELECT * FROM t0 WHERE (CASE ((t0.c0)<=(t0.c0))  WHEN NULLIF(t0.c0, t0.c0) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0)<=(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT NULL) END) ORDER BY CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)<=(t0.c0))  WHEN NULLIF(t0.c0, t0.c0) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0)<=(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT NULL) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS REAL) ASC);
SELECT * FROM t0 WHERE (CASE ((t0.c0)<=(t0.c0))  WHEN NULLIF(t0.c0, t0.c0) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0)<=(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT NULL) END) ORDER BY CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c1))==((t0.c0))))==(NULLIF(rt0.c1, rt0.c2))) RIGHT OUTER JOIN t0 ON ((rt0.c1)&(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END)) WHERE (((~ (t0.c0)) IN ())) ORDER BY (NOT (CAST(rt0.c2 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c1))==((t0.c0))))==(NULLIF(rt0.c1, rt0.c2))) RIGHT OUTER JOIN t0 ON ((rt0.c1)&(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END)) ORDER BY (NOT (CAST(rt0.c2 AS TEXT)))  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c1))==((t0.c0))))==(NULLIF(rt0.c1, rt0.c2))) RIGHT OUTER JOIN t0 ON ((rt0.c1)&(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END)) WHERE (((~ (t0.c0)) IN ())) ORDER BY (NOT (CAST(rt0.c2 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c1))==((t0.c0))))==(NULLIF(rt0.c1, rt0.c2))) RIGHT OUTER JOIN t0 ON ((rt0.c1)&(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END)) ORDER BY (NOT (CAST(rt0.c2 AS TEXT)))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN t0 ON x'' LEFT OUTER JOIN v0 ON CASE ((vt0.c0) IS FALSE)  WHEN ((((rt0.c0)AND(t0.c0)))OR(v0.c0)) THEN LOWER(vt0.c1) ELSE CAST(rt0.c0 AS REAL) END RIGHT OUTER JOIN rt0 ON ((vt0.c1) NOTNULL) WHERE (((CASE WHEN rt0.c2 THEN t0.c0 END) NOTNULL)) ORDER BY CASE WHEN ((v0.c0) IS TRUE) THEN (- (t0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)AND(rt0.c0)) WHEN rt0.c2 THEN (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((42133599))) WHEN NULL THEN LIKELIHOOD(t0.c0, 0.9511885046769061) WHEN ((rt0.c0)>(rt0.c3)) THEN rt0.c0 ELSE rt0.c3 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN t0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON x'' LEFT OUTER JOIN v0 ON CASE ((vt0.c0) IS FALSE)  WHEN ((((rt0.c0)AND(t0.c0)))OR(v0.c0)) THEN LOWER(vt0.c1) ELSE CAST(rt0.c0 AS REAL) END RIGHT OUTER JOIN rt0 ON ((vt0.c1) NOTNULL) ORDER BY CASE WHEN ((v0.c0) IS TRUE) THEN (- (t0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)AND(rt0.c0)) WHEN rt0.c2 THEN (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((42133599))) WHEN NULL THEN LIKELIHOOD(t0.c0, 0.9511885046769061) WHEN ((rt0.c0)>(rt0.c3)) THEN rt0.c0 ELSE rt0.c3 END  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN t0 ON x'' LEFT OUTER JOIN v0 ON CASE ((vt0.c0) IS FALSE)  WHEN ((((rt0.c0)AND(t0.c0)))OR(v0.c0)) THEN LOWER(vt0.c1) ELSE CAST(rt0.c0 AS REAL) END RIGHT OUTER JOIN rt0 ON ((vt0.c1) NOTNULL) WHERE (((CASE WHEN rt0.c2 THEN t0.c0 END) NOTNULL)) ORDER BY CASE WHEN ((v0.c0) IS TRUE) THEN (- (t0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)AND(rt0.c0)) WHEN rt0.c2 THEN (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((42133599))) WHEN NULL THEN LIKELIHOOD(t0.c0, 0.9511885046769061) WHEN ((rt0.c0)>(rt0.c3)) THEN rt0.c0 ELSE rt0.c3 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN t0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON x'' LEFT OUTER JOIN v0 ON CASE ((vt0.c0) IS FALSE)  WHEN ((((rt0.c0)AND(t0.c0)))OR(v0.c0)) THEN LOWER(vt0.c1) ELSE CAST(rt0.c0 AS REAL) END RIGHT OUTER JOIN rt0 ON ((vt0.c1) NOTNULL) ORDER BY CASE WHEN ((v0.c0) IS TRUE) THEN (- (t0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)AND(rt0.c0)) WHEN rt0.c2 THEN (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((42133599))) WHEN NULL THEN LIKELIHOOD(t0.c0, 0.9511885046769061) WHEN ((rt0.c0)>(rt0.c3)) THEN rt0.c0 ELSE rt0.c3 END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1) ISNULL))) AND (((vt0.c0 IN ()))))) ORDER BY (((vt0.c0)<<(vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c1) ISNULL))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)<<(vt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1) ISNULL))) AND (((vt0.c0 IN ()))))) ORDER BY (((vt0.c0)<<(vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c1) ISNULL))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)<<(vt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1) ISNULL))) AND (((vt0.c0 IN ()))))) ORDER BY (((vt0.c0)<<(vt0.c0)) IN ())  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(DATE(rt0.c2, rt0.c3, x'', rt0.c3, rt0.c3))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND(DATE(rt0.c2, rt0.c3, x'', rt0.c3, rt0.c3))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(DATE(rt0.c2, rt0.c3, x'', rt0.c3, rt0.c3))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND(DATE(rt0.c2, rt0.c3, x'', rt0.c3, rt0.c3))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(DATE(rt0.c2, rt0.c3, x'', rt0.c3, rt0.c3))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 COLLATE NOCASE)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))OR(((rt0.c0)IS NOT(rt0.c1)))) WHERE (1850916615);
SELECT SUM(count) FROM (SELECT ((1850916615) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 COLLATE NOCASE)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))OR(((rt0.c0)IS NOT(rt0.c1)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 COLLATE NOCASE)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))OR(((rt0.c0)IS NOT(rt0.c1)))) WHERE (1850916615);
SELECT SUM(count) FROM (SELECT ((1850916615) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 COLLATE NOCASE)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))OR(((rt0.c0)IS NOT(rt0.c1)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 COLLATE NOCASE)AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))OR(((rt0.c0)IS NOT(rt0.c1)))) WHERE (1850916615);
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON rt0.c3 FULL OUTER JOIN rt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (((((v0.c0) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t0 ON rt0.c3 FULL OUTER JOIN rt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON rt0.c3 FULL OUTER JOIN rt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (((((v0.c0) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t0 ON rt0.c3 FULL OUTER JOIN rt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) ORDER BY (((rt0.c3 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c3 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) IS FALSE))) DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) ORDER BY (((rt0.c3 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c3 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) IS FALSE))) DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) ORDER BY (((rt0.c3 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1) IS FALSE))) DESC;
SELECT * FROM v0, t0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((t0.c0)==(t0.c0)), ((v0.c0)GLOB(v0.c0)), ((t0.c0) IS FALSE))) AND (((t0.c0 IN ()), (+ (v0.c0)), (NOT (t0.c0)))))) ORDER BY (((x'' IN ()))<<(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((t0.c0)==(t0.c0)), ((v0.c0)GLOB(v0.c0)), ((t0.c0) IS FALSE))) AND (((t0.c0 IN ()), (+ (v0.c0)), (NOT (t0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((x'' IN ()))<<(NULL))  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((t0.c0)==(t0.c0)), ((v0.c0)GLOB(v0.c0)), ((t0.c0) IS FALSE))) AND (((t0.c0 IN ()), (+ (v0.c0)), (NOT (t0.c0)))))) ORDER BY (((x'' IN ()))<<(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((t0.c0)==(t0.c0)), ((v0.c0)GLOB(v0.c0)), ((t0.c0) IS FALSE))) AND (((t0.c0 IN ()), (+ (v0.c0)), (NOT (t0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((x'' IN ()))<<(NULL))  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((((t0.c0)==(t0.c0)), ((v0.c0)GLOB(v0.c0)), ((t0.c0) IS FALSE))) AND (((t0.c0 IN ()), (+ (v0.c0)), (NOT (t0.c0)))))) ORDER BY (((x'' IN ()))<<(NULL))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((LIKELY(DISTINCT v0.c0))>>(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((v0.c0)!=(v0.c0))) BETWEEN (((v0.c0)==(v0.c0))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT v0.c0))>>(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)!=(v0.c0))) BETWEEN (((v0.c0)==(v0.c0))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((LIKELY(DISTINCT v0.c0))>>(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((v0.c0)!=(v0.c0))) BETWEEN (((v0.c0)==(v0.c0))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT v0.c0))>>(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)!=(v0.c0))) BETWEEN (((v0.c0)==(v0.c0))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((LIKELY(DISTINCT v0.c0))>>(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((v0.c0)!=(v0.c0))) BETWEEN (((v0.c0)==(v0.c0))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT * FROM v0, rt0, t0, vt0 WHERE (LIKELY(rt0.c3) COLLATE BINARY) ORDER BY ((((t0.c0)>(rt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, t0, vt0 ORDER BY ((((t0.c0)>(rt0.c0))) NOT NULL) ASC);
SELECT * FROM v0, rt0, t0, vt0 WHERE (LIKELY(rt0.c3) COLLATE BINARY) ORDER BY ((((t0.c0)>(rt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, t0, vt0 ORDER BY ((((t0.c0)>(rt0.c0))) NOT NULL) ASC);
SELECT * FROM v0, rt0, t0, vt0 WHERE (LIKELY(rt0.c3) COLLATE BINARY) ORDER BY ((((t0.c0)>(rt0.c0))) NOT NULL) ASC;
SELECT COUNT(*) FROM rt0, t0, v0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM WHERE (x'aaef');
SELECT SUM(count) FROM (SELECT ((x'aaef') IS TRUE)  as count FROM rt0, t0, v0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, t0, v0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM WHERE (x'aaef');
SELECT SUM(count) FROM (SELECT ((x'aaef') IS TRUE)  as count FROM rt0, t0, v0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, t0, v0 RIGHT OUTER JOIN vt0 ON CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM WHERE (x'aaef');
SELECT ALL COUNT(*) FROM rt0 WHERE ((UNLIKELY(rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(rt0.c2) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((UNLIKELY(rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(rt0.c2) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((UNLIKELY(rt0.c2) IN ()));
SELECT COUNT(*) FROM vt0, rt0, v0, t0 WHERE (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END)))AND(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END)))AND(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT COUNT(*) FROM vt0, rt0, v0, t0 WHERE (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END)))AND(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END)))AND(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT COUNT(*) FROM vt0, rt0, v0, t0 WHERE (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END)))AND(CAST(v0.c0 AS TEXT))));
SELECT * FROM rt0, t0, v0 WHERE ((((('1986821990') NOT BETWEEN (t0.c0) AND (rt0.c1)))IS NOT(rt0.c1))) ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('1986821990') NOT BETWEEN (t0.c0) AND (rt0.c1)))IS NOT(rt0.c1))) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)  NULLS LAST);
SELECT * FROM rt0, t0, v0 WHERE ((((('1986821990') NOT BETWEEN (t0.c0) AND (rt0.c1)))IS NOT(rt0.c1))) ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('1986821990') NOT BETWEEN (t0.c0) AND (rt0.c1)))IS NOT(rt0.c1))) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)  NULLS LAST);
SELECT * FROM rt0, t0, v0 WHERE ((((('1986821990') NOT BETWEEN (t0.c0) AND (rt0.c1)))IS NOT(rt0.c1))) ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c1))) IN (rt0.c2 COLLATE RTRIM))) ORDER BY ((rt0.c2) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS TEXT)))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c1))) IN (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((rt0.c2) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS TEXT)))  NULLS LAST, rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c1))) IN (rt0.c2 COLLATE RTRIM))) ORDER BY ((rt0.c2) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS TEXT)))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c1))) IN (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((rt0.c2) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS TEXT)))  NULLS LAST, rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c1))) IN (rt0.c2 COLLATE RTRIM))) ORDER BY ((rt0.c2) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(rt0.c1 AS TEXT)))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((vt0.c0)AND(vt0.c1)))<=(((((((((NULL)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)))) WHERE ((((v0.c0 IN ()))*((('0.35636857410023914') BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))*((('0.35636857410023914') BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((vt0.c0)AND(vt0.c1)))<=(((((((((NULL)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((vt0.c0)AND(vt0.c1)))<=(((((((((NULL)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)))) WHERE ((((v0.c0 IN ()))*((('0.35636857410023914') BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))*((('0.35636857410023914') BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((vt0.c0)AND(vt0.c1)))<=(((((((((NULL)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((vt0.c0)AND(vt0.c1)))<=(((((((((NULL)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)))) WHERE ((((v0.c0 IN ()))*((('0.35636857410023914') BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((NULL)AND(rt0.c0)))OR(vt0.c1))) AND (rt0.c3 COLLATE BINARY))) ORDER BY (((rt0.c2))==((rt0.c1))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((NULL)AND(rt0.c0)))OR(vt0.c1))) AND (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2))==((rt0.c1))) COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((NULL)AND(rt0.c0)))OR(vt0.c1))) AND (rt0.c3 COLLATE BINARY))) ORDER BY (((rt0.c2))==((rt0.c1))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((NULL)AND(rt0.c0)))OR(vt0.c1))) AND (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2))==((rt0.c1))) COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((NULL)AND(rt0.c0)))OR(vt0.c1))) AND (rt0.c3 COLLATE BINARY))) ORDER BY (((rt0.c2))==((rt0.c1))) COLLATE RTRIM;
SELECT * FROM t0, rt0, v0 WHERE ((((((NULL))<>((rt0.c2)))) BETWEEN (((t0.c0)GLOB(rt0.c2))) AND (((((t0.c0)OR(rt0.c2)))AND(rt0.c0))))) ORDER BY CASE (rt0.c3 IN (rt0.c2))  WHEN CASE WHEN v0.c0 THEN rt0.c3 END THEN (((t0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) END;
SELECT SUM(count) FROM (SELECT (((((((NULL))!=((rt0.c2)))) BETWEEN (((t0.c0)GLOB(rt0.c2))) AND (((((t0.c0)OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY CASE (rt0.c3 IN (rt0.c2))  WHEN CASE WHEN v0.c0 THEN rt0.c3 END THEN (((t0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) END);
SELECT * FROM t0, rt0, v0 WHERE ((((((NULL))<>((rt0.c2)))) BETWEEN (((t0.c0)GLOB(rt0.c2))) AND (((((t0.c0)OR(rt0.c2)))AND(rt0.c0))))) ORDER BY CASE (rt0.c3 IN (rt0.c2))  WHEN CASE WHEN v0.c0 THEN rt0.c3 END THEN (((t0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) END;
SELECT SUM(count) FROM (SELECT (((((((NULL))!=((rt0.c2)))) BETWEEN (((t0.c0)GLOB(rt0.c2))) AND (((((t0.c0)OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM t0, rt0, v0 ORDER BY CASE (rt0.c3 IN (rt0.c2))  WHEN CASE WHEN v0.c0 THEN rt0.c3 END THEN (((t0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) END);
SELECT * FROM t0, rt0, v0 WHERE ((((((NULL))<>((rt0.c2)))) BETWEEN (((t0.c0)GLOB(rt0.c2))) AND (((((t0.c0)OR(rt0.c2)))AND(rt0.c0))))) ORDER BY CASE (rt0.c3 IN (rt0.c2))  WHEN CASE WHEN v0.c0 THEN rt0.c3 END THEN (((t0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) END;
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE (CASE WHEN (+ (t0.c0)) THEN (('-460992322')||(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c0)) THEN (('-460992322')||(rt0.c2)) END) IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE (CASE WHEN (+ (t0.c0)) THEN (('-460992322')||(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c0)) THEN (('-460992322')||(rt0.c2)) END) IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE (CASE WHEN (+ (t0.c0)) THEN (('-460992322')||(rt0.c2)) END);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOTNULL) WHERE (1605655728);
SELECT SUM(count) FROM (SELECT ((1605655728) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOTNULL));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOTNULL) WHERE (1605655728);
SELECT SUM(count) FROM (SELECT ((1605655728) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOTNULL));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY) NOTNULL) WHERE (1605655728);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)>=(0.968718716157309)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)>=(0.968718716157309))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)>=(0.968718716157309)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)>=(0.968718716157309))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)>=(0.968718716157309)));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(((t0.c0)IS NOT(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)IS NOT(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(((t0.c0)IS NOT(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)IS NOT(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(((t0.c0)IS NOT(t0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0 IN (vt0.c1)))*(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c1)))*(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0 IN (vt0.c1)))*(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c1)))*(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0 IN (vt0.c1)))*(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM rt0, t0, v0 WHERE ((~ (((rt0.c1)+(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)+(t0.c0))))) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL * FROM rt0, t0, v0 WHERE ((~ (((rt0.c1)+(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)+(t0.c0))))) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL * FROM rt0, t0, v0 WHERE ((~ (((rt0.c1)+(t0.c0)))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))||(((vt0.c0)GLOB(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))||(((vt0.c0)GLOB(vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))||(((vt0.c0)GLOB(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))||(((vt0.c0)GLOB(vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))||(((vt0.c0)GLOB(vt0.c1))))  NULLS FIRST;
SELECT * FROM v0, vt0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE ('');
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))IS(vt0.c1 COLLATE RTRIM)) WHERE (((1806773693)=((('-986493563') NOT NULL)))) ORDER BY (((NULL)) BETWEEN ((vt0.c1)) AND (((vt0.c1 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((1806773693)=((('-986493563') NOT NULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))IS(vt0.c1 COLLATE RTRIM)) ORDER BY (((NULL)) BETWEEN ((vt0.c1)) AND (((vt0.c1 IN (vt0.c0))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))IS(vt0.c1 COLLATE RTRIM)) WHERE (((1806773693)=((('-986493563') NOT NULL)))) ORDER BY (((NULL)) BETWEEN ((vt0.c1)) AND (((vt0.c1 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((1806773693)=((('-986493563') NOT NULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))IS(vt0.c1 COLLATE RTRIM)) ORDER BY (((NULL)) BETWEEN ((vt0.c1)) AND (((vt0.c1 IN (vt0.c0))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))IS(vt0.c1 COLLATE RTRIM)) WHERE (((1806773693)=((('-986493563') NOT NULL)))) ORDER BY (((NULL)) BETWEEN ((vt0.c1)) AND (((vt0.c1 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((vt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(UNLIKELY(rt0.c0))))OR((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(UNLIKELY(rt0.c0))))OR((- (v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((vt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(UNLIKELY(rt0.c0))))OR((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(UNLIKELY(rt0.c0))))OR((- (v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((vt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(UNLIKELY(rt0.c0))))OR((- (v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (NULLIF(((vt0.c0)*(v0.c0)), ((vt0.c1)=(vt0.c0)))) ORDER BY CAST(((vt0.c1) NOTNULL) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt0.c0)*(v0.c0)), ((vt0.c1)=(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c1) NOTNULL) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (NULLIF(((vt0.c0)*(v0.c0)), ((vt0.c1)=(vt0.c0)))) ORDER BY CAST(((vt0.c1) NOTNULL) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt0.c0)*(v0.c0)), ((vt0.c1)=(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c1) NOTNULL) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (NULLIF(((vt0.c0)*(v0.c0)), ((vt0.c1)=(vt0.c0)))) ORDER BY CAST(((vt0.c1) NOTNULL) AS BLOB) ASC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((+ (vt0.c1)) IN ()) CROSS JOIN v0 ON IFNULL(DISTINCT TYPEOF(rt0.c1), ((vt0.c1)&(rt0.c0))) WHERE (((vt0.c0) ISNULL)) ORDER BY (((('-2469514')OR(((rt0.c0)GLOB(vt0.c0)))))OR((((v0.c0, vt0.c0, '1')) BETWEEN ((vt0.c1, vt0.c0, rt0.c1)) AND ((v0.c0, rt0.c1, rt0.c3))))), ((((((('991480956', rt0.c3, rt0.c3)) BETWEEN ((v0.c0, '1321338867', rt0.c0)) AND ((vt0.c1, rt0.c1, rt0.c2))))AND(v0.c0 COLLATE NOCASE)))OR(((vt0.c1)%(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((+ (vt0.c1)) IN ()) CROSS JOIN v0 ON IFNULL(DISTINCT TYPEOF(rt0.c1), ((vt0.c1)&(rt0.c0))) ORDER BY (((('-2469514')OR(((rt0.c0)GLOB(vt0.c0)))))OR((((v0.c0, vt0.c0, '1')) BETWEEN ((vt0.c1, vt0.c0, rt0.c1)) AND ((v0.c0, rt0.c1, rt0.c3))))), ((((((('991480956', rt0.c3, rt0.c3)) BETWEEN ((v0.c0, '1321338867', rt0.c0)) AND ((vt0.c1, rt0.c1, rt0.c2))))AND(v0.c0 COLLATE NOCASE)))OR(((vt0.c1)%(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((+ (vt0.c1)) IN ()) CROSS JOIN v0 ON IFNULL(DISTINCT TYPEOF(rt0.c1), ((vt0.c1)&(rt0.c0))) WHERE (((vt0.c0) ISNULL)) ORDER BY (((('-2469514')OR(((rt0.c0)GLOB(vt0.c0)))))OR((((v0.c0, vt0.c0, '1')) BETWEEN ((vt0.c1, vt0.c0, rt0.c1)) AND ((v0.c0, rt0.c1, rt0.c3))))), ((((((('991480956', rt0.c3, rt0.c3)) BETWEEN ((v0.c0, '1321338867', rt0.c0)) AND ((vt0.c1, rt0.c1, rt0.c2))))AND(v0.c0 COLLATE NOCASE)))OR(((vt0.c1)%(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((+ (vt0.c1)) IN ()) CROSS JOIN v0 ON IFNULL(DISTINCT TYPEOF(rt0.c1), ((vt0.c1)&(rt0.c0))) ORDER BY (((('-2469514')OR(((rt0.c0)GLOB(vt0.c0)))))OR((((v0.c0, vt0.c0, '1')) BETWEEN ((vt0.c1, vt0.c0, rt0.c1)) AND ((v0.c0, rt0.c1, rt0.c3))))), ((((((('991480956', rt0.c3, rt0.c3)) BETWEEN ((v0.c0, '1321338867', rt0.c0)) AND ((vt0.c1, rt0.c1, rt0.c2))))AND(v0.c0 COLLATE NOCASE)))OR(((vt0.c1)%(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((+ (vt0.c1)) IN ()) CROSS JOIN v0 ON IFNULL(DISTINCT TYPEOF(rt0.c1), ((vt0.c1)&(rt0.c0))) WHERE (((vt0.c0) ISNULL)) ORDER BY (((('-2469514')OR(((rt0.c0)GLOB(vt0.c0)))))OR((((v0.c0, vt0.c0, '1')) BETWEEN ((vt0.c1, vt0.c0, rt0.c1)) AND ((v0.c0, rt0.c1, rt0.c3))))), ((((((('991480956', rt0.c3, rt0.c3)) BETWEEN ((v0.c0, '1321338867', rt0.c0)) AND ((vt0.c1, rt0.c1, rt0.c2))))AND(v0.c0 COLLATE NOCASE)))OR(((vt0.c1)%(rt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND (CAST(v0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY HEX(UPPER(rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY HEX(UPPER(rt0.c2)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY HEX(UPPER(rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY HEX(UPPER(rt0.c2)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY HEX(UPPER(rt0.c2)) ASC  NULLS FIRST;
SELECT * FROM t0, rt0, v0, vt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))AND(v0.c0)))OR(t0.c0)))AND(rt0.c2)))>=(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c1)))AND(v0.c0)))OR(t0.c0)))AND(rt0.c2)))>=(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, v0, vt0);
SELECT * FROM t0, rt0, v0, vt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))AND(v0.c0)))OR(t0.c0)))AND(rt0.c2)))>=(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c1)))AND(v0.c0)))OR(t0.c0)))AND(rt0.c2)))>=(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, v0, vt0);
SELECT * FROM t0, rt0, v0, vt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))AND(v0.c0)))OR(t0.c0)))AND(rt0.c2)))>=(((rt0.c3) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 INNER JOIN rt0 ON (((((t0.c0))>((vt0.c0)))) IS FALSE) WHERE (CAST(x'' AS BLOB)) ORDER BY QUOTE(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM vt0, v0, t0 INNER JOIN rt0 ON (((((t0.c0))>((vt0.c0)))) IS FALSE) ORDER BY QUOTE(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, t0 INNER JOIN rt0 ON (((((t0.c0))>((vt0.c0)))) IS FALSE) WHERE (CAST(x'' AS BLOB)) ORDER BY QUOTE(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM vt0, v0, t0 INNER JOIN rt0 ON (((((t0.c0))>((vt0.c0)))) IS FALSE) ORDER BY QUOTE(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, t0 INNER JOIN rt0 ON (((((t0.c0))>((vt0.c0)))) IS FALSE) WHERE (CAST(x'' AS BLOB)) ORDER BY QUOTE(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1))) ASC;
SELECT COUNT(*) FROM vt0, rt0, t0, v0 WHERE (json_patch(((((NULL)OR(0.12941981485357346)))OR(rt0.c1)), -2469514.0)) ORDER BY ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(NULL)))AND(((rt0.c1)!=(NULL)))) ASC  NULLS LAST, ((((rt0.c0) ISNULL)) BETWEEN (CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 END) AND (CAST(rt0.c0 AS TEXT)))  NULLS LAST, ((((vt0.c1)+(rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((json_patch(((((NULL)OR(0.12941981485357346)))OR(rt0.c1)), -2469514.0)) IS TRUE)  as count FROM vt0, rt0, t0, v0 ORDER BY ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(NULL)))AND(((rt0.c1)<>(NULL)))) ASC  NULLS LAST, ((((rt0.c0) ISNULL)) BETWEEN (CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 END) AND (CAST(rt0.c0 AS TEXT)))  NULLS LAST, ((((vt0.c1)+(rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM vt0, rt0, t0, v0 WHERE (json_patch(((((NULL)OR(0.12941981485357346)))OR(rt0.c1)), -2469514.0)) ORDER BY ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(NULL)))AND(((rt0.c1)!=(NULL)))) ASC  NULLS LAST, ((((rt0.c0) ISNULL)) BETWEEN (CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 END) AND (CAST(rt0.c0 AS TEXT)))  NULLS LAST, ((((vt0.c1)+(rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((json_patch(((((NULL)OR(0.12941981485357346)))OR(rt0.c1)), -2469514.0)) IS TRUE)  as count FROM vt0, rt0, t0, v0 ORDER BY ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(NULL)))AND(((rt0.c1)<>(NULL)))) ASC  NULLS LAST, ((((rt0.c0) ISNULL)) BETWEEN (CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 END) AND (CAST(rt0.c0 AS TEXT)))  NULLS LAST, ((((vt0.c1)+(rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM vt0, rt0, t0, v0 WHERE (json_patch(((((NULL)OR(0.12941981485357346)))OR(rt0.c1)), -2469514.0)) ORDER BY ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(NULL)))AND(((rt0.c1)!=(NULL)))) ASC  NULLS LAST, ((((rt0.c0) ISNULL)) BETWEEN (CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 END) AND (CAST(rt0.c0 AS TEXT)))  NULLS LAST, ((((vt0.c1)+(rt0.c2))) IS TRUE);
SELECT * FROM rt0 WHERE (COALESCE((rt0.c3 IN ()), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE((rt0.c3 IN ()), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC);
SELECT * FROM rt0 WHERE (COALESCE((rt0.c3 IN ()), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE((rt0.c3 IN ()), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC);
SELECT * FROM rt0 WHERE (COALESCE((rt0.c3 IN ()), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)) ORDER BY NULL ASC;
SELECT ALL * FROM v0, rt0, vt0, t0 WHERE (CAST((+ (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM v0, rt0, vt0, t0);
SELECT ALL * FROM v0, rt0, vt0, t0 WHERE (CAST((+ (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM v0, rt0, vt0, t0);
SELECT ALL * FROM v0, rt0, vt0, t0 WHERE (CAST((+ (vt0.c1)) AS TEXT));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)!=(x'4d2b'))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<>(x'4d2b'))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)!=(x'4d2b'))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<>(x'4d2b'))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)!=(x'4d2b'))) NOTNULL));
SELECT COUNT(*) FROM v0 WHERE ((((((~ (v0.c0)))OR((('o)')GLOB(v0.c0)))))AND(COALESCE(v0.c0, x'5f29')))) ORDER BY ((0.21669135691678854)|('\a46!EQ)B'));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c0)))OR((('o)')GLOB(v0.c0)))))AND(COALESCE(v0.c0, x'5f29')))) IS TRUE)  as count FROM v0 ORDER BY ((0.21669135691678854)|('\a46!EQ)B')));
SELECT COUNT(*) FROM v0 WHERE ((((((~ (v0.c0)))OR((('o)')GLOB(v0.c0)))))AND(COALESCE(v0.c0, x'5f29')))) ORDER BY ((0.21669135691678854)|('\a46!EQ)B'));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c0)))OR((('o)')GLOB(v0.c0)))))AND(COALESCE(v0.c0, x'5f29')))) IS TRUE)  as count FROM v0 ORDER BY ((0.21669135691678854)|('\a46!EQ)B')));
SELECT COUNT(*) FROM v0 WHERE ((((((~ (v0.c0)))OR((('o)')GLOB(v0.c0)))))AND(COALESCE(v0.c0, x'5f29')))) ORDER BY ((0.21669135691678854)|('\a46!EQ)B'));
SELECT * FROM rt0, vt0, t0, v0 WHERE (CASE WHEN rt0.c1 THEN (vt0.c0 IN ()) WHEN (~ (v0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c3)OR(x'c039')))OR(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) ELSE (v0.c0 IN (NULL)) END) ORDER BY ((((rt0.c2) NOT NULL)) NOTNULL), (CASE WHEN vt0.c0 THEN x'' END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN (vt0.c0 IN ()) WHEN (~ (v0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c3)OR(x'c039')))OR(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) ELSE (v0.c0 IN (NULL)) END) IS TRUE)  as count FROM rt0, vt0, t0, v0 ORDER BY ((((rt0.c2) NOT NULL)) NOTNULL), (CASE WHEN vt0.c0 THEN x'' END IN ()) ASC);
SELECT * FROM rt0, vt0, t0, v0 WHERE (CASE WHEN rt0.c1 THEN (vt0.c0 IN ()) WHEN (~ (v0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c3)OR(x'c039')))OR(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) ELSE (v0.c0 IN (NULL)) END) ORDER BY ((((rt0.c2) NOT NULL)) NOTNULL), (CASE WHEN vt0.c0 THEN x'' END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN (vt0.c0 IN ()) WHEN (~ (v0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c3)OR(x'c039')))OR(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) ELSE (v0.c0 IN (NULL)) END) IS TRUE)  as count FROM rt0, vt0, t0, v0 ORDER BY ((((rt0.c2) NOT NULL)) NOTNULL), (CASE WHEN vt0.c0 THEN x'' END IN ()) ASC);
SELECT * FROM rt0, vt0, t0, v0 WHERE (CASE WHEN rt0.c1 THEN (vt0.c0 IN ()) WHEN (~ (v0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((((rt0.c3)OR(x'c039')))OR(rt0.c1)) THEN CAST(rt0.c0 AS TEXT) ELSE (v0.c0 IN (NULL)) END) ORDER BY ((((rt0.c2) NOT NULL)) NOTNULL), (CASE WHEN vt0.c0 THEN x'' END IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c0)IS NOT(vt0.c0))))<(((- (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)IS NOT(vt0.c0))))<(((- (vt0.c1)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c0)IS NOT(vt0.c0))))<(((- (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)IS NOT(vt0.c0))))<(((- (vt0.c1)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c0)IS NOT(vt0.c0))))<(((- (vt0.c1))))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))<=((((rt0.c0)AND(0.3591819576174027))))) CROSS JOIN vt0 ON (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) ORDER BY ((vt0.c1)GLOB(2101717025)), (~ (((rt0.c0) NOT BETWEEN (vt0.c1) AND (0xffffffffe5775b46)))), (((vt0.c0 COLLATE BINARY))>=((CAST(rt0.c2 AS TEXT))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))<=((((rt0.c0)AND(0.3591819576174027))))) CROSS JOIN vt0 ON (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) ORDER BY ((vt0.c1)GLOB(2101717025)), (~ (((rt0.c0) NOT BETWEEN (vt0.c1) AND (0Xffffffffe5775b46)))), (((vt0.c0 COLLATE BINARY))>=((CAST(rt0.c2 AS TEXT))))  NULLS LAST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))<=((((rt0.c0)AND(0.3591819576174027))))) CROSS JOIN vt0 ON (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) ORDER BY ((vt0.c1)GLOB(2101717025)), (~ (((rt0.c0) NOT BETWEEN (vt0.c1) AND (0xffffffffe5775b46)))), (((vt0.c0 COLLATE BINARY))>=((CAST(rt0.c2 AS TEXT))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))<=((((rt0.c0)AND(0.3591819576174027))))) CROSS JOIN vt0 ON (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) ORDER BY ((vt0.c1)GLOB(2101717025)), (~ (((rt0.c0) NOT BETWEEN (vt0.c1) AND (0Xffffffffe5775b46)))), (((vt0.c0 COLLATE BINARY))>=((CAST(rt0.c2 AS TEXT))))  NULLS LAST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END))<=((((rt0.c0)AND(0.3591819576174027))))) CROSS JOIN vt0 ON (((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) ORDER BY ((vt0.c1)GLOB(2101717025)), (~ (((rt0.c0) NOT BETWEEN (vt0.c1) AND (0xffffffffe5775b46)))), (((vt0.c0 COLLATE BINARY))>=((CAST(rt0.c2 AS TEXT))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (rt0.c1) ORDER BY CASE WHEN ((rt0.c1) NOTNULL) THEN CAST(rt0.c1 AS INTEGER) ELSE rt0.c0 END  NULLS LAST, ((((((rt0.c0))=((v0.c0)))))<>(((- (t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY CASE WHEN ((rt0.c1) NOTNULL) THEN CAST(rt0.c1 AS INTEGER) ELSE rt0.c0 END  NULLS LAST, ((((((rt0.c0))==((v0.c0)))))<>(((- (t0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (rt0.c1) ORDER BY CASE WHEN ((rt0.c1) NOTNULL) THEN CAST(rt0.c1 AS INTEGER) ELSE rt0.c0 END  NULLS LAST, ((((((rt0.c0))=((v0.c0)))))<>(((- (t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY CASE WHEN ((rt0.c1) NOTNULL) THEN CAST(rt0.c1 AS INTEGER) ELSE rt0.c0 END  NULLS LAST, ((((((rt0.c0))==((v0.c0)))))<>(((- (t0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE (rt0.c1) ORDER BY CASE WHEN ((rt0.c1) NOTNULL) THEN CAST(rt0.c1 AS INTEGER) ELSE rt0.c0 END  NULLS LAST, ((((((rt0.c0))=((v0.c0)))))<>(((- (t0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((rt0.c1) IS TRUE)  WHEN json_array(rt0.c1, rt0.c2, rt0.c2, vt0.c0) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c0 COLLATE RTRIM WHEN (+ (rt0.c0)) THEN (rt0.c0 IN ()) WHEN (rt0.c1 IN (rt0.c1)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)) WHEN (((vt0.c0))>((0Xfda7744))) THEN NULL COLLATE BINARY ELSE (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) IS TRUE)  WHEN json_array(rt0.c1, rt0.c2, rt0.c2, vt0.c0) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c0 COLLATE RTRIM WHEN (+ (rt0.c0)) THEN (rt0.c0 IN ()) WHEN (rt0.c1 IN (rt0.c1)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)) WHEN (((vt0.c0))>((0xfda7744))) THEN NULL COLLATE BINARY ELSE (+ (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((rt0.c1) IS TRUE)  WHEN json_array(rt0.c1, rt0.c2, rt0.c2, vt0.c0) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c0 COLLATE RTRIM WHEN (+ (rt0.c0)) THEN (rt0.c0 IN ()) WHEN (rt0.c1 IN (rt0.c1)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)) WHEN (((vt0.c0))>((0Xfda7744))) THEN NULL COLLATE BINARY ELSE (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) IS TRUE)  WHEN json_array(rt0.c1, rt0.c2, rt0.c2, vt0.c0) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c0 COLLATE RTRIM WHEN (+ (rt0.c0)) THEN (rt0.c0 IN ()) WHEN (rt0.c1 IN (rt0.c1)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)) WHEN (((vt0.c0))>((0xfda7744))) THEN NULL COLLATE BINARY ELSE (+ (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((rt0.c1) IS TRUE)  WHEN json_array(rt0.c1, rt0.c2, rt0.c2, vt0.c0) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c0 COLLATE RTRIM WHEN (+ (rt0.c0)) THEN (rt0.c0 IN ()) WHEN (rt0.c1 IN (rt0.c1)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)) WHEN (((vt0.c0))>((0Xfda7744))) THEN NULL COLLATE BINARY ELSE (+ (rt0.c1)) END);
SELECT ALL * FROM t0 WHERE ((4.2133599E7 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((4.2133599E7 IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((4.2133599E7 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((4.2133599E7 IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((4.2133599E7 IN ()));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 CROSS JOIN t0 ON ((((t0.c0)LIKE(x''))) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(v0.c0))) AND (((t0.c0)<<(rt0.c3)))) WHERE (((((json_quote(v0.c0))OR(((rt0.c1) ISNULL))))AND((NOT (v0.c0))))) ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))OR(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN t0.c0 END)))OR(((((((((rt0.c3)OR(v0.c0)))OR(vt0.c1)))OR(rt0.c3)))AND(v0.c0)))))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(rt0.c3)) ASC;
SELECT SUM(count) FROM (SELECT ((((((json_quote(v0.c0))OR(((rt0.c1) ISNULL))))AND((NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 CROSS JOIN t0 ON ((((t0.c0)LIKE(x''))) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(v0.c0))) AND (((t0.c0)<<(rt0.c3)))) ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))OR(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN t0.c0 END)))OR(((((((((rt0.c3)OR(v0.c0)))OR(vt0.c1)))OR(rt0.c3)))AND(v0.c0)))))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(rt0.c3)) ASC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 CROSS JOIN t0 ON ((((t0.c0)LIKE(x''))) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(v0.c0))) AND (((t0.c0)<<(rt0.c3)))) WHERE (((((json_quote(v0.c0))OR(((rt0.c1) ISNULL))))AND((NOT (v0.c0))))) ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))OR(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN t0.c0 END)))OR(((((((((rt0.c3)OR(v0.c0)))OR(vt0.c1)))OR(rt0.c3)))AND(v0.c0)))))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(rt0.c3)) ASC;
SELECT SUM(count) FROM (SELECT ((((((json_quote(v0.c0))OR(((rt0.c1) ISNULL))))AND((NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 CROSS JOIN t0 ON ((((t0.c0)LIKE(x''))) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(v0.c0))) AND (((t0.c0)<<(rt0.c3)))) ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))OR(CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN t0.c0 END)))OR(((((((((rt0.c3)OR(v0.c0)))OR(vt0.c1)))OR(rt0.c3)))AND(v0.c0)))))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(rt0.c3)) ASC);
SELECT * FROM vt0, v0, t0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN v0.c0 THEN (+ (t0.c0)) WHEN (NOT (0.39358454650189156)) THEN ((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c1 WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN NULL END)||(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END))  NULLS FIRST, x'' DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN v0.c0 THEN (+ (t0.c0)) WHEN (NOT (0.39358454650189156)) THEN ((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((CASE WHEN v0.c0 THEN vt0.c1 WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN NULL END)||(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END))  NULLS FIRST, x'' DESC);
SELECT * FROM vt0, v0, t0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN v0.c0 THEN (+ (t0.c0)) WHEN (NOT (0.39358454650189156)) THEN ((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c1 WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN NULL END)||(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END))  NULLS FIRST, x'' DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN v0.c0 THEN (+ (t0.c0)) WHEN (NOT (0.39358454650189156)) THEN ((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((CASE WHEN v0.c0 THEN vt0.c1 WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN NULL END)||(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END))  NULLS FIRST, x'' DESC);
SELECT * FROM vt0, v0, t0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN v0.c0 THEN (+ (t0.c0)) WHEN (NOT (0.39358454650189156)) THEN ((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c1)) ELSE ((vt0.c0) NOT NULL) END) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c1 WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN NULL END)||(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END))  NULLS FIRST, x'' DESC;
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((rt0.c0 IN ()))IS NOT('%져Lt'))) ORDER BY (- (CAST(rt0.c0 AS BLOB))), TIME('', vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(t0.c0)))OR(t0.c0))) ASC, (- ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))IS NOT('%져Lt'))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (- (CAST(rt0.c0 AS BLOB))), TIME('', vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(t0.c0)))OR(t0.c0))) ASC, (- ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((rt0.c0 IN ()))IS NOT('%져Lt'))) ORDER BY (- (CAST(rt0.c0 AS BLOB))), TIME('', vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(t0.c0)))OR(t0.c0))) ASC, (- ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))IS NOT('%져Lt'))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (- (CAST(rt0.c0 AS BLOB))), TIME('', vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(t0.c0)))OR(t0.c0))) ASC, (- ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((rt0.c0 IN ()))IS NOT('%져Lt'))) ORDER BY (- (CAST(rt0.c0 AS BLOB))), TIME('', vt0.c0 COLLATE BINARY, ((((vt0.c0)OR(t0.c0)))OR(t0.c0))) ASC, (- ((~ (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM t0, vt0, rt0 INNER JOIN v0 ON (- (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))) WHERE ((- (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0 INNER JOIN v0 ON (- (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM t0, vt0, rt0 INNER JOIN v0 ON (- (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))) WHERE ((- (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, rt0 INNER JOIN v0 ON (- (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM t0, vt0, rt0 INNER JOIN v0 ON (- (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))) WHERE ((- (v0.c0)) COLLATE BINARY);
SELECT ALL * FROM v0, vt0, t0, rt0 WHERE ((+ (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0))) IS TRUE)  as count FROM v0, vt0, t0, rt0);
SELECT ALL * FROM v0, vt0, t0, rt0 WHERE ((+ (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0))) IS TRUE)  as count FROM v0, vt0, t0, rt0);
SELECT ALL * FROM v0, vt0, t0, rt0 WHERE ((+ (t0.c0)));
SELECT ALL * FROM v0, vt0, rt0, t0 WHERE (((t0.c0) ISNULL)) ORDER BY ((v0.c0) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) ISNULL)) IS TRUE)  as count FROM v0, vt0, rt0, t0 ORDER BY ((v0.c0) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0, t0 WHERE (((t0.c0) ISNULL)) ORDER BY ((v0.c0) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) ISNULL)) IS TRUE)  as count FROM v0, vt0, rt0, t0 ORDER BY ((v0.c0) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0, t0 WHERE (((t0.c0) ISNULL)) ORDER BY ((v0.c0) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0 LEFT OUTER JOIN rt0 ON CASE WHEN UPPER(rt0.c3) THEN (('-1419335662')||(vt0.c0)) END INNER JOIN vt0 ON (rt0.c2 COLLATE NOCASE IN ((((rt0.c0))<((rt0.c3))))) WHERE ((~ (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, t0 NOT INDEXED LEFT OUTER JOIN rt0 ON CASE WHEN UPPER(rt0.c3) THEN (('-1419335662')||(vt0.c0)) END INNER JOIN vt0 ON (rt0.c2 COLLATE NOCASE IN ((((rt0.c0))<((rt0.c3))))));
SELECT COUNT(*) FROM v0, t0 LEFT OUTER JOIN rt0 ON CASE WHEN UPPER(rt0.c3) THEN (('-1419335662')||(vt0.c0)) END INNER JOIN vt0 ON (rt0.c2 COLLATE NOCASE IN ((((rt0.c0))<((rt0.c3))))) WHERE ((~ (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, t0 NOT INDEXED LEFT OUTER JOIN rt0 ON CASE WHEN UPPER(rt0.c3) THEN (('-1419335662')||(vt0.c0)) END INNER JOIN vt0 ON (rt0.c2 COLLATE NOCASE IN ((((rt0.c0))<((rt0.c3))))));
SELECT * FROM t0, vt0, rt0, v0 WHERE (CAST((vt0.c0 IN (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt0, v0);
SELECT * FROM t0, vt0, rt0, v0 WHERE (CAST((vt0.c0 IN (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt0, v0);
SELECT * FROM t0, vt0, rt0, v0 WHERE (CAST((vt0.c0 IN (vt0.c1)) AS NUMERIC));
SELECT * FROM t0, vt0, v0, rt0 WHERE ((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.4778583157714146))), (((vt0.c0))>=((rt0.c2))))) AND (((NULL IN ()), (+ (NULL)), ((vt0.c1)OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.4778583157714146))), (((vt0.c0))>=((rt0.c2))))) AND (((NULL IN ()), (+ (NULL)), ((vt0.c1)OR(rt0.c1)))))) IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT * FROM t0, vt0, v0, rt0 WHERE ((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.4778583157714146))), (((vt0.c0))>=((rt0.c2))))) AND (((NULL IN ()), (+ (NULL)), ((vt0.c1)OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.4778583157714146))), (((vt0.c0))>=((rt0.c2))))) AND (((NULL IN ()), (+ (NULL)), ((vt0.c1)OR(rt0.c1)))))) IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT * FROM t0, vt0, v0, rt0 WHERE ((((v0.c0, v0.c0, t0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.4778583157714146))), (((vt0.c0))>=((rt0.c2))))) AND (((NULL IN ()), (+ (NULL)), ((vt0.c1)OR(rt0.c1))))));
SELECT ALL COUNT(*) FROM v0, t0 INNER JOIN rt0 ON ((((CAST(rt0.c0 AS TEXT))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))OR(((vt0.c0)<<(rt0.c2)))) INNER JOIN vt0 ON (((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) IN ()) WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY ((CAST(rt0.c2 AS TEXT)) NOT NULL) ASC  NULLS FIRST, ((((((((rt0.c1)AND(v0.c0)))OR(rt0.c0)))AND((NOT (rt0.c1)))))OR(CAST(x'' AS NUMERIC))) ASC, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0, t0 INNER JOIN rt0 ON ((((CAST(rt0.c0 AS TEXT))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))OR(((vt0.c0)<<(rt0.c2)))) INNER JOIN vt0 ON (((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) IN ()) ORDER BY ((CAST(rt0.c2 AS TEXT)) NOT NULL) ASC  NULLS FIRST, ((((((((rt0.c1)AND(v0.c0)))OR(rt0.c0)))AND((NOT (rt0.c1)))))OR(CAST(x'' AS NUMERIC))) ASC, rt0.c2 ASC);
SELECT ALL COUNT(*) FROM v0, t0 INNER JOIN rt0 ON ((((CAST(rt0.c0 AS TEXT))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))OR(((vt0.c0)<<(rt0.c2)))) INNER JOIN vt0 ON (((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) IN ()) WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY ((CAST(rt0.c2 AS TEXT)) NOT NULL) ASC  NULLS FIRST, ((((((((rt0.c1)AND(v0.c0)))OR(rt0.c0)))AND((NOT (rt0.c1)))))OR(CAST(x'' AS NUMERIC))) ASC, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0, t0 INNER JOIN rt0 ON ((((CAST(rt0.c0 AS TEXT))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))OR(((vt0.c0)<<(rt0.c2)))) INNER JOIN vt0 ON (((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) IN ()) ORDER BY ((CAST(rt0.c2 AS TEXT)) NOT NULL) ASC  NULLS FIRST, ((((((((rt0.c1)AND(v0.c0)))OR(rt0.c0)))AND((NOT (rt0.c1)))))OR(CAST(x'' AS NUMERIC))) ASC, rt0.c2 ASC);
SELECT ALL COUNT(*) FROM v0, t0 INNER JOIN rt0 ON ((((CAST(rt0.c0 AS TEXT))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))OR(((vt0.c0)<<(rt0.c2)))) INNER JOIN vt0 ON (((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) IN ()) WHERE (CAST((rt0.c0 IN ()) AS NUMERIC)) ORDER BY ((CAST(rt0.c2 AS TEXT)) NOT NULL) ASC  NULLS FIRST, ((((((((rt0.c1)AND(v0.c0)))OR(rt0.c0)))AND((NOT (rt0.c1)))))OR(CAST(x'' AS NUMERIC))) ASC, rt0.c2 ASC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE)IS NOT(rt0.c1)) LEFT OUTER JOIN v0 ON t0.c0 WHERE (CASE CASE WHEN rt0.c1 THEN t0.c0 END  WHEN CAST(rt0.c1 AS TEXT) THEN COALESCE(v0.c0, rt0.c1) WHEN ((rt0.c0) IS TRUE) THEN 0.6057813614821812 WHEN ((rt0.c1) NOTNULL) THEN 2.101717025E9 ELSE CAST(t0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c1 THEN t0.c0 END  WHEN CAST(rt0.c1 AS TEXT) THEN COALESCE(v0.c0, rt0.c1) WHEN ((rt0.c0) IS TRUE) THEN 0.6057813614821812 WHEN ((rt0.c1) NOTNULL) THEN 2.101717025E9 ELSE CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE)IS NOT(rt0.c1)) LEFT OUTER JOIN v0 ON t0.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE)IS NOT(rt0.c1)) LEFT OUTER JOIN v0 ON t0.c0 WHERE (CASE CASE WHEN rt0.c1 THEN t0.c0 END  WHEN CAST(rt0.c1 AS TEXT) THEN COALESCE(v0.c0, rt0.c1) WHEN ((rt0.c0) IS TRUE) THEN 0.6057813614821812 WHEN ((rt0.c1) NOTNULL) THEN 2.101717025E9 ELSE CAST(t0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c1 THEN t0.c0 END  WHEN CAST(rt0.c1 AS TEXT) THEN COALESCE(v0.c0, rt0.c1) WHEN ((rt0.c0) IS TRUE) THEN 0.6057813614821812 WHEN ((rt0.c1) NOTNULL) THEN 2.101717025E9 ELSE CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE)IS NOT(rt0.c1)) LEFT OUTER JOIN v0 ON t0.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE)IS NOT(rt0.c1)) LEFT OUTER JOIN v0 ON t0.c0 WHERE (CASE CASE WHEN rt0.c1 THEN t0.c0 END  WHEN CAST(rt0.c1 AS TEXT) THEN COALESCE(v0.c0, rt0.c1) WHEN ((rt0.c0) IS TRUE) THEN 0.6057813614821812 WHEN ((rt0.c1) NOTNULL) THEN 2.101717025E9 ELSE CAST(t0.c0 AS INTEGER) END);
SELECT * FROM v0 CROSS JOIN t0 ON NULL WHERE (v0.c0) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN 0.3758768605179301 END AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON NULL ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN 0.3758768605179301 END AS TEXT) ASC  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN t0 ON NULL WHERE (v0.c0) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN 0.3758768605179301 END AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON NULL ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN 0.3758768605179301 END AS TEXT) ASC  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN t0 ON NULL WHERE (v0.c0) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN 0.3758768605179301 END AS TEXT) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOTNULL))||(rt0.c1))) ORDER BY CASE 0.2580607919095764  WHEN (NOT (v0.c0)) THEN (((rt0.c1, rt0.c2, v0.c0))!=((rt0.c0, rt0.c0, '{^蠵9\rUP'))) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c3)) THEN rt0.c1 COLLATE NOCASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(v0.c0)))AND(rt0.c3)))AND(rt0.c2)) ELSE ((rt0.c2)-(rt0.c2)) END, TRIM(rt0.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))||(rt0.c1))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE 0.2580607919095764  WHEN (NOT (v0.c0)) THEN (((rt0.c1, rt0.c2, v0.c0))!=((rt0.c0, rt0.c0, '{^蠵9\rUP'))) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c3)) THEN rt0.c1 COLLATE NOCASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(v0.c0)))AND(rt0.c3)))AND(rt0.c2)) ELSE ((rt0.c2)-(rt0.c2)) END, TRIM(rt0.c0) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOTNULL))||(rt0.c1))) ORDER BY CASE 0.2580607919095764  WHEN (NOT (v0.c0)) THEN (((rt0.c1, rt0.c2, v0.c0))!=((rt0.c0, rt0.c0, '{^蠵9\rUP'))) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c3)) THEN rt0.c1 COLLATE NOCASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(v0.c0)))AND(rt0.c3)))AND(rt0.c2)) ELSE ((rt0.c2)-(rt0.c2)) END, TRIM(rt0.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))||(rt0.c1))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE 0.2580607919095764  WHEN (NOT (v0.c0)) THEN (((rt0.c1, rt0.c2, v0.c0))!=((rt0.c0, rt0.c0, '{^蠵9\rUP'))) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c3)) THEN rt0.c1 COLLATE NOCASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(v0.c0)))AND(rt0.c3)))AND(rt0.c2)) ELSE ((rt0.c2)-(rt0.c2)) END, TRIM(rt0.c0) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOTNULL))||(rt0.c1))) ORDER BY CASE 0.2580607919095764  WHEN (NOT (v0.c0)) THEN (((rt0.c1, rt0.c2, v0.c0))!=((rt0.c0, rt0.c0, '{^蠵9\rUP'))) WHEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c3)) THEN rt0.c1 COLLATE NOCASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c2)AND(rt0.c1)))OR(v0.c0)))AND(rt0.c3)))AND(rt0.c2)) ELSE ((rt0.c2)-(rt0.c2)) END, TRIM(rt0.c0) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM t0, v0, vt0, rt0 WHERE (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3)))OR(0x3f97231b)))AND(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3)))OR(0X3f97231b)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0, rt0 WHERE (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3)))OR(0x3f97231b)))AND(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3)))OR(0X3f97231b)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0, rt0 WHERE (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3)))OR(0x3f97231b)))AND(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS REAL));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)))AND((((t0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)))AND((((t0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY x'' ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)))AND((((t0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)))AND((((t0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY x'' ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)))AND((((t0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY x'' ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'' AS BLOB)) ORDER BY CAST(rt0.c3 AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c3 AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'' AS BLOB)) ORDER BY CAST(rt0.c3 AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c3 AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'' AS BLOB)) ORDER BY CAST(rt0.c3 AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, vt0, rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c2 ELSE t0.c0 END AS REAL)) ORDER BY ((rt0.c0 COLLATE RTRIM)%(((t0.c0)||(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c3 THEN rt0.c2 ELSE t0.c0 END AS REAL)) IS TRUE)  as count FROM t0, v0, vt0, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)%(((t0.c0)||(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0, rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c2 ELSE t0.c0 END AS REAL)) ORDER BY ((rt0.c0 COLLATE RTRIM)%(((t0.c0)||(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c3 THEN rt0.c2 ELSE t0.c0 END AS REAL)) IS TRUE)  as count FROM t0, v0, vt0, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)%(((t0.c0)||(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0, rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c2 ELSE t0.c0 END AS REAL)) ORDER BY ((rt0.c0 COLLATE RTRIM)%(((t0.c0)||(rt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt0 ON 0.28003997544908943 LEFT OUTER JOIN t0 ON CASE vt0.c1 COLLATE RTRIM  WHEN LIKELIHOOD(rt0.c0, 0.4904428582296215) THEN ((vt0.c1)!=(t0.c0)) END WHERE (CASE WHEN json_type(rt0.c3) THEN t0.c0 COLLATE BINARY END) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_type(rt0.c3) THEN t0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt0 ON 0.28003997544908943 LEFT OUTER JOIN t0 ON CASE vt0.c1 COLLATE RTRIM  WHEN LIKELIHOOD(rt0.c0, 0.4904428582296215) THEN ((vt0.c1)<>(t0.c0)) END ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt0 ON 0.28003997544908943 LEFT OUTER JOIN t0 ON CASE vt0.c1 COLLATE RTRIM  WHEN LIKELIHOOD(rt0.c0, 0.4904428582296215) THEN ((vt0.c1)!=(t0.c0)) END WHERE (CASE WHEN json_type(rt0.c3) THEN t0.c0 COLLATE BINARY END) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_type(rt0.c3) THEN t0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON x'' RIGHT OUTER JOIN rt0 ON 0.28003997544908943 LEFT OUTER JOIN t0 ON CASE vt0.c1 COLLATE RTRIM  WHEN LIKELIHOOD(rt0.c0, 0.4904428582296215) THEN ((vt0.c1)<>(t0.c0)) END ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))>=((((v0.c0)LIKE(vt0.c1))))) WHERE ((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)) IN ())) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))>=((((v0.c0)LIKE(vt0.c1))))) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))>=((((v0.c0)LIKE(vt0.c1))))) WHERE ((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)) IN ())) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))>=((((v0.c0)LIKE(vt0.c1))))) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))>=((((v0.c0)LIKE(vt0.c1))))) WHERE ((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)) IN ())) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, v0, rt0 WHERE ((+ (CAST(rt0.c2 AS REAL)))) ORDER BY ((((((((((vt0.c0)AND(v0.c0)))OR(rt0.c0)))AND(x'')))OR(v0.c0)))IS NOT(rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, t0, v0, rt0 ORDER BY ((((((((((vt0.c0)AND(v0.c0)))OR(rt0.c0)))AND(x'')))OR(v0.c0)))IS NOT(rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0, rt0 WHERE ((+ (CAST(rt0.c2 AS REAL)))) ORDER BY ((((((((((vt0.c0)AND(v0.c0)))OR(rt0.c0)))AND(x'')))OR(v0.c0)))IS NOT(rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, t0, v0, rt0 ORDER BY ((((((((((vt0.c0)AND(v0.c0)))OR(rt0.c0)))AND(x'')))OR(v0.c0)))IS NOT(rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0, rt0 WHERE ((+ (CAST(rt0.c2 AS REAL)))) ORDER BY ((((((((((vt0.c0)AND(v0.c0)))OR(rt0.c0)))AND(x'')))OR(v0.c0)))IS NOT(rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((((((((((t0.c0) ISNULL))OR(json_valid(t0.c0))))AND(CAST(vt0.c1 AS NUMERIC))))OR((~ (vt0.c0)))))OR(((((NULL)OR(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0) ISNULL))OR(json_valid(t0.c0))))AND(CAST(vt0.c1 AS NUMERIC))))OR((~ (vt0.c0)))))OR(((((NULL)OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((t0.c0) ISNULL))OR(json_valid(t0.c0))))AND(CAST(vt0.c1 AS NUMERIC))))OR((~ (vt0.c0)))))OR(((((NULL)OR(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0) ISNULL))OR(json_valid(t0.c0))))AND(CAST(vt0.c1 AS NUMERIC))))OR((~ (vt0.c0)))))OR(((((NULL)OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((t0.c0) ISNULL))OR(json_valid(t0.c0))))AND(CAST(vt0.c1 AS NUMERIC))))OR((~ (vt0.c0)))))OR(((((NULL)OR(vt0.c1)))AND(vt0.c1)))));
SELECT * FROM v0, rt0, t0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS FALSE)) ORDER BY CAST('XWJ8黃L' AS REAL) ASC  NULLS LAST, 0.967029153552846  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY CAST('XWJ8黃L' AS REAL) ASC  NULLS LAST, 0.967029153552846  NULLS FIRST);
SELECT * FROM v0, rt0, t0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS FALSE)) ORDER BY CAST('XWJ8黃L' AS REAL) ASC  NULLS LAST, 0.967029153552846  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY CAST('XWJ8黃L' AS REAL) ASC  NULLS LAST, 0.967029153552846  NULLS FIRST);
SELECT * FROM v0, rt0, t0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS FALSE)) ORDER BY CAST('XWJ8黃L' AS REAL) ASC  NULLS LAST, 0.967029153552846  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((((((((((rt0.c0)AND(0.5475503077417087)))AND(rt0.c0)))AND(rt0.c2)))OR(t0.c0)))OR(0Xfffffffffa3e95fe)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((((((rt0.c0)AND(0.5475503077417087)))AND(rt0.c0)))AND(rt0.c2)))OR(t0.c0)))OR(0xfffffffffa3e95fe)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((((((((((rt0.c0)AND(0.5475503077417087)))AND(rt0.c0)))AND(rt0.c2)))OR(t0.c0)))OR(0Xfffffffffa3e95fe)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((((((rt0.c0)AND(0.5475503077417087)))AND(rt0.c0)))AND(rt0.c2)))OR(t0.c0)))OR(0xfffffffffa3e95fe)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((((((((((rt0.c0)AND(0.5475503077417087)))AND(rt0.c0)))AND(rt0.c2)))OR(t0.c0)))OR(0Xfffffffffa3e95fe)))AND(rt0.c2)) IN ()));
SELECT * FROM v0, vt0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY IFNULL(vt0.c1 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY IFNULL(vt0.c1 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END) DESC);
SELECT * FROM v0, vt0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY IFNULL(vt0.c1 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY IFNULL(vt0.c1 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END) DESC);
SELECT * FROM v0, vt0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY IFNULL(vt0.c1 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((ROUND(vt0.c0, x'2aff4b22') IN ()));
SELECT SUM(count) FROM (SELECT (((ROUND(vt0.c0, x'2aff4b22') IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((ROUND(vt0.c0, x'2aff4b22') IN ()));
SELECT SUM(count) FROM (SELECT (((ROUND(vt0.c0, x'2aff4b22') IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((ROUND(vt0.c0, x'2aff4b22') IN ()));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((- (vt0.c0))))<=(('*Bo~'))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0))))<=(('*Bo~')))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((- (vt0.c0))))<=(('*Bo~'))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0))))<=(('*Bo~')))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((- (vt0.c0))))<=(('*Bo~'))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((vt0.c0)IS NOT(rt0.c2)))LIKE(((((v0.c0)OR(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(rt0.c2)))LIKE(((((v0.c0)OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((vt0.c0)IS NOT(rt0.c2)))LIKE(((((v0.c0)OR(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(rt0.c2)))LIKE(((((v0.c0)OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((vt0.c0)IS NOT(rt0.c2)))LIKE(((((v0.c0)OR(rt0.c2)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('2128859752') ORDER BY ((((((v0.c0)||(vt0.c0)))OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, -1115618179 ASC  NULLS LAST, 0x75f971e7 DESC;
SELECT SUM(count) FROM (SELECT ALL (('2128859752') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0)||(vt0.c0)))OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, -1115618179 ASC  NULLS LAST, 0x75f971e7 DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('2128859752') ORDER BY ((((((v0.c0)||(vt0.c0)))OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, -1115618179 ASC  NULLS LAST, 0x75f971e7 DESC;
SELECT SUM(count) FROM (SELECT ALL (('2128859752') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0)||(vt0.c0)))OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST, -1115618179 ASC  NULLS LAST, 0x75f971e7 DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (t0.c0)) COLLATE BINARY) ORDER BY (((((~ (1.806773693E9)))AND((((vt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((vt0.c1, rt0.c3, t0.c0)) AND ((rt0.c2, vt0.c0, rt0.c3))))))AND(rtreenode(rt0.c0, rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((((~ (1.806773693E9)))AND((((vt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((vt0.c1, rt0.c3, t0.c0)) AND ((rt0.c2, vt0.c0, rt0.c3))))))AND(rtreenode(rt0.c0, rt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (t0.c0)) COLLATE BINARY) ORDER BY (((((~ (1.806773693E9)))AND((((vt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((vt0.c1, rt0.c3, t0.c0)) AND ((rt0.c2, vt0.c0, rt0.c3))))))AND(rtreenode(rt0.c0, rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((((~ (1.806773693E9)))AND((((vt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((vt0.c1, rt0.c3, t0.c0)) AND ((rt0.c2, vt0.c0, rt0.c3))))))AND(rtreenode(rt0.c0, rt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (t0.c0)) COLLATE BINARY) ORDER BY (((((~ (1.806773693E9)))AND((((vt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((vt0.c1, rt0.c3, t0.c0)) AND ((rt0.c2, vt0.c0, rt0.c3))))))AND(rtreenode(rt0.c0, rt0.c2))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c1) ISNULL))));
SELECT ALL * FROM vt0, v0, rt0 CROSS JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c0) AND (vt0.c0)))AND(DATETIME(x'', rt0.c2, rt0.c2))))AND((('-367439161') NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(json_valid(rt0.c3))))AND(((v0.c0)<<(rt0.c0)))) WHERE (((((+ (vt0.c0))))>((NULL)))) ORDER BY ((((((((CAST(0.22146205702198807 AS BLOB))AND(CAST(vt0.c0 AS BLOB))))OR(CASE rt0.c0  WHEN v0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)))OR((v0.c0 IN (vt0.c1, t0.c0)))))OR(((((rt0.c3)AND(t0.c0)))AND(t0.c0))))  NULLS LAST, (((((rt0.c3, v0.c0, rt0.c2))<((rt0.c2, vt0.c0, v0.c0))))+(CASE WHEN t0.c0 THEN rt0.c0 END))  NULLS FIRST, LTRIM((('1835325753') NOT NULL), CASE WHEN rt0.c3 THEN v0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c0))))>((NULL)))) IS TRUE)  as count FROM vt0, v0, rt0 CROSS JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c0) AND (vt0.c0)))AND(DATETIME(x'', rt0.c2, rt0.c2))))AND((('-367439161') NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(json_valid(rt0.c3))))AND(((v0.c0)<<(rt0.c0)))) ORDER BY ((((((((CAST(0.22146205702198807 AS BLOB))AND(CAST(vt0.c0 AS BLOB))))OR(CASE rt0.c0  WHEN v0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)))OR((v0.c0 IN (vt0.c1, t0.c0)))))OR(((((rt0.c3)AND(t0.c0)))AND(t0.c0))))  NULLS LAST, (((((rt0.c3, v0.c0, rt0.c2))<((rt0.c2, vt0.c0, v0.c0))))+(CASE WHEN t0.c0 THEN rt0.c0 END))  NULLS FIRST, LTRIM((('1835325753') NOT NULL), CASE WHEN rt0.c3 THEN v0.c0 END) DESC);
SELECT ALL * FROM vt0, v0, rt0 CROSS JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c0) AND (vt0.c0)))AND(DATETIME(x'', rt0.c2, rt0.c2))))AND((('-367439161') NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(json_valid(rt0.c3))))AND(((v0.c0)<<(rt0.c0)))) WHERE (((((+ (vt0.c0))))>((NULL)))) ORDER BY ((((((((CAST(0.22146205702198807 AS BLOB))AND(CAST(vt0.c0 AS BLOB))))OR(CASE rt0.c0  WHEN v0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)))OR((v0.c0 IN (vt0.c1, t0.c0)))))OR(((((rt0.c3)AND(t0.c0)))AND(t0.c0))))  NULLS LAST, (((((rt0.c3, v0.c0, rt0.c2))<((rt0.c2, vt0.c0, v0.c0))))+(CASE WHEN t0.c0 THEN rt0.c0 END))  NULLS FIRST, LTRIM((('1835325753') NOT NULL), CASE WHEN rt0.c3 THEN v0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c0))))>((NULL)))) IS TRUE)  as count FROM vt0, v0, rt0 CROSS JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c0) AND (vt0.c0)))AND(DATETIME(x'', rt0.c2, rt0.c2))))AND((('-367439161') NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(json_valid(rt0.c3))))AND(((v0.c0)<<(rt0.c0)))) ORDER BY ((((((((CAST(0.22146205702198807 AS BLOB))AND(CAST(vt0.c0 AS BLOB))))OR(CASE rt0.c0  WHEN v0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)))OR((v0.c0 IN (vt0.c1, t0.c0)))))OR(((((rt0.c3)AND(t0.c0)))AND(t0.c0))))  NULLS LAST, (((((rt0.c3, v0.c0, rt0.c2))<((rt0.c2, vt0.c0, v0.c0))))+(CASE WHEN t0.c0 THEN rt0.c0 END))  NULLS FIRST, LTRIM((('1835325753') NOT NULL), CASE WHEN rt0.c3 THEN v0.c0 END) DESC);
SELECT ALL * FROM vt0, v0, rt0 CROSS JOIN t0 ON ((((((((((v0.c0) BETWEEN (t0.c0) AND (vt0.c0)))AND(DATETIME(x'', rt0.c2, rt0.c2))))AND((('-367439161') NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(json_valid(rt0.c3))))AND(((v0.c0)<<(rt0.c0)))) WHERE (((((+ (vt0.c0))))>((NULL)))) ORDER BY ((((((((CAST(0.22146205702198807 AS BLOB))AND(CAST(vt0.c0 AS BLOB))))OR(CASE rt0.c0  WHEN v0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)))OR((v0.c0 IN (vt0.c1, t0.c0)))))OR(((((rt0.c3)AND(t0.c0)))AND(t0.c0))))  NULLS LAST, (((((rt0.c3, v0.c0, rt0.c2))<((rt0.c2, vt0.c0, v0.c0))))+(CASE WHEN t0.c0 THEN rt0.c0 END))  NULLS FIRST, LTRIM((('1835325753') NOT NULL), CASE WHEN rt0.c3 THEN v0.c0 END) DESC;
SELECT * FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON HEX((('991480956') BETWEEN (rt0.c0) AND (rt0.c1))) WHERE ((((rt0.c1)) BETWEEN (('-Xv/E<ArO')) AND ((t0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (('-Xv/E<ArO')) AND ((t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON HEX((('991480956') BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT * FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON HEX((('991480956') BETWEEN (rt0.c0) AND (rt0.c1))) WHERE ((((rt0.c1)) BETWEEN (('-Xv/E<ArO')) AND ((t0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (('-Xv/E<ArO')) AND ((t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON HEX((('991480956') BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT * FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON HEX((('991480956') BETWEEN (rt0.c0) AND (rt0.c1))) WHERE ((((rt0.c1)) BETWEEN (('-Xv/E<ArO')) AND ((t0.c0 COLLATE BINARY))));
SELECT ALL * FROM v0, t0, vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND (json_extract(vt0.c0, vt0.c1, vt0.c0, t0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND (json_extract(vt0.c0, vt0.c1, vt0.c0, t0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND (json_extract(vt0.c0, vt0.c1, vt0.c0, t0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND (json_extract(vt0.c0, vt0.c1, vt0.c0, t0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND (json_extract(vt0.c0, vt0.c1, vt0.c0, t0.c0, vt0.c0, vt0.c0))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON x'' LEFT OUTER JOIN t0 ON ((((vt0.c0)||(v0.c0))) NOTNULL) WHERE (CASE WHEN ((((((((vt0.c1)OR(t0.c0)))AND(t0.c0)))OR(v0.c0)))AND(0X5351c2dd)) THEN vt0.c1 COLLATE BINARY ELSE CAST(v0.c0 AS REAL) END) ORDER BY ('-XLe#]' IN (((vt0.c1) NOT NULL), vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt0.c1)OR(t0.c0)))AND(t0.c0)))OR(v0.c0)))AND(0x5351c2dd)) THEN vt0.c1 COLLATE BINARY ELSE CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON x'' LEFT OUTER JOIN t0 ON ((((vt0.c0)||(v0.c0))) NOTNULL) ORDER BY ('-XLe#]' IN (((vt0.c1) NOT NULL), vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON x'' LEFT OUTER JOIN t0 ON ((((vt0.c0)||(v0.c0))) NOTNULL) WHERE (CASE WHEN ((((((((vt0.c1)OR(t0.c0)))AND(t0.c0)))OR(v0.c0)))AND(0X5351c2dd)) THEN vt0.c1 COLLATE BINARY ELSE CAST(v0.c0 AS REAL) END) ORDER BY ('-XLe#]' IN (((vt0.c1) NOT NULL), vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt0.c1)OR(t0.c0)))AND(t0.c0)))OR(v0.c0)))AND(0x5351c2dd)) THEN vt0.c1 COLLATE BINARY ELSE CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON x'' LEFT OUTER JOIN t0 ON ((((vt0.c0)||(v0.c0))) NOTNULL) ORDER BY ('-XLe#]' IN (((vt0.c1) NOT NULL), vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON x'' LEFT OUTER JOIN t0 ON ((((vt0.c0)||(v0.c0))) NOTNULL) WHERE (CASE WHEN ((((((((vt0.c1)OR(t0.c0)))AND(t0.c0)))OR(v0.c0)))AND(0X5351c2dd)) THEN vt0.c1 COLLATE BINARY ELSE CAST(v0.c0 AS REAL) END) ORDER BY ('-XLe#]' IN (((vt0.c1) NOT NULL), vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))-(CHANGES()))) ORDER BY (((- (rt0.c2))) IS TRUE) ASC, NULLIF(DISTINCT ((rt0.c3)<=(vt0.c1)), ((rt0.c1) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))-(CHANGES()))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((- (rt0.c2))) IS TRUE) ASC, NULLIF(DISTINCT ((rt0.c3)<=(vt0.c1)), ((rt0.c1) ISNULL)) ASC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))-(CHANGES()))) ORDER BY (((- (rt0.c2))) IS TRUE) ASC, NULLIF(DISTINCT ((rt0.c3)<=(vt0.c1)), ((rt0.c1) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))-(CHANGES()))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((- (rt0.c2))) IS TRUE) ASC, NULLIF(DISTINCT ((rt0.c3)<=(vt0.c1)), ((rt0.c1) ISNULL)) ASC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))-(CHANGES()))) ORDER BY (((- (rt0.c2))) IS TRUE) ASC, NULLIF(DISTINCT ((rt0.c3)<=(vt0.c1)), ((rt0.c1) ISNULL)) ASC;
SELECT * FROM vt0, t0 WHERE (('-561920526' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-561920526' IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (('-561920526' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-561920526' IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (('-561920526' IN ()));
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c0) IS FALSE))AND((~ (0.17298368938735031)))))AND(v0.c0 COLLATE NOCASE))) ORDER BY ((NULL)GLOB(((t0.c0)AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS FALSE))AND((~ (0.17298368938735031)))))AND(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0 ORDER BY ((NULL)GLOB(((t0.c0)AND(v0.c0)))));
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c0) IS FALSE))AND((~ (0.17298368938735031)))))AND(v0.c0 COLLATE NOCASE))) ORDER BY ((NULL)GLOB(((t0.c0)AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS FALSE))AND((~ (0.17298368938735031)))))AND(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, t0 ORDER BY ((NULL)GLOB(((t0.c0)AND(v0.c0)))));
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c0) IS FALSE))AND((~ (0.17298368938735031)))))AND(v0.c0 COLLATE NOCASE))) ORDER BY ((NULL)GLOB(((t0.c0)AND(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) NOT NULL) IN ()));
SELECT * FROM v0, t0, rt0 NATURAL JOIN vt0 WHERE ((rt0.c0 IN (NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (NULL)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, rt0 NATURAL JOIN vt0);
SELECT * FROM v0, t0, rt0 NATURAL JOIN vt0 WHERE ((rt0.c0 IN (NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (NULL)) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, rt0 NATURAL JOIN vt0);
SELECT * FROM v0, t0, rt0 NATURAL JOIN vt0 WHERE ((rt0.c0 IN (NULL)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)IS(t0.c0)))OR('-906269277')))AND(rt0.c0)) INNER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN (0.6308731730410675 IN ()) WHEN ((vt0.c0) NOTNULL) THEN ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)) WHEN ((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c1)) THEN (vt0.c0 IN (rt0.c3, t0.c0)) WHEN ((vt0.c1)<=(vt0.c1)) THEN x'' WHEN CASE WHEN t0.c0 THEN '' END THEN vt0.c1 COLLATE BINARY ELSE (rt0.c3 IN ()) END WHERE ((((CAST(vt0.c1 AS NUMERIC), ((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)), (((rt0.c3, vt0.c0, t0.c0))>((rt0.c3, rt0.c3, t0.c0)))))<(((((vt0.c1))<=((t0.c0))), CAST(vt0.c1 AS NUMERIC), ((rt0.c2)<=(rt0.c0)))))) ORDER BY CASE WHEN ((vt0.c1)>=(vt0.c0)) THEN ((t0.c0)>=(rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS NUMERIC), ((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)), (((rt0.c3, vt0.c0, t0.c0))>((rt0.c3, rt0.c3, t0.c0)))))<(((((vt0.c1))<=((t0.c0))), CAST(vt0.c1 AS NUMERIC), ((rt0.c2)<=(rt0.c0)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)IS(t0.c0)))OR('-906269277')))AND(rt0.c0)) INNER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN (0.6308731730410675 IN ()) WHEN ((vt0.c0) NOTNULL) THEN ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)) WHEN ((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c1)) THEN (vt0.c0 IN (rt0.c3, t0.c0)) WHEN ((vt0.c1)<=(vt0.c1)) THEN x'' WHEN CASE WHEN t0.c0 THEN '' END THEN vt0.c1 COLLATE BINARY ELSE (rt0.c3 IN ()) END ORDER BY CASE WHEN ((vt0.c1)>=(vt0.c0)) THEN ((t0.c0)>=(rt0.c2)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)IS(t0.c0)))OR('-906269277')))AND(rt0.c0)) INNER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN (0.6308731730410675 IN ()) WHEN ((vt0.c0) NOTNULL) THEN ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)) WHEN ((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c1)) THEN (vt0.c0 IN (rt0.c3, t0.c0)) WHEN ((vt0.c1)<=(vt0.c1)) THEN x'' WHEN CASE WHEN t0.c0 THEN '' END THEN vt0.c1 COLLATE BINARY ELSE (rt0.c3 IN ()) END WHERE ((((CAST(vt0.c1 AS NUMERIC), ((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)), (((rt0.c3, vt0.c0, t0.c0))>((rt0.c3, rt0.c3, t0.c0)))))<(((((vt0.c1))<=((t0.c0))), CAST(vt0.c1 AS NUMERIC), ((rt0.c2)<=(rt0.c0)))))) ORDER BY CASE WHEN ((vt0.c1)>=(vt0.c0)) THEN ((t0.c0)>=(rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS NUMERIC), ((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)), (((rt0.c3, vt0.c0, t0.c0))>((rt0.c3, rt0.c3, t0.c0)))))<(((((vt0.c1))<=((t0.c0))), CAST(vt0.c1 AS NUMERIC), ((rt0.c2)<=(rt0.c0)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)IS(t0.c0)))OR('-906269277')))AND(rt0.c0)) INNER JOIN rt0 ON CASE WHEN CAST(rt0.c1 AS TEXT) THEN (0.6308731730410675 IN ()) WHEN ((vt0.c0) NOTNULL) THEN ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)) WHEN ((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c1)) THEN (vt0.c0 IN (rt0.c3, t0.c0)) WHEN ((vt0.c1)<=(vt0.c1)) THEN x'' WHEN CASE WHEN t0.c0 THEN '' END THEN vt0.c1 COLLATE BINARY ELSE (rt0.c3 IN ()) END ORDER BY CASE WHEN ((vt0.c1)>=(vt0.c0)) THEN ((t0.c0)>=(rt0.c2)) END  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON ((CASE WHEN rt0.c0 THEN v0.c0 ELSE vt0.c1 END)==((- (t0.c0)))) FULL OUTER JOIN t0 ON ((x'')=(CASE WHEN 1.835325753E9 THEN rt0.c1 END)) CROSS JOIN vt0 ON (((vt0.c0, v0.c0, '-26608706')) BETWEEN ((((v0.c0)IS(vt0.c1)), (((t0.c0, rt0.c1, rt0.c0))>=((rt0.c3, rt0.c3, rt0.c3))), (+ ('d	')))) AND ((CAST(NULL AS TEXT), ((((rt0.c3)AND(v0.c0)))AND(rt0.c1)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 END))) WHERE (((CASE WHEN t0.c0 THEN vt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN v0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END)!=(t0.c0 COLLATE NOCASE))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN vt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN v0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END)!=(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((CASE WHEN rt0.c0 THEN v0.c0 ELSE vt0.c1 END)==((- (t0.c0)))) FULL OUTER JOIN t0 ON ((x'')==(CASE WHEN 1.835325753E9 THEN rt0.c1 END)) CROSS JOIN vt0 ON (((vt0.c0, v0.c0, '-26608706')) BETWEEN ((((v0.c0)IS(vt0.c1)), (((t0.c0, rt0.c1, rt0.c0))>=((rt0.c3, rt0.c3, rt0.c3))), (+ ('d	')))) AND ((CAST(NULL AS TEXT), ((((rt0.c3)AND(v0.c0)))AND(rt0.c1)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 END))) ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN v0 ON ((CASE WHEN rt0.c0 THEN v0.c0 ELSE vt0.c1 END)==((- (t0.c0)))) FULL OUTER JOIN t0 ON ((x'')=(CASE WHEN 1.835325753E9 THEN rt0.c1 END)) CROSS JOIN vt0 ON (((vt0.c0, v0.c0, '-26608706')) BETWEEN ((((v0.c0)IS(vt0.c1)), (((t0.c0, rt0.c1, rt0.c0))>=((rt0.c3, rt0.c3, rt0.c3))), (+ ('d	')))) AND ((CAST(NULL AS TEXT), ((((rt0.c3)AND(v0.c0)))AND(rt0.c1)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 END))) WHERE (((CASE WHEN t0.c0 THEN vt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN v0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END)!=(t0.c0 COLLATE NOCASE))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN vt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN v0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END)!=(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((CASE WHEN rt0.c0 THEN v0.c0 ELSE vt0.c1 END)==((- (t0.c0)))) FULL OUTER JOIN t0 ON ((x'')==(CASE WHEN 1.835325753E9 THEN rt0.c1 END)) CROSS JOIN vt0 ON (((vt0.c0, v0.c0, '-26608706')) BETWEEN ((((v0.c0)IS(vt0.c1)), (((t0.c0, rt0.c1, rt0.c0))>=((rt0.c3, rt0.c3, rt0.c3))), (+ ('d	')))) AND ((CAST(NULL AS TEXT), ((((rt0.c3)AND(v0.c0)))AND(rt0.c1)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 END))) ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE v0.c0 END)GLOB((~ (vt0.c0))))  NULLS FIRST, (~ (((t0.c0) NOT BETWEEN (vt0.c0) AND (197572251))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE v0.c0 END)GLOB((~ (vt0.c0))))  NULLS FIRST, (~ (((t0.c0) NOT BETWEEN (vt0.c0) AND (197572251)))));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE v0.c0 END)GLOB((~ (vt0.c0))))  NULLS FIRST, (~ (((t0.c0) NOT BETWEEN (vt0.c0) AND (197572251))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE v0.c0 END)GLOB((~ (vt0.c0))))  NULLS FIRST, (~ (((t0.c0) NOT BETWEEN (vt0.c0) AND (197572251)))));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE v0.c0 END)GLOB((~ (vt0.c0))))  NULLS FIRST, (~ (((t0.c0) NOT BETWEEN (vt0.c0) AND (197572251))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE BINARY COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (+ (((t0.c0)IS(rt0.c0)))) FULL OUTER JOIN t0 ON CASE WHEN NULL THEN '0.9631344437582584' COLLATE BINARY ELSE x'9dc6' END WHERE ((((((rt0.c3))>=((t0.c0)))) NOT BETWEEN (((v0.c0)==(t0.c0))) AND ((rt0.c2 IN (rt0.c1))))) ORDER BY ((((((((t0.c0)OR(((vt0.c0)&(v0.c0)))))OR(LIKELY(vt0.c1))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>=((t0.c0)))) NOT BETWEEN (((v0.c0)=(t0.c0))) AND ((rt0.c2 IN (rt0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE BINARY COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (+ (((t0.c0)IS(rt0.c0)))) FULL OUTER JOIN t0 ON CASE WHEN NULL THEN '0.9631344437582584' COLLATE BINARY ELSE x'9dc6' END ORDER BY ((((((((t0.c0)OR(((vt0.c0)&(v0.c0)))))OR(LIKELY(vt0.c1))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(v0.c0)) DESC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE BINARY COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (+ (((t0.c0)IS(rt0.c0)))) FULL OUTER JOIN t0 ON CASE WHEN NULL THEN '0.9631344437582584' COLLATE BINARY ELSE x'9dc6' END WHERE ((((((rt0.c3))>=((t0.c0)))) NOT BETWEEN (((v0.c0)==(t0.c0))) AND ((rt0.c2 IN (rt0.c1))))) ORDER BY ((((((((t0.c0)OR(((vt0.c0)&(v0.c0)))))OR(LIKELY(vt0.c1))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>=((t0.c0)))) NOT BETWEEN (((v0.c0)=(t0.c0))) AND ((rt0.c2 IN (rt0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 AS NUMERIC) COLLATE BINARY COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (+ (((t0.c0)IS(rt0.c0)))) FULL OUTER JOIN t0 ON CASE WHEN NULL THEN '0.9631344437582584' COLLATE BINARY ELSE x'9dc6' END ORDER BY ((((((((t0.c0)OR(((vt0.c0)&(v0.c0)))))OR(LIKELY(vt0.c1))))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(v0.c0)) DESC);
SELECT ALL * FROM t0, vt0, rt0, v0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY CASE WHEN rt0.c3 THEN TIME(vt0.c1, t0.c0, rt0.c1, rt0.c3, '-1808875469') WHEN ((((((((rt0.c0)AND('1275996746')))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)) THEN '-1387169395' WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((v0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0, v0 ORDER BY CASE WHEN rt0.c3 THEN TIME(vt0.c1, t0.c0, rt0.c1, rt0.c3, '-1808875469') WHEN ((((((((rt0.c0)AND('1275996746')))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)) THEN '-1387169395' WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((v0.c0))) END ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0, v0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY CASE WHEN rt0.c3 THEN TIME(vt0.c1, t0.c0, rt0.c1, rt0.c3, '-1808875469') WHEN ((((((((rt0.c0)AND('1275996746')))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)) THEN '-1387169395' WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((v0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0, v0 ORDER BY CASE WHEN rt0.c3 THEN TIME(vt0.c1, t0.c0, rt0.c1, rt0.c3, '-1808875469') WHEN ((((((((rt0.c0)AND('1275996746')))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)) THEN '-1387169395' WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((v0.c0))) END ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0, v0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY CASE WHEN rt0.c3 THEN TIME(vt0.c1, t0.c0, rt0.c1, rt0.c3, '-1808875469') WHEN ((((((((rt0.c0)AND('1275996746')))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)) THEN '-1387169395' WHEN rt0.c2 COLLATE BINARY THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((v0.c0))) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))AND(-1.606694889E9 COLLATE NOCASE)))AND((((vt0.c0))<((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))AND(-1.606694889E9 COLLATE NOCASE)))AND((((vt0.c0))<((v0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))AND(-1.606694889E9 COLLATE NOCASE)))AND((((vt0.c0))<((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))AND(-1.606694889E9 COLLATE NOCASE)))AND((((vt0.c0))<((v0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))AND(-1.606694889E9 COLLATE NOCASE)))AND((((vt0.c0))<((v0.c0))))));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((('se U') BETWEEN (t0.c0) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((('se U') BETWEEN (t0.c0) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((('se U') BETWEEN (t0.c0) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((('se U') BETWEEN (t0.c0) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((('se U') BETWEEN (t0.c0) AND (vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ('g\') ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('g\') IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ('g\') ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('g\') IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ('g\') ORDER BY NULL ASC  NULLS FIRST;
SELECT * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(((t0.c0)*(rt0.c1))) WHERE (rt0.c2) ORDER BY (rt0.c3 IN ())  NULLS LAST, (((rt0.c2))>((HEX(DISTINCT rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(((t0.c0)*(rt0.c1))) ORDER BY (rt0.c3 IN ())  NULLS LAST, (((rt0.c2))>((HEX(DISTINCT rt0.c3)))));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(((t0.c0)*(rt0.c1))) WHERE (rt0.c2) ORDER BY (rt0.c3 IN ())  NULLS LAST, (((rt0.c2))>((HEX(DISTINCT rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(((t0.c0)*(rt0.c1))) ORDER BY (rt0.c3 IN ())  NULLS LAST, (((rt0.c2))>((HEX(DISTINCT rt0.c3)))));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON UNLIKELY(((t0.c0)*(rt0.c1))) WHERE (rt0.c2) ORDER BY (rt0.c3 IN ())  NULLS LAST, (((rt0.c2))>((HEX(DISTINCT rt0.c3))));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY 0.5808896071023226 DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY 0.5808896071023226 DESC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY 0.5808896071023226 DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY 0.5808896071023226 DESC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY 0.5808896071023226 DESC;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)<(v0.c0)))) AND ((((vt0.c1)AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0)<(v0.c0)))) AND ((((vt0.c1)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)<(v0.c0)))) AND ((((vt0.c1)AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0)<(v0.c0)))) AND ((((vt0.c1)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)<(v0.c0)))) AND ((((vt0.c1)AND(vt0.c0))))));
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c1)>=(rt0.c0))) NOT BETWEEN (((((rt0.c1)AND(t0.c0)))AND(rt0.c1))) AND (x'17ef')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt0.c0))) NOT BETWEEN (((((rt0.c1)AND(t0.c0)))AND(rt0.c1))) AND (x'17ef'))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c1)>=(rt0.c0))) NOT BETWEEN (((((rt0.c1)AND(t0.c0)))AND(rt0.c1))) AND (x'17ef')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt0.c0))) NOT BETWEEN (((((rt0.c1)AND(t0.c0)))AND(rt0.c1))) AND (x'17ef'))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c1)>=(rt0.c0))) NOT BETWEEN (((((rt0.c1)AND(t0.c0)))AND(rt0.c1))) AND (x'17ef')));
SELECT ALL * FROM rt0, vt0, v0, t0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(x''))) BETWEEN ((((rt0.c0))<>((vt0.c0)))) AND (((v0.c0)*(v0.c0))))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(x''))) BETWEEN ((((rt0.c0))<>((vt0.c0)))) AND (((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY vt0.c1);
SELECT ALL * FROM rt0, vt0, v0, t0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(x''))) BETWEEN ((((rt0.c0))<>((vt0.c0)))) AND (((v0.c0)*(v0.c0))))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(x''))) BETWEEN ((((rt0.c0))<>((vt0.c0)))) AND (((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY vt0.c1);
SELECT ALL * FROM rt0, vt0, v0, t0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(x''))) BETWEEN ((((rt0.c0))<>((vt0.c0)))) AND (((v0.c0)*(v0.c0))))) ORDER BY vt0.c1;
SELECT COUNT(*) FROM t0, rt0, v0 WHERE (x'11a4') ORDER BY (((((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))AND(((rt0.c2) IS TRUE))))OR(((v0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))), (((((NOT (rt0.c1)))AND((NOT (rt0.c0)))))OR(t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((x'11a4') IS TRUE)  as count FROM t0, rt0, v0 ORDER BY (((((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))AND(((rt0.c2) IS TRUE))))OR(((v0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))), (((((NOT (rt0.c1)))AND((NOT (rt0.c0)))))OR(t0.c0)));
SELECT COUNT(*) FROM t0, rt0, v0 WHERE (x'11a4') ORDER BY (((((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))AND(((rt0.c2) IS TRUE))))OR(((v0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))), (((((NOT (rt0.c1)))AND((NOT (rt0.c0)))))OR(t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((x'11a4') IS TRUE)  as count FROM t0, rt0, v0 ORDER BY (((((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))AND(((rt0.c2) IS TRUE))))OR(((v0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))), (((((NOT (rt0.c1)))AND((NOT (rt0.c0)))))OR(t0.c0)));
SELECT COUNT(*) FROM t0, rt0, v0 WHERE (x'11a4') ORDER BY (((((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))AND(((rt0.c2) IS TRUE))))OR(((v0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))), (((((NOT (rt0.c1)))AND((NOT (rt0.c0)))))OR(t0.c0));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((v0.c0)-((((v0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, 0.1392915400435224, t0.c0)))))) ORDER BY ((((((v0.c0) NOT BETWEEN ('0.414636554507968') AND (vt0.c1)))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)-((((v0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, 0.1392915400435224, t0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((((v0.c0) NOT BETWEEN ('0.414636554507968') AND (vt0.c1)))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((v0.c0)-((((v0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, 0.1392915400435224, t0.c0)))))) ORDER BY ((((((v0.c0) NOT BETWEEN ('0.414636554507968') AND (vt0.c1)))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)-((((v0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, 0.1392915400435224, t0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((((v0.c0) NOT BETWEEN ('0.414636554507968') AND (vt0.c1)))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((v0.c0)-((((v0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, 0.1392915400435224, t0.c0)))))) ORDER BY ((((((v0.c0) NOT BETWEEN ('0.414636554507968') AND (vt0.c1)))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((((rt0.c1)OR(vt0.c1)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(vt0.c1)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((((rt0.c1)OR(vt0.c1)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(vt0.c1)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((((rt0.c1)OR(vt0.c1)))OR(rt0.c1)) IN ()));
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS BLOB))));
SELECT * FROM v0, t0 WHERE ((~ (((((v0.c0)OR(t0.c0)))OR(v0.c0))))) ORDER BY ((x'') BETWEEN (((t0.c0)>(v0.c0))) AND ((NULL IN (t0.c0, t0.c0)))) ASC  NULLS LAST, 0.6547348630131198 ASC, ((CASE 'm5'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((v0.c0)OR(t0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((x'') BETWEEN (((t0.c0)>(v0.c0))) AND ((NULL IN (t0.c0, t0.c0)))) ASC  NULLS LAST, 0.6547348630131198 ASC, ((CASE 'm5'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC);
SELECT * FROM v0, t0 WHERE ((~ (((((v0.c0)OR(t0.c0)))OR(v0.c0))))) ORDER BY ((x'') BETWEEN (((t0.c0)>(v0.c0))) AND ((NULL IN (t0.c0, t0.c0)))) ASC  NULLS LAST, 0.6547348630131198 ASC, ((CASE 'm5'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((v0.c0)OR(t0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((x'') BETWEEN (((t0.c0)>(v0.c0))) AND ((NULL IN (t0.c0, t0.c0)))) ASC  NULLS LAST, 0.6547348630131198 ASC, ((CASE 'm5'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC);
SELECT * FROM v0, t0 WHERE ((~ (((((v0.c0)OR(t0.c0)))OR(v0.c0))))) ORDER BY ((x'') BETWEEN (((t0.c0)>(v0.c0))) AND ((NULL IN (t0.c0, t0.c0)))) ASC  NULLS LAST, 0.6547348630131198 ASC, ((CASE 'm5'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL) ASC;
SELECT ALL * FROM rt0, v0, vt0, t0 WHERE ((((((rt0.c0 IN ()))AND(vt0.c1 COLLATE RTRIM)))OR(LIKELY(v0.c0)))) ORDER BY CASE WHEN (((rt0.c3))<((rt0.c0))) THEN vt0.c1 COLLATE RTRIM ELSE (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) END;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN ()))AND(vt0.c1 COLLATE RTRIM)))OR(LIKELY(v0.c0)))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0, vt0, t0 ORDER BY CASE WHEN (((rt0.c3))<((rt0.c0))) THEN vt0.c1 COLLATE RTRIM ELSE (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) END);
SELECT ALL * FROM rt0, v0, vt0, t0 WHERE ((((((rt0.c0 IN ()))AND(vt0.c1 COLLATE RTRIM)))OR(LIKELY(v0.c0)))) ORDER BY CASE WHEN (((rt0.c3))<((rt0.c0))) THEN vt0.c1 COLLATE RTRIM ELSE (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) END;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN ()))AND(vt0.c1 COLLATE RTRIM)))OR(LIKELY(v0.c0)))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0, vt0, t0 ORDER BY CASE WHEN (((rt0.c3))<((rt0.c0))) THEN vt0.c1 COLLATE RTRIM ELSE (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) END);
SELECT ALL * FROM rt0, v0, vt0, t0 WHERE ((((((rt0.c0 IN ()))AND(vt0.c1 COLLATE RTRIM)))OR(LIKELY(v0.c0)))) ORDER BY CASE WHEN (((rt0.c3))<((rt0.c0))) THEN vt0.c1 COLLATE RTRIM ELSE (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) END;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((v0.c0)<(vt0.c1)), vt0.c1, ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(2.002855754E9)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, ((vt0.c1)GLOB(vt0.c0)), ((vt0.c0)<(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((v0.c0)<(vt0.c1)), vt0.c1, ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(2.002855754E9)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, ((vt0.c1)GLOB(vt0.c0)), ((vt0.c0)<(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((v0.c0)<(vt0.c1)), vt0.c1, ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(2.002855754E9)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, ((vt0.c1)GLOB(vt0.c0)), ((vt0.c0)<(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((v0.c0)<(vt0.c1)), vt0.c1, ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(2.002855754E9)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, ((vt0.c1)GLOB(vt0.c0)), ((vt0.c0)<(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((v0.c0)<(vt0.c1)), vt0.c1, ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(2.002855754E9)))OR(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, ((vt0.c1)GLOB(vt0.c0)), ((vt0.c0)<(v0.c0))))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((NOT ((((NULL))>((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((NULL))>((v0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((NOT ((((NULL))>((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((NULL))>((v0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((NOT ((((NULL))>((v0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR('0.36009207625336237'))) BETWEEN (json_array_length(vt0.c1, vt0.c0)) AND (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))OR('0.36009207625336237'))) BETWEEN (json_array_length(vt0.c1, vt0.c0)) AND (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR('0.36009207625336237'))) BETWEEN (json_array_length(vt0.c1, vt0.c0)) AND (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))OR('0.36009207625336237'))) BETWEEN (json_array_length(vt0.c1, vt0.c0)) AND (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c3) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c0 END)<>(CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, rt0 NOT INDEXED ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c0 END)!=(CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c3) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c0 END)<>(CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, rt0 NOT INDEXED ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c0 END)!=(CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c3) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c0 END)<>(CAST(rt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CASE ((vt0.c1)-('-26608706'))  WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0)>(vt0.c0)) END WHERE (((((vt0.c0)OR('628511981' COLLATE NOCASE)))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (CAST(vt0.c1 AS INTEGER) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR('628511981' COLLATE NOCASE)))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CASE ((vt0.c1)-('-26608706'))  WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0)>(vt0.c0)) END ORDER BY (CAST(vt0.c1 AS INTEGER) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CASE ((vt0.c1)-('-26608706'))  WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0)>(vt0.c0)) END WHERE (((((vt0.c0)OR('628511981' COLLATE NOCASE)))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (CAST(vt0.c1 AS INTEGER) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR('628511981' COLLATE NOCASE)))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON CASE ((vt0.c1)-('-26608706'))  WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0)>(vt0.c0)) END ORDER BY (CAST(vt0.c1 AS INTEGER) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON CASE ((vt0.c1)-('-26608706'))  WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0)>(vt0.c0)) END WHERE (((((vt0.c0)OR('628511981' COLLATE NOCASE)))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (CAST(vt0.c1 AS INTEGER) IN ())  NULLS LAST;
SELECT ALL * FROM vt0, t0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)==(0.4720176641817936)))) AND ((t0.c0 COLLATE RTRIM)))) ORDER BY (((((t0.c0))==((vt0.c0))))OR(CAST(v0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0)==(0.4720176641817936)))) AND ((t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((((t0.c0))==((vt0.c0))))OR(CAST(v0.c0 AS BLOB))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)==(0.4720176641817936)))) AND ((t0.c0 COLLATE RTRIM)))) ORDER BY (((((t0.c0))==((vt0.c0))))OR(CAST(v0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0)==(0.4720176641817936)))) AND ((t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((((t0.c0))==((vt0.c0))))OR(CAST(v0.c0 AS BLOB))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0)==(0.4720176641817936)))) AND ((t0.c0 COLLATE RTRIM)))) ORDER BY (((((t0.c0))==((vt0.c0))))OR(CAST(v0.c0 AS BLOB))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))));
SELECT * FROM t0, vt0 WHERE ((SQLITE_COMPILEOPTION_GET(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_GET(vt0.c0) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((SQLITE_COMPILEOPTION_GET(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_GET(vt0.c0) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((SQLITE_COMPILEOPTION_GET(vt0.c0) IN ()));
SELECT * FROM rt0, v0, vt0, t0 WHERE (((((LIKELIHOOD(t0.c0, 0.5476797552083775))AND((+ ('%z')))))AND((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(t0.c0, 0.5476797552083775))AND((+ ('%z')))))AND((- (rt0.c3))))) IS TRUE)  as count FROM rt0, v0, vt0, t0);
SELECT * FROM rt0, v0, vt0, t0 WHERE (((((LIKELIHOOD(t0.c0, 0.5476797552083775))AND((+ ('%z')))))AND((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(t0.c0, 0.5476797552083775))AND((+ ('%z')))))AND((- (rt0.c3))))) IS TRUE)  as count FROM rt0, v0, vt0, t0);
SELECT * FROM rt0, v0, vt0, t0 WHERE (((((LIKELIHOOD(t0.c0, 0.5476797552083775))AND((+ ('%z')))))AND((- (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) ASC, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) ASC, vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) ASC, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) ASC, vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) ASC, vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE (((v0.c0)<((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)<((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE (((v0.c0)<((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)<((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE (((v0.c0)<((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (LTRIM(((t0.c0)AND(x'cb18')), LIKELY(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((t0.c0)AND(x'cb18')), LIKELY(DISTINCT t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (LTRIM(((t0.c0)AND(x'cb18')), LIKELY(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((t0.c0)AND(x'cb18')), LIKELY(DISTINCT t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (LTRIM(((t0.c0)AND(x'cb18')), LIKELY(DISTINCT t0.c0)));
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (1.397867229E9);
SELECT SUM(count) FROM (SELECT ((1.397867229E9) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (1.397867229E9);
SELECT SUM(count) FROM (SELECT ((1.397867229E9) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (1.397867229E9);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN v0 ON '513031270' FULL OUTER JOIN t0 ON CASE WHEN CAST(v0.c0 AS TEXT) THEN CASE 0.4072749363679483  WHEN t0.c0 THEN rt0.c0 ELSE x'' END WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) THEN rt0.c3 COLLATE BINARY WHEN (('%져Lt')LIKE(v0.c0)) THEN (vt0.c1 IN ()) END WHERE (((((TIME(vt0.c0, x'', rt0.c0))OR(((((((((vt0.c1)AND(rt0.c0)))AND(-1467481613)))OR(vt0.c0)))AND(vt0.c0)))))AND(CASE 0.686939312019849  WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN '25' THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((TIME(vt0.c0, x'', rt0.c0))OR(((((((((vt0.c1)AND(rt0.c0)))AND(-1467481613)))OR(vt0.c0)))AND(vt0.c0)))))AND(CASE 0.686939312019849  WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN '25' THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON '513031270' FULL OUTER JOIN t0 ON CASE WHEN CAST(v0.c0 AS TEXT) THEN CASE 0.4072749363679483  WHEN t0.c0 THEN rt0.c0 ELSE x'' END WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) THEN rt0.c3 COLLATE BINARY WHEN (('%져Lt')LIKE(v0.c0)) THEN (vt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN v0 ON '513031270' FULL OUTER JOIN t0 ON CASE WHEN CAST(v0.c0 AS TEXT) THEN CASE 0.4072749363679483  WHEN t0.c0 THEN rt0.c0 ELSE x'' END WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) THEN rt0.c3 COLLATE BINARY WHEN (('%져Lt')LIKE(v0.c0)) THEN (vt0.c1 IN ()) END WHERE (((((TIME(vt0.c0, x'', rt0.c0))OR(((((((((vt0.c1)AND(rt0.c0)))AND(-1467481613)))OR(vt0.c0)))AND(vt0.c0)))))AND(CASE 0.686939312019849  WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN '25' THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((TIME(vt0.c0, x'', rt0.c0))OR(((((((((vt0.c1)AND(rt0.c0)))AND(-1467481613)))OR(vt0.c0)))AND(vt0.c0)))))AND(CASE 0.686939312019849  WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN '25' THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON '513031270' FULL OUTER JOIN t0 ON CASE WHEN CAST(v0.c0 AS TEXT) THEN CASE 0.4072749363679483  WHEN t0.c0 THEN rt0.c0 ELSE x'' END WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) THEN rt0.c3 COLLATE BINARY WHEN (('%져Lt')LIKE(v0.c0)) THEN (vt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN v0 ON '513031270' FULL OUTER JOIN t0 ON CASE WHEN CAST(v0.c0 AS TEXT) THEN CASE 0.4072749363679483  WHEN t0.c0 THEN rt0.c0 ELSE x'' END WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) THEN rt0.c3 COLLATE BINARY WHEN (('%져Lt')LIKE(v0.c0)) THEN (vt0.c1 IN ()) END WHERE (((((TIME(vt0.c0, x'', rt0.c0))OR(((((((((vt0.c1)AND(rt0.c0)))AND(-1467481613)))OR(vt0.c0)))AND(vt0.c0)))))AND(CASE 0.686939312019849  WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN '25' THEN vt0.c0 ELSE vt0.c1 END)));
SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c1)>=(rt0.c2)))|((((rt0.c0))<=((rt0.c3))))) WHERE (((((((t0.c0)IS(rt0.c0)))AND(rt0.c2)))OR(((t0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)IS(rt0.c0)))AND(rt0.c2)))OR(((t0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((rt0.c1)>=(rt0.c2)))|((((rt0.c0))<=((rt0.c3))))));
SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c1)>=(rt0.c2)))|((((rt0.c0))<=((rt0.c3))))) WHERE (((((((t0.c0)IS(rt0.c0)))AND(rt0.c2)))OR(((t0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)IS(rt0.c0)))AND(rt0.c2)))OR(((t0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((rt0.c1)>=(rt0.c2)))|((((rt0.c0))<=((rt0.c3))))));
SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c1)>=(rt0.c2)))|((((rt0.c0))<=((rt0.c3))))) WHERE (((((((t0.c0)IS(rt0.c0)))AND(rt0.c2)))OR(((t0.c0)IS(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON (+ (HEX(DISTINCT t0.c0))) WHERE ((((t0.c0))<=((t0.c0))) COLLATE NOCASE) ORDER BY (+ (((vt0.c1)GLOB(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<=((t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON (+ (HEX(DISTINCT t0.c0))) ORDER BY (+ (((vt0.c1)GLOB(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON (+ (HEX(DISTINCT t0.c0))) WHERE ((((t0.c0))<=((t0.c0))) COLLATE NOCASE) ORDER BY (+ (((vt0.c1)GLOB(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0))<=((t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON (+ (HEX(DISTINCT t0.c0))) ORDER BY (+ (((vt0.c1)GLOB(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON (+ (HEX(DISTINCT t0.c0))) WHERE ((((t0.c0))<=((t0.c0))) COLLATE NOCASE) ORDER BY (+ (((vt0.c1)GLOB(t0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (UNLIKELY(((t0.c0)<>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((t0.c0)<>(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (UNLIKELY(((t0.c0)<>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((t0.c0)<>(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (UNLIKELY(((t0.c0)<>(rt0.c2))));
SELECT * FROM t0, vt0, v0, rt0 WHERE (((((rt0.c3)>(rt0.c2))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>(rt0.c2))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (vt0.c1))) IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT * FROM t0, vt0, v0, rt0 WHERE (((((rt0.c3)>(rt0.c2))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>(rt0.c2))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (vt0.c1))) IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT * FROM t0, vt0, v0, rt0 WHERE (((((rt0.c3)>(rt0.c2))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (vt0.c1)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((TRIM(vt0.c0))&(LIKELY(DISTINCT vt0.c0))) WHERE (((((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c3, vt0.c1, rt0.c0))) IN ())) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c3, vt0.c1, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((TRIM(vt0.c0))&(LIKELY(DISTINCT vt0.c0))) ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((TRIM(vt0.c0))&(LIKELY(DISTINCT vt0.c0))) WHERE (((((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c3, vt0.c1, rt0.c0))) IN ())) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c3, vt0.c1, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((TRIM(vt0.c0))&(LIKELY(DISTINCT vt0.c0))) ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((TRIM(vt0.c0))&(LIKELY(DISTINCT vt0.c0))) WHERE (((((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c3, vt0.c1, rt0.c0))) IN ())) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CAST(((v0.c0)&(v0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)&(v0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CAST(((v0.c0)&(v0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)&(v0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CAST(((v0.c0)&(v0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT * FROM v0, rt0, t0 WHERE (((((v0.c0)<(rt0.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (CAST(rt0.c2 AS BLOB)))) ORDER BY CAST(UNLIKELY(rt0.c1) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<(rt0.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY CAST(UNLIKELY(rt0.c1) AS REAL) DESC  NULLS FIRST);
SELECT * FROM v0, rt0, t0 WHERE (((((v0.c0)<(rt0.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (CAST(rt0.c2 AS BLOB)))) ORDER BY CAST(UNLIKELY(rt0.c1) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<(rt0.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY CAST(UNLIKELY(rt0.c1) AS REAL) DESC  NULLS FIRST);
SELECT * FROM v0, rt0, t0 WHERE (((((v0.c0)<(rt0.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (CAST(rt0.c2 AS BLOB)))) ORDER BY CAST(UNLIKELY(rt0.c1) AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((x'') NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CASE WHEN v0.c0 THEN rt0.c0 END)) WHERE (((((rt0.c2) NOT NULL))LIKE('R '))) ORDER BY ((((rt0.c1)IS(v0.c0)))<(IFNULL(rt0.c3, v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))LIKE('R '))) IS TRUE)  as count FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((x'') NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CASE WHEN v0.c0 THEN rt0.c0 END)) ORDER BY ((((rt0.c1)IS(v0.c0)))<(IFNULL(rt0.c3, v0.c0))) ASC);
SELECT COUNT(*) FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((x'') NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CASE WHEN v0.c0 THEN rt0.c0 END)) WHERE (((((rt0.c2) NOT NULL))LIKE('R '))) ORDER BY ((((rt0.c1)IS(v0.c0)))<(IFNULL(rt0.c3, v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))LIKE('R '))) IS TRUE)  as count FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((x'') NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CASE WHEN v0.c0 THEN rt0.c0 END)) ORDER BY ((((rt0.c1)IS(v0.c0)))<(IFNULL(rt0.c3, v0.c0))) ASC);
SELECT COUNT(*) FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((x'') NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CASE WHEN v0.c0 THEN rt0.c0 END)) WHERE (((((rt0.c2) NOT NULL))LIKE('R '))) ORDER BY ((((rt0.c1)IS(v0.c0)))<(IFNULL(rt0.c3, v0.c0))) ASC;
SELECT ALL * FROM rt0 WHERE (x'e0ef9a6b');
SELECT SUM(count) FROM (SELECT ((x'e0ef9a6b') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'e0ef9a6b');
SELECT SUM(count) FROM (SELECT ((x'e0ef9a6b') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'e0ef9a6b');
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (CAST(rt0.c2 AS BLOB) IN ()) CROSS JOIN t0 ON CASE WHEN ((rt0.c2)/(v0.c0)) THEN (((rt0.c1))==((vt0.c1))) WHEN (+ ('-951029410')) THEN ((rt0.c2)|(v0.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) THEN ((rt0.c3)>=(v0.c0)) WHEN rt0.c1 THEN -1.444078523E9 COLLATE NOCASE WHEN ((((rt0.c3)OR(vt0.c0)))OR(t0.c0)) THEN CAST(rt0.c0 AS INTEGER) END INNER JOIN vt0 ON ((TYPEOF(t0.c0))*(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)))) WHERE (((rt0.c2)GLOB(rt0.c1)) COLLATE NOCASE) ORDER BY ((vt0.c1)%(t0.c0)) DESC, ((((t0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))>(CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)GLOB(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (CAST(rt0.c2 AS BLOB) IN ()) CROSS JOIN t0 ON CASE WHEN ((rt0.c2)/(v0.c0)) THEN (((rt0.c1))==((vt0.c1))) WHEN (+ ('-951029410')) THEN ((rt0.c2)|(v0.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) THEN ((rt0.c3)>=(v0.c0)) WHEN rt0.c1 THEN -1.444078523E9 COLLATE NOCASE WHEN ((((rt0.c3)OR(vt0.c0)))OR(t0.c0)) THEN CAST(rt0.c0 AS INTEGER) END INNER JOIN vt0 ON ((TYPEOF(t0.c0))*(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)))) ORDER BY ((vt0.c1)%(t0.c0)) DESC, ((((t0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))>(CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c3 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (CAST(rt0.c2 AS BLOB) IN ()) CROSS JOIN t0 ON CASE WHEN ((rt0.c2)/(v0.c0)) THEN (((rt0.c1))==((vt0.c1))) WHEN (+ ('-951029410')) THEN ((rt0.c2)|(v0.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) THEN ((rt0.c3)>=(v0.c0)) WHEN rt0.c1 THEN -1.444078523E9 COLLATE NOCASE WHEN ((((rt0.c3)OR(vt0.c0)))OR(t0.c0)) THEN CAST(rt0.c0 AS INTEGER) END INNER JOIN vt0 ON ((TYPEOF(t0.c0))*(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)))) WHERE (((rt0.c2)GLOB(rt0.c1)) COLLATE NOCASE) ORDER BY ((vt0.c1)%(t0.c0)) DESC, ((((t0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))>(CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)GLOB(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (CAST(rt0.c2 AS BLOB) IN ()) CROSS JOIN t0 ON CASE WHEN ((rt0.c2)/(v0.c0)) THEN (((rt0.c1))==((vt0.c1))) WHEN (+ ('-951029410')) THEN ((rt0.c2)|(v0.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) THEN ((rt0.c3)>=(v0.c0)) WHEN rt0.c1 THEN -1.444078523E9 COLLATE NOCASE WHEN ((((rt0.c3)OR(vt0.c0)))OR(t0.c0)) THEN CAST(rt0.c0 AS INTEGER) END INNER JOIN vt0 ON ((TYPEOF(t0.c0))*(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)))) ORDER BY ((vt0.c1)%(t0.c0)) DESC, ((((t0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))>(CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c3 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS FALSE));
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS REAL) IN ())) ORDER BY IFNULL((NOT (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS REAL) IN ())) IS TRUE)  as count FROM v0 ORDER BY IFNULL((NOT (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS REAL) IN ())) ORDER BY IFNULL((NOT (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS REAL) IN ())) IS TRUE)  as count FROM v0 ORDER BY IFNULL((NOT (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS REAL) IN ())) ORDER BY IFNULL((NOT (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c0)IS NOT(''))) AND ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) RIGHT OUTER JOIN v0 ON '|Z' COLLATE BINARY WHERE ((((t0.c0 COLLATE BINARY))!=(((~ (v0.c0)))))) ORDER BY (('2058524864' COLLATE BINARY) NOT BETWEEN (t0.c0) AND ((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 COLLATE BINARY))!=(((~ (v0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c0)IS NOT(''))) AND ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) RIGHT OUTER JOIN v0 ON '|Z' COLLATE BINARY ORDER BY (('2058524864' COLLATE BINARY) NOT BETWEEN (t0.c0) AND ((+ (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c0)IS NOT(''))) AND ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) RIGHT OUTER JOIN v0 ON '|Z' COLLATE BINARY WHERE ((((t0.c0 COLLATE BINARY))!=(((~ (v0.c0)))))) ORDER BY (('2058524864' COLLATE BINARY) NOT BETWEEN (t0.c0) AND ((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 COLLATE BINARY))!=(((~ (v0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c0)IS NOT(''))) AND ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) RIGHT OUTER JOIN v0 ON '|Z' COLLATE BINARY ORDER BY (('2058524864' COLLATE BINARY) NOT BETWEEN (t0.c0) AND ((+ (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c0)IS NOT(''))) AND ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) RIGHT OUTER JOIN v0 ON '|Z' COLLATE BINARY WHERE ((((t0.c0 COLLATE BINARY))!=(((~ (v0.c0)))))) ORDER BY (('2058524864' COLLATE BINARY) NOT BETWEEN (t0.c0) AND ((+ (v0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 CROSS JOIN t0 ON LIKE(json_extract(t0.c0, rt0.c3), ((('jG*Ne')) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) WHERE ((((rt0.c2)) BETWEEN ((((((t0.c0)AND(rt0.c3)))OR(x'')))) AND ((((rt0.c3)-(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((((t0.c0)AND(rt0.c3)))OR(x'')))) AND ((((rt0.c3)-(rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN t0 ON LIKE(json_extract(t0.c0, rt0.c3), ((('jG*Ne')) BETWEEN ((rt0.c3)) AND ((rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, v0 CROSS JOIN t0 ON LIKE(json_extract(t0.c0, rt0.c3), ((('jG*Ne')) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) WHERE ((((rt0.c2)) BETWEEN ((((((t0.c0)AND(rt0.c3)))OR(x'')))) AND ((((rt0.c3)-(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((((t0.c0)AND(rt0.c3)))OR(x'')))) AND ((((rt0.c3)-(rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN t0 ON LIKE(json_extract(t0.c0, rt0.c3), ((('jG*Ne')) BETWEEN ((rt0.c3)) AND ((rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((('0㢰')OR(CAST(v0.c0 AS TEXT))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN NULL END)))OR(DATE(v0.c0, NULL, v0.c0)))) ORDER BY ((NOT (v0.c0)) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('0㢰')OR(CAST(v0.c0 AS TEXT))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN NULL END)))OR(DATE(v0.c0, NULL, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((NOT (v0.c0)) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((('0㢰')OR(CAST(v0.c0 AS TEXT))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN NULL END)))OR(DATE(v0.c0, NULL, v0.c0)))) ORDER BY ((NOT (v0.c0)) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('0㢰')OR(CAST(v0.c0 AS TEXT))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN NULL END)))OR(DATE(v0.c0, NULL, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((NOT (v0.c0)) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((('0㢰')OR(CAST(v0.c0 AS TEXT))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '' WHEN v0.c0 THEN NULL END)))OR(DATE(v0.c0, NULL, v0.c0)))) ORDER BY ((NOT (v0.c0)) IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((CAST(0Xffffffffd27001b4 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0xffffffffd27001b4 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((CAST(0Xffffffffd27001b4 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0xffffffffd27001b4 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((CAST(0Xffffffffd27001b4 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (+ (NULL)) WHERE ((+ (((((rt0.c0)OR(rt0.c1)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c0)OR(rt0.c1)))OR(NULL))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (+ (NULL)));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (+ (NULL)) WHERE ((+ (((((rt0.c0)OR(rt0.c1)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c0)OR(rt0.c1)))OR(NULL))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (+ (NULL)));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (+ (NULL)) WHERE ((+ (((((rt0.c0)OR(rt0.c1)))OR(NULL)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) ORDER BY ABS(DISTINCT (rt0.c0 IN (rt0.c3))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ABS(DISTINCT (rt0.c0 IN (rt0.c3))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) ORDER BY ABS(DISTINCT (rt0.c0 IN (rt0.c3))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ABS(DISTINCT (rt0.c0 IN (rt0.c3))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM) ORDER BY ABS(DISTINCT (rt0.c0 IN (rt0.c3))) DESC  NULLS LAST;
SELECT ALL * FROM v0, t0, rt0, vt0 WHERE ((~ ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM v0, t0, rt0, vt0);
SELECT ALL * FROM v0, t0, rt0, vt0 WHERE ((~ ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM v0, t0, rt0, vt0);
SELECT ALL * FROM v0, t0, rt0, vt0 WHERE ((~ ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, v0 WHERE (CASE 0.022303026289463457  WHEN (rt0.c3 IN ()) THEN NULL END) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) DESC  NULLS LAST, 0.23032891222140972 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.022303026289463457  WHEN (rt0.c3 IN ()) THEN NULL END) IS TRUE)  as count FROM vt0, t0, rt0, v0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) DESC  NULLS LAST, 0.23032891222140972 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, v0 WHERE (CASE 0.022303026289463457  WHEN (rt0.c3 IN ()) THEN NULL END) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) DESC  NULLS LAST, 0.23032891222140972 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.022303026289463457  WHEN (rt0.c3 IN ()) THEN NULL END) IS TRUE)  as count FROM vt0, t0, rt0, v0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) DESC  NULLS LAST, 0.23032891222140972 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, v0 WHERE (CASE 0.022303026289463457  WHEN (rt0.c3 IN ()) THEN NULL END) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) DESC  NULLS LAST, 0.23032891222140972 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN rt0 ON CASE WHEN ((((t0.c0)OR(rt0.c1)))AND(rt0.c2)) THEN (- (vt0.c1)) ELSE vt0.c0 COLLATE NOCASE END CROSS JOIN t0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END AS INTEGER) WHERE (((rt0.c2 COLLATE RTRIM)LIKE(SQLITE_SOURCE_ID()))) ORDER BY (((CAST(vt0.c0 AS TEXT), ((t0.c0)>(rt0.c2)), CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END))<=((rt0.c2 COLLATE BINARY, NULLIF(vt0.c0, rt0.c3), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(NULL))))) DESC  NULLS LAST, (((rt0.c3 IN ())) BETWEEN (((((v0.c0)AND(rt0.c3)))OR(t0.c0))) AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)LIKE(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON CASE WHEN ((((t0.c0)OR(rt0.c1)))AND(rt0.c2)) THEN (- (vt0.c1)) ELSE vt0.c0 COLLATE NOCASE END CROSS JOIN t0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END AS INTEGER) ORDER BY (((CAST(vt0.c0 AS TEXT), ((t0.c0)>(rt0.c2)), CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END))<=((rt0.c2 COLLATE BINARY, NULLIF(vt0.c0, rt0.c3), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(NULL))))) DESC  NULLS LAST, (((rt0.c3 IN ())) BETWEEN (((((v0.c0)AND(rt0.c3)))OR(t0.c0))) AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c3 END)) DESC);
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN rt0 ON CASE WHEN ((((t0.c0)OR(rt0.c1)))AND(rt0.c2)) THEN (- (vt0.c1)) ELSE vt0.c0 COLLATE NOCASE END CROSS JOIN t0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END AS INTEGER) WHERE (((rt0.c2 COLLATE RTRIM)LIKE(SQLITE_SOURCE_ID()))) ORDER BY (((CAST(vt0.c0 AS TEXT), ((t0.c0)>(rt0.c2)), CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END))<=((rt0.c2 COLLATE BINARY, NULLIF(vt0.c0, rt0.c3), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(NULL))))) DESC  NULLS LAST, (((rt0.c3 IN ())) BETWEEN (((((v0.c0)AND(rt0.c3)))OR(t0.c0))) AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)LIKE(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON CASE WHEN ((((t0.c0)OR(rt0.c1)))AND(rt0.c2)) THEN (- (vt0.c1)) ELSE vt0.c0 COLLATE NOCASE END CROSS JOIN t0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END AS INTEGER) ORDER BY (((CAST(vt0.c0 AS TEXT), ((t0.c0)>(rt0.c2)), CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END))<=((rt0.c2 COLLATE BINARY, NULLIF(vt0.c0, rt0.c3), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(NULL))))) DESC  NULLS LAST, (((rt0.c3 IN ())) BETWEEN (((((v0.c0)AND(rt0.c3)))OR(t0.c0))) AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c3 END)) DESC);
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN rt0 ON CASE WHEN ((((t0.c0)OR(rt0.c1)))AND(rt0.c2)) THEN (- (vt0.c1)) ELSE vt0.c0 COLLATE NOCASE END CROSS JOIN t0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END AS INTEGER) WHERE (((rt0.c2 COLLATE RTRIM)LIKE(SQLITE_SOURCE_ID()))) ORDER BY (((CAST(vt0.c0 AS TEXT), ((t0.c0)>(rt0.c2)), CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END))<=((rt0.c2 COLLATE BINARY, NULLIF(vt0.c0, rt0.c3), ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(NULL))))) DESC  NULLS LAST, (((rt0.c3 IN ())) BETWEEN (((((v0.c0)AND(rt0.c3)))OR(t0.c0))) AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c3 END)) DESC;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND (((rt0.c0 IN (t0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND (((rt0.c0 IN (t0.c0, rt0.c1)))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND (((rt0.c0 IN (t0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND (((rt0.c0 IN (t0.c0, rt0.c1)))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND (((rt0.c0 IN (t0.c0, rt0.c1))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(0.022303026289463457 AS REAL)) NOT NULL)) ORDER BY JULIANDAY(rt0.c1, vt0.c1, rt0.c3) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.022303026289463457 AS REAL)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY JULIANDAY(rt0.c1, vt0.c1, rt0.c3) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(0.022303026289463457 AS REAL)) NOT NULL)) ORDER BY JULIANDAY(rt0.c1, vt0.c1, rt0.c3) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.022303026289463457 AS REAL)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY JULIANDAY(rt0.c1, vt0.c1, rt0.c3) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(0.022303026289463457 AS REAL)) NOT NULL)) ORDER BY JULIANDAY(rt0.c1, vt0.c1, rt0.c3) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((- (rt0.c2)))) AND (((- (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((- (rt0.c2)))) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((- (rt0.c2)))) AND (((- (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((- (rt0.c2)))) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((- (rt0.c2)))) AND (((- (rt0.c1))))));
SELECT * FROM t0, vt0, v0, rt0 WHERE (rt0.c0) ORDER BY (('0.9294640896253931')<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST, ((rt0.c1 COLLATE BINARY) BETWEEN ((~ (rt0.c3))) AND (0.9048384874055428))  NULLS LAST, CAST(((rt0.c0)<=(0.031198321856583888)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, vt0, v0, rt0 ORDER BY (('0.9294640896253931')<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST, ((rt0.c1 COLLATE BINARY) BETWEEN ((~ (rt0.c3))) AND (0.9048384874055428))  NULLS LAST, CAST(((rt0.c0)<=(0.031198321856583888)) AS BLOB)  NULLS FIRST);
SELECT * FROM t0, vt0, v0, rt0 WHERE (rt0.c0) ORDER BY (('0.9294640896253931')<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST, ((rt0.c1 COLLATE BINARY) BETWEEN ((~ (rt0.c3))) AND (0.9048384874055428))  NULLS LAST, CAST(((rt0.c0)<=(0.031198321856583888)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, vt0, v0, rt0 ORDER BY (('0.9294640896253931')<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST, ((rt0.c1 COLLATE BINARY) BETWEEN ((~ (rt0.c3))) AND (0.9048384874055428))  NULLS LAST, CAST(((rt0.c0)<=(0.031198321856583888)) AS BLOB)  NULLS FIRST);
SELECT * FROM t0, vt0, v0, rt0 WHERE (rt0.c0) ORDER BY (('0.9294640896253931')<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST, ((rt0.c1 COLLATE BINARY) BETWEEN ((~ (rt0.c3))) AND (0.9048384874055428))  NULLS LAST, CAST(((rt0.c0)<=(0.031198321856583888)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (CAST(0X5351c2dd AS NUMERIC)) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) BETWEEN (CAST(0x5351c2dd AS NUMERIC)) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (CAST(0X5351c2dd AS NUMERIC)) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) BETWEEN (CAST(0x5351c2dd AS NUMERIC)) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (CAST(0X5351c2dd AS NUMERIC)) AND (v0.c0)));
SELECT ALL * FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (((- ('1274864908')))LIKE(CASE WHEN vt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)) WHERE (UNLIKELY(DISTINCT ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) ORDER BY load_extension((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) IS TRUE)  as count FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (((- ('1274864908')))LIKE(CASE WHEN vt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)) ORDER BY load_extension((v0.c0 IN ())));
SELECT ALL * FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (((- ('1274864908')))LIKE(CASE WHEN vt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)) WHERE (UNLIKELY(DISTINCT ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) ORDER BY load_extension((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) IS TRUE)  as count FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (((- ('1274864908')))LIKE(CASE WHEN vt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)) ORDER BY load_extension((v0.c0 IN ())));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) ORDER BY CASE ((vt0.c1)<=(vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)<=(vt0.c1)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)<=(vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)<=(vt0.c1)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) ORDER BY CASE ((vt0.c1)<=(vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)<=(vt0.c1)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)<=(vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)<=(vt0.c1)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) ORDER BY CASE ((vt0.c1)<=(vt0.c1))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)<=(vt0.c1)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(NULL)))OR(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(NULL)))OR(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(NULL)))OR(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(NULL)))OR(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(NULL)))OR(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN v0 ON ((CAST(x'' AS REAL))<(CAST(rt0.c0 AS NUMERIC))) WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN IFNULL(DISTINCT rt0.c1, rt0.c1) THEN rt0.c1 COLLATE BINARY END) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY DESC  NULLS LAST, ((CASE WHEN rt0.c3 THEN v0.c0 END) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS BLOB)  WHEN IFNULL(DISTINCT rt0.c1, rt0.c1) THEN rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM t0, rt0 INNER JOIN v0 ON ((CAST(x'' AS REAL))<(CAST(rt0.c0 AS NUMERIC))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY DESC  NULLS LAST, ((CASE WHEN rt0.c3 THEN v0.c0 END) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN v0 ON ((CAST(x'' AS REAL))<(CAST(rt0.c0 AS NUMERIC))) WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN IFNULL(DISTINCT rt0.c1, rt0.c1) THEN rt0.c1 COLLATE BINARY END) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY DESC  NULLS LAST, ((CASE WHEN rt0.c3 THEN v0.c0 END) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS BLOB)  WHEN IFNULL(DISTINCT rt0.c1, rt0.c1) THEN rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM t0, rt0 INNER JOIN v0 ON ((CAST(x'' AS REAL))<(CAST(rt0.c0 AS NUMERIC))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY DESC  NULLS LAST, ((CASE WHEN rt0.c3 THEN v0.c0 END) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN v0 ON ((CAST(x'' AS REAL))<(CAST(rt0.c0 AS NUMERIC))) WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN IFNULL(DISTINCT rt0.c1, rt0.c1) THEN rt0.c1 COLLATE BINARY END) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY DESC  NULLS LAST, ((CASE WHEN rt0.c3 THEN v0.c0 END) IS FALSE) ASC;
SELECT ALL * FROM v0, t0, vt0, rt0 WHERE (NULL) ORDER BY ((NULL) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY ((NULL) NOT NULL));
SELECT ALL * FROM v0, t0, vt0, rt0 WHERE (NULL) ORDER BY ((NULL) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY ((NULL) NOT NULL));
SELECT ALL * FROM v0, t0, vt0, rt0 WHERE (NULL) ORDER BY ((NULL) NOT NULL);
SELECT COUNT(*) FROM v0 WHERE (((('197572251', v0.c0, v0.c0, '-1606694889', v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC), IFNULL(v0.c0, v0.c0), v0.c0, CHANGES(), ((v0.c0) IS FALSE))) AND ((((v0.c0)GLOB(v0.c0)), CASE NULL  WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0)), ((v0.c0) NOTNULL), ((v0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((('197572251', v0.c0, v0.c0, '-1606694889', v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC), IFNULL(v0.c0, v0.c0), v0.c0, CHANGES(), ((v0.c0) IS FALSE))) AND ((((v0.c0)GLOB(v0.c0)), CASE NULL  WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0)), ((v0.c0) NOTNULL), ((v0.c0) ISNULL))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((('197572251', v0.c0, v0.c0, '-1606694889', v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC), IFNULL(v0.c0, v0.c0), v0.c0, CHANGES(), ((v0.c0) IS FALSE))) AND ((((v0.c0)GLOB(v0.c0)), CASE NULL  WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0)), ((v0.c0) NOTNULL), ((v0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((('197572251', v0.c0, v0.c0, '-1606694889', v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC), IFNULL(v0.c0, v0.c0), v0.c0, CHANGES(), ((v0.c0) IS FALSE))) AND ((((v0.c0)GLOB(v0.c0)), CASE NULL  WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0)), ((v0.c0) NOTNULL), ((v0.c0) ISNULL))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((('197572251', v0.c0, v0.c0, '-1606694889', v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC), IFNULL(v0.c0, v0.c0), v0.c0, CHANGES(), ((v0.c0) IS FALSE))) AND ((((v0.c0)GLOB(v0.c0)), CASE NULL  WHEN v0.c0 THEN v0.c0 END, (v0.c0 IN (v0.c0)), ((v0.c0) NOTNULL), ((v0.c0) ISNULL)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON TRIM(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c0))) FULL OUTER JOIN rt0 ON (CAST(v0.c0 AS INTEGER) IN ()) WHERE ((rt0.c2 COLLATE NOCASE IN ())) ORDER BY (((rt0.c1)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((((t0.c0))!=((rt0.c3)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON TRIM(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c0))) FULL OUTER JOIN rt0 ON (CAST(v0.c0 AS INTEGER) IN ()) ORDER BY (((rt0.c1)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((((t0.c0))!=((rt0.c3)))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON TRIM(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c0))) FULL OUTER JOIN rt0 ON (CAST(v0.c0 AS INTEGER) IN ()) WHERE ((rt0.c2 COLLATE NOCASE IN ())) ORDER BY (((rt0.c1)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((((t0.c0))!=((rt0.c3)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON TRIM(((rt0.c2) NOT BETWEEN (rt0.c3) AND (v0.c0))) FULL OUTER JOIN rt0 ON (CAST(v0.c0 AS INTEGER) IN ()) ORDER BY (((rt0.c1)) NOT BETWEEN (((rt0.c0 IN ()))) AND (((((t0.c0))!=((rt0.c3)))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED, v0 WHERE ((((TRIM(DISTINCT rt0.c0, vt0.c0), ((((rt0.c0)OR(0xffffffffcbeabc34)))OR(v0.c0)), 0x4f886ff0, x'', rt0.c1 COLLATE NOCASE))=((rt0.c2, CAST(rt0.c2 AS BLOB), (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))), rt0.c0, (rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(DISTINCT rt0.c0, vt0.c0), ((((rt0.c0)OR(0Xffffffffcbeabc34)))OR(v0.c0)), 0x4f886ff0, x'', rt0.c1 COLLATE NOCASE))=((rt0.c2, CAST(rt0.c2 AS BLOB), (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))), rt0.c0, (rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED, v0 WHERE ((((TRIM(DISTINCT rt0.c0, vt0.c0), ((((rt0.c0)OR(0xffffffffcbeabc34)))OR(v0.c0)), 0x4f886ff0, x'', rt0.c1 COLLATE NOCASE))=((rt0.c2, CAST(rt0.c2 AS BLOB), (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))), rt0.c0, (rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(DISTINCT rt0.c0, vt0.c0), ((((rt0.c0)OR(0Xffffffffcbeabc34)))OR(v0.c0)), 0x4f886ff0, x'', rt0.c1 COLLATE NOCASE))=((rt0.c2, CAST(rt0.c2 AS BLOB), (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))), rt0.c0, (rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED, v0 WHERE ((((TRIM(DISTINCT rt0.c0, vt0.c0), ((((rt0.c0)OR(0xffffffffcbeabc34)))OR(v0.c0)), 0x4f886ff0, x'', rt0.c1 COLLATE NOCASE))=((rt0.c2, CAST(rt0.c2 AS BLOB), (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))), rt0.c0, (rt0.c2 IN ())))));
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) NOT BETWEEN (0.3523026487299755) AND (rt0.c0)) THEN rt0.c3 COLLATE BINARY ELSE (((rt0.c0, vt0.c0, vt0.c1, v0.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3, t0.c0, v0.c0)) AND ((NULL, rt0.c1, 0.8301972338829657, '1330476007', v0.c0))) END) ORDER BY (((+ (rt0.c0)))LIKE(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) NOT BETWEEN (0.3523026487299755) AND (rt0.c0)) THEN rt0.c3 COLLATE BINARY ELSE (((rt0.c0, vt0.c0, vt0.c1, v0.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3, t0.c0, v0.c0)) AND ((NULL, rt0.c1, 0.8301972338829657, '1330476007', v0.c0))) END) IS TRUE)  as count FROM v0, vt0, t0, rt0 ORDER BY (((+ (rt0.c0)))LIKE(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) NOT BETWEEN (0.3523026487299755) AND (rt0.c0)) THEN rt0.c3 COLLATE BINARY ELSE (((rt0.c0, vt0.c0, vt0.c1, v0.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3, t0.c0, v0.c0)) AND ((NULL, rt0.c1, 0.8301972338829657, '1330476007', v0.c0))) END) ORDER BY (((+ (rt0.c0)))LIKE(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) NOT BETWEEN (0.3523026487299755) AND (rt0.c0)) THEN rt0.c3 COLLATE BINARY ELSE (((rt0.c0, vt0.c0, vt0.c1, v0.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3, t0.c0, v0.c0)) AND ((NULL, rt0.c1, 0.8301972338829657, '1330476007', v0.c0))) END) IS TRUE)  as count FROM v0, vt0, t0, rt0 ORDER BY (((+ (rt0.c0)))LIKE(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) NOT BETWEEN (0.3523026487299755) AND (rt0.c0)) THEN rt0.c3 COLLATE BINARY ELSE (((rt0.c0, vt0.c0, vt0.c1, v0.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3, t0.c0, v0.c0)) AND ((NULL, rt0.c1, 0.8301972338829657, '1330476007', v0.c0))) END) ORDER BY (((+ (rt0.c0)))LIKE(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) ISNULL))AND(CAST(rt0.c1 AS INTEGER))))AND(0.4406391504663153)))OR((('588866296') BETWEEN (rt0.c1) AND (rt0.c3)))))AND((((rt0.c2))>((rt0.c3)))))) ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))))=((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) ISNULL))AND(CAST(rt0.c1 AS INTEGER))))AND(0.4406391504663153)))OR((('588866296') BETWEEN (rt0.c1) AND (rt0.c3)))))AND((((rt0.c2))>((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))))=((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) ISNULL))AND(CAST(rt0.c1 AS INTEGER))))AND(0.4406391504663153)))OR((('588866296') BETWEEN (rt0.c1) AND (rt0.c3)))))AND((((rt0.c2))>((rt0.c3)))))) ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))))=((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) ISNULL))AND(CAST(rt0.c1 AS INTEGER))))AND(0.4406391504663153)))OR((('588866296') BETWEEN (rt0.c1) AND (rt0.c3)))))AND((((rt0.c2))>((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))))=((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) ISNULL))AND(CAST(rt0.c1 AS INTEGER))))AND(0.4406391504663153)))OR((('588866296') BETWEEN (rt0.c1) AND (rt0.c3)))))AND((((rt0.c2))>((rt0.c3)))))) ORDER BY (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))))=((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LTRIM(((vt0.c1)IS(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c1)IS(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LTRIM(((vt0.c1)IS(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c1)IS(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LTRIM(((vt0.c1)IS(vt0.c1))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((vt0.c0))<=((rt0.c1)))))<=((CAST(rt0.c3 AS REAL))))) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND (((((vt0.c1)AND(rt0.c3)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0))<=((rt0.c1)))))<=((CAST(rt0.c3 AS REAL))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND (((((vt0.c1)AND(rt0.c3)))OR(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((vt0.c0))<=((rt0.c1)))))<=((CAST(rt0.c3 AS REAL))))) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND (((((vt0.c1)AND(rt0.c3)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0))<=((rt0.c1)))))<=((CAST(rt0.c3 AS REAL))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND (((((vt0.c1)AND(rt0.c3)))OR(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((vt0.c0))<=((rt0.c1)))))<=((CAST(rt0.c3 AS REAL))))) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) AND (((((vt0.c1)AND(rt0.c3)))OR(rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON rt0.c2 LEFT OUTER JOIN t0 ON LAST_INSERT_ROWID() WHERE (((0.5843586018538293)%((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((0.5843586018538293)%((v0.c0 IN ())))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON rt0.c2 LEFT OUTER JOIN t0 ON LAST_INSERT_ROWID());
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON rt0.c2 LEFT OUTER JOIN t0 ON LAST_INSERT_ROWID() WHERE (((0.5843586018538293)%((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((0.5843586018538293)%((v0.c0 IN ())))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON rt0.c2 LEFT OUTER JOIN t0 ON LAST_INSERT_ROWID());
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON rt0.c2 LEFT OUTER JOIN t0 ON LAST_INSERT_ROWID() WHERE (((0.5843586018538293)%((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((vt0.c0)=(-768834890)))|(((t0.c0)|(v0.c0))))) ORDER BY ((((((vt0.c0)AND(x'0a7d')))AND(vt0.c0)))*(CAST(vt0.c1 AS REAL))), LAST_INSERT_ROWID() DESC  NULLS LAST, (((vt0.c1))=(((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(-768834890)))|(((t0.c0)|(v0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((((vt0.c0)AND(x'0a7d')))AND(vt0.c0)))*(CAST(vt0.c1 AS REAL))), LAST_INSERT_ROWID() DESC  NULLS LAST, (((vt0.c1))=(((- (v0.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((vt0.c0)=(-768834890)))|(((t0.c0)|(v0.c0))))) ORDER BY ((((((vt0.c0)AND(x'0a7d')))AND(vt0.c0)))*(CAST(vt0.c1 AS REAL))), LAST_INSERT_ROWID() DESC  NULLS LAST, (((vt0.c1))=(((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(-768834890)))|(((t0.c0)|(v0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((((vt0.c0)AND(x'0a7d')))AND(vt0.c0)))*(CAST(vt0.c1 AS REAL))), LAST_INSERT_ROWID() DESC  NULLS LAST, (((vt0.c1))=(((- (v0.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((vt0.c0)=(-768834890)))|(((t0.c0)|(v0.c0))))) ORDER BY ((((((vt0.c0)AND(x'0a7d')))AND(vt0.c0)))*(CAST(vt0.c1 AS REAL))), LAST_INSERT_ROWID() DESC  NULLS LAST, (((vt0.c1))=(((- (v0.c0)))));
SELECT * FROM t0 WHERE (0.27616009491043536 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((0.27616009491043536 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0.27616009491043536 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((0.27616009491043536 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0.27616009491043536 COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY WHERE ((((((+ (0.8476713465272925)))AND(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 END))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (0.8476713465272925)))AND(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY WHERE ((((((+ (0.8476713465272925)))AND(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 END))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (0.8476713465272925)))AND(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY WHERE ((((((+ (0.8476713465272925)))AND(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 END))) ORDER BY vt0.c1  NULLS LAST;
SELECT * FROM t0 WHERE (((588866296) BETWEEN ((((t0.c0))!=((t0.c0)))) AND (0.21825063652185683))) ORDER BY ((- (t0.c0)) IN ()) DESC  NULLS LAST, CAST(((0.21196888736130426) NOT NULL) AS BLOB)  NULLS LAST, ((t0.c0)<<(CASE WHEN t0.c0 THEN t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((588866296) BETWEEN ((((t0.c0))<>((t0.c0)))) AND (0.21825063652185683))) IS TRUE)  as count FROM t0 ORDER BY ((- (t0.c0)) IN ()) DESC  NULLS LAST, CAST(((0.21196888736130426) NOT NULL) AS BLOB)  NULLS LAST, ((t0.c0)<<(CASE WHEN t0.c0 THEN t0.c0 END)) DESC);
SELECT * FROM t0 WHERE (((588866296) BETWEEN ((((t0.c0))!=((t0.c0)))) AND (0.21825063652185683))) ORDER BY ((- (t0.c0)) IN ()) DESC  NULLS LAST, CAST(((0.21196888736130426) NOT NULL) AS BLOB)  NULLS LAST, ((t0.c0)<<(CASE WHEN t0.c0 THEN t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((588866296) BETWEEN ((((t0.c0))<>((t0.c0)))) AND (0.21825063652185683))) IS TRUE)  as count FROM t0 ORDER BY ((- (t0.c0)) IN ()) DESC  NULLS LAST, CAST(((0.21196888736130426) NOT NULL) AS BLOB)  NULLS LAST, ((t0.c0)<<(CASE WHEN t0.c0 THEN t0.c0 END)) DESC);
SELECT * FROM t0 WHERE (((588866296) BETWEEN ((((t0.c0))!=((t0.c0)))) AND (0.21825063652185683))) ORDER BY ((- (t0.c0)) IN ()) DESC  NULLS LAST, CAST(((0.21196888736130426) NOT NULL) AS BLOB)  NULLS LAST, ((t0.c0)<<(CASE WHEN t0.c0 THEN t0.c0 END)) DESC;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY CAST((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) AS INTEGER), (((NULL))>=((((vt0.c0)<=(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) AS INTEGER), (((NULL))>=((((vt0.c0)<=(vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY CAST((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) AS INTEGER), (((NULL))>=((((vt0.c0)<=(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) AS INTEGER), (((NULL))>=((((vt0.c0)<=(vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY CAST((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) AS INTEGER), (((NULL))>=((((vt0.c0)<=(vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), ((((((((x'f189')AND(rt0.c2)))OR(NULL)))OR(rt0.c3)))OR(rt0.c2))))=(((NOT (rt0.c1)), NULL, rt0.c2 COLLATE RTRIM)))) ORDER BY HEX(((rt0.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), ((((((((x'f189')AND(rt0.c2)))OR(NULL)))OR(rt0.c3)))OR(rt0.c2))))=(((NOT (rt0.c1)), NULL, rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, v0 ORDER BY HEX(((rt0.c3) IS TRUE)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), ((((((((x'f189')AND(rt0.c2)))OR(NULL)))OR(rt0.c3)))OR(rt0.c2))))=(((NOT (rt0.c1)), NULL, rt0.c2 COLLATE RTRIM)))) ORDER BY HEX(((rt0.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), ((((((((x'f189')AND(rt0.c2)))OR(NULL)))OR(rt0.c3)))OR(rt0.c2))))=(((NOT (rt0.c1)), NULL, rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, v0 ORDER BY HEX(((rt0.c3) IS TRUE)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0, ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), ((((((((x'f189')AND(rt0.c2)))OR(NULL)))OR(rt0.c3)))OR(rt0.c2))))=(((NOT (rt0.c1)), NULL, rt0.c2 COLLATE RTRIM)))) ORDER BY HEX(((rt0.c3) IS TRUE));
SELECT * FROM t0, v0, rt0, vt0 WHERE ((((- (vt0.c0)))IS NOT((+ (rt0.c2))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))IS NOT((+ (rt0.c2))))) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY v0.c0);
SELECT * FROM t0, v0, rt0, vt0 WHERE ((((- (vt0.c0)))IS NOT((+ (rt0.c2))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))IS NOT((+ (rt0.c2))))) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY v0.c0);
SELECT * FROM t0, v0, rt0, vt0 WHERE ((((- (vt0.c0)))IS NOT((+ (rt0.c2))))) ORDER BY v0.c0;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c1 IN (NULL)), 0.48676741866525963));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (vt0.c1 IN (NULL)), 0.48676741866525963)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c1 IN (NULL)), 0.48676741866525963));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (vt0.c1 IN (NULL)), 0.48676741866525963)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c1 IN (NULL)), 0.48676741866525963));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)AND((('0.7156690735086467') BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (((((vt0.c1)<>(rt0.c3))) BETWEEN ((+ (rt0.c2))) AND (((((((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<>(rt0.c3))) BETWEEN ((+ (rt0.c2))) AND (((((((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)AND((('0.7156690735086467') BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)AND((('0.7156690735086467') BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (((((vt0.c1)<>(rt0.c3))) BETWEEN ((+ (rt0.c2))) AND (((((((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<>(rt0.c3))) BETWEEN ((+ (rt0.c2))) AND (((((((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)AND((('0.7156690735086467') BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)AND((('0.7156690735086467') BETWEEN (vt0.c0) AND (rt0.c2)))))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (((((vt0.c1)<>(rt0.c3))) BETWEEN ((+ (rt0.c2))) AND (((((((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((rt0.c3)<<(rt0.c1))) IS TRUE) WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((rt0.c3)<<(rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((rt0.c3)<<(rt0.c1))) IS TRUE) WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((rt0.c3)<<(rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((rt0.c3)<<(rt0.c1))) IS TRUE) WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))) AND (rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS TEXT);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((CAST(t0.c0 AS INTEGER)) BETWEEN (((t0.c0) IS FALSE)) AND (((vt0.c1)GLOB(vt0.c1))))) ORDER BY ((((CASE WHEN vt0.c1 THEN t0.c0 END)AND(((v0.c0)IS(v0.c0)))))OR(TYPEOF(DISTINCT v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) BETWEEN (((t0.c0) IS FALSE)) AND (((vt0.c1)GLOB(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((CASE WHEN vt0.c1 THEN t0.c0 END)AND(((v0.c0)IS(v0.c0)))))OR(TYPEOF(DISTINCT v0.c0))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((CAST(t0.c0 AS INTEGER)) BETWEEN (((t0.c0) IS FALSE)) AND (((vt0.c1)GLOB(vt0.c1))))) ORDER BY ((((CASE WHEN vt0.c1 THEN t0.c0 END)AND(((v0.c0)IS(v0.c0)))))OR(TYPEOF(DISTINCT v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) BETWEEN (((t0.c0) IS FALSE)) AND (((vt0.c1)GLOB(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((CASE WHEN vt0.c1 THEN t0.c0 END)AND(((v0.c0)IS(v0.c0)))))OR(TYPEOF(DISTINCT v0.c0))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((CAST(t0.c0 AS INTEGER)) BETWEEN (((t0.c0) IS FALSE)) AND (((vt0.c1)GLOB(vt0.c1))))) ORDER BY ((((CASE WHEN vt0.c1 THEN t0.c0 END)AND(((v0.c0)IS(v0.c0)))))OR(TYPEOF(DISTINCT v0.c0))) ASC;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((CASE WHEN '1475874652' THEN vt0.c0 ELSE v0.c0 END)-((vt0.c1 IN ())))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST, '728165737' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '1475874652' THEN vt0.c0 ELSE v0.c0 END)-((vt0.c1 IN ())))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST, '728165737' ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((CASE WHEN '1475874652' THEN vt0.c0 ELSE v0.c0 END)-((vt0.c1 IN ())))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST, '728165737' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '1475874652' THEN vt0.c0 ELSE v0.c0 END)-((vt0.c1 IN ())))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST, '728165737' ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((CASE WHEN '1475874652' THEN vt0.c0 ELSE v0.c0 END)-((vt0.c1 IN ())))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST, '728165737' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 CROSS JOIN t0 ON CAST((vt0.c1 IN ()) AS TEXT) WHERE (((((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((rt0.c1 IN ()))))OR(CAST(v0.c0 AS NUMERIC)))) ORDER BY ((rt0.c2)IS NOT((((x'')) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((rt0.c1 IN ()))))OR(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0, vt0 CROSS JOIN t0 ON CAST((vt0.c1 IN ()) AS TEXT) ORDER BY ((rt0.c2)IS NOT((((x'')) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 CROSS JOIN t0 ON CAST((vt0.c1 IN ()) AS TEXT) WHERE (((((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((rt0.c1 IN ()))))OR(CAST(v0.c0 AS NUMERIC)))) ORDER BY ((rt0.c2)IS NOT((((x'')) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((rt0.c1 IN ()))))OR(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0, vt0 CROSS JOIN t0 ON CAST((vt0.c1 IN ()) AS TEXT) ORDER BY ((rt0.c2)IS NOT((((x'')) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 CROSS JOIN t0 ON CAST((vt0.c1 IN ()) AS TEXT) WHERE (((((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((rt0.c1 IN ()))))OR(CAST(v0.c0 AS NUMERIC)))) ORDER BY ((rt0.c2)IS NOT((((x'')) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) DESC  NULLS LAST;
SELECT * FROM v0, vt0, t0 CROSS JOIN rt0 ON (+ (((x'') ISNULL))) WHERE ((((rt0.c1, t0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB), ((t0.c0) ISNULL), (((v0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, v0.c0)) AND ((vt0.c1, t0.c0, NULL))), json_valid(rt0.c0), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((((rt0.c0) BETWEEN (vt0.c1) AND (v0.c0)), rt0.c3 COLLATE RTRIM, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c2))!=((vt0.c0))), ((rt0.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, t0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB), ((t0.c0) ISNULL), (((v0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, v0.c0)) AND ((vt0.c1, t0.c0, NULL))), json_valid(rt0.c0), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((((rt0.c0) BETWEEN (vt0.c1) AND (v0.c0)), rt0.c3 COLLATE RTRIM, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c2))<>((vt0.c0))), ((rt0.c1) IS FALSE))))) IS TRUE)  as count FROM v0, vt0, t0 CROSS JOIN rt0 ON (+ (((x'') ISNULL))));
SELECT * FROM v0, vt0, t0 CROSS JOIN rt0 ON (+ (((x'') ISNULL))) WHERE ((((rt0.c1, t0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB), ((t0.c0) ISNULL), (((v0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, v0.c0)) AND ((vt0.c1, t0.c0, NULL))), json_valid(rt0.c0), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((((rt0.c0) BETWEEN (vt0.c1) AND (v0.c0)), rt0.c3 COLLATE RTRIM, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c2))!=((vt0.c0))), ((rt0.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, t0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB), ((t0.c0) ISNULL), (((v0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, v0.c0)) AND ((vt0.c1, t0.c0, NULL))), json_valid(rt0.c0), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((((rt0.c0) BETWEEN (vt0.c1) AND (v0.c0)), rt0.c3 COLLATE RTRIM, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c2))<>((vt0.c0))), ((rt0.c1) IS FALSE))))) IS TRUE)  as count FROM v0, vt0, t0 CROSS JOIN rt0 ON (+ (((x'') ISNULL))));
SELECT * FROM v0, vt0, t0 CROSS JOIN rt0 ON (+ (((x'') ISNULL))) WHERE ((((rt0.c1, t0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB), ((t0.c0) ISNULL), (((v0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, v0.c0)) AND ((vt0.c1, t0.c0, NULL))), json_valid(rt0.c0), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((((rt0.c0) BETWEEN (vt0.c1) AND (v0.c0)), rt0.c3 COLLATE RTRIM, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c2))!=((vt0.c0))), ((rt0.c1) IS FALSE)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON json_object(DATE(rt0.c3, rt0.c1, vt0.c1), CASE ''  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) INNER JOIN v0 ON ((((CAST(rt0.c3 AS INTEGER))AND((+ ('-1021488491')))))AND(((vt0.c1)>(rt0.c3)))) WHERE (CAST((('SCBOVaW') IS TRUE) AS REAL)) ORDER BY (((- (rt0.c1)))||(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE 0xffffffff947a3b05 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('SCBOVaW') IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON json_object(DATE(rt0.c3, rt0.c1, vt0.c1), CASE ''  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) INNER JOIN v0 ON ((((CAST(rt0.c3 AS INTEGER))AND((+ ('-1021488491')))))AND(((vt0.c1)>(rt0.c3)))) ORDER BY (((- (rt0.c1)))||(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE 0xffffffff947a3b05 END)) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON json_object(DATE(rt0.c3, rt0.c1, vt0.c1), CASE ''  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) INNER JOIN v0 ON ((((CAST(rt0.c3 AS INTEGER))AND((+ ('-1021488491')))))AND(((vt0.c1)>(rt0.c3)))) WHERE (CAST((('SCBOVaW') IS TRUE) AS REAL)) ORDER BY (((- (rt0.c1)))||(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE 0xffffffff947a3b05 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('SCBOVaW') IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON json_object(DATE(rt0.c3, rt0.c1, vt0.c1), CASE ''  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END) INNER JOIN v0 ON ((((CAST(rt0.c3 AS INTEGER))AND((+ ('-1021488491')))))AND(((vt0.c1)>(rt0.c3)))) ORDER BY (((- (rt0.c1)))||(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE 0xffffffff947a3b05 END)) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) ORDER BY CAST((~ (rt0.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST((~ (rt0.c1)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) ORDER BY CAST((~ (rt0.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST((~ (rt0.c1)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) IN ())) ORDER BY CAST((~ (rt0.c1)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0, v0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOT NULL)) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOT NULL)) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0, vt0, v0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, v0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOT NULL)) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOT NULL)) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0, vt0, v0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, v0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOT NULL)) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (0.968718716157309) ORDER BY (((NOT (v0.c0)))|(CAST(v0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.968718716157309) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))|(CAST(v0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (0.968718716157309) ORDER BY (((NOT (v0.c0)))|(CAST(v0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.968718716157309) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))|(CAST(v0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (0.968718716157309) ORDER BY (((NOT (v0.c0)))|(CAST(v0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) WHERE ((((((((((((t0.c0)AND(vt0.c1)))AND(t0.c0)))AND(vt0.c1)))AND(vt0.c0))))!=((COALESCE(vt0.c0, t0.c0, t0.c0, 0.5116538818771242)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c0)AND(vt0.c1)))AND(t0.c0)))AND(vt0.c1)))AND(vt0.c0))))<>((COALESCE(vt0.c0, t0.c0, t0.c0, 0.5116538818771242))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) WHERE ((((((((((((t0.c0)AND(vt0.c1)))AND(t0.c0)))AND(vt0.c1)))AND(vt0.c0))))!=((COALESCE(vt0.c0, t0.c0, t0.c0, 0.5116538818771242)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c0)AND(vt0.c1)))AND(t0.c0)))AND(vt0.c1)))AND(vt0.c0))))<>((COALESCE(vt0.c0, t0.c0, t0.c0, 0.5116538818771242))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) WHERE ((((((((((((t0.c0)AND(vt0.c1)))AND(t0.c0)))AND(vt0.c1)))AND(vt0.c0))))!=((COALESCE(vt0.c0, t0.c0, t0.c0, 0.5116538818771242)))));
SELECT * FROM vt0, t0, v0, rt0 WHERE (((v0.c0)GLOB(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)GLOB(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, v0, rt0);
SELECT * FROM vt0, t0, v0, rt0 WHERE (((v0.c0)GLOB(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)GLOB(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, v0, rt0);
SELECT * FROM vt0, t0, v0, rt0 WHERE (((v0.c0)GLOB(rt0.c3)) COLLATE BINARY);
SELECT * FROM t0, v0, vt0, rt0 WHERE (((((rt0.c3)<(rt0.c0))) ISNULL)) ORDER BY ((((ABS(rt0.c1))AND((vt0.c1 IN ()))))OR(((NULL)==(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<(rt0.c0))) ISNULL)) IS TRUE)  as count FROM t0, v0, vt0, rt0 ORDER BY ((((ABS(rt0.c1))AND((vt0.c1 IN ()))))OR(((NULL)==(vt0.c1)))));
SELECT * FROM t0, v0, vt0, rt0 WHERE (((((rt0.c3)<(rt0.c0))) ISNULL)) ORDER BY ((((ABS(rt0.c1))AND((vt0.c1 IN ()))))OR(((NULL)==(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<(rt0.c0))) ISNULL)) IS TRUE)  as count FROM t0, v0, vt0, rt0 ORDER BY ((((ABS(rt0.c1))AND((vt0.c1 IN ()))))OR(((NULL)==(vt0.c1)))));
SELECT * FROM t0, v0, vt0, rt0 WHERE (((((rt0.c3)<(rt0.c0))) ISNULL)) ORDER BY ((((ABS(rt0.c1))AND((vt0.c1 IN ()))))OR(((NULL)==(vt0.c1))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (NULL IN ()) LEFT OUTER JOIN rt0 ON 0X231962f8 WHERE (CASE (((rt0.c0))<>((rt0.c2)))  WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN NULL WHEN ((rt0.c2)%(v0.c0)) THEN '~B' COLLATE RTRIM WHEN ((rt0.c3) IS FALSE) THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 COLLATE RTRIM WHEN 0Xffffffffe2714752 THEN ((rt0.c0)||(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c0))!=((rt0.c2)))  WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN NULL WHEN ((rt0.c2)%(v0.c0)) THEN '~B' COLLATE RTRIM WHEN ((rt0.c3) IS FALSE) THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 COLLATE RTRIM WHEN 0Xffffffffe2714752 THEN ((rt0.c0)||(rt0.c3)) END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (NULL IN ()) LEFT OUTER JOIN rt0 ON 0x231962f8);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (NULL IN ()) LEFT OUTER JOIN rt0 ON 0X231962f8 WHERE (CASE (((rt0.c0))<>((rt0.c2)))  WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN NULL WHEN ((rt0.c2)%(v0.c0)) THEN '~B' COLLATE RTRIM WHEN ((rt0.c3) IS FALSE) THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 COLLATE RTRIM WHEN 0Xffffffffe2714752 THEN ((rt0.c0)||(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c0))!=((rt0.c2)))  WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN NULL WHEN ((rt0.c2)%(v0.c0)) THEN '~B' COLLATE RTRIM WHEN ((rt0.c3) IS FALSE) THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 COLLATE RTRIM WHEN 0Xffffffffe2714752 THEN ((rt0.c0)||(rt0.c3)) END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (NULL IN ()) LEFT OUTER JOIN rt0 ON 0x231962f8);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (NULL IN ()) LEFT OUTER JOIN rt0 ON 0X231962f8 WHERE (CASE (((rt0.c0))<>((rt0.c2)))  WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN NULL WHEN ((rt0.c2)%(v0.c0)) THEN '~B' COLLATE RTRIM WHEN ((rt0.c3) IS FALSE) THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 COLLATE RTRIM WHEN 0Xffffffffe2714752 THEN ((rt0.c0)||(rt0.c3)) END);
SELECT COUNT(*) FROM v0, vt0, t0, rt0 WHERE (((((rt0.c2) IS FALSE))<<(CASE v0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))<<(CASE v0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM v0, vt0, t0, rt0);
SELECT COUNT(*) FROM v0, vt0, t0, rt0 WHERE (((((rt0.c2) IS FALSE))<<(CASE v0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))<<(CASE v0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM v0, vt0, t0, rt0);
SELECT COUNT(*) FROM v0, vt0, t0, rt0 WHERE (((((rt0.c2) IS FALSE))<<(CASE v0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 END)));
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CHANGES() THEN ((rt0.c2) IS TRUE) WHEN CAST(t0.c0 AS NUMERIC) THEN 0xffffffff808616dc WHEN ((rt0.c0)*(rt0.c2)) THEN rt0.c0 WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY WHEN IFNULL(NULL, rt0.c1) THEN CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END END) ORDER BY 0.5831889623964246 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CHANGES() THEN ((rt0.c2) IS TRUE) WHEN CAST(t0.c0 AS NUMERIC) THEN 0xffffffff808616dc WHEN ((rt0.c0)*(rt0.c2)) THEN rt0.c0 WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY WHEN IFNULL(NULL, rt0.c1) THEN CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END END) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.5831889623964246 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CHANGES() THEN ((rt0.c2) IS TRUE) WHEN CAST(t0.c0 AS NUMERIC) THEN 0xffffffff808616dc WHEN ((rt0.c0)*(rt0.c2)) THEN rt0.c0 WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY WHEN IFNULL(NULL, rt0.c1) THEN CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END END) ORDER BY 0.5831889623964246 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CHANGES() THEN ((rt0.c2) IS TRUE) WHEN CAST(t0.c0 AS NUMERIC) THEN 0xffffffff808616dc WHEN ((rt0.c0)*(rt0.c2)) THEN rt0.c0 WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY WHEN IFNULL(NULL, rt0.c1) THEN CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END END) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.5831889623964246 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CHANGES() THEN ((rt0.c2) IS TRUE) WHEN CAST(t0.c0 AS NUMERIC) THEN 0xffffffff808616dc WHEN ((rt0.c0)*(rt0.c2)) THEN rt0.c0 WHEN ((t0.c0) IS TRUE) THEN t0.c0 COLLATE BINARY WHEN IFNULL(NULL, rt0.c1) THEN CASE rt0.c3  WHEN t0.c0 THEN rt0.c1 END END) ORDER BY 0.5831889623964246 COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((+ (((((rt0.c2)OR(rt0.c1)))AND(0.6957209851120401))))) ORDER BY ((NULL)||(rt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)OR(rt0.c1)))AND(0.6957209851120401))))) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY ((NULL)||(rt0.c1)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((+ (((((rt0.c2)OR(rt0.c1)))AND(0.6957209851120401))))) ORDER BY ((NULL)||(rt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)OR(rt0.c1)))AND(0.6957209851120401))))) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY ((NULL)||(rt0.c1)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((+ (((((rt0.c2)OR(rt0.c1)))AND(0.6957209851120401))))) ORDER BY ((NULL)||(rt0.c1)) COLLATE BINARY DESC;
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON (((((vt0.c1) IS FALSE)))=((x''))) WHERE ('%z') ORDER BY CASE ((v0.c0)!=(vt0.c0))  WHEN CASE WHEN t0.c0 THEN vt0.c1 END THEN ((((v0.c0)OR(v0.c0)))OR(t0.c0)) END  NULLS FIRST, (((((vt0.c1)|(v0.c0))))<(((- (vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('%z') IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON (((((vt0.c1) IS FALSE)))=((x''))) ORDER BY CASE ((v0.c0)!=(vt0.c0))  WHEN CASE WHEN t0.c0 THEN vt0.c1 END THEN ((((v0.c0)OR(v0.c0)))OR(t0.c0)) END  NULLS FIRST, (((((vt0.c1)|(v0.c0))))<(((- (vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON (((((vt0.c1) IS FALSE)))=((x''))) WHERE ('%z') ORDER BY CASE ((v0.c0)!=(vt0.c0))  WHEN CASE WHEN t0.c0 THEN vt0.c1 END THEN ((((v0.c0)OR(v0.c0)))OR(t0.c0)) END  NULLS FIRST, (((((vt0.c1)|(v0.c0))))<(((- (vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('%z') IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON (((((vt0.c1) IS FALSE)))=((x''))) ORDER BY CASE ((v0.c0)!=(vt0.c0))  WHEN CASE WHEN t0.c0 THEN vt0.c1 END THEN ((((v0.c0)OR(v0.c0)))OR(t0.c0)) END  NULLS FIRST, (((((vt0.c1)|(v0.c0))))<(((- (vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON (((((vt0.c1) IS FALSE)))=((x''))) WHERE ('%z') ORDER BY CASE ((v0.c0)!=(vt0.c0))  WHEN CASE WHEN t0.c0 THEN vt0.c1 END THEN ((((v0.c0)OR(v0.c0)))OR(t0.c0)) END  NULLS FIRST, (((((vt0.c1)|(v0.c0))))<(((- (vt0.c1)))))  NULLS LAST;
SELECT * FROM rt0 WHERE (0X1ca3b1d8);
SELECT SUM(count) FROM (SELECT ALL ((0X1ca3b1d8) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0X1ca3b1d8);
SELECT SUM(count) FROM (SELECT ALL ((0X1ca3b1d8) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0X1ca3b1d8);
SELECT COUNT(*) FROM rt0, t0 WHERE (LTRIM(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((LTRIM(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (LTRIM(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((LTRIM(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (LTRIM(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c3, t0.c0, rt0.c2))>=((t0.c0, t0.c0, x'')))) NOTNULL)) ORDER BY (((rt0.c1)||(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, t0.c0, rt0.c2))>=((t0.c0, t0.c0, x'')))) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c1)||(t0.c0)) IN ()));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c3, t0.c0, rt0.c2))>=((t0.c0, t0.c0, x'')))) NOTNULL)) ORDER BY (((rt0.c1)||(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, t0.c0, rt0.c2))>=((t0.c0, t0.c0, x'')))) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c1)||(t0.c0)) IN ()));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c3, t0.c0, rt0.c2))>=((t0.c0, t0.c0, x'')))) NOTNULL)) ORDER BY (((rt0.c1)||(t0.c0)) IN ());
SELECT * FROM t0, vt0 WHERE ('0J') ORDER BY (((t0.c0)) NOT BETWEEN (((NOT (t0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS FIRST, ((t0.c0)IS(vt0.c1)) COLLATE BINARY DESC, (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))!=(((vt0.c0)>=(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0J') IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c0)) NOT BETWEEN (((NOT (t0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS FIRST, ((t0.c0)IS(vt0.c1)) COLLATE BINARY DESC, (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))!=(((vt0.c0)>=(vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ('0J') ORDER BY (((t0.c0)) NOT BETWEEN (((NOT (t0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS FIRST, ((t0.c0)IS(vt0.c1)) COLLATE BINARY DESC, (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))!=(((vt0.c0)>=(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0J') IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c0)) NOT BETWEEN (((NOT (t0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS FIRST, ((t0.c0)IS(vt0.c1)) COLLATE BINARY DESC, (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))!=(((vt0.c0)>=(vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ('0J') ORDER BY (((t0.c0)) NOT BETWEEN (((NOT (t0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS FIRST, ((t0.c0)IS(vt0.c1)) COLLATE BINARY DESC, (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))!=(((vt0.c0)>=(vt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, v0, t0 WHERE ((- (((vt0.c0)<=(vt0.c1))))) ORDER BY ((((CAST('209128807' AS NUMERIC))AND((((vt0.c1, t0.c0, v0.c0)) NOT BETWEEN ((rt0.c3, v0.c0, v0.c0)) AND ((vt0.c0, '', rt0.c0))))))OR((+ (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY ((((CAST('209128807' AS NUMERIC))AND((((vt0.c1, t0.c0, v0.c0)) NOT BETWEEN ((rt0.c3, v0.c0, v0.c0)) AND ((vt0.c0, '', rt0.c0))))))OR((+ (rt0.c3)))) ASC);
SELECT COUNT(*) FROM rt0, vt0, v0, t0 WHERE ((- (((vt0.c0)<=(vt0.c1))))) ORDER BY ((((CAST('209128807' AS NUMERIC))AND((((vt0.c1, t0.c0, v0.c0)) NOT BETWEEN ((rt0.c3, v0.c0, v0.c0)) AND ((vt0.c0, '', rt0.c0))))))OR((+ (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY ((((CAST('209128807' AS NUMERIC))AND((((vt0.c1, t0.c0, v0.c0)) NOT BETWEEN ((rt0.c3, v0.c0, v0.c0)) AND ((vt0.c0, '', rt0.c0))))))OR((+ (rt0.c3)))) ASC);
SELECT COUNT(*) FROM rt0, vt0, v0, t0 WHERE ((- (((vt0.c0)<=(vt0.c1))))) ORDER BY ((((CAST('209128807' AS NUMERIC))AND((((vt0.c1, t0.c0, v0.c0)) NOT BETWEEN ((rt0.c3, v0.c0, v0.c0)) AND ((vt0.c0, '', rt0.c0))))))OR((+ (rt0.c3)))) ASC;
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE ((((rt0.c1 IN (t0.c0)))*(CAST(t0.c0 AS NUMERIC)))) ORDER BY (((((rt0.c0 IN ()))AND(((v0.c0)>(rt0.c1)))))OR(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (t0.c0)))*(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY (((((rt0.c0 IN ()))AND(((v0.c0)>(rt0.c1)))))OR(rt0.c1)) DESC);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE ((((rt0.c1 IN (t0.c0)))*(CAST(t0.c0 AS NUMERIC)))) ORDER BY (((((rt0.c0 IN ()))AND(((v0.c0)>(rt0.c1)))))OR(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (t0.c0)))*(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0, v0 ORDER BY (((((rt0.c0 IN ()))AND(((v0.c0)>(rt0.c1)))))OR(rt0.c1)) DESC);
SELECT ALL COUNT(*) FROM rt0, t0, v0 WHERE ((((rt0.c1 IN (t0.c0)))*(CAST(t0.c0 AS NUMERIC)))) ORDER BY (((((rt0.c0 IN ()))AND(((v0.c0)>(rt0.c1)))))OR(rt0.c1)) DESC;
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE (((((v0.c0)>=(rt0.c1)))OR(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>=(rt0.c1)))OR(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE (((((v0.c0)>=(rt0.c1)))OR(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>=(rt0.c1)))OR(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE (((((v0.c0)>=(rt0.c1)))OR(CAST(vt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON (((+ (rt0.c0))) ISNULL) CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE)<<((((vt0.c0))==((vt0.c0))))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON (((+ (rt0.c0))) ISNULL) CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE)<<((((vt0.c0))==((vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON (((+ (rt0.c0))) ISNULL) CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE)<<((((vt0.c0))==((vt0.c0))))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON (((+ (rt0.c0))) ISNULL) CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE)<<((((vt0.c0))==((vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON (((+ (rt0.c0))) ISNULL) CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE)<<((((vt0.c0))==((vt0.c0))))) WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM v0, t0, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))>>((((t0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c3, t0.c0)) AND ((rt0.c2, v0.c0, v0.c0))))) WHERE ('R3') ORDER BY ((((((((vt0.c0)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))))AND((((-1.808875469E9))<((rt0.c0))))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))AND(((v0.c0) IS FALSE))) ASC  NULLS FIRST, vt0.c1, (((vt0.c1) NOTNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('R3') IS TRUE)  as count FROM v0, t0, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))>>((((t0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c3, t0.c0)) AND ((rt0.c2, v0.c0, v0.c0))))) ORDER BY ((((((((vt0.c0)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))))AND((((-1.808875469E9))<((rt0.c0))))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))AND(((v0.c0) IS FALSE))) ASC  NULLS FIRST, vt0.c1, (((vt0.c1) NOTNULL) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))>>((((t0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c3, t0.c0)) AND ((rt0.c2, v0.c0, v0.c0))))) WHERE ('R3') ORDER BY ((((((((vt0.c0)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))))AND((((-1.808875469E9))<((rt0.c0))))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))AND(((v0.c0) IS FALSE))) ASC  NULLS FIRST, vt0.c1, (((vt0.c1) NOTNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('R3') IS TRUE)  as count FROM v0, t0, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))>>((((t0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c3, t0.c0)) AND ((rt0.c2, v0.c0, v0.c0))))) ORDER BY ((((((((vt0.c0)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))))AND((((-1.808875469E9))<((rt0.c0))))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))AND(((v0.c0) IS FALSE))) ASC  NULLS FIRST, vt0.c1, (((vt0.c1) NOTNULL) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))>>((((t0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c3, t0.c0)) AND ((rt0.c2, v0.c0, v0.c0))))) WHERE ('R3') ORDER BY ((((((((vt0.c0)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)))))AND((((-1.808875469E9))<((rt0.c0))))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))AND(((v0.c0) IS FALSE))) ASC  NULLS FIRST, vt0.c1, (((vt0.c1) NOTNULL) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))AND((NOT (vt0.c1)))))AND(((vt0.c0)/(vt0.c1)))) ASC  NULLS LAST, COALESCE(DISTINCT CAST(vt0.c0 AS NUMERIC), ((vt0.c0)<<(vt0.c1)), '1397867229', ((vt0.c1)+(vt0.c1)), (((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c1))), vt0.c1 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))AND((NOT (vt0.c1)))))AND(((vt0.c0)/(vt0.c1)))) ASC  NULLS LAST, COALESCE(DISTINCT CAST(vt0.c0 AS NUMERIC), ((vt0.c0)<<(vt0.c1)), '1397867229', ((vt0.c1)+(vt0.c1)), (((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c1))), vt0.c1 COLLATE BINARY) ASC);
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))AND((NOT (vt0.c1)))))AND(((vt0.c0)/(vt0.c1)))) ASC  NULLS LAST, COALESCE(DISTINCT CAST(vt0.c0 AS NUMERIC), ((vt0.c0)<<(vt0.c1)), '1397867229', ((vt0.c1)+(vt0.c1)), (((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c1))), vt0.c1 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))))AND((NOT (vt0.c1)))))AND(((vt0.c0)/(vt0.c1)))) ASC  NULLS LAST, COALESCE(DISTINCT CAST(vt0.c0 AS NUMERIC), ((vt0.c0)<<(vt0.c1)), '1397867229', ((vt0.c1)+(vt0.c1)), (((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c1))), vt0.c1 COLLATE BINARY) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (0.7659819742206652) ORDER BY ((((t0.c0) ISNULL)) BETWEEN (((t0.c0)==(0.5265556465318144))) AND (t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((0.7659819742206652) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) ISNULL)) BETWEEN (((t0.c0)==(0.5265556465318144))) AND (t0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0 WHERE (0.7659819742206652) ORDER BY ((((t0.c0) ISNULL)) BETWEEN (((t0.c0)==(0.5265556465318144))) AND (t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((0.7659819742206652) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) ISNULL)) BETWEEN (((t0.c0)==(0.5265556465318144))) AND (t0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0 WHERE (0.7659819742206652) ORDER BY ((((t0.c0) ISNULL)) BETWEEN (((t0.c0)==(0.5265556465318144))) AND (t0.c0 COLLATE RTRIM));
SELECT ALL * FROM t0, rt0, v0, vt0 WHERE (CASE ((rt0.c3)==(rt0.c3))  WHEN ((rt0.c2)>(vt0.c1)) THEN (v0.c0 IN ()) WHEN '-10838139' THEN LIKELY(rt0.c1) WHEN ((((((((v0.c0)OR(vt0.c1)))AND(t0.c0)))OR(rt0.c0)))AND(vt0.c0)) THEN vt0.c0 ELSE ((vt0.c0)==(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3)==(rt0.c3))  WHEN ((rt0.c2)>(vt0.c1)) THEN (v0.c0 IN ()) WHEN '-10838139' THEN LIKELY(rt0.c1) WHEN ((((((((v0.c0)OR(vt0.c1)))AND(t0.c0)))OR(rt0.c0)))AND(vt0.c0)) THEN vt0.c0 ELSE ((vt0.c0)==(vt0.c0)) END) IS TRUE)  as count FROM t0, rt0, v0, vt0);
SELECT ALL * FROM t0, rt0, v0, vt0 WHERE (CASE ((rt0.c3)==(rt0.c3))  WHEN ((rt0.c2)>(vt0.c1)) THEN (v0.c0 IN ()) WHEN '-10838139' THEN LIKELY(rt0.c1) WHEN ((((((((v0.c0)OR(vt0.c1)))AND(t0.c0)))OR(rt0.c0)))AND(vt0.c0)) THEN vt0.c0 ELSE ((vt0.c0)==(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3)==(rt0.c3))  WHEN ((rt0.c2)>(vt0.c1)) THEN (v0.c0 IN ()) WHEN '-10838139' THEN LIKELY(rt0.c1) WHEN ((((((((v0.c0)OR(vt0.c1)))AND(t0.c0)))OR(rt0.c0)))AND(vt0.c0)) THEN vt0.c0 ELSE ((vt0.c0)==(vt0.c0)) END) IS TRUE)  as count FROM t0, rt0, v0, vt0);
SELECT ALL * FROM t0, rt0, v0, vt0 WHERE (CASE ((rt0.c3)==(rt0.c3))  WHEN ((rt0.c2)>(vt0.c1)) THEN (v0.c0 IN ()) WHEN '-10838139' THEN LIKELY(rt0.c1) WHEN ((((((((v0.c0)OR(vt0.c1)))AND(t0.c0)))OR(rt0.c0)))AND(vt0.c0)) THEN vt0.c0 ELSE ((vt0.c0)==(vt0.c0)) END);
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE (((((vt0.c0)&(vt0.c1)))<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c1)))<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, v0, rt0);
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE (((((vt0.c0)&(vt0.c1)))<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c1)))<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, v0, rt0);
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE (((((vt0.c0)&(vt0.c1)))<=(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0, t0 WHERE (((((vt0.c1)>(vt0.c0)))==(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>(vt0.c0)))=(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, rt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0, t0 WHERE (((((vt0.c1)>(vt0.c0)))==(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>(vt0.c0)))=(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, rt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0, t0 WHERE (((((vt0.c1)>(vt0.c0)))==(((v0.c0) NOT NULL))));
SELECT * FROM rt0 WHERE ((~ ('-1808875469'))) ORDER BY ((((((((((((x'1275')OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST, ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE  NULLS FIRST, (((NOT (rt0.c3))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((~ ('-1808875469'))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((x'1275')OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST, ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE  NULLS FIRST, (((NOT (rt0.c3))) IS FALSE) ASC);
SELECT * FROM rt0 WHERE ((~ ('-1808875469'))) ORDER BY ((((((((((((x'1275')OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST, ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE  NULLS FIRST, (((NOT (rt0.c3))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((~ ('-1808875469'))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((x'1275')OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST, ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE  NULLS FIRST, (((NOT (rt0.c3))) IS FALSE) ASC);
SELECT * FROM rt0 WHERE ((~ ('-1808875469'))) ORDER BY ((((((((((((x'1275')OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST, ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE  NULLS FIRST, (((NOT (rt0.c3))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((json(t0.c0)) NOT NULL) LEFT OUTER JOIN t0 ON (- (rt0.c0)) COLLATE BINARY INNER JOIN rt0 ON (((rt0.c2, rt0.c2, vt0.c0)) BETWEEN ((((((rt0.c1)OR(vt0.c0)))AND(t0.c0)), ((rt0.c3)||(v0.c0)), rt0.c1)) AND (((vt0.c0 IN ()), '1806773693', (rt0.c3 IN (v0.c0, v0.c0))))) WHERE (NULL) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((json(t0.c0)) NOT NULL) LEFT OUTER JOIN t0 ON (- (rt0.c0)) COLLATE BINARY INNER JOIN rt0 ON (((rt0.c2, rt0.c2, vt0.c0)) BETWEEN ((((((rt0.c1)OR(vt0.c0)))AND(t0.c0)), ((rt0.c3)||(v0.c0)), rt0.c1)) AND (((vt0.c0 IN ()), '1806773693', (rt0.c3 IN (v0.c0, v0.c0))))) ORDER BY rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((json(t0.c0)) NOT NULL) LEFT OUTER JOIN t0 ON (- (rt0.c0)) COLLATE BINARY INNER JOIN rt0 ON (((rt0.c2, rt0.c2, vt0.c0)) BETWEEN ((((((rt0.c1)OR(vt0.c0)))AND(t0.c0)), ((rt0.c3)||(v0.c0)), rt0.c1)) AND (((vt0.c0 IN ()), '1806773693', (rt0.c3 IN (v0.c0, v0.c0))))) WHERE (NULL) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((json(t0.c0)) NOT NULL) LEFT OUTER JOIN t0 ON (- (rt0.c0)) COLLATE BINARY INNER JOIN rt0 ON (((rt0.c2, rt0.c2, vt0.c0)) BETWEEN ((((((rt0.c1)OR(vt0.c0)))AND(t0.c0)), ((rt0.c3)||(v0.c0)), rt0.c1)) AND (((vt0.c0 IN ()), '1806773693', (rt0.c3 IN (v0.c0, v0.c0))))) ORDER BY rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 NOT INDEXED WHERE ((('1366592443')+(vt0.c1)) COLLATE RTRIM) ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0)*(v0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))), (((NULL)) BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c3)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((('1366592443')+(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0)*(v0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))), (((NULL)) BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c3)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 END))));
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 NOT INDEXED WHERE ((('1366592443')+(vt0.c1)) COLLATE RTRIM) ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0)*(v0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))), (((NULL)) BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c3)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((('1366592443')+(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, t0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0)*(v0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))), (((NULL)) BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c3)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 END))));
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 NOT INDEXED WHERE ((('1366592443')+(vt0.c1)) COLLATE RTRIM) ORDER BY (((rt0.c0)) BETWEEN ((((v0.c0)*(v0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))), (((NULL)) BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c3)))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((0xffffffffea1b92f4) BETWEEN (NULL) AND ('pDV'))) NOTNULL) LEFT OUTER JOIN t0 ON CAST((- (vt0.c0)) AS NUMERIC) FULL OUTER JOIN rt0 ON CAST(rt0.c3 AS REAL) COLLATE RTRIM WHERE ((((IFNULL(v0.c0, rt0.c0)))<((CASE rt0.c0  WHEN rt0.c2 THEN 0.023468315094298475 WHEN vt0.c1 THEN rt0.c3 WHEN t0.c0 THEN '' ELSE NULL END)))) ORDER BY LIKELY(DISTINCT (rt0.c2 IN ()))  NULLS LAST, vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (((((IFNULL(v0.c0, rt0.c0)))<((CASE rt0.c0  WHEN rt0.c2 THEN 0.023468315094298475 WHEN vt0.c1 THEN rt0.c3 WHEN t0.c0 THEN '' ELSE NULL END)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((0Xffffffffea1b92f4) BETWEEN (NULL) AND ('pDV'))) NOTNULL) LEFT OUTER JOIN t0 ON CAST((- (vt0.c0)) AS NUMERIC) FULL OUTER JOIN rt0 ON CAST(rt0.c3 AS REAL) COLLATE RTRIM ORDER BY LIKELY(DISTINCT (rt0.c2 IN ()))  NULLS LAST, vt0.c1 DESC);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((0xffffffffea1b92f4) BETWEEN (NULL) AND ('pDV'))) NOTNULL) LEFT OUTER JOIN t0 ON CAST((- (vt0.c0)) AS NUMERIC) FULL OUTER JOIN rt0 ON CAST(rt0.c3 AS REAL) COLLATE RTRIM WHERE ((((IFNULL(v0.c0, rt0.c0)))<((CASE rt0.c0  WHEN rt0.c2 THEN 0.023468315094298475 WHEN vt0.c1 THEN rt0.c3 WHEN t0.c0 THEN '' ELSE NULL END)))) ORDER BY LIKELY(DISTINCT (rt0.c2 IN ()))  NULLS LAST, vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (((((IFNULL(v0.c0, rt0.c0)))<((CASE rt0.c0  WHEN rt0.c2 THEN 0.023468315094298475 WHEN vt0.c1 THEN rt0.c3 WHEN t0.c0 THEN '' ELSE NULL END)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((0Xffffffffea1b92f4) BETWEEN (NULL) AND ('pDV'))) NOTNULL) LEFT OUTER JOIN t0 ON CAST((- (vt0.c0)) AS NUMERIC) FULL OUTER JOIN rt0 ON CAST(rt0.c3 AS REAL) COLLATE RTRIM ORDER BY LIKELY(DISTINCT (rt0.c2 IN ()))  NULLS LAST, vt0.c1 DESC);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((0xffffffffea1b92f4) BETWEEN (NULL) AND ('pDV'))) NOTNULL) LEFT OUTER JOIN t0 ON CAST((- (vt0.c0)) AS NUMERIC) FULL OUTER JOIN rt0 ON CAST(rt0.c3 AS REAL) COLLATE RTRIM WHERE ((((IFNULL(v0.c0, rt0.c0)))<((CASE rt0.c0  WHEN rt0.c2 THEN 0.023468315094298475 WHEN vt0.c1 THEN rt0.c3 WHEN t0.c0 THEN '' ELSE NULL END)))) ORDER BY LIKELY(DISTINCT (rt0.c2 IN ()))  NULLS LAST, vt0.c1 DESC;
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY ((((v0.c0) NOTNULL)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (CAST(v0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((((v0.c0) NOTNULL)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (CAST(v0.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY ((((v0.c0) NOTNULL)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (CAST(v0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((((v0.c0) NOTNULL)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (CAST(v0.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY ((((v0.c0) NOTNULL)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (CAST(v0.c0 AS BLOB)))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((((~ (vt0.c1))) IS FALSE)) ORDER BY ((((t0.c0) NOT NULL))IS((((vt0.c1))>((x'303d27ff'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) NOT NULL))IS((((vt0.c1))>((x'303d27ff'))))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((((~ (vt0.c1))) IS FALSE)) ORDER BY ((((t0.c0) NOT NULL))IS((((vt0.c1))>((x'303d27ff'))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) NOT NULL))IS((((vt0.c1))>((x'303d27ff'))))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((((~ (vt0.c1))) IS FALSE)) ORDER BY ((((t0.c0) NOT NULL))IS((((vt0.c1))>((x'303d27ff'))))) DESC  NULLS LAST;
SELECT * FROM v0, t0 WHERE (((((v0.c0)/(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((v0.c0)/(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((v0.c0)/(v0.c0))) NOTNULL));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN x'' THEN ((vt0.c0)<>(vt0.c0)) END) ORDER BY 'wp]|'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN ((vt0.c0)!=(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY 'wp]|'  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN x'' THEN ((vt0.c0)<>(vt0.c0)) END) ORDER BY 'wp]|'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN ((vt0.c0)!=(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY 'wp]|'  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN x'' THEN ((vt0.c0)<>(vt0.c0)) END) ORDER BY 'wp]|'  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t0 INNER JOIN rt0 ON ((((((t0.c0)>=(rt0.c3)))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR('0.22146205702198807')) WHERE (((((((((((((((v0.c0) BETWEEN (t0.c0) AND (v0.c0)))OR((((rt0.c3, rt0.c0, 0.9976372103180574))>((vt0.c0, t0.c0, vt0.c0))))))OR((NOT (t0.c0)))))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c3)-(rt0.c3)))))OR(vt0.c0))) ORDER BY (((rt0.c2) IS FALSE) IN (vt0.c1, vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CASE WHEN v0.c0 THEN ((vt0.c1) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0) BETWEEN (t0.c0) AND (v0.c0)))OR((((rt0.c3, rt0.c0, 0.9976372103180574))>((vt0.c0, t0.c0, vt0.c0))))))OR((NOT (t0.c0)))))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c3)-(rt0.c3)))))OR(vt0.c0))) IS TRUE)  as count FROM v0, vt0, t0 INNER JOIN rt0 ON ((((((t0.c0)>=(rt0.c3)))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR('0.22146205702198807')) ORDER BY (((rt0.c2) IS FALSE) IN (vt0.c1, vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CASE WHEN v0.c0 THEN ((vt0.c1) NOTNULL) END  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, t0 INNER JOIN rt0 ON ((((((t0.c0)>=(rt0.c3)))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR('0.22146205702198807')) WHERE (((((((((((((((v0.c0) BETWEEN (t0.c0) AND (v0.c0)))OR((((rt0.c3, rt0.c0, 0.9976372103180574))>((vt0.c0, t0.c0, vt0.c0))))))OR((NOT (t0.c0)))))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c3)-(rt0.c3)))))OR(vt0.c0))) ORDER BY (((rt0.c2) IS FALSE) IN (vt0.c1, vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CASE WHEN v0.c0 THEN ((vt0.c1) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0) BETWEEN (t0.c0) AND (v0.c0)))OR((((rt0.c3, rt0.c0, 0.9976372103180574))>((vt0.c0, t0.c0, vt0.c0))))))OR((NOT (t0.c0)))))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c3)-(rt0.c3)))))OR(vt0.c0))) IS TRUE)  as count FROM v0, vt0, t0 INNER JOIN rt0 ON ((((((t0.c0)>=(rt0.c3)))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR('0.22146205702198807')) ORDER BY (((rt0.c2) IS FALSE) IN (vt0.c1, vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CASE WHEN v0.c0 THEN ((vt0.c1) NOTNULL) END  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, t0 INNER JOIN rt0 ON ((((((t0.c0)>=(rt0.c3)))AND(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))))OR('0.22146205702198807')) WHERE (((((((((((((((v0.c0) BETWEEN (t0.c0) AND (v0.c0)))OR((((rt0.c3, rt0.c0, 0.9976372103180574))>((vt0.c0, t0.c0, vt0.c0))))))OR((NOT (t0.c0)))))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c3)-(rt0.c3)))))OR(vt0.c0))) ORDER BY (((rt0.c2) IS FALSE) IN (vt0.c1, vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CASE WHEN v0.c0 THEN ((vt0.c1) NOTNULL) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((LIKELIHOOD(DISTINCT t0.c0, 0.38778122333791587)))>(((t0.c0 IN ()))))) ORDER BY ((((t0.c0) ISNULL)) NOT BETWEEN ((((t0.c0))==((t0.c0)))) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((LIKELIHOOD(DISTINCT t0.c0, 0.38778122333791587)))>(((t0.c0 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) ISNULL)) NOT BETWEEN ((((t0.c0))=((t0.c0)))) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((LIKELIHOOD(DISTINCT t0.c0, 0.38778122333791587)))>(((t0.c0 IN ()))))) ORDER BY ((((t0.c0) ISNULL)) NOT BETWEEN ((((t0.c0))==((t0.c0)))) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((LIKELIHOOD(DISTINCT t0.c0, 0.38778122333791587)))>(((t0.c0 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) ISNULL)) NOT BETWEEN ((((t0.c0))=((t0.c0)))) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((LIKELIHOOD(DISTINCT t0.c0, 0.38778122333791587)))>(((t0.c0 IN ()))))) ORDER BY ((((t0.c0) ISNULL)) NOT BETWEEN ((((t0.c0))==((t0.c0)))) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE (UPPER(v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (UPPER(v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (UPPER(v0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0 WHERE (CAST(NULL AS TEXT)) ORDER BY (((vt0.c0 COLLATE RTRIM, rt0.c3 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))))<>((((v0.c0)>(NULL)), CAST(rt0.c1 AS INTEGER), TRIM(DISTINCT vt0.c0, vt0.c0))))  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, (- (((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY (((vt0.c0 COLLATE RTRIM, rt0.c3 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))))<>((((v0.c0)>(NULL)), CAST(rt0.c1 AS INTEGER), TRIM(DISTINCT vt0.c0, vt0.c0))))  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, (- (((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0 WHERE (CAST(NULL AS TEXT)) ORDER BY (((vt0.c0 COLLATE RTRIM, rt0.c3 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))))<>((((v0.c0)>(NULL)), CAST(rt0.c1 AS INTEGER), TRIM(DISTINCT vt0.c0, vt0.c0))))  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, (- (((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY (((vt0.c0 COLLATE RTRIM, rt0.c3 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))))<>((((v0.c0)>(NULL)), CAST(rt0.c1 AS INTEGER), TRIM(DISTINCT vt0.c0, vt0.c0))))  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, (- (((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0 WHERE (CAST(NULL AS TEXT)) ORDER BY (((vt0.c0 COLLATE RTRIM, rt0.c3 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))))<>((((v0.c0)>(NULL)), CAST(rt0.c1 AS INTEGER), TRIM(DISTINCT vt0.c0, vt0.c0))))  NULLS LAST, CAST(t0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, (- (((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT * FROM vt0, t0, rt0, v0 WHERE (((((rt0.c3)|(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)|(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, rt0, v0);
SELECT * FROM vt0, t0, rt0, v0 WHERE (((((rt0.c3)|(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)|(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, rt0, v0);
SELECT * FROM vt0, t0, rt0, v0 WHERE (((((rt0.c3)|(rt0.c0))) IS TRUE));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (+ (vt0.c1 COLLATE NOCASE)) WHERE (((((vt0.c0)<=(vt0.c1))) BETWEEN (((vt0.c0) IS TRUE)) AND (CHAR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt0.c1))) BETWEEN (((vt0.c0) IS TRUE)) AND (CHAR(vt0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (+ (vt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (+ (vt0.c1 COLLATE NOCASE)) WHERE (((((vt0.c0)<=(vt0.c1))) BETWEEN (((vt0.c0) IS TRUE)) AND (CHAR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt0.c1))) BETWEEN (((vt0.c0) IS TRUE)) AND (CHAR(vt0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (+ (vt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (+ (vt0.c1 COLLATE NOCASE)) WHERE (((((vt0.c0)<=(vt0.c1))) BETWEEN (((vt0.c0) IS TRUE)) AND (CHAR(vt0.c0))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0))  WHEN vt0.c0 THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE (((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) END FULL OUTER JOIN t0 ON (LOWER(v0.c0) IN ((((vt0.c1))<=((rt0.c2))))) CROSS JOIN rt0 ON (NOT (rt0.c1 COLLATE NOCASE)) WHERE (CAST(((vt0.c0) ISNULL) AS TEXT)) ORDER BY CAST((NOT (v0.c0)) AS INTEGER), ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (0X3da08933) AND (((rt0.c2) BETWEEN ('') AND (vt0.c1)))), ((((((((((rt0.c1)LIKE(rt0.c1)))AND((vt0.c1 IN ()))))AND(rt0.c1 COLLATE RTRIM)))AND(((t0.c0)*(rt0.c3)))))OR((((vt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0))  WHEN vt0.c0 THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE (((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) END FULL OUTER JOIN t0 ON (LOWER(v0.c0) IN ((((vt0.c1))<=((rt0.c2))))) CROSS JOIN rt0 ON (NOT (rt0.c1 COLLATE NOCASE)) ORDER BY CAST((NOT (v0.c0)) AS INTEGER), ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (0X3da08933) AND (((rt0.c2) BETWEEN ('') AND (vt0.c1)))), ((((((((((rt0.c1)LIKE(rt0.c1)))AND((vt0.c1 IN ()))))AND(rt0.c1 COLLATE RTRIM)))AND(((t0.c0)*(rt0.c3)))))OR((((vt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c1))))) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0))  WHEN vt0.c0 THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE (((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) END FULL OUTER JOIN t0 ON (LOWER(v0.c0) IN ((((vt0.c1))<=((rt0.c2))))) CROSS JOIN rt0 ON (NOT (rt0.c1 COLLATE NOCASE)) WHERE (CAST(((vt0.c0) ISNULL) AS TEXT)) ORDER BY CAST((NOT (v0.c0)) AS INTEGER), ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (0X3da08933) AND (((rt0.c2) BETWEEN ('') AND (vt0.c1)))), ((((((((((rt0.c1)LIKE(rt0.c1)))AND((vt0.c1 IN ()))))AND(rt0.c1 COLLATE RTRIM)))AND(((t0.c0)*(rt0.c3)))))OR((((vt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0))  WHEN vt0.c0 THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE (((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) END FULL OUTER JOIN t0 ON (LOWER(v0.c0) IN ((((vt0.c1))<=((rt0.c2))))) CROSS JOIN rt0 ON (NOT (rt0.c1 COLLATE NOCASE)) ORDER BY CAST((NOT (v0.c0)) AS INTEGER), ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (0X3da08933) AND (((rt0.c2) BETWEEN ('') AND (vt0.c1)))), ((((((((((rt0.c1)LIKE(rt0.c1)))AND((vt0.c1 IN ()))))AND(rt0.c1 COLLATE RTRIM)))AND(((t0.c0)*(rt0.c3)))))OR((((vt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c1))))) DESC);
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY)&(((NULL) ISNULL))) WHERE (((((((((((('513031270')OR(vt0.c0)))OR(v0.c0)))OR(t0.c0)))AND(vt0.c0))))<((((vt0.c1) NOT BETWEEN (0.22751972664829623) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((('513031270')OR(vt0.c0)))OR(v0.c0)))OR(t0.c0)))AND(vt0.c0))))<((((vt0.c1) NOT BETWEEN (0.22751972664829623) AND (t0.c0)))))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY)&(((NULL) ISNULL))));
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY)&(((NULL) ISNULL))) WHERE (((((((((((('513031270')OR(vt0.c0)))OR(v0.c0)))OR(t0.c0)))AND(vt0.c0))))<((((vt0.c1) NOT BETWEEN (0.22751972664829623) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((('513031270')OR(vt0.c0)))OR(v0.c0)))OR(t0.c0)))AND(vt0.c0))))<((((vt0.c1) NOT BETWEEN (0.22751972664829623) AND (t0.c0)))))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY)&(((NULL) ISNULL))));
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((v0.c0 COLLATE BINARY)&(((NULL) ISNULL))) WHERE (((((((((((('513031270')OR(vt0.c0)))OR(v0.c0)))OR(t0.c0)))AND(vt0.c0))))<((((vt0.c1) NOT BETWEEN (0.22751972664829623) AND (t0.c0))))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, rt0, vt0, v0 WHERE (HEX((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, v0 WHERE (HEX((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, v0 WHERE (HEX((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1)))));
SELECT * FROM rt0, t0 WHERE (json_patch(rt0.c1, rt0.c2) COLLATE BINARY) ORDER BY ((CASE WHEN t0.c0 THEN '{50)' ELSE rt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c3 AS TEXT))), (+ (((rt0.c2) BETWEEN (t0.c0) AND (0.6674428593756776))));
SELECT SUM(count) FROM (SELECT ((json_patch(rt0.c1, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN t0.c0 THEN '{50)' ELSE rt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c3 AS TEXT))), (+ (((rt0.c2) BETWEEN (t0.c0) AND (0.6674428593756776)))));
SELECT * FROM rt0, t0 WHERE (json_patch(rt0.c1, rt0.c2) COLLATE BINARY) ORDER BY ((CASE WHEN t0.c0 THEN '{50)' ELSE rt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c3 AS TEXT))), (+ (((rt0.c2) BETWEEN (t0.c0) AND (0.6674428593756776))));
SELECT SUM(count) FROM (SELECT ((json_patch(rt0.c1, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN t0.c0 THEN '{50)' ELSE rt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c3 AS TEXT))), (+ (((rt0.c2) BETWEEN (t0.c0) AND (0.6674428593756776)))));
SELECT * FROM rt0, t0 WHERE (json_patch(rt0.c1, rt0.c2) COLLATE BINARY) ORDER BY ((CASE WHEN t0.c0 THEN '{50)' ELSE rt0.c0 END) BETWEEN ((rt0.c2 IN ())) AND (CAST(rt0.c3 AS TEXT))), (+ (((rt0.c2) BETWEEN (t0.c0) AND (0.6674428593756776))));
SELECT ALL * FROM vt0, v0, t0 WHERE (((((((((((v0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))IS NOT(('819277382' IN ())))) ORDER BY vt0.c0 DESC  NULLS FIRST, (((((((vt0.c1)AND(t0.c0)))OR(v0.c0))))>((((vt0.c1) IS TRUE)))), (+ (CASE WHEN vt0.c1 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))IS NOT(('819277382' IN ())))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY vt0.c0 DESC  NULLS FIRST, (((((((vt0.c1)AND(t0.c0)))OR(v0.c0))))>((((vt0.c1) IS TRUE)))), (+ (CASE WHEN vt0.c1 THEN vt0.c1 END)));
SELECT ALL * FROM vt0, v0, t0 WHERE (((((((((((v0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))IS NOT(('819277382' IN ())))) ORDER BY vt0.c0 DESC  NULLS FIRST, (((((((vt0.c1)AND(t0.c0)))OR(v0.c0))))>((((vt0.c1) IS TRUE)))), (+ (CASE WHEN vt0.c1 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))IS NOT(('819277382' IN ())))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY vt0.c0 DESC  NULLS FIRST, (((((((vt0.c1)AND(t0.c0)))OR(v0.c0))))>((((vt0.c1) IS TRUE)))), (+ (CASE WHEN vt0.c1 THEN vt0.c1 END)));
SELECT ALL * FROM vt0, v0, t0 WHERE (((((((((((v0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))IS NOT(('819277382' IN ())))) ORDER BY vt0.c0 DESC  NULLS FIRST, (((((((vt0.c1)AND(t0.c0)))OR(v0.c0))))>((((vt0.c1) IS TRUE)))), (+ (CASE WHEN vt0.c1 THEN vt0.c1 END));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((vt0.c0)||(t0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON TRIM((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((v0.c0, t0.c0, vt0.c1)) AND ((t0.c0, t0.c0, t0.c0)))) WHERE (((vt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((NULL) IS FALSE))>=(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((vt0.c0)||(t0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON TRIM((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((v0.c0, t0.c0, vt0.c1)) AND ((t0.c0, t0.c0, t0.c0)))) ORDER BY ((((NULL) IS FALSE))>=(vt0.c0)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((vt0.c0)||(t0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON TRIM((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((v0.c0, t0.c0, vt0.c1)) AND ((t0.c0, t0.c0, t0.c0)))) WHERE (((vt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((NULL) IS FALSE))>=(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((vt0.c0)||(t0.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON TRIM((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((v0.c0, t0.c0, vt0.c1)) AND ((t0.c0, t0.c0, t0.c0)))) ORDER BY ((((NULL) IS FALSE))>=(vt0.c0)));
SELECT COUNT(*) FROM v0, t0, rt0 WHERE ((((((t0.c0)>=(rt0.c0)), x'a6d1', CASE rt0.c3  WHEN t0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))<((CASE rt0.c3  WHEN v0.c0 THEN rt0.c0 END, TRIM(DISTINCT t0.c0), ((t0.c0)%(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)>=(rt0.c0)), x'a6d1', CASE rt0.c3  WHEN t0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))<((CASE rt0.c3  WHEN v0.c0 THEN rt0.c0 END, TRIM(DISTINCT t0.c0), ((t0.c0)%(rt0.c3)))))) IS TRUE)  as count FROM v0, t0, rt0);
SELECT COUNT(*) FROM v0, t0, rt0 WHERE ((((((t0.c0)>=(rt0.c0)), x'a6d1', CASE rt0.c3  WHEN t0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))<((CASE rt0.c3  WHEN v0.c0 THEN rt0.c0 END, TRIM(DISTINCT t0.c0), ((t0.c0)%(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)>=(rt0.c0)), x'a6d1', CASE rt0.c3  WHEN t0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))<((CASE rt0.c3  WHEN v0.c0 THEN rt0.c0 END, TRIM(DISTINCT t0.c0), ((t0.c0)%(rt0.c3)))))) IS TRUE)  as count FROM v0, t0, rt0);
SELECT COUNT(*) FROM v0, t0, rt0 WHERE ((((((t0.c0)>=(rt0.c0)), x'a6d1', CASE rt0.c3  WHEN t0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))<((CASE rt0.c3  WHEN v0.c0 THEN rt0.c0 END, TRIM(DISTINCT t0.c0), ((t0.c0)%(rt0.c3))))));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN v0 ON CAST(((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)) AS TEXT) RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2)))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (LOWER(DISTINCT v0.c0))) WHERE ((NOT (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON CAST(((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)) AS TEXT) RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2)))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (LOWER(DISTINCT v0.c0))));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN v0 ON CAST(((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)) AS TEXT) RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2)))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (LOWER(DISTINCT v0.c0))) WHERE ((NOT (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON CAST(((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)) AS TEXT) RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2)))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (LOWER(DISTINCT v0.c0))));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CAST(vt0.c1 AS INTEGER) COLLATE RTRIM WHERE ((+ (vt0.c1 COLLATE RTRIM))) ORDER BY -1.419335662E9  NULLS FIRST, ((((NULL) ISNULL))GLOB(v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CAST(vt0.c1 AS INTEGER) COLLATE RTRIM ORDER BY -1.419335662E9  NULLS FIRST, ((((NULL) ISNULL))GLOB(v0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CAST(vt0.c1 AS INTEGER) COLLATE RTRIM WHERE ((+ (vt0.c1 COLLATE RTRIM))) ORDER BY -1.419335662E9  NULLS FIRST, ((((NULL) ISNULL))GLOB(v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CAST(vt0.c1 AS INTEGER) COLLATE RTRIM ORDER BY -1.419335662E9  NULLS FIRST, ((((NULL) ISNULL))GLOB(v0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CAST(vt0.c1 AS INTEGER) COLLATE RTRIM WHERE ((+ (vt0.c1 COLLATE RTRIM))) ORDER BY -1.419335662E9  NULLS FIRST, ((((NULL) ISNULL))GLOB(v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((+ (((-1202466410)<>(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((-1202466410)<>(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ (((-1202466410)<>(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((-1202466410)<>(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ (((-1202466410)<>(t0.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (LIKE(ABS(v0.c0), ((vt0.c1)|(v0.c0)), 'p'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(ABS(v0.c0), ((vt0.c1)|(v0.c0)), 'p')) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON v0.c0);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (LIKE(ABS(v0.c0), ((vt0.c1)|(v0.c0)), 'p'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(ABS(v0.c0), ((vt0.c1)|(v0.c0)), 'p')) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON v0.c0);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (LIKE(ABS(v0.c0), ((vt0.c1)|(v0.c0)), 'p'));
SELECT * FROM rt0, t0, v0, vt0 WHERE ((((vt0.c1)/(rt0.c3)) IN (((vt0.c1) IS TRUE)))) ORDER BY LENGTH((- (v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)/(rt0.c3)) IN (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, t0, v0, vt0 ORDER BY LENGTH((- (v0.c0))) DESC);
SELECT * FROM rt0, t0, v0, vt0 WHERE ((((vt0.c1)/(rt0.c3)) IN (((vt0.c1) IS TRUE)))) ORDER BY LENGTH((- (v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)/(rt0.c3)) IN (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, t0, v0, vt0 ORDER BY LENGTH((- (v0.c0))) DESC);
SELECT * FROM rt0, t0, v0, vt0 WHERE ((((vt0.c1)/(rt0.c3)) IN (((vt0.c1) IS TRUE)))) ORDER BY LENGTH((- (v0.c0))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 CROSS JOIN t0 ON (((vt0.c1))==(((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) WHERE (((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))<(vt0.c0))) IS TRUE)  as count FROM rt0, vt0, v0 CROSS JOIN t0 ON (((vt0.c1))=(((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 CROSS JOIN t0 ON (((vt0.c1))==(((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) WHERE (((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))<(vt0.c0))) IS TRUE)  as count FROM rt0, vt0, v0 CROSS JOIN t0 ON (((vt0.c1))=(((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 CROSS JOIN t0 ON (((vt0.c1))==(((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) WHERE (((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))<(vt0.c0)));
SELECT * FROM t0, v0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0))) NOTNULL) CROSS JOIN rt0 ON ((((rt0.c0)LIKE(rt0.c2)))AND(NULL)) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0))) NOTNULL) CROSS JOIN rt0 ON ((((rt0.c0)LIKE(rt0.c2)))AND(NULL)));
SELECT * FROM t0, v0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0))) NOTNULL) CROSS JOIN rt0 ON ((((rt0.c0)LIKE(rt0.c2)))AND(NULL)) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0))) NOTNULL) CROSS JOIN rt0 ON ((((rt0.c0)LIKE(rt0.c2)))AND(NULL)));
SELECT * FROM t0, v0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0))) NOTNULL) CROSS JOIN rt0 ON ((((rt0.c0)LIKE(rt0.c2)))AND(NULL)) WHERE (v0.c0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))AND(((rt0.c3)*(rt0.c3)))))AND(((('4gK', rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, '-1730342514', rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))AND(((rt0.c3)*(rt0.c3)))))AND(((('4gK', rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, '-1730342514', rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))AND(((rt0.c3)*(rt0.c3)))))AND(((('4gK', rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, '-1730342514', rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))AND(((rt0.c3)*(rt0.c3)))))AND(((('4gK', rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, '-1730342514', rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))AND(((rt0.c3)*(rt0.c3)))))AND(((('4gK', rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, '-1730342514', rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c2))))));
SELECT ALL * FROM t0, vt0, v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END COLLATE BINARY) ORDER BY ((x'') BETWEEN ('') AND (CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((x'') BETWEEN ('') AND (CAST(t0.c0 AS TEXT))));
SELECT ALL * FROM t0, vt0, v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END COLLATE BINARY) ORDER BY ((x'') BETWEEN ('') AND (CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((x'') BETWEEN ('') AND (CAST(t0.c0 AS TEXT))));
SELECT ALL * FROM t0, vt0, v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END COLLATE BINARY) ORDER BY ((x'') BETWEEN ('') AND (CAST(t0.c0 AS TEXT)));
SELECT ALL * FROM v0, rt0 WHERE (CASE (NOT (rt0.c1))  WHEN (0.9437343218263613 IN (rt0.c1, rt0.c1)) THEN ((rt0.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c1))  WHEN (0.9437343218263613 IN (rt0.c1, rt0.c1)) THEN ((rt0.c2) NOT NULL) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE (NOT (rt0.c1))  WHEN (0.9437343218263613 IN (rt0.c1, rt0.c1)) THEN ((rt0.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c1))  WHEN (0.9437343218263613 IN (rt0.c1, rt0.c1)) THEN ((rt0.c2) NOT NULL) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE (NOT (rt0.c1))  WHEN (0.9437343218263613 IN (rt0.c1, rt0.c1)) THEN ((rt0.c2) NOT NULL) END);
SELECT COUNT(*) FROM vt0, rt0, v0, t0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))>=((((((t0.c0)OR(1.806773693E9)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))>=((((((t0.c0)OR(1.806773693E9)))OR(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT COUNT(*) FROM vt0, rt0, v0, t0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))>=((((((t0.c0)OR(1.806773693E9)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))>=((((((t0.c0)OR(1.806773693E9)))OR(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, v0, t0);
SELECT COUNT(*) FROM vt0, rt0, v0, t0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))>=((((((t0.c0)OR(1.806773693E9)))OR(rt0.c1))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((json_valid(t0.c0) IN (((t0.c0) IS FALSE)))) ORDER BY ((((t0.c0)+(x''))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((json_valid(t0.c0) IN (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)+(x''))) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((json_valid(t0.c0) IN (((t0.c0) IS FALSE)))) ORDER BY ((((t0.c0)+(x''))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((json_valid(t0.c0) IN (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)+(x''))) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((json_valid(t0.c0) IN (((t0.c0) IS FALSE)))) ORDER BY ((((t0.c0)+(x''))) IS FALSE) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c3) ORDER BY ((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)AND((((rt0.c0))=((NULL))))))OR(((rt0.c3) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)AND((((rt0.c0))=((NULL))))))OR(((rt0.c3) NOT NULL))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c3) ORDER BY ((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)AND((((rt0.c0))=((NULL))))))OR(((rt0.c3) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)AND((((rt0.c0))=((NULL))))))OR(((rt0.c3) NOT NULL))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c3) ORDER BY ((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)AND((((rt0.c0))=((NULL))))))OR(((rt0.c3) NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((t0.c0)IS NOT(CAST(v0.c0 AS TEXT))) WHERE (((v0.c0 IN (v0.c0, v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0)*(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN (v0.c0, v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((t0.c0)IS NOT(CAST(v0.c0 AS TEXT))) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0)*(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((t0.c0)IS NOT(CAST(v0.c0 AS TEXT))) WHERE (((v0.c0 IN (v0.c0, v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0)*(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN (v0.c0, v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((t0.c0)IS NOT(CAST(v0.c0 AS TEXT))) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0)*(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((t0.c0)IS NOT(CAST(v0.c0 AS TEXT))) WHERE (((v0.c0 IN (v0.c0, v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND (((v0.c0)*(v0.c0))));
SELECT * FROM v0, vt0, rt0, t0 WHERE (CAST((rt0.c1 IN (t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN (t0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0, t0);
SELECT * FROM v0, vt0, rt0, t0 WHERE (CAST((rt0.c1 IN (t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN (t0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0, t0);
SELECT * FROM v0, vt0, rt0, t0 WHERE (CAST((rt0.c1 IN (t0.c0)) AS BLOB));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (vt0.c1);
SELECT * FROM vt0, v0, t0 WHERE (((x'5798')>>(((vt0.c1)+(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'5798')>>(((vt0.c1)+(t0.c0))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((x'5798')>>(((vt0.c1)+(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'5798')>>(((vt0.c1)+(t0.c0))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((x'5798')>>(((vt0.c1)+(t0.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ROUND(((v0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0))) LEFT OUTER JOIN t0 ON ((CAST(vt0.c1 AS INTEGER)) IS TRUE) CROSS JOIN rt0 ON ((vt0.c0) NOT NULL) COLLATE NOCASE WHERE (CAST(((((rt0.c2)AND(vt0.c0)))AND(t0.c0)) AS BLOB)) ORDER BY COALESCE(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c0)*(t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)AND(vt0.c0)))AND(t0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ROUND(((v0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0))) LEFT OUTER JOIN t0 ON ((CAST(vt0.c1 AS INTEGER)) IS TRUE) CROSS JOIN rt0 ON ((vt0.c0) NOT NULL) COLLATE NOCASE ORDER BY COALESCE(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c0)*(t0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ROUND(((v0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0))) LEFT OUTER JOIN t0 ON ((CAST(vt0.c1 AS INTEGER)) IS TRUE) CROSS JOIN rt0 ON ((vt0.c0) NOT NULL) COLLATE NOCASE WHERE (CAST(((((rt0.c2)AND(vt0.c0)))AND(t0.c0)) AS BLOB)) ORDER BY COALESCE(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c0)*(t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)AND(vt0.c0)))AND(t0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ROUND(((v0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0))) LEFT OUTER JOIN t0 ON ((CAST(vt0.c1 AS INTEGER)) IS TRUE) CROSS JOIN rt0 ON ((vt0.c0) NOT NULL) COLLATE NOCASE ORDER BY COALESCE(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c0)*(t0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((- (rt0.c0)))%((~ (rt0.c0))))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))%((~ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((- (rt0.c0)))%((~ (rt0.c0))))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))%((~ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((- (rt0.c0)))%((~ (rt0.c0))))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0, rt0, v0, vt0 WHERE ((~ ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, v0, vt0);
SELECT COUNT(*) FROM t0, rt0, v0, vt0 WHERE ((~ ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, v0, vt0);
SELECT COUNT(*) FROM t0, rt0, v0, vt0 WHERE ((~ ((- (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE (((CAST(rt0.c2 AS REAL))OR(((x'')<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL))OR(((x'')<=(rt0.c1))))) IS TRUE)  as count FROM vt0, v0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE (((CAST(rt0.c2 AS REAL))OR(((x'')<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL))OR(((x'')<=(rt0.c1))))) IS TRUE)  as count FROM vt0, v0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE (((CAST(rt0.c2 AS REAL))OR(((x'')<=(rt0.c1)))));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST('D[' AS BLOB) WHERE (((((v0.c0)=(v0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((v0.c0, vt0.c1, v0.c0))>((vt0.c0, v0.c0, '-1102260803'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)=(v0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((v0.c0, vt0.c1, v0.c0))>((vt0.c0, v0.c0, '-1102260803')))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST('D[' AS BLOB));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST('D[' AS BLOB) WHERE (((((v0.c0)=(v0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((v0.c0, vt0.c1, v0.c0))>((vt0.c0, v0.c0, '-1102260803'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)=(v0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((v0.c0, vt0.c1, v0.c0))>((vt0.c0, v0.c0, '-1102260803')))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST('D[' AS BLOB));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST('D[' AS BLOB) WHERE (((((v0.c0)=(v0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((v0.c0, vt0.c1, v0.c0))>((vt0.c0, v0.c0, '-1102260803'))))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ ((vt0.c1 IN ())))) ORDER BY 0.6308731730410675 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY 0.6308731730410675 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ ((vt0.c1 IN ())))) ORDER BY 0.6308731730410675 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY 0.6308731730410675 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ ((vt0.c1 IN ())))) ORDER BY 0.6308731730410675 DESC  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (CAST('1497979028' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('1497979028' AS NUMERIC)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST('1497979028' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('1497979028' AS NUMERIC)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST('1497979028' AS NUMERIC));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON '' CROSS JOIN vt0 ON ('wKq>N{O\遞' IN ()) WHERE ((((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c2)) IN (((t0.c0)<<(t0.c0))))) ORDER BY CAST(((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c2)) IN (((t0.c0)<<(t0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON '' CROSS JOIN vt0 ON ('wKq>N{O\遞' IN ()) ORDER BY CAST(((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON '' CROSS JOIN vt0 ON ('wKq>N{O\遞' IN ()) WHERE ((((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c2)) IN (((t0.c0)<<(t0.c0))))) ORDER BY CAST(((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c2)) IN (((t0.c0)<<(t0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON '' CROSS JOIN vt0 ON ('wKq>N{O\遞' IN ()) ORDER BY CAST(((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON '' CROSS JOIN vt0 ON ('wKq>N{O\遞' IN ()) WHERE ((((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)))OR(rt0.c2)) IN (((t0.c0)<<(t0.c0))))) ORDER BY CAST(((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((0.10828552917032241)AND(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(t0.c0)))AND(rt0.c1)))OR(json_object(vt0.c1, vt0.c0))) WHERE (((((((((SQLITE_COMPILEOPTION_USED(rt0.c3))AND(((rt0.c0)<>(t0.c0)))))OR(((v0.c0)*(t0.c0)))))AND((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((SQLITE_COMPILEOPTION_USED(rt0.c3))AND(((rt0.c0)<>(t0.c0)))))OR(((v0.c0)*(t0.c0)))))AND((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((0.10828552917032241)AND(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(t0.c0)))AND(rt0.c1)))OR(json_object(vt0.c1, vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((0.10828552917032241)AND(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(t0.c0)))AND(rt0.c1)))OR(json_object(vt0.c1, vt0.c0))) WHERE (((((((((SQLITE_COMPILEOPTION_USED(rt0.c3))AND(((rt0.c0)<>(t0.c0)))))OR(((v0.c0)*(t0.c0)))))AND((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((SQLITE_COMPILEOPTION_USED(rt0.c3))AND(((rt0.c0)<>(t0.c0)))))OR(((v0.c0)*(t0.c0)))))AND((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((0.10828552917032241)AND(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(t0.c0)))AND(rt0.c1)))OR(json_object(vt0.c1, vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((0.10828552917032241)AND(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(t0.c0)))AND(rt0.c1)))OR(json_object(vt0.c1, vt0.c0))) WHERE (((((((((SQLITE_COMPILEOPTION_USED(rt0.c3))AND(((rt0.c0)<>(t0.c0)))))OR(((v0.c0)*(t0.c0)))))AND((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND((~ (vt0.c0)))));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((v0.c0)IS(0.6674428593756776)) IN ()) RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END)=(0.3758768605179301)) WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)))||(((((((((t0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)))||(((((((((t0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((v0.c0)IS(0.6674428593756776)) IN ()) RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END)=(0.3758768605179301)));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((v0.c0)IS(0.6674428593756776)) IN ()) RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END)=(0.3758768605179301)) WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)))||(((((((((t0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)))||(((((((((t0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((v0.c0)IS(0.6674428593756776)) IN ()) RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END)=(0.3758768605179301)));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((v0.c0)IS(0.6674428593756776)) IN ()) RIGHT OUTER JOIN v0 ON ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END)=(0.3758768605179301)) WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)))||(((((((((t0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))));
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY t0.c0 DESC;
SELECT * FROM v0, t0 WHERE (CASE '-XV/E<ARO'  WHEN HEX(t0.c0) THEN (((t0.c0, v0.c0, t0.c0))>((t0.c0, t0.c0, v0.c0))) WHEN ((v0.c0) NOT NULL) THEN (((v0.c0))<((v0.c0))) WHEN (NOT (t0.c0)) THEN CAST(v0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE '-XV/E<ARO'  WHEN HEX(t0.c0) THEN (((t0.c0, v0.c0, t0.c0))>((t0.c0, t0.c0, v0.c0))) WHEN ((v0.c0) NOT NULL) THEN (((v0.c0))<((v0.c0))) WHEN (NOT (t0.c0)) THEN CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (CASE '-XV/E<ARO'  WHEN HEX(t0.c0) THEN (((t0.c0, v0.c0, t0.c0))>((t0.c0, t0.c0, v0.c0))) WHEN ((v0.c0) NOT NULL) THEN (((v0.c0))<((v0.c0))) WHEN (NOT (t0.c0)) THEN CAST(v0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE '-XV/E<ARO'  WHEN HEX(t0.c0) THEN (((t0.c0, v0.c0, t0.c0))>((t0.c0, t0.c0, v0.c0))) WHEN ((v0.c0) NOT NULL) THEN (((v0.c0))<((v0.c0))) WHEN (NOT (t0.c0)) THEN CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (CASE '-XV/E<ARO'  WHEN HEX(t0.c0) THEN (((t0.c0, v0.c0, t0.c0))>((t0.c0, t0.c0, v0.c0))) WHEN ((v0.c0) NOT NULL) THEN (((v0.c0))<((v0.c0))) WHEN (NOT (t0.c0)) THEN CAST(v0.c0 AS NUMERIC) END);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)<(vt0.c0)))>(((((t0.c0)AND(rt0.c2)))OR(rt0.c1)))) CROSS JOIN rt0 ON ((0.9854931956734344) ISNULL) WHERE (json_array(((vt0.c0)IS NOT(rt0.c3)), (((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, vt0.c1, rt0.c0))))) ORDER BY '-538143810' ASC;
SELECT SUM(count) FROM (SELECT ((json_array(((vt0.c0)IS NOT(rt0.c3)), (((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, vt0.c1, rt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)<(vt0.c0)))>(((((t0.c0)AND(rt0.c2)))OR(rt0.c1)))) CROSS JOIN rt0 ON ((0.9854931956734344) ISNULL) ORDER BY '-538143810' ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)<(vt0.c0)))>(((((t0.c0)AND(rt0.c2)))OR(rt0.c1)))) CROSS JOIN rt0 ON ((0.9854931956734344) ISNULL) WHERE (json_array(((vt0.c0)IS NOT(rt0.c3)), (((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, vt0.c1, rt0.c0))))) ORDER BY '-538143810' ASC;
SELECT SUM(count) FROM (SELECT ((json_array(((vt0.c0)IS NOT(rt0.c3)), (((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, vt0.c1, rt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)<(vt0.c0)))>(((((t0.c0)AND(rt0.c2)))OR(rt0.c1)))) CROSS JOIN rt0 ON ((0.9854931956734344) ISNULL) ORDER BY '-538143810' ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((vt0.c0)<(vt0.c0)))>(((((t0.c0)AND(rt0.c2)))OR(rt0.c1)))) CROSS JOIN rt0 ON ((0.9854931956734344) ISNULL) WHERE (json_array(((vt0.c0)IS NOT(rt0.c3)), (((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c3, vt0.c1, rt0.c0))))) ORDER BY '-538143810' ASC;
SELECT * FROM v0, vt0, rt0, t0 WHERE ('2142703636' COLLATE BINARY) ORDER BY ((v0.c0)IS NOT(rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('2142703636' COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0, t0 ORDER BY ((v0.c0)IS NOT(rt0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0, vt0, rt0, t0 WHERE ('2142703636' COLLATE BINARY) ORDER BY ((v0.c0)IS NOT(rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('2142703636' COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0, t0 ORDER BY ((v0.c0)IS NOT(rt0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0, vt0, rt0, t0 WHERE ('2142703636' COLLATE BINARY) ORDER BY ((v0.c0)IS NOT(rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN v0 WHERE ((NOT ((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c3))))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN v0 WHERE ((NOT ((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c3))))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN v0 WHERE ((NOT ((- (rt0.c3)))));
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c0, ((rt0.c3)==(vt0.c0)), ''))<((((t0.c0)&(rt0.c1)), (- (NULL)), ((((0.12892660232869102)OR(rt0.c2)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, ((rt0.c3)==(vt0.c0)), ''))<((((t0.c0)&(rt0.c1)), (- (NULL)), ((((0.12892660232869102)OR(rt0.c2)))OR(t0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c0, ((rt0.c3)==(vt0.c0)), ''))<((((t0.c0)&(rt0.c1)), (- (NULL)), ((((0.12892660232869102)OR(rt0.c2)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, ((rt0.c3)==(vt0.c0)), ''))<((((t0.c0)&(rt0.c1)), (- (NULL)), ((((0.12892660232869102)OR(rt0.c2)))OR(t0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c0, ((rt0.c3)==(vt0.c0)), ''))<((((t0.c0)&(rt0.c1)), (- (NULL)), ((((0.12892660232869102)OR(rt0.c2)))OR(t0.c0))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c0)OR(v0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (LIKELIHOOD(rt0.c3, 0.6450306209265769))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(v0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (LIKELIHOOD(rt0.c3, 0.6450306209265769)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c0)OR(v0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (LIKELIHOOD(rt0.c3, 0.6450306209265769))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(v0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (LIKELIHOOD(rt0.c3, 0.6450306209265769)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c0)OR(v0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (LIKELIHOOD(rt0.c3, 0.6450306209265769))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY '0.6547348630131198' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY '0.6547348630131198' DESC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY '0.6547348630131198' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY '0.6547348630131198' DESC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY '0.6547348630131198' DESC;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((vt0.c0 IN (t0.c0))) NOT BETWEEN ((v0.c0 IN (t0.c0))) AND (t0.c0))) ORDER BY '9223372036854775807'  NULLS LAST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c0))) NOT BETWEEN ((v0.c0 IN (t0.c0))) AND (t0.c0))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY '9223372036854775807'  NULLS LAST, t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((vt0.c0 IN (t0.c0))) NOT BETWEEN ((v0.c0 IN (t0.c0))) AND (t0.c0))) ORDER BY '9223372036854775807'  NULLS LAST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c0))) NOT BETWEEN ((v0.c0 IN (t0.c0))) AND (t0.c0))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY '9223372036854775807'  NULLS LAST, t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((vt0.c0 IN (t0.c0))) NOT BETWEEN ((v0.c0 IN (t0.c0))) AND (t0.c0))) ORDER BY '9223372036854775807'  NULLS LAST, t0.c0  NULLS LAST;
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((LOWER(DISTINCT t0.c0))GLOB(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))) WHERE (CAST((((0.36071786585976207, t0.c0, v0.c0)) BETWEEN ((v0.c0, t0.c0, t0.c0)) AND ((v0.c0, t0.c0, v0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.36071786585976207, t0.c0, v0.c0)) BETWEEN ((v0.c0, t0.c0, t0.c0)) AND ((v0.c0, t0.c0, v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((LOWER(DISTINCT t0.c0))GLOB(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((LOWER(DISTINCT t0.c0))GLOB(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))) WHERE (CAST((((0.36071786585976207, t0.c0, v0.c0)) BETWEEN ((v0.c0, t0.c0, t0.c0)) AND ((v0.c0, t0.c0, v0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.36071786585976207, t0.c0, v0.c0)) BETWEEN ((v0.c0, t0.c0, t0.c0)) AND ((v0.c0, t0.c0, v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((LOWER(DISTINCT t0.c0))GLOB(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((LOWER(DISTINCT t0.c0))GLOB(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))) WHERE (CAST((((0.36071786585976207, t0.c0, v0.c0)) BETWEEN ((v0.c0, t0.c0, t0.c0)) AND ((v0.c0, t0.c0, v0.c0))) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, rt0, t0, vt0 WHERE ((((vt0.c0)%(rt0.c0)) IN (vt0.c1))) ORDER BY ((((rt0.c3) BETWEEN (t0.c0) AND (vt0.c1))) BETWEEN (((((rt0.c1)AND(v0.c0)))OR(vt0.c0))) AND (((((((((t0.c0)AND(rt0.c3)))AND(rt0.c2)))OR(vt0.c1)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(rt0.c0)) IN (vt0.c1))) IS TRUE)  as count FROM v0, rt0, t0, vt0 ORDER BY ((((rt0.c3) BETWEEN (t0.c0) AND (vt0.c1))) BETWEEN (((((rt0.c1)AND(v0.c0)))OR(vt0.c0))) AND (((((((((t0.c0)AND(rt0.c3)))AND(rt0.c2)))OR(vt0.c1)))OR(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, t0, vt0 WHERE ((((vt0.c0)%(rt0.c0)) IN (vt0.c1))) ORDER BY ((((rt0.c3) BETWEEN (t0.c0) AND (vt0.c1))) BETWEEN (((((rt0.c1)AND(v0.c0)))OR(vt0.c0))) AND (((((((((t0.c0)AND(rt0.c3)))AND(rt0.c2)))OR(vt0.c1)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(rt0.c0)) IN (vt0.c1))) IS TRUE)  as count FROM v0, rt0, t0, vt0 ORDER BY ((((rt0.c3) BETWEEN (t0.c0) AND (vt0.c1))) BETWEEN (((((rt0.c1)AND(v0.c0)))OR(vt0.c0))) AND (((((((((t0.c0)AND(rt0.c3)))AND(rt0.c2)))OR(vt0.c1)))OR(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, t0, vt0 WHERE ((((vt0.c0)%(rt0.c0)) IN (vt0.c1))) ORDER BY ((((rt0.c3) BETWEEN (t0.c0) AND (vt0.c1))) BETWEEN (((((rt0.c1)AND(v0.c0)))OR(vt0.c0))) AND (((((((((t0.c0)AND(rt0.c3)))AND(rt0.c2)))OR(vt0.c1)))OR(vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((0.7968534320439125 IN (vt0.c0)))IS((((vt0.c1))<((vt0.c1)))))) ORDER BY 0.690171255160824 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.7968534320439125 IN (vt0.c0)))IS((((vt0.c1))<((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY 0.690171255160824 COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((0.7968534320439125 IN (vt0.c0)))IS((((vt0.c1))<((vt0.c1)))))) ORDER BY 0.690171255160824 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.7968534320439125 IN (vt0.c0)))IS((((vt0.c1))<((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY 0.690171255160824 COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((0.7968534320439125 IN (vt0.c0)))IS((((vt0.c1))<((vt0.c1)))))) ORDER BY 0.690171255160824 COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (t0.c0 COLLATE BINARY IN ()) LEFT OUTER JOIN rt0 ON TIME((~ (rt0.c1)), UPPER(rt0.c2), (~ (v0.c0)), ((t0.c0)GLOB(rt0.c1)), CAST(rt0.c1 AS BLOB)) WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END IN ())) ORDER BY '1066869531' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END IN ())) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (t0.c0 COLLATE BINARY IN ()) LEFT OUTER JOIN rt0 ON TIME((~ (rt0.c1)), UPPER(rt0.c2), (~ (v0.c0)), ((t0.c0)GLOB(rt0.c1)), CAST(rt0.c1 AS BLOB)) ORDER BY '1066869531' ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (t0.c0 COLLATE BINARY IN ()) LEFT OUTER JOIN rt0 ON TIME((~ (rt0.c1)), UPPER(rt0.c2), (~ (v0.c0)), ((t0.c0)GLOB(rt0.c1)), CAST(rt0.c1 AS BLOB)) WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END IN ())) ORDER BY '1066869531' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END IN ())) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (t0.c0 COLLATE BINARY IN ()) LEFT OUTER JOIN rt0 ON TIME((~ (rt0.c1)), UPPER(rt0.c2), (~ (v0.c0)), ((t0.c0)GLOB(rt0.c1)), CAST(rt0.c1 AS BLOB)) ORDER BY '1066869531' ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (t0.c0 COLLATE BINARY IN ()) LEFT OUTER JOIN rt0 ON TIME((~ (rt0.c1)), UPPER(rt0.c2), (~ (v0.c0)), ((t0.c0)GLOB(rt0.c1)), CAST(rt0.c1 AS BLOB)) WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END IN ())) ORDER BY '1066869531' ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, vt0, rt0 WHERE (t0.c0) ORDER BY (~ ((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, v0, vt0, rt0 ORDER BY (~ ((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0, rt0 WHERE (t0.c0) ORDER BY (~ ((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, v0, vt0, rt0 ORDER BY (~ ((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0, rt0 WHERE (t0.c0) ORDER BY (~ ((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (vt0.c1) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (vt0.c1) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (vt0.c1) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t0 WHERE ((((+ (v0.c0)))>=((((rt0.c2))<((rt0.c1)))))) ORDER BY (- (((rt0.c1)IS NOT(vt0.c0)))) ASC, ((CASE v0.c0  WHEN v0.c0 THEN rt0.c3 END)IS NOT(((rt0.c0) NOT BETWEEN (rt0.c2) AND (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0)))>=((((rt0.c2))<((rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY (- (((rt0.c1)IS NOT(vt0.c0)))) ASC, ((CASE v0.c0  WHEN v0.c0 THEN rt0.c3 END)IS NOT(((rt0.c0) NOT BETWEEN (rt0.c2) AND (NULL)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t0 WHERE ((((+ (v0.c0)))>=((((rt0.c2))<((rt0.c1)))))) ORDER BY (- (((rt0.c1)IS NOT(vt0.c0)))) ASC, ((CASE v0.c0  WHEN v0.c0 THEN rt0.c3 END)IS NOT(((rt0.c0) NOT BETWEEN (rt0.c2) AND (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0)))>=((((rt0.c2))<((rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY (- (((rt0.c1)IS NOT(vt0.c0)))) ASC, ((CASE v0.c0  WHEN v0.c0 THEN rt0.c3 END)IS NOT(((rt0.c0) NOT BETWEEN (rt0.c2) AND (NULL)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t0 WHERE ((((+ (v0.c0)))>=((((rt0.c2))<((rt0.c1)))))) ORDER BY (- (((rt0.c1)IS NOT(vt0.c0)))) ASC, ((CASE v0.c0  WHEN v0.c0 THEN rt0.c3 END)IS NOT(((rt0.c0) NOT BETWEEN (rt0.c2) AND (NULL)))) DESC;
SELECT ALL * FROM rt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (rt0.c3) AND ('ue,'))  WHEN COALESCE(rt0.c0, v0.c0, x'', rt0.c1) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) ORDER BY ((NOT ('톖\r')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (rt0.c3) AND ('ue,'))  WHEN COALESCE(rt0.c0, v0.c0, x'', rt0.c1) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((NOT ('톖\r')) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (rt0.c3) AND ('ue,'))  WHEN COALESCE(rt0.c0, v0.c0, x'', rt0.c1) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) ORDER BY ((NOT ('톖\r')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (rt0.c3) AND ('ue,'))  WHEN COALESCE(rt0.c0, v0.c0, x'', rt0.c1) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((NOT ('톖\r')) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (rt0.c3) AND ('ue,'))  WHEN COALESCE(rt0.c0, v0.c0, x'', rt0.c1) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) ORDER BY ((NOT ('톖\r')) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0, rt0 WHERE (CASE WHEN ((((((((v0.c0)AND(rt0.c3)))AND(v0.c0)))AND(rt0.c1)))AND(rt0.c3)) THEN CAST(x'' AS TEXT) WHEN TIME(rt0.c1, v0.c0, rt0.c1) THEN 0.05288202263616859 WHEN ((rt0.c0)<<(rt0.c1)) THEN ((rt0.c3)>>(v0.c0)) END) ORDER BY ((((rt0.c2)AND(rt0.c1)))&(CASE WHEN rt0.c1 THEN x'' END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((v0.c0)AND(rt0.c3)))AND(v0.c0)))AND(rt0.c1)))AND(rt0.c3)) THEN CAST(x'' AS TEXT) WHEN TIME(rt0.c1, v0.c0, rt0.c1) THEN 0.05288202263616859 WHEN ((rt0.c0)<<(rt0.c1)) THEN ((rt0.c3)>>(v0.c0)) END) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY ((((rt0.c2)AND(rt0.c1)))&(CASE WHEN rt0.c1 THEN x'' END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt0 WHERE (CASE WHEN ((((((((v0.c0)AND(rt0.c3)))AND(v0.c0)))AND(rt0.c1)))AND(rt0.c3)) THEN CAST(x'' AS TEXT) WHEN TIME(rt0.c1, v0.c0, rt0.c1) THEN 0.05288202263616859 WHEN ((rt0.c0)<<(rt0.c1)) THEN ((rt0.c3)>>(v0.c0)) END) ORDER BY ((((rt0.c2)AND(rt0.c1)))&(CASE WHEN rt0.c1 THEN x'' END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((v0.c0)AND(rt0.c3)))AND(v0.c0)))AND(rt0.c1)))AND(rt0.c3)) THEN CAST(x'' AS TEXT) WHEN TIME(rt0.c1, v0.c0, rt0.c1) THEN 0.05288202263616859 WHEN ((rt0.c0)<<(rt0.c1)) THEN ((rt0.c3)>>(v0.c0)) END) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY ((((rt0.c2)AND(rt0.c1)))&(CASE WHEN rt0.c1 THEN x'' END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt0 WHERE (CASE WHEN ((((((((v0.c0)AND(rt0.c3)))AND(v0.c0)))AND(rt0.c1)))AND(rt0.c3)) THEN CAST(x'' AS TEXT) WHEN TIME(rt0.c1, v0.c0, rt0.c1) THEN 0.05288202263616859 WHEN ((rt0.c0)<<(rt0.c1)) THEN ((rt0.c3)>>(v0.c0)) END) ORDER BY ((((rt0.c2)AND(rt0.c1)))&(CASE WHEN rt0.c1 THEN x'' END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((v0.c0) IS TRUE) RIGHT OUTER JOIN vt0 ON ((((((((((((t0.c0)AND(rt0.c3)))AND(rt0.c3)))AND((rt0.c2 IN ()))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END)))AND((vt0.c1 IN (rt0.c2)))) RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c3)GLOB(rt0.c0)))) AND ((highlight(rt0.c0, rt0.c1, vt0.c1, rt0.c1)))) WHERE ((((t0.c0)<>(rt0.c2)) IN (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY 0x2df24f26 ASC  NULLS FIRST, (((rt0.c1 IN ()))/(SQLITE_COMPILEOPTION_GET(x'8f7e9bcc'))) DESC, CASE ((v0.c0)IS NOT(rt0.c1))  WHEN ((rt0.c3)+(rt0.c2)) THEN rt0.c2 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)!=(rt0.c2)) IN (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((v0.c0) IS TRUE) RIGHT OUTER JOIN vt0 ON ((((((((((((t0.c0)AND(rt0.c3)))AND(rt0.c3)))AND((rt0.c2 IN ()))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END)))AND((vt0.c1 IN (rt0.c2)))) RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c3)GLOB(rt0.c0)))) AND ((highlight(rt0.c0, rt0.c1, vt0.c1, rt0.c1)))) ORDER BY 0x2df24f26 ASC  NULLS FIRST, (((rt0.c1 IN ()))/(SQLITE_COMPILEOPTION_GET(x'8f7e9bcc'))) DESC, CASE ((v0.c0)IS NOT(rt0.c1))  WHEN ((rt0.c3)+(rt0.c2)) THEN rt0.c2 COLLATE BINARY END  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((v0.c0) IS TRUE) RIGHT OUTER JOIN vt0 ON ((((((((((((t0.c0)AND(rt0.c3)))AND(rt0.c3)))AND((rt0.c2 IN ()))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END)))AND((vt0.c1 IN (rt0.c2)))) RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c3)GLOB(rt0.c0)))) AND ((highlight(rt0.c0, rt0.c1, vt0.c1, rt0.c1)))) WHERE ((((t0.c0)<>(rt0.c2)) IN (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY 0x2df24f26 ASC  NULLS FIRST, (((rt0.c1 IN ()))/(SQLITE_COMPILEOPTION_GET(x'8f7e9bcc'))) DESC, CASE ((v0.c0)IS NOT(rt0.c1))  WHEN ((rt0.c3)+(rt0.c2)) THEN rt0.c2 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)!=(rt0.c2)) IN (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((v0.c0) IS TRUE) RIGHT OUTER JOIN vt0 ON ((((((((((((t0.c0)AND(rt0.c3)))AND(rt0.c3)))AND((rt0.c2 IN ()))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END)))AND((vt0.c1 IN (rt0.c2)))) RIGHT OUTER JOIN v0 ON (((v0.c0)) BETWEEN ((((rt0.c3)GLOB(rt0.c0)))) AND ((highlight(rt0.c0, rt0.c1, vt0.c1, rt0.c1)))) ORDER BY 0x2df24f26 ASC  NULLS FIRST, (((rt0.c1 IN ()))/(SQLITE_COMPILEOPTION_GET(x'8f7e9bcc'))) DESC, CASE ((v0.c0)IS NOT(rt0.c1))  WHEN ((rt0.c3)+(rt0.c2)) THEN rt0.c2 COLLATE BINARY END  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((x'')<>(((vt0.c1) NOTNULL)))) ORDER BY (((rt0.c3)) NOT BETWEEN ((CASE rt0.c0  WHEN x'' THEN rt0.c1 WHEN NULL THEN vt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) AND (((-198043563 IN (vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<>(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((CASE rt0.c0  WHEN x'' THEN rt0.c1 WHEN NULL THEN vt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) AND (((-198043563 IN (vt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((x'')<>(((vt0.c1) NOTNULL)))) ORDER BY (((rt0.c3)) NOT BETWEEN ((CASE rt0.c0  WHEN x'' THEN rt0.c1 WHEN NULL THEN vt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) AND (((-198043563 IN (vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<>(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((CASE rt0.c0  WHEN x'' THEN rt0.c1 WHEN NULL THEN vt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) AND (((-198043563 IN (vt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((x'')<>(((vt0.c1) NOTNULL)))) ORDER BY (((rt0.c3)) NOT BETWEEN ((CASE rt0.c0  WHEN x'' THEN rt0.c1 WHEN NULL THEN vt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) AND (((-198043563 IN (vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0)IS NOT(rt0.c0))  WHEN CAST(rt0.c1 AS NUMERIC) THEN (((rt0.c0))>((rt0.c0))) WHEN (0.7153565151604239 IN ()) THEN ((rt0.c2) NOT NULL) WHEN (((x'', rt0.c2, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, x'0d67', x'359b', rt0.c3))) THEN 609834620 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)IS NOT(rt0.c0))  WHEN CAST(rt0.c1 AS NUMERIC) THEN (((rt0.c0))>((rt0.c0))) WHEN (0.7153565151604239 IN ()) THEN ((rt0.c2) NOT NULL) WHEN (((x'', rt0.c2, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, x'0d67', x'359b', rt0.c3))) THEN 609834620 END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0)IS NOT(rt0.c0))  WHEN CAST(rt0.c1 AS NUMERIC) THEN (((rt0.c0))>((rt0.c0))) WHEN (0.7153565151604239 IN ()) THEN ((rt0.c2) NOT NULL) WHEN (((x'', rt0.c2, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, x'0d67', x'359b', rt0.c3))) THEN 609834620 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)IS NOT(rt0.c0))  WHEN CAST(rt0.c1 AS NUMERIC) THEN (((rt0.c0))>((rt0.c0))) WHEN (0.7153565151604239 IN ()) THEN ((rt0.c2) NOT NULL) WHEN (((x'', rt0.c2, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, x'0d67', x'359b', rt0.c3))) THEN 609834620 END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0)IS NOT(rt0.c0))  WHEN CAST(rt0.c1 AS NUMERIC) THEN (((rt0.c0))>((rt0.c0))) WHEN (0.7153565151604239 IN ()) THEN ((rt0.c2) NOT NULL) WHEN (((x'', rt0.c2, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, x'0d67', x'359b', rt0.c3))) THEN 609834620 END);
SELECT * FROM v0 NOT INDEXED, rt0, vt0, t0 WHERE (UNLIKELY(DISTINCT 0.967029153552846)) ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (((v0.c0)/(v0.c0))) AND (CASE WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT 0.967029153552846)) IS TRUE)  as count FROM v0, rt0, vt0, t0 ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (((v0.c0)/(v0.c0))) AND (CASE WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT * FROM v0 NOT INDEXED, rt0, vt0, t0 WHERE (UNLIKELY(DISTINCT 0.967029153552846)) ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (((v0.c0)/(v0.c0))) AND (CASE WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT 0.967029153552846)) IS TRUE)  as count FROM v0, rt0, vt0, t0 ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (((v0.c0)/(v0.c0))) AND (CASE WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT * FROM v0 NOT INDEXED, rt0, vt0, t0 WHERE (UNLIKELY(DISTINCT 0.967029153552846)) ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (((v0.c0)/(v0.c0))) AND (CASE WHEN v0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOTNULL)) ORDER BY ((((('#lN', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(((v0.c0)-(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((('#lN', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(((v0.c0)-(v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOTNULL)) ORDER BY ((((('#lN', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(((v0.c0)-(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((((('#lN', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(((v0.c0)-(v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOTNULL)) ORDER BY ((((('#lN', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(((v0.c0)-(v0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(((rt0.c1)%(v0.c0)))))OR((~ (rt0.c2))))) ORDER BY ((rt0.c3)||(rt0.c2));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(((rt0.c1)%(v0.c0)))))OR((~ (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c3)||(rt0.c2)));
SELECT ALL * FROM v0, rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(((rt0.c1)%(v0.c0)))))OR((~ (rt0.c2))))) ORDER BY ((rt0.c3)||(rt0.c2));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(((rt0.c1)%(v0.c0)))))OR((~ (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c3)||(rt0.c2)));
SELECT ALL * FROM v0, rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(((rt0.c1)%(v0.c0)))))OR((~ (rt0.c2))))) ORDER BY ((rt0.c3)||(rt0.c2));
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((((0.37775134915380204)OR(vt0.c0)))OR(rt0.c0))) AND (vt0.c1))) ORDER BY ((((((((rt0.c3)AND(TRIM(DISTINCT vt0.c1, vt0.c1))))OR((+ ('co')))))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) BETWEEN (((((0.37775134915380204)OR(vt0.c0)))OR(rt0.c0))) AND (vt0.c1))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c3)AND(TRIM(DISTINCT vt0.c1, vt0.c1))))OR((+ ('co')))))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((((0.37775134915380204)OR(vt0.c0)))OR(rt0.c0))) AND (vt0.c1))) ORDER BY ((((((((rt0.c3)AND(TRIM(DISTINCT vt0.c1, vt0.c1))))OR((+ ('co')))))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) BETWEEN (((((0.37775134915380204)OR(vt0.c0)))OR(rt0.c0))) AND (vt0.c1))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c3)AND(TRIM(DISTINCT vt0.c1, vt0.c1))))OR((+ ('co')))))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((((0.37775134915380204)OR(vt0.c0)))OR(rt0.c0))) AND (vt0.c1))) ORDER BY ((((((((rt0.c3)AND(TRIM(DISTINCT vt0.c1, vt0.c1))))OR((+ ('co')))))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((LIKELY(DISTINCT t0.c0))/((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '-347285050', t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY CAST((((t0.c0))>=((t0.c0))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT t0.c0))/((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '-347285050', t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((((t0.c0))>=((t0.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM t0 WHERE (((LIKELY(DISTINCT t0.c0))/((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '-347285050', t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY CAST((((t0.c0))>=((t0.c0))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT t0.c0))/((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '-347285050', t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((((t0.c0))>=((t0.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM t0 WHERE (((LIKELY(DISTINCT t0.c0))/((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '-347285050', t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) ORDER BY CAST((((t0.c0))>=((t0.c0))) AS BLOB);
SELECT * FROM v0 WHERE (0.235175951440598);
SELECT SUM(count) FROM (SELECT ALL ((0.235175951440598) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (0.235175951440598);
SELECT SUM(count) FROM (SELECT ALL ((0.235175951440598) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (0.235175951440598);
SELECT COUNT(*) FROM v0, rt0 WHERE (HEX(((rt0.c1) NOT NULL))) ORDER BY rt0.c2 DESC, (- (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST, rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c1) NOT NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2 DESC, (- (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST, rt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (HEX(((rt0.c1) NOT NULL))) ORDER BY rt0.c2 DESC, (- (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST, rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c1) NOT NULL))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2 DESC, (- (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST, rt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (HEX(((rt0.c1) NOT NULL))) ORDER BY rt0.c2 DESC, (- (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST, rt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((vt0.c0) IS TRUE));
SELECT * FROM v0, rt0, vt0 WHERE (STRFTIME(((v0.c0) ISNULL), (((vt0.c1))>((rt0.c3))), (NOT (rt0.c0)))) ORDER BY 0.3407952875914394;
SELECT SUM(count) FROM (SELECT ((STRFTIME(((v0.c0) ISNULL), (((vt0.c1))>((rt0.c3))), (NOT (rt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY 0.3407952875914394);
SELECT * FROM v0, rt0, vt0 WHERE (STRFTIME(((v0.c0) ISNULL), (((vt0.c1))>((rt0.c3))), (NOT (rt0.c0)))) ORDER BY 0.3407952875914394;
SELECT SUM(count) FROM (SELECT ((STRFTIME(((v0.c0) ISNULL), (((vt0.c1))>((rt0.c3))), (NOT (rt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY 0.3407952875914394);
SELECT * FROM v0, rt0, vt0 WHERE (STRFTIME(((v0.c0) ISNULL), (((vt0.c1))>((rt0.c3))), (NOT (rt0.c0)))) ORDER BY 0.3407952875914394;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN '' THEN v0.c0 END) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ('r3'))) ORDER BY JULIANDAY(((0.8976911297276632)=(v0.c0)), ((v0.c0)OR(0.6697687822094459)), COALESCE(DISTINCT v0.c0, v0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '' THEN v0.c0 END) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ('r3'))) IS TRUE)  as count FROM v0 ORDER BY JULIANDAY(((0.8976911297276632)=(v0.c0)), ((v0.c0)OR(0.6697687822094459)), COALESCE(DISTINCT v0.c0, v0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN '' THEN v0.c0 END) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ('r3'))) ORDER BY JULIANDAY(((0.8976911297276632)=(v0.c0)), ((v0.c0)OR(0.6697687822094459)), COALESCE(DISTINCT v0.c0, v0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '' THEN v0.c0 END) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ('r3'))) IS TRUE)  as count FROM v0 ORDER BY JULIANDAY(((0.8976911297276632)=(v0.c0)), ((v0.c0)OR(0.6697687822094459)), COALESCE(DISTINCT v0.c0, v0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CASE WHEN '' THEN v0.c0 END) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ('r3'))) ORDER BY JULIANDAY(((0.8976911297276632)=(v0.c0)), ((v0.c0)OR(0.6697687822094459)), COALESCE(DISTINCT v0.c0, v0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)%(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)) WHERE ((+ (((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1) ISNULL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)%(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)%(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)) WHERE ((+ (((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1) ISNULL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)%(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((v0.c0 COLLATE RTRIM)%(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)) WHERE ((+ (((vt0.c1) ISNULL))));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c3 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c3);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c3 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c3);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c3 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)>=(rt0.c0)) THEN rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)>=(rt0.c0)) THEN rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)>=(rt0.c0)) THEN rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)>=(rt0.c0)) THEN rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)>=(rt0.c0)) THEN rt0.c0 COLLATE BINARY END);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (PRINTF(vt0.c1)) AND (((vt0.c0) NOTNULL)))) ORDER BY ((- (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (PRINTF(vt0.c1)) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((- (vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (PRINTF(vt0.c1)) AND (((vt0.c0) NOTNULL)))) ORDER BY ((- (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (PRINTF(vt0.c1)) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((- (vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (PRINTF(vt0.c1)) AND (((vt0.c0) NOTNULL)))) ORDER BY ((- (vt0.c0)) IN ());
SELECT * FROM t0, vt0 WHERE (CAST(HEX(t0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(t0.c0) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(HEX(t0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(t0.c0) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(HEX(t0.c0) AS TEXT));
SELECT * FROM vt0, v0 CROSS JOIN t0 ON COALESCE(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)), (vt0.c1 IN ())) CROSS JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (((((t0.c0) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN ((((rt0.c2, vt0.c1, rt0.c0))>=(('', NULL, rt0.c2)))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN ((((rt0.c2, vt0.c1, rt0.c0))>=(('', NULL, rt0.c2)))) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON COALESCE(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)), (vt0.c1 IN ())) CROSS JOIN rt0 ON ((rt0.c0 IN ()) IN ()));
SELECT * FROM vt0, v0 CROSS JOIN t0 ON COALESCE(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)), (vt0.c1 IN ())) CROSS JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (((((t0.c0) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN ((((rt0.c2, vt0.c1, rt0.c0))>=(('', NULL, rt0.c2)))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN ((((rt0.c2, vt0.c1, rt0.c0))>=(('', NULL, rt0.c2)))) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON COALESCE(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)), (vt0.c1 IN ())) CROSS JOIN rt0 ON ((rt0.c0 IN ()) IN ()));
SELECT * FROM vt0, v0 CROSS JOIN t0 ON COALESCE(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)), (vt0.c1 IN ())) CROSS JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (((((t0.c0) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN ((((rt0.c2, vt0.c1, rt0.c0))>=(('', NULL, rt0.c2)))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, v0, vt0, t0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0, t0);
SELECT COUNT(*) FROM rt0, v0, vt0, t0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0, t0);
SELECT COUNT(*) FROM rt0, v0, vt0, t0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT * FROM vt0, v0, t0, rt0 WHERE (CAST(1.7976931348623157E308 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(1.7976931348623157E308 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0, v0, t0, rt0);
SELECT * FROM vt0, v0, t0, rt0 WHERE (CAST(1.7976931348623157E308 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(1.7976931348623157E308 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0, v0, t0, rt0);
SELECT * FROM vt0, v0, t0, rt0 WHERE (CAST(1.7976931348623157E308 COLLATE BINARY AS TEXT));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (((vt0.c1) IS TRUE)) AND ((rt0.c2 IN (vt0.c0)))) CROSS JOIN v0 ON x'' WHERE ((+ ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (v0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (((vt0.c1) IS TRUE)) AND ((rt0.c2 IN (vt0.c0)))) CROSS JOIN v0 ON x'');
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (((vt0.c1) IS TRUE)) AND ((rt0.c2 IN (vt0.c0)))) CROSS JOIN v0 ON x'' WHERE ((+ ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (v0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (((vt0.c1) IS TRUE)) AND ((rt0.c2 IN (vt0.c0)))) CROSS JOIN v0 ON x'');
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (((vt0.c1) IS TRUE)) AND ((rt0.c2 IN (vt0.c0)))) CROSS JOIN v0 ON x'' WHERE ((+ ((- (v0.c0)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1))  WHEN ((t0.c0)*(rt0.c1)) THEN (((rt0.c1, rt0.c2, rt0.c3))>=((t0.c0, rt0.c3, t0.c0))) END) ORDER BY CASE WHEN rt0.c1 THEN x'1319' ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1))  WHEN ((t0.c0)*(rt0.c1)) THEN (((rt0.c1, rt0.c2, rt0.c3))>=((t0.c0, rt0.c3, t0.c0))) END) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN rt0.c1 THEN x'1319' ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1))  WHEN ((t0.c0)*(rt0.c1)) THEN (((rt0.c1, rt0.c2, rt0.c3))>=((t0.c0, rt0.c3, t0.c0))) END) ORDER BY CASE WHEN rt0.c1 THEN x'1319' ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1))  WHEN ((t0.c0)*(rt0.c1)) THEN (((rt0.c1, rt0.c2, rt0.c3))>=((t0.c0, rt0.c3, t0.c0))) END) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN rt0.c1 THEN x'1319' ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1))  WHEN ((t0.c0)*(rt0.c1)) THEN (((rt0.c1, rt0.c2, rt0.c3))>=((t0.c0, rt0.c3, t0.c0))) END) ORDER BY CASE WHEN rt0.c1 THEN x'1319' ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) END  NULLS FIRST;
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) THEN x'33fb6cbc' ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) THEN x'33fb6cbc' ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) THEN x'33fb6cbc' ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) THEN x'33fb6cbc' ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) THEN x'33fb6cbc' ELSE (~ (vt0.c0)) END);
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt0 ON (NOT (((v0.c0)IS NOT(rt0.c2)))) WHERE ((((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))AND(x'')))OR(((vt0.c1)IS NOT(x'515a'))))) ORDER BY (+ (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))AND(x'')))OR(((vt0.c1)IS NOT(x'515a'))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON (NOT (((v0.c0)IS NOT(rt0.c2)))) ORDER BY (+ (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END)) DESC);
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt0 ON (NOT (((v0.c0)IS NOT(rt0.c2)))) WHERE ((((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))AND(x'')))OR(((vt0.c1)IS NOT(x'515a'))))) ORDER BY (+ (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))AND(x'')))OR(((vt0.c1)IS NOT(x'515a'))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON (NOT (((v0.c0)IS NOT(rt0.c2)))) ORDER BY (+ (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END)) DESC);
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt0 ON (NOT (((v0.c0)IS NOT(rt0.c2)))) WHERE ((((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))AND(x'')))OR(((vt0.c1)IS NOT(x'515a'))))) ORDER BY (+ (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END)) DESC;
SELECT COUNT(*) FROM t0, v0 WHERE (((CASE t0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ISNULL)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((CASE t0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ISNULL)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((CASE t0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ISNULL));
SELECT ALL * FROM t0 WHERE ((('') NOT BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND ((- (t0.c0))))) ORDER BY LIKELIHOOD(DISTINCT '-1419335662', 0.9037284613632037) ASC  NULLS LAST, IFNULL(DISTINCT (((NULL, t0.c0, NULL))!=((x'', 0.6979226947535951, t0.c0))), ((t0.c0)-(t0.c0)))  NULLS LAST, ((HEX(t0.c0)) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY LIKELIHOOD(DISTINCT '-1419335662', 0.9037284613632037) ASC  NULLS LAST, IFNULL(DISTINCT (((NULL, t0.c0, NULL))<>((x'', 0.6979226947535951, t0.c0))), ((t0.c0)-(t0.c0)))  NULLS LAST, ((HEX(t0.c0)) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((('') NOT BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND ((- (t0.c0))))) ORDER BY LIKELIHOOD(DISTINCT '-1419335662', 0.9037284613632037) ASC  NULLS LAST, IFNULL(DISTINCT (((NULL, t0.c0, NULL))!=((x'', 0.6979226947535951, t0.c0))), ((t0.c0)-(t0.c0)))  NULLS LAST, ((HEX(t0.c0)) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY LIKELIHOOD(DISTINCT '-1419335662', 0.9037284613632037) ASC  NULLS LAST, IFNULL(DISTINCT (((NULL, t0.c0, NULL))<>((x'', 0.6979226947535951, t0.c0))), ((t0.c0)-(t0.c0)))  NULLS LAST, ((HEX(t0.c0)) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((('') NOT BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND ((- (t0.c0))))) ORDER BY LIKELIHOOD(DISTINCT '-1419335662', 0.9037284613632037) ASC  NULLS LAST, IFNULL(DISTINCT (((NULL, t0.c0, NULL))!=((x'', 0.6979226947535951, t0.c0))), ((t0.c0)-(t0.c0)))  NULLS LAST, ((HEX(t0.c0)) ISNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((TRIM(DISTINCT rt0.c0, rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT rt0.c0, rt0.c1) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((TRIM(DISTINCT rt0.c0, rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT rt0.c0, rt0.c1) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((TRIM(DISTINCT rt0.c0, rt0.c1) IN ()));
SELECT COUNT(*) FROM t0, vt0, v0 CROSS JOIN rt0 ON (x'03ab' COLLATE RTRIM IN ()) WHERE ((NOT (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, v0 CROSS JOIN rt0 ON (x'03ab' COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM t0, vt0, v0 CROSS JOIN rt0 ON (x'03ab' COLLATE RTRIM IN ()) WHERE ((NOT (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, v0 CROSS JOIN rt0 ON (x'03ab' COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM t0, vt0, v0 CROSS JOIN rt0 ON (x'03ab' COLLATE RTRIM IN ()) WHERE ((NOT (CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(')O')))AND(t0.c0)))OR(t0.c0)))GLOB(CAST(t0.c0 AS BLOB)))) ORDER BY ((((NULL)IS(t0.c0)))>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 717796062 THEN t0.c0 ELSE 0.1426786531490154 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(t0.c0)))OR(')O')))AND(t0.c0)))OR(t0.c0)))GLOB(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY ((((NULL)IS(t0.c0)))>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 717796062 THEN t0.c0 ELSE 0.1426786531490154 END)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(')O')))AND(t0.c0)))OR(t0.c0)))GLOB(CAST(t0.c0 AS BLOB)))) ORDER BY ((((NULL)IS(t0.c0)))>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 717796062 THEN t0.c0 ELSE 0.1426786531490154 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(t0.c0)))OR(')O')))AND(t0.c0)))OR(t0.c0)))GLOB(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY ((((NULL)IS(t0.c0)))>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 717796062 THEN t0.c0 ELSE 0.1426786531490154 END)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(')O')))AND(t0.c0)))OR(t0.c0)))GLOB(CAST(t0.c0 AS BLOB)))) ORDER BY ((((NULL)IS(t0.c0)))>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 717796062 THEN t0.c0 ELSE 0.1426786531490154 END)) ASC;
SELECT * FROM v0, vt0, rt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) ORDER BY ((json_object(vt0.c0, rt0.c3)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((json_object(vt0.c0, rt0.c3)) IS TRUE));
SELECT * FROM v0, vt0, rt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) ORDER BY ((json_object(vt0.c0, rt0.c3)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((json_object(vt0.c0, rt0.c3)) IS TRUE));
SELECT COUNT(*) FROM t0 WHERE (UPPER(DISTINCT (NOT (t0.c0)))) ORDER BY ((((t0.c0)&(t0.c0)))GLOB(((t0.c0) BETWEEN (t0.c0) AND (x'7c28')))) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (NOT (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)&(t0.c0)))GLOB(((t0.c0) BETWEEN (t0.c0) AND (x'7c28')))) DESC);
SELECT COUNT(*) FROM t0 WHERE (UPPER(DISTINCT (NOT (t0.c0)))) ORDER BY ((((t0.c0)&(t0.c0)))GLOB(((t0.c0) BETWEEN (t0.c0) AND (x'7c28')))) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (NOT (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)&(t0.c0)))GLOB(((t0.c0) BETWEEN (t0.c0) AND (x'7c28')))) DESC);
SELECT COUNT(*) FROM t0 WHERE (UPPER(DISTINCT (NOT (t0.c0)))) ORDER BY ((((t0.c0)&(t0.c0)))GLOB(((t0.c0) BETWEEN (t0.c0) AND (x'7c28')))) DESC;
SELECT ALL * FROM rt0, v0, t0 WHERE (((((((((CAST(NULL AS INTEGER))AND(CAST(v0.c0 AS TEXT))))AND(((((v0.c0)AND(rt0.c1)))OR(rt0.c0)))))AND(TRIM(DISTINCT '1892748396', rt0.c3))))OR(CASE WHEN t0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(NULL AS INTEGER))AND(CAST(v0.c0 AS TEXT))))AND(((((v0.c0)AND(rt0.c1)))OR(rt0.c0)))))AND(TRIM(DISTINCT '1892748396', rt0.c3))))OR(CASE WHEN t0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM rt0, v0, t0);
SELECT ALL * FROM rt0, v0, t0 WHERE (((((((((CAST(NULL AS INTEGER))AND(CAST(v0.c0 AS TEXT))))AND(((((v0.c0)AND(rt0.c1)))OR(rt0.c0)))))AND(TRIM(DISTINCT '1892748396', rt0.c3))))OR(CASE WHEN t0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(NULL AS INTEGER))AND(CAST(v0.c0 AS TEXT))))AND(((((v0.c0)AND(rt0.c1)))OR(rt0.c0)))))AND(TRIM(DISTINCT '1892748396', rt0.c3))))OR(CASE WHEN t0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM rt0, v0, t0);
SELECT ALL * FROM rt0, v0, t0 WHERE (((((((((CAST(NULL AS INTEGER))AND(CAST(v0.c0 AS TEXT))))AND(((((v0.c0)AND(rt0.c1)))OR(rt0.c0)))))AND(TRIM(DISTINCT '1892748396', rt0.c3))))OR(CASE WHEN t0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, v0 WHERE ('0.686939312019849') ORDER BY ((NULLIF(DISTINCT v0.c0, vt0.c1))=((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (('0.686939312019849') IS TRUE)  as count FROM vt0, t0, rt0, v0 ORDER BY ((NULLIF(DISTINCT v0.c0, vt0.c1))=((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, v0 WHERE ('0.686939312019849') ORDER BY ((NULLIF(DISTINCT v0.c0, vt0.c1))=((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (('0.686939312019849') IS TRUE)  as count FROM vt0, t0, rt0, v0 ORDER BY ((NULLIF(DISTINCT v0.c0, vt0.c1))=((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, v0 WHERE ('0.686939312019849') ORDER BY ((NULLIF(DISTINCT v0.c0, vt0.c1))=((v0.c0 IN ())));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))=((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE RTRIM))=((x'')))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))=((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE RTRIM))=((x'')))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))=((x''))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((v0.c0)<>(LIKELIHOOD(DISTINCT v0.c0, 0.35954478063841677))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)!=(LIKELIHOOD(DISTINCT v0.c0, 0.35954478063841677)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((v0.c0)<>(LIKELIHOOD(DISTINCT v0.c0, 0.35954478063841677))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)!=(LIKELIHOOD(DISTINCT v0.c0, 0.35954478063841677)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (((v0.c0)<>(LIKELIHOOD(DISTINCT v0.c0, 0.35954478063841677))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON '' COLLATE RTRIM CROSS JOIN t0 ON (~ (LIKELIHOOD(DISTINCT rt0.c2, 0.672385630059895))) WHERE ((~ (t0.c0 COLLATE NOCASE))) ORDER BY CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)  NULLS LAST, ((+ (rt0.c2)) IN ())  NULLS LAST, (NOT (((rt0.c3) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON '' COLLATE RTRIM CROSS JOIN t0 ON (~ (LIKELIHOOD(DISTINCT rt0.c2, 0.672385630059895))) ORDER BY CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)  NULLS LAST, ((+ (rt0.c2)) IN ())  NULLS LAST, (NOT (((rt0.c3) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON '' COLLATE RTRIM CROSS JOIN t0 ON (~ (LIKELIHOOD(DISTINCT rt0.c2, 0.672385630059895))) WHERE ((~ (t0.c0 COLLATE NOCASE))) ORDER BY CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)  NULLS LAST, ((+ (rt0.c2)) IN ())  NULLS LAST, (NOT (((rt0.c3) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON '' COLLATE RTRIM CROSS JOIN t0 ON (~ (LIKELIHOOD(DISTINCT rt0.c2, 0.672385630059895))) ORDER BY CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)  NULLS LAST, ((+ (rt0.c2)) IN ())  NULLS LAST, (NOT (((rt0.c3) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON '' COLLATE RTRIM CROSS JOIN t0 ON (~ (LIKELIHOOD(DISTINCT rt0.c2, 0.672385630059895))) WHERE ((~ (t0.c0 COLLATE NOCASE))) ORDER BY CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)  NULLS LAST, ((+ (rt0.c2)) IN ())  NULLS LAST, (NOT (((rt0.c3) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (COALESCE((v0.c0 IN ()), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND('-897740706')))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((v0.c0 IN ()), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND('-897740706')))AND(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (COALESCE((v0.c0 IN ()), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND('-897740706')))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((v0.c0 IN ()), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND('-897740706')))AND(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (COALESCE((v0.c0 IN ()), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND('-897740706')))AND(v0.c0))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN ((rt0.c1)<=(rt0.c3)) THEN ((rt0.c1)AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<=(rt0.c3)) THEN ((rt0.c1)AND(v0.c0)) END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN ((rt0.c1)<=(rt0.c3)) THEN ((rt0.c1)AND(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<=(rt0.c3)) THEN ((rt0.c1)AND(v0.c0)) END) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CASE WHEN ((rt0.c1)<=(rt0.c3)) THEN ((rt0.c1)AND(v0.c0)) END);
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0 WHERE (((CAST(rt0.c1 AS TEXT))<<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))<<(vt0.c0))) IS TRUE)  as count FROM v0, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0 WHERE (((CAST(rt0.c1 AS TEXT))<<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))<<(vt0.c0))) IS TRUE)  as count FROM v0, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0 WHERE (((CAST(rt0.c1 AS TEXT))<<(vt0.c0)));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN 'ƴV4CFVh(' WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END IN ()) CROSS JOIN t0 ON vt0.c0 WHERE (((IFNULL(vt0.c0, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN '-897740706' END) AND (((v0.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c0, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN '-897740706' END) AND (((v0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN 'ƴV4CFVh(' WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END IN ()) CROSS JOIN t0 ON vt0.c0);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN 'ƴV4CFVh(' WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END IN ()) CROSS JOIN t0 ON vt0.c0 WHERE (((IFNULL(vt0.c0, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN '-897740706' END) AND (((v0.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c0, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN '-897740706' END) AND (((v0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN 'ƴV4CFVh(' WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END IN ()) CROSS JOIN t0 ON vt0.c0);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN vt0.c0 THEN 'ƴV4CFVh(' WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END IN ()) CROSS JOIN t0 ON vt0.c0 WHERE (((IFNULL(vt0.c0, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN '-897740706' END) AND (((v0.c0)GLOB(vt0.c1)))));
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN (t0.c0 IN (v0.c0, NULL)) THEN ((t0.c0)*(v0.c0)) ELSE CAST(v0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN (v0.c0, NULL)) THEN ((t0.c0)*(v0.c0)) ELSE CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN (t0.c0 IN (v0.c0, NULL)) THEN ((t0.c0)*(v0.c0)) ELSE CAST(v0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN (v0.c0, NULL)) THEN ((t0.c0)*(v0.c0)) ELSE CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN (t0.c0 IN (v0.c0, NULL)) THEN ((t0.c0)*(v0.c0)) ELSE CAST(v0.c0 AS REAL) END);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c3);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CAST(v0.c0 AS INTEGER))|(((rt0.c3) IS FALSE))) LEFT OUTER JOIN t0 ON ((((v0.c0))>(('䙌s11rx&J'))) IN ()) CROSS JOIN vt0 ON ((((t0.c0)OR(vt0.c1))) IS FALSE) WHERE (-2469514.0) ORDER BY (((rt0.c3)) BETWEEN (('1274864908')) AND (((rt0.c0 IN ())))) ASC  NULLS LAST, ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), (((((+ (t0.c0)))OR((v0.c0 IN ()))))OR(((v0.c0)==(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-2469514.0) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CAST(v0.c0 AS INTEGER))|(((rt0.c3) IS FALSE))) LEFT OUTER JOIN t0 ON ((((v0.c0))>(('䙌s11rx&J'))) IN ()) CROSS JOIN vt0 ON ((((t0.c0)OR(vt0.c1))) IS FALSE) ORDER BY (((rt0.c3)) BETWEEN (('1274864908')) AND (((rt0.c0 IN ())))) ASC  NULLS LAST, ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), (((((+ (t0.c0)))OR((v0.c0 IN ()))))OR(((v0.c0)==(rt0.c0)))) DESC);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CAST(v0.c0 AS INTEGER))|(((rt0.c3) IS FALSE))) LEFT OUTER JOIN t0 ON ((((v0.c0))>(('䙌s11rx&J'))) IN ()) CROSS JOIN vt0 ON ((((t0.c0)OR(vt0.c1))) IS FALSE) WHERE (-2469514.0) ORDER BY (((rt0.c3)) BETWEEN (('1274864908')) AND (((rt0.c0 IN ())))) ASC  NULLS LAST, ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), (((((+ (t0.c0)))OR((v0.c0 IN ()))))OR(((v0.c0)==(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-2469514.0) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CAST(v0.c0 AS INTEGER))|(((rt0.c3) IS FALSE))) LEFT OUTER JOIN t0 ON ((((v0.c0))>(('䙌s11rx&J'))) IN ()) CROSS JOIN vt0 ON ((((t0.c0)OR(vt0.c1))) IS FALSE) ORDER BY (((rt0.c3)) BETWEEN (('1274864908')) AND (((rt0.c0 IN ())))) ASC  NULLS LAST, ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), (((((+ (t0.c0)))OR((v0.c0 IN ()))))OR(((v0.c0)==(rt0.c0)))) DESC);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((CAST(v0.c0 AS INTEGER))|(((rt0.c3) IS FALSE))) LEFT OUTER JOIN t0 ON ((((v0.c0))>(('䙌s11rx&J'))) IN ()) CROSS JOIN vt0 ON ((((t0.c0)OR(vt0.c1))) IS FALSE) WHERE (-2469514.0) ORDER BY (((rt0.c3)) BETWEEN (('1274864908')) AND (((rt0.c0 IN ())))) ASC  NULLS LAST, ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), (((((+ (t0.c0)))OR((v0.c0 IN ()))))OR(((v0.c0)==(rt0.c0)))) DESC;
SELECT * FROM t0 WHERE (((t0.c0)+(t0.c0)) COLLATE NOCASE) ORDER BY t0.c0, ((((CAST(t0.c0 AS NUMERIC))OR(-2.6608706E7)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)+(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY t0.c0, ((((CAST(t0.c0 AS NUMERIC))OR(-2.6608706E7)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC);
SELECT * FROM t0 WHERE (((t0.c0)+(t0.c0)) COLLATE NOCASE) ORDER BY t0.c0, ((((CAST(t0.c0 AS NUMERIC))OR(-2.6608706E7)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)+(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY t0.c0, ((((CAST(t0.c0 AS NUMERIC))OR(-2.6608706E7)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC);
SELECT * FROM t0 WHERE (((t0.c0)+(t0.c0)) COLLATE NOCASE) ORDER BY t0.c0, ((((CAST(t0.c0 AS NUMERIC))OR(-2.6608706E7)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 END)>>(UPPER(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c3 END)>>(UPPER(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 END)>>(UPPER(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c3 END)>>(UPPER(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 END)>>(UPPER(rt0.c2))));
SELECT * FROM vt0 CROSS JOIN v0 ON (((((((((+ (vt0.c0)))AND(((v0.c0)>=(t0.c0)))))AND(((vt0.c0)||(v0.c0)))))AND((vt0.c1 IN (vt0.c0)))))AND(((vt0.c1)<(t0.c0)))) INNER JOIN t0 ON CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)) THEN (((t0.c0))<((v0.c0))) END WHERE (COALESCE(vt0.c0, vt0.c1, vt0.c1, t0.c0) COLLATE NOCASE) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (NULL COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(vt0.c0, vt0.c1, vt0.c1, t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((((((((+ (vt0.c0)))AND(((v0.c0)>=(t0.c0)))))AND(((vt0.c0)||(v0.c0)))))AND((vt0.c1 IN (vt0.c0)))))AND(((vt0.c1)<(t0.c0)))) INNER JOIN t0 ON CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)) THEN (((t0.c0))<((v0.c0))) END ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (NULL COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON (((((((((+ (vt0.c0)))AND(((v0.c0)>=(t0.c0)))))AND(((vt0.c0)||(v0.c0)))))AND((vt0.c1 IN (vt0.c0)))))AND(((vt0.c1)<(t0.c0)))) INNER JOIN t0 ON CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)) THEN (((t0.c0))<((v0.c0))) END WHERE (COALESCE(vt0.c0, vt0.c1, vt0.c1, t0.c0) COLLATE NOCASE) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (NULL COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(vt0.c0, vt0.c1, vt0.c1, t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((((((((+ (vt0.c0)))AND(((v0.c0)>=(t0.c0)))))AND(((vt0.c0)||(v0.c0)))))AND((vt0.c1 IN (vt0.c0)))))AND(((vt0.c1)<(t0.c0)))) INNER JOIN t0 ON CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)) THEN (((t0.c0))<((v0.c0))) END ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (NULL COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON (((((((((+ (vt0.c0)))AND(((v0.c0)>=(t0.c0)))))AND(((vt0.c0)||(v0.c0)))))AND((vt0.c1 IN (vt0.c0)))))AND(((vt0.c1)<(t0.c0)))) INNER JOIN t0 ON CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)) THEN (((t0.c0))<((v0.c0))) END WHERE (COALESCE(vt0.c0, vt0.c1, vt0.c1, t0.c0) COLLATE NOCASE) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (NULL COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL * FROM t0, v0, vt0, rt0 WHERE (CAST(((((v0.c0)OR(vt0.c1)))AND(t0.c0)) AS TEXT)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)OR(vt0.c1)))AND(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, v0, vt0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0, rt0 WHERE (CAST(((((v0.c0)OR(vt0.c1)))AND(t0.c0)) AS TEXT)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)OR(vt0.c1)))AND(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, v0, vt0, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0, rt0 WHERE (CAST(((((v0.c0)OR(vt0.c1)))AND(t0.c0)) AS TEXT)) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((vt0.c0 COLLATE NOCASE))>((rt0.c1 COLLATE BINARY)))) ORDER BY (((CASE WHEN x'9f9d' THEN vt0.c1 ELSE rt0.c1 END, (NOT (t0.c0)), LOWER(vt0.c1)))>=((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((vt0.c1)IS NOT(vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))>((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((CASE WHEN x'9f9d' THEN vt0.c1 ELSE rt0.c1 END, (NOT (t0.c0)), LOWER(vt0.c1)))>=((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((vt0.c1)IS NOT(vt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((vt0.c0 COLLATE NOCASE))>((rt0.c1 COLLATE BINARY)))) ORDER BY (((CASE WHEN x'9f9d' THEN vt0.c1 ELSE rt0.c1 END, (NOT (t0.c0)), LOWER(vt0.c1)))>=((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((vt0.c1)IS NOT(vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))>((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((CASE WHEN x'9f9d' THEN vt0.c1 ELSE rt0.c1 END, (NOT (t0.c0)), LOWER(vt0.c1)))>=((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((vt0.c1)IS NOT(vt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((vt0.c0 COLLATE NOCASE))>((rt0.c1 COLLATE BINARY)))) ORDER BY (((CASE WHEN x'9f9d' THEN vt0.c1 ELSE rt0.c1 END, (NOT (t0.c0)), LOWER(vt0.c1)))>=((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), ((vt0.c1)IS NOT(vt0.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, v0, vt0 WHERE (((((((rt0.c2)<<(vt0.c1)))AND((vt0.c1 IN ()))))AND(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)<<(vt0.c1)))AND((vt0.c1 IN ()))))AND(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t0, rt0, v0, vt0);
SELECT COUNT(*) FROM t0, rt0, v0, vt0 WHERE (((((((rt0.c2)<<(vt0.c1)))AND((vt0.c1 IN ()))))AND(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)<<(vt0.c1)))AND((vt0.c1 IN ()))))AND(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t0, rt0, v0, vt0);
SELECT COUNT(*) FROM t0, rt0, v0, vt0 WHERE (((((((rt0.c2)<<(vt0.c1)))AND((vt0.c1 IN ()))))AND(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CAST(((0.7733743220905457)LIKE(rt0.c0)) AS REAL) WHERE (CASE ((rt0.c2)||(rt0.c3))  WHEN -1.329930782E9 THEN (((rt0.c1))>=((rt0.c3))) WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN 0x4ec207f3 WHEN x'bcd9' THEN ((rt0.c3)>>(t0.c0)) ELSE ((rt0.c0)<(rt0.c3)) END) ORDER BY (+ ((NOT (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)||(rt0.c3))  WHEN -1.329930782E9 THEN (((rt0.c1))>=((rt0.c3))) WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN 0X4ec207f3 WHEN x'bcd9' THEN ((rt0.c3)>>(t0.c0)) ELSE ((rt0.c0)<(rt0.c3)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CAST(((0.7733743220905457)LIKE(rt0.c0)) AS REAL) ORDER BY (+ ((NOT (rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CAST(((0.7733743220905457)LIKE(rt0.c0)) AS REAL) WHERE (CASE ((rt0.c2)||(rt0.c3))  WHEN -1.329930782E9 THEN (((rt0.c1))>=((rt0.c3))) WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN 0x4ec207f3 WHEN x'bcd9' THEN ((rt0.c3)>>(t0.c0)) ELSE ((rt0.c0)<(rt0.c3)) END) ORDER BY (+ ((NOT (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)||(rt0.c3))  WHEN -1.329930782E9 THEN (((rt0.c1))>=((rt0.c3))) WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN 0X4ec207f3 WHEN x'bcd9' THEN ((rt0.c3)>>(t0.c0)) ELSE ((rt0.c0)<(rt0.c3)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CAST(((0.7733743220905457)LIKE(rt0.c0)) AS REAL) ORDER BY (+ ((NOT (rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON CAST(((0.7733743220905457)LIKE(rt0.c0)) AS REAL) WHERE (CASE ((rt0.c2)||(rt0.c3))  WHEN -1.329930782E9 THEN (((rt0.c1))>=((rt0.c3))) WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN 0x4ec207f3 WHEN x'bcd9' THEN ((rt0.c3)>>(t0.c0)) ELSE ((rt0.c0)<(rt0.c3)) END) ORDER BY (+ ((NOT (rt0.c0)))) ASC;
SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN ()))AND(((t0.c0) BETWEEN (0.10918728142239464) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN ()))AND(((t0.c0) BETWEEN (0.10918728142239464) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN ()))AND(((t0.c0) BETWEEN (0.10918728142239464) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN ()))AND(((t0.c0) BETWEEN (0.10918728142239464) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN ()))AND(((t0.c0) BETWEEN (0.10918728142239464) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))==(NULL)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))==(NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))==(NULL)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))==(NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))==(NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))AND(x'6c93')))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))-(LIKELIHOOD(NULL, 0.09594412011209597)))) ORDER BY ((((rt0.c2 IN ())))>((((rt0.c3) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))AND(x'6c93')))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))-(LIKELIHOOD(NULL, 0.09594412011209597)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 IN ())))>((((rt0.c3) NOT NULL)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))AND(x'6c93')))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))-(LIKELIHOOD(NULL, 0.09594412011209597)))) ORDER BY ((((rt0.c2 IN ())))>((((rt0.c3) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))AND(x'6c93')))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))-(LIKELIHOOD(NULL, 0.09594412011209597)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 IN ())))>((((rt0.c3) NOT NULL)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))AND(x'6c93')))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1)))-(LIKELIHOOD(NULL, 0.09594412011209597)))) ORDER BY ((((rt0.c2 IN ())))>((((rt0.c3) NOT NULL)))) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c0)LIKE(v0.c0))) IS FALSE)) ORDER BY json_insert(((v0.c0)|(v0.c0)), (~ (v0.c0)), v0.c0) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)LIKE(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY json_insert(((v0.c0)|(v0.c0)), (~ (v0.c0)), v0.c0) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0)LIKE(v0.c0))) IS FALSE)) ORDER BY json_insert(((v0.c0)|(v0.c0)), (~ (v0.c0)), v0.c0) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)LIKE(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY json_insert(((v0.c0)|(v0.c0)), (~ (v0.c0)), v0.c0) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((~ (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((~ (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((~ (((vt0.c0) NOT NULL))));
SELECT ALL * FROM t0, v0, rt0 WHERE (((((((((MAX(rt0.c0, rt0.c0))AND('-1209437736')))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))))OR((((t0.c0))!=((rt0.c1))))))AND(((rt0.c1)>=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((MAX(rt0.c0, rt0.c0))AND('-1209437736')))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))))OR((((t0.c0))<>((rt0.c1))))))AND(((rt0.c1)>=(t0.c0))))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL * FROM t0, v0, rt0 WHERE (((((((((MAX(rt0.c0, rt0.c0))AND('-1209437736')))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))))OR((((t0.c0))!=((rt0.c1))))))AND(((rt0.c1)>=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((MAX(rt0.c0, rt0.c0))AND('-1209437736')))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))))OR((((t0.c0))<>((rt0.c1))))))AND(((rt0.c1)>=(t0.c0))))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL * FROM t0, v0, rt0 WHERE (((((((((MAX(rt0.c0, rt0.c0))AND('-1209437736')))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))))OR((((t0.c0))!=((rt0.c1))))))AND(((rt0.c1)>=(t0.c0)))));
SELECT COUNT(*) FROM rt0, v0, t0, vt0 WHERE ((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))&(CAST(x'' AS TEXT)))) ORDER BY (~ (((rt0.c2)LIKE(t0.c0)))) ASC, SQLITE_COMPILEOPTION_USED(NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))&(CAST(x'' AS TEXT)))) IS TRUE)  as count FROM rt0, v0, t0, vt0 ORDER BY (~ (((rt0.c2)LIKE(t0.c0)))) ASC, SQLITE_COMPILEOPTION_USED(NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, t0, vt0 WHERE ((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))&(CAST(x'' AS TEXT)))) ORDER BY (~ (((rt0.c2)LIKE(t0.c0)))) ASC, SQLITE_COMPILEOPTION_USED(NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))&(CAST(x'' AS TEXT)))) IS TRUE)  as count FROM rt0, v0, t0, vt0 ORDER BY (~ (((rt0.c2)LIKE(t0.c0)))) ASC, SQLITE_COMPILEOPTION_USED(NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, t0, vt0 WHERE ((((((t0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))&(CAST(x'' AS TEXT)))) ORDER BY (~ (((rt0.c2)LIKE(t0.c0)))) ASC, SQLITE_COMPILEOPTION_USED(NULL)  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN t0 ON t0.c0 COLLATE BINARY WHERE (v0.c0) ORDER BY ((CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0 CROSS JOIN t0 ON t0.c0 COLLATE BINARY ORDER BY ((CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN t0 ON t0.c0 COLLATE BINARY WHERE (v0.c0) ORDER BY ((CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0 CROSS JOIN t0 ON t0.c0 COLLATE BINARY ORDER BY ((CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN t0 ON t0.c0 COLLATE BINARY WHERE (v0.c0) ORDER BY ((CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, rt0, v0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))+(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))+(rt0.c1))) IS TRUE)  as count FROM vt0, t0, rt0, v0);
SELECT COUNT(*) FROM vt0, t0, rt0, v0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))+(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))+(rt0.c1))) IS TRUE)  as count FROM vt0, t0, rt0, v0);
SELECT COUNT(*) FROM vt0, t0, rt0, v0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))+(rt0.c1)));
SELECT ALL * FROM t0, vt0 WHERE (LIKELY(((NULL) ISNULL))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((LIKELY(((NULL) ISNULL))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0);
SELECT ALL * FROM t0, vt0 WHERE (LIKELY(((NULL) ISNULL))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((LIKELY(((NULL) ISNULL))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0);
SELECT ALL * FROM t0, vt0 WHERE (LIKELY(((NULL) ISNULL))) ORDER BY vt0.c0;
SELECT * FROM t0, rt0 LEFT OUTER JOIN v0 ON CASE WHEN NULLIF(DISTINCT rt0.c3, v0.c0) THEN ((rt0.c3) NOTNULL) ELSE ((NULL) BETWEEN ('0.23068116905142677') AND (rt0.c1)) END WHERE (DATETIME(CAST(rt0.c3 AS NUMERIC), rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE NOCASE, HEX(rt0.c1), v0.c0 COLLATE NOCASE)) ORDER BY ((((t0.c0)IS NOT(rt0.c3)))<>(((t0.c0)|(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(CAST(rt0.c3 AS NUMERIC), rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE NOCASE, HEX(rt0.c1), v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN v0 ON CASE WHEN NULLIF(DISTINCT rt0.c3, v0.c0) THEN ((rt0.c3) NOTNULL) ELSE ((NULL) BETWEEN ('0.23068116905142677') AND (rt0.c1)) END ORDER BY ((((t0.c0)IS NOT(rt0.c3)))!=(((t0.c0)|(rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM t0, rt0 LEFT OUTER JOIN v0 ON CASE WHEN NULLIF(DISTINCT rt0.c3, v0.c0) THEN ((rt0.c3) NOTNULL) ELSE ((NULL) BETWEEN ('0.23068116905142677') AND (rt0.c1)) END WHERE (DATETIME(CAST(rt0.c3 AS NUMERIC), rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE NOCASE, HEX(rt0.c1), v0.c0 COLLATE NOCASE)) ORDER BY ((((t0.c0)IS NOT(rt0.c3)))<>(((t0.c0)|(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(CAST(rt0.c3 AS NUMERIC), rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE NOCASE, HEX(rt0.c1), v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN v0 ON CASE WHEN NULLIF(DISTINCT rt0.c3, v0.c0) THEN ((rt0.c3) NOTNULL) ELSE ((NULL) BETWEEN ('0.23068116905142677') AND (rt0.c1)) END ORDER BY ((((t0.c0)IS NOT(rt0.c3)))!=(((t0.c0)|(rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM t0, rt0 LEFT OUTER JOIN v0 ON CASE WHEN NULLIF(DISTINCT rt0.c3, v0.c0) THEN ((rt0.c3) NOTNULL) ELSE ((NULL) BETWEEN ('0.23068116905142677') AND (rt0.c1)) END WHERE (DATETIME(CAST(rt0.c3 AS NUMERIC), rt0.c1 COLLATE NOCASE, rt0.c2 COLLATE NOCASE, HEX(rt0.c1), v0.c0 COLLATE NOCASE)) ORDER BY ((((t0.c0)IS NOT(rt0.c3)))<>(((t0.c0)|(rt0.c2)))) DESC  NULLS FIRST;
SELECT * FROM t0, v0 INNER JOIN rt0 ON ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, t0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0))) IN ()) CROSS JOIN vt0 ON (((+ (vt0.c0)))>>(rt0.c3)) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 NOT INDEXED, v0 INNER JOIN rt0 ON ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, t0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0))) IN ()) CROSS JOIN vt0 ON (((+ (vt0.c0)))>>(rt0.c3)));
SELECT * FROM t0, v0 INNER JOIN rt0 ON ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, t0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0))) IN ()) CROSS JOIN vt0 ON (((+ (vt0.c0)))>>(rt0.c3)) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 NOT INDEXED, v0 INNER JOIN rt0 ON ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, t0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0))) IN ()) CROSS JOIN vt0 ON (((+ (vt0.c0)))>>(rt0.c3)));
SELECT * FROM t0, v0 INNER JOIN rt0 ON ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, t0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, v0.c0))) IN ()) CROSS JOIN vt0 ON (((+ (vt0.c0)))>>(rt0.c3)) WHERE ('');
SELECT ALL * FROM t0, vt0, v0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((~ (vt0.c1)) IN ()));
SELECT ALL * FROM v0 WHERE (CAST(-8978392 AS BLOB)) ORDER BY (NOT (((((((((v0.c0)AND(-1594033194)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC, ((CASE '-1209437736'  WHEN 0.7976053041459403 THEN v0.c0 ELSE v0.c0 END)IS((v0.c0 IN (v0.c0)))), CAST((- (v0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST(-8978392 AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (NOT (((((((((v0.c0)AND(-1594033194)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC, ((CASE '-1209437736'  WHEN 0.7976053041459403 THEN v0.c0 ELSE v0.c0 END)IS((v0.c0 IN (v0.c0)))), CAST((- (v0.c0)) AS NUMERIC));
SELECT ALL * FROM v0 WHERE (CAST(-8978392 AS BLOB)) ORDER BY (NOT (((((((((v0.c0)AND(-1594033194)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC, ((CASE '-1209437736'  WHEN 0.7976053041459403 THEN v0.c0 ELSE v0.c0 END)IS((v0.c0 IN (v0.c0)))), CAST((- (v0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST(-8978392 AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (NOT (((((((((v0.c0)AND(-1594033194)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC, ((CASE '-1209437736'  WHEN 0.7976053041459403 THEN v0.c0 ELSE v0.c0 END)IS((v0.c0 IN (v0.c0)))), CAST((- (v0.c0)) AS NUMERIC));
SELECT ALL * FROM v0 WHERE (CAST(-8978392 AS BLOB)) ORDER BY (NOT (((((((((v0.c0)AND(-1594033194)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) DESC, ((CASE '-1209437736'  WHEN 0.7976053041459403 THEN v0.c0 ELSE v0.c0 END)IS((v0.c0 IN (v0.c0)))), CAST((- (v0.c0)) AS NUMERIC);
SELECT COUNT(*) FROM t0 WHERE ((((IFNULL(t0.c0, t0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0))))<(((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), DATE(t0.c0, t0.c0, t0.c0), (~ ('-1624320671')))))) ORDER BY (((NULL COLLATE NOCASE))<>((CAST(t0.c0 AS BLOB))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(t0.c0, t0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0))))<(((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), DATE(t0.c0, t0.c0, t0.c0), (~ ('-1624320671')))))) IS TRUE)  as count FROM t0 ORDER BY (((NULL COLLATE NOCASE))!=((CAST(t0.c0 AS BLOB))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((IFNULL(t0.c0, t0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0))))<(((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), DATE(t0.c0, t0.c0, t0.c0), (~ ('-1624320671')))))) ORDER BY (((NULL COLLATE NOCASE))<>((CAST(t0.c0 AS BLOB))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(t0.c0, t0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0))))<(((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), DATE(t0.c0, t0.c0, t0.c0), (~ ('-1624320671')))))) IS TRUE)  as count FROM t0 ORDER BY (((NULL COLLATE NOCASE))!=((CAST(t0.c0 AS BLOB))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((IFNULL(t0.c0, t0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0))))<(((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), DATE(t0.c0, t0.c0, t0.c0), (~ ('-1624320671')))))) ORDER BY (((NULL COLLATE NOCASE))<>((CAST(t0.c0 AS BLOB))))  NULLS LAST;
SELECT ALL * FROM rt0, t0, v0 WHERE (CASE WHEN ((v0.c0)OR(rt0.c2)) THEN (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)OR(rt0.c2)) THEN (- (rt0.c0)) END) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL * FROM rt0, t0, v0 WHERE (CASE WHEN ((v0.c0)OR(rt0.c2)) THEN (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)OR(rt0.c2)) THEN (- (rt0.c0)) END) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL * FROM rt0, t0, v0 WHERE (CASE WHEN ((v0.c0)OR(rt0.c2)) THEN (- (rt0.c0)) END);
SELECT * FROM rt0, v0, t0, vt0 WHERE (HEX(0Xffffffff91fa6b05)) ORDER BY ((0.049579787521631835)>=(((((((((rt0.c0)OR(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(0Xffffffff91fa6b05)) IS TRUE)  as count FROM rt0, v0, t0, vt0 ORDER BY ((0.049579787521631835)>=(((((((((rt0.c0)OR(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0, v0, t0, vt0 WHERE (HEX(0Xffffffff91fa6b05)) ORDER BY ((0.049579787521631835)>=(((((((((rt0.c0)OR(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(0Xffffffff91fa6b05)) IS TRUE)  as count FROM rt0, v0, t0, vt0 ORDER BY ((0.049579787521631835)>=(((((((((rt0.c0)OR(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1)))) ASC  NULLS LAST);
SELECT * FROM rt0, v0, t0, vt0 WHERE (HEX(0Xffffffff91fa6b05)) ORDER BY ((0.049579787521631835)>=(((((((((rt0.c0)OR(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (vt0.c0) ORDER BY (NOT ((- (vt0.c1))))  NULLS LAST, (((vt0.c1 IN ()))OR((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (NOT ((- (vt0.c1))))  NULLS LAST, (((vt0.c1 IN ()))OR((v0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (vt0.c0) ORDER BY (NOT ((- (vt0.c1))))  NULLS LAST, (((vt0.c1 IN ()))OR((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (NOT ((- (vt0.c1))))  NULLS LAST, (((vt0.c1 IN ()))OR((v0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (vt0.c0) ORDER BY (NOT ((- (vt0.c1))))  NULLS LAST, (((vt0.c1 IN ()))OR((v0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((t0.c0, vt0.c1, rt0.c3))) THEN ((v0.c0)>(vt0.c0)) END CROSS JOIN t0 ON ((load_extension(rt0.c1, NULL)) NOTNULL) RIGHT OUTER JOIN v0 ON ((CAST(-1.845859579E9 AS BLOB)) NOTNULL) WHERE ((((rt0.c2, vt0.c0, rt0.c3, v0.c0, 0.6707355556997304)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM, (- (rt0.c2)), CAST(rt0.c1 AS BLOB), ((((t0.c0)OR(rt0.c2)))OR(t0.c0)), ((x'') IS FALSE))) AND (((v0.c0 IN ()), NULL, ((rt0.c1) NOT NULL), x'' COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC))))) ORDER BY (((rt0.c2, '', rt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC), '-145409133')) AND ((rt0.c2, (+ (rt0.c3)), (rt0.c2 IN (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, vt0.c0, rt0.c3, v0.c0, 0.6707355556997304)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM, (- (rt0.c2)), CAST(rt0.c1 AS BLOB), ((((t0.c0)OR(rt0.c2)))OR(t0.c0)), ((x'') IS FALSE))) AND (((v0.c0 IN ()), NULL, ((rt0.c1) NOT NULL), x'' COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((t0.c0, vt0.c1, rt0.c3))) THEN ((v0.c0)>(vt0.c0)) END CROSS JOIN t0 ON ((load_extension(rt0.c1, NULL)) NOTNULL) RIGHT OUTER JOIN v0 ON ((CAST(-1.845859579E9 AS BLOB)) NOTNULL) ORDER BY (((rt0.c2, '', rt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC), '-145409133')) AND ((rt0.c2, (+ (rt0.c3)), (rt0.c2 IN (v0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((t0.c0, vt0.c1, rt0.c3))) THEN ((v0.c0)>(vt0.c0)) END CROSS JOIN t0 ON ((load_extension(rt0.c1, NULL)) NOTNULL) RIGHT OUTER JOIN v0 ON ((CAST(-1.845859579E9 AS BLOB)) NOTNULL) WHERE ((((rt0.c2, vt0.c0, rt0.c3, v0.c0, 0.6707355556997304)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM, (- (rt0.c2)), CAST(rt0.c1 AS BLOB), ((((t0.c0)OR(rt0.c2)))OR(t0.c0)), ((x'') IS FALSE))) AND (((v0.c0 IN ()), NULL, ((rt0.c1) NOT NULL), x'' COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC))))) ORDER BY (((rt0.c2, '', rt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC), '-145409133')) AND ((rt0.c2, (+ (rt0.c3)), (rt0.c2 IN (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, vt0.c0, rt0.c3, v0.c0, 0.6707355556997304)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM, (- (rt0.c2)), CAST(rt0.c1 AS BLOB), ((((t0.c0)OR(rt0.c2)))OR(t0.c0)), ((x'') IS FALSE))) AND (((v0.c0 IN ()), NULL, ((rt0.c1) NOT NULL), x'' COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((t0.c0, vt0.c1, rt0.c3))) THEN ((v0.c0)>(vt0.c0)) END CROSS JOIN t0 ON ((load_extension(rt0.c1, NULL)) NOTNULL) RIGHT OUTER JOIN v0 ON ((CAST(-1.845859579E9 AS BLOB)) NOTNULL) ORDER BY (((rt0.c2, '', rt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC), '-145409133')) AND ((rt0.c2, (+ (rt0.c3)), (rt0.c2 IN (v0.c0)))))  NULLS LAST);
SELECT * FROM v0, t0, rt0 WHERE (x'6b10');
SELECT SUM(count) FROM (SELECT ((x'6b10') IS TRUE)  as count FROM v0, t0, rt0);
SELECT * FROM v0, t0, rt0 WHERE (x'6b10');
SELECT SUM(count) FROM (SELECT ((x'6b10') IS TRUE)  as count FROM v0, t0, rt0);
SELECT * FROM v0, t0, rt0 WHERE (x'6b10');
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c1 IN ()))AND((- (vt0.c0)))))AND((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND((- (vt0.c0)))))AND((- (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c1 IN ()))AND((- (vt0.c0)))))AND((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND((- (vt0.c0)))))AND((- (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c1 IN ()))AND((- (vt0.c0)))))AND((- (rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((v0.c0)|('T\nh')));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)|('T\nh'))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((v0.c0)|('T\nh')));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)|('T\nh'))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((v0.c0)|('T\nh')));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON (((0.6178399582145875 IN ()))&(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN rt0 ON CASE '2R'  WHEN ((rt0.c3) ISNULL) THEN CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END END WHERE (787345395) ORDER BY (((t0.c0 IN ())) IS FALSE) ASC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((rt0.c3)<<(rt0.c0)))) AND (((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((787345395) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((0.6178399582145875 IN ()))&(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN rt0 ON CASE '2R'  WHEN ((rt0.c3) ISNULL) THEN CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END END ORDER BY (((t0.c0 IN ())) IS FALSE) ASC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((rt0.c3)<<(rt0.c0)))) AND (((- (vt0.c0))))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON (((0.6178399582145875 IN ()))&(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN rt0 ON CASE '2R'  WHEN ((rt0.c3) ISNULL) THEN CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END END WHERE (787345395) ORDER BY (((t0.c0 IN ())) IS FALSE) ASC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((rt0.c3)<<(rt0.c0)))) AND (((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((787345395) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((0.6178399582145875 IN ()))&(CAST(vt0.c0 AS REAL))) RIGHT OUTER JOIN vt0 ON rt0.c2 CROSS JOIN rt0 ON CASE '2R'  WHEN ((rt0.c3) ISNULL) THEN CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END END ORDER BY (((t0.c0 IN ())) IS FALSE) ASC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((rt0.c3)<<(rt0.c0)))) AND (((- (vt0.c0))))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN v0 ON ((((t0.c0)GLOB(v0.c0))) NOT NULL) WHERE ((SQLITE_COMPILEOPTION_GET(rt0.c0) IN ())) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('1125904091'))))*(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_GET(rt0.c0) IN ())) IS TRUE)  as count FROM t0, rt0 INNER JOIN v0 ON ((((t0.c0)GLOB(v0.c0))) NOT NULL) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('1125904091'))))*(v0.c0)) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN v0 ON ((((t0.c0)GLOB(v0.c0))) NOT NULL) WHERE ((SQLITE_COMPILEOPTION_GET(rt0.c0) IN ())) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('1125904091'))))*(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_GET(rt0.c0) IN ())) IS TRUE)  as count FROM t0, rt0 INNER JOIN v0 ON ((((t0.c0)GLOB(v0.c0))) NOT NULL) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('1125904091'))))*(v0.c0)) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN v0 ON ((((t0.c0)GLOB(v0.c0))) NOT NULL) WHERE ((SQLITE_COMPILEOPTION_GET(rt0.c0) IN ())) ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('1125904091'))))*(v0.c0)) ASC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((- (rt0.c1)))<=(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))) LEFT OUTER JOIN vt0 ON ((((t0.c0)!=(rt0.c2)))<<(((vt0.c1)||(vt0.c0)))) WHERE (rt0.c2) ORDER BY ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END)+(((rt0.c1)/(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((- (rt0.c1)))<=(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))) LEFT OUTER JOIN vt0 ON ((((t0.c0)<>(rt0.c2)))<<(((vt0.c1)||(vt0.c0)))) ORDER BY ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END)+(((rt0.c1)/(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((- (rt0.c1)))<=(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))) LEFT OUTER JOIN vt0 ON ((((t0.c0)!=(rt0.c2)))<<(((vt0.c1)||(vt0.c0)))) WHERE (rt0.c2) ORDER BY ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END)+(((rt0.c1)/(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((- (rt0.c1)))<=(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))) LEFT OUTER JOIN vt0 ON ((((t0.c0)<>(rt0.c2)))<<(((vt0.c1)||(vt0.c0)))) ORDER BY ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END)+(((rt0.c1)/(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, rt0 WHERE ((- (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, t0, rt0 WHERE ((- (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, t0, rt0 WHERE ((- (rt0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) IS FALSE))>=(t0.c0)) FULL OUTER JOIN t0 ON x'2910' LEFT OUTER JOIN vt0 ON ((((('-1387169395'))<=((rt0.c0)))) NOTNULL) WHERE (CASE WHEN (- (rt0.c1)) THEN ((t0.c0)*(rt0.c2)) WHEN ((vt0.c1) NOT NULL) THEN ((((rt0.c3)OR(vt0.c0)))OR(v0.c0)) WHEN ((vt0.c0)<<(vt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 END ELSE (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c1)) THEN ((t0.c0)*(rt0.c2)) WHEN ((vt0.c1) NOT NULL) THEN ((((rt0.c3)OR(vt0.c0)))OR(v0.c0)) WHEN ((vt0.c0)<<(vt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 END ELSE (+ (rt0.c1)) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) IS FALSE))>=(t0.c0)) FULL OUTER JOIN t0 ON x'2910' LEFT OUTER JOIN vt0 ON ((((('-1387169395'))<=((rt0.c0)))) NOTNULL));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) IS FALSE))>=(t0.c0)) FULL OUTER JOIN t0 ON x'2910' LEFT OUTER JOIN vt0 ON ((((('-1387169395'))<=((rt0.c0)))) NOTNULL) WHERE (CASE WHEN (- (rt0.c1)) THEN ((t0.c0)*(rt0.c2)) WHEN ((vt0.c1) NOT NULL) THEN ((((rt0.c3)OR(vt0.c0)))OR(v0.c0)) WHEN ((vt0.c0)<<(vt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 END ELSE (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c1)) THEN ((t0.c0)*(rt0.c2)) WHEN ((vt0.c1) NOT NULL) THEN ((((rt0.c3)OR(vt0.c0)))OR(v0.c0)) WHEN ((vt0.c0)<<(vt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 END ELSE (+ (rt0.c1)) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) IS FALSE))>=(t0.c0)) FULL OUTER JOIN t0 ON x'2910' LEFT OUTER JOIN vt0 ON ((((('-1387169395'))<=((rt0.c0)))) NOTNULL));
SELECT ALL * FROM t0, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (t0.c0) AND (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY CASE -8.73808844E8  WHEN v0.c0 THEN ((t0.c0)>(v0.c0)) ELSE v0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT BETWEEN (t0.c0) AND (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE -8.73808844E8  WHEN v0.c0 THEN ((t0.c0)>(v0.c0)) ELSE v0.c0 END);
SELECT ALL * FROM t0, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (t0.c0) AND (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY CASE -8.73808844E8  WHEN v0.c0 THEN ((t0.c0)>(v0.c0)) ELSE v0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT BETWEEN (t0.c0) AND (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE -8.73808844E8  WHEN v0.c0 THEN ((t0.c0)>(v0.c0)) ELSE v0.c0 END);
SELECT ALL * FROM t0, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (t0.c0) AND (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY CASE -8.73808844E8  WHEN v0.c0 THEN ((t0.c0)>(v0.c0)) ELSE v0.c0 END;
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))OR(((0x162d3f38)/(vt0.c0)))))AND(((((((((t0.c0)OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)))OR(NULL))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))OR(((0x162d3f38)/(vt0.c0)))))AND(((((((((t0.c0)OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)))OR(NULL))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((CAST(t0.c0 AS INTEGER)) ISNULL));
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))OR(((0x162d3f38)/(vt0.c0)))))AND(((((((((t0.c0)OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)))OR(NULL))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))OR(((0x162d3f38)/(vt0.c0)))))AND(((((((((t0.c0)OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)))OR(NULL))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((CAST(t0.c0 AS INTEGER)) ISNULL));
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))OR(((0x162d3f38)/(vt0.c0)))))AND(((((((((t0.c0)OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)))OR(NULL))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) ISNULL);
SELECT ALL * FROM t0, v0, rt0 WHERE (((t0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL * FROM t0, v0, rt0 WHERE (((t0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL * FROM t0, v0, rt0 WHERE (((t0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY CASE WHEN CAST(rt0.c3 AS INTEGER) THEN ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0, rt0, v0, t0 ORDER BY CASE WHEN CAST(rt0.c3 AS INTEGER) THEN ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) END DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY CASE WHEN CAST(rt0.c3 AS INTEGER) THEN ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0, rt0, v0, t0 ORDER BY CASE WHEN CAST(rt0.c3 AS INTEGER) THEN ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) END DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0 WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY CASE WHEN CAST(rt0.c3 AS INTEGER) THEN ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) END DESC;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0, t0 WHERE ((+ (CAST(rt0.c2 AS TEXT)))) ORDER BY CAST((((rt0.c0)) NOT BETWEEN (('-347285050')) AND ((rt0.c3))) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST((((rt0.c0)) NOT BETWEEN (('-347285050')) AND ((rt0.c3))) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0, t0 WHERE ((+ (CAST(rt0.c2 AS TEXT)))) ORDER BY CAST((((rt0.c0)) NOT BETWEEN (('-347285050')) AND ((rt0.c3))) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST((((rt0.c0)) NOT BETWEEN (('-347285050')) AND ((rt0.c3))) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0, t0 WHERE ((+ (CAST(rt0.c2 AS TEXT)))) ORDER BY CAST((((rt0.c0)) NOT BETWEEN (('-347285050')) AND ((rt0.c3))) AS INTEGER);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (SQLITE_VERSION());
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((CAST(1212755066 AS TEXT))<=((((vt0.c1)) BETWEEN (('6s')) AND ((v0.c0)))))) ORDER BY (~ (DATETIME(t0.c0, vt0.c1, v0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(1212755066 AS TEXT))<=((((vt0.c1)) BETWEEN (('6s')) AND ((v0.c0)))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (~ (DATETIME(t0.c0, vt0.c1, v0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((CAST(1212755066 AS TEXT))<=((((vt0.c1)) BETWEEN (('6s')) AND ((v0.c0)))))) ORDER BY (~ (DATETIME(t0.c0, vt0.c1, v0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(1212755066 AS TEXT))<=((((vt0.c1)) BETWEEN (('6s')) AND ((v0.c0)))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (~ (DATETIME(t0.c0, vt0.c1, v0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((CAST(1212755066 AS TEXT))<=((((vt0.c1)) BETWEEN (('6s')) AND ((v0.c0)))))) ORDER BY (~ (DATETIME(t0.c0, vt0.c1, v0.c0, v0.c0, vt0.c0, vt0.c0, v0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0, v0 WHERE (json_patch(v0.c0, rt0.c0) COLLATE NOCASE COLLATE NOCASE) ORDER BY -1706216573;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(v0.c0, rt0.c0) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0, v0 ORDER BY -1706216573);
SELECT ALL * FROM vt0, t0, rt0, v0 WHERE (json_patch(v0.c0, rt0.c0) COLLATE NOCASE COLLATE NOCASE) ORDER BY -1706216573;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(v0.c0, rt0.c0) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0, v0 ORDER BY -1706216573);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((v0.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((v0.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((v0.c0) NOT NULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((NULL)/(CASE WHEN t0.c0 THEN t0.c0 WHEN '0.1426786531490154' THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END))) ORDER BY ('r' IN ()), CAST(t0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)/(CASE WHEN t0.c0 THEN t0.c0 WHEN '0.1426786531490154' THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, v0 ORDER BY ('r' IN ()), CAST(t0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((NULL)/(CASE WHEN t0.c0 THEN t0.c0 WHEN '0.1426786531490154' THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END))) ORDER BY ('r' IN ()), CAST(t0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)/(CASE WHEN t0.c0 THEN t0.c0 WHEN '0.1426786531490154' THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, v0 ORDER BY ('r' IN ()), CAST(t0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((NULL)/(CASE WHEN t0.c0 THEN t0.c0 WHEN '0.1426786531490154' THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END))) ORDER BY ('r' IN ()), CAST(t0.c0 AS INTEGER) COLLATE BINARY COLLATE NOCASE ASC;
SELECT * FROM rt0 WHERE (CAST(0.7721742798317839 AS REAL)) ORDER BY (((NULL)) BETWEEN ((CAST(rt0.c3 AS TEXT))) AND (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((CAST(0.7721742798317839 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((NULL)) BETWEEN ((CAST(rt0.c3 AS TEXT))) AND (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))));
SELECT * FROM rt0 WHERE (CAST(0.7721742798317839 AS REAL)) ORDER BY (((NULL)) BETWEEN ((CAST(rt0.c3 AS TEXT))) AND (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((CAST(0.7721742798317839 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((NULL)) BETWEEN ((CAST(rt0.c3 AS TEXT))) AND (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))));
SELECT * FROM rt0 WHERE (CAST(0.7721742798317839 AS REAL)) ORDER BY (((NULL)) BETWEEN ((CAST(rt0.c3 AS TEXT))) AND (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(t0.c0)))AND(((((vt0.c0)AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(t0.c0)))AND(((((vt0.c0)AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(t0.c0)))AND(((((vt0.c0)AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(t0.c0)))AND(((((vt0.c0)AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(t0.c0)))AND(((((vt0.c0)AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c1))) NOTNULL)) ORDER BY ((((rt0.c2) IS TRUE)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS NOT(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS TRUE)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c1))) NOTNULL)) ORDER BY ((((rt0.c2) IS TRUE)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS NOT(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS TRUE)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c1))) NOTNULL)) ORDER BY ((((rt0.c2) IS TRUE)) IS TRUE) DESC;
SELECT * FROM t0 CROSS JOIN vt0 ON CASE WHEN v0.c0 THEN rt0.c3 WHEN x'aea2' THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END COLLATE RTRIM COLLATE NOCASE CROSS JOIN v0 ON ((((rt0.c3)||(rt0.c3))) IS TRUE) INNER JOIN rt0 ON vt0.c1 WHERE (CASE WHEN x'612a' THEN v0.c0 ELSE vt0.c1 END COLLATE NOCASE) ORDER BY (((rt0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'612a' THEN v0.c0 ELSE vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE WHEN v0.c0 THEN rt0.c3 WHEN x'aea2' THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END COLLATE RTRIM COLLATE NOCASE CROSS JOIN v0 ON ((((rt0.c3)||(rt0.c3))) IS TRUE) INNER JOIN rt0 ON vt0.c1 ORDER BY (((rt0.c0 IN ())) ISNULL)  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON CASE WHEN v0.c0 THEN rt0.c3 WHEN x'aea2' THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END COLLATE RTRIM COLLATE NOCASE CROSS JOIN v0 ON ((((rt0.c3)||(rt0.c3))) IS TRUE) INNER JOIN rt0 ON vt0.c1 WHERE (CASE WHEN x'612a' THEN v0.c0 ELSE vt0.c1 END COLLATE NOCASE) ORDER BY (((rt0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'612a' THEN v0.c0 ELSE vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE WHEN v0.c0 THEN rt0.c3 WHEN x'aea2' THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END COLLATE RTRIM COLLATE NOCASE CROSS JOIN v0 ON ((((rt0.c3)||(rt0.c3))) IS TRUE) INNER JOIN rt0 ON vt0.c1 ORDER BY (((rt0.c0 IN ())) ISNULL)  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON CASE WHEN v0.c0 THEN rt0.c3 WHEN x'aea2' THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END COLLATE RTRIM COLLATE NOCASE CROSS JOIN v0 ON ((((rt0.c3)||(rt0.c3))) IS TRUE) INNER JOIN rt0 ON vt0.c1 WHERE (CASE WHEN x'612a' THEN v0.c0 ELSE vt0.c1 END COLLATE NOCASE) ORDER BY (((rt0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT * FROM rt0, t0, v0 WHERE ((~ (CASE WHEN rt0.c2 THEN t0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN rt0.c2 THEN t0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, t0, v0);
SELECT * FROM rt0, t0, v0 WHERE ((~ (CASE WHEN rt0.c2 THEN t0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN rt0.c2 THEN t0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, t0, v0);
SELECT * FROM rt0, t0, v0 WHERE ((~ (CASE WHEN rt0.c2 THEN t0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)));
SELECT ALL * FROM vt0, rt0, v0, t0 WHERE (CAST(0.9451748580360344 AS TEXT)) ORDER BY (+ (((v0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(0.9451748580360344 AS TEXT)) IS TRUE)  as count FROM vt0, rt0, v0, t0 ORDER BY (+ (((v0.c0)<<(vt0.c0)))));
SELECT ALL * FROM vt0, rt0, v0, t0 WHERE (CAST(0.9451748580360344 AS TEXT)) ORDER BY (+ (((v0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(0.9451748580360344 AS TEXT)) IS TRUE)  as count FROM vt0, rt0, v0, t0 ORDER BY (+ (((v0.c0)<<(vt0.c0)))));
SELECT ALL * FROM vt0, rt0, v0, t0 WHERE (CAST(0.9451748580360344 AS TEXT)) ORDER BY (+ (((v0.c0)<<(vt0.c0))));
SELECT ALL * FROM v0, vt0, t0, rt0 WHERE ((rt0.c0 IN ())) ORDER BY ((((((x'6e95', v0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c2, t0.c0)))))==((((v0.c0)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM v0, vt0, t0, rt0 ORDER BY ((((((x'6e95', v0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c2, t0.c0)))))=((((v0.c0)<=(rt0.c1))))));
SELECT ALL * FROM v0, vt0, t0, rt0 WHERE ((rt0.c0 IN ())) ORDER BY ((((((x'6e95', v0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c2, t0.c0)))))==((((v0.c0)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM v0, vt0, t0, rt0 ORDER BY ((((((x'6e95', v0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c2, t0.c0)))))=((((v0.c0)<=(rt0.c1))))));
SELECT ALL * FROM v0, vt0, t0, rt0 WHERE ((rt0.c0 IN ())) ORDER BY ((((((x'6e95', v0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c2, t0.c0)))))==((((v0.c0)<=(rt0.c1)))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t0 WHERE (x'f58a') ORDER BY (((((rt0.c3, v0.c0, t0.c0))>=((t0.c0, rt0.c3, t0.c0))))%((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'f58a') IS TRUE)  as count FROM v0, rt0, vt0, t0 ORDER BY (((((rt0.c3, v0.c0, t0.c0))>=((t0.c0, rt0.c3, t0.c0))))%((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t0 WHERE (x'f58a') ORDER BY (((((rt0.c3, v0.c0, t0.c0))>=((t0.c0, rt0.c3, t0.c0))))%((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'f58a') IS TRUE)  as count FROM v0, rt0, vt0, t0 ORDER BY (((((rt0.c3, v0.c0, t0.c0))>=((t0.c0, rt0.c3, t0.c0))))%((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t0 WHERE (x'f58a') ORDER BY (((((rt0.c3, v0.c0, t0.c0))>=((t0.c0, rt0.c3, t0.c0))))%((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((((x'')AND(vt0.c1)))OR(vt0.c1 COLLATE BINARY)))OR((((vt0.c1))<=((vt0.c0))))))OR(vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(vt0.c1)))OR(vt0.c1 COLLATE BINARY)))OR((((vt0.c1))<=((vt0.c0))))))OR(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((x'')AND(vt0.c1)))OR(vt0.c1 COLLATE BINARY)))OR((((vt0.c1))<=((vt0.c0))))))OR(vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(vt0.c1)))OR(vt0.c1 COLLATE BINARY)))OR((((vt0.c1))<=((vt0.c0))))))OR(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((x'')AND(vt0.c1)))OR(vt0.c1 COLLATE BINARY)))OR((((vt0.c1))<=((vt0.c0))))))OR(vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c0;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((json_array(t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0) ISNULL)) AND (CAST(t0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((json_array(t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0) ISNULL)) AND (CAST(t0.c0 AS NUMERIC)))  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((json_array(t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0) ISNULL)) AND (CAST(t0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((json_array(t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0) ISNULL)) AND (CAST(t0.c0 AS NUMERIC)))  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((json_array(t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0) ISNULL)) AND (CAST(t0.c0 AS NUMERIC)))  NULLS LAST;
SELECT * FROM rt0 WHERE (((('-1526092751' IN ()))OR(((rt0.c2)<=(rt0.c1))))) ORDER BY ((((((rt0.c3)<=(rt0.c2)))AND(rt0.c0)))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)), NULL ASC;
SELECT SUM(count) FROM (SELECT ((((('-1526092751' IN ()))OR(((rt0.c2)<=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)<=(rt0.c2)))AND(rt0.c0)))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)), NULL ASC);
SELECT * FROM rt0 WHERE (((('-1526092751' IN ()))OR(((rt0.c2)<=(rt0.c1))))) ORDER BY ((((((rt0.c3)<=(rt0.c2)))AND(rt0.c0)))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)), NULL ASC;
SELECT SUM(count) FROM (SELECT ((((('-1526092751' IN ()))OR(((rt0.c2)<=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)<=(rt0.c2)))AND(rt0.c0)))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)), NULL ASC);
SELECT * FROM rt0 WHERE (((('-1526092751' IN ()))OR(((rt0.c2)<=(rt0.c1))))) ORDER BY ((((((rt0.c3)<=(rt0.c2)))AND(rt0.c0)))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)), NULL ASC;
SELECT * FROM rt0, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (v0.c0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))&(LIKELIHOOD(DISTINCT t0.c0, 0.7147705699920924))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))&(LIKELIHOOD(DISTINCT t0.c0, 0.7147705699920924)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))&(LIKELIHOOD(DISTINCT t0.c0, 0.7147705699920924))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))&(LIKELIHOOD(DISTINCT t0.c0, 0.7147705699920924)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c0)))&(LIKELIHOOD(DISTINCT t0.c0, 0.7147705699920924))));
SELECT ALL * FROM t0, rt0, v0, vt0 WHERE (((((vt0.c1)<=(vt0.c0)))IS((((v0.c0))<>((rt0.c1)))))) ORDER BY ((t0.c0)=('f^<q')), (('609834620')|(((((t0.c0)OR(vt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<=(vt0.c0)))IS((((v0.c0))!=((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0, v0, vt0 ORDER BY ((t0.c0)=('f^<q')), (('609834620')|(((((t0.c0)OR(vt0.c1)))AND(rt0.c0)))));
SELECT ALL * FROM t0, rt0, v0, vt0 WHERE (((((vt0.c1)<=(vt0.c0)))IS((((v0.c0))<>((rt0.c1)))))) ORDER BY ((t0.c0)=('f^<q')), (('609834620')|(((((t0.c0)OR(vt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<=(vt0.c0)))IS((((v0.c0))!=((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0, v0, vt0 ORDER BY ((t0.c0)=('f^<q')), (('609834620')|(((((t0.c0)OR(vt0.c1)))AND(rt0.c0)))));
SELECT ALL * FROM t0, rt0, v0, vt0 WHERE (((((vt0.c1)<=(vt0.c0)))IS((((v0.c0))<>((rt0.c1)))))) ORDER BY ((t0.c0)=('f^<q')), (('609834620')|(((((t0.c0)OR(vt0.c1)))AND(rt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE);
SELECT * FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN ((- (t0.c0))) AND (t0.c0))) ORDER BY COALESCE(((t0.c0)>=(-3.4728505E8)), ((((t0.c0)OR('')))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)-(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) NOT BETWEEN ((- (t0.c0))) AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY COALESCE(((t0.c0)>=(-3.4728505E8)), ((((t0.c0)OR('')))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)-(t0.c0))));
SELECT * FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN ((- (t0.c0))) AND (t0.c0))) ORDER BY COALESCE(((t0.c0)>=(-3.4728505E8)), ((((t0.c0)OR('')))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)-(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) NOT BETWEEN ((- (t0.c0))) AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY COALESCE(((t0.c0)>=(-3.4728505E8)), ((((t0.c0)OR('')))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)-(t0.c0))));
SELECT * FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN ((- (t0.c0))) AND (t0.c0))) ORDER BY COALESCE(((t0.c0)>=(-3.4728505E8)), ((((t0.c0)OR('')))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0)-(t0.c0)));
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE ((((x''))>(((+ (rt0.c1)))))) ORDER BY vt0.c1  NULLS LAST, LOWER(((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))OR('')))AND(rt0.c2)))  NULLS FIRST, ((rt0.c2) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((x''))>(((+ (rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1  NULLS LAST, LOWER(((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))OR('')))AND(rt0.c2)))  NULLS FIRST, ((rt0.c2) NOTNULL));
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE ((((x''))>(((+ (rt0.c1)))))) ORDER BY vt0.c1  NULLS LAST, LOWER(((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))OR('')))AND(rt0.c2)))  NULLS FIRST, ((rt0.c2) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((x''))>(((+ (rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1  NULLS LAST, LOWER(((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))OR('')))AND(rt0.c2)))  NULLS FIRST, ((rt0.c2) NOTNULL));
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE ((((x''))>(((+ (rt0.c1)))))) ORDER BY vt0.c1  NULLS LAST, LOWER(((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))OR('')))AND(rt0.c2)))  NULLS FIRST, ((rt0.c2) NOTNULL);
SELECT ALL * FROM vt0, v0, t0, rt0 WHERE ((((((((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))OR(t0.c0 COLLATE NOCASE)))OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))))OR(TRIM(DISTINCT t0.c0))))AND(CASE WHEN v0.c0 THEN '-873808844' ELSE rt0.c0 END))) ORDER BY ((((((vt0.c1)IS(x'')))AND(-399274294)))AND(((rt0.c1)<=('577604584')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))OR(t0.c0 COLLATE NOCASE)))OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))))OR(TRIM(DISTINCT t0.c0))))AND(CASE WHEN v0.c0 THEN '-873808844' ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, v0, t0, rt0 ORDER BY ((((((vt0.c1)IS(x'')))AND(-399274294)))AND(((rt0.c1)<=('577604584')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, t0, rt0 WHERE ((((((((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))OR(t0.c0 COLLATE NOCASE)))OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))))OR(TRIM(DISTINCT t0.c0))))AND(CASE WHEN v0.c0 THEN '-873808844' ELSE rt0.c0 END))) ORDER BY ((((((vt0.c1)IS(x'')))AND(-399274294)))AND(((rt0.c1)<=('577604584')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))OR(t0.c0 COLLATE NOCASE)))OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))))OR(TRIM(DISTINCT t0.c0))))AND(CASE WHEN v0.c0 THEN '-873808844' ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, v0, t0, rt0 ORDER BY ((((((vt0.c1)IS(x'')))AND(-399274294)))AND(((rt0.c1)<=('577604584')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, t0, rt0 WHERE ((((((((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))OR(t0.c0 COLLATE NOCASE)))OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))))OR(TRIM(DISTINCT t0.c0))))AND(CASE WHEN v0.c0 THEN '-873808844' ELSE rt0.c0 END))) ORDER BY ((((((vt0.c1)IS(x'')))AND(-399274294)))AND(((rt0.c1)<=('577604584')))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 WHERE (((((v0.c0) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c2)) BETWEEN (('-360846771')) AND ((rt0.c0))))LIKE(((rt0.c0)/(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0, rt0 ORDER BY (((((rt0.c2)) BETWEEN (('-360846771')) AND ((rt0.c0))))LIKE(((rt0.c0)/(rt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 WHERE (((((v0.c0) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c2)) BETWEEN (('-360846771')) AND ((rt0.c0))))LIKE(((rt0.c0)/(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM v0, vt0, t0, rt0 ORDER BY (((((rt0.c2)) BETWEEN (('-360846771')) AND ((rt0.c0))))LIKE(((rt0.c0)/(rt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 WHERE (((((v0.c0) IS TRUE)) NOT NULL)) ORDER BY (((((rt0.c2)) BETWEEN (('-360846771')) AND ((rt0.c0))))LIKE(((rt0.c0)/(rt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0, v0 WHERE ((((+ (vt0.c1))) ISNULL)) ORDER BY (- ((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (- ((vt0.c1 IN ()))));
SELECT * FROM vt0, v0 WHERE ((((+ (vt0.c1))) ISNULL)) ORDER BY (- ((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (- ((vt0.c1 IN ()))));
SELECT * FROM vt0, v0 WHERE ((((+ (vt0.c1))) ISNULL)) ORDER BY (- ((vt0.c1 IN ())));
SELECT * FROM t0 WHERE (((((((((CAST(t0.c0 AS BLOB))AND(((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)))))AND('-1179437575')))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(json_array('42133599', t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c0 AS BLOB))AND(((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)))))AND('-1179437575')))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(json_array('42133599', t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((CAST(t0.c0 AS BLOB))AND(((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)))))AND('-1179437575')))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(json_array('42133599', t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c0 AS BLOB))AND(((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)))))AND('-1179437575')))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(json_array('42133599', t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((CAST(t0.c0 AS BLOB))AND(((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)))))AND('-1179437575')))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(json_array('42133599', t0.c0))));
SELECT * FROM rt0, v0 FULL OUTER JOIN t0 ON ((((t0.c0)IS NOT(rt0.c0)))/((+ (rt0.c1)))) INNER JOIN vt0 ON (~ (rt0.c1)) COLLATE RTRIM WHERE ((((((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c1)), SQLITE_VERSION(), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))))!=((((t0.c0) NOT BETWEEN (t0.c0) AND (x'')), CAST(t0.c0 AS BLOB), ((rt0.c3)&(rt0.c1)))))) ORDER BY ((CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)OR(rt0.c3))  NULLS LAST, (~ ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c1)), SQLITE_VERSION(), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<>((((t0.c0) NOT BETWEEN (t0.c0) AND (x'')), CAST(t0.c0 AS BLOB), ((rt0.c3)&(rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN t0 ON ((((t0.c0)IS NOT(rt0.c0)))/((+ (rt0.c1)))) INNER JOIN vt0 ON (~ (rt0.c1)) COLLATE RTRIM ORDER BY ((CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)OR(rt0.c3))  NULLS LAST, (~ ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))) DESC  NULLS LAST);
SELECT * FROM rt0, v0 FULL OUTER JOIN t0 ON ((((t0.c0)IS NOT(rt0.c0)))/((+ (rt0.c1)))) INNER JOIN vt0 ON (~ (rt0.c1)) COLLATE RTRIM WHERE ((((((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c1)), SQLITE_VERSION(), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))))!=((((t0.c0) NOT BETWEEN (t0.c0) AND (x'')), CAST(t0.c0 AS BLOB), ((rt0.c3)&(rt0.c1)))))) ORDER BY ((CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)OR(rt0.c3))  NULLS LAST, (~ ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c1)), SQLITE_VERSION(), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<>((((t0.c0) NOT BETWEEN (t0.c0) AND (x'')), CAST(t0.c0 AS BLOB), ((rt0.c3)&(rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN t0 ON ((((t0.c0)IS NOT(rt0.c0)))/((+ (rt0.c1)))) INNER JOIN vt0 ON (~ (rt0.c1)) COLLATE RTRIM ORDER BY ((CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)OR(rt0.c3))  NULLS LAST, (~ ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))) DESC  NULLS LAST);
SELECT * FROM rt0, v0 FULL OUTER JOIN t0 ON ((((t0.c0)IS NOT(rt0.c0)))/((+ (rt0.c1)))) INNER JOIN vt0 ON (~ (rt0.c1)) COLLATE RTRIM WHERE ((((((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c1)), SQLITE_VERSION(), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))))!=((((t0.c0) NOT BETWEEN (t0.c0) AND (x'')), CAST(t0.c0 AS BLOB), ((rt0.c3)&(rt0.c1)))))) ORDER BY ((CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)OR(rt0.c3))  NULLS LAST, (~ ((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE ((rt0.c3) NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((('1334341616'))>=((rt0.c3))) END) ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((('1334341616'))>=((rt0.c3))) END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c3) NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((('1334341616'))>=((rt0.c3))) END) ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((('1334341616'))>=((rt0.c3))) END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c3) NOT NULL)  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((('1334341616'))>=((rt0.c3))) END) ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((((((rt0.c3 IN ()))AND((rt0.c1 IN ()))))AND(GLOB(rt0.c3, rt0.c3))))AND(HEX(NULL))))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))) ORDER BY ((((rt0.c1)OR(rt0.c0)))AND('1033931059')) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN ()))AND((rt0.c1 IN ()))))AND(GLOB(rt0.c3, rt0.c3))))AND(HEX(NULL))))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)OR(rt0.c0)))AND('1033931059')) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((((((rt0.c3 IN ()))AND((rt0.c1 IN ()))))AND(GLOB(rt0.c3, rt0.c3))))AND(HEX(NULL))))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))) ORDER BY ((((rt0.c1)OR(rt0.c0)))AND('1033931059')) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN ()))AND((rt0.c1 IN ()))))AND(GLOB(rt0.c3, rt0.c3))))AND(HEX(NULL))))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)OR(rt0.c0)))AND('1033931059')) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((((((rt0.c3 IN ()))AND((rt0.c1 IN ()))))AND(GLOB(rt0.c3, rt0.c3))))AND(HEX(NULL))))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))) ORDER BY ((((rt0.c1)OR(rt0.c0)))AND('1033931059')) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)>=(rt0.c0)))=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)) INNER JOIN rt0 ON (- (COALESCE(vt0.c0, rt0.c1))) WHERE (CAST(((rt0.c3) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)>=(rt0.c0)))=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)) INNER JOIN rt0 ON (- (COALESCE(vt0.c0, rt0.c1))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)>=(rt0.c0)))=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)) INNER JOIN rt0 ON (- (COALESCE(vt0.c0, rt0.c1))) WHERE (CAST(((rt0.c3) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)>=(rt0.c0)))=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)) INNER JOIN rt0 ON (- (COALESCE(vt0.c0, rt0.c1))));
SELECT * FROM t0, vt0 WHERE ((((vt0.c1)<(t0.c0)) IN ())) ORDER BY ABS('64428776') DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)<(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ABS('64428776') DESC);
SELECT * FROM t0, vt0 WHERE ((((vt0.c1)<(t0.c0)) IN ())) ORDER BY ABS('64428776') DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)<(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ABS('64428776') DESC);
SELECT * FROM t0, vt0 WHERE ((((vt0.c1)<(t0.c0)) IN ())) ORDER BY ABS('64428776') DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c0) NOTNULL) COLLATE NOCASE) ORDER BY (((((v0.c0 IN (NULL)))OR(((v0.c0) ISNULL))))OR((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 ORDER BY (((((v0.c0 IN (NULL)))OR(((v0.c0) ISNULL))))OR((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c0) NOTNULL) COLLATE NOCASE) ORDER BY (((((v0.c0 IN (NULL)))OR(((v0.c0) ISNULL))))OR((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0 ORDER BY (((((v0.c0 IN (NULL)))OR(((v0.c0) ISNULL))))OR((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c0) NOTNULL) COLLATE NOCASE) ORDER BY (((((v0.c0 IN (NULL)))OR(((v0.c0) ISNULL))))OR((v0.c0 IN ())));
SELECT ALL * FROM rt0, t0 WHERE ((CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ())) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY '' ASC);
SELECT ALL * FROM rt0, t0 WHERE ((CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ())) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY '' ASC);
SELECT ALL * FROM rt0, t0 WHERE ((CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ())) ORDER BY '' ASC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(0x7d63042b)))AND(('1275996746' IN ()))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)OR(0x7d63042b)))AND(('1275996746' IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(0x7d63042b)))AND(('1275996746' IN ()))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)OR(0x7d63042b)))AND(('1275996746' IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(0x7d63042b)))AND(('1275996746' IN ()))));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON json_remove(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)), ((vt0.c0)&(1010682757))) CROSS JOIN vt0 ON v0.c0 COLLATE BINARY WHERE ((((vt0.c1)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON json_remove(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)), ((vt0.c0)&(1010682757))) CROSS JOIN vt0 ON v0.c0 COLLATE BINARY);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON json_remove(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)), ((vt0.c0)&(1010682757))) CROSS JOIN vt0 ON v0.c0 COLLATE BINARY WHERE ((((vt0.c1)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON json_remove(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)), ((vt0.c0)&(1010682757))) CROSS JOIN vt0 ON v0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((t0.c0, CAST(vt0.c1 AS INTEGER), (vt0.c0 IN (rt0.c2))))>((((t0.c0)!=(rt0.c2)), (+ (rt0.c1)), (((NULL, rt0.c3, t0.c0)) NOT BETWEEN ((x'', rt0.c0, vt0.c0)) AND ((t0.c0, rt0.c3, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, CAST(vt0.c1 AS INTEGER), (vt0.c0 IN (rt0.c2))))>((((t0.c0)<>(rt0.c2)), (+ (rt0.c1)), (((NULL, rt0.c3, t0.c0)) NOT BETWEEN ((x'', rt0.c0, vt0.c0)) AND ((t0.c0, rt0.c3, rt0.c1))))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((t0.c0, CAST(vt0.c1 AS INTEGER), (vt0.c0 IN (rt0.c2))))>((((t0.c0)!=(rt0.c2)), (+ (rt0.c1)), (((NULL, rt0.c3, t0.c0)) NOT BETWEEN ((x'', rt0.c0, vt0.c0)) AND ((t0.c0, rt0.c3, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, CAST(vt0.c1 AS INTEGER), (vt0.c0 IN (rt0.c2))))>((((t0.c0)<>(rt0.c2)), (+ (rt0.c1)), (((NULL, rt0.c3, t0.c0)) NOT BETWEEN ((x'', rt0.c0, vt0.c0)) AND ((t0.c0, rt0.c3, rt0.c1))))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((t0.c0, CAST(vt0.c1 AS INTEGER), (vt0.c0 IN (rt0.c2))))>((((t0.c0)!=(rt0.c2)), (+ (rt0.c1)), (((NULL, rt0.c3, t0.c0)) NOT BETWEEN ((x'', rt0.c0, vt0.c0)) AND ((t0.c0, rt0.c3, rt0.c1)))))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t0 WHERE (vt0.c1) ORDER BY ((((((('\rw61\rI')AND(rt0.c3)))AND(rt0.c1))))>(('0.031198321856583888')));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY ((((((('\rw61\rI')AND(rt0.c3)))AND(rt0.c1))))>(('0.031198321856583888'))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t0 WHERE (vt0.c1) ORDER BY ((((((('\rw61\rI')AND(rt0.c3)))AND(rt0.c1))))>(('0.031198321856583888')));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY ((((((('\rw61\rI')AND(rt0.c3)))AND(rt0.c1))))>(('0.031198321856583888'))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t0 WHERE (vt0.c1) ORDER BY ((((((('\rw61\rI')AND(rt0.c3)))AND(rt0.c1))))>(('0.031198321856583888')));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c1) ISNULL) WHERE (((((vt0.c1) NOTNULL))%(vt0.c1))) ORDER BY (((((t0.c0, vt0.c1, vt0.c0))<=((t0.c0, t0.c0, t0.c0))))<(TYPEOF(DISTINCT vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL))%(vt0.c1))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c1) ISNULL) ORDER BY (((((t0.c0, vt0.c1, vt0.c0))<=((t0.c0, t0.c0, t0.c0))))<(TYPEOF(DISTINCT vt0.c0))) DESC);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c1) ISNULL) WHERE (((((vt0.c1) NOTNULL))%(vt0.c1))) ORDER BY (((((t0.c0, vt0.c1, vt0.c0))<=((t0.c0, t0.c0, t0.c0))))<(TYPEOF(DISTINCT vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL))%(vt0.c1))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c1) ISNULL) ORDER BY (((((t0.c0, vt0.c1, vt0.c0))<=((t0.c0, t0.c0, t0.c0))))<(TYPEOF(DISTINCT vt0.c0))) DESC);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c1) ISNULL) WHERE (((((vt0.c1) NOTNULL))%(vt0.c1))) ORDER BY (((((t0.c0, vt0.c1, vt0.c0))<=((t0.c0, t0.c0, t0.c0))))<(TYPEOF(DISTINCT vt0.c0))) DESC;
SELECT ALL * FROM rt0, v0, t0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1)))))) IS TRUE)  as count FROM rt0, v0, t0, vt0);
SELECT ALL * FROM rt0, v0, t0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1)))))) IS TRUE)  as count FROM rt0, v0, t0, vt0);
SELECT ALL * FROM rt0, v0, t0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1 IN ()), CAST(vt0.c1 AS TEXT), 0.3062825544870229, (+ (vt0.c1)), '-1203433377'))<=((((vt0.c1)&(vt0.c0)), (vt0.c1 IN ()), ((vt0.c1)>=(vt0.c0)), ((vt0.c0)||(vt0.c0)), ((vt0.c0)<>(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ()), CAST(vt0.c1 AS TEXT), 0.3062825544870229, (+ (vt0.c1)), '-1203433377'))<=((((vt0.c1)&(vt0.c0)), (vt0.c1 IN ()), ((vt0.c1)>=(vt0.c0)), ((vt0.c0)||(vt0.c0)), ((vt0.c0)<>(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1 IN ()), CAST(vt0.c1 AS TEXT), 0.3062825544870229, (+ (vt0.c1)), '-1203433377'))<=((((vt0.c1)&(vt0.c0)), (vt0.c1 IN ()), ((vt0.c1)>=(vt0.c0)), ((vt0.c0)||(vt0.c0)), ((vt0.c0)<>(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ()), CAST(vt0.c1 AS TEXT), 0.3062825544870229, (+ (vt0.c1)), '-1203433377'))<=((((vt0.c1)&(vt0.c0)), (vt0.c1 IN ()), ((vt0.c1)>=(vt0.c0)), ((vt0.c0)||(vt0.c0)), ((vt0.c0)<>(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1 IN ()), CAST(vt0.c1 AS TEXT), 0.3062825544870229, (+ (vt0.c1)), '-1203433377'))<=((((vt0.c1)&(vt0.c0)), (vt0.c1 IN ()), ((vt0.c1)>=(vt0.c0)), ((vt0.c0)||(vt0.c0)), ((vt0.c0)<>(vt0.c1))))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((NULL)OR((vt0.c1 IN ()))))AND(NULL)) WHERE ((((v0.c0 IN ()))>(((vt0.c1)/(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))>(((vt0.c1)/(vt0.c1))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((NULL)OR((vt0.c1 IN ()))))AND(NULL)));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((NULL)OR((vt0.c1 IN ()))))AND(NULL)) WHERE ((((v0.c0 IN ()))>(((vt0.c1)/(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))>(((vt0.c1)/(vt0.c1))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((NULL)OR((vt0.c1 IN ()))))AND(NULL)));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((NULL)OR((vt0.c1 IN ()))))AND(NULL)) WHERE ((((v0.c0 IN ()))>(((vt0.c1)/(vt0.c1)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(LIKE(vt0.c0, rt0.c1, '-') AS TEXT) WHERE (CASE ((vt0.c1) ISNULL)  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END THEN ((vt0.c1)||(rt0.c0)) ELSE (- (vt0.c1)) END) ORDER BY (((NULL IN ())) NOT BETWEEN ((((NULL, vt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, vt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0)))) AND ((NULL IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) ISNULL)  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END THEN ((vt0.c1)||(rt0.c0)) ELSE (- (vt0.c1)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(LIKE(vt0.c0, rt0.c1, '-') AS TEXT) ORDER BY (((NULL IN ())) NOT BETWEEN ((((NULL, vt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, vt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0)))) AND ((NULL IN ()))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(LIKE(vt0.c0, rt0.c1, '-') AS TEXT) WHERE (CASE ((vt0.c1) ISNULL)  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END THEN ((vt0.c1)||(rt0.c0)) ELSE (- (vt0.c1)) END) ORDER BY (((NULL IN ())) NOT BETWEEN ((((NULL, vt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, vt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0)))) AND ((NULL IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) ISNULL)  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END THEN ((vt0.c1)||(rt0.c0)) ELSE (- (vt0.c1)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(LIKE(vt0.c0, rt0.c1, '-') AS TEXT) ORDER BY (((NULL IN ())) NOT BETWEEN ((((NULL, vt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, vt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0)))) AND ((NULL IN ()))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(LIKE(vt0.c0, rt0.c1, '-') AS TEXT) WHERE (CASE ((vt0.c1) ISNULL)  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END THEN ((vt0.c1)||(rt0.c0)) ELSE (- (vt0.c1)) END) ORDER BY (((NULL IN ())) NOT BETWEEN ((((NULL, vt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, vt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0)))) AND ((NULL IN ())));
SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))IS NOT((rt0.c0 IN ())))) ORDER BY CASE WHEN rt0.c1 THEN '743178460' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))IS NOT((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN rt0.c1 THEN '743178460' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))IS NOT((rt0.c0 IN ())))) ORDER BY CASE WHEN rt0.c1 THEN '743178460' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))IS NOT((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN rt0.c1 THEN '743178460' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))IS NOT((rt0.c0 IN ())))) ORDER BY CASE WHEN rt0.c1 THEN '743178460' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM vt0, t0, v0, rt0 WHERE (((x'45db8a63') NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ((rt0.c1 IN ())))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((x'45db8a63') NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0, v0, rt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt0, t0, v0, rt0 WHERE (((x'45db8a63') NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ((rt0.c1 IN ())))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((x'45db8a63') NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0, v0, rt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt0, t0, v0, rt0 WHERE (((x'45db8a63') NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ((rt0.c1 IN ())))) ORDER BY vt0.c1;
SELECT * FROM t0, v0, rt0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (rt0.c3)) AS NUMERIC)) ORDER BY ((((rt0.c1) NOT BETWEEN (0.5885226296366389) AND (rt0.c2)))>((((rt0.c2))>=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (t0.c0) AND (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (0.5885226296366389) AND (rt0.c2)))>((((rt0.c2))>=((t0.c0))))));
SELECT * FROM t0, v0, rt0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (rt0.c3)) AS NUMERIC)) ORDER BY ((((rt0.c1) NOT BETWEEN (0.5885226296366389) AND (rt0.c2)))>((((rt0.c2))>=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (t0.c0) AND (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (0.5885226296366389) AND (rt0.c2)))>((((rt0.c2))>=((t0.c0))))));
SELECT * FROM t0, v0, rt0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (rt0.c3)) AS NUMERIC)) ORDER BY ((((rt0.c1) NOT BETWEEN (0.5885226296366389) AND (rt0.c2)))>((((rt0.c2))>=((t0.c0)))));
SELECT ALL * FROM t0, v0 WHERE (((((v0.c0) NOT BETWEEN (0.32229054648938804) AND (v0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (((v0.c0)GLOB(v0.c0))))) ORDER BY CAST((~ (t0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (0.32229054648938804) AND (v0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST((~ (t0.c0)) AS REAL)  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((((v0.c0) NOT BETWEEN (0.32229054648938804) AND (v0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (((v0.c0)GLOB(v0.c0))))) ORDER BY CAST((~ (t0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (0.32229054648938804) AND (v0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST((~ (t0.c0)) AS REAL)  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((((v0.c0) NOT BETWEEN (0.32229054648938804) AND (v0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(v0.c0)) AND (((v0.c0)GLOB(v0.c0))))) ORDER BY CAST((~ (t0.c0)) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c0)=(NULL)))) AND (((rt0.c1 IN (t0.c0)))))) ORDER BY HEX(DISTINCT CASE WHEN x'' THEN rt0.c2 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((((rt0.c0)==(NULL)))) AND (((rt0.c1 IN (t0.c0)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY HEX(DISTINCT CASE WHEN x'' THEN rt0.c2 END) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c0)=(NULL)))) AND (((rt0.c1 IN (t0.c0)))))) ORDER BY HEX(DISTINCT CASE WHEN x'' THEN rt0.c2 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((((rt0.c0)==(NULL)))) AND (((rt0.c1 IN (t0.c0)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY HEX(DISTINCT CASE WHEN x'' THEN rt0.c2 END) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c0)=(NULL)))) AND (((rt0.c1 IN (t0.c0)))))) ORDER BY HEX(DISTINCT CASE WHEN x'' THEN rt0.c2 END) DESC;
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t0 WHERE (json_extract(vt0.c0, UPPER(v0.c0)));
SELECT SUM(count) FROM (SELECT ((json_extract(vt0.c0, UPPER(v0.c0))) IS TRUE)  as count FROM v0, rt0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t0 WHERE (json_extract(vt0.c0, UPPER(v0.c0)));
SELECT SUM(count) FROM (SELECT ((json_extract(vt0.c0, UPPER(v0.c0))) IS TRUE)  as count FROM v0, rt0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, t0 WHERE (json_extract(vt0.c0, UPPER(v0.c0)));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c3)OR(rt0.c2)))AND(832074532)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)OR(rt0.c2)))AND(832074532)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c3)OR(rt0.c2)))AND(832074532)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)OR(rt0.c2)))AND(832074532)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c3)OR(rt0.c2)))AND(832074532)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (LIKE((t0.c0 IN (t0.c0, t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), '_'));
SELECT SUM(count) FROM (SELECT ((LIKE((t0.c0 IN (t0.c0, t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), '_')) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LIKE((t0.c0 IN (t0.c0, t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), '_'));
SELECT SUM(count) FROM (SELECT ((LIKE((t0.c0 IN (t0.c0, t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), '_')) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LIKE((t0.c0 IN (t0.c0, t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), '_'));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (((0X59495894 IN ())) NOT BETWEEN (PRINTF(0X208a3b0c)) AND (((rt0.c3)>(v0.c0)))) FULL OUTER JOIN v0 ON ((((((rt0.c0)OR('')))AND(v0.c0))) ISNULL) WHERE (INSTR(rt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY ((x'')>>(((rt0.c0)<=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(rt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON (((0x59495894 IN ())) NOT BETWEEN (PRINTF(0x208a3b0c)) AND (((rt0.c3)>(v0.c0)))) FULL OUTER JOIN v0 ON ((((((rt0.c0)OR('')))AND(v0.c0))) ISNULL) ORDER BY ((x'')>>(((rt0.c0)<=(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (((0X59495894 IN ())) NOT BETWEEN (PRINTF(0X208a3b0c)) AND (((rt0.c3)>(v0.c0)))) FULL OUTER JOIN v0 ON ((((((rt0.c0)OR('')))AND(v0.c0))) ISNULL) WHERE (INSTR(rt0.c0, vt0.c0) COLLATE NOCASE) ORDER BY ((x'')>>(((rt0.c0)<=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(rt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON (((0x59495894 IN ())) NOT BETWEEN (PRINTF(0x208a3b0c)) AND (((rt0.c3)>(v0.c0)))) FULL OUTER JOIN v0 ON ((((((rt0.c0)OR('')))AND(v0.c0))) ISNULL) ORDER BY ((x'')>>(((rt0.c0)<=(rt0.c2)))));
SELECT * FROM t0, v0 WHERE (((v0.c0 IN ()) IN (TRIM(DISTINCT v0.c0), ((v0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN (TRIM(DISTINCT v0.c0), ((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((v0.c0 IN ()) IN (TRIM(DISTINCT v0.c0), ((v0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN (TRIM(DISTINCT v0.c0), ((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((v0.c0 IN ()) IN (TRIM(DISTINCT v0.c0), ((v0.c0)<(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (CAST(v0.c0 AS NUMERIC))));
SELECT * FROM t0 WHERE ((IFNULL(t0.c0, t0.c0) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (~ (t0.c0));
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(t0.c0, t0.c0) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c0)));
SELECT * FROM t0 WHERE ((IFNULL(t0.c0, t0.c0) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (~ (t0.c0));
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(t0.c0, t0.c0) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c0)));
SELECT * FROM t0 WHERE ((IFNULL(t0.c0, t0.c0) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY (~ (t0.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN x'f03c' END IN ())) ORDER BY vt0.c0 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN x'f03c' END IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN x'f03c' END IN ())) ORDER BY vt0.c0 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN x'f03c' END IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN x'f03c' END IN ())) ORDER BY vt0.c0 COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, v0, t0 WHERE (x'e983');
SELECT SUM(count) FROM (SELECT ((x'e983') IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, v0, t0);
SELECT ALL * FROM vt0, rt0, v0, t0 WHERE (x'e983');
SELECT SUM(count) FROM (SELECT ((x'e983') IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, v0, t0);
SELECT ALL * FROM vt0, rt0, v0, t0 WHERE (x'e983');
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) IS TRUE)) ORDER BY json_array_length(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY json_array_length(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) IS TRUE)) ORDER BY json_array_length(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY json_array_length(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0));
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))/(IFNULL(rt0.c3, rt0.c0))) WHERE ('m^');
SELECT SUM(count) FROM (SELECT ALL (('m^') IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))/(IFNULL(rt0.c3, rt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))/(IFNULL(rt0.c3, rt0.c0))) WHERE ('m^');
SELECT SUM(count) FROM (SELECT ALL (('m^') IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))/(IFNULL(rt0.c3, rt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))/(IFNULL(rt0.c3, rt0.c0))) WHERE ('m^');
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN rt0.c2 END)IS NOT(((vt0.c1)<<(rt0.c1))))) ORDER BY ((rt0.c3) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c2 END)IS NOT(((vt0.c1)<<(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((rt0.c3) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN rt0.c2 END)IS NOT(((vt0.c1)<<(rt0.c1))))) ORDER BY ((rt0.c3) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c2 END)IS NOT(((vt0.c1)<<(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((rt0.c3) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN rt0.c2 END)IS NOT(((vt0.c1)<<(rt0.c1))))) ORDER BY ((rt0.c3) NOTNULL)  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 RIGHT OUTER JOIN v0 ON (+ (json_type(rt0.c0))) WHERE (json((((vt0.c1, vt0.c1, 0xffffffffb7e971d8))==((NULL, vt0.c1, rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((json((((vt0.c1, vt0.c1, 0Xffffffffb7e971d8))==((NULL, vt0.c1, rt0.c3))))) IS TRUE)  as count FROM t0, rt0, vt0 RIGHT OUTER JOIN v0 ON (+ (json_type(rt0.c0))));
SELECT * FROM t0, rt0, vt0 RIGHT OUTER JOIN v0 ON (+ (json_type(rt0.c0))) WHERE (json((((vt0.c1, vt0.c1, 0xffffffffb7e971d8))==((NULL, vt0.c1, rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((json((((vt0.c1, vt0.c1, 0Xffffffffb7e971d8))==((NULL, vt0.c1, rt0.c3))))) IS TRUE)  as count FROM t0, rt0, vt0 RIGHT OUTER JOIN v0 ON (+ (json_type(rt0.c0))));
SELECT * FROM t0, rt0, vt0 RIGHT OUTER JOIN v0 ON (+ (json_type(rt0.c0))) WHERE (json((((vt0.c1, vt0.c1, 0xffffffffb7e971d8))==((NULL, vt0.c1, rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) ISNULL)) NOT BETWEEN (SUBSTR(rt0.c0, rt0.c0)) AND (((rt0.c0)>=(rt0.c2))))) ORDER BY NULLIF(DISTINCT rt0.c1, CAST(rt0.c0 AS INTEGER)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL)) NOT BETWEEN (SUBSTR(rt0.c0, rt0.c0)) AND (((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT rt0.c1, CAST(rt0.c0 AS INTEGER)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) ISNULL)) NOT BETWEEN (SUBSTR(rt0.c0, rt0.c0)) AND (((rt0.c0)>=(rt0.c2))))) ORDER BY NULLIF(DISTINCT rt0.c1, CAST(rt0.c0 AS INTEGER)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL)) NOT BETWEEN (SUBSTR(rt0.c0, rt0.c0)) AND (((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT rt0.c1, CAST(rt0.c0 AS INTEGER)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) ISNULL)) NOT BETWEEN (SUBSTR(rt0.c0, rt0.c0)) AND (((rt0.c0)>=(rt0.c2))))) ORDER BY NULLIF(DISTINCT rt0.c1, CAST(rt0.c0 AS INTEGER)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED INNER JOIN rt0 ON vt0.c0 INNER JOIN v0 ON CAST((- (rt0.c1)) AS NUMERIC) WHERE ((((rt0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN vt0.c1 ELSE v0.c0 END)) AND (((NOT (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN vt0.c1 ELSE v0.c0 END)) AND (((NOT (rt0.c1)))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON vt0.c0 INNER JOIN v0 ON CAST((- (rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED INNER JOIN rt0 ON vt0.c0 INNER JOIN v0 ON CAST((- (rt0.c1)) AS NUMERIC) WHERE ((((rt0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN vt0.c1 ELSE v0.c0 END)) AND (((NOT (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN vt0.c1 ELSE v0.c0 END)) AND (((NOT (rt0.c1)))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON vt0.c0 INNER JOIN v0 ON CAST((- (rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED INNER JOIN rt0 ON vt0.c0 INNER JOIN v0 ON CAST((- (rt0.c1)) AS NUMERIC) WHERE ((((rt0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN vt0.c1 ELSE v0.c0 END)) AND (((NOT (rt0.c1))))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((v0.c0)AND(t0.c0)))OR(t0.c0)))==(((v0.c0)&(v0.c0))))) ORDER BY (((((((((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(0.8699141687982145)))OR(((v0.c0)>=(v0.c0)))))AND(CAST(t0.c0 AS BLOB))))OR((v0.c0 IN ())))  NULLS FIRST, ((((t0.c0)GLOB(t0.c0))) NOT BETWEEN (((v0.c0)!=(v0.c0))) AND (SQLITE_COMPILEOPTION_USED(t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(t0.c0)))OR(t0.c0)))==(((v0.c0)&(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((((((((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(0.8699141687982145)))OR(((v0.c0)>=(v0.c0)))))AND(CAST(t0.c0 AS BLOB))))OR((v0.c0 IN ())))  NULLS FIRST, ((((t0.c0)GLOB(t0.c0))) NOT BETWEEN (((v0.c0)<>(v0.c0))) AND (SQLITE_COMPILEOPTION_USED(t0.c0))) DESC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((v0.c0)AND(t0.c0)))OR(t0.c0)))==(((v0.c0)&(v0.c0))))) ORDER BY (((((((((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(0.8699141687982145)))OR(((v0.c0)>=(v0.c0)))))AND(CAST(t0.c0 AS BLOB))))OR((v0.c0 IN ())))  NULLS FIRST, ((((t0.c0)GLOB(t0.c0))) NOT BETWEEN (((v0.c0)!=(v0.c0))) AND (SQLITE_COMPILEOPTION_USED(t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(t0.c0)))OR(t0.c0)))==(((v0.c0)&(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((((((((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(0.8699141687982145)))OR(((v0.c0)>=(v0.c0)))))AND(CAST(t0.c0 AS BLOB))))OR((v0.c0 IN ())))  NULLS FIRST, ((((t0.c0)GLOB(t0.c0))) NOT BETWEEN (((v0.c0)<>(v0.c0))) AND (SQLITE_COMPILEOPTION_USED(t0.c0))) DESC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((v0.c0)AND(t0.c0)))OR(t0.c0)))==(((v0.c0)&(v0.c0))))) ORDER BY (((((((((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(0.8699141687982145)))OR(((v0.c0)>=(v0.c0)))))AND(CAST(t0.c0 AS BLOB))))OR((v0.c0 IN ())))  NULLS FIRST, ((((t0.c0)GLOB(t0.c0))) NOT BETWEEN (((v0.c0)!=(v0.c0))) AND (SQLITE_COMPILEOPTION_USED(t0.c0))) DESC;
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (x'') ORDER BY (((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), (~ (rt0.c2)), ((rt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND ((SQLITE_COMPILEOPTION_USED(rt0.c2), CAST(rt0.c2 AS BLOB), (((x'7ad9'))<((rt0.c2)))))), CAST((t0.c0 IN (v0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0, v0 ORDER BY (((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), (~ (rt0.c2)), ((rt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND ((SQLITE_COMPILEOPTION_USED(rt0.c2), CAST(rt0.c2 AS BLOB), (((x'7ad9'))<((rt0.c2)))))), CAST((t0.c0 IN (v0.c0)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (x'') ORDER BY (((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), (~ (rt0.c2)), ((rt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND ((SQLITE_COMPILEOPTION_USED(rt0.c2), CAST(rt0.c2 AS BLOB), (((x'7ad9'))<((rt0.c2)))))), CAST((t0.c0 IN (v0.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0, v0 ORDER BY (((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), (~ (rt0.c2)), ((rt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND ((SQLITE_COMPILEOPTION_USED(rt0.c2), CAST(rt0.c2 AS BLOB), (((x'7ad9'))<((rt0.c2)))))), CAST((t0.c0 IN (v0.c0)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (x'') ORDER BY (((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), (~ (rt0.c2)), ((rt0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))) AND ((SQLITE_COMPILEOPTION_USED(rt0.c2), CAST(rt0.c2 AS BLOB), (((x'7ad9'))<((rt0.c2)))))), CAST((t0.c0 IN (v0.c0)) AS REAL)  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))IS NOT(TRIM(7.70854694E8, rt0.c1))) WHERE ((((- (rt0.c2)))&('1ﴢZu/o')));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))&('1ﴢZu/o'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))IS NOT(TRIM(7.70854694E8, rt0.c1))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))IS NOT(TRIM(7.70854694E8, rt0.c1))) WHERE ((((- (rt0.c2)))&('1ﴢZu/o')));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))&('1ﴢZu/o'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))IS NOT(TRIM(7.70854694E8, rt0.c1))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))IS NOT(TRIM(7.70854694E8, rt0.c1))) WHERE ((((- (rt0.c2)))&('1ﴢZu/o')));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN ((('tL禍w,')||(0.9854931956734344))) AND (((t0.c0)=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) BETWEEN ((('tL禍w,')||(0.9854931956734344))) AND (((t0.c0)==(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN ((('tL禍w,')||(0.9854931956734344))) AND (((t0.c0)=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) BETWEEN ((('tL禍w,')||(0.9854931956734344))) AND (((t0.c0)==(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN ((('tL禍w,')||(0.9854931956734344))) AND (((t0.c0)=(t0.c0)))));
SELECT COUNT(*) FROM rt0, t0, v0, vt0 WHERE (((ABS(vt0.c0)) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c1))) AND ((((rt0.c1))<=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c0)) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c1))) AND ((((rt0.c1))<=((v0.c0)))))) IS TRUE)  as count FROM rt0, t0, v0, vt0);
SELECT COUNT(*) FROM rt0, t0, v0, vt0 WHERE (((ABS(vt0.c0)) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c1))) AND ((((rt0.c1))<=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c0)) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c1))) AND ((((rt0.c1))<=((v0.c0)))))) IS TRUE)  as count FROM rt0, t0, v0, vt0);
SELECT COUNT(*) FROM rt0, t0, v0, vt0 WHERE (((ABS(vt0.c0)) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c1))) AND ((((rt0.c1))<=((v0.c0))))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c0) AND (SQLITE_VERSION())) FULL OUTER JOIN rt0 ON (((('735UT欅') BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL) RIGHT OUTER JOIN v0 ON NULL WHERE ((((NOT (rt0.c3))) NOT BETWEEN ((vt0.c1 IN (rt0.c3))) AND (LIKELIHOOD(rt0.c1, 0.09604605201881333))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3))) NOT BETWEEN ((vt0.c1 IN (rt0.c3))) AND (LIKELIHOOD(rt0.c1, 0.09604605201881333)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c0) AND (SQLITE_VERSION())) FULL OUTER JOIN rt0 ON (((('735UT欅') BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL) RIGHT OUTER JOIN v0 ON NULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c0) AND (SQLITE_VERSION())) FULL OUTER JOIN rt0 ON (((('735UT欅') BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL) RIGHT OUTER JOIN v0 ON NULL WHERE ((((NOT (rt0.c3))) NOT BETWEEN ((vt0.c1 IN (rt0.c3))) AND (LIKELIHOOD(rt0.c1, 0.09604605201881333))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3))) NOT BETWEEN ((vt0.c1 IN (rt0.c3))) AND (LIKELIHOOD(rt0.c1, 0.09604605201881333)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c0) AND (SQLITE_VERSION())) FULL OUTER JOIN rt0 ON (((('735UT欅') BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL) RIGHT OUTER JOIN v0 ON NULL);
SELECT * FROM v0 WHERE (((v0.c0)<>(v0.c0)) COLLATE NOCASE) ORDER BY CAST(((v0.c0) BETWEEN (x'') AND (v0.c0)) AS BLOB)  NULLS LAST, (+ ((v0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)<>(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) BETWEEN (x'') AND (v0.c0)) AS BLOB)  NULLS LAST, (+ ((v0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0)<>(v0.c0)) COLLATE NOCASE) ORDER BY CAST(((v0.c0) BETWEEN (x'') AND (v0.c0)) AS BLOB)  NULLS LAST, (+ ((v0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)<>(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) BETWEEN (x'') AND (v0.c0)) AS BLOB)  NULLS LAST, (+ ((v0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0)<>(v0.c0)) COLLATE NOCASE) ORDER BY CAST(((v0.c0) BETWEEN (x'') AND (v0.c0)) AS BLOB)  NULLS LAST, (+ ((v0.c0 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY CASE 7.87345395E8  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END ASC, (+ (((vt0.c0)AND(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE 7.87345395E8  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END ASC, (+ (((vt0.c0)AND(vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY CASE 7.87345395E8  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END ASC, (+ (((vt0.c0)AND(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE 7.87345395E8  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END ASC, (+ (((vt0.c0)AND(vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY CASE 7.87345395E8  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END ASC, (+ (((vt0.c0)AND(vt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t0, vt0, v0 WHERE (json_extract(CAST(vt0.c1 AS REAL), ((v0.c0) IS TRUE), (vt0.c0 IN (rt0.c3, rt0.c0)), ((rt0.c2)GLOB(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(CAST(vt0.c1 AS REAL), ((v0.c0) IS TRUE), (vt0.c0 IN (rt0.c3, rt0.c0)), ((rt0.c2)GLOB(t0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0, v0);
SELECT ALL * FROM rt0, t0, vt0, v0 WHERE (json_extract(CAST(vt0.c1 AS REAL), ((v0.c0) IS TRUE), (vt0.c0 IN (rt0.c3, rt0.c0)), ((rt0.c2)GLOB(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(CAST(vt0.c1 AS REAL), ((v0.c0) IS TRUE), (vt0.c0 IN (rt0.c3, rt0.c0)), ((rt0.c2)GLOB(t0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0, v0);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN v0.c0 ELSE vt0.c0 END)!=(rt0.c1)) CROSS JOIN t0 ON CAST((- (rt0.c3)) AS INTEGER) WHERE (((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND((((vt0.c1))>((rt0.c3))))))AND(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2))))) ORDER BY (NOT (rt0.c3 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND((((vt0.c1))>((rt0.c3))))))AND(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN v0.c0 ELSE vt0.c0 END)!=(rt0.c1)) CROSS JOIN t0 ON CAST((- (rt0.c3)) AS INTEGER) ORDER BY (NOT (rt0.c3 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN v0.c0 ELSE vt0.c0 END)!=(rt0.c1)) CROSS JOIN t0 ON CAST((- (rt0.c3)) AS INTEGER) WHERE (((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND((((vt0.c1))>((rt0.c3))))))AND(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2))))) ORDER BY (NOT (rt0.c3 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND((((vt0.c1))>((rt0.c3))))))AND(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN v0.c0 ELSE vt0.c0 END)!=(rt0.c1)) CROSS JOIN t0 ON CAST((- (rt0.c3)) AS INTEGER) ORDER BY (NOT (rt0.c3 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN v0.c0 ELSE vt0.c0 END)!=(rt0.c1)) CROSS JOIN t0 ON CAST((- (rt0.c3)) AS INTEGER) WHERE (((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND((((vt0.c1))>((rt0.c3))))))AND(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2))))) ORDER BY (NOT (rt0.c3 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) BETWEEN (t0.c0 COLLATE NOCASE) AND ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) BETWEEN (t0.c0 COLLATE NOCASE) AND ((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) BETWEEN (t0.c0 COLLATE NOCASE) AND ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) BETWEEN (t0.c0 COLLATE NOCASE) AND ((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) BETWEEN (t0.c0 COLLATE NOCASE) AND ((NOT (t0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), TRIM(DISTINCT v0.c0), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.6260093336903164, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x''))))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) ISNULL), CASE WHEN v0.c0 THEN '.华Z*因*[4c' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), TRIM(DISTINCT v0.c0), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.6260093336903164, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x''))))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) ISNULL), CASE WHEN v0.c0 THEN '.华Z*因*[4c' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), TRIM(DISTINCT v0.c0), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.6260093336903164, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x''))))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) ISNULL), CASE WHEN v0.c0 THEN '.华Z*因*[4c' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), TRIM(DISTINCT v0.c0), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.6260093336903164, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x''))))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) ISNULL), CASE WHEN v0.c0 THEN '.华Z*因*[4c' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), TRIM(DISTINCT v0.c0), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.6260093336903164, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x''))))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) ISNULL), CASE WHEN v0.c0 THEN '.华Z*因*[4c' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC;
SELECT * FROM t0 INNER JOIN rt0 ON (- ((- (vt0.c0)))) CROSS JOIN v0 ON CAST((~ (v0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt0 ON -95178783 WHERE ((((CASE t0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN 'A' WHEN rt0.c3 THEN rt0.c0 END))<=(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN 'A' WHEN rt0.c3 THEN rt0.c0 END))<=(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- ((- (vt0.c0)))) CROSS JOIN v0 ON CAST((~ (v0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt0 ON -95178783 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0 INNER JOIN rt0 ON (- ((- (vt0.c0)))) CROSS JOIN v0 ON CAST((~ (v0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt0 ON -95178783 WHERE ((((CASE t0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN 'A' WHEN rt0.c3 THEN rt0.c0 END))<=(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN 'A' WHEN rt0.c3 THEN rt0.c0 END))<=(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- ((- (vt0.c0)))) CROSS JOIN v0 ON CAST((~ (v0.c0)) AS NUMERIC) RIGHT OUTER JOIN vt0 ON -95178783 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0, t0 NOT INDEXED, v0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, t0, v0 NOT INDEXED);
SELECT ALL * FROM rt0, t0 NOT INDEXED, v0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, t0, v0 NOT INDEXED);
SELECT ALL * FROM rt0, t0 NOT INDEXED, v0 WHERE (rt0.c3);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c3 IN ()))OR(rt0.c2)))AND(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3 IN ()))OR(rt0.c2)))AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c3 IN ()))OR(rt0.c2)))AND(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3 IN ()))OR(rt0.c2)))AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c3 IN ()))OR(rt0.c2)))AND(CAST(rt0.c1 AS TEXT))));
SELECT COUNT(*) FROM rt0, t0 INNER JOIN v0 ON (((((vt0.c1))>=((v0.c0)))) IS FALSE) FULL OUTER JOIN vt0 ON ((vt0.c0)|(rt0.c0)) COLLATE RTRIM WHERE (((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))OR(rt0.c1)))AND(NULL))) ORDER BY ((((LIKE(rt0.c3, v0.c0, 'D'))AND(((vt0.c0)IS(rt0.c3)))))OR(((vt0.c0)>>(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))OR(rt0.c1)))AND(NULL))) IS TRUE)  as count FROM rt0, t0 INNER JOIN v0 ON (((((vt0.c1))>=((v0.c0)))) IS FALSE) FULL OUTER JOIN vt0 ON ((vt0.c0)|(rt0.c0)) COLLATE RTRIM ORDER BY ((((LIKE(rt0.c3, v0.c0, 'D'))AND(((vt0.c0)IS(rt0.c3)))))OR(((vt0.c0)>>(x'')))) ASC);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN v0 ON (((((vt0.c1))>=((v0.c0)))) IS FALSE) FULL OUTER JOIN vt0 ON ((vt0.c0)|(rt0.c0)) COLLATE RTRIM WHERE (((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))OR(rt0.c1)))AND(NULL))) ORDER BY ((((LIKE(rt0.c3, v0.c0, 'D'))AND(((vt0.c0)IS(rt0.c3)))))OR(((vt0.c0)>>(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))OR(rt0.c1)))AND(NULL))) IS TRUE)  as count FROM rt0, t0 INNER JOIN v0 ON (((((vt0.c1))>=((v0.c0)))) IS FALSE) FULL OUTER JOIN vt0 ON ((vt0.c0)|(rt0.c0)) COLLATE RTRIM ORDER BY ((((LIKE(rt0.c3, v0.c0, 'D'))AND(((vt0.c0)IS(rt0.c3)))))OR(((vt0.c0)>>(x'')))) ASC);
SELECT ALL * FROM v0, rt0, t0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, t0);
SELECT ALL * FROM v0, rt0, t0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, t0);
SELECT ALL * FROM v0, rt0, t0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c3) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN ((t0.c0 IN (rt0.c0))) AND (LIKE(rt0.c0, vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN ((t0.c0 IN (rt0.c0))) AND (LIKE(rt0.c0, vt0.c1))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c3) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN ((t0.c0 IN (rt0.c0))) AND (LIKE(rt0.c0, vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN ((t0.c0 IN (rt0.c0))) AND (LIKE(rt0.c0, vt0.c1))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c3) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN ((t0.c0 IN (rt0.c0))) AND (LIKE(rt0.c0, vt0.c1))) DESC  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE (UNLIKELY(DISTINCT (NOT (v0.c0)))) ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND (((- (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (NOT (v0.c0)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND (((- (v0.c0)))))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (UNLIKELY(DISTINCT (NOT (v0.c0)))) ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND (((- (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (NOT (v0.c0)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND (((- (v0.c0)))))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (UNLIKELY(DISTINCT (NOT (v0.c0)))) ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND (((- (v0.c0)))))  NULLS LAST;
SELECT * FROM v0, vt0 INNER JOIN t0 ON CASE vt0.c0  WHEN '' THEN t0.c0 WHEN t0.c0 THEN rt0.c1 WHEN 0.05288202263616859 THEN v0.c0 ELSE vt0.c1 END COLLATE NOCASE INNER JOIN rt0 ON v0.c0 WHERE (LIKELIHOOD(t0.c0, 0.3139241079731564));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(t0.c0, 0.3139241079731564)) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON CASE vt0.c0  WHEN '' THEN t0.c0 WHEN t0.c0 THEN rt0.c1 WHEN 0.05288202263616859 THEN v0.c0 ELSE vt0.c1 END COLLATE NOCASE INNER JOIN rt0 ON v0.c0);
SELECT * FROM v0, vt0 INNER JOIN t0 ON CASE vt0.c0  WHEN '' THEN t0.c0 WHEN t0.c0 THEN rt0.c1 WHEN 0.05288202263616859 THEN v0.c0 ELSE vt0.c1 END COLLATE NOCASE INNER JOIN rt0 ON v0.c0 WHERE (LIKELIHOOD(t0.c0, 0.3139241079731564));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(t0.c0, 0.3139241079731564)) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON CASE vt0.c0  WHEN '' THEN t0.c0 WHEN t0.c0 THEN rt0.c1 WHEN 0.05288202263616859 THEN v0.c0 ELSE vt0.c1 END COLLATE NOCASE INNER JOIN rt0 ON v0.c0);
SELECT * FROM v0, vt0 INNER JOIN t0 ON CASE vt0.c0  WHEN '' THEN t0.c0 WHEN t0.c0 THEN rt0.c1 WHEN 0.05288202263616859 THEN v0.c0 ELSE vt0.c1 END COLLATE NOCASE INNER JOIN rt0 ON v0.c0 WHERE (LIKELIHOOD(t0.c0, 0.3139241079731564));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0 IN ()))OR((NOT (t0.c0)))))OR(((t0.c0)&(t0.c0))))  NULLS LAST, ((t0.c0)OR(t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0 IN ()))OR((NOT (t0.c0)))))OR(((t0.c0)&(t0.c0))))  NULLS LAST, ((t0.c0)OR(t0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0 IN ()))OR((NOT (t0.c0)))))OR(((t0.c0)&(t0.c0))))  NULLS LAST, ((t0.c0)OR(t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0 IN ()))OR((NOT (t0.c0)))))OR(((t0.c0)&(t0.c0))))  NULLS LAST, ((t0.c0)OR(t0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0 IN ()))OR((NOT (t0.c0)))))OR(((t0.c0)&(t0.c0))))  NULLS LAST, ((t0.c0)OR(t0.c0)) COLLATE RTRIM;
SELECT * FROM rt0 WHERE (((((((rt0.c0) IS TRUE))OR(json_type(rt0.c0))))OR((((x'f65e', rt0.c0, rt0.c0, rt0.c0, rt0.c3))>((rt0.c3, rt0.c2, rt0.c2, rt0.c3, x'a889'))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) IS TRUE))OR(json_type(rt0.c0))))OR((((x'f65e', rt0.c0, rt0.c0, rt0.c0, rt0.c3))>((rt0.c3, rt0.c2, rt0.c2, rt0.c3, x'a889')))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0) IS TRUE))OR(json_type(rt0.c0))))OR((((x'f65e', rt0.c0, rt0.c0, rt0.c0, rt0.c3))>((rt0.c3, rt0.c2, rt0.c2, rt0.c3, x'a889'))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) IS TRUE))OR(json_type(rt0.c0))))OR((((x'f65e', rt0.c0, rt0.c0, rt0.c0, rt0.c3))>((rt0.c3, rt0.c2, rt0.c2, rt0.c3, x'a889')))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0) IS TRUE))OR(json_type(rt0.c0))))OR((((x'f65e', rt0.c0, rt0.c0, rt0.c0, rt0.c3))>((rt0.c3, rt0.c2, rt0.c2, rt0.c3, x'a889'))))));
SELECT * FROM rt0 WHERE ((((NULL))<=((((rt0.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((NULL))<=((((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((NULL))<=((((rt0.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((NULL))<=((((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((NULL))<=((((rt0.c2) IS TRUE)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((((((TRIM(rt0.c2))OR(rt0.c2 COLLATE BINARY)))AND(rt0.c2)))AND(CAST(rt0.c1 AS BLOB))))AND(((rt0.c0)|(rt0.c3)))))OR(LOWER('-1624320671'))))OR((t0.c0 IN ())))) ORDER BY ((rt0.c1) IS TRUE) COLLATE RTRIM, 0.26580547710536717  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((TRIM(rt0.c2))OR(rt0.c2 COLLATE BINARY)))AND(rt0.c2)))AND(CAST(rt0.c1 AS BLOB))))AND(((rt0.c0)|(rt0.c3)))))OR(LOWER('-1624320671'))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c1) IS TRUE) COLLATE RTRIM, 0.26580547710536717  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((((((TRIM(rt0.c2))OR(rt0.c2 COLLATE BINARY)))AND(rt0.c2)))AND(CAST(rt0.c1 AS BLOB))))AND(((rt0.c0)|(rt0.c3)))))OR(LOWER('-1624320671'))))OR((t0.c0 IN ())))) ORDER BY ((rt0.c1) IS TRUE) COLLATE RTRIM, 0.26580547710536717  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((TRIM(rt0.c2))OR(rt0.c2 COLLATE BINARY)))AND(rt0.c2)))AND(CAST(rt0.c1 AS BLOB))))AND(((rt0.c0)|(rt0.c3)))))OR(LOWER('-1624320671'))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c1) IS TRUE) COLLATE RTRIM, 0.26580547710536717  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((((((TRIM(rt0.c2))OR(rt0.c2 COLLATE BINARY)))AND(rt0.c2)))AND(CAST(rt0.c1 AS BLOB))))AND(((rt0.c0)|(rt0.c3)))))OR(LOWER('-1624320671'))))OR((t0.c0 IN ())))) ORDER BY ((rt0.c1) IS TRUE) COLLATE RTRIM, 0.26580547710536717  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c0 WHERE ((+ (vt0.c0))) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c0 WHERE ((+ (vt0.c0))) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c0 WHERE ((+ (vt0.c0))) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ('+ys' COLLATE RTRIM) ORDER BY (((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST, ((((t0.c0)GLOB(t0.c0)))*(-1.14798977E9))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('+ys' COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST, ((((t0.c0)GLOB(t0.c0)))*(-1.14798977E9))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ('+ys' COLLATE RTRIM) ORDER BY (((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST, ((((t0.c0)GLOB(t0.c0)))*(-1.14798977E9))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('+ys' COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST, ((((t0.c0)GLOB(t0.c0)))*(-1.14798977E9))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ('+ys' COLLATE RTRIM) ORDER BY (((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST, ((((t0.c0)GLOB(t0.c0)))*(-1.14798977E9))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c0)OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND (((t0.c0) NOTNULL)))) ORDER BY CASE ((t0.c0)=(vt0.c1))  WHEN ((((x'')OR(t0.c0)))OR(vt0.c0)) THEN vt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((t0.c0)=(vt0.c1))  WHEN ((((x'')OR(t0.c0)))OR(vt0.c0)) THEN vt0.c0 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c0)OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND (((t0.c0) NOTNULL)))) ORDER BY CASE ((t0.c0)=(vt0.c1))  WHEN ((((x'')OR(t0.c0)))OR(vt0.c0)) THEN vt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((t0.c0)=(vt0.c1))  WHEN ((((x'')OR(t0.c0)))OR(vt0.c0)) THEN vt0.c0 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c0)OR(vt0.c1)))AND(vt0.c1))) BETWEEN (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND (((t0.c0) NOTNULL)))) ORDER BY CASE ((t0.c0)=(vt0.c1))  WHEN ((((x'')OR(t0.c0)))OR(vt0.c0)) THEN vt0.c0 END ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON 1.850916615E9 WHERE (CAST('' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON 1.850916615E9);
SELECT COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON 1.850916615E9 WHERE (CAST('' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON 1.850916615E9);
SELECT COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON 1.850916615E9 WHERE (CAST('' AS NUMERIC));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON CAST(INSTR(v0.c0, 0X11ee1d98) AS INTEGER) CROSS JOIN v0 ON ((TRIM(vt0.c1))>((v0.c0 IN (v0.c0, vt0.c0)))) WHERE ((((ABS(DISTINCT vt0.c1)))<=((vt0.c0 COLLATE RTRIM)))) ORDER BY CAST((((v0.c0))>=((v0.c0))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((ABS(DISTINCT vt0.c1)))<=((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(INSTR(v0.c0, 0X11ee1d98) AS INTEGER) CROSS JOIN v0 ON ((TRIM(vt0.c1))>((v0.c0 IN (v0.c0, vt0.c0)))) ORDER BY CAST((((v0.c0))>=((v0.c0))) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON CAST(INSTR(v0.c0, 0X11ee1d98) AS INTEGER) CROSS JOIN v0 ON ((TRIM(vt0.c1))>((v0.c0 IN (v0.c0, vt0.c0)))) WHERE ((((ABS(DISTINCT vt0.c1)))<=((vt0.c0 COLLATE RTRIM)))) ORDER BY CAST((((v0.c0))>=((v0.c0))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((ABS(DISTINCT vt0.c1)))<=((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(INSTR(v0.c0, 0X11ee1d98) AS INTEGER) CROSS JOIN v0 ON ((TRIM(vt0.c1))>((v0.c0 IN (v0.c0, vt0.c0)))) ORDER BY CAST((((v0.c0))>=((v0.c0))) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON CAST(INSTR(v0.c0, 0X11ee1d98) AS INTEGER) CROSS JOIN v0 ON ((TRIM(vt0.c1))>((v0.c0 IN (v0.c0, vt0.c0)))) WHERE ((((ABS(DISTINCT vt0.c1)))<=((vt0.c0 COLLATE RTRIM)))) ORDER BY CAST((((v0.c0))>=((v0.c0))) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, rt0, t0 WHERE (CASE ((x'')<=(v0.c0))  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(rt0.c3)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c0)) WHEN ((v0.c0)=(vt0.c0)) THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END WHEN ((((t0.c0)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c2)*(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'')<=(v0.c0))  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(rt0.c3)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c0)) WHEN ((v0.c0)=(vt0.c0)) THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END WHEN ((((t0.c0)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c2)*(rt0.c0)) END) IS TRUE)  as count FROM v0, vt0, rt0, t0);
SELECT COUNT(*) FROM v0, vt0, rt0, t0 WHERE (CASE ((x'')<=(v0.c0))  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(rt0.c3)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c0)) WHEN ((v0.c0)=(vt0.c0)) THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END WHEN ((((t0.c0)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c2)*(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'')<=(v0.c0))  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(rt0.c3)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c0)) WHEN ((v0.c0)=(vt0.c0)) THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END WHEN ((((t0.c0)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c2)*(rt0.c0)) END) IS TRUE)  as count FROM v0, vt0, rt0, t0);
SELECT COUNT(*) FROM v0, vt0, rt0, t0 WHERE (CASE ((x'')<=(v0.c0))  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(rt0.c3)))AND(vt0.c1)))OR(rt0.c2)))AND(vt0.c0)) WHEN ((v0.c0)=(vt0.c0)) THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c0 END WHEN ((((t0.c0)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c2)*(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(CASE WHEN rt0.c2 THEN NULL END, (NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE WHEN rt0.c2 THEN NULL END, (NOT (rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(CASE WHEN rt0.c2 THEN NULL END, (NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE WHEN rt0.c2 THEN NULL END, (NOT (rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(CASE WHEN rt0.c2 THEN NULL END, (NOT (rt0.c3))));
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN v0 ON (((t0.c0) IS FALSE) IN ('p')) WHERE (CAST(v0.c0 AS TEXT)) ORDER BY IFNULL(((')(') BETWEEN (v0.c0) AND (v0.c0)), json_remove(rt0.c2, rt0.c2)) DESC  NULLS LAST, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN v0 ON (((t0.c0) IS FALSE) IN ('p')) ORDER BY IFNULL(((')(') BETWEEN (v0.c0) AND (v0.c0)), json_remove(rt0.c2, rt0.c2)) DESC  NULLS LAST, rt0.c1  NULLS LAST);
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN v0 ON (((t0.c0) IS FALSE) IN ('p')) WHERE (CAST(v0.c0 AS TEXT)) ORDER BY IFNULL(((')(') BETWEEN (v0.c0) AND (v0.c0)), json_remove(rt0.c2, rt0.c2)) DESC  NULLS LAST, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN v0 ON (((t0.c0) IS FALSE) IN ('p')) ORDER BY IFNULL(((')(') BETWEEN (v0.c0) AND (v0.c0)), json_remove(rt0.c2, rt0.c2)) DESC  NULLS LAST, rt0.c1  NULLS LAST);
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN v0 ON (((t0.c0) IS FALSE) IN ('p')) WHERE (CAST(v0.c0 AS TEXT)) ORDER BY IFNULL(((')(') BETWEEN (v0.c0) AND (v0.c0)), json_remove(rt0.c2, rt0.c2)) DESC  NULLS LAST, rt0.c1  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (((((((((((((rt0.c2)AND(x'')))AND(rt0.c2)))OR(rt0.c2)))AND(v0.c0)))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))))AND(v0.c0))) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(x'')))AND(rt0.c2)))OR(rt0.c2)))AND(v0.c0)))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))))AND(v0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((((rt0.c2)AND(x'')))AND(rt0.c2)))OR(rt0.c2)))AND(v0.c0)))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))))AND(v0.c0))) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(x'')))AND(rt0.c2)))OR(rt0.c2)))AND(v0.c0)))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))))AND(v0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((((rt0.c2)AND(x'')))AND(rt0.c2)))OR(rt0.c2)))AND(v0.c0)))OR(((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))))AND(v0.c0))) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN 0.7851559484936095 END) IS TRUE) RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT ((v0.c0)>>(vt0.c0)), rt0.c1 COLLATE RTRIM, CASE rt0.c1  WHEN 54534827 THEN rt0.c3 ELSE 0.9048384874055428 END, ((0x3ba906b6)%(t0.c0))) INNER JOIN t0 ON ((ABS(vt0.c0)) NOT BETWEEN (CASE WHEN t0.c0 THEN x'' ELSE rt0.c2 END) AND ((NOT ('189585481')))) WHERE ('') ORDER BY (((rt0.c3 IN ()))&(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN 0.7851559484936095 END) IS TRUE) RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT ((v0.c0)>>(vt0.c0)), rt0.c1 COLLATE RTRIM, CASE rt0.c1  WHEN 54534827 THEN rt0.c3 ELSE 0.9048384874055428 END, ((0x3ba906b6)%(t0.c0))) INNER JOIN t0 ON ((ABS(vt0.c0)) NOT BETWEEN (CASE WHEN t0.c0 THEN x'' ELSE rt0.c2 END) AND ((NOT ('189585481')))) ORDER BY (((rt0.c3 IN ()))&(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN 0.7851559484936095 END) IS TRUE) RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT ((v0.c0)>>(vt0.c0)), rt0.c1 COLLATE RTRIM, CASE rt0.c1  WHEN 54534827 THEN rt0.c3 ELSE 0.9048384874055428 END, ((0x3ba906b6)%(t0.c0))) INNER JOIN t0 ON ((ABS(vt0.c0)) NOT BETWEEN (CASE WHEN t0.c0 THEN x'' ELSE rt0.c2 END) AND ((NOT ('189585481')))) WHERE ('') ORDER BY (((rt0.c3 IN ()))&(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN 0.7851559484936095 END) IS TRUE) RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT ((v0.c0)>>(vt0.c0)), rt0.c1 COLLATE RTRIM, CASE rt0.c1  WHEN 54534827 THEN rt0.c3 ELSE 0.9048384874055428 END, ((0x3ba906b6)%(t0.c0))) INNER JOIN t0 ON ((ABS(vt0.c0)) NOT BETWEEN (CASE WHEN t0.c0 THEN x'' ELSE rt0.c2 END) AND ((NOT ('189585481')))) ORDER BY (((rt0.c3 IN ()))&(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM t0, vt0, v0 WHERE (x'') ORDER BY ((((((((LIKELIHOOD(DISTINCT vt0.c0, 0.48284747248704296))AND(CHANGES())))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))))OR(((v0.c0)OR(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((((LIKELIHOOD(DISTINCT vt0.c0, 0.48284747248704296))AND(CHANGES())))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))))OR(((v0.c0)OR(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, v0 WHERE (x'') ORDER BY ((((((((LIKELIHOOD(DISTINCT vt0.c0, 0.48284747248704296))AND(CHANGES())))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))))OR(((v0.c0)OR(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((((((LIKELIHOOD(DISTINCT vt0.c0, 0.48284747248704296))AND(CHANGES())))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))))OR(((v0.c0)OR(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, v0 WHERE (x'') ORDER BY ((((((((LIKELIHOOD(DISTINCT vt0.c0, 0.48284747248704296))AND(CHANGES())))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))))OR(((v0.c0)OR(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT * FROM t0, vt0 WHERE (((CASE WHEN vt0.c1 THEN x'8b30' ELSE t0.c0 END)%(((((((((((((vt0.c0)OR('-1444624328')))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c0)))OR(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN x'8b30' ELSE t0.c0 END)%(((((((((((((vt0.c0)OR('-1444624328')))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c0)))OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT * FROM t0, vt0 WHERE (((CASE WHEN vt0.c1 THEN x'8b30' ELSE t0.c0 END)%(((((((((((((vt0.c0)OR('-1444624328')))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c0)))OR(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN x'8b30' ELSE t0.c0 END)%(((((((((((((vt0.c0)OR('-1444624328')))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c0)))OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED);
SELECT * FROM t0, vt0 WHERE (((CASE WHEN vt0.c1 THEN x'8b30' ELSE t0.c0 END)%(((((((((((((vt0.c0)OR('-1444624328')))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c0)))OR(vt0.c1)))AND(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY 'z' DESC, CAST((x'' IN ()) AS REAL)  NULLS FIRST, NULLIF(DISTINCT 0x1d50b1cc, (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY 'z' DESC, CAST((x'' IN ()) AS REAL)  NULLS FIRST, NULLIF(DISTINCT 0x1d50b1cc, (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY 'z' DESC, CAST((x'' IN ()) AS REAL)  NULLS FIRST, NULLIF(DISTINCT 0x1d50b1cc, (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY 'z' DESC, CAST((x'' IN ()) AS REAL)  NULLS FIRST, NULLIF(DISTINCT 0x1d50b1cc, (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY 'z' DESC, CAST((x'' IN ()) AS REAL)  NULLS FIRST, NULLIF(DISTINCT 0x1d50b1cc, (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0, rt0, v0 NATURAL JOIN t0 WHERE (CAST(((rt0.c0) IS FALSE) AS TEXT)) ORDER BY load_extension(((((t0.c0)AND(rt0.c3)))OR(v0.c0))), (rt0.c2 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0, rt0, v0 NATURAL JOIN t0 ORDER BY load_extension(((((t0.c0)AND(rt0.c3)))OR(v0.c0))), (rt0.c2 COLLATE BINARY IN ())  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 NATURAL JOIN t0 WHERE (CAST(((rt0.c0) IS FALSE) AS TEXT)) ORDER BY load_extension(((((t0.c0)AND(rt0.c3)))OR(v0.c0))), (rt0.c2 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0, rt0, v0 NATURAL JOIN t0 ORDER BY load_extension(((((t0.c0)AND(rt0.c3)))OR(v0.c0))), (rt0.c2 COLLATE BINARY IN ())  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 NATURAL JOIN t0 WHERE (CAST(((rt0.c0) IS FALSE) AS TEXT)) ORDER BY load_extension(((((t0.c0)AND(rt0.c3)))OR(v0.c0))), (rt0.c2 COLLATE BINARY IN ())  NULLS LAST;
SELECT * FROM t0, v0, rt0, vt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN rt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) END) ORDER BY 0.8507424438735771 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c0 THEN rt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY 0.8507424438735771 ASC);
SELECT * FROM t0, v0, rt0, vt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN rt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) END) ORDER BY 0.8507424438735771 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c0 THEN rt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY 0.8507424438735771 ASC);
SELECT * FROM t0, v0, rt0, vt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN rt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) END) ORDER BY 0.8507424438735771 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM v0 INNER JOIN t0 ON ((MAX(t0.c0, 0.3788666732539724)) IS TRUE) WHERE (((+ (t0.c0)) IN ())) ORDER BY ((((((((((t0.c0) NOT NULL))AND(CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)))OR(v0.c0)))OR(((t0.c0)+(v0.c0)))))OR(((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((MAX(t0.c0, 0.3788666732539724)) IS TRUE) ORDER BY ((((((((((t0.c0) NOT NULL))AND(CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)))OR(v0.c0)))OR(((t0.c0)+(v0.c0)))))OR(((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT * FROM v0 INNER JOIN t0 ON ((MAX(t0.c0, 0.3788666732539724)) IS TRUE) WHERE (((+ (t0.c0)) IN ())) ORDER BY ((((((((((t0.c0) NOT NULL))AND(CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)))OR(v0.c0)))OR(((t0.c0)+(v0.c0)))))OR(((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((MAX(t0.c0, 0.3788666732539724)) IS TRUE) ORDER BY ((((((((((t0.c0) NOT NULL))AND(CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)))OR(v0.c0)))OR(((t0.c0)+(v0.c0)))))OR(((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT * FROM v0 INNER JOIN t0 ON ((MAX(t0.c0, 0.3788666732539724)) IS TRUE) WHERE (((+ (t0.c0)) IN ())) ORDER BY ((((((((((t0.c0) NOT NULL))AND(CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)))OR(v0.c0)))OR(((t0.c0)+(v0.c0)))))OR(((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON 'wj' WHERE (((((rt0.c1)&(NULL)))>(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)&(NULL)))>(rt0.c1))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON 'wj');
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON 'wj' WHERE (((((rt0.c1)&(NULL)))>(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)&(NULL)))>(rt0.c1))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON 'wj');
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON 'wj' WHERE (((((rt0.c1)&(NULL)))>(rt0.c1)));
SELECT ALL * FROM rt0, v0, vt0 LEFT OUTER JOIN t0 ON CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c1) THEN v0.c0 COLLATE RTRIM END WHERE ('⪳Klq&,,P' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('⪳Klq&,,P' COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0 LEFT OUTER JOIN t0 ON CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c1) THEN v0.c0 COLLATE RTRIM END);
SELECT ALL * FROM rt0, v0, vt0 LEFT OUTER JOIN t0 ON CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c1) THEN v0.c0 COLLATE RTRIM END WHERE ('⪳Klq&,,P' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('⪳Klq&,,P' COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0 LEFT OUTER JOIN t0 ON CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c1) THEN v0.c0 COLLATE RTRIM END);
SELECT ALL * FROM rt0, v0, vt0 LEFT OUTER JOIN t0 ON CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c1) THEN v0.c0 COLLATE RTRIM END WHERE ('⪳Klq&,,P' COLLATE BINARY);
SELECT * FROM vt0, v0 WHERE (vt0.c1) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (vt0.c1) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (vt0.c1) ORDER BY x'' DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0) BETWEEN (rt0.c3) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (rt0.c3) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0) BETWEEN (rt0.c3) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (rt0.c3) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0) BETWEEN (rt0.c3) AND (CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM t0, rt0, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, rt0, v0, vt0);
SELECT COUNT(*) FROM t0, rt0, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, rt0, v0, vt0);
SELECT COUNT(*) FROM t0, rt0, v0, vt0 WHERE (v0.c0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(((((((((x'')AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(((v0.c0)<<(v0.c0))))) ORDER BY ((v0.c0)/(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(((((((((x'')AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)/(v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(((((((((x'')AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(((v0.c0)<<(v0.c0))))) ORDER BY ((v0.c0)/(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(((((((((x'')AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)/(v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(((((((((x'')AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(((v0.c0)<<(v0.c0))))) ORDER BY ((v0.c0)/(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, v0, t0 WHERE ((('712853707')>>(vt0.c1)) COLLATE NOCASE) ORDER BY (((x'', rt0.c2, rt0.c2))<((rt0.c0, rt0.c2, rt0.c3))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('712853707')>>(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0, t0 ORDER BY (((x'', rt0.c2, rt0.c2))<((rt0.c0, rt0.c2, rt0.c3))) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0, t0 WHERE ((('712853707')>>(vt0.c1)) COLLATE NOCASE) ORDER BY (((x'', rt0.c2, rt0.c2))<((rt0.c0, rt0.c2, rt0.c3))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('712853707')>>(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0, t0 ORDER BY (((x'', rt0.c2, rt0.c2))<((rt0.c0, rt0.c2, rt0.c3))) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0, t0 WHERE ((('712853707')>>(vt0.c1)) COLLATE NOCASE) ORDER BY (((x'', rt0.c2, rt0.c2))<((rt0.c0, rt0.c2, rt0.c3))) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((((UPPER(DISTINCT vt0.c1))AND(0.8848503398766439)))OR((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((x'58e0'))))) CROSS JOIN v0 ON CASE WHEN ((v0.c0)=(v0.c0)) THEN ((v0.c0) IS TRUE) WHEN IFNULL(rt0.c1, vt0.c0) THEN -1.20246641E9 COLLATE RTRIM WHEN ((NULL)AND(vt0.c1)) THEN ((x'c877500a') NOT BETWEEN (vt0.c1) AND (vt0.c1)) END WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) ORDER BY '1979281895' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((((UPPER(DISTINCT vt0.c1))AND(0.8848503398766439)))OR((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((x'58e0'))))) CROSS JOIN v0 ON CASE WHEN ((v0.c0)=(v0.c0)) THEN ((v0.c0) IS TRUE) WHEN IFNULL(rt0.c1, vt0.c0) THEN -1.20246641E9 COLLATE RTRIM WHEN ((NULL)AND(vt0.c1)) THEN ((x'c877500a') NOT BETWEEN (vt0.c1) AND (vt0.c1)) END ORDER BY '1979281895' DESC);
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((((UPPER(DISTINCT vt0.c1))AND(0.8848503398766439)))OR((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((x'58e0'))))) CROSS JOIN v0 ON CASE WHEN ((v0.c0)=(v0.c0)) THEN ((v0.c0) IS TRUE) WHEN IFNULL(rt0.c1, vt0.c0) THEN -1.20246641E9 COLLATE RTRIM WHEN ((NULL)AND(vt0.c1)) THEN ((x'c877500a') NOT BETWEEN (vt0.c1) AND (vt0.c1)) END WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) ORDER BY '1979281895' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((((UPPER(DISTINCT vt0.c1))AND(0.8848503398766439)))OR((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((x'58e0'))))) CROSS JOIN v0 ON CASE WHEN ((v0.c0)=(v0.c0)) THEN ((v0.c0) IS TRUE) WHEN IFNULL(rt0.c1, vt0.c0) THEN -1.20246641E9 COLLATE RTRIM WHEN ((NULL)AND(vt0.c1)) THEN ((x'c877500a') NOT BETWEEN (vt0.c1) AND (vt0.c1)) END ORDER BY '1979281895' DESC);
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((((UPPER(DISTINCT vt0.c1))AND(0.8848503398766439)))OR((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((x'58e0'))))) CROSS JOIN v0 ON CASE WHEN ((v0.c0)=(v0.c0)) THEN ((v0.c0) IS TRUE) WHEN IFNULL(rt0.c1, vt0.c0) THEN -1.20246641E9 COLLATE RTRIM WHEN ((NULL)AND(vt0.c1)) THEN ((x'c877500a') NOT BETWEEN (vt0.c1) AND (vt0.c1)) END WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) ORDER BY '1979281895' DESC;
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 WHERE (0x34dbdb4d COLLATE BINARY) ORDER BY CASE x''  WHEN ((rt0.c1) ISNULL) THEN IFNULL(rt0.c0, rt0.c2) ELSE (((rt0.c2, vt0.c1, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, NULL)) AND ((rt0.c3, vt0.c0, rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ((0X34dbdb4d COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0, rt0 ORDER BY CASE x''  WHEN ((rt0.c1) ISNULL) THEN IFNULL(rt0.c0, rt0.c2) ELSE (((rt0.c2, vt0.c1, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, NULL)) AND ((rt0.c3, vt0.c0, rt0.c2))) END);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 WHERE (0x34dbdb4d COLLATE BINARY) ORDER BY CASE x''  WHEN ((rt0.c1) ISNULL) THEN IFNULL(rt0.c0, rt0.c2) ELSE (((rt0.c2, vt0.c1, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, NULL)) AND ((rt0.c3, vt0.c0, rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ((0X34dbdb4d COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0, rt0 ORDER BY CASE x''  WHEN ((rt0.c1) ISNULL) THEN IFNULL(rt0.c0, rt0.c2) ELSE (((rt0.c2, vt0.c1, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, NULL)) AND ((rt0.c3, vt0.c0, rt0.c2))) END);
SELECT ALL COUNT(*) FROM v0, vt0, t0, rt0 WHERE (0x34dbdb4d COLLATE BINARY) ORDER BY CASE x''  WHEN ((rt0.c1) ISNULL) THEN IFNULL(rt0.c0, rt0.c2) ELSE (((rt0.c2, vt0.c1, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, NULL)) AND ((rt0.c3, vt0.c0, rt0.c2))) END;
SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c0)OR(t0.c0)))OR(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(t0.c0)))OR(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c0)OR(t0.c0)))OR(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(t0.c0)))OR(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c0)OR(t0.c0)))OR(rt0.c0))) NOTNULL));
SELECT * FROM t0, rt0, vt0, v0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM t0, rt0, vt0, v0);
SELECT * FROM t0, rt0, vt0, v0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM t0, rt0, vt0, v0);
SELECT * FROM t0, rt0, vt0, v0 WHERE (CAST(NULL AS BLOB));
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON 'iK㱦UAa' WHERE (CHANGES()) ORDER BY ABS((vt0.c1 IN ()))  NULLS LAST, rt0.c3;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON 'iK㱦UAa' ORDER BY ABS((vt0.c1 IN ()))  NULLS LAST, rt0.c3);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON 'iK㱦UAa' WHERE (CHANGES()) ORDER BY ABS((vt0.c1 IN ()))  NULLS LAST, rt0.c3;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON 'iK㱦UAa' ORDER BY ABS((vt0.c1 IN ()))  NULLS LAST, rt0.c3);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON 'iK㱦UAa' WHERE (CHANGES()) ORDER BY ABS((vt0.c1 IN ()))  NULLS LAST, rt0.c3;
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0)!=(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0)!=(v0.c0)) END ASC);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0)!=(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0)!=(v0.c0)) END ASC);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((v0.c0)!=(v0.c0)) END ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) ISNULL)) ORDER BY CAST(LOWER(DISTINCT v0.c0) AS BLOB) DESC  NULLS LAST, x'0738' DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY CAST(LOWER(DISTINCT v0.c0) AS BLOB) DESC  NULLS LAST, x'0738' DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) ISNULL)) ORDER BY CAST(LOWER(DISTINCT v0.c0) AS BLOB) DESC  NULLS LAST, x'0738' DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY CAST(LOWER(DISTINCT v0.c0) AS BLOB) DESC  NULLS LAST, x'0738' DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) ISNULL)) ORDER BY CAST(LOWER(DISTINCT v0.c0) AS BLOB) DESC  NULLS LAST, x'0738' DESC;
SELECT * FROM t0 NATURAL JOIN v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE)) ORDER BY ((TRIM(DISTINCT 0.1930125573308702, t0.c0)) BETWEEN ((t0.c0 IN ())) AND (((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((TRIM(DISTINCT 0.1930125573308702, t0.c0)) BETWEEN ((t0.c0 IN ())) AND (((v0.c0) NOT NULL))) ASC);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE)) ORDER BY ((TRIM(DISTINCT 0.1930125573308702, t0.c0)) BETWEEN ((t0.c0 IN ())) AND (((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE)) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((TRIM(DISTINCT 0.1930125573308702, t0.c0)) BETWEEN ((t0.c0 IN ())) AND (((v0.c0) NOT NULL))) ASC);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE)) ORDER BY ((TRIM(DISTINCT 0.1930125573308702, t0.c0)) BETWEEN ((t0.c0 IN ())) AND (((v0.c0) NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM t0, v0, vt0, rt0 WHERE ('-1730342514');
SELECT SUM(count) FROM (SELECT ALL (('-1730342514') IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0, rt0 WHERE ('-1730342514');
SELECT SUM(count) FROM (SELECT ALL (('-1730342514') IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0, rt0 WHERE ('-1730342514');
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c1);
SELECT * FROM vt0, v0, rt0 WHERE (LIKELIHOOD('455699771', 0.588180859716165));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('455699771', 0.588180859716165)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (LIKELIHOOD('455699771', 0.588180859716165));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('455699771', 0.588180859716165)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (LIKELIHOOD('455699771', 0.588180859716165));
SELECT ALL * FROM rt0, v0, vt0, t0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c3 THEN v0.c0 END))) ORDER BY (((rt0.c1 IN ()))==((((vt0.c1))==((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c0  WHEN rt0.c3 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, v0, vt0, t0 ORDER BY (((rt0.c1 IN ()))==((((vt0.c1))==((vt0.c1))))) ASC);
SELECT ALL * FROM rt0, v0, vt0, t0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c3 THEN v0.c0 END))) ORDER BY (((rt0.c1 IN ()))==((((vt0.c1))==((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c0  WHEN rt0.c3 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, v0, vt0, t0 ORDER BY (((rt0.c1 IN ()))==((((vt0.c1))==((vt0.c1))))) ASC);
SELECT ALL * FROM rt0, v0, vt0, t0 WHERE ((~ (CASE rt0.c0  WHEN rt0.c3 THEN v0.c0 END))) ORDER BY (((rt0.c1 IN ()))==((((vt0.c1))==((vt0.c1))))) ASC;
SELECT * FROM v0 WHERE (CASE (NOT (v0.c0))  WHEN 4.2133599E7 THEN v0.c0 WHEN v0.c0 THEN TYPEOF(DISTINCT v0.c0) WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0)>(v0.c0)) END) ORDER BY (NOT (((v0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (v0.c0))  WHEN 4.2133599E7 THEN v0.c0 WHEN v0.c0 THEN TYPEOF(DISTINCT v0.c0) WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0)>(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOTNULL)))  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE (NOT (v0.c0))  WHEN 4.2133599E7 THEN v0.c0 WHEN v0.c0 THEN TYPEOF(DISTINCT v0.c0) WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0)>(v0.c0)) END) ORDER BY (NOT (((v0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (v0.c0))  WHEN 4.2133599E7 THEN v0.c0 WHEN v0.c0 THEN TYPEOF(DISTINCT v0.c0) WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0)>(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOTNULL)))  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE (NOT (v0.c0))  WHEN 4.2133599E7 THEN v0.c0 WHEN v0.c0 THEN TYPEOF(DISTINCT v0.c0) WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0)>(v0.c0)) END) ORDER BY (NOT (((v0.c0) NOTNULL)))  NULLS FIRST;
