-- Time: 2024/06/09 07:15:16
-- Database: database40
-- Database version: 3.40.0
-- seed value: 2977999140
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 INT , c1 REAL DEFAULT 0xf8dbaf1 , c2 BLOB CHECK ( (c1 IN ()) COLLATE RTRIM) NOT NULL UNIQUE ); -- 0ms;
CREATE TEMP TABLE t1 (c0 TEXT ); -- 0ms;
UPDATE t0 SET (c2)=('-2040993917'); -- 0ms;
INSERT OR FAIL INTO t1 VALUES (0.060533557871043975), (x''), (x''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MIN(NULL COLLATE BINARY, ((x'') BETWEEN ('') AND (x'')), CASE WHEN NULL THEN '260946673' WHEN x'' THEN NULL WHEN x'682f' THEN x'' ELSE 2.60946673E8 END, (NULL IN (0.060533557871043975, 0.6801771661530849)), ((((((((NULL)OR(-2040993917)))AND(0.15614701621594673)))AND('260946673')))AND(0.15614701621594673)), CASE NULL  WHEN 0.1655294350318155 THEN 0Xffffffff8658e783 WHEN x'' THEN 0.15614701621594673 WHEN x'' THEN 1811039020 ELSE '1811039020' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '' COLLATE RTRIM  WHEN CAST(0.047493130776486425 AS NUMERIC) THEN (('0.047493130776486425')GLOB('260946673')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.81103902E9)-(0.35733136867671056)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1047170660'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELIHOOD(NULL, 0.8557834871685791))OR(x'')))OR(((x'') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-838026402 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((TYPEOF(DISTINCT '-2040993917'))OR(((NULL)IS NOT(NULL)))))OR(((1142355632) BETWEEN (NULL) AND (x'')))))AND(json(0.26791180408338067))))AND(CAST(x'' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((TRIM(DISTINCT x'01fa'))OR('' COLLATE RTRIM)))AND(((NULL)LIKE(NULL)))))OR(((NULL) NOT BETWEEN (NULL) AND (0.1942207099065314)))))AND(((0.8183872873704953) BETWEEN (x'') AND ('1047170660')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff803ac95b)OR(NULL)))OR('')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (0Xffffffffe8e358ba))  WHEN ((x'519a')>(0.04888668503835658)) THEN CAST(0.8183872873704953 AS REAL) WHEN ((x'')<(NULL)) THEN (('')<<(x'')) WHEN ((0.2019185268342769) NOT BETWEEN (-196575428) AND (0.35733136867671056)) THEN (((('Qu')AND(x'747b3b97')))AND(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xffffffffd96591b5)) NOT BETWEEN ((0.12286154915105807)) AND ((0.32700645057712086))))OR(((x'') NOT BETWEEN (0.9217696754668784) AND (-196575428)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')||(0.2173165875731753))) BETWEEN (((0.774463059728915)-('1827757538'))) AND ((('0.04888668503835658')OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x31a3d91a; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')-(x'f29c'))) BETWEEN ((((0.32700645057712086, 0X7fb4c289, -196575428)) NOT BETWEEN (('904554827', '', 'M_#(3)gy')) AND ((x'3a8a8238', '1252290774', x'')))) AND ((- (0.7766946742487633)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1784187992 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 sz=1597793884 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN ((CASE WHEN '5I' THEN 0X4b18c374 END)) AND (((((0xffffffffa2052438, NULL, x''))=((x'', 1.2599141E9, 0X7163875f)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('}෩') NOTNULL) THEN CASE WHEN -220376244 THEN 'N' WHEN 0.566772458451477 THEN NULL WHEN NULL THEN x'' END ELSE CASE 'M_#(3)gy'  WHEN '1104125406' THEN x'' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (x'f8c8')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-2128904553'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST('301904336' AS BLOB) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('-207530478' COLLATE BINARY)OR((~ (x'b78d')))))OR(CAST(0.32700645057712086 AS TEXT))))AND(((NULL)/(NULL)))))AND((x'' IN ()))))AND((((NULL))<(('N'))))))OR((((x'd9a9')) BETWEEN (('Eb/>A4>')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-235905562 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 2080237356 sz=67239860 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1142355632'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-60624029'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (970318815) AND (0.032068578775258594)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1784187992 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))>((NOT (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1784187992 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=832821530 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-670757747 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOTNULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((' mXf' COLLATE NOCASE)IS(((0.022797667557723056)>=(0xffffffffd2f1d9f5)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('X3') NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('1259914100' AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.6552468234627593 AS BLOB))&(CASE WHEN '0.047493130776486425' THEN 2000533803 WHEN x'' THEN x'' WHEN -1053973823 THEN '' ELSE -2.07530478E8 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=970318815 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ ('WjꤱA(홅(},')))AND(DATETIME(0.8183872873704953, x'5273', '<&^\r␸J', '', 'OwY,'))))OR((1315085536 IN (x'', NULL, NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1377898940 sz=-1121561898 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '904554827 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1897564193 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '\nPD'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL)) NOT BETWEEN (SQLITE_COMPILEOPTION_USED('-2009141332')) AND (((0.1532623587147235) NOT BETWEEN (x'') AND ('1811039020')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2128904553 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-647654987'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=888985164'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'')) NOT BETWEEN ((x'5148')) AND ((x''))))AND((('ﾴ4#''ཾ') NOT NULL))))AND(((x'') NOT BETWEEN ('fkMq\F') AND ('899088601')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('302204739')|(x'6c3b')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('681695994')GLOB(((NULL)|(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(191474754 AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '582737358 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=2142552713 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-904294753'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1113753179 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TYPEOF('845003505') IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffff949e5dbb)) NOT BETWEEN (((NULL IN ('t調bo')))) AND (((+ (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-992690400 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_quote((((x'22af'))==((NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'', x'', '\r&', '-904294753', '')) BETWEEN (('0.022797667557723056', '302204739', x'', x'', '')) AND ((NULL, NULL, '1581005287', NULL, 0.022797667557723056))))OR(NULL COLLATE NOCASE)))AND(CAST(-207530478 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1050278560 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<(('2142552713'))))AND(((((NULL)OR('_	nDu/7E')))OR('	uTS')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-196575428 -1582132761 sz=-1632195344 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.9302790373191332 AS TEXT))==('簶H0l')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.5546462323283757)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1540191344 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-320228894'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=627644920 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ('1597793884') AND (0.3021450156529525)) COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-873643660)=(NULL)) THEN LOWER(DISTINCT 0.15614701621594673) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 -2017851678 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (SUBSTR('-626586385', NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 0Xffffffffa2d048a8  WHEN 'N|9,' THEN x'' WHEN '%m' THEN 1.597793884E9 WHEN 0xffffffffd8050c8d THEN 'B쉁9' END))<((((0.9011682262086683)>>(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1892872310 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1267062769 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN (('-1871293592')-('0.5546462323283757')) THEN (+ (0.027810812482815583)) WHEN '0.2019185268342769' COLLATE NOCASE THEN (NULL IN ()) WHEN ('<xF04B' IN ()) THEN '?%' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_remove(NULL, 'X%sVhIH', 0.7906798225959546, 0.8973893170192263)) NOT BETWEEN (((0.4751337037698927)IS NOT('-1478756795'))) AND ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('vuPqd' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-599339622'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(IFNULL(0.5456914999238129, x''), COALESCE(-447259627, NULL), ((NULL) BETWEEN (x'') AND (x'02b9'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1972796141 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 'fH\r卌	m', 0.28772045936204593)) BETWEEN ((rtreenode(x'', NULL), ((0.12139436166202544)-('<xF04B')), ((x'17a8')IS(NULL)))) AND ((CASE ''  WHEN 618535433 THEN '^' ELSE 0.6399904673664477 END, (('')*('_%_]')), CASE 0.3527450376527963  WHEN x'61cb' THEN x'' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1892872310 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=1898564608'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.12713776800007615 IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1141516352'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1104125406 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1047170660 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1186918415 sz=1385777957'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1308306348'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT ((']<') NOT BETWEEN (NULL) AND (0.816521267068177))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1866011648 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') IS TRUE) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1814758288 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.1286434972668964)OR('%m')))AND('')))/(LENGTH(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.8973893170192263 AS REAL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-447259627 sz=-755901963'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1972796141 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LOWER(x'10ff'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<=(CASE WHEN 0x773db92b THEN 0.28772045936204593 WHEN 0X1fcc5e93 THEN NULL WHEN 0x3d5515a0 THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') IS FALSE))OR((('')|(-1.89287231E9)))))OR(CASE WHEN 0.0522735185557498 THEN NULL ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1200648209 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.35733136867671056))<((0X40129a70))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('301904336')) NOT BETWEEN ((x'2f21')) AND ((-1.563408216E9))))OR(COALESCE(DISTINCT 0.6908786999924613, NULL))))OR((- (-697273255)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR(x'')))OR('-1801560645')))AND('-1308306348')))OR(-2079873741)))&(((NULL)OR(0X711a8821)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '1442410189 sz=-1050278560 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=40439678'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1803187689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('1315085536' IN ()) COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.5778103249195727)AND('B}')))OR('-2135550635')))AND('-1113753179')))AND(0xffffffff983a14b9)))OR(0xffffffffdf2ded1b)))OR(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('7ᣨa')>=(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-599339622 -1113753179 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('0.7906798225959546')) NOT BETWEEN (('V-Infinity಍ _࿱_<{b')) AND ((0.0))))-(CAST('1442410189' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1240983969 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 0 sz=1074554065 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1121561898 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1871293592'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 2 sz=-1484626237 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 451983532 sz=-625483272 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-2138761171 sz=266102625 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=616199517'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2022237942 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX((+ (x'5bdd'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '1902348127 242406662 sz=-1019676707'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((('-252909731') NOTNULL))) AND (('Yo㢞bc_P' COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=404581934 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=805179155 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-516973595 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-536414868'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', 0.7756127088926749, x'')) BETWEEN ((CAST(-9223372036854775808 AS BLOB), ((x'36ff') NOT NULL), (0xffffffff8478feff IN (NULL)))) AND ((CASE WHEN '1442410189' THEN '899088601' WHEN x'' THEN '1827757538' WHEN 0.7756127088926749 THEN 'a5' ELSE NULL END, CAST(0.005649495468977306 AS TEXT), ((('808156214'))<>((NULL)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 sz=1028986272 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')) BETWEEN ((NULL)) AND (('wB\U?jVH'))))LIKE(0.24118349077431822)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('LQ <jEXl', x'57c6', NULL))<((x'', '0.6801771661530849', NULL))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1540191344'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-599339622 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0xffffffffdee06cf6)||(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.7906798225959546)<(0Xffffffffa78266c3)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-902473402 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1478756795'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(IFNULL('-1200648209', x'') AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1582132761 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=595289233'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=259944134 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1452188487'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))>=((0.08342309997351338))))|(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1453661794'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'b53e'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1033802546 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=2063161924 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-2143631013)) NOT BETWEEN (((('-1308306348')!=(x'2335')))) AND (((0X6ab1d5b4 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=618535433 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE BINARY, (('V%j')!=(0.6324239675128029)), ((NULL) NOT BETWEEN ('^') AND ('23316749'))))<=((((0.5329880118694225)<(0X33e55963)), (((NULL, '', NULL))==(('yo㢞bc_p', -1.059325255E9, 0xffffffffa1c3a766))), ((NULL)>=('2142552713'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 0 sz=-1333435899 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=402854712'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2040993917'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1870262180 sz=-2143631013 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)*(-2065351313)))OR((NOT (-4.47259627E8)))))OR((0xffffffffdc8f843e IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1866011648 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=302204739 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(ABS(DISTINCT 0.5077983634346573), ((0.47775490138067245) NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0x3116dce8)) BETWEEN ((NULL)) AND (('2}')))))>((((6.18535433E8) BETWEEN (x'') AND (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((-1.89287231E9 IN ()) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)OR(x'')))OR(CASE WHEN -2.017851678E9 THEN 0.6552468234627593 END)))OR(LIKELY(DISTINCT x''))))AND((- ('m')))))AND((((x'')) BETWEEN ((0.41461164971502285)) AND ((x''))))))OR(')슉\(')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1121561898)) NOT BETWEEN ((0.8159463976401797)) AND ((-1.267062769E9))))=(((0.7196375631735384) NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1700357306 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1787327308 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-599339622') ISNULL))!=(((1.385777957E9)>>(0.0522735185557498)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('tq')&(0xffffffff949e5dbb)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1004404447' COLLATE BINARY) NOT BETWEEN ((NULL IN (0.23535845388271648))) AND ((+ (0.005649495468977306)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-727270047 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('0.9011682262086683' AS INTEGER) THEN ((NULL)%(NULL)) WHEN (0.1937479214033282 IN ()) THEN ((NULL) NOT BETWEEN (0xffffffffa3612910) AND (0.24118349077431822)) WHEN (NOT (x'')) THEN (- (8.45003505E8)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '451983532 -2072119119'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2119597066 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LOWER(0.271346420600729))AND((NULL IN (NULL, '-1745941015')))))AND((0.17312992705004582 IN (x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-2074275258'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '422898190 sz=1703988315 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-889017697 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 1087806031 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LTRIM(2142552713, '582737358')  WHEN ((('-2135550635'))>((x''))) THEN (((('9KgBl{*')OR('-1466672180')))OR(NULL)) WHEN ((NULL)OR(0.5077660970192286)) THEN ((x'')+(-1536726565)) WHEN (('-1025847362') NOT BETWEEN ('-220376244') AND (NULL)) THEN ((NULL) NOT BETWEEN (0.3891439212907716) AND ('0.8973893170192263')) ELSE (((x''))>((x''))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>>(1.897564193E9))) NOT BETWEEN (((((((((NULL)OR('0.027810812482815583')))AND(x'')))OR('')))AND(0Xffffffff82b5dbff))) AND (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT (+ (x''))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'ef2ca9d1' COLLATE RTRIM) NOT BETWEEN (((0.41461164971502285) IS TRUE)) AND (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 0.3386812176200076  WHEN 'j )GATQL' THEN 0.8117624649159518 WHEN ']t/U*k%+' THEN 0.19134858115031939 WHEN 0.2173165875731753 THEN 0.271346420600729 ELSE NULL END))<=((((((x'')OR(x'69fb')))AND(0.12912263316048622))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1626719667 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=587178393 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 302204739 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1074961008 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=374818829 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UNLIKELY(0.27337536304921495) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '582737358 0 sz=582737358 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=263431347 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((',~o(OL')OR('681695994')))AND(x''))) BETWEEN (((1240983969) NOT NULL)) AND (x'4ff9')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6958532244331519)AND(5.33487251E8)))AND(-2009141332)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=497498953 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1707358872 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((('2115771796') NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-294423095 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'5bc579b2' IN ()))AND(CAST('2}' AS REAL))))OR((x'' IN ('''{⻩^4jH3')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.92690963699378; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.72116461562606)/('')))OR(NULL)))AND(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('''	loazD' AS REAL)) BETWEEN (TRIM(DISTINCT '0.26791180408338067')) AND (x'bdcb' COLLATE RTRIM)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 904554827 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=867308195 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('X6' COLLATE BINARY AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM((('ct') ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'8736') ISNULL))<<(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1745941015'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=354106797 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=743990645'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1141749999 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0xffffffffcc7c57e8) AND ('')))*(UNLIKELY(0x28a1dafa))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-127035682'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN ((0.9387609643201504) IS FALSE) THEN NULL COLLATE RTRIM ELSE TYPEOF(DISTINCT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-904294753'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0 sz=1898564608'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-2.128904553E9)) BETWEEN (('')) AND ((0.14860975048337932))))AND((+ (x'')))))OR(('%wA!s_8Zj䊉4' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2002863631 1803187689 sz=-196132607'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-951755889 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.442862799E9) NOTNULL))|((('x%svhih') BETWEEN ('627644920') AND (0.7835817144728227)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('ZBﾴ'''))<((0.10550741689960508))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((UNLIKELY('-862977416'))AND(((1.803187689E9)=('-387753798')))))AND((('-974816260') NOT NULL))))OR(((('EbQa')) BETWEEN (('REJ 5針!#&')) AND ((x'431d'))))))AND(CASE 0.9433388977653141  WHEN x'4986' THEN '96804902' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-20952129 sz=-1121561898 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT NULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-550638309 -1478756795 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1902348127'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove(((0X5fe0dc05) NOT BETWEEN (x'') AND ('M_#(3)gy')), ((x'1cbd') IS FALSE), (((x'')) BETWEEN ((x'')) AND ((NULL))), ((x'')-('0.10550741689960508'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=121280157'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(x'6526' AS TEXT)))>=((0.9696274595460461))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (('pS躟Dto')LIKE(x''))  WHEN ABS(DISTINCT '1523970298') THEN 0.07900386554349959 WHEN HEX('v? 甄Da&') THEN CAST(NULL AS NUMERIC) WHEN ((0.1942207099065314) ISNULL) THEN ((0x7d4cc7e2)%('')) WHEN (('2080237356') IS FALSE) THEN (('-599339622') NOT NULL) WHEN CASE WHEN '1450441755' THEN '' WHEN '1214573357' THEN x'7c09' WHEN x'8e83' THEN NULL END THEN ABS(x'') ELSE (((-1026473529, 1.028986272E9, NULL)) BETWEEN ((-1.89287231E9, 0Xffffffff8e57fcdf, 0.8151502453839827)) AND (('1028986272', NULL, NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-512644479 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN '1866011648' THEN '' END  WHEN ((((0.0014895702163060243)AND(NULL)))OR(0.2270804144257893)) THEN 0xffffffff8542414b WHEN (+ (NULL)) THEN ((x'7886') NOT NULL) WHEN ((-1.059325255E9) NOT BETWEEN (NULL) AND ('^')) THEN NULL COLLATE NOCASE WHEN '-320228894' THEN CAST(0X1050f79e AS INTEGER) WHEN ((x'7464')-(x'')) THEN 0.6769560182627534 END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS BLOB) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-773120758 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1953762626 -1741024071 sz=629096178 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) NOT BETWEEN (0.9613221718953413) AND (0.6472470074448665)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1597793884'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (x'514a7e70' IN ()), NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(x'4897', 1884813194)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('X3')<(0.07900386554349959))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-948510510'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1453869846 sz=-905328914'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (ABS(0x6b7a75e9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-613368338'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-2128904553 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 1301250553 sz=-1113753179 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_SOURCE_ID()) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -86121611; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '890498601 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1406224551 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array((x'' IN ()), ((((((((((((x'')AND('-709275078')))OR(1104125406)))AND(NULL)))OR('.M뫱䇙kBᛤ')))AND(x'')))AND(',~o(ol'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX((NOT (''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=784857263 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '382849686 sz=-921469530'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=584257279 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1587472147 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2009141332'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-60624029'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') NOT NULL))OR(('1104125406' IN ()))))OR(CASE WHEN '-1972796141' THEN x'c758' WHEN x'0b08' THEN '' WHEN '' THEN '899088601' END)))OR((~ (0.9415261787677993)))))AND((NOT ('2105293182')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (-1.563408216E9) AND (-2.009141332E9)))<<(((x'')>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1595325556 1028986272 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.40779311040722277))<((NULL))))<<((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-524155676 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('-647654987')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN NULL THEN NULL ELSE 0x325dbaf1 END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=322421867 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT BETWEEN (1.91474754E8) AND (x'8be5')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=582737358'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '<&^\r␸j'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-647247226 1074961008 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT HEX('0.26791180408338067')); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=911458555 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1673517488'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(-177011723 AS INTEGER)  WHEN ((0.5219570971750724) NOT BETWEEN ('1564633870') AND ('')) THEN x'' COLLATE BINARY ELSE ((x'') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'0a3e'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('-619413518', 0Xffffffffdaa70cef, '0.41461164971502285')) BETWEEN (('', '-698095316', -216763139)) AND ((NULL, 0.08342309997351338, x''))))OR(((((NULL)AND('-904294753')))AND(0Xffffffffd91ab888)))))AND((('J*') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 6ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1922255258 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1661284013 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LENGTH(0.8420080362774353))&(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1089104078; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-185561443'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=120980844 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-514100623')==(x'')))&(((x'a6ae7968fb16')=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-709459460 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'9556e2f2' AS NUMERIC) THEN (((NULL)) BETWEEN ((0.14860975048337932)) AND ((x''))) WHEN (((('1079773014')OR(NULL)))AND(NULL)) THEN CASE WHEN '1104125406' THEN '-917533181' ELSE x'' END WHEN (((('.잻EdȜd1#')OR(NULL)))AND(x'31c1')) THEN NULL COLLATE BINARY WHEN ((NULL)>=('>W')) THEN ((((((((0.6986949679200448)OR('''i')))OR(NULL)))OR(1.104125406E9)))AND(0X480bed5c)) WHEN CASE 6.723986E7  WHEN NULL THEN 0.9676629658759253 ELSE '-1814758288' END THEN CASE '484683493'  WHEN NULL THEN 0x34fcd64c ELSE x'' END ELSE CASE WHEN NULL THEN NULL END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOTNULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1142355632 sz=1827757538 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-711490102 sz=1827757538'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1495987232 sz=-1343224172 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'0611')))OR(x'80f7'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1025560740 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.1793825021665758; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-51210980'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-207530478 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '868539244 -447259627 sz=-101240667'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1785891863 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1409527070 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=113370982 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1442862799'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-697273255'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=970318815 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (UNLIKELY(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1892872310 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('uWjo_8%-⡀' IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN x'3331' THEN 0.9639727137446908 WHEN -1093927462 THEN NULL WHEN x'' THEN 8.08156214E8 ELSE -549413659 END) BETWEEN (((x'') BETWEEN (-1801560645) AND (''))) AND (((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)*(x''))))>=(((- (-2000911731))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=2080237356'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-2017851678 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=1898564608 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1550994850 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1442137862 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-555826623 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-263077392 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1160600131 -1972796141 sz=614508843 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN (((x'c7b9a162') NOT BETWEEN (x'1812') AND (0.7375930381318334)), ((NULL)|(0.0522735185557498)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT (0.41461164971502285 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE)) NOT BETWEEN (((x'b4ff') IS TRUE)) AND (((x'')>>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1712769558 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -2.135550635E9  WHEN 0.18563957922644236 THEN '970318815' WHEN 'd.kF磟' THEN 1646785855 WHEN '2118419487' THEN 'j彩i' END) NOT BETWEEN ((('-2128904553')IS(x''))) AND (((NULL) ISNULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('582737358') BETWEEN ('') AND (x'')))OR(((NULL) NOT BETWEEN (NULL) AND (1.442410189E9)))))AND((((NULL))>((NULL))))))OR('1385777957' COLLATE BINARY)))OR(((x'') NOT BETWEEN (NULL) AND (0.5701998887282934)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1532179056'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x5f3c665c; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('')<>(NULL)) THEN ((x'') BETWEEN (0.38569331183096855) AND (0.5052321036912993)) ELSE ('-2108139537' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1231304018 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=904554827 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2113707177'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1074961008 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 0 sz=9223372036854775807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('')) BETWEEN ((x'')) AND ((0Xffffffff864a5e06)))  WHEN ((((x'')OR(x'')))AND(x'58b0bc32')) THEN (('A7^J母~y') BETWEEN ('1104125406') AND (0X737538d8)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-2017851678'))<((x''))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=485469009 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=347270006 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX(((2055728620) NOT NULL), (((NULL)) BETWEEN ((0.5492218906726813)) AND ((NULL))), (-1682991166 IN ()), x'' COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'080d' AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE NOCASE)OR(((-681233753)/('-1484626237')))))AND(((-1814256595)<<('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '287497271 sz=179233717 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN NULL THEN x'' ELSE ((((x'')AND(-31319674)))AND('G?a੯a')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-590069513 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-152709007 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-2052110135'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '845003505'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('6Dt0N%~YP' IN ()) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1581005287')LIKE('1803187689')))AND(((((NULL)AND(x'')))OR('-1295644910')))))OR((('786670754') BETWEEN ('') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('')AND(NULL)))AND(0x1)))AND('-1887525291')))OR('-479389257')))AND(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1632195344 sz=-883980441 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN -1.632195344E9 END)|(((('-1892872310', '', x'')) BETWEEN ((x'', x'b627', '-1370950759')) AND ((0x1ac30fb7, x'', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1240983969 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1141516352 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6154459514197174) BETWEEN (x'') AND (x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULLIF(DISTINCT 0.9302790373191332, 0xffffffffc1f7bbcf)))>=((CASE WHEN 0.09958584222982136 THEN x'' WHEN x'' THEN 0.2590253166092601 WHEN NULL THEN 0.57393736613665 ELSE NULL END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.44032286148535493 IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1758192872 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (NULL) AND (NULL)) IN ((NOT ('0.2270804144257893')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR(NULL)))AND(6.18535433E8))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('941348743')) BETWEEN ((((NULL)LIKE(x'')))) AND ((CASE ',~o(ol'  WHEN '''{⻩^4jH3' THEN NULL END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=43213654 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1783957214 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1279688236 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-626586385 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')<(x'bde9')))OR(x'96fb')))OR(CASE WHEN NULL THEN NULL END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1028387673 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=145586916 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1522455145 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOT BETWEEN ('1343542853') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 -1641692356 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE ''  WHEN 0.8801425687073006 THEN -2.128904553E9 END)OR(((-613016443) NOT BETWEEN (x'') AND (0.9711483113305579)))))AND(CASE ''  WHEN 'a%{*\rAW~' THEN '1377898940' ELSE 0Xffffffff80b61555 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'C.'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1612177638'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((rtreenode(-1.582132761E9, 0.7653771623060066))>=(((x'')<(0.3509514727823023)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')LIKE(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1239301372 sz=808156214 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'8d07')AND('1缼')))AND(x'5da1')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1875200913'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1074554065' IN ())))>=((COALESCE(0.02417849357275359, NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1646769655 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1122106473 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1420662064 sz=874786321 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND('\ro'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 'j )GATQL' ELSE x'907d' END)OR((x'' IN (0.9741196390865955)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-255366389 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((COALESCE(x'c404', NULL)))<((CAST(x'35f0' AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1801560645 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('mɏK') ISNULL))OR(0.8351150342340272 COLLATE NOCASE)))OR((((NULL, '681695994', ''))>=((NULL, -456071275, x'3b8d'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.9302790373191332)==(0.774463059728915)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((331935375))=((x''))))IS NOT(((2008879266)>>('mOyz')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))<=(((0.9716992923970497)<('V%j')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(DISTINCT 'Mem}'))&((((1.04717066E9)) NOT BETWEEN ((0.47380778286166103)) AND (('V? 甄DA&'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1892859632 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-345770835, x'', NULL)) BETWEEN ((NULL, '-550638309', 0.8691611135194135)) AND ((0xffffffff994737df, x'63ef', NULL)))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((-9223372036854775808) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=219125946 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-2140218345 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1850951268'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('1126283507')OR(x'a307')))OR(x'')))AND(1028986272)))OR(0Xffffffff98294a0d)))OR('1047170660')))AND(x'21a5'))) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=1636488770 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1315085536 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-235905562 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '200352527 sz=1368613305 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2032097436 -626586385 sz=-2128904553 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2121210332 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.18602075601285917) BETWEEN (0xb69ac42) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1660661144 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1252290774 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=838718292 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (0.9887226249089686)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL))>((305831631))) THEN (('-305486333')<(1920869037)) WHEN CAST('튰uH8DV' AS NUMERIC) THEN (((NULL))<=((x''))) WHEN ((0.6721570614122383)GLOB(0.05174996908676288)) THEN ((((0.9431783076546172)OR(x'')))AND(x'67f9')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=301904336 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('{V')IS NOT(0.2961270690356599))))<>(((('Z腚') NOT BETWEEN (NULL) AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 0 sz=1490688665 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=587789677 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.3966136093789355 IN ()))AND(CASE '99764641'  WHEN NULL THEN 0.2184663868065182 ELSE 0.14881973540511573 END)))AND(x'78a0' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN MIN('0', 'a7^j母~y') THEN ((x'')>>('993790517')) WHEN ((x'')>(NULL)) THEN ((0.12713776800007615)GLOB(NULL)) WHEN (('')/(x'6e69')) THEN (- ('975608524')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT ((NULL) NOT BETWEEN ('J*N)u..J8') AND ('1719724344')), CAST(NULL AS BLOB), ((0xffffffff89ee8140)-(0.574595755333219)), TYPEOF(DISTINCT x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-848431725 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('ii.'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-244976492 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((0xffffffffce0cbb5e) BETWEEN (NULL) AND (1e500)), (('8n*于E%ꦦO')>>(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.9527829414144935 THEN -736783151 ELSE NULL END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('^X(''sDG䖏q)i')))-(CASE 'f.'  WHEN NULL THEN -386843561 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1584337498 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1515159741 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-367414125 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1474348867 -1132217241 sz=-86558022 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.17868480001407927; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1174884669 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=302204739 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1286420724 sz=-1474605378'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1814758288 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))/(((((((((0.11758584255261717)AND(x'')))AND(' kjMMV29')))AND('1597793884')))OR(0.13000850421568788)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1784187992' COLLATE RTRIM)>>(CASE x''  WHEN x'' THEN '-1121561898' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=40439678 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)<=('')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1902464370'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((((NULL))<=((0.38569331183096855)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '994553419 sz=565769894 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL))<=(('0.047493130776486425'))))AND((0.9242474318598864 IN ()))))OR(((NULL) ISNULL))))AND(((NULL) NOT BETWEEN (NULL) AND (x'')))))OR(CAST(-9.926904E8 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8703894595225872; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1532159768 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1803187689 1047170660 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=498272593 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1423865516' AS REAL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((x'')) AND ((0X3cdf4eb2))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 1104125406 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=845003505'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=382935006'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8687884209169873 COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1871293592'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0.7143304069026455 AS NUMERIC) THEN '769310' COLLATE NOCASE ELSE x'' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 0 sz=688351521 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1676954881 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffcbed4174)<=(-6.25483272E8))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=1005894038 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1437294317'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1784187992'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.02015110118199992 AS INTEGER)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1977754225)AND(0.11019371407525369)))OR('-235905562')))<=((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('Wmzz' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1559401883')%(1252290774)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1385777957 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1259914100 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ']{b?|^OL'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1611238570'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)&(0.3492863935864774)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-248516489'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1121561898'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', '1237729919', 0xffffffffe8ba5bdb, x'', '-1532159768'))>=((x'', 0.09880376390645063, x'd8c5', 0.08055281038492768, '0.6986949679200448')))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1142553330'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=598855779 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS INTEGER)  WHEN CASE x''  WHEN 'Vy' THEN 0Xffffffffd0554859 WHEN NULL THEN -2.143631013E9 WHEN 0.9415261787677993 THEN '-140839468' END THEN ((NULL) NOT BETWEEN (NULL) AND (1530225588)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1811039020 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2079873741'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0.6881681373305417))<(('~^'))))AND(((NULL)/('4\RE-Rhi')))))OR(CASE WHEN '-1784187992' THEN 0Xffffffffb204d454 END)))OR('X3' COLLATE NOCASE)))AND(CASE NULL  WHEN x'' THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'63d5') BETWEEN (NULL) AND (x'')) THEN CASE '1836227831'  WHEN 0Xffffffff80b61555 THEN x'' END ELSE ((0.30593099894525577)GLOB(x'602c1f06')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=2080237356 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=494535380 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 sz=1104125406 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2115037437'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=658787337'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')-(0.7353774090561469)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2009141332'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1744171300 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1981167140 sz=1076685796 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-647654987'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1624687506 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('1368588660' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-307492961 sz=209361937 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=769797423 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=258441094 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1581005287 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 1 sz=-1715252420'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN NULL THEN 0.21332134823877746 ELSE NULL END) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=559283571 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-2040993917') NOT NULL)))<=((((0.8801425687073006) IS FALSE)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(x'' COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('-1308306348', '1145674276', -1892872310, NULL, NULL))>((0.0522735185557498, NULL, 0.06408650548517358, 0.6220768134626795, '-904294753'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=509424333 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('V-Infinity಍ _࿱_<{b') ISNULL) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1932371477 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1505926937 sz=-1784187992'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.7441414348149781) NOT BETWEEN (x'') AND (0.7029156489971596)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, NULL, '474598655')) BETWEEN ((0.8482477787634845, x'94824219', 0.07089157590429018)) AND ((x'', '557241182', NULL))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 -2135550635 1385777957 sz=-625483272'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT CASE 0.35775474928084605  WHEN 0.4962790308322823 THEN '%' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-2043377168 sz=-147405006 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '0.9011682262086683'  WHEN 'gO' THEN '䛶]_' ELSE 0x522111bc END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=218872843 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 sz=-196575428 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-2135558107 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-387753798 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1653752550 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((SQLITE_COMPILEOPTION_USED(1.81103902E9))OR((NOT ('-670757747')))))OR(((((191474754)AND(NULL)))OR(NULL)))))AND((x'' IN ()))))OR((NULL IN (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1547776963 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('845003505' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.9627998977594922 COLLATE NOCASE  WHEN ((((NULL)OR(0X3cd60a18)))OR('-1308306348')) THEN SQLITE_VERSION() ELSE json_patch(',둕Ù', x'') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=2065223251 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'l5<'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1407014734'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1397809223 sz=-1113753179 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=725722353 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (9.04554827E8))) BETWEEN ((- ('-1050278560'))) AND (x'af06')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('UW' AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.47963799247288097) NOT NULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-640125406 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1252290774 sz=-252555777 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-387606216'; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-2095772298'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1597793884 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=451983532 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((' sy')AND(x''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 sz=2142552713 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME TO t2; -- 1ms;
PRAGMA threads; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c0)=(NULL) WHERE ((((((((((((((t1.c0) IS FALSE))AND(0.10174530362920053)))AND(CAST(t1.c0 AS NUMERIC))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN NULL ELSE t1.c0 END)))AND(((t1.c0)>>(t1.c0)))))AND(((t1.c0)|(t1.c0)))))OR(load_extension(t1.c0, t1.c0))); -- 0ms;
UPDATE OR REPLACE t2 SET c1=0x6cf15de2; -- 0ms;
REINDEX; -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c0, c0)=(x'', 'L\r') WHERE ((((t1.c0) NOT BETWEEN (x'') AND (t1.c0))) ISNULL); -- 0ms;
UPDATE t1 SET (c0)=('揞3') WHERE LIKELIHOOD(-1.582132761E9, 0.6316174039250191); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(NULL); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(NULL) WHERE t1.c0; -- 0ms;
COMMIT; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t2 SET c2='b\n'; -- 0ms;
UPDATE OR IGNORE t2 SET c0=NULL, c1=NULL, c2=x'' WHERE (((((t2.c2))<((0.7766946742487633))))OR((t2.c1 IN ('899088601', t2.c2)))); -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1, order=DESC); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 855714393); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40004'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 147173868); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 788017356); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE t2 SET c1=1.902348127E9 WHERE CASE WHEN ((t2.c0) NOTNULL) THEN CASE WHEN t2.c1 THEN t2.c1 END WHEN (('260946673')<>(t2.c0)) THEN COALESCE(t2.c1, t2.c1) WHEN (+ (t2.c1)) THEN '627644920' ELSE ((((t2.c2)OR(t2.c2)))AND(t2.c1)) END; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM t0 WHERE x''; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
CREATE UNIQUE INDEX i59 ON t2((+ (((c1)|(c1)))) DESC,((CASE c2  WHEN x'afed' THEN x'' END)%(TIME(c1, c1, c1))) COLLATE RTRIM ASC,(NOT (x'2077')) DESC) WHERE (((IFNULL(c2, c2), TYPEOF(c2), ((((((((c2)AND(NULL)))AND(x'')))OR(c0)))OR(c1))))<=((c0 COLLATE BINARY, ((c0) NOT BETWEEN (c2) AND (c0)), JULIANDAY('1497859763', c0, c1, c1, c1)))); -- 0ms;
UPDATE OR IGNORE t2 SET c2=NULL WHERE t2.c0; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 518825893); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1489692349); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES ('-1784187992', '904554827'), (0.9394859956380253, '''mUI	/wM*'), ('H8/3Q筂aH', '-392025698'); -- 0ms;
UPDATE OR IGNORE t2 SET c0='-147632516' WHERE t2.c1; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0xffffffffe6f897fb; -- 0ms;
PRAGMA secure_delete = FAST; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE t0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET c1=x''; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE t0 SET c0='', c0=0X4e629ce0; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL WHERE (('%') BETWEEN ((('')<=(vt0.c0))) AND (vt0.c0 COLLATE NOCASE)); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58471'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
UPDATE OR IGNORE t2 SET c0='2094475834' WHERE '808156214'; -- 0ms;
CREATE INDEX IF NOT EXISTS i64 ON t2((((((c0)) NOT BETWEEN ((c1)) AND ((c1))))<(((((c2)OR(c2)))OR(c2)))),json_array_length(((c0) IS FALSE), c2 COLLATE NOCASE) COLLATE BINARY,(((((c2))>=((c2))))-(c2 COLLATE RTRIM)) COLLATE NOCASE) WHERE (((c0)) NOT BETWEEN ((((c2)<>(c1)))) AND (((((c0, c0, c1))!=((c1, c1, c1)))))); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.9613221718953413); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.652709623225581); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2096391739); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1892872310,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '8907'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX i59; -- 0ms;
REINDEX; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET c1=x''; -- 1ms;
INSERT OR IGNORE INTO t2(c0, c1) VALUES (0.4539775476770732, NULL); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('f7_'); -- 0ms;
REINDEX NOCASE; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '3059'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2118861227,10');\n; -- 1ms;
PRAGMA main.application_id; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE t2 SET c1=NULL WHERE (json_array_length(t2.c2) IN ()); -- 0ms;
ANALYZE t0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=537249198,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 522948894);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
ANALYZE vt0; -- 0ms;
CREATE INDEX i18 ON t0((((c0)) NOT BETWEEN (((c0 IN ()))) AND ((CAST('6dt0n%~yp' AS NUMERIC)))) ASC) WHERE c0; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
ANALYZE i64; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
ALTER TABLE t2 ADD COLUMN c6 INTEGER; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 545440654); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE t2 SET c6=NULL WHERE ((((((t2.c2)GLOB(t2.c1)))OR(((t2.c0) IS FALSE))))OR(((t2.c6)=(t2.c1)))); -- 0ms;
PRAGMA temp.threads = -6945431045674039212; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) ORDER BY '2000533803' DESC, ((('-1507179008', CAST(t0.c0 AS NUMERIC), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))>(((((t0.c0, t0.c0, t0.c0))<=(('n{?7', t0.c0, t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (x'57bae7c1')), CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID()) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY '2000533803' DESC, ((('-1507179008', CAST(t0.c0 AS NUMERIC), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))>(((((t0.c0, t0.c0, t0.c0))<=(('n{?7', t0.c0, t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (x'57bae7c1')), CAST(t0.c0 AS NUMERIC)))));
SELECT ALL * FROM t0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) ORDER BY '2000533803' DESC, ((('-1507179008', CAST(t0.c0 AS NUMERIC), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))>(((((t0.c0, t0.c0, t0.c0))<=(('n{?7', t0.c0, t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (x'57bae7c1')), CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID()) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY '2000533803' DESC, ((('-1507179008', CAST(t0.c0 AS NUMERIC), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))>(((((t0.c0, t0.c0, t0.c0))<=(('n{?7', t0.c0, t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (x'57bae7c1')), CAST(t0.c0 AS NUMERIC)))));
SELECT ALL * FROM t0 WHERE (((SQLITE_SOURCE_ID()) ISNULL)) ORDER BY '2000533803' DESC, ((('-1507179008', CAST(t0.c0 AS NUMERIC), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))>(((((t0.c0, t0.c0, t0.c0))<=(('n{?7', t0.c0, t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (x'57bae7c1')), CAST(t0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t2, vt0 LEFT OUTER JOIN t0 ON CAST(((t2.c1) NOTNULL) AS BLOB) WHERE (((CAST(t2.c2 AS NUMERIC)) NOT BETWEEN (t2.c2 COLLATE BINARY) AND (CAST(t2.c2 AS TEXT)))) ORDER BY CAST(((((t2.c1)OR(t2.c1)))OR(t2.c6)) AS REAL) ASC, ((((((t2.c6)>(t0.c0)))AND(CASE t2.c0  WHEN t2.c6 THEN vt0.c1 END)))AND(t2.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t2.c2 AS NUMERIC)) NOT BETWEEN (t2.c2 COLLATE BINARY) AND (CAST(t2.c2 AS TEXT)))) IS TRUE)  as count FROM t2, vt0 LEFT OUTER JOIN t0 ON CAST(((t2.c1) NOTNULL) AS BLOB) ORDER BY CAST(((((t2.c1)OR(t2.c1)))OR(t2.c6)) AS REAL) ASC, ((((((t2.c6)>(t0.c0)))AND(CASE t2.c0  WHEN t2.c6 THEN vt0.c1 END)))AND(t2.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, vt0 LEFT OUTER JOIN t0 ON CAST(((t2.c1) NOTNULL) AS BLOB) WHERE (((CAST(t2.c2 AS NUMERIC)) NOT BETWEEN (t2.c2 COLLATE BINARY) AND (CAST(t2.c2 AS TEXT)))) ORDER BY CAST(((((t2.c1)OR(t2.c1)))OR(t2.c6)) AS REAL) ASC, ((((((t2.c6)>(t0.c0)))AND(CASE t2.c0  WHEN t2.c6 THEN vt0.c1 END)))AND(t2.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t2.c2 AS NUMERIC)) NOT BETWEEN (t2.c2 COLLATE BINARY) AND (CAST(t2.c2 AS TEXT)))) IS TRUE)  as count FROM t2, vt0 LEFT OUTER JOIN t0 ON CAST(((t2.c1) NOTNULL) AS BLOB) ORDER BY CAST(((((t2.c1)OR(t2.c1)))OR(t2.c6)) AS REAL) ASC, ((((((t2.c6)>(t0.c0)))AND(CASE t2.c0  WHEN t2.c6 THEN vt0.c1 END)))AND(t2.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, vt0 LEFT OUTER JOIN t0 ON CAST(((t2.c1) NOTNULL) AS BLOB) WHERE (((CAST(t2.c2 AS NUMERIC)) NOT BETWEEN (t2.c2 COLLATE BINARY) AND (CAST(t2.c2 AS TEXT)))) ORDER BY CAST(((((t2.c1)OR(t2.c1)))OR(t2.c6)) AS REAL) ASC, ((((((t2.c6)>(t0.c0)))AND(CASE t2.c0  WHEN t2.c6 THEN vt0.c1 END)))AND(t2.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((0.6324239675128029))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((0.6324239675128029)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((0.6324239675128029))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((0.6324239675128029)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((0.6324239675128029))));
SELECT ALL * FROM t0, vt0, t2 WHERE (t2.c1) ORDER BY (((+ (t2.c0)))%(((vt0.c0)>>(vt0.c1)))), '845003505' DESC  NULLS LAST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((t2.c1) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY (((+ (t2.c0)))%(((vt0.c0)>>(vt0.c1)))), '845003505' DESC  NULLS LAST, NULL DESC);
SELECT ALL * FROM t0, vt0, t2 WHERE (t2.c1) ORDER BY (((+ (t2.c0)))%(((vt0.c0)>>(vt0.c1)))), '845003505' DESC  NULLS LAST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((t2.c1) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY (((+ (t2.c0)))%(((vt0.c0)>>(vt0.c1)))), '845003505' DESC  NULLS LAST, NULL DESC);
SELECT ALL * FROM t0, vt0, t2 WHERE (t2.c1) ORDER BY (((+ (t2.c0)))%(((vt0.c0)>>(vt0.c1)))), '845003505' DESC  NULLS LAST, NULL DESC;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c0)GLOB(vt0.c0)) END) ORDER BY (((('0.7196375631735384')AND((vt0.c1 IN (vt0.c1)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, HEX(DISTINCT 0x38b24b68)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c0)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((('0.7196375631735384')AND((vt0.c1 IN (vt0.c1)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, HEX(DISTINCT 0x38b24b68)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c0)GLOB(vt0.c0)) END) ORDER BY (((('0.7196375631735384')AND((vt0.c1 IN (vt0.c1)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, HEX(DISTINCT 0x38b24b68)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c0)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((('0.7196375631735384')AND((vt0.c1 IN (vt0.c1)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, HEX(DISTINCT 0x38b24b68)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c0)GLOB(vt0.c0)) END) ORDER BY (((('0.7196375631735384')AND((vt0.c1 IN (vt0.c1)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST, HEX(DISTINCT 0x38b24b68)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t2, t0 NOT INDEXED WHERE (((((t2.c0) NOT NULL)) BETWEEN (CAST(t0.c0 AS REAL)) AND (((((((((((((t2.c1)AND(t0.c0)))OR(t0.c0)))AND(t2.c0)))OR(t2.c6)))AND(t2.c6)))OR(t2.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t2.c0) NOT NULL)) BETWEEN (CAST(t0.c0 AS REAL)) AND (((((((((((((t2.c1)AND(t0.c0)))OR(t0.c0)))AND(t2.c0)))OR(t2.c6)))AND(t2.c6)))OR(t2.c2))))) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 NOT INDEXED WHERE (((((t2.c0) NOT NULL)) BETWEEN (CAST(t0.c0 AS REAL)) AND (((((((((((((t2.c1)AND(t0.c0)))OR(t0.c0)))AND(t2.c0)))OR(t2.c6)))AND(t2.c6)))OR(t2.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t2.c0) NOT NULL)) BETWEEN (CAST(t0.c0 AS REAL)) AND (((((((((((((t2.c1)AND(t0.c0)))OR(t0.c0)))AND(t2.c0)))OR(t2.c6)))AND(t2.c6)))OR(t2.c2))))) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 NOT INDEXED WHERE (((((t2.c0) NOT NULL)) BETWEEN (CAST(t0.c0 AS REAL)) AND (((((((((((((t2.c1)AND(t0.c0)))OR(t0.c0)))AND(t2.c0)))OR(t2.c6)))AND(t2.c6)))OR(t2.c2)))));
SELECT * FROM t2, vt0 INDEXED BY i18 WHERE (vt0.c0) ORDER BY CASE WHEN ((t2.c6) NOT NULL) THEN ((vt0.c0)=(vt0.c0)) END DESC, ((((((((CAST(t2.c1 AS BLOB))OR(((t2.c0)%(t2.c0)))))AND(x'')))OR(((t2.c1)AND(vt0.c1)))))OR(((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c1)))) DESC  NULLS FIRST, CAST(TYPEOF(vt0.c1) AS TEXT);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t2, vt0 INDEXED BY i18 ORDER BY CASE WHEN ((t2.c6) NOT NULL) THEN ((vt0.c0)==(vt0.c0)) END DESC, ((((((((CAST(t2.c1 AS BLOB))OR(((t2.c0)%(t2.c0)))))AND(x'')))OR(((t2.c1)AND(vt0.c1)))))OR(((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c1)))) DESC  NULLS FIRST, CAST(TYPEOF(vt0.c1) AS TEXT));
SELECT * FROM t2, vt0 INDEXED BY i18 WHERE (vt0.c0) ORDER BY CASE WHEN ((t2.c6) NOT NULL) THEN ((vt0.c0)=(vt0.c0)) END DESC, ((((((((CAST(t2.c1 AS BLOB))OR(((t2.c0)%(t2.c0)))))AND(x'')))OR(((t2.c1)AND(vt0.c1)))))OR(((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c1)))) DESC  NULLS FIRST, CAST(TYPEOF(vt0.c1) AS TEXT);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t2, vt0 INDEXED BY i18 ORDER BY CASE WHEN ((t2.c6) NOT NULL) THEN ((vt0.c0)==(vt0.c0)) END DESC, ((((((((CAST(t2.c1 AS BLOB))OR(((t2.c0)%(t2.c0)))))AND(x'')))OR(((t2.c1)AND(vt0.c1)))))OR(((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c1)))) DESC  NULLS FIRST, CAST(TYPEOF(vt0.c1) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY vt0.c1;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t2 WHERE (x'') ORDER BY (CASE t2.c2  WHEN t2.c6 THEN t2.c0 ELSE t2.c1 END IN ()) ASC  NULLS LAST, (((- (t2.c2))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 NATURAL JOIN t2 ORDER BY (CASE t2.c2  WHEN t2.c6 THEN t2.c0 ELSE t2.c1 END IN ()) ASC  NULLS LAST, (((- (t2.c2))) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t2 WHERE (x'') ORDER BY (CASE t2.c2  WHEN t2.c6 THEN t2.c0 ELSE t2.c1 END IN ()) ASC  NULLS LAST, (((- (t2.c2))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 NATURAL JOIN t2 ORDER BY (CASE t2.c2  WHEN t2.c6 THEN t2.c0 ELSE t2.c1 END IN ()) ASC  NULLS LAST, (((- (t2.c2))) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t2 WHERE (x'') ORDER BY (CASE t2.c2  WHEN t2.c6 THEN t2.c0 ELSE t2.c1 END IN ()) ASC  NULLS LAST, (((- (t2.c2))) NOTNULL) DESC;
SELECT * FROM t0, t2, vt0 WHERE (CASE WHEN CASE t2.c6  WHEN t2.c0 THEN vt0.c0 ELSE vt0.c0 END THEN x'' COLLATE RTRIM END) ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(t2.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t2.c6  WHEN t2.c0 THEN vt0.c0 ELSE vt0.c0 END THEN x'' COLLATE RTRIM END) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(t2.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM t0, t2, vt0 WHERE (CASE WHEN CASE t2.c6  WHEN t2.c0 THEN vt0.c0 ELSE vt0.c0 END THEN x'' COLLATE RTRIM END) ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(t2.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE t2.c6  WHEN t2.c0 THEN vt0.c0 ELSE vt0.c0 END THEN x'' COLLATE RTRIM END) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(t2.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM t0, t2, vt0 WHERE (CASE WHEN CASE t2.c6  WHEN t2.c0 THEN vt0.c0 ELSE vt0.c0 END THEN x'' COLLATE RTRIM END) ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(t2.c0)) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t2 WHERE (((((((t2.c6)OR(t2.c2)))OR(t2.c1))) NOTNULL)) ORDER BY ((((((t2.c6)OR(t2.c6)))OR(t2.c1)))%(((t2.c1)GLOB(t2.c0)))) ASC, ((CAST(t2.c1 AS INTEGER))LIKE(((t0.c0) NOT NULL)))  NULLS LAST, ((((t2.c1) BETWEEN (t2.c1) AND (t2.c0)))<>(LIKELY(t2.c6)));
SELECT SUM(count) FROM (SELECT ((((((((t2.c6)OR(t2.c2)))OR(t2.c1))) NOTNULL)) IS TRUE)  as count FROM t0, t2 ORDER BY ((((((t2.c6)OR(t2.c6)))OR(t2.c1)))%(((t2.c1)GLOB(t2.c0)))) ASC, ((CAST(t2.c1 AS INTEGER))LIKE(((t0.c0) NOT NULL)))  NULLS LAST, ((((t2.c1) BETWEEN (t2.c1) AND (t2.c0)))!=(LIKELY(t2.c6))));
SELECT COUNT(*) FROM t0, t2 WHERE (((((((t2.c6)OR(t2.c2)))OR(t2.c1))) NOTNULL)) ORDER BY ((((((t2.c6)OR(t2.c6)))OR(t2.c1)))%(((t2.c1)GLOB(t2.c0)))) ASC, ((CAST(t2.c1 AS INTEGER))LIKE(((t0.c0) NOT NULL)))  NULLS LAST, ((((t2.c1) BETWEEN (t2.c1) AND (t2.c0)))<>(LIKELY(t2.c6)));
SELECT SUM(count) FROM (SELECT ((((((((t2.c6)OR(t2.c2)))OR(t2.c1))) NOTNULL)) IS TRUE)  as count FROM t0, t2 ORDER BY ((((((t2.c6)OR(t2.c6)))OR(t2.c1)))%(((t2.c1)GLOB(t2.c0)))) ASC, ((CAST(t2.c1 AS INTEGER))LIKE(((t0.c0) NOT NULL)))  NULLS LAST, ((((t2.c1) BETWEEN (t2.c1) AND (t2.c0)))!=(LIKELY(t2.c6))));
SELECT COUNT(*) FROM t0, t2 WHERE (((((((t2.c6)OR(t2.c2)))OR(t2.c1))) NOTNULL)) ORDER BY ((((((t2.c6)OR(t2.c6)))OR(t2.c1)))%(((t2.c1)GLOB(t2.c0)))) ASC, ((CAST(t2.c1 AS INTEGER))LIKE(((t0.c0) NOT NULL)))  NULLS LAST, ((((t2.c1) BETWEEN (t2.c1) AND (t2.c0)))<>(LIKELY(t2.c6)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c0)IS(t0.c0))))>((((vt0.c0)<>(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)IS(t0.c0))))>((((vt0.c0)<>(t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c0)IS(t0.c0))))>((((vt0.c0)<>(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)IS(t0.c0))))>((((vt0.c0)<>(t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c0)IS(t0.c0))))>((((vt0.c0)<>(t0.c0))))));
SELECT ALL * FROM t0, vt0 WHERE (((((((((((vt0.c0)/(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND((((t0.c0))<=((vt0.c1))))))OR((((x'', vt0.c1, vt0.c0))<>((t0.c0, t0.c0, NULL))))))AND(((((t0.c0)OR(vt0.c1)))AND(t0.c0))))) ORDER BY (~ (((vt0.c1)-(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)/(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND((((t0.c0))<=((vt0.c1))))))OR((((x'', vt0.c1, vt0.c0))!=((t0.c0, t0.c0, NULL))))))AND(((((t0.c0)OR(vt0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (((vt0.c1)-(vt0.c0)))) DESC);
SELECT ALL * FROM t0, vt0 WHERE (((((((((((vt0.c0)/(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND((((t0.c0))<=((vt0.c1))))))OR((((x'', vt0.c1, vt0.c0))<>((t0.c0, t0.c0, NULL))))))AND(((((t0.c0)OR(vt0.c1)))AND(t0.c0))))) ORDER BY (~ (((vt0.c1)-(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)/(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND((((t0.c0))<=((vt0.c1))))))OR((((x'', vt0.c1, vt0.c0))!=((t0.c0, t0.c0, NULL))))))AND(((((t0.c0)OR(vt0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (((vt0.c1)-(vt0.c0)))) DESC);
SELECT ALL * FROM t0, vt0 WHERE (((((((((((vt0.c0)/(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND((((t0.c0))<=((vt0.c1))))))OR((((x'', vt0.c1, vt0.c0))<>((t0.c0, t0.c0, NULL))))))AND(((((t0.c0)OR(vt0.c1)))AND(t0.c0))))) ORDER BY (~ (((vt0.c1)-(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0, t2, vt0 WHERE ((- (((vt0.c1) BETWEEN (vt0.c0) AND (t2.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1) BETWEEN (vt0.c0) AND (t2.c6))))) IS TRUE)  as count FROM t0, t2, vt0);
SELECT ALL COUNT(*) FROM t0, t2, vt0 WHERE ((- (((vt0.c1) BETWEEN (vt0.c0) AND (t2.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1) BETWEEN (vt0.c0) AND (t2.c6))))) IS TRUE)  as count FROM t0, t2, vt0);
SELECT ALL COUNT(*) FROM t0, t2, vt0 WHERE ((- (((vt0.c1) BETWEEN (vt0.c0) AND (t2.c6)))));
SELECT ALL * FROM t2 WHERE (CASE WHEN (((t2.c0))<((t2.c0))) THEN ((t2.c6)IS NOT(t2.c6)) END) ORDER BY t2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t2.c0))<((t2.c0))) THEN ((t2.c6)IS NOT(t2.c6)) END) IS TRUE)  as count FROM t2 ORDER BY t2.c0  NULLS FIRST);
SELECT ALL * FROM t2 WHERE (CASE WHEN (((t2.c0))<((t2.c0))) THEN ((t2.c6)IS NOT(t2.c6)) END) ORDER BY t2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t2.c0))<((t2.c0))) THEN ((t2.c6)IS NOT(t2.c6)) END) IS TRUE)  as count FROM t2 ORDER BY t2.c0  NULLS FIRST);
SELECT ALL * FROM t2 WHERE (CASE WHEN (((t2.c0))<((t2.c0))) THEN ((t2.c6)IS NOT(t2.c6)) END) ORDER BY t2.c0  NULLS FIRST;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN t2 ON CASE WHEN t2.c1 THEN t2.c0 COLLATE NOCASE END WHERE (((((t0.c0) BETWEEN (NULL) AND (t2.c2)))%(((t2.c0)/(t0.c0))))) ORDER BY (((~ (t2.c6))) NOT BETWEEN (((t2.c6)IS NOT(t2.c2))) AND ((+ (t2.c2)))) DESC, ((((((t2.c0)+(t2.c2)))OR(LIKELY(t2.c1))))AND(t2.c2))  NULLS LAST, ((0.9666409274310043)>=(CASE x''  WHEN t0.c0 THEN t2.c6 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (NULL) AND (t2.c2)))%(((t2.c0)/(t0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON CASE WHEN t2.c1 THEN t2.c0 COLLATE NOCASE END ORDER BY (((~ (t2.c6))) NOT BETWEEN (((t2.c6)IS NOT(t2.c2))) AND ((+ (t2.c2)))) DESC, ((((((t2.c0)+(t2.c2)))OR(LIKELY(t2.c1))))AND(t2.c2))  NULLS LAST, ((0.9666409274310043)>=(CASE x''  WHEN t0.c0 THEN t2.c6 END)) DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN t2 ON CASE WHEN t2.c1 THEN t2.c0 COLLATE NOCASE END WHERE (((((t0.c0) BETWEEN (NULL) AND (t2.c2)))%(((t2.c0)/(t0.c0))))) ORDER BY (((~ (t2.c6))) NOT BETWEEN (((t2.c6)IS NOT(t2.c2))) AND ((+ (t2.c2)))) DESC, ((((((t2.c0)+(t2.c2)))OR(LIKELY(t2.c1))))AND(t2.c2))  NULLS LAST, ((0.9666409274310043)>=(CASE x''  WHEN t0.c0 THEN t2.c6 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (NULL) AND (t2.c2)))%(((t2.c0)/(t0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON CASE WHEN t2.c1 THEN t2.c0 COLLATE NOCASE END ORDER BY (((~ (t2.c6))) NOT BETWEEN (((t2.c6)IS NOT(t2.c2))) AND ((+ (t2.c2)))) DESC, ((((((t2.c0)+(t2.c2)))OR(LIKELY(t2.c1))))AND(t2.c2))  NULLS LAST, ((0.9666409274310043)>=(CASE x''  WHEN t0.c0 THEN t2.c6 END)) DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN t2 ON CASE WHEN t2.c1 THEN t2.c0 COLLATE NOCASE END WHERE (((((t0.c0) BETWEEN (NULL) AND (t2.c2)))%(((t2.c0)/(t0.c0))))) ORDER BY (((~ (t2.c6))) NOT BETWEEN (((t2.c6)IS NOT(t2.c2))) AND ((+ (t2.c2)))) DESC, ((((((t2.c0)+(t2.c2)))OR(LIKELY(t2.c1))))AND(t2.c2))  NULLS LAST, ((0.9666409274310043)>=(CASE x''  WHEN t0.c0 THEN t2.c6 END)) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, '808156214')) NOT BETWEEN ((vt0.c0, NULL, NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))))>(((vt0.c0)OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, '808156214')) NOT BETWEEN ((vt0.c0, NULL, NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))))>(((vt0.c0)OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, '808156214')) NOT BETWEEN ((vt0.c0, NULL, NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))))>(((vt0.c0)OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, '808156214')) NOT BETWEEN ((vt0.c0, NULL, NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))))>(((vt0.c0)OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, '808156214')) NOT BETWEEN ((vt0.c0, NULL, NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))))>(((vt0.c0)OR(vt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)!=(t0.c0))) ISNULL)) ORDER BY ((((t0.c0)||(t0.c0))) NOT BETWEEN ((NOT (t0.c0))) AND (t0.c0))  NULLS LAST, ((((((((((t0.c0)AND(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))<<(((t0.c0)AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<>(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)||(t0.c0))) NOT BETWEEN ((NOT (t0.c0))) AND (t0.c0))  NULLS LAST, ((((((((((t0.c0)AND(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))<<(((t0.c0)AND(t0.c0)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)!=(t0.c0))) ISNULL)) ORDER BY ((((t0.c0)||(t0.c0))) NOT BETWEEN ((NOT (t0.c0))) AND (t0.c0))  NULLS LAST, ((((((((((t0.c0)AND(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))<<(((t0.c0)AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<>(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)||(t0.c0))) NOT BETWEEN ((NOT (t0.c0))) AND (t0.c0))  NULLS LAST, ((((((((((t0.c0)AND(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))<<(((t0.c0)AND(t0.c0)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)!=(t0.c0))) ISNULL)) ORDER BY ((((t0.c0)||(t0.c0))) NOT BETWEEN ((NOT (t0.c0))) AND (t0.c0))  NULLS LAST, ((((((((((t0.c0)AND(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))<<(((t0.c0)AND(t0.c0)))) DESC;
SELECT * FROM t2 NATURAL JOIN t0 WHERE ((((t2.c6 IN ())) NOT BETWEEN ((t2.c2 IN ())) AND (CASE t0.c0  WHEN t2.c2 THEN t0.c0 WHEN t2.c0 THEN '438401472' WHEN t2.c2 THEN t2.c0 ELSE t2.c2 END)));
SELECT SUM(count) FROM (SELECT (((((t2.c6 IN ())) NOT BETWEEN ((t2.c2 IN ())) AND (CASE t0.c0  WHEN t2.c2 THEN t0.c0 WHEN t2.c0 THEN '438401472' WHEN t2.c2 THEN t2.c0 ELSE t2.c2 END))) IS TRUE)  as count FROM t2 NATURAL JOIN t0);
SELECT * FROM t2 NATURAL JOIN t0 WHERE ((((t2.c6 IN ())) NOT BETWEEN ((t2.c2 IN ())) AND (CASE t0.c0  WHEN t2.c2 THEN t0.c0 WHEN t2.c0 THEN '438401472' WHEN t2.c2 THEN t2.c0 ELSE t2.c2 END)));
SELECT SUM(count) FROM (SELECT (((((t2.c6 IN ())) NOT BETWEEN ((t2.c2 IN ())) AND (CASE t0.c0  WHEN t2.c2 THEN t0.c0 WHEN t2.c0 THEN '438401472' WHEN t2.c2 THEN t2.c0 ELSE t2.c2 END))) IS TRUE)  as count FROM t2 NATURAL JOIN t0);
SELECT * FROM t2 NATURAL JOIN t0 WHERE ((((t2.c6 IN ())) NOT BETWEEN ((t2.c2 IN ())) AND (CASE t0.c0  WHEN t2.c2 THEN t0.c0 WHEN t2.c0 THEN '438401472' WHEN t2.c2 THEN t2.c0 ELSE t2.c2 END)));
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)OR(vt0.c1)) IN (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)OR(vt0.c1)) IN (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)OR(vt0.c1)) IN (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)OR(vt0.c1)) IN (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)OR(vt0.c1)) IN (((vt0.c0) NOTNULL))));
SELECT ALL * FROM t2 WHERE ((('-808719911' IN ()) IN ((NOT (t2.c2)))));
SELECT SUM(count) FROM (SELECT (((('-808719911' IN ()) IN ((NOT (t2.c2))))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((('-808719911' IN ()) IN ((NOT (t2.c2)))));
SELECT SUM(count) FROM (SELECT (((('-808719911' IN ()) IN ((NOT (t2.c2))))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((('-808719911' IN ()) IN ((NOT (t2.c2)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)&(t0.c0)))<=(0.42408664967542387)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(t0.c0)))<=(0.42408664967542387))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)&(t0.c0)))<=(0.42408664967542387)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(t0.c0)))<=(0.42408664967542387))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)&(t0.c0)))<=(0.42408664967542387)));
SELECT * FROM t0, t2, vt0 WHERE (x'0f54fe35') ORDER BY QUOTE('.잻edȝd1#') DESC, CAST(((((((((((((t2.c2)AND(NULL)))AND(0.3718268225781386)))AND(t2.c2)))AND('S?')))OR(t2.c1)))OR(NULL)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'0f54fe35') IS TRUE)  as count FROM t0, t2, vt0 ORDER BY QUOTE('.잻edȝd1#') DESC, CAST(((((((((((((t2.c2)AND(NULL)))AND(0.3718268225781386)))AND(t2.c2)))AND('S?')))OR(t2.c1)))OR(NULL)) AS BLOB)  NULLS LAST);
SELECT * FROM t0, t2, vt0 WHERE (x'0f54fe35') ORDER BY QUOTE('.잻edȝd1#') DESC, CAST(((((((((((((t2.c2)AND(NULL)))AND(0.3718268225781386)))AND(t2.c2)))AND('S?')))OR(t2.c1)))OR(NULL)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'0f54fe35') IS TRUE)  as count FROM t0, t2, vt0 ORDER BY QUOTE('.잻edȝd1#') DESC, CAST(((((((((((((t2.c2)AND(NULL)))AND(0.3718268225781386)))AND(t2.c2)))AND('S?')))OR(t2.c1)))OR(NULL)) AS BLOB)  NULLS LAST);
SELECT * FROM t0, t2, vt0 WHERE (x'0f54fe35') ORDER BY QUOTE('.잻edȝd1#') DESC, CAST(((((((((((((t2.c2)AND(NULL)))AND(0.3718268225781386)))AND(t2.c2)))AND('S?')))OR(t2.c1)))OR(NULL)) AS BLOB)  NULLS LAST;
SELECT ALL * FROM vt0, t2 FULL OUTER JOIN t0 ON (((t2.c6 IN ()))-((((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt0.c0))))) WHERE ((((CASE WHEN t0.c0 THEN t2.c2 ELSE vt0.c0 END))<((CASE WHEN t0.c0 THEN t2.c0 WHEN t2.c2 THEN t2.c0 WHEN t2.c1 THEN t2.c6 WHEN t0.c0 THEN 0.8639967706172664 WHEN t2.c1 THEN vt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c0 THEN t2.c2 ELSE vt0.c0 END))<((CASE WHEN t0.c0 THEN t2.c0 WHEN t2.c2 THEN t2.c0 WHEN t2.c1 THEN t2.c6 WHEN t0.c0 THEN 0.8639967706172664 WHEN t2.c1 THEN vt0.c1 END)))) IS TRUE)  as count FROM vt0, t2 FULL OUTER JOIN t0 ON (((t2.c6 IN ()))-((((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0, t2 FULL OUTER JOIN t0 ON (((t2.c6 IN ()))-((((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt0.c0))))) WHERE ((((CASE WHEN t0.c0 THEN t2.c2 ELSE vt0.c0 END))<((CASE WHEN t0.c0 THEN t2.c0 WHEN t2.c2 THEN t2.c0 WHEN t2.c1 THEN t2.c6 WHEN t0.c0 THEN 0.8639967706172664 WHEN t2.c1 THEN vt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t0.c0 THEN t2.c2 ELSE vt0.c0 END))<((CASE WHEN t0.c0 THEN t2.c0 WHEN t2.c2 THEN t2.c0 WHEN t2.c1 THEN t2.c6 WHEN t0.c0 THEN 0.8639967706172664 WHEN t2.c1 THEN vt0.c1 END)))) IS TRUE)  as count FROM vt0, t2 FULL OUTER JOIN t0 ON (((t2.c6 IN ()))-((((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0, t2 FULL OUTER JOIN t0 ON (((t2.c6 IN ()))-((((vt0.c0)) BETWEEN ((t2.c0)) AND ((vt0.c0))))) WHERE ((((CASE WHEN t0.c0 THEN t2.c2 ELSE vt0.c0 END))<((CASE WHEN t0.c0 THEN t2.c0 WHEN t2.c2 THEN t2.c0 WHEN t2.c1 THEN t2.c6 WHEN t0.c0 THEN 0.8639967706172664 WHEN t2.c1 THEN vt0.c1 END))));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type(((('t'))>((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((json_type(((('t'))>((vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type(((('t'))>((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((json_type(((('t'))>((vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type(((('t'))>((vt0.c1)))));
SELECT ALL * FROM vt0 CROSS JOIN t2 ON CAST(((t2.c0)<(t2.c6)) AS REAL) INNER JOIN t0 ON ((((t2.c2)<>(t2.c6))) NOT NULL) WHERE (CAST((- (t2.c0)) AS NUMERIC)) ORDER BY ((t2.c0 COLLATE BINARY)LIKE(((t2.c0)IS NOT(t2.c6))))  NULLS LAST, ((((vt0.c0)AND(vt0.c1)))AND(t2.c2)) COLLATE BINARY DESC, ((((vt0.c1) ISNULL))GLOB(((vt0.c0) BETWEEN (vt0.c1) AND (t2.c6)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t2.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN t2 ON CAST(((t2.c0)<(t2.c6)) AS REAL) INNER JOIN t0 ON ((((t2.c2)<>(t2.c6))) NOT NULL) ORDER BY ((t2.c0 COLLATE BINARY)LIKE(((t2.c0)IS NOT(t2.c6))))  NULLS LAST, ((((vt0.c0)AND(vt0.c1)))AND(t2.c2)) COLLATE BINARY DESC, ((((vt0.c1) ISNULL))GLOB(((vt0.c0) BETWEEN (vt0.c1) AND (t2.c6)))) DESC);
SELECT ALL * FROM vt0 CROSS JOIN t2 ON CAST(((t2.c0)<(t2.c6)) AS REAL) INNER JOIN t0 ON ((((t2.c2)<>(t2.c6))) NOT NULL) WHERE (CAST((- (t2.c0)) AS NUMERIC)) ORDER BY ((t2.c0 COLLATE BINARY)LIKE(((t2.c0)IS NOT(t2.c6))))  NULLS LAST, ((((vt0.c0)AND(vt0.c1)))AND(t2.c2)) COLLATE BINARY DESC, ((((vt0.c1) ISNULL))GLOB(((vt0.c0) BETWEEN (vt0.c1) AND (t2.c6)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t2.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN t2 ON CAST(((t2.c0)<(t2.c6)) AS REAL) INNER JOIN t0 ON ((((t2.c2)<>(t2.c6))) NOT NULL) ORDER BY ((t2.c0 COLLATE BINARY)LIKE(((t2.c0)IS NOT(t2.c6))))  NULLS LAST, ((((vt0.c0)AND(vt0.c1)))AND(t2.c2)) COLLATE BINARY DESC, ((((vt0.c1) ISNULL))GLOB(((vt0.c0) BETWEEN (vt0.c1) AND (t2.c6)))) DESC);
SELECT ALL * FROM vt0 CROSS JOIN t2 ON CAST(((t2.c0)<(t2.c6)) AS REAL) INNER JOIN t0 ON ((((t2.c2)<>(t2.c6))) NOT NULL) WHERE (CAST((- (t2.c0)) AS NUMERIC)) ORDER BY ((t2.c0 COLLATE BINARY)LIKE(((t2.c0)IS NOT(t2.c6))))  NULLS LAST, ((((vt0.c0)AND(vt0.c1)))AND(t2.c2)) COLLATE BINARY DESC, ((((vt0.c1) ISNULL))GLOB(((vt0.c0) BETWEEN (vt0.c1) AND (t2.c6)))) DESC;
SELECT ALL COUNT(*) FROM t2, vt0, t0 WHERE (((- (t2.c6)) IN ())) ORDER BY ((('[&S[x쩾')) NOT BETWEEN (((((t2.c0, t2.c6, t0.c0)) NOT BETWEEN ((t2.c1, t2.c1, t2.c1)) AND ((t0.c0, t0.c0, t2.c2))))) AND ((((t2.c6)OR(t2.c2))))) DESC, 0.5609299706596675  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (t2.c6)) IN ())) IS TRUE)  as count FROM t2, vt0, t0 NOT INDEXED ORDER BY ((('[&S[x쩾')) NOT BETWEEN (((((t2.c0, t2.c6, t0.c0)) NOT BETWEEN ((t2.c1, t2.c1, t2.c1)) AND ((t0.c0, t0.c0, t2.c2))))) AND ((((t2.c6)OR(t2.c2))))) DESC, 0.5609299706596675  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, vt0, t0 WHERE (((- (t2.c6)) IN ())) ORDER BY ((('[&S[x쩾')) NOT BETWEEN (((((t2.c0, t2.c6, t0.c0)) NOT BETWEEN ((t2.c1, t2.c1, t2.c1)) AND ((t0.c0, t0.c0, t2.c2))))) AND ((((t2.c6)OR(t2.c2))))) DESC, 0.5609299706596675  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (t2.c6)) IN ())) IS TRUE)  as count FROM t2, vt0, t0 NOT INDEXED ORDER BY ((('[&S[x쩾')) NOT BETWEEN (((((t2.c0, t2.c6, t0.c0)) NOT BETWEEN ((t2.c1, t2.c1, t2.c1)) AND ((t0.c0, t0.c0, t2.c2))))) AND ((((t2.c6)OR(t2.c2))))) DESC, 0.5609299706596675  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, vt0, t0 WHERE (((- (t2.c6)) IN ())) ORDER BY ((('[&S[x쩾')) NOT BETWEEN (((((t2.c0, t2.c6, t0.c0)) NOT BETWEEN ((t2.c1, t2.c1, t2.c1)) AND ((t0.c0, t0.c0, t2.c2))))) AND ((((t2.c6)OR(t2.c2))))) DESC, 0.5609299706596675  NULLS LAST;
SELECT * FROM vt0, t2 WHERE (((((0x4d46431d COLLATE BINARY)AND(((t2.c2)-(t2.c6)))))AND(json_quote(t2.c0)))) ORDER BY (((- (t2.c6)))-(((t2.c1) BETWEEN (t2.c6) AND (t2.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0x4d46431d COLLATE BINARY)AND(((t2.c2)-(t2.c6)))))AND(json_quote(t2.c0)))) IS TRUE)  as count FROM vt0, t2 ORDER BY (((- (t2.c6)))-(((t2.c1) BETWEEN (t2.c6) AND (t2.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t2 WHERE (((((0x4d46431d COLLATE BINARY)AND(((t2.c2)-(t2.c6)))))AND(json_quote(t2.c0)))) ORDER BY (((- (t2.c6)))-(((t2.c1) BETWEEN (t2.c6) AND (t2.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0x4d46431d COLLATE BINARY)AND(((t2.c2)-(t2.c6)))))AND(json_quote(t2.c0)))) IS TRUE)  as count FROM vt0, t2 ORDER BY (((- (t2.c6)))-(((t2.c1) BETWEEN (t2.c6) AND (t2.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t2 WHERE (((((0x4d46431d COLLATE BINARY)AND(((t2.c2)-(t2.c6)))))AND(json_quote(t2.c0)))) ORDER BY (((- (t2.c6)))-(((t2.c1) BETWEEN (t2.c6) AND (t2.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN t2 ON ((((((((CAST(t2.c1 AS INTEGER))AND(((vt0.c1) NOT BETWEEN (t0.c0) AND (t2.c6)))))OR((((t2.c2)) NOT BETWEEN ((t0.c0)) AND ((t2.c1))))))OR(((t2.c0) ISNULL))))AND(CASE WHEN vt0.c1 THEN t2.c1 WHEN t2.c6 THEN vt0.c0 WHEN NULL THEN t2.c1 ELSE vt0.c1 END)) LEFT OUTER JOIN t0 ON (((t2.c1) BETWEEN (vt0.c0) AND (t2.c6)) IN ()) WHERE ((((((t2.c6)) NOT BETWEEN (('')) AND ((-0.0))))=(((t0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t2.c6)) NOT BETWEEN (('')) AND ((-0.0))))=(((t0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t2 ON ((((((((CAST(t2.c1 AS INTEGER))AND(((vt0.c1) NOT BETWEEN (t0.c0) AND (t2.c6)))))OR((((t2.c2)) NOT BETWEEN ((t0.c0)) AND ((t2.c1))))))OR(((t2.c0) ISNULL))))AND(CASE WHEN vt0.c1 THEN t2.c1 WHEN t2.c6 THEN vt0.c0 WHEN NULL THEN t2.c1 ELSE vt0.c1 END)) LEFT OUTER JOIN t0 ON (((t2.c1) BETWEEN (vt0.c0) AND (t2.c6)) IN ()));
SELECT ALL * FROM vt0 INNER JOIN t2 ON ((((((((CAST(t2.c1 AS INTEGER))AND(((vt0.c1) NOT BETWEEN (t0.c0) AND (t2.c6)))))OR((((t2.c2)) NOT BETWEEN ((t0.c0)) AND ((t2.c1))))))OR(((t2.c0) ISNULL))))AND(CASE WHEN vt0.c1 THEN t2.c1 WHEN t2.c6 THEN vt0.c0 WHEN NULL THEN t2.c1 ELSE vt0.c1 END)) LEFT OUTER JOIN t0 ON (((t2.c1) BETWEEN (vt0.c0) AND (t2.c6)) IN ()) WHERE ((((((t2.c6)) NOT BETWEEN (('')) AND ((-0.0))))=(((t0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t2.c6)) NOT BETWEEN (('')) AND ((-0.0))))=(((t0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t2 ON ((((((((CAST(t2.c1 AS INTEGER))AND(((vt0.c1) NOT BETWEEN (t0.c0) AND (t2.c6)))))OR((((t2.c2)) NOT BETWEEN ((t0.c0)) AND ((t2.c1))))))OR(((t2.c0) ISNULL))))AND(CASE WHEN vt0.c1 THEN t2.c1 WHEN t2.c6 THEN vt0.c0 WHEN NULL THEN t2.c1 ELSE vt0.c1 END)) LEFT OUTER JOIN t0 ON (((t2.c1) BETWEEN (vt0.c0) AND (t2.c6)) IN ()));
SELECT ALL * FROM vt0 INNER JOIN t2 ON ((((((((CAST(t2.c1 AS INTEGER))AND(((vt0.c1) NOT BETWEEN (t0.c0) AND (t2.c6)))))OR((((t2.c2)) NOT BETWEEN ((t0.c0)) AND ((t2.c1))))))OR(((t2.c0) ISNULL))))AND(CASE WHEN vt0.c1 THEN t2.c1 WHEN t2.c6 THEN vt0.c0 WHEN NULL THEN t2.c1 ELSE vt0.c1 END)) LEFT OUTER JOIN t0 ON (((t2.c1) BETWEEN (vt0.c0) AND (t2.c6)) IN ()) WHERE ((((((t2.c6)) NOT BETWEEN (('')) AND ((-0.0))))=(((t0.c0)IS NOT(vt0.c0)))));
SELECT * FROM vt0 WHERE (UPPER(((vt0.c0)==(vt0.c1)))) ORDER BY (((vt0.c1) ISNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c0)==(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) ISNULL) IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (UPPER(((vt0.c0)==(vt0.c1)))) ORDER BY (((vt0.c1) ISNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c0)==(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) ISNULL) IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (UPPER(((vt0.c0)==(vt0.c1)))) ORDER BY (((vt0.c1) ISNULL) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (((t2.c6)>=('886630865')));
SELECT SUM(count) FROM (SELECT ((((t2.c6)>=('886630865'))) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (((t2.c6)>=('886630865')));
SELECT SUM(count) FROM (SELECT ((((t2.c6)>=('886630865'))) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (((t2.c6)>=('886630865')));
SELECT * FROM vt0, t2 WHERE (((t2.c2)&(t2.c6))) ORDER BY ((((t2.c1)||(vt0.c1))) NOT BETWEEN ((((t2.c1, t2.c1, vt0.c1, t2.c6, t2.c6))<=((t2.c6, t2.c1, t2.c0, t2.c1, t2.c2)))) AND (((t2.c6) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((t2.c2)&(t2.c6))) IS TRUE)  as count FROM vt0, t2 ORDER BY ((((t2.c1)||(vt0.c1))) NOT BETWEEN ((((t2.c1, t2.c1, vt0.c1, t2.c6, t2.c6))<=((t2.c6, t2.c1, t2.c0, t2.c1, t2.c2)))) AND (((t2.c6) NOTNULL))));
SELECT * FROM vt0, t2 WHERE (((t2.c2)&(t2.c6))) ORDER BY ((((t2.c1)||(vt0.c1))) NOT BETWEEN ((((t2.c1, t2.c1, vt0.c1, t2.c6, t2.c6))<=((t2.c6, t2.c1, t2.c0, t2.c1, t2.c2)))) AND (((t2.c6) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((t2.c2)&(t2.c6))) IS TRUE)  as count FROM vt0, t2 ORDER BY ((((t2.c1)||(vt0.c1))) NOT BETWEEN ((((t2.c1, t2.c1, vt0.c1, t2.c6, t2.c6))<=((t2.c6, t2.c1, t2.c0, t2.c1, t2.c2)))) AND (((t2.c6) NOTNULL))));
SELECT * FROM vt0, t2 WHERE (((t2.c2)&(t2.c6))) ORDER BY ((((t2.c1)||(vt0.c1))) NOT BETWEEN ((((t2.c1, t2.c1, vt0.c1, t2.c6, t2.c6))<=((t2.c6, t2.c1, t2.c0, t2.c1, t2.c2)))) AND (((t2.c6) NOTNULL)));
SELECT ALL * FROM t0, t2, vt0 WHERE (CAST((- (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, t2, vt0);
SELECT ALL * FROM t0, t2, vt0 WHERE (CAST((- (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, t2, vt0);
SELECT ALL * FROM t0, t2, vt0 WHERE (CAST((- (t0.c0)) AS REAL));
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.09242796983417567 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL)) ORDER BY LIKE(1945428953, t0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.09242796983417567 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL)) IS TRUE)  as count FROM t0 ORDER BY LIKE(1945428953, t0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.09242796983417567 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL)) ORDER BY LIKE(1945428953, t0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.09242796983417567 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL)) IS TRUE)  as count FROM t0 ORDER BY LIKE(1945428953, t0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.09242796983417567 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL)) ORDER BY LIKE(1945428953, t0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM t2 WHERE ((((t2.c2)) NOT BETWEEN ((0xffffffffac565255)) AND ((0.785787065823792)))) ORDER BY (CAST(t2.c6 AS INTEGER) IN ()) ASC, JULIANDAY(CAST(t2.c0 AS BLOB), ((t2.c0)%(t2.c6)), 0.7968265475522393), (((LIKE(t2.c2, t2.c1, '䴆')))>(((NOT (t2.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2)) NOT BETWEEN ((0Xffffffffac565255)) AND ((0.785787065823792)))) IS TRUE)  as count FROM t2 ORDER BY (CAST(t2.c6 AS INTEGER) IN ()) ASC, JULIANDAY(CAST(t2.c0 AS BLOB), ((t2.c0)%(t2.c6)), 0.7968265475522393), (((LIKE(t2.c2, t2.c1, '䴆')))>(((NOT (t2.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t2 WHERE ((((t2.c2)) NOT BETWEEN ((0xffffffffac565255)) AND ((0.785787065823792)))) ORDER BY (CAST(t2.c6 AS INTEGER) IN ()) ASC, JULIANDAY(CAST(t2.c0 AS BLOB), ((t2.c0)%(t2.c6)), 0.7968265475522393), (((LIKE(t2.c2, t2.c1, '䴆')))>(((NOT (t2.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2)) NOT BETWEEN ((0Xffffffffac565255)) AND ((0.785787065823792)))) IS TRUE)  as count FROM t2 ORDER BY (CAST(t2.c6 AS INTEGER) IN ()) ASC, JULIANDAY(CAST(t2.c0 AS BLOB), ((t2.c0)%(t2.c6)), 0.7968265475522393), (((LIKE(t2.c2, t2.c1, '䴆')))>(((NOT (t2.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t2 WHERE ((((t2.c2)) NOT BETWEEN ((0xffffffffac565255)) AND ((0.785787065823792)))) ORDER BY (CAST(t2.c6 AS INTEGER) IN ()) ASC, JULIANDAY(CAST(t2.c0 AS BLOB), ((t2.c0)%(t2.c6)), 0.7968265475522393), (((LIKE(t2.c2, t2.c1, '䴆')))>(((NOT (t2.c0)))))  NULLS LAST;
SELECT ALL * FROM t2, vt0, t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY (((vt0.c1))<((vt0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY (((vt0.c1))<((vt0.c0))) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t2, vt0, t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY (((vt0.c1))<((vt0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY (((vt0.c1))<((vt0.c0))) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t2, vt0, t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY (((vt0.c1))<((vt0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t2, vt0 WHERE (((((t2.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)) ORDER BY ((((vt0.c1)<(t2.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM t2, vt0 ORDER BY ((((vt0.c1)<(t2.c0))) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM t2, vt0 WHERE (((((t2.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)) ORDER BY ((((vt0.c1)<(t2.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM t2, vt0 ORDER BY ((((vt0.c1)<(t2.c0))) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM t2, vt0 WHERE (((((t2.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)) ORDER BY ((((vt0.c1)<(t2.c0))) NOTNULL) ASC  NULLS LAST;
SELECT * FROM t2, vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t2, vt0, t0);
SELECT * FROM t2, vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t2, vt0, t0);
SELECT * FROM t2, vt0, t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (vt0.c0);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0) IS FALSE) COLLATE BINARY WHERE (LIKELY(UNLIKELY(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(UNLIKELY(DISTINCT t0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0) IS FALSE) COLLATE BINARY);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0) IS FALSE) COLLATE BINARY WHERE (LIKELY(UNLIKELY(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(UNLIKELY(DISTINCT t0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0) IS FALSE) COLLATE BINARY);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((t0.c0) IS FALSE) COLLATE BINARY WHERE (LIKELY(UNLIKELY(DISTINCT t0.c0)));
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((t0.c0)OR(t0.c0 COLLATE BINARY)))AND(((t2.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0 COLLATE BINARY)))AND(((t2.c0) IS TRUE)))) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((t0.c0)OR(t0.c0 COLLATE BINARY)))AND(((t2.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0 COLLATE BINARY)))AND(((t2.c0) IS TRUE)))) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((t0.c0)OR(t0.c0 COLLATE BINARY)))AND(((t2.c0) IS TRUE))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t2 ON ((('-873643660'))<=((((t2.c0)/(t0.c0))))) WHERE (CHANGES()) ORDER BY SQLITE_VERSION() COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON ((('-873643660'))<=((((t2.c0)/(t0.c0))))) ORDER BY SQLITE_VERSION() COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t2 ON ((('-873643660'))<=((((t2.c0)/(t0.c0))))) WHERE (CHANGES()) ORDER BY SQLITE_VERSION() COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON ((('-873643660'))<=((((t2.c0)/(t0.c0))))) ORDER BY SQLITE_VERSION() COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t2 ON ((('-873643660'))<=((((t2.c0)/(t0.c0))))) WHERE (CHANGES()) ORDER BY SQLITE_VERSION() COLLATE BINARY  NULLS FIRST;
SELECT * FROM t2 NATURAL JOIN t0 WHERE (((CASE WHEN t2.c6 THEN t2.c2 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t2.c6 THEN t2.c2 END) IS TRUE)) IS TRUE)  as count FROM t2 NATURAL JOIN t0);
SELECT * FROM t2 NATURAL JOIN t0 WHERE (((CASE WHEN t2.c6 THEN t2.c2 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t2.c6 THEN t2.c2 END) IS TRUE)) IS TRUE)  as count FROM t2 NATURAL JOIN t0);
SELECT * FROM t2 NATURAL JOIN t0 WHERE (((CASE WHEN t2.c6 THEN t2.c2 END) IS TRUE));
SELECT ALL * FROM t0, vt0, t2 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL * FROM t0, vt0, t2 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL * FROM t0, vt0, t2 WHERE (TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (((('K*#Vd') BETWEEN (t2.c1) AND (t2.c6)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('K*#Vd') BETWEEN (t2.c1) AND (t2.c6)) IN ())) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (((('K*#Vd') BETWEEN (t2.c1) AND (t2.c6)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('K*#Vd') BETWEEN (t2.c1) AND (t2.c6)) IN ())) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (((('K*#Vd') BETWEEN (t2.c1) AND (t2.c6)) IN ()));
SELECT * FROM t2 WHERE (CASE WHEN (- (t2.c0)) THEN CASE WHEN t2.c2 THEN t2.c0 WHEN '0.24118349077431822' THEN t2.c2 WHEN t2.c2 THEN t2.c2 WHEN t2.c2 THEN t2.c6 WHEN t2.c2 THEN t2.c1 ELSE t2.c0 END END) ORDER BY ((RTRIM(t2.c2))<<(CAST('0.9639727137446908' AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t2.c0)) THEN CASE WHEN t2.c2 THEN t2.c0 WHEN '0.24118349077431822' THEN t2.c2 WHEN t2.c2 THEN t2.c2 WHEN t2.c2 THEN t2.c6 WHEN t2.c2 THEN t2.c1 ELSE t2.c0 END END) IS TRUE)  as count FROM t2 ORDER BY ((RTRIM(t2.c2))<<(CAST('0.9639727137446908' AS BLOB)))  NULLS LAST);
SELECT * FROM t2 WHERE (CASE WHEN (- (t2.c0)) THEN CASE WHEN t2.c2 THEN t2.c0 WHEN '0.24118349077431822' THEN t2.c2 WHEN t2.c2 THEN t2.c2 WHEN t2.c2 THEN t2.c6 WHEN t2.c2 THEN t2.c1 ELSE t2.c0 END END) ORDER BY ((RTRIM(t2.c2))<<(CAST('0.9639727137446908' AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t2.c0)) THEN CASE WHEN t2.c2 THEN t2.c0 WHEN '0.24118349077431822' THEN t2.c2 WHEN t2.c2 THEN t2.c2 WHEN t2.c2 THEN t2.c6 WHEN t2.c2 THEN t2.c1 ELSE t2.c0 END END) IS TRUE)  as count FROM t2 ORDER BY ((RTRIM(t2.c2))<<(CAST('0.9639727137446908' AS BLOB)))  NULLS LAST);
SELECT * FROM t2 WHERE (CASE WHEN (- (t2.c0)) THEN CASE WHEN t2.c2 THEN t2.c0 WHEN '0.24118349077431822' THEN t2.c2 WHEN t2.c2 THEN t2.c2 WHEN t2.c2 THEN t2.c6 WHEN t2.c2 THEN t2.c1 ELSE t2.c0 END END) ORDER BY ((RTRIM(t2.c2))<<(CAST('0.9639727137446908' AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM t2 WHERE (((t2.c0)*(t2.c2)) COLLATE RTRIM) ORDER BY (((((t2.c2)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))<<((t2.c2 IN (t2.c2))));
SELECT SUM(count) FROM (SELECT ((((t2.c0)*(t2.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t2 ORDER BY (((((t2.c2)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))<<((t2.c2 IN (t2.c2)))));
SELECT COUNT(*) FROM t2 WHERE (((t2.c0)*(t2.c2)) COLLATE RTRIM) ORDER BY (((((t2.c2)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))<<((t2.c2 IN (t2.c2))));
SELECT SUM(count) FROM (SELECT ((((t2.c0)*(t2.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t2 ORDER BY (((((t2.c2)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))<<((t2.c2 IN (t2.c2)))));
SELECT COUNT(*) FROM t2 WHERE (((t2.c0)*(t2.c2)) COLLATE RTRIM) ORDER BY (((((t2.c2)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))))<<((t2.c2 IN (t2.c2))));
SELECT * FROM t2, t0, vt0 WHERE ((((t0.c0)*(vt0.c0)) IN ())) ORDER BY ((((((vt0.c0)OR(t2.c6)))OR(t2.c6)))*((((t2.c1, t2.c1, t2.c1, t2.c0, t2.c0))<=((t2.c6, t2.c1, NULL, t2.c0, t2.c2))))) DESC  NULLS FIRST, TRIM(DISTINCT ((t2.c0)&(vt0.c1)), (t2.c6 IN ())) ASC  NULLS LAST, UNLIKELY(CASE WHEN 0.5096749645542389 THEN t2.c6 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)*(vt0.c0)) IN ())) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY ((((((vt0.c0)OR(t2.c6)))OR(t2.c6)))*((((t2.c1, t2.c1, t2.c1, t2.c0, t2.c0))<=((t2.c6, t2.c1, NULL, t2.c0, t2.c2))))) DESC  NULLS FIRST, TRIM(DISTINCT ((t2.c0)&(vt0.c1)), (t2.c6 IN ())) ASC  NULLS LAST, UNLIKELY(CASE WHEN 0.5096749645542389 THEN t2.c6 END) DESC  NULLS FIRST);
SELECT * FROM t2, t0, vt0 WHERE ((((t0.c0)*(vt0.c0)) IN ())) ORDER BY ((((((vt0.c0)OR(t2.c6)))OR(t2.c6)))*((((t2.c1, t2.c1, t2.c1, t2.c0, t2.c0))<=((t2.c6, t2.c1, NULL, t2.c0, t2.c2))))) DESC  NULLS FIRST, TRIM(DISTINCT ((t2.c0)&(vt0.c1)), (t2.c6 IN ())) ASC  NULLS LAST, UNLIKELY(CASE WHEN 0.5096749645542389 THEN t2.c6 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)*(vt0.c0)) IN ())) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY ((((((vt0.c0)OR(t2.c6)))OR(t2.c6)))*((((t2.c1, t2.c1, t2.c1, t2.c0, t2.c0))<=((t2.c6, t2.c1, NULL, t2.c0, t2.c2))))) DESC  NULLS FIRST, TRIM(DISTINCT ((t2.c0)&(vt0.c1)), (t2.c6 IN ())) ASC  NULLS LAST, UNLIKELY(CASE WHEN 0.5096749645542389 THEN t2.c6 END) DESC  NULLS FIRST);
SELECT * FROM t2, t0, vt0 WHERE ((((t0.c0)*(vt0.c0)) IN ())) ORDER BY ((((((vt0.c0)OR(t2.c6)))OR(t2.c6)))*((((t2.c1, t2.c1, t2.c1, t2.c0, t2.c0))<=((t2.c6, t2.c1, NULL, t2.c0, t2.c2))))) DESC  NULLS FIRST, TRIM(DISTINCT ((t2.c0)&(vt0.c1)), (t2.c6 IN ())) ASC  NULLS LAST, UNLIKELY(CASE WHEN 0.5096749645542389 THEN t2.c6 END) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t2 WHERE (CAST((+ (t2.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (t2.c0)) AS REAL)) IS TRUE)  as count FROM vt0, t2);
SELECT ALL * FROM vt0, t2 WHERE (CAST((+ (t2.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (t2.c0)) AS REAL)) IS TRUE)  as count FROM vt0, t2);
SELECT ALL * FROM vt0, t2 WHERE (CAST((+ (t2.c0)) AS REAL));
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (CAST(((t2.c1)IS NOT(t2.c0)) AS INTEGER)) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t2.c1)IS NOT(t2.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY CAST(CAST(t0.c0 AS BLOB) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (CAST(((t2.c1)IS NOT(t2.c0)) AS INTEGER)) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t2.c1)IS NOT(t2.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY CAST(CAST(t0.c0 AS BLOB) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (CAST(((t2.c1)IS NOT(t2.c0)) AS INTEGER)) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<>((t0.c0))))=(((t0.c0)<=(t0.c0))))) ORDER BY ((t0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))!=((t0.c0))))==(((t0.c0)<=(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) IS FALSE));
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<>((t0.c0))))=(((t0.c0)<=(t0.c0))))) ORDER BY ((t0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))!=((t0.c0))))==(((t0.c0)<=(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) IS FALSE));
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<>((t0.c0))))=(((t0.c0)<=(t0.c0))))) ORDER BY ((t0.c0) IS FALSE);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE ('-699006014');
SELECT SUM(count) FROM (SELECT (('-699006014') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('-699006014');
SELECT SUM(count) FROM (SELECT (('-699006014') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('-699006014');
SELECT * FROM t2, vt0 WHERE (vt0.c1) ORDER BY (((t2.c6) NOT BETWEEN (t2.c1) AND (t2.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t2, vt0 ORDER BY (((t2.c6) NOT BETWEEN (t2.c1) AND (t2.c1)) IN ())  NULLS FIRST);
SELECT * FROM t2, vt0 WHERE (vt0.c1) ORDER BY (((t2.c6) NOT BETWEEN (t2.c1) AND (t2.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t2, vt0 ORDER BY (((t2.c6) NOT BETWEEN (t2.c1) AND (t2.c1)) IN ())  NULLS FIRST);
SELECT * FROM t2, vt0 WHERE (vt0.c1) ORDER BY (((t2.c6) NOT BETWEEN (t2.c1) AND (t2.c1)) IN ())  NULLS FIRST;
SELECT ALL * FROM t2 INNER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON CASE WHEN ((t2.c2) NOT NULL) THEN (t2.c2 IN ('618535433')) WHEN (((t0.c0))==((vt0.c1))) THEN 'Lꍬ1eW]K' WHEN t2.c0 THEN ((((t2.c2)AND(t0.c0)))AND(t2.c6)) ELSE (t2.c0 IN (t2.c0)) END WHERE (vt0.c1) ORDER BY t2.c0, (x'5848' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t2 INNER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON CASE WHEN ((t2.c2) NOT NULL) THEN (t2.c2 IN ('618535433')) WHEN (((t0.c0))=((vt0.c1))) THEN 'Lꍬ1eW]K' WHEN t2.c0 THEN ((((t2.c2)AND(t0.c0)))AND(t2.c6)) ELSE (t2.c0 IN (t2.c0)) END ORDER BY t2.c0, (x'5848' IN ()) DESC);
SELECT ALL * FROM t2 INNER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON CASE WHEN ((t2.c2) NOT NULL) THEN (t2.c2 IN ('618535433')) WHEN (((t0.c0))==((vt0.c1))) THEN 'Lꍬ1eW]K' WHEN t2.c0 THEN ((((t2.c2)AND(t0.c0)))AND(t2.c6)) ELSE (t2.c0 IN (t2.c0)) END WHERE (vt0.c1) ORDER BY t2.c0, (x'5848' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t2 INNER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON CASE WHEN ((t2.c2) NOT NULL) THEN (t2.c2 IN ('618535433')) WHEN (((t0.c0))=((vt0.c1))) THEN 'Lꍬ1eW]K' WHEN t2.c0 THEN ((((t2.c2)AND(t0.c0)))AND(t2.c6)) ELSE (t2.c0 IN (t2.c0)) END ORDER BY t2.c0, (x'5848' IN ()) DESC);
SELECT ALL * FROM t2 INNER JOIN vt0 ON NULL LEFT OUTER JOIN t0 ON CASE WHEN ((t2.c2) NOT NULL) THEN (t2.c2 IN ('618535433')) WHEN (((t0.c0))==((vt0.c1))) THEN 'Lꍬ1eW]K' WHEN t2.c0 THEN ((((t2.c2)AND(t0.c0)))AND(t2.c6)) ELSE (t2.c0 IN (t2.c0)) END WHERE (vt0.c1) ORDER BY t2.c0, (x'5848' IN ()) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c1)))<=(((vt0.c1)LIKE('-599339622')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt0.c1)))<=(((vt0.c1)LIKE('-599339622'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c1)))<=(((vt0.c1)LIKE('-599339622')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt0.c1)))<=(((vt0.c1)LIKE('-599339622'))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c1)))<=(((vt0.c1)LIKE('-599339622')))));
SELECT * FROM t0, vt0, t2 WHERE (CAST((NOT (t2.c6)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t2.c6)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, t2);
SELECT * FROM t0, vt0, t2 WHERE (CAST((NOT (t2.c6)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t2.c6)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, t2);
SELECT * FROM t0, vt0, t2 WHERE (CAST((NOT (t2.c6)) AS NUMERIC));
SELECT ALL * FROM t0, vt0, t2 WHERE (t2.c1);
SELECT SUM(count) FROM (SELECT ((t2.c1) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL * FROM t0, vt0, t2 WHERE (t2.c1);
SELECT SUM(count) FROM (SELECT ((t2.c1) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL * FROM t0, vt0, t2 WHERE (t2.c1);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))<=((((vt0.c1))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))<=((((vt0.c1))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))<=((((vt0.c1))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))<=((((vt0.c1))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))<=((((vt0.c1))>=((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)*(vt0.c1)))AND(((0Xffffffffb5e15be1) ISNULL))))OR((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)*(vt0.c1)))AND(((0xffffffffb5e15be1) ISNULL))))OR((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)*(vt0.c1)))AND(((0Xffffffffb5e15be1) ISNULL))))OR((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)*(vt0.c1)))AND(((0xffffffffb5e15be1) ISNULL))))OR((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)*(vt0.c1)))AND(((0Xffffffffb5e15be1) ISNULL))))OR((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM t2, vt0 WHERE ((- (((t2.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t2.c1) IS TRUE)))) IS TRUE)  as count FROM t2, vt0);
SELECT ALL * FROM t2, vt0 WHERE ((- (((t2.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t2.c1) IS TRUE)))) IS TRUE)  as count FROM t2, vt0);
SELECT ALL * FROM t2, vt0 WHERE ((- (((t2.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM t0, t2, vt0 WHERE ((((- ('*7w_>nE'))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- ('*7w_>nE'))) IS FALSE)) IS TRUE)  as count FROM t0, t2, vt0);
SELECT ALL COUNT(*) FROM t0, t2, vt0 WHERE ((((- ('*7w_>nE'))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- ('*7w_>nE'))) IS FALSE)) IS TRUE)  as count FROM t0, t2, vt0);
SELECT ALL COUNT(*) FROM t0, t2, vt0 WHERE ((((- ('*7w_>nE'))) IS FALSE));
SELECT COUNT(*) FROM t0, t2 WHERE (((((x'') IS FALSE))=(json_extract(t2.c6, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((x'') IS FALSE))==(json_extract(t2.c6, t0.c0)))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE (((((x'') IS FALSE))=(json_extract(t2.c6, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((x'') IS FALSE))==(json_extract(t2.c6, t0.c0)))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE (((((x'') IS FALSE))=(json_extract(t2.c6, t0.c0))));
SELECT ALL * FROM vt0, t0, t2 WHERE (CASE WHEN (((t2.c6))>=((t2.c2))) THEN NULL END) ORDER BY (~ (x'0ffa6273'))  NULLS LAST, ((t2.c2)&((((t2.c1))=((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t2.c6))>=((t2.c2))) THEN NULL END) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (~ (x'0ffa6273'))  NULLS LAST, ((t2.c2)&((((t2.c1))==((vt0.c1))))) DESC);
SELECT ALL * FROM vt0, t0, t2 WHERE (CASE WHEN (((t2.c6))>=((t2.c2))) THEN NULL END) ORDER BY (~ (x'0ffa6273'))  NULLS LAST, ((t2.c2)&((((t2.c1))=((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t2.c6))>=((t2.c2))) THEN NULL END) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (~ (x'0ffa6273'))  NULLS LAST, ((t2.c2)&((((t2.c1))==((vt0.c1))))) DESC);
SELECT ALL * FROM vt0, t0, t2 WHERE (CASE WHEN (((t2.c6))>=((t2.c2))) THEN NULL END) ORDER BY (~ (x'0ffa6273'))  NULLS LAST, ((t2.c2)&((((t2.c1))=((vt0.c1))))) DESC;
SELECT ALL * FROM t2, t0, vt0 WHERE ((((t2.c6)) NOT BETWEEN ((((vt0.c0)<<(t0.c0)))) AND ((x'd5e7'))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c6)) NOT BETWEEN ((((vt0.c0)<<(t0.c0)))) AND ((x'd5e7')))) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL * FROM t2, t0, vt0 WHERE ((((t2.c6)) NOT BETWEEN ((((vt0.c0)<<(t0.c0)))) AND ((x'd5e7'))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c6)) NOT BETWEEN ((((vt0.c0)<<(t0.c0)))) AND ((x'd5e7')))) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL * FROM t2, t0, vt0 WHERE ((((t2.c6)) NOT BETWEEN ((((vt0.c0)<<(t0.c0)))) AND ((x'd5e7'))));
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0)<(vt0.c1)))))AND(((vt0.c1)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0)<(vt0.c1)))))AND(((vt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0)<(vt0.c1)))))AND(((vt0.c1)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0)<(vt0.c1)))))AND(((vt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0)<(vt0.c1)))))AND(((vt0.c1)IS(vt0.c1)))));
SELECT ALL * FROM t0 WHERE (CASE (t0.c0 IN (t0.c0, t0.c0))  WHEN x'' THEN (((x'2aadc081'))<=((t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)&(NULL)) WHEN '' THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)+(t0.c0)) THEN ((t0.c0)/(t0.c0)) ELSE ((t0.c0) BETWEEN (-1322818226) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN (t0.c0, t0.c0))  WHEN x'' THEN (((x'2aadc081'))<=((t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)&(NULL)) WHEN '' THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)+(t0.c0)) THEN ((t0.c0)/(t0.c0)) ELSE ((t0.c0) BETWEEN (-1322818226) AND (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE (t0.c0 IN (t0.c0, t0.c0))  WHEN x'' THEN (((x'2aadc081'))<=((t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)&(NULL)) WHEN '' THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)+(t0.c0)) THEN ((t0.c0)/(t0.c0)) ELSE ((t0.c0) BETWEEN (-1322818226) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN (t0.c0, t0.c0))  WHEN x'' THEN (((x'2aadc081'))<=((t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)&(NULL)) WHEN '' THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)+(t0.c0)) THEN ((t0.c0)/(t0.c0)) ELSE ((t0.c0) BETWEEN (-1322818226) AND (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE (t0.c0 IN (t0.c0, t0.c0))  WHEN x'' THEN (((x'2aadc081'))<=((t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)&(NULL)) WHEN '' THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)+(t0.c0)) THEN ((t0.c0)/(t0.c0)) ELSE ((t0.c0) BETWEEN (-1322818226) AND (t0.c0)) END);
SELECT ALL * FROM t2, vt0 WHERE (TRIM(json(vt0.c0))) ORDER BY CAST(CAST('1y>u췙[' AS TEXT) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(json(vt0.c0))) IS TRUE)  as count FROM t2, vt0 ORDER BY CAST(CAST('1y>u췙[' AS TEXT) AS BLOB) ASC);
SELECT ALL * FROM t2, vt0 WHERE (TRIM(json(vt0.c0))) ORDER BY CAST(CAST('1y>u췙[' AS TEXT) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(json(vt0.c0))) IS TRUE)  as count FROM t2, vt0 ORDER BY CAST(CAST('1y>u췙[' AS TEXT) AS BLOB) ASC);
SELECT ALL * FROM t2, vt0 WHERE (TRIM(json(vt0.c0))) ORDER BY CAST(CAST('1y>u췙[' AS TEXT) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN t2 ON vt0.c1 WHERE (((t2.c1 COLLATE RTRIM)<<((((t2.c0)) NOT BETWEEN ((t2.c1)) AND ((t2.c0))))));
SELECT SUM(count) FROM (SELECT ((((t2.c1 COLLATE RTRIM)<<((((t2.c0)) NOT BETWEEN ((t2.c1)) AND ((t2.c0)))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN t2 ON vt0.c1);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN t2 ON vt0.c1 WHERE (((t2.c1 COLLATE RTRIM)<<((((t2.c0)) NOT BETWEEN ((t2.c1)) AND ((t2.c0))))));
SELECT SUM(count) FROM (SELECT ((((t2.c1 COLLATE RTRIM)<<((((t2.c0)) NOT BETWEEN ((t2.c1)) AND ((t2.c0)))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN t2 ON vt0.c1);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN t2 ON vt0.c1 WHERE (((t2.c1 COLLATE RTRIM)<<((((t2.c0)) NOT BETWEEN ((t2.c1)) AND ((t2.c0))))));
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (((HEX(t2.c0)) NOT NULL)) ORDER BY ((t2.c2)IS NOT(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(t2.c0)) NOT NULL)) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY ((t2.c2)IS NOT(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (((HEX(t2.c0)) NOT NULL)) ORDER BY ((t2.c2)IS NOT(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(t2.c0)) NOT NULL)) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY ((t2.c2)IS NOT(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (((HEX(t2.c0)) NOT NULL)) ORDER BY ((t2.c2)IS NOT(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT * FROM vt0, t2 WHERE (((TYPEOF(DISTINCT t2.c0)) NOTNULL)) ORDER BY load_extension(((t2.c1)-(vt0.c1)), ((t2.c2) BETWEEN (vt0.c0) AND (vt0.c0))) DESC, x'' DESC  NULLS FIRST, ((((t2.c1) NOTNULL))&(t2.c0));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT t2.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, t2 ORDER BY load_extension(((t2.c1)-(vt0.c1)), ((t2.c2) BETWEEN (vt0.c0) AND (vt0.c0))) DESC, x'' DESC  NULLS FIRST, ((((t2.c1) NOTNULL))&(t2.c0)));
SELECT * FROM vt0, t2 WHERE (((TYPEOF(DISTINCT t2.c0)) NOTNULL)) ORDER BY load_extension(((t2.c1)-(vt0.c1)), ((t2.c2) BETWEEN (vt0.c0) AND (vt0.c0))) DESC, x'' DESC  NULLS FIRST, ((((t2.c1) NOTNULL))&(t2.c0));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT t2.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, t2 ORDER BY load_extension(((t2.c1)-(vt0.c1)), ((t2.c2) BETWEEN (vt0.c0) AND (vt0.c0))) DESC, x'' DESC  NULLS FIRST, ((((t2.c1) NOTNULL))&(t2.c0)));
SELECT * FROM vt0, t2 WHERE (((TYPEOF(DISTINCT t2.c0)) NOTNULL)) ORDER BY load_extension(((t2.c1)-(vt0.c1)), ((t2.c2) BETWEEN (vt0.c0) AND (vt0.c0))) DESC, x'' DESC  NULLS FIRST, ((((t2.c1) NOTNULL))&(t2.c0));
SELECT * FROM t2 WHERE ((t2.c2 IN ())) ORDER BY ((t2.c6)/(t2.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((t2.c2 IN ())) IS TRUE)  as count FROM t2 NOT INDEXED ORDER BY ((t2.c6)/(t2.c1)) COLLATE RTRIM DESC);
SELECT * FROM t2 WHERE ((t2.c2 IN ())) ORDER BY ((t2.c6)/(t2.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((t2.c2 IN ())) IS TRUE)  as count FROM t2 NOT INDEXED ORDER BY ((t2.c6)/(t2.c1)) COLLATE RTRIM DESC);
SELECT * FROM t2 WHERE ((t2.c2 IN ())) ORDER BY ((t2.c6)/(t2.c1)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON x'' CROSS JOIN t2 ON (((+ (t2.c2)))!=(((t2.c0)<(t2.c6)))) WHERE (((((((0X5d90f4cb) ISNULL))OR((t0.c0 IN (t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((0X5d90f4cb) ISNULL))OR((t0.c0 IN (t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON x'' CROSS JOIN t2 ON (((+ (t2.c2)))!=(((t2.c0)<(t2.c6)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON x'' CROSS JOIN t2 ON (((+ (t2.c2)))!=(((t2.c0)<(t2.c6)))) WHERE (((((((0X5d90f4cb) ISNULL))OR((t0.c0 IN (t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((0X5d90f4cb) ISNULL))OR((t0.c0 IN (t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON x'' CROSS JOIN t2 ON (((+ (t2.c2)))!=(((t2.c0)<(t2.c6)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON x'' CROSS JOIN t2 ON (((+ (t2.c2)))!=(((t2.c0)<(t2.c6)))) WHERE (((((((0X5d90f4cb) ISNULL))OR((t0.c0 IN (t2.c0)))))AND(((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY CAST(json_array(t0.c0, t0.c0) AS REAL), '';
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(json_array(t0.c0, t0.c0) AS REAL), '');
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY CAST(json_array(t0.c0, t0.c0) AS REAL), '';
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(json_array(t0.c0, t0.c0) AS REAL), '');
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY CAST(json_array(t0.c0, t0.c0) AS REAL), '';
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) AS NUMERIC) WHERE (LIKELY(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY json(((((t0.c0)AND(vt0.c1)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) AS NUMERIC) ORDER BY json(((((t0.c0)AND(vt0.c1)))AND(NULL))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) AS NUMERIC) WHERE (LIKELY(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY json(((((t0.c0)AND(vt0.c1)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) AS NUMERIC) ORDER BY json(((((t0.c0)AND(vt0.c1)))AND(NULL))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) AS NUMERIC) WHERE (LIKELY(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY json(((((t0.c0)AND(vt0.c1)))AND(NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (+ (t0.c0)) THEN '&᐀{' COLLATE RTRIM WHEN (((t0.c0))<((t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS NUMERIC) THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0) ISNULL) END) ORDER BY (((t0.c0) ISNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (t0.c0)) THEN '&᐀{' COLLATE RTRIM WHEN (((t0.c0))<((t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS NUMERIC) THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0) ISNULL) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0) ISNULL) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (+ (t0.c0)) THEN '&᐀{' COLLATE RTRIM WHEN (((t0.c0))<((t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS NUMERIC) THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0) ISNULL) END) ORDER BY (((t0.c0) ISNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (t0.c0)) THEN '&᐀{' COLLATE RTRIM WHEN (((t0.c0))<((t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS NUMERIC) THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0) ISNULL) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0) ISNULL) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (+ (t0.c0)) THEN '&᐀{' COLLATE RTRIM WHEN (((t0.c0))<((t0.c0))) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS NUMERIC) THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0) ISNULL) END) ORDER BY (((t0.c0) ISNULL) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(vt0.c1))) ORDER BY (((vt0.c0)OR(vt0.c1)) IN (NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)OR(vt0.c1)) IN (NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(vt0.c1))) ORDER BY (((vt0.c0)OR(vt0.c1)) IN (NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)OR(vt0.c1)) IN (NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(vt0.c1))) ORDER BY (((vt0.c0)OR(vt0.c1)) IN (NULL));
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT ALL * FROM t2 INDEXED BY i64, vt0 WHERE (((((t2.c2) NOTNULL)) NOTNULL)) ORDER BY ((((((t2.c1)OR(vt0.c1)))AND(t2.c1)))>(CAST(t2.c6 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c2) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t2 INDEXED BY i64, vt0 ORDER BY ((((((t2.c1)OR(vt0.c1)))AND(t2.c1)))>(CAST(t2.c6 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL * FROM t2 INDEXED BY i64, vt0 WHERE (((((t2.c2) NOTNULL)) NOTNULL)) ORDER BY ((((((t2.c1)OR(vt0.c1)))AND(t2.c1)))>(CAST(t2.c6 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c2) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t2 INDEXED BY i64, vt0 ORDER BY ((((((t2.c1)OR(vt0.c1)))AND(t2.c1)))>(CAST(t2.c6 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL * FROM t2, t0 WHERE (x'') ORDER BY (t2.c1 IN ()) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t2 NOT INDEXED, t0 ORDER BY (t2.c1 IN ()) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM t2, t0 WHERE (x'') ORDER BY (t2.c1 IN ()) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t2 NOT INDEXED, t0 ORDER BY (t2.c1 IN ()) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM t2, t0 WHERE (x'') ORDER BY (t2.c1 IN ()) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))OR(t0.c0))))==((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST, CASE ((((0xffffffffe52be9e5)AND(0.8183872873704953)))OR(t0.c0))  WHEN (NOT (t0.c0)) THEN (t0.c0 IN ()) END, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0)OR(t0.c0)))OR(t0.c0))))==((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST, CASE ((((0xffffffffe52be9e5)AND(0.8183872873704953)))OR(t0.c0))  WHEN (NOT (t0.c0)) THEN (t0.c0 IN ()) END, t0.c0 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))OR(t0.c0))))==((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST, CASE ((((0xffffffffe52be9e5)AND(0.8183872873704953)))OR(t0.c0))  WHEN (NOT (t0.c0)) THEN (t0.c0 IN ()) END, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0)OR(t0.c0)))OR(t0.c0))))==((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST, CASE ((((0xffffffffe52be9e5)AND(0.8183872873704953)))OR(t0.c0))  WHEN (NOT (t0.c0)) THEN (t0.c0 IN ()) END, t0.c0 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))OR(t0.c0))))==((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST, CASE ((((0xffffffffe52be9e5)AND(0.8183872873704953)))OR(t0.c0))  WHEN (NOT (t0.c0)) THEN (t0.c0 IN ()) END, t0.c0 DESC;
SELECT ALL * FROM t0 LEFT OUTER JOIN t2 ON (((t2.c0 IN (vt0.c1, t0.c0)))AND((((vt0.c1)) NOT BETWEEN ((t2.c1)) AND ((vt0.c1))))) INNER JOIN vt0 ON CAST(((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c2)) AS INTEGER) WHERE ('-992690400') ORDER BY 0.8943063699109318 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-992690400') IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON (((t2.c0 IN (vt0.c1, t0.c0)))AND((((vt0.c1)) NOT BETWEEN ((t2.c1)) AND ((vt0.c1))))) INNER JOIN vt0 ON CAST(((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c2)) AS INTEGER) ORDER BY 0.8943063699109318 ASC  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN t2 ON (((t2.c0 IN (vt0.c1, t0.c0)))AND((((vt0.c1)) NOT BETWEEN ((t2.c1)) AND ((vt0.c1))))) INNER JOIN vt0 ON CAST(((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c2)) AS INTEGER) WHERE ('-992690400') ORDER BY 0.8943063699109318 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-992690400') IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON (((t2.c0 IN (vt0.c1, t0.c0)))AND((((vt0.c1)) NOT BETWEEN ((t2.c1)) AND ((vt0.c1))))) INNER JOIN vt0 ON CAST(((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c2)) AS INTEGER) ORDER BY 0.8943063699109318 ASC  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN t2 ON (((t2.c0 IN (vt0.c1, t0.c0)))AND((((vt0.c1)) NOT BETWEEN ((t2.c1)) AND ((vt0.c1))))) INNER JOIN vt0 ON CAST(((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c2)) AS INTEGER) WHERE ('-992690400') ORDER BY 0.8943063699109318 ASC  NULLS FIRST;
SELECT ALL * FROM t0, t2 WHERE (((((((((((((((t2.c1)<=(t2.c6)))OR(((t2.c6) IS TRUE))))AND(CASE t0.c0  WHEN t2.c6 THEN t2.c1 END)))OR((t2.c0 IN ()))))OR(((t2.c1)IS NOT(t0.c0)))))OR(t2.c0 COLLATE NOCASE)))OR(((t2.c0) BETWEEN (t2.c6) AND (t2.c6))))) ORDER BY (((CASE t2.c1  WHEN t0.c0 THEN t2.c2 END, t2.c2 COLLATE RTRIM, ((t0.c0)<('0.72116461562606'))))<=((CASE t2.c0  WHEN t2.c2 THEN t2.c6 ELSE t2.c1 END, ((t2.c2)-(t2.c0)), LOWER(t2.c6)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((t2.c1)<=(t2.c6)))OR(((t2.c6) IS TRUE))))AND(CASE t0.c0  WHEN t2.c6 THEN t2.c1 END)))OR((t2.c0 IN ()))))OR(((t2.c1)IS NOT(t0.c0)))))OR(t2.c0 COLLATE NOCASE)))OR(((t2.c0) BETWEEN (t2.c6) AND (t2.c6))))) IS TRUE)  as count FROM t0, t2 ORDER BY (((CASE t2.c1  WHEN t0.c0 THEN t2.c2 END, t2.c2 COLLATE RTRIM, ((t0.c0)<('0.72116461562606'))))<=((CASE t2.c0  WHEN t2.c2 THEN t2.c6 ELSE t2.c1 END, ((t2.c2)-(t2.c0)), LOWER(t2.c6)))) DESC);
SELECT ALL * FROM t0, t2 WHERE (((((((((((((((t2.c1)<=(t2.c6)))OR(((t2.c6) IS TRUE))))AND(CASE t0.c0  WHEN t2.c6 THEN t2.c1 END)))OR((t2.c0 IN ()))))OR(((t2.c1)IS NOT(t0.c0)))))OR(t2.c0 COLLATE NOCASE)))OR(((t2.c0) BETWEEN (t2.c6) AND (t2.c6))))) ORDER BY (((CASE t2.c1  WHEN t0.c0 THEN t2.c2 END, t2.c2 COLLATE RTRIM, ((t0.c0)<('0.72116461562606'))))<=((CASE t2.c0  WHEN t2.c2 THEN t2.c6 ELSE t2.c1 END, ((t2.c2)-(t2.c0)), LOWER(t2.c6)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((t2.c1)<=(t2.c6)))OR(((t2.c6) IS TRUE))))AND(CASE t0.c0  WHEN t2.c6 THEN t2.c1 END)))OR((t2.c0 IN ()))))OR(((t2.c1)IS NOT(t0.c0)))))OR(t2.c0 COLLATE NOCASE)))OR(((t2.c0) BETWEEN (t2.c6) AND (t2.c6))))) IS TRUE)  as count FROM t0, t2 ORDER BY (((CASE t2.c1  WHEN t0.c0 THEN t2.c2 END, t2.c2 COLLATE RTRIM, ((t0.c0)<('0.72116461562606'))))<=((CASE t2.c0  WHEN t2.c2 THEN t2.c6 ELSE t2.c1 END, ((t2.c2)-(t2.c0)), LOWER(t2.c6)))) DESC);
SELECT ALL * FROM t0, t2 WHERE (((((((((((((((t2.c1)<=(t2.c6)))OR(((t2.c6) IS TRUE))))AND(CASE t0.c0  WHEN t2.c6 THEN t2.c1 END)))OR((t2.c0 IN ()))))OR(((t2.c1)IS NOT(t0.c0)))))OR(t2.c0 COLLATE NOCASE)))OR(((t2.c0) BETWEEN (t2.c6) AND (t2.c6))))) ORDER BY (((CASE t2.c1  WHEN t0.c0 THEN t2.c2 END, t2.c2 COLLATE RTRIM, ((t0.c0)<('0.72116461562606'))))<=((CASE t2.c0  WHEN t2.c2 THEN t2.c6 ELSE t2.c1 END, ((t2.c2)-(t2.c0)), LOWER(t2.c6)))) DESC;
SELECT ALL * FROM vt0 WHERE (0.11883768571235909);
SELECT SUM(count) FROM (SELECT ALL ((0.11883768571235909) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.11883768571235909);
SELECT SUM(count) FROM (SELECT ALL ((0.11883768571235909) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.11883768571235909);
SELECT COUNT(*) FROM t2, t0 WHERE ((((t2.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c1) IS TRUE) IN ())) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE ((((t2.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c1) IS TRUE) IN ())) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE ((((t2.c1) IS TRUE) IN ()));
SELECT COUNT(*) FROM t2 WHERE (UNICODE(((t2.c6) BETWEEN (t2.c0) AND (t2.c1)))) ORDER BY ((CASE WHEN NULL THEN t2.c2 ELSE t2.c0 END) BETWEEN ('-2077062726') AND (0x69e13b12));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((t2.c6) BETWEEN (t2.c0) AND (t2.c1)))) IS TRUE)  as count FROM t2 ORDER BY ((CASE WHEN NULL THEN t2.c2 ELSE t2.c0 END) BETWEEN ('-2077062726') AND (0X69e13b12)));
SELECT COUNT(*) FROM t2 WHERE (UNICODE(((t2.c6) BETWEEN (t2.c0) AND (t2.c1)))) ORDER BY ((CASE WHEN NULL THEN t2.c2 ELSE t2.c0 END) BETWEEN ('-2077062726') AND (0x69e13b12));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((t2.c6) BETWEEN (t2.c0) AND (t2.c1)))) IS TRUE)  as count FROM t2 ORDER BY ((CASE WHEN NULL THEN t2.c2 ELSE t2.c0 END) BETWEEN ('-2077062726') AND (0X69e13b12)));
SELECT COUNT(*) FROM t2 WHERE (UNICODE(((t2.c6) BETWEEN (t2.c0) AND (t2.c1)))) ORDER BY ((CASE WHEN NULL THEN t2.c2 ELSE t2.c0 END) BETWEEN ('-2077062726') AND (0x69e13b12));
SELECT * FROM t2, vt0, t0 WHERE (((-1801560645 COLLATE BINARY)-(''))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((-1801560645 COLLATE BINARY)-(''))) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY x'' DESC);
SELECT * FROM t2, vt0, t0 WHERE (((-1801560645 COLLATE BINARY)-(''))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((-1801560645 COLLATE BINARY)-(''))) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY x'' DESC);
SELECT * FROM t2, vt0, t0 WHERE (((-1801560645 COLLATE BINARY)-(''))) ORDER BY x'' DESC;
SELECT * FROM t0 WHERE (CAST((- (t0.c0)) AS NUMERIC)) ORDER BY CASE ((t0.c0) NOT NULL)  WHEN (((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))) THEN CAST('f<' AS REAL) END;
SELECT SUM(count) FROM (SELECT ((CAST((- (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0) NOT NULL)  WHEN (((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))) THEN CAST('f<' AS REAL) END);
SELECT * FROM t0 WHERE (CAST((- (t0.c0)) AS NUMERIC)) ORDER BY CASE ((t0.c0) NOT NULL)  WHEN (((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))) THEN CAST('f<' AS REAL) END;
SELECT SUM(count) FROM (SELECT ((CAST((- (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0) NOT NULL)  WHEN (((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))) THEN CAST('f<' AS REAL) END);
SELECT * FROM t0 WHERE (CAST((- (t0.c0)) AS NUMERIC)) ORDER BY CASE ((t0.c0) NOT NULL)  WHEN (((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))) THEN CAST('f<' AS REAL) END;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((((vt0.c1))<((vt0.c0))))))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER)  NULLS LAST, ((vt0.c0)<>(vt0.c1)) COLLATE BINARY  NULLS FIRST, '1540191344'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((((vt0.c1))<((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER)  NULLS LAST, ((vt0.c0)!=(vt0.c1)) COLLATE BINARY  NULLS FIRST, '1540191344'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((((vt0.c1))<((vt0.c0))))))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER)  NULLS LAST, ((vt0.c0)<>(vt0.c1)) COLLATE BINARY  NULLS FIRST, '1540191344'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((((vt0.c1))<((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER)  NULLS LAST, ((vt0.c0)!=(vt0.c1)) COLLATE BINARY  NULLS FIRST, '1540191344'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((NULL)) AND (((((vt0.c1))<((vt0.c0))))))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER)  NULLS LAST, ((vt0.c0)<>(vt0.c1)) COLLATE BINARY  NULLS FIRST, '1540191344'  NULLS LAST;
SELECT * FROM t2, vt0 WHERE (-6.26586385E8);
SELECT SUM(count) FROM (SELECT ALL ((-6.26586385E8) IS TRUE)  as count FROM t2, vt0);
SELECT * FROM t2, vt0 WHERE (-6.26586385E8);
SELECT SUM(count) FROM (SELECT ALL ((-6.26586385E8) IS TRUE)  as count FROM t2, vt0);
SELECT * FROM t2, vt0 WHERE (-6.26586385E8);
SELECT COUNT(*) FROM t2, t0 WHERE (NULL) ORDER BY ((((t2.c1)||(t2.c6)))OR(((t2.c6)<(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t2, t0 ORDER BY ((((t2.c1)||(t2.c6)))OR(((t2.c6)<(t0.c0)))));
SELECT COUNT(*) FROM t2, t0 WHERE (NULL) ORDER BY ((((t2.c1)||(t2.c6)))OR(((t2.c6)<(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t2, t0 ORDER BY ((((t2.c1)||(t2.c6)))OR(((t2.c6)<(t0.c0)))));
SELECT COUNT(*) FROM t2, t0 WHERE (NULL) ORDER BY ((((t2.c1)||(t2.c6)))OR(((t2.c6)<(t0.c0))));
SELECT * FROM t0 NATURAL JOIN t2 WHERE ((((t2.c1)) NOT BETWEEN ((t2.c1)) AND ((''))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t2.c1)) NOT BETWEEN ((t2.c1)) AND ((''))) COLLATE NOCASE) IS TRUE)  as count FROM t0 NATURAL JOIN t2);
SELECT * FROM t0 NATURAL JOIN t2 WHERE ((((t2.c1)) NOT BETWEEN ((t2.c1)) AND ((''))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t2.c1)) NOT BETWEEN ((t2.c1)) AND ((''))) COLLATE NOCASE) IS TRUE)  as count FROM t0 NATURAL JOIN t2);
SELECT * FROM t0 NATURAL JOIN t2 WHERE ((((t2.c1)) NOT BETWEEN ((t2.c1)) AND ((''))) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, NULL))))IS(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, NULL))))IS(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, NULL))))IS(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, NULL))))IS(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, vt0.c0, NULL))))IS(CAST(t0.c0 AS BLOB))));
SELECT ALL * FROM t0 WHERE ((+ (t0.c0))) ORDER BY (CAST(t0.c0 AS TEXT) IN ()) DESC, CAST(t0.c0 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c0 AS TEXT) IN ()) DESC, CAST(t0.c0 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((+ (t0.c0))) ORDER BY (CAST(t0.c0 AS TEXT) IN ()) DESC, CAST(t0.c0 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c0 AS TEXT) IN ()) DESC, CAST(t0.c0 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((+ (t0.c0))) ORDER BY (CAST(t0.c0 AS TEXT) IN ()) DESC, CAST(t0.c0 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM t2, vt0 NATURAL JOIN t0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t2, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM t2, vt0 NATURAL JOIN t0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t2, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM t2, vt0 NATURAL JOIN t0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM t2, vt0 WHERE ('204034656');
SELECT SUM(count) FROM (SELECT ALL (('204034656') IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE ('204034656');
SELECT SUM(count) FROM (SELECT ALL (('204034656') IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE ('204034656');
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE ((((NULL)<=('-626586385')) IN (((((t0.c0)OR(t2.c1)))AND(t2.c0))))) ORDER BY ('1104125406' IN ((+ (0xffffffff97ef0de9))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL)<=('-626586385')) IN (((((t0.c0)OR(t2.c1)))AND(t2.c0))))) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY ('1104125406' IN ((+ (0xffffffff97ef0de9))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE ((((NULL)<=('-626586385')) IN (((((t0.c0)OR(t2.c1)))AND(t2.c0))))) ORDER BY ('1104125406' IN ((+ (0xffffffff97ef0de9))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL)<=('-626586385')) IN (((((t0.c0)OR(t2.c1)))AND(t2.c0))))) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY ('1104125406' IN ((+ (0xffffffff97ef0de9))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE ((((NULL)<=('-626586385')) IN (((((t0.c0)OR(t2.c1)))AND(t2.c0))))) ORDER BY ('1104125406' IN ((+ (0xffffffff97ef0de9))))  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))>(((NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))>(((NOT (t0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))>(((NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))>(((NOT (t0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))>(((NOT (t0.c0))))));
SELECT ALL * FROM t2, vt0 LEFT OUTER JOIN t0 ON (+ (((((0.0522735185557498)OR(t0.c0)))OR(t0.c0)))) WHERE (((CAST(t0.c0 AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM t2, vt0 LEFT OUTER JOIN t0 ON (+ (((((0.0522735185557498)OR(t0.c0)))OR(t0.c0)))));
SELECT ALL * FROM t2, vt0 LEFT OUTER JOIN t0 ON (+ (((((0.0522735185557498)OR(t0.c0)))OR(t0.c0)))) WHERE (((CAST(t0.c0 AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM t2, vt0 LEFT OUTER JOIN t0 ON (+ (((((0.0522735185557498)OR(t0.c0)))OR(t0.c0)))));
SELECT ALL * FROM t2, vt0 LEFT OUTER JOIN t0 ON (+ (((((0.0522735185557498)OR(t0.c0)))OR(t0.c0)))) WHERE (((CAST(t0.c0 AS INTEGER)) NOT NULL));
SELECT ALL * FROM t2 NATURAL JOIN t0 WHERE (((COALESCE(t0.c0, t2.c6, t0.c0, t2.c6)) BETWEEN ((t0.c0 IN ())) AND (((t2.c0)|(x''))))) ORDER BY 0.07401725549470017, ((((t2.c1) BETWEEN (t2.c0) AND (NULL)))<<((- (t2.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(t0.c0, t2.c6, t0.c0, t2.c6)) BETWEEN ((t0.c0 IN ())) AND (((t2.c0)|(x''))))) IS TRUE)  as count FROM t2 NATURAL JOIN t0 ORDER BY 0.07401725549470017, ((((t2.c1) BETWEEN (t2.c0) AND (NULL)))<<((- (t2.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t2 NATURAL JOIN t0 WHERE (((COALESCE(t0.c0, t2.c6, t0.c0, t2.c6)) BETWEEN ((t0.c0 IN ())) AND (((t2.c0)|(x''))))) ORDER BY 0.07401725549470017, ((((t2.c1) BETWEEN (t2.c0) AND (NULL)))<<((- (t2.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(t0.c0, t2.c6, t0.c0, t2.c6)) BETWEEN ((t0.c0 IN ())) AND (((t2.c0)|(x''))))) IS TRUE)  as count FROM t2 NATURAL JOIN t0 ORDER BY 0.07401725549470017, ((((t2.c1) BETWEEN (t2.c0) AND (NULL)))<<((- (t2.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t2 NATURAL JOIN t0 WHERE (((COALESCE(t0.c0, t2.c6, t0.c0, t2.c6)) BETWEEN ((t0.c0 IN ())) AND (((t2.c0)|(x''))))) ORDER BY 0.07401725549470017, ((((t2.c1) BETWEEN (t2.c0) AND (NULL)))<<((- (t2.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((0X12e6a9a9) NOT BETWEEN (vt0.c0) AND (t0.c0)))+(((vt0.c0)|(t0.c0))))) ORDER BY '-550638309'  NULLS FIRST, '-946466082' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0x12e6a9a9) NOT BETWEEN (vt0.c0) AND (t0.c0)))+(((vt0.c0)|(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY '-550638309'  NULLS FIRST, '-946466082' DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((0X12e6a9a9) NOT BETWEEN (vt0.c0) AND (t0.c0)))+(((vt0.c0)|(t0.c0))))) ORDER BY '-550638309'  NULLS FIRST, '-946466082' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0x12e6a9a9) NOT BETWEEN (vt0.c0) AND (t0.c0)))+(((vt0.c0)|(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY '-550638309'  NULLS FIRST, '-946466082' DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((0X12e6a9a9) NOT BETWEEN (vt0.c0) AND (t0.c0)))+(((vt0.c0)|(t0.c0))))) ORDER BY '-550638309'  NULLS FIRST, '-946466082' DESC  NULLS FIRST;
SELECT ALL * FROM t0, t2 WHERE ((+ (((((t0.c0)OR(t2.c2)))AND(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c0)OR(t2.c2)))AND(t2.c0))))) IS TRUE)  as count FROM t0, t2 NOT INDEXED);
SELECT ALL * FROM t0, t2 WHERE ((+ (((((t0.c0)OR(t2.c2)))AND(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c0)OR(t2.c2)))AND(t2.c0))))) IS TRUE)  as count FROM t0, t2 NOT INDEXED);
SELECT ALL * FROM t0, t2 WHERE ((+ (((((t0.c0)OR(t2.c2)))AND(t2.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)))<('')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(vt0.c1)))<(''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)))<('')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(vt0.c1)))<(''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)))<('')));
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)LIKE(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)LIKE(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0)LIKE(t0.c0)))));
SELECT COUNT(*) FROM t0, vt0, t2 WHERE ('?NLf0');
SELECT SUM(count) FROM (SELECT ALL (('?NLf0') IS TRUE)  as count FROM t0, vt0, t2);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE ('?NLf0');
SELECT SUM(count) FROM (SELECT ALL (('?NLf0') IS TRUE)  as count FROM t0, vt0, t2);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE ('?NLf0');
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) IS FALSE) END) ORDER BY (((((((vt0.c0))<((vt0.c1))))OR(((vt0.c0)IS NOT(vt0.c1)))))OR(((('mOyz'))<((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0))<((vt0.c1))))OR(((vt0.c0)IS NOT(vt0.c1)))))OR(((('mOyz'))<((vt0.c1))))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) IS FALSE) END) ORDER BY (((((((vt0.c0))<((vt0.c1))))OR(((vt0.c0)IS NOT(vt0.c1)))))OR(((('mOyz'))<((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0))<((vt0.c1))))OR(((vt0.c0)IS NOT(vt0.c1)))))OR(((('mOyz'))<((vt0.c1))))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) IS FALSE) END) ORDER BY (((((((vt0.c0))<((vt0.c1))))OR(((vt0.c0)IS NOT(vt0.c1)))))OR(((('mOyz'))<((vt0.c1))))) ASC;
SELECT * FROM t2, vt0 CROSS JOIN t0 ON ((CASE t0.c0  WHEN t2.c1 THEN vt0.c0 WHEN t2.c2 THEN vt0.c0 WHEN vt0.c1 THEN t2.c1 WHEN vt0.c0 THEN t2.c1 WHEN t2.c1 THEN 0.05529302386188395 END)<<((- (vt0.c1)))) WHERE ((CASE x''  WHEN t2.c0 THEN t2.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE x''  WHEN t2.c0 THEN t2.c0 END IN ())) IS TRUE)  as count FROM t2, vt0 CROSS JOIN t0 ON ((CASE t0.c0  WHEN t2.c1 THEN vt0.c0 WHEN t2.c2 THEN vt0.c0 WHEN vt0.c1 THEN t2.c1 WHEN vt0.c0 THEN t2.c1 WHEN t2.c1 THEN 0.05529302386188395 END)<<((- (vt0.c1)))));
SELECT * FROM t2, vt0 CROSS JOIN t0 ON ((CASE t0.c0  WHEN t2.c1 THEN vt0.c0 WHEN t2.c2 THEN vt0.c0 WHEN vt0.c1 THEN t2.c1 WHEN vt0.c0 THEN t2.c1 WHEN t2.c1 THEN 0.05529302386188395 END)<<((- (vt0.c1)))) WHERE ((CASE x''  WHEN t2.c0 THEN t2.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE x''  WHEN t2.c0 THEN t2.c0 END IN ())) IS TRUE)  as count FROM t2, vt0 CROSS JOIN t0 ON ((CASE t0.c0  WHEN t2.c1 THEN vt0.c0 WHEN t2.c2 THEN vt0.c0 WHEN vt0.c1 THEN t2.c1 WHEN vt0.c0 THEN t2.c1 WHEN t2.c1 THEN 0.05529302386188395 END)<<((- (vt0.c1)))));
SELECT * FROM t2, vt0 CROSS JOIN t0 ON ((CASE t0.c0  WHEN t2.c1 THEN vt0.c0 WHEN t2.c2 THEN vt0.c0 WHEN vt0.c1 THEN t2.c1 WHEN vt0.c0 THEN t2.c1 WHEN t2.c1 THEN 0.05529302386188395 END)<<((- (vt0.c1)))) WHERE ((CASE x''  WHEN t2.c0 THEN t2.c0 END IN ()));
SELECT COUNT(*) FROM vt0, t0, t2 WHERE ((((t2.c0))>(('1876715206'))) COLLATE NOCASE) ORDER BY ((LIKELY(DISTINCT '&l')) NOTNULL)  NULLS FIRST, ((((t0.c0) NOTNULL)) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((~ (t2.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t2.c0))>(('1876715206'))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY ((LIKELY(DISTINCT '&l')) NOTNULL)  NULLS FIRST, ((((t0.c0) NOTNULL)) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((~ (t2.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE ((((t2.c0))>(('1876715206'))) COLLATE NOCASE) ORDER BY ((LIKELY(DISTINCT '&l')) NOTNULL)  NULLS FIRST, ((((t0.c0) NOTNULL)) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((~ (t2.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t2.c0))>(('1876715206'))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY ((LIKELY(DISTINCT '&l')) NOTNULL)  NULLS FIRST, ((((t0.c0) NOTNULL)) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((~ (t2.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE ((((t2.c0))>(('1876715206'))) COLLATE NOCASE) ORDER BY ((LIKELY(DISTINCT '&l')) NOTNULL)  NULLS FIRST, ((((t0.c0) NOTNULL)) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((~ (t2.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0 NOT INDEXED, t2, t0 WHERE ((((t2.c0, t2.c6, t2.c2)) NOT BETWEEN ((t2.c2 COLLATE NOCASE, (((t2.c0))<=((t0.c0))), CASE t2.c6  WHEN t0.c0 THEN t2.c0 WHEN vt0.c1 THEN t0.c0 WHEN t2.c1 THEN t2.c1 WHEN t2.c2 THEN t0.c0 WHEN vt0.c0 THEN t2.c1 ELSE 0Xffffffffa78266c3 END)) AND ((((((vt0.c1)OR(t2.c0)))AND(t2.c0)), ((t0.c0) NOTNULL), (t0.c0 IN ()))))) ORDER BY ((t2.c0 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0, t2.c6, t2.c2)) NOT BETWEEN ((t2.c2 COLLATE NOCASE, (((t2.c0))<=((t0.c0))), CASE t2.c6  WHEN t0.c0 THEN t2.c0 WHEN vt0.c1 THEN t0.c0 WHEN t2.c1 THEN t2.c1 WHEN t2.c2 THEN t0.c0 WHEN vt0.c0 THEN t2.c1 ELSE 0xffffffffa78266c3 END)) AND ((((((vt0.c1)OR(t2.c0)))AND(t2.c0)), ((t0.c0) NOTNULL), (t0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY ((t2.c0 IN ()) IN ()) DESC);
SELECT ALL * FROM vt0 NOT INDEXED, t2, t0 WHERE ((((t2.c0, t2.c6, t2.c2)) NOT BETWEEN ((t2.c2 COLLATE NOCASE, (((t2.c0))<=((t0.c0))), CASE t2.c6  WHEN t0.c0 THEN t2.c0 WHEN vt0.c1 THEN t0.c0 WHEN t2.c1 THEN t2.c1 WHEN t2.c2 THEN t0.c0 WHEN vt0.c0 THEN t2.c1 ELSE 0Xffffffffa78266c3 END)) AND ((((((vt0.c1)OR(t2.c0)))AND(t2.c0)), ((t0.c0) NOTNULL), (t0.c0 IN ()))))) ORDER BY ((t2.c0 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0, t2.c6, t2.c2)) NOT BETWEEN ((t2.c2 COLLATE NOCASE, (((t2.c0))<=((t0.c0))), CASE t2.c6  WHEN t0.c0 THEN t2.c0 WHEN vt0.c1 THEN t0.c0 WHEN t2.c1 THEN t2.c1 WHEN t2.c2 THEN t0.c0 WHEN vt0.c0 THEN t2.c1 ELSE 0xffffffffa78266c3 END)) AND ((((((vt0.c1)OR(t2.c0)))AND(t2.c0)), ((t0.c0) NOTNULL), (t0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY ((t2.c0 IN ()) IN ()) DESC);
SELECT ALL * FROM vt0 NOT INDEXED, t2, t0 WHERE ((((t2.c0, t2.c6, t2.c2)) NOT BETWEEN ((t2.c2 COLLATE NOCASE, (((t2.c0))<=((t0.c0))), CASE t2.c6  WHEN t0.c0 THEN t2.c0 WHEN vt0.c1 THEN t0.c0 WHEN t2.c1 THEN t2.c1 WHEN t2.c2 THEN t0.c0 WHEN vt0.c0 THEN t2.c1 ELSE 0Xffffffffa78266c3 END)) AND ((((((vt0.c1)OR(t2.c0)))AND(t2.c0)), ((t0.c0) NOTNULL), (t0.c0 IN ()))))) ORDER BY ((t2.c0 IN ()) IN ()) DESC;
SELECT COUNT(*) FROM t2, t0 WHERE (((((((((((((((((t0.c0)AND(t2.c2)))OR(t2.c2)))AND(t2.c0)))AND(t2.c2)))OR(t0.c0)))AND(t0.c0)))AND((((t0.c0))!=((t2.c0))))))AND(CHANGES()))) ORDER BY ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c2)) COLLATE NOCASE  NULLS FIRST, CASE NULL  WHEN CASE t2.c0  WHEN t0.c0 THEN t2.c0 END THEN NULL END DESC  NULLS FIRST, CAST(((((t2.c0)AND(t0.c0)))AND(x'')) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c0)AND(t2.c2)))OR(t2.c2)))AND(t2.c0)))AND(t2.c2)))OR(t0.c0)))AND(t0.c0)))AND((((t0.c0))!=((t2.c0))))))AND(CHANGES()))) IS TRUE)  as count FROM t2, t0 ORDER BY ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c2)) COLLATE NOCASE  NULLS FIRST, CASE NULL  WHEN CASE t2.c0  WHEN t0.c0 THEN t2.c0 END THEN NULL END DESC  NULLS FIRST, CAST(((((t2.c0)AND(t0.c0)))AND(x'')) AS BLOB) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2, t0 WHERE (((((((((((((((((t0.c0)AND(t2.c2)))OR(t2.c2)))AND(t2.c0)))AND(t2.c2)))OR(t0.c0)))AND(t0.c0)))AND((((t0.c0))!=((t2.c0))))))AND(CHANGES()))) ORDER BY ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c2)) COLLATE NOCASE  NULLS FIRST, CASE NULL  WHEN CASE t2.c0  WHEN t0.c0 THEN t2.c0 END THEN NULL END DESC  NULLS FIRST, CAST(((((t2.c0)AND(t0.c0)))AND(x'')) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c0)AND(t2.c2)))OR(t2.c2)))AND(t2.c0)))AND(t2.c2)))OR(t0.c0)))AND(t0.c0)))AND((((t0.c0))!=((t2.c0))))))AND(CHANGES()))) IS TRUE)  as count FROM t2, t0 ORDER BY ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c2)) COLLATE NOCASE  NULLS FIRST, CASE NULL  WHEN CASE t2.c0  WHEN t0.c0 THEN t2.c0 END THEN NULL END DESC  NULLS FIRST, CAST(((((t2.c0)AND(t0.c0)))AND(x'')) AS BLOB) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2, t0 WHERE (((((((((((((((((t0.c0)AND(t2.c2)))OR(t2.c2)))AND(t2.c0)))AND(t2.c2)))OR(t0.c0)))AND(t0.c0)))AND((((t0.c0))!=((t2.c0))))))AND(CHANGES()))) ORDER BY ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c2)) COLLATE NOCASE  NULLS FIRST, CASE NULL  WHEN CASE t2.c0  WHEN t0.c0 THEN t2.c0 END THEN NULL END DESC  NULLS FIRST, CAST(((((t2.c0)AND(t0.c0)))AND(x'')) AS BLOB) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t2 WHERE (CASE CASE WHEN 888985164 THEN t2.c6 WHEN t2.c0 THEN NULL WHEN t2.c6 THEN t2.c0 END  WHEN 0Xffffffffbed9fb00 THEN CAST('-2017851678' AS REAL) END) ORDER BY (((((t2.c1)AND(t2.c6)))OR(t2.c6)) IN ()), ((((+ (t2.c1))))>=((t2.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN 888985164 THEN t2.c6 WHEN t2.c0 THEN NULL WHEN t2.c6 THEN t2.c0 END  WHEN 0xffffffffbed9fb00 THEN CAST('-2017851678' AS REAL) END) IS TRUE)  as count FROM t2 ORDER BY (((((t2.c1)AND(t2.c6)))OR(t2.c6)) IN ()), ((((+ (t2.c1))))>=((t2.c0))) DESC);
SELECT ALL COUNT(*) FROM t2 WHERE (CASE CASE WHEN 888985164 THEN t2.c6 WHEN t2.c0 THEN NULL WHEN t2.c6 THEN t2.c0 END  WHEN 0Xffffffffbed9fb00 THEN CAST('-2017851678' AS REAL) END) ORDER BY (((((t2.c1)AND(t2.c6)))OR(t2.c6)) IN ()), ((((+ (t2.c1))))>=((t2.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN 888985164 THEN t2.c6 WHEN t2.c0 THEN NULL WHEN t2.c6 THEN t2.c0 END  WHEN 0xffffffffbed9fb00 THEN CAST('-2017851678' AS REAL) END) IS TRUE)  as count FROM t2 ORDER BY (((((t2.c1)AND(t2.c6)))OR(t2.c6)) IN ()), ((((+ (t2.c1))))>=((t2.c0))) DESC);
SELECT ALL COUNT(*) FROM t2 WHERE (CASE CASE WHEN 888985164 THEN t2.c6 WHEN t2.c0 THEN NULL WHEN t2.c6 THEN t2.c0 END  WHEN 0Xffffffffbed9fb00 THEN CAST('-2017851678' AS REAL) END) ORDER BY (((((t2.c1)AND(t2.c6)))OR(t2.c6)) IN ()), ((((+ (t2.c1))))>=((t2.c0))) DESC;
SELECT ALL COUNT(*) FROM t2, vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t2.c1)), ((t2.c2) IS TRUE), TYPEOF(vt0.c0)))>((CASE vt0.c1  WHEN vt0.c1 THEN t2.c2 WHEN t2.c2 THEN vt0.c1 WHEN t2.c0 THEN t2.c2 ELSE x'' END, CAST(t2.c1 AS TEXT), json_insert(t2.c2, t2.c6, t2.c1, t2.c6, vt0.c0))))) ORDER BY (+ (((t2.c2) ISNULL))) ASC  NULLS LAST, (((t2.c1 IN ()))IS(((vt0.c1)LIKE(t2.c6)))) ASC  NULLS LAST, ((0.04987456333188767) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t2.c1)), ((t2.c2) IS TRUE), TYPEOF(vt0.c0)))>((CASE vt0.c1  WHEN vt0.c1 THEN t2.c2 WHEN t2.c2 THEN vt0.c1 WHEN t2.c0 THEN t2.c2 ELSE x'' END, CAST(t2.c1 AS TEXT), json_insert(t2.c2, t2.c6, t2.c1, t2.c6, vt0.c0))))) IS TRUE)  as count FROM t2, vt0 NOT INDEXED ORDER BY (+ (((t2.c2) ISNULL))) ASC  NULLS LAST, (((t2.c1 IN ()))IS(((vt0.c1)LIKE(t2.c6)))) ASC  NULLS LAST, ((0.04987456333188767) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t2.c1)), ((t2.c2) IS TRUE), TYPEOF(vt0.c0)))>((CASE vt0.c1  WHEN vt0.c1 THEN t2.c2 WHEN t2.c2 THEN vt0.c1 WHEN t2.c0 THEN t2.c2 ELSE x'' END, CAST(t2.c1 AS TEXT), json_insert(t2.c2, t2.c6, t2.c1, t2.c6, vt0.c0))))) ORDER BY (+ (((t2.c2) ISNULL))) ASC  NULLS LAST, (((t2.c1 IN ()))IS(((vt0.c1)LIKE(t2.c6)))) ASC  NULLS LAST, ((0.04987456333188767) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t2.c1)), ((t2.c2) IS TRUE), TYPEOF(vt0.c0)))>((CASE vt0.c1  WHEN vt0.c1 THEN t2.c2 WHEN t2.c2 THEN vt0.c1 WHEN t2.c0 THEN t2.c2 ELSE x'' END, CAST(t2.c1 AS TEXT), json_insert(t2.c2, t2.c6, t2.c1, t2.c6, vt0.c0))))) IS TRUE)  as count FROM t2, vt0 NOT INDEXED ORDER BY (+ (((t2.c2) ISNULL))) ASC  NULLS LAST, (((t2.c1 IN ()))IS(((vt0.c1)LIKE(t2.c6)))) ASC  NULLS LAST, ((0.04987456333188767) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t2.c1)), ((t2.c2) IS TRUE), TYPEOF(vt0.c0)))>((CASE vt0.c1  WHEN vt0.c1 THEN t2.c2 WHEN t2.c2 THEN vt0.c1 WHEN t2.c0 THEN t2.c2 ELSE x'' END, CAST(t2.c1 AS TEXT), json_insert(t2.c2, t2.c6, t2.c1, t2.c6, vt0.c0))))) ORDER BY (+ (((t2.c2) ISNULL))) ASC  NULLS LAST, (((t2.c1 IN ()))IS(((vt0.c1)LIKE(t2.c6)))) ASC  NULLS LAST, ((0.04987456333188767) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (((t2.c2) ISNULL)) ORDER BY ((TRIM(DISTINCT t2.c6, vt0.c0))+(CASE vt0.c0  WHEN t2.c6 THEN vt0.c0 WHEN vt0.c1 THEN t2.c1 WHEN t2.c2 THEN t2.c0 END))  NULLS FIRST, ((+ (0xffffffff987a3ae6)) IN ()), TRIM(((t2.c2) NOTNULL), -905375105 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t2.c2) ISNULL)) IS TRUE)  as count FROM t2, vt0 ORDER BY ((TRIM(DISTINCT t2.c6, vt0.c0))+(CASE vt0.c0  WHEN t2.c6 THEN vt0.c0 WHEN vt0.c1 THEN t2.c1 WHEN t2.c2 THEN t2.c0 END))  NULLS FIRST, ((+ (0xffffffff987a3ae6)) IN ()), TRIM(((t2.c2) NOTNULL), -905375105 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (((t2.c2) ISNULL)) ORDER BY ((TRIM(DISTINCT t2.c6, vt0.c0))+(CASE vt0.c0  WHEN t2.c6 THEN vt0.c0 WHEN vt0.c1 THEN t2.c1 WHEN t2.c2 THEN t2.c0 END))  NULLS FIRST, ((+ (0xffffffff987a3ae6)) IN ()), TRIM(((t2.c2) NOTNULL), -905375105 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t2.c2) ISNULL)) IS TRUE)  as count FROM t2, vt0 ORDER BY ((TRIM(DISTINCT t2.c6, vt0.c0))+(CASE vt0.c0  WHEN t2.c6 THEN vt0.c0 WHEN vt0.c1 THEN t2.c1 WHEN t2.c2 THEN t2.c0 END))  NULLS FIRST, ((+ (0xffffffff987a3ae6)) IN ()), TRIM(((t2.c2) NOTNULL), -905375105 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (((t2.c2) ISNULL)) ORDER BY ((TRIM(DISTINCT t2.c6, vt0.c0))+(CASE vt0.c0  WHEN t2.c6 THEN vt0.c0 WHEN vt0.c1 THEN t2.c1 WHEN t2.c2 THEN t2.c0 END))  NULLS FIRST, ((+ (0xffffffff987a3ae6)) IN ()), TRIM(((t2.c2) NOTNULL), -905375105 COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((t2.c1)||('')) COLLATE BINARY) ORDER BY CAST(CASE WHEN t0.c0 THEN vt0.c1 WHEN t2.c2 THEN vt0.c1 WHEN x'3a22' THEN vt0.c1 WHEN vt0.c0 THEN t2.c0 WHEN NULL THEN t0.c0 ELSE t2.c2 END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c1)||('')) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY CAST(CASE WHEN t0.c0 THEN vt0.c1 WHEN t2.c2 THEN vt0.c1 WHEN x'3a22' THEN vt0.c1 WHEN vt0.c0 THEN t2.c0 WHEN NULL THEN t0.c0 ELSE t2.c2 END AS INTEGER) DESC);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((t2.c1)||('')) COLLATE BINARY) ORDER BY CAST(CASE WHEN t0.c0 THEN vt0.c1 WHEN t2.c2 THEN vt0.c1 WHEN x'3a22' THEN vt0.c1 WHEN vt0.c0 THEN t2.c0 WHEN NULL THEN t0.c0 ELSE t2.c2 END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c1)||('')) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY CAST(CASE WHEN t0.c0 THEN vt0.c1 WHEN t2.c2 THEN vt0.c1 WHEN x'3a22' THEN vt0.c1 WHEN vt0.c0 THEN t2.c0 WHEN NULL THEN t0.c0 ELSE t2.c2 END AS INTEGER) DESC);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((t2.c1)||('')) COLLATE BINARY) ORDER BY CAST(CASE WHEN t0.c0 THEN vt0.c1 WHEN t2.c2 THEN vt0.c1 WHEN x'3a22' THEN vt0.c1 WHEN vt0.c0 THEN t2.c0 WHEN NULL THEN t0.c0 ELSE t2.c2 END AS INTEGER) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY 'dh~' DESC, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY 'dh~' DESC, ''  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY 'dh~' DESC, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY 'dh~' DESC, ''  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY 'dh~' DESC, ''  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN t2 ON ((CASE WHEN 0xffffffffca5fdc15 THEN t2.c6 ELSE t2.c1 END)+(CAST(t2.c1 AS NUMERIC))) WHERE ((((t2.c1, 0.5652820509279963, 0.7284793652594731)) NOT BETWEEN (((~ (t2.c0)), x'', ((t2.c2) NOTNULL))) AND ((CASE t2.c6  WHEN t2.c2 THEN t2.c1 WHEN t2.c0 THEN t0.c0 WHEN '' THEN '1396839022' END, -2101735765, CASE WHEN t2.c6 THEN t2.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c1, 0.5652820509279963, 0.7284793652594731)) NOT BETWEEN (((~ (t2.c0)), x'', ((t2.c2) NOTNULL))) AND ((CASE t2.c6  WHEN t2.c2 THEN t2.c1 WHEN t2.c0 THEN t0.c0 WHEN '' THEN '1396839022' END, -2101735765, CASE WHEN t2.c6 THEN t2.c0 END)))) IS TRUE)  as count FROM t0 CROSS JOIN t2 ON ((CASE WHEN 0Xffffffffca5fdc15 THEN t2.c6 ELSE t2.c1 END)+(CAST(t2.c1 AS NUMERIC))));
SELECT COUNT(*) FROM t0 CROSS JOIN t2 ON ((CASE WHEN 0xffffffffca5fdc15 THEN t2.c6 ELSE t2.c1 END)+(CAST(t2.c1 AS NUMERIC))) WHERE ((((t2.c1, 0.5652820509279963, 0.7284793652594731)) NOT BETWEEN (((~ (t2.c0)), x'', ((t2.c2) NOTNULL))) AND ((CASE t2.c6  WHEN t2.c2 THEN t2.c1 WHEN t2.c0 THEN t0.c0 WHEN '' THEN '1396839022' END, -2101735765, CASE WHEN t2.c6 THEN t2.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c1, 0.5652820509279963, 0.7284793652594731)) NOT BETWEEN (((~ (t2.c0)), x'', ((t2.c2) NOTNULL))) AND ((CASE t2.c6  WHEN t2.c2 THEN t2.c1 WHEN t2.c0 THEN t0.c0 WHEN '' THEN '1396839022' END, -2101735765, CASE WHEN t2.c6 THEN t2.c0 END)))) IS TRUE)  as count FROM t0 CROSS JOIN t2 ON ((CASE WHEN 0Xffffffffca5fdc15 THEN t2.c6 ELSE t2.c1 END)+(CAST(t2.c1 AS NUMERIC))));
SELECT COUNT(*) FROM t0 CROSS JOIN t2 ON ((CASE WHEN 0xffffffffca5fdc15 THEN t2.c6 ELSE t2.c1 END)+(CAST(t2.c1 AS NUMERIC))) WHERE ((((t2.c1, 0.5652820509279963, 0.7284793652594731)) NOT BETWEEN (((~ (t2.c0)), x'', ((t2.c2) NOTNULL))) AND ((CASE t2.c6  WHEN t2.c2 THEN t2.c1 WHEN t2.c0 THEN t0.c0 WHEN '' THEN '1396839022' END, -2101735765, CASE WHEN t2.c6 THEN t2.c0 END))));
SELECT COUNT(*) FROM vt0, t2 WHERE (((x'') BETWEEN (UNLIKELY(vt0.c0)) AND (t2.c0))) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN ((((t2.c2)OR(vt0.c1)))AND(t2.c6)) THEN ((vt0.c1)<(vt0.c0)) ELSE ((vt0.c1) NOT NULL) END  NULLS LAST, ((((((((t2.c1)OR(x'')))AND(t2.c2)))OR(((((((((((((vt0.c1)AND(vt0.c0)))OR(NULL)))AND(t2.c1)))OR(t2.c6)))AND(vt0.c0)))OR(t2.c2)))))OR(LOWER(vt0.c0))), ((((t2.c0)GLOB(t2.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (UNLIKELY(vt0.c0)) AND (t2.c0))) IS TRUE)  as count FROM vt0, t2 ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN ((((t2.c2)OR(vt0.c1)))AND(t2.c6)) THEN ((vt0.c1)<(vt0.c0)) ELSE ((vt0.c1) NOT NULL) END  NULLS LAST, ((((((((t2.c1)OR(x'')))AND(t2.c2)))OR(((((((((((((vt0.c1)AND(vt0.c0)))OR(NULL)))AND(t2.c1)))OR(t2.c6)))AND(vt0.c0)))OR(t2.c2)))))OR(LOWER(vt0.c0))), ((((t2.c0)GLOB(t2.c2))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t2 WHERE (((x'') BETWEEN (UNLIKELY(vt0.c0)) AND (t2.c0))) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN ((((t2.c2)OR(vt0.c1)))AND(t2.c6)) THEN ((vt0.c1)<(vt0.c0)) ELSE ((vt0.c1) NOT NULL) END  NULLS LAST, ((((((((t2.c1)OR(x'')))AND(t2.c2)))OR(((((((((((((vt0.c1)AND(vt0.c0)))OR(NULL)))AND(t2.c1)))OR(t2.c6)))AND(vt0.c0)))OR(t2.c2)))))OR(LOWER(vt0.c0))), ((((t2.c0)GLOB(t2.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (UNLIKELY(vt0.c0)) AND (t2.c0))) IS TRUE)  as count FROM vt0, t2 ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN ((((t2.c2)OR(vt0.c1)))AND(t2.c6)) THEN ((vt0.c1)<(vt0.c0)) ELSE ((vt0.c1) NOT NULL) END  NULLS LAST, ((((((((t2.c1)OR(x'')))AND(t2.c2)))OR(((((((((((((vt0.c1)AND(vt0.c0)))OR(NULL)))AND(t2.c1)))OR(t2.c6)))AND(vt0.c0)))OR(t2.c2)))))OR(LOWER(vt0.c0))), ((((t2.c0)GLOB(t2.c2))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t2 WHERE (((x'') BETWEEN (UNLIKELY(vt0.c0)) AND (t2.c0))) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END  WHEN ((((t2.c2)OR(vt0.c1)))AND(t2.c6)) THEN ((vt0.c1)<(vt0.c0)) ELSE ((vt0.c1) NOT NULL) END  NULLS LAST, ((((((((t2.c1)OR(x'')))AND(t2.c2)))OR(((((((((((((vt0.c1)AND(vt0.c0)))OR(NULL)))AND(t2.c1)))OR(t2.c6)))AND(vt0.c0)))OR(t2.c2)))))OR(LOWER(vt0.c0))), ((((t2.c0)GLOB(t2.c2))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM vt0, t2, t0 WHERE (((vt0.c1 COLLATE BINARY)<<(((((t2.c2)OR(t2.c2)))AND(t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)<<(((((t2.c2)OR(t2.c2)))AND(t2.c0))))) IS TRUE)  as count FROM vt0, t2, t0);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE (((vt0.c1 COLLATE BINARY)<<(((((t2.c2)OR(t2.c2)))AND(t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)<<(((((t2.c2)OR(t2.c2)))AND(t2.c0))))) IS TRUE)  as count FROM vt0, t2, t0);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE (((vt0.c1 COLLATE BINARY)<<(((((t2.c2)OR(t2.c2)))AND(t2.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 IN ()), ((NULL) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))=((t0.c0, t0.c0 COLLATE BINARY, t0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ()), ((NULL) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))==((t0.c0, t0.c0 COLLATE BINARY, t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 IN ()), ((NULL) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))=((t0.c0, t0.c0 COLLATE BINARY, t0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ()), ((NULL) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))==((t0.c0, t0.c0 COLLATE BINARY, t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 IN ()), ((NULL) BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))=((t0.c0, t0.c0 COLLATE BINARY, t0.c0 COLLATE RTRIM))));
SELECT ALL * FROM t2 WHERE (-299793435);
SELECT SUM(count) FROM (SELECT ALL ((-299793435) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (-299793435);
SELECT SUM(count) FROM (SELECT ALL ((-299793435) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (-299793435);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c1 IN (vt0.c1)))AND(TYPEOF(DISTINCT 0.9387609643201504))))AND(((vt0.c1)%(vt0.c1))))) ORDER BY ((((CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c0 END)OR(t0.c0 COLLATE BINARY)))AND((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1 IN (vt0.c1)))AND(TYPEOF(DISTINCT 0.9387609643201504))))AND(((vt0.c1)%(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c0 END)OR(t0.c0 COLLATE BINARY)))AND((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT * FROM t0, vt0 WHERE ((((((vt0.c1 IN (vt0.c1)))AND(TYPEOF(DISTINCT 0.9387609643201504))))AND(((vt0.c1)%(vt0.c1))))) ORDER BY ((((CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c0 END)OR(t0.c0 COLLATE BINARY)))AND((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1 IN (vt0.c1)))AND(TYPEOF(DISTINCT 0.9387609643201504))))AND(((vt0.c1)%(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c0 END)OR(t0.c0 COLLATE BINARY)))AND((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT * FROM t0, vt0 WHERE ((((((vt0.c1 IN (vt0.c1)))AND(TYPEOF(DISTINCT 0.9387609643201504))))AND(((vt0.c1)%(vt0.c1))))) ORDER BY ((((CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN vt0.c0 END)OR(t0.c0 COLLATE BINARY)))AND((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT * FROM t0, t2 RIGHT OUTER JOIN vt0 ON ((((((t2.c1)AND('6\n*RG꬘')))OR(t2.c2)))<(NULL)) WHERE ((vt0.c1 COLLATE RTRIM IN (((t2.c1)>(t2.c2))))) ORDER BY ((((((((((((((((t2.c2)OR(x'')))OR(t2.c6)))AND(t2.c0 COLLATE NOCASE)))AND(CHAR('i]&GIW', x'', vt0.c0, t2.c1, t0.c0))))OR((+ (vt0.c1)))))OR(json_array_length(vt0.c0, t2.c6))))AND(((t2.c6) NOTNULL))))AND(((vt0.c1)IS(NULL))));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE RTRIM IN (((t2.c1)>(t2.c2))))) IS TRUE)  as count FROM t0, t2 RIGHT OUTER JOIN vt0 ON ((((((t2.c1)AND('6\n*RG꬘')))OR(t2.c2)))<(NULL)) ORDER BY ((((((((((((((((t2.c2)OR(x'')))OR(t2.c6)))AND(t2.c0 COLLATE NOCASE)))AND(CHAR('i]&GIW', x'', vt0.c0, t2.c1, t0.c0))))OR((+ (vt0.c1)))))OR(json_array_length(vt0.c0, t2.c6))))AND(((t2.c6) NOTNULL))))AND(((vt0.c1)IS(NULL)))));
SELECT * FROM t0, t2 RIGHT OUTER JOIN vt0 ON ((((((t2.c1)AND('6\n*RG꬘')))OR(t2.c2)))<(NULL)) WHERE ((vt0.c1 COLLATE RTRIM IN (((t2.c1)>(t2.c2))))) ORDER BY ((((((((((((((((t2.c2)OR(x'')))OR(t2.c6)))AND(t2.c0 COLLATE NOCASE)))AND(CHAR('i]&GIW', x'', vt0.c0, t2.c1, t0.c0))))OR((+ (vt0.c1)))))OR(json_array_length(vt0.c0, t2.c6))))AND(((t2.c6) NOTNULL))))AND(((vt0.c1)IS(NULL))));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE RTRIM IN (((t2.c1)>(t2.c2))))) IS TRUE)  as count FROM t0, t2 RIGHT OUTER JOIN vt0 ON ((((((t2.c1)AND('6\n*RG꬘')))OR(t2.c2)))<(NULL)) ORDER BY ((((((((((((((((t2.c2)OR(x'')))OR(t2.c6)))AND(t2.c0 COLLATE NOCASE)))AND(CHAR('i]&GIW', x'', vt0.c0, t2.c1, t0.c0))))OR((+ (vt0.c1)))))OR(json_array_length(vt0.c0, t2.c6))))AND(((t2.c6) NOTNULL))))AND(((vt0.c1)IS(NULL)))));
SELECT ALL * FROM t2, t0 WHERE (((((((t2.c2)OR(t2.c2)))OR(t0.c0))) BETWEEN (CASE t2.c1  WHEN t2.c6 THEN t2.c1 END) AND ((~ (t2.c2))))) ORDER BY (- (NULLIF(t2.c6, t0.c0))) ASC, ((((t2.c1)LIKE(t0.c0)))IS(((((((((t2.c0)AND('1442410189')))OR(t2.c0)))AND(t2.c1)))AND(t0.c0)))) DESC, (((+ (t2.c2))) BETWEEN (((((((((x'139b53dd')AND(t2.c0)))OR(t2.c0)))AND(t2.c6)))AND(t2.c0))) AND ((((t2.c6, t2.c6, t2.c6))>=((t0.c0, t2.c6, t2.c6))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t2.c2)OR(t2.c2)))OR(t0.c0))) BETWEEN (CASE t2.c1  WHEN t2.c6 THEN t2.c1 END) AND ((~ (t2.c2))))) IS TRUE)  as count FROM t2, t0 ORDER BY (- (NULLIF(t2.c6, t0.c0))) ASC, ((((t2.c1)LIKE(t0.c0)))IS(((((((((t2.c0)AND('1442410189')))OR(t2.c0)))AND(t2.c1)))AND(t0.c0)))) DESC, (((+ (t2.c2))) BETWEEN (((((((((x'139b53dd')AND(t2.c0)))OR(t2.c0)))AND(t2.c6)))AND(t2.c0))) AND ((((t2.c6, t2.c6, t2.c6))>=((t0.c0, t2.c6, t2.c6))))) DESC  NULLS LAST);
SELECT ALL * FROM t2, t0 WHERE (((((((t2.c2)OR(t2.c2)))OR(t0.c0))) BETWEEN (CASE t2.c1  WHEN t2.c6 THEN t2.c1 END) AND ((~ (t2.c2))))) ORDER BY (- (NULLIF(t2.c6, t0.c0))) ASC, ((((t2.c1)LIKE(t0.c0)))IS(((((((((t2.c0)AND('1442410189')))OR(t2.c0)))AND(t2.c1)))AND(t0.c0)))) DESC, (((+ (t2.c2))) BETWEEN (((((((((x'139b53dd')AND(t2.c0)))OR(t2.c0)))AND(t2.c6)))AND(t2.c0))) AND ((((t2.c6, t2.c6, t2.c6))>=((t0.c0, t2.c6, t2.c6))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t2.c2)OR(t2.c2)))OR(t0.c0))) BETWEEN (CASE t2.c1  WHEN t2.c6 THEN t2.c1 END) AND ((~ (t2.c2))))) IS TRUE)  as count FROM t2, t0 ORDER BY (- (NULLIF(t2.c6, t0.c0))) ASC, ((((t2.c1)LIKE(t0.c0)))IS(((((((((t2.c0)AND('1442410189')))OR(t2.c0)))AND(t2.c1)))AND(t0.c0)))) DESC, (((+ (t2.c2))) BETWEEN (((((((((x'139b53dd')AND(t2.c0)))OR(t2.c0)))AND(t2.c6)))AND(t2.c0))) AND ((((t2.c6, t2.c6, t2.c6))>=((t0.c0, t2.c6, t2.c6))))) DESC  NULLS LAST);
SELECT ALL * FROM t2, t0 WHERE (((((((t2.c2)OR(t2.c2)))OR(t0.c0))) BETWEEN (CASE t2.c1  WHEN t2.c6 THEN t2.c1 END) AND ((~ (t2.c2))))) ORDER BY (- (NULLIF(t2.c6, t0.c0))) ASC, ((((t2.c1)LIKE(t0.c0)))IS(((((((((t2.c0)AND('1442410189')))OR(t2.c0)))AND(t2.c1)))AND(t0.c0)))) DESC, (((+ (t2.c2))) BETWEEN (((((((((x'139b53dd')AND(t2.c0)))OR(t2.c0)))AND(t2.c6)))AND(t2.c0))) AND ((((t2.c6, t2.c6, t2.c6))>=((t0.c0, t2.c6, t2.c6))))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY ((vt0.c0) NOTNULL) ASC, ((((0xffffffffd4317811)AND(((vt0.c1) IS TRUE))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) ASC, ((((0Xffffffffd4317811)AND(((vt0.c1) IS TRUE))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY ((vt0.c0) NOTNULL) ASC, ((((0xffffffffd4317811)AND(((vt0.c1) IS TRUE))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) ASC, ((((0Xffffffffd4317811)AND(((vt0.c1) IS TRUE))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY ((vt0.c0) NOTNULL) ASC, ((((0xffffffffd4317811)AND(((vt0.c1) IS TRUE))))OR(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC;
SELECT COUNT(*) FROM t2, vt0 WHERE (CAST(CASE WHEN t2.c1 THEN t2.c1 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t2.c1 THEN t2.c1 END AS BLOB)) IS TRUE)  as count FROM t2, vt0);
SELECT COUNT(*) FROM t2, vt0 WHERE (CAST(CASE WHEN t2.c1 THEN t2.c1 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t2.c1 THEN t2.c1 END AS BLOB)) IS TRUE)  as count FROM t2, vt0);
SELECT COUNT(*) FROM t2, vt0 WHERE (CAST(CASE WHEN t2.c1 THEN t2.c1 END AS BLOB));
SELECT * FROM vt0 WHERE (CASE 'i,쎵CX('  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE 'i,쎵CX('  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE 'i,쎵CX('  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE 'i,쎵CX('  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE 'i,쎵CX('  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) ELSE vt0.c1 END);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((((t2.c1 IN ()), UNLIKELY(vt0.c0), ((vt0.c1)+('A'))))>=((((t2.c2)=(vt0.c1)), x'7fe9', TYPEOF(t2.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t2.c1 IN ()), UNLIKELY(vt0.c0), ((vt0.c1)+('A'))))>=((((t2.c2)==(vt0.c1)), x'7fe9', TYPEOF(t2.c1))))) IS TRUE)  as count FROM vt0, t0, t2);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((((t2.c1 IN ()), UNLIKELY(vt0.c0), ((vt0.c1)+('A'))))>=((((t2.c2)=(vt0.c1)), x'7fe9', TYPEOF(t2.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t2.c1 IN ()), UNLIKELY(vt0.c0), ((vt0.c1)+('A'))))>=((((t2.c2)==(vt0.c1)), x'7fe9', TYPEOF(t2.c1))))) IS TRUE)  as count FROM vt0, t0, t2);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((((t2.c1 IN ()), UNLIKELY(vt0.c0), ((vt0.c1)+('A'))))>=((((t2.c2)=(vt0.c1)), x'7fe9', TYPEOF(t2.c1)))));
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (CASE WHEN ((((((((t2.c2)OR(vt0.c0)))AND(t2.c2)))OR(vt0.c1)))OR(t2.c0)) THEN ((t2.c0)!=(t2.c6)) END) ORDER BY (((t2.c2, t2.c2, t2.c6)) BETWEEN ((((t2.c6)+('-1892872310')), ((t0.c0)>>(t2.c1)), (((t2.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))) AND ((CASE WHEN t2.c1 THEN vt0.c1 ELSE t2.c2 END, ((t2.c6)<<(t0.c0)), '0.9613221718953413'))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t2.c2)OR(vt0.c0)))AND(t2.c2)))OR(vt0.c1)))OR(t2.c0)) THEN ((t2.c0)!=(t2.c6)) END) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (((t2.c2, t2.c2, t2.c6)) BETWEEN ((((t2.c6)+('-1892872310')), ((t0.c0)>>(t2.c1)), (((t2.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))) AND ((CASE WHEN t2.c1 THEN vt0.c1 ELSE t2.c2 END, ((t2.c6)<<(t0.c0)), '0.9613221718953413'))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (CASE WHEN ((((((((t2.c2)OR(vt0.c0)))AND(t2.c2)))OR(vt0.c1)))OR(t2.c0)) THEN ((t2.c0)!=(t2.c6)) END) ORDER BY (((t2.c2, t2.c2, t2.c6)) BETWEEN ((((t2.c6)+('-1892872310')), ((t0.c0)>>(t2.c1)), (((t2.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))) AND ((CASE WHEN t2.c1 THEN vt0.c1 ELSE t2.c2 END, ((t2.c6)<<(t0.c0)), '0.9613221718953413'))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t2.c2)OR(vt0.c0)))AND(t2.c2)))OR(vt0.c1)))OR(t2.c0)) THEN ((t2.c0)!=(t2.c6)) END) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (((t2.c2, t2.c2, t2.c6)) BETWEEN ((((t2.c6)+('-1892872310')), ((t0.c0)>>(t2.c1)), (((t2.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))) AND ((CASE WHEN t2.c1 THEN vt0.c1 ELSE t2.c2 END, ((t2.c6)<<(t0.c0)), '0.9613221718953413'))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (CASE WHEN ((((((((t2.c2)OR(vt0.c0)))AND(t2.c2)))OR(vt0.c1)))OR(t2.c0)) THEN ((t2.c0)!=(t2.c6)) END) ORDER BY (((t2.c2, t2.c2, t2.c6)) BETWEEN ((((t2.c6)+('-1892872310')), ((t0.c0)>>(t2.c1)), (((t2.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))) AND ((CASE WHEN t2.c1 THEN vt0.c1 ELSE t2.c2 END, ((t2.c6)<<(t0.c0)), '0.9613221718953413'))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM t2, t0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN ('-744455341') AND (vt0.c1)))GLOB(((((t0.c0)AND(t2.c6)))OR(t2.c2)))) WHERE (((((t2.c2)OR(vt0.c1))) BETWEEN (((t2.c1)+(t2.c0))) AND ((vt0.c1 IN ())))) ORDER BY t2.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t2.c2)OR(vt0.c1))) BETWEEN (((t2.c1)+(t2.c0))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM t2, t0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN ('-744455341') AND (vt0.c1)))GLOB(((((t0.c0)AND(t2.c6)))OR(t2.c2)))) ORDER BY t2.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2, t0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN ('-744455341') AND (vt0.c1)))GLOB(((((t0.c0)AND(t2.c6)))OR(t2.c2)))) WHERE (((((t2.c2)OR(vt0.c1))) BETWEEN (((t2.c1)+(t2.c0))) AND ((vt0.c1 IN ())))) ORDER BY t2.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t2.c2)OR(vt0.c1))) BETWEEN (((t2.c1)+(t2.c0))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM t2, t0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN ('-744455341') AND (vt0.c1)))GLOB(((((t0.c0)AND(t2.c6)))OR(t2.c2)))) ORDER BY t2.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2, t0 INNER JOIN vt0 ON ((((vt0.c0) BETWEEN ('-744455341') AND (vt0.c1)))GLOB(((((t0.c0)AND(t2.c6)))OR(t2.c2)))) WHERE (((((t2.c2)OR(vt0.c1))) BETWEEN (((t2.c1)+(t2.c0))) AND ((vt0.c1 IN ())))) ORDER BY t2.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) ORDER BY ((vt0.c0)&(((vt0.c1)>>(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)&(((vt0.c1)>>(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) ORDER BY ((vt0.c0)&(((vt0.c1)>>(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)&(((vt0.c1)>>(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) ORDER BY ((vt0.c0)&(((vt0.c1)>>(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN t2 ON (+ (((t0.c0) NOT BETWEEN (t2.c6) AND (t2.c6)))) WHERE (((t2.c0) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((t2.c6)) AND ((t2.c0)))) AND ((t2.c0 IN ())))) ORDER BY (((t2.c6, t2.c6, vt0.c0)) BETWEEN ((((t2.c0)+(t2.c0)), CAST(vt0.c1 AS TEXT), t2.c2)) AND ((IFNULL(t2.c2, t2.c0), (t0.c0 IN ()), (t0.c0 IN ('-1308306348', vt0.c1, t2.c6))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t2.c0) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((t2.c6)) AND ((t2.c0)))) AND ((t2.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN t2 ON (+ (((t0.c0) NOT BETWEEN (t2.c6) AND (t2.c6)))) ORDER BY (((t2.c6, t2.c6, vt0.c0)) BETWEEN ((((t2.c0)+(t2.c0)), CAST(vt0.c1 AS TEXT), t2.c2)) AND ((IFNULL(t2.c2, t2.c0), (t0.c0 IN ()), (t0.c0 IN ('-1308306348', vt0.c1, t2.c6))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN t2 ON (+ (((t0.c0) NOT BETWEEN (t2.c6) AND (t2.c6)))) WHERE (((t2.c0) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((t2.c6)) AND ((t2.c0)))) AND ((t2.c0 IN ())))) ORDER BY (((t2.c6, t2.c6, vt0.c0)) BETWEEN ((((t2.c0)+(t2.c0)), CAST(vt0.c1 AS TEXT), t2.c2)) AND ((IFNULL(t2.c2, t2.c0), (t0.c0 IN ()), (t0.c0 IN ('-1308306348', vt0.c1, t2.c6))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t2.c0) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((t2.c6)) AND ((t2.c0)))) AND ((t2.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN t2 ON (+ (((t0.c0) NOT BETWEEN (t2.c6) AND (t2.c6)))) ORDER BY (((t2.c6, t2.c6, vt0.c0)) BETWEEN ((((t2.c0)+(t2.c0)), CAST(vt0.c1 AS TEXT), t2.c2)) AND ((IFNULL(t2.c2, t2.c0), (t0.c0 IN ()), (t0.c0 IN ('-1308306348', vt0.c1, t2.c6))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN t2 ON (+ (((t0.c0) NOT BETWEEN (t2.c6) AND (t2.c6)))) WHERE (((t2.c0) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((t2.c6)) AND ((t2.c0)))) AND ((t2.c0 IN ())))) ORDER BY (((t2.c6, t2.c6, vt0.c0)) BETWEEN ((((t2.c0)+(t2.c0)), CAST(vt0.c1 AS TEXT), t2.c2)) AND ((IFNULL(t2.c2, t2.c0), (t0.c0 IN ()), (t0.c0 IN ('-1308306348', vt0.c1, t2.c6))))) DESC  NULLS FIRST;
SELECT ALL * FROM t2, t0, vt0 WHERE (CASE WHEN ((((t2.c1)OR(t2.c1)))OR(vt0.c1)) THEN (t2.c2 IN ()) END) ORDER BY t2.c2 DESC  NULLS LAST, CASE ((t2.c2) IS FALSE)  WHEN (- (t2.c6)) THEN CASE WHEN t2.c0 THEN t2.c2 ELSE NULL END ELSE ((t0.c0) BETWEEN (t2.c0) AND (t2.c2)) END, ((((((((t2.c6)AND(((0.78929085997118)LIKE(t2.c6)))))AND('299790071')))OR(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t2.c1)OR(t2.c1)))OR(vt0.c1)) THEN (t2.c2 IN ()) END) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY t2.c2 DESC  NULLS LAST, CASE ((t2.c2) IS FALSE)  WHEN (- (t2.c6)) THEN CASE WHEN t2.c0 THEN t2.c2 ELSE NULL END ELSE ((t0.c0) BETWEEN (t2.c0) AND (t2.c2)) END, ((((((((t2.c6)AND(((0.78929085997118)LIKE(t2.c6)))))AND('299790071')))OR(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS INTEGER))));
SELECT ALL * FROM t2, t0, vt0 WHERE (CASE WHEN ((((t2.c1)OR(t2.c1)))OR(vt0.c1)) THEN (t2.c2 IN ()) END) ORDER BY t2.c2 DESC  NULLS LAST, CASE ((t2.c2) IS FALSE)  WHEN (- (t2.c6)) THEN CASE WHEN t2.c0 THEN t2.c2 ELSE NULL END ELSE ((t0.c0) BETWEEN (t2.c0) AND (t2.c2)) END, ((((((((t2.c6)AND(((0.78929085997118)LIKE(t2.c6)))))AND('299790071')))OR(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t2.c1)OR(t2.c1)))OR(vt0.c1)) THEN (t2.c2 IN ()) END) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY t2.c2 DESC  NULLS LAST, CASE ((t2.c2) IS FALSE)  WHEN (- (t2.c6)) THEN CASE WHEN t2.c0 THEN t2.c2 ELSE NULL END ELSE ((t0.c0) BETWEEN (t2.c0) AND (t2.c2)) END, ((((((((t2.c6)AND(((0.78929085997118)LIKE(t2.c6)))))AND('299790071')))OR(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS INTEGER))));
SELECT ALL * FROM t2, t0, vt0 WHERE (CASE WHEN ((((t2.c1)OR(t2.c1)))OR(vt0.c1)) THEN (t2.c2 IN ()) END) ORDER BY t2.c2 DESC  NULLS LAST, CASE ((t2.c2) IS FALSE)  WHEN (- (t2.c6)) THEN CASE WHEN t2.c0 THEN t2.c2 ELSE NULL END ELSE ((t0.c0) BETWEEN (t2.c0) AND (t2.c2)) END, ((((((((t2.c6)AND(((0.78929085997118)LIKE(t2.c6)))))AND('299790071')))OR(((t0.c0) IS TRUE))))OR(CAST(t0.c0 AS INTEGER)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON NULLIF(vt0.c0 COLLATE RTRIM, CAST(t2.c1 AS BLOB)) RIGHT OUTER JOIN t2 ON ((((vt0.c0)<<(t0.c0))) IS FALSE) WHERE (t2.c2);
SELECT SUM(count) FROM (SELECT ALL ((t2.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON NULLIF(vt0.c0 COLLATE RTRIM, CAST(t2.c1 AS BLOB)) RIGHT OUTER JOIN t2 ON ((((vt0.c0)<<(t0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON NULLIF(vt0.c0 COLLATE RTRIM, CAST(t2.c1 AS BLOB)) RIGHT OUTER JOIN t2 ON ((((vt0.c0)<<(t0.c0))) IS FALSE) WHERE (t2.c2);
SELECT SUM(count) FROM (SELECT ALL ((t2.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON NULLIF(vt0.c0 COLLATE RTRIM, CAST(t2.c1 AS BLOB)) RIGHT OUTER JOIN t2 ON ((((vt0.c0)<<(t0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0, t0, t2 NOT INDEXED WHERE (CASE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN NULL THEN CASE t2.c1  WHEN t2.c2 THEN t2.c0 END WHEN t2.c2 COLLATE BINARY THEN (((t2.c1))<>((t0.c0))) WHEN (NOT (t2.c0)) THEN ((t0.c0) ISNULL) WHEN CAST(t0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) WHEN 0.20355038991439955 THEN (t2.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN NULL THEN CASE t2.c1  WHEN t2.c2 THEN t2.c0 END WHEN t2.c2 COLLATE BINARY THEN (((t2.c1))<>((t0.c0))) WHEN (NOT (t2.c0)) THEN ((t0.c0) ISNULL) WHEN CAST(t0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) WHEN 0.20355038991439955 THEN (t2.c2 IN ()) END) IS TRUE)  as count FROM vt0, t0, t2);
SELECT COUNT(*) FROM vt0, t0, t2 NOT INDEXED WHERE (CASE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN NULL THEN CASE t2.c1  WHEN t2.c2 THEN t2.c0 END WHEN t2.c2 COLLATE BINARY THEN (((t2.c1))<>((t0.c0))) WHEN (NOT (t2.c0)) THEN ((t0.c0) ISNULL) WHEN CAST(t0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) WHEN 0.20355038991439955 THEN (t2.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN NULL THEN CASE t2.c1  WHEN t2.c2 THEN t2.c0 END WHEN t2.c2 COLLATE BINARY THEN (((t2.c1))<>((t0.c0))) WHEN (NOT (t2.c0)) THEN ((t0.c0) ISNULL) WHEN CAST(t0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) WHEN 0.20355038991439955 THEN (t2.c2 IN ()) END) IS TRUE)  as count FROM vt0, t0, t2);
SELECT COUNT(*) FROM vt0, t0, t2 NOT INDEXED WHERE (CASE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN NULL THEN CASE t2.c1  WHEN t2.c2 THEN t2.c0 END WHEN t2.c2 COLLATE BINARY THEN (((t2.c1))<>((t0.c0))) WHEN (NOT (t2.c0)) THEN ((t0.c0) ISNULL) WHEN CAST(t0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) WHEN 0.20355038991439955 THEN (t2.c2 IN ()) END);
SELECT * FROM vt0 WHERE (NULL) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)>(t0.c0)))>(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>(t0.c0)))>(t0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)>(t0.c0)))>(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>(t0.c0)))>(t0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)>(t0.c0)))>(t0.c0)));
SELECT * FROM vt0, t0 FULL OUTER JOIN t2 ON 'qu' WHERE ((((((((((((t2.c6)OR(t2.c2)))OR(t2.c2)))OR(t2.c2)))OR(vt0.c0))))>((t2.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t2.c6)OR(t2.c2)))OR(t2.c2)))OR(t2.c2)))OR(vt0.c0))))>((t2.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN t2 ON 'qu');
SELECT * FROM vt0, t0 FULL OUTER JOIN t2 ON 'qu' WHERE ((((((((((((t2.c6)OR(t2.c2)))OR(t2.c2)))OR(t2.c2)))OR(vt0.c0))))>((t2.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t2.c6)OR(t2.c2)))OR(t2.c2)))OR(t2.c2)))OR(vt0.c0))))>((t2.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN t2 ON 'qu');
SELECT * FROM vt0, t0 FULL OUTER JOIN t2 ON 'qu' WHERE ((((((((((((t2.c6)OR(t2.c2)))OR(t2.c2)))OR(t2.c2)))OR(vt0.c0))))>((t2.c0 COLLATE NOCASE))));
SELECT * FROM t2, t0, vt0 WHERE (CASE WHEN ((t2.c6) NOTNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(t2.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c6) NOTNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(t2.c2)) END) IS TRUE)  as count FROM t2, t0, vt0);
SELECT * FROM t2, t0, vt0 WHERE (CASE WHEN ((t2.c6) NOTNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(t2.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c6) NOTNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(t2.c2)) END) IS TRUE)  as count FROM t2, t0, vt0);
SELECT * FROM t2, t0, vt0 WHERE (CASE WHEN ((t2.c6) NOTNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(t2.c2)) END);
SELECT ALL * FROM t0, vt0, t2 WHERE (((((NULL)AND(t2.c0)))<<(t2.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(t2.c0)))<<(t2.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL * FROM t0, vt0, t2 WHERE (((((NULL)AND(t2.c0)))<<(t2.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(t2.c0)))<<(t2.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL * FROM t0, vt0, t2 WHERE (((((NULL)AND(t2.c0)))<<(t2.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((((t2.c6)GLOB(vt0.c1)))*(CASE t0.c0  WHEN t2.c0 THEN t2.c6 WHEN vt0.c0 THEN t2.c2 WHEN t2.c2 THEN t2.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c6)GLOB(vt0.c1)))*(CASE t0.c0  WHEN t2.c0 THEN t2.c6 WHEN vt0.c0 THEN t2.c2 WHEN t2.c2 THEN t2.c2 END))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, t2);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((((t2.c6)GLOB(vt0.c1)))*(CASE t0.c0  WHEN t2.c0 THEN t2.c6 WHEN vt0.c0 THEN t2.c2 WHEN t2.c2 THEN t2.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c6)GLOB(vt0.c1)))*(CASE t0.c0  WHEN t2.c0 THEN t2.c6 WHEN vt0.c0 THEN t2.c2 WHEN t2.c2 THEN t2.c2 END))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, t2);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((((t2.c6)GLOB(vt0.c1)))*(CASE t0.c0  WHEN t2.c0 THEN t2.c6 WHEN vt0.c0 THEN t2.c2 WHEN t2.c2 THEN t2.c2 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c1))  WHEN vt0.c0 THEN '' ELSE CAST(vt0.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c1))  WHEN vt0.c0 THEN '' ELSE CAST(vt0.c1 AS BLOB) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c1))  WHEN vt0.c0 THEN '' ELSE CAST(vt0.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c1))  WHEN vt0.c0 THEN '' ELSE CAST(vt0.c1 AS BLOB) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c1))  WHEN vt0.c0 THEN '' ELSE CAST(vt0.c1 AS BLOB) END);
SELECT * FROM t0 WHERE (((TOTAL_CHANGES()) ISNULL)) ORDER BY CAST(((0.28641402951821904)>>(t0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES()) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(((0.28641402951821904)>>(t0.c0)) AS REAL) DESC);
SELECT * FROM t0 WHERE (((TOTAL_CHANGES()) ISNULL)) ORDER BY CAST(((0.28641402951821904)>>(t0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES()) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(((0.28641402951821904)>>(t0.c0)) AS REAL) DESC);
SELECT * FROM t0 WHERE (((TOTAL_CHANGES()) ISNULL)) ORDER BY CAST(((0.28641402951821904)>>(t0.c0)) AS REAL) DESC;
SELECT ALL * FROM vt0, t0, t2 WHERE ((- ((+ (t2.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (t2.c1))))) IS TRUE)  as count FROM vt0, t0, t2);
SELECT ALL * FROM vt0, t0, t2 WHERE ((- ((+ (t2.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (t2.c1))))) IS TRUE)  as count FROM vt0, t0, t2);
SELECT ALL * FROM vt0, t0, t2 WHERE ((- ((+ (t2.c1)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))&((t0.c0 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0)))&((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))&((t0.c0 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0)))&((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))&((t0.c0 IN (t0.c0)))));
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c6))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c6))) IN ())) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c6))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c6))) IN ())) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c6))) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN (((('1597793884'))>=((t0.c0)))) AND (t0.c0 COLLATE RTRIM))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) BETWEEN (((('1597793884'))>=((t0.c0)))) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN (((('1597793884'))>=((t0.c0)))) AND (t0.c0 COLLATE RTRIM))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) BETWEEN (((('1597793884'))>=((t0.c0)))) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN (((('1597793884'))>=((t0.c0)))) AND (t0.c0 COLLATE RTRIM))) ORDER BY NULL ASC;
SELECT ALL * FROM t2 WHERE (json_type('v')) ORDER BY ((-196575428 COLLATE RTRIM) IS FALSE), ((((t2.c1 COLLATE RTRIM)AND(t2.c6)))AND(((t2.c1) BETWEEN (t2.c2) AND (t2.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((json_type('v')) IS TRUE)  as count FROM t2 ORDER BY ((-196575428 COLLATE RTRIM) IS FALSE), ((((t2.c1 COLLATE RTRIM)AND(t2.c6)))AND(((t2.c1) BETWEEN (t2.c2) AND (t2.c0)))) ASC);
SELECT ALL * FROM t2 WHERE (json_type('v')) ORDER BY ((-196575428 COLLATE RTRIM) IS FALSE), ((((t2.c1 COLLATE RTRIM)AND(t2.c6)))AND(((t2.c1) BETWEEN (t2.c2) AND (t2.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((json_type('v')) IS TRUE)  as count FROM t2 ORDER BY ((-196575428 COLLATE RTRIM) IS FALSE), ((((t2.c1 COLLATE RTRIM)AND(t2.c6)))AND(((t2.c1) BETWEEN (t2.c2) AND (t2.c0)))) ASC);
SELECT * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c0);
SELECT ALL * FROM t2, vt0, t0 WHERE ((NOT (((t2.c0) BETWEEN (0.9315083012709853) AND (t2.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t2.c0) BETWEEN (0.9315083012709853) AND (t2.c0))))) IS TRUE)  as count FROM t2, vt0, t0);
SELECT ALL * FROM t2, vt0, t0 WHERE ((NOT (((t2.c0) BETWEEN (0.9315083012709853) AND (t2.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t2.c0) BETWEEN (0.9315083012709853) AND (t2.c0))))) IS TRUE)  as count FROM t2, vt0, t0);
SELECT ALL * FROM t2, vt0, t0 WHERE ((NOT (((t2.c0) BETWEEN (0.9315083012709853) AND (t2.c0)))));
SELECT ALL * FROM t2 WHERE (LIKE((NOT (t2.c1)), (x'' IN ()), '0')) ORDER BY ((((t2.c6) NOT BETWEEN (t2.c0) AND (NULL)))%(x'ff0b')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE((NOT (t2.c1)), (x'' IN ()), '0')) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c6) NOT BETWEEN (t2.c0) AND (NULL)))%(x'ff0b')) ASC  NULLS LAST);
SELECT ALL * FROM t2 WHERE (LIKE((NOT (t2.c1)), (x'' IN ()), '0')) ORDER BY ((((t2.c6) NOT BETWEEN (t2.c0) AND (NULL)))%(x'ff0b')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE((NOT (t2.c1)), (x'' IN ()), '0')) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c6) NOT BETWEEN (t2.c0) AND (NULL)))%(x'ff0b')) ASC  NULLS LAST);
SELECT ALL * FROM t2 WHERE (LIKE((NOT (t2.c1)), (x'' IN ()), '0')) ORDER BY ((((t2.c6) NOT BETWEEN (t2.c0) AND (NULL)))%(x'ff0b')) ASC  NULLS LAST;
SELECT * FROM t2 WHERE (t2.c2) ORDER BY ((CASE WHEN t2.c6 THEN t2.c0 END) NOT BETWEEN (t2.c6 COLLATE NOCASE) AND (((t2.c2) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t2.c2) IS TRUE)  as count FROM t2 ORDER BY ((CASE WHEN t2.c6 THEN t2.c0 END) NOT BETWEEN (t2.c6 COLLATE NOCASE) AND (((t2.c2) IS FALSE))) DESC  NULLS LAST);
SELECT * FROM t2 WHERE (t2.c2) ORDER BY ((CASE WHEN t2.c6 THEN t2.c0 END) NOT BETWEEN (t2.c6 COLLATE NOCASE) AND (((t2.c2) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t2.c2) IS TRUE)  as count FROM t2 ORDER BY ((CASE WHEN t2.c6 THEN t2.c0 END) NOT BETWEEN (t2.c6 COLLATE NOCASE) AND (((t2.c2) IS FALSE))) DESC  NULLS LAST);
SELECT * FROM t2 WHERE (t2.c2) ORDER BY ((CASE WHEN t2.c6 THEN t2.c0 END) NOT BETWEEN (t2.c6 COLLATE NOCASE) AND (((t2.c2) IS FALSE))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0))=((t0.c0))) IN (CAST(t0.c0 AS INTEGER)))) ORDER BY ((((t0.c0)IS NOT(t0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0))==((t0.c0))) IN (CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((((t0.c0)IS NOT(t0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0))=((t0.c0))) IN (CAST(t0.c0 AS INTEGER)))) ORDER BY ((((t0.c0)IS NOT(t0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0))==((t0.c0))) IN (CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((((t0.c0)IS NOT(t0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0))=((t0.c0))) IN (CAST(t0.c0 AS INTEGER)))) ORDER BY ((((t0.c0)IS NOT(t0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT * FROM t2, vt0 WHERE (((t2.c6) BETWEEN (((t2.c0)==(vt0.c1))) AND (CASE t2.c6  WHEN t2.c2 THEN t2.c0 ELSE vt0.c0 END))) ORDER BY ((IFNULL(t2.c2, t2.c0)) BETWEEN (((t2.c0)LIKE(t2.c1))) AND (NULLIF(t2.c2, t2.c6))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c6) BETWEEN (((t2.c0)==(vt0.c1))) AND (CASE t2.c6  WHEN t2.c2 THEN t2.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t2, vt0 ORDER BY ((IFNULL(t2.c2, t2.c0)) BETWEEN (((t2.c0)LIKE(t2.c1))) AND (NULLIF(t2.c2, t2.c6))) DESC);
SELECT * FROM t2, vt0 WHERE (((t2.c6) BETWEEN (((t2.c0)==(vt0.c1))) AND (CASE t2.c6  WHEN t2.c2 THEN t2.c0 ELSE vt0.c0 END))) ORDER BY ((IFNULL(t2.c2, t2.c0)) BETWEEN (((t2.c0)LIKE(t2.c1))) AND (NULLIF(t2.c2, t2.c6))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c6) BETWEEN (((t2.c0)==(vt0.c1))) AND (CASE t2.c6  WHEN t2.c2 THEN t2.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t2, vt0 ORDER BY ((IFNULL(t2.c2, t2.c0)) BETWEEN (((t2.c0)LIKE(t2.c1))) AND (NULLIF(t2.c2, t2.c6))) DESC);
SELECT * FROM t2, vt0 WHERE (((t2.c6) BETWEEN (((t2.c0)==(vt0.c1))) AND (CASE t2.c6  WHEN t2.c2 THEN t2.c0 ELSE vt0.c0 END))) ORDER BY ((IFNULL(t2.c2, t2.c0)) BETWEEN (((t2.c0)LIKE(t2.c1))) AND (NULLIF(t2.c2, t2.c6))) DESC;
SELECT COUNT(*) FROM t0, t2 WHERE ((t2.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((t2.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE ((t2.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((t2.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE ((t2.c2 IN ()) COLLATE BINARY);
SELECT ALL * FROM vt0, t0, t2 WHERE ((NOT (CASE 0.9392000927303321  WHEN t2.c1 THEN t2.c1 ELSE t2.c0 END))) ORDER BY COALESCE(((t2.c1) BETWEEN (t2.c0) AND (t0.c0)), NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE 0.9392000927303321  WHEN t2.c1 THEN t2.c1 ELSE t2.c0 END))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY COALESCE(((t2.c1) BETWEEN (t2.c0) AND (t0.c0)), NULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, t2 WHERE ((NOT (CASE 0.9392000927303321  WHEN t2.c1 THEN t2.c1 ELSE t2.c0 END))) ORDER BY COALESCE(((t2.c1) BETWEEN (t2.c0) AND (t0.c0)), NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE 0.9392000927303321  WHEN t2.c1 THEN t2.c1 ELSE t2.c0 END))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY COALESCE(((t2.c1) BETWEEN (t2.c0) AND (t0.c0)), NULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, t2 WHERE ((NOT (CASE 0.9392000927303321  WHEN t2.c1 THEN t2.c1 ELSE t2.c0 END))) ORDER BY COALESCE(((t2.c1) BETWEEN (t2.c0) AND (t0.c0)), NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM t2 WHERE (((CASE t2.c1  WHEN t2.c2 THEN t2.c6 WHEN t2.c0 THEN t2.c2 WHEN t2.c1 THEN t2.c0 END)&(CASE WHEN t2.c0 THEN t2.c0 END))) ORDER BY ((((t2.c1)>=(t2.c1)))%(t2.c6 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t2.c1  WHEN t2.c2 THEN t2.c6 WHEN t2.c0 THEN t2.c2 WHEN t2.c1 THEN t2.c0 END)&(CASE WHEN t2.c0 THEN t2.c0 END))) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c1)>=(t2.c1)))%(t2.c6 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM t2 WHERE (((CASE t2.c1  WHEN t2.c2 THEN t2.c6 WHEN t2.c0 THEN t2.c2 WHEN t2.c1 THEN t2.c0 END)&(CASE WHEN t2.c0 THEN t2.c0 END))) ORDER BY ((((t2.c1)>=(t2.c1)))%(t2.c6 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t2.c1  WHEN t2.c2 THEN t2.c6 WHEN t2.c0 THEN t2.c2 WHEN t2.c1 THEN t2.c0 END)&(CASE WHEN t2.c0 THEN t2.c0 END))) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c1)>=(t2.c1)))%(t2.c6 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM t2 WHERE (((CASE t2.c1  WHEN t2.c2 THEN t2.c6 WHEN t2.c0 THEN t2.c2 WHEN t2.c1 THEN t2.c0 END)&(CASE WHEN t2.c0 THEN t2.c0 END))) ORDER BY ((((t2.c1)>=(t2.c1)))%(t2.c6 COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i59 FULL OUTER JOIN t2 ON CASE WHEN ((vt0.c0) NOTNULL) THEN CAST(vt0.c1 AS NUMERIC) END WHERE (((((IFNULL(DISTINCT t2.c1, vt0.c0))AND(((t2.c6)<=(t2.c1)))))OR(((t2.c0)||(t2.c6))))) ORDER BY t2.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(DISTINCT t2.c1, vt0.c0))AND(((t2.c6)<=(t2.c1)))))OR(((t2.c0)||(t2.c6))))) IS TRUE)  as count FROM vt0 INDEXED BY i59 FULL OUTER JOIN t2 ON CASE WHEN ((vt0.c0) NOTNULL) THEN CAST(vt0.c1 AS NUMERIC) END ORDER BY t2.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i59 FULL OUTER JOIN t2 ON CASE WHEN ((vt0.c0) NOTNULL) THEN CAST(vt0.c1 AS NUMERIC) END WHERE (((((IFNULL(DISTINCT t2.c1, vt0.c0))AND(((t2.c6)<=(t2.c1)))))OR(((t2.c0)||(t2.c6))))) ORDER BY t2.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(DISTINCT t2.c1, vt0.c0))AND(((t2.c6)<=(t2.c1)))))OR(((t2.c0)||(t2.c6))))) IS TRUE)  as count FROM vt0 INDEXED BY i59 FULL OUTER JOIN t2 ON CASE WHEN ((vt0.c0) NOTNULL) THEN CAST(vt0.c1 AS NUMERIC) END ORDER BY t2.c0 DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((json_array_length(t0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(t0.c0)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((json_array_length(t0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(t0.c0)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((json_array_length(t0.c0)) IS FALSE));
SELECT ALL * FROM t0, t2, vt0 WHERE (((((t2.c1)OR(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t2.c1)OR(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, t2, vt0);
SELECT ALL * FROM t0, t2, vt0 WHERE (((((t2.c1)OR(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t2.c1)OR(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, t2, vt0);
SELECT ALL * FROM t0, t2, vt0 WHERE (((((t2.c1)OR(vt0.c1))) IS FALSE));
SELECT COUNT(*) FROM t2 WHERE ((((((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c6)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c6)))) IS TRUE)) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((((((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c6)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c6)))) IS TRUE)) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((((((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c6)))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (CASE WHEN ((t2.c1) NOT BETWEEN (vt0.c0) AND (t2.c1)) THEN (((vt0.c0))=((t2.c6))) WHEN ((t2.c6)LIKE(0.8863452900613735)) THEN COALESCE(t2.c6, t2.c0, vt0.c0, t2.c6) WHEN TRIM(t0.c0, t2.c1) THEN ((vt0.c0)>(t2.c0)) WHEN t2.c2 COLLATE RTRIM THEN (((t2.c2)) BETWEEN ((t2.c0)) AND ((vt0.c0))) WHEN 2.080237356E9 THEN ((x'2a5b')*(vt0.c0)) END) ORDER BY ((CASE WHEN t0.c0 THEN 0.7313342652024942 WHEN t0.c0 THEN t2.c6 WHEN t2.c1 THEN x'' END)>=(((t0.c0)/(t2.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t2.c1) NOT BETWEEN (vt0.c0) AND (t2.c1)) THEN (((vt0.c0))==((t2.c6))) WHEN ((t2.c6)LIKE(0.8863452900613735)) THEN COALESCE(t2.c6, t2.c0, vt0.c0, t2.c6) WHEN TRIM(t0.c0, t2.c1) THEN ((vt0.c0)>(t2.c0)) WHEN t2.c2 COLLATE RTRIM THEN (((t2.c2)) BETWEEN ((t2.c0)) AND ((vt0.c0))) WHEN 2.080237356E9 THEN ((x'2a5b')*(vt0.c0)) END) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY ((CASE WHEN t0.c0 THEN 0.7313342652024942 WHEN t0.c0 THEN t2.c6 WHEN t2.c1 THEN x'' END)>=(((t0.c0)/(t2.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (CASE WHEN ((t2.c1) NOT BETWEEN (vt0.c0) AND (t2.c1)) THEN (((vt0.c0))=((t2.c6))) WHEN ((t2.c6)LIKE(0.8863452900613735)) THEN COALESCE(t2.c6, t2.c0, vt0.c0, t2.c6) WHEN TRIM(t0.c0, t2.c1) THEN ((vt0.c0)>(t2.c0)) WHEN t2.c2 COLLATE RTRIM THEN (((t2.c2)) BETWEEN ((t2.c0)) AND ((vt0.c0))) WHEN 2.080237356E9 THEN ((x'2a5b')*(vt0.c0)) END) ORDER BY ((CASE WHEN t0.c0 THEN 0.7313342652024942 WHEN t0.c0 THEN t2.c6 WHEN t2.c1 THEN x'' END)>=(((t0.c0)/(t2.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t2.c1) NOT BETWEEN (vt0.c0) AND (t2.c1)) THEN (((vt0.c0))==((t2.c6))) WHEN ((t2.c6)LIKE(0.8863452900613735)) THEN COALESCE(t2.c6, t2.c0, vt0.c0, t2.c6) WHEN TRIM(t0.c0, t2.c1) THEN ((vt0.c0)>(t2.c0)) WHEN t2.c2 COLLATE RTRIM THEN (((t2.c2)) BETWEEN ((t2.c0)) AND ((vt0.c0))) WHEN 2.080237356E9 THEN ((x'2a5b')*(vt0.c0)) END) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY ((CASE WHEN t0.c0 THEN 0.7313342652024942 WHEN t0.c0 THEN t2.c6 WHEN t2.c1 THEN x'' END)>=(((t0.c0)/(t2.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (CASE WHEN ((t2.c1) NOT BETWEEN (vt0.c0) AND (t2.c1)) THEN (((vt0.c0))=((t2.c6))) WHEN ((t2.c6)LIKE(0.8863452900613735)) THEN COALESCE(t2.c6, t2.c0, vt0.c0, t2.c6) WHEN TRIM(t0.c0, t2.c1) THEN ((vt0.c0)>(t2.c0)) WHEN t2.c2 COLLATE RTRIM THEN (((t2.c2)) BETWEEN ((t2.c0)) AND ((vt0.c0))) WHEN 2.080237356E9 THEN ((x'2a5b')*(vt0.c0)) END) ORDER BY ((CASE WHEN t0.c0 THEN 0.7313342652024942 WHEN t0.c0 THEN t2.c6 WHEN t2.c1 THEN x'' END)>=(((t0.c0)/(t2.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t2 WHERE ((((''))>((((t2.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((''))>((((t2.c2) IS TRUE))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE ((((''))>((((t2.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((''))>((((t2.c2) IS TRUE))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE ((((''))>((((t2.c2) IS TRUE)))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<((t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<((t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<((t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<((t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c0))<((t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM t2 WHERE (((CAST(t2.c6 AS REAL)) BETWEEN (LTRIM(t2.c1)) AND (TIME(t2.c2, t2.c2, t2.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(t2.c6 AS REAL)) BETWEEN (LTRIM(t2.c1)) AND (TIME(t2.c2, t2.c2, t2.c2)))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((CAST(t2.c6 AS REAL)) BETWEEN (LTRIM(t2.c1)) AND (TIME(t2.c2, t2.c2, t2.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(t2.c6 AS REAL)) BETWEEN (LTRIM(t2.c1)) AND (TIME(t2.c2, t2.c2, t2.c2)))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((CAST(t2.c6 AS REAL)) BETWEEN (LTRIM(t2.c1)) AND (TIME(t2.c2, t2.c2, t2.c2))));
SELECT ALL * FROM vt0, t0, t2 WHERE ((-1004645977 IN ((t2.c0 IN ())))) ORDER BY 0.8961210948183341  NULLS LAST, ((0.5229083035627735 COLLATE NOCASE) NOT NULL)  NULLS LAST, ((((CASE WHEN t0.c0 THEN t2.c2 ELSE t2.c1 END)AND(((t2.c2) NOT BETWEEN (vt0.c0) AND (t2.c1)))))AND((t2.c6 IN (t2.c0, t2.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((-1004645977 IN ((t2.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY 0.8961210948183341  NULLS LAST, ((0.5229083035627735 COLLATE NOCASE) NOT NULL)  NULLS LAST, ((((CASE WHEN t0.c0 THEN t2.c2 ELSE t2.c1 END)AND(((t2.c2) NOT BETWEEN (vt0.c0) AND (t2.c1)))))AND((t2.c6 IN (t2.c0, t2.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, t2 WHERE ((-1004645977 IN ((t2.c0 IN ())))) ORDER BY 0.8961210948183341  NULLS LAST, ((0.5229083035627735 COLLATE NOCASE) NOT NULL)  NULLS LAST, ((((CASE WHEN t0.c0 THEN t2.c2 ELSE t2.c1 END)AND(((t2.c2) NOT BETWEEN (vt0.c0) AND (t2.c1)))))AND((t2.c6 IN (t2.c0, t2.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((-1004645977 IN ((t2.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY 0.8961210948183341  NULLS LAST, ((0.5229083035627735 COLLATE NOCASE) NOT NULL)  NULLS LAST, ((((CASE WHEN t0.c0 THEN t2.c2 ELSE t2.c1 END)AND(((t2.c2) NOT BETWEEN (vt0.c0) AND (t2.c1)))))AND((t2.c6 IN (t2.c0, t2.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, t2 WHERE ((-1004645977 IN ((t2.c0 IN ())))) ORDER BY 0.8961210948183341  NULLS LAST, ((0.5229083035627735 COLLATE NOCASE) NOT NULL)  NULLS LAST, ((((CASE WHEN t0.c0 THEN t2.c2 ELSE t2.c1 END)AND(((t2.c2) NOT BETWEEN (vt0.c0) AND (t2.c1)))))AND((t2.c6 IN (t2.c0, t2.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (json_array_length((vt0.c1 IN ()), json_valid(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((vt0.c1 IN ()), json_valid(t0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (json_array_length((vt0.c1 IN ()), json_valid(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((vt0.c1 IN ()), json_valid(t0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t2 WHERE (t2.c1);
SELECT SUM(count) FROM (SELECT ((t2.c1) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (t2.c1);
SELECT SUM(count) FROM (SELECT ((t2.c1) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (t2.c1);
SELECT COUNT(*) FROM t0, t2 WHERE ((((((t2.c6) BETWEEN (t0.c0) AND (t2.c0))))<=((t0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c6) BETWEEN (t0.c0) AND (t2.c0))))<=((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE ((((((t2.c6) BETWEEN (t0.c0) AND (t2.c0))))<=((t0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c6) BETWEEN (t0.c0) AND (t2.c0))))<=((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE ((((((t2.c6) BETWEEN (t0.c0) AND (t2.c0))))<=((t0.c0 COLLATE NOCASE))));
SELECT * FROM t2 WHERE (CAST(CAST(t2.c1 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t2.c1 AS REAL) AS REAL)) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CAST(CAST(t2.c1 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t2.c1 AS REAL) AS REAL)) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CAST(CAST(t2.c1 AS REAL) AS REAL));
SELECT COUNT(*) FROM t0, t2 WHERE (t2.c6 COLLATE BINARY) ORDER BY ((NULL) NOTNULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t2.c6 COLLATE BINARY) IS TRUE)  as count FROM t0, t2 ORDER BY ((NULL) NOTNULL) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE (t2.c6 COLLATE BINARY) ORDER BY ((NULL) NOTNULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t2.c6 COLLATE BINARY) IS TRUE)  as count FROM t0, t2 ORDER BY ((NULL) NOTNULL) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE (t2.c6 COLLATE BINARY) ORDER BY ((NULL) NOTNULL) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0)<(t0.c0))));
SELECT SUM(count) FROM (SELECT ((STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0)<(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0)<(t0.c0))));
SELECT SUM(count) FROM (SELECT ((STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0)<(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0)<(t0.c0))));
SELECT ALL COUNT(*) FROM t2 WHERE (CAST(((((t2.c0)AND(t2.c6)))AND(t2.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t2.c0)AND(t2.c6)))AND(t2.c1)) AS NUMERIC)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (CAST(((((t2.c0)AND(t2.c6)))AND(t2.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t2.c0)AND(t2.c6)))AND(t2.c1)) AS NUMERIC)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (CAST(((((t2.c0)AND(t2.c6)))AND(t2.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (((((t2.c1)IS NOT(t2.c2))) IS FALSE)) ORDER BY t2.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1)IS NOT(t2.c2))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY t2.c1 ASC);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (((((t2.c1)IS NOT(t2.c2))) IS FALSE)) ORDER BY t2.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1)IS NOT(t2.c2))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY t2.c1 ASC);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (((((t2.c1)IS NOT(t2.c2))) IS FALSE)) ORDER BY t2.c1 ASC;
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (((CASE t2.c2  WHEN 1.385777957E9 THEN t2.c2 WHEN t2.c2 THEN t0.c0 WHEN t2.c6 THEN t2.c6 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t2.c2  WHEN 1.385777957E9 THEN t2.c2 WHEN t2.c2 THEN t0.c0 WHEN t2.c6 THEN t2.c6 END) ISNULL)) IS TRUE)  as count FROM t2, vt0, t0);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (((CASE t2.c2  WHEN 1.385777957E9 THEN t2.c2 WHEN t2.c2 THEN t0.c0 WHEN t2.c6 THEN t2.c6 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t2.c2  WHEN 1.385777957E9 THEN t2.c2 WHEN t2.c2 THEN t0.c0 WHEN t2.c6 THEN t2.c6 END) ISNULL)) IS TRUE)  as count FROM t2, vt0, t0);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (((CASE t2.c2  WHEN 1.385777957E9 THEN t2.c2 WHEN t2.c2 THEN t0.c0 WHEN t2.c6 THEN t2.c6 END) ISNULL));
SELECT ALL * FROM vt0, t0, t2 WHERE (((LIKELY(vt0.c1)) NOT NULL)) ORDER BY ((((((((vt0.c0)OR(t0.c0 COLLATE RTRIM)))OR(NULL)))OR((t2.c1 IN ()))))AND(IFNULL(DISTINCT t0.c0, t2.c0))) ASC  NULLS FIRST, (~ (vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, json_type(CASE WHEN t0.c0 THEN vt0.c0 ELSE t2.c2 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt0.c1)) NOT NULL)) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY ((((((((vt0.c0)OR(t0.c0 COLLATE RTRIM)))OR(NULL)))OR((t2.c1 IN ()))))AND(IFNULL(DISTINCT t0.c0, t2.c0))) ASC  NULLS FIRST, (~ (vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, json_type(CASE WHEN t0.c0 THEN vt0.c0 ELSE t2.c2 END)  NULLS LAST);
SELECT ALL * FROM vt0, t0, t2 WHERE (((LIKELY(vt0.c1)) NOT NULL)) ORDER BY ((((((((vt0.c0)OR(t0.c0 COLLATE RTRIM)))OR(NULL)))OR((t2.c1 IN ()))))AND(IFNULL(DISTINCT t0.c0, t2.c0))) ASC  NULLS FIRST, (~ (vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, json_type(CASE WHEN t0.c0 THEN vt0.c0 ELSE t2.c2 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt0.c1)) NOT NULL)) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY ((((((((vt0.c0)OR(t0.c0 COLLATE RTRIM)))OR(NULL)))OR((t2.c1 IN ()))))AND(IFNULL(DISTINCT t0.c0, t2.c0))) ASC  NULLS FIRST, (~ (vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, json_type(CASE WHEN t0.c0 THEN vt0.c0 ELSE t2.c2 END)  NULLS LAST);
SELECT ALL * FROM vt0, t0, t2 WHERE (((LIKELY(vt0.c1)) NOT NULL)) ORDER BY ((((((((vt0.c0)OR(t0.c0 COLLATE RTRIM)))OR(NULL)))OR((t2.c1 IN ()))))AND(IFNULL(DISTINCT t0.c0, t2.c0))) ASC  NULLS FIRST, (~ (vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, json_type(CASE WHEN t0.c0 THEN vt0.c0 ELSE t2.c2 END)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (t2.c6) ORDER BY CASE (('368889222') NOTNULL)  WHEN (t2.c0 IN ()) THEN ((t2.c2)IS(t2.c0)) WHEN ((vt0.c0)*(t2.c2)) THEN ((t2.c2) IS FALSE) WHEN (vt0.c0 IN (t0.c0, t2.c2)) THEN t2.c2 END;
SELECT SUM(count) FROM (SELECT ((t2.c6) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY CASE (('368889222') NOTNULL)  WHEN (t2.c0 IN ()) THEN ((t2.c2)IS(t2.c0)) WHEN ((vt0.c0)*(t2.c2)) THEN ((t2.c2) IS FALSE) WHEN (vt0.c0 IN (t0.c0, t2.c2)) THEN t2.c2 END);
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (t2.c6) ORDER BY CASE (('368889222') NOTNULL)  WHEN (t2.c0 IN ()) THEN ((t2.c2)IS(t2.c0)) WHEN ((vt0.c0)*(t2.c2)) THEN ((t2.c2) IS FALSE) WHEN (vt0.c0 IN (t0.c0, t2.c2)) THEN t2.c2 END;
SELECT SUM(count) FROM (SELECT ((t2.c6) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY CASE (('368889222') NOTNULL)  WHEN (t2.c0 IN ()) THEN ((t2.c2)IS(t2.c0)) WHEN ((vt0.c0)*(t2.c2)) THEN ((t2.c2) IS FALSE) WHEN (vt0.c0 IN (t0.c0, t2.c2)) THEN t2.c2 END);
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (t2.c6) ORDER BY CASE (('368889222') NOTNULL)  WHEN (t2.c0 IN ()) THEN ((t2.c2)IS(t2.c0)) WHEN ((vt0.c0)*(t2.c2)) THEN ((t2.c2) IS FALSE) WHEN (vt0.c0 IN (t0.c0, t2.c2)) THEN t2.c2 END;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON json_array_length(((((t2.c6)OR(vt0.c1)))AND(t0.c0))) INNER JOIN t2 ON (- (x'')) WHERE ((((vt0.c0 IN ()))<=((+ (vt0.c1))))) ORDER BY (((t0.c0 IN ())) BETWEEN (((t0.c0) NOT BETWEEN (vt0.c1) AND (t2.c2))) AND ((t2.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<=((+ (vt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON json_array_length(((((t2.c6)OR(vt0.c1)))AND(t0.c0))) INNER JOIN t2 ON (- (x'')) ORDER BY (((t0.c0 IN ())) BETWEEN (((t0.c0) NOT BETWEEN (vt0.c1) AND (t2.c2))) AND ((t2.c0 IN ()))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON json_array_length(((((t2.c6)OR(vt0.c1)))AND(t0.c0))) INNER JOIN t2 ON (- (x'')) WHERE ((((vt0.c0 IN ()))<=((+ (vt0.c1))))) ORDER BY (((t0.c0 IN ())) BETWEEN (((t0.c0) NOT BETWEEN (vt0.c1) AND (t2.c2))) AND ((t2.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<=((+ (vt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON json_array_length(((((t2.c6)OR(vt0.c1)))AND(t0.c0))) INNER JOIN t2 ON (- (x'')) ORDER BY (((t0.c0 IN ())) BETWEEN (((t0.c0) NOT BETWEEN (vt0.c1) AND (t2.c2))) AND ((t2.c0 IN ()))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON json_array_length(((((t2.c6)OR(vt0.c1)))AND(t0.c0))) INNER JOIN t2 ON (- (x'')) WHERE ((((vt0.c0 IN ()))<=((+ (vt0.c1))))) ORDER BY (((t0.c0 IN ())) BETWEEN (((t0.c0) NOT BETWEEN (vt0.c1) AND (t2.c2))) AND ((t2.c0 IN ())));
SELECT COUNT(*) FROM vt0, t2, t0 WHERE (CAST(((t0.c0) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt0, t2, t0);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE (CAST(((t0.c0) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt0, t2, t0);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE (CAST(((t0.c0) IS FALSE) AS BLOB));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN '﹧1#YZqpHC' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN '﹧1#YZqpHC' END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN '﹧1#YZqpHC' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN '﹧1#YZqpHC' END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN '﹧1#YZqpHC' END);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (CASE vt0.c1  WHEN t2.c6 THEN 0.07177622007220974 ELSE t0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN t2.c6 THEN 0.07177622007220974 ELSE t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, t2, vt0);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (CASE vt0.c1  WHEN t2.c6 THEN 0.07177622007220974 ELSE t0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN t2.c6 THEN 0.07177622007220974 ELSE t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, t2, vt0);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (CASE vt0.c1  WHEN t2.c6 THEN 0.07177622007220974 ELSE t0.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM t2, t0 WHERE (((((((t0.c0)AND(t2.c2)))AND(t2.c1)))/(((0.9632290644358733) BETWEEN (t2.c6) AND (t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t2.c2)))AND(t2.c1)))/(((0.9632290644358733) BETWEEN (t2.c6) AND (t2.c0))))) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE (((((((t0.c0)AND(t2.c2)))AND(t2.c1)))/(((0.9632290644358733) BETWEEN (t2.c6) AND (t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t2.c2)))AND(t2.c1)))/(((0.9632290644358733) BETWEEN (t2.c6) AND (t2.c0))))) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE (((((((t0.c0)AND(t2.c2)))AND(t2.c1)))/(((0.9632290644358733) BETWEEN (t2.c6) AND (t2.c0)))));
SELECT * FROM t2 WHERE (((((t2.c0)OR((+ (t2.c6)))))AND(HEX(t2.c1)))) ORDER BY ((((t2.c2) BETWEEN (t2.c6) AND (t2.c1))) NOT BETWEEN ((t2.c2 IN ())) AND (CAST(t2.c1 AS BLOB)))  NULLS LAST, ((((t2.c2) BETWEEN (t2.c0) AND (t2.c6)))>>(t2.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0)OR((+ (t2.c6)))))AND(HEX(t2.c1)))) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c2) BETWEEN (t2.c6) AND (t2.c1))) NOT BETWEEN ((t2.c2 IN ())) AND (CAST(t2.c1 AS BLOB)))  NULLS LAST, ((((t2.c2) BETWEEN (t2.c0) AND (t2.c6)))>>(t2.c1 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM t2 WHERE (((((t2.c0)OR((+ (t2.c6)))))AND(HEX(t2.c1)))) ORDER BY ((((t2.c2) BETWEEN (t2.c6) AND (t2.c1))) NOT BETWEEN ((t2.c2 IN ())) AND (CAST(t2.c1 AS BLOB)))  NULLS LAST, ((((t2.c2) BETWEEN (t2.c0) AND (t2.c6)))>>(t2.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0)OR((+ (t2.c6)))))AND(HEX(t2.c1)))) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c2) BETWEEN (t2.c6) AND (t2.c1))) NOT BETWEEN ((t2.c2 IN ())) AND (CAST(t2.c1 AS BLOB)))  NULLS LAST, ((((t2.c2) BETWEEN (t2.c0) AND (t2.c6)))>>(t2.c1 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM t2 WHERE (((((t2.c0)OR((+ (t2.c6)))))AND(HEX(t2.c1)))) ORDER BY ((((t2.c2) BETWEEN (t2.c6) AND (t2.c1))) NOT BETWEEN ((t2.c2 IN ())) AND (CAST(t2.c1 AS BLOB)))  NULLS LAST, ((((t2.c2) BETWEEN (t2.c0) AND (t2.c6)))>>(t2.c1 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM t2 WHERE (CAST((t2.c1 IN (t2.c6, 1.240983969E9)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t2.c1 IN (t2.c6, 1.240983969E9)) AS TEXT)) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CAST((t2.c1 IN (t2.c6, 1.240983969E9)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t2.c1 IN (t2.c6, 1.240983969E9)) AS TEXT)) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CAST((t2.c1 IN (t2.c6, 1.240983969E9)) AS TEXT));
SELECT COUNT(*) FROM t0 INDEXED BY i59, t2, vt0 WHERE ((((t2.c6))<=((((((((((t2.c1)OR(t2.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t2.c2)))))) ORDER BY ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) IN ()) DESC, STRFTIME(vt0.c1 COLLATE NOCASE, 0.11056121686459841, (((vt0.c1))<=((vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t2.c6))<=((((((((((t2.c1)OR(t2.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t2.c2)))))) IS TRUE)  as count FROM t0 INDEXED BY i59, t2, vt0 ORDER BY ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) IN ()) DESC, STRFTIME(vt0.c1 COLLATE NOCASE, 0.11056121686459841, (((vt0.c1))<=((vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM t0 INDEXED BY i59, t2, vt0 WHERE ((((t2.c6))<=((((((((((t2.c1)OR(t2.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t2.c2)))))) ORDER BY ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) IN ()) DESC, STRFTIME(vt0.c1 COLLATE NOCASE, 0.11056121686459841, (((vt0.c1))<=((vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t2.c6))<=((((((((((t2.c1)OR(t2.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t2.c2)))))) IS TRUE)  as count FROM t0 INDEXED BY i59, t2, vt0 ORDER BY ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0))) IN ()) DESC, STRFTIME(vt0.c1 COLLATE NOCASE, 0.11056121686459841, (((vt0.c1))<=((vt0.c1))))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (NULLIF(((((((((vt0.c0)OR(362752805)))AND(t2.c6)))AND(vt0.c0)))AND(t2.c1)), ((((vt0.c1)OR(t2.c2)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((((((vt0.c0)OR(362752805)))AND(t2.c6)))AND(vt0.c0)))AND(t2.c1)), ((((vt0.c1)OR(t2.c2)))OR(vt0.c1)))) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (NULLIF(((((((((vt0.c0)OR(362752805)))AND(t2.c6)))AND(vt0.c0)))AND(t2.c1)), ((((vt0.c1)OR(t2.c2)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((((((vt0.c0)OR(362752805)))AND(t2.c6)))AND(vt0.c0)))AND(t2.c1)), ((((vt0.c1)OR(t2.c2)))OR(vt0.c1)))) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (NULLIF(((((((((vt0.c0)OR(362752805)))AND(t2.c6)))AND(vt0.c0)))AND(t2.c1)), ((((vt0.c1)OR(t2.c2)))OR(vt0.c1))));
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(t0.c0 AS INTEGER) IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM t0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(t0.c0 AS INTEGER) IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM t0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(t0.c0 AS INTEGER) IN ())) ORDER BY NULL;
SELECT * FROM t0 INNER JOIN t2 ON SQLITE_SOURCE_ID() WHERE (((((t2.c1)-(t2.c2)))+(HEX(t2.c2)))) ORDER BY ((t2.c2)<(((NULL)IS(t2.c6)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1)-(t2.c2)))+(HEX(t2.c2)))) IS TRUE)  as count FROM t0 INNER JOIN t2 ON SQLITE_SOURCE_ID() ORDER BY ((t2.c2)<(((NULL)IS(t2.c6)))) DESC  NULLS LAST);
SELECT * FROM t0 INNER JOIN t2 ON SQLITE_SOURCE_ID() WHERE (((((t2.c1)-(t2.c2)))+(HEX(t2.c2)))) ORDER BY ((t2.c2)<(((NULL)IS(t2.c6)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1)-(t2.c2)))+(HEX(t2.c2)))) IS TRUE)  as count FROM t0 INNER JOIN t2 ON SQLITE_SOURCE_ID() ORDER BY ((t2.c2)<(((NULL)IS(t2.c6)))) DESC  NULLS LAST);
SELECT * FROM t0 INNER JOIN t2 ON SQLITE_SOURCE_ID() WHERE (((((t2.c1)-(t2.c2)))+(HEX(t2.c2)))) ORDER BY ((t2.c2)<(((NULL)IS(t2.c6)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN t2 ON (((((((vt0.c0))>((t2.c6))))OR(CAST(t2.c6 AS TEXT))))OR(((t2.c2) NOTNULL))) WHERE (CAST((vt0.c0 IN ()) AS REAL)) ORDER BY ((NOT (vt0.c1)) IN ()), ((t2.c6)GLOB(t0.c0)) COLLATE BINARY ASC  NULLS LAST, CASE (vt0.c0 IN ())  WHEN UNLIKELY(t2.c1) THEN t2.c0 COLLATE BINARY ELSE t2.c6 END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN t2 ON (((((((vt0.c0))>((t2.c6))))OR(CAST(t2.c6 AS TEXT))))OR(((t2.c2) NOTNULL))) ORDER BY ((NOT (vt0.c1)) IN ()), ((t2.c6)GLOB(t0.c0)) COLLATE BINARY ASC  NULLS LAST, CASE (vt0.c0 IN ())  WHEN UNLIKELY(t2.c1) THEN t2.c0 COLLATE BINARY ELSE t2.c6 END);
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN t2 ON (((((((vt0.c0))>((t2.c6))))OR(CAST(t2.c6 AS TEXT))))OR(((t2.c2) NOTNULL))) WHERE (CAST((vt0.c0 IN ()) AS REAL)) ORDER BY ((NOT (vt0.c1)) IN ()), ((t2.c6)GLOB(t0.c0)) COLLATE BINARY ASC  NULLS LAST, CASE (vt0.c0 IN ())  WHEN UNLIKELY(t2.c1) THEN t2.c0 COLLATE BINARY ELSE t2.c6 END;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN t2 ON (((((((vt0.c0))>((t2.c6))))OR(CAST(t2.c6 AS TEXT))))OR(((t2.c2) NOTNULL))) ORDER BY ((NOT (vt0.c1)) IN ()), ((t2.c6)GLOB(t0.c0)) COLLATE BINARY ASC  NULLS LAST, CASE (vt0.c0 IN ())  WHEN UNLIKELY(t2.c1) THEN t2.c0 COLLATE BINARY ELSE t2.c6 END);
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN t2 ON (((((((vt0.c0))>((t2.c6))))OR(CAST(t2.c6 AS TEXT))))OR(((t2.c2) NOTNULL))) WHERE (CAST((vt0.c0 IN ()) AS REAL)) ORDER BY ((NOT (vt0.c1)) IN ()), ((t2.c6)GLOB(t0.c0)) COLLATE BINARY ASC  NULLS LAST, CASE (vt0.c0 IN ())  WHEN UNLIKELY(t2.c1) THEN t2.c0 COLLATE BINARY ELSE t2.c6 END;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((((vt0.c1))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((((vt0.c1))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((((vt0.c1))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((((vt0.c1))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((((vt0.c1))<=((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (0.26009112209873353) ORDER BY t2.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.26009112209873353) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY t2.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (0.26009112209873353) ORDER BY t2.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.26009112209873353) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY t2.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t2, t0 WHERE (0.26009112209873353) ORDER BY t2.c1 DESC  NULLS LAST;
SELECT ALL * FROM t2 WHERE ((~ (LIKE(t2.c6, t2.c2, 'L')))) ORDER BY CAST((+ (t2.c2)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (LIKE(t2.c6, t2.c2, 'L')))) IS TRUE)  as count FROM t2 ORDER BY CAST((+ (t2.c2)) AS REAL)  NULLS LAST);
SELECT ALL * FROM t2 WHERE ((~ (LIKE(t2.c6, t2.c2, 'L')))) ORDER BY CAST((+ (t2.c2)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (LIKE(t2.c6, t2.c2, 'L')))) IS TRUE)  as count FROM t2 ORDER BY CAST((+ (t2.c2)) AS REAL)  NULLS LAST);
SELECT ALL * FROM t2 WHERE ((~ (LIKE(t2.c6, t2.c2, 'L')))) ORDER BY CAST((+ (t2.c2)) AS REAL)  NULLS LAST;
SELECT * FROM vt0 WHERE (((~ (vt0.c1)) IN ((~ (vt0.c0)), ((vt0.c0) IS FALSE)))) ORDER BY ((((((vt0.c1)<=(vt0.c0)))OR(vt0.c0)))AND(COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1))) DESC, ((((((((((((((vt0.c0) ISNULL))OR((((0X7ff01986))>((vt0.c0))))))OR(((vt0.c1) IS FALSE))))OR((((vt0.c0, vt0.c0, x''))!=((vt0.c0, vt0.c1, vt0.c1))))))AND(((vt0.c0)*(vt0.c0)))))AND(vt0.c1 COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c1)) IN ((~ (vt0.c0)), ((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)<=(vt0.c0)))OR(vt0.c0)))AND(COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1))) DESC, ((((((((((((((vt0.c0) ISNULL))OR((((0X7ff01986))>((vt0.c0))))))OR(((vt0.c1) IS FALSE))))OR((((vt0.c0, vt0.c0, x''))!=((vt0.c0, vt0.c1, vt0.c1))))))AND(((vt0.c0)*(vt0.c0)))))AND(vt0.c1 COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((~ (vt0.c1)) IN ((~ (vt0.c0)), ((vt0.c0) IS FALSE)))) ORDER BY ((((((vt0.c1)<=(vt0.c0)))OR(vt0.c0)))AND(COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1))) DESC, ((((((((((((((vt0.c0) ISNULL))OR((((0X7ff01986))>((vt0.c0))))))OR(((vt0.c1) IS FALSE))))OR((((vt0.c0, vt0.c0, x''))!=((vt0.c0, vt0.c1, vt0.c1))))))AND(((vt0.c0)*(vt0.c0)))))AND(vt0.c1 COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c1)) IN ((~ (vt0.c0)), ((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)<=(vt0.c0)))OR(vt0.c0)))AND(COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1))) DESC, ((((((((((((((vt0.c0) ISNULL))OR((((0X7ff01986))>((vt0.c0))))))OR(((vt0.c1) IS FALSE))))OR((((vt0.c0, vt0.c0, x''))!=((vt0.c0, vt0.c1, vt0.c1))))))AND(((vt0.c0)*(vt0.c0)))))AND(vt0.c1 COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((~ (vt0.c1)) IN ((~ (vt0.c0)), ((vt0.c0) IS FALSE)))) ORDER BY ((((((vt0.c1)<=(vt0.c0)))OR(vt0.c0)))AND(COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c1))) DESC, ((((((((((((((vt0.c0) ISNULL))OR((((0X7ff01986))>((vt0.c0))))))OR(((vt0.c1) IS FALSE))))OR((((vt0.c0, vt0.c0, x''))!=((vt0.c0, vt0.c1, vt0.c1))))))AND(((vt0.c0)*(vt0.c0)))))AND(vt0.c1 COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT * FROM t2, vt0 WHERE ((((t2.c6)LIKE(vt0.c1)) IN (t2.c1 COLLATE NOCASE))) ORDER BY (t2.c1 IN (t2.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c6)LIKE(vt0.c1)) IN (t2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t2, vt0 ORDER BY (t2.c1 IN (t2.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM t2, vt0 WHERE ((((t2.c6)LIKE(vt0.c1)) IN (t2.c1 COLLATE NOCASE))) ORDER BY (t2.c1 IN (t2.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c6)LIKE(vt0.c1)) IN (t2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t2, vt0 ORDER BY (t2.c1 IN (t2.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM t2, vt0 WHERE ((((t2.c6)LIKE(vt0.c1)) IN (t2.c1 COLLATE NOCASE))) ORDER BY (t2.c1 IN (t2.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t2 WHERE (((((((((((t2.c6) NOT NULL))OR(((t2.c2) BETWEEN (t2.c2) AND (t2.c1)))))OR(NULL)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)||(t2.c1))))) ORDER BY ((((((((((t2.c2)IS(t2.c0)))OR((~ (t2.c2)))))OR(((t2.c1)%('1002528082')))))AND(t2.c6 COLLATE NOCASE)))OR(((t2.c2)*(t2.c6)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t2.c6) NOT NULL))OR(((t2.c2) BETWEEN (t2.c2) AND (t2.c1)))))OR(NULL)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)||(t2.c1))))) IS TRUE)  as count FROM vt0, t2 ORDER BY ((((((((((t2.c2)IS(t2.c0)))OR((~ (t2.c2)))))OR(((t2.c1)%('1002528082')))))AND(t2.c6 COLLATE NOCASE)))OR(((t2.c2)*(t2.c6)))) DESC);
SELECT ALL * FROM vt0, t2 WHERE (((((((((((t2.c6) NOT NULL))OR(((t2.c2) BETWEEN (t2.c2) AND (t2.c1)))))OR(NULL)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)||(t2.c1))))) ORDER BY ((((((((((t2.c2)IS(t2.c0)))OR((~ (t2.c2)))))OR(((t2.c1)%('1002528082')))))AND(t2.c6 COLLATE NOCASE)))OR(((t2.c2)*(t2.c6)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t2.c6) NOT NULL))OR(((t2.c2) BETWEEN (t2.c2) AND (t2.c1)))))OR(NULL)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)||(t2.c1))))) IS TRUE)  as count FROM vt0, t2 ORDER BY ((((((((((t2.c2)IS(t2.c0)))OR((~ (t2.c2)))))OR(((t2.c1)%('1002528082')))))AND(t2.c6 COLLATE NOCASE)))OR(((t2.c2)*(t2.c6)))) DESC);
SELECT ALL * FROM vt0, t2 WHERE (((((((((((t2.c6) NOT NULL))OR(((t2.c2) BETWEEN (t2.c2) AND (t2.c1)))))OR(NULL)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)||(t2.c1))))) ORDER BY ((((((((((t2.c2)IS(t2.c0)))OR((~ (t2.c2)))))OR(((t2.c1)%('1002528082')))))AND(t2.c6 COLLATE NOCASE)))OR(((t2.c2)*(t2.c6)))) DESC;
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)OR(((vt0.c0)<=(vt0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c1 END))) ORDER BY ((t0.c0)>(t0.c0)), HEX(DISTINCT (- (vt0.c0))), json_remove(((NULL) NOT NULL), vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(((vt0.c0)<=(vt0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c0)>(t0.c0)), HEX(DISTINCT (- (vt0.c0))), json_remove(((NULL) NOT NULL), vt0.c1));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)OR(((vt0.c0)<=(vt0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c1 END))) ORDER BY ((t0.c0)>(t0.c0)), HEX(DISTINCT (- (vt0.c0))), json_remove(((NULL) NOT NULL), vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(((vt0.c0)<=(vt0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c0)>(t0.c0)), HEX(DISTINCT (- (vt0.c0))), json_remove(((NULL) NOT NULL), vt0.c1));
SELECT COUNT(*) FROM t2 FULL OUTER JOIN vt0 ON ((UPPER(DISTINCT t2.c6)) NOTNULL) WHERE ((((((vt0.c0)<<(vt0.c1)), ((t2.c6)IS(t2.c6)), ((t2.c2)<>(t2.c6))))<>((t2.c0, t2.c6 COLLATE BINARY, ((t2.c0) NOT NULL))))) ORDER BY ((vt0.c0) BETWEEN ((((vt0.c1, t2.c1, t2.c2))<((t2.c0, t2.c6, vt0.c1)))) AND ((~ (t2.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)<<(vt0.c1)), ((t2.c6)IS(t2.c6)), ((t2.c2)<>(t2.c6))))<>((t2.c0, t2.c6 COLLATE BINARY, ((t2.c0) NOT NULL))))) IS TRUE)  as count FROM t2 FULL OUTER JOIN vt0 ON ((UPPER(DISTINCT t2.c6)) NOTNULL) ORDER BY ((vt0.c0) BETWEEN ((((vt0.c1, t2.c1, t2.c2))<((t2.c0, t2.c6, vt0.c1)))) AND ((~ (t2.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t2 FULL OUTER JOIN vt0 ON ((UPPER(DISTINCT t2.c6)) NOTNULL) WHERE ((((((vt0.c0)<<(vt0.c1)), ((t2.c6)IS(t2.c6)), ((t2.c2)<>(t2.c6))))<>((t2.c0, t2.c6 COLLATE BINARY, ((t2.c0) NOT NULL))))) ORDER BY ((vt0.c0) BETWEEN ((((vt0.c1, t2.c1, t2.c2))<((t2.c0, t2.c6, vt0.c1)))) AND ((~ (t2.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)<<(vt0.c1)), ((t2.c6)IS(t2.c6)), ((t2.c2)<>(t2.c6))))<>((t2.c0, t2.c6 COLLATE BINARY, ((t2.c0) NOT NULL))))) IS TRUE)  as count FROM t2 FULL OUTER JOIN vt0 ON ((UPPER(DISTINCT t2.c6)) NOTNULL) ORDER BY ((vt0.c0) BETWEEN ((((vt0.c1, t2.c1, t2.c2))<((t2.c0, t2.c6, vt0.c1)))) AND ((~ (t2.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t2 FULL OUTER JOIN vt0 ON ((UPPER(DISTINCT t2.c6)) NOTNULL) WHERE ((((((vt0.c0)<<(vt0.c1)), ((t2.c6)IS(t2.c6)), ((t2.c2)<>(t2.c6))))<>((t2.c0, t2.c6 COLLATE BINARY, ((t2.c0) NOT NULL))))) ORDER BY ((vt0.c0) BETWEEN ((((vt0.c1, t2.c1, t2.c2))<((t2.c0, t2.c6, vt0.c1)))) AND ((~ (t2.c2))))  NULLS LAST;
SELECT ALL * FROM t2, vt0 INDEXED BY i18 WHERE (vt0.c0) ORDER BY ((((vt0.c0)/(vt0.c1))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t2, vt0 INDEXED BY i18 ORDER BY ((((vt0.c0)/(vt0.c1))) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM t2, vt0 INDEXED BY i18 WHERE (vt0.c0) ORDER BY ((((vt0.c0)/(vt0.c1))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t2, vt0 INDEXED BY i18 ORDER BY ((((vt0.c0)/(vt0.c1))) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)|(vt0.c1))))<=(('f.'))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)|(vt0.c1))))<=(('f.')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)|(vt0.c1))))<=(('f.'))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)|(vt0.c1))))<=(('f.')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)|(vt0.c1))))<=(('f.'))));
SELECT ALL COUNT(*) FROM t2 WHERE (0xffffffffb646d52e);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffb646d52e) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (0xffffffffb646d52e);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffb646d52e) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (0xffffffffb646d52e);
SELECT * FROM vt0 INDEXED BY i18 RIGHT OUTER JOIN t2 ON (((t2.c1)) BETWEEN ((((vt0.c1)AND(t2.c2)))) AND (((((t2.c2, t2.c2, vt0.c1))<=((vt0.c0, t2.c2, vt0.c0)))))) WHERE (STRFTIME(t2.c1, UNLIKELY(vt0.c1), CAST(t2.c0 AS NUMERIC))) ORDER BY (((+ (vt0.c1)))+(x'')), (((vt0.c1 IN (t2.c1, vt0.c1))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(t2.c1, UNLIKELY(vt0.c1), CAST(t2.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 INDEXED BY i18 RIGHT OUTER JOIN t2 ON (((t2.c1)) BETWEEN ((((vt0.c1)AND(t2.c2)))) AND (((((t2.c2, t2.c2, vt0.c1))<=((vt0.c0, t2.c2, vt0.c0)))))) ORDER BY (((+ (vt0.c1)))+(x'')), (((vt0.c1 IN (t2.c1, vt0.c1))) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM vt0 INDEXED BY i18 RIGHT OUTER JOIN t2 ON (((t2.c1)) BETWEEN ((((vt0.c1)AND(t2.c2)))) AND (((((t2.c2, t2.c2, vt0.c1))<=((vt0.c0, t2.c2, vt0.c0)))))) WHERE (STRFTIME(t2.c1, UNLIKELY(vt0.c1), CAST(t2.c0 AS NUMERIC))) ORDER BY (((+ (vt0.c1)))+(x'')), (((vt0.c1 IN (t2.c1, vt0.c1))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(t2.c1, UNLIKELY(vt0.c1), CAST(t2.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 INDEXED BY i18 RIGHT OUTER JOIN t2 ON (((t2.c1)) BETWEEN ((((vt0.c1)AND(t2.c2)))) AND (((((t2.c2, t2.c2, vt0.c1))<=((vt0.c0, t2.c2, vt0.c0)))))) ORDER BY (((+ (vt0.c1)))+(x'')), (((vt0.c1 IN (t2.c1, vt0.c1))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t2 ON ((((t2.c2) BETWEEN (t2.c0) AND (t2.c0))) ISNULL) WHERE (((((t2.c2)>(t2.c6))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c2)>(t2.c6))) IS FALSE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t2 ON ((((t2.c2) BETWEEN (t2.c0) AND (t2.c0))) ISNULL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t2 ON ((((t2.c2) BETWEEN (t2.c0) AND (t2.c0))) ISNULL) WHERE (((((t2.c2)>(t2.c6))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c2)>(t2.c6))) IS FALSE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t2 ON ((((t2.c2) BETWEEN (t2.c0) AND (t2.c0))) ISNULL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t2 ON ((((t2.c2) BETWEEN (t2.c0) AND (t2.c0))) ISNULL) WHERE (((((t2.c2)>(t2.c6))) IS FALSE));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY SQLITE_VERSION()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY SQLITE_VERSION()  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY SQLITE_VERSION()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY SQLITE_VERSION()  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY SQLITE_VERSION()  NULLS LAST;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((NULL)LIKE(vt0.c0)) COLLATE NOCASE CROSS JOIN t2 ON (((((t0.c0)OR(t2.c6)))OR(t2.c2)) IN (((vt0.c1)OR(t2.c0)))) WHERE ((((((((((t2.c0 IN ()))OR(((((((((((((1141516352)AND(t2.c0)))OR(t2.c0)))AND(t2.c2)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(((t2.c6)>(t0.c0)))))AND((vt0.c0 IN ()))))OR(((t0.c0)=(t2.c0))))) ORDER BY ((((vt0.c1) NOT BETWEEN (x'') AND (t0.c0)))/(t2.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((t2.c0 IN ()))OR(((((((((((((1141516352)AND(t2.c0)))OR(t2.c0)))AND(t2.c2)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(((t2.c6)>(t0.c0)))))AND((vt0.c0 IN ()))))OR(((t0.c0)=(t2.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((NULL)LIKE(vt0.c0)) COLLATE NOCASE CROSS JOIN t2 ON (((((t0.c0)OR(t2.c6)))OR(t2.c2)) IN (((vt0.c1)OR(t2.c0)))) ORDER BY ((((vt0.c1) NOT BETWEEN (x'') AND (t0.c0)))/(t2.c1)) DESC);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((NULL)LIKE(vt0.c0)) COLLATE NOCASE CROSS JOIN t2 ON (((((t0.c0)OR(t2.c6)))OR(t2.c2)) IN (((vt0.c1)OR(t2.c0)))) WHERE ((((((((((t2.c0 IN ()))OR(((((((((((((1141516352)AND(t2.c0)))OR(t2.c0)))AND(t2.c2)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(((t2.c6)>(t0.c0)))))AND((vt0.c0 IN ()))))OR(((t0.c0)=(t2.c0))))) ORDER BY ((((vt0.c1) NOT BETWEEN (x'') AND (t0.c0)))/(t2.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((t2.c0 IN ()))OR(((((((((((((1141516352)AND(t2.c0)))OR(t2.c0)))AND(t2.c2)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(((t2.c6)>(t0.c0)))))AND((vt0.c0 IN ()))))OR(((t0.c0)=(t2.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((NULL)LIKE(vt0.c0)) COLLATE NOCASE CROSS JOIN t2 ON (((((t0.c0)OR(t2.c6)))OR(t2.c2)) IN (((vt0.c1)OR(t2.c0)))) ORDER BY ((((vt0.c1) NOT BETWEEN (x'') AND (t0.c0)))/(t2.c1)) DESC);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((NULL)LIKE(vt0.c0)) COLLATE NOCASE CROSS JOIN t2 ON (((((t0.c0)OR(t2.c6)))OR(t2.c2)) IN (((vt0.c1)OR(t2.c0)))) WHERE ((((((((((t2.c0 IN ()))OR(((((((((((((1141516352)AND(t2.c0)))OR(t2.c0)))AND(t2.c2)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(((t2.c6)>(t0.c0)))))AND((vt0.c0 IN ()))))OR(((t0.c0)=(t2.c0))))) ORDER BY ((((vt0.c1) NOT BETWEEN (x'') AND (t0.c0)))/(t2.c1)) DESC;
SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(CAST(t0.c0 AS NUMERIC))))OR((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(CAST(t0.c0 AS NUMERIC))))OR((+ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(CAST(t0.c0 AS NUMERIC))))OR((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(CAST(t0.c0 AS NUMERIC))))OR((+ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(CAST(t0.c0 AS NUMERIC))))OR((+ (t0.c0)))));
SELECT * FROM t0, t2, vt0 WHERE ((((+ (t2.c2))) NOT BETWEEN (CAST(t2.c2 AS TEXT)) AND (CASE WHEN x'' THEN vt0.c0 END))) ORDER BY CASE t2.c6  WHEN t2.c2 THEN t2.c1 ELSE vt0.c0 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((+ (t2.c2))) NOT BETWEEN (CAST(t2.c2 AS TEXT)) AND (CASE WHEN x'' THEN vt0.c0 END))) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY CASE t2.c6  WHEN t2.c2 THEN t2.c1 ELSE vt0.c0 END COLLATE BINARY ASC);
SELECT * FROM t0, t2, vt0 WHERE ((((+ (t2.c2))) NOT BETWEEN (CAST(t2.c2 AS TEXT)) AND (CASE WHEN x'' THEN vt0.c0 END))) ORDER BY CASE t2.c6  WHEN t2.c2 THEN t2.c1 ELSE vt0.c0 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((+ (t2.c2))) NOT BETWEEN (CAST(t2.c2 AS TEXT)) AND (CASE WHEN x'' THEN vt0.c0 END))) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY CASE t2.c6  WHEN t2.c2 THEN t2.c1 ELSE vt0.c0 END COLLATE BINARY ASC);
SELECT * FROM t0, t2, vt0 WHERE ((((+ (t2.c2))) NOT BETWEEN (CAST(t2.c2 AS TEXT)) AND (CASE WHEN x'' THEN vt0.c0 END))) ORDER BY CASE t2.c6  WHEN t2.c2 THEN t2.c1 ELSE vt0.c0 END COLLATE BINARY ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0) BETWEEN (x'') AND (t0.c0)) WHEN (t0.c0 IN ()) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0) BETWEEN (x'') AND (t0.c0)) WHEN (t0.c0 IN ()) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE t0.c0 END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0) BETWEEN (x'') AND (t0.c0)) WHEN (t0.c0 IN ()) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0) BETWEEN (x'') AND (t0.c0)) WHEN (t0.c0 IN ()) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE t0.c0 END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0) BETWEEN (x'') AND (t0.c0)) WHEN (t0.c0 IN ()) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE t0.c0 END);
SELECT ALL * FROM t2, vt0, t0 WHERE ((('-1745941015')>(t2.c2)));
SELECT SUM(count) FROM (SELECT (((('-1745941015')>(t2.c2))) IS TRUE)  as count FROM t2, vt0, t0);
SELECT ALL * FROM t2, vt0, t0 WHERE ((('-1745941015')>(t2.c2)));
SELECT SUM(count) FROM (SELECT (((('-1745941015')>(t2.c2))) IS TRUE)  as count FROM t2, vt0, t0);
SELECT ALL * FROM t2, vt0, t0 WHERE ((('-1745941015')>(t2.c2)));
SELECT COUNT(*) FROM t2 WHERE (CAST(CAST(t2.c0 AS TEXT) AS NUMERIC)) ORDER BY CAST(((t2.c1)=(t2.c6)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t2.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM t2 ORDER BY CAST(((t2.c1)=(t2.c6)) AS INTEGER));
SELECT COUNT(*) FROM t2 WHERE (CAST(CAST(t2.c0 AS TEXT) AS NUMERIC)) ORDER BY CAST(((t2.c1)=(t2.c6)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t2.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM t2 ORDER BY CAST(((t2.c1)=(t2.c6)) AS INTEGER));
SELECT COUNT(*) FROM t2 WHERE (CAST(CAST(t2.c0 AS TEXT) AS NUMERIC)) ORDER BY CAST(((t2.c1)=(t2.c6)) AS INTEGER);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE ((~ (((t2.c1) IS TRUE)))) ORDER BY CAST(x'e589' AS BLOB) ASC  NULLS FIRST, ((((t0.c0) ISNULL)) NOT BETWEEN (CASE 0.7835817144728227  WHEN t2.c1 THEN 0.6154459514197174 WHEN t2.c1 THEN t2.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t2.c0 END) AND (CAST(t0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((~ (((t2.c1) IS TRUE)))) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY CAST(x'e589' AS BLOB) ASC  NULLS FIRST, ((((t0.c0) ISNULL)) NOT BETWEEN (CASE 0.7835817144728227  WHEN t2.c1 THEN 0.6154459514197174 WHEN t2.c1 THEN t2.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t2.c0 END) AND (CAST(t0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE ((~ (((t2.c1) IS TRUE)))) ORDER BY CAST(x'e589' AS BLOB) ASC  NULLS FIRST, ((((t0.c0) ISNULL)) NOT BETWEEN (CASE 0.7835817144728227  WHEN t2.c1 THEN 0.6154459514197174 WHEN t2.c1 THEN t2.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t2.c0 END) AND (CAST(t0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((~ (((t2.c1) IS TRUE)))) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY CAST(x'e589' AS BLOB) ASC  NULLS FIRST, ((((t0.c0) ISNULL)) NOT BETWEEN (CASE 0.7835817144728227  WHEN t2.c1 THEN 0.6154459514197174 WHEN t2.c1 THEN t2.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t2.c0 END) AND (CAST(t0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE ((~ (((t2.c1) IS TRUE)))) ORDER BY CAST(x'e589' AS BLOB) ASC  NULLS FIRST, ((((t0.c0) ISNULL)) NOT BETWEEN (CASE 0.7835817144728227  WHEN t2.c1 THEN 0.6154459514197174 WHEN t2.c1 THEN t2.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t2.c0 END) AND (CAST(t0.c0 AS REAL)));
SELECT * FROM t0 WHERE (0Xffffffff8e442d19);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff8e442d19) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0Xffffffff8e442d19);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff8e442d19) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0Xffffffff8e442d19);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (vt0.c0);
SELECT * FROM vt0, t0, t2 WHERE (((CAST(vt0.c0 AS TEXT))<<(CASE t2.c0  WHEN t2.c0 THEN t2.c6 END))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))<<(CASE t2.c0  WHEN t2.c0 THEN t2.c6 END))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY x'' DESC);
SELECT * FROM vt0, t0, t2 WHERE (((CAST(vt0.c0 AS TEXT))<<(CASE t2.c0  WHEN t2.c0 THEN t2.c6 END))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))<<(CASE t2.c0  WHEN t2.c0 THEN t2.c6 END))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY x'' DESC);
SELECT * FROM vt0, t0, t2 WHERE (((CAST(vt0.c0 AS TEXT))<<(CASE t2.c0  WHEN t2.c0 THEN t2.c6 END))) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN (NOT ('1540191344')) THEN t0.c0 COLLATE BINARY ELSE json_remove(t0.c0, t0.c0) END) ORDER BY CAST(IFNULL(DISTINCT t0.c0, t0.c0) AS REAL), (((- (t0.c0)))<=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN (NOT ('1540191344')) THEN t0.c0 COLLATE BINARY ELSE json_remove(t0.c0, t0.c0) END) IS TRUE)  as count FROM t0 ORDER BY CAST(IFNULL(DISTINCT t0.c0, t0.c0) AS REAL), (((- (t0.c0)))<=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN (NOT ('1540191344')) THEN t0.c0 COLLATE BINARY ELSE json_remove(t0.c0, t0.c0) END) ORDER BY CAST(IFNULL(DISTINCT t0.c0, t0.c0) AS REAL), (((- (t0.c0)))<=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN (NOT ('1540191344')) THEN t0.c0 COLLATE BINARY ELSE json_remove(t0.c0, t0.c0) END) IS TRUE)  as count FROM t0 ORDER BY CAST(IFNULL(DISTINCT t0.c0, t0.c0) AS REAL), (((- (t0.c0)))<=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN (NOT ('1540191344')) THEN t0.c0 COLLATE BINARY ELSE json_remove(t0.c0, t0.c0) END) ORDER BY CAST(IFNULL(DISTINCT t0.c0, t0.c0) AS REAL), (((- (t0.c0)))<=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM t0, t2 RIGHT OUTER JOIN vt0 ON ((LTRIM(vt0.c0)) NOT BETWEEN (t2.c6 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE)) WHERE ((((t0.c0)) BETWEEN ((((t2.c1) ISNULL))) AND (((('-1066878427')&(x''))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((((t2.c1) ISNULL))) AND (((('-1066878427')&(x'')))))) IS TRUE)  as count FROM t0, t2 RIGHT OUTER JOIN vt0 ON ((LTRIM(vt0.c0)) NOT BETWEEN (t2.c6 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0, t2 RIGHT OUTER JOIN vt0 ON ((LTRIM(vt0.c0)) NOT BETWEEN (t2.c6 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE)) WHERE ((((t0.c0)) BETWEEN ((((t2.c1) ISNULL))) AND (((('-1066878427')&(x''))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((((t2.c1) ISNULL))) AND (((('-1066878427')&(x'')))))) IS TRUE)  as count FROM t0, t2 RIGHT OUTER JOIN vt0 ON ((LTRIM(vt0.c0)) NOT BETWEEN (t2.c6 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0, t2 RIGHT OUTER JOIN vt0 ON ((LTRIM(vt0.c0)) NOT BETWEEN (t2.c6 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE)) WHERE ((((t0.c0)) BETWEEN ((((t2.c1) ISNULL))) AND (((('-1066878427')&(x''))))));
SELECT * FROM t2 WHERE (t2.c6) ORDER BY CASE t2.c6 COLLATE NOCASE  WHEN '2}' THEN ((t2.c1)<=(t2.c6)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t2.c6) IS TRUE)  as count FROM t2 ORDER BY CASE t2.c6 COLLATE NOCASE  WHEN '2}' THEN ((t2.c1)<=(t2.c6)) END  NULLS FIRST);
SELECT * FROM t2 WHERE (t2.c6) ORDER BY CASE t2.c6 COLLATE NOCASE  WHEN '2}' THEN ((t2.c1)<=(t2.c6)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t2.c6) IS TRUE)  as count FROM t2 ORDER BY CASE t2.c6 COLLATE NOCASE  WHEN '2}' THEN ((t2.c1)<=(t2.c6)) END  NULLS FIRST);
SELECT * FROM t2 WHERE (t2.c6) ORDER BY CASE t2.c6 COLLATE NOCASE  WHEN '2}' THEN ((t2.c1)<=(t2.c6)) END  NULLS FIRST;
SELECT ALL * FROM t0, t2 RIGHT OUTER JOIN vt0 ON (((t2.c0 COLLATE NOCASE))!=((t0.c0))) WHERE ((~ (((((((((vt0.c1)OR(t2.c1)))OR(t0.c0)))AND(t2.c2)))AND(0.43089536124781136)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((vt0.c1)OR(t2.c1)))OR(t0.c0)))AND(t2.c2)))AND(0.43089536124781136))))) IS TRUE)  as count FROM t0, t2 RIGHT OUTER JOIN vt0 ON (((t2.c0 COLLATE NOCASE))<>((t0.c0))));
SELECT ALL * FROM t0, t2 RIGHT OUTER JOIN vt0 ON (((t2.c0 COLLATE NOCASE))!=((t0.c0))) WHERE ((~ (((((((((vt0.c1)OR(t2.c1)))OR(t0.c0)))AND(t2.c2)))AND(0.43089536124781136)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((vt0.c1)OR(t2.c1)))OR(t0.c0)))AND(t2.c2)))AND(0.43089536124781136))))) IS TRUE)  as count FROM t0, t2 RIGHT OUTER JOIN vt0 ON (((t2.c0 COLLATE NOCASE))<>((t0.c0))));
SELECT ALL * FROM t0, t2 RIGHT OUTER JOIN vt0 ON (((t2.c0 COLLATE NOCASE))!=((t0.c0))) WHERE ((~ (((((((((vt0.c1)OR(t2.c1)))OR(t0.c0)))AND(t2.c2)))AND(0.43089536124781136)))));
SELECT * FROM t0 WHERE ((+ (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (((vt0.c0)<<(vt0.c0))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (0Xcfd78d)))||(((((t0.c0)AND(vt0.c1)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (0Xcfd78d)))||(((((t0.c0)AND(vt0.c1)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (((vt0.c0)<<(vt0.c0))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (0Xcfd78d)))||(((((t0.c0)AND(vt0.c1)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (0Xcfd78d)))||(((((t0.c0)AND(vt0.c1)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (((vt0.c0)<<(vt0.c0))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (0Xcfd78d)))||(((((t0.c0)AND(vt0.c1)))OR(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM t2 WHERE (t2.c2) ORDER BY (((t2.c6))<>((t2.c1))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((t2.c2) IS TRUE)  as count FROM t2 ORDER BY (((t2.c6))!=((t2.c1))) COLLATE NOCASE);
SELECT ALL * FROM t2 WHERE (t2.c2) ORDER BY (((t2.c6))<>((t2.c1))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((t2.c2) IS TRUE)  as count FROM t2 ORDER BY (((t2.c6))!=((t2.c1))) COLLATE NOCASE);
SELECT ALL * FROM t2 WHERE (t2.c2) ORDER BY (((t2.c6))<>((t2.c1))) COLLATE NOCASE;
SELECT * FROM t2, vt0, t0 WHERE (IFNULL(DISTINCT CASE t2.c0  WHEN t2.c1 THEN vt0.c0 ELSE t2.c2 END, vt0.c0));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CASE t2.c0  WHEN t2.c1 THEN vt0.c0 ELSE t2.c2 END, vt0.c0)) IS TRUE)  as count FROM t2, vt0, t0);
SELECT * FROM t2, vt0, t0 WHERE (IFNULL(DISTINCT CASE t2.c0  WHEN t2.c1 THEN vt0.c0 ELSE t2.c2 END, vt0.c0));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CASE t2.c0  WHEN t2.c1 THEN vt0.c0 ELSE t2.c2 END, vt0.c0)) IS TRUE)  as count FROM t2, vt0, t0);
SELECT * FROM t2, vt0, t0 WHERE (IFNULL(DISTINCT CASE t2.c0  WHEN t2.c1 THEN vt0.c0 ELSE t2.c2 END, vt0.c0));
SELECT COUNT(*) FROM t2 WHERE ((~ (t2.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((~ (t2.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((~ (t2.c1 COLLATE NOCASE)));
SELECT ALL * FROM t0, vt0, t2 WHERE (((((t2.c1)>=(t2.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1)>=(t2.c1))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL * FROM t0, vt0, t2 WHERE (((((t2.c1)>=(t2.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1)>=(t2.c1))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL * FROM t0, vt0, t2 WHERE (((((t2.c1)>=(t2.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM t2 WHERE (((t2.c2 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t2.c2 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((t2.c2 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t2.c2 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((t2.c2 COLLATE NOCASE) IS FALSE));
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE (((((CASE t2.c0  WHEN vt0.c1 THEN t2.c1 ELSE vt0.c1 END)AND(((vt0.c0)IS NOT(t0.c0)))))OR(((t2.c0)GLOB(t2.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CASE t2.c0  WHEN vt0.c1 THEN t2.c1 ELSE vt0.c1 END)AND(((vt0.c0)IS NOT(t0.c0)))))OR(((t2.c0)GLOB(t2.c2))))) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE (((((CASE t2.c0  WHEN vt0.c1 THEN t2.c1 ELSE vt0.c1 END)AND(((vt0.c0)IS NOT(t0.c0)))))OR(((t2.c0)GLOB(t2.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CASE t2.c0  WHEN vt0.c1 THEN t2.c1 ELSE vt0.c1 END)AND(((vt0.c0)IS NOT(t0.c0)))))OR(((t2.c0)GLOB(t2.c2))))) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE (((((CASE t2.c0  WHEN vt0.c1 THEN t2.c1 ELSE vt0.c1 END)AND(((vt0.c0)IS NOT(t0.c0)))))OR(((t2.c0)GLOB(t2.c2)))));
SELECT ALL * FROM t2, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t2, vt0);
SELECT ALL * FROM t2, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t2, vt0);
SELECT ALL * FROM t2, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t0, t2 INNER JOIN vt0 ON (((vt0.c1 IN ()))>(((vt0.c1)>(t0.c0)))) WHERE (CAST((t2.c6 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t2.c6 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0, t2 INNER JOIN vt0 ON (((vt0.c1 IN ()))>(((vt0.c1)>(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, t2 INNER JOIN vt0 ON (((vt0.c1 IN ()))>(((vt0.c1)>(t0.c0)))) WHERE (CAST((t2.c6 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t2.c6 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0, t2 INNER JOIN vt0 ON (((vt0.c1 IN ()))>(((vt0.c1)>(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, t2 INNER JOIN vt0 ON (((vt0.c1 IN ()))>(((vt0.c1)>(t0.c0)))) WHERE (CAST((t2.c6 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0, t2 WHERE (((((((t2.c6))<((NULL)))))<=(((t0.c0 IN (t0.c0, t0.c0)))))) ORDER BY t2.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((((t2.c6))<((NULL)))))<=(((t0.c0 IN (t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY t2.c1 ASC);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0, t2 WHERE (((((((t2.c6))<((NULL)))))<=(((t0.c0 IN (t0.c0, t0.c0)))))) ORDER BY t2.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((((t2.c6))<((NULL)))))<=(((t0.c0 IN (t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY t2.c1 ASC);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0, t2 WHERE (((((((t2.c6))<((NULL)))))<=(((t0.c0 IN (t0.c0, t0.c0)))))) ORDER BY t2.c1 ASC;
SELECT ALL * FROM t0, t2, vt0 WHERE (((((t2.c6) BETWEEN (vt0.c0) AND (''))) NOT BETWEEN (t2.c6 COLLATE RTRIM) AND ((((t2.c6))>=(('-1532159768')))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c6) BETWEEN (vt0.c0) AND (''))) NOT BETWEEN (t2.c6 COLLATE RTRIM) AND ((((t2.c6))>=(('-1532159768')))))) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM t0, t2, vt0 WHERE (((((t2.c6) BETWEEN (vt0.c0) AND (''))) NOT BETWEEN (t2.c6 COLLATE RTRIM) AND ((((t2.c6))>=(('-1532159768')))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c6) BETWEEN (vt0.c0) AND (''))) NOT BETWEEN (t2.c6 COLLATE RTRIM) AND ((((t2.c6))>=(('-1532159768')))))) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM t0, t2, vt0 WHERE (((((t2.c6) BETWEEN (vt0.c0) AND (''))) NOT BETWEEN (t2.c6 COLLATE RTRIM) AND ((((t2.c6))>=(('-1532159768')))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT * FROM vt0, t0, t2 WHERE ((((-1567152011 IN ()))&((+ (x'd37b'))))) ORDER BY ((((vt0.c1)<(t2.c6))) NOT BETWEEN (((((vt0.c1)OR(t2.c2)))AND(t0.c0))) AND ((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((-1567152011 IN ()))&((+ (x'd37b'))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY ((((vt0.c1)<(t2.c6))) NOT BETWEEN (((((vt0.c1)OR(t2.c2)))AND(t0.c0))) AND ((+ (vt0.c0)))) ASC);
SELECT * FROM vt0, t0, t2 WHERE ((((-1567152011 IN ()))&((+ (x'd37b'))))) ORDER BY ((((vt0.c1)<(t2.c6))) NOT BETWEEN (((((vt0.c1)OR(t2.c2)))AND(t0.c0))) AND ((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((-1567152011 IN ()))&((+ (x'd37b'))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY ((((vt0.c1)<(t2.c6))) NOT BETWEEN (((((vt0.c1)OR(t2.c2)))AND(t0.c0))) AND ((+ (vt0.c0)))) ASC);
SELECT * FROM vt0, t0, t2 WHERE ((((-1567152011 IN ()))&((+ (x'd37b'))))) ORDER BY ((((vt0.c1)<(t2.c6))) NOT BETWEEN (((((vt0.c1)OR(t2.c2)))AND(t0.c0))) AND ((+ (vt0.c0)))) ASC;
SELECT ALL * FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c1 ELSE CASE WHEN t0.c0 THEN 2080237356 ELSE t0.c0 END END WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c1 ELSE CASE WHEN t0.c0 THEN 2080237356 ELSE t0.c0 END END);
SELECT ALL * FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c1 ELSE CASE WHEN t0.c0 THEN 2080237356 ELSE t0.c0 END END WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c1 ELSE CASE WHEN t0.c0 THEN 2080237356 ELSE t0.c0 END END);
SELECT ALL * FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c1 ELSE CASE WHEN t0.c0 THEN 2080237356 ELSE t0.c0 END END WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS INTEGER) IN ())) ORDER BY (+ (((vt0.c1)!=(0.6511218052846672)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c1)<>(0.6511218052846672)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS INTEGER) IN ())) ORDER BY (+ (((vt0.c1)!=(0.6511218052846672)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c1)<>(0.6511218052846672)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS INTEGER) IN ())) ORDER BY (+ (((vt0.c1)!=(0.6511218052846672)))) ASC;
SELECT * FROM t2, t0 WHERE (((((t2.c2) IS TRUE))IS(0x29fa046f)));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c2) IS TRUE))IS(0X29fa046f))) IS TRUE)  as count FROM t2, t0);
SELECT * FROM t2, t0 WHERE (((((t2.c2) IS TRUE))IS(0x29fa046f)));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c2) IS TRUE))IS(0X29fa046f))) IS TRUE)  as count FROM t2, t0);
SELECT * FROM t2, t0 WHERE (((((t2.c2) IS TRUE))IS(0x29fa046f)));
SELECT * FROM t0, t2 NATURAL JOIN vt0 WHERE (CASE ((t2.c2)|(t0.c0))  WHEN ((vt0.c0)<=(t2.c6)) THEN t2.c0 WHEN ((t2.c6)IS NOT(vt0.c1)) THEN ((t2.c0)LIKE(vt0.c0)) WHEN (~ (t0.c0)) THEN x'' END) ORDER BY t0.c0, ((((vt0.c0)) NOT BETWEEN ((0.7220796798752345)) AND ((t0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((t2.c2)|(t0.c0))  WHEN ((vt0.c0)<=(t2.c6)) THEN t2.c0 WHEN ((t2.c6)IS NOT(vt0.c1)) THEN ((t2.c0)LIKE(vt0.c0)) WHEN (~ (t0.c0)) THEN x'' END) IS TRUE)  as count FROM t0, t2 NATURAL JOIN vt0 ORDER BY t0.c0, ((((vt0.c0)) NOT BETWEEN ((0.7220796798752345)) AND ((t0.c0))) IN ()) ASC);
SELECT * FROM t0, t2 NATURAL JOIN vt0 WHERE (CASE ((t2.c2)|(t0.c0))  WHEN ((vt0.c0)<=(t2.c6)) THEN t2.c0 WHEN ((t2.c6)IS NOT(vt0.c1)) THEN ((t2.c0)LIKE(vt0.c0)) WHEN (~ (t0.c0)) THEN x'' END) ORDER BY t0.c0, ((((vt0.c0)) NOT BETWEEN ((0.7220796798752345)) AND ((t0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((t2.c2)|(t0.c0))  WHEN ((vt0.c0)<=(t2.c6)) THEN t2.c0 WHEN ((t2.c6)IS NOT(vt0.c1)) THEN ((t2.c0)LIKE(vt0.c0)) WHEN (~ (t0.c0)) THEN x'' END) IS TRUE)  as count FROM t0, t2 NATURAL JOIN vt0 ORDER BY t0.c0, ((((vt0.c0)) NOT BETWEEN ((0.7220796798752345)) AND ((t0.c0))) IN ()) ASC);
SELECT * FROM t0, t2 NATURAL JOIN vt0 WHERE (CASE ((t2.c2)|(t0.c0))  WHEN ((vt0.c0)<=(t2.c6)) THEN t2.c0 WHEN ((t2.c6)IS NOT(vt0.c1)) THEN ((t2.c0)LIKE(vt0.c0)) WHEN (~ (t0.c0)) THEN x'' END) ORDER BY t0.c0, ((((vt0.c0)) NOT BETWEEN ((0.7220796798752345)) AND ((t0.c0))) IN ()) ASC;
SELECT COUNT(*) FROM t2 WHERE (((ABS(t2.c6)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(t2.c6)) NOT NULL)) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((ABS(t2.c6)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(t2.c6)) NOT NULL)) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((ABS(t2.c6)) NOT NULL));
SELECT COUNT(*) FROM t2, vt0 WHERE (((((vt0.c0)*(t2.c1))) BETWEEN (((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c0))) AND ('')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(t2.c1))) BETWEEN (((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c0))) AND (''))) IS TRUE)  as count FROM t2, vt0);
SELECT COUNT(*) FROM t2, vt0 WHERE (((((vt0.c0)*(t2.c1))) BETWEEN (((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c0))) AND ('')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(t2.c1))) BETWEEN (((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c0))) AND (''))) IS TRUE)  as count FROM t2, vt0);
SELECT COUNT(*) FROM t2, vt0 WHERE (((((vt0.c0)*(t2.c1))) BETWEEN (((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c0))) AND ('')));
SELECT ALL * FROM t2, vt0 WHERE (((t2.c1) NOT BETWEEN (vt0.c1) AND ('0.027810812482815583')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t2.c1) NOT BETWEEN (vt0.c1) AND ('0.027810812482815583')) COLLATE RTRIM) IS TRUE)  as count FROM t2, vt0);
SELECT ALL * FROM t2, vt0 WHERE (((t2.c1) NOT BETWEEN (vt0.c1) AND ('0.027810812482815583')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t2.c1) NOT BETWEEN (vt0.c1) AND ('0.027810812482815583')) COLLATE RTRIM) IS TRUE)  as count FROM t2, vt0);
SELECT ALL * FROM t2, vt0 WHERE (((t2.c1) NOT BETWEEN (vt0.c1) AND ('0.027810812482815583')) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t2, t0 WHERE ((NULLIF(t2.c1, t2.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((NULLIF(t2.c1, t2.c2) IN ())) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE ((NULLIF(t2.c1, t2.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((NULLIF(t2.c1, t2.c2) IN ())) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE ((NULLIF(t2.c1, t2.c2) IN ()));
SELECT ALL COUNT(*) FROM vt0, t2 WHERE ('') ORDER BY ((LIKELY(DISTINCT t2.c6)) NOT BETWEEN (((t2.c6) IS TRUE)) AND (t2.c1)) DESC, (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, t2 ORDER BY ((LIKELY(DISTINCT t2.c6)) NOT BETWEEN (((t2.c6) IS TRUE)) AND (t2.c1)) DESC, (vt0.c0 IN ()));
SELECT ALL COUNT(*) FROM vt0, t2 WHERE ('') ORDER BY ((LIKELY(DISTINCT t2.c6)) NOT BETWEEN (((t2.c6) IS TRUE)) AND (t2.c1)) DESC, (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, t2 ORDER BY ((LIKELY(DISTINCT t2.c6)) NOT BETWEEN (((t2.c6) IS TRUE)) AND (t2.c1)) DESC, (vt0.c0 IN ()));
SELECT ALL COUNT(*) FROM vt0, t2 WHERE ('') ORDER BY ((LIKELY(DISTINCT t2.c6)) NOT BETWEEN (((t2.c6) IS TRUE)) AND (t2.c1)) DESC, (vt0.c0 IN ());
SELECT * FROM vt0, t0 WHERE ((+ (((vt0.c1) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((+ (((vt0.c1) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((+ (((vt0.c1) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)LIKE(((t0.c0)LIKE(t0.c0))))) ORDER BY CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)LIKE(((t0.c0)LIKE(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CHANGES()  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)LIKE(((t0.c0)LIKE(t0.c0))))) ORDER BY CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)LIKE(((t0.c0)LIKE(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CHANGES()  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)LIKE(((t0.c0)LIKE(t0.c0))))) ORDER BY CHANGES()  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY (t0.c0 IN ());
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY (t0.c0 IN ());
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY (t0.c0 IN ());
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(((vt0.c0) IS TRUE), vt0.c1 COLLATE RTRIM)) ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN (((vt0.c0)+(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((vt0.c0) IS TRUE), vt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN (((vt0.c0)+(NULL)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(((vt0.c0) IS TRUE), vt0.c1 COLLATE RTRIM)) ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN (((vt0.c0)+(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((vt0.c0) IS TRUE), vt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN (((vt0.c0)+(NULL)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(((vt0.c0) IS TRUE), vt0.c1 COLLATE RTRIM)) ORDER BY (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN (((vt0.c0)+(NULL)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)OR(NULL)) COLLATE BINARY) ORDER BY '1377898940'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)OR(NULL)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY '1377898940'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)OR(NULL)) COLLATE BINARY) ORDER BY '1377898940'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)OR(NULL)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY '1377898940'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)OR(NULL)) COLLATE BINARY) ORDER BY '1377898940'  NULLS FIRST;
SELECT ALL * FROM vt0, t0, t2 WHERE (((((vt0.c1)) BETWEEN ((t2.c1)) AND ((t2.c0))) IN (((t2.c6) BETWEEN (t2.c1) AND (x'9865'))))) ORDER BY ((((((((((vt0.c0)OR(t2.c6)))AND(vt0.c0)))OR(vt0.c1)))OR(t2.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)) BETWEEN ((t2.c1)) AND ((t2.c0))) IN (((t2.c6) BETWEEN (t2.c1) AND (x'9865'))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY ((((((((((vt0.c0)OR(t2.c6)))AND(vt0.c0)))OR(vt0.c1)))OR(t2.c2))) NOT NULL));
SELECT ALL * FROM vt0, t0, t2 WHERE (((((vt0.c1)) BETWEEN ((t2.c1)) AND ((t2.c0))) IN (((t2.c6) BETWEEN (t2.c1) AND (x'9865'))))) ORDER BY ((((((((((vt0.c0)OR(t2.c6)))AND(vt0.c0)))OR(vt0.c1)))OR(t2.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)) BETWEEN ((t2.c1)) AND ((t2.c0))) IN (((t2.c6) BETWEEN (t2.c1) AND (x'9865'))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY ((((((((((vt0.c0)OR(t2.c6)))AND(vt0.c0)))OR(vt0.c1)))OR(t2.c2))) NOT NULL));
SELECT ALL * FROM vt0, t0, t2 WHERE (((((vt0.c1)) BETWEEN ((t2.c1)) AND ((t2.c0))) IN (((t2.c6) BETWEEN (t2.c1) AND (x'9865'))))) ORDER BY ((((((((((vt0.c0)OR(t2.c6)))AND(vt0.c0)))OR(vt0.c1)))OR(t2.c2))) NOT NULL);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) IS FALSE)) NOT NULL)) ORDER BY ((((((vt0.c0)-(vt0.c0)))OR((NOT (vt0.c0)))))AND(((0.18563957922644236)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)-(vt0.c0)))OR((NOT (vt0.c0)))))AND(((0.18563957922644236)OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) IS FALSE)) NOT NULL)) ORDER BY ((((((vt0.c0)-(vt0.c0)))OR((NOT (vt0.c0)))))AND(((0.18563957922644236)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)-(vt0.c0)))OR((NOT (vt0.c0)))))AND(((0.18563957922644236)OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) IS FALSE)) NOT NULL)) ORDER BY ((((((vt0.c0)-(vt0.c0)))OR((NOT (vt0.c0)))))AND(((0.18563957922644236)OR(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT ALL * FROM t0, t2 WHERE ((((t2.c0 IN ()))|(((t2.c6) NOTNULL)))) ORDER BY ((((t0.c0)%(t0.c0)))>>(COALESCE(DISTINCT t2.c2, t2.c0))) ASC  NULLS FIRST, (((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c6)))) NOT NULL)  NULLS LAST, t2.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0 IN ()))|(((t2.c6) NOTNULL)))) IS TRUE)  as count FROM t0, t2 ORDER BY ((((t0.c0)%(t0.c0)))>>(COALESCE(DISTINCT t2.c2, t2.c0))) ASC  NULLS FIRST, (((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c6)))) NOT NULL)  NULLS LAST, t2.c1  NULLS LAST);
SELECT ALL * FROM t0, t2 WHERE ((((t2.c0 IN ()))|(((t2.c6) NOTNULL)))) ORDER BY ((((t0.c0)%(t0.c0)))>>(COALESCE(DISTINCT t2.c2, t2.c0))) ASC  NULLS FIRST, (((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c6)))) NOT NULL)  NULLS LAST, t2.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0 IN ()))|(((t2.c6) NOTNULL)))) IS TRUE)  as count FROM t0, t2 ORDER BY ((((t0.c0)%(t0.c0)))>>(COALESCE(DISTINCT t2.c2, t2.c0))) ASC  NULLS FIRST, (((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c6)))) NOT NULL)  NULLS LAST, t2.c1  NULLS LAST);
SELECT ALL * FROM t0, t2 WHERE ((((t2.c0 IN ()))|(((t2.c6) NOTNULL)))) ORDER BY ((((t0.c0)%(t0.c0)))>>(COALESCE(DISTINCT t2.c2, t2.c0))) ASC  NULLS FIRST, (((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c6)))) NOT NULL)  NULLS LAST, t2.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE BINARY THEN ((t0.c0)*(vt0.c1)) WHEN NULLIF(vt0.c0, t0.c0) THEN json_quote(t0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE BINARY THEN ((t0.c0)*(vt0.c1)) WHEN NULLIF(vt0.c0, t0.c0) THEN json_quote(t0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c0))) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE BINARY THEN ((t0.c0)*(vt0.c1)) WHEN NULLIF(vt0.c0, t0.c0) THEN json_quote(t0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE BINARY THEN ((t0.c0)*(vt0.c1)) WHEN NULLIF(vt0.c0, t0.c0) THEN json_quote(t0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c0))) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE BINARY THEN ((t0.c0)*(vt0.c1)) WHEN NULLIF(vt0.c0, t0.c0) THEN json_quote(t0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c0))) END);
SELECT ALL * FROM t0, vt0, t2 WHERE (((vt0.c0)-(((((((((t2.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))))) ORDER BY ((((t2.c1 IN ()), ((0.13300211821255892) IS FALSE), vt0.c1 COLLATE NOCASE))<>((x'', 0.3758101522442111, CASE WHEN t2.c2 THEN t2.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(((((((((t2.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY ((((t2.c1 IN ()), ((0.13300211821255892) IS FALSE), vt0.c1 COLLATE NOCASE))!=((x'', 0.3758101522442111, CASE WHEN t2.c2 THEN t2.c1 END))));
SELECT ALL * FROM t0, vt0, t2 WHERE (((vt0.c0)-(((((((((t2.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))))) ORDER BY ((((t2.c1 IN ()), ((0.13300211821255892) IS FALSE), vt0.c1 COLLATE NOCASE))<>((x'', 0.3758101522442111, CASE WHEN t2.c2 THEN t2.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(((((((((t2.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY ((((t2.c1 IN ()), ((0.13300211821255892) IS FALSE), vt0.c1 COLLATE NOCASE))!=((x'', 0.3758101522442111, CASE WHEN t2.c2 THEN t2.c1 END))));
SELECT ALL * FROM t0, vt0, t2 WHERE (((vt0.c0)-(((((((((t2.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))))) ORDER BY ((((t2.c1 IN ()), ((0.13300211821255892) IS FALSE), vt0.c1 COLLATE NOCASE))<>((x'', 0.3758101522442111, CASE WHEN t2.c2 THEN t2.c1 END)));
SELECT ALL * FROM vt0, t0, t2 WHERE ((- (((vt0.c1)!=(vt0.c0))))) ORDER BY (((t2.c2)) BETWEEN ((CAST('-447259627' AS BLOB))) AND ((t2.c6 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (((t2.c2)) BETWEEN ((CAST('-447259627' AS BLOB))) AND ((t2.c6 COLLATE NOCASE))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, t2 WHERE ((- (((vt0.c1)!=(vt0.c0))))) ORDER BY (((t2.c2)) BETWEEN ((CAST('-447259627' AS BLOB))) AND ((t2.c6 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (((t2.c2)) BETWEEN ((CAST('-447259627' AS BLOB))) AND ((t2.c6 COLLATE NOCASE))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, t2 WHERE ((- (((vt0.c1)!=(vt0.c0))))) ORDER BY (((t2.c2)) BETWEEN ((CAST('-447259627' AS BLOB))) AND ((t2.c6 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0, t2 WHERE ((((((- (NULL)))OR(CAST(t2.c1 AS BLOB))))OR(((t2.c1) BETWEEN (t0.c0) AND (NULL))))) ORDER BY LAST_INSERT_ROWID() ASC;
SELECT SUM(count) FROM (SELECT (((((((- (NULL)))OR(CAST(t2.c1 AS BLOB))))OR(((t2.c1) BETWEEN (t0.c0) AND (NULL))))) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY LAST_INSERT_ROWID() ASC);
SELECT ALL * FROM t0, vt0, t2 WHERE ((((((- (NULL)))OR(CAST(t2.c1 AS BLOB))))OR(((t2.c1) BETWEEN (t0.c0) AND (NULL))))) ORDER BY LAST_INSERT_ROWID() ASC;
SELECT SUM(count) FROM (SELECT (((((((- (NULL)))OR(CAST(t2.c1 AS BLOB))))OR(((t2.c1) BETWEEN (t0.c0) AND (NULL))))) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY LAST_INSERT_ROWID() ASC);
SELECT ALL * FROM t0, vt0, t2 WHERE ((((((- (NULL)))OR(CAST(t2.c1 AS BLOB))))OR(((t2.c1) BETWEEN (t0.c0) AND (NULL))))) ORDER BY LAST_INSERT_ROWID() ASC;
SELECT ALL * FROM vt0, t2, t0 WHERE ((t2.c1 IN ((t2.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((t2.c1 IN ((t2.c2 IN ())))) IS TRUE)  as count FROM vt0, t2, t0);
SELECT ALL * FROM vt0, t2, t0 WHERE ((t2.c1 IN ((t2.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((t2.c1 IN ((t2.c2 IN ())))) IS TRUE)  as count FROM vt0, t2, t0);
SELECT ALL * FROM vt0, t2, t0 WHERE ((t2.c1 IN ((t2.c2 IN ()))));
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0, vt0.c1, '-177580722')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, NULL, vt0.c1)))))) ORDER BY ((((~ (vt0.c0))))<=((vt0.c1 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0, vt0.c1, '-177580722')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, NULL, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c0))))<=((vt0.c1 COLLATE NOCASE))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0, vt0.c1, '-177580722')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, NULL, vt0.c1)))))) ORDER BY ((((~ (vt0.c0))))<=((vt0.c1 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0, vt0.c1, '-177580722')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, NULL, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c0))))<=((vt0.c1 COLLATE NOCASE))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0, vt0.c1, '-177580722')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, NULL, vt0.c1)))))) ORDER BY ((((~ (vt0.c0))))<=((vt0.c1 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN (~ (vt0.c0)) END) ORDER BY CASE (('-1981143133')|(vt0.c1))  WHEN (vt0.c0 IN ()) THEN (((vt0.c1))<=((NULL))) WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)IS NOT(vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((((((((((((vt0.c0)OR(vt0.c0)))AND('')))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(0X3d5515a0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) IS FALSE) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE (('-1981143133')|(vt0.c1))  WHEN (vt0.c0 IN ()) THEN (((vt0.c1))<=((NULL))) WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)IS NOT(vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((((((((((((vt0.c0)OR(vt0.c0)))AND('')))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(0x3d5515a0)) END DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN (~ (vt0.c0)) END) ORDER BY CASE (('-1981143133')|(vt0.c1))  WHEN (vt0.c0 IN ()) THEN (((vt0.c1))<=((NULL))) WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)IS NOT(vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((((((((((((vt0.c0)OR(vt0.c0)))AND('')))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(0X3d5515a0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) IS FALSE) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE (('-1981143133')|(vt0.c1))  WHEN (vt0.c0 IN ()) THEN (((vt0.c1))<=((NULL))) WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)IS NOT(vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((((((((((((vt0.c0)OR(vt0.c0)))AND('')))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(0x3d5515a0)) END DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN (~ (vt0.c0)) END) ORDER BY CASE (('-1981143133')|(vt0.c1))  WHEN (vt0.c0 IN ()) THEN (((vt0.c1))<=((NULL))) WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1)IS NOT(vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((((((((((((vt0.c0)OR(vt0.c0)))AND('')))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(0X3d5515a0)) END DESC;
SELECT * FROM vt0, t2, t0 WHERE (CASE UPPER(t2.c0)  WHEN (- (t2.c6)) THEN CASE WHEN vt0.c1 THEN t2.c6 ELSE t2.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE UPPER(t2.c0)  WHEN (- (t2.c6)) THEN CASE WHEN vt0.c1 THEN t2.c6 ELSE t2.c0 END END) IS TRUE)  as count FROM vt0, t2, t0);
SELECT * FROM vt0, t2, t0 WHERE (CASE UPPER(t2.c0)  WHEN (- (t2.c6)) THEN CASE WHEN vt0.c1 THEN t2.c6 ELSE t2.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE UPPER(t2.c0)  WHEN (- (t2.c6)) THEN CASE WHEN vt0.c1 THEN t2.c6 ELSE t2.c0 END END) IS TRUE)  as count FROM vt0, t2, t0);
SELECT * FROM vt0, t2, t0 WHERE (CASE UPPER(t2.c0)  WHEN (- (t2.c6)) THEN CASE WHEN vt0.c1 THEN t2.c6 ELSE t2.c0 END END);
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c0 COLLATE RTRIM)))AND(t0.c0 COLLATE NOCASE))) ORDER BY (~ (((t0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0 COLLATE RTRIM)))AND(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c0) NOTNULL))) DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c0 COLLATE RTRIM)))AND(t0.c0 COLLATE NOCASE))) ORDER BY (~ (((t0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0 COLLATE RTRIM)))AND(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c0) NOTNULL))) DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c0 COLLATE RTRIM)))AND(t0.c0 COLLATE NOCASE))) ORDER BY (~ (((t0.c0) NOTNULL))) DESC;
SELECT ALL * FROM t2, t0 WHERE (((((t0.c0)<>(t2.c0))) IS TRUE)) ORDER BY ((((t0.c0)*(t2.c1))) BETWEEN ((((t2.c2)) BETWEEN ((t2.c6)) AND ((t2.c6)))) AND (t0.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((t2.c2) NOT BETWEEN (((t2.c1)IS NOT(0xfffffffff9e1e864))) AND ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)!=(t2.c0))) IS TRUE)) IS TRUE)  as count FROM t2 NOT INDEXED, t0 ORDER BY ((((t0.c0)*(t2.c1))) BETWEEN ((((t2.c2)) BETWEEN ((t2.c6)) AND ((t2.c6)))) AND (t0.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((t2.c2) NOT BETWEEN (((t2.c1)IS NOT(0xfffffffff9e1e864))) AND ((t0.c0 IN ()))));
SELECT ALL * FROM t2, t0 WHERE (((((t0.c0)<>(t2.c0))) IS TRUE)) ORDER BY ((((t0.c0)*(t2.c1))) BETWEEN ((((t2.c2)) BETWEEN ((t2.c6)) AND ((t2.c6)))) AND (t0.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((t2.c2) NOT BETWEEN (((t2.c1)IS NOT(0xfffffffff9e1e864))) AND ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)!=(t2.c0))) IS TRUE)) IS TRUE)  as count FROM t2 NOT INDEXED, t0 ORDER BY ((((t0.c0)*(t2.c1))) BETWEEN ((((t2.c2)) BETWEEN ((t2.c6)) AND ((t2.c6)))) AND (t0.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((t2.c2) NOT BETWEEN (((t2.c1)IS NOT(0xfffffffff9e1e864))) AND ((t0.c0 IN ()))));
SELECT ALL * FROM t2, t0 WHERE (((((t0.c0)<>(t2.c0))) IS TRUE)) ORDER BY ((((t0.c0)*(t2.c1))) BETWEEN ((((t2.c2)) BETWEEN ((t2.c6)) AND ((t2.c6)))) AND (t0.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((t2.c2) NOT BETWEEN (((t2.c1)IS NOT(0xfffffffff9e1e864))) AND ((t0.c0 IN ())));
SELECT * FROM t0 WHERE (((((t0.c0)*(t0.c0)))>((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)*(t0.c0)))>((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)*(t0.c0)))>((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)*(t0.c0)))>((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)*(t0.c0)))>((t0.c0 IN ()))));
SELECT * FROM vt0, t0 WHERE (CASE WHEN (NOT (0.3175019930548929)) THEN json_insert(0Xffffffff84bab3df, vt0.c0, vt0.c0) ELSE (NOT (vt0.c0)) END) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)OR(vt0.c0)), ((t0.c0) NOTNULL), ((t0.c0) NOT NULL))) AND ((((0.33956807609122286) BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)=(vt0.c0))))) DESC  NULLS FIRST, ((('A7^J母~Y'))=((CAST(vt0.c1 AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (0.3175019930548929)) THEN json_insert(0xffffffff84bab3df, vt0.c0, vt0.c0) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)OR(vt0.c0)), ((t0.c0) NOTNULL), ((t0.c0) NOT NULL))) AND ((((0.33956807609122286) BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)=(vt0.c0))))) DESC  NULLS FIRST, ((('A7^J母~Y'))=((CAST(vt0.c1 AS INTEGER)))) ASC);
SELECT * FROM vt0, t0 WHERE (CASE WHEN (NOT (0.3175019930548929)) THEN json_insert(0Xffffffff84bab3df, vt0.c0, vt0.c0) ELSE (NOT (vt0.c0)) END) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)OR(vt0.c0)), ((t0.c0) NOTNULL), ((t0.c0) NOT NULL))) AND ((((0.33956807609122286) BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)=(vt0.c0))))) DESC  NULLS FIRST, ((('A7^J母~Y'))=((CAST(vt0.c1 AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (0.3175019930548929)) THEN json_insert(0xffffffff84bab3df, vt0.c0, vt0.c0) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)OR(vt0.c0)), ((t0.c0) NOTNULL), ((t0.c0) NOT NULL))) AND ((((0.33956807609122286) BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)=(vt0.c0))))) DESC  NULLS FIRST, ((('A7^J母~Y'))=((CAST(vt0.c1 AS INTEGER)))) ASC);
SELECT * FROM vt0, t0 WHERE (CASE WHEN (NOT (0.3175019930548929)) THEN json_insert(0Xffffffff84bab3df, vt0.c0, vt0.c0) ELSE (NOT (vt0.c0)) END) ORDER BY (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)OR(vt0.c0)), ((t0.c0) NOTNULL), ((t0.c0) NOT NULL))) AND ((((0.33956807609122286) BETWEEN (vt0.c1) AND (vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)=(vt0.c0))))) DESC  NULLS FIRST, ((('A7^J母~Y'))=((CAST(vt0.c1 AS INTEGER)))) ASC;
SELECT COUNT(*) FROM t2 INNER JOIN vt0 ON CAST((((t2.c0))<((t2.c0))) AS NUMERIC) FULL OUTER JOIN t0 ON '61L蠹QᒹW(' WHERE (UNLIKELY(((t0.c0)<=(vt0.c1)))) ORDER BY ((CAST(t2.c6 AS TEXT)) IS TRUE), ((((((((((t0.c0)<>('I%')))OR(((t2.c0) NOTNULL))))AND((((('1902348127')OR(t2.c2)))OR(t2.c2)))))OR(((x'4c14')=(t2.c2)))))AND(((vt0.c0)<>(t2.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c0)<=(vt0.c1)))) IS TRUE)  as count FROM t2 INNER JOIN vt0 ON CAST((((t2.c0))<((t2.c0))) AS NUMERIC) FULL OUTER JOIN t0 ON '61L蠹QᒹW(' ORDER BY ((CAST(t2.c6 AS TEXT)) IS TRUE), ((((((((((t0.c0)<>('I%')))OR(((t2.c0) NOTNULL))))AND((((('1902348127')OR(t2.c2)))OR(t2.c2)))))OR(((x'4c14')=(t2.c2)))))AND(((vt0.c0)<>(t2.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t2 INNER JOIN vt0 ON CAST((((t2.c0))<((t2.c0))) AS NUMERIC) FULL OUTER JOIN t0 ON '61L蠹QᒹW(' WHERE (UNLIKELY(((t0.c0)<=(vt0.c1)))) ORDER BY ((CAST(t2.c6 AS TEXT)) IS TRUE), ((((((((((t0.c0)<>('I%')))OR(((t2.c0) NOTNULL))))AND((((('1902348127')OR(t2.c2)))OR(t2.c2)))))OR(((x'4c14')=(t2.c2)))))AND(((vt0.c0)<>(t2.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c0)<=(vt0.c1)))) IS TRUE)  as count FROM t2 INNER JOIN vt0 ON CAST((((t2.c0))<((t2.c0))) AS NUMERIC) FULL OUTER JOIN t0 ON '61L蠹QᒹW(' ORDER BY ((CAST(t2.c6 AS TEXT)) IS TRUE), ((((((((((t0.c0)<>('I%')))OR(((t2.c0) NOTNULL))))AND((((('1902348127')OR(t2.c2)))OR(t2.c2)))))OR(((x'4c14')=(t2.c2)))))AND(((vt0.c0)<>(t2.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t2 INNER JOIN vt0 ON CAST((((t2.c0))<((t2.c0))) AS NUMERIC) FULL OUTER JOIN t0 ON '61L蠹QᒹW(' WHERE (UNLIKELY(((t0.c0)<=(vt0.c1)))) ORDER BY ((CAST(t2.c6 AS TEXT)) IS TRUE), ((((((((((t0.c0)<>('I%')))OR(((t2.c0) NOTNULL))))AND((((('1902348127')OR(t2.c2)))OR(t2.c2)))))OR(((x'4c14')=(t2.c2)))))AND(((vt0.c0)<>(t2.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER));
SELECT ALL * FROM t0, t2 CROSS JOIN vt0 ON TRIM(((t2.c0)LIKE(vt0.c0))) WHERE (((((((t0.c0)AND(vt0.c0)))AND(vt0.c1)))<=(t2.c0)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(vt0.c0)))AND(vt0.c1)))<=(t2.c0))) IS TRUE)  as count FROM t0, t2 CROSS JOIN vt0 ON TRIM(((t2.c0)LIKE(vt0.c0))));
SELECT ALL * FROM t0, t2 CROSS JOIN vt0 ON TRIM(((t2.c0)LIKE(vt0.c0))) WHERE (((((((t0.c0)AND(vt0.c0)))AND(vt0.c1)))<=(t2.c0)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(vt0.c0)))AND(vt0.c1)))<=(t2.c0))) IS TRUE)  as count FROM t0, t2 CROSS JOIN vt0 ON TRIM(((t2.c0)LIKE(vt0.c0))));
SELECT ALL * FROM t0, t2 CROSS JOIN vt0 ON TRIM(((t2.c0)LIKE(vt0.c0))) WHERE (((((((t0.c0)AND(vt0.c0)))AND(vt0.c1)))<=(t2.c0)));
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM t0, vt0, t2 WHERE ((CASE t2.c1  WHEN t2.c1 THEN t2.c6 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t2.c0 THEN 0.5780955380492362 WHEN 0.2631364064407158 THEN t2.c0 ELSE t2.c6 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t2.c1  WHEN t2.c1 THEN t2.c6 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t2.c0 THEN 0.5780955380492362 WHEN 0.2631364064407158 THEN t2.c0 ELSE t2.c6 END IN ())) IS TRUE)  as count FROM t0, vt0, t2);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE ((CASE t2.c1  WHEN t2.c1 THEN t2.c6 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t2.c0 THEN 0.5780955380492362 WHEN 0.2631364064407158 THEN t2.c0 ELSE t2.c6 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t2.c1  WHEN t2.c1 THEN t2.c6 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t2.c0 THEN 0.5780955380492362 WHEN 0.2631364064407158 THEN t2.c0 ELSE t2.c6 END IN ())) IS TRUE)  as count FROM t0, vt0, t2);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE ((CASE t2.c1  WHEN t2.c1 THEN t2.c6 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t2.c0 THEN 0.5780955380492362 WHEN 0.2631364064407158 THEN t2.c0 ELSE t2.c6 END IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) ISNULL));
SELECT ALL * FROM t0 WHERE ((((- (t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0, NULL))==((t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)=(0.8597011122480998)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY ((((t0.c0))>(('S*{spb<'))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c0, t0.c0, NULL))=((t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)=(0.8597011122480998)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0))>(('S*{spb<'))) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0, NULL))==((t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)=(0.8597011122480998)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY ((((t0.c0))>(('S*{spb<'))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c0, t0.c0, NULL))=((t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)=(0.8597011122480998)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0))>(('S*{spb<'))) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c0, t0.c0, NULL))==((t0.c0, t0.c0, t0.c0))) THEN ((t0.c0)=(0.8597011122480998)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY ((((t0.c0))>(('S*{spb<'))) IN ());
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (CASE t2.c2  WHEN NULL THEN t2.c6 ELSE '_UuXMJ' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE t2.c2  WHEN NULL THEN t2.c6 ELSE '_UuXMJ' END COLLATE RTRIM) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (CASE t2.c2  WHEN NULL THEN t2.c6 ELSE '_UuXMJ' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE t2.c2  WHEN NULL THEN t2.c6 ELSE '_UuXMJ' END COLLATE RTRIM) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (CASE t2.c2  WHEN NULL THEN t2.c6 ELSE '_UuXMJ' END COLLATE RTRIM);
SELECT * FROM vt0, t0, t2 WHERE (CASE ((t2.c1) IS TRUE)  WHEN '0.032068578775258594' COLLATE RTRIM THEN ((((((((t2.c1)OR(vt0.c1)))AND(t2.c1)))OR(t2.c6)))AND(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t2.c1) IS TRUE)  WHEN '0.032068578775258594' COLLATE RTRIM THEN ((((((((t2.c1)OR(vt0.c1)))AND(t2.c1)))OR(t2.c6)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0, t0, t2);
SELECT * FROM vt0, t0, t2 WHERE (CASE ((t2.c1) IS TRUE)  WHEN '0.032068578775258594' COLLATE RTRIM THEN ((((((((t2.c1)OR(vt0.c1)))AND(t2.c1)))OR(t2.c6)))AND(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t2.c1) IS TRUE)  WHEN '0.032068578775258594' COLLATE RTRIM THEN ((((((((t2.c1)OR(vt0.c1)))AND(t2.c1)))OR(t2.c6)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0, t0, t2);
SELECT * FROM vt0, t0, t2 WHERE (CASE ((t2.c1) IS TRUE)  WHEN '0.032068578775258594' COLLATE RTRIM THEN ((((((((t2.c1)OR(vt0.c1)))AND(t2.c1)))OR(t2.c6)))AND(vt0.c1)) END);
SELECT ALL COUNT(*) FROM t2 WHERE ((((~ (t2.c6)))>=(((t2.c1)-(t2.c6))))) ORDER BY (((t2.c6 IN ()))<=((((t2.c6)) NOT BETWEEN ((t2.c0)) AND ((t2.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t2.c6)))>=(((t2.c1)-(t2.c6))))) IS TRUE)  as count FROM t2 ORDER BY (((t2.c6 IN ()))<=((((t2.c6)) NOT BETWEEN ((t2.c0)) AND ((t2.c2))))) DESC);
SELECT ALL COUNT(*) FROM t2 WHERE ((((~ (t2.c6)))>=(((t2.c1)-(t2.c6))))) ORDER BY (((t2.c6 IN ()))<=((((t2.c6)) NOT BETWEEN ((t2.c0)) AND ((t2.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t2.c6)))>=(((t2.c1)-(t2.c6))))) IS TRUE)  as count FROM t2 ORDER BY (((t2.c6 IN ()))<=((((t2.c6)) NOT BETWEEN ((t2.c0)) AND ((t2.c2))))) DESC);
SELECT ALL COUNT(*) FROM t2 WHERE ((((~ (t2.c6)))>=(((t2.c1)-(t2.c6))))) ORDER BY (((t2.c6 IN ()))<=((((t2.c6)) NOT BETWEEN ((t2.c0)) AND ((t2.c2))))) DESC;
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)AND(vt0.c0)))AND(vt0.c1)) COLLATE BINARY) ORDER BY ((CAST(t0.c0 AS TEXT)) IS TRUE), CAST(CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(vt0.c0)))AND(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c0 AS TEXT)) IS TRUE), CAST(CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS INTEGER)  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)AND(vt0.c0)))AND(vt0.c1)) COLLATE BINARY) ORDER BY ((CAST(t0.c0 AS TEXT)) IS TRUE), CAST(CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(vt0.c0)))AND(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c0 AS TEXT)) IS TRUE), CAST(CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS INTEGER)  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0)AND(vt0.c0)))AND(vt0.c1)) COLLATE BINARY) ORDER BY ((CAST(t0.c0 AS TEXT)) IS TRUE), CAST(CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c0))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY ((((('' IN (t0.c0, t0.c0)))OR(CAST(x'' AS NUMERIC))))OR(((t0.c0)<<(t0.c0)))) DESC, (((t0.c0 IN ()))*(CAST(t0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((('' IN (t0.c0, t0.c0)))OR(CAST(x'' AS NUMERIC))))OR(((t0.c0)<<(t0.c0)))) DESC, (((t0.c0 IN ()))*(CAST(t0.c0 AS BLOB))) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c0))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY ((((('' IN (t0.c0, t0.c0)))OR(CAST(x'' AS NUMERIC))))OR(((t0.c0)<<(t0.c0)))) DESC, (((t0.c0 IN ()))*(CAST(t0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((('' IN (t0.c0, t0.c0)))OR(CAST(x'' AS NUMERIC))))OR(((t0.c0)<<(t0.c0)))) DESC, (((t0.c0 IN ()))*(CAST(t0.c0 AS BLOB))) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c0))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY ((((('' IN (t0.c0, t0.c0)))OR(CAST(x'' AS NUMERIC))))OR(((t0.c0)<<(t0.c0)))) DESC, (((t0.c0 IN ()))*(CAST(t0.c0 AS BLOB))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CAST((((x'eabb', vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) AS NUMERIC)) ORDER BY (+ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((x'eabb', vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((x'eabb', vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) AS NUMERIC)) ORDER BY (+ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((x'eabb', vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((x'eabb', vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) AS NUMERIC)) ORDER BY (+ (vt0.c0));
SELECT * FROM t2 WHERE ((((t2.c6 IN ()))<((((t2.c6))<((t2.c2)))))) ORDER BY CAST(((t2.c2) NOT NULL) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c6 IN ()))<((((t2.c6))<((t2.c2)))))) IS TRUE)  as count FROM t2 ORDER BY CAST(((t2.c2) NOT NULL) AS REAL)  NULLS FIRST);
SELECT * FROM t2 WHERE ((((t2.c6 IN ()))<((((t2.c6))<((t2.c2)))))) ORDER BY CAST(((t2.c2) NOT NULL) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c6 IN ()))<((((t2.c6))<((t2.c2)))))) IS TRUE)  as count FROM t2 ORDER BY CAST(((t2.c2) NOT NULL) AS REAL)  NULLS FIRST);
SELECT * FROM t2 WHERE ((((t2.c6 IN ()))<((((t2.c6))<((t2.c2)))))) ORDER BY CAST(((t2.c2) NOT NULL) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END) BETWEEN (-4.47259627E8) AND ((+ (t0.c0))))) ORDER BY LTRIM((- (t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END) BETWEEN (-4.47259627E8) AND ((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY LTRIM((- (t0.c0))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END) BETWEEN (-4.47259627E8) AND ((+ (t0.c0))))) ORDER BY LTRIM((- (t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END) BETWEEN (-4.47259627E8) AND ((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY LTRIM((- (t0.c0))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN NULL ELSE t0.c0 END) BETWEEN (-4.47259627E8) AND ((+ (t0.c0))))) ORDER BY LTRIM((- (t0.c0))) DESC;
SELECT * FROM t0, t2 NOT INDEXED WHERE ((~ (CAST(t2.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t2.c1 AS BLOB)))) IS TRUE)  as count FROM t0, t2);
SELECT * FROM t0, t2 NOT INDEXED WHERE ((~ (CAST(t2.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t2.c1 AS BLOB)))) IS TRUE)  as count FROM t0, t2);
SELECT * FROM t0, t2 NOT INDEXED WHERE ((~ (CAST(t2.c1 AS BLOB))));
SELECT * FROM vt0 WHERE ((1897564193 IN ()));
SELECT SUM(count) FROM (SELECT (((1897564193 IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((1897564193 IN ()));
SELECT SUM(count) FROM (SELECT (((1897564193 IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((1897564193 IN ()));
SELECT ALL * FROM vt0, t2, t0 WHERE (((((((t2.c6)AND('')))AND(t2.c0))) ISNULL)) ORDER BY CASE NULLIF(t0.c0, vt0.c0)  WHEN t2.c6 COLLATE NOCASE THEN ((vt0.c0)%(vt0.c0)) WHEN ((((t2.c1)AND(t2.c6)))OR(t2.c0)) THEN ((vt0.c0)<<(t2.c6)) WHEN ((t2.c6)>=(t2.c0)) THEN (vt0.c1 IN ()) END ASC  NULLS LAST, ((vt0.c1 COLLATE BINARY)&(((((t2.c2)AND(t2.c6)))AND(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t2.c6)AND('')))AND(t2.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY CASE NULLIF(t0.c0, vt0.c0)  WHEN t2.c6 COLLATE NOCASE THEN ((vt0.c0)%(vt0.c0)) WHEN ((((t2.c1)AND(t2.c6)))OR(t2.c0)) THEN ((vt0.c0)<<(t2.c6)) WHEN ((t2.c6)>=(t2.c0)) THEN (vt0.c1 IN ()) END ASC  NULLS LAST, ((vt0.c1 COLLATE BINARY)&(((((t2.c2)AND(t2.c6)))AND(t0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, t2, t0 WHERE (((((((t2.c6)AND('')))AND(t2.c0))) ISNULL)) ORDER BY CASE NULLIF(t0.c0, vt0.c0)  WHEN t2.c6 COLLATE NOCASE THEN ((vt0.c0)%(vt0.c0)) WHEN ((((t2.c1)AND(t2.c6)))OR(t2.c0)) THEN ((vt0.c0)<<(t2.c6)) WHEN ((t2.c6)>=(t2.c0)) THEN (vt0.c1 IN ()) END ASC  NULLS LAST, ((vt0.c1 COLLATE BINARY)&(((((t2.c2)AND(t2.c6)))AND(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t2.c6)AND('')))AND(t2.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY CASE NULLIF(t0.c0, vt0.c0)  WHEN t2.c6 COLLATE NOCASE THEN ((vt0.c0)%(vt0.c0)) WHEN ((((t2.c1)AND(t2.c6)))OR(t2.c0)) THEN ((vt0.c0)<<(t2.c6)) WHEN ((t2.c6)>=(t2.c0)) THEN (vt0.c1 IN ()) END ASC  NULLS LAST, ((vt0.c1 COLLATE BINARY)&(((((t2.c2)AND(t2.c6)))AND(t0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, t2, t0 WHERE (((((((t2.c6)AND('')))AND(t2.c0))) ISNULL)) ORDER BY CASE NULLIF(t0.c0, vt0.c0)  WHEN t2.c6 COLLATE NOCASE THEN ((vt0.c0)%(vt0.c0)) WHEN ((((t2.c1)AND(t2.c6)))OR(t2.c0)) THEN ((vt0.c0)<<(t2.c6)) WHEN ((t2.c6)>=(t2.c0)) THEN (vt0.c1 IN ()) END ASC  NULLS LAST, ((vt0.c1 COLLATE BINARY)&(((((t2.c2)AND(t2.c6)))AND(t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((((((t2.c2)AND(t2.c0)))OR(t0.c0)))-(((vt0.c1) BETWEEN (t2.c2) AND (t2.c0))))) ORDER BY ((((vt0.c1)+(vt0.c0)))IS NOT((vt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t2.c2)AND(t2.c0)))OR(t0.c0)))-(((vt0.c1) BETWEEN (t2.c2) AND (t2.c0))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY ((((vt0.c1)+(vt0.c0)))IS NOT((vt0.c1 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((((((t2.c2)AND(t2.c0)))OR(t0.c0)))-(((vt0.c1) BETWEEN (t2.c2) AND (t2.c0))))) ORDER BY ((((vt0.c1)+(vt0.c0)))IS NOT((vt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t2.c2)AND(t2.c0)))OR(t0.c0)))-(((vt0.c1) BETWEEN (t2.c2) AND (t2.c0))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY ((((vt0.c1)+(vt0.c0)))IS NOT((vt0.c1 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((((((t2.c2)AND(t2.c0)))OR(t0.c0)))-(((vt0.c1) BETWEEN (t2.c2) AND (t2.c0))))) ORDER BY ((((vt0.c1)+(vt0.c0)))IS NOT((vt0.c1 IN ())))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t2 INNER JOIN t0 ON ((ABS(t2.c6)) NOT NULL) WHERE ((((((t0.c0, x'1abf', t0.c0))>((t0.c0, t2.c6, t0.c0)))) NOT BETWEEN (CASE t0.c0  WHEN t2.c2 THEN t2.c2 END) AND ((t2.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, x'1abf', t0.c0))>((t0.c0, t2.c6, t0.c0)))) NOT BETWEEN (CASE t0.c0  WHEN t2.c2 THEN t2.c2 END) AND ((t2.c1 IN ())))) IS TRUE)  as count FROM t2 INNER JOIN t0 ON ((ABS(t2.c6)) NOT NULL));
SELECT COUNT(*) FROM t2 INNER JOIN t0 ON ((ABS(t2.c6)) NOT NULL) WHERE ((((((t0.c0, x'1abf', t0.c0))>((t0.c0, t2.c6, t0.c0)))) NOT BETWEEN (CASE t0.c0  WHEN t2.c2 THEN t2.c2 END) AND ((t2.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, x'1abf', t0.c0))>((t0.c0, t2.c6, t0.c0)))) NOT BETWEEN (CASE t0.c0  WHEN t2.c2 THEN t2.c2 END) AND ((t2.c1 IN ())))) IS TRUE)  as count FROM t2 INNER JOIN t0 ON ((ABS(t2.c6)) NOT NULL));
SELECT COUNT(*) FROM t2 INNER JOIN t0 ON ((ABS(t2.c6)) NOT NULL) WHERE ((((((t0.c0, x'1abf', t0.c0))>((t0.c0, t2.c6, t0.c0)))) NOT BETWEEN (CASE t0.c0  WHEN t2.c2 THEN t2.c2 END) AND ((t2.c1 IN ()))));
SELECT ALL * FROM vt0, t0, t2 WHERE ((((((t2.c2)<(t2.c6))))<(((((vt0.c1, vt0.c1, t2.c2))!=((t2.c0, t2.c0, t2.c0))))))) ORDER BY t2.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c2)<(t2.c6))))<(((((vt0.c1, vt0.c1, t2.c2))!=((t2.c0, t2.c0, t2.c0))))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY t2.c2  NULLS LAST);
SELECT ALL * FROM vt0, t0, t2 WHERE ((((((t2.c2)<(t2.c6))))<(((((vt0.c1, vt0.c1, t2.c2))!=((t2.c0, t2.c0, t2.c0))))))) ORDER BY t2.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c2)<(t2.c6))))<(((((vt0.c1, vt0.c1, t2.c2))!=((t2.c0, t2.c0, t2.c0))))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY t2.c2  NULLS LAST);
SELECT ALL * FROM vt0, t0, t2 WHERE ((((((t2.c2)<(t2.c6))))<(((((vt0.c1, vt0.c1, t2.c2))!=((t2.c0, t2.c0, t2.c0))))))) ORDER BY t2.c2  NULLS LAST;
SELECT ALL * FROM t0, t2, vt0 WHERE (((NOT (t2.c2)) IN (((t0.c0)||(t2.c6))))) ORDER BY ((LIKELY(vt0.c0))>=(0.2590253166092601)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (t2.c2)) IN (((t0.c0)||(t2.c6))))) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY ((LIKELY(vt0.c0))>=(0.2590253166092601)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, t2, vt0 WHERE (((NOT (t2.c2)) IN (((t0.c0)||(t2.c6))))) ORDER BY ((LIKELY(vt0.c0))>=(0.2590253166092601)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (t2.c2)) IN (((t0.c0)||(t2.c6))))) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY ((LIKELY(vt0.c0))>=(0.2590253166092601)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, t2, vt0 WHERE (((NOT (t2.c2)) IN (((t0.c0)||(t2.c6))))) ORDER BY ((LIKELY(vt0.c0))>=(0.2590253166092601)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY json_remove(((vt0.c0) IS TRUE), (((('0.26791180408338067')AND(vt0.c1)))AND(vt0.c0)), ((vt0.c0)*(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY json_remove(((vt0.c0) IS TRUE), (((('0.26791180408338067')AND(vt0.c1)))AND(vt0.c0)), ((vt0.c0)*(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY json_remove(((vt0.c0) IS TRUE), (((('0.26791180408338067')AND(vt0.c1)))AND(vt0.c0)), ((vt0.c0)*(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY json_remove(((vt0.c0) IS TRUE), (((('0.26791180408338067')AND(vt0.c1)))AND(vt0.c0)), ((vt0.c0)*(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE ((NOT (CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0, t2);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE ((NOT (CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0, t2);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE ((NOT (CAST(t0.c0 AS TEXT))));
SELECT COUNT(*) FROM t0, vt0, t2 WHERE (CASE WHEN (t2.c2 IN ()) THEN CAST('TL	' AS NUMERIC) END) ORDER BY ((((((((((t2.c1) NOT BETWEEN ('w5rf') AND (vt0.c0)))OR(((t2.c0)AND(t2.c0)))))AND(vt0.c1 COLLATE RTRIM)))OR(((t2.c0)>(vt0.c1)))))OR(((t2.c1)LIKE(t2.c6)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t2.c2 IN ()) THEN CAST('TL	' AS NUMERIC) END) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY ((((((((((t2.c1) NOT BETWEEN ('w5rf') AND (vt0.c0)))OR(((t2.c0)AND(t2.c0)))))AND(vt0.c1 COLLATE RTRIM)))OR(((t2.c0)>(vt0.c1)))))OR(((t2.c1)LIKE(t2.c6)))) DESC);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE (CASE WHEN (t2.c2 IN ()) THEN CAST('TL	' AS NUMERIC) END) ORDER BY ((((((((((t2.c1) NOT BETWEEN ('w5rf') AND (vt0.c0)))OR(((t2.c0)AND(t2.c0)))))AND(vt0.c1 COLLATE RTRIM)))OR(((t2.c0)>(vt0.c1)))))OR(((t2.c1)LIKE(t2.c6)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t2.c2 IN ()) THEN CAST('TL	' AS NUMERIC) END) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY ((((((((((t2.c1) NOT BETWEEN ('w5rf') AND (vt0.c0)))OR(((t2.c0)AND(t2.c0)))))AND(vt0.c1 COLLATE RTRIM)))OR(((t2.c0)>(vt0.c1)))))OR(((t2.c1)LIKE(t2.c6)))) DESC);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE (CASE WHEN (t2.c2 IN ()) THEN CAST('TL	' AS NUMERIC) END) ORDER BY ((((((((((t2.c1) NOT BETWEEN ('w5rf') AND (vt0.c0)))OR(((t2.c0)AND(t2.c0)))))AND(vt0.c1 COLLATE RTRIM)))OR(((t2.c0)>(vt0.c1)))))OR(((t2.c1)LIKE(t2.c6)))) DESC;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST((((t0.c0)) BETWEEN ((t2.c6)) AND ((t2.c1))) AS NUMERIC) CROSS JOIN t2 ON (((+ (t2.c1)))!=((NOT (t0.c0)))) WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST((((t0.c0)) BETWEEN ((t2.c6)) AND ((t2.c1))) AS NUMERIC) CROSS JOIN t2 ON (((+ (t2.c1)))<>((NOT (t0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST((((t0.c0)) BETWEEN ((t2.c6)) AND ((t2.c1))) AS NUMERIC) CROSS JOIN t2 ON (((+ (t2.c1)))!=((NOT (t0.c0)))) WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST((((t0.c0)) BETWEEN ((t2.c6)) AND ((t2.c1))) AS NUMERIC) CROSS JOIN t2 ON (((+ (t2.c1)))<>((NOT (t0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST((((t0.c0)) BETWEEN ((t2.c6)) AND ((t2.c1))) AS NUMERIC) CROSS JOIN t2 ON (((+ (t2.c1)))!=((NOT (t0.c0)))) WHERE (CAST(vt0.c0 AS TEXT));
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN t2 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c0) IS TRUE) WHEN vt0.c0 COLLATE BINARY THEN t2.c6 WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END WHERE (CAST(((t2.c2)OR(t2.c6)) AS INTEGER)) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t2.c2)OR(t2.c6)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 CROSS JOIN t2 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c0) IS TRUE) WHEN vt0.c0 COLLATE BINARY THEN t2.c6 WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN t2 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c0) IS TRUE) WHEN vt0.c0 COLLATE BINARY THEN t2.c6 WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END WHERE (CAST(((t2.c2)OR(t2.c6)) AS INTEGER)) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t2.c2)OR(t2.c6)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 CROSS JOIN t2 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c0) IS TRUE) WHEN vt0.c0 COLLATE BINARY THEN t2.c6 WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN t2 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c0) IS TRUE) WHEN vt0.c0 COLLATE BINARY THEN t2.c6 WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END WHERE (CAST(((t2.c2)OR(t2.c6)) AS INTEGER)) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (-1725971233) ORDER BY ((t0.c0) NOT BETWEEN (((t0.c0)=(t0.c0))) AND (t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((-1725971233) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) NOT BETWEEN (((t0.c0)=(t0.c0))) AND (t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (-1725971233) ORDER BY ((t0.c0) NOT BETWEEN (((t0.c0)=(t0.c0))) AND (t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((-1725971233) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) NOT BETWEEN (((t0.c0)=(t0.c0))) AND (t0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (-1725971233) ORDER BY ((t0.c0) NOT BETWEEN (((t0.c0)=(t0.c0))) AND (t0.c0));
SELECT * FROM t0 WHERE (json_array((t0.c0 IN ()), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) ORDER BY t0.c0 ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB))>((t0.c0 IN ()))) DESC, (((+ (0.1586785951239542)))GLOB(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array((t0.c0 IN ()), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB))>((t0.c0 IN ()))) DESC, (((+ (0.1586785951239542)))GLOB(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC);
SELECT * FROM t0 WHERE (json_array((t0.c0 IN ()), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) ORDER BY t0.c0 ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB))>((t0.c0 IN ()))) DESC, (((+ (0.1586785951239542)))GLOB(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array((t0.c0 IN ()), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB))>((t0.c0 IN ()))) DESC, (((+ (0.1586785951239542)))GLOB(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC);
SELECT * FROM t0 WHERE (json_array((t0.c0 IN ()), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) ORDER BY t0.c0 ASC  NULLS LAST, ((CAST(t0.c0 AS BLOB))>((t0.c0 IN ()))) DESC, (((+ (0.1586785951239542)))GLOB(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0.43463369815697883))>=((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))) ORDER BY ((UPPER(vt0.c0)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((0.43463369815697883))>=((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(vt0.c0)) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0.43463369815697883))>=((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))) ORDER BY ((UPPER(vt0.c0)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((0.43463369815697883))>=((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((UPPER(vt0.c0)) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0.43463369815697883))>=((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))) ORDER BY ((UPPER(vt0.c0)) NOTNULL) ASC;
SELECT ALL * FROM t2, vt0, t0 WHERE (((MIN(t2.c6, t2.c6))LIKE(((t2.c6)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((MIN(t2.c6, t2.c6))LIKE(((t2.c6)/(vt0.c0))))) IS TRUE)  as count FROM t2, vt0, t0);
SELECT ALL * FROM t2, vt0, t0 WHERE (((MIN(t2.c6, t2.c6))LIKE(((t2.c6)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((MIN(t2.c6, t2.c6))LIKE(((t2.c6)/(vt0.c0))))) IS TRUE)  as count FROM t2, vt0, t0);
SELECT ALL * FROM t2, vt0, t0 WHERE (((MIN(t2.c6, t2.c6))LIKE(((t2.c6)/(vt0.c0)))));
SELECT ALL * FROM t2, t0, vt0 WHERE (CHANGES() COLLATE NOCASE) ORDER BY t2.c2  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS BLOB), ((((NOT (t2.c2))))<>(((- (t2.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHANGES() COLLATE NOCASE) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY t2.c2  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS BLOB), ((((NOT (t2.c2))))<>(((- (t2.c2)))))  NULLS LAST);
SELECT ALL * FROM t2, t0, vt0 WHERE (CHANGES() COLLATE NOCASE) ORDER BY t2.c2  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS BLOB), ((((NOT (t2.c2))))<>(((- (t2.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHANGES() COLLATE NOCASE) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY t2.c2  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS BLOB), ((((NOT (t2.c2))))<>(((- (t2.c2)))))  NULLS LAST);
SELECT ALL * FROM t2, t0, vt0 WHERE (CHANGES() COLLATE NOCASE) ORDER BY t2.c2  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS BLOB), ((((NOT (t2.c2))))<>(((- (t2.c2)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t2 ON (((t2.c2)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c0) AND (t2.c1)))) AND (((t0.c0 IN (vt0.c1, vt0.c0))))) FULL OUTER JOIN t0 ON ((((t2.c2)<<(t2.c1)))IS(CAST(vt0.c1 AS NUMERIC))) WHERE ((((CAST(t2.c0 AS REAL)))<=((((t2.c6)<=(t2.c6)))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t2.c0 AS REAL)))<=((((t2.c6)<=(t2.c6)))))) IS TRUE)  as count FROM vt0 INNER JOIN t2 ON (((t2.c2)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c0) AND (t2.c1)))) AND (((t0.c0 IN (vt0.c1, vt0.c0))))) FULL OUTER JOIN t0 ON ((((t2.c2)<<(t2.c1)))IS(CAST(vt0.c1 AS NUMERIC))) ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t2 ON (((t2.c2)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c0) AND (t2.c1)))) AND (((t0.c0 IN (vt0.c1, vt0.c0))))) FULL OUTER JOIN t0 ON ((((t2.c2)<<(t2.c1)))IS(CAST(vt0.c1 AS NUMERIC))) WHERE ((((CAST(t2.c0 AS REAL)))<=((((t2.c6)<=(t2.c6)))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t2.c0 AS REAL)))<=((((t2.c6)<=(t2.c6)))))) IS TRUE)  as count FROM vt0 INNER JOIN t2 ON (((t2.c2)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c0) AND (t2.c1)))) AND (((t0.c0 IN (vt0.c1, vt0.c0))))) FULL OUTER JOIN t0 ON ((((t2.c2)<<(t2.c1)))IS(CAST(vt0.c1 AS NUMERIC))) ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM t0, t2 WHERE ((((((t2.c1)LIKE(t2.c2))))>((CAST(t2.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c1)LIKE(t2.c2))))>((CAST(t2.c0 AS INTEGER))))) IS TRUE)  as count FROM t0, t2);
SELECT ALL * FROM t0, t2 WHERE ((((((t2.c1)LIKE(t2.c2))))>((CAST(t2.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c1)LIKE(t2.c2))))>((CAST(t2.c0 AS INTEGER))))) IS TRUE)  as count FROM t0, t2);
SELECT ALL * FROM t0, t2 WHERE ((((((t2.c1)LIKE(t2.c2))))>((CAST(t2.c0 AS INTEGER)))));
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c0) IS TRUE)) BETWEEN (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND (CAST(t2.c6 AS INTEGER)))) ORDER BY CAST((((t2.c2, t2.c1, t2.c6))>=((t2.c1, t2.c0, x''))) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) IS TRUE)) BETWEEN (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND (CAST(t2.c6 AS INTEGER)))) IS TRUE)  as count FROM t2 ORDER BY CAST((((t2.c2, t2.c1, t2.c6))>=((t2.c1, t2.c0, x''))) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c0) IS TRUE)) BETWEEN (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND (CAST(t2.c6 AS INTEGER)))) ORDER BY CAST((((t2.c2, t2.c1, t2.c6))>=((t2.c1, t2.c0, x''))) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) IS TRUE)) BETWEEN (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND (CAST(t2.c6 AS INTEGER)))) IS TRUE)  as count FROM t2 ORDER BY CAST((((t2.c2, t2.c1, t2.c6))>=((t2.c1, t2.c0, x''))) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c0) IS TRUE)) BETWEEN (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) AND (CAST(t2.c6 AS INTEGER)))) ORDER BY CAST((((t2.c2, t2.c1, t2.c6))>=((t2.c1, t2.c0, x''))) AS INTEGER)  NULLS LAST;
SELECT * FROM t0 WHERE ((~ (0.5778103249195727))) ORDER BY t0.c0, (((t0.c0)>>(t0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (0.5778103249195727))) IS TRUE)  as count FROM t0 ORDER BY t0.c0, (((t0.c0)>>(t0.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((~ (0.5778103249195727))) ORDER BY t0.c0, (((t0.c0)>>(t0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (0.5778103249195727))) IS TRUE)  as count FROM t0 ORDER BY t0.c0, (((t0.c0)>>(t0.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((~ (0.5778103249195727))) ORDER BY t0.c0, (((t0.c0)>>(t0.c0)) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0, t2 WHERE (((((((t2.c0)/(0x103863d3)))OR(CAST(vt0.c1 AS BLOB))))AND(PRINTF(t2.c0)))) ORDER BY ((t2.c6) IS TRUE) COLLATE NOCASE, CAST(((t2.c2)/(vt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t2.c0)/(0x103863d3)))OR(CAST(vt0.c1 AS BLOB))))AND(PRINTF(t2.c0)))) IS TRUE)  as count FROM vt0, t2 ORDER BY ((t2.c6) IS TRUE) COLLATE NOCASE, CAST(((t2.c2)/(vt0.c1)) AS TEXT) DESC  NULLS LAST);
SELECT * FROM vt0, t2 WHERE (((((((t2.c0)/(0x103863d3)))OR(CAST(vt0.c1 AS BLOB))))AND(PRINTF(t2.c0)))) ORDER BY ((t2.c6) IS TRUE) COLLATE NOCASE, CAST(((t2.c2)/(vt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t2.c0)/(0x103863d3)))OR(CAST(vt0.c1 AS BLOB))))AND(PRINTF(t2.c0)))) IS TRUE)  as count FROM vt0, t2 ORDER BY ((t2.c6) IS TRUE) COLLATE NOCASE, CAST(((t2.c2)/(vt0.c1)) AS TEXT) DESC  NULLS LAST);
SELECT * FROM vt0, t2 WHERE (((((((t2.c0)/(0x103863d3)))OR(CAST(vt0.c1 AS BLOB))))AND(PRINTF(t2.c0)))) ORDER BY ((t2.c6) IS TRUE) COLLATE NOCASE, CAST(((t2.c2)/(vt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT * FROM t2 CROSS JOIN t0 ON LIKE((((t2.c1)) NOT BETWEEN ((t2.c1)) AND (('5b{ 2'))), NULL, 'F') WHERE (((LIKE(t2.c1, t2.c0, 'C'))%((+ (t2.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t2.c1, t2.c0, 'C'))%((+ (t2.c6))))) IS TRUE)  as count FROM t2 CROSS JOIN t0 ON LIKE((((t2.c1)) NOT BETWEEN ((t2.c1)) AND (('5b{ 2'))), NULL, 'F'));
SELECT * FROM t2 CROSS JOIN t0 ON LIKE((((t2.c1)) NOT BETWEEN ((t2.c1)) AND (('5b{ 2'))), NULL, 'F') WHERE (((LIKE(t2.c1, t2.c0, 'C'))%((+ (t2.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t2.c1, t2.c0, 'C'))%((+ (t2.c6))))) IS TRUE)  as count FROM t2 CROSS JOIN t0 ON LIKE((((t2.c1)) NOT BETWEEN ((t2.c1)) AND (('5b{ 2'))), NULL, 'F'));
SELECT * FROM t2 CROSS JOIN t0 ON LIKE((((t2.c1)) NOT BETWEEN ((t2.c1)) AND (('5b{ 2'))), NULL, 'F') WHERE (((LIKE(t2.c1, t2.c0, 'C'))%((+ (t2.c6)))));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN t2 ON ((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))AND(CASE t2.c2  WHEN vt0.c1 THEN vt0.c1 END)))AND(((t2.c1)GLOB(t2.c0)))) WHERE (((((t0.c0 IN ())))>=((CAST(t2.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ())))>=((CAST(t2.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN t2 ON ((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))AND(CASE t2.c2  WHEN vt0.c1 THEN vt0.c1 END)))AND(((t2.c1)GLOB(t2.c0)))));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN t2 ON ((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))AND(CASE t2.c2  WHEN vt0.c1 THEN vt0.c1 END)))AND(((t2.c1)GLOB(t2.c0)))) WHERE (((((t0.c0 IN ())))>=((CAST(t2.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ())))>=((CAST(t2.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN t2 ON ((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))AND(CASE t2.c2  WHEN vt0.c1 THEN vt0.c1 END)))AND(((t2.c1)GLOB(t2.c0)))));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN t2 ON ((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))AND(CASE t2.c2  WHEN vt0.c1 THEN vt0.c1 END)))AND(((t2.c1)GLOB(t2.c0)))) WHERE (((((t0.c0 IN ())))>=((CAST(t2.c0 AS INTEGER)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((((t2.c6) NOT BETWEEN (vt0.c0) AND (t2.c2))) IS FALSE)) ORDER BY ((NULL) BETWEEN (((t2.c6) NOT BETWEEN (t2.c0) AND (vt0.c1))) AND (((t2.c2)IS(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t2.c6) NOT BETWEEN (vt0.c0) AND (t2.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY ((NULL) BETWEEN (((t2.c6) NOT BETWEEN (t2.c0) AND (vt0.c1))) AND (((t2.c2)IS(t0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((((t2.c6) NOT BETWEEN (vt0.c0) AND (t2.c2))) IS FALSE)) ORDER BY ((NULL) BETWEEN (((t2.c6) NOT BETWEEN (t2.c0) AND (vt0.c1))) AND (((t2.c2)IS(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t2.c6) NOT BETWEEN (vt0.c0) AND (t2.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY ((NULL) BETWEEN (((t2.c6) NOT BETWEEN (t2.c0) AND (vt0.c1))) AND (((t2.c2)IS(t0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((((t2.c6) NOT BETWEEN (vt0.c0) AND (t2.c2))) IS FALSE)) ORDER BY ((NULL) BETWEEN (((t2.c6) NOT BETWEEN (t2.c0) AND (vt0.c1))) AND (((t2.c2)IS(t0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE) ORDER BY ((((((vt0.c1)=(x'')))AND(vt0.c1)))OR(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)=(x'')))AND(vt0.c1)))OR(((vt0.c0) ISNULL))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE) ORDER BY ((((((vt0.c1)=(x'')))AND(vt0.c1)))OR(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)=(x'')))AND(vt0.c1)))OR(((vt0.c0) ISNULL))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE) ORDER BY ((((((vt0.c1)=(x'')))AND(vt0.c1)))OR(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0, t2 WHERE ((((((t2.c2, vt0.c1, vt0.c1))!=((t2.c6, t0.c0, t2.c2))))IS NOT((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c2, vt0.c1, vt0.c1))<>((t2.c6, t0.c0, t2.c2))))IS NOT((~ (t0.c0))))) IS TRUE)  as count FROM vt0, t0, t2);
SELECT ALL * FROM vt0, t0, t2 WHERE ((((((t2.c2, vt0.c1, vt0.c1))!=((t2.c6, t0.c0, t2.c2))))IS NOT((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c2, vt0.c1, vt0.c1))<>((t2.c6, t0.c0, t2.c2))))IS NOT((~ (t0.c0))))) IS TRUE)  as count FROM vt0, t0, t2);
SELECT ALL * FROM vt0, t0, t2 WHERE ((((((t2.c2, vt0.c1, vt0.c1))!=((t2.c6, t0.c0, t2.c2))))IS NOT((~ (t0.c0)))));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN t2 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+(COALESCE(t0.c0, t2.c0))) WHERE (INSTR((((t2.c1))<((t2.c0))), (((t2.c1))=((t2.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR((((t2.c1))<((t2.c0))), (((t2.c1))=((t2.c6))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN t2 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+(COALESCE(t0.c0, t2.c0))));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN t2 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+(COALESCE(t0.c0, t2.c0))) WHERE (INSTR((((t2.c1))<((t2.c0))), (((t2.c1))=((t2.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR((((t2.c1))<((t2.c0))), (((t2.c1))=((t2.c6))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN t2 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+(COALESCE(t0.c0, t2.c0))));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN t2 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))+(COALESCE(t0.c0, t2.c0))) WHERE (INSTR((((t2.c1))<((t2.c0))), (((t2.c1))=((t2.c6)))));
SELECT COUNT(*) FROM t0 WHERE (load_extension((((t0.c0))==((x''))), ((t0.c0) NOTNULL))) ORDER BY (+ ('q]')) ASC  NULLS FIRST, ((((- (t0.c0))))<=((((t0.c0)<=(t0.c0))))), ((t0.c0)+(((((t0.c0)AND(t0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension((((t0.c0))=((x''))), ((t0.c0) NOTNULL))) IS TRUE)  as count FROM t0 ORDER BY (+ ('q]')) ASC  NULLS FIRST, ((((- (t0.c0))))<=((((t0.c0)<=(t0.c0))))), ((t0.c0)+(((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (load_extension((((t0.c0))==((x''))), ((t0.c0) NOTNULL))) ORDER BY (+ ('q]')) ASC  NULLS FIRST, ((((- (t0.c0))))<=((((t0.c0)<=(t0.c0))))), ((t0.c0)+(((((t0.c0)AND(t0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension((((t0.c0))=((x''))), ((t0.c0) NOTNULL))) IS TRUE)  as count FROM t0 ORDER BY (+ ('q]')) ASC  NULLS FIRST, ((((- (t0.c0))))<=((((t0.c0)<=(t0.c0))))), ((t0.c0)+(((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((t2.c1) NOT BETWEEN (t0.c0) AND (t2.c0)) COLLATE BINARY) ORDER BY ((((t0.c0))>=((t2.c1))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c1) NOT BETWEEN (t0.c0) AND (t2.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, t2 ORDER BY ((((t0.c0))>=((t2.c1))) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((t2.c1) NOT BETWEEN (t0.c0) AND (t2.c0)) COLLATE BINARY) ORDER BY ((((t0.c0))>=((t2.c1))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c1) NOT BETWEEN (t0.c0) AND (t2.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, t2 ORDER BY ((((t0.c0))>=((t2.c1))) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((t2.c1) NOT BETWEEN (t0.c0) AND (t2.c0)) COLLATE BINARY) ORDER BY ((((t0.c0))>=((t2.c1))) IN ()) DESC;
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((t2.c0)%(CASE t2.c2  WHEN vt0.c0 THEN t2.c2 ELSE t2.c0 END)) CROSS JOIN t2 ON ((((t2.c1) ISNULL)) NOTNULL) WHERE ((((vt0.c0 IN ()))AND(((t2.c0)||(vt0.c0))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))AND(((t2.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((t2.c0)%(CASE t2.c2  WHEN vt0.c0 THEN t2.c2 ELSE t2.c0 END)) CROSS JOIN t2 ON ((((t2.c1) ISNULL)) NOTNULL) ORDER BY NULL);
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((t2.c0)%(CASE t2.c2  WHEN vt0.c0 THEN t2.c2 ELSE t2.c0 END)) CROSS JOIN t2 ON ((((t2.c1) ISNULL)) NOTNULL) WHERE ((((vt0.c0 IN ()))AND(((t2.c0)||(vt0.c0))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))AND(((t2.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((t2.c0)%(CASE t2.c2  WHEN vt0.c0 THEN t2.c2 ELSE t2.c0 END)) CROSS JOIN t2 ON ((((t2.c1) ISNULL)) NOTNULL) ORDER BY NULL);
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((t2.c0)%(CASE t2.c2  WHEN vt0.c0 THEN t2.c2 ELSE t2.c0 END)) CROSS JOIN t2 ON ((((t2.c1) ISNULL)) NOTNULL) WHERE ((((vt0.c0 IN ()))AND(((t2.c0)||(vt0.c0))))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1) NOTNULL) IN ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOTNULL) IN ((NOT (t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1) NOTNULL) IN ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOTNULL) IN ((NOT (t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1) NOTNULL) IN ((NOT (t0.c0)))));
SELECT * FROM vt0, t0 WHERE (0.5077660970192286);
SELECT SUM(count) FROM (SELECT ((0.5077660970192286) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (0.5077660970192286);
SELECT SUM(count) FROM (SELECT ((0.5077660970192286) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (0.5077660970192286);
SELECT * FROM vt0 INNER JOIN t2 ON ((NULLIF(DISTINCT t2.c0, t2.c6))<<((- (vt0.c0)))) RIGHT OUTER JOIN t0 ON '-1366074986' COLLATE NOCASE WHERE (((((t2.c6)/(t2.c2))) NOT BETWEEN (((t2.c6)IS NOT(t2.c6))) AND (((vt0.c1)<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c6)/(t2.c2))) NOT BETWEEN (((t2.c6)IS NOT(t2.c6))) AND (((vt0.c1)<(t0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t2 ON ((NULLIF(DISTINCT t2.c0, t2.c6))<<((- (vt0.c0)))) RIGHT OUTER JOIN t0 ON '-1366074986' COLLATE NOCASE);
SELECT * FROM vt0 INNER JOIN t2 ON ((NULLIF(DISTINCT t2.c0, t2.c6))<<((- (vt0.c0)))) RIGHT OUTER JOIN t0 ON '-1366074986' COLLATE NOCASE WHERE (((((t2.c6)/(t2.c2))) NOT BETWEEN (((t2.c6)IS NOT(t2.c6))) AND (((vt0.c1)<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c6)/(t2.c2))) NOT BETWEEN (((t2.c6)IS NOT(t2.c6))) AND (((vt0.c1)<(t0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t2 ON ((NULLIF(DISTINCT t2.c0, t2.c6))<<((- (vt0.c0)))) RIGHT OUTER JOIN t0 ON '-1366074986' COLLATE NOCASE);
SELECT * FROM vt0 INNER JOIN t2 ON ((NULLIF(DISTINCT t2.c0, t2.c6))<<((- (vt0.c0)))) RIGHT OUTER JOIN t0 ON '-1366074986' COLLATE NOCASE WHERE (((((t2.c6)/(t2.c2))) NOT BETWEEN (((t2.c6)IS NOT(t2.c6))) AND (((vt0.c1)<(t0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ (((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ (((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((+ (((vt0.c0)%(vt0.c0)))));
SELECT ALL * FROM vt0, t0, t2 WHERE (LIKE(((t2.c0)>>(t2.c2)), vt0.c0, '0')) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t2.c0)>>(t2.c2)), vt0.c0, '0')) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY x'' DESC);
SELECT ALL * FROM vt0, t0, t2 WHERE (LIKE(((t2.c0)>>(t2.c2)), vt0.c0, '0')) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t2.c0)>>(t2.c2)), vt0.c0, '0')) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY x'' DESC);
SELECT ALL * FROM vt0, t0, t2 WHERE (LIKE(((t2.c0)>>(t2.c2)), vt0.c0, '0')) ORDER BY x'' DESC;
SELECT ALL * FROM t2, t0 WHERE (((t2.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM t2, t0);
SELECT ALL * FROM t2, t0 WHERE (((t2.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM t2, t0);
SELECT ALL * FROM t2, t0 WHERE (((t2.c0 COLLATE NOCASE) IS FALSE));
SELECT ALL * FROM t0 WHERE (0.0) ORDER BY rtreenode(LIKELY(t0.c0), LIKELIHOOD(DISTINCT t0.c0, 0.3259809252945305)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.0) IS TRUE)  as count FROM t0 ORDER BY rtreenode(LIKELY(t0.c0), LIKELIHOOD(DISTINCT t0.c0, 0.3259809252945305)) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (0.0) ORDER BY rtreenode(LIKELY(t0.c0), LIKELIHOOD(DISTINCT t0.c0, 0.3259809252945305)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.0) IS TRUE)  as count FROM t0 ORDER BY rtreenode(LIKELY(t0.c0), LIKELIHOOD(DISTINCT t0.c0, 0.3259809252945305)) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (0.0) ORDER BY rtreenode(LIKELY(t0.c0), LIKELIHOOD(DISTINCT t0.c0, 0.3259809252945305)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN ((x'' IN ())) AND (((vt0.c1)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN ((x'' IN ())) AND (((vt0.c1)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN ((x'' IN ())) AND (((vt0.c1)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN ((x'' IN ())) AND (((vt0.c1)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN ((x'' IN ())) AND (((vt0.c1)<=(vt0.c0)))));
SELECT * FROM t0 LEFT OUTER JOIN t2 ON (('0.4751337037698927')+((+ (t2.c1)))) WHERE ((('-697273255') BETWEEN (CASE t0.c0  WHEN x'' THEN t2.c6 END) AND (CAST(t2.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((('-697273255') BETWEEN (CASE t0.c0  WHEN x'' THEN t2.c6 END) AND (CAST(t2.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON (('0.4751337037698927')+((+ (t2.c1)))));
SELECT * FROM t0 LEFT OUTER JOIN t2 ON (('0.4751337037698927')+((+ (t2.c1)))) WHERE ((('-697273255') BETWEEN (CASE t0.c0  WHEN x'' THEN t2.c6 END) AND (CAST(t2.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((('-697273255') BETWEEN (CASE t0.c0  WHEN x'' THEN t2.c6 END) AND (CAST(t2.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON (('0.4751337037698927')+((+ (t2.c1)))));
SELECT * FROM t0 LEFT OUTER JOIN t2 ON (('0.4751337037698927')+((+ (t2.c1)))) WHERE ((('-697273255') BETWEEN (CASE t0.c0  WHEN x'' THEN t2.c6 END) AND (CAST(t2.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c6)IS NOT('-196575428')))>(((t2.c6)AND(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c6)IS NOT('-196575428')))>(((t2.c6)AND(t2.c0))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c6)IS NOT('-196575428')))>(((t2.c6)AND(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c6)IS NOT('-196575428')))>(((t2.c6)AND(t2.c0))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c6)IS NOT('-196575428')))>(((t2.c6)AND(t2.c0)))));
SELECT ALL * FROM t0, t2 WHERE ((- ((t2.c0 IN (x'1d4924fc'))))) ORDER BY (((((((((0.7297165652071664)AND(t2.c1)))OR(t2.c1)))OR(t2.c6)))AND(t2.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((t2.c0 IN (x'1d4924fc'))))) IS TRUE)  as count FROM t0, t2 ORDER BY (((((((((0.7297165652071664)AND(t2.c1)))OR(t2.c1)))OR(t2.c6)))AND(t2.c1)) IN ())  NULLS FIRST);
SELECT ALL * FROM t0, t2 WHERE ((- ((t2.c0 IN (x'1d4924fc'))))) ORDER BY (((((((((0.7297165652071664)AND(t2.c1)))OR(t2.c1)))OR(t2.c6)))AND(t2.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((t2.c0 IN (x'1d4924fc'))))) IS TRUE)  as count FROM t0, t2 ORDER BY (((((((((0.7297165652071664)AND(t2.c1)))OR(t2.c1)))OR(t2.c6)))AND(t2.c1)) IN ())  NULLS FIRST);
SELECT ALL * FROM t0, t2 WHERE ((- ((t2.c0 IN (x'1d4924fc'))))) ORDER BY (((((((((0.7297165652071664)AND(t2.c1)))OR(t2.c1)))OR(t2.c6)))AND(t2.c1)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))==(-1.972796141E9))) ORDER BY (NOT (0.1342547571804884)) DESC  NULLS LAST, (NOT ((vt0.c1 IN (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0)))==(-1.972796141E9))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (0.1342547571804884)) DESC  NULLS LAST, (NOT ((vt0.c1 IN (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))==(-1.972796141E9))) ORDER BY (NOT (0.1342547571804884)) DESC  NULLS LAST, (NOT ((vt0.c1 IN (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0)))==(-1.972796141E9))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (0.1342547571804884)) DESC  NULLS LAST, (NOT ((vt0.c1 IN (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))==(-1.972796141E9))) ORDER BY (NOT (0.1342547571804884)) DESC  NULLS LAST, (NOT ((vt0.c1 IN (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM t2, t0, vt0 WHERE ((((t2.c1))>=(('1141516352')))) ORDER BY ((CAST(t2.c6 AS TEXT))AND((((t2.c0, t2.c2, vt0.c0)) BETWEEN ((vt0.c0, t2.c6, t2.c1)) AND ((t2.c6, vt0.c0, t2.c0))))) DESC  NULLS LAST, ((((vt0.c0)==(vt0.c0))) NOT BETWEEN (vt0.c1) AND (LIKELIHOOD(t2.c1, 0.2662561617134942)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c1))>=(('1141516352')))) IS TRUE)  as count FROM t2, t0 NOT INDEXED, vt0 ORDER BY ((CAST(t2.c6 AS TEXT))AND((((t2.c0, t2.c2, vt0.c0)) BETWEEN ((vt0.c0, t2.c6, t2.c1)) AND ((t2.c6, vt0.c0, t2.c0))))) DESC  NULLS LAST, ((((vt0.c0)=(vt0.c0))) NOT BETWEEN (vt0.c1) AND (LIKELIHOOD(t2.c1, 0.2662561617134942)))  NULLS LAST);
SELECT ALL * FROM t2, t0, vt0 WHERE ((((t2.c1))>=(('1141516352')))) ORDER BY ((CAST(t2.c6 AS TEXT))AND((((t2.c0, t2.c2, vt0.c0)) BETWEEN ((vt0.c0, t2.c6, t2.c1)) AND ((t2.c6, vt0.c0, t2.c0))))) DESC  NULLS LAST, ((((vt0.c0)==(vt0.c0))) NOT BETWEEN (vt0.c1) AND (LIKELIHOOD(t2.c1, 0.2662561617134942)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c1))>=(('1141516352')))) IS TRUE)  as count FROM t2, t0 NOT INDEXED, vt0 ORDER BY ((CAST(t2.c6 AS TEXT))AND((((t2.c0, t2.c2, vt0.c0)) BETWEEN ((vt0.c0, t2.c6, t2.c1)) AND ((t2.c6, vt0.c0, t2.c0))))) DESC  NULLS LAST, ((((vt0.c0)=(vt0.c0))) NOT BETWEEN (vt0.c1) AND (LIKELIHOOD(t2.c1, 0.2662561617134942)))  NULLS LAST);
SELECT ALL * FROM t2, t0, vt0 WHERE ((((t2.c1))>=(('1141516352')))) ORDER BY ((CAST(t2.c6 AS TEXT))AND((((t2.c0, t2.c2, vt0.c0)) BETWEEN ((vt0.c0, t2.c6, t2.c1)) AND ((t2.c6, vt0.c0, t2.c0))))) DESC  NULLS LAST, ((((vt0.c0)==(vt0.c0))) NOT BETWEEN (vt0.c1) AND (LIKELIHOOD(t2.c1, 0.2662561617134942)))  NULLS LAST;
SELECT * FROM t2, vt0 WHERE (((((t2.c2)IS(t2.c0)))&(UPPER(-1.308306348E9))));
SELECT SUM(count) FROM (SELECT ((((((t2.c2)IS(t2.c0)))&(UPPER(-1.308306348E9)))) IS TRUE)  as count FROM t2, vt0);
SELECT * FROM t2, vt0 WHERE (((((t2.c2)IS(t2.c0)))&(UPPER(-1.308306348E9))));
SELECT SUM(count) FROM (SELECT ((((((t2.c2)IS(t2.c0)))&(UPPER(-1.308306348E9)))) IS TRUE)  as count FROM t2, vt0);
SELECT * FROM t2, vt0 WHERE (((((t2.c2)IS(t2.c0)))&(UPPER(-1.308306348E9))));
SELECT * FROM t2 WHERE (CAST(((t2.c1)IS NOT(t2.c6)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t2.c1)IS NOT(t2.c6)) AS NUMERIC)) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CAST(((t2.c1)IS NOT(t2.c6)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t2.c1)IS NOT(t2.c6)) AS NUMERIC)) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CAST(((t2.c1)IS NOT(t2.c6)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (CAST(x'088fe7494005' AS BLOB)) ORDER BY CAST(((vt0.c0) BETWEEN (t2.c1) AND (t2.c2)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'088fe7494005' AS BLOB)) IS TRUE)  as count FROM t2, vt0 ORDER BY CAST(((vt0.c0) BETWEEN (t2.c1) AND (t2.c2)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (CAST(x'088fe7494005' AS BLOB)) ORDER BY CAST(((vt0.c0) BETWEEN (t2.c1) AND (t2.c2)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'088fe7494005' AS BLOB)) IS TRUE)  as count FROM t2, vt0 ORDER BY CAST(((vt0.c0) BETWEEN (t2.c1) AND (t2.c2)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (CAST(x'088fe7494005' AS BLOB)) ORDER BY CAST(((vt0.c0) BETWEEN (t2.c1) AND (t2.c2)) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((LAST_INSERT_ROWID())*(x''))) ORDER BY (('~A')>(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())*(x''))) IS TRUE)  as count FROM t0 ORDER BY (('~A')>(t0.c0)) ASC);
SELECT COUNT(*) FROM t0 WHERE (((LAST_INSERT_ROWID())*(x''))) ORDER BY (('~A')>(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())*(x''))) IS TRUE)  as count FROM t0 ORDER BY (('~A')>(t0.c0)) ASC);
SELECT COUNT(*) FROM t0 WHERE (((LAST_INSERT_ROWID())*(x''))) ORDER BY (('~A')>(t0.c0)) ASC;
SELECT ALL * FROM t2, vt0, t0 WHERE (LIKELIHOOD((((NULL))>((t0.c0))), 0.9732815757350551));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((NULL))>((t0.c0))), 0.9732815757350551)) IS TRUE)  as count FROM t2, vt0, t0);
SELECT ALL * FROM t2, vt0, t0 WHERE (LIKELIHOOD((((NULL))>((t0.c0))), 0.9732815757350551));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((NULL))>((t0.c0))), 0.9732815757350551)) IS TRUE)  as count FROM t2, vt0, t0);
SELECT ALL * FROM t2, vt0, t0 WHERE (LIKELIHOOD((((NULL))>((t0.c0))), 0.9732815757350551));
SELECT COUNT(*) FROM t2, t0 RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN vt0.c1 THEN vt0.c1 ELSE t2.c2 END, ((t2.c1)OR(t2.c1))) WHERE (CAST(((t0.c0) BETWEEN (t2.c6) AND (t2.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (t2.c6) AND (t2.c0)) AS REAL)) IS TRUE)  as count FROM t2, t0 RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN vt0.c1 THEN vt0.c1 ELSE t2.c2 END, ((t2.c1)OR(t2.c1))));
SELECT COUNT(*) FROM t2, t0 RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN vt0.c1 THEN vt0.c1 ELSE t2.c2 END, ((t2.c1)OR(t2.c1))) WHERE (CAST(((t0.c0) BETWEEN (t2.c6) AND (t2.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (t2.c6) AND (t2.c0)) AS REAL)) IS TRUE)  as count FROM t2, t0 RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN vt0.c1 THEN vt0.c1 ELSE t2.c2 END, ((t2.c1)OR(t2.c1))));
SELECT COUNT(*) FROM t2, t0 RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT CASE WHEN vt0.c1 THEN vt0.c1 ELSE t2.c2 END, ((t2.c1)OR(t2.c1))) WHERE (CAST(((t0.c0) BETWEEN (t2.c6) AND (t2.c0)) AS REAL));
SELECT * FROM vt0 NOT INDEXED, t2 WHERE ((((t2.c2)) NOT BETWEEN ((((t2.c2) NOT NULL))) AND ((t2.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2)) NOT BETWEEN ((((t2.c2) NOT NULL))) AND ((t2.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t2);
SELECT * FROM vt0 NOT INDEXED, t2 WHERE ((((t2.c2)) NOT BETWEEN ((((t2.c2) NOT NULL))) AND ((t2.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2)) NOT BETWEEN ((((t2.c2) NOT NULL))) AND ((t2.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t2);
SELECT * FROM vt0 NOT INDEXED, t2 WHERE ((((t2.c2)) NOT BETWEEN ((((t2.c2) NOT NULL))) AND ((t2.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt0, t2, t0 WHERE ((t2.c0 IN (((t0.c0)>>(t2.c0))))) ORDER BY UPPER(DISTINCT t2.c1 COLLATE BINARY) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t2.c0 IN (((t0.c0)>>(t2.c0))))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY UPPER(DISTINCT t2.c1 COLLATE BINARY) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t2, t0 WHERE ((t2.c0 IN (((t0.c0)>>(t2.c0))))) ORDER BY UPPER(DISTINCT t2.c1 COLLATE BINARY) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t2.c0 IN (((t0.c0)>>(t2.c0))))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY UPPER(DISTINCT t2.c1 COLLATE BINARY) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t2, t0 WHERE ((t2.c0 IN (((t0.c0)>>(t2.c0))))) ORDER BY UPPER(DISTINCT t2.c1 COLLATE BINARY) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t2, t0 FULL OUTER JOIN vt0 ON CASE WHEN ((t2.c6) NOTNULL) THEN CAST(t2.c2 AS TEXT) WHEN (- (t2.c1)) THEN vt0.c0 WHEN (vt0.c1 IN ()) THEN CASE t0.c0  WHEN vt0.c1 THEN t2.c6 END ELSE ROUND(t2.c6, t0.c0) END WHERE (CAST(t0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS REAL)) IS TRUE)  as count FROM t2, t0 FULL OUTER JOIN vt0 ON CASE WHEN ((t2.c6) NOTNULL) THEN CAST(t2.c2 AS TEXT) WHEN (- (t2.c1)) THEN vt0.c0 WHEN (vt0.c1 IN ()) THEN CASE t0.c0  WHEN vt0.c1 THEN t2.c6 END ELSE ROUND(t2.c6, t0.c0) END);
SELECT COUNT(*) FROM t2, t0 FULL OUTER JOIN vt0 ON CASE WHEN ((t2.c6) NOTNULL) THEN CAST(t2.c2 AS TEXT) WHEN (- (t2.c1)) THEN vt0.c0 WHEN (vt0.c1 IN ()) THEN CASE t0.c0  WHEN vt0.c1 THEN t2.c6 END ELSE ROUND(t2.c6, t0.c0) END WHERE (CAST(t0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS REAL)) IS TRUE)  as count FROM t2, t0 FULL OUTER JOIN vt0 ON CASE WHEN ((t2.c6) NOTNULL) THEN CAST(t2.c2 AS TEXT) WHEN (- (t2.c1)) THEN vt0.c0 WHEN (vt0.c1 IN ()) THEN CASE t0.c0  WHEN vt0.c1 THEN t2.c6 END ELSE ROUND(t2.c6, t0.c0) END);
SELECT COUNT(*) FROM t2, t0 FULL OUTER JOIN vt0 ON CASE WHEN ((t2.c6) NOTNULL) THEN CAST(t2.c2 AS TEXT) WHEN (- (t2.c1)) THEN vt0.c0 WHEN (vt0.c1 IN ()) THEN CASE t0.c0  WHEN vt0.c1 THEN t2.c6 END ELSE ROUND(t2.c6, t0.c0) END WHERE (CAST(t0.c0 AS REAL));
SELECT * FROM vt0, t2 WHERE ((((vt0.c0, vt0.c1, t2.c0, t2.c1, t2.c2)) NOT BETWEEN ((COALESCE(DISTINCT 377550395, t2.c2), t2.c0 COLLATE NOCASE, HEX(DISTINCT t2.c2), ((((((((vt0.c1)AND(t2.c6)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (vt0.c1 IN ()))) AND ((t2.c1 COLLATE NOCASE, t2.c6, CASE t2.c2  WHEN t2.c6 THEN vt0.c1 WHEN vt0.c0 THEN '-1267062769' WHEN vt0.c0 THEN t2.c1 WHEN t2.c6 THEN t2.c0 WHEN t2.c6 THEN vt0.c0 END, CASE t2.c1  WHEN t2.c1 THEN t2.c2 END, ((((((((t2.c1)OR(t2.c0)))OR(vt0.c0)))OR(t2.c2)))OR(t2.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, t2.c0, t2.c1, t2.c2)) NOT BETWEEN ((COALESCE(DISTINCT 377550395, t2.c2), t2.c0 COLLATE NOCASE, HEX(DISTINCT t2.c2), ((((((((vt0.c1)AND(t2.c6)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (vt0.c1 IN ()))) AND ((t2.c1 COLLATE NOCASE, t2.c6, CASE t2.c2  WHEN t2.c6 THEN vt0.c1 WHEN vt0.c0 THEN '-1267062769' WHEN vt0.c0 THEN t2.c1 WHEN t2.c6 THEN t2.c0 WHEN t2.c6 THEN vt0.c0 END, CASE t2.c1  WHEN t2.c1 THEN t2.c2 END, ((((((((t2.c1)OR(t2.c0)))OR(vt0.c0)))OR(t2.c2)))OR(t2.c0)))))) IS TRUE)  as count FROM vt0, t2);
SELECT * FROM vt0, t2 WHERE ((((vt0.c0, vt0.c1, t2.c0, t2.c1, t2.c2)) NOT BETWEEN ((COALESCE(DISTINCT 377550395, t2.c2), t2.c0 COLLATE NOCASE, HEX(DISTINCT t2.c2), ((((((((vt0.c1)AND(t2.c6)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (vt0.c1 IN ()))) AND ((t2.c1 COLLATE NOCASE, t2.c6, CASE t2.c2  WHEN t2.c6 THEN vt0.c1 WHEN vt0.c0 THEN '-1267062769' WHEN vt0.c0 THEN t2.c1 WHEN t2.c6 THEN t2.c0 WHEN t2.c6 THEN vt0.c0 END, CASE t2.c1  WHEN t2.c1 THEN t2.c2 END, ((((((((t2.c1)OR(t2.c0)))OR(vt0.c0)))OR(t2.c2)))OR(t2.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, t2.c0, t2.c1, t2.c2)) NOT BETWEEN ((COALESCE(DISTINCT 377550395, t2.c2), t2.c0 COLLATE NOCASE, HEX(DISTINCT t2.c2), ((((((((vt0.c1)AND(t2.c6)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (vt0.c1 IN ()))) AND ((t2.c1 COLLATE NOCASE, t2.c6, CASE t2.c2  WHEN t2.c6 THEN vt0.c1 WHEN vt0.c0 THEN '-1267062769' WHEN vt0.c0 THEN t2.c1 WHEN t2.c6 THEN t2.c0 WHEN t2.c6 THEN vt0.c0 END, CASE t2.c1  WHEN t2.c1 THEN t2.c2 END, ((((((((t2.c1)OR(t2.c0)))OR(vt0.c0)))OR(t2.c2)))OR(t2.c0)))))) IS TRUE)  as count FROM vt0, t2);
SELECT * FROM vt0, t2 WHERE ((((vt0.c0, vt0.c1, t2.c0, t2.c1, t2.c2)) NOT BETWEEN ((COALESCE(DISTINCT 377550395, t2.c2), t2.c0 COLLATE NOCASE, HEX(DISTINCT t2.c2), ((((((((vt0.c1)AND(t2.c6)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (vt0.c1 IN ()))) AND ((t2.c1 COLLATE NOCASE, t2.c6, CASE t2.c2  WHEN t2.c6 THEN vt0.c1 WHEN vt0.c0 THEN '-1267062769' WHEN vt0.c0 THEN t2.c1 WHEN t2.c6 THEN t2.c0 WHEN t2.c6 THEN vt0.c0 END, CASE t2.c1  WHEN t2.c1 THEN t2.c2 END, ((((((((t2.c1)OR(t2.c0)))OR(vt0.c0)))OR(t2.c2)))OR(t2.c0))))));
SELECT ALL * FROM vt0, t2 WHERE ((t2.c6 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t2.c6 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t2);
SELECT ALL * FROM vt0, t2 WHERE ((t2.c6 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t2.c6 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t2);
SELECT ALL * FROM vt0, t2 WHERE ((t2.c6 IN ()) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((x'464b') NOT BETWEEN (((vt0.c1)&('XV02'))) AND (((0.8603238831660776) IS FALSE)))) ORDER BY ((((((((((((vt0.c1 COLLATE RTRIM)OR(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE '701040846' END)))OR((+ (x'')))))AND(vt0.c1)))AND('0.8151502453839827')))OR(((NULL)/(x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'464b') NOT BETWEEN (((vt0.c1)&('XV02'))) AND (((0.8603238831660776) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c1 COLLATE RTRIM)OR(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE '701040846' END)))OR((+ (x'')))))AND(vt0.c1)))AND('0.8151502453839827')))OR(((NULL)/(x'')))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((x'464b') NOT BETWEEN (((vt0.c1)&('XV02'))) AND (((0.8603238831660776) IS FALSE)))) ORDER BY ((((((((((((vt0.c1 COLLATE RTRIM)OR(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE '701040846' END)))OR((+ (x'')))))AND(vt0.c1)))AND('0.8151502453839827')))OR(((NULL)/(x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'464b') NOT BETWEEN (((vt0.c1)&('XV02'))) AND (((0.8603238831660776) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c1 COLLATE RTRIM)OR(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE '701040846' END)))OR((+ (x'')))))AND(vt0.c1)))AND('0.8151502453839827')))OR(((NULL)/(x'')))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((x'464b') NOT BETWEEN (((vt0.c1)&('XV02'))) AND (((0.8603238831660776) IS FALSE)))) ORDER BY ((((((((((((vt0.c1 COLLATE RTRIM)OR(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE '701040846' END)))OR((+ (x'')))))AND(vt0.c1)))AND('0.8151502453839827')))OR(((NULL)/(x'')))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, t2 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL * FROM t0, vt0, t2 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL * FROM t0, vt0, t2 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY ((((vt0.c1, vt0.c1, vt0.c0))<>((1.81103902E9, t0.c0, t0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY ((((vt0.c1, vt0.c1, vt0.c0))!=((1.81103902E9, t0.c0, t0.c0))) IN ()) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY ((((vt0.c1, vt0.c1, vt0.c0))<>((1.81103902E9, t0.c0, t0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY ((((vt0.c1, vt0.c1, vt0.c0))!=((1.81103902E9, t0.c0, t0.c0))) IN ()) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY ((((vt0.c1, vt0.c1, vt0.c0))<>((1.81103902E9, t0.c0, t0.c0))) IN ()) DESC;
SELECT ALL * FROM vt0, t0, t2 WHERE ((((t2.c2)<>(256417597)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2)!=(256417597)) IN ())) IS TRUE)  as count FROM vt0, t0, t2);
SELECT ALL * FROM vt0, t0, t2 WHERE ((((t2.c2)<>(256417597)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2)!=(256417597)) IN ())) IS TRUE)  as count FROM vt0, t0, t2);
SELECT ALL * FROM vt0, t0, t2 WHERE ((((t2.c2)<>(256417597)) IN ()));
SELECT ALL * FROM t2, t0 WHERE (0.2019185268342769) ORDER BY ABS(CASE WHEN t2.c1 THEN t2.c1 ELSE '0.1532623587147235' END)  NULLS LAST, ((x'' IN ()) IN ()), (((t0.c0)) NOT BETWEEN ((((t2.c1) BETWEEN (t2.c2) AND (t2.c0)))) AND ((CASE WHEN NULL THEN t2.c6 ELSE t2.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((0.2019185268342769) IS TRUE)  as count FROM t2, t0 ORDER BY ABS(CASE WHEN t2.c1 THEN t2.c1 ELSE '0.1532623587147235' END)  NULLS LAST, ((x'' IN ()) IN ()), (((t0.c0)) NOT BETWEEN ((((t2.c1) BETWEEN (t2.c2) AND (t2.c0)))) AND ((CASE WHEN NULL THEN t2.c6 ELSE t2.c2 END))));
SELECT ALL * FROM t2, t0 WHERE (0.2019185268342769) ORDER BY ABS(CASE WHEN t2.c1 THEN t2.c1 ELSE '0.1532623587147235' END)  NULLS LAST, ((x'' IN ()) IN ()), (((t0.c0)) NOT BETWEEN ((((t2.c1) BETWEEN (t2.c2) AND (t2.c0)))) AND ((CASE WHEN NULL THEN t2.c6 ELSE t2.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((0.2019185268342769) IS TRUE)  as count FROM t2, t0 ORDER BY ABS(CASE WHEN t2.c1 THEN t2.c1 ELSE '0.1532623587147235' END)  NULLS LAST, ((x'' IN ()) IN ()), (((t0.c0)) NOT BETWEEN ((((t2.c1) BETWEEN (t2.c2) AND (t2.c0)))) AND ((CASE WHEN NULL THEN t2.c6 ELSE t2.c2 END))));
SELECT ALL * FROM t2, t0 WHERE (0.2019185268342769) ORDER BY ABS(CASE WHEN t2.c1 THEN t2.c1 ELSE '0.1532623587147235' END)  NULLS LAST, ((x'' IN ()) IN ()), (((t0.c0)) NOT BETWEEN ((((t2.c1) BETWEEN (t2.c2) AND (t2.c0)))) AND ((CASE WHEN NULL THEN t2.c6 ELSE t2.c2 END)));
SELECT * FROM vt0, t2, t0 WHERE ((((((t2.c6, t2.c0, vt0.c1))>=((vt0.c0, t2.c0, vt0.c1)))) BETWEEN (((vt0.c1)-(t2.c1))) AND (x'ca47'))) ORDER BY (NOT ((((t2.c0, t2.c1, t2.c2)) BETWEEN ((t0.c0, t2.c2, vt0.c0)) AND ((t2.c1, t2.c2, vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c6, t2.c0, vt0.c1))>=((vt0.c0, t2.c0, vt0.c1)))) BETWEEN (((vt0.c1)-(t2.c1))) AND (x'ca47'))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY (NOT ((((t2.c0, t2.c1, t2.c2)) BETWEEN ((t0.c0, t2.c2, vt0.c0)) AND ((t2.c1, t2.c2, vt0.c1))))) ASC);
SELECT * FROM vt0, t2, t0 WHERE ((((((t2.c6, t2.c0, vt0.c1))>=((vt0.c0, t2.c0, vt0.c1)))) BETWEEN (((vt0.c1)-(t2.c1))) AND (x'ca47'))) ORDER BY (NOT ((((t2.c0, t2.c1, t2.c2)) BETWEEN ((t0.c0, t2.c2, vt0.c0)) AND ((t2.c1, t2.c2, vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c6, t2.c0, vt0.c1))>=((vt0.c0, t2.c0, vt0.c1)))) BETWEEN (((vt0.c1)-(t2.c1))) AND (x'ca47'))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY (NOT ((((t2.c0, t2.c1, t2.c2)) BETWEEN ((t0.c0, t2.c2, vt0.c0)) AND ((t2.c1, t2.c2, vt0.c1))))) ASC);
SELECT * FROM vt0, t2, t0 WHERE ((((((t2.c6, t2.c0, vt0.c1))>=((vt0.c0, t2.c0, vt0.c1)))) BETWEEN (((vt0.c1)-(t2.c1))) AND (x'ca47'))) ORDER BY (NOT ((((t2.c0, t2.c1, t2.c2)) BETWEEN ((t0.c0, t2.c2, vt0.c0)) AND ((t2.c1, t2.c2, vt0.c1))))) ASC;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END) ISNULL) WHERE ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END) ISNULL) WHERE ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END) ISNULL) WHERE ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ()));
SELECT COUNT(*) FROM t2 WHERE (((CASE t2.c1  WHEN t2.c1 THEN t2.c0 ELSE x'a561' END) NOT BETWEEN (((((t2.c6)OR(t2.c0)))AND(t2.c1))) AND ((- (t2.c6)))));
SELECT SUM(count) FROM (SELECT ((((CASE t2.c1  WHEN t2.c1 THEN t2.c0 ELSE x'a561' END) NOT BETWEEN (((((t2.c6)OR(t2.c0)))AND(t2.c1))) AND ((- (t2.c6))))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((CASE t2.c1  WHEN t2.c1 THEN t2.c0 ELSE x'a561' END) NOT BETWEEN (((((t2.c6)OR(t2.c0)))AND(t2.c1))) AND ((- (t2.c6)))));
SELECT SUM(count) FROM (SELECT ((((CASE t2.c1  WHEN t2.c1 THEN t2.c0 ELSE x'a561' END) NOT BETWEEN (((((t2.c6)OR(t2.c0)))AND(t2.c1))) AND ((- (t2.c6))))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((CASE t2.c1  WHEN t2.c1 THEN t2.c0 ELSE x'a561' END) NOT BETWEEN (((((t2.c6)OR(t2.c0)))AND(t2.c1))) AND ((- (t2.c6)))));
SELECT ALL * FROM t2 WHERE (CASE ((t2.c6) NOT BETWEEN (x'8ba2') AND (t2.c2))  WHEN '1817745025' THEN CASE t2.c2  WHEN t2.c0 THEN t2.c0 END END) ORDER BY ((((t2.c6)<<(t2.c0)))<<(CASE t2.c2  WHEN t2.c0 THEN t2.c6 WHEN t2.c6 THEN t2.c0 WHEN t2.c1 THEN t2.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t2.c6) NOT BETWEEN (x'8ba2') AND (t2.c2))  WHEN '1817745025' THEN CASE t2.c2  WHEN t2.c0 THEN t2.c0 END END) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c6)<<(t2.c0)))<<(CASE t2.c2  WHEN t2.c0 THEN t2.c6 WHEN t2.c6 THEN t2.c0 WHEN t2.c1 THEN t2.c0 END))  NULLS LAST);
SELECT ALL * FROM t2 WHERE (CASE ((t2.c6) NOT BETWEEN (x'8ba2') AND (t2.c2))  WHEN '1817745025' THEN CASE t2.c2  WHEN t2.c0 THEN t2.c0 END END) ORDER BY ((((t2.c6)<<(t2.c0)))<<(CASE t2.c2  WHEN t2.c0 THEN t2.c6 WHEN t2.c6 THEN t2.c0 WHEN t2.c1 THEN t2.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t2.c6) NOT BETWEEN (x'8ba2') AND (t2.c2))  WHEN '1817745025' THEN CASE t2.c2  WHEN t2.c0 THEN t2.c0 END END) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c6)<<(t2.c0)))<<(CASE t2.c2  WHEN t2.c0 THEN t2.c6 WHEN t2.c6 THEN t2.c0 WHEN t2.c1 THEN t2.c0 END))  NULLS LAST);
SELECT ALL * FROM t2 WHERE (CASE ((t2.c6) NOT BETWEEN (x'8ba2') AND (t2.c2))  WHEN '1817745025' THEN CASE t2.c2  WHEN t2.c0 THEN t2.c0 END END) ORDER BY ((((t2.c6)<<(t2.c0)))<<(CASE t2.c2  WHEN t2.c0 THEN t2.c6 WHEN t2.c6 THEN t2.c0 WHEN t2.c1 THEN t2.c0 END))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (-303030173);
SELECT SUM(count) FROM (SELECT ALL ((-303030173) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (-303030173);
SELECT SUM(count) FROM (SELECT ALL ((-303030173) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (-303030173);
SELECT COUNT(*) FROM vt0 WHERE ((((highlight(vt0.c0, '-387753798', vt0.c0, vt0.c0)))>((((vt0.c0)||(vt0.c0)))))) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))/((((vt0.c1, '', vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((highlight(vt0.c0, '-387753798', vt0.c0, vt0.c0)))>((((vt0.c0)||(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))/((((vt0.c1, '', vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((highlight(vt0.c0, '-387753798', vt0.c0, vt0.c0)))>((((vt0.c0)||(vt0.c0)))))) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))/((((vt0.c1, '', vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((highlight(vt0.c0, '-387753798', vt0.c0, vt0.c0)))>((((vt0.c0)||(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))/((((vt0.c1, '', vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE (CASE t0.c0  WHEN ((((((((((((t2.c6)OR(vt0.c0)))OR(t0.c0)))AND(t2.c0)))OR(t2.c1)))OR(-2.20376244E8)))OR(t2.c1)) THEN ((t2.c0)<(t0.c0)) END) ORDER BY ((t2.c1) BETWEEN (t2.c1) AND (vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, CASE ((t2.c6)+(t2.c1))  WHEN CAST(t2.c1 AS REAL) THEN (((vt0.c1))=((vt0.c0))) WHEN (('-167363851')%(t2.c1)) THEN (NOT (t2.c1)) WHEN ((((t2.c2)OR(t0.c0)))AND(t2.c0)) THEN NULL ELSE json_array(t2.c6, vt0.c0) END  NULLS FIRST, 0xffffffffcbd5e955  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN ((((((((((((t2.c6)OR(vt0.c0)))OR(t0.c0)))AND(t2.c0)))OR(t2.c1)))OR(-2.20376244E8)))OR(t2.c1)) THEN ((t2.c0)<(t0.c0)) END) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY ((t2.c1) BETWEEN (t2.c1) AND (vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, CASE ((t2.c6)+(t2.c1))  WHEN CAST(t2.c1 AS REAL) THEN (((vt0.c1))==((vt0.c0))) WHEN (('-167363851')%(t2.c1)) THEN (NOT (t2.c1)) WHEN ((((t2.c2)OR(t0.c0)))AND(t2.c0)) THEN NULL ELSE json_array(t2.c6, vt0.c0) END  NULLS FIRST, 0xffffffffcbd5e955  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE (CASE t0.c0  WHEN ((((((((((((t2.c6)OR(vt0.c0)))OR(t0.c0)))AND(t2.c0)))OR(t2.c1)))OR(-2.20376244E8)))OR(t2.c1)) THEN ((t2.c0)<(t0.c0)) END) ORDER BY ((t2.c1) BETWEEN (t2.c1) AND (vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, CASE ((t2.c6)+(t2.c1))  WHEN CAST(t2.c1 AS REAL) THEN (((vt0.c1))=((vt0.c0))) WHEN (('-167363851')%(t2.c1)) THEN (NOT (t2.c1)) WHEN ((((t2.c2)OR(t0.c0)))AND(t2.c0)) THEN NULL ELSE json_array(t2.c6, vt0.c0) END  NULLS FIRST, 0xffffffffcbd5e955  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN ((((((((((((t2.c6)OR(vt0.c0)))OR(t0.c0)))AND(t2.c0)))OR(t2.c1)))OR(-2.20376244E8)))OR(t2.c1)) THEN ((t2.c0)<(t0.c0)) END) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY ((t2.c1) BETWEEN (t2.c1) AND (vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, CASE ((t2.c6)+(t2.c1))  WHEN CAST(t2.c1 AS REAL) THEN (((vt0.c1))==((vt0.c0))) WHEN (('-167363851')%(t2.c1)) THEN (NOT (t2.c1)) WHEN ((((t2.c2)OR(t0.c0)))AND(t2.c0)) THEN NULL ELSE json_array(t2.c6, vt0.c0) END  NULLS FIRST, 0xffffffffcbd5e955  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE (CASE t0.c0  WHEN ((((((((((((t2.c6)OR(vt0.c0)))OR(t0.c0)))AND(t2.c0)))OR(t2.c1)))OR(-2.20376244E8)))OR(t2.c1)) THEN ((t2.c0)<(t0.c0)) END) ORDER BY ((t2.c1) BETWEEN (t2.c1) AND (vt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, CASE ((t2.c6)+(t2.c1))  WHEN CAST(t2.c1 AS REAL) THEN (((vt0.c1))=((vt0.c0))) WHEN (('-167363851')%(t2.c1)) THEN (NOT (t2.c1)) WHEN ((((t2.c2)OR(t0.c0)))AND(t2.c0)) THEN NULL ELSE json_array(t2.c6, vt0.c0) END  NULLS FIRST, 0xffffffffcbd5e955  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)|(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c0)>=(vt0.c0)))))OR('582737358')))OR('-1267062769')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)|(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c0)>=(vt0.c0)))))OR('582737358')))OR('-1267062769'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)|(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c0)>=(vt0.c0)))))OR('582737358')))OR('-1267062769')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)|(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c0)>=(vt0.c0)))))OR('582737358')))OR('-1267062769'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)|(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c0)>=(vt0.c0)))))OR('582737358')))OR('-1267062769')));
SELECT * FROM t2, vt0 WHERE (CAST(((t2.c2) NOT BETWEEN (0.030446336755099668) AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t2.c2) NOT BETWEEN (0.030446336755099668) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t2, vt0);
SELECT * FROM t2, vt0 WHERE (CAST(((t2.c2) NOT BETWEEN (0.030446336755099668) AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t2.c2) NOT BETWEEN (0.030446336755099668) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t2, vt0);
SELECT * FROM t2, vt0 WHERE (CAST(((t2.c2) NOT BETWEEN (0.030446336755099668) AND (vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM t2 WHERE (((t2.c2 IN ()) IN (LIKE('-542276746', t2.c2, 'p'))));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c2 IN ()) IN (LIKE('-542276746', t2.c2, 'p')))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((t2.c2 IN ()) IN (LIKE('-542276746', t2.c2, 'p'))));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c2 IN ()) IN (LIKE('-542276746', t2.c2, 'p')))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((t2.c2 IN ()) IN (LIKE('-542276746', t2.c2, 'p'))));
SELECT ALL * FROM vt0, t0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))IS NOT(((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))IS NOT(((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC);
SELECT ALL * FROM vt0, t0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))IS NOT(((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))IS NOT(((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC);
SELECT ALL * FROM vt0, t0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))IS NOT(((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE (json(((t0.c0)-(t2.c0))));
SELECT SUM(count) FROM (SELECT ((json(((t0.c0)-(t2.c0)))) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE (json(((t0.c0)-(t2.c0))));
SELECT SUM(count) FROM (SELECT ((json(((t0.c0)-(t2.c0)))) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE (json(((t0.c0)-(t2.c0))));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1) ORDER BY ((HEX(t0.c0))*(-1.532159768E9)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY ((HEX(t0.c0))*(-1.532159768E9)) DESC);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1) ORDER BY ((HEX(t0.c0))*(-1.532159768E9)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY ((HEX(t0.c0))*(-1.532159768E9)) DESC);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1) ORDER BY ((HEX(t0.c0))*(-1.532159768E9)) DESC;
SELECT ALL * FROM vt0, t2, t0 WHERE (((0.28772045936204593)IS NOT((t2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.28772045936204593)IS NOT((t2.c0 IN ())))) IS TRUE)  as count FROM vt0, t2, t0);
SELECT ALL * FROM vt0, t2, t0 WHERE (((0.28772045936204593)IS NOT((t2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.28772045936204593)IS NOT((t2.c0 IN ())))) IS TRUE)  as count FROM vt0, t2, t0);
SELECT ALL * FROM vt0, t2, t0 WHERE (((0.28772045936204593)IS NOT((t2.c0 IN ()))));
SELECT ALL * FROM t0 WHERE ((NOT ((((0.8211770695245154, 0X6cf15de2, t0.c0))<((t0.c0, 0.8801425687073006, t0.c0)))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((0.8211770695245154, 0X6cf15de2, t0.c0))<((t0.c0, 0.8801425687073006, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT ALL * FROM t0 WHERE ((NOT ((((0.8211770695245154, 0X6cf15de2, t0.c0))<((t0.c0, 0.8801425687073006, t0.c0)))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((0.8211770695245154, 0X6cf15de2, t0.c0))<((t0.c0, 0.8801425687073006, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT ALL * FROM t0 WHERE ((NOT ((((0.8211770695245154, 0X6cf15de2, t0.c0))<((t0.c0, 0.8801425687073006, t0.c0)))))) ORDER BY t0.c0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY ((vt0.c0 COLLATE NOCASE)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY ((vt0.c0 COLLATE NOCASE)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY ((vt0.c0 COLLATE NOCASE)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM t2 WHERE (CAST((t2.c1 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t2.c1 IN ()) AS TEXT)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (CAST((t2.c1 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t2.c1 IN ()) AS TEXT)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (CAST((t2.c1 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM t0, t2, vt0 WHERE ((~ ('-992690400')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ ('-992690400')) COLLATE RTRIM) IS TRUE)  as count FROM t0, t2, vt0);
SELECT ALL COUNT(*) FROM t0, t2, vt0 WHERE ((~ ('-992690400')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ ('-992690400')) COLLATE RTRIM) IS TRUE)  as count FROM t0, t2, vt0);
SELECT ALL COUNT(*) FROM t0, t2, vt0 WHERE ((~ ('-992690400')) COLLATE RTRIM);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (t2.c6);
SELECT SUM(count) FROM (SELECT ALL ((t2.c6) IS TRUE)  as count FROM t2, vt0, t0);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (t2.c6);
SELECT SUM(count) FROM (SELECT ALL ((t2.c6) IS TRUE)  as count FROM t2, vt0, t0);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (t2.c6);
SELECT ALL * FROM vt0, t2, t0 WHERE (((((((((((NULL) BETWEEN (vt0.c1) AND (NULL)))AND(TRIM(t2.c6, vt0.c0))))AND(((vt0.c1) NOT BETWEEN (t2.c2) AND (t2.c0)))))AND('qn')))OR(t2.c1 COLLATE NOCASE))) ORDER BY t2.c6, SUBSTR(((t0.c0) NOT BETWEEN (vt0.c1) AND (t2.c2)), (((t2.c6))>=((t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL) BETWEEN (vt0.c1) AND (NULL)))AND(TRIM(t2.c6, vt0.c0))))AND(((vt0.c1) NOT BETWEEN (t2.c2) AND (t2.c0)))))AND('qn')))OR(t2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY t2.c6, SUBSTR(((t0.c0) NOT BETWEEN (vt0.c1) AND (t2.c2)), (((t2.c6))>=((t0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, t2, t0 WHERE (((((((((((NULL) BETWEEN (vt0.c1) AND (NULL)))AND(TRIM(t2.c6, vt0.c0))))AND(((vt0.c1) NOT BETWEEN (t2.c2) AND (t2.c0)))))AND('qn')))OR(t2.c1 COLLATE NOCASE))) ORDER BY t2.c6, SUBSTR(((t0.c0) NOT BETWEEN (vt0.c1) AND (t2.c2)), (((t2.c6))>=((t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL) BETWEEN (vt0.c1) AND (NULL)))AND(TRIM(t2.c6, vt0.c0))))AND(((vt0.c1) NOT BETWEEN (t2.c2) AND (t2.c0)))))AND('qn')))OR(t2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY t2.c6, SUBSTR(((t0.c0) NOT BETWEEN (vt0.c1) AND (t2.c2)), (((t2.c6))>=((t0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, t2, t0 WHERE (((((((((((NULL) BETWEEN (vt0.c1) AND (NULL)))AND(TRIM(t2.c6, vt0.c0))))AND(((vt0.c1) NOT BETWEEN (t2.c2) AND (t2.c0)))))AND('qn')))OR(t2.c1 COLLATE NOCASE))) ORDER BY t2.c6, SUBSTR(((t0.c0) NOT BETWEEN (vt0.c1) AND (t2.c2)), (((t2.c6))>=((t0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (((CASE WHEN t2.c6 THEN t0.c0 END)/(((t2.c6) NOT BETWEEN (t2.c6) AND (t2.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t2.c6 THEN t0.c0 END)/(((t2.c6) NOT BETWEEN (t2.c6) AND (t2.c1))))) IS TRUE)  as count FROM t0, t2, vt0);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (((CASE WHEN t2.c6 THEN t0.c0 END)/(((t2.c6) NOT BETWEEN (t2.c6) AND (t2.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t2.c6 THEN t0.c0 END)/(((t2.c6) NOT BETWEEN (t2.c6) AND (t2.c1))))) IS TRUE)  as count FROM t0, t2, vt0);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (((CASE WHEN t2.c6 THEN t0.c0 END)/(((t2.c6) NOT BETWEEN (t2.c6) AND (t2.c1)))));
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (UNLIKELY(DISTINCT ((vt0.c1) BETWEEN (t2.c2) AND (t2.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt0.c1) BETWEEN (t2.c2) AND (t2.c0)))) IS TRUE)  as count FROM vt0, t0, t2);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (UNLIKELY(DISTINCT ((vt0.c1) BETWEEN (t2.c2) AND (t2.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt0.c1) BETWEEN (t2.c2) AND (t2.c0)))) IS TRUE)  as count FROM vt0, t0, t2);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (UNLIKELY(DISTINCT ((vt0.c1) BETWEEN (t2.c2) AND (t2.c0))));
SELECT * FROM t0 WHERE (CASE HEX(t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN HEX(DISTINCT t0.c0) ELSE (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) END) ORDER BY CAST(CAST(t0.c0 AS NUMERIC) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE HEX(t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN HEX(DISTINCT t0.c0) ELSE (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) END) IS TRUE)  as count FROM t0 ORDER BY CAST(CAST(t0.c0 AS NUMERIC) AS TEXT));
SELECT * FROM t0 WHERE (CASE HEX(t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN HEX(DISTINCT t0.c0) ELSE (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) END) ORDER BY CAST(CAST(t0.c0 AS NUMERIC) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE HEX(t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN HEX(DISTINCT t0.c0) ELSE (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) END) IS TRUE)  as count FROM t0 ORDER BY CAST(CAST(t0.c0 AS NUMERIC) AS TEXT));
SELECT * FROM t0 WHERE (CASE HEX(t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN HEX(DISTINCT t0.c0) ELSE (((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))) END) ORDER BY CAST(CAST(t0.c0 AS NUMERIC) AS TEXT);
SELECT ALL * FROM vt0, t2, t0 WHERE ((t2.c2 IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t2.c2 IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t2, t0);
SELECT ALL * FROM vt0, t2, t0 WHERE ((t2.c2 IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t2.c2 IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t2, t0);
SELECT ALL * FROM vt0, t2, t0 WHERE ((t2.c2 IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) ISNULL)) ORDER BY (NOT ((+ (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 END) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (NOT ((+ (t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) ISNULL)) ORDER BY (NOT ((+ (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 END) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (NOT ((+ (t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) ISNULL)) ORDER BY (NOT ((+ (t0.c0)))) ASC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t2 ON CAST(t2.c2 AS INTEGER) COLLATE NOCASE WHERE (((((t2.c2 IN (0.8291129058806319, t2.c2))))<((((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c2 IN (0.8291129058806319, t2.c2))))<((((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t2 ON CAST(t2.c2 AS INTEGER) COLLATE NOCASE);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t2 ON CAST(t2.c2 AS INTEGER) COLLATE NOCASE WHERE (((((t2.c2 IN (0.8291129058806319, t2.c2))))<((((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c2 IN (0.8291129058806319, t2.c2))))<((((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t2 ON CAST(t2.c2 AS INTEGER) COLLATE NOCASE);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t2 ON CAST(t2.c2 AS INTEGER) COLLATE NOCASE WHERE (((((t2.c2 IN (0.8291129058806319, t2.c2))))<((((vt0.c0) BETWEEN (t2.c0) AND (vt0.c0))))));
SELECT ALL * FROM t2, t0, vt0 WHERE ('899088601') ORDER BY CAST(LOWER(t0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (('899088601') IS TRUE)  as count FROM t2, t0, vt0 ORDER BY CAST(LOWER(t0.c0) AS REAL));
SELECT ALL * FROM t2, t0, vt0 WHERE ('899088601') ORDER BY CAST(LOWER(t0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (('899088601') IS TRUE)  as count FROM t2, t0, vt0 ORDER BY CAST(LOWER(t0.c0) AS REAL));
SELECT ALL * FROM t2, t0, vt0 WHERE ('899088601') ORDER BY CAST(LOWER(t0.c0) AS REAL);
SELECT ALL COUNT(*) FROM t2 WHERE (((CASE WHEN t2.c1 THEN t2.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t2.c1 THEN t2.c1 END) ISNULL)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((CASE WHEN t2.c1 THEN t2.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t2.c1 THEN t2.c1 END) ISNULL)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((CASE WHEN t2.c1 THEN t2.c1 END) ISNULL));
SELECT ALL * FROM t0, t2, vt0 WHERE ((((('!	P3MVt]\')OR(t2.c0)))AND(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((('!	P3MVt]\')OR(t2.c0)))AND(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, t2, vt0);
SELECT ALL * FROM t0, t2, vt0 WHERE ((((('!	P3MVt]\')OR(t2.c0)))AND(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((('!	P3MVt]\')OR(t2.c0)))AND(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, t2, vt0);
SELECT ALL * FROM t0, t2, vt0 WHERE ((((('!	P3MVt]\')OR(t2.c0)))AND(vt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE ((((((((((('7b') NOT BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c0 IN ()))))OR((t0.c0 IN ()))))OR('eLY釧om')))OR(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('7b') NOT BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c0 IN ()))))OR((t0.c0 IN ()))))OR('eLY釧om')))OR(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((('7b') NOT BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c0 IN ()))))OR((t0.c0 IN ()))))OR('eLY釧om')))OR(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('7b') NOT BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c0 IN ()))))OR((t0.c0 IN ()))))OR('eLY釧om')))OR(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((('7b') NOT BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c0 IN ()))))OR((t0.c0 IN ()))))OR('eLY釧om')))OR(((t0.c0) NOT NULL))));
SELECT * FROM t2 FULL OUTER JOIN t0 ON ((((((((CAST(t2.c1 AS TEXT))OR(((t2.c0)>>(t2.c1)))))AND((- (t2.c2)))))OR(NULL)))AND(t0.c0 COLLATE BINARY)) WHERE ((((CAST('1760724046' AS BLOB), ((((t2.c0)AND(t2.c2)))OR(t2.c2)), ((t0.c0)IS(t2.c2))))>=((SQLITE_SOURCE_ID(), ((t2.c1) IS TRUE), ((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c1)))))) ORDER BY ((NULL) IS FALSE), ((0Xffffffff9a10f156 COLLATE RTRIM) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST('1760724046' AS BLOB), ((((t2.c0)AND(t2.c2)))OR(t2.c2)), ((t0.c0)IS(t2.c2))))>=((SQLITE_SOURCE_ID(), ((t2.c1) IS TRUE), ((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c1)))))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON ((((((((CAST(t2.c1 AS TEXT))OR(((t2.c0)>>(t2.c1)))))AND((- (t2.c2)))))OR(NULL)))AND(t0.c0 COLLATE BINARY)) ORDER BY ((NULL) IS FALSE), ((0Xffffffff9a10f156 COLLATE RTRIM) ISNULL) DESC  NULLS LAST);
SELECT * FROM t2 FULL OUTER JOIN t0 ON ((((((((CAST(t2.c1 AS TEXT))OR(((t2.c0)>>(t2.c1)))))AND((- (t2.c2)))))OR(NULL)))AND(t0.c0 COLLATE BINARY)) WHERE ((((CAST('1760724046' AS BLOB), ((((t2.c0)AND(t2.c2)))OR(t2.c2)), ((t0.c0)IS(t2.c2))))>=((SQLITE_SOURCE_ID(), ((t2.c1) IS TRUE), ((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c1)))))) ORDER BY ((NULL) IS FALSE), ((0Xffffffff9a10f156 COLLATE RTRIM) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST('1760724046' AS BLOB), ((((t2.c0)AND(t2.c2)))OR(t2.c2)), ((t0.c0)IS(t2.c2))))>=((SQLITE_SOURCE_ID(), ((t2.c1) IS TRUE), ((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c1)))))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON ((((((((CAST(t2.c1 AS TEXT))OR(((t2.c0)>>(t2.c1)))))AND((- (t2.c2)))))OR(NULL)))AND(t0.c0 COLLATE BINARY)) ORDER BY ((NULL) IS FALSE), ((0Xffffffff9a10f156 COLLATE RTRIM) ISNULL) DESC  NULLS LAST);
SELECT * FROM t2 FULL OUTER JOIN t0 ON ((((((((CAST(t2.c1 AS TEXT))OR(((t2.c0)>>(t2.c1)))))AND((- (t2.c2)))))OR(NULL)))AND(t0.c0 COLLATE BINARY)) WHERE ((((CAST('1760724046' AS BLOB), ((((t2.c0)AND(t2.c2)))OR(t2.c2)), ((t0.c0)IS(t2.c2))))>=((SQLITE_SOURCE_ID(), ((t2.c1) IS TRUE), ((t2.c0) NOT BETWEEN (t2.c1) AND (t2.c1)))))) ORDER BY ((NULL) IS FALSE), ((0Xffffffff9a10f156 COLLATE RTRIM) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (~ (CAST(t2.c0 AS BLOB))) LEFT OUTER JOIN t2 ON ((((t2.c6)!=(t2.c2))) NOT BETWEEN (((0.9632871545404978)<>(t0.c0))) AND (((vt0.c0)*(NULL)))) WHERE (CAST(ABS(t2.c2) AS BLOB)) ORDER BY (((NULL IN ())) NOT BETWEEN (CAST(x'' AS TEXT)) AND (((t2.c6)<<(t0.c0)))), 0Xffffffffd87b99bc;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(t2.c2) AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (~ (CAST(t2.c0 AS BLOB))) LEFT OUTER JOIN t2 ON ((((t2.c6)<>(t2.c2))) NOT BETWEEN (((0.9632871545404978)!=(t0.c0))) AND (((vt0.c0)*(NULL)))) ORDER BY (((NULL IN ())) NOT BETWEEN (CAST(x'' AS TEXT)) AND (((t2.c6)<<(t0.c0)))), 0Xffffffffd87b99bc);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (~ (CAST(t2.c0 AS BLOB))) LEFT OUTER JOIN t2 ON ((((t2.c6)!=(t2.c2))) NOT BETWEEN (((0.9632871545404978)<>(t0.c0))) AND (((vt0.c0)*(NULL)))) WHERE (CAST(ABS(t2.c2) AS BLOB)) ORDER BY (((NULL IN ())) NOT BETWEEN (CAST(x'' AS TEXT)) AND (((t2.c6)<<(t0.c0)))), 0Xffffffffd87b99bc;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(t2.c2) AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (~ (CAST(t2.c0 AS BLOB))) LEFT OUTER JOIN t2 ON ((((t2.c6)<>(t2.c2))) NOT BETWEEN (((0.9632871545404978)!=(t0.c0))) AND (((vt0.c0)*(NULL)))) ORDER BY (((NULL IN ())) NOT BETWEEN (CAST(x'' AS TEXT)) AND (((t2.c6)<<(t0.c0)))), 0Xffffffffd87b99bc);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0)))) ISNULL)) ORDER BY json_insert(CAST(t0.c0 AS NUMERIC), CAST(vt0.c1 AS REAL), ((t0.c0) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY json_insert(CAST(t0.c0 AS NUMERIC), CAST(vt0.c1 AS REAL), ((t0.c0) IS TRUE))  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0)))) ISNULL)) ORDER BY json_insert(CAST(t0.c0 AS NUMERIC), CAST(vt0.c1 AS REAL), ((t0.c0) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY json_insert(CAST(t0.c0 AS NUMERIC), CAST(vt0.c1 AS REAL), ((t0.c0) IS TRUE))  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0)))) ISNULL)) ORDER BY json_insert(CAST(t0.c0 AS NUMERIC), CAST(vt0.c1 AS REAL), ((t0.c0) IS TRUE))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (0.008283184387867237);
SELECT SUM(count) FROM (SELECT ALL ((0.008283184387867237) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.008283184387867237);
SELECT SUM(count) FROM (SELECT ALL ((0.008283184387867237) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.008283184387867237);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)GLOB(vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)GLOB(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)GLOB(vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)GLOB(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)GLOB(vt0.c1)) AS REAL));
SELECT * FROM vt0, t2, t0 WHERE (CASE t2.c6  WHEN t2.c2 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE) ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN t2.c6 THEN t2.c2 WHEN t2.c6 THEN t2.c6 END THEN (t2.c0 IN ()) WHEN '{tIE\nohu' COLLATE NOCASE THEN CAST('-920824155' AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE t2.c6  WHEN t2.c2 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN t2.c6 THEN t2.c2 WHEN t2.c6 THEN t2.c6 END THEN (t2.c0 IN ()) WHEN '{tIE\nohu' COLLATE NOCASE THEN CAST('-920824155' AS TEXT) END  NULLS FIRST);
SELECT * FROM vt0, t2, t0 WHERE (CASE t2.c6  WHEN t2.c2 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE) ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN t2.c6 THEN t2.c2 WHEN t2.c6 THEN t2.c6 END THEN (t2.c0 IN ()) WHEN '{tIE\nohu' COLLATE NOCASE THEN CAST('-920824155' AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE t2.c6  WHEN t2.c2 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN t2.c6 THEN t2.c2 WHEN t2.c6 THEN t2.c6 END THEN (t2.c0 IN ()) WHEN '{tIE\nohu' COLLATE NOCASE THEN CAST('-920824155' AS TEXT) END  NULLS FIRST);
SELECT * FROM vt0, t2, t0 WHERE (CASE t2.c6  WHEN t2.c2 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE) ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN t2.c6 THEN t2.c2 WHEN t2.c6 THEN t2.c6 END THEN (t2.c0 IN ()) WHEN '{tIE\nohu' COLLATE NOCASE THEN CAST('-920824155' AS TEXT) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('-391250349') ORDER BY CASE x''  WHEN UPPER(DISTINCT vt0.c1) THEN '-e*y' ELSE ((vt0.c1)&(vt0.c0)) END ASC  NULLS LAST, ((CASE WHEN '1562024180' THEN vt0.c0 ELSE NULL END) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (-1308306348));
SELECT SUM(count) FROM (SELECT ALL (('-391250349') IS TRUE)  as count FROM vt0 ORDER BY CASE x''  WHEN UPPER(DISTINCT vt0.c1) THEN '-e*y' ELSE ((vt0.c1)&(vt0.c0)) END ASC  NULLS LAST, ((CASE WHEN '1562024180' THEN vt0.c0 ELSE NULL END) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (-1308306348)));
SELECT ALL COUNT(*) FROM vt0 WHERE ('-391250349') ORDER BY CASE x''  WHEN UPPER(DISTINCT vt0.c1) THEN '-e*y' ELSE ((vt0.c1)&(vt0.c0)) END ASC  NULLS LAST, ((CASE WHEN '1562024180' THEN vt0.c0 ELSE NULL END) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (-1308306348));
SELECT SUM(count) FROM (SELECT ALL (('-391250349') IS TRUE)  as count FROM vt0 ORDER BY CASE x''  WHEN UPPER(DISTINCT vt0.c1) THEN '-e*y' ELSE ((vt0.c1)&(vt0.c0)) END ASC  NULLS LAST, ((CASE WHEN '1562024180' THEN vt0.c0 ELSE NULL END) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (-1308306348)));
SELECT ALL COUNT(*) FROM vt0 WHERE ('-391250349') ORDER BY CASE x''  WHEN UPPER(DISTINCT vt0.c1) THEN '-e*y' ELSE ((vt0.c1)&(vt0.c0)) END ASC  NULLS LAST, ((CASE WHEN '1562024180' THEN vt0.c0 ELSE NULL END) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (-1308306348));
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (CASE WHEN NULL COLLATE BINARY THEN NULLIF(DISTINCT '1385777957', vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL COLLATE BINARY THEN NULLIF(DISTINCT '1385777957', vt0.c0) END) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (CASE WHEN NULL COLLATE BINARY THEN NULLIF(DISTINCT '1385777957', vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL COLLATE BINARY THEN NULLIF(DISTINCT '1385777957', vt0.c0) END) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (CASE WHEN NULL COLLATE BINARY THEN NULLIF(DISTINCT '1385777957', vt0.c0) END);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ())) ORDER BY (((t0.c0 IN (t0.c0, t0.c0))) BETWEEN ((t0.c0 IN ())) AND (((t0.c0)/(t0.c0))))  NULLS LAST, CAST((t0.c0 IN (t0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN (t0.c0, t0.c0))) BETWEEN ((t0.c0 IN ())) AND (((t0.c0)/(t0.c0))))  NULLS LAST, CAST((t0.c0 IN (t0.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ())) ORDER BY (((t0.c0 IN (t0.c0, t0.c0))) BETWEEN ((t0.c0 IN ())) AND (((t0.c0)/(t0.c0))))  NULLS LAST, CAST((t0.c0 IN (t0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN (t0.c0, t0.c0))) BETWEEN ((t0.c0 IN ())) AND (((t0.c0)/(t0.c0))))  NULLS LAST, CAST((t0.c0 IN (t0.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ())) ORDER BY (((t0.c0 IN (t0.c0, t0.c0))) BETWEEN ((t0.c0 IN ())) AND (((t0.c0)/(t0.c0))))  NULLS LAST, CAST((t0.c0 IN (t0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM t0, t2 WHERE ((t2.c2 IN ()) COLLATE BINARY) ORDER BY CAST(((x'1fee')OR('-703908896')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t2.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, t2 ORDER BY CAST(((x'1fee')OR('-703908896')) AS REAL)  NULLS LAST);
SELECT * FROM t0, t2 WHERE ((t2.c2 IN ()) COLLATE BINARY) ORDER BY CAST(((x'1fee')OR('-703908896')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t2.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, t2 ORDER BY CAST(((x'1fee')OR('-703908896')) AS REAL)  NULLS LAST);
SELECT * FROM t0, t2 WHERE ((t2.c2 IN ()) COLLATE BINARY) ORDER BY CAST(((x'1fee')OR('-703908896')) AS REAL)  NULLS LAST;
SELECT ALL * FROM t2, t0 WHERE (CAST(CASE t2.c6  WHEN t0.c0 THEN t2.c6 END AS TEXT)) ORDER BY ((t2.c6 COLLATE RTRIM) BETWEEN ((t2.c6 IN ())) AND ((- (t2.c6)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE t2.c6  WHEN t0.c0 THEN t2.c6 END AS TEXT)) IS TRUE)  as count FROM t2 NOT INDEXED, t0 ORDER BY ((t2.c6 COLLATE RTRIM) BETWEEN ((t2.c6 IN ())) AND ((- (t2.c6)))) ASC);
SELECT ALL * FROM t2, t0 WHERE (CAST(CASE t2.c6  WHEN t0.c0 THEN t2.c6 END AS TEXT)) ORDER BY ((t2.c6 COLLATE RTRIM) BETWEEN ((t2.c6 IN ())) AND ((- (t2.c6)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE t2.c6  WHEN t0.c0 THEN t2.c6 END AS TEXT)) IS TRUE)  as count FROM t2 NOT INDEXED, t0 ORDER BY ((t2.c6 COLLATE RTRIM) BETWEEN ((t2.c6 IN ())) AND ((- (t2.c6)))) ASC);
SELECT ALL * FROM t2, t0 WHERE (CAST(CASE t2.c6  WHEN t0.c0 THEN t2.c6 END AS TEXT)) ORDER BY ((t2.c6 COLLATE RTRIM) BETWEEN ((t2.c6 IN ())) AND ((- (t2.c6)))) ASC;
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN t2 ON vt0.c1 WHERE ((~ (LIKELIHOOD(vt0.c1, 0.5685806213635015))));
SELECT SUM(count) FROM (SELECT (((~ (LIKELIHOOD(vt0.c1, 0.5685806213635015)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN t2 ON vt0.c1);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN t2 ON vt0.c1 WHERE ((~ (LIKELIHOOD(vt0.c1, 0.5685806213635015))));
SELECT SUM(count) FROM (SELECT (((~ (LIKELIHOOD(vt0.c1, 0.5685806213635015)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN t2 ON vt0.c1);
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN t2 ON vt0.c1 WHERE ((~ (LIKELIHOOD(vt0.c1, 0.5685806213635015))));
SELECT * FROM vt0, t2, t0 WHERE (((((t2.c1)>(t2.c1)))<<(x'3c6e3a054171')));
SELECT SUM(count) FROM (SELECT ((((((t2.c1)>(t2.c1)))<<(x'3c6e3a054171'))) IS TRUE)  as count FROM vt0, t2, t0);
SELECT * FROM vt0, t2, t0 WHERE (((((t2.c1)>(t2.c1)))<<(x'3c6e3a054171')));
SELECT SUM(count) FROM (SELECT ((((((t2.c1)>(t2.c1)))<<(x'3c6e3a054171'))) IS TRUE)  as count FROM vt0, t2, t0);
SELECT * FROM vt0, t2, t0 WHERE (((((t2.c1)>(t2.c1)))<<(x'3c6e3a054171')));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t2 ON -1145988074 WHERE (HEX(DISTINCT ((t2.c1)<=(t2.c2)))) ORDER BY (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c1)) IN ()), (t0.c0 COLLATE NOCASE IN (CASE t2.c0  WHEN t2.c2 THEN t2.c0 WHEN t2.c6 THEN t0.c0 WHEN t2.c6 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((t2.c1)<=(t2.c2)))) IS TRUE)  as count FROM t0 INNER JOIN t2 ON -1145988074 ORDER BY (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c1)) IN ()), (t0.c0 COLLATE NOCASE IN (CASE t2.c0  WHEN t2.c2 THEN t2.c0 WHEN t2.c6 THEN t0.c0 WHEN t2.c6 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t2 ON -1145988074 WHERE (HEX(DISTINCT ((t2.c1)<=(t2.c2)))) ORDER BY (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c1)) IN ()), (t0.c0 COLLATE NOCASE IN (CASE t2.c0  WHEN t2.c2 THEN t2.c0 WHEN t2.c6 THEN t0.c0 WHEN t2.c6 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((t2.c1)<=(t2.c2)))) IS TRUE)  as count FROM t0 INNER JOIN t2 ON -1145988074 ORDER BY (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c1)) IN ()), (t0.c0 COLLATE NOCASE IN (CASE t2.c0  WHEN t2.c2 THEN t2.c0 WHEN t2.c6 THEN t0.c0 WHEN t2.c6 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN t2 ON -1145988074 WHERE (HEX(DISTINCT ((t2.c1)<=(t2.c2)))) ORDER BY (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c1)) IN ()), (t0.c0 COLLATE NOCASE IN (CASE t2.c0  WHEN t2.c2 THEN t2.c0 WHEN t2.c6 THEN t0.c0 WHEN t2.c6 THEN t0.c0 END));
SELECT * FROM t0, vt0 WHERE (((((t0.c0)%(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)%(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c0)%(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)%(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c0)%(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM t0, t2 WHERE (((((((t2.c0) NOT BETWEEN (t2.c1) AND (NULL)))OR(CASE t2.c6  WHEN t2.c6 THEN t2.c0 END)))OR(t2.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t2.c0) NOT BETWEEN (t2.c1) AND (NULL)))OR(CASE t2.c6  WHEN t2.c6 THEN t2.c0 END)))OR(t2.c1))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE (((((((t2.c0) NOT BETWEEN (t2.c1) AND (NULL)))OR(CASE t2.c6  WHEN t2.c6 THEN t2.c0 END)))OR(t2.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t2.c0) NOT BETWEEN (t2.c1) AND (NULL)))OR(CASE t2.c6  WHEN t2.c6 THEN t2.c0 END)))OR(t2.c1))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE (((((((t2.c0) NOT BETWEEN (t2.c1) AND (NULL)))OR(CASE t2.c6  WHEN t2.c6 THEN t2.c0 END)))OR(t2.c1)));
SELECT COUNT(*) FROM t2, t0 WHERE ('1141516352') ORDER BY (((t2.c6)) NOT BETWEEN ((((t2.c0)<<(t2.c0)))) AND (((t2.c1 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT (('1141516352') IS TRUE)  as count FROM t2, t0 ORDER BY (((t2.c6)) NOT BETWEEN ((((t2.c0)<<(t2.c0)))) AND (((t2.c1 IN ())))) DESC);
SELECT COUNT(*) FROM t2, t0 WHERE ('1141516352') ORDER BY (((t2.c6)) NOT BETWEEN ((((t2.c0)<<(t2.c0)))) AND (((t2.c1 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT (('1141516352') IS TRUE)  as count FROM t2, t0 ORDER BY (((t2.c6)) NOT BETWEEN ((((t2.c0)<<(t2.c0)))) AND (((t2.c1 IN ())))) DESC);
SELECT COUNT(*) FROM t2, t0 WHERE ('1141516352') ORDER BY (((t2.c6)) NOT BETWEEN ((((t2.c0)<<(t2.c0)))) AND (((t2.c1 IN ())))) DESC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t2 ON CAST(t2.c0 AS BLOB) COLLATE RTRIM COLLATE RTRIM INNER JOIN t0 ON ((CASE t2.c6  WHEN t0.c0 THEN vt0.c1 ELSE t2.c6 END) ISNULL) WHERE (((vt0.c1)=(t2.c1)) COLLATE BINARY) ORDER BY (((t2.c1 IN ())) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)=(t2.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN t2 ON CAST(t2.c0 AS BLOB) COLLATE RTRIM COLLATE RTRIM INNER JOIN t0 ON ((CASE t2.c6  WHEN t0.c0 THEN vt0.c1 ELSE t2.c6 END) ISNULL) ORDER BY (((t2.c1 IN ())) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t2 ON CAST(t2.c0 AS BLOB) COLLATE RTRIM COLLATE RTRIM INNER JOIN t0 ON ((CASE t2.c6  WHEN t0.c0 THEN vt0.c1 ELSE t2.c6 END) ISNULL) WHERE (((vt0.c1)=(t2.c1)) COLLATE BINARY) ORDER BY (((t2.c1 IN ())) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)=(t2.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN t2 ON CAST(t2.c0 AS BLOB) COLLATE RTRIM COLLATE RTRIM INNER JOIN t0 ON ((CASE t2.c6  WHEN t0.c0 THEN vt0.c1 ELSE t2.c6 END) ISNULL) ORDER BY (((t2.c1 IN ())) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t2 ON CAST(t2.c0 AS BLOB) COLLATE RTRIM COLLATE RTRIM INNER JOIN t0 ON ((CASE t2.c6  WHEN t0.c0 THEN vt0.c1 ELSE t2.c6 END) ISNULL) WHERE (((vt0.c1)=(t2.c1)) COLLATE BINARY) ORDER BY (((t2.c1 IN ())) IS FALSE) ASC;
SELECT * FROM vt0, t0 WHERE (IFNULL(((vt0.c0)+(t0.c0)), TRIM(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0)+(t0.c0)), TRIM(vt0.c1))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (IFNULL(((vt0.c0)+(t0.c0)), TRIM(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0)+(t0.c0)), TRIM(vt0.c1))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (IFNULL(((vt0.c0)+(t0.c0)), TRIM(vt0.c1)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c0, t2.c6, t0.c0))<>((vt0.c1, t2.c0, t2.c1))))<=(0.5955672480427873)) LEFT OUTER JOIN t2 ON ((json_patch(t0.c0, t2.c2)) NOT NULL) WHERE (0.19960596003913444);
SELECT SUM(count) FROM (SELECT ALL ((0.19960596003913444) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c0, t2.c6, t0.c0))!=((vt0.c1, t2.c0, t2.c1))))<=(0.5955672480427873)) LEFT OUTER JOIN t2 ON ((json_patch(t0.c0, t2.c2)) NOT NULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c0, t2.c6, t0.c0))<>((vt0.c1, t2.c0, t2.c1))))<=(0.5955672480427873)) LEFT OUTER JOIN t2 ON ((json_patch(t0.c0, t2.c2)) NOT NULL) WHERE (0.19960596003913444);
SELECT SUM(count) FROM (SELECT ALL ((0.19960596003913444) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c0, t2.c6, t0.c0))!=((vt0.c1, t2.c0, t2.c1))))<=(0.5955672480427873)) LEFT OUTER JOIN t2 ON ((json_patch(t0.c0, t2.c2)) NOT NULL));
SELECT COUNT(*) FROM t0, vt0, t2 WHERE (((((t2.c6)<>(t2.c0)))>(((t0.c0)||(t2.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t2.c6)<>(t2.c0)))>(((t0.c0)||(t2.c2))))) IS TRUE)  as count FROM t0, vt0, t2);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE (((((t2.c6)<>(t2.c0)))>(((t0.c0)||(t2.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t2.c6)<>(t2.c0)))>(((t0.c0)||(t2.c2))))) IS TRUE)  as count FROM t0, vt0, t2);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE (((((t2.c6)<>(t2.c0)))>(((t0.c0)||(t2.c2)))));
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE ((((t2.c2 IN ()))<(NULLIF(DISTINCT vt0.c1, '-235905562'))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2 IN ()))<(NULLIF(DISTINCT vt0.c1, '-235905562')))) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE ((((t2.c2 IN ()))<(NULLIF(DISTINCT vt0.c1, '-235905562'))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2 IN ()))<(NULLIF(DISTINCT vt0.c1, '-235905562')))) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE ((((t2.c2 IN ()))<(NULLIF(DISTINCT vt0.c1, '-235905562'))));
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN t2 ON (+ (((vt0.c1)<(vt0.c0)))) WHERE (CAST(t2.c1 AS REAL) COLLATE NOCASE) ORDER BY ((((t2.c6) BETWEEN (t2.c2) AND (t2.c1)))OR(((t2.c6) BETWEEN (vt0.c0) AND (t2.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t2.c1 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN t2 ON (+ (((vt0.c1)<(vt0.c0)))) ORDER BY ((((t2.c6) BETWEEN (t2.c2) AND (t2.c1)))OR(((t2.c6) BETWEEN (vt0.c0) AND (t2.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN t2 ON (+ (((vt0.c1)<(vt0.c0)))) WHERE (CAST(t2.c1 AS REAL) COLLATE NOCASE) ORDER BY ((((t2.c6) BETWEEN (t2.c2) AND (t2.c1)))OR(((t2.c6) BETWEEN (vt0.c0) AND (t2.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t2.c1 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN t2 ON (+ (((vt0.c1)<(vt0.c0)))) ORDER BY ((((t2.c6) BETWEEN (t2.c2) AND (t2.c1)))OR(((t2.c6) BETWEEN (vt0.c0) AND (t2.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN t2 ON (+ (((vt0.c1)<(vt0.c0)))) WHERE (CAST(t2.c1 AS REAL) COLLATE NOCASE) ORDER BY ((((t2.c6) BETWEEN (t2.c2) AND (t2.c1)))OR(((t2.c6) BETWEEN (vt0.c0) AND (t2.c0)))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(((NULL) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOT NULL) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((NULL) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOT NULL) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((NULL) NOT NULL) AS TEXT));
SELECT * FROM t2 WHERE (((t2.c2 COLLATE NOCASE) NOT BETWEEN ((t2.c1 IN ())) AND (((((((((t2.c0)OR(t2.c2)))AND(t2.c2)))OR(t2.c0)))AND(t2.c6)))));
SELECT SUM(count) FROM (SELECT ((((t2.c2 COLLATE NOCASE) NOT BETWEEN ((t2.c1 IN ())) AND (((((((((t2.c0)OR(t2.c2)))AND(t2.c2)))OR(t2.c0)))AND(t2.c6))))) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (((t2.c2 COLLATE NOCASE) NOT BETWEEN ((t2.c1 IN ())) AND (((((((((t2.c0)OR(t2.c2)))AND(t2.c2)))OR(t2.c0)))AND(t2.c6)))));
SELECT SUM(count) FROM (SELECT ((((t2.c2 COLLATE NOCASE) NOT BETWEEN ((t2.c1 IN ())) AND (((((((((t2.c0)OR(t2.c2)))AND(t2.c2)))OR(t2.c0)))AND(t2.c6))))) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (((t2.c2 COLLATE NOCASE) NOT BETWEEN ((t2.c1 IN ())) AND (((((((((t2.c0)OR(t2.c2)))AND(t2.c2)))OR(t2.c0)))AND(t2.c6)))));
SELECT COUNT(*) FROM t0, t2 WHERE (((((t2.c2) NOT BETWEEN (t2.c1) AND (t0.c0))) NOT BETWEEN (CASE WHEN t2.c1 THEN t2.c6 WHEN t2.c1 THEN x'' WHEN '618890660' THEN t2.c6 ELSE t2.c1 END) AND (0.2460936172884003)));
SELECT SUM(count) FROM (SELECT ((((((t2.c2) NOT BETWEEN (t2.c1) AND (t0.c0))) NOT BETWEEN (CASE WHEN t2.c1 THEN t2.c6 WHEN t2.c1 THEN x'' WHEN '618890660' THEN t2.c6 ELSE t2.c1 END) AND (0.2460936172884003))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE (((((t2.c2) NOT BETWEEN (t2.c1) AND (t0.c0))) NOT BETWEEN (CASE WHEN t2.c1 THEN t2.c6 WHEN t2.c1 THEN x'' WHEN '618890660' THEN t2.c6 ELSE t2.c1 END) AND (0.2460936172884003)));
SELECT SUM(count) FROM (SELECT ((((((t2.c2) NOT BETWEEN (t2.c1) AND (t0.c0))) NOT BETWEEN (CASE WHEN t2.c1 THEN t2.c6 WHEN t2.c1 THEN x'' WHEN '618890660' THEN t2.c6 ELSE t2.c1 END) AND (0.2460936172884003))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE (((((t2.c2) NOT BETWEEN (t2.c1) AND (t0.c0))) NOT BETWEEN (CASE WHEN t2.c1 THEN t2.c6 WHEN t2.c1 THEN x'' WHEN '618890660' THEN t2.c6 ELSE t2.c1 END) AND (0.2460936172884003)));
SELECT * FROM t0 WHERE (((t0.c0)IS(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)IS(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)IS(t0.c0)) COLLATE RTRIM);
SELECT * FROM t0, vt0 WHERE (((((t0.c0, 0.3527381588070171, t0.c0))<=((vt0.c1, t0.c0, vt0.c1))) IN ())) ORDER BY ((0.44870661206183293) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0, 0.3527381588070171, t0.c0))<=((vt0.c1, t0.c0, vt0.c1))) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((0.44870661206183293) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((t0.c0, 0.3527381588070171, t0.c0))<=((vt0.c1, t0.c0, vt0.c1))) IN ())) ORDER BY ((0.44870661206183293) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0, 0.3527381588070171, t0.c0))<=((vt0.c1, t0.c0, vt0.c1))) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((0.44870661206183293) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((t0.c0, 0.3527381588070171, t0.c0))<=((vt0.c1, t0.c0, vt0.c1))) IN ())) ORDER BY ((0.44870661206183293) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, t2 WHERE (NULL) ORDER BY LOWER((('-229257246')>>(t2.c0))), (((t2.c1)) BETWEEN (((t2.c2 IN ()))) AND ((TYPEOF(DISTINCT t2.c1))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, t2 ORDER BY LOWER((('-229257246')>>(t2.c0))), (((t2.c1)) BETWEEN (((t2.c2 IN ()))) AND ((TYPEOF(DISTINCT t2.c1)))));
SELECT ALL COUNT(*) FROM t0, t2 WHERE (NULL) ORDER BY LOWER((('-229257246')>>(t2.c0))), (((t2.c1)) BETWEEN (((t2.c2 IN ()))) AND ((TYPEOF(DISTINCT t2.c1))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, t2 ORDER BY LOWER((('-229257246')>>(t2.c0))), (((t2.c1)) BETWEEN (((t2.c2 IN ()))) AND ((TYPEOF(DISTINCT t2.c1)))));
SELECT ALL COUNT(*) FROM t0, t2 WHERE (NULL) ORDER BY LOWER((('-229257246')>>(t2.c0))), (((t2.c1)) BETWEEN (((t2.c2 IN ()))) AND ((TYPEOF(DISTINCT t2.c1))));
SELECT ALL COUNT(*) FROM vt0, t0, t2 WHERE (((SQLITE_SOURCE_ID())||(((vt0.c0)OR(t2.c1))))) ORDER BY (~ (((t2.c0) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_SOURCE_ID())||(((vt0.c0)OR(t2.c1))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (~ (((t2.c0) NOT NULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, t2 WHERE (((SQLITE_SOURCE_ID())||(((vt0.c0)OR(t2.c1))))) ORDER BY (~ (((t2.c0) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_SOURCE_ID())||(((vt0.c0)OR(t2.c1))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (~ (((t2.c0) NOT NULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, t2 WHERE (((SQLITE_SOURCE_ID())||(((vt0.c0)OR(t2.c1))))) ORDER BY (~ (((t2.c0) NOT NULL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t2 FULL OUTER JOIN t0 ON (((~ (t2.c0))) BETWEEN (((((((((t2.c2)AND(t2.c1)))OR(t0.c0)))OR(t2.c1)))OR(t0.c0))) AND (NULL)) WHERE ((- (CAST(t2.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t2.c2 AS TEXT)))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON (((~ (t2.c0))) BETWEEN (((((((((t2.c2)AND(t2.c1)))OR(t0.c0)))OR(t2.c1)))OR(t0.c0))) AND (NULL)));
SELECT COUNT(*) FROM t2 FULL OUTER JOIN t0 ON (((~ (t2.c0))) BETWEEN (((((((((t2.c2)AND(t2.c1)))OR(t0.c0)))OR(t2.c1)))OR(t0.c0))) AND (NULL)) WHERE ((- (CAST(t2.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t2.c2 AS TEXT)))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON (((~ (t2.c0))) BETWEEN (((((((((t2.c2)AND(t2.c1)))OR(t0.c0)))OR(t2.c1)))OR(t0.c0))) AND (NULL)));
SELECT COUNT(*) FROM t2 FULL OUTER JOIN t0 ON (((~ (t2.c0))) BETWEEN (((((((((t2.c2)AND(t2.c1)))OR(t0.c0)))OR(t2.c1)))OR(t0.c0))) AND (NULL)) WHERE ((- (CAST(t2.c2 AS TEXT))));
SELECT COUNT(*) FROM t2, vt0 WHERE ((((((((t2.c2)) BETWEEN ((vt0.c1)) AND ((NULL))))OR(0.3386812176200076)))AND(((t2.c1)%(t2.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t2.c2)) BETWEEN ((vt0.c1)) AND ((NULL))))OR(0.3386812176200076)))AND(((t2.c1)%(t2.c1))))) IS TRUE)  as count FROM t2, vt0);
SELECT COUNT(*) FROM t2, vt0 WHERE ((((((((t2.c2)) BETWEEN ((vt0.c1)) AND ((NULL))))OR(0.3386812176200076)))AND(((t2.c1)%(t2.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t2.c2)) BETWEEN ((vt0.c1)) AND ((NULL))))OR(0.3386812176200076)))AND(((t2.c1)%(t2.c1))))) IS TRUE)  as count FROM t2, vt0);
SELECT COUNT(*) FROM t2, vt0 WHERE ((((((((t2.c2)) BETWEEN ((vt0.c1)) AND ((NULL))))OR(0.3386812176200076)))AND(((t2.c1)%(t2.c1)))));
SELECT ALL * FROM t2, vt0 RIGHT OUTER JOIN t0 ON ((((t2.c1)AND(t2.c6 COLLATE BINARY)))AND(((t0.c0)==(t2.c0)))) WHERE ((((t2.c0)) BETWEEN (((((t2.c2))<=((t2.c0))))) AND ((t2.c1)))) ORDER BY CASE WHEN ((t0.c0) IS TRUE) THEN (t0.c0 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t2.c0)) BETWEEN (((((t2.c2))<=((t2.c0))))) AND ((t2.c1)))) IS TRUE)  as count FROM t2, vt0 RIGHT OUTER JOIN t0 ON ((((t2.c1)AND(t2.c6 COLLATE BINARY)))AND(((t0.c0)=(t2.c0)))) ORDER BY CASE WHEN ((t0.c0) IS TRUE) THEN (t0.c0 IN ()) END ASC  NULLS LAST);
SELECT ALL * FROM t2, vt0 RIGHT OUTER JOIN t0 ON ((((t2.c1)AND(t2.c6 COLLATE BINARY)))AND(((t0.c0)==(t2.c0)))) WHERE ((((t2.c0)) BETWEEN (((((t2.c2))<=((t2.c0))))) AND ((t2.c1)))) ORDER BY CASE WHEN ((t0.c0) IS TRUE) THEN (t0.c0 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t2.c0)) BETWEEN (((((t2.c2))<=((t2.c0))))) AND ((t2.c1)))) IS TRUE)  as count FROM t2, vt0 RIGHT OUTER JOIN t0 ON ((((t2.c1)AND(t2.c6 COLLATE BINARY)))AND(((t0.c0)=(t2.c0)))) ORDER BY CASE WHEN ((t0.c0) IS TRUE) THEN (t0.c0 IN ()) END ASC  NULLS LAST);
SELECT ALL * FROM t2, vt0 RIGHT OUTER JOIN t0 ON ((((t2.c1)AND(t2.c6 COLLATE BINARY)))AND(((t0.c0)==(t2.c0)))) WHERE ((((t2.c0)) BETWEEN (((((t2.c2))<=((t2.c0))))) AND ((t2.c1)))) ORDER BY CASE WHEN ((t0.c0) IS TRUE) THEN (t0.c0 IN ()) END ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY SQLITE_SOURCE_ID(), CAST(1.442410189E9 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY SQLITE_SOURCE_ID(), CAST(1.442410189E9 AS TEXT) DESC);
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY SQLITE_SOURCE_ID(), CAST(1.442410189E9 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY SQLITE_SOURCE_ID(), CAST(1.442410189E9 AS TEXT) DESC);
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY SQLITE_SOURCE_ID(), CAST(1.442410189E9 AS TEXT) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN '-1113753179' END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN '-1113753179' END IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN '-1113753179' END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN '-1113753179' END IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN '-1113753179' END IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((+ ((- (vt0.c1))))) ORDER BY ((('-212399684')) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((vt0.c1) NOTNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((('-212399684')) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((vt0.c1) NOTNULL))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((- (vt0.c1))))) ORDER BY ((('-212399684')) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((vt0.c1) NOTNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((('-212399684')) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((vt0.c1) NOTNULL))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((- (vt0.c1))))) ORDER BY ((('-212399684')) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((vt0.c1) NOTNULL))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(x''))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(x''))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(x'')))));
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE (((((vt0.c0)OR(t0.c0)))OR(vt0.c1)) COLLATE NOCASE) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(t0.c0)))OR(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE (((((vt0.c0)OR(t0.c0)))OR(vt0.c1)) COLLATE NOCASE) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(t0.c0)))OR(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE (((((vt0.c0)OR(t0.c0)))OR(vt0.c1)) COLLATE NOCASE) ORDER BY vt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c0 COLLATE NOCASE)) ORDER BY CAST(((vt0.c1) IS FALSE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) IS FALSE) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c0 COLLATE NOCASE)) ORDER BY CAST(((vt0.c1) IS FALSE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) IS FALSE) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c0 COLLATE NOCASE)) ORDER BY CAST(((vt0.c1) IS FALSE) AS INTEGER);
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN t2 ON vt0.c1 WHERE (CAST(json_object(t2.c6, t2.c2, vt0.c0, t0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_object(t2.c6, t2.c2, vt0.c0, t0.c0) AS BLOB)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN t2 ON vt0.c1);
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN t2 ON vt0.c1 WHERE (CAST(json_object(t2.c6, t2.c2, vt0.c0, t0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_object(t2.c6, t2.c2, vt0.c0, t0.c0) AS BLOB)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN t2 ON vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN ())) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS BLOB), ((('-1050278560' IN ()))%((((vt0.c0))>=((vt0.c0))))), (- (((vt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS BLOB), ((('-1050278560' IN ()))%((((vt0.c0))>=((vt0.c0))))), (- (((vt0.c1) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN ())) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS BLOB), ((('-1050278560' IN ()))%((((vt0.c0))>=((vt0.c0))))), (- (((vt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS BLOB), ((('-1050278560' IN ()))%((((vt0.c0))>=((vt0.c0))))), (- (((vt0.c1) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN ())) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS BLOB), ((('-1050278560' IN ()))%((((vt0.c0))>=((vt0.c0))))), (- (((vt0.c1) NOTNULL))) DESC;
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE (((((t2.c2) BETWEEN (t2.c1) AND (t2.c2))) IS TRUE)) ORDER BY (((t2.c2, t2.c1, t2.c1)) BETWEEN ((((vt0.c0)IS NOT(t2.c2)), (((t0.c0)) NOT BETWEEN ((t2.c2)) AND ((t2.c0))), CAST(t0.c0 AS REAL))) AND ((((t2.c1) IS TRUE), (((t2.c6))=(('910999639'))), ((t2.c2)>=(t2.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c2) BETWEEN (t2.c1) AND (t2.c2))) IS TRUE)) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY (((t2.c2, t2.c1, t2.c1)) BETWEEN ((((vt0.c0)IS NOT(t2.c2)), (((t0.c0)) NOT BETWEEN ((t2.c2)) AND ((t2.c0))), CAST(t0.c0 AS REAL))) AND ((((t2.c1) IS TRUE), (((t2.c6))==(('910999639'))), ((t2.c2)>=(t2.c0))))) DESC);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE (((((t2.c2) BETWEEN (t2.c1) AND (t2.c2))) IS TRUE)) ORDER BY (((t2.c2, t2.c1, t2.c1)) BETWEEN ((((vt0.c0)IS NOT(t2.c2)), (((t0.c0)) NOT BETWEEN ((t2.c2)) AND ((t2.c0))), CAST(t0.c0 AS REAL))) AND ((((t2.c1) IS TRUE), (((t2.c6))=(('910999639'))), ((t2.c2)>=(t2.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c2) BETWEEN (t2.c1) AND (t2.c2))) IS TRUE)) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY (((t2.c2, t2.c1, t2.c1)) BETWEEN ((((vt0.c0)IS NOT(t2.c2)), (((t0.c0)) NOT BETWEEN ((t2.c2)) AND ((t2.c0))), CAST(t0.c0 AS REAL))) AND ((((t2.c1) IS TRUE), (((t2.c6))==(('910999639'))), ((t2.c2)>=(t2.c0))))) DESC);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE (((((t2.c2) BETWEEN (t2.c1) AND (t2.c2))) IS TRUE)) ORDER BY (((t2.c2, t2.c1, t2.c1)) BETWEEN ((((vt0.c0)IS NOT(t2.c2)), (((t0.c0)) NOT BETWEEN ((t2.c2)) AND ((t2.c0))), CAST(t0.c0 AS REAL))) AND ((((t2.c1) IS TRUE), (((t2.c6))=(('910999639'))), ((t2.c2)>=(t2.c0))))) DESC;
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 IN (t0.c0))) ISNULL)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE NULL END) BETWEEN ((- (vt0.c0))) AND (((vt0.c0)/(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE NULL END) BETWEEN ((- (vt0.c0))) AND (((vt0.c0)/(vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 IN (t0.c0))) ISNULL)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE NULL END) BETWEEN ((- (vt0.c0))) AND (((vt0.c0)/(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE NULL END) BETWEEN ((- (vt0.c0))) AND (((vt0.c0)/(vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 IN (t0.c0))) ISNULL)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE NULL END) BETWEEN ((- (vt0.c0))) AND (((vt0.c0)/(vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(vt0.c1) COLLATE NOCASE);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (((((((vt0.c0)AND(t2.c2)))AND(t2.c0))) BETWEEN (((0.04888668503835658)%(NULL))) AND (((t0.c0) NOT NULL)))) ORDER BY CASE t2.c2  WHEN NULL THEN 0xffffffff928e2679 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(t2.c2)))AND(t2.c0))) BETWEEN (((0.04888668503835658)%(NULL))) AND (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY CASE t2.c2  WHEN NULL THEN 0Xffffffff928e2679 END  NULLS FIRST);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (((((((vt0.c0)AND(t2.c2)))AND(t2.c0))) BETWEEN (((0.04888668503835658)%(NULL))) AND (((t0.c0) NOT NULL)))) ORDER BY CASE t2.c2  WHEN NULL THEN 0xffffffff928e2679 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(t2.c2)))AND(t2.c0))) BETWEEN (((0.04888668503835658)%(NULL))) AND (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY CASE t2.c2  WHEN NULL THEN 0Xffffffff928e2679 END  NULLS FIRST);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (((((((vt0.c0)AND(t2.c2)))AND(t2.c0))) BETWEEN (((0.04888668503835658)%(NULL))) AND (((t0.c0) NOT NULL)))) ORDER BY CASE t2.c2  WHEN NULL THEN 0xffffffff928e2679 END  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (+ (((t0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c0) NOTNULL))) DESC);
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (+ (((t0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c0) NOTNULL))) DESC);
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (+ (((t0.c0) NOTNULL))) DESC;
SELECT ALL COUNT(*) FROM t0, t2 FULL OUTER JOIN vt0 ON ((TRIM(t2.c1, t2.c1)) BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.9973729311888064)) AND (((((t2.c2)AND(t0.c0)))AND(vt0.c0)))) WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((t0.c0)OR(vt0.c0))) AND (((t2.c6) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((t0.c0)OR(vt0.c0))) AND (((t2.c6) IS TRUE)))) IS TRUE)  as count FROM t0, t2 FULL OUTER JOIN vt0 ON ((TRIM(t2.c1, t2.c1)) BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.9973729311888064)) AND (((((t2.c2)AND(t0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, t2 FULL OUTER JOIN vt0 ON ((TRIM(t2.c1, t2.c1)) BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.9973729311888064)) AND (((((t2.c2)AND(t0.c0)))AND(vt0.c0)))) WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((t0.c0)OR(vt0.c0))) AND (((t2.c6) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((t0.c0)OR(vt0.c0))) AND (((t2.c6) IS TRUE)))) IS TRUE)  as count FROM t0, t2 FULL OUTER JOIN vt0 ON ((TRIM(t2.c1, t2.c1)) BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.9973729311888064)) AND (((((t2.c2)AND(t0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, t2 FULL OUTER JOIN vt0 ON ((TRIM(t2.c1, t2.c1)) BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.9973729311888064)) AND (((((t2.c2)AND(t0.c0)))AND(vt0.c0)))) WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((t0.c0)OR(vt0.c0))) AND (((t2.c6) IS TRUE))));
SELECT * FROM t2 WHERE (t2.c2) ORDER BY (((t2.c2)OR(t2.c2)) IN ((t2.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t2.c2) IS TRUE)  as count FROM t2 ORDER BY (((t2.c2)OR(t2.c2)) IN ((t2.c0 IN ()))) DESC);
SELECT * FROM t2 WHERE (t2.c2) ORDER BY (((t2.c2)OR(t2.c2)) IN ((t2.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t2.c2) IS TRUE)  as count FROM t2 ORDER BY (((t2.c2)OR(t2.c2)) IN ((t2.c0 IN ()))) DESC);
SELECT * FROM t2 WHERE (t2.c2) ORDER BY (((t2.c2)OR(t2.c2)) IN ((t2.c0 IN ()))) DESC;
SELECT ALL COUNT(*) FROM t2, vt0, t0 WHERE ((t2.c2 COLLATE BINARY IN ())) ORDER BY LOWER((t2.c2 IN (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((t2.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY LOWER((t2.c2 IN (vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM t2, vt0, t0 WHERE ((t2.c2 COLLATE BINARY IN ())) ORDER BY LOWER((t2.c2 IN (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((t2.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM t2, vt0, t0 ORDER BY LOWER((t2.c2 IN (vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM t2, vt0, t0 WHERE ((t2.c2 COLLATE BINARY IN ())) ORDER BY LOWER((t2.c2 IN (vt0.c0))) ASC;
SELECT COUNT(*) FROM t2, t0 INNER JOIN vt0 ON (NOT (((t2.c1)<=(t0.c0)))) WHERE ((((t2.c6)/(t2.c0)) IN (((t2.c2) NOT BETWEEN (t0.c0) AND (t2.c2))))) ORDER BY ((((t2.c1) NOT BETWEEN (t2.c1) AND (t2.c6))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((t2.c6)/(t2.c0)) IN (((t2.c2) NOT BETWEEN (t0.c0) AND (t2.c2))))) IS TRUE)  as count FROM t2, t0 INNER JOIN vt0 ON (NOT (((t2.c1)<=(t0.c0)))) ORDER BY ((((t2.c1) NOT BETWEEN (t2.c1) AND (t2.c6))) NOT NULL));
SELECT COUNT(*) FROM t2, t0 INNER JOIN vt0 ON (NOT (((t2.c1)<=(t0.c0)))) WHERE ((((t2.c6)/(t2.c0)) IN (((t2.c2) NOT BETWEEN (t0.c0) AND (t2.c2))))) ORDER BY ((((t2.c1) NOT BETWEEN (t2.c1) AND (t2.c6))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((t2.c6)/(t2.c0)) IN (((t2.c2) NOT BETWEEN (t0.c0) AND (t2.c2))))) IS TRUE)  as count FROM t2, t0 INNER JOIN vt0 ON (NOT (((t2.c1)<=(t0.c0)))) ORDER BY ((((t2.c1) NOT BETWEEN (t2.c1) AND (t2.c6))) NOT NULL));
SELECT COUNT(*) FROM t2, t0 INNER JOIN vt0 ON (NOT (((t2.c1)<=(t0.c0)))) WHERE ((((t2.c6)/(t2.c0)) IN (((t2.c2) NOT BETWEEN (t0.c0) AND (t2.c2))))) ORDER BY ((((t2.c1) NOT BETWEEN (t2.c1) AND (t2.c6))) NOT NULL);
SELECT ALL * FROM t2, t0, vt0 WHERE ((((t2.c2) NOT BETWEEN (t2.c0) AND (vt0.c0)) IN ())) ORDER BY ((CAST(t2.c0 AS NUMERIC)) BETWEEN (((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c1))) AND (((t0.c0)AND(x'')))) DESC  NULLS LAST, (NOT (((t2.c2)!=(t2.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2) NOT BETWEEN (t2.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY ((CAST(t2.c0 AS NUMERIC)) BETWEEN (((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c1))) AND (((t0.c0)AND(x'')))) DESC  NULLS LAST, (NOT (((t2.c2)<>(t2.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t2, t0, vt0 WHERE ((((t2.c2) NOT BETWEEN (t2.c0) AND (vt0.c0)) IN ())) ORDER BY ((CAST(t2.c0 AS NUMERIC)) BETWEEN (((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c1))) AND (((t0.c0)AND(x'')))) DESC  NULLS LAST, (NOT (((t2.c2)!=(t2.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2) NOT BETWEEN (t2.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY ((CAST(t2.c0 AS NUMERIC)) BETWEEN (((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c1))) AND (((t0.c0)AND(x'')))) DESC  NULLS LAST, (NOT (((t2.c2)<>(t2.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t2, t0, vt0 WHERE ((((t2.c2) NOT BETWEEN (t2.c0) AND (vt0.c0)) IN ())) ORDER BY ((CAST(t2.c0 AS NUMERIC)) BETWEEN (((t2.c0) NOT BETWEEN (vt0.c0) AND (t2.c1))) AND (((t0.c0)AND(x'')))) DESC  NULLS LAST, (NOT (((t2.c2)!=(t2.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, t2 WHERE (((((((((((((t0.c0)AND(t0.c0)))AND(t2.c2)))AND((((('')AND(t2.c2)))OR(t0.c0)))))OR(((t2.c1)&(t2.c0)))))OR((t0.c0 IN (t2.c2)))))AND(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c0)AND(t0.c0)))AND(t2.c2)))AND((((('')AND(t2.c2)))OR(t0.c0)))))OR(((t2.c1)&(t2.c0)))))OR((t0.c0 IN (t2.c2)))))AND(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM t0, t2);
SELECT ALL * FROM t0, t2 WHERE (((((((((((((t0.c0)AND(t0.c0)))AND(t2.c2)))AND((((('')AND(t2.c2)))OR(t0.c0)))))OR(((t2.c1)&(t2.c0)))))OR((t0.c0 IN (t2.c2)))))AND(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c0)AND(t0.c0)))AND(t2.c2)))AND((((('')AND(t2.c2)))OR(t0.c0)))))OR(((t2.c1)&(t2.c0)))))OR((t0.c0 IN (t2.c2)))))AND(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM t0, t2);
SELECT ALL * FROM t0, t2 WHERE (((((((((((((t0.c0)AND(t0.c0)))AND(t2.c2)))AND((((('')AND(t2.c2)))OR(t0.c0)))))OR(((t2.c1)&(t2.c0)))))OR((t0.c0 IN (t2.c2)))))AND(CAST(NULL AS NUMERIC))));
SELECT * FROM t0, t2, vt0 WHERE ((((vt0.c0, vt0.c0, t2.c1, 'g?a੯a', ',QRD')) NOT BETWEEN ((((t2.c1) ISNULL), LAST_INSERT_ROWID(), (t2.c1 IN (vt0.c0)), (~ (t2.c1)), t0.c0 COLLATE BINARY)) AND ((CAST(t2.c1 AS TEXT), ((t2.c1)IS NOT(t2.c0)), CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 WHEN t2.c1 THEN t2.c6 WHEN vt0.c0 THEN t2.c1 END, ((t2.c2) IS FALSE), LIKE(vt0.c0, 0.9969349215683495, '-')))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, t2.c1, 'g?a੯a', ',QRD')) NOT BETWEEN ((((t2.c1) ISNULL), LAST_INSERT_ROWID(), (t2.c1 IN (vt0.c0)), (~ (t2.c1)), t0.c0 COLLATE BINARY)) AND ((CAST(t2.c1 AS TEXT), ((t2.c1)IS NOT(t2.c0)), CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 WHEN t2.c1 THEN t2.c6 WHEN vt0.c0 THEN t2.c1 END, ((t2.c2) IS FALSE), LIKE(vt0.c0, 0.9969349215683495, '-'))))) IS TRUE)  as count FROM t0, t2, vt0);
SELECT * FROM t0, t2, vt0 WHERE ((((vt0.c0, vt0.c0, t2.c1, 'g?a੯a', ',QRD')) NOT BETWEEN ((((t2.c1) ISNULL), LAST_INSERT_ROWID(), (t2.c1 IN (vt0.c0)), (~ (t2.c1)), t0.c0 COLLATE BINARY)) AND ((CAST(t2.c1 AS TEXT), ((t2.c1)IS NOT(t2.c0)), CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 WHEN t2.c1 THEN t2.c6 WHEN vt0.c0 THEN t2.c1 END, ((t2.c2) IS FALSE), LIKE(vt0.c0, 0.9969349215683495, '-')))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, t2.c1, 'g?a੯a', ',QRD')) NOT BETWEEN ((((t2.c1) ISNULL), LAST_INSERT_ROWID(), (t2.c1 IN (vt0.c0)), (~ (t2.c1)), t0.c0 COLLATE BINARY)) AND ((CAST(t2.c1 AS TEXT), ((t2.c1)IS NOT(t2.c0)), CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 WHEN t2.c1 THEN t2.c6 WHEN vt0.c0 THEN t2.c1 END, ((t2.c2) IS FALSE), LIKE(vt0.c0, 0.9969349215683495, '-'))))) IS TRUE)  as count FROM t0, t2, vt0);
SELECT * FROM t0, t2, vt0 WHERE ((((vt0.c0, vt0.c0, t2.c1, 'g?a੯a', ',QRD')) NOT BETWEEN ((((t2.c1) ISNULL), LAST_INSERT_ROWID(), (t2.c1 IN (vt0.c0)), (~ (t2.c1)), t0.c0 COLLATE BINARY)) AND ((CAST(t2.c1 AS TEXT), ((t2.c1)IS NOT(t2.c0)), CASE vt0.c0  WHEN t2.c0 THEN vt0.c0 WHEN t2.c1 THEN t2.c6 WHEN vt0.c0 THEN t2.c1 END, ((t2.c2) IS FALSE), LIKE(vt0.c0, 0.9969349215683495, '-')))));
SELECT * FROM t0, vt0, t2 WHERE (t2.c6) ORDER BY (((((t2.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))LIKE(json_object(vt0.c1, vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t2.c6) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY (((((t2.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))LIKE(json_object(vt0.c1, vt0.c1))) ASC  NULLS LAST);
SELECT * FROM t0, vt0, t2 WHERE (t2.c6) ORDER BY (((((t2.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))LIKE(json_object(vt0.c1, vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t2.c6) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY (((((t2.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))LIKE(json_object(vt0.c1, vt0.c1))) ASC  NULLS LAST);
SELECT * FROM t0, vt0, t2 WHERE (t2.c6) ORDER BY (((((t2.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))LIKE(json_object(vt0.c1, vt0.c1))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((('x''0vH+r/')) BETWEEN ((((t0.c0)IS NOT(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) ORDER BY ((((t0.c0)<>(t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((('x''0vH+r/')) BETWEEN ((((t0.c0)IS NOT(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)!=(t0.c0))) IS FALSE));
SELECT * FROM t0 WHERE (((('x''0vH+r/')) BETWEEN ((((t0.c0)IS NOT(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) ORDER BY ((((t0.c0)<>(t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((('x''0vH+r/')) BETWEEN ((((t0.c0)IS NOT(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)!=(t0.c0))) IS FALSE));
SELECT * FROM t0 WHERE (((('x''0vH+r/')) BETWEEN ((((t0.c0)IS NOT(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) ORDER BY ((((t0.c0)<>(t0.c0))) IS FALSE);
SELECT * FROM t2 WHERE ((t2.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(CASE WHEN t2.c0 THEN t2.c0 ELSE '-1484626237' END AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((t2.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM t2 NOT INDEXED ORDER BY CAST(CASE WHEN t2.c0 THEN t2.c0 ELSE '-1484626237' END AS TEXT) ASC);
SELECT * FROM t2 WHERE ((t2.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(CASE WHEN t2.c0 THEN t2.c0 ELSE '-1484626237' END AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((t2.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM t2 NOT INDEXED ORDER BY CAST(CASE WHEN t2.c0 THEN t2.c0 ELSE '-1484626237' END AS TEXT) ASC);
SELECT * FROM t2 WHERE ((t2.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(CASE WHEN t2.c0 THEN t2.c0 ELSE '-1484626237' END AS TEXT) ASC;
SELECT * FROM t2, t0, vt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t2.c1 THEN t2.c2 WHEN vt0.c1 THEN t2.c6 END THEN t2.c1 WHEN ((vt0.c1)GLOB(NULL)) THEN 6.2764492E8 WHEN (NOT (t2.c2)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN NULL THEN (NOT (t2.c0)) WHEN ((t2.c1) IS FALSE) THEN CASE WHEN 0.7038111013685666 THEN t2.c0 WHEN t2.c6 THEN t2.c1 WHEN t2.c1 THEN t2.c2 ELSE vt0.c0 END WHEN (((t0.c0))<((x''))) THEN t2.c0 COLLATE NOCASE WHEN (t2.c2 IN (t2.c0)) THEN vt0.c0 END) ORDER BY ((CASE t0.c0  WHEN vt0.c0 THEN '?rN' END)*(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t2.c1 THEN t2.c2 WHEN vt0.c1 THEN t2.c6 END THEN t2.c1 WHEN ((vt0.c1)GLOB(NULL)) THEN 6.2764492E8 WHEN (NOT (t2.c2)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN NULL THEN (NOT (t2.c0)) WHEN ((t2.c1) IS FALSE) THEN CASE WHEN 0.7038111013685666 THEN t2.c0 WHEN t2.c6 THEN t2.c1 WHEN t2.c1 THEN t2.c2 ELSE vt0.c0 END WHEN (((t0.c0))<((x''))) THEN t2.c0 COLLATE NOCASE WHEN (t2.c2 IN (t2.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY ((CASE t0.c0  WHEN vt0.c0 THEN '?rN' END)*(t0.c0))  NULLS LAST);
SELECT * FROM t2, t0, vt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t2.c1 THEN t2.c2 WHEN vt0.c1 THEN t2.c6 END THEN t2.c1 WHEN ((vt0.c1)GLOB(NULL)) THEN 6.2764492E8 WHEN (NOT (t2.c2)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN NULL THEN (NOT (t2.c0)) WHEN ((t2.c1) IS FALSE) THEN CASE WHEN 0.7038111013685666 THEN t2.c0 WHEN t2.c6 THEN t2.c1 WHEN t2.c1 THEN t2.c2 ELSE vt0.c0 END WHEN (((t0.c0))<((x''))) THEN t2.c0 COLLATE NOCASE WHEN (t2.c2 IN (t2.c0)) THEN vt0.c0 END) ORDER BY ((CASE t0.c0  WHEN vt0.c0 THEN '?rN' END)*(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t2.c1 THEN t2.c2 WHEN vt0.c1 THEN t2.c6 END THEN t2.c1 WHEN ((vt0.c1)GLOB(NULL)) THEN 6.2764492E8 WHEN (NOT (t2.c2)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN NULL THEN (NOT (t2.c0)) WHEN ((t2.c1) IS FALSE) THEN CASE WHEN 0.7038111013685666 THEN t2.c0 WHEN t2.c6 THEN t2.c1 WHEN t2.c1 THEN t2.c2 ELSE vt0.c0 END WHEN (((t0.c0))<((x''))) THEN t2.c0 COLLATE NOCASE WHEN (t2.c2 IN (t2.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY ((CASE t0.c0  WHEN vt0.c0 THEN '?rN' END)*(t0.c0))  NULLS LAST);
SELECT * FROM t2, t0, vt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN t2.c1 THEN t2.c2 WHEN vt0.c1 THEN t2.c6 END THEN t2.c1 WHEN ((vt0.c1)GLOB(NULL)) THEN 6.2764492E8 WHEN (NOT (t2.c2)) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN NULL THEN (NOT (t2.c0)) WHEN ((t2.c1) IS FALSE) THEN CASE WHEN 0.7038111013685666 THEN t2.c0 WHEN t2.c6 THEN t2.c1 WHEN t2.c1 THEN t2.c2 ELSE vt0.c0 END WHEN (((t0.c0))<((x''))) THEN t2.c0 COLLATE NOCASE WHEN (t2.c2 IN (t2.c0)) THEN vt0.c0 END) ORDER BY ((CASE t0.c0  WHEN vt0.c0 THEN '?rN' END)*(t0.c0))  NULLS LAST;
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON CASE WHEN x'' THEN (((t2.c1, t2.c6, t2.c6))<>((t2.c2, t2.c6, t2.c2))) ELSE ((t2.c6)OR(NULL)) END WHERE (CAST(((t2.c2)GLOB(0.8117624649159518)) AS BLOB)) ORDER BY ((SQLITE_COMPILEOPTION_USED(t2.c1))-(((t2.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t2.c2)GLOB(0.8117624649159518)) AS BLOB)) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON CASE WHEN x'' THEN (((t2.c1, t2.c6, t2.c6))<>((t2.c2, t2.c6, t2.c2))) ELSE ((t2.c6)OR(NULL)) END ORDER BY ((SQLITE_COMPILEOPTION_USED(t2.c1))-(((t2.c1) NOT NULL))));
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON CASE WHEN x'' THEN (((t2.c1, t2.c6, t2.c6))<>((t2.c2, t2.c6, t2.c2))) ELSE ((t2.c6)OR(NULL)) END WHERE (CAST(((t2.c2)GLOB(0.8117624649159518)) AS BLOB)) ORDER BY ((SQLITE_COMPILEOPTION_USED(t2.c1))-(((t2.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t2.c2)GLOB(0.8117624649159518)) AS BLOB)) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON CASE WHEN x'' THEN (((t2.c1, t2.c6, t2.c6))<>((t2.c2, t2.c6, t2.c2))) ELSE ((t2.c6)OR(NULL)) END ORDER BY ((SQLITE_COMPILEOPTION_USED(t2.c1))-(((t2.c1) NOT NULL))));
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON CASE WHEN x'' THEN (((t2.c1, t2.c6, t2.c6))<>((t2.c2, t2.c6, t2.c2))) ELSE ((t2.c6)OR(NULL)) END WHERE (CAST(((t2.c2)GLOB(0.8117624649159518)) AS BLOB)) ORDER BY ((SQLITE_COMPILEOPTION_USED(t2.c1))-(((t2.c1) NOT NULL)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS BLOB))+(ABS(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))+(ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS BLOB))+(ABS(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))+(ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS BLOB))+(ABS(DISTINCT vt0.c0))));
SELECT COUNT(*) FROM t2, vt0, t0 WHERE ((NOT (((t2.c2)/(t2.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t2.c2)/(t2.c0))))) IS TRUE)  as count FROM t2, vt0, t0);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE ((NOT (((t2.c2)/(t2.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t2.c2)/(t2.c0))))) IS TRUE)  as count FROM t2, vt0, t0);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE ((NOT (((t2.c2)/(t2.c0)))));
SELECT COUNT(*) FROM t2 WHERE ((NULL IN ())) ORDER BY t2.c6 DESC;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM t2 ORDER BY t2.c6 DESC);
SELECT COUNT(*) FROM t2 WHERE ((NULL IN ())) ORDER BY t2.c6 DESC;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM t2 ORDER BY t2.c6 DESC);
SELECT COUNT(*) FROM t2 WHERE ((NULL IN ())) ORDER BY t2.c6 DESC;
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE ((((TYPEOF(vt0.c0)))<((((x'')IS(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((TYPEOF(vt0.c0)))<((((x'')IS(t0.c0)))))) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE ((((TYPEOF(vt0.c0)))<((((x'')IS(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((TYPEOF(vt0.c0)))<((((x'')IS(t0.c0)))))) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL COUNT(*) FROM t2, t0, vt0 WHERE ((((TYPEOF(vt0.c0)))<((((x'')IS(t0.c0))))));
SELECT ALL * FROM t0 LEFT OUTER JOIN t2 ON ((((((((t2.c1)AND(t2.c6)))OR(t2.c1)))AND((+ (t2.c6)))))OR((((t2.c1))>=((t2.c6))))) WHERE ((((t2.c6) NOT BETWEEN (t2.c1) AND (t2.c1)) IN ())) ORDER BY ((((((((t2.c1)AND((t2.c2 IN (t2.c0)))))AND(NULLIF(t0.c0, t2.c0))))AND(((t2.c6) BETWEEN (t2.c6) AND (t2.c2)))))OR(((((((((t0.c0)AND(t2.c6)))OR(t2.c0)))OR(t2.c1)))AND(t2.c1))))  NULLS FIRST, ((((t2.c1) ISNULL))>>(((t2.c1)&(t0.c0)))), ((((t2.c2)IS NOT(t2.c2)))<=((t0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c6) NOT BETWEEN (t2.c1) AND (t2.c1)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON ((((((((t2.c1)AND(t2.c6)))OR(t2.c1)))AND((+ (t2.c6)))))OR((((t2.c1))>=((t2.c6))))) ORDER BY ((((((((t2.c1)AND((t2.c2 IN (t2.c0)))))AND(NULLIF(t0.c0, t2.c0))))AND(((t2.c6) BETWEEN (t2.c6) AND (t2.c2)))))OR(((((((((t0.c0)AND(t2.c6)))OR(t2.c0)))OR(t2.c1)))AND(t2.c1))))  NULLS FIRST, ((((t2.c1) ISNULL))>>(((t2.c1)&(t0.c0)))), ((((t2.c2)IS NOT(t2.c2)))<=((t0.c0 IN ()))) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN t2 ON ((((((((t2.c1)AND(t2.c6)))OR(t2.c1)))AND((+ (t2.c6)))))OR((((t2.c1))>=((t2.c6))))) WHERE ((((t2.c6) NOT BETWEEN (t2.c1) AND (t2.c1)) IN ())) ORDER BY ((((((((t2.c1)AND((t2.c2 IN (t2.c0)))))AND(NULLIF(t0.c0, t2.c0))))AND(((t2.c6) BETWEEN (t2.c6) AND (t2.c2)))))OR(((((((((t0.c0)AND(t2.c6)))OR(t2.c0)))OR(t2.c1)))AND(t2.c1))))  NULLS FIRST, ((((t2.c1) ISNULL))>>(((t2.c1)&(t0.c0)))), ((((t2.c2)IS NOT(t2.c2)))<=((t0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c6) NOT BETWEEN (t2.c1) AND (t2.c1)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON ((((((((t2.c1)AND(t2.c6)))OR(t2.c1)))AND((+ (t2.c6)))))OR((((t2.c1))>=((t2.c6))))) ORDER BY ((((((((t2.c1)AND((t2.c2 IN (t2.c0)))))AND(NULLIF(t0.c0, t2.c0))))AND(((t2.c6) BETWEEN (t2.c6) AND (t2.c2)))))OR(((((((((t0.c0)AND(t2.c6)))OR(t2.c0)))OR(t2.c1)))AND(t2.c1))))  NULLS FIRST, ((((t2.c1) ISNULL))>>(((t2.c1)&(t0.c0)))), ((((t2.c2)IS NOT(t2.c2)))<=((t0.c0 IN ()))) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN t2 ON ((((((((t2.c1)AND(t2.c6)))OR(t2.c1)))AND((+ (t2.c6)))))OR((((t2.c1))>=((t2.c6))))) WHERE ((((t2.c6) NOT BETWEEN (t2.c1) AND (t2.c1)) IN ())) ORDER BY ((((((((t2.c1)AND((t2.c2 IN (t2.c0)))))AND(NULLIF(t0.c0, t2.c0))))AND(((t2.c6) BETWEEN (t2.c6) AND (t2.c2)))))OR(((((((((t0.c0)AND(t2.c6)))OR(t2.c0)))OR(t2.c1)))AND(t2.c1))))  NULLS FIRST, ((((t2.c1) ISNULL))>>(((t2.c1)&(t0.c0)))), ((((t2.c2)IS NOT(t2.c2)))<=((t0.c0 IN ()))) DESC;
SELECT COUNT(*) FROM vt0, t2, t0 WHERE ((~ (((t0.c0)IS NOT(vt0.c0))))) ORDER BY ((((CAST(t2.c1 AS TEXT))AND(GLOB(t2.c6, t0.c0))))OR((((t2.c1, t0.c0, t2.c6))<=((t2.c6, t2.c0, vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY ((((CAST(t2.c1 AS TEXT))AND(GLOB(t2.c6, t0.c0))))OR((((t2.c1, t0.c0, t2.c6))<=((t2.c6, t2.c0, vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE ((~ (((t0.c0)IS NOT(vt0.c0))))) ORDER BY ((((CAST(t2.c1 AS TEXT))AND(GLOB(t2.c6, t0.c0))))OR((((t2.c1, t0.c0, t2.c6))<=((t2.c6, t2.c0, vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY ((((CAST(t2.c1 AS TEXT))AND(GLOB(t2.c6, t0.c0))))OR((((t2.c1, t0.c0, t2.c6))<=((t2.c6, t2.c0, vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE ((~ (((t0.c0)IS NOT(vt0.c0))))) ORDER BY ((((CAST(t2.c1 AS TEXT))AND(GLOB(t2.c6, t0.c0))))OR((((t2.c1, t0.c0, t2.c6))<=((t2.c6, t2.c0, vt0.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM t2, t0 CROSS JOIN vt0 ON ((((vt0.c1) BETWEEN (t2.c1) AND (vt0.c0))) IS TRUE) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t2, t0 CROSS JOIN vt0 ON ((((vt0.c1) BETWEEN (t2.c1) AND (vt0.c0))) IS TRUE));
SELECT ALL * FROM t2, t0 CROSS JOIN vt0 ON ((((vt0.c1) BETWEEN (t2.c1) AND (vt0.c0))) IS TRUE) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t2, t0 CROSS JOIN vt0 ON ((((vt0.c1) BETWEEN (t2.c1) AND (vt0.c0))) IS TRUE));
SELECT ALL * FROM t2, t0 CROSS JOIN vt0 ON ((((vt0.c1) BETWEEN (t2.c1) AND (vt0.c0))) IS TRUE) WHERE (vt0.c1);
SELECT ALL * FROM t0 FULL OUTER JOIN t2 ON LIKELIHOOD(DISTINCT ((t2.c1)+(t2.c6)), 0.4635128137007656) WHERE (CASE CAST(t2.c2 AS BLOB)  WHEN ((((t2.c2)AND(0.626192557954295)))AND(t2.c0)) THEN 0.14256832205741155 WHEN ((((t2.c2)OR(t0.c0)))AND(t2.c0)) THEN t2.c6 COLLATE BINARY WHEN ((((((((t2.c6)OR(t0.c0)))AND(t2.c1)))AND(t2.c2)))OR(t2.c0)) THEN t2.c2 COLLATE NOCASE ELSE ((NULL)OR(t0.c0)) END) ORDER BY ((t2.c0)+((((t2.c1))==((t2.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t2.c2 AS BLOB)  WHEN ((((t2.c2)AND(0.626192557954295)))AND(t2.c0)) THEN 0.14256832205741155 WHEN ((((t2.c2)OR(t0.c0)))AND(t2.c0)) THEN t2.c6 COLLATE BINARY WHEN ((((((((t2.c6)OR(t0.c0)))AND(t2.c1)))AND(t2.c2)))OR(t2.c0)) THEN t2.c2 COLLATE NOCASE ELSE ((NULL)OR(t0.c0)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON LIKELIHOOD(DISTINCT ((t2.c1)+(t2.c6)), 0.4635128137007656) ORDER BY ((t2.c0)+((((t2.c1))==((t2.c2)))))  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN t2 ON LIKELIHOOD(DISTINCT ((t2.c1)+(t2.c6)), 0.4635128137007656) WHERE (CASE CAST(t2.c2 AS BLOB)  WHEN ((((t2.c2)AND(0.626192557954295)))AND(t2.c0)) THEN 0.14256832205741155 WHEN ((((t2.c2)OR(t0.c0)))AND(t2.c0)) THEN t2.c6 COLLATE BINARY WHEN ((((((((t2.c6)OR(t0.c0)))AND(t2.c1)))AND(t2.c2)))OR(t2.c0)) THEN t2.c2 COLLATE NOCASE ELSE ((NULL)OR(t0.c0)) END) ORDER BY ((t2.c0)+((((t2.c1))==((t2.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t2.c2 AS BLOB)  WHEN ((((t2.c2)AND(0.626192557954295)))AND(t2.c0)) THEN 0.14256832205741155 WHEN ((((t2.c2)OR(t0.c0)))AND(t2.c0)) THEN t2.c6 COLLATE BINARY WHEN ((((((((t2.c6)OR(t0.c0)))AND(t2.c1)))AND(t2.c2)))OR(t2.c0)) THEN t2.c2 COLLATE NOCASE ELSE ((NULL)OR(t0.c0)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON LIKELIHOOD(DISTINCT ((t2.c1)+(t2.c6)), 0.4635128137007656) ORDER BY ((t2.c0)+((((t2.c1))==((t2.c2)))))  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN t2 ON LIKELIHOOD(DISTINCT ((t2.c1)+(t2.c6)), 0.4635128137007656) WHERE (CASE CAST(t2.c2 AS BLOB)  WHEN ((((t2.c2)AND(0.626192557954295)))AND(t2.c0)) THEN 0.14256832205741155 WHEN ((((t2.c2)OR(t0.c0)))AND(t2.c0)) THEN t2.c6 COLLATE BINARY WHEN ((((((((t2.c6)OR(t0.c0)))AND(t2.c1)))AND(t2.c2)))OR(t2.c0)) THEN t2.c2 COLLATE NOCASE ELSE ((NULL)OR(t0.c0)) END) ORDER BY ((t2.c0)+((((t2.c1))==((t2.c2)))))  NULLS FIRST;
SELECT * FROM t0, t2 WHERE (t2.c6) ORDER BY t2.c0 DESC;
SELECT SUM(count) FROM (SELECT ((t2.c6) IS TRUE)  as count FROM t0, t2 ORDER BY t2.c0 DESC);
SELECT * FROM t0, t2 WHERE (t2.c6) ORDER BY t2.c0 DESC;
SELECT SUM(count) FROM (SELECT ((t2.c6) IS TRUE)  as count FROM t0, t2 ORDER BY t2.c0 DESC);
SELECT * FROM t0, t2 WHERE (t2.c6) ORDER BY t2.c0 DESC;
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (CASE (NOT (vt0.c1))  WHEN ((vt0.c1)<<(t2.c0)) THEN ((t2.c2) BETWEEN (vt0.c1) AND (0.9003979095355295)) END) ORDER BY (- (((vt0.c0)LIKE(0Xffffffff808dd296))));
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c1))  WHEN ((vt0.c1)<<(t2.c0)) THEN ((t2.c2) BETWEEN (vt0.c1) AND (0.9003979095355295)) END) IS TRUE)  as count FROM t2, vt0 ORDER BY (- (((vt0.c0)LIKE(0xffffffff808dd296)))));
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (CASE (NOT (vt0.c1))  WHEN ((vt0.c1)<<(t2.c0)) THEN ((t2.c2) BETWEEN (vt0.c1) AND (0.9003979095355295)) END) ORDER BY (- (((vt0.c0)LIKE(0Xffffffff808dd296))));
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c1))  WHEN ((vt0.c1)<<(t2.c0)) THEN ((t2.c2) BETWEEN (vt0.c1) AND (0.9003979095355295)) END) IS TRUE)  as count FROM t2, vt0 ORDER BY (- (((vt0.c0)LIKE(0xffffffff808dd296)))));
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (CASE (NOT (vt0.c1))  WHEN ((vt0.c1)<<(t2.c0)) THEN ((t2.c2) BETWEEN (vt0.c1) AND (0.9003979095355295)) END) ORDER BY (- (((vt0.c0)LIKE(0Xffffffff808dd296))));
SELECT * FROM vt0, t0 WHERE (((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)<>(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)!=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)<>(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)!=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)<>(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (((vt0.c0) NOT BETWEEN ((~ (vt0.c0))) AND (((t2.c6) BETWEEN (vt0.c0) AND (t2.c6)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((~ (vt0.c0))) AND (((t2.c6) BETWEEN (vt0.c0) AND (t2.c6))))) IS TRUE)  as count FROM t2, vt0, t0);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (((vt0.c0) NOT BETWEEN ((~ (vt0.c0))) AND (((t2.c6) BETWEEN (vt0.c0) AND (t2.c6)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((~ (vt0.c0))) AND (((t2.c6) BETWEEN (vt0.c0) AND (t2.c6))))) IS TRUE)  as count FROM t2, vt0, t0);
SELECT COUNT(*) FROM t2, vt0, t0 WHERE (((vt0.c0) NOT BETWEEN ((~ (vt0.c0))) AND (((t2.c6) BETWEEN (vt0.c0) AND (t2.c6)))));
SELECT COUNT(*) FROM t0, vt0, t2 WHERE ((((vt0.c0 IN (0xffffffff8db9ed78)))>=(((vt0.c0)IS NOT(t0.c0))))) ORDER BY CAST(((vt0.c1)*(vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (0xffffffff8db9ed78)))>=(((vt0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY CAST(((vt0.c1)*(vt0.c0)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE ((((vt0.c0 IN (0xffffffff8db9ed78)))>=(((vt0.c0)IS NOT(t0.c0))))) ORDER BY CAST(((vt0.c1)*(vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (0xffffffff8db9ed78)))>=(((vt0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY CAST(((vt0.c1)*(vt0.c0)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE ((((vt0.c0 IN (0xffffffff8db9ed78)))>=(((vt0.c0)IS NOT(t0.c0))))) ORDER BY CAST(((vt0.c1)*(vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT * FROM vt0, t2, t0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN LENGTH(NULL) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c1) NOTNULL) END) ORDER BY ((IFNULL(vt0.c1, vt0.c1))<=((((t2.c0, vt0.c0, vt0.c1)) BETWEEN ((t0.c0, t2.c2, x'')) AND ((t2.c2, t0.c0, t2.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE BINARY  WHEN LENGTH(NULL) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY ((IFNULL(vt0.c1, vt0.c1))<=((((t2.c0, vt0.c0, vt0.c1)) BETWEEN ((t0.c0, t2.c2, x'')) AND ((t2.c2, t0.c0, t2.c1))))) ASC);
SELECT * FROM vt0, t2, t0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN LENGTH(NULL) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c1) NOTNULL) END) ORDER BY ((IFNULL(vt0.c1, vt0.c1))<=((((t2.c0, vt0.c0, vt0.c1)) BETWEEN ((t0.c0, t2.c2, x'')) AND ((t2.c2, t0.c0, t2.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE BINARY  WHEN LENGTH(NULL) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM vt0, t2, t0 ORDER BY ((IFNULL(vt0.c1, vt0.c1))<=((((t2.c0, vt0.c0, vt0.c1)) BETWEEN ((t0.c0, t2.c2, x'')) AND ((t2.c2, t0.c0, t2.c1))))) ASC);
SELECT * FROM vt0, t2, t0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN LENGTH(NULL) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c1) NOTNULL) END) ORDER BY ((IFNULL(vt0.c1, vt0.c1))<=((((t2.c0, vt0.c0, vt0.c1)) BETWEEN ((t0.c0, t2.c2, x'')) AND ((t2.c2, t0.c0, t2.c1))))) ASC;
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c0) IS FALSE))GLOB(t2.c2 COLLATE NOCASE))) ORDER BY LOWER((((t2.c1))>((t2.c2)))), (((-5.50638309E8, t2.c6, t2.c1)) BETWEEN ((IFNULL(t2.c1, t2.c6), CAST(t2.c2 AS REAL), t2.c1)) AND ((CASE t2.c2  WHEN t2.c2 THEN t2.c1 ELSE t2.c6 END, ((((((((t2.c6)AND(t2.c1)))AND(t2.c6)))OR(t2.c2)))OR(t2.c0)), ((t2.c6) BETWEEN (t2.c0) AND (t2.c1)))))  NULLS LAST, CAST(((t2.c0) IS TRUE) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) IS FALSE))GLOB(t2.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t2 ORDER BY LOWER((((t2.c1))>((t2.c2)))), (((-5.50638309E8, t2.c6, t2.c1)) BETWEEN ((IFNULL(t2.c1, t2.c6), CAST(t2.c2 AS REAL), t2.c1)) AND ((CASE t2.c2  WHEN t2.c2 THEN t2.c1 ELSE t2.c6 END, ((((((((t2.c6)AND(t2.c1)))AND(t2.c6)))OR(t2.c2)))OR(t2.c0)), ((t2.c6) BETWEEN (t2.c0) AND (t2.c1)))))  NULLS LAST, CAST(((t2.c0) IS TRUE) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c0) IS FALSE))GLOB(t2.c2 COLLATE NOCASE))) ORDER BY LOWER((((t2.c1))>((t2.c2)))), (((-5.50638309E8, t2.c6, t2.c1)) BETWEEN ((IFNULL(t2.c1, t2.c6), CAST(t2.c2 AS REAL), t2.c1)) AND ((CASE t2.c2  WHEN t2.c2 THEN t2.c1 ELSE t2.c6 END, ((((((((t2.c6)AND(t2.c1)))AND(t2.c6)))OR(t2.c2)))OR(t2.c0)), ((t2.c6) BETWEEN (t2.c0) AND (t2.c1)))))  NULLS LAST, CAST(((t2.c0) IS TRUE) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) IS FALSE))GLOB(t2.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t2 ORDER BY LOWER((((t2.c1))>((t2.c2)))), (((-5.50638309E8, t2.c6, t2.c1)) BETWEEN ((IFNULL(t2.c1, t2.c6), CAST(t2.c2 AS REAL), t2.c1)) AND ((CASE t2.c2  WHEN t2.c2 THEN t2.c1 ELSE t2.c6 END, ((((((((t2.c6)AND(t2.c1)))AND(t2.c6)))OR(t2.c2)))OR(t2.c0)), ((t2.c6) BETWEEN (t2.c0) AND (t2.c1)))))  NULLS LAST, CAST(((t2.c0) IS TRUE) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c0) IS FALSE))GLOB(t2.c2 COLLATE NOCASE))) ORDER BY LOWER((((t2.c1))>((t2.c2)))), (((-5.50638309E8, t2.c6, t2.c1)) BETWEEN ((IFNULL(t2.c1, t2.c6), CAST(t2.c2 AS REAL), t2.c1)) AND ((CASE t2.c2  WHEN t2.c2 THEN t2.c1 ELSE t2.c6 END, ((((((((t2.c6)AND(t2.c1)))AND(t2.c6)))OR(t2.c2)))OR(t2.c0)), ((t2.c6) BETWEEN (t2.c0) AND (t2.c1)))))  NULLS LAST, CAST(((t2.c0) IS TRUE) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE))-(((('-717663287'))<>((vt0.c1)))))) ORDER BY (((vt0.c0 IN ()))<>(((vt0.c1)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE))-(((('-717663287'))!=((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))!=(((vt0.c1)||(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE))-(((('-717663287'))<>((vt0.c1)))))) ORDER BY (((vt0.c0 IN ()))<>(((vt0.c1)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE))-(((('-717663287'))!=((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))!=(((vt0.c1)||(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE))-(((('-717663287'))<>((vt0.c1)))))) ORDER BY (((vt0.c0 IN ()))<>(((vt0.c1)||(vt0.c0))));
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (((TRIM(t2.c0, t2.c2))IS(TRIM(vt0.c0, t2.c2)))) ORDER BY 0x41cf9dde  NULLS FIRST, (((vt0.c0)) BETWEEN ((DATE(t2.c1, t2.c2, t2.c6))) AND (((vt0.c1 IN (t2.c1))))), vt0.c1;
SELECT SUM(count) FROM (SELECT ((((TRIM(t2.c0, t2.c2))IS(TRIM(vt0.c0, t2.c2)))) IS TRUE)  as count FROM t2, vt0 ORDER BY 0X41cf9dde  NULLS FIRST, (((vt0.c0)) BETWEEN ((DATE(t2.c1, t2.c2, t2.c6))) AND (((vt0.c1 IN (t2.c1))))), vt0.c1);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (((TRIM(t2.c0, t2.c2))IS(TRIM(vt0.c0, t2.c2)))) ORDER BY 0x41cf9dde  NULLS FIRST, (((vt0.c0)) BETWEEN ((DATE(t2.c1, t2.c2, t2.c6))) AND (((vt0.c1 IN (t2.c1))))), vt0.c1;
SELECT SUM(count) FROM (SELECT ((((TRIM(t2.c0, t2.c2))IS(TRIM(vt0.c0, t2.c2)))) IS TRUE)  as count FROM t2, vt0 ORDER BY 0X41cf9dde  NULLS FIRST, (((vt0.c0)) BETWEEN ((DATE(t2.c1, t2.c2, t2.c6))) AND (((vt0.c1 IN (t2.c1))))), vt0.c1);
SELECT ALL COUNT(*) FROM t0, t2 WHERE ((((('1024863406') BETWEEN (t2.c1) AND (t0.c0))) BETWEEN (((((t2.c0)OR(t2.c1)))OR(t2.c2))) AND (CASE t2.c6  WHEN NULL THEN t2.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((('1024863406') BETWEEN (t2.c1) AND (t0.c0))) BETWEEN (((((t2.c0)OR(t2.c1)))OR(t2.c2))) AND (CASE t2.c6  WHEN NULL THEN t2.c1 END))) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE ((((('1024863406') BETWEEN (t2.c1) AND (t0.c0))) BETWEEN (((((t2.c0)OR(t2.c1)))OR(t2.c2))) AND (CASE t2.c6  WHEN NULL THEN t2.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((('1024863406') BETWEEN (t2.c1) AND (t0.c0))) BETWEEN (((((t2.c0)OR(t2.c1)))OR(t2.c2))) AND (CASE t2.c6  WHEN NULL THEN t2.c1 END))) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE ((((('1024863406') BETWEEN (t2.c1) AND (t0.c0))) BETWEEN (((((t2.c0)OR(t2.c1)))OR(t2.c2))) AND (CASE t2.c6  WHEN NULL THEN t2.c1 END)));
SELECT * FROM vt0, t0, t2 WHERE ((((((((t2.c2, t2.c0, t2.c2)) BETWEEN ((t2.c6, t2.c0, t0.c0)) AND ((x'2675', t0.c0, vt0.c1))))AND(((((t0.c0)OR(t0.c0)))OR(vt0.c1)))))AND(HEX(t2.c0)))) ORDER BY vt0.c0 DESC, ((((vt0.c1) NOT NULL)) IS FALSE)  NULLS FIRST, ABS(t2.c2 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t2.c2, t2.c0, t2.c2)) BETWEEN ((t2.c6, t2.c0, t0.c0)) AND ((x'2675', t0.c0, vt0.c1))))AND(((((t0.c0)OR(t0.c0)))OR(vt0.c1)))))AND(HEX(t2.c0)))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY vt0.c0 DESC, ((((vt0.c1) NOT NULL)) IS FALSE)  NULLS FIRST, ABS(t2.c2 COLLATE NOCASE) ASC);
SELECT * FROM vt0, t0, t2 WHERE ((((((((t2.c2, t2.c0, t2.c2)) BETWEEN ((t2.c6, t2.c0, t0.c0)) AND ((x'2675', t0.c0, vt0.c1))))AND(((((t0.c0)OR(t0.c0)))OR(vt0.c1)))))AND(HEX(t2.c0)))) ORDER BY vt0.c0 DESC, ((((vt0.c1) NOT NULL)) IS FALSE)  NULLS FIRST, ABS(t2.c2 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t2.c2, t2.c0, t2.c2)) BETWEEN ((t2.c6, t2.c0, t0.c0)) AND ((x'2675', t0.c0, vt0.c1))))AND(((((t0.c0)OR(t0.c0)))OR(vt0.c1)))))AND(HEX(t2.c0)))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY vt0.c0 DESC, ((((vt0.c1) NOT NULL)) IS FALSE)  NULLS FIRST, ABS(t2.c2 COLLATE NOCASE) ASC);
SELECT * FROM vt0, t0, t2 WHERE ((((((((t2.c2, t2.c0, t2.c2)) BETWEEN ((t2.c6, t2.c0, t0.c0)) AND ((x'2675', t0.c0, vt0.c1))))AND(((((t0.c0)OR(t0.c0)))OR(vt0.c1)))))AND(HEX(t2.c0)))) ORDER BY vt0.c0 DESC, ((((vt0.c1) NOT NULL)) IS FALSE)  NULLS FIRST, ABS(t2.c2 COLLATE NOCASE) ASC;
SELECT * FROM t0, t2, vt0 WHERE ('Y/*Fd￿\r') ORDER BY CASE t2.c0  WHEN t2.c6 THEN vt0.c1 ELSE t2.c6 END COLLATE RTRIM ASC, TRIM(DISTINCT 1.2599141E9) DESC;
SELECT SUM(count) FROM (SELECT (('Y/*Fd￿\r') IS TRUE)  as count FROM t0, t2, vt0 ORDER BY CASE t2.c0  WHEN t2.c6 THEN vt0.c1 ELSE t2.c6 END COLLATE RTRIM ASC, TRIM(DISTINCT 1.2599141E9) DESC);
SELECT * FROM t0, t2, vt0 WHERE ('Y/*Fd￿\r') ORDER BY CASE t2.c0  WHEN t2.c6 THEN vt0.c1 ELSE t2.c6 END COLLATE RTRIM ASC, TRIM(DISTINCT 1.2599141E9) DESC;
SELECT SUM(count) FROM (SELECT (('Y/*Fd￿\r') IS TRUE)  as count FROM t0, t2, vt0 ORDER BY CASE t2.c0  WHEN t2.c6 THEN vt0.c1 ELSE t2.c6 END COLLATE RTRIM ASC, TRIM(DISTINCT 1.2599141E9) DESC);
SELECT * FROM t0, t2, vt0 WHERE ('Y/*Fd￿\r') ORDER BY CASE t2.c0  WHEN t2.c6 THEN vt0.c1 ELSE t2.c6 END COLLATE RTRIM ASC, TRIM(DISTINCT 1.2599141E9) DESC;
SELECT ALL COUNT(*) FROM t2, vt0, t0 WHERE (((((((((((((((((((t2.c2)OR(t2.c2)))OR(vt0.c0)))AND(vt0.c1)))OR(t2.c6)))AND(t2.c6)))OR(vt0.c1)))AND(t2.c1)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ('-1353863347' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((t2.c2)OR(t2.c2)))OR(vt0.c0)))AND(vt0.c1)))OR(t2.c6)))AND(t2.c6)))OR(vt0.c1)))AND(t2.c1)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ('-1353863347' COLLATE BINARY))) IS TRUE)  as count FROM t2, vt0, t0);
SELECT ALL COUNT(*) FROM t2, vt0, t0 WHERE (((((((((((((((((((t2.c2)OR(t2.c2)))OR(vt0.c0)))AND(vt0.c1)))OR(t2.c6)))AND(t2.c6)))OR(vt0.c1)))AND(t2.c1)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ('-1353863347' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((t2.c2)OR(t2.c2)))OR(vt0.c0)))AND(vt0.c1)))OR(t2.c6)))AND(t2.c6)))OR(vt0.c1)))AND(t2.c1)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ('-1353863347' COLLATE BINARY))) IS TRUE)  as count FROM t2, vt0, t0);
SELECT ALL COUNT(*) FROM t2, vt0, t0 WHERE (((((((((((((((((((t2.c2)OR(t2.c2)))OR(vt0.c0)))AND(vt0.c1)))OR(t2.c6)))AND(t2.c6)))OR(vt0.c1)))AND(t2.c1)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ('-1353863347' COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))==((((vt0.c0)|(vt0.c0)))))) ORDER BY (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))==((((vt0.c0)|(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))==((((vt0.c0)|(vt0.c0)))))) ORDER BY (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))==((((vt0.c0)|(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))==((((vt0.c0)|(vt0.c0)))))) ORDER BY (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ());
SELECT * FROM t2, t0, vt0 WHERE (LIKELIHOOD(DISTINCT '' COLLATE NOCASE, 0.0298493717335081)) ORDER BY (t0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT '' COLLATE NOCASE, 0.0298493717335081)) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY (t0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t2, t0, vt0 WHERE (LIKELIHOOD(DISTINCT '' COLLATE NOCASE, 0.0298493717335081)) ORDER BY (t0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT '' COLLATE NOCASE, 0.0298493717335081)) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY (t0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t2, t0, vt0 WHERE (LIKELIHOOD(DISTINCT '' COLLATE NOCASE, 0.0298493717335081)) ORDER BY (t0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE NULL  WHEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END THEN IFNULL(vt0.c0, vt0.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE NULL  WHEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END THEN IFNULL(vt0.c0, vt0.c1) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE NULL  WHEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END THEN IFNULL(vt0.c0, vt0.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE NULL  WHEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END THEN IFNULL(vt0.c0, vt0.c1) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE NULL  WHEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END THEN IFNULL(vt0.c0, vt0.c1) END  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(CAST(vt0.c1 AS BLOB))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(CAST(vt0.c1 AS BLOB))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(CAST(vt0.c1 AS BLOB))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(CAST(vt0.c1 AS BLOB))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(CAST(vt0.c1 AS BLOB))))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)>>(vt0.c1)) IN (vt0.c1, vt0.c0))) ORDER BY CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c1)) IN (vt0.c1, vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)>>(vt0.c1)) IN (vt0.c1, vt0.c0))) ORDER BY CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c1)) IN (vt0.c1, vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)>>(vt0.c1)) IN (vt0.c1, vt0.c0))) ORDER BY CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) END;
SELECT ALL COUNT(*) FROM t0, t2, vt0 WHERE (t0.c0) ORDER BY ((CASE WHEN t2.c2 THEN t2.c0 WHEN vt0.c0 THEN t2.c0 WHEN t2.c6 THEN t2.c2 ELSE t2.c1 END) BETWEEN (((vt0.c1) NOTNULL)) AND (CAST(t2.c1 AS BLOB)))  NULLS LAST, ((NULL)=(x'fe55' COLLATE NOCASE))  NULLS FIRST, CASE ((t2.c6)<(vt0.c0))  WHEN ((((vt0.c1)OR(t2.c1)))AND(t2.c0)) THEN ((t2.c1) BETWEEN (vt0.c0) AND ('')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY ((CASE WHEN t2.c2 THEN t2.c0 WHEN vt0.c0 THEN t2.c0 WHEN t2.c6 THEN t2.c2 ELSE t2.c1 END) BETWEEN (((vt0.c1) NOTNULL)) AND (CAST(t2.c1 AS BLOB)))  NULLS LAST, ((NULL)==(x'fe55' COLLATE NOCASE))  NULLS FIRST, CASE ((t2.c6)<(vt0.c0))  WHEN ((((vt0.c1)OR(t2.c1)))AND(t2.c0)) THEN ((t2.c1) BETWEEN (vt0.c0) AND ('')) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t2, vt0 WHERE (t0.c0) ORDER BY ((CASE WHEN t2.c2 THEN t2.c0 WHEN vt0.c0 THEN t2.c0 WHEN t2.c6 THEN t2.c2 ELSE t2.c1 END) BETWEEN (((vt0.c1) NOTNULL)) AND (CAST(t2.c1 AS BLOB)))  NULLS LAST, ((NULL)=(x'fe55' COLLATE NOCASE))  NULLS FIRST, CASE ((t2.c6)<(vt0.c0))  WHEN ((((vt0.c1)OR(t2.c1)))AND(t2.c0)) THEN ((t2.c1) BETWEEN (vt0.c0) AND ('')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, t2, vt0 ORDER BY ((CASE WHEN t2.c2 THEN t2.c0 WHEN vt0.c0 THEN t2.c0 WHEN t2.c6 THEN t2.c2 ELSE t2.c1 END) BETWEEN (((vt0.c1) NOTNULL)) AND (CAST(t2.c1 AS BLOB)))  NULLS LAST, ((NULL)==(x'fe55' COLLATE NOCASE))  NULLS FIRST, CASE ((t2.c6)<(vt0.c0))  WHEN ((((vt0.c1)OR(t2.c1)))AND(t2.c0)) THEN ((t2.c1) BETWEEN (vt0.c0) AND ('')) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t2, vt0 WHERE (t0.c0) ORDER BY ((CASE WHEN t2.c2 THEN t2.c0 WHEN vt0.c0 THEN t2.c0 WHEN t2.c6 THEN t2.c2 ELSE t2.c1 END) BETWEEN (((vt0.c1) NOTNULL)) AND (CAST(t2.c1 AS BLOB)))  NULLS LAST, ((NULL)=(x'fe55' COLLATE NOCASE))  NULLS FIRST, CASE ((t2.c6)<(vt0.c0))  WHEN ((((vt0.c1)OR(t2.c1)))AND(t2.c0)) THEN ((t2.c1) BETWEEN (vt0.c0) AND ('')) END  NULLS FIRST;
SELECT ALL * FROM t2 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (t2.c0);
SELECT * FROM t2, t0, vt0 WHERE (json_quote((+ (t2.c1)))) ORDER BY '-387753798' DESC  NULLS LAST, json_insert(NULL, NULL, ((((vt0.c0)OR(0.2233484973235258)))OR(t2.c1))) DESC, ((((t0.c0)<(vt0.c1)))*(x'2843')) DESC;
SELECT SUM(count) FROM (SELECT ((json_quote((+ (t2.c1)))) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY '-387753798' DESC  NULLS LAST, json_insert(NULL, NULL, ((((vt0.c0)OR(0.2233484973235258)))OR(t2.c1))) DESC, ((((t0.c0)<(vt0.c1)))*(x'2843')) DESC);
SELECT * FROM t2, t0, vt0 WHERE (json_quote((+ (t2.c1)))) ORDER BY '-387753798' DESC  NULLS LAST, json_insert(NULL, NULL, ((((vt0.c0)OR(0.2233484973235258)))OR(t2.c1))) DESC, ((((t0.c0)<(vt0.c1)))*(x'2843')) DESC;
SELECT SUM(count) FROM (SELECT ((json_quote((+ (t2.c1)))) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY '-387753798' DESC  NULLS LAST, json_insert(NULL, NULL, ((((vt0.c0)OR(0.2233484973235258)))OR(t2.c1))) DESC, ((((t0.c0)<(vt0.c1)))*(x'2843')) DESC);
SELECT * FROM t2, t0, vt0 WHERE (json_quote((+ (t2.c1)))) ORDER BY '-387753798' DESC  NULLS LAST, json_insert(NULL, NULL, ((((vt0.c0)OR(0.2233484973235258)))OR(t2.c1))) DESC, ((((t0.c0)<(vt0.c1)))*(x'2843')) DESC;
SELECT * FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN ('-1834097737') AND (t0.c0))) IS FALSE)) ORDER BY (((((((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c1))))OR(((t0.c0)LIKE(t0.c0)))))OR((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN ('-1834097737') AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c1))))OR(((t0.c0)LIKE(t0.c0)))))OR((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN ('-1834097737') AND (t0.c0))) IS FALSE)) ORDER BY (((((((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c1))))OR(((t0.c0)LIKE(t0.c0)))))OR((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN ('-1834097737') AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c1))))OR(((t0.c0)LIKE(t0.c0)))))OR((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN ('-1834097737') AND (t0.c0))) IS FALSE)) ORDER BY (((((((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c1))))OR(((t0.c0)LIKE(t0.c0)))))OR((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)-(t0.c0)))) AND (((NOT (t0.c0)))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((((t0.c0)-(t0.c0)))) AND (((NOT (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY x'' DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)-(t0.c0)))) AND (((NOT (t0.c0)))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((((t0.c0)-(t0.c0)))) AND (((NOT (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY x'' DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)-(t0.c0)))) AND (((NOT (t0.c0)))))) ORDER BY x'' DESC;
SELECT * FROM vt0, t0 WHERE (((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c0)) WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE t2.c0 END THEN (~ (t2.c2)) WHEN ((((((((vt0.c0)OR(0X7343607b)))AND(NULL)))OR(t2.c1)))OR(vt0.c0)) THEN ((vt0.c1)&(t2.c6)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN ((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c0)) WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE t2.c0 END THEN (~ (t2.c2)) WHEN ((((((((vt0.c0)OR(0x7343607b)))AND(NULL)))OR(t2.c1)))OR(vt0.c0)) THEN ((vt0.c1)&(t2.c6)) END) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c0)) WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE t2.c0 END THEN (~ (t2.c2)) WHEN ((((((((vt0.c0)OR(0X7343607b)))AND(NULL)))OR(t2.c1)))OR(vt0.c0)) THEN ((vt0.c1)&(t2.c6)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN ((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c0)) WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE t2.c0 END THEN (~ (t2.c2)) WHEN ((((((((vt0.c0)OR(0x7343607b)))AND(NULL)))OR(t2.c1)))OR(vt0.c0)) THEN ((vt0.c1)&(t2.c6)) END) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((t2.c1) NOT BETWEEN (vt0.c1) AND (t2.c0)) WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE t2.c0 END THEN (~ (t2.c2)) WHEN ((((((((vt0.c0)OR(0X7343607b)))AND(NULL)))OR(t2.c1)))OR(vt0.c0)) THEN ((vt0.c1)&(t2.c6)) END);
SELECT ALL COUNT(*) FROM t2, t0 WHERE (CASE WHEN t2.c0 COLLATE BINARY THEN x'' END) ORDER BY ((((((t0.c0)AND(t2.c2)))OR(t2.c0)))=(((((((((t2.c1)AND(t0.c0)))OR(t2.c0)))AND(x'bb25')))OR(t2.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN t2.c0 COLLATE BINARY THEN x'' END) IS TRUE)  as count FROM t2, t0 ORDER BY ((((((t0.c0)AND(t2.c2)))OR(t2.c0)))=(((((((((t2.c1)AND(t0.c0)))OR(t2.c0)))AND(x'bb25')))OR(t2.c0)))));
SELECT ALL COUNT(*) FROM t2, t0 WHERE (CASE WHEN t2.c0 COLLATE BINARY THEN x'' END) ORDER BY ((((((t0.c0)AND(t2.c2)))OR(t2.c0)))=(((((((((t2.c1)AND(t0.c0)))OR(t2.c0)))AND(x'bb25')))OR(t2.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN t2.c0 COLLATE BINARY THEN x'' END) IS TRUE)  as count FROM t2, t0 ORDER BY ((((((t0.c0)AND(t2.c2)))OR(t2.c0)))=(((((((((t2.c1)AND(t0.c0)))OR(t2.c0)))AND(x'bb25')))OR(t2.c0)))));
SELECT ALL COUNT(*) FROM t2, t0 WHERE (CASE WHEN t2.c0 COLLATE BINARY THEN x'' END) ORDER BY ((((((t0.c0)AND(t2.c2)))OR(t2.c0)))=(((((((((t2.c1)AND(t0.c0)))OR(t2.c0)))AND(x'bb25')))OR(t2.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (((((((((t0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(t0.c0))))) ORDER BY ((vt0.c1) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((t0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (((((((((t0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(t0.c0))))) ORDER BY ((vt0.c1) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((t0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (((((((((t0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(t0.c0))))) ORDER BY ((vt0.c1) ISNULL);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (((CAST(t2.c0 AS TEXT)) NOT BETWEEN (CASE t2.c0  WHEN vt0.c0 THEN t2.c6 END) AND ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t2.c0 AS TEXT)) NOT BETWEEN (CASE t2.c0  WHEN vt0.c0 THEN t2.c6 END) AND ((+ (t0.c0))))) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (((CAST(t2.c0 AS TEXT)) NOT BETWEEN (CASE t2.c0  WHEN vt0.c0 THEN t2.c6 END) AND ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t2.c0 AS TEXT)) NOT BETWEEN (CASE t2.c0  WHEN vt0.c0 THEN t2.c6 END) AND ((+ (t0.c0))))) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (((CAST(t2.c0 AS TEXT)) NOT BETWEEN (CASE t2.c0  WHEN vt0.c0 THEN t2.c6 END) AND ((+ (t0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN t2 ON (((t2.c6)) NOT BETWEEN (('')) AND ((MIN(t2.c0, t2.c1, t2.c6, t2.c0)))) WHERE (TRIM(DISTINCT (~ (t2.c6)), CAST(t2.c1 AS TEXT))) ORDER BY (((((t2.c6)OR(t2.c0)))OR(NULL)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (~ (t2.c6)), CAST(t2.c1 AS TEXT))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON (((t2.c6)) NOT BETWEEN (('')) AND ((MIN(t2.c0, t2.c1, t2.c6, t2.c0)))) ORDER BY (((((t2.c6)OR(t2.c0)))OR(NULL)) IN ()) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN t2 ON (((t2.c6)) NOT BETWEEN (('')) AND ((MIN(t2.c0, t2.c1, t2.c6, t2.c0)))) WHERE (TRIM(DISTINCT (~ (t2.c6)), CAST(t2.c1 AS TEXT))) ORDER BY (((((t2.c6)OR(t2.c0)))OR(NULL)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (~ (t2.c6)), CAST(t2.c1 AS TEXT))) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON (((t2.c6)) NOT BETWEEN (('')) AND ((MIN(t2.c0, t2.c1, t2.c6, t2.c0)))) ORDER BY (((((t2.c6)OR(t2.c0)))OR(NULL)) IN ()) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN t2 ON (((t2.c6)) NOT BETWEEN (('')) AND ((MIN(t2.c0, t2.c1, t2.c6, t2.c0)))) WHERE (TRIM(DISTINCT (~ (t2.c6)), CAST(t2.c1 AS TEXT))) ORDER BY (((((t2.c6)OR(t2.c0)))OR(NULL)) IN ()) DESC;
SELECT COUNT(*) FROM t0, vt0, t2 WHERE ((TRIM(t0.c0) IN ())) ORDER BY (((~ (t2.c2))) ISNULL), CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(t0.c0) IN ())) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY (((~ (t2.c2))) ISNULL), CHANGES() ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE ((TRIM(t0.c0) IN ())) ORDER BY (((~ (t2.c2))) ISNULL), CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(t0.c0) IN ())) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY (((~ (t2.c2))) ISNULL), CHANGES() ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE ((TRIM(t0.c0) IN ())) ORDER BY (((~ (t2.c2))) ISNULL), CHANGES() ASC  NULLS LAST;
SELECT * FROM t2, vt0 WHERE (CASE WHEN t2.c2 THEN ABS(vt0.c0) ELSE ((t2.c6) NOT BETWEEN (t2.c6) AND (t2.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t2.c2 THEN ABS(vt0.c0) ELSE ((t2.c6) NOT BETWEEN (t2.c6) AND (t2.c0)) END) IS TRUE)  as count FROM t2, vt0);
SELECT * FROM t2, vt0 WHERE (CASE WHEN t2.c2 THEN ABS(vt0.c0) ELSE ((t2.c6) NOT BETWEEN (t2.c6) AND (t2.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t2.c2 THEN ABS(vt0.c0) ELSE ((t2.c6) NOT BETWEEN (t2.c6) AND (t2.c0)) END) IS TRUE)  as count FROM t2, vt0);
SELECT * FROM t2, vt0 WHERE (CASE WHEN t2.c2 THEN ABS(vt0.c0) ELSE ((t2.c6) NOT BETWEEN (t2.c6) AND (t2.c0)) END);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((CASE t2.c2  WHEN t2.c2 THEN t0.c0 WHEN t2.c6 THEN vt0.c0 WHEN t2.c1 THEN vt0.c1 END) NOT BETWEEN (t2.c1 COLLATE NOCASE) AND (CASE t2.c6  WHEN t2.c6 THEN vt0.c1 ELSE t0.c0 END))) ORDER BY CASE WHEN -1459946473 THEN ((vt0.c0) NOT BETWEEN (t2.c6) AND (t2.c2)) END ASC, NULL ASC, (- (ABS(DISTINCT t2.c6)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t2.c2  WHEN t2.c2 THEN t0.c0 WHEN t2.c6 THEN vt0.c0 WHEN t2.c1 THEN vt0.c1 END) NOT BETWEEN (t2.c1 COLLATE NOCASE) AND (CASE t2.c6  WHEN t2.c6 THEN vt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY CASE WHEN -1459946473 THEN ((vt0.c0) NOT BETWEEN (t2.c6) AND (t2.c2)) END ASC, NULL ASC, (- (ABS(DISTINCT t2.c6)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((CASE t2.c2  WHEN t2.c2 THEN t0.c0 WHEN t2.c6 THEN vt0.c0 WHEN t2.c1 THEN vt0.c1 END) NOT BETWEEN (t2.c1 COLLATE NOCASE) AND (CASE t2.c6  WHEN t2.c6 THEN vt0.c1 ELSE t0.c0 END))) ORDER BY CASE WHEN -1459946473 THEN ((vt0.c0) NOT BETWEEN (t2.c6) AND (t2.c2)) END ASC, NULL ASC, (- (ABS(DISTINCT t2.c6)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t2.c2  WHEN t2.c2 THEN t0.c0 WHEN t2.c6 THEN vt0.c0 WHEN t2.c1 THEN vt0.c1 END) NOT BETWEEN (t2.c1 COLLATE NOCASE) AND (CASE t2.c6  WHEN t2.c6 THEN vt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY CASE WHEN -1459946473 THEN ((vt0.c0) NOT BETWEEN (t2.c6) AND (t2.c2)) END ASC, NULL ASC, (- (ABS(DISTINCT t2.c6)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (((CASE t2.c2  WHEN t2.c2 THEN t0.c0 WHEN t2.c6 THEN vt0.c0 WHEN t2.c1 THEN vt0.c1 END) NOT BETWEEN (t2.c1 COLLATE NOCASE) AND (CASE t2.c6  WHEN t2.c6 THEN vt0.c1 ELSE t0.c0 END))) ORDER BY CASE WHEN -1459946473 THEN ((vt0.c0) NOT BETWEEN (t2.c6) AND (t2.c2)) END ASC, NULL ASC, (- (ABS(DISTINCT t2.c6)))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE) ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE) ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE) ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END;
SELECT * FROM t0 WHERE ((NOT (LOWER(t0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (LOWER(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (LOWER(t0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (LOWER(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (LOWER(t0.c0))));
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, t2, vt0);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, t2, vt0);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, t0, t2 WHERE ((NOT (((t2.c1) NOT BETWEEN (0.23394972535998482) AND (t2.c6))))) ORDER BY (((((t2.c2)OR(t2.c6)))OR(0.7832669684021415)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t2.c1) NOT BETWEEN (0.23394972535998482) AND (t2.c6))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (((((t2.c2)OR(t2.c6)))OR(0.7832669684021415)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, t2 WHERE ((NOT (((t2.c1) NOT BETWEEN (0.23394972535998482) AND (t2.c6))))) ORDER BY (((((t2.c2)OR(t2.c6)))OR(0.7832669684021415)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t2.c1) NOT BETWEEN (0.23394972535998482) AND (t2.c6))))) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (((((t2.c2)OR(t2.c6)))OR(0.7832669684021415)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, t2 WHERE ((NOT (((t2.c1) NOT BETWEEN (0.23394972535998482) AND (t2.c6))))) ORDER BY (((((t2.c2)OR(t2.c6)))OR(0.7832669684021415)) IN ()) ASC  NULLS LAST;
SELECT * FROM t2 WHERE (((LIKELY(t2.c6))%(((t2.c0) BETWEEN (t2.c6) AND (t2.c6))))) ORDER BY CAST(((t2.c1)<<(t2.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((LIKELY(t2.c6))%(((t2.c0) BETWEEN (t2.c6) AND (t2.c6))))) IS TRUE)  as count FROM t2 ORDER BY CAST(((t2.c1)<<(t2.c1)) AS TEXT));
SELECT * FROM t2 WHERE (((LIKELY(t2.c6))%(((t2.c0) BETWEEN (t2.c6) AND (t2.c6))))) ORDER BY CAST(((t2.c1)<<(t2.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((LIKELY(t2.c6))%(((t2.c0) BETWEEN (t2.c6) AND (t2.c6))))) IS TRUE)  as count FROM t2 ORDER BY CAST(((t2.c1)<<(t2.c1)) AS TEXT));
SELECT * FROM t2 WHERE (((LIKELY(t2.c6))%(((t2.c0) BETWEEN (t2.c6) AND (t2.c6))))) ORDER BY CAST(((t2.c1)<<(t2.c1)) AS TEXT);
SELECT * FROM t2 INNER JOIN t0 ON ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t2.c1 END)AND(((t2.c6) NOTNULL))))AND(((t2.c0) ISNULL))) WHERE ((((t2.c2 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM t2 INNER JOIN t0 ON ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t2.c1 END)AND(((t2.c6) NOTNULL))))AND(((t2.c0) ISNULL))));
SELECT * FROM t2 INNER JOIN t0 ON ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t2.c1 END)AND(((t2.c6) NOTNULL))))AND(((t2.c0) ISNULL))) WHERE ((((t2.c2 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM t2 INNER JOIN t0 ON ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t2.c1 END)AND(((t2.c6) NOTNULL))))AND(((t2.c0) ISNULL))));
SELECT * FROM t2 INNER JOIN t0 ON ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t2.c1 END)AND(((t2.c6) NOTNULL))))AND(((t2.c0) ISNULL))) WHERE ((((t2.c2 IN ())) NOTNULL));
SELECT COUNT(*) FROM t2, vt0 RIGHT OUTER JOIN t0 ON (NOT (((((t2.c0)AND(t2.c6)))OR(t2.c1)))) WHERE (CASE WHEN vt0.c1 THEN ((t0.c0)IS NOT(t2.c1)) ELSE t2.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN ((t0.c0)IS NOT(t2.c1)) ELSE t2.c2 END) IS TRUE)  as count FROM t2, vt0 RIGHT OUTER JOIN t0 ON (NOT (((((t2.c0)AND(t2.c6)))OR(t2.c1)))));
SELECT COUNT(*) FROM t2, vt0 RIGHT OUTER JOIN t0 ON (NOT (((((t2.c0)AND(t2.c6)))OR(t2.c1)))) WHERE (CASE WHEN vt0.c1 THEN ((t0.c0)IS NOT(t2.c1)) ELSE t2.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN ((t0.c0)IS NOT(t2.c1)) ELSE t2.c2 END) IS TRUE)  as count FROM t2, vt0 RIGHT OUTER JOIN t0 ON (NOT (((((t2.c0)AND(t2.c6)))OR(t2.c1)))));
SELECT COUNT(*) FROM t2, vt0 RIGHT OUTER JOIN t0 ON (NOT (((((t2.c0)AND(t2.c6)))OR(t2.c1)))) WHERE (CASE WHEN vt0.c1 THEN ((t0.c0)IS NOT(t2.c1)) ELSE t2.c2 END);
SELECT * FROM t0, t2 WHERE (CAST((t2.c2 IN ()) AS BLOB)) ORDER BY CASE (+ (t0.c0))  WHEN CAST(t2.c6 AS BLOB) THEN (+ (t2.c2)) WHEN ((t2.c0) NOT BETWEEN (x'') AND (t2.c2)) THEN MIN(t2.c1, t2.c6) WHEN NULL THEN t2.c6 WHEN '0.8973893170192263' THEN ((t0.c0) BETWEEN (t2.c1) AND (t2.c2)) WHEN ((((NULL)AND(t2.c6)))AND(t2.c2)) THEN COALESCE(t2.c6, t2.c2) END ASC, (TRIM(t2.c6) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t2.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM t0, t2 ORDER BY CASE (+ (t0.c0))  WHEN CAST(t2.c6 AS BLOB) THEN (+ (t2.c2)) WHEN ((t2.c0) NOT BETWEEN (x'') AND (t2.c2)) THEN MIN(t2.c1, t2.c6) WHEN NULL THEN t2.c6 WHEN '0.8973893170192263' THEN ((t0.c0) BETWEEN (t2.c1) AND (t2.c2)) WHEN ((((NULL)AND(t2.c6)))AND(t2.c2)) THEN COALESCE(t2.c6, t2.c2) END ASC, (TRIM(t2.c6) IN ()) DESC  NULLS FIRST);
SELECT * FROM t0, t2 WHERE (CAST((t2.c2 IN ()) AS BLOB)) ORDER BY CASE (+ (t0.c0))  WHEN CAST(t2.c6 AS BLOB) THEN (+ (t2.c2)) WHEN ((t2.c0) NOT BETWEEN (x'') AND (t2.c2)) THEN MIN(t2.c1, t2.c6) WHEN NULL THEN t2.c6 WHEN '0.8973893170192263' THEN ((t0.c0) BETWEEN (t2.c1) AND (t2.c2)) WHEN ((((NULL)AND(t2.c6)))AND(t2.c2)) THEN COALESCE(t2.c6, t2.c2) END ASC, (TRIM(t2.c6) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t2.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM t0, t2 ORDER BY CASE (+ (t0.c0))  WHEN CAST(t2.c6 AS BLOB) THEN (+ (t2.c2)) WHEN ((t2.c0) NOT BETWEEN (x'') AND (t2.c2)) THEN MIN(t2.c1, t2.c6) WHEN NULL THEN t2.c6 WHEN '0.8973893170192263' THEN ((t0.c0) BETWEEN (t2.c1) AND (t2.c2)) WHEN ((((NULL)AND(t2.c6)))AND(t2.c2)) THEN COALESCE(t2.c6, t2.c2) END ASC, (TRIM(t2.c6) IN ()) DESC  NULLS FIRST);
SELECT * FROM t0, t2 WHERE (CAST((t2.c2 IN ()) AS BLOB)) ORDER BY CASE (+ (t0.c0))  WHEN CAST(t2.c6 AS BLOB) THEN (+ (t2.c2)) WHEN ((t2.c0) NOT BETWEEN (x'') AND (t2.c2)) THEN MIN(t2.c1, t2.c6) WHEN NULL THEN t2.c6 WHEN '0.8973893170192263' THEN ((t0.c0) BETWEEN (t2.c1) AND (t2.c2)) WHEN ((((NULL)AND(t2.c6)))AND(t2.c2)) THEN COALESCE(t2.c6, t2.c2) END ASC, (TRIM(t2.c6) IN ()) DESC  NULLS FIRST;
SELECT * FROM t2, t0 WHERE (0.5546462323283757) ORDER BY ((CAST(-1.484626237E9 AS BLOB))==(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5546462323283757) IS TRUE)  as count FROM t2, t0 ORDER BY ((CAST(-1.484626237E9 AS BLOB))=(t0.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM t2, t0 WHERE (0.5546462323283757) ORDER BY ((CAST(-1.484626237E9 AS BLOB))==(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5546462323283757) IS TRUE)  as count FROM t2, t0 ORDER BY ((CAST(-1.484626237E9 AS BLOB))=(t0.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM t2, t0 WHERE (0.5546462323283757) ORDER BY ((CAST(-1.484626237E9 AS BLOB))==(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN t2 WHERE (NULL) ORDER BY (+ (t2.c6)), ((CAST(t2.c0 AS REAL))IS(((((vt0.c0)OR(vt0.c0)))OR(t2.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN t2 ORDER BY (+ (t2.c6)), ((CAST(t2.c0 AS REAL))IS(((((vt0.c0)OR(vt0.c0)))OR(t2.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN t2 WHERE (NULL) ORDER BY (+ (t2.c6)), ((CAST(t2.c0 AS REAL))IS(((((vt0.c0)OR(vt0.c0)))OR(t2.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN t2 ORDER BY (+ (t2.c6)), ((CAST(t2.c0 AS REAL))IS(((((vt0.c0)OR(vt0.c0)))OR(t2.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN t2 WHERE (NULL) ORDER BY (+ (t2.c6)), ((CAST(t2.c0 AS REAL))IS(((((vt0.c0)OR(vt0.c0)))OR(t2.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t2, t0, vt0 WHERE (((((((((((t2.c2)|(vt0.c0)))AND((('ai') BETWEEN (t2.c6) AND (vt0.c0)))))AND(t2.c1 COLLATE BINARY)))OR(((t2.c1) IS FALSE))))OR(((((((((NULL)OR(t0.c0)))OR(t2.c2)))OR(vt0.c0)))OR(vt0.c1))))) ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t2.c2)|(vt0.c0)))AND((('ai') BETWEEN (t2.c6) AND (vt0.c0)))))AND(t2.c1 COLLATE BINARY)))OR(((t2.c1) IS FALSE))))OR(((((((((NULL)OR(t0.c0)))OR(t2.c2)))OR(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC);
SELECT COUNT(*) FROM t2, t0, vt0 WHERE (((((((((((t2.c2)|(vt0.c0)))AND((('ai') BETWEEN (t2.c6) AND (vt0.c0)))))AND(t2.c1 COLLATE BINARY)))OR(((t2.c1) IS FALSE))))OR(((((((((NULL)OR(t0.c0)))OR(t2.c2)))OR(vt0.c0)))OR(vt0.c1))))) ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t2.c2)|(vt0.c0)))AND((('ai') BETWEEN (t2.c6) AND (vt0.c0)))))AND(t2.c1 COLLATE BINARY)))OR(((t2.c1) IS FALSE))))OR(((((((((NULL)OR(t0.c0)))OR(t2.c2)))OR(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM t2, t0, vt0 ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC);
SELECT COUNT(*) FROM t2, t0, vt0 WHERE (((((((((((t2.c2)|(vt0.c0)))AND((('ai') BETWEEN (t2.c6) AND (vt0.c0)))))AND(t2.c1 COLLATE BINARY)))OR(((t2.c1) IS FALSE))))OR(((((((((NULL)OR(t0.c0)))OR(t2.c2)))OR(vt0.c0)))OR(vt0.c1))))) ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC;
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0)>(t0.c0))))) ORDER BY CAST('-755901963' AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST('-755901963' AS NUMERIC) DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0)>(t0.c0))))) ORDER BY CAST('-755901963' AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST('-755901963' AS NUMERIC) DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0)>(t0.c0))))) ORDER BY CAST('-755901963' AS NUMERIC) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0, t2, t0);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0, t2, t0);
SELECT COUNT(*) FROM vt0, t2, t0 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (ABS(vt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c1) COLLATE BINARY) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (ABS(vt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c1) COLLATE BINARY) IS TRUE)  as count FROM t2, vt0);
SELECT ALL COUNT(*) FROM t2, vt0 WHERE (ABS(vt0.c1) COLLATE BINARY);
SELECT COUNT(*) FROM t2, t0 WHERE (CAST(((t2.c2) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t2.c2) IS FALSE) AS TEXT)) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE (CAST(((t2.c2) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t2.c2) IS FALSE) AS TEXT)) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE (CAST(((t2.c2) IS FALSE) AS TEXT));
SELECT * FROM vt0, t0, t2 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM vt0, t0, t2);
SELECT * FROM vt0, t0, t2 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM vt0, t0, t2);
SELECT * FROM vt0, t0, t2 WHERE (t2.c0);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE);
SELECT * FROM t0 NOT INDEXED, vt0, t2 WHERE ((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t2.c2)))) BETWEEN (vt0.c1 COLLATE BINARY) AND ((t2.c0 IN (t0.c0))))) ORDER BY 'G' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t2.c2)))) BETWEEN (vt0.c1 COLLATE BINARY) AND ((t2.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY 'G' DESC  NULLS FIRST);
SELECT * FROM t0 NOT INDEXED, vt0, t2 WHERE ((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t2.c2)))) BETWEEN (vt0.c1 COLLATE BINARY) AND ((t2.c0 IN (t0.c0))))) ORDER BY 'G' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t2.c2)))) BETWEEN (vt0.c1 COLLATE BINARY) AND ((t2.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY 'G' DESC  NULLS FIRST);
SELECT * FROM t0 NOT INDEXED, vt0, t2 WHERE ((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t2.c2)))) BETWEEN (vt0.c1 COLLATE BINARY) AND ((t2.c0 IN (t0.c0))))) ORDER BY 'G' DESC  NULLS FIRST;
SELECT COUNT(*) FROM t2 WHERE (((((t2.c0)<=(t2.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t2.c0)<=(t2.c0))) IS TRUE)) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((((t2.c0)<=(t2.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t2.c0)<=(t2.c0))) IS TRUE)) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((((t2.c0)<=(t2.c0))) IS TRUE));
SELECT ALL * FROM t2, vt0 CROSS JOIN t0 ON CAST((- (vt0.c1)) AS TEXT) WHERE ((t2.c2 IN ((NOT (NULL)), ((t2.c2)>>(t2.c2))))) ORDER BY ((((vt0.c1)AND(((t2.c0) IS FALSE))))AND(t2.c1 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT (((t2.c2 IN ((NOT (NULL)), ((t2.c2)>>(t2.c2))))) IS TRUE)  as count FROM t2, vt0 CROSS JOIN t0 ON CAST((- (vt0.c1)) AS TEXT) ORDER BY ((((vt0.c1)AND(((t2.c0) IS FALSE))))AND(t2.c1 COLLATE BINARY)) DESC);
SELECT ALL * FROM t2, vt0 CROSS JOIN t0 ON CAST((- (vt0.c1)) AS TEXT) WHERE ((t2.c2 IN ((NOT (NULL)), ((t2.c2)>>(t2.c2))))) ORDER BY ((((vt0.c1)AND(((t2.c0) IS FALSE))))AND(t2.c1 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT (((t2.c2 IN ((NOT (NULL)), ((t2.c2)>>(t2.c2))))) IS TRUE)  as count FROM t2, vt0 CROSS JOIN t0 ON CAST((- (vt0.c1)) AS TEXT) ORDER BY ((((vt0.c1)AND(((t2.c0) IS FALSE))))AND(t2.c1 COLLATE BINARY)) DESC);
SELECT ALL * FROM t2, vt0 CROSS JOIN t0 ON CAST((- (vt0.c1)) AS TEXT) WHERE ((t2.c2 IN ((NOT (NULL)), ((t2.c2)>>(t2.c2))))) ORDER BY ((((vt0.c1)AND(((t2.c0) IS FALSE))))AND(t2.c1 COLLATE BINARY)) DESC;
SELECT ALL * FROM t0, vt0, t2 WHERE (((- ('-838026402')) IN ())) ORDER BY SQLITE_COMPILEOPTION_GET(((t2.c2) BETWEEN (t2.c6) AND (vt0.c0))) ASC, (((vt0.c0)) NOT BETWEEN ((t2.c0 COLLATE BINARY)) AND ((((t2.c0)<>(t2.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- ('-838026402')) IN ())) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY SQLITE_COMPILEOPTION_GET(((t2.c2) BETWEEN (t2.c6) AND (vt0.c0))) ASC, (((vt0.c0)) NOT BETWEEN ((t2.c0 COLLATE BINARY)) AND ((((t2.c0)<>(t2.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, t2 WHERE (((- ('-838026402')) IN ())) ORDER BY SQLITE_COMPILEOPTION_GET(((t2.c2) BETWEEN (t2.c6) AND (vt0.c0))) ASC, (((vt0.c0)) NOT BETWEEN ((t2.c0 COLLATE BINARY)) AND ((((t2.c0)<>(t2.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- ('-838026402')) IN ())) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY SQLITE_COMPILEOPTION_GET(((t2.c2) BETWEEN (t2.c6) AND (vt0.c0))) ASC, (((vt0.c0)) NOT BETWEEN ((t2.c0 COLLATE BINARY)) AND ((((t2.c0)<>(t2.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, t2 WHERE (((- ('-838026402')) IN ())) ORDER BY SQLITE_COMPILEOPTION_GET(((t2.c2) BETWEEN (t2.c6) AND (vt0.c0))) ASC, (((vt0.c0)) NOT BETWEEN ((t2.c0 COLLATE BINARY)) AND ((((t2.c0)<>(t2.c1))))) DESC  NULLS FIRST;
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((UPPER(DISTINCT t0.c0) IN ())) ORDER BY CAST(vt0.c1 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((UPPER(DISTINCT t0.c0) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY CAST(vt0.c1 AS TEXT));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((UPPER(DISTINCT t0.c0) IN ())) ORDER BY CAST(vt0.c1 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((UPPER(DISTINCT t0.c0) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY CAST(vt0.c1 AS TEXT));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((UPPER(DISTINCT t0.c0) IN ())) ORDER BY CAST(vt0.c1 AS TEXT);
SELECT ALL COUNT(*) FROM t2, t0 WHERE ((t2.c0 IN (((t2.c2)<<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t2.c0 IN (((t2.c2)<<(t0.c0))))) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE ((t2.c0 IN (((t2.c2)<<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t2.c0 IN (((t2.c2)<<(t0.c0))))) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE ((t2.c0 IN (((t2.c2)<<(t0.c0)))));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(vt0.c0)))OR(359704917))) ORDER BY ((CAST(t0.c0 AS REAL))IS(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(vt0.c0)))OR(359704917))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((CAST(t0.c0 AS REAL))IS(vt0.c0))  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(vt0.c0)))OR(359704917))) ORDER BY ((CAST(t0.c0 AS REAL))IS(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(vt0.c0)))OR(359704917))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((CAST(t0.c0 AS REAL))IS(vt0.c0))  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(vt0.c0)))OR(359704917))) ORDER BY ((CAST(t0.c0 AS REAL))IS(vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN t0 ON ((((NULLIF(t0.c0, vt0.c1))AND(vt0.c1)))AND(((t2.c1)IS NOT(t2.c2)))) FULL OUTER JOIN vt0 ON (((NOT (t2.c0)))*(((t0.c0)|(t2.c6)))) WHERE ((((0.6324239675128029))>=(((t2.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((0.6324239675128029))>=(((t2.c2 IN ()))))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON ((((NULLIF(t0.c0, vt0.c1))AND(vt0.c1)))AND(((t2.c1)IS NOT(t2.c2)))) FULL OUTER JOIN vt0 ON (((NOT (t2.c0)))*(((t0.c0)|(t2.c6)))));
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN t0 ON ((((NULLIF(t0.c0, vt0.c1))AND(vt0.c1)))AND(((t2.c1)IS NOT(t2.c2)))) FULL OUTER JOIN vt0 ON (((NOT (t2.c0)))*(((t0.c0)|(t2.c6)))) WHERE ((((0.6324239675128029))>=(((t2.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((0.6324239675128029))>=(((t2.c2 IN ()))))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON ((((NULLIF(t0.c0, vt0.c1))AND(vt0.c1)))AND(((t2.c1)IS NOT(t2.c2)))) FULL OUTER JOIN vt0 ON (((NOT (t2.c0)))*(((t0.c0)|(t2.c6)))));
SELECT COUNT(*) FROM vt0, t2 WHERE (t2.c1) ORDER BY CASE WHEN (((0x1c7d0590)) BETWEEN ((t2.c1)) AND ((t2.c6))) THEN ((t2.c1)/(vt0.c0)) ELSE ((0.9382184812761494) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ((t2.c1) IS TRUE)  as count FROM vt0, t2 ORDER BY CASE WHEN (((0X1c7d0590)) BETWEEN ((t2.c1)) AND ((t2.c6))) THEN ((t2.c1)/(vt0.c0)) ELSE ((0.9382184812761494) NOT NULL) END ASC);
SELECT COUNT(*) FROM vt0, t2 WHERE (t2.c1) ORDER BY CASE WHEN (((0x1c7d0590)) BETWEEN ((t2.c1)) AND ((t2.c6))) THEN ((t2.c1)/(vt0.c0)) ELSE ((0.9382184812761494) NOT NULL) END ASC;
SELECT SUM(count) FROM (SELECT ((t2.c1) IS TRUE)  as count FROM vt0, t2 ORDER BY CASE WHEN (((0X1c7d0590)) BETWEEN ((t2.c1)) AND ((t2.c6))) THEN ((t2.c1)/(vt0.c0)) ELSE ((0.9382184812761494) NOT NULL) END ASC);
SELECT COUNT(*) FROM vt0, t2 WHERE (t2.c1) ORDER BY CASE WHEN (((0x1c7d0590)) BETWEEN ((t2.c1)) AND ((t2.c6))) THEN ((t2.c1)/(vt0.c0)) ELSE ((0.9382184812761494) NOT NULL) END ASC;
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (((((vt0.c0)>(vt0.c0)))<=(((vt0.c1)=(t2.c6)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(vt0.c0)))<=(((vt0.c1)=(t2.c6))))) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (((((vt0.c0)>(vt0.c0)))<=(((vt0.c1)=(t2.c6)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(vt0.c0)))<=(((vt0.c1)=(t2.c6))))) IS TRUE)  as count FROM t0, vt0, t2);
SELECT ALL COUNT(*) FROM t0, vt0, t2 WHERE (((((vt0.c0)>(vt0.c0)))<=(((vt0.c1)=(t2.c6)))));
SELECT COUNT(*) FROM t2 WHERE (CASE t2.c6  WHEN x'cd89' THEN x'59c5' ELSE ((((t2.c1)AND(t2.c1)))OR(t2.c1)) END) ORDER BY ((((t2.c0) IS TRUE))<=(t2.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE t2.c6  WHEN x'cd89' THEN x'59c5' ELSE ((((t2.c1)AND(t2.c1)))OR(t2.c1)) END) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0) IS TRUE))<=(t2.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE (CASE t2.c6  WHEN x'cd89' THEN x'59c5' ELSE ((((t2.c1)AND(t2.c1)))OR(t2.c1)) END) ORDER BY ((((t2.c0) IS TRUE))<=(t2.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE t2.c6  WHEN x'cd89' THEN x'59c5' ELSE ((((t2.c1)AND(t2.c1)))OR(t2.c1)) END) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0) IS TRUE))<=(t2.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE (CASE t2.c6  WHEN x'cd89' THEN x'59c5' ELSE ((((t2.c1)AND(t2.c1)))OR(t2.c1)) END) ORDER BY ((((t2.c0) IS TRUE))<=(t2.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, t2 WHERE (0Xffffffffa8e547a8) ORDER BY (vt0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffa8e547a8) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY (vt0.c1 IN ()) ASC);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE (0Xffffffffa8e547a8) ORDER BY (vt0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffa8e547a8) IS TRUE)  as count FROM t0, vt0, t2 ORDER BY (vt0.c1 IN ()) ASC);
SELECT COUNT(*) FROM t0, vt0, t2 WHERE (0Xffffffffa8e547a8) ORDER BY (vt0.c1 IN ()) ASC;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON '-904294753' WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))%(((t0.c0)<(vt0.c0))))) ORDER BY ((((t0.c0)OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))%(((t0.c0)<(vt0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON '-904294753' ORDER BY ((((t0.c0)OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON '-904294753' WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))%(((t0.c0)<(vt0.c0))))) ORDER BY ((((t0.c0)OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))%(((t0.c0)<(vt0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON '-904294753' ORDER BY ((((t0.c0)OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON '-904294753' WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))%(((t0.c0)<(vt0.c0))))) ORDER BY ((((t0.c0)OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON '-2143631013' WHERE (((((((t0.c0)/(vt0.c0)))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c0)>>(vt0.c1))))) ORDER BY CASE WHEN vt0.c1 THEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(t0.c0)))OR(vt0.c1)))OR(t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)/(vt0.c0)))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON '-2143631013' ORDER BY CASE WHEN vt0.c1 THEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(t0.c0)))OR(vt0.c1)))OR(t0.c0)) END);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON '-2143631013' WHERE (((((((t0.c0)/(vt0.c0)))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c0)>>(vt0.c1))))) ORDER BY CASE WHEN vt0.c1 THEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(t0.c0)))OR(vt0.c1)))OR(t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)/(vt0.c0)))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON '-2143631013' ORDER BY CASE WHEN vt0.c1 THEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(t0.c0)))OR(vt0.c1)))OR(t0.c0)) END);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON '-2143631013' WHERE (((((((t0.c0)/(vt0.c0)))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c0)>>(vt0.c1))))) ORDER BY CASE WHEN vt0.c1 THEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(t0.c0)))OR(vt0.c1)))OR(t0.c0)) END;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((NULL)%(vt0.c1))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((0.774463059728915)*(vt0.c0)) ELSE '-1403086783' COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL)%(vt0.c1))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((0.774463059728915)*(vt0.c0)) ELSE '-1403086783' COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((NULL)%(vt0.c1))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((0.774463059728915)*(vt0.c0)) ELSE '-1403086783' COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL)%(vt0.c1))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((0.774463059728915)*(vt0.c0)) ELSE '-1403086783' COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((NULL)%(vt0.c1))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((0.774463059728915)*(vt0.c0)) ELSE '-1403086783' COLLATE RTRIM END);
SELECT COUNT(*) FROM t0, t2 WHERE (CASE WHEN ((((t2.c2)OR(t2.c2)))OR(t0.c0)) THEN (((t2.c0)) NOT BETWEEN ((t2.c1)) AND ((t0.c0))) ELSE (((t2.c2))>=((x'7ba6'))) END) ORDER BY ((TRIM(t2.c2, t2.c1))>>(((t0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t2.c2)OR(t2.c2)))OR(t0.c0)) THEN (((t2.c0)) NOT BETWEEN ((t2.c1)) AND ((t0.c0))) ELSE (((t2.c2))>=((x'7ba6'))) END) IS TRUE)  as count FROM t0, t2 ORDER BY ((TRIM(t2.c2, t2.c1))>>(((t0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE (CASE WHEN ((((t2.c2)OR(t2.c2)))OR(t0.c0)) THEN (((t2.c0)) NOT BETWEEN ((t2.c1)) AND ((t0.c0))) ELSE (((t2.c2))>=((x'7ba6'))) END) ORDER BY ((TRIM(t2.c2, t2.c1))>>(((t0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t2.c2)OR(t2.c2)))OR(t0.c0)) THEN (((t2.c0)) NOT BETWEEN ((t2.c1)) AND ((t0.c0))) ELSE (((t2.c2))>=((x'7ba6'))) END) IS TRUE)  as count FROM t0, t2 ORDER BY ((TRIM(t2.c2, t2.c1))>>(((t0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE (CASE WHEN ((((t2.c2)OR(t2.c2)))OR(t0.c0)) THEN (((t2.c0)) NOT BETWEEN ((t2.c1)) AND ((t0.c0))) ELSE (((t2.c2))>=((x'7ba6'))) END) ORDER BY ((TRIM(t2.c2, t2.c1))>>(((t0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((json_quote(t0.c0) IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((json_quote(t0.c0) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY NULL);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((json_quote(t0.c0) IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((json_quote(t0.c0) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY NULL);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((json_quote(t0.c0) IN ())) ORDER BY NULL;
SELECT * FROM vt0 WHERE (-1.563408216E9) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((('-1876994222')<<(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))  NULLS LAST, (((((vt0.c0)<<(vt0.c1))))=((((vt0.c0) NOT NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.563408216E9) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((('-1876994222')<<(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))  NULLS LAST, (((((vt0.c0)<<(vt0.c1))))==((((vt0.c0) NOT NULL))))  NULLS LAST);
SELECT * FROM vt0 WHERE (-1.563408216E9) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((('-1876994222')<<(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))  NULLS LAST, (((((vt0.c0)<<(vt0.c1))))=((((vt0.c0) NOT NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.563408216E9) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((('-1876994222')<<(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))  NULLS LAST, (((((vt0.c0)<<(vt0.c1))))==((((vt0.c0) NOT NULL))))  NULLS LAST);
SELECT * FROM vt0 WHERE (-1.563408216E9) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((('-1876994222')<<(vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))  NULLS LAST, (((((vt0.c0)<<(vt0.c1))))=((((vt0.c0) NOT NULL))))  NULLS LAST;
SELECT * FROM t0, vt0, t2 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM t0, vt0, t2);
SELECT * FROM t0, vt0, t2 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM t0, vt0, t2);
SELECT * FROM t0, vt0, t2 WHERE (CAST(x'' AS TEXT));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (((((t2.c1)AND(SQLITE_VERSION())))AND(((t2.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((vt0.c1, 1495191454, vt0.c0, t2.c6, t0.c0)) NOT BETWEEN ((((vt0.c1)>=(t2.c2)), ((vt0.c1) BETWEEN (t2.c0) AND (vt0.c0)), (t2.c6 IN ()), CAST(t0.c0 AS BLOB), UNLIKELY(DISTINCT t0.c0))) AND (('', CASE WHEN t2.c2 THEN t2.c6 END, t2.c1, (t2.c6 IN ()), vt0.c0 COLLATE RTRIM))) ASC, (~ (((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1)AND(SQLITE_VERSION())))AND(((t2.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM t0, t2, vt0 NOT INDEXED ORDER BY (((vt0.c1, 1495191454, vt0.c0, t2.c6, t0.c0)) NOT BETWEEN ((((vt0.c1)>=(t2.c2)), ((vt0.c1) BETWEEN (t2.c0) AND (vt0.c0)), (t2.c6 IN ()), CAST(t0.c0 AS BLOB), UNLIKELY(DISTINCT t0.c0))) AND (('', CASE WHEN t2.c2 THEN t2.c6 END, t2.c1, (t2.c6 IN ()), vt0.c0 COLLATE RTRIM))) ASC, (~ (((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (((((t2.c1)AND(SQLITE_VERSION())))AND(((t2.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((vt0.c1, 1495191454, vt0.c0, t2.c6, t0.c0)) NOT BETWEEN ((((vt0.c1)>=(t2.c2)), ((vt0.c1) BETWEEN (t2.c0) AND (vt0.c0)), (t2.c6 IN ()), CAST(t0.c0 AS BLOB), UNLIKELY(DISTINCT t0.c0))) AND (('', CASE WHEN t2.c2 THEN t2.c6 END, t2.c1, (t2.c6 IN ()), vt0.c0 COLLATE RTRIM))) ASC, (~ (((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1)AND(SQLITE_VERSION())))AND(((t2.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM t0, t2, vt0 NOT INDEXED ORDER BY (((vt0.c1, 1495191454, vt0.c0, t2.c6, t0.c0)) NOT BETWEEN ((((vt0.c1)>=(t2.c2)), ((vt0.c1) BETWEEN (t2.c0) AND (vt0.c0)), (t2.c6 IN ()), CAST(t0.c0 AS BLOB), UNLIKELY(DISTINCT t0.c0))) AND (('', CASE WHEN t2.c2 THEN t2.c6 END, t2.c1, (t2.c6 IN ()), vt0.c0 COLLATE RTRIM))) ASC, (~ (((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, t2, vt0 WHERE (((((t2.c1)AND(SQLITE_VERSION())))AND(((t2.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((vt0.c1, 1495191454, vt0.c0, t2.c6, t0.c0)) NOT BETWEEN ((((vt0.c1)>=(t2.c2)), ((vt0.c1) BETWEEN (t2.c0) AND (vt0.c0)), (t2.c6 IN ()), CAST(t0.c0 AS BLOB), UNLIKELY(DISTINCT t0.c0))) AND (('', CASE WHEN t2.c2 THEN t2.c6 END, t2.c1, (t2.c6 IN ()), vt0.c0 COLLATE RTRIM))) ASC, (~ (((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
