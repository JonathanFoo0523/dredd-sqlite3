-- Time: 2024/06/09 14:51:49
-- Database: database97
-- Database version: 3.40.0
-- seed value: 3376609697
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT ); -- 1ms;
PRAGMA main.threads; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (''); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '705114184 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.22927526729578507); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-1227364548); -- 0ms;
UPDATE OR IGNORE t0 SET c0='1133461072'; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER INSERT ON t0 WHEN (((t0.c0 IN ())) NOT BETWEEN (TRIM(t0.c0)) AND (CAST(t0.c0 AS NUMERIC))) BEGIN DELETE FROM t0;DELETE FROM t0;END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.22927526729578507), (NULL), (0.23343174572565217); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('-1227364548'), (-1.227364548E9), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (1.133461072E9), (x'5af3'), (''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x'9360'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'7608'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('0.22927526729578507'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''), (x'a72b'), (0.9681433904806065); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0xffffffffc60acc5d); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.4084224546559275); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (705114184); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (0.9681433904806065), ('705114184'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('V8'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x'1770'), ('vk'), (x'8afe'); -- 2ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('k\n'), ('KB풋|h!	'), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('C&'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL) ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''), (NULL), (NULL), (0.23343174572565217), (0.4084224546559275); -- 2ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.22927526729578507), (x''), (0.9681433904806065); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x''), (x''), (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.6412199813516538), (x'24be'), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('-915982287'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (761120891), (0.6714033395926907), ('0.22927526729578507'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.809877391424101); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0x1c6bdf16), (0.6540941463984172), (0.6248429815376253), ('761120891'), (0.014477037030689366); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (x''), ('-972370851'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x'c439'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'4f36'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.2867122500139023), (0.6347528322236129), ('1133461072'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.12782227944440971); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('l&3|') ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL), (1.133461072E9), ('h'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x'fdfe'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (7.61120891E8); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-941484993); -- 1ms;
INSERT OR FAIL INTO t0 VALUES ('-954805109'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (']FOD7t'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x'990f'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (-9.41484993E8); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (705114184), ('6start of day,&'), ('476831510'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0X438f3e50); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.4119426955701314); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0xffffffffc60acc5d), (NULL), (x''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (-1.227364548E9); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), ('-972370851'), (-9.54805109E8); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.4119426955701314), ('705114184'), (-9.72370851E8), (x''), (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.9544008458155692), (''), (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.646919287360675); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), (NULL), (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.7583124415829426); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 2ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), (-1006445334), ('U9,A-R졻'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('-915982287'), (0.8709483160032574), (-1768399281); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('?~*J4'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1488757337'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (418597801), (0.5681216719984632), (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('T俫'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.6104727048568293); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''), ('-653911894'), ('-915982287'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.16641803693988821), (NULL), (''), (NULL), (0xffffffffc7e2143f); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('gZpBOAV['); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'c377'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (NULL), (0.49411326967567437), (x''), ('-1875118766'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (0.9480407958156898), (x''); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x'0cca'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0xffffffff96985e4f); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('476831510'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('k(/9GOk'), (0.7422522308710502), (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (836181445); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('512349069'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (476831510); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('D>~k'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.9319283304738125); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0Xffffffffc716d48b); -- 1ms;
INSERT OR ABORT INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('C&'), (NULL), ('A'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (5.12349069E8), ('0.014477037030689366'), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'230f'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('476831510'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.5758553247565351), (8.36181445E8), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.14692100099115857), (x'30f09f7e'), ('-2012034734'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''), (0.3287767470047691), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''), (NULL), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.3287767470047691); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('0.2867122500139023'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), ('1143648714'), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('&'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL), (x''), (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1156482942'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('302993387'), (0.7583124415829426), (0.4452706342300988); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 1ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.9119908671907393), (0.2987099522174941), ('6start of day,&'), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-409736630'), (NULL), (''), (-1227364548), (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.4960947384025505); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('\n>U)K'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x'2345'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('yc#/V/w<'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('TsO#d*뇊%'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.15426497792268046); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL), (x''), ('Z<'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0xffffffffb6d7e73c); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0.2987099522174941); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.21180959465305282); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (1243393962), (0.7940358492129896), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ((((IFNULL(x'', 0.7684487999742319)))=((CAST(0.632478249088113 AS REAL))))); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ((((0.9544008458155692))!=((NULL))) COLLATE BINARY), (x'ceb7'), ('90090021'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('0]Hh%fYZ'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (4.18597801E8), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (244747350), (x'4bf7'); -- 1ms;
INSERT OR REPLACE INTO t0 VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (-2.012034734E9), (0.16641803693988821), (''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('0.7684487999742319'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.4960947384025505); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('xo'), (NULL), ('0.014477037030689366'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (476831510), (''), (NULL), (NULL), (0.8417764710241118); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1062902241'); -- 1ms;
INSERT OR REPLACE INTO t0(c0) VALUES (-1127833962), (x''), ('0.014477037030689366'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.22927526729578507); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('|H\re'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('0]hh%fyz'), (1.133461072E9), ('''<-1598281632756294658--2176619561282735627:5144874792743551873:311 157:34T-19128455570098519:1139991174729382756:&G'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('-409736630'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (-9.54805109E8); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('\A>'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('D>~k'), (0.014936444271761773), (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.9111435874131685), (0x2241df52), (0x3b53f1d9); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.8636254579267717); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL), (x''), ('E<'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('195094918'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0Xffffffffbcc69e96); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (7.05114184E8); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (0.47384483296844937), (0.5322555604358379); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('}n}\n'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.4687359348894965); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.9411357114429831), ('&m7.'), ('-653911894'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x'b283'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1744679547'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'8b3e'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.03181201687644142); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (''); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (0.6197939773554615), ('Fn(qᢪ'), (x'3294'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x'0627'), (253034613), (0.037247248831503876); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-915982287'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('㨗'), ('-1768399281'), ('1186425523'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.15426497792268046); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('!t\n*ld<{O'), (0.6197939773554615), ('Z)'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('ᢪ꺐BL]ZU'), (NULL), (x''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (''), ('-1875118766'), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (x'7dd8'), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('1488757337'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.06450903403353137); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.8226242483767169), (NULL), ('-938095006'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL) ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.502406875731783); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ((NOT ((('0.9411357114429831')>(0.07774024874463903))))), (0Xffffffffbb117882), (''), ('+	'), (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0X6c940c87); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('q䈪gᘆ'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.632478249088113); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0Xffffffff8f9f373e) ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.04668318355270307); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.037247248831503876); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL), ('-307901408'), ('-1850678238'), (1325756633), ('-1850678238'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.6670537863643308), ('CG&iDD'), (0.27066696500290355); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-307901408'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (''), (0.13426469162890042), ('Xo'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('0.8417764710241118'), (-513362199), (0.6836956410926541); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('388643351'), (NULL), (0.38991118012385606); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('889994997'); -- 1ms;
INSERT OR ABORT INTO t0 VALUES (x''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.6679651078086744); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''), (''), ('-938095006'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.3287767470047691); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (0.14692100099115857), ('-1885391042'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x''), (x''), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.8636254579267717); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('-528519103'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('-2120550968'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (1591573617); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0xffffffffe210f364), ('-1062902241'), (-3.07901408E8); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('/LZ/O&'), (4.7683151E8), (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (-927792857); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('382118815'), (NULL), (NULL), (0.809877391424101), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.6451393128728267), (0.2655722055908638), ('-957707257'), (x''), ('-972370851'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.6540941463984172), (0.8121332018519243), ('0.2655722055908638'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.4405722469447749), (NULL), (NULL), (NULL), (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.8463559186815421), ('q䈪gᘆ'), (x''), (0.22927526729578507), (0xffffffffbcc69e96); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.5322555604358379), (NULL), (-1212672506); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (''), (-298459887), (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.9119908671907393); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-6.53911894E8); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('1854048029'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.6679651078086744), (0.4017284475217464), (x''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.28421322672392135), (x''), (0.008395203786178307); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'6eeb'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.9411357114429831); -- 1ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (-1212672506), ('0.23343174572565217'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('C냽'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.07467622086928216); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('1243393962'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('fUy5G&㯯'), (x'b4c9'), (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('*\nZ.'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), (0.08812427676631862), (1.133461072E9), (NULL), (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1143648714'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.23016581028437422); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (CAST(((x'537b')/(NULL)) AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), (0.8693810309488891), (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('G<'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('90090021'), (0.30513528309561855), ('0.08812427676631862'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL), (x''), (0.911918079866126); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-1212672506'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('833821752'), (0.14142472556050523), (x''); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0X3dbc81b5); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('hP7'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (1.591573617E9); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL), (x''), (0Xfffffffff372919f); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-653911894'), (0.4294541601041143), (-150386037); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.03181201687644142); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.38769659609828155); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('-954805109'), ('7Q'), ('-938095006'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.630960016321562), ('>_eQ'), (''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.4728091091613832), (5.12349069E8), ('0.6104727048568293'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''), (x'ff4e'), (0X4a1cafaa), (NULL), (0.5681216719984632); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('+	'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.9544008458155692), (0.042969139223481445), (0.5249294184358763); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('/hp^c)'), (x'df64'), ('0.22927526729578507'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('EkC0s\rgr'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''), ('889994997'), (0.8583720465232452); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.7867985191156076); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1286437324'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''), (NULL), (-791143821); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL) ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('476831510'), (x'47a5'), (''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL), (x'61d9'), (1640776216); -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.6718675533133233), (0.9720513342832607), (0.9201094840073384); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-1.50386037E8); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.723317479713003); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''), (1629727238), (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.7998266047950218); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('rM'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (''), ('wU|'), ('-1736064155'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1875118766'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('p<'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (1801969954); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''), ('T'), (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''), (0Xffffffffe63fc6e1), (0.589058850573042); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'f577'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0Xffffffffe7542cc2); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL), (NULL), (0.14142472556050523); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('fUy5G&㯯'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.8442547433947764); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('90'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('GZPBOAV['); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('916741741'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.4109177463310457), (1e500), (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (''), ('-616765516'), (0.31526992201040727); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.743234749343862); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('388643351'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('U'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('1113124865'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (NULL), (x''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''), (0xffffffff819af5c8), (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (-1.156482942E9), (-1106111974), (-280965888); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('-1127833962'), (476831510), (0.8659963539739036), (x''), (0.4017284475217464); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''), (''), ('-582790234'), ('683615601'), (''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0Xffffffffc48aa835); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('916741741'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('lG*'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1298479092'), (NULL), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (873254178), (-972370851); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('jNh.	(*'), ('1621758186'), ('1325756633'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('0.16641803693988821'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.8803914157422627), (0.777532169325278), (x'3b31'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-831141165'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('%gPK1+'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (8.89994997E8), ('-2078738996'), ('-831141165'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-529129493), ('-528519103'), ('0.03181201687644142'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (841388245); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('A'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('[O,'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (1203770931); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('sX࿁JI6Jv'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (CASE WHEN ((((((((1640776216)AND(-1590857793)))OR(x'')))OR(x'')))AND('h?')) THEN x'dfb2' COLLATE BINARY ELSE CASE WHEN 0X497c27fd THEN '0A0T,#' END END); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (NULL), (0.36413741802055544); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.37630897906716887), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1243393962'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('512349069'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0X1c6bdf16); -- 1ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.33730418316105537); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (''), (0X5737408d), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0Xffffffffbe7f9e6b); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('51j}Tಇ'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.5758553247565351); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (x'35f8'), ('N'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.8659963539739036); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (2058827219); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-605418406'), (x''), ('-2243318'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x'abe8') ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('1128606643'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'5da6070a'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('1860546192'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('Y7'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (0x551a14f4), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-972370851'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('-595323557'), (0.3762842970470087), ('883492755'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.7569759142485254), (0.7766767443902302), (0.4087310266787896); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.777532169325278), (-1590857793), (x''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''), (0.27310869739662413), (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (''), ('-954805109'), (0.0975232124552513); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.727747645517352), ('-972370851'), (x'5318'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('.'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.302661190627866); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('z)'); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('['); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x'') ON CONFLICT(c0) DO UPDATE SET c0=''; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (''), (x''), ('94957578'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''), (x''), (0.6248429815376253); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (244747350), (x'b4f5'), (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0X503c51e9); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('h'), (''), ('<'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.08516479093418428); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'66ff'), (NULL), (0.24880181180301775); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.13151298188805993); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'a031'), (x''), (',HVQ^'), (x''), (NULL), (x''), ('1'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (-6.16765516E8), (NULL), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('NeცRx~'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x'7f49'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.38991118012385606); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-1.170608752E9); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'66cc2d80'), (NULL), (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0X1c51f4f0); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL), (''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0.4084224546559275); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (-2.80965888E8); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0Xffffffff9cd7ecf8), ('-1667558646'), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'b06f'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('h\r 썥W6'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'1268'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0xffffffffdb3ce7b4), (0.888558208195685), (0X6ee5ae90); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.6381240027766295), (CAST(CAST(NULL AS REAL) AS REAL)), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'9c47'), (x'1f5e'), (x'deb1'), (-1977716006), ('-997545931'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.21180959465305282); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (NULL), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.3682636810293053); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('279643379'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x''), (0.7631309339891389), (NULL), (x'd01d'), (0X5737408d); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (NULL), ('922395588'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('1591573617'), (''), ('0.07467622086928216'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('\nZ'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('x'), (NULL), (0X35124165); -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x'6330'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0.38991118012385606); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), (0.39947695195168553), ('0.9411357114429831'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('-616765516'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('2*ZMUVC'), (-1664253604), (0.5701456644679783); -- 1ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.4583493722662124); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('.'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('90090021'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.8442547433947764), (NULL), (''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (0Xffffffffd7cf70b2), (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (x'38b3'), ('-1170608752'), (NULL), (NULL), (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (1.035764149E9); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('N9Pg&졻'), (NULL), (1621758186); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.4774993830432729), ('e㈫3>\nv#'), (NULL); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.9319283304738125), (NULL), (x'ec40d04d'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'3825'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0x71c3fb16); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-823710359'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'b7ab'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (-1.127833962E9), (-7.91143821E8), (0.012178017761126148); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-280965888'), ('870714'), (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.31793371080397115), (''), (''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.27066696500290355); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), (0Xffffffff99e65a1a), ('1697070467'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('.t'), (''), (0X58c4709f), ('YyB歗v}~'), (0.27783659112058756); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('1298479092'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (8.33821752E8); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''), (NULL), (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (1243393962); -- 1ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0.7876175316870181); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.6035024461367691); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (9.08833021E8); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('0.014477037030689366'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (-1236976049); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (1.243393962E9); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('{MDwk-0'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'ae8f'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.20483363342563565), (0.7706467729187059), ('*0u17ݧ'), ('0.6451393128728267'), (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('2b'), ('90090021'), (0.1549154896325331); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0.7998266047950218), (-1303780839), (0.6412199813516538); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.08721530464673943); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0X26c66651); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('1987482100'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL), (0Xffffffff9670e449), (0.6793081967401995); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-409736630'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-885243058'), (NULL), ('410505457'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x'842f'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'3fdc'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('754320509'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.6451393128728267); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (x''), (0.7044495137782869); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (NULL), (0.723317479713003); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.3596148584537573); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('%i7FD%0h'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.9681433904806065); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('O#'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (1821641863), (NULL), (NULL), (0.589058850573042), (']b'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.1541956407542121); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('0.6347528322236129'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), (x''), (NULL); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (1143648714); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.6167200553736986); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), (NULL), ('^NQ'), (0.2726700608803211), (0.53408922181693); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL), (0x22caa3f), (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (x''), (NULL) ON CONFLICT(c0) DO UPDATE SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.8464875844721949), (x'5d44'), ('K/'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''), (''), (x''); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.884167986704896), ('0.6104727048568293'), (NULL), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1143648714'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('-210595425'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('u9,a-r졻'), (0x607895a9), (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (-6.05418406E8); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x''), ('-801563335'), ('3᤺-''Tr'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x'7155'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL), (x''), (996526613); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), ('2058827219'), (0.27066696500290355); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'9010'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('Oj'), (0.042969139223481445), ('}Xc#8-'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.33730418316105537); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x'01a5910a'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.4017284475217464); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''), (''), ('195094918'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), (NULL), (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (NULL), ('-834093624'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), ('-2040940916'), (x''); -- 1ms;
INSERT OR FAIL INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('1664380115'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.5632799022922498); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('{%'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.3382196903252086); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-1137687519'), (NULL), (0.0); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-653911894'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'0282'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x''), (0.4457418500667426), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (1.035764149E9), (''), (0.07774024874463903); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (4.18597801E8), (x''), ('418597801'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-1.170608752E9), (0.36571355244601245), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (1.035764149E9); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0Xffffffffceb9af0b); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-439358958'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('0.9119908671907393'), (NULL), ('833821752'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.7026410098529915), (NULL), (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('C4'), (''), (0.7446586540597184); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (0.4109177463310457), (x''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x''), (x''), ('-644174785'), ('Iu'), (x'1b55'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.8169800339637177), (x''), (0.6096839916572291); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL), ('\rQ4w'), (0.12787188564967944); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.4120241312731763); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.24524656251379573); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (-7.91143821E8); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.17806013101430307); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1036397233'), (x''), (x'') ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-1668630739'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('1100890603'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'81ba'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-2.80965888E8); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('|pg?%.dJk'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('8F䕹*vB'); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('382118815'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (7.61120891E8); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (0.042969139223481445), (0.5902818269321005); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x''), ('-1181932924'), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x'1dcb'), (0.9020876677921339), (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (''), ('%s'), ('WU'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x'27da'), (0.27066696500290355), (-234204877); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.571870683108418); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.8176215222851253), (''), (0.2856886452769897); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), ('1178961146'), (0.8894173894189649); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0xffffffffe63fc6e1); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ((((((x'af31170f'))=(('M<觍YIO]8'))))IS NOT(((((NULL)OR(NULL)))AND(x''))))); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0xffffffffb6d7e73c), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (253034613); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.008900645405499508), (NULL), ('qX> 21b\n'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x'372a'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.4060031333711318); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.9756793641105924); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL); -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.7515226350653579); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('t>Pt뇯'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x'3507'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''), (1.325756633E9), (''); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('i똭4h	'), (NULL), (NULL), (x'0d57'), (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-1768399281'), (NULL), (x'929ce8fd'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (-761320840); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('*i'), (NULL), ('zV'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.43774956190159275); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-1384129783'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.8626453533993624), ('qXrkhoursi^'), ('NeცRx~'), (NULL), ('Ύ,dH{S'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0x37685ecb); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (x''), (0X2df89ea6) ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.37082444099917156); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.926130949371687), (0.22767924041928023), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.7113623495931503); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.41320480898985346), (NULL), ('+E'), (x'9ded'), ('FALSE'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), (x''), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('1786160086'); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.36987937739564214); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('0.6836956410926541'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (',hvq^'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.14795503327098736), (NULL), (0.7378691665836843); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('889994997'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-5.95323557E8); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1651159002'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x'e8d8'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('74428239'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.0776212682870061); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-476187987'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (x''), (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.42708811654521006); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('1773847251'), ('2nX'), ('-1322455806'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('*8j!'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0X438f3e50); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ((((NULL IN ()))*((((0.16543133568203305, x'595f', NULL, '889994997', 0.9671599980143175))=((1.143648714E9, 0.4017284475217464, -442775535, x'9b53', x'')))))); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-178327345); -- 1ms;
INSERT OR FAIL INTO t0 VALUES (''), ('2058827219'), (''); -- 1ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.7880449064289284), (x'edc0'), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-1080286044); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (NULL), (1.243393962E9); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('q䈪gᘆ'), (x'684c'), ('-605418406'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0Xffffffff91b0e422); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('h<'), (''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.3333412924009279); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('_DkFg^'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x'0560'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (',c9k줧1eX'), (0.777532169325278), (0.008985499547760512); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), ('378551006'), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.37749596167782307); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'a70a'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.32435646278592034), (0.8836426477615373), (0.27762318476830306); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'69e4'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('94957578'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('0.06450903403353137'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('syLvmw㥪ᩳ'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('1325756633'), (x''), ('67<d'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.08189937448740314), (x'31c6'), (0.38769659609828155); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (833821752); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('0.49411326967567437'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-9.97545931E8); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.8645136156762397); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (0.7336753066872199), (0xffffffffaaabc8e8); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (''), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('1629727238'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0xffffffffca51615a), (NULL), (0.17388324084434692); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('1078900579'), (0xffffffffcf7a8ec9), ('-86506522'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('1+'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-853928831'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''), (0.49695528985490234), (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (NULL), ('lt'), (NULL), (0xffffffffc7e2143f); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (2042242478); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-1.7976931348623157E308); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''), (NULL), (-1982233218); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('W噝#V*5KJ'), (x'1d96'), (x'f3f5'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('-1483758736'), (0.923000290569546), (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('鋇{}x'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.19168028650016677), (NULL), (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.6778212799767864); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'150c'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0X1a3b42c2), ('447412909'), (x''); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''), (0.05400876027659851), (x'9e4c'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.07586229749709483), (x''), (0.42078425057492097); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'a0cb'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0.4017066452381799), (''), ('254713381'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (NULL), (NULL), (x'167e'), (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('''r'), ('uK빞'), ('y	'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (0x2241df52), (0.014936444271761773); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.31747670890000557), (x'3509'), (0.5133672888513581); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('1621758186'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (0.5389700229357416), (x''); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('-1590857793'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x'2e3c'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('-612365643'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('-349741994'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.21423406482090512), (0.708396236204219), (IFNULL('476831510', '2b') COLLATE RTRIM); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL), ('犟q4Ή'), ('1860546192'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0Xfffffffffff96355); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('*z␬rk'), ('1347534021'), (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (1.232873469E9); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 1ms;
INSERT OR FAIL INTO t0 VALUES (0.05736155504283458); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('ZoBH2'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('705114184'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x'be4a'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-A'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('jd'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('#X-'), (0.9100329191526936), (0.443740173104882); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL), ('g\nTHLd'), ('-513362199'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL), (''), (0.0817871804819984); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-972370851'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('ja'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('gzpboav['), ('now'), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.4353536676932601); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1163867367'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('0') ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'08b1'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.06189046553620814), (0.5904832943051747), ('-243246149'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (-932852028); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (-9.38095006E8); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.7648698498514275), ('Bfe&'), (0.5402863776610235); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('|E'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (0.8630366519942637), ('302993387'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.727838849016728), (NULL), (0.24869692567019996); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.08204864163387549), (1540737022), (x'03e3adfb'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x''), (''), (x'b5af'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('0.4084224546559275'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL), (0Xffffffffd1fd5b25), ('-957707257'); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (0.8760676492665614); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''), (NULL), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), (NULL), (0.8659963539739036); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.7067703685567986), ('593497082'), (x'a39f'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x'5b54'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), ('0.723317479713003'), ('1145211253'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.7915844167626891); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0xffffffffab8ab32d), (0.6540941463984172), (0x2758edb4); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'0aa6'), (0.9493091401765681), (x''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), (x''), (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('BT'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x'559112fd'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.21929495330686655); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''); -- 1ms;
INSERT OR FAIL INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (CAST((x'' IN ()) AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-2.10595425E8); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('Dn'), (-1.768399281E9), (0.6540941463984172); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('c.0'), ('94957578'), (''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.8309533001752129); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (1039102118); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ((((((NULL) NOT BETWEEN (0.15426497792268046) AND ('')), x'46d44d0b' COLLATE NOCASE, ((x'')<>(0X4258f001)), CAST(x'' AS INTEGER), CASE WHEN x'e680' THEN NULL ELSE 0.6828786158288255 END))>=(((('1243393962') NOT BETWEEN (0.2617422627921845) AND (0Xffffffffdc84155b)), ('' IN ()), '-1927319551' COLLATE NOCASE, (((('y8웡MYP1|M')OR(x'')))AND(x'')), ((x'') NOTNULL))))); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.3693722563803318), (0.05011205682532449), (0.1632593884400888), ('\u*'), ('a_~}'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('1814240069'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.23529802468385785), ('Vo<秌\nm>^슀'), ('2133800008'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x''), (NULL), (x''), ('-1231166321'), (0.5486983369344628); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.8968248763262944), (x'dcc7'), (0.9480407958156898); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (0.6545908401928845), (x'2a53'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (-528944417), (x'33721ee6'), ('R+4}'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.39793550136117295), (NULL), (''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'2131'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('-1470686314'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (58049061); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'6e7b'), ('0.6412199813516538'), (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (216913004), (705114184), (x''); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.02889140609002505); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x'4798'); -- 1ms;
INSERT OR ABORT INTO t0 VALUES (0.18974352076165535), (0.593251483068396), (0.9611383615538344); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.7237751158219291); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'8ba4'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.233079811649068); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (NULL), (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('.Kx~২{acY'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.36413741802055544); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1006445334'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.07467622086928216); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.44146578432457173); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), ('1621758186'), (x'6350'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x'0608f7c7'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (''); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (NULL), ('1103190530'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('KG⮳'), (x''), (x'ac0c'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('0.12782227944440971'), (NULL), (1161550773); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (-513362199), (NULL), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.554439239036226), (x''), (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (0.16184673524008364), (''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (1.133461072E9), (0Xffffffffd7c0c076), (0.28102373650606516), (912558247), (x'4071'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.8821956494736416); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.6836956410926541) ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''), (0.9344797196670461), ('-1384988092'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (1162571039); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0X60cd4623), (x''), (x'a506'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1156482942'), ('-915982287'), (0.43902926807102405); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (2085262695), (NULL), (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('1444789030'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('*6'), (0.8709483160032574), ('0.4960947384025505'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0xffffffffa9e6fb8e); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (CAST(CASE WHEN x'' THEN x'' WHEN '-972370851' THEN NULL WHEN '' THEN '-1993005191' WHEN '-1601972814' THEN 'N' WHEN NULL THEN 0Xffffffff98801fc1 END AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'5663'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.5460978636416226); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('jI{b!\!'), (0.0417456171850199), ('1888409696'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0X79e48821); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-2120550968'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('930450947'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), ('#\n草<'), ('574742354'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (']&4~~AUNO'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('512349069'), (''), (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'2118'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), ('c)'), ('-941484993'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (1.143648714E9), (0.42259832724555424), (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.14692100099115857); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('-653911894'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('0.6197939773554615'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL), ('>A{c'), ('n6,'); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (934519448), ('Bx'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.38328837975181085), (0.7591869142437024), ('Q&C#'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('{'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL), (0.9137981689115076), (0.9642001371742052); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (x''), (0.6347528322236129); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.630960016321562); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (-385419665), (442507358), (-6.05418406E8); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.550872578969924), (-1.850678238E9), (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.7508556966985582), ('873254178'), (0.5322555604358379); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('C.*t<~N'), (x'fe18'), (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''), ('1388959690'), (0X393037ad); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0xffffffffb6d7e73c), (x''), ('{%'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1298479092'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1372933247'), ('-927792857'), (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL), (0.14708456382528612), (x'dfb8ea80'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0xfffffffff7094a8b); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''), (''), (0X578898e7); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('-818062155'); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (''); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.8226242483767169), (NULL), (''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.632478249088113), (0xffffffff8e7cb21a), (0Xffffffffc1d7c505); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0x497c27fd); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('d>+'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.8523492974468264), (NULL), ('[O,'), (0.7031914024176865), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 1ms;
INSERT OR ABORT INTO t0(c0) VALUES (0xffffffffe194e7e5); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.07467622086928216); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'cfe8'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('0.06450903403353137'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-957707257'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x''), (NULL), (0.32371540813216126); -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (-2.012034734E9), (NULL), (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x'2ca15906'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('Z()h'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-6.53911894E8); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('-1098932629'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.9133525518327623); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('6큃'); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (x'7fb5'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('E	'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (1e500), (x'4f02'), (''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (x''), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (523644404); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('>_eq'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (((CAST('' AS REAL)) BETWEEN (HEX(DISTINCT NULL)) AND ((~ (90090021))))), ('833821752'), (0.8036714977737516); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.8374262820000908); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (1.591573617E9), (NULL), (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x'c5b5'); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (NULL), (0.8504507516791047), ('1527567795'), (-1127833962), ('LSA'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''); -- 1ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('1069277970'), (0.9480407958156898), (0X60aa10ea); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('1298479092'), (''), ('-443445800'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.16363074710582448); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0Xfffffffff20a5506); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.18579228676990223); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0xffffffff91b0e422); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('-1736064155'), ('-1703409112'), (x''), (''), (0X0); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.6670537863643308), (''), (x'8a86'), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0x2e28a8e4); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('1232873469'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'b001'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (NULL), (x'4f28'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('1186425523'), ('1386741892'), (x'db26378a'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0xf150075), (x''), (''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), ('244747350'), (-9.72370851E8); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'b961'), ('-202591844'), ('0.8226242483767169'); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(1990029279); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2138772488); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE '0.9201094840073384'  WHEN x'335f' THEN x'f69f' END))<=((((((((((0.9720513342832607)AND('rZ▧[4W')))AND('1591573617')))AND(0xffffffffbcc69e96)))AND('{CDY'))))); -- 0ms;
ALTER TABLE t0 ADD COLUMN c18 REAL; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c18, c18)=(0.5892605363052497, '0.7583124415829426', '6Aᢪwlw銩'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'2bff', c0='0.7998266047950218'; -- 2ms;
INSERT INTO vt0(vt0) VALUES('merge=382118815,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '21290'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA short_column_names = true; -- 1ms;
INSERT OR IGNORE INTO t0(c18) VALUES (0.6718675533133233); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES (-432027935, x''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA application_id; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('1958606275'), (''), (1.591573617E9); -- 0ms;
VACUUM temp; -- 0ms;
UPDATE vt0 SET (c1, c1)=(x'1e36', NULL) WHERE (- ('*')); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL, x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(6.83615601E8) WHERE json(((t0.c18)IS NOT(t0.c18))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO t0(c18) VALUES ('T'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, 'r'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c18 TO c32; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c18 TO c8; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c20; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ALTER TABLE t0 ADD COLUMN c62 INTEGER CHECK ( CAST(t0.c0 AS INTEGER)); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t0 ADD COLUMN c61 INTEGER; -- 1ms;
PRAGMA temp.stats; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c61) VALUES ('*[ ', 0x37edc90b); -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES ('4e'), (0.09034742806867402), (0.5150287011109526), (x'e33a'), (0.26626136844016035), (0Xffffffffd0d81a73), ('7DE<F)qb}'); -- 2ms;
UPDATE OR IGNORE t0 SET (c61, c61)=(x'9b26', '-1590857793'); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=''; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE t0 SET (c0, c18, c0)=(NULL, '-721594671', '419814404'); -- 0ms;
CREATE INDEX i14 ON t0(((json_array_length(c0, c18))OR(((c61) NOT BETWEEN (c0) AND (c0)))) COLLATE RTRIM ASC,((((COALESCE(DISTINCT c18, c61))OR(((c0)>>(c61)))))OR(x'4f17')),((CASE c61  WHEN c0 THEN c18 END)/((~ (c61)))) COLLATE NOCASE) WHERE (((c61 IN (c0, c0))) NOT BETWEEN (((c0) NOTNULL)) AND ((c0 IN ()))); -- 0ms;
CREATE INDEX i80 ON t0(((((((((json_valid(c0))OR((((c0)) NOT BETWEEN ((c61)) AND ((c18))))))OR(((((((((c0)AND(c18)))OR(c18)))OR(c18)))OR(c18)))))AND(((c0)GLOB(c0)))))AND(c0)),(((c0)) NOT BETWEEN ((((((c61)AND(c18)))OR(c18)))) AND ((((c0) NOT NULL)))),(((c0) ISNULL) IN ()) ASC); -- 0ms;
INSERT OR IGNORE INTO t0(c18) VALUES (0.922141868502746), (NULL), (0xffffffff92183c45); -- 0ms;
INSERT OR FAIL INTO t0(c18) VALUES (0Xffffffff947e5778), (NULL), (0.46382475678294977); -- 0ms;
INSERT OR IGNORE INTO t0(c61, c18) VALUES (0.2092634031269176, NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('u9,a-r졻', x''); -- 1ms;
COMMIT; -- 1ms;
PRAGMA busy_timeout; -- 0ms;
PRAGMA temp.mmap_size = 9200360985354131389; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t0 ADD COLUMN c82 BLOB; -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t0 ADD COLUMN c58 TEXT; -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES ('-413913918', 0.672737256451372), (NULL, -831141165), (0.9933253669641571, NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 586398388); -- 0ms;
UPDATE t0 SET (c82)=('L47F9	gr<'); -- 0ms;
UPDATE OR ABORT vt0 SET (c1, c0)=(NULL, '-653911894'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '15028'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR FAIL INTO vt0(c0, c1) VALUES (1110082756, NULL), ('1022604088', 20891950), (0.7669773573413378, CAST(json_array(0.8417764710241118, x'') AS TEXT)); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x'', NULL, 388643351, 0.5249294184358763, 0.5758553247565351), (x'cccd', x'', x'', 'L', x''), ('+x', 0.4728091091613832, NULL, '0.9480407958156898', -937673279); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES (-9.57707257E8, 0.5595207809557147), ('1143648714', NULL), (NULL, NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 2ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c61 TO c55; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c61 TO c51; -- 0ms;
ALTER TABLE t0 ADD COLUMN c23 INTEGER; -- 1ms;
UPDATE t0 SET (c23)=('-915982287') WHERE (- (UPPER(DISTINCT t0.c18))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29646'); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL, '-915982287'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
CREATE INDEX IF NOT EXISTS i26 ON t0(CASE ((c61) BETWEEN (c0) AND (c58))  WHEN (((c58)) NOT BETWEEN ((c61)) AND ((c23))) THEN CAST(c61 AS TEXT) WHEN ((((c82)OR(c58)))OR(c0)) THEN ((c61) ISNULL) WHEN ((c58) IS FALSE) THEN ((((c82)OR(c23)))OR(c18)) END DESC,((c0)==(c18)) COLLATE BINARY COLLATE NOCASE DESC,c0 COLLATE NOCASE,((((c23 IN ())))==((c23 COLLATE RTRIM))),MAX(load_extension(c18), ((((c18)OR(c23)))OR(c23))) COLLATE BINARY,((((c23) ISNULL)) NOT NULL) COLLATE BINARY DESC) WHERE (((+ (c58))) IS FALSE); -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i86 ON t0((((((((('')OR(((c58) IS TRUE))))AND((((c61)) NOT BETWEEN ((c82)) AND ((x''))))))OR(CAST(c61 AS BLOB))))AND(((c58) IS FALSE))) COLLATE NOCASE,((rtreenode(c82, c61))!=(0Xffffffffef40cd00)) ASC,CAST(((c0) NOT BETWEEN (x'') AND (c61)) AS BLOB) COLLATE NOCASE ASC,'-1227364548' COLLATE BINARY,((CASE c18  WHEN c0 THEN c18 END)LIKE(((c61) ISNULL))) COLLATE NOCASE,CASE c18  WHEN NULL THEN 0.044682016538624914 ELSE ((((c58)AND(c23)))OR(c0)) END DESC); -- 0ms;
CREATE UNIQUE INDEX i59 ON t0(CAST(((c0)&(c23)) AS REAL) COLLATE BINARY,CASE (- (c82))  WHEN ((c0) IS TRUE) THEN c61 COLLATE NOCASE WHEN x'6d61' THEN CAST('' AS NUMERIC) WHEN ABS(c58) THEN ((c58) NOT BETWEEN (c23) AND (c58)) WHEN TIME(c58, c18, c0) THEN CASE c23  WHEN x'' THEN c58 ELSE c0 END WHEN NULL THEN 0.048689317610945415 END DESC,((((c61) NOT NULL)) NOT BETWEEN (c0) AND (CASE WHEN c0 THEN '-150386037' END)),(((~ (c61)))/(((((c0)OR(c61)))AND('_V')))) ASC,(((c23)) NOT BETWEEN ((c23 COLLATE BINARY)) AND ((((c61)LIKE(c23))))) ASC,((CAST(c0 AS REAL))<(((c61) NOT BETWEEN (c58) AND (c61)))) COLLATE RTRIM ASC) WHERE ((((((((CAST(c23 AS BLOB))AND(((c0) ISNULL))))AND(((((c61)AND(c82)))AND(c18)))))AND((((c61)) NOT BETWEEN ((c0)) AND ((c58))))))AND(CAST(c61 AS TEXT))); -- 0ms;
CREATE INDEX i64 ON t0(((CAST(c23 AS REAL)) NOT BETWEEN (((c61) IS TRUE)) AND (c23)),(((0.1663966890786912 IN ()))||(((c82) IS TRUE))) ASC,(((c23)) NOT BETWEEN ((((((((((c23)AND(c58)))AND(c23)))AND(c23)))AND(c82)))) AND ((CAST('0.9319283304738125' AS BLOB)))) COLLATE RTRIM,0.6679651078086744 ASC,(((+ (c82))) BETWEEN (((0.6379430382995201)>=(c82))) AND (CASE WHEN c0 THEN c58 WHEN c0 THEN c0 WHEN c82 THEN c61 END)) COLLATE BINARY,((NOT (c58)) IN ())); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.80344250519605, 0.3760657156418665, x'52a3', 0.9071932962065727, '-413913918', 0Xffffffffcde7f12e); -- 0ms;
INSERT OR ROLLBACK INTO t0(c58, c18, c0, c61, c23) VALUES (x'', NULL, '{', 'a}dj6''', 'W'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (0.4559256513560782, 1320706007); -- 1ms;
COMMIT; -- 0ms;
VACUUM main; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR REPLACE INTO t0(c61, c18) VALUES (NULL, 0.5926243232663602); -- 0ms;
INSERT OR REPLACE INTO t0(c58, c0, c18, c61) VALUES (x'53da', 0.21652634509724622, '476831510', '1673925135'), ('', '-941484993', 'r.d', x'80fa530d'), ('', NULL, (((((x''))<((NULL))))!=('1298479092')), 0.7751436569506793); -- 0ms;
INSERT OR IGNORE INTO t0(c58) VALUES (1747300134), (''), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c82, c0, c61) VALUES (-1.156482942E9, '0.8803914157422627', NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c23, c58, c0, c18, c82) VALUES (x'eada', '4#J Sr', -2032451609, '-496354497', NULL), (x'', 0.27959521143014265, NULL, '0.06450903403353137', '9HzH\nY{mt'), ('', -1.212672506E9, '', 0.16773714390112127, x''); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'', '.'), (x'', NULL), ('-210595425', x''); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c82 TO c49; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c23 TO c16; -- 0ms;
ALTER TABLE t0 ADD COLUMN c30 INT; -- 0ms;
UPDATE OR IGNORE t0 SET c58='' WHERE '~t'; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.024638229162948555 WHERE '1122980477'; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN t0.c30 THEN vt0.c0 WHEN vt0.c1 THEN t0.c61 WHEN t0.c82 THEN vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c30 THEN vt0.c0 WHEN vt0.c1 THEN t0.c61 WHEN t0.c82 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN t0.c30 THEN vt0.c0 WHEN vt0.c1 THEN t0.c61 WHEN t0.c82 THEN vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c30 THEN vt0.c0 WHEN vt0.c1 THEN t0.c61 WHEN t0.c82 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN t0.c30 THEN vt0.c0 WHEN vt0.c1 THEN t0.c61 WHEN t0.c82 THEN vt0.c0 END) NOTNULL));
SELECT ALL * FROM vt0, t0 WHERE (CASE t0.c23  WHEN (- (NULL)) THEN ((((((((t0.c0)AND(t0.c30)))AND(0X2061b41a)))OR(NULL)))AND(t0.c30)) ELSE 4.7683151E8 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c23  WHEN (- (NULL)) THEN ((((((((t0.c0)AND(t0.c30)))AND(0X2061b41a)))OR(NULL)))AND(t0.c30)) ELSE 4.7683151E8 COLLATE BINARY END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE t0.c23  WHEN (- (NULL)) THEN ((((((((t0.c0)AND(t0.c30)))AND(0X2061b41a)))OR(NULL)))AND(t0.c30)) ELSE 4.7683151E8 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c23  WHEN (- (NULL)) THEN ((((((((t0.c0)AND(t0.c30)))AND(0X2061b41a)))OR(NULL)))AND(t0.c30)) ELSE 4.7683151E8 COLLATE BINARY END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE t0.c23  WHEN (- (NULL)) THEN ((((((((t0.c0)AND(t0.c30)))AND(0X2061b41a)))OR(NULL)))AND(t0.c30)) ELSE 4.7683151E8 COLLATE BINARY END);
SELECT ALL * FROM t0 WHERE ('') ORDER BY CASE WHEN ((t0.c0)OR(t0.c18)) THEN CASE t0.c18  WHEN t0.c30 THEN t0.c0 WHEN t0.c23 THEN '' WHEN t0.c58 THEN 'um+Xoq' ELSE t0.c0 END WHEN CASE t0.c0  WHEN t0.c58 THEN -9.27792857E8 END THEN CASE t0.c18  WHEN NULL THEN t0.c18 ELSE t0.c18 END WHEN ((t0.c30)LIKE('K	')) THEN (t0.c61 IN ()) WHEN ((t0.c58) NOT BETWEEN (t0.c30) AND (t0.c61)) THEN (~ (t0.c61)) WHEN CASE t0.c82  WHEN t0.c82 THEN x'3b56' WHEN t0.c61 THEN t0.c0 WHEN t0.c30 THEN t0.c18 END THEN load_extension(t0.c23) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)OR(t0.c18)) THEN CASE t0.c18  WHEN t0.c30 THEN t0.c0 WHEN t0.c23 THEN '' WHEN t0.c58 THEN 'um+Xoq' ELSE t0.c0 END WHEN CASE t0.c0  WHEN t0.c58 THEN -9.27792857E8 END THEN CASE t0.c18  WHEN NULL THEN t0.c18 ELSE t0.c18 END WHEN ((t0.c30)LIKE('K	')) THEN (t0.c61 IN ()) WHEN ((t0.c58) NOT BETWEEN (t0.c30) AND (t0.c61)) THEN (~ (t0.c61)) WHEN CASE t0.c82  WHEN t0.c82 THEN x'3b56' WHEN t0.c61 THEN t0.c0 WHEN t0.c30 THEN t0.c18 END THEN load_extension(t0.c23) END DESC);
SELECT ALL * FROM t0 WHERE ('') ORDER BY CASE WHEN ((t0.c0)OR(t0.c18)) THEN CASE t0.c18  WHEN t0.c30 THEN t0.c0 WHEN t0.c23 THEN '' WHEN t0.c58 THEN 'um+Xoq' ELSE t0.c0 END WHEN CASE t0.c0  WHEN t0.c58 THEN -9.27792857E8 END THEN CASE t0.c18  WHEN NULL THEN t0.c18 ELSE t0.c18 END WHEN ((t0.c30)LIKE('K	')) THEN (t0.c61 IN ()) WHEN ((t0.c58) NOT BETWEEN (t0.c30) AND (t0.c61)) THEN (~ (t0.c61)) WHEN CASE t0.c82  WHEN t0.c82 THEN x'3b56' WHEN t0.c61 THEN t0.c0 WHEN t0.c30 THEN t0.c18 END THEN load_extension(t0.c23) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)OR(t0.c18)) THEN CASE t0.c18  WHEN t0.c30 THEN t0.c0 WHEN t0.c23 THEN '' WHEN t0.c58 THEN 'um+Xoq' ELSE t0.c0 END WHEN CASE t0.c0  WHEN t0.c58 THEN -9.27792857E8 END THEN CASE t0.c18  WHEN NULL THEN t0.c18 ELSE t0.c18 END WHEN ((t0.c30)LIKE('K	')) THEN (t0.c61 IN ()) WHEN ((t0.c58) NOT BETWEEN (t0.c30) AND (t0.c61)) THEN (~ (t0.c61)) WHEN CASE t0.c82  WHEN t0.c82 THEN x'3b56' WHEN t0.c61 THEN t0.c0 WHEN t0.c30 THEN t0.c18 END THEN load_extension(t0.c23) END DESC);
SELECT ALL * FROM t0 WHERE ('') ORDER BY CASE WHEN ((t0.c0)OR(t0.c18)) THEN CASE t0.c18  WHEN t0.c30 THEN t0.c0 WHEN t0.c23 THEN '' WHEN t0.c58 THEN 'um+Xoq' ELSE t0.c0 END WHEN CASE t0.c0  WHEN t0.c58 THEN -9.27792857E8 END THEN CASE t0.c18  WHEN NULL THEN t0.c18 ELSE t0.c18 END WHEN ((t0.c30)LIKE('K	')) THEN (t0.c61 IN ()) WHEN ((t0.c58) NOT BETWEEN (t0.c30) AND (t0.c61)) THEN (~ (t0.c61)) WHEN CASE t0.c82  WHEN t0.c82 THEN x'3b56' WHEN t0.c61 THEN t0.c0 WHEN t0.c30 THEN t0.c18 END THEN load_extension(t0.c23) END DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (LTRIM(vt0.c1, x'')))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((- (LTRIM(vt0.c1, x'')))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c0 DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (LTRIM(vt0.c1, x'')))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((- (LTRIM(vt0.c1, x'')))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c0 DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (LTRIM(vt0.c1, x'')))) ORDER BY t0.c0 DESC;
SELECT ALL * FROM t0, vt0 WHERE ((((('!Q⮡J,E\n#s')<=(t0.c0)))<<(UPPER(DISTINCT t0.c0))));
SELECT SUM(count) FROM (SELECT (((((('!Q⮡J,E\n#s')<=(t0.c0)))<<(UPPER(DISTINCT t0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((('!Q⮡J,E\n#s')<=(t0.c0)))<<(UPPER(DISTINCT t0.c0))));
SELECT SUM(count) FROM (SELECT (((((('!Q⮡J,E\n#s')<=(t0.c0)))<<(UPPER(DISTINCT t0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((('!Q⮡J,E\n#s')<=(t0.c0)))<<(UPPER(DISTINCT t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c82 AS INTEGER))||(CAST(t0.c82 AS TEXT)))) ORDER BY (((((((((((((t0.c58)OR(t0.c23)))OR(t0.c61)))OR(t0.c61)))AND(t0.c58)))OR(t0.c0)))AND(x'')) IN (((t0.c18) BETWEEN (t0.c23) AND (t0.c82)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c82 AS INTEGER))||(CAST(t0.c82 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((((t0.c58)OR(t0.c23)))OR(t0.c61)))OR(t0.c61)))AND(t0.c58)))OR(t0.c0)))AND(x'')) IN (((t0.c18) BETWEEN (t0.c23) AND (t0.c82)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c82 AS INTEGER))||(CAST(t0.c82 AS TEXT)))) ORDER BY (((((((((((((t0.c58)OR(t0.c23)))OR(t0.c61)))OR(t0.c61)))AND(t0.c58)))OR(t0.c0)))AND(x'')) IN (((t0.c18) BETWEEN (t0.c23) AND (t0.c82)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c82 AS INTEGER))||(CAST(t0.c82 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((((t0.c58)OR(t0.c23)))OR(t0.c61)))OR(t0.c61)))AND(t0.c58)))OR(t0.c0)))AND(x'')) IN (((t0.c18) BETWEEN (t0.c23) AND (t0.c82)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c82 AS INTEGER))||(CAST(t0.c82 AS TEXT)))) ORDER BY (((((((((((((t0.c58)OR(t0.c23)))OR(t0.c61)))OR(t0.c61)))AND(t0.c58)))OR(t0.c0)))AND(x'')) IN (((t0.c18) BETWEEN (t0.c23) AND (t0.c82)))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c58)&(t0.c18)))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c58)&(t0.c18)))AND(x''))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c58)&(t0.c18)))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c58)&(t0.c18)))AND(x''))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c58)&(t0.c18)))AND(x'')));
SELECT * FROM t0 WHERE ((t0.c58 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c58 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c58 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c58 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c58 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM vt0 WHERE (TRIM((((0.9995187173694907, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))), UNLIKELY(vt0.c0))) ORDER BY LIKELIHOOD(DISTINCT (~ (vt0.c1)), 0.21109384619380878) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((0.9995187173694907, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))), UNLIKELY(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT (~ (vt0.c1)), 0.21109384619380878) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM((((0.9995187173694907, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))), UNLIKELY(vt0.c0))) ORDER BY LIKELIHOOD(DISTINCT (~ (vt0.c1)), 0.21109384619380878) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((0.9995187173694907, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))), UNLIKELY(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT (~ (vt0.c1)), 0.21109384619380878) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM((((0.9995187173694907, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1))), UNLIKELY(vt0.c0))) ORDER BY LIKELIHOOD(DISTINCT (~ (vt0.c1)), 0.21109384619380878) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((NULL) NOT NULL)))!=((CAST(t0.c23 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((((NULL) NOT NULL)))<>((CAST(t0.c23 AS NUMERIC))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((NULL) NOT NULL)))!=((CAST(t0.c23 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((((NULL) NOT NULL)))<>((CAST(t0.c23 AS NUMERIC))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((NULL) NOT NULL)))!=((CAST(t0.c23 AS NUMERIC)))));
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (1.854048029E9))))) ORDER BY (((((vt0.c0))>=((vt0.c1)))) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)IS(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (1.854048029E9))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>=((vt0.c1)))) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)IS(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (1.854048029E9))))) ORDER BY (((((vt0.c0))>=((vt0.c1)))) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)IS(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (1.854048029E9))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>=((vt0.c1)))) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)IS(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (1.854048029E9))))) ORDER BY (((((vt0.c0))>=((vt0.c1)))) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)IS(vt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (- (((((0.9323874795332893)AND(t0.c61)))AND(t0.c58)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0 ORDER BY (- (((((0.9323874795332893)AND(t0.c61)))AND(t0.c58)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (- (((((0.9323874795332893)AND(t0.c61)))AND(t0.c58)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0 ORDER BY (- (((((0.9323874795332893)AND(t0.c61)))AND(t0.c58)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY (- (((((0.9323874795332893)AND(t0.c61)))AND(t0.c58)))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (t0.c82);
SELECT SUM(count) FROM (SELECT ((t0.c82) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c82);
SELECT SUM(count) FROM (SELECT ((t0.c82) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c82);
SELECT * FROM t0 WHERE ((- ((((('-1776531471')AND(t0.c30)))AND(t0.c0))))) ORDER BY ((t0.c30 COLLATE RTRIM)OR(((((t0.c23)AND(x'')))OR(t0.c58)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((('-1776531471')AND(t0.c30)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c30 COLLATE RTRIM)OR(((((t0.c23)AND(x'')))OR(t0.c58)))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((- ((((('-1776531471')AND(t0.c30)))AND(t0.c0))))) ORDER BY ((t0.c30 COLLATE RTRIM)OR(((((t0.c23)AND(x'')))OR(t0.c58)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((('-1776531471')AND(t0.c30)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c30 COLLATE RTRIM)OR(((((t0.c23)AND(x'')))OR(t0.c58)))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((- ((((('-1776531471')AND(t0.c30)))AND(t0.c0))))) ORDER BY ((t0.c30 COLLATE RTRIM)OR(((((t0.c23)AND(x'')))OR(t0.c58)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (t0.c23 IN (t0.c30, 0X73da17a7)) COLLATE RTRIM WHERE (((CASE t0.c0  WHEN t0.c18 THEN t0.c0 ELSE t0.c61 END) NOT NULL)) ORDER BY ((((vt0.c1) ISNULL)) BETWEEN ((+ (t0.c18))) AND (t0.c18))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c18 THEN t0.c0 ELSE t0.c61 END) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (t0.c23 IN (t0.c30, 0x73da17a7)) COLLATE RTRIM ORDER BY ((((vt0.c1) ISNULL)) BETWEEN ((+ (t0.c18))) AND (t0.c18))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (t0.c23 IN (t0.c30, 0X73da17a7)) COLLATE RTRIM WHERE (((CASE t0.c0  WHEN t0.c18 THEN t0.c0 ELSE t0.c61 END) NOT NULL)) ORDER BY ((((vt0.c1) ISNULL)) BETWEEN ((+ (t0.c18))) AND (t0.c18))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c18 THEN t0.c0 ELSE t0.c61 END) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (t0.c23 IN (t0.c30, 0x73da17a7)) COLLATE RTRIM ORDER BY ((((vt0.c1) ISNULL)) BETWEEN ((+ (t0.c18))) AND (t0.c18))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (t0.c23 IN (t0.c30, 0X73da17a7)) COLLATE RTRIM WHERE (((CASE t0.c0  WHEN t0.c18 THEN t0.c0 ELSE t0.c61 END) NOT NULL)) ORDER BY ((((vt0.c1) ISNULL)) BETWEEN ((+ (t0.c18))) AND (t0.c18))  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((t0.c23)=(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c23)==(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c23)=(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c23)==(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c23)=(t0.c0)) COLLATE BINARY);
SELECT * FROM t0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (SQLITE_SOURCE_ID());
SELECT COUNT(*) FROM t0 WHERE ((((t0.c23)LIKE(t0.c58)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c23)LIKE(t0.c58)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c23)LIKE(t0.c58)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c23)LIKE(t0.c58)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c23)LIKE(t0.c58)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c1))) BETWEEN (((vt0.c1)IS NOT(vt0.c1))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c1))) BETWEEN (((vt0.c1)IS NOT(vt0.c1))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c1))) BETWEEN (((vt0.c1)IS NOT(vt0.c1))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c1))) BETWEEN (((vt0.c1)IS NOT(vt0.c1))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c1))) BETWEEN (((vt0.c1)IS NOT(vt0.c1))) AND ((vt0.c1 IN ()))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) AND ((('n_3/') NOTNULL)))) ORDER BY CASE WHEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))) THEN (vt0.c1 IN (vt0.c1, vt0.c0)) ELSE ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) AND ((('n_3/') NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))) THEN (vt0.c1 IN (vt0.c1, vt0.c0)) ELSE ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) AND ((('n_3/') NOTNULL)))) ORDER BY CASE WHEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))) THEN (vt0.c1 IN (vt0.c1, vt0.c0)) ELSE ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) AND ((('n_3/') NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))) THEN (vt0.c1 IN (vt0.c1, vt0.c0)) ELSE ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) AND ((('n_3/') NOTNULL)))) ORDER BY CASE WHEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))) THEN (vt0.c1 IN (vt0.c1, vt0.c0)) ELSE ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(-1055537570 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-1055537570 AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(-1055537570 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-1055537570 AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(-1055537570 AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(UNLIKELY(DISTINCT vt0.c0))) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND ('.t')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(UNLIKELY(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND ('.t')) ASC);
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(UNLIKELY(DISTINCT vt0.c0))) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND ('.t')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(UNLIKELY(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND ('.t')) ASC);
SELECT COUNT(*) FROM vt0 WHERE (TYPEOF(UNLIKELY(DISTINCT vt0.c0))) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND ('.t')) ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((0X58cc992e) NOT BETWEEN (((vt0.c1)>=(t0.c58))) AND (((t0.c82) IS FALSE)))) ORDER BY ((NULL)GLOB(CAST(vt0.c1 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0x58cc992e) NOT BETWEEN (((vt0.c1)>=(t0.c58))) AND (((t0.c82) IS FALSE)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((NULL)GLOB(CAST(vt0.c1 AS REAL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((0X58cc992e) NOT BETWEEN (((vt0.c1)>=(t0.c58))) AND (((t0.c82) IS FALSE)))) ORDER BY ((NULL)GLOB(CAST(vt0.c1 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0x58cc992e) NOT BETWEEN (((vt0.c1)>=(t0.c58))) AND (((t0.c82) IS FALSE)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((NULL)GLOB(CAST(vt0.c1 AS REAL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((0X58cc992e) NOT BETWEEN (((vt0.c1)>=(t0.c58))) AND (((t0.c82) IS FALSE)))) ORDER BY ((NULL)GLOB(CAST(vt0.c1 AS REAL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c61 AS INTEGER) AS REAL) WHERE ((LIKELIHOOD(t0.c82, 0.9868624337539553) IN (0Xffffffffee35dd11))) ORDER BY t0.c23  NULLS FIRST, ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(t0.c82, 0.9868624337539553) IN (0Xffffffffee35dd11))) IS TRUE)  as count FROM t0 NOT INDEXED RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c61 AS INTEGER) AS REAL) ORDER BY t0.c23  NULLS FIRST, ((vt0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c61 AS INTEGER) AS REAL) WHERE ((LIKELIHOOD(t0.c82, 0.9868624337539553) IN (0Xffffffffee35dd11))) ORDER BY t0.c23  NULLS FIRST, ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(t0.c82, 0.9868624337539553) IN (0Xffffffffee35dd11))) IS TRUE)  as count FROM t0 NOT INDEXED RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c61 AS INTEGER) AS REAL) ORDER BY t0.c23  NULLS FIRST, ((vt0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CAST(CAST(t0.c61 AS INTEGER) AS REAL) WHERE ((LIKELIHOOD(t0.c82, 0.9868624337539553) IN (0Xffffffffee35dd11))) ORDER BY t0.c23  NULLS FIRST, ((vt0.c0 IN ()) IN ());
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((+ ('0.014477037030689366')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('0.014477037030689366'))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((+ ('0.014477037030689366')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('0.014477037030689366'))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((+ ('0.014477037030689366')));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN DATE(vt0.c1, vt0.c1, x'dc68', NULL, vt0.c1) WHEN TRIM(DISTINCT vt0.c1, x'0190') THEN (((382118815))=((vt0.c1))) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) NOT NULL) END) ORDER BY (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((IFNULL(DISTINCT vt0.c1, vt0.c1), ((vt0.c1)IS NOT(vt0.c0)), ((vt0.c1)||('-298459887')))) AND (('0.630960016321562', vt0.c0 COLLATE RTRIM, vt0.c1))) DESC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c0, '2097917557')), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((SUBSTR(NULL, vt0.c0), CASE WHEN vt0.c0 THEN x'' END, ((vt0.c1)<<(vt0.c1))))) ASC  NULLS LAST, ((x'')<=(json_valid(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS FALSE) THEN DATE(vt0.c1, vt0.c1, x'dc68', NULL, vt0.c1) WHEN TRIM(DISTINCT vt0.c1, x'0190') THEN (((382118815))=((vt0.c1))) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) NOT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((IFNULL(DISTINCT vt0.c1, vt0.c1), ((vt0.c1)IS NOT(vt0.c0)), ((vt0.c1)||('-298459887')))) AND (('0.630960016321562', vt0.c0 COLLATE RTRIM, vt0.c1))) DESC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c0, '2097917557')), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((SUBSTR(NULL, vt0.c0), CASE WHEN vt0.c0 THEN x'' END, ((vt0.c1)<<(vt0.c1))))) ASC  NULLS LAST, ((x'')<=(json_valid(vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN DATE(vt0.c1, vt0.c1, x'dc68', NULL, vt0.c1) WHEN TRIM(DISTINCT vt0.c1, x'0190') THEN (((382118815))=((vt0.c1))) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) NOT NULL) END) ORDER BY (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((IFNULL(DISTINCT vt0.c1, vt0.c1), ((vt0.c1)IS NOT(vt0.c0)), ((vt0.c1)||('-298459887')))) AND (('0.630960016321562', vt0.c0 COLLATE RTRIM, vt0.c1))) DESC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c0, '2097917557')), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((SUBSTR(NULL, vt0.c0), CASE WHEN vt0.c0 THEN x'' END, ((vt0.c1)<<(vt0.c1))))) ASC  NULLS LAST, ((x'')<=(json_valid(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS FALSE) THEN DATE(vt0.c1, vt0.c1, x'dc68', NULL, vt0.c1) WHEN TRIM(DISTINCT vt0.c1, x'0190') THEN (((382118815))=((vt0.c1))) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) NOT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((IFNULL(DISTINCT vt0.c1, vt0.c1), ((vt0.c1)IS NOT(vt0.c0)), ((vt0.c1)||('-298459887')))) AND (('0.630960016321562', vt0.c0 COLLATE RTRIM, vt0.c1))) DESC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c0, '2097917557')), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((SUBSTR(NULL, vt0.c0), CASE WHEN vt0.c0 THEN x'' END, ((vt0.c1)<<(vt0.c1))))) ASC  NULLS LAST, ((x'')<=(json_valid(vt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN DATE(vt0.c1, vt0.c1, x'dc68', NULL, vt0.c1) WHEN TRIM(DISTINCT vt0.c1, x'0190') THEN (((382118815))=((vt0.c1))) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) NOT NULL) END) ORDER BY (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((IFNULL(DISTINCT vt0.c1, vt0.c1), ((vt0.c1)IS NOT(vt0.c0)), ((vt0.c1)||('-298459887')))) AND (('0.630960016321562', vt0.c0 COLLATE RTRIM, vt0.c1))) DESC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c0, '2097917557')), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((SUBSTR(NULL, vt0.c0), CASE WHEN vt0.c0 THEN x'' END, ((vt0.c1)<<(vt0.c1))))) ASC  NULLS LAST, ((x'')<=(json_valid(vt0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)AND((((vt0.c1, t0.c61, vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN ((t0.c58, '-1768399281', t0.c61, t0.c58, t0.c82)) AND ((t0.c82, t0.c0, t0.c58, t0.c0, ''))))))AND(CASE -1106111974  WHEN vt0.c0 THEN t0.c18 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND((((vt0.c1, t0.c61, vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN ((t0.c58, '-1768399281', t0.c61, t0.c58, t0.c82)) AND ((t0.c82, t0.c0, t0.c58, t0.c0, ''))))))AND(CASE -1106111974  WHEN vt0.c0 THEN t0.c18 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)AND((((vt0.c1, t0.c61, vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN ((t0.c58, '-1768399281', t0.c61, t0.c58, t0.c82)) AND ((t0.c82, t0.c0, t0.c58, t0.c0, ''))))))AND(CASE -1106111974  WHEN vt0.c0 THEN t0.c18 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND((((vt0.c1, t0.c61, vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN ((t0.c58, '-1768399281', t0.c61, t0.c58, t0.c82)) AND ((t0.c82, t0.c0, t0.c58, t0.c0, ''))))))AND(CASE -1106111974  WHEN vt0.c0 THEN t0.c18 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)AND((((vt0.c1, t0.c61, vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN ((t0.c58, '-1768399281', t0.c61, t0.c58, t0.c82)) AND ((t0.c82, t0.c0, t0.c58, t0.c0, ''))))))AND(CASE -1106111974  WHEN vt0.c0 THEN t0.c18 END)));
SELECT COUNT(*) FROM vt0 INDEXED BY i64 WHERE (CAST((((vt0.c1))=((vt0.c1))) AS BLOB)) ORDER BY CAST((vt0.c0 IN (vt0.c1, vt0.c1)) AS INTEGER), ((((vt0.c1)==(vt0.c0)))>=(((vt0.c1)>=(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1))=((vt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0 INDEXED BY i64 ORDER BY CAST((vt0.c0 IN (vt0.c1, vt0.c1)) AS INTEGER), ((((vt0.c1)=(vt0.c0)))>=(((vt0.c1)>=(vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INDEXED BY i64 WHERE (CAST((((vt0.c1))=((vt0.c1))) AS BLOB)) ORDER BY CAST((vt0.c0 IN (vt0.c1, vt0.c1)) AS INTEGER), ((((vt0.c1)==(vt0.c0)))>=(((vt0.c1)>=(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1))=((vt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0 INDEXED BY i64 ORDER BY CAST((vt0.c0 IN (vt0.c1, vt0.c1)) AS INTEGER), ((((vt0.c1)=(vt0.c0)))>=(((vt0.c1)>=(vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((t0.c82) ISNULL)) NOTNULL)) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN t0.c18 THEN t0.c61 ELSE vt0.c1 END, 0.6048224043269188) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c82) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELIHOOD(DISTINCT CASE WHEN t0.c18 THEN t0.c61 ELSE vt0.c1 END, 0.6048224043269188) DESC);
SELECT * FROM t0, vt0 WHERE (((((t0.c82) ISNULL)) NOTNULL)) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN t0.c18 THEN t0.c61 ELSE vt0.c1 END, 0.6048224043269188) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c82) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELIHOOD(DISTINCT CASE WHEN t0.c18 THEN t0.c61 ELSE vt0.c1 END, 0.6048224043269188) DESC);
SELECT * FROM t0, vt0 WHERE (((((t0.c82) ISNULL)) NOTNULL)) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN t0.c18 THEN t0.c61 ELSE vt0.c1 END, 0.6048224043269188) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL IN ())) BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c0))) AND (COALESCE(DISTINCT vt0.c1, vt0.c1)))) ORDER BY (x'' IN ());
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ())) BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c0))) AND (COALESCE(DISTINCT vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL IN ())) BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c0))) AND (COALESCE(DISTINCT vt0.c1, vt0.c1)))) ORDER BY (x'' IN ());
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ())) BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c0))) AND (COALESCE(DISTINCT vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL IN ())) BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c0))) AND (COALESCE(DISTINCT vt0.c1, vt0.c1)))) ORDER BY (x'' IN ());
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0))<=((t0.c30))))|((((t0.c30))==((t0.c30)))))) ORDER BY ((((t0.c23) NOT BETWEEN (t0.c23) AND (t0.c61)))*(((t0.c58) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((t0.c30))))|((((t0.c30))==((t0.c30)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c23) NOT BETWEEN (t0.c23) AND (t0.c61)))*(((t0.c58) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0))<=((t0.c30))))|((((t0.c30))==((t0.c30)))))) ORDER BY ((((t0.c23) NOT BETWEEN (t0.c23) AND (t0.c61)))*(((t0.c58) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((t0.c30))))|((((t0.c30))==((t0.c30)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c23) NOT BETWEEN (t0.c23) AND (t0.c61)))*(((t0.c58) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0))<=((t0.c30))))|((((t0.c30))==((t0.c30)))))) ORDER BY ((((t0.c23) NOT BETWEEN (t0.c23) AND (t0.c61)))*(((t0.c58) NOTNULL))) DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((CASE WHEN 0.9325938642806494 THEN t0.c30 WHEN t0.c82 THEN vt0.c0 WHEN t0.c30 THEN t0.c58 ELSE t0.c82 END) NOT NULL) WHERE (((((((((((((x'')OR(((t0.c61)>=(t0.c82)))))OR((t0.c82 IN ()))))AND(((((t0.c30)OR(t0.c58)))OR(vt0.c1)))))OR((t0.c0 IN (t0.c61)))))AND(((t0.c18)/(vt0.c0)))))OR(0Xa9aba87))) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((t0.c23)&(vt0.c1))) AND ((((t0.c61)) NOT BETWEEN ((t0.c82)) AND (('vQ|QI~tA')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((x'')OR(((t0.c61)>=(t0.c82)))))OR((t0.c82 IN ()))))AND(((((t0.c30)OR(t0.c58)))OR(vt0.c1)))))OR((t0.c0 IN (t0.c61)))))AND(((t0.c18)/(vt0.c0)))))OR(0Xa9aba87))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((CASE WHEN 0.9325938642806494 THEN t0.c30 WHEN t0.c82 THEN vt0.c0 WHEN t0.c30 THEN t0.c58 ELSE t0.c82 END) NOT NULL) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((t0.c23)&(vt0.c1))) AND ((((t0.c61)) NOT BETWEEN ((t0.c82)) AND (('vQ|QI~tA'))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((CASE WHEN 0.9325938642806494 THEN t0.c30 WHEN t0.c82 THEN vt0.c0 WHEN t0.c30 THEN t0.c58 ELSE t0.c82 END) NOT NULL) WHERE (((((((((((((x'')OR(((t0.c61)>=(t0.c82)))))OR((t0.c82 IN ()))))AND(((((t0.c30)OR(t0.c58)))OR(vt0.c1)))))OR((t0.c0 IN (t0.c61)))))AND(((t0.c18)/(vt0.c0)))))OR(0Xa9aba87))) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((t0.c23)&(vt0.c1))) AND ((((t0.c61)) NOT BETWEEN ((t0.c82)) AND (('vQ|QI~tA')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((x'')OR(((t0.c61)>=(t0.c82)))))OR((t0.c82 IN ()))))AND(((((t0.c30)OR(t0.c58)))OR(vt0.c1)))))OR((t0.c0 IN (t0.c61)))))AND(((t0.c18)/(vt0.c0)))))OR(0Xa9aba87))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((CASE WHEN 0.9325938642806494 THEN t0.c30 WHEN t0.c82 THEN vt0.c0 WHEN t0.c30 THEN t0.c58 ELSE t0.c82 END) NOT NULL) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((t0.c23)&(vt0.c1))) AND ((((t0.c61)) NOT BETWEEN ((t0.c82)) AND (('vQ|QI~tA'))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((CASE WHEN 0.9325938642806494 THEN t0.c30 WHEN t0.c82 THEN vt0.c0 WHEN t0.c30 THEN t0.c58 ELSE t0.c82 END) NOT NULL) WHERE (((((((((((((x'')OR(((t0.c61)>=(t0.c82)))))OR((t0.c82 IN ()))))AND(((((t0.c30)OR(t0.c58)))OR(vt0.c1)))))OR((t0.c0 IN (t0.c61)))))AND(((t0.c18)/(vt0.c0)))))OR(0Xa9aba87))) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((t0.c23)&(vt0.c1))) AND ((((t0.c61)) NOT BETWEEN ((t0.c82)) AND (('vQ|QI~tA')))));
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN 'M<觍YIO]8' THEN vt0.c1 END)>>((+ (vt0.c0))))) ORDER BY ((vt0.c1 IN (vt0.c0, vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN 'M<觍YIO]8' THEN vt0.c1 END)>>((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 IN (vt0.c0, vt0.c0)) IN ()) DESC);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN 'M<觍YIO]8' THEN vt0.c1 END)>>((+ (vt0.c0))))) ORDER BY ((vt0.c1 IN (vt0.c0, vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN 'M<觍YIO]8' THEN vt0.c1 END)>>((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 IN (vt0.c0, vt0.c0)) IN ()) DESC);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN 'M<觍YIO]8' THEN vt0.c1 END)>>((+ (vt0.c0))))) ORDER BY ((vt0.c1 IN (vt0.c0, vt0.c0)) IN ()) DESC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>(vt0.c0)))IS(((vt0.c1) BETWEEN (vt0.c0) AND (0.8990628470843037))))) ORDER BY (CAST(vt0.c1 AS REAL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>(vt0.c0)))IS(((vt0.c1) BETWEEN (vt0.c0) AND (0.8990628470843037))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS REAL) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>(vt0.c0)))IS(((vt0.c1) BETWEEN (vt0.c0) AND (0.8990628470843037))))) ORDER BY (CAST(vt0.c1 AS REAL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>(vt0.c0)))IS(((vt0.c1) BETWEEN (vt0.c0) AND (0.8990628470843037))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS REAL) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>(vt0.c0)))IS(((vt0.c1) BETWEEN (vt0.c0) AND (0.8990628470843037))))) ORDER BY (CAST(vt0.c1 AS REAL) IN ()) DESC;
SELECT * FROM t0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((t0.c18) BETWEEN (vt0.c0) AND (t0.c30)))) WHERE (((t0.c18)>(t0.c30)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c18)>(t0.c30)) COLLATE NOCASE) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((t0.c18) BETWEEN (vt0.c0) AND (t0.c30)))));
SELECT * FROM t0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((t0.c18) BETWEEN (vt0.c0) AND (t0.c30)))) WHERE (((t0.c18)>(t0.c30)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c18)>(t0.c30)) COLLATE NOCASE) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((t0.c18) BETWEEN (vt0.c0) AND (t0.c30)))));
SELECT * FROM t0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((t0.c18) BETWEEN (vt0.c0) AND (t0.c30)))) WHERE (((t0.c18)>(t0.c30)) COLLATE NOCASE);
SELECT ALL * FROM t0, vt0 WHERE (t0.c18) ORDER BY ((CASE vt0.c0  WHEN t0.c30 THEN t0.c82 END)OR(CASE WHEN '-1957164695' THEN t0.c23 WHEN t0.c18 THEN t0.c30 WHEN t0.c82 THEN t0.c30 END)) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c18) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE vt0.c0  WHEN t0.c30 THEN t0.c82 END)OR(CASE WHEN '-1957164695' THEN t0.c23 WHEN t0.c18 THEN t0.c30 WHEN t0.c82 THEN t0.c30 END)) ASC);
SELECT ALL * FROM t0, vt0 WHERE (t0.c18) ORDER BY ((CASE vt0.c0  WHEN t0.c30 THEN t0.c82 END)OR(CASE WHEN '-1957164695' THEN t0.c23 WHEN t0.c18 THEN t0.c30 WHEN t0.c82 THEN t0.c30 END)) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c18) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE vt0.c0  WHEN t0.c30 THEN t0.c82 END)OR(CASE WHEN '-1957164695' THEN t0.c23 WHEN t0.c18 THEN t0.c30 WHEN t0.c82 THEN t0.c30 END)) ASC);
SELECT ALL * FROM t0, vt0 WHERE (t0.c18) ORDER BY ((CASE vt0.c0  WHEN t0.c30 THEN t0.c82 END)OR(CASE WHEN '-1957164695' THEN t0.c23 WHEN t0.c18 THEN t0.c30 WHEN t0.c82 THEN t0.c30 END)) ASC;
SELECT ALL * FROM t0, vt0 WHERE (((t0.c18) BETWEEN (t0.c30) AND (t0.c58)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c18) BETWEEN (t0.c30) AND (t0.c58)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c18) BETWEEN (t0.c30) AND (t0.c58)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c18) BETWEEN (t0.c30) AND (t0.c58)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c18) BETWEEN (t0.c30) AND (t0.c58)) COLLATE RTRIM);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c61 COLLATE RTRIM)OR((((t0.c58)) NOT BETWEEN ((t0.c23)) AND ((t0.c0))))))OR(((((vt0.c1)OR(t0.c18)))OR(t0.c58)))) WHERE (LTRIM(CASE t0.c30  WHEN t0.c18 THEN vt0.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CASE t0.c30  WHEN t0.c18 THEN vt0.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c61 COLLATE RTRIM)OR((((t0.c58)) NOT BETWEEN ((t0.c23)) AND ((t0.c0))))))OR(((((vt0.c1)OR(t0.c18)))OR(t0.c58)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c61 COLLATE RTRIM)OR((((t0.c58)) NOT BETWEEN ((t0.c23)) AND ((t0.c0))))))OR(((((vt0.c1)OR(t0.c18)))OR(t0.c58)))) WHERE (LTRIM(CASE t0.c30  WHEN t0.c18 THEN vt0.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CASE t0.c30  WHEN t0.c18 THEN vt0.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c61 COLLATE RTRIM)OR((((t0.c58)) NOT BETWEEN ((t0.c23)) AND ((t0.c0))))))OR(((((vt0.c1)OR(t0.c18)))OR(t0.c58)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((t0.c61 COLLATE RTRIM)OR((((t0.c58)) NOT BETWEEN ((t0.c23)) AND ((t0.c0))))))OR(((((vt0.c1)OR(t0.c18)))OR(t0.c58)))) WHERE (LTRIM(CASE t0.c30  WHEN t0.c18 THEN vt0.c0 ELSE vt0.c1 END));
SELECT ALL * FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE WHEN CASE WHEN t0.c58 THEN t0.c61 END THEN t0.c82 ELSE CASE WHEN t0.c30 THEN t0.c18 WHEN t0.c58 THEN NULL WHEN t0.c30 THEN t0.c82 WHEN t0.c58 THEN t0.c30 WHEN t0.c61 THEN t0.c18 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE WHEN t0.c58 THEN t0.c61 END THEN t0.c82 ELSE CASE WHEN t0.c30 THEN t0.c18 WHEN t0.c58 THEN NULL WHEN t0.c30 THEN t0.c82 WHEN t0.c58 THEN t0.c30 WHEN t0.c61 THEN t0.c18 END END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE WHEN CASE WHEN t0.c58 THEN t0.c61 END THEN t0.c82 ELSE CASE WHEN t0.c30 THEN t0.c18 WHEN t0.c58 THEN NULL WHEN t0.c30 THEN t0.c82 WHEN t0.c58 THEN t0.c30 WHEN t0.c61 THEN t0.c18 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE WHEN t0.c58 THEN t0.c61 END THEN t0.c82 ELSE CASE WHEN t0.c30 THEN t0.c18 WHEN t0.c58 THEN NULL WHEN t0.c30 THEN t0.c82 WHEN t0.c58 THEN t0.c30 WHEN t0.c61 THEN t0.c18 END END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE WHEN CASE WHEN t0.c58 THEN t0.c61 END THEN t0.c82 ELSE CASE WHEN t0.c30 THEN t0.c18 WHEN t0.c58 THEN NULL WHEN t0.c30 THEN t0.c82 WHEN t0.c58 THEN t0.c30 WHEN t0.c61 THEN t0.c18 END END  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (load_extension(((t0.c30) NOT BETWEEN (t0.c23) AND (t0.c18))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((t0.c30) NOT BETWEEN (t0.c23) AND (t0.c18)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (load_extension(((t0.c30) NOT BETWEEN (t0.c23) AND (t0.c18))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((t0.c30) NOT BETWEEN (t0.c23) AND (t0.c18)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c18)) BETWEEN (('-993399983')) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c18)) BETWEEN (('-993399983')) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c18)) BETWEEN (('-993399983')) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c18)) BETWEEN (('-993399983')) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c18)) BETWEEN (('-993399983')) AND ((vt0.c0))) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ((((t0.c30)) BETWEEN ((((((((((((((t0.c58)OR(t0.c30)))OR(t0.c82)))OR(t0.c61)))AND(t0.c0)))AND(t0.c58)))AND(x'')))) AND ((CASE t0.c82  WHEN t0.c58 THEN t0.c18 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c30)) BETWEEN ((((((((((((((t0.c58)OR(t0.c30)))OR(t0.c82)))OR(t0.c61)))AND(t0.c0)))AND(t0.c58)))AND(x'')))) AND ((CASE t0.c82  WHEN t0.c58 THEN t0.c18 END)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c30)) BETWEEN ((((((((((((((t0.c58)OR(t0.c30)))OR(t0.c82)))OR(t0.c61)))AND(t0.c0)))AND(t0.c58)))AND(x'')))) AND ((CASE t0.c82  WHEN t0.c58 THEN t0.c18 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c30)) BETWEEN ((((((((((((((t0.c58)OR(t0.c30)))OR(t0.c82)))OR(t0.c61)))AND(t0.c0)))AND(t0.c58)))AND(x'')))) AND ((CASE t0.c82  WHEN t0.c58 THEN t0.c18 END)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c30)) BETWEEN ((((((((((((((t0.c58)OR(t0.c30)))OR(t0.c82)))OR(t0.c61)))AND(t0.c0)))AND(t0.c58)))AND(x'')))) AND ((CASE t0.c82  WHEN t0.c58 THEN t0.c18 END))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((vt0.c0)<<(vt0.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<<(vt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((vt0.c0)<<(vt0.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<<(vt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((vt0.c0)<<(vt0.c1)) AS TEXT);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER));
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((NOT (vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC))))OR(((t0.c23)GLOB(t0.c18)))))AND(((t0.c18)<(vt0.c1)))))OR(((t0.c61)/(t0.c18)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC))))OR(((t0.c23)GLOB(t0.c18)))))AND(((t0.c18)<(vt0.c1)))))OR(((t0.c61)/(t0.c18))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((NOT (vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC))))OR(((t0.c23)GLOB(t0.c18)))))AND(((t0.c18)<(vt0.c1)))))OR(((t0.c61)/(t0.c18)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC))))OR(((t0.c23)GLOB(t0.c18)))))AND(((t0.c18)<(vt0.c1)))))OR(((t0.c61)/(t0.c18))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((NOT (vt0.c0)))AND(CAST(vt0.c1 AS NUMERIC))))OR(((t0.c23)GLOB(t0.c18)))))AND(((t0.c18)<(vt0.c1)))))OR(((t0.c61)/(t0.c18)))));
SELECT ALL * FROM t0 WHERE ((t0.c18 IN ()) COLLATE BINARY) ORDER BY ((NULL)OR(((t0.c30)>=(t0.c58))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c18 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((NULL)OR(((t0.c30)>=(t0.c58)))));
SELECT ALL * FROM t0 WHERE ((t0.c18 IN ()) COLLATE BINARY) ORDER BY ((NULL)OR(((t0.c30)>=(t0.c58))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c18 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((NULL)OR(((t0.c30)>=(t0.c58)))));
SELECT ALL * FROM t0 WHERE ((t0.c18 IN ()) COLLATE BINARY) ORDER BY ((NULL)OR(((t0.c30)>=(t0.c58))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c61))>=((t0.c18))) COLLATE NOCASE COLLATE RTRIM WHERE (((HEX(0.9119908671907393)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(0.9119908671907393)) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c61))>=((t0.c18))) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c61))>=((t0.c18))) COLLATE NOCASE COLLATE RTRIM WHERE (((HEX(0.9119908671907393)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(0.9119908671907393)) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c61))>=((t0.c18))) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c61))>=((t0.c18))) COLLATE NOCASE COLLATE RTRIM WHERE (((HEX(0.9119908671907393)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (HEX(vt0.c1)))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (HEX(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (HEX(vt0.c1)))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (HEX(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (HEX(vt0.c1)))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE ASC;
SELECT ALL * FROM t0, vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) ORDER BY CAST((((t0.c18))=((NULL))) AS BLOB) DESC  NULLS FIRST, NULL ASC, CAST(((((t0.c23)AND(t0.c61)))AND(t0.c23)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((((t0.c18))==((NULL))) AS BLOB) DESC  NULLS FIRST, NULL ASC, CAST(((((t0.c23)AND(t0.c61)))AND(t0.c23)) AS INTEGER));
SELECT ALL * FROM t0, vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) ORDER BY CAST((((t0.c18))=((NULL))) AS BLOB) DESC  NULLS FIRST, NULL ASC, CAST(((((t0.c23)AND(t0.c61)))AND(t0.c23)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((((t0.c18))==((NULL))) AS BLOB) DESC  NULLS FIRST, NULL ASC, CAST(((((t0.c23)AND(t0.c61)))AND(t0.c23)) AS INTEGER));
SELECT ALL * FROM t0, vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) ORDER BY CAST((((t0.c18))=((NULL))) AS BLOB) DESC  NULLS FIRST, NULL ASC, CAST(((((t0.c23)AND(t0.c61)))AND(t0.c23)) AS INTEGER);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY SQLITE_SOURCE_ID() DESC, TRIM(vt0.c1) DESC, ((((vt0.c1) BETWEEN (x'') AND (vt0.c0)))LIKE(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_SOURCE_ID() DESC, TRIM(vt0.c1) DESC, ((((vt0.c1) BETWEEN (x'') AND (vt0.c0)))LIKE(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY SQLITE_SOURCE_ID() DESC, TRIM(vt0.c1) DESC, ((((vt0.c1) BETWEEN (x'') AND (vt0.c0)))LIKE(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_SOURCE_ID() DESC, TRIM(vt0.c1) DESC, ((((vt0.c1) BETWEEN (x'') AND (vt0.c0)))LIKE(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY SQLITE_SOURCE_ID() DESC, TRIM(vt0.c1) DESC, ((((vt0.c1) BETWEEN (x'') AND (vt0.c0)))LIKE(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))));
SELECT ALL * FROM t0, vt0 WHERE (CASE ((('', t0.c61, t0.c23))>((t0.c30, t0.c18, t0.c58)))  WHEN (t0.c23 IN ()) THEN ROUND(t0.c18, t0.c0) END) ORDER BY LENGTH(x'') COLLATE BINARY ASC, NULL DESC  NULLS LAST, '5vD	[Nl*G', CAST(t0.c82 AS TEXT) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((('', t0.c61, t0.c23))>((t0.c30, t0.c18, t0.c58)))  WHEN (t0.c23 IN ()) THEN ROUND(t0.c18, t0.c0) END) IS TRUE)  as count FROM t0, vt0 ORDER BY LENGTH(x'') COLLATE BINARY ASC, NULL DESC  NULLS LAST, '5vD	[Nl*G', CAST(t0.c82 AS TEXT) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE ((('', t0.c61, t0.c23))>((t0.c30, t0.c18, t0.c58)))  WHEN (t0.c23 IN ()) THEN ROUND(t0.c18, t0.c0) END) ORDER BY LENGTH(x'') COLLATE BINARY ASC, NULL DESC  NULLS LAST, '5vD	[Nl*G', CAST(t0.c82 AS TEXT) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((('', t0.c61, t0.c23))>((t0.c30, t0.c18, t0.c58)))  WHEN (t0.c23 IN ()) THEN ROUND(t0.c18, t0.c0) END) IS TRUE)  as count FROM t0, vt0 ORDER BY LENGTH(x'') COLLATE BINARY ASC, NULL DESC  NULLS LAST, '5vD	[Nl*G', CAST(t0.c82 AS TEXT) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE ((('', t0.c61, t0.c23))>((t0.c30, t0.c18, t0.c58)))  WHEN (t0.c23 IN ()) THEN ROUND(t0.c18, t0.c0) END) ORDER BY LENGTH(x'') COLLATE BINARY ASC, NULL DESC  NULLS LAST, '5vD	[Nl*G', CAST(t0.c82 AS TEXT) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c23) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c23) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c23) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c23) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c23) NOT NULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((CAST(t0.c0 AS REAL))AND(((t0.c61) NOT NULL))))AND(t0.c18)) WHERE (((t0.c58)>=((+ (t0.c23)))));
SELECT SUM(count) FROM (SELECT ((((t0.c58)>=((+ (t0.c23))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((CAST(t0.c0 AS REAL))AND(((t0.c61) NOT NULL))))AND(t0.c18)));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((CAST(t0.c0 AS REAL))AND(((t0.c61) NOT NULL))))AND(t0.c18)) WHERE (((t0.c58)>=((+ (t0.c23)))));
SELECT SUM(count) FROM (SELECT ((((t0.c58)>=((+ (t0.c23))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((CAST(t0.c0 AS REAL))AND(((t0.c61) NOT NULL))))AND(t0.c18)));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((CAST(t0.c0 AS REAL))AND(((t0.c61) NOT NULL))))AND(t0.c18)) WHERE (((t0.c58)>=((+ (t0.c23)))));
SELECT ALL * FROM vt0 WHERE (((-1363157930)IS((((x'8a52e9fb', vt0.c1, vt0.c1))>=(('', vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((-1363157930)IS((((x'8a52e9fb', vt0.c1, vt0.c1))>=(('', vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((-1363157930)IS((((x'8a52e9fb', vt0.c1, vt0.c1))>=(('', vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((-1363157930)IS((((x'8a52e9fb', vt0.c1, vt0.c1))>=(('', vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((-1363157930)IS((((x'8a52e9fb', vt0.c1, vt0.c1))>=(('', vt0.c0, vt0.c1))))));
SELECT ALL * FROM vt0 WHERE (((NULL) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((NULL) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((NULL) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (vt0.c0)));
SELECT * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c61)AND(t0.c23)))OR(t0.c0)))AND(t0.c0)))AND(t0.c82)))/('>qK'))) ORDER BY ((CAST(t0.c61 AS TEXT)) IS FALSE) ASC  NULLS FIRST, ((((t0.c61)AND(TYPEOF(t0.c82))))AND((t0.c23 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c61)AND(t0.c23)))OR(t0.c0)))AND(t0.c0)))AND(t0.c82)))/('>qK'))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c61 AS TEXT)) IS FALSE) ASC  NULLS FIRST, ((((t0.c61)AND(TYPEOF(t0.c82))))AND((t0.c23 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c61)AND(t0.c23)))OR(t0.c0)))AND(t0.c0)))AND(t0.c82)))/('>qK'))) ORDER BY ((CAST(t0.c61 AS TEXT)) IS FALSE) ASC  NULLS FIRST, ((((t0.c61)AND(TYPEOF(t0.c82))))AND((t0.c23 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c61)AND(t0.c23)))OR(t0.c0)))AND(t0.c0)))AND(t0.c82)))/('>qK'))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c61 AS TEXT)) IS FALSE) ASC  NULLS FIRST, ((((t0.c61)AND(TYPEOF(t0.c82))))AND((t0.c23 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (((((vt0.c1)OR(vt0.c0)))OR('#0')))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (((((vt0.c1)OR(vt0.c0)))OR('#0'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (((((vt0.c1)OR(vt0.c0)))OR('#0')))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (((((vt0.c1)OR(vt0.c0)))OR('#0'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (((((vt0.c1)OR(vt0.c0)))OR('#0')))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE (t0.c82) ORDER BY (NOT (t0.c30)) COLLATE NOCASE, ((((('0')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB((((5.74742354E8, t0.c30, t0.c0))>((t0.c0, t0.c0, t0.c18)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c82) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (vt0.c0 IN ()) COLLATE BINARY ORDER BY (NOT (t0.c30)) COLLATE NOCASE, ((((('0')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB((((5.74742354E8, t0.c30, t0.c0))>((t0.c0, t0.c0, t0.c18)))))  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE (t0.c82) ORDER BY (NOT (t0.c30)) COLLATE NOCASE, ((((('0')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB((((5.74742354E8, t0.c30, t0.c0))>((t0.c0, t0.c0, t0.c18)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c82) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (vt0.c0 IN ()) COLLATE BINARY ORDER BY (NOT (t0.c30)) COLLATE NOCASE, ((((('0')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB((((5.74742354E8, t0.c30, t0.c0))>((t0.c0, t0.c0, t0.c18)))))  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE (t0.c82) ORDER BY (NOT (t0.c30)) COLLATE NOCASE, ((((('0')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB((((5.74742354E8, t0.c30, t0.c0))>((t0.c0, t0.c0, t0.c18)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((NULL)==(t0.c58)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL)=(t0.c58))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((NULL)==(t0.c58)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL)=(t0.c58))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((NULL)==(t0.c58)))));
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c1 IN (vt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c1 IN (vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c1 IN (vt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c1 IN (vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c1 IN (vt0.c1, vt0.c0)))));
SELECT * FROM vt0, t0 WHERE (CASE WHEN (((t0.c23))<=((t0.c0))) THEN (((t0.c30, t0.c82, t0.c18)) BETWEEN ((t0.c82, t0.c18, t0.c30)) AND ((t0.c61, '2146517187', t0.c58))) WHEN ((vt0.c0) BETWEEN (t0.c58) AND (t0.c58)) THEN (((t0.c58))=((t0.c30))) WHEN t0.c58 COLLATE BINARY THEN ((t0.c30) BETWEEN (t0.c82) AND (t0.c82)) ELSE CASE WHEN vt0.c1 THEN t0.c18 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c23))<=((t0.c0))) THEN (((t0.c30, t0.c82, t0.c18)) BETWEEN ((t0.c82, t0.c18, t0.c30)) AND ((t0.c61, '2146517187', t0.c58))) WHEN ((vt0.c0) BETWEEN (t0.c58) AND (t0.c58)) THEN (((t0.c58))==((t0.c30))) WHEN t0.c58 COLLATE BINARY THEN ((t0.c30) BETWEEN (t0.c82) AND (t0.c82)) ELSE CASE WHEN vt0.c1 THEN t0.c18 END END) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE WHEN (((t0.c23))<=((t0.c0))) THEN (((t0.c30, t0.c82, t0.c18)) BETWEEN ((t0.c82, t0.c18, t0.c30)) AND ((t0.c61, '2146517187', t0.c58))) WHEN ((vt0.c0) BETWEEN (t0.c58) AND (t0.c58)) THEN (((t0.c58))=((t0.c30))) WHEN t0.c58 COLLATE BINARY THEN ((t0.c30) BETWEEN (t0.c82) AND (t0.c82)) ELSE CASE WHEN vt0.c1 THEN t0.c18 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c23))<=((t0.c0))) THEN (((t0.c30, t0.c82, t0.c18)) BETWEEN ((t0.c82, t0.c18, t0.c30)) AND ((t0.c61, '2146517187', t0.c58))) WHEN ((vt0.c0) BETWEEN (t0.c58) AND (t0.c58)) THEN (((t0.c58))==((t0.c30))) WHEN t0.c58 COLLATE BINARY THEN ((t0.c30) BETWEEN (t0.c82) AND (t0.c82)) ELSE CASE WHEN vt0.c1 THEN t0.c18 END END) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE WHEN (((t0.c23))<=((t0.c0))) THEN (((t0.c30, t0.c82, t0.c18)) BETWEEN ((t0.c82, t0.c18, t0.c30)) AND ((t0.c61, '2146517187', t0.c58))) WHEN ((vt0.c0) BETWEEN (t0.c58) AND (t0.c58)) THEN (((t0.c58))=((t0.c30))) WHEN t0.c58 COLLATE BINARY THEN ((t0.c30) BETWEEN (t0.c82) AND (t0.c82)) ELSE CASE WHEN vt0.c1 THEN t0.c18 END END);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c82 COLLATE RTRIM)+('')));
SELECT SUM(count) FROM (SELECT ((((t0.c82 COLLATE RTRIM)+(''))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c82 COLLATE RTRIM)+('')));
SELECT SUM(count) FROM (SELECT ((((t0.c82 COLLATE RTRIM)+(''))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c82 COLLATE RTRIM)+('')));
SELECT ALL * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CAST(((t0.c30)OR(t0.c58)) AS INTEGER)) ORDER BY (((t0.c18)) NOT BETWEEN ((((t0.c82) BETWEEN ('0#zB&%c*H') AND (t0.c18)))) AND ((((t0.c0)+(t0.c61)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c30)OR(t0.c58)) AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((t0.c18)) NOT BETWEEN ((((t0.c82) BETWEEN ('0#zB&%c*H') AND (t0.c18)))) AND ((((t0.c0)+(t0.c61))))));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CAST(((t0.c30)OR(t0.c58)) AS INTEGER)) ORDER BY (((t0.c18)) NOT BETWEEN ((((t0.c82) BETWEEN ('0#zB&%c*H') AND (t0.c18)))) AND ((((t0.c0)+(t0.c61)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c30)OR(t0.c58)) AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (((t0.c18)) NOT BETWEEN ((((t0.c82) BETWEEN ('0#zB&%c*H') AND (t0.c18)))) AND ((((t0.c0)+(t0.c61))))));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CAST(((t0.c30)OR(t0.c58)) AS INTEGER)) ORDER BY (((t0.c18)) NOT BETWEEN ((((t0.c82) BETWEEN ('0#zB&%c*H') AND (t0.c18)))) AND ((((t0.c0)+(t0.c61)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)<(vt0.c1))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c1))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)<(vt0.c1))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c1))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)<(vt0.c1))) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((json_remove(vt0.c0, vt0.c0)) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))) AND ((((vt0.c1))!=((x''))))));
SELECT SUM(count) FROM (SELECT ((((json_remove(vt0.c0, vt0.c0)) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))) AND ((((vt0.c1))<>((x'')))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((json_remove(vt0.c0, vt0.c0)) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))) AND ((((vt0.c1))!=((x''))))));
SELECT SUM(count) FROM (SELECT ((((json_remove(vt0.c0, vt0.c0)) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))) AND ((((vt0.c1))<>((x'')))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM t0 WHERE (RTRIM(CASE WHEN t0.c82 THEN t0.c30 END)) ORDER BY ((((t0.c18)>>(t0.c18)))==(((((t0.c23)OR(t0.c30)))AND(t0.c23)))) DESC, ((CAST(t0.c82 AS REAL))-(t0.c23 COLLATE BINARY)) ASC  NULLS FIRST, (t0.c18 COLLATE BINARY IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CASE WHEN t0.c82 THEN t0.c30 END)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c18)>>(t0.c18)))=(((((t0.c23)OR(t0.c30)))AND(t0.c23)))) DESC, ((CAST(t0.c82 AS REAL))-(t0.c23 COLLATE BINARY)) ASC  NULLS FIRST, (t0.c18 COLLATE BINARY IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (RTRIM(CASE WHEN t0.c82 THEN t0.c30 END)) ORDER BY ((((t0.c18)>>(t0.c18)))==(((((t0.c23)OR(t0.c30)))AND(t0.c23)))) DESC, ((CAST(t0.c82 AS REAL))-(t0.c23 COLLATE BINARY)) ASC  NULLS FIRST, (t0.c18 COLLATE BINARY IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CASE WHEN t0.c82 THEN t0.c30 END)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c18)>>(t0.c18)))=(((((t0.c23)OR(t0.c30)))AND(t0.c23)))) DESC, ((CAST(t0.c82 AS REAL))-(t0.c23 COLLATE BINARY)) ASC  NULLS FIRST, (t0.c18 COLLATE BINARY IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (RTRIM(CASE WHEN t0.c82 THEN t0.c30 END)) ORDER BY ((((t0.c18)>>(t0.c18)))==(((((t0.c23)OR(t0.c30)))AND(t0.c23)))) DESC, ((CAST(t0.c82 AS REAL))-(t0.c23 COLLATE BINARY)) ASC  NULLS FIRST, (t0.c18 COLLATE BINARY IN ()) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))==((vt0.c0))) COLLATE RTRIM) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))==((vt0.c0))) COLLATE RTRIM) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))==((vt0.c0))) COLLATE RTRIM) ORDER BY vt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c18)) NOT BETWEEN ((((((((((t0.c61)AND(t0.c0)))AND('1198781049')))OR(t0.c61)))OR(t0.c23)))) AND ((((0x4773f279) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c18)) NOT BETWEEN ((((((((((t0.c61)AND(t0.c0)))AND('1198781049')))OR(t0.c61)))OR(t0.c23)))) AND ((((0X4773f279) ISNULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c18)) NOT BETWEEN ((((((((((t0.c61)AND(t0.c0)))AND('1198781049')))OR(t0.c61)))OR(t0.c23)))) AND ((((0x4773f279) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c18)) NOT BETWEEN ((((((((((t0.c61)AND(t0.c0)))AND('1198781049')))OR(t0.c61)))OR(t0.c23)))) AND ((((0X4773f279) ISNULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c18)) NOT BETWEEN ((((((((((t0.c61)AND(t0.c0)))AND('1198781049')))OR(t0.c61)))OR(t0.c23)))) AND ((((0x4773f279) ISNULL)))));
SELECT COUNT(*) FROM t0 WHERE (DATETIME(((t0.c58) NOT NULL), '-1972366064', ((t0.c61)<=(NULL)), ((t0.c82) NOT BETWEEN (t0.c58) AND (t0.c18)), ((t0.c61) NOT NULL), (('}鈾') NOTNULL), (t0.c23 IN ()))) ORDER BY CAST(((t0.c30)<<(t0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATETIME(((t0.c58) NOT NULL), '-1972366064', ((t0.c61)<=(NULL)), ((t0.c82) NOT BETWEEN (t0.c58) AND (t0.c18)), ((t0.c61) NOT NULL), (('}鈾') NOTNULL), (t0.c23 IN ()))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c30)<<(t0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (DATETIME(((t0.c58) NOT NULL), '-1972366064', ((t0.c61)<=(NULL)), ((t0.c82) NOT BETWEEN (t0.c58) AND (t0.c18)), ((t0.c61) NOT NULL), (('}鈾') NOTNULL), (t0.c23 IN ()))) ORDER BY CAST(((t0.c30)<<(t0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATETIME(((t0.c58) NOT NULL), '-1972366064', ((t0.c61)<=(NULL)), ((t0.c82) NOT BETWEEN (t0.c58) AND (t0.c18)), ((t0.c61) NOT NULL), (('}鈾') NOTNULL), (t0.c23 IN ()))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c30)<<(t0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (DATETIME(((t0.c58) NOT NULL), '-1972366064', ((t0.c61)<=(NULL)), ((t0.c82) NOT BETWEEN (t0.c58) AND (t0.c18)), ((t0.c61) NOT NULL), (('}鈾') NOTNULL), (t0.c23 IN ()))) ORDER BY CAST(((t0.c30)<<(t0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) AND ((CASE WHEN vt0.c1 THEN 0.8593945793692304 WHEN vt0.c0 THEN ')}え' WHEN vt0.c0 THEN vt0.c1 END)))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (NULLIF(DISTINCT vt0.c1, vt0.c0)) AND (vt0.c1 COLLATE BINARY)), CASE WHEN CAST(vt0.c0 AS REAL) THEN vt0.c1 WHEN (((vt0.c1))<>((NULL))) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c1 COLLATE RTRIM WHEN CAST(0.4124656590084832 AS NUMERIC) THEN (vt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) AND ((CASE WHEN vt0.c1 THEN 0.8593945793692304 WHEN vt0.c0 THEN ')}え' WHEN vt0.c0 THEN vt0.c1 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (NULLIF(DISTINCT vt0.c1, vt0.c0)) AND (vt0.c1 COLLATE BINARY)), CASE WHEN CAST(vt0.c0 AS REAL) THEN vt0.c1 WHEN (((vt0.c1))!=((NULL))) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c1 COLLATE RTRIM WHEN CAST(0.4124656590084832 AS NUMERIC) THEN (vt0.c0 IN ()) END ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) AND ((CASE WHEN vt0.c1 THEN 0.8593945793692304 WHEN vt0.c0 THEN ')}え' WHEN vt0.c0 THEN vt0.c1 END)))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (NULLIF(DISTINCT vt0.c1, vt0.c0)) AND (vt0.c1 COLLATE BINARY)), CASE WHEN CAST(vt0.c0 AS REAL) THEN vt0.c1 WHEN (((vt0.c1))<>((NULL))) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c1 COLLATE RTRIM WHEN CAST(0.4124656590084832 AS NUMERIC) THEN (vt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) AND ((CASE WHEN vt0.c1 THEN 0.8593945793692304 WHEN vt0.c0 THEN ')}え' WHEN vt0.c0 THEN vt0.c1 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (NULLIF(DISTINCT vt0.c1, vt0.c0)) AND (vt0.c1 COLLATE BINARY)), CASE WHEN CAST(vt0.c0 AS REAL) THEN vt0.c1 WHEN (((vt0.c1))!=((NULL))) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c1 COLLATE RTRIM WHEN CAST(0.4124656590084832 AS NUMERIC) THEN (vt0.c0 IN ()) END ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) AND ((CASE WHEN vt0.c1 THEN 0.8593945793692304 WHEN vt0.c0 THEN ')}え' WHEN vt0.c0 THEN vt0.c1 END)))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (NULLIF(DISTINCT vt0.c1, vt0.c0)) AND (vt0.c1 COLLATE BINARY)), CASE WHEN CAST(vt0.c0 AS REAL) THEN vt0.c1 WHEN (((vt0.c1))<>((NULL))) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c1 COLLATE RTRIM WHEN CAST(0.4124656590084832 AS NUMERIC) THEN (vt0.c0 IN ()) END ASC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c30))>=((t0.c0))) IN (CASE t0.c0  WHEN t0.c30 THEN 'ln' END, CASE t0.c18  WHEN t0.c58 THEN t0.c23 WHEN t0.c30 THEN t0.c30 WHEN t0.c61 THEN t0.c18 END))) ORDER BY (+ (((t0.c18)%(t0.c82))))  NULLS FIRST, 1.133461072E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c30))>=((t0.c0))) IN (CASE t0.c0  WHEN t0.c30 THEN 'ln' END, CASE t0.c18  WHEN t0.c58 THEN t0.c23 WHEN t0.c30 THEN t0.c30 WHEN t0.c61 THEN t0.c18 END))) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c18)%(t0.c82))))  NULLS FIRST, 1.133461072E9  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c30))>=((t0.c0))) IN (CASE t0.c0  WHEN t0.c30 THEN 'ln' END, CASE t0.c18  WHEN t0.c58 THEN t0.c23 WHEN t0.c30 THEN t0.c30 WHEN t0.c61 THEN t0.c18 END))) ORDER BY (+ (((t0.c18)%(t0.c82))))  NULLS FIRST, 1.133461072E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c30))>=((t0.c0))) IN (CASE t0.c0  WHEN t0.c30 THEN 'ln' END, CASE t0.c18  WHEN t0.c58 THEN t0.c23 WHEN t0.c30 THEN t0.c30 WHEN t0.c61 THEN t0.c18 END))) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c18)%(t0.c82))))  NULLS FIRST, 1.133461072E9  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c30))>=((t0.c0))) IN (CASE t0.c0  WHEN t0.c30 THEN 'ln' END, CASE t0.c18  WHEN t0.c58 THEN t0.c23 WHEN t0.c30 THEN t0.c30 WHEN t0.c61 THEN t0.c18 END))) ORDER BY (+ (((t0.c18)%(t0.c82))))  NULLS FIRST, 1.133461072E9  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c82) NOT BETWEEN (t0.c0) AND (t0.c0)))+(vt0.c1))) ORDER BY ((((((vt0.c0) NOT BETWEEN (x'') AND (t0.c0)))OR(((t0.c82) NOT NULL))))OR(((NULL)GLOB(t0.c0))))  NULLS FIRST, (((~ (t0.c23)))>>((NOT (t0.c30)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c82) NOT BETWEEN (t0.c0) AND (t0.c0)))+(vt0.c1))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (x'') AND (t0.c0)))OR(((t0.c82) NOT NULL))))OR(((NULL)GLOB(t0.c0))))  NULLS FIRST, (((~ (t0.c23)))>>((NOT (t0.c30)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c82) NOT BETWEEN (t0.c0) AND (t0.c0)))+(vt0.c1))) ORDER BY ((((((vt0.c0) NOT BETWEEN (x'') AND (t0.c0)))OR(((t0.c82) NOT NULL))))OR(((NULL)GLOB(t0.c0))))  NULLS FIRST, (((~ (t0.c23)))>>((NOT (t0.c30)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c82) NOT BETWEEN (t0.c0) AND (t0.c0)))+(vt0.c1))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (x'') AND (t0.c0)))OR(((t0.c82) NOT NULL))))OR(((NULL)GLOB(t0.c0))))  NULLS FIRST, (((~ (t0.c23)))>>((NOT (t0.c30)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c82) NOT BETWEEN (t0.c0) AND (t0.c0)))+(vt0.c1))) ORDER BY ((((((vt0.c0) NOT BETWEEN (x'') AND (t0.c0)))OR(((t0.c82) NOT NULL))))OR(((NULL)GLOB(t0.c0))))  NULLS FIRST, (((~ (t0.c23)))>>((NOT (t0.c30)))) ASC;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c58) NOTNULL))OR(((x'')LIKE(x'')))))OR(((((((((t0.c82)OR(t0.c23)))OR(t0.c61)))OR(t0.c0)))AND(t0.c18)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c58) NOTNULL))OR(((x'')LIKE(x'')))))OR(((((((((t0.c82)OR(t0.c23)))OR(t0.c61)))OR(t0.c0)))AND(t0.c18))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c58) NOTNULL))OR(((x'')LIKE(x'')))))OR(((((((((t0.c82)OR(t0.c23)))OR(t0.c61)))OR(t0.c0)))AND(t0.c18)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c58) NOTNULL))OR(((x'')LIKE(x'')))))OR(((((((((t0.c82)OR(t0.c23)))OR(t0.c61)))OR(t0.c0)))AND(t0.c18))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c58) NOTNULL))OR(((x'')LIKE(x'')))))OR(((((((((t0.c82)OR(t0.c23)))OR(t0.c61)))OR(t0.c0)))AND(t0.c18)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((t0.c61 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c61 IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((t0.c61 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c61 IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((t0.c61 IN ()));
SELECT ALL * FROM vt0, t0 WHERE (t0.c58) ORDER BY (+ ((t0.c61 IN ())));
SELECT SUM(count) FROM (SELECT ((t0.c58) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ ((t0.c61 IN ()))));
SELECT ALL * FROM vt0, t0 WHERE (t0.c58) ORDER BY (+ ((t0.c61 IN ())));
SELECT SUM(count) FROM (SELECT ((t0.c58) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ ((t0.c61 IN ()))));
SELECT ALL * FROM vt0, t0 WHERE (t0.c58) ORDER BY (+ ((t0.c61 IN ())));
SELECT * FROM t0 CROSS JOIN vt0 ON (~ (((t0.c23)-(t0.c82)))) WHERE (((vt0.c1) NOT BETWEEN (((((t0.c58)OR(vt0.c0)))OR(t0.c0))) AND (((((t0.c0)AND(t0.c58)))AND(vt0.c0))))) ORDER BY 0xfffffffff7094a8b DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (((((t0.c58)OR(vt0.c0)))OR(t0.c0))) AND (((((t0.c0)AND(t0.c58)))AND(vt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (~ (((t0.c23)-(t0.c82)))) ORDER BY 0Xfffffffff7094a8b DESC);
SELECT * FROM t0 CROSS JOIN vt0 ON (~ (((t0.c23)-(t0.c82)))) WHERE (((vt0.c1) NOT BETWEEN (((((t0.c58)OR(vt0.c0)))OR(t0.c0))) AND (((((t0.c0)AND(t0.c58)))AND(vt0.c0))))) ORDER BY 0xfffffffff7094a8b DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (((((t0.c58)OR(vt0.c0)))OR(t0.c0))) AND (((((t0.c0)AND(t0.c58)))AND(vt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (~ (((t0.c23)-(t0.c82)))) ORDER BY 0Xfffffffff7094a8b DESC);
SELECT * FROM t0 CROSS JOIN vt0 ON (~ (((t0.c23)-(t0.c82)))) WHERE (((vt0.c1) NOT BETWEEN (((((t0.c58)OR(vt0.c0)))OR(t0.c0))) AND (((((t0.c0)AND(t0.c58)))AND(vt0.c0))))) ORDER BY 0xfffffffff7094a8b DESC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c82) BETWEEN (t0.c58) AND (t0.c61))) NOT BETWEEN (((((t0.c30)AND(t0.c23)))AND(t0.c61))) AND (json_array(vt0.c0, t0.c18))) WHERE (((((t0.c30) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c30) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c82) BETWEEN (t0.c58) AND (t0.c61))) NOT BETWEEN (((((t0.c30)AND(t0.c23)))AND(t0.c61))) AND (json_array(vt0.c0, t0.c18))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c82) BETWEEN (t0.c58) AND (t0.c61))) NOT BETWEEN (((((t0.c30)AND(t0.c23)))AND(t0.c61))) AND (json_array(vt0.c0, t0.c18))) WHERE (((((t0.c30) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c30) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c82) BETWEEN (t0.c58) AND (t0.c61))) NOT BETWEEN (((((t0.c30)AND(t0.c23)))AND(t0.c61))) AND (json_array(vt0.c0, t0.c18))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c82) BETWEEN (t0.c58) AND (t0.c61))) NOT BETWEEN (((((t0.c30)AND(t0.c23)))AND(t0.c61))) AND (json_array(vt0.c0, t0.c18))) WHERE (((((t0.c30) ISNULL)) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c18)) BETWEEN (((~ (t0.c0)))) AND ((((t0.c18)OR(t0.c58)))))) ORDER BY ((((t0.c23) IS TRUE))>=((((x'')) NOT BETWEEN ((t0.c23)) AND ((t0.c18)))))  NULLS FIRST, (TRIM(DISTINCT t0.c23) IN (((t0.c23) NOT BETWEEN (t0.c0) AND ('p\M?')), ((t0.c18)IS(t0.c18)))) ASC  NULLS LAST, ((((((((((t0.c18)AND(vt0.c1)))AND(vt0.c1)))AND(t0.c30)))OR(NULL)))>>(IFNULL(DISTINCT t0.c0, t0.c58))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c18)) BETWEEN (((~ (t0.c0)))) AND ((((t0.c18)OR(t0.c58)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c23) IS TRUE))>=((((x'')) NOT BETWEEN ((t0.c23)) AND ((t0.c18)))))  NULLS FIRST, (TRIM(DISTINCT t0.c23) IN (((t0.c23) NOT BETWEEN (t0.c0) AND ('p\M?')), ((t0.c18)IS(t0.c18)))) ASC  NULLS LAST, ((((((((((t0.c18)AND(vt0.c1)))AND(vt0.c1)))AND(t0.c30)))OR(NULL)))>>(IFNULL(DISTINCT t0.c0, t0.c58))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c18)) BETWEEN (((~ (t0.c0)))) AND ((((t0.c18)OR(t0.c58)))))) ORDER BY ((((t0.c23) IS TRUE))>=((((x'')) NOT BETWEEN ((t0.c23)) AND ((t0.c18)))))  NULLS FIRST, (TRIM(DISTINCT t0.c23) IN (((t0.c23) NOT BETWEEN (t0.c0) AND ('p\M?')), ((t0.c18)IS(t0.c18)))) ASC  NULLS LAST, ((((((((((t0.c18)AND(vt0.c1)))AND(vt0.c1)))AND(t0.c30)))OR(NULL)))>>(IFNULL(DISTINCT t0.c0, t0.c58))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c18)) BETWEEN (((~ (t0.c0)))) AND ((((t0.c18)OR(t0.c58)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c23) IS TRUE))>=((((x'')) NOT BETWEEN ((t0.c23)) AND ((t0.c18)))))  NULLS FIRST, (TRIM(DISTINCT t0.c23) IN (((t0.c23) NOT BETWEEN (t0.c0) AND ('p\M?')), ((t0.c18)IS(t0.c18)))) ASC  NULLS LAST, ((((((((((t0.c18)AND(vt0.c1)))AND(vt0.c1)))AND(t0.c30)))OR(NULL)))>>(IFNULL(DISTINCT t0.c0, t0.c58))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c18)) BETWEEN (((~ (t0.c0)))) AND ((((t0.c18)OR(t0.c58)))))) ORDER BY ((((t0.c23) IS TRUE))>=((((x'')) NOT BETWEEN ((t0.c23)) AND ((t0.c18)))))  NULLS FIRST, (TRIM(DISTINCT t0.c23) IN (((t0.c23) NOT BETWEEN (t0.c0) AND ('p\M?')), ((t0.c18)IS(t0.c18)))) ASC  NULLS LAST, ((((((((((t0.c18)AND(vt0.c1)))AND(vt0.c1)))AND(t0.c30)))OR(NULL)))>>(IFNULL(DISTINCT t0.c0, t0.c58))) DESC;
SELECT * FROM vt0 WHERE (x'') ORDER BY CAST(((vt0.c0)>>(vt0.c0)) AS REAL)  NULLS FIRST, 0.9139604767301991  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>>(vt0.c0)) AS REAL)  NULLS FIRST, 0.9139604767301991  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY CAST(((vt0.c0)>>(vt0.c0)) AS REAL)  NULLS FIRST, 0.9139604767301991  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>>(vt0.c0)) AS REAL)  NULLS FIRST, 0.9139604767301991  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY CAST(((vt0.c0)>>(vt0.c0)) AS REAL)  NULLS FIRST, 0.9139604767301991  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c1 COLLATE RTRIM)))OR((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1 COLLATE RTRIM)))OR((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c1 COLLATE RTRIM)))OR((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1 COLLATE RTRIM)))OR((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c1 COLLATE RTRIM)))OR((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((CAST(t0.c23 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c23 AS INTEGER) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((CAST(t0.c23 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c23 AS INTEGER) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((CAST(t0.c23 AS INTEGER) IN ()));
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0)|(vt0.c1))) NOT NULL)) ORDER BY ((CAST(t0.c30 AS INTEGER))GLOB(((t0.c18) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c30 AS INTEGER))GLOB(((t0.c18) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0)|(vt0.c1))) NOT NULL)) ORDER BY ((CAST(t0.c30 AS INTEGER))GLOB(((t0.c18) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c30 AS INTEGER))GLOB(((t0.c18) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0)|(vt0.c1))) NOT NULL)) ORDER BY ((CAST(t0.c30 AS INTEGER))GLOB(((t0.c18) ISNULL)))  NULLS FIRST;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((CASE t0.c18  WHEN t0.c58 THEN t0.c23 ELSE t0.c30 END))<((((((t0.c0)AND(t0.c61)))AND(t0.c0))))) WHERE (((t0.c18 IN (t0.c23)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c18 IN (t0.c23)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((CASE t0.c18  WHEN t0.c58 THEN t0.c23 ELSE t0.c30 END))<((((((t0.c0)AND(t0.c61)))AND(t0.c0))))));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((CASE t0.c18  WHEN t0.c58 THEN t0.c23 ELSE t0.c30 END))<((((((t0.c0)AND(t0.c61)))AND(t0.c0))))) WHERE (((t0.c18 IN (t0.c23)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c18 IN (t0.c23)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((CASE t0.c18  WHEN t0.c58 THEN t0.c23 ELSE t0.c30 END))<((((((t0.c0)AND(t0.c61)))AND(t0.c0))))));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((CASE t0.c18  WHEN t0.c58 THEN t0.c23 ELSE t0.c30 END))<((((((t0.c0)AND(t0.c61)))AND(t0.c0))))) WHERE (((t0.c18 IN (t0.c23)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((CAST(vt0.c1 AS INTEGER)))==(((t0.c61 IN ()))))) ORDER BY x'6143' ASC, (((CAST(vt0.c0 AS TEXT)))==((((((((((((((t0.c58)AND(t0.c30)))OR(t0.c58)))AND(t0.c30)))AND(t0.c0)))AND(t0.c18)))AND(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS INTEGER)))==(((t0.c61 IN ()))))) IS TRUE)  as count FROM t0, vt0 ORDER BY x'6143' ASC, (((CAST(vt0.c0 AS TEXT)))=((((((((((((((t0.c58)AND(t0.c30)))OR(t0.c58)))AND(t0.c30)))AND(t0.c0)))AND(t0.c18)))AND(vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((CAST(vt0.c1 AS INTEGER)))==(((t0.c61 IN ()))))) ORDER BY x'6143' ASC, (((CAST(vt0.c0 AS TEXT)))==((((((((((((((t0.c58)AND(t0.c30)))OR(t0.c58)))AND(t0.c30)))AND(t0.c0)))AND(t0.c18)))AND(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS INTEGER)))==(((t0.c61 IN ()))))) IS TRUE)  as count FROM t0, vt0 ORDER BY x'6143' ASC, (((CAST(vt0.c0 AS TEXT)))=((((((((((((((t0.c58)AND(t0.c30)))OR(t0.c58)))AND(t0.c30)))AND(t0.c0)))AND(t0.c18)))AND(vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((CAST(vt0.c1 AS INTEGER)))==(((t0.c61 IN ()))))) ORDER BY x'6143' ASC, (((CAST(vt0.c0 AS TEXT)))==((((((((((((((t0.c58)AND(t0.c30)))OR(t0.c58)))AND(t0.c30)))AND(t0.c0)))AND(t0.c18)))AND(vt0.c1))))) DESC;
SELECT * FROM vt0 CROSS JOIN t0 ON ((t0.c61) NOTNULL) WHERE (CAST((~ (t0.c58)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c58)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((t0.c61) NOTNULL));
SELECT * FROM vt0 CROSS JOIN t0 ON ((t0.c61) NOTNULL) WHERE (CAST((~ (t0.c58)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c58)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((t0.c61) NOTNULL));
SELECT * FROM vt0 CROSS JOIN t0 ON ((t0.c61) NOTNULL) WHERE (CAST((~ (t0.c58)) AS NUMERIC));
SELECT COUNT(*) FROM t0, vt0 WHERE (-9223372036854775808);
SELECT SUM(count) FROM (SELECT ((-9223372036854775808) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (-9223372036854775808);
SELECT SUM(count) FROM (SELECT ((-9223372036854775808) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (-9223372036854775808);
SELECT ALL * FROM t0 WHERE (CAST((t0.c61 IN ()) AS BLOB)) ORDER BY (((x'cc476138d4c2') IS FALSE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c61 IN ()) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (((x'cc476138d4c2') IS FALSE) IN ())  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST((t0.c61 IN ()) AS BLOB)) ORDER BY (((x'cc476138d4c2') IS FALSE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c61 IN ()) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (((x'cc476138d4c2') IS FALSE) IN ())  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST((t0.c61 IN ()) AS BLOB)) ORDER BY (((x'cc476138d4c2') IS FALSE) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c30)||(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c30)||(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c30)||(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c30)||(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c30)||(t0.c0)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((- (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (vt0.c1)));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c18) NOT BETWEEN (t0.c58) AND (t0.c58))) BETWEEN ((+ (vt0.c0))) AND (((t0.c0)<>(t0.c0))))) ORDER BY CAST(((vt0.c1)-(t0.c18)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c18) NOT BETWEEN (t0.c58) AND (t0.c58))) BETWEEN ((+ (vt0.c0))) AND (((t0.c0)<>(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((vt0.c1)-(t0.c18)) AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c18) NOT BETWEEN (t0.c58) AND (t0.c58))) BETWEEN ((+ (vt0.c0))) AND (((t0.c0)<>(t0.c0))))) ORDER BY CAST(((vt0.c1)-(t0.c18)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c18) NOT BETWEEN (t0.c58) AND (t0.c58))) BETWEEN ((+ (vt0.c0))) AND (((t0.c0)<>(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((vt0.c1)-(t0.c18)) AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c18) NOT BETWEEN (t0.c58) AND (t0.c58))) BETWEEN ((+ (vt0.c0))) AND (((t0.c0)<>(t0.c0))))) ORDER BY CAST(((vt0.c1)-(t0.c18)) AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c82)GLOB('#iY{Gbf')) COLLATE RTRIM) ORDER BY 0.011100546290407909  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c82)GLOB('#iY{Gbf')) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY 0.011100546290407909  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c82)GLOB('#iY{Gbf')) COLLATE RTRIM) ORDER BY 0.011100546290407909  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c82)GLOB('#iY{Gbf')) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY 0.011100546290407909  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c82)GLOB('#iY{Gbf')) COLLATE RTRIM) ORDER BY 0.011100546290407909  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c23) NOTNULL)) ORDER BY CAST(CASE t0.c61  WHEN t0.c0 THEN t0.c58 ELSE t0.c82 END AS BLOB)  NULLS LAST, ((x'') IS FALSE);
SELECT SUM(count) FROM (SELECT ((((t0.c23) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c61  WHEN t0.c0 THEN t0.c58 ELSE t0.c82 END AS BLOB)  NULLS LAST, ((x'') IS FALSE));
SELECT COUNT(*) FROM t0 WHERE (((t0.c23) NOTNULL)) ORDER BY CAST(CASE t0.c61  WHEN t0.c0 THEN t0.c58 ELSE t0.c82 END AS BLOB)  NULLS LAST, ((x'') IS FALSE);
SELECT SUM(count) FROM (SELECT ((((t0.c23) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c61  WHEN t0.c0 THEN t0.c58 ELSE t0.c82 END AS BLOB)  NULLS LAST, ((x'') IS FALSE));
SELECT COUNT(*) FROM t0 WHERE (((t0.c23) NOTNULL)) ORDER BY CAST(CASE t0.c61  WHEN t0.c0 THEN t0.c58 ELSE t0.c82 END AS BLOB)  NULLS LAST, ((x'') IS FALSE);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (CASE WHEN x'3951' THEN ((((t0.c18)OR(t0.c58)))OR(t0.c0)) ELSE CAST(t0.c58 AS BLOB) END) ORDER BY CASE WHEN CASE x'eeac'  WHEN t0.c23 THEN t0.c23 END THEN ((t0.c23) ISNULL) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'3951' THEN ((((t0.c18)OR(t0.c58)))OR(t0.c0)) ELSE CAST(t0.c58 AS BLOB) END) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE x'eeac'  WHEN t0.c23 THEN t0.c23 END THEN ((t0.c23) ISNULL) END ASC);
SELECT * FROM t0 WHERE (CASE WHEN x'3951' THEN ((((t0.c18)OR(t0.c58)))OR(t0.c0)) ELSE CAST(t0.c58 AS BLOB) END) ORDER BY CASE WHEN CASE x'eeac'  WHEN t0.c23 THEN t0.c23 END THEN ((t0.c23) ISNULL) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'3951' THEN ((((t0.c18)OR(t0.c58)))OR(t0.c0)) ELSE CAST(t0.c58 AS BLOB) END) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE x'eeac'  WHEN t0.c23 THEN t0.c23 END THEN ((t0.c23) ISNULL) END ASC);
SELECT * FROM t0 WHERE (CASE WHEN x'3951' THEN ((((t0.c18)OR(t0.c58)))OR(t0.c0)) ELSE CAST(t0.c58 AS BLOB) END) ORDER BY CASE WHEN CASE x'eeac'  WHEN t0.c23 THEN t0.c23 END THEN ((t0.c23) ISNULL) END ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((t0.c58) NOT BETWEEN (t0.c18) AND (t0.c58)) THEN ((((t0.c30)OR(t0.c61)))OR(t0.c82)) ELSE ((t0.c30) BETWEEN (t0.c18) AND (t0.c58)) END) ORDER BY CAST(((vt0.c0)*(t0.c61)) AS INTEGER)  NULLS LAST, (- (((t0.c82) NOTNULL))) ASC, ((((t0.c0)<(NULL)))>=(CAST(t0.c23 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c58) NOT BETWEEN (t0.c18) AND (t0.c58)) THEN ((((t0.c30)OR(t0.c61)))OR(t0.c82)) ELSE ((t0.c30) BETWEEN (t0.c18) AND (t0.c58)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((vt0.c0)*(t0.c61)) AS INTEGER)  NULLS LAST, (- (((t0.c82) NOTNULL))) ASC, ((((t0.c0)<(NULL)))>=(CAST(t0.c23 AS REAL))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((t0.c58) NOT BETWEEN (t0.c18) AND (t0.c58)) THEN ((((t0.c30)OR(t0.c61)))OR(t0.c82)) ELSE ((t0.c30) BETWEEN (t0.c18) AND (t0.c58)) END) ORDER BY CAST(((vt0.c0)*(t0.c61)) AS INTEGER)  NULLS LAST, (- (((t0.c82) NOTNULL))) ASC, ((((t0.c0)<(NULL)))>=(CAST(t0.c23 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c58) NOT BETWEEN (t0.c18) AND (t0.c58)) THEN ((((t0.c30)OR(t0.c61)))OR(t0.c82)) ELSE ((t0.c30) BETWEEN (t0.c18) AND (t0.c58)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((vt0.c0)*(t0.c61)) AS INTEGER)  NULLS LAST, (- (((t0.c82) NOTNULL))) ASC, ((((t0.c0)<(NULL)))>=(CAST(t0.c23 AS REAL))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((t0.c58) NOT BETWEEN (t0.c18) AND (t0.c58)) THEN ((((t0.c30)OR(t0.c61)))OR(t0.c82)) ELSE ((t0.c30) BETWEEN (t0.c18) AND (t0.c58)) END) ORDER BY CAST(((vt0.c0)*(t0.c61)) AS INTEGER)  NULLS LAST, (- (((t0.c82) NOTNULL))) ASC, ((((t0.c0)<(NULL)))>=(CAST(t0.c23 AS REAL))) ASC;
SELECT * FROM vt0, t0 WHERE (((((((x'1fc6')AND(t0.c0)))AND(t0.c58)))GLOB(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'1fc6')AND(t0.c0)))AND(t0.c58)))GLOB(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((x'1fc6')AND(t0.c0)))AND(t0.c58)))GLOB(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'1fc6')AND(t0.c0)))AND(t0.c58)))GLOB(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((x'1fc6')AND(t0.c0)))AND(t0.c58)))GLOB(vt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LOWER(x'') AS NUMERIC)) ORDER BY ((((((((vt0.c1)AND((- (vt0.c1)))))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(x'') AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c1)AND((- (vt0.c1)))))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LOWER(x'') AS NUMERIC)) ORDER BY ((((((((vt0.c1)AND((- (vt0.c1)))))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(x'') AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c1)AND((- (vt0.c1)))))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LOWER(x'') AS NUMERIC)) ORDER BY ((((((((vt0.c1)AND((- (vt0.c1)))))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON LIKE(((((((((t0.c30)AND(vt0.c1)))AND(NULL)))OR(t0.c82)))OR(t0.c82)), (((t0.c23)) NOT BETWEEN ((vt0.c1)) AND ((t0.c18))), '\') WHERE (CASE ((t0.c18)IS(t0.c82))  WHEN ((((t0.c30)AND(0.9234329744325686)))OR(vt0.c0)) THEN LIKE(t0.c18, t0.c82) ELSE ((t0.c58) NOT BETWEEN (t0.c58) AND (t0.c61)) END) ORDER BY ((~ (t0.c58)) IN ()) DESC, (((vt0.c1) IS FALSE) IN (((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c18)IS(t0.c82))  WHEN ((((t0.c30)AND(0.9234329744325686)))OR(vt0.c0)) THEN LIKE(t0.c18, t0.c82) ELSE ((t0.c58) NOT BETWEEN (t0.c58) AND (t0.c61)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON LIKE(((((((((t0.c30)AND(vt0.c1)))AND(NULL)))OR(t0.c82)))OR(t0.c82)), (((t0.c23)) NOT BETWEEN ((vt0.c1)) AND ((t0.c18))), '\') ORDER BY ((~ (t0.c58)) IN ()) DESC, (((vt0.c1) IS FALSE) IN (((vt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON LIKE(((((((((t0.c30)AND(vt0.c1)))AND(NULL)))OR(t0.c82)))OR(t0.c82)), (((t0.c23)) NOT BETWEEN ((vt0.c1)) AND ((t0.c18))), '\') WHERE (CASE ((t0.c18)IS(t0.c82))  WHEN ((((t0.c30)AND(0.9234329744325686)))OR(vt0.c0)) THEN LIKE(t0.c18, t0.c82) ELSE ((t0.c58) NOT BETWEEN (t0.c58) AND (t0.c61)) END) ORDER BY ((~ (t0.c58)) IN ()) DESC, (((vt0.c1) IS FALSE) IN (((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c18)IS(t0.c82))  WHEN ((((t0.c30)AND(0.9234329744325686)))OR(vt0.c0)) THEN LIKE(t0.c18, t0.c82) ELSE ((t0.c58) NOT BETWEEN (t0.c58) AND (t0.c61)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON LIKE(((((((((t0.c30)AND(vt0.c1)))AND(NULL)))OR(t0.c82)))OR(t0.c82)), (((t0.c23)) NOT BETWEEN ((vt0.c1)) AND ((t0.c18))), '\') ORDER BY ((~ (t0.c58)) IN ()) DESC, (((vt0.c1) IS FALSE) IN (((vt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON LIKE(((((((((t0.c30)AND(vt0.c1)))AND(NULL)))OR(t0.c82)))OR(t0.c82)), (((t0.c23)) NOT BETWEEN ((vt0.c1)) AND ((t0.c18))), '\') WHERE (CASE ((t0.c18)IS(t0.c82))  WHEN ((((t0.c30)AND(0.9234329744325686)))OR(vt0.c0)) THEN LIKE(t0.c18, t0.c82) ELSE ((t0.c58) NOT BETWEEN (t0.c58) AND (t0.c61)) END) ORDER BY ((~ (t0.c58)) IN ()) DESC, (((vt0.c1) IS FALSE) IN (((vt0.c1) NOT NULL)));
SELECT ALL * FROM t0 WHERE (t0.c82) ORDER BY CASE WHEN (+ (t0.c61)) THEN t0.c18 END ASC  NULLS LAST, ((IFNULL(t0.c0, t0.c23)) NOT BETWEEN (((t0.c18)OR(t0.c30))) AND (t0.c0)), NULLIF(DISTINCT t0.c30 COLLATE BINARY, t0.c30);
SELECT SUM(count) FROM (SELECT ((t0.c82) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (+ (t0.c61)) THEN t0.c18 END ASC  NULLS LAST, ((IFNULL(t0.c0, t0.c23)) NOT BETWEEN (((t0.c18)OR(t0.c30))) AND (t0.c0)), NULLIF(DISTINCT t0.c30 COLLATE BINARY, t0.c30));
SELECT ALL * FROM t0 WHERE (t0.c82) ORDER BY CASE WHEN (+ (t0.c61)) THEN t0.c18 END ASC  NULLS LAST, ((IFNULL(t0.c0, t0.c23)) NOT BETWEEN (((t0.c18)OR(t0.c30))) AND (t0.c0)), NULLIF(DISTINCT t0.c30 COLLATE BINARY, t0.c30);
SELECT SUM(count) FROM (SELECT ((t0.c82) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (+ (t0.c61)) THEN t0.c18 END ASC  NULLS LAST, ((IFNULL(t0.c0, t0.c23)) NOT BETWEEN (((t0.c18)OR(t0.c30))) AND (t0.c0)), NULLIF(DISTINCT t0.c30 COLLATE BINARY, t0.c30));
SELECT ALL * FROM t0 WHERE (t0.c82) ORDER BY CASE WHEN (+ (t0.c61)) THEN t0.c18 END ASC  NULLS LAST, ((IFNULL(t0.c0, t0.c23)) NOT BETWEEN (((t0.c18)OR(t0.c30))) AND (t0.c0)), NULLIF(DISTINCT t0.c30 COLLATE BINARY, t0.c30);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c23)>=(t0.c30))  WHEN (((t0.c58, t0.c0, t0.c61))>((t0.c23, t0.c18, t0.c0))) THEN (((t0.c18)) NOT BETWEEN ((t0.c18)) AND ((t0.c23))) WHEN t0.c0 THEN t0.c61 COLLATE BINARY WHEN 0.15312062470205823 THEN ((t0.c61) NOT BETWEEN (t0.c23) AND (t0.c58)) WHEN load_extension(t0.c82) THEN t0.c58 WHEN (~ (t0.c18)) THEN ((t0.c61) NOTNULL) ELSE CASE WHEN t0.c82 THEN t0.c61 END END) ORDER BY CAST(t0.c18 COLLATE NOCASE AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c23)>=(t0.c30))  WHEN (((t0.c58, t0.c0, t0.c61))>((t0.c23, t0.c18, t0.c0))) THEN (((t0.c18)) NOT BETWEEN ((t0.c18)) AND ((t0.c23))) WHEN t0.c0 THEN t0.c61 COLLATE BINARY WHEN 0.15312062470205823 THEN ((t0.c61) NOT BETWEEN (t0.c23) AND (t0.c58)) WHEN load_extension(t0.c82) THEN t0.c58 WHEN (~ (t0.c18)) THEN ((t0.c61) NOTNULL) ELSE CASE WHEN t0.c82 THEN t0.c61 END END) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c18 COLLATE NOCASE AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c23)>=(t0.c30))  WHEN (((t0.c58, t0.c0, t0.c61))>((t0.c23, t0.c18, t0.c0))) THEN (((t0.c18)) NOT BETWEEN ((t0.c18)) AND ((t0.c23))) WHEN t0.c0 THEN t0.c61 COLLATE BINARY WHEN 0.15312062470205823 THEN ((t0.c61) NOT BETWEEN (t0.c23) AND (t0.c58)) WHEN load_extension(t0.c82) THEN t0.c58 WHEN (~ (t0.c18)) THEN ((t0.c61) NOTNULL) ELSE CASE WHEN t0.c82 THEN t0.c61 END END) ORDER BY CAST(t0.c18 COLLATE NOCASE AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c23)>=(t0.c30))  WHEN (((t0.c58, t0.c0, t0.c61))>((t0.c23, t0.c18, t0.c0))) THEN (((t0.c18)) NOT BETWEEN ((t0.c18)) AND ((t0.c23))) WHEN t0.c0 THEN t0.c61 COLLATE BINARY WHEN 0.15312062470205823 THEN ((t0.c61) NOT BETWEEN (t0.c23) AND (t0.c58)) WHEN load_extension(t0.c82) THEN t0.c58 WHEN (~ (t0.c18)) THEN ((t0.c61) NOTNULL) ELSE CASE WHEN t0.c82 THEN t0.c61 END END) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c18 COLLATE NOCASE AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((((((t0.c61)AND(x'9aaf')))AND(t0.c30)))AND(t0.c58)))OR(t0.c58)))>(((((-997545931)OR(t0.c61)))OR(t0.c58)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c61)AND(x'9aaf')))AND(t0.c30)))AND(t0.c58)))OR(t0.c58)))>(((((-997545931)OR(t0.c61)))OR(t0.c58))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c61)AND(x'9aaf')))AND(t0.c30)))AND(t0.c58)))OR(t0.c58)))>(((((-997545931)OR(t0.c61)))OR(t0.c58)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c61)AND(x'9aaf')))AND(t0.c30)))AND(t0.c58)))OR(t0.c58)))>(((((-997545931)OR(t0.c61)))OR(t0.c58))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c61)AND(x'9aaf')))AND(t0.c30)))AND(t0.c58)))OR(t0.c58)))>(((((-997545931)OR(t0.c61)))OR(t0.c58)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL));
SELECT * FROM vt0, t0 WHERE (t0.c18) ORDER BY (((t0.c23, t0.c0, -9.27792857E8)) NOT BETWEEN ((((((t0.c30)OR(t0.c30)))AND(t0.c58)), ((((t0.c30)OR(t0.c61)))AND(t0.c30)), vt0.c1 COLLATE RTRIM)) AND ((LIKELIHOOD(DISTINCT 0.6489141072794288, 0.5874072522653273), x'23ee', t0.c61))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c18) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c23, t0.c0, -9.27792857E8)) NOT BETWEEN ((((((t0.c30)OR(t0.c30)))AND(t0.c58)), ((((t0.c30)OR(t0.c61)))AND(t0.c30)), vt0.c1 COLLATE RTRIM)) AND ((LIKELIHOOD(DISTINCT 0.6489141072794288, 0.5874072522653273), x'23ee', t0.c61))) ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (t0.c18) ORDER BY (((t0.c23, t0.c0, -9.27792857E8)) NOT BETWEEN ((((((t0.c30)OR(t0.c30)))AND(t0.c58)), ((((t0.c30)OR(t0.c61)))AND(t0.c30)), vt0.c1 COLLATE RTRIM)) AND ((LIKELIHOOD(DISTINCT 0.6489141072794288, 0.5874072522653273), x'23ee', t0.c61))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c18) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c23, t0.c0, -9.27792857E8)) NOT BETWEEN ((((((t0.c30)OR(t0.c30)))AND(t0.c58)), ((((t0.c30)OR(t0.c61)))AND(t0.c30)), vt0.c1 COLLATE RTRIM)) AND ((LIKELIHOOD(DISTINCT 0.6489141072794288, 0.5874072522653273), x'23ee', t0.c61))) ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (t0.c18) ORDER BY (((t0.c23, t0.c0, -9.27792857E8)) NOT BETWEEN ((((((t0.c30)OR(t0.c30)))AND(t0.c58)), ((((t0.c30)OR(t0.c61)))AND(t0.c30)), vt0.c1 COLLATE RTRIM)) AND ((LIKELIHOOD(DISTINCT 0.6489141072794288, 0.5874072522653273), x'23ee', t0.c61))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (0.8328733992945898) AND (vt0.c1))) NOT NULL)) ORDER BY ((CAST('' AS INTEGER)) IS FALSE)  NULLS FIRST, vt0.c0 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (0.8328733992945898) AND (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST('' AS INTEGER)) IS FALSE)  NULLS FIRST, vt0.c0 COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (0.8328733992945898) AND (vt0.c1))) NOT NULL)) ORDER BY ((CAST('' AS INTEGER)) IS FALSE)  NULLS FIRST, vt0.c0 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (0.8328733992945898) AND (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST('' AS INTEGER)) IS FALSE)  NULLS FIRST, vt0.c0 COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (0.8328733992945898) AND (vt0.c1))) NOT NULL)) ORDER BY ((CAST('' AS INTEGER)) IS FALSE)  NULLS FIRST, vt0.c0 COLLATE RTRIM ASC;
SELECT * FROM t0 INNER JOIN vt0 ON (((((t0.c61)%(t0.c61))))>=((((t0.c23) BETWEEN (t0.c23) AND (vt0.c1))))) WHERE (((NULL)||(t0.c58 COLLATE BINARY))) ORDER BY (((((t0.c58, t0.c18, t0.c18))<((x'', t0.c18, t0.c61))))||(t0.c0 COLLATE NOCASE)), ((- ('D1WH5+KT')) IN ());
SELECT SUM(count) FROM (SELECT ((((NULL)||(t0.c58 COLLATE BINARY))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((t0.c61)%(t0.c61))))>=((((t0.c23) BETWEEN (t0.c23) AND (vt0.c1))))) ORDER BY (((((t0.c58, t0.c18, t0.c18))<((x'', t0.c18, t0.c61))))||(t0.c0 COLLATE NOCASE)), ((- ('D1WH5+KT')) IN ()));
SELECT * FROM t0 INNER JOIN vt0 ON (((((t0.c61)%(t0.c61))))>=((((t0.c23) BETWEEN (t0.c23) AND (vt0.c1))))) WHERE (((NULL)||(t0.c58 COLLATE BINARY))) ORDER BY (((((t0.c58, t0.c18, t0.c18))<((x'', t0.c18, t0.c61))))||(t0.c0 COLLATE NOCASE)), ((- ('D1WH5+KT')) IN ());
SELECT SUM(count) FROM (SELECT ((((NULL)||(t0.c58 COLLATE BINARY))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((t0.c61)%(t0.c61))))>=((((t0.c23) BETWEEN (t0.c23) AND (vt0.c1))))) ORDER BY (((((t0.c58, t0.c18, t0.c18))<((x'', t0.c18, t0.c61))))||(t0.c0 COLLATE NOCASE)), ((- ('D1WH5+KT')) IN ()));
SELECT * FROM t0 INNER JOIN vt0 ON (((((t0.c61)%(t0.c61))))>=((((t0.c23) BETWEEN (t0.c23) AND (vt0.c1))))) WHERE (((NULL)||(t0.c58 COLLATE BINARY))) ORDER BY (((((t0.c58, t0.c18, t0.c18))<((x'', t0.c18, t0.c61))))||(t0.c0 COLLATE NOCASE)), ((- ('D1WH5+KT')) IN ());
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c23)AND(LAST_INSERT_ROWID())))AND(((t0.c18)<=(x'')))))OR(((t0.c30)<<(x'735a3e6a')))))OR(json_array_length(t0.c61))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c23)AND(LAST_INSERT_ROWID())))AND(((t0.c18)<=(x'')))))OR(((t0.c30)<<(x'735a3e6a')))))OR(json_array_length(t0.c61)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c23)AND(LAST_INSERT_ROWID())))AND(((t0.c18)<=(x'')))))OR(((t0.c30)<<(x'735a3e6a')))))OR(json_array_length(t0.c61))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c23)AND(LAST_INSERT_ROWID())))AND(((t0.c18)<=(x'')))))OR(((t0.c30)<<(x'735a3e6a')))))OR(json_array_length(t0.c61)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c23)AND(LAST_INSERT_ROWID())))AND(((t0.c18)<=(x'')))))OR(((t0.c30)<<(x'735a3e6a')))))OR(json_array_length(t0.c61))));
SELECT * FROM vt0 WHERE (CAST(((NULL)LIKE(vt0.c1)) AS REAL)) ORDER BY (((vt0.c0 IN (vt0.c1))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)LIKE(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1))) IS TRUE) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((NULL)LIKE(vt0.c1)) AS REAL)) ORDER BY (((vt0.c0 IN (vt0.c1))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)LIKE(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1))) IS TRUE) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((NULL)LIKE(vt0.c1)) AS REAL)) ORDER BY (((vt0.c0 IN (vt0.c1))) IS TRUE) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CAST((t0.c61 IN ()) AS INTEGER)) ORDER BY (+ (CAST(t0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c61 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (+ (CAST(t0.c0 AS TEXT)))  NULLS LAST);
SELECT * FROM t0 WHERE (CAST((t0.c61 IN ()) AS INTEGER)) ORDER BY (+ (CAST(t0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c61 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (+ (CAST(t0.c0 AS TEXT)))  NULLS LAST);
SELECT * FROM t0 WHERE (CAST((t0.c61 IN ()) AS INTEGER)) ORDER BY (+ (CAST(t0.c0 AS TEXT)))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((((((((+ (t0.c82)))AND(CASE WHEN t0.c18 THEN t0.c23 END)))OR('乺')))OR(((((t0.c30)AND(t0.c0)))AND(t0.c0)))))AND(((t0.c0)%(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (t0.c82)))AND(CASE WHEN t0.c18 THEN t0.c23 END)))OR('乺')))OR(((((t0.c30)AND(t0.c0)))AND(t0.c0)))))AND(((t0.c0)%(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((+ (t0.c82)))AND(CASE WHEN t0.c18 THEN t0.c23 END)))OR('乺')))OR(((((t0.c30)AND(t0.c0)))AND(t0.c0)))))AND(((t0.c0)%(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (t0.c82)))AND(CASE WHEN t0.c18 THEN t0.c23 END)))OR('乺')))OR(((((t0.c30)AND(t0.c0)))AND(t0.c0)))))AND(((t0.c0)%(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((+ (t0.c82)))AND(CASE WHEN t0.c18 THEN t0.c23 END)))OR('乺')))OR(((((t0.c30)AND(t0.c0)))AND(t0.c0)))))AND(((t0.c0)%(t0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (LOWER(DISTINCT t0.c82));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT t0.c82)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (LOWER(DISTINCT t0.c82));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT t0.c82)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (LOWER(DISTINCT t0.c82));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c61) IS TRUE)  WHEN ((t0.c0)IS(t0.c30)) THEN ((t0.c0) IS TRUE) ELSE ((t0.c0)<>(vt0.c0)) END) ORDER BY ((CASE WHEN t0.c30 THEN t0.c23 ELSE vt0.c0 END) BETWEEN (t0.c23) AND (t0.c82)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c61) IS TRUE)  WHEN ((t0.c0)IS(t0.c30)) THEN ((t0.c0) IS TRUE) ELSE ((t0.c0)<>(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN t0.c30 THEN t0.c23 ELSE vt0.c0 END) BETWEEN (t0.c23) AND (t0.c82)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c61) IS TRUE)  WHEN ((t0.c0)IS(t0.c30)) THEN ((t0.c0) IS TRUE) ELSE ((t0.c0)<>(vt0.c0)) END) ORDER BY ((CASE WHEN t0.c30 THEN t0.c23 ELSE vt0.c0 END) BETWEEN (t0.c23) AND (t0.c82)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c61) IS TRUE)  WHEN ((t0.c0)IS(t0.c30)) THEN ((t0.c0) IS TRUE) ELSE ((t0.c0)<>(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN t0.c30 THEN t0.c23 ELSE vt0.c0 END) BETWEEN (t0.c23) AND (t0.c82)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c61) IS TRUE)  WHEN ((t0.c0)IS(t0.c30)) THEN ((t0.c0) IS TRUE) ELSE ((t0.c0)<>(vt0.c0)) END) ORDER BY ((CASE WHEN t0.c30 THEN t0.c23 ELSE vt0.c0 END) BETWEEN (t0.c23) AND (t0.c82)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c58) NOT BETWEEN (((t0.c61)>>(t0.c18))) AND (((t0.c30)-(t0.c30))))) ORDER BY LOWER((+ (t0.c61)))  NULLS LAST, (((- (t0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c58) NOT BETWEEN (((t0.c61)>>(t0.c18))) AND (((t0.c30)-(t0.c30))))) IS TRUE)  as count FROM t0 ORDER BY LOWER((+ (t0.c61)))  NULLS LAST, (((- (t0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c58) NOT BETWEEN (((t0.c61)>>(t0.c18))) AND (((t0.c30)-(t0.c30))))) ORDER BY LOWER((+ (t0.c61)))  NULLS LAST, (((- (t0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c58) NOT BETWEEN (((t0.c61)>>(t0.c18))) AND (((t0.c30)-(t0.c30))))) IS TRUE)  as count FROM t0 ORDER BY LOWER((+ (t0.c61)))  NULLS LAST, (((- (t0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c58) NOT BETWEEN (((t0.c61)>>(t0.c18))) AND (((t0.c30)-(t0.c30))))) ORDER BY LOWER((+ (t0.c61)))  NULLS LAST, (((- (t0.c0))) ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST((((((((('1143648714')AND(vt0.c1)))AND(t0.c82)))AND(t0.c23)))OR(t0.c23)) AS NUMERIC)) ORDER BY (((t0.c30, t0.c0, t0.c58))<((t0.c82, t0.c18, t0.c58))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((((((('1143648714')AND(vt0.c1)))AND(t0.c82)))AND(t0.c23)))OR(t0.c23)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c30, t0.c0, t0.c58))<((t0.c82, t0.c18, t0.c58))) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST((((((((('1143648714')AND(vt0.c1)))AND(t0.c82)))AND(t0.c23)))OR(t0.c23)) AS NUMERIC)) ORDER BY (((t0.c30, t0.c0, t0.c58))<((t0.c82, t0.c18, t0.c58))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((((((('1143648714')AND(vt0.c1)))AND(t0.c82)))AND(t0.c23)))OR(t0.c23)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c30, t0.c0, t0.c58))<((t0.c82, t0.c18, t0.c58))) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST((((((((('1143648714')AND(vt0.c1)))AND(t0.c82)))AND(t0.c23)))OR(t0.c23)) AS NUMERIC)) ORDER BY (((t0.c30, t0.c0, t0.c58))<((t0.c82, t0.c18, t0.c58))) COLLATE BINARY ASC;
SELECT ALL * FROM t0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ((t0.c30) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ((t0.c30) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c30);
SELECT * FROM t0 WHERE (((((t0.c58)AND(((t0.c61) NOT BETWEEN (t0.c82) AND (t0.c61)))))OR((~ (t0.c58)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c58)AND(((t0.c61) NOT BETWEEN (t0.c82) AND (t0.c61)))))OR((~ (t0.c58))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c58)AND(((t0.c61) NOT BETWEEN (t0.c82) AND (t0.c61)))))OR((~ (t0.c58)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c58)AND(((t0.c61) NOT BETWEEN (t0.c82) AND (t0.c61)))))OR((~ (t0.c58))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c58)AND(((t0.c61) NOT BETWEEN (t0.c82) AND (t0.c61)))))OR((~ (t0.c58)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c61 IN (t0.c58)) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c61 IN (t0.c58)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c61 IN (t0.c58)) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c61 IN (t0.c58)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c61 IN (t0.c58)) IN ()));
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END);
SELECT * FROM t0 WHERE (((t0.c30) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c30) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c30) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c30) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c30) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c58) ISNULL)) ORDER BY x'', (t0.c18 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c58) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY x'', (t0.c18 COLLATE BINARY IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c58) ISNULL)) ORDER BY x'', (t0.c18 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c58) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY x'', (t0.c18 COLLATE BINARY IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c58) ISNULL)) ORDER BY x'', (t0.c18 COLLATE BINARY IN ())  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE (((t0.c30))>=((t0.c18)))  WHEN (t0.c61 IN ()) THEN (t0.c23 IN (t0.c23)) END) ORDER BY (NOT (t0.c58 COLLATE NOCASE)) ASC, UPPER(0Xfffffffffafd4755 COLLATE NOCASE), (((((t0.c61) ISNULL)))<=(((((t0.c23)) NOT BETWEEN ((t0.c0)) AND ((t0.c58)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c30))>=((t0.c18)))  WHEN (t0.c61 IN ()) THEN (t0.c23 IN (t0.c23)) END) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c58 COLLATE NOCASE)) ASC, UPPER(0xfffffffffafd4755 COLLATE NOCASE), (((((t0.c61) ISNULL)))<=(((((t0.c23)) NOT BETWEEN ((t0.c0)) AND ((t0.c58)))))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CASE (((t0.c30))>=((t0.c18)))  WHEN (t0.c61 IN ()) THEN (t0.c23 IN (t0.c23)) END) ORDER BY (NOT (t0.c58 COLLATE NOCASE)) ASC, UPPER(0Xfffffffffafd4755 COLLATE NOCASE), (((((t0.c61) ISNULL)))<=(((((t0.c23)) NOT BETWEEN ((t0.c0)) AND ((t0.c58)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c30))>=((t0.c18)))  WHEN (t0.c61 IN ()) THEN (t0.c23 IN (t0.c23)) END) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c58 COLLATE NOCASE)) ASC, UPPER(0xfffffffffafd4755 COLLATE NOCASE), (((((t0.c61) ISNULL)))<=(((((t0.c23)) NOT BETWEEN ((t0.c0)) AND ((t0.c58)))))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (CASE (((t0.c30))>=((t0.c18)))  WHEN (t0.c61 IN ()) THEN (t0.c23 IN (t0.c23)) END) ORDER BY (NOT (t0.c58 COLLATE NOCASE)) ASC, UPPER(0Xfffffffffafd4755 COLLATE NOCASE), (((((t0.c61) ISNULL)))<=(((((t0.c23)) NOT BETWEEN ((t0.c0)) AND ((t0.c58)))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON json_array_length(LIKELY(t0.c30)) WHERE (((t0.c58 COLLATE RTRIM)>=(((NULL) NOT NULL)))) ORDER BY ((((0X24746a5b) ISNULL)) NOT BETWEEN (((t0.c30)<(t0.c18))) AND ((- (t0.c23))))  NULLS FIRST, ((((t0.c82)OR(((t0.c30) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((((NULL)) BETWEEN ((t0.c82)) AND ((t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c58 COLLATE RTRIM)>=(((NULL) NOT NULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON json_array_length(LIKELY(t0.c30)) ORDER BY ((((0x24746a5b) ISNULL)) NOT BETWEEN (((t0.c30)<(t0.c18))) AND ((- (t0.c23))))  NULLS FIRST, ((((t0.c82)OR(((t0.c30) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((((NULL)) BETWEEN ((t0.c82)) AND ((t0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON json_array_length(LIKELY(t0.c30)) WHERE (((t0.c58 COLLATE RTRIM)>=(((NULL) NOT NULL)))) ORDER BY ((((0X24746a5b) ISNULL)) NOT BETWEEN (((t0.c30)<(t0.c18))) AND ((- (t0.c23))))  NULLS FIRST, ((((t0.c82)OR(((t0.c30) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((((NULL)) BETWEEN ((t0.c82)) AND ((t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c58 COLLATE RTRIM)>=(((NULL) NOT NULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON json_array_length(LIKELY(t0.c30)) ORDER BY ((((0x24746a5b) ISNULL)) NOT BETWEEN (((t0.c30)<(t0.c18))) AND ((- (t0.c23))))  NULLS FIRST, ((((t0.c82)OR(((t0.c30) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((((NULL)) BETWEEN ((t0.c82)) AND ((t0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON json_array_length(LIKELY(t0.c30)) WHERE (((t0.c58 COLLATE RTRIM)>=(((NULL) NOT NULL)))) ORDER BY ((((0X24746a5b) ISNULL)) NOT BETWEEN (((t0.c30)<(t0.c18))) AND ((- (t0.c23))))  NULLS FIRST, ((((t0.c82)OR(((t0.c30) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((((NULL)) BETWEEN ((t0.c82)) AND ((t0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c61) NOT NULL)))<=((((t0.c18) IS FALSE))))) ORDER BY ((CASE t0.c30  WHEN t0.c58 THEN t0.c61 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c61) NOT NULL)))<=((((t0.c18) IS FALSE))))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY ((CASE t0.c30  WHEN t0.c58 THEN t0.c61 END) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c61) NOT NULL)))<=((((t0.c18) IS FALSE))))) ORDER BY ((CASE t0.c30  WHEN t0.c58 THEN t0.c61 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c61) NOT NULL)))<=((((t0.c18) IS FALSE))))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY ((CASE t0.c30  WHEN t0.c58 THEN t0.c61 END) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c61) NOT NULL)))<=((((t0.c18) IS FALSE))))) ORDER BY ((CASE t0.c30  WHEN t0.c58 THEN t0.c61 END) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (0.7672250682343644);
SELECT SUM(count) FROM (SELECT ALL ((0.7672250682343644) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.7672250682343644);
SELECT SUM(count) FROM (SELECT ALL ((0.7672250682343644) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.7672250682343644);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c18) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c58))))AND(t0.c23))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c18) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c58))))AND(t0.c23))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c18) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c58))))AND(t0.c23))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c18) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c58))))AND(t0.c23))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c18) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c58))))AND(t0.c23))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c18)/(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c18)/(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c18)/(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c18)/(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c18)/(vt0.c1)) COLLATE RTRIM);
SELECT * FROM t0 CROSS JOIN vt0 ON ((((((((((t0.c18)<=(t0.c18)))AND('908833021')))OR(((0.7276362901622951) IS TRUE))))AND(t0.c58)))AND(((t0.c58)-(vt0.c0)))) WHERE (((((t0.c23) NOT BETWEEN (t0.c30) AND (t0.c18)))OR((((t0.c0, t0.c18, vt0.c1))!=((t0.c23, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c23) NOT BETWEEN (t0.c30) AND (t0.c18)))OR((((t0.c0, t0.c18, vt0.c1))!=((t0.c23, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((((((t0.c18)<=(t0.c18)))AND('908833021')))OR(((0.7276362901622951) IS TRUE))))AND(t0.c58)))AND(((t0.c58)-(vt0.c0)))));
SELECT * FROM t0 CROSS JOIN vt0 ON ((((((((((t0.c18)<=(t0.c18)))AND('908833021')))OR(((0.7276362901622951) IS TRUE))))AND(t0.c58)))AND(((t0.c58)-(vt0.c0)))) WHERE (((((t0.c23) NOT BETWEEN (t0.c30) AND (t0.c18)))OR((((t0.c0, t0.c18, vt0.c1))!=((t0.c23, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c23) NOT BETWEEN (t0.c30) AND (t0.c18)))OR((((t0.c0, t0.c18, vt0.c1))!=((t0.c23, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((((((t0.c18)<=(t0.c18)))AND('908833021')))OR(((0.7276362901622951) IS TRUE))))AND(t0.c58)))AND(((t0.c58)-(vt0.c0)))));
SELECT * FROM t0 CROSS JOIN vt0 ON ((((((((((t0.c18)<=(t0.c18)))AND('908833021')))OR(((0.7276362901622951) IS TRUE))))AND(t0.c58)))AND(((t0.c58)-(vt0.c0)))) WHERE (((((t0.c23) NOT BETWEEN (t0.c30) AND (t0.c18)))OR((((t0.c0, t0.c18, vt0.c1))!=((t0.c23, vt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((0.2867122500139023)))))<>((vt0.c0))) WHERE (CASE WHEN 'Z.nU' THEN (((t0.c82))==((t0.c58))) WHEN CASE WHEN t0.c0 THEN t0.c23 ELSE t0.c82 END THEN ((((((((t0.c23)AND(t0.c0)))OR(t0.c18)))OR(vt0.c0)))AND(t0.c18)) WHEN ((t0.c23)>=(t0.c58)) THEN ((((0.9123198513315502)OR(t0.c58)))OR(t0.c82)) ELSE ((t0.c82)>>(t0.c30)) END) ORDER BY vt0.c1, CASE ((((t0.c61)AND(t0.c23)))AND(t0.c58))  WHEN CAST(t0.c18 AS INTEGER) THEN t0.c23 WHEN t0.c58 THEN NULL WHEN ((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) THEN ((t0.c82)OR(t0.c61)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'Z.nU' THEN (((t0.c82))=((t0.c58))) WHEN CASE WHEN t0.c0 THEN t0.c23 ELSE t0.c82 END THEN ((((((((t0.c23)AND(t0.c0)))OR(t0.c18)))OR(vt0.c0)))AND(t0.c18)) WHEN ((t0.c23)>=(t0.c58)) THEN ((((0.9123198513315502)OR(t0.c58)))OR(t0.c82)) ELSE ((t0.c82)>>(t0.c30)) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((0.2867122500139023)))))<>((vt0.c0))) ORDER BY vt0.c1, CASE ((((t0.c61)AND(t0.c23)))AND(t0.c58))  WHEN CAST(t0.c18 AS INTEGER) THEN t0.c23 WHEN t0.c58 THEN NULL WHEN ((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) THEN ((t0.c82)OR(t0.c61)) END ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((0.2867122500139023)))))<>((vt0.c0))) WHERE (CASE WHEN 'Z.nU' THEN (((t0.c82))==((t0.c58))) WHEN CASE WHEN t0.c0 THEN t0.c23 ELSE t0.c82 END THEN ((((((((t0.c23)AND(t0.c0)))OR(t0.c18)))OR(vt0.c0)))AND(t0.c18)) WHEN ((t0.c23)>=(t0.c58)) THEN ((((0.9123198513315502)OR(t0.c58)))OR(t0.c82)) ELSE ((t0.c82)>>(t0.c30)) END) ORDER BY vt0.c1, CASE ((((t0.c61)AND(t0.c23)))AND(t0.c58))  WHEN CAST(t0.c18 AS INTEGER) THEN t0.c23 WHEN t0.c58 THEN NULL WHEN ((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) THEN ((t0.c82)OR(t0.c61)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'Z.nU' THEN (((t0.c82))=((t0.c58))) WHEN CASE WHEN t0.c0 THEN t0.c23 ELSE t0.c82 END THEN ((((((((t0.c23)AND(t0.c0)))OR(t0.c18)))OR(vt0.c0)))AND(t0.c18)) WHEN ((t0.c23)>=(t0.c58)) THEN ((((0.9123198513315502)OR(t0.c58)))OR(t0.c82)) ELSE ((t0.c82)>>(t0.c30)) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((0.2867122500139023)))))<>((vt0.c0))) ORDER BY vt0.c1, CASE ((((t0.c61)AND(t0.c23)))AND(t0.c58))  WHEN CAST(t0.c18 AS INTEGER) THEN t0.c23 WHEN t0.c58 THEN NULL WHEN ((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) THEN ((t0.c82)OR(t0.c61)) END ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((0.2867122500139023)))))<>((vt0.c0))) WHERE (CASE WHEN 'Z.nU' THEN (((t0.c82))==((t0.c58))) WHEN CASE WHEN t0.c0 THEN t0.c23 ELSE t0.c82 END THEN ((((((((t0.c23)AND(t0.c0)))OR(t0.c18)))OR(vt0.c0)))AND(t0.c18)) WHEN ((t0.c23)>=(t0.c58)) THEN ((((0.9123198513315502)OR(t0.c58)))OR(t0.c82)) ELSE ((t0.c82)>>(t0.c30)) END) ORDER BY vt0.c1, CASE ((((t0.c61)AND(t0.c23)))AND(t0.c58))  WHEN CAST(t0.c18 AS INTEGER) THEN t0.c23 WHEN t0.c58 THEN NULL WHEN ((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) THEN ((t0.c82)OR(t0.c61)) END ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((((vt0.c1)AND(t0.c23)))OR(t0.c61)))OR(1434723481)))AND(t0.c18)) IN (NULL)));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1)AND(t0.c23)))OR(t0.c61)))OR(1434723481)))AND(t0.c18)) IN (NULL))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((((vt0.c1)AND(t0.c23)))OR(t0.c61)))OR(1434723481)))AND(t0.c18)) IN (NULL)));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1)AND(t0.c23)))OR(t0.c61)))OR(1434723481)))AND(t0.c18)) IN (NULL))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((((vt0.c1)AND(t0.c23)))OR(t0.c61)))OR(1434723481)))AND(t0.c18)) IN (NULL)));
SELECT * FROM t0 WHERE (UPPER(DISTINCT (- (t0.c61))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (- (t0.c61)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (UPPER(DISTINCT (- (t0.c61))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (- (t0.c61)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (UPPER(DISTINCT (- (t0.c61))));
SELECT COUNT(*) FROM vt0 WHERE ('1821641863');
SELECT SUM(count) FROM (SELECT ALL (('1821641863') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('1821641863');
SELECT SUM(count) FROM (SELECT ALL (('1821641863') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('1821641863');
SELECT ALL * FROM t0 WHERE (TYPEOF(((t0.c61) BETWEEN (t0.c61) AND (t0.c82))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((t0.c61) BETWEEN (t0.c61) AND (t0.c82)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TYPEOF(((t0.c61) BETWEEN (t0.c61) AND (t0.c82))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((t0.c61) BETWEEN (t0.c61) AND (t0.c82)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TYPEOF(((t0.c61) BETWEEN (t0.c61) AND (t0.c82))));
SELECT ALL * FROM t0 WHERE ((((t0.c61) BETWEEN (t0.c61) AND (t0.c18)) IN ())) ORDER BY ((((t0.c30) BETWEEN (t0.c61) AND (t0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c61) BETWEEN (t0.c61) AND (t0.c18)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c30) BETWEEN (t0.c61) AND (t0.c0))) IS TRUE));
SELECT ALL * FROM t0 WHERE ((((t0.c61) BETWEEN (t0.c61) AND (t0.c18)) IN ())) ORDER BY ((((t0.c30) BETWEEN (t0.c61) AND (t0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c61) BETWEEN (t0.c61) AND (t0.c18)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c30) BETWEEN (t0.c61) AND (t0.c0))) IS TRUE));
SELECT ALL * FROM t0 WHERE ((((t0.c61) BETWEEN (t0.c61) AND (t0.c18)) IN ())) ORDER BY ((((t0.c30) BETWEEN (t0.c61) AND (t0.c0))) IS TRUE);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c23) NOT NULL) AS BLOB)) ORDER BY 0.37447482246985164 DESC, json_array_length('-298459887');
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c23) NOT NULL) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.37447482246985164 DESC, json_array_length('-298459887'));
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c23) NOT NULL) AS BLOB)) ORDER BY 0.37447482246985164 DESC, json_array_length('-298459887');
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c23) NOT NULL) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.37447482246985164 DESC, json_array_length('-298459887'));
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c23) NOT NULL) AS BLOB)) ORDER BY 0.37447482246985164 DESC, json_array_length('-298459887');
SELECT * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c0))) ISNULL)) ORDER BY ((((((vt0.c0)LIKE(vt0.c1)))AND((- (vt0.c1)))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)LIKE(vt0.c1)))AND((- (vt0.c1)))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c0))) ISNULL)) ORDER BY ((((((vt0.c0)LIKE(vt0.c1)))AND((- (vt0.c1)))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)LIKE(vt0.c1)))AND((- (vt0.c1)))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c0))) ISNULL)) ORDER BY ((((((vt0.c0)LIKE(vt0.c1)))AND((- (vt0.c1)))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (vt0.c1) ORDER BY json_patch(((t0.c61)+(vt0.c0)), (~ (t0.c30))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY json_patch(((t0.c61)+(vt0.c0)), (~ (t0.c30))) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (vt0.c1) ORDER BY json_patch(((t0.c61)+(vt0.c0)), (~ (t0.c30))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY json_patch(((t0.c61)+(vt0.c0)), (~ (t0.c30))) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (vt0.c1) ORDER BY json_patch(((t0.c61)+(vt0.c0)), (~ (t0.c30))) DESC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE ((((t0.c0)) BETWEEN ((((((((((t0.c82)OR('-1590857793')))OR(t0.c0)))OR(t0.c82)))AND(vt0.c0)))) AND ((((t0.c18) IS FALSE))))) ORDER BY (((((NOT (t0.c30)))AND((t0.c30 IN (vt0.c0)))))AND(CASE vt0.c1  WHEN t0.c18 THEN NULL ELSE t0.c30 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((((((((t0.c82)OR('-1590857793')))OR(t0.c0)))OR(t0.c82)))AND(vt0.c0)))) AND ((((t0.c18) IS FALSE))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((NOT (t0.c30)))AND((t0.c30 IN (vt0.c0)))))AND(CASE vt0.c1  WHEN t0.c18 THEN NULL ELSE t0.c30 END)) ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((t0.c0)) BETWEEN ((((((((((t0.c82)OR('-1590857793')))OR(t0.c0)))OR(t0.c82)))AND(vt0.c0)))) AND ((((t0.c18) IS FALSE))))) ORDER BY (((((NOT (t0.c30)))AND((t0.c30 IN (vt0.c0)))))AND(CASE vt0.c1  WHEN t0.c18 THEN NULL ELSE t0.c30 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((((((((t0.c82)OR('-1590857793')))OR(t0.c0)))OR(t0.c82)))AND(vt0.c0)))) AND ((((t0.c18) IS FALSE))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((NOT (t0.c30)))AND((t0.c30 IN (vt0.c0)))))AND(CASE vt0.c1  WHEN t0.c18 THEN NULL ELSE t0.c30 END)) ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((t0.c0)) BETWEEN ((((((((((t0.c82)OR('-1590857793')))OR(t0.c0)))OR(t0.c82)))AND(vt0.c0)))) AND ((((t0.c18) IS FALSE))))) ORDER BY (((((NOT (t0.c30)))AND((t0.c30 IN (vt0.c0)))))AND(CASE vt0.c1  WHEN t0.c18 THEN NULL ELSE t0.c30 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((+ (t0.c82)))<(((((t0.c18)AND(t0.c61)))OR(x'')))) WHERE (((((t0.c0) BETWEEN (t0.c23) AND (vt0.c1)))IS(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c23) AND (vt0.c1)))IS(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((+ (t0.c82)))<(((((t0.c18)AND(t0.c61)))OR(x'')))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((+ (t0.c82)))<(((((t0.c18)AND(t0.c61)))OR(x'')))) WHERE (((((t0.c0) BETWEEN (t0.c23) AND (vt0.c1)))IS(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c23) AND (vt0.c1)))IS(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((+ (t0.c82)))<(((((t0.c18)AND(t0.c61)))OR(x'')))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((+ (t0.c82)))<(((((t0.c18)AND(t0.c61)))OR(x'')))) WHERE (((((t0.c0) BETWEEN (t0.c23) AND (vt0.c1)))IS(((t0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c23 THEN t0.c61 ELSE t0.c61 END)IS(((t0.c61)%(t0.c0))))) ORDER BY (((NOT (vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c23 THEN t0.c61 ELSE t0.c61 END)IS(((t0.c61)%(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NOT (vt0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c23 THEN t0.c61 ELSE t0.c61 END)IS(((t0.c61)%(t0.c0))))) ORDER BY (((NOT (vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c23 THEN t0.c61 ELSE t0.c61 END)IS(((t0.c61)%(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NOT (vt0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c23 THEN t0.c61 ELSE t0.c61 END)IS(((t0.c61)%(t0.c0))))) ORDER BY (((NOT (vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN ((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c1 COLLATE BINARY))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN ((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN ((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c1 COLLATE BINARY))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN ((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN ((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c1 COLLATE BINARY))) ORDER BY vt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0 COLLATE RTRIM, (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ORDER BY (+ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt0.c0 COLLATE RTRIM, (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0 COLLATE RTRIM, (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ORDER BY (+ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt0.c0 COLLATE RTRIM, (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0 COLLATE RTRIM, (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ORDER BY (+ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (CAST(COALESCE(DISTINCT t0.c30, vt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(DISTINCT t0.c30, vt0.c1) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(COALESCE(DISTINCT t0.c30, vt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(DISTINCT t0.c30, vt0.c1) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(COALESCE(DISTINCT t0.c30, vt0.c1) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE t0.c18  WHEN t0.c30 THEN t0.c0 ELSE t0.c18 END))!=((((t0.c30)AND(t0.c58))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c18  WHEN t0.c30 THEN t0.c0 ELSE t0.c18 END))<>((((t0.c30)AND(t0.c58)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE t0.c18  WHEN t0.c30 THEN t0.c0 ELSE t0.c18 END))!=((((t0.c30)AND(t0.c58))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c18  WHEN t0.c30 THEN t0.c0 ELSE t0.c18 END))<>((((t0.c30)AND(t0.c58)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE t0.c18  WHEN t0.c30 THEN t0.c0 ELSE t0.c18 END))!=((((t0.c30)AND(t0.c58))))));
SELECT COUNT(*) FROM t0 WHERE (((((NULL)OR((-9.27792857E8 IN ()))))OR(t0.c58))) ORDER BY ((((t0.c0) NOT NULL)) BETWEEN (((((((((t0.c23)AND(t0.c61)))AND(t0.c0)))AND(t0.c58)))OR(t0.c58))) AND (t0.c18 COLLATE RTRIM)) DESC, CAST(t0.c0 COLLATE NOCASE AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((NULL)OR((-9.27792857E8 IN ()))))OR(t0.c58))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT NULL)) BETWEEN (((((((((t0.c23)AND(t0.c61)))AND(t0.c0)))AND(t0.c58)))OR(t0.c58))) AND (t0.c18 COLLATE RTRIM)) DESC, CAST(t0.c0 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (((((NULL)OR((-9.27792857E8 IN ()))))OR(t0.c58))) ORDER BY ((((t0.c0) NOT NULL)) BETWEEN (((((((((t0.c23)AND(t0.c61)))AND(t0.c0)))AND(t0.c58)))OR(t0.c58))) AND (t0.c18 COLLATE RTRIM)) DESC, CAST(t0.c0 COLLATE NOCASE AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((NULL)OR((-9.27792857E8 IN ()))))OR(t0.c58))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT NULL)) BETWEEN (((((((((t0.c23)AND(t0.c61)))AND(t0.c0)))AND(t0.c58)))OR(t0.c58))) AND (t0.c18 COLLATE RTRIM)) DESC, CAST(t0.c0 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (((((NULL)OR((-9.27792857E8 IN ()))))OR(t0.c58))) ORDER BY ((((t0.c0) NOT NULL)) BETWEEN (((((((((t0.c23)AND(t0.c61)))AND(t0.c0)))AND(t0.c58)))OR(t0.c58))) AND (t0.c18 COLLATE RTRIM)) DESC, CAST(t0.c0 COLLATE NOCASE AS TEXT);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c23)&(t0.c30))) ISNULL)) ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR((((t0.c82)) BETWEEN ((t0.c82)) AND ((vt0.c1))))))OR(((vt0.c1)%(t0.c23))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c23)&(t0.c30))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR((((t0.c82)) BETWEEN ((t0.c82)) AND ((vt0.c1))))))OR(((vt0.c1)%(t0.c23))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c23)&(t0.c30))) ISNULL)) ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR((((t0.c82)) BETWEEN ((t0.c82)) AND ((vt0.c1))))))OR(((vt0.c1)%(t0.c23))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c23)&(t0.c30))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR((((t0.c82)) BETWEEN ((t0.c82)) AND ((vt0.c1))))))OR(((vt0.c1)%(t0.c23))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c23)&(t0.c30))) ISNULL)) ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR((((t0.c82)) BETWEEN ((t0.c82)) AND ((vt0.c1))))))OR(((vt0.c1)%(t0.c23))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c58)<<(t0.c58)) THEN ('.t' IN (t0.c61)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c58)<<(t0.c58)) THEN ('.t' IN (t0.c61)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c58)<<(t0.c58)) THEN ('.t' IN (t0.c61)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c58)<<(t0.c58)) THEN ('.t' IN (t0.c61)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c58)<<(t0.c58)) THEN ('.t' IN (t0.c61)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (((vt0.c0)) BETWEEN ((t0.c18)) AND ((t0.c61)))  WHEN (- (t0.c18)) THEN CAST(t0.c82 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((t0.c18)) AND ((t0.c61)))  WHEN (- (t0.c18)) THEN CAST(t0.c82 AS TEXT) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (((vt0.c0)) BETWEEN ((t0.c18)) AND ((t0.c61)))  WHEN (- (t0.c18)) THEN CAST(t0.c82 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((t0.c18)) AND ((t0.c61)))  WHEN (- (t0.c18)) THEN CAST(t0.c82 AS TEXT) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (((vt0.c0)) BETWEEN ((t0.c18)) AND ((t0.c61)))  WHEN (- (t0.c18)) THEN CAST(t0.c82 AS TEXT) END);
SELECT * FROM t0, vt0 WHERE (json_array((+ (vt0.c0)), CAST(t0.c23 AS REAL)));
SELECT SUM(count) FROM (SELECT ((json_array((+ (vt0.c0)), CAST(t0.c23 AS REAL))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (json_array((+ (vt0.c0)), CAST(t0.c23 AS REAL)));
SELECT SUM(count) FROM (SELECT ((json_array((+ (vt0.c0)), CAST(t0.c23 AS REAL))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (json_array((+ (vt0.c0)), CAST(t0.c23 AS REAL)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS(vt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((CASE WHEN t0.c61 THEN t0.c58 ELSE vt0.c1 END))>=(('1293076323'))) WHERE ((((t0.c30)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (('EU')))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c30)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (('EU')))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((CASE WHEN t0.c61 THEN t0.c58 ELSE vt0.c1 END))>=(('1293076323'))) ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((CASE WHEN t0.c61 THEN t0.c58 ELSE vt0.c1 END))>=(('1293076323'))) WHERE ((((t0.c30)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (('EU')))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c30)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (('EU')))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((CASE WHEN t0.c61 THEN t0.c58 ELSE vt0.c1 END))>=(('1293076323'))) ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((CASE WHEN t0.c61 THEN t0.c58 ELSE vt0.c1 END))>=(('1293076323'))) WHERE ((((t0.c30)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (('EU')))) ORDER BY NULL ASC;
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c82) BETWEEN (t0.c58) AND (t0.c30)))OR((((t0.c30, t0.c18, t0.c30))>=((t0.c18, '', t0.c18))))))AND(t0.c23))) ORDER BY ((((CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c18 THEN t0.c18 WHEN t0.c18 THEN t0.c30 ELSE t0.c18 END)AND(((((x'c654')OR(t0.c18)))OR(t0.c23)))))AND((- (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c82) BETWEEN (t0.c58) AND (t0.c30)))OR((((t0.c30, t0.c18, t0.c30))>=((t0.c18, '', t0.c18))))))AND(t0.c23))) IS TRUE)  as count FROM t0 ORDER BY ((((CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c18 THEN t0.c18 WHEN t0.c18 THEN t0.c30 ELSE t0.c18 END)AND(((((x'c654')OR(t0.c18)))OR(t0.c23)))))AND((- (t0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c82) BETWEEN (t0.c58) AND (t0.c30)))OR((((t0.c30, t0.c18, t0.c30))>=((t0.c18, '', t0.c18))))))AND(t0.c23))) ORDER BY ((((CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c18 THEN t0.c18 WHEN t0.c18 THEN t0.c30 ELSE t0.c18 END)AND(((((x'c654')OR(t0.c18)))OR(t0.c23)))))AND((- (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c82) BETWEEN (t0.c58) AND (t0.c30)))OR((((t0.c30, t0.c18, t0.c30))>=((t0.c18, '', t0.c18))))))AND(t0.c23))) IS TRUE)  as count FROM t0 ORDER BY ((((CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c18 THEN t0.c18 WHEN t0.c18 THEN t0.c30 ELSE t0.c18 END)AND(((((x'c654')OR(t0.c18)))OR(t0.c23)))))AND((- (t0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c82) BETWEEN (t0.c58) AND (t0.c30)))OR((((t0.c30, t0.c18, t0.c30))>=((t0.c18, '', t0.c18))))))AND(t0.c23))) ORDER BY ((((CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c18 THEN t0.c18 WHEN t0.c18 THEN t0.c30 ELSE t0.c18 END)AND(((((x'c654')OR(t0.c18)))OR(t0.c23)))))AND((- (t0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c30) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c30) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c30) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c30) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c30) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (vt0.c0)))!=(((vt0.c0)IS NOT(t0.c23))))) ORDER BY json_array_length(((t0.c58)<(t0.c82)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))!=(((vt0.c0)IS NOT(t0.c23))))) IS TRUE)  as count FROM vt0, t0 ORDER BY json_array_length(((t0.c58)<(t0.c82)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (vt0.c0)))!=(((vt0.c0)IS NOT(t0.c23))))) ORDER BY json_array_length(((t0.c58)<(t0.c82)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))!=(((vt0.c0)IS NOT(t0.c23))))) IS TRUE)  as count FROM vt0, t0 ORDER BY json_array_length(((t0.c58)<(t0.c82)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (vt0.c0)))!=(((vt0.c0)IS NOT(t0.c23))))) ORDER BY json_array_length(((t0.c58)<(t0.c82)))  NULLS FIRST;
SELECT * FROM t0 WHERE (((rtreenode(NULL, t0.c0))>=(x'')));
SELECT SUM(count) FROM (SELECT ((((rtreenode(NULL, t0.c0))>=(x''))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((rtreenode(NULL, t0.c0))>=(x'')));
SELECT SUM(count) FROM (SELECT ((((rtreenode(NULL, t0.c0))>=(x''))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((rtreenode(NULL, t0.c0))>=(x'')));
SELECT COUNT(*) FROM t0 WHERE ((~ (0.6241005075735351))) ORDER BY IFNULL(DISTINCT ((((((((t0.c58)OR(t0.c23)))OR(t0.c18)))OR(t0.c0)))OR(t0.c30)), CAST(t0.c82 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL (((~ (0.6241005075735351))) IS TRUE)  as count FROM t0 ORDER BY IFNULL(DISTINCT ((((((((t0.c58)OR(t0.c23)))OR(t0.c18)))OR(t0.c0)))OR(t0.c30)), CAST(t0.c82 AS BLOB)));
SELECT COUNT(*) FROM t0 WHERE ((~ (0.6241005075735351))) ORDER BY IFNULL(DISTINCT ((((((((t0.c58)OR(t0.c23)))OR(t0.c18)))OR(t0.c0)))OR(t0.c30)), CAST(t0.c82 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL (((~ (0.6241005075735351))) IS TRUE)  as count FROM t0 ORDER BY IFNULL(DISTINCT ((((((((t0.c58)OR(t0.c23)))OR(t0.c18)))OR(t0.c0)))OR(t0.c30)), CAST(t0.c82 AS BLOB)));
SELECT COUNT(*) FROM t0 WHERE ((~ (0.6241005075735351))) ORDER BY IFNULL(DISTINCT ((((((((t0.c58)OR(t0.c23)))OR(t0.c18)))OR(t0.c0)))OR(t0.c30)), CAST(t0.c82 AS BLOB));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((t0.c61) ISNULL) THEN t0.c23 ELSE ((((((((((((((((t0.c18)OR(NULL)))AND(0.43244433144946426)))OR(t0.c18)))OR(t0.c82)))AND(vt0.c1)))OR(t0.c18)))OR(vt0.c1)))AND(t0.c18)) END) ORDER BY (- ((((vt0.c0, t0.c61, t0.c58)) BETWEEN ((t0.c18, vt0.c0, t0.c61)) AND ((t0.c30, t0.c30, t0.c18))))) ASC, ((((t0.c30) NOT BETWEEN (t0.c0) AND (t0.c18)))<>(t0.c30)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c61) ISNULL) THEN t0.c23 ELSE ((((((((((((((((t0.c18)OR(NULL)))AND(0.43244433144946426)))OR(t0.c18)))OR(t0.c82)))AND(vt0.c1)))OR(t0.c18)))OR(vt0.c1)))AND(t0.c18)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (- ((((vt0.c0, t0.c61, t0.c58)) BETWEEN ((t0.c18, vt0.c0, t0.c61)) AND ((t0.c30, t0.c30, t0.c18))))) ASC, ((((t0.c30) NOT BETWEEN (t0.c0) AND (t0.c18)))!=(t0.c30)) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((t0.c61) ISNULL) THEN t0.c23 ELSE ((((((((((((((((t0.c18)OR(NULL)))AND(0.43244433144946426)))OR(t0.c18)))OR(t0.c82)))AND(vt0.c1)))OR(t0.c18)))OR(vt0.c1)))AND(t0.c18)) END) ORDER BY (- ((((vt0.c0, t0.c61, t0.c58)) BETWEEN ((t0.c18, vt0.c0, t0.c61)) AND ((t0.c30, t0.c30, t0.c18))))) ASC, ((((t0.c30) NOT BETWEEN (t0.c0) AND (t0.c18)))<>(t0.c30)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c61) ISNULL) THEN t0.c23 ELSE ((((((((((((((((t0.c18)OR(NULL)))AND(0.43244433144946426)))OR(t0.c18)))OR(t0.c82)))AND(vt0.c1)))OR(t0.c18)))OR(vt0.c1)))AND(t0.c18)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (- ((((vt0.c0, t0.c61, t0.c58)) BETWEEN ((t0.c18, vt0.c0, t0.c61)) AND ((t0.c30, t0.c30, t0.c18))))) ASC, ((((t0.c30) NOT BETWEEN (t0.c0) AND (t0.c18)))!=(t0.c30)) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((t0.c61) ISNULL) THEN t0.c23 ELSE ((((((((((((((((t0.c18)OR(NULL)))AND(0.43244433144946426)))OR(t0.c18)))OR(t0.c82)))AND(vt0.c1)))OR(t0.c18)))OR(vt0.c1)))AND(t0.c18)) END) ORDER BY (- ((((vt0.c0, t0.c61, t0.c58)) BETWEEN ((t0.c18, vt0.c0, t0.c61)) AND ((t0.c30, t0.c30, t0.c18))))) ASC, ((((t0.c30) NOT BETWEEN (t0.c0) AND (t0.c18)))<>(t0.c30)) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((((((t0.c61)AND(t0.c61)))OR(t0.c61)))OR(((vt0.c1) NOT NULL))))OR(((vt0.c0)=(t0.c23)))))AND(((t0.c61) NOT BETWEEN (t0.c0) AND (t0.c23)))))AND(((t0.c58)>>(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c61)AND(t0.c61)))OR(t0.c61)))OR(((vt0.c1) NOT NULL))))OR(((vt0.c0)=(t0.c23)))))AND(((t0.c61) NOT BETWEEN (t0.c0) AND (t0.c23)))))AND(((t0.c58)>>(NULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((((((t0.c61)AND(t0.c61)))OR(t0.c61)))OR(((vt0.c1) NOT NULL))))OR(((vt0.c0)=(t0.c23)))))AND(((t0.c61) NOT BETWEEN (t0.c0) AND (t0.c23)))))AND(((t0.c58)>>(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c61)AND(t0.c61)))OR(t0.c61)))OR(((vt0.c1) NOT NULL))))OR(((vt0.c0)=(t0.c23)))))AND(((t0.c61) NOT BETWEEN (t0.c0) AND (t0.c23)))))AND(((t0.c58)>>(NULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((((((t0.c61)AND(t0.c61)))OR(t0.c61)))OR(((vt0.c1) NOT NULL))))OR(((vt0.c0)=(t0.c23)))))AND(((t0.c61) NOT BETWEEN (t0.c0) AND (t0.c23)))))AND(((t0.c58)>>(NULL)))));
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL))IS(LTRIM(t0.c58, t0.c23))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL))IS(LTRIM(t0.c58, t0.c23)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL))IS(LTRIM(t0.c58, t0.c23))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL))IS(LTRIM(t0.c58, t0.c23)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL))IS(LTRIM(t0.c58, t0.c23))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c18) IS TRUE)) BETWEEN (t0.c23) AND (CAST(0Xffffffffc60acc5d AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c18) IS TRUE)) BETWEEN (t0.c23) AND (CAST(0xffffffffc60acc5d AS REAL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c18) IS TRUE)) BETWEEN (t0.c23) AND (CAST(0Xffffffffc60acc5d AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c18) IS TRUE)) BETWEEN (t0.c23) AND (CAST(0xffffffffc60acc5d AS REAL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c18) IS TRUE)) BETWEEN (t0.c23) AND (CAST(0Xffffffffc60acc5d AS REAL))));
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE (((((t0.c82)<>(t0.c23)))<(((0.9111435874131685) BETWEEN (t0.c23) AND (t0.c30))))) ORDER BY t0.c23 ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c82)!=(t0.c23)))<(((0.9111435874131685) BETWEEN (t0.c23) AND (t0.c30))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c23 ASC);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE (((((t0.c82)<>(t0.c23)))<(((0.9111435874131685) BETWEEN (t0.c23) AND (t0.c30))))) ORDER BY t0.c23 ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c82)!=(t0.c23)))<(((0.9111435874131685) BETWEEN (t0.c23) AND (t0.c30))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c23 ASC);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE (((((t0.c82)<>(t0.c23)))<(((0.9111435874131685) BETWEEN (t0.c23) AND (t0.c30))))) ORDER BY t0.c23 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL));
SELECT * FROM t0 WHERE (t0.c82) ORDER BY t0.c18;
SELECT SUM(count) FROM (SELECT ALL ((t0.c82) IS TRUE)  as count FROM t0 ORDER BY t0.c18);
SELECT * FROM t0 WHERE (t0.c82) ORDER BY t0.c18;
SELECT SUM(count) FROM (SELECT ALL ((t0.c82) IS TRUE)  as count FROM t0 ORDER BY t0.c18);
SELECT * FROM t0 WHERE (t0.c82) ORDER BY t0.c18;
SELECT COUNT(*) FROM vt0 WHERE ((+ (LIKE(vt0.c1, vt0.c1)))) ORDER BY ((((vt0.c1) IS TRUE))<=(((vt0.c1)>(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKE(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS TRUE))<=(((vt0.c1)>(vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (LIKE(vt0.c1, vt0.c1)))) ORDER BY ((((vt0.c1) IS TRUE))<=(((vt0.c1)>(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKE(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS TRUE))<=(((vt0.c1)>(vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (LIKE(vt0.c1, vt0.c1)))) ORDER BY ((((vt0.c1) IS TRUE))<=(((vt0.c1)>(vt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c18)) BETWEEN ((((t0.c18) ISNULL))) AND (((t0.c23 IN ()))))) ORDER BY (NOT ((t0.c23 IN ()))), (((t0.c61 COLLATE BINARY))!=(((NOT (t0.c30))))) ASC, t0.c18 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c18)) BETWEEN ((((t0.c18) ISNULL))) AND (((t0.c23 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY (NOT ((t0.c23 IN ()))), (((t0.c61 COLLATE BINARY))!=(((NOT (t0.c30))))) ASC, t0.c18 DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c18)) BETWEEN ((((t0.c18) ISNULL))) AND (((t0.c23 IN ()))))) ORDER BY (NOT ((t0.c23 IN ()))), (((t0.c61 COLLATE BINARY))!=(((NOT (t0.c30))))) ASC, t0.c18 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c18)) BETWEEN ((((t0.c18) ISNULL))) AND (((t0.c23 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY (NOT ((t0.c23 IN ()))), (((t0.c61 COLLATE BINARY))!=(((NOT (t0.c30))))) ASC, t0.c18 DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c18)) BETWEEN ((((t0.c18) ISNULL))) AND (((t0.c23 IN ()))))) ORDER BY (NOT ((t0.c23 IN ()))), (((t0.c61 COLLATE BINARY))!=(((NOT (t0.c30))))) ASC, t0.c18 DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c58) NOT BETWEEN (CASE WHEN t0.c82 THEN t0.c23 END) AND (((t0.c18)IS(0.07467622086928216)))));
SELECT SUM(count) FROM (SELECT ((((t0.c58) NOT BETWEEN (CASE WHEN t0.c82 THEN t0.c23 END) AND (((t0.c18)IS(0.07467622086928216))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c58) NOT BETWEEN (CASE WHEN t0.c82 THEN t0.c23 END) AND (((t0.c18)IS(0.07467622086928216)))));
SELECT SUM(count) FROM (SELECT ((((t0.c58) NOT BETWEEN (CASE WHEN t0.c82 THEN t0.c23 END) AND (((t0.c18)IS(0.07467622086928216))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c58) NOT BETWEEN (CASE WHEN t0.c82 THEN t0.c23 END) AND (((t0.c18)IS(0.07467622086928216)))));
SELECT COUNT(*) FROM t0 WHERE (INSTR((((t0.c0)) NOT BETWEEN ((t0.c58)) AND ((-5.28519103E8))), ((t0.c30) BETWEEN (t0.c58) AND (t0.c23))));
SELECT SUM(count) FROM (SELECT ((INSTR((((t0.c0)) NOT BETWEEN ((t0.c58)) AND ((-5.28519103E8))), ((t0.c30) BETWEEN (t0.c58) AND (t0.c23)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (INSTR((((t0.c0)) NOT BETWEEN ((t0.c58)) AND ((-5.28519103E8))), ((t0.c30) BETWEEN (t0.c58) AND (t0.c23))));
SELECT SUM(count) FROM (SELECT ((INSTR((((t0.c0)) NOT BETWEEN ((t0.c58)) AND ((-5.28519103E8))), ((t0.c30) BETWEEN (t0.c58) AND (t0.c23)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (INSTR((((t0.c0)) NOT BETWEEN ((t0.c58)) AND ((-5.28519103E8))), ((t0.c30) BETWEEN (t0.c58) AND (t0.c23))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))>(((((NULL)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0)IS(vt0.c1)))AND(vt0.c0)))AND((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, '-1007105362')) AND ((vt0.c1, vt0.c1, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER))>(((((NULL)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)IS(vt0.c1)))AND(vt0.c0)))AND((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, '-1007105362')) AND ((vt0.c1, vt0.c1, vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))>(((((NULL)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0)IS(vt0.c1)))AND(vt0.c0)))AND((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, '-1007105362')) AND ((vt0.c1, vt0.c1, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER))>(((((NULL)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)IS(vt0.c1)))AND(vt0.c0)))AND((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, '-1007105362')) AND ((vt0.c1, vt0.c1, vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))>(((((NULL)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY ((((((vt0.c0)IS(vt0.c1)))AND(vt0.c0)))AND((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, vt0.c0, '-1007105362')) AND ((vt0.c1, vt0.c1, vt0.c0)))))  NULLS LAST;
SELECT * FROM t0 WHERE (CAST((NOT (t0.c82)) AS TEXT)) ORDER BY SUBSTR(((t0.c82) NOTNULL), ((t0.c23)>>(t0.c82))) ASC  NULLS LAST, CAST(t0.c18 COLLATE BINARY AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c82)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY SUBSTR(((t0.c82) NOTNULL), ((t0.c23)>>(t0.c82))) ASC  NULLS LAST, CAST(t0.c18 COLLATE BINARY AS BLOB)  NULLS LAST);
SELECT * FROM t0 WHERE (CAST((NOT (t0.c82)) AS TEXT)) ORDER BY SUBSTR(((t0.c82) NOTNULL), ((t0.c23)>>(t0.c82))) ASC  NULLS LAST, CAST(t0.c18 COLLATE BINARY AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c82)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY SUBSTR(((t0.c82) NOTNULL), ((t0.c23)>>(t0.c82))) ASC  NULLS LAST, CAST(t0.c18 COLLATE BINARY AS BLOB)  NULLS LAST);
SELECT * FROM t0 WHERE (CAST((NOT (t0.c82)) AS TEXT)) ORDER BY SUBSTR(((t0.c82) NOTNULL), ((t0.c23)>>(t0.c82))) ASC  NULLS LAST, CAST(t0.c18 COLLATE BINARY AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c23)-(t0.c23)))) AND ((CAST('-2243318' AS NUMERIC))))) ORDER BY t0.c58 ASC  NULLS LAST, (((+ (t0.c18))) BETWEEN (((vt0.c1) NOT NULL)) AND ((((t0.c18))>((t0.c82))))) DESC, ((t0.c61)>>((t0.c82 IN ())));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((t0.c23)-(t0.c23)))) AND ((CAST('-2243318' AS NUMERIC))))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c58 ASC  NULLS LAST, (((+ (t0.c18))) BETWEEN (((vt0.c1) NOT NULL)) AND ((((t0.c18))>((t0.c82))))) DESC, ((t0.c61)>>((t0.c82 IN ()))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c23)-(t0.c23)))) AND ((CAST('-2243318' AS NUMERIC))))) ORDER BY t0.c58 ASC  NULLS LAST, (((+ (t0.c18))) BETWEEN (((vt0.c1) NOT NULL)) AND ((((t0.c18))>((t0.c82))))) DESC, ((t0.c61)>>((t0.c82 IN ())));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((t0.c23)-(t0.c23)))) AND ((CAST('-2243318' AS NUMERIC))))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c58 ASC  NULLS LAST, (((+ (t0.c18))) BETWEEN (((vt0.c1) NOT NULL)) AND ((((t0.c18))>((t0.c82))))) DESC, ((t0.c61)>>((t0.c82 IN ()))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((t0.c23)-(t0.c23)))) AND ((CAST('-2243318' AS NUMERIC))))) ORDER BY t0.c58 ASC  NULLS LAST, (((+ (t0.c18))) BETWEEN (((vt0.c1) NOT NULL)) AND ((((t0.c18))>((t0.c82))))) DESC, ((t0.c61)>>((t0.c82 IN ())));
SELECT * FROM t0 INNER JOIN vt0 ON CAST('-938095006' AS REAL) WHERE (((((json_extract(t0.c61, t0.c23))OR(CASE t0.c82  WHEN t0.c0 THEN t0.c58 ELSE t0.c0 END)))AND(CAST(t0.c30 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((json_extract(t0.c61, t0.c23))OR(CASE t0.c82  WHEN t0.c0 THEN t0.c58 ELSE t0.c0 END)))AND(CAST(t0.c30 AS BLOB)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST('-938095006' AS REAL));
SELECT * FROM t0 INNER JOIN vt0 ON CAST('-938095006' AS REAL) WHERE (((((json_extract(t0.c61, t0.c23))OR(CASE t0.c82  WHEN t0.c0 THEN t0.c58 ELSE t0.c0 END)))AND(CAST(t0.c30 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((json_extract(t0.c61, t0.c23))OR(CASE t0.c82  WHEN t0.c0 THEN t0.c58 ELSE t0.c0 END)))AND(CAST(t0.c30 AS BLOB)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST('-938095006' AS REAL));
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c18)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c18)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c18)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c18)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c18)) AS BLOB));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((((t0.c30))==((t0.c18))))GLOB(vt0.c1)) WHERE (((((vt0.c1)GLOB(t0.c23)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)GLOB(t0.c23)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((t0.c30))=((t0.c18))))GLOB(vt0.c1)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((((t0.c30))==((t0.c18))))GLOB(vt0.c1)) WHERE (((((vt0.c1)GLOB(t0.c23)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)GLOB(t0.c23)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((t0.c30))=((t0.c18))))GLOB(vt0.c1)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((((t0.c30))==((t0.c18))))GLOB(vt0.c1)) WHERE (((((vt0.c1)GLOB(t0.c23)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST(t0.c18 COLLATE NOCASE AS NUMERIC) WHERE (((t0.c0) NOTNULL) COLLATE RTRIM) ORDER BY ((((t0.c82)) BETWEEN ((t0.c82)) AND ((t0.c58))) IN (((0.9163250519520767) IS FALSE), (- (vt0.c1))))  NULLS FIRST, (((t0.c58, t0.c23, t0.c58)) BETWEEN ((COALESCE(t0.c82, NULL), CASE t0.c82  WHEN t0.c58 THEN t0.c58 ELSE t0.c18 END, CAST(t0.c61 AS REAL))) AND ((((t0.c23)AND(t0.c30)), CASE WHEN t0.c82 THEN t0.c58 ELSE t0.c58 END, CAST(t0.c0 AS REAL)))), (t0.c61 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST(t0.c18 COLLATE NOCASE AS NUMERIC) ORDER BY ((((t0.c82)) BETWEEN ((t0.c82)) AND ((t0.c58))) IN (((0.9163250519520767) IS FALSE), (- (vt0.c1))))  NULLS FIRST, (((t0.c58, t0.c23, t0.c58)) BETWEEN ((COALESCE(t0.c82, NULL), CASE t0.c82  WHEN t0.c58 THEN t0.c58 ELSE t0.c18 END, CAST(t0.c61 AS REAL))) AND ((((t0.c23)AND(t0.c30)), CASE WHEN t0.c82 THEN t0.c58 ELSE t0.c58 END, CAST(t0.c0 AS REAL)))), (t0.c61 COLLATE NOCASE IN ()));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST(t0.c18 COLLATE NOCASE AS NUMERIC) WHERE (((t0.c0) NOTNULL) COLLATE RTRIM) ORDER BY ((((t0.c82)) BETWEEN ((t0.c82)) AND ((t0.c58))) IN (((0.9163250519520767) IS FALSE), (- (vt0.c1))))  NULLS FIRST, (((t0.c58, t0.c23, t0.c58)) BETWEEN ((COALESCE(t0.c82, NULL), CASE t0.c82  WHEN t0.c58 THEN t0.c58 ELSE t0.c18 END, CAST(t0.c61 AS REAL))) AND ((((t0.c23)AND(t0.c30)), CASE WHEN t0.c82 THEN t0.c58 ELSE t0.c58 END, CAST(t0.c0 AS REAL)))), (t0.c61 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST(t0.c18 COLLATE NOCASE AS NUMERIC) ORDER BY ((((t0.c82)) BETWEEN ((t0.c82)) AND ((t0.c58))) IN (((0.9163250519520767) IS FALSE), (- (vt0.c1))))  NULLS FIRST, (((t0.c58, t0.c23, t0.c58)) BETWEEN ((COALESCE(t0.c82, NULL), CASE t0.c82  WHEN t0.c58 THEN t0.c58 ELSE t0.c18 END, CAST(t0.c61 AS REAL))) AND ((((t0.c23)AND(t0.c30)), CASE WHEN t0.c82 THEN t0.c58 ELSE t0.c58 END, CAST(t0.c0 AS REAL)))), (t0.c61 COLLATE NOCASE IN ()));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST(t0.c18 COLLATE NOCASE AS NUMERIC) WHERE (((t0.c0) NOTNULL) COLLATE RTRIM) ORDER BY ((((t0.c82)) BETWEEN ((t0.c82)) AND ((t0.c58))) IN (((0.9163250519520767) IS FALSE), (- (vt0.c1))))  NULLS FIRST, (((t0.c58, t0.c23, t0.c58)) BETWEEN ((COALESCE(t0.c82, NULL), CASE t0.c82  WHEN t0.c58 THEN t0.c58 ELSE t0.c18 END, CAST(t0.c61 AS REAL))) AND ((((t0.c23)AND(t0.c30)), CASE WHEN t0.c82 THEN t0.c58 ELSE t0.c58 END, CAST(t0.c0 AS REAL)))), (t0.c61 COLLATE NOCASE IN ());
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((vt0.c0 IN (vt0.c1, t0.c23)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (vt0.c1, t0.c23)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((vt0.c0 IN (vt0.c1, t0.c23)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (vt0.c1, t0.c23)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((vt0.c0 IN (vt0.c1, t0.c23)) AS INTEGER));
SELECT ALL * FROM t0 WHERE (CASE WHEN (+ (t0.c23)) THEN 1035764149 WHEN TRIM(t0.c23) THEN CASE WHEN t0.c61 THEN t0.c18 END WHEN NULL THEN ((t0.c82) NOT BETWEEN (t0.c61) AND (t0.c61)) END) ORDER BY (((((t0.c23, t0.c58, t0.c61, t0.c61, t0.c23))==((t0.c82, t0.c61, t0.c0, t0.c61, t0.c30)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (t0.c23)) THEN 1035764149 WHEN TRIM(t0.c23) THEN CASE WHEN t0.c61 THEN t0.c18 END WHEN NULL THEN ((t0.c82) NOT BETWEEN (t0.c61) AND (t0.c61)) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c23, t0.c58, t0.c61, t0.c61, t0.c23))=((t0.c82, t0.c61, t0.c0, t0.c61, t0.c30)))) IS TRUE) DESC);
SELECT ALL * FROM t0 WHERE (CASE WHEN (+ (t0.c23)) THEN 1035764149 WHEN TRIM(t0.c23) THEN CASE WHEN t0.c61 THEN t0.c18 END WHEN NULL THEN ((t0.c82) NOT BETWEEN (t0.c61) AND (t0.c61)) END) ORDER BY (((((t0.c23, t0.c58, t0.c61, t0.c61, t0.c23))==((t0.c82, t0.c61, t0.c0, t0.c61, t0.c30)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (t0.c23)) THEN 1035764149 WHEN TRIM(t0.c23) THEN CASE WHEN t0.c61 THEN t0.c18 END WHEN NULL THEN ((t0.c82) NOT BETWEEN (t0.c61) AND (t0.c61)) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c23, t0.c58, t0.c61, t0.c61, t0.c23))=((t0.c82, t0.c61, t0.c0, t0.c61, t0.c30)))) IS TRUE) DESC);
SELECT ALL * FROM t0 WHERE (CASE WHEN (+ (t0.c23)) THEN 1035764149 WHEN TRIM(t0.c23) THEN CASE WHEN t0.c61 THEN t0.c18 END WHEN NULL THEN ((t0.c82) NOT BETWEEN (t0.c61) AND (t0.c61)) END) ORDER BY (((((t0.c23, t0.c58, t0.c61, t0.c61, t0.c23))==((t0.c82, t0.c61, t0.c0, t0.c61, t0.c30)))) IS TRUE) DESC;
SELECT ALL * FROM t0, vt0 WHERE ((+ (t0.c0)) COLLATE NOCASE) ORDER BY (((vt0.c1) NOTNULL) IN ()), CASE WHEN (~ (t0.c18)) THEN ((((t0.c58)OR(vt0.c0)))OR(t0.c58)) WHEN ((((((((t0.c23)OR(vt0.c1)))OR(t0.c58)))AND(x'')))AND(t0.c30)) THEN ((t0.c23) BETWEEN (t0.c18) AND (t0.c61)) WHEN t0.c58 THEN ((t0.c61) IS FALSE) ELSE NULL END;
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1) NOTNULL) IN ()), CASE WHEN (~ (t0.c18)) THEN ((((t0.c58)OR(vt0.c0)))OR(t0.c58)) WHEN ((((((((t0.c23)OR(vt0.c1)))OR(t0.c58)))AND(x'')))AND(t0.c30)) THEN ((t0.c23) BETWEEN (t0.c18) AND (t0.c61)) WHEN t0.c58 THEN ((t0.c61) IS FALSE) ELSE NULL END);
SELECT ALL * FROM t0, vt0 WHERE ((+ (t0.c0)) COLLATE NOCASE) ORDER BY (((vt0.c1) NOTNULL) IN ()), CASE WHEN (~ (t0.c18)) THEN ((((t0.c58)OR(vt0.c0)))OR(t0.c58)) WHEN ((((((((t0.c23)OR(vt0.c1)))OR(t0.c58)))AND(x'')))AND(t0.c30)) THEN ((t0.c23) BETWEEN (t0.c18) AND (t0.c61)) WHEN t0.c58 THEN ((t0.c61) IS FALSE) ELSE NULL END;
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c1) NOTNULL) IN ()), CASE WHEN (~ (t0.c18)) THEN ((((t0.c58)OR(vt0.c0)))OR(t0.c58)) WHEN ((((((((t0.c23)OR(vt0.c1)))OR(t0.c58)))AND(x'')))AND(t0.c30)) THEN ((t0.c23) BETWEEN (t0.c18) AND (t0.c61)) WHEN t0.c58 THEN ((t0.c61) IS FALSE) ELSE NULL END);
SELECT ALL * FROM t0, vt0 WHERE ((+ (t0.c0)) COLLATE NOCASE) ORDER BY (((vt0.c1) NOTNULL) IN ()), CASE WHEN (~ (t0.c18)) THEN ((((t0.c58)OR(vt0.c0)))OR(t0.c58)) WHEN ((((((((t0.c23)OR(vt0.c1)))OR(t0.c58)))AND(x'')))AND(t0.c30)) THEN ((t0.c23) BETWEEN (t0.c18) AND (t0.c61)) WHEN t0.c58 THEN ((t0.c61) IS FALSE) ELSE NULL END;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c0)GLOB(t0.c23)))AND(vt0.c0)))AND(((vt0.c1)||(t0.c23)))))OR((t0.c58 IN ()))))AND((t0.c82 IN (t0.c23)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)GLOB(t0.c23)))AND(vt0.c0)))AND(((vt0.c1)||(t0.c23)))))OR((t0.c58 IN ()))))AND((t0.c82 IN (t0.c23))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c0)GLOB(t0.c23)))AND(vt0.c0)))AND(((vt0.c1)||(t0.c23)))))OR((t0.c58 IN ()))))AND((t0.c82 IN (t0.c23)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)GLOB(t0.c23)))AND(vt0.c0)))AND(((vt0.c1)||(t0.c23)))))OR((t0.c58 IN ()))))AND((t0.c82 IN (t0.c23))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c0)GLOB(t0.c23)))AND(vt0.c0)))AND(((vt0.c1)||(t0.c23)))))OR((t0.c58 IN ()))))AND((t0.c82 IN (t0.c23)))));
SELECT * FROM t0 WHERE (t0.c82);
SELECT SUM(count) FROM (SELECT ((t0.c82) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c82);
SELECT SUM(count) FROM (SELECT ((t0.c82) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c82);
SELECT ALL * FROM vt0, t0 WHERE (IFNULL((- (t0.c61)), x'' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((IFNULL((- (t0.c61)), x'' COLLATE RTRIM)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (IFNULL((- (t0.c61)), x'' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((IFNULL((- (t0.c61)), x'' COLLATE RTRIM)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (IFNULL((- (t0.c61)), x'' COLLATE RTRIM));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((((t0.c18)) BETWEEN ((t0.c82)) AND ((t0.c18))))OR(((t0.c0) IS TRUE))))AND(t0.c82 COLLATE BINARY))) ORDER BY ((- (t0.c58)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c18)) BETWEEN ((t0.c82)) AND ((t0.c18))))OR(((t0.c0) IS TRUE))))AND(t0.c82 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((- (t0.c58)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((((t0.c18)) BETWEEN ((t0.c82)) AND ((t0.c18))))OR(((t0.c0) IS TRUE))))AND(t0.c82 COLLATE BINARY))) ORDER BY ((- (t0.c58)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t0.c18)) BETWEEN ((t0.c82)) AND ((t0.c18))))OR(((t0.c0) IS TRUE))))AND(t0.c82 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((- (t0.c58)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((((t0.c18)) BETWEEN ((t0.c82)) AND ((t0.c18))))OR(((t0.c0) IS TRUE))))AND(t0.c82 COLLATE BINARY))) ORDER BY ((- (t0.c58)) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c0, vt0.c0)))) AND ((((vt0.c1)>=(vt0.c1)))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c0, vt0.c0)))) AND ((((vt0.c1)>=(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c0, vt0.c0)))) AND ((((vt0.c1)>=(vt0.c1)))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c0, vt0.c0)))) AND ((((vt0.c1)>=(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c0, vt0.c0)))) AND ((((vt0.c1)>=(vt0.c1)))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE BINARY) ORDER BY TRIM(vt0.c0 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY TRIM(vt0.c0 COLLATE RTRIM) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE BINARY) ORDER BY TRIM(vt0.c0 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY TRIM(vt0.c0 COLLATE RTRIM) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE BINARY) ORDER BY TRIM(vt0.c0 COLLATE RTRIM) DESC;
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((t0.c61 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c61 IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((t0.c61 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c61 IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((t0.c61 IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) ISNULL))>=(((vt0.c0)>(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL))>=(((vt0.c0)>(NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) ISNULL))>=(((vt0.c0)>(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL))>=(((vt0.c0)>(NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) ISNULL))>=(((vt0.c0)>(NULL)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c23) NOT BETWEEN (t0.c30) AND (t0.c61)))/(((t0.c23) BETWEEN (t0.c82) AND (t0.c23))))) ORDER BY ((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN t0.c58 THEN t0.c82 WHEN vt0.c1 THEN t0.c23 ELSE vt0.c1 END)AND(vt0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c23) NOT BETWEEN (t0.c30) AND (t0.c61)))/(((t0.c23) BETWEEN (t0.c82) AND (t0.c23))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN t0.c58 THEN t0.c82 WHEN vt0.c1 THEN t0.c23 ELSE vt0.c1 END)AND(vt0.c1 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c23) NOT BETWEEN (t0.c30) AND (t0.c61)))/(((t0.c23) BETWEEN (t0.c82) AND (t0.c23))))) ORDER BY ((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN t0.c58 THEN t0.c82 WHEN vt0.c1 THEN t0.c23 ELSE vt0.c1 END)AND(vt0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c23) NOT BETWEEN (t0.c30) AND (t0.c61)))/(((t0.c23) BETWEEN (t0.c82) AND (t0.c23))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN t0.c58 THEN t0.c82 WHEN vt0.c1 THEN t0.c23 ELSE vt0.c1 END)AND(vt0.c1 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c23) NOT BETWEEN (t0.c30) AND (t0.c61)))/(((t0.c23) BETWEEN (t0.c82) AND (t0.c23))))) ORDER BY ((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN t0.c58 THEN t0.c82 WHEN vt0.c1 THEN t0.c23 ELSE vt0.c1 END)AND(vt0.c1 COLLATE RTRIM)) DESC;
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c23  WHEN t0.c61 THEN t0.c61 WHEN t0.c18 THEN t0.c58 WHEN t0.c0 THEN t0.c61 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c23  WHEN t0.c61 THEN t0.c61 WHEN t0.c18 THEN t0.c58 WHEN t0.c0 THEN t0.c61 END AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c23  WHEN t0.c61 THEN t0.c61 WHEN t0.c18 THEN t0.c58 WHEN t0.c0 THEN t0.c61 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c23  WHEN t0.c61 THEN t0.c61 WHEN t0.c18 THEN t0.c58 WHEN t0.c0 THEN t0.c61 END AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c23  WHEN t0.c61 THEN t0.c61 WHEN t0.c18 THEN t0.c58 WHEN t0.c0 THEN t0.c61 END AS INTEGER));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((('냽b^IT4}2')<<(t0.c18)) IN ())) ORDER BY CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c23)) WHEN ((t0.c82) NOTNULL) THEN CASE WHEN t0.c23 THEN t0.c23 WHEN t0.c61 THEN t0.c0 WHEN t0.c82 THEN t0.c82 END WHEN vt0.c1 THEN CASE t0.c23  WHEN t0.c0 THEN t0.c82 WHEN t0.c0 THEN t0.c82 WHEN t0.c18 THEN t0.c82 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('냽b^IT4}2')<<(t0.c18)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c23)) WHEN ((t0.c82) NOTNULL) THEN CASE WHEN t0.c23 THEN t0.c23 WHEN t0.c61 THEN t0.c0 WHEN t0.c82 THEN t0.c82 END WHEN vt0.c1 THEN CASE t0.c23  WHEN t0.c0 THEN t0.c82 WHEN t0.c0 THEN t0.c82 WHEN t0.c18 THEN t0.c82 END END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((('냽b^IT4}2')<<(t0.c18)) IN ())) ORDER BY CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c23)) WHEN ((t0.c82) NOTNULL) THEN CASE WHEN t0.c23 THEN t0.c23 WHEN t0.c61 THEN t0.c0 WHEN t0.c82 THEN t0.c82 END WHEN vt0.c1 THEN CASE t0.c23  WHEN t0.c0 THEN t0.c82 WHEN t0.c0 THEN t0.c82 WHEN t0.c18 THEN t0.c82 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('냽b^IT4}2')<<(t0.c18)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c23)) WHEN ((t0.c82) NOTNULL) THEN CASE WHEN t0.c23 THEN t0.c23 WHEN t0.c61 THEN t0.c0 WHEN t0.c82 THEN t0.c82 END WHEN vt0.c1 THEN CASE t0.c23  WHEN t0.c0 THEN t0.c82 WHEN t0.c0 THEN t0.c82 WHEN t0.c18 THEN t0.c82 END END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((('냽b^IT4}2')<<(t0.c18)) IN ())) ORDER BY CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c23)) WHEN ((t0.c82) NOTNULL) THEN CASE WHEN t0.c23 THEN t0.c23 WHEN t0.c61 THEN t0.c0 WHEN t0.c82 THEN t0.c82 END WHEN vt0.c1 THEN CASE t0.c23  WHEN t0.c0 THEN t0.c82 WHEN t0.c0 THEN t0.c82 WHEN t0.c18 THEN t0.c82 END END ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c30);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY x'3911d06a'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY x'3911d06a'  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY x'3911d06a'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY x'3911d06a'  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY x'3911d06a'  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE RTRIM, (vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt0.c0 COLLATE RTRIM, (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE RTRIM, (vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt0.c0 COLLATE RTRIM, (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE RTRIM, (vt0.c1 IN ())));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON '1591573617' WHERE ((~ (CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '1591573617');
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON '1591573617' WHERE ((~ (CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '1591573617');
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON '1591573617' WHERE ((~ (CAST(t0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c18)AND(t0.c18)))AND((((NULL)) NOT BETWEEN ((t0.c61)) AND (('1023109018'))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c18)AND(t0.c18)))AND((((NULL)) NOT BETWEEN ((t0.c61)) AND (('1023109018')))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c18)AND(t0.c18)))AND((((NULL)) NOT BETWEEN ((t0.c61)) AND (('1023109018'))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c18)AND(t0.c18)))AND((((NULL)) NOT BETWEEN ((t0.c61)) AND (('1023109018')))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c18)AND(t0.c18)))AND((((NULL)) NOT BETWEEN ((t0.c61)) AND (('1023109018'))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c61 COLLATE RTRIM) NOT BETWEEN (RTRIM(vt0.c1)) AND ((t0.c18 IN ())))) ORDER BY ((((t0.c61)AND(t0.c82)))>>(IFNULL('1035764149', t0.c23)));
SELECT SUM(count) FROM (SELECT ((((t0.c61 COLLATE RTRIM) NOT BETWEEN (RTRIM(vt0.c1)) AND ((t0.c18 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c61)AND(t0.c82)))>>(IFNULL('1035764149', t0.c23))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c61 COLLATE RTRIM) NOT BETWEEN (RTRIM(vt0.c1)) AND ((t0.c18 IN ())))) ORDER BY ((((t0.c61)AND(t0.c82)))>>(IFNULL('1035764149', t0.c23)));
SELECT SUM(count) FROM (SELECT ((((t0.c61 COLLATE RTRIM) NOT BETWEEN (RTRIM(vt0.c1)) AND ((t0.c18 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c61)AND(t0.c82)))>>(IFNULL('1035764149', t0.c23))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c61 COLLATE RTRIM) NOT BETWEEN (RTRIM(vt0.c1)) AND ((t0.c18 IN ())))) ORDER BY ((((t0.c61)AND(t0.c82)))>>(IFNULL('1035764149', t0.c23)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))AND((((vt0.c0))==((vt0.c1)))))) ORDER BY (((- (vt0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c1)))AND((((vt0.c0))==((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))AND((((vt0.c0))==((vt0.c1)))))) ORDER BY (((- (vt0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c1)))AND((((vt0.c0))==((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))AND((((vt0.c0))==((vt0.c1)))))) ORDER BY (((- (vt0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c30);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'') ORDER BY ((LTRIM(t0.c82)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY ((LTRIM(t0.c82)) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'') ORDER BY ((LTRIM(t0.c82)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY ((LTRIM(t0.c82)) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'') ORDER BY ((LTRIM(t0.c82)) NOTNULL) ASC;
SELECT * FROM t0 WHERE (CAST(t0.c23 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c23 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(t0.c23 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c23 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(t0.c23 COLLATE RTRIM AS INTEGER));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c30) IS FALSE) AS NUMERIC)) ORDER BY ((((t0.c58)+(vt0.c1)))&(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c30) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c58)+(vt0.c1)))&(CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c30) IS FALSE) AS NUMERIC)) ORDER BY ((((t0.c58)+(vt0.c1)))&(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c30) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c58)+(vt0.c1)))&(CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c30) IS FALSE) AS NUMERIC)) ORDER BY ((((t0.c58)+(vt0.c1)))&(CAST(vt0.c0 AS BLOB)));
SELECT * FROM t0, vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) ORDER BY x'' ASC, IFNULL((NOT ('-1889916340')), CAST(t0.c61 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' ASC, IFNULL((NOT ('-1889916340')), CAST(t0.c61 AS BLOB))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) ORDER BY x'' ASC, IFNULL((NOT ('-1889916340')), CAST(t0.c61 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' ASC, IFNULL((NOT ('-1889916340')), CAST(t0.c61 AS BLOB))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) ORDER BY x'' ASC, IFNULL((NOT ('-1889916340')), CAST(t0.c61 AS BLOB))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT (((t0.c18)) BETWEEN ((t0.c30)) AND ((t0.c61))), 0.5856134612286122));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (((t0.c18)) BETWEEN ((t0.c30)) AND ((t0.c61))), 0.5856134612286122)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT (((t0.c18)) BETWEEN ((t0.c30)) AND ((t0.c61))), 0.5856134612286122));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (((t0.c18)) BETWEEN ((t0.c30)) AND ((t0.c61))), 0.5856134612286122)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT (((t0.c18)) BETWEEN ((t0.c30)) AND ((t0.c61))), 0.5856134612286122));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c82) BETWEEN (t0.c82) AND (t0.c61)))OR(t0.c30 COLLATE RTRIM)))OR(0.03181201687644142))) ORDER BY ((((t0.c82)AND(((t0.c23) IS FALSE))))AND(t0.c61))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c82) BETWEEN (t0.c82) AND (t0.c61)))OR(t0.c30 COLLATE RTRIM)))OR(0.03181201687644142))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c82)AND(((t0.c23) IS FALSE))))AND(t0.c61))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c82) BETWEEN (t0.c82) AND (t0.c61)))OR(t0.c30 COLLATE RTRIM)))OR(0.03181201687644142))) ORDER BY ((((t0.c82)AND(((t0.c23) IS FALSE))))AND(t0.c61))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c82) BETWEEN (t0.c82) AND (t0.c61)))OR(t0.c30 COLLATE RTRIM)))OR(0.03181201687644142))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c82)AND(((t0.c23) IS FALSE))))AND(t0.c61))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c82) BETWEEN (t0.c82) AND (t0.c61)))OR(t0.c30 COLLATE RTRIM)))OR(0.03181201687644142))) ORDER BY ((((t0.c82)AND(((t0.c23) IS FALSE))))AND(t0.c61))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c58 IN ())))>((LTRIM(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c58 IN ())))>((LTRIM(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c58 IN ())))>((LTRIM(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c58 IN ())))>((LTRIM(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c58 IN ())))>((LTRIM(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((- (((((((((t0.c23)AND(t0.c61)))AND(t0.c23)))OR(t0.c61)))OR(t0.c23))))) ORDER BY (((',鬙U!6l\n')) BETWEEN (((((t0.c61)) NOT BETWEEN ((t0.c23)) AND ((t0.c0))))) AND ((t0.c30))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((t0.c23)AND(t0.c61)))AND(t0.c23)))OR(t0.c61)))OR(t0.c23))))) IS TRUE)  as count FROM t0 ORDER BY (((',鬙U!6l\n')) BETWEEN (((((t0.c61)) NOT BETWEEN ((t0.c23)) AND ((t0.c0))))) AND ((t0.c30))) ASC);
SELECT COUNT(*) FROM t0 WHERE ((- (((((((((t0.c23)AND(t0.c61)))AND(t0.c23)))OR(t0.c61)))OR(t0.c23))))) ORDER BY (((',鬙U!6l\n')) BETWEEN (((((t0.c61)) NOT BETWEEN ((t0.c23)) AND ((t0.c0))))) AND ((t0.c30))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((t0.c23)AND(t0.c61)))AND(t0.c23)))OR(t0.c61)))OR(t0.c23))))) IS TRUE)  as count FROM t0 ORDER BY (((',鬙U!6l\n')) BETWEEN (((((t0.c61)) NOT BETWEEN ((t0.c23)) AND ((t0.c0))))) AND ((t0.c30))) ASC);
SELECT COUNT(*) FROM t0 WHERE ((- (((((((((t0.c23)AND(t0.c61)))AND(t0.c23)))OR(t0.c61)))OR(t0.c23))))) ORDER BY (((',鬙U!6l\n')) BETWEEN (((((t0.c61)) NOT BETWEEN ((t0.c23)) AND ((t0.c0))))) AND ((t0.c30))) ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN t0.c30 THEN t0.c61 ELSE t0.c82 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c30 THEN t0.c61 ELSE t0.c82 END COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN t0.c30 THEN t0.c61 ELSE t0.c82 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c30 THEN t0.c61 ELSE t0.c82 END COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN t0.c30 THEN t0.c61 ELSE t0.c82 END COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE x''  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c82 THEN t0.c82 WHEN t0.c58 THEN t0.c58 END THEN (t0.c58 IN (t0.c18)) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c82 THEN t0.c82 WHEN t0.c58 THEN t0.c58 END THEN (t0.c58 IN (t0.c18)) END) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE x''  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c82 THEN t0.c82 WHEN t0.c58 THEN t0.c58 END THEN (t0.c58 IN (t0.c18)) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c82 THEN t0.c82 WHEN t0.c58 THEN t0.c58 END THEN (t0.c58 IN (t0.c18)) END) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE x''  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c82 THEN t0.c82 WHEN t0.c58 THEN t0.c58 END THEN (t0.c58 IN (t0.c18)) END);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON vt0.c1 WHERE ((((((t0.c58))>=((t0.c61))))<<((NOT (t0.c23))))) ORDER BY '-1156482942' ASC, '-84077663' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c58))>=((t0.c61))))<<((NOT (t0.c23))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON vt0.c1 ORDER BY '-1156482942' ASC, '-84077663' ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON vt0.c1 WHERE ((((((t0.c58))>=((t0.c61))))<<((NOT (t0.c23))))) ORDER BY '-1156482942' ASC, '-84077663' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c58))>=((t0.c61))))<<((NOT (t0.c23))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON vt0.c1 ORDER BY '-1156482942' ASC, '-84077663' ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON vt0.c1 WHERE ((((((t0.c58))>=((t0.c61))))<<((NOT (t0.c23))))) ORDER BY '-1156482942' ASC, '-84077663' ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((0xffffffffbb6d2496)+(t0.c82)))AND('')))OR(CASE t0.c18  WHEN t0.c30 THEN '-1156482942' END))) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c61 THEN t0.c30 ELSE t0.c82 END ELSE t0.c0 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0xffffffffbb6d2496)+(t0.c82)))AND('')))OR(CASE t0.c18  WHEN t0.c30 THEN '-1156482942' END))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c61 THEN t0.c30 ELSE t0.c82 END ELSE t0.c0 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((0xffffffffbb6d2496)+(t0.c82)))AND('')))OR(CASE t0.c18  WHEN t0.c30 THEN '-1156482942' END))) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c61 THEN t0.c30 ELSE t0.c82 END ELSE t0.c0 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0xffffffffbb6d2496)+(t0.c82)))AND('')))OR(CASE t0.c18  WHEN t0.c30 THEN '-1156482942' END))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c61 THEN t0.c30 ELSE t0.c82 END ELSE t0.c0 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((0xffffffffbb6d2496)+(t0.c82)))AND('')))OR(CASE t0.c18  WHEN t0.c30 THEN '-1156482942' END))) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c61 THEN t0.c30 ELSE t0.c82 END ELSE t0.c0 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c30);
SELECT COUNT(*) FROM t0 WHERE (t0.c23);
SELECT SUM(count) FROM (SELECT ALL ((t0.c23) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c23);
SELECT SUM(count) FROM (SELECT ALL ((t0.c23) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c23);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c30) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c30) NOTNULL) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c30) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c30) NOTNULL) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c30) NOTNULL) AS REAL));
SELECT * FROM t0, vt0 WHERE (((((t0.c61)-(vt0.c0)))||(CAST(t0.c82 AS REAL)))) ORDER BY 0.9955307409970598 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c61)-(vt0.c0)))||(CAST(t0.c82 AS REAL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.9955307409970598 ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((t0.c61)-(vt0.c0)))||(CAST(t0.c82 AS REAL)))) ORDER BY 0.9955307409970598 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c61)-(vt0.c0)))||(CAST(t0.c82 AS REAL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.9955307409970598 ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((t0.c61)-(vt0.c0)))||(CAST(t0.c82 AS REAL)))) ORDER BY 0.9955307409970598 ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((((NOT (t0.c82)))*((((t0.c58)) BETWEEN ((0.6775371214884535)) AND ((vt0.c0)))))) ORDER BY (t0.c61 IN (((((t0.c30)AND(t0.c58)))AND(t0.c82)))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c82)))*((((t0.c58)) BETWEEN ((0.6775371214884535)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c61 IN (((((t0.c30)AND(t0.c58)))AND(t0.c82)))) DESC);
SELECT * FROM vt0, t0 WHERE ((((NOT (t0.c82)))*((((t0.c58)) BETWEEN ((0.6775371214884535)) AND ((vt0.c0)))))) ORDER BY (t0.c61 IN (((((t0.c30)AND(t0.c58)))AND(t0.c82)))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c82)))*((((t0.c58)) BETWEEN ((0.6775371214884535)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c61 IN (((((t0.c30)AND(t0.c58)))AND(t0.c82)))) DESC);
SELECT * FROM vt0, t0 WHERE ((((NOT (t0.c82)))*((((t0.c58)) BETWEEN ((0.6775371214884535)) AND ((vt0.c0)))))) ORDER BY (t0.c61 IN (((((t0.c30)AND(t0.c58)))AND(t0.c82)))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (((t0.c30)|(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c30)|(x''))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (((t0.c30)|(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c30)|(x''))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (((t0.c30)|(x'')))));
SELECT ALL COUNT(*) FROM t0 WHERE (UNICODE(t0.c61 COLLATE RTRIM)) ORDER BY t0.c30 COLLATE RTRIM ASC  NULLS FIRST, CAST(t0.c18 AS INTEGER) COLLATE BINARY COLLATE BINARY  NULLS LAST, (+ (((t0.c18) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(t0.c61 COLLATE RTRIM)) IS TRUE)  as count FROM t0 ORDER BY t0.c30 COLLATE RTRIM ASC  NULLS FIRST, CAST(t0.c18 AS INTEGER) COLLATE BINARY COLLATE BINARY  NULLS LAST, (+ (((t0.c18) IS FALSE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (UNICODE(t0.c61 COLLATE RTRIM)) ORDER BY t0.c30 COLLATE RTRIM ASC  NULLS FIRST, CAST(t0.c18 AS INTEGER) COLLATE BINARY COLLATE BINARY  NULLS LAST, (+ (((t0.c18) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(t0.c61 COLLATE RTRIM)) IS TRUE)  as count FROM t0 ORDER BY t0.c30 COLLATE RTRIM ASC  NULLS FIRST, CAST(t0.c18 AS INTEGER) COLLATE BINARY COLLATE BINARY  NULLS LAST, (+ (((t0.c18) IS FALSE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (UNICODE(t0.c61 COLLATE RTRIM)) ORDER BY t0.c30 COLLATE RTRIM ASC  NULLS FIRST, CAST(t0.c18 AS INTEGER) COLLATE BINARY COLLATE BINARY  NULLS LAST, (+ (((t0.c18) IS FALSE))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((x'') IS TRUE) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END END) ORDER BY TRIM((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'') IS TRUE) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY TRIM((NOT (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((x'') IS TRUE) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END END) ORDER BY TRIM((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'') IS TRUE) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY TRIM((NOT (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((x'') IS TRUE) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END END) ORDER BY TRIM((NOT (vt0.c0)));
SELECT * FROM t0, vt0 WHERE ((((((t0.c30)-(t0.c61)), vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 END))=(((- (t0.c58)), ((((((((t0.c18)OR(t0.c30)))AND(vt0.c1)))OR(t0.c30)))OR(vt0.c1)), CASE t0.c0  WHEN t0.c61 THEN t0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c30)-(t0.c61)), vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 END))==(((- (t0.c58)), ((((((((t0.c18)OR(t0.c30)))AND(vt0.c1)))OR(t0.c30)))OR(vt0.c1)), CASE t0.c0  WHEN t0.c61 THEN t0.c0 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((t0.c30)-(t0.c61)), vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 END))=(((- (t0.c58)), ((((((((t0.c18)OR(t0.c30)))AND(vt0.c1)))OR(t0.c30)))OR(vt0.c1)), CASE t0.c0  WHEN t0.c61 THEN t0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c30)-(t0.c61)), vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 END))==(((- (t0.c58)), ((((((((t0.c18)OR(t0.c30)))AND(vt0.c1)))OR(t0.c30)))OR(vt0.c1)), CASE t0.c0  WHEN t0.c61 THEN t0.c0 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((t0.c30)-(t0.c61)), vt0.c0, CASE WHEN t0.c0 THEN vt0.c0 END))=(((- (t0.c58)), ((((((((t0.c18)OR(t0.c30)))AND(vt0.c1)))OR(t0.c30)))OR(vt0.c1)), CASE t0.c0  WHEN t0.c61 THEN t0.c0 END))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c58)) NOT BETWEEN ((t0.c18)) AND ((t0.c18)))) NOT NULL)) ORDER BY (((~ (vt0.c1)))-(t0.c23))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c58)) NOT BETWEEN ((t0.c18)) AND ((t0.c18)))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (vt0.c1)))-(t0.c23))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c58)) NOT BETWEEN ((t0.c18)) AND ((t0.c18)))) NOT NULL)) ORDER BY (((~ (vt0.c1)))-(t0.c23))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c58)) NOT BETWEEN ((t0.c18)) AND ((t0.c18)))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (vt0.c1)))-(t0.c23))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c58)) NOT BETWEEN ((t0.c18)) AND ((t0.c18)))) NOT NULL)) ORDER BY (((~ (vt0.c1)))-(t0.c23))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c82)OR(NULL)))AND(t0.c30)))OR(t0.c0)))AND(t0.c61)))==((t0.c30 IN ())))) ORDER BY ((-5.82790234E8 IN (t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c82)OR(NULL)))AND(t0.c30)))OR(t0.c0)))AND(t0.c61)))==((t0.c30 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((-5.82790234E8 IN (t0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c82)OR(NULL)))AND(t0.c30)))OR(t0.c0)))AND(t0.c61)))==((t0.c30 IN ())))) ORDER BY ((-5.82790234E8 IN (t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c82)OR(NULL)))AND(t0.c30)))OR(t0.c0)))AND(t0.c61)))==((t0.c30 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((-5.82790234E8 IN (t0.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c82)OR(NULL)))AND(t0.c30)))OR(t0.c0)))AND(t0.c61)))==((t0.c30 IN ())))) ORDER BY ((-5.82790234E8 IN (t0.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c0 AS TEXT))>(t0.c61))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT))>(t0.c61))) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c0 AS TEXT))>(t0.c61))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT))>(t0.c61))) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c0 AS TEXT))>(t0.c61))) ORDER BY NULL;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c23)IS(t0.c18)))>(((vt0.c0)-(t0.c82)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c23)IS(t0.c18)))>(((vt0.c0)-(t0.c82))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c23)IS(t0.c18)))>(((vt0.c0)-(t0.c82)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c23)IS(t0.c18)))>(((vt0.c0)-(t0.c82))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c23)IS(t0.c18)))>(((vt0.c0)-(t0.c82)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c58)OR(NULL))) NOT BETWEEN ((NOT (t0.c30))) AND (HEX(DISTINCT t0.c61))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c58)OR(NULL))) NOT BETWEEN ((NOT (t0.c30))) AND (HEX(DISTINCT t0.c61)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c58)OR(NULL))) NOT BETWEEN ((NOT (t0.c30))) AND (HEX(DISTINCT t0.c61))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c58)OR(NULL))) NOT BETWEEN ((NOT (t0.c30))) AND (HEX(DISTINCT t0.c61)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c58)OR(NULL))) NOT BETWEEN ((NOT (t0.c30))) AND (HEX(DISTINCT t0.c61))));
SELECT COUNT(*) FROM t0 WHERE (CASE LIKELY(DISTINCT t0.c30)  WHEN CASE t0.c23  WHEN t0.c23 THEN t0.c61 ELSE t0.c0 END THEN ((t0.c23) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELY(DISTINCT t0.c30)  WHEN CASE t0.c23  WHEN t0.c23 THEN t0.c61 ELSE t0.c0 END THEN ((t0.c23) ISNULL) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE LIKELY(DISTINCT t0.c30)  WHEN CASE t0.c23  WHEN t0.c23 THEN t0.c61 ELSE t0.c0 END THEN ((t0.c23) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELY(DISTINCT t0.c30)  WHEN CASE t0.c23  WHEN t0.c23 THEN t0.c61 ELSE t0.c0 END THEN ((t0.c23) ISNULL) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE LIKELY(DISTINCT t0.c30)  WHEN CASE t0.c23  WHEN t0.c23 THEN t0.c61 ELSE t0.c0 END THEN ((t0.c23) ISNULL) END);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c30)/(vt0.c0)))IS((((t0.c82)) BETWEEN ((t0.c30)) AND ((vt0.c1))))) WHERE ((((+ (t0.c18))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c18))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c30)/(vt0.c0)))IS((((t0.c82)) BETWEEN ((t0.c30)) AND ((vt0.c1))))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c30)/(vt0.c0)))IS((((t0.c82)) BETWEEN ((t0.c30)) AND ((vt0.c1))))) WHERE ((((+ (t0.c18))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c18))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c30)/(vt0.c0)))IS((((t0.c82)) BETWEEN ((t0.c30)) AND ((vt0.c1))))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c30)/(vt0.c0)))IS((((t0.c82)) BETWEEN ((t0.c30)) AND ((vt0.c1))))) WHERE ((((+ (t0.c18))) NOT NULL));
SELECT ALL * FROM t0 WHERE ((NOT (t0.c82)));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c82))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (t0.c82)));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c82))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (t0.c82)));
SELECT ALL * FROM t0 WHERE (t0.c58 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((t0.c58 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c58 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((t0.c58 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c58 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((x'')%(((((vt0.c1)OR('')))OR(vt0.c0))))) ORDER BY (((((~ (vt0.c1)))OR(((vt0.c1) ISNULL))))AND((vt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')%(((((vt0.c1)OR('')))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((~ (vt0.c1)))OR(((vt0.c1) ISNULL))))AND((vt0.c1 IN ()))) ASC);
SELECT ALL * FROM vt0 WHERE (((x'')%(((((vt0.c1)OR('')))OR(vt0.c0))))) ORDER BY (((((~ (vt0.c1)))OR(((vt0.c1) ISNULL))))AND((vt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')%(((((vt0.c1)OR('')))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((~ (vt0.c1)))OR(((vt0.c1) ISNULL))))AND((vt0.c1 IN ()))) ASC);
SELECT * FROM vt0 WHERE (((((NULL) BETWEEN (NULL) AND (vt0.c0)))/(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CASE (~ (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN ((vt0.c1)<(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((NULL)) AND ((vt0.c1))) WHEN ((vt0.c1)>=(vt0.c0)) THEN (vt0.c1 IN ()) ELSE (~ (vt0.c1)) END ASC, (- (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (NULL) AND (vt0.c0)))/(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (~ (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN ((vt0.c1)<(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((NULL)) AND ((vt0.c1))) WHEN ((vt0.c1)>=(vt0.c0)) THEN (vt0.c1 IN ()) ELSE (~ (vt0.c1)) END ASC, (- (vt0.c0))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((NULL) BETWEEN (NULL) AND (vt0.c0)))/(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CASE (~ (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN ((vt0.c1)<(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((NULL)) AND ((vt0.c1))) WHEN ((vt0.c1)>=(vt0.c0)) THEN (vt0.c1 IN ()) ELSE (~ (vt0.c1)) END ASC, (- (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (NULL) AND (vt0.c0)))/(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (~ (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN ((vt0.c1)<(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((NULL)) AND ((vt0.c1))) WHEN ((vt0.c1)>=(vt0.c0)) THEN (vt0.c1 IN ()) ELSE (~ (vt0.c1)) END ASC, (- (vt0.c0))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((NULL) BETWEEN (NULL) AND (vt0.c0)))/(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CASE (~ (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN ((vt0.c1)<(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((NULL)) AND ((vt0.c1))) WHEN ((vt0.c1)>=(vt0.c0)) THEN (vt0.c1 IN ()) ELSE (~ (vt0.c1)) END ASC, (- (vt0.c0))  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (TIME((- (t0.c58)), LOWER(t0.c18), t0.c30 COLLATE RTRIM, COALESCE(DISTINCT vt0.c0, t0.c61), x'bf41')) ORDER BY ((CAST('-972370851' AS NUMERIC)) IS TRUE)  NULLS LAST, (((vt0.c1)) NOT BETWEEN (((- (t0.c61)))) AND ((t0.c23))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TIME((- (t0.c58)), LOWER(t0.c18), t0.c30 COLLATE RTRIM, COALESCE(DISTINCT vt0.c0, t0.c61), x'bf41')) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST('-972370851' AS NUMERIC)) IS TRUE)  NULLS LAST, (((vt0.c1)) NOT BETWEEN (((- (t0.c61)))) AND ((t0.c23))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (TIME((- (t0.c58)), LOWER(t0.c18), t0.c30 COLLATE RTRIM, COALESCE(DISTINCT vt0.c0, t0.c61), x'bf41')) ORDER BY ((CAST('-972370851' AS NUMERIC)) IS TRUE)  NULLS LAST, (((vt0.c1)) NOT BETWEEN (((- (t0.c61)))) AND ((t0.c23))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TIME((- (t0.c58)), LOWER(t0.c18), t0.c30 COLLATE RTRIM, COALESCE(DISTINCT vt0.c0, t0.c61), x'bf41')) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST('-972370851' AS NUMERIC)) IS TRUE)  NULLS LAST, (((vt0.c1)) NOT BETWEEN (((- (t0.c61)))) AND ((t0.c23))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (TIME((- (t0.c58)), LOWER(t0.c18), t0.c30 COLLATE RTRIM, COALESCE(DISTINCT vt0.c0, t0.c61), x'bf41')) ORDER BY ((CAST('-972370851' AS NUMERIC)) IS TRUE)  NULLS LAST, (((vt0.c1)) NOT BETWEEN (((- (t0.c61)))) AND ((t0.c23))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c23 IN ()))!=(((t0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c23 IN ()))!=(((t0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c23 IN ()))!=(((t0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c23 IN ()))!=(((t0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c23 IN ()))!=(((t0.c0)/(vt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((t0.c82) IS FALSE))OR((~ (t0.c23)))))OR(((t0.c23)!=(t0.c58)))))AND((NOT (t0.c30)))))AND(((NULL)%(t0.c30)))))AND(((((((((t0.c18)OR(t0.c82)))OR(t0.c23)))AND(t0.c61)))AND(t0.c61)))))OR(((t0.c23) IS FALSE)))) ORDER BY (TRIM(t0.c23, t0.c61) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c82) IS FALSE))OR((~ (t0.c23)))))OR(((t0.c23)!=(t0.c58)))))AND((NOT (t0.c30)))))AND(((NULL)%(t0.c30)))))AND(((((((((t0.c18)OR(t0.c82)))OR(t0.c23)))AND(t0.c61)))AND(t0.c61)))))OR(((t0.c23) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY (TRIM(t0.c23, t0.c61) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((t0.c82) IS FALSE))OR((~ (t0.c23)))))OR(((t0.c23)!=(t0.c58)))))AND((NOT (t0.c30)))))AND(((NULL)%(t0.c30)))))AND(((((((((t0.c18)OR(t0.c82)))OR(t0.c23)))AND(t0.c61)))AND(t0.c61)))))OR(((t0.c23) IS FALSE)))) ORDER BY (TRIM(t0.c23, t0.c61) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c82) IS FALSE))OR((~ (t0.c23)))))OR(((t0.c23)!=(t0.c58)))))AND((NOT (t0.c30)))))AND(((NULL)%(t0.c30)))))AND(((((((((t0.c18)OR(t0.c82)))OR(t0.c23)))AND(t0.c61)))AND(t0.c61)))))OR(((t0.c23) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY (TRIM(t0.c23, t0.c61) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((t0.c82) IS FALSE))OR((~ (t0.c23)))))OR(((t0.c23)!=(t0.c58)))))AND((NOT (t0.c30)))))AND(((NULL)%(t0.c30)))))AND(((((((((t0.c18)OR(t0.c82)))OR(t0.c23)))AND(t0.c61)))AND(t0.c61)))))OR(((t0.c23) IS FALSE)))) ORDER BY (TRIM(t0.c23, t0.c61) IN ());
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c1 COLLATE NOCASE))=(('80685704'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 COLLATE NOCASE))==(('80685704')))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c1 COLLATE NOCASE))=(('80685704'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 COLLATE NOCASE))==(('80685704')))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c1 COLLATE NOCASE))=(('80685704'))));
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c30))<=((t0.c61))))GLOB((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((t0.c30))<=((t0.c61))))GLOB((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c30))<=((t0.c61))))GLOB((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((t0.c30))<=((t0.c61))))GLOB((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c30))<=((t0.c61))))GLOB((vt0.c0 IN ()))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((t0.c61)OR(t0.c23)))AND(t0.c82)))OR(t0.c61)))AND(t0.c23)) COLLATE NOCASE) ORDER BY CASE '-210595425'  WHEN ((vt0.c0) ISNULL) THEN ((t0.c23)IS NOT(t0.c30)) END;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c61)OR(t0.c23)))AND(t0.c82)))OR(t0.c61)))AND(t0.c23)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE '-210595425'  WHEN ((vt0.c0) ISNULL) THEN ((t0.c23)IS NOT(t0.c30)) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((t0.c61)OR(t0.c23)))AND(t0.c82)))OR(t0.c61)))AND(t0.c23)) COLLATE NOCASE) ORDER BY CASE '-210595425'  WHEN ((vt0.c0) ISNULL) THEN ((t0.c23)IS NOT(t0.c30)) END;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c61)OR(t0.c23)))AND(t0.c82)))OR(t0.c61)))AND(t0.c23)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE '-210595425'  WHEN ((vt0.c0) ISNULL) THEN ((t0.c23)IS NOT(t0.c30)) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((t0.c61)OR(t0.c23)))AND(t0.c82)))OR(t0.c61)))AND(t0.c23)) COLLATE NOCASE) ORDER BY CASE '-210595425'  WHEN ((vt0.c0) ISNULL) THEN ((t0.c23)IS NOT(t0.c30)) END;
SELECT * FROM vt0, t0 WHERE ((DATE(vt0.c1, t0.c23, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((DATE(vt0.c1, t0.c23, vt0.c0) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((DATE(vt0.c1, t0.c23, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((DATE(vt0.c1, t0.c23, vt0.c0) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((DATE(vt0.c1, t0.c23, vt0.c0) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ('1725601009');
SELECT SUM(count) FROM (SELECT (('1725601009') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('1725601009');
SELECT SUM(count) FROM (SELECT (('1725601009') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('1725601009');
SELECT * FROM vt0 INNER JOIN t0 ON t0.c82 WHERE (t0.c30) ORDER BY ((((t0.c82)OR((t0.c58 IN (vt0.c1)))))OR(((t0.c58) BETWEEN (t0.c82) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON t0.c82 ORDER BY ((((t0.c82)OR((t0.c58 IN (vt0.c1)))))OR(((t0.c58) BETWEEN (t0.c82) AND (vt0.c0)))));
SELECT * FROM vt0 INNER JOIN t0 ON t0.c82 WHERE (t0.c30) ORDER BY ((((t0.c82)OR((t0.c58 IN (vt0.c1)))))OR(((t0.c58) BETWEEN (t0.c82) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON t0.c82 ORDER BY ((((t0.c82)OR((t0.c58 IN (vt0.c1)))))OR(((t0.c58) BETWEEN (t0.c82) AND (vt0.c0)))));
SELECT * FROM vt0 INNER JOIN t0 ON t0.c82 WHERE (t0.c30) ORDER BY ((((t0.c82)OR((t0.c58 IN (vt0.c1)))))OR(((t0.c58) BETWEEN (t0.c82) AND (vt0.c0))));
SELECT * FROM t0 WHERE (((TYPEOF(NULL)) IS TRUE)) ORDER BY ((CASE t0.c18  WHEN t0.c61 THEN t0.c61 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(NULL)) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c18  WHEN t0.c61 THEN t0.c61 END) NOT NULL) DESC);
SELECT * FROM t0 WHERE (((TYPEOF(NULL)) IS TRUE)) ORDER BY ((CASE t0.c18  WHEN t0.c61 THEN t0.c61 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(NULL)) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c18  WHEN t0.c61 THEN t0.c61 END) NOT NULL) DESC);
SELECT * FROM t0 WHERE (((TYPEOF(NULL)) IS TRUE)) ORDER BY ((CASE t0.c18  WHEN t0.c61 THEN t0.c61 END) NOT NULL) DESC;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c23)-(t0.c61))  WHEN ((t0.c58)>=(t0.c0)) THEN (t0.c0 IN ()) WHEN (((t0.c18)) BETWEEN ((t0.c61)) AND ((t0.c23))) THEN ((t0.c58)+(t0.c61)) WHEN (((t0.c30)) NOT BETWEEN ((t0.c30)) AND (('GhjRඛVO!'))) THEN ((((((((t0.c18)OR(t0.c61)))OR(t0.c61)))AND(0.976928599727614)))AND(t0.c58)) ELSE ((((t0.c82)OR(t0.c18)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c23)-(t0.c61))  WHEN ((t0.c58)>=(t0.c0)) THEN (t0.c0 IN ()) WHEN (((t0.c18)) BETWEEN ((t0.c61)) AND ((t0.c23))) THEN ((t0.c58)+(t0.c61)) WHEN (((t0.c30)) NOT BETWEEN ((t0.c30)) AND (('GhjRඛVO!'))) THEN ((((((((t0.c18)OR(t0.c61)))OR(t0.c61)))AND(0.976928599727614)))AND(t0.c58)) ELSE ((((t0.c82)OR(t0.c18)))OR(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c23)-(t0.c61))  WHEN ((t0.c58)>=(t0.c0)) THEN (t0.c0 IN ()) WHEN (((t0.c18)) BETWEEN ((t0.c61)) AND ((t0.c23))) THEN ((t0.c58)+(t0.c61)) WHEN (((t0.c30)) NOT BETWEEN ((t0.c30)) AND (('GhjRඛVO!'))) THEN ((((((((t0.c18)OR(t0.c61)))OR(t0.c61)))AND(0.976928599727614)))AND(t0.c58)) ELSE ((((t0.c82)OR(t0.c18)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c23)-(t0.c61))  WHEN ((t0.c58)>=(t0.c0)) THEN (t0.c0 IN ()) WHEN (((t0.c18)) BETWEEN ((t0.c61)) AND ((t0.c23))) THEN ((t0.c58)+(t0.c61)) WHEN (((t0.c30)) NOT BETWEEN ((t0.c30)) AND (('GhjRඛVO!'))) THEN ((((((((t0.c18)OR(t0.c61)))OR(t0.c61)))AND(0.976928599727614)))AND(t0.c58)) ELSE ((((t0.c82)OR(t0.c18)))OR(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c23)-(t0.c61))  WHEN ((t0.c58)>=(t0.c0)) THEN (t0.c0 IN ()) WHEN (((t0.c18)) BETWEEN ((t0.c61)) AND ((t0.c23))) THEN ((t0.c58)+(t0.c61)) WHEN (((t0.c30)) NOT BETWEEN ((t0.c30)) AND (('GhjRඛVO!'))) THEN ((((((((t0.c18)OR(t0.c61)))OR(t0.c61)))AND(0.976928599727614)))AND(t0.c58)) ELSE ((((t0.c82)OR(t0.c18)))OR(t0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((x'37cc')IS NOT(vt0.c0))) NOT BETWEEN ('T') AND (((vt0.c1)<>(vt0.c0))))) ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE NULL END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'37cc')IS NOT(vt0.c0))) NOT BETWEEN ('T') AND (((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE NULL END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'37cc')IS NOT(vt0.c0))) NOT BETWEEN ('T') AND (((vt0.c1)<>(vt0.c0))))) ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE NULL END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'37cc')IS NOT(vt0.c0))) NOT BETWEEN ('T') AND (((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE NULL END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'37cc')IS NOT(vt0.c0))) NOT BETWEEN ('T') AND (((vt0.c1)<>(vt0.c0))))) ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE NULL END DESC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (((t0.c23) NOTNULL) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c23) NOTNULL) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c23) NOTNULL) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c23) NOTNULL) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c23) NOTNULL) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM t0, vt0 WHERE (CASE CAST(t0.c30 AS BLOB)  WHEN CAST(t0.c0 AS TEXT) THEN CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c18 THEN t0.c23 WHEN t0.c30 THEN t0.c58 END WHEN ((vt0.c1) ISNULL) THEN ((((t0.c18)AND(t0.c82)))AND(vt0.c0)) WHEN ((t0.c30) BETWEEN (t0.c23) AND (t0.c58)) THEN LIKELY(vt0.c1) END) ORDER BY ((t0.c30) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c30 AS BLOB)  WHEN CAST(t0.c0 AS TEXT) THEN CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c18 THEN t0.c23 WHEN t0.c30 THEN t0.c58 END WHEN ((vt0.c1) ISNULL) THEN ((((t0.c18)AND(t0.c82)))AND(vt0.c0)) WHEN ((t0.c30) BETWEEN (t0.c23) AND (t0.c58)) THEN LIKELY(vt0.c1) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c30) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE CAST(t0.c30 AS BLOB)  WHEN CAST(t0.c0 AS TEXT) THEN CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c18 THEN t0.c23 WHEN t0.c30 THEN t0.c58 END WHEN ((vt0.c1) ISNULL) THEN ((((t0.c18)AND(t0.c82)))AND(vt0.c0)) WHEN ((t0.c30) BETWEEN (t0.c23) AND (t0.c58)) THEN LIKELY(vt0.c1) END) ORDER BY ((t0.c30) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c30 AS BLOB)  WHEN CAST(t0.c0 AS TEXT) THEN CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c18 THEN t0.c23 WHEN t0.c30 THEN t0.c58 END WHEN ((vt0.c1) ISNULL) THEN ((((t0.c18)AND(t0.c82)))AND(vt0.c0)) WHEN ((t0.c30) BETWEEN (t0.c23) AND (t0.c58)) THEN LIKELY(vt0.c1) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c30) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE CAST(t0.c30 AS BLOB)  WHEN CAST(t0.c0 AS TEXT) THEN CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c18 THEN t0.c23 WHEN t0.c30 THEN t0.c58 END WHEN ((vt0.c1) ISNULL) THEN ((((t0.c18)AND(t0.c82)))AND(vt0.c0)) WHEN ((t0.c30) BETWEEN (t0.c23) AND (t0.c58)) THEN LIKELY(vt0.c1) END) ORDER BY ((t0.c30) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((1.860546192E9)=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((1.860546192E9)=(vt0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((1.860546192E9)=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((1.860546192E9)=(vt0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((1.860546192E9)=(vt0.c0)));
SELECT COUNT(*) FROM t0 WHERE (t0.c23) ORDER BY ((CASE t0.c23  WHEN t0.c23 THEN x'' ELSE t0.c58 END) BETWEEN (((t0.c30) NOT BETWEEN (t0.c58) AND (t0.c58))) AND (CAST(t0.c18 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c23) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c23  WHEN t0.c23 THEN x'' ELSE t0.c58 END) BETWEEN (((t0.c30) NOT BETWEEN (t0.c58) AND (t0.c58))) AND (CAST(t0.c18 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c23) ORDER BY ((CASE t0.c23  WHEN t0.c23 THEN x'' ELSE t0.c58 END) BETWEEN (((t0.c30) NOT BETWEEN (t0.c58) AND (t0.c58))) AND (CAST(t0.c18 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c23) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c23  WHEN t0.c23 THEN x'' ELSE t0.c58 END) BETWEEN (((t0.c30) NOT BETWEEN (t0.c58) AND (t0.c58))) AND (CAST(t0.c18 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c23) ORDER BY ((CASE t0.c23  WHEN t0.c23 THEN x'' ELSE t0.c58 END) BETWEEN (((t0.c30) NOT BETWEEN (t0.c58) AND (t0.c58))) AND (CAST(t0.c18 AS NUMERIC)))  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE ((t0.c18) NOTNULL)  WHEN UNLIKELY(t0.c58) THEN x'' ELSE ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) END WHERE (((t0.c82 COLLATE NOCASE) BETWEEN ((- (t0.c18))) AND (CASE WHEN 0.45540973600587775 THEN t0.c18 WHEN vt0.c1 THEN t0.c82 WHEN t0.c82 THEN vt0.c1 END))) ORDER BY (CASE WHEN t0.c23 THEN vt0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c82 COLLATE NOCASE) BETWEEN ((- (t0.c18))) AND (CASE WHEN 0.45540973600587775 THEN t0.c18 WHEN vt0.c1 THEN t0.c82 WHEN t0.c82 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE ((t0.c18) NOTNULL)  WHEN UNLIKELY(t0.c58) THEN x'' ELSE ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) END ORDER BY (CASE WHEN t0.c23 THEN vt0.c0 END IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE ((t0.c18) NOTNULL)  WHEN UNLIKELY(t0.c58) THEN x'' ELSE ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) END WHERE (((t0.c82 COLLATE NOCASE) BETWEEN ((- (t0.c18))) AND (CASE WHEN 0.45540973600587775 THEN t0.c18 WHEN vt0.c1 THEN t0.c82 WHEN t0.c82 THEN vt0.c1 END))) ORDER BY (CASE WHEN t0.c23 THEN vt0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c82 COLLATE NOCASE) BETWEEN ((- (t0.c18))) AND (CASE WHEN 0.45540973600587775 THEN t0.c18 WHEN vt0.c1 THEN t0.c82 WHEN t0.c82 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE ((t0.c18) NOTNULL)  WHEN UNLIKELY(t0.c58) THEN x'' ELSE ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) END ORDER BY (CASE WHEN t0.c23 THEN vt0.c0 END IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE ((t0.c18) NOTNULL)  WHEN UNLIKELY(t0.c58) THEN x'' ELSE ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) END WHERE (((t0.c82 COLLATE NOCASE) BETWEEN ((- (t0.c18))) AND (CASE WHEN 0.45540973600587775 THEN t0.c18 WHEN vt0.c1 THEN t0.c82 WHEN t0.c82 THEN vt0.c1 END))) ORDER BY (CASE WHEN t0.c23 THEN vt0.c0 END IN ())  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((- (t0.c58)));
SELECT SUM(count) FROM (SELECT (((- (t0.c58))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((- (t0.c58)));
SELECT SUM(count) FROM (SELECT (((- (t0.c58))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((- (t0.c58)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c58)) NOT BETWEEN (((((t0.c23, vt0.c1, t0.c18)) BETWEEN ((t0.c82, vt0.c1, 'i+o')) AND ((t0.c18, t0.c18, t0.c0))))) AND ((t0.c23)))) ORDER BY (('1861446735') BETWEEN (((((t0.c18)AND('-1222494579')))OR(t0.c23))) AND ('-1744679547')) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c58)) NOT BETWEEN (((((t0.c23, vt0.c1, t0.c18)) BETWEEN ((t0.c82, vt0.c1, 'i+o')) AND ((t0.c18, t0.c18, t0.c0))))) AND ((t0.c23)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (('1861446735') BETWEEN (((((t0.c18)AND('-1222494579')))OR(t0.c23))) AND ('-1744679547')) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c58)) NOT BETWEEN (((((t0.c23, vt0.c1, t0.c18)) BETWEEN ((t0.c82, vt0.c1, 'i+o')) AND ((t0.c18, t0.c18, t0.c0))))) AND ((t0.c23)))) ORDER BY (('1861446735') BETWEEN (((((t0.c18)AND('-1222494579')))OR(t0.c23))) AND ('-1744679547')) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c58)) NOT BETWEEN (((((t0.c23, vt0.c1, t0.c18)) BETWEEN ((t0.c82, vt0.c1, 'i+o')) AND ((t0.c18, t0.c18, t0.c0))))) AND ((t0.c23)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (('1861446735') BETWEEN (((((t0.c18)AND('-1222494579')))OR(t0.c23))) AND ('-1744679547')) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c58)) NOT BETWEEN (((((t0.c23, vt0.c1, t0.c18)) BETWEEN ((t0.c82, vt0.c1, 'i+o')) AND ((t0.c18, t0.c18, t0.c0))))) AND ((t0.c23)))) ORDER BY (('1861446735') BETWEEN (((((t0.c18)AND('-1222494579')))OR(t0.c23))) AND ('-1744679547')) ASC;
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CAST((((1015232441))>((t0.c61))) AS NUMERIC) WHERE ((((((((((t0.c58)OR(t0.c23)))AND(t0.c61)))OR(NULL)))OR(t0.c58)) IN (2.53034613E8))) ORDER BY (('1760801351')<<(((0.8397930725542503)GLOB(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c58)OR(t0.c23)))AND(t0.c61)))OR(NULL)))OR(t0.c58)) IN (2.53034613E8))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST((((1015232441))>((t0.c61))) AS NUMERIC) ORDER BY (('1760801351')<<(((0.8397930725542503)GLOB(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CAST((((1015232441))>((t0.c61))) AS NUMERIC) WHERE ((((((((((t0.c58)OR(t0.c23)))AND(t0.c61)))OR(NULL)))OR(t0.c58)) IN (2.53034613E8))) ORDER BY (('1760801351')<<(((0.8397930725542503)GLOB(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c58)OR(t0.c23)))AND(t0.c61)))OR(NULL)))OR(t0.c58)) IN (2.53034613E8))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST((((1015232441))>((t0.c61))) AS NUMERIC) ORDER BY (('1760801351')<<(((0.8397930725542503)GLOB(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CAST((((1015232441))>((t0.c61))) AS NUMERIC) WHERE ((((((((((t0.c58)OR(t0.c23)))AND(t0.c61)))OR(NULL)))OR(t0.c58)) IN (2.53034613E8))) ORDER BY (('1760801351')<<(((0.8397930725542503)GLOB(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c82)|(t0.c30)))OR(0.0687651508808178)))OR(CAST(t0.c82 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c82)|(t0.c30)))OR(0.0687651508808178)))OR(CAST(t0.c82 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c82)|(t0.c30)))OR(0.0687651508808178)))OR(CAST(t0.c82 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c82)|(t0.c30)))OR(0.0687651508808178)))OR(CAST(t0.c82 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((t0.c82)|(t0.c30)))OR(0.0687651508808178)))OR(CAST(t0.c82 AS INTEGER))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (~ ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (~ ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (~ ((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((json_array_length(t0.c30, t0.c18)) BETWEEN ((- (NULL))) AND (CASE vt0.c1  WHEN t0.c30 THEN vt0.c0 ELSE t0.c30 END))) ORDER BY (((((vt0.c1)!=(t0.c0))))>=((((t0.c61)IS NOT(vt0.c1))))) ASC, ((((vt0.c1) NOT BETWEEN (t0.c58) AND (t0.c82))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_array_length(t0.c30, t0.c18)) BETWEEN ((- (NULL))) AND (CASE vt0.c1  WHEN t0.c30 THEN vt0.c0 ELSE t0.c30 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c1)<>(t0.c0))))>=((((t0.c61)IS NOT(vt0.c1))))) ASC, ((((vt0.c1) NOT BETWEEN (t0.c58) AND (t0.c82))) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((json_array_length(t0.c30, t0.c18)) BETWEEN ((- (NULL))) AND (CASE vt0.c1  WHEN t0.c30 THEN vt0.c0 ELSE t0.c30 END))) ORDER BY (((((vt0.c1)!=(t0.c0))))>=((((t0.c61)IS NOT(vt0.c1))))) ASC, ((((vt0.c1) NOT BETWEEN (t0.c58) AND (t0.c82))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_array_length(t0.c30, t0.c18)) BETWEEN ((- (NULL))) AND (CASE vt0.c1  WHEN t0.c30 THEN vt0.c0 ELSE t0.c30 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c1)<>(t0.c0))))>=((((t0.c61)IS NOT(vt0.c1))))) ASC, ((((vt0.c1) NOT BETWEEN (t0.c58) AND (t0.c82))) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((json_array_length(t0.c30, t0.c18)) BETWEEN ((- (NULL))) AND (CASE vt0.c1  WHEN t0.c30 THEN vt0.c0 ELSE t0.c30 END))) ORDER BY (((((vt0.c1)!=(t0.c0))))>=((((t0.c61)IS NOT(vt0.c1))))) ASC, ((((vt0.c1) NOT BETWEEN (t0.c58) AND (t0.c82))) IS FALSE) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c0)%(vt0.c1))))) ORDER BY (0.49698652005467114 IN ()), (NOT (vt0.c1)) COLLATE NOCASE DESC  NULLS LAST, CASE (vt0.c1 IN ())  WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) THEN NULL ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c0)%(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (0.49698652005467114 IN ()), (NOT (vt0.c1)) COLLATE NOCASE DESC  NULLS LAST, CASE (vt0.c1 IN ())  WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) THEN NULL ELSE vt0.c0 END);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c0)%(vt0.c1))))) ORDER BY (0.49698652005467114 IN ()), (NOT (vt0.c1)) COLLATE NOCASE DESC  NULLS LAST, CASE (vt0.c1 IN ())  WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) THEN NULL ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c0)%(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (0.49698652005467114 IN ()), (NOT (vt0.c1)) COLLATE NOCASE DESC  NULLS LAST, CASE (vt0.c1 IN ())  WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) THEN NULL ELSE vt0.c0 END);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c0)%(vt0.c1))))) ORDER BY (0.49698652005467114 IN ()), (NOT (vt0.c1)) COLLATE NOCASE DESC  NULLS LAST, CASE (vt0.c1 IN ())  WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) THEN NULL ELSE vt0.c0 END;
SELECT * FROM t0, vt0 WHERE (((((((((((t0.c0) ISNULL))OR(t0.c61)))OR(((t0.c82) ISNULL))))AND((- (vt0.c1)))))OR(CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0) ISNULL))OR(t0.c61)))OR(((t0.c82) ISNULL))))AND((- (vt0.c1)))))OR(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((((((t0.c0) ISNULL))OR(t0.c61)))OR(((t0.c82) ISNULL))))AND((- (vt0.c1)))))OR(CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0) ISNULL))OR(t0.c61)))OR(((t0.c82) ISNULL))))AND((- (vt0.c1)))))OR(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((((((t0.c0) ISNULL))OR(t0.c61)))OR(((t0.c82) ISNULL))))AND((- (vt0.c1)))))OR(CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT NULL)) ORDER BY (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT NULL)) ORDER BY (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT NULL)) ORDER BY (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ASC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c30 THEN t0.c23 END) BETWEEN (t0.c82 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN t0.c0 THEN t0.c30 ELSE t0.c0 END)) WHERE (((((vt0.c1)==(t0.c30))) BETWEEN ((~ (vt0.c1))) AND (((t0.c58)>(t0.c30)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)=(t0.c30))) BETWEEN ((~ (vt0.c1))) AND (((t0.c58)>(t0.c30))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c30 THEN t0.c23 END) BETWEEN (t0.c82 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN t0.c0 THEN t0.c30 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c30 THEN t0.c23 END) BETWEEN (t0.c82 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN t0.c0 THEN t0.c30 ELSE t0.c0 END)) WHERE (((((vt0.c1)==(t0.c30))) BETWEEN ((~ (vt0.c1))) AND (((t0.c58)>(t0.c30)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)=(t0.c30))) BETWEEN ((~ (vt0.c1))) AND (((t0.c58)>(t0.c30))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c30 THEN t0.c23 END) BETWEEN (t0.c82 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN t0.c0 THEN t0.c30 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((CASE vt0.c0  WHEN t0.c30 THEN t0.c23 END) BETWEEN (t0.c82 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN t0.c0 THEN t0.c30 ELSE t0.c0 END)) WHERE (((((vt0.c1)==(t0.c30))) BETWEEN ((~ (vt0.c1))) AND (((t0.c58)>(t0.c30)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c30 IN ()))IS(t0.c18))) ORDER BY CAST(t0.c82 COLLATE RTRIM AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c30 IN ()))IS(t0.c18))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c82 COLLATE RTRIM AS REAL));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c30 IN ()))IS(t0.c18))) ORDER BY CAST(t0.c82 COLLATE RTRIM AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c30 IN ()))IS(t0.c18))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c82 COLLATE RTRIM AS REAL));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c30 IN ()))IS(t0.c18))) ORDER BY CAST(t0.c82 COLLATE RTRIM AS REAL);
SELECT ALL * FROM t0 WHERE (CAST((((t0.c82))=((t0.c18))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c82))=((t0.c18))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((((t0.c82))=((t0.c18))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c82))=((t0.c18))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((((t0.c82))=((t0.c18))) AS NUMERIC));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((CAST(t0.c30 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c30 AS INTEGER) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((CAST(t0.c30 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c30 AS INTEGER) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((CAST(t0.c30 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE t0.c61  WHEN (((vt0.c0)) BETWEEN ((t0.c30)) AND ((vt0.c0))) THEN ((((t0.c61)AND(t0.c18)))OR(vt0.c0)) WHEN t0.c0 THEN ((t0.c0) NOTNULL) WHEN ((((t0.c82)AND(vt0.c0)))AND('')) THEN t0.c58 COLLATE RTRIM END) ORDER BY (- (t0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((((t0.c30)AND(t0.c61)))OR('-1875118766')))AND(CASE WHEN NULL THEN t0.c0 WHEN t0.c58 THEN t0.c18 WHEN t0.c30 THEN t0.c58 ELSE t0.c18 END)) DESC  NULLS LAST, ((t0.c30) NOTNULL) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c61  WHEN (((vt0.c0)) BETWEEN ((t0.c30)) AND ((vt0.c0))) THEN ((((t0.c61)AND(t0.c18)))OR(vt0.c0)) WHEN t0.c0 THEN ((t0.c0) NOTNULL) WHEN ((((t0.c82)AND(vt0.c0)))AND('')) THEN t0.c58 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (t0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((((t0.c30)AND(t0.c61)))OR('-1875118766')))AND(CASE WHEN NULL THEN t0.c0 WHEN t0.c58 THEN t0.c18 WHEN t0.c30 THEN t0.c58 ELSE t0.c18 END)) DESC  NULLS LAST, ((t0.c30) NOTNULL) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE t0.c61  WHEN (((vt0.c0)) BETWEEN ((t0.c30)) AND ((vt0.c0))) THEN ((((t0.c61)AND(t0.c18)))OR(vt0.c0)) WHEN t0.c0 THEN ((t0.c0) NOTNULL) WHEN ((((t0.c82)AND(vt0.c0)))AND('')) THEN t0.c58 COLLATE RTRIM END) ORDER BY (- (t0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((((t0.c30)AND(t0.c61)))OR('-1875118766')))AND(CASE WHEN NULL THEN t0.c0 WHEN t0.c58 THEN t0.c18 WHEN t0.c30 THEN t0.c58 ELSE t0.c18 END)) DESC  NULLS LAST, ((t0.c30) NOTNULL) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c61  WHEN (((vt0.c0)) BETWEEN ((t0.c30)) AND ((vt0.c0))) THEN ((((t0.c61)AND(t0.c18)))OR(vt0.c0)) WHEN t0.c0 THEN ((t0.c0) NOTNULL) WHEN ((((t0.c82)AND(vt0.c0)))AND('')) THEN t0.c58 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt0 ORDER BY (- (t0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((((t0.c30)AND(t0.c61)))OR('-1875118766')))AND(CASE WHEN NULL THEN t0.c0 WHEN t0.c58 THEN t0.c18 WHEN t0.c30 THEN t0.c58 ELSE t0.c18 END)) DESC  NULLS LAST, ((t0.c30) NOTNULL) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE t0.c61  WHEN (((vt0.c0)) BETWEEN ((t0.c30)) AND ((vt0.c0))) THEN ((((t0.c61)AND(t0.c18)))OR(vt0.c0)) WHEN t0.c0 THEN ((t0.c0) NOTNULL) WHEN ((((t0.c82)AND(vt0.c0)))AND('')) THEN t0.c58 COLLATE RTRIM END) ORDER BY (- (t0.c0)) COLLATE RTRIM ASC  NULLS LAST, ((((((t0.c30)AND(t0.c61)))OR('-1875118766')))AND(CASE WHEN NULL THEN t0.c0 WHEN t0.c58 THEN t0.c18 WHEN t0.c30 THEN t0.c58 ELSE t0.c18 END)) DESC  NULLS LAST, ((t0.c30) NOTNULL) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (t0.c30) ORDER BY t0.c23 ASC;
SELECT SUM(count) FROM (SELECT ((t0.c30) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c23 ASC);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (t0.c30) ORDER BY t0.c23 ASC;
SELECT SUM(count) FROM (SELECT ((t0.c30) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c23 ASC);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (t0.c30) ORDER BY t0.c23 ASC;
SELECT COUNT(*) FROM t0 WHERE ((((((((((+ (t0.c58)))OR('')))OR(CASE t0.c30  WHEN '1243393962' THEN t0.c0 ELSE t0.c30 END)))AND(x'c0e0')))AND(((t0.c58)<>(t0.c18)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (t0.c58)))OR('')))OR(CASE t0.c30  WHEN '1243393962' THEN t0.c0 ELSE t0.c30 END)))AND(x'c0e0')))AND(((t0.c58)!=(t0.c18))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((+ (t0.c58)))OR('')))OR(CASE t0.c30  WHEN '1243393962' THEN t0.c0 ELSE t0.c30 END)))AND(x'c0e0')))AND(((t0.c58)<>(t0.c18)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (t0.c58)))OR('')))OR(CASE t0.c30  WHEN '1243393962' THEN t0.c0 ELSE t0.c30 END)))AND(x'c0e0')))AND(((t0.c58)!=(t0.c18))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((+ (t0.c58)))OR('')))OR(CASE t0.c30  WHEN '1243393962' THEN t0.c0 ELSE t0.c30 END)))AND(x'c0e0')))AND(((t0.c58)<>(t0.c18)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(0.9201094840073384 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.9201094840073384 AS REAL) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(0.9201094840073384 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.9201094840073384 AS REAL) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(0.9201094840073384 AS REAL) IN ()));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((NULL) BETWEEN (vt0.c0) AND (t0.c61))) BETWEEN (CAST(t0.c61 AS INTEGER)) AND (((vt0.c0)-(t0.c58)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (vt0.c0) AND (t0.c61))) BETWEEN (CAST(t0.c61 AS INTEGER)) AND (((vt0.c0)-(t0.c58))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((NULL) BETWEEN (vt0.c0) AND (t0.c61))) BETWEEN (CAST(t0.c61 AS INTEGER)) AND (((vt0.c0)-(t0.c58)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (vt0.c0) AND (t0.c61))) BETWEEN (CAST(t0.c61 AS INTEGER)) AND (((vt0.c0)-(t0.c58))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((NULL) BETWEEN (vt0.c0) AND (t0.c61))) BETWEEN (CAST(t0.c61 AS INTEGER)) AND (((vt0.c0)-(t0.c58)))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN 0xffffffffb6d7e73c THEN vt0.c1 END)IS NOT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY '-1227364548' COLLATE BINARY ASC, (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN 0Xffffffffb6d7e73c THEN vt0.c1 END)IS NOT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY '-1227364548' COLLATE BINARY ASC, (vt0.c0 IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN 0xffffffffb6d7e73c THEN vt0.c1 END)IS NOT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY '-1227364548' COLLATE BINARY ASC, (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN 0Xffffffffb6d7e73c THEN vt0.c1 END)IS NOT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY '-1227364548' COLLATE BINARY ASC, (vt0.c0 IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN 0xffffffffb6d7e73c THEN vt0.c1 END)IS NOT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY '-1227364548' COLLATE BINARY ASC, (vt0.c0 IN ());
SELECT * FROM t0 WHERE (CASE WHEN t0.c82 THEN t0.c23 WHEN t0.c61 THEN t0.c82 WHEN t0.c0 THEN t0.c23 ELSE t0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c82 THEN t0.c23 WHEN t0.c61 THEN t0.c82 WHEN t0.c0 THEN t0.c23 ELSE t0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN t0.c82 THEN t0.c23 WHEN t0.c61 THEN t0.c82 WHEN t0.c0 THEN t0.c23 ELSE t0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c82 THEN t0.c23 WHEN t0.c61 THEN t0.c82 WHEN t0.c0 THEN t0.c23 ELSE t0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN t0.c82 THEN t0.c23 WHEN t0.c61 THEN t0.c82 WHEN t0.c0 THEN t0.c23 ELSE t0.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((((t0.c0)OR(t0.c82)))OR(t0.c82)) AS BLOB)) ORDER BY (((NULL))<((vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(t0.c82)))OR(t0.c82)) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NULL))<((vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((((t0.c0)OR(t0.c82)))OR(t0.c82)) AS BLOB)) ORDER BY (((NULL))<((vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(t0.c82)))OR(t0.c82)) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NULL))<((vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((((t0.c0)OR(t0.c82)))OR(t0.c82)) AS BLOB)) ORDER BY (((NULL))<((vt0.c0)));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((((t0.c23)OR(t0.c82)))AND(t0.c30)) THEN ((t0.c58)LIKE(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c23)OR(t0.c82)))AND(t0.c30)) THEN ((t0.c58)LIKE(vt0.c1)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((((t0.c23)OR(t0.c82)))AND(t0.c30)) THEN ((t0.c58)LIKE(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c23)OR(t0.c82)))AND(t0.c30)) THEN ((t0.c58)LIKE(vt0.c1)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((((t0.c23)OR(t0.c82)))AND(t0.c30)) THEN ((t0.c58)LIKE(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE CAST(t0.c0 AS TEXT)  WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) END) ORDER BY json_array(-1850678238, '1035764149'), CAST(((t0.c18) IS FALSE) AS BLOB)  NULLS LAST, CASE WHEN t0.c0 THEN t0.c18 COLLATE BINARY WHEN (vt0.c1 IN ()) THEN (~ (t0.c30)) WHEN CASE WHEN NULL THEN t0.c82 END THEN ((((t0.c82)OR(t0.c58)))AND(t0.c0)) ELSE ((t0.c23)OR('-1572257238')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c0 AS TEXT)  WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM vt0, t0 ORDER BY json_array(-1850678238, '1035764149'), CAST(((t0.c18) IS FALSE) AS BLOB)  NULLS LAST, CASE WHEN t0.c0 THEN t0.c18 COLLATE BINARY WHEN (vt0.c1 IN ()) THEN (~ (t0.c30)) WHEN CASE WHEN NULL THEN t0.c82 END THEN ((((t0.c82)OR(t0.c58)))AND(t0.c0)) ELSE ((t0.c23)OR('-1572257238')) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE CAST(t0.c0 AS TEXT)  WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) END) ORDER BY json_array(-1850678238, '1035764149'), CAST(((t0.c18) IS FALSE) AS BLOB)  NULLS LAST, CASE WHEN t0.c0 THEN t0.c18 COLLATE BINARY WHEN (vt0.c1 IN ()) THEN (~ (t0.c30)) WHEN CASE WHEN NULL THEN t0.c82 END THEN ((((t0.c82)OR(t0.c58)))AND(t0.c0)) ELSE ((t0.c23)OR('-1572257238')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c0 AS TEXT)  WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM vt0, t0 ORDER BY json_array(-1850678238, '1035764149'), CAST(((t0.c18) IS FALSE) AS BLOB)  NULLS LAST, CASE WHEN t0.c0 THEN t0.c18 COLLATE BINARY WHEN (vt0.c1 IN ()) THEN (~ (t0.c30)) WHEN CASE WHEN NULL THEN t0.c82 END THEN ((((t0.c82)OR(t0.c58)))AND(t0.c0)) ELSE ((t0.c23)OR('-1572257238')) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE CAST(t0.c0 AS TEXT)  WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) END) ORDER BY json_array(-1850678238, '1035764149'), CAST(((t0.c18) IS FALSE) AS BLOB)  NULLS LAST, CASE WHEN t0.c0 THEN t0.c18 COLLATE BINARY WHEN (vt0.c1 IN ()) THEN (~ (t0.c30)) WHEN CASE WHEN NULL THEN t0.c82 END THEN ((((t0.c82)OR(t0.c58)))AND(t0.c0)) ELSE ((t0.c23)OR('-1572257238')) END  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (t0.c23);
SELECT SUM(count) FROM (SELECT ALL ((t0.c23) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c23);
SELECT SUM(count) FROM (SELECT ALL ((t0.c23) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c23);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c58)AND((NOT (t0.c61)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c58)AND((NOT (t0.c61))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c58)AND((NOT (t0.c61)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c58)AND((NOT (t0.c61))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c58)AND((NOT (t0.c61)))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((t0.c82 COLLATE NOCASE)+(TRIM(t0.c23))) WHERE (NULLIF(CASE vt0.c1  WHEN t0.c0 THEN t0.c0 END, CAST(t0.c61 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE vt0.c1  WHEN t0.c0 THEN t0.c0 END, CAST(t0.c61 AS TEXT))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((t0.c82 COLLATE NOCASE)+(TRIM(t0.c23))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((t0.c82 COLLATE NOCASE)+(TRIM(t0.c23))) WHERE (NULLIF(CASE vt0.c1  WHEN t0.c0 THEN t0.c0 END, CAST(t0.c61 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE vt0.c1  WHEN t0.c0 THEN t0.c0 END, CAST(t0.c61 AS TEXT))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((t0.c82 COLLATE NOCASE)+(TRIM(t0.c23))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((t0.c82 COLLATE NOCASE)+(TRIM(t0.c23))) WHERE (NULLIF(CASE vt0.c1  WHEN t0.c0 THEN t0.c0 END, CAST(t0.c61 AS TEXT)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c18) IS TRUE)) ISNULL)) ORDER BY t0.c18;
SELECT SUM(count) FROM (SELECT ((((((t0.c18) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c18);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c18) IS TRUE)) ISNULL)) ORDER BY t0.c18;
SELECT SUM(count) FROM (SELECT ((((((t0.c18) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c18);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c18) IS TRUE)) ISNULL)) ORDER BY t0.c18;
SELECT ALL COUNT(*) FROM t0 WHERE (((0.20532677218441497)>>(((t0.c0)+(t0.c30))))) ORDER BY ((((t0.c58) NOT NULL))/(CASE WHEN t0.c58 THEN t0.c58 ELSE t0.c30 END));
SELECT SUM(count) FROM (SELECT ((((0.20532677218441497)>>(((t0.c0)+(t0.c30))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c58) NOT NULL))/(CASE WHEN t0.c58 THEN t0.c58 ELSE t0.c30 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((0.20532677218441497)>>(((t0.c0)+(t0.c30))))) ORDER BY ((((t0.c58) NOT NULL))/(CASE WHEN t0.c58 THEN t0.c58 ELSE t0.c30 END));
SELECT SUM(count) FROM (SELECT ((((0.20532677218441497)>>(((t0.c0)+(t0.c30))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c58) NOT NULL))/(CASE WHEN t0.c58 THEN t0.c58 ELSE t0.c30 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((0.20532677218441497)>>(((t0.c0)+(t0.c30))))) ORDER BY ((((t0.c58) NOT NULL))/(CASE WHEN t0.c58 THEN t0.c58 ELSE t0.c30 END));
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) ORDER BY ((CASE WHEN t0.c82 THEN t0.c82 END) BETWEEN (CASE WHEN t0.c23 THEN t0.c18 ELSE '-1106111974' END) AND (t0.c82 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN t0.c82 THEN t0.c82 END) BETWEEN (CASE WHEN t0.c23 THEN t0.c18 ELSE '-1106111974' END) AND (t0.c82 COLLATE BINARY)));
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) ORDER BY ((CASE WHEN t0.c82 THEN t0.c82 END) BETWEEN (CASE WHEN t0.c23 THEN t0.c18 ELSE '-1106111974' END) AND (t0.c82 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN t0.c82 THEN t0.c82 END) BETWEEN (CASE WHEN t0.c23 THEN t0.c18 ELSE '-1106111974' END) AND (t0.c82 COLLATE BINARY)));
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) ORDER BY ((CASE WHEN t0.c82 THEN t0.c82 END) BETWEEN (CASE WHEN t0.c23 THEN t0.c18 ELSE '-1106111974' END) AND (t0.c82 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE 0.5487324257018587  WHEN t0.c30 THEN t0.c23 END);
SELECT SUM(count) FROM (SELECT ((CASE 0.5487324257018587  WHEN t0.c30 THEN t0.c23 END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE 0.5487324257018587  WHEN t0.c30 THEN t0.c23 END);
SELECT SUM(count) FROM (SELECT ((CASE 0.5487324257018587  WHEN t0.c30 THEN t0.c23 END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE 0.5487324257018587  WHEN t0.c30 THEN t0.c23 END);
SELECT COUNT(*) FROM vt0 WHERE (((x'8cf9') NOT BETWEEN ((+ (vt0.c1))) AND (vt0.c1 COLLATE RTRIM))) ORDER BY ((NULL) BETWEEN (LOWER(DISTINCT vt0.c1)) AND ((vt0.c1 IN (vt0.c1, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'8cf9') NOT BETWEEN ((+ (vt0.c1))) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) BETWEEN (LOWER(DISTINCT vt0.c1)) AND ((vt0.c1 IN (vt0.c1, vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((x'8cf9') NOT BETWEEN ((+ (vt0.c1))) AND (vt0.c1 COLLATE RTRIM))) ORDER BY ((NULL) BETWEEN (LOWER(DISTINCT vt0.c1)) AND ((vt0.c1 IN (vt0.c1, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'8cf9') NOT BETWEEN ((+ (vt0.c1))) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) BETWEEN (LOWER(DISTINCT vt0.c1)) AND ((vt0.c1 IN (vt0.c1, vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((x'8cf9') NOT BETWEEN ((+ (vt0.c1))) AND (vt0.c1 COLLATE RTRIM))) ORDER BY ((NULL) BETWEEN (LOWER(DISTINCT vt0.c1)) AND ((vt0.c1 IN (vt0.c1, vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ((t0.c30) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ((t0.c30) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c30);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c1)))-((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(vt0.c1)))-((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c1)))-((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(vt0.c1)))-((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c1)))-((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(CASE WHEN t0.c30 THEN vt0.c1 ELSE t0.c18 END AS INTEGER)) ORDER BY ((vt0.c1 COLLATE NOCASE)==(t0.c18 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c30 THEN vt0.c1 ELSE t0.c18 END AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1 COLLATE NOCASE)=(t0.c18 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CASE WHEN t0.c30 THEN vt0.c1 ELSE t0.c18 END AS INTEGER)) ORDER BY ((vt0.c1 COLLATE NOCASE)==(t0.c18 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c30 THEN vt0.c1 ELSE t0.c18 END AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1 COLLATE NOCASE)=(t0.c18 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CASE WHEN t0.c30 THEN vt0.c1 ELSE t0.c18 END AS INTEGER)) ORDER BY ((vt0.c1 COLLATE NOCASE)==(t0.c18 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((UNLIKELY(vt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c1)) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((UNLIKELY(vt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c1)) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((UNLIKELY(vt0.c1)) NOTNULL));
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c58 IN (t0.c18, t0.c23, vt0.c0)) IN ((NOT (t0.c82)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c58 IN (t0.c18, t0.c23, vt0.c0)) IN ((NOT (t0.c82))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c58 IN (t0.c18, t0.c23, vt0.c0)) IN ((NOT (t0.c82)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c58 IN (t0.c18, t0.c23, vt0.c0)) IN ((NOT (t0.c82))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c58 IN (t0.c18, t0.c23, vt0.c0)) IN ((NOT (t0.c82)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM t0 CROSS JOIN vt0 ON ((t0.c23 COLLATE RTRIM)IS NOT(((t0.c82) NOT BETWEEN (x'659f') AND (t0.c0)))) WHERE ((+ (t0.c82 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c82 COLLATE BINARY))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((t0.c23 COLLATE RTRIM)IS NOT(((t0.c82) NOT BETWEEN (x'659f') AND (t0.c0)))));
SELECT * FROM t0 CROSS JOIN vt0 ON ((t0.c23 COLLATE RTRIM)IS NOT(((t0.c82) NOT BETWEEN (x'659f') AND (t0.c0)))) WHERE ((+ (t0.c82 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c82 COLLATE BINARY))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((t0.c23 COLLATE RTRIM)IS NOT(((t0.c82) NOT BETWEEN (x'659f') AND (t0.c0)))));
SELECT * FROM t0 CROSS JOIN vt0 ON ((t0.c23 COLLATE RTRIM)IS NOT(((t0.c82) NOT BETWEEN (x'659f') AND (t0.c0)))) WHERE ((+ (t0.c82 COLLATE BINARY)));
SELECT ALL * FROM t0, vt0 WHERE (HEX(DISTINCT ((('DV幭z?鼮2', t0.c23, t0.c0))<>((0xffffffffb456ae12, t0.c18, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((('DV幭z?鼮2', t0.c23, t0.c0))!=((0xffffffffb456ae12, t0.c18, vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (HEX(DISTINCT ((('DV幭z?鼮2', t0.c23, t0.c0))<>((0xffffffffb456ae12, t0.c18, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((('DV幭z?鼮2', t0.c23, t0.c0))!=((0xffffffffb456ae12, t0.c18, vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (HEX(DISTINCT ((('DV幭z?鼮2', t0.c23, t0.c0))<>((0xffffffffb456ae12, t0.c18, vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((+ (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c1 IN ()))))AND((- (vt0.c1)))))OR((NOT (vt0.c1))))) ORDER BY ((((vt0.c0) NOTNULL))&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST, CAST('Dc' AS REAL)  NULLS FIRST, ((((vt0.c1)||(8.33821752E8)))OR((((vt0.c1))<((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c1 IN ()))))AND((- (vt0.c1)))))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST, CAST('Dc' AS REAL)  NULLS FIRST, ((((vt0.c1)||(8.33821752E8)))OR((((vt0.c1))<((vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((+ (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c1 IN ()))))AND((- (vt0.c1)))))OR((NOT (vt0.c1))))) ORDER BY ((((vt0.c0) NOTNULL))&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST, CAST('Dc' AS REAL)  NULLS FIRST, ((((vt0.c1)||(8.33821752E8)))OR((((vt0.c1))<((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c1 IN ()))))AND((- (vt0.c1)))))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST, CAST('Dc' AS REAL)  NULLS FIRST, ((((vt0.c1)||(8.33821752E8)))OR((((vt0.c1))<((vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((+ (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c1 IN ()))))AND((- (vt0.c1)))))OR((NOT (vt0.c1))))) ORDER BY ((((vt0.c0) NOTNULL))&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST, CAST('Dc' AS REAL)  NULLS FIRST, ((((vt0.c1)||(8.33821752E8)))OR((((vt0.c1))<((vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELIHOOD((- (t0.c82)), 0.8489553177095506)) ORDER BY ((((t0.c61)&(t0.c58)))LIKE(((((t0.c30)OR(t0.c61)))AND('987439058')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (t0.c82)), 0.8489553177095506)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c61)&(t0.c58)))LIKE(((((t0.c30)OR(t0.c61)))AND('987439058')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELIHOOD((- (t0.c82)), 0.8489553177095506)) ORDER BY ((((t0.c61)&(t0.c58)))LIKE(((((t0.c30)OR(t0.c61)))AND('987439058')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (t0.c82)), 0.8489553177095506)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c61)&(t0.c58)))LIKE(((((t0.c30)OR(t0.c61)))AND('987439058')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELIHOOD((- (t0.c82)), 0.8489553177095506)) ORDER BY ((((t0.c61)&(t0.c58)))LIKE(((((t0.c30)OR(t0.c61)))AND('987439058')))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.4590630608659323 ELSE vt0.c1 END)OR('?')))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.4590630608659323 ELSE vt0.c1 END)OR('?')))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.4590630608659323 ELSE vt0.c1 END)OR('?')))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.4590630608659323 ELSE vt0.c1 END)OR('?')))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.4590630608659323 ELSE vt0.c1 END)OR('?')))AND(CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY (- (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY (- (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY (- (((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((CASE WHEN vt0.c1 THEN t0.c0 END IN ())) ORDER BY ((LIKELY(t0.c58)) BETWEEN (NULLIF(vt0.c0, t0.c58)) AND ((((t0.c30))>((t0.c58))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN t0.c0 END IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((LIKELY(t0.c58)) BETWEEN (NULLIF(vt0.c0, t0.c58)) AND ((((t0.c30))>((t0.c58))))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((CASE WHEN vt0.c1 THEN t0.c0 END IN ())) ORDER BY ((LIKELY(t0.c58)) BETWEEN (NULLIF(vt0.c0, t0.c58)) AND ((((t0.c30))>((t0.c58))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN t0.c0 END IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((LIKELY(t0.c58)) BETWEEN (NULLIF(vt0.c0, t0.c58)) AND ((((t0.c30))>((t0.c58))))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((CASE WHEN vt0.c1 THEN t0.c0 END IN ())) ORDER BY ((LIKELY(t0.c58)) BETWEEN (NULLIF(vt0.c0, t0.c58)) AND ((((t0.c30))>((t0.c58))))) ASC;
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT 0.33832323319820146)) ORDER BY ((((((vt0.c1))<((vt0.c0)))))>((x'' COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT 0.33832323319820146)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1))<((vt0.c0)))))>((x'' COLLATE RTRIM)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT 0.33832323319820146)) ORDER BY ((((((vt0.c1))<((vt0.c0)))))>((x'' COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT 0.33832323319820146)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1))<((vt0.c0)))))>((x'' COLLATE RTRIM)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT 0.33832323319820146)) ORDER BY ((((((vt0.c1))<((vt0.c0)))))>((x'' COLLATE RTRIM)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c61) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c61) IS TRUE) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c61) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c61) IS TRUE) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c61) IS TRUE) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((COALESCE(vt0.c0, vt0.c1))) AND ((((vt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((COALESCE(vt0.c0, vt0.c1))) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((COALESCE(vt0.c0, vt0.c1))) AND ((((vt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((COALESCE(vt0.c0, vt0.c1))) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((COALESCE(vt0.c0, vt0.c1))) AND ((((vt0.c0) ISNULL)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE t0.c18  WHEN '0.014477037030689366' THEN t0.c30 WHEN t0.c82 THEN t0.c18 WHEN t0.c82 THEN t0.c18 ELSE t0.c82 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t0.c18  WHEN '0.014477037030689366' THEN t0.c30 WHEN t0.c82 THEN t0.c18 WHEN t0.c82 THEN t0.c18 ELSE t0.c82 END IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE t0.c18  WHEN '0.014477037030689366' THEN t0.c30 WHEN t0.c82 THEN t0.c18 WHEN t0.c82 THEN t0.c18 ELSE t0.c82 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t0.c18  WHEN '0.014477037030689366' THEN t0.c30 WHEN t0.c82 THEN t0.c18 WHEN t0.c82 THEN t0.c18 ELSE t0.c82 END IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE t0.c18  WHEN '0.014477037030689366' THEN t0.c30 WHEN t0.c82 THEN t0.c18 WHEN t0.c82 THEN t0.c18 ELSE t0.c82 END IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (INSTR((((t0.c58))<=((vt0.c1))), CAST(t0.c23 AS REAL)));
SELECT SUM(count) FROM (SELECT ((INSTR((((t0.c58))<=((vt0.c1))), CAST(t0.c23 AS REAL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (INSTR((((t0.c58))<=((vt0.c1))), CAST(t0.c23 AS REAL)));
SELECT SUM(count) FROM (SELECT ((INSTR((((t0.c58))<=((vt0.c1))), CAST(t0.c23 AS REAL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (INSTR((((t0.c58))<=((vt0.c1))), CAST(t0.c23 AS REAL)));
SELECT * FROM t0 WHERE ((((t0.c61)) BETWEEN ((CAST(NULL AS TEXT))) AND ((((t0.c61)-(t0.c30))))));
SELECT SUM(count) FROM (SELECT (((((t0.c61)) BETWEEN ((CAST(NULL AS TEXT))) AND ((((t0.c61)-(t0.c30)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c61)) BETWEEN ((CAST(NULL AS TEXT))) AND ((((t0.c61)-(t0.c30))))));
SELECT SUM(count) FROM (SELECT (((((t0.c61)) BETWEEN ((CAST(NULL AS TEXT))) AND ((((t0.c61)-(t0.c30)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c61)) BETWEEN ((CAST(NULL AS TEXT))) AND ((((t0.c61)-(t0.c30))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY highlight(((1958581302)-(0.8659963539739036)), ((((vt0.c1)AND(t0.c30)))OR(t0.c58)), (((vt0.c1)) BETWEEN ((t0.c30)) AND ((vt0.c0))), ((t0.c0)IS(t0.c58))) ASC, (((t0.c0 IN ())) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, vt0 ORDER BY highlight(((1958581302)-(0.8659963539739036)), ((((vt0.c1)AND(t0.c30)))OR(t0.c58)), (((vt0.c1)) BETWEEN ((t0.c30)) AND ((vt0.c0))), ((t0.c0)IS(t0.c58))) ASC, (((t0.c0 IN ())) NOT NULL) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY highlight(((1958581302)-(0.8659963539739036)), ((((vt0.c1)AND(t0.c30)))OR(t0.c58)), (((vt0.c1)) BETWEEN ((t0.c30)) AND ((vt0.c0))), ((t0.c0)IS(t0.c58))) ASC, (((t0.c0 IN ())) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, vt0 ORDER BY highlight(((1958581302)-(0.8659963539739036)), ((((vt0.c1)AND(t0.c30)))OR(t0.c58)), (((vt0.c1)) BETWEEN ((t0.c30)) AND ((vt0.c0))), ((t0.c0)IS(t0.c58))) ASC, (((t0.c0 IN ())) NOT NULL) ASC);
SELECT ALL * FROM t0 WHERE (-2.80965888E8) ORDER BY CASE ((t0.c58)-(t0.c23))  WHEN ((t0.c58) IS FALSE) THEN ((((((((t0.c82)AND(t0.c82)))OR(t0.c18)))OR(t0.c0)))OR(t0.c18)) END;
SELECT SUM(count) FROM (SELECT ALL ((-2.80965888E8) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c58)-(t0.c23))  WHEN ((t0.c58) IS FALSE) THEN ((((((((t0.c82)AND(t0.c82)))OR(t0.c18)))OR(t0.c0)))OR(t0.c18)) END);
SELECT ALL * FROM t0 WHERE (-2.80965888E8) ORDER BY CASE ((t0.c58)-(t0.c23))  WHEN ((t0.c58) IS FALSE) THEN ((((((((t0.c82)AND(t0.c82)))OR(t0.c18)))OR(t0.c0)))OR(t0.c18)) END;
SELECT SUM(count) FROM (SELECT ALL ((-2.80965888E8) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c58)-(t0.c23))  WHEN ((t0.c58) IS FALSE) THEN ((((((((t0.c82)AND(t0.c82)))OR(t0.c18)))OR(t0.c0)))OR(t0.c18)) END);
SELECT ALL * FROM t0 WHERE (-2.80965888E8) ORDER BY CASE ((t0.c58)-(t0.c23))  WHEN ((t0.c58) IS FALSE) THEN ((((((((t0.c82)AND(t0.c82)))OR(t0.c18)))OR(t0.c0)))OR(t0.c18)) END;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c58, t0.c18, t0.c30)) BETWEEN ((CASE WHEN t0.c23 THEN NULL ELSE t0.c18 END, ((vt0.c1)>>(t0.c61)), ((x'b6c5') BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((t0.c23)>(t0.c30)), ((((((((t0.c61)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c18)), ((vt0.c1)IS(x'')))))) ORDER BY (((t0.c0)*(t0.c82)) IN (CASE t0.c61  WHEN t0.c0 THEN NULL ELSE vt0.c0 END))  NULLS FIRST, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c58, t0.c18, t0.c30)) BETWEEN ((CASE WHEN t0.c23 THEN NULL ELSE t0.c18 END, ((vt0.c1)>>(t0.c61)), ((x'b6c5') BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((t0.c23)>(t0.c30)), ((((((((t0.c61)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c18)), ((vt0.c1)IS(x'')))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)*(t0.c82)) IN (CASE t0.c61  WHEN t0.c0 THEN NULL ELSE vt0.c0 END))  NULLS FIRST, NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c58, t0.c18, t0.c30)) BETWEEN ((CASE WHEN t0.c23 THEN NULL ELSE t0.c18 END, ((vt0.c1)>>(t0.c61)), ((x'b6c5') BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((t0.c23)>(t0.c30)), ((((((((t0.c61)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c18)), ((vt0.c1)IS(x'')))))) ORDER BY (((t0.c0)*(t0.c82)) IN (CASE t0.c61  WHEN t0.c0 THEN NULL ELSE vt0.c0 END))  NULLS FIRST, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c58, t0.c18, t0.c30)) BETWEEN ((CASE WHEN t0.c23 THEN NULL ELSE t0.c18 END, ((vt0.c1)>>(t0.c61)), ((x'b6c5') BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((t0.c23)>(t0.c30)), ((((((((t0.c61)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c18)), ((vt0.c1)IS(x'')))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)*(t0.c82)) IN (CASE t0.c61  WHEN t0.c0 THEN NULL ELSE vt0.c0 END))  NULLS FIRST, NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c58, t0.c18, t0.c30)) BETWEEN ((CASE WHEN t0.c23 THEN NULL ELSE t0.c18 END, ((vt0.c1)>>(t0.c61)), ((x'b6c5') BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((t0.c23)>(t0.c30)), ((((((((t0.c61)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c18)), ((vt0.c1)IS(x'')))))) ORDER BY (((t0.c0)*(t0.c82)) IN (CASE t0.c61  WHEN t0.c0 THEN NULL ELSE vt0.c0 END))  NULLS FIRST, NULL DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c82)>=(t0.c18)))AND(LIKELIHOOD(DISTINCT t0.c18, 0.4008370769956422))))AND(((t0.c58) NOT BETWEEN (t0.c58) AND (t0.c30))))) ORDER BY 0xffffffff99aa6489 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c82)>=(t0.c18)))AND(LIKELIHOOD(DISTINCT t0.c18, 0.4008370769956422))))AND(((t0.c58) NOT BETWEEN (t0.c58) AND (t0.c30))))) IS TRUE)  as count FROM t0 ORDER BY 0xffffffff99aa6489 ASC);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c82)>=(t0.c18)))AND(LIKELIHOOD(DISTINCT t0.c18, 0.4008370769956422))))AND(((t0.c58) NOT BETWEEN (t0.c58) AND (t0.c30))))) ORDER BY 0xffffffff99aa6489 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c82)>=(t0.c18)))AND(LIKELIHOOD(DISTINCT t0.c18, 0.4008370769956422))))AND(((t0.c58) NOT BETWEEN (t0.c58) AND (t0.c30))))) IS TRUE)  as count FROM t0 ORDER BY 0xffffffff99aa6489 ASC);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c82)>=(t0.c18)))AND(LIKELIHOOD(DISTINCT t0.c18, 0.4008370769956422))))AND(((t0.c58) NOT BETWEEN (t0.c58) AND (t0.c30))))) ORDER BY 0xffffffff99aa6489 ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c82) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>=((((t0.c58) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c82) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>=((((t0.c58) ISNULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c82) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>=((((t0.c58) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c82) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>=((((t0.c58) ISNULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((t0.c82) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>=((((t0.c58) ISNULL)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ (((t0.c18) NOT BETWEEN (t0.c30) AND (t0.c82)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c18) NOT BETWEEN (t0.c30) AND (t0.c82))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ (((t0.c18) NOT BETWEEN (t0.c30) AND (t0.c82)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c18) NOT BETWEEN (t0.c30) AND (t0.c82))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ (((t0.c18) NOT BETWEEN (t0.c30) AND (t0.c82)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1)>(vt0.c1)) IN ())) ORDER BY ((((t0.c61)IS NOT(t0.c58))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)>(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c61)IS NOT(t0.c58))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1)>(vt0.c1)) IN ())) ORDER BY ((((t0.c61)IS NOT(t0.c58))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)>(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c61)IS NOT(t0.c58))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1)>(vt0.c1)) IN ())) ORDER BY ((((t0.c61)IS NOT(t0.c58))) IS TRUE);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY CAST(vt0.c1 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY CAST(vt0.c1 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY CAST(vt0.c1 AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 INDEXED BY i80, vt0 WHERE (x'') ORDER BY t0.c23 COLLATE BINARY, ((((t0.c61 IN (t0.c23)), CAST(t0.c0 AS TEXT), CAST(t0.c58 AS REAL)))<((((NULL) BETWEEN (vt0.c0) AND (t0.c58)), ((((vt0.c0)AND(t0.c23)))AND(t0.c23)), (- (t0.c23))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 INDEXED BY i80, vt0 ORDER BY t0.c23 COLLATE BINARY, ((((t0.c61 IN (t0.c23)), CAST(t0.c0 AS TEXT), CAST(t0.c58 AS REAL)))<((((NULL) BETWEEN (vt0.c0) AND (t0.c58)), ((((vt0.c0)AND(t0.c23)))AND(t0.c23)), (- (t0.c23))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i80, vt0 WHERE (x'') ORDER BY t0.c23 COLLATE BINARY, ((((t0.c61 IN (t0.c23)), CAST(t0.c0 AS TEXT), CAST(t0.c58 AS REAL)))<((((NULL) BETWEEN (vt0.c0) AND (t0.c58)), ((((vt0.c0)AND(t0.c23)))AND(t0.c23)), (- (t0.c23))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 INDEXED BY i80, vt0 ORDER BY t0.c23 COLLATE BINARY, ((((t0.c61 IN (t0.c23)), CAST(t0.c0 AS TEXT), CAST(t0.c58 AS REAL)))<((((NULL) BETWEEN (vt0.c0) AND (t0.c58)), ((((vt0.c0)AND(t0.c23)))AND(t0.c23)), (- (t0.c23))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i80, vt0 WHERE (x'') ORDER BY t0.c23 COLLATE BINARY, ((((t0.c61 IN (t0.c23)), CAST(t0.c0 AS TEXT), CAST(t0.c58 AS REAL)))<((((NULL) BETWEEN (vt0.c0) AND (t0.c58)), ((((vt0.c0)AND(t0.c23)))AND(t0.c23)), (- (t0.c23))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (TIME(((t0.c82)*(t0.c30)), ((t0.c18)%(t0.c23)), ((t0.c82)AND(NULL)), ((t0.c18)<(t0.c30)), (((t0.c82)) NOT BETWEEN ((t0.c61)) AND (('1638214516')))));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((t0.c82)*(t0.c30)), ((t0.c18)%(t0.c23)), ((t0.c82)AND(NULL)), ((t0.c18)<(t0.c30)), (((t0.c82)) NOT BETWEEN ((t0.c61)) AND (('1638214516'))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (TIME(((t0.c82)*(t0.c30)), ((t0.c18)%(t0.c23)), ((t0.c82)AND(NULL)), ((t0.c18)<(t0.c30)), (((t0.c82)) NOT BETWEEN ((t0.c61)) AND (('1638214516')))));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((t0.c82)*(t0.c30)), ((t0.c18)%(t0.c23)), ((t0.c82)AND(NULL)), ((t0.c18)<(t0.c30)), (((t0.c82)) NOT BETWEEN ((t0.c61)) AND (('1638214516'))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (TIME(((t0.c82)*(t0.c30)), ((t0.c18)%(t0.c23)), ((t0.c82)AND(NULL)), ((t0.c18)<(t0.c30)), (((t0.c82)) NOT BETWEEN ((t0.c61)) AND (('1638214516')))));
SELECT ALL * FROM vt0, t0 WHERE ((('754247130') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('754247130') IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((('754247130') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('754247130') IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((('754247130') IS TRUE));
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ (((t0.c30)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c30)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ (((t0.c30)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c30)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ (((t0.c30)IS NOT(t0.c0)))));
SELECT * FROM t0 WHERE (((((t0.c23) BETWEEN (t0.c58) AND (t0.c82))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c23) BETWEEN (t0.c58) AND (t0.c82))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c23) BETWEEN (t0.c58) AND (t0.c82))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c23) BETWEEN (t0.c58) AND (t0.c82))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c23) BETWEEN (t0.c58) AND (t0.c82))) NOTNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (+ (t0.c58 COLLATE BINARY)) WHERE (LOWER(DISTINCT t0.c18));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT t0.c18)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (+ (t0.c58 COLLATE BINARY)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (+ (t0.c58 COLLATE BINARY)) WHERE (LOWER(DISTINCT t0.c18));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT t0.c18)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (+ (t0.c58 COLLATE BINARY)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (+ (t0.c58 COLLATE BINARY)) WHERE (LOWER(DISTINCT t0.c18));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0.38492477390838253))<((TOTAL_CHANGES()))));
SELECT SUM(count) FROM (SELECT (((((0.38492477390838253))<((TOTAL_CHANGES())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0.38492477390838253))<((TOTAL_CHANGES()))));
SELECT SUM(count) FROM (SELECT (((((0.38492477390838253))<((TOTAL_CHANGES())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0.38492477390838253))<((TOTAL_CHANGES()))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)AND(vt0.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY x'2f23' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)AND(vt0.c1)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY x'2f23' COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)AND(vt0.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY x'2f23' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)AND(vt0.c1)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY x'2f23' COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)AND(vt0.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY x'2f23' COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((IFNULL(DISTINCT t0.c23, NULL)) NOT NULL)) ORDER BY ABS(t0.c58 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT t0.c23, NULL)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ABS(t0.c58 COLLATE NOCASE) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((IFNULL(DISTINCT t0.c23, NULL)) NOT NULL)) ORDER BY ABS(t0.c58 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT t0.c23, NULL)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ABS(t0.c58 COLLATE NOCASE) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((IFNULL(DISTINCT t0.c23, NULL)) NOT NULL)) ORDER BY ABS(t0.c58 COLLATE NOCASE) ASC;
SELECT ALL * FROM vt0 WHERE ((((0.922156343663237, vt0.c1, ((vt0.c0)<(vt0.c0))))<=((x'fd3c', vt0.c0, (((vt0.c0))<((NULL))))))) ORDER BY (((vt0.c1)!=(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0.922156343663237, vt0.c1, ((vt0.c0)<(vt0.c0))))<=((x'fd3c', vt0.c0, (((vt0.c0))<((NULL))))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)<>(vt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((0.922156343663237, vt0.c1, ((vt0.c0)<(vt0.c0))))<=((x'fd3c', vt0.c0, (((vt0.c0))<((NULL))))))) ORDER BY (((vt0.c1)!=(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0.922156343663237, vt0.c1, ((vt0.c0)<(vt0.c0))))<=((x'fd3c', vt0.c0, (((vt0.c0))<((NULL))))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)<>(vt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((0.922156343663237, vt0.c1, ((vt0.c0)<(vt0.c0))))<=((x'fd3c', vt0.c0, (((vt0.c0))<((NULL))))))) ORDER BY (((vt0.c1)!=(vt0.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c82)) NOT BETWEEN ((DATETIME(vt0.c0, t0.c23, t0.c18, t0.c82, t0.c18))) AND ((((t0.c30)GLOB('Zk>EN	躨')))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c82)) NOT BETWEEN ((DATETIME(vt0.c0, t0.c23, t0.c18, t0.c82, t0.c18))) AND ((((t0.c30)GLOB('Zk>EN	躨')))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c82)) NOT BETWEEN ((DATETIME(vt0.c0, t0.c23, t0.c18, t0.c82, t0.c18))) AND ((((t0.c30)GLOB('Zk>EN	躨')))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c82)) NOT BETWEEN ((DATETIME(vt0.c0, t0.c23, t0.c18, t0.c82, t0.c18))) AND ((((t0.c30)GLOB('Zk>EN	躨')))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c82)) NOT BETWEEN ((DATETIME(vt0.c0, t0.c23, t0.c18, t0.c82, t0.c18))) AND ((((t0.c30)GLOB('Zk>EN	躨')))))) ORDER BY vt0.c1 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)) AND ((((NULL)AND(vt0.c0)))))) ORDER BY (CAST(vt0.c0 AS REAL) IN ())  NULLS LAST, ((((vt0.c1)OR((+ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(x'a02e')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)) AND ((((NULL)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS REAL) IN ())  NULLS LAST, ((((vt0.c1)OR((+ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(x'a02e')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)) AND ((((NULL)AND(vt0.c0)))))) ORDER BY (CAST(vt0.c0 AS REAL) IN ())  NULLS LAST, ((((vt0.c1)OR((+ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(x'a02e')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)) AND ((((NULL)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS REAL) IN ())  NULLS LAST, ((((vt0.c1)OR((+ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(x'a02e')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)) AND ((((NULL)AND(vt0.c0)))))) ORDER BY (CAST(vt0.c0 AS REAL) IN ())  NULLS LAST, ((((vt0.c1)OR((+ (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(x'a02e')))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((NOT (NULL))) ORDER BY t0.c30 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM t0 ORDER BY t0.c30 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT (NULL))) ORDER BY t0.c30 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM t0 ORDER BY t0.c30 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT (NULL))) ORDER BY t0.c30 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((((((t0.c0 IN ()))OR(((t0.c61)%(t0.c30)))))AND(((t0.c82)||(t0.c58)))))AND((('1116680910') BETWEEN (t0.c18) AND (t0.c61)))))AND((0.4452706342300988 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c0 IN ()))OR(((t0.c61)%(t0.c30)))))AND(((t0.c82)||(t0.c58)))))AND((('1116680910') BETWEEN (t0.c18) AND (t0.c61)))))AND((0.4452706342300988 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((t0.c0 IN ()))OR(((t0.c61)%(t0.c30)))))AND(((t0.c82)||(t0.c58)))))AND((('1116680910') BETWEEN (t0.c18) AND (t0.c61)))))AND((0.4452706342300988 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c0 IN ()))OR(((t0.c61)%(t0.c30)))))AND(((t0.c82)||(t0.c58)))))AND((('1116680910') BETWEEN (t0.c18) AND (t0.c61)))))AND((0.4452706342300988 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((t0.c0 IN ()))OR(((t0.c61)%(t0.c30)))))AND(((t0.c82)||(t0.c58)))))AND((('1116680910') BETWEEN (t0.c18) AND (t0.c61)))))AND((0.4452706342300988 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (((((((((((((t0.c0)AND((NOT (t0.c18)))))OR(t0.c23 COLLATE BINARY)))OR((- (t0.c23)))))AND('')))OR(((t0.c58) BETWEEN (t0.c58) AND (t0.c0)))))AND(((((t0.c82)AND(t0.c58)))OR(t0.c18))))) ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)AND((NOT (t0.c18)))))OR(t0.c23 COLLATE BINARY)))OR((- (t0.c23)))))AND('')))OR(((t0.c58) BETWEEN (t0.c58) AND (t0.c0)))))AND(((((t0.c82)AND(t0.c58)))OR(t0.c18))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((t0.c0)AND((NOT (t0.c18)))))OR(t0.c23 COLLATE BINARY)))OR((- (t0.c23)))))AND('')))OR(((t0.c58) BETWEEN (t0.c58) AND (t0.c0)))))AND(((((t0.c82)AND(t0.c58)))OR(t0.c18))))) ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)AND((NOT (t0.c18)))))OR(t0.c23 COLLATE BINARY)))OR((- (t0.c23)))))AND('')))OR(((t0.c58) BETWEEN (t0.c58) AND (t0.c0)))))AND(((((t0.c82)AND(t0.c58)))OR(t0.c18))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((t0.c0)AND((NOT (t0.c18)))))OR(t0.c23 COLLATE BINARY)))OR((- (t0.c23)))))AND('')))OR(((t0.c58) BETWEEN (t0.c58) AND (t0.c0)))))AND(((((t0.c82)AND(t0.c58)))OR(t0.c18))))) ORDER BY t0.c0  NULLS FIRST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((CAST(t0.c61 AS REAL))OR((~ (t0.c82)))))AND(((((((((t0.c30)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c18)))) WHERE ((((((t0.c23)) NOT BETWEEN ((t0.c30)) AND ((t0.c58))))<<(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c23)) NOT BETWEEN ((t0.c30)) AND ((t0.c58))))<<(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((CAST(t0.c61 AS REAL))OR((~ (t0.c82)))))AND(((((((((t0.c30)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c18)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((CAST(t0.c61 AS REAL))OR((~ (t0.c82)))))AND(((((((((t0.c30)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c18)))) WHERE ((((((t0.c23)) NOT BETWEEN ((t0.c30)) AND ((t0.c58))))<<(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c23)) NOT BETWEEN ((t0.c30)) AND ((t0.c58))))<<(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((CAST(t0.c61 AS REAL))OR((~ (t0.c82)))))AND(((((((((t0.c30)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c18)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((CAST(t0.c61 AS REAL))OR((~ (t0.c82)))))AND(((((((((t0.c30)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c18)))) WHERE ((((((t0.c23)) NOT BETWEEN ((t0.c30)) AND ((t0.c58))))<<(CAST(vt0.c1 AS INTEGER))));
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c18 IN ())) BETWEEN (t0.c82) AND ((vt0.c1 IN ())))) ORDER BY COALESCE((+ (t0.c18)), ((((((((t0.c58)AND(t0.c82)))OR(t0.c58)))AND(t0.c18)))OR(vt0.c1))), LOWER(DISTINCT CASE t0.c30  WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST, t0.c30  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c18 IN ())) BETWEEN (t0.c82) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY COALESCE((+ (t0.c18)), ((((((((t0.c58)AND(t0.c82)))OR(t0.c58)))AND(t0.c18)))OR(vt0.c1))), LOWER(DISTINCT CASE t0.c30  WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST, t0.c30  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c18 IN ())) BETWEEN (t0.c82) AND ((vt0.c1 IN ())))) ORDER BY COALESCE((+ (t0.c18)), ((((((((t0.c58)AND(t0.c82)))OR(t0.c58)))AND(t0.c18)))OR(vt0.c1))), LOWER(DISTINCT CASE t0.c30  WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST, t0.c30  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c18 IN ())) BETWEEN (t0.c82) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY COALESCE((+ (t0.c18)), ((((((((t0.c58)AND(t0.c82)))OR(t0.c58)))AND(t0.c18)))OR(vt0.c1))), LOWER(DISTINCT CASE t0.c30  WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST, t0.c30  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c18 IN ())) BETWEEN (t0.c82) AND ((vt0.c1 IN ())))) ORDER BY COALESCE((+ (t0.c18)), ((((((((t0.c58)AND(t0.c82)))OR(t0.c58)))AND(t0.c18)))OR(vt0.c1))), LOWER(DISTINCT CASE t0.c30  WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST, t0.c30  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON t0.c30 WHERE ((((NULLIF(vt0.c0, t0.c30)))<((CAST(t0.c23 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULLIF(vt0.c0, t0.c30)))<((CAST(t0.c23 AS INTEGER))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON t0.c30);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON t0.c30 WHERE ((((NULLIF(vt0.c0, t0.c30)))<((CAST(t0.c23 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULLIF(vt0.c0, t0.c30)))<((CAST(t0.c23 AS INTEGER))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON t0.c30);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON t0.c30 WHERE ((((NULLIF(vt0.c0, t0.c30)))<((CAST(t0.c23 AS INTEGER)))));
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS BLOB))<>((t0.c23 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB))<>((t0.c23 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS BLOB))<>((t0.c23 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB))<>((t0.c23 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(t0.c0 AS BLOB))<>((t0.c23 IN ()))));
SELECT * FROM vt0, t0 WHERE (((((t0.c58) NOT BETWEEN (vt0.c1) AND (t0.c18)))||(CAST(t0.c82 AS TEXT)))) ORDER BY ((CAST(t0.c18 AS BLOB)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c58) NOT BETWEEN (vt0.c1) AND (t0.c18)))||(CAST(t0.c82 AS TEXT)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c18 AS BLOB)) NOT NULL) ASC);
SELECT * FROM vt0, t0 WHERE (((((t0.c58) NOT BETWEEN (vt0.c1) AND (t0.c18)))||(CAST(t0.c82 AS TEXT)))) ORDER BY ((CAST(t0.c18 AS BLOB)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c58) NOT BETWEEN (vt0.c1) AND (t0.c18)))||(CAST(t0.c82 AS TEXT)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c18 AS BLOB)) NOT NULL) ASC);
SELECT * FROM vt0, t0 WHERE (((((t0.c58) NOT BETWEEN (vt0.c1) AND (t0.c18)))||(CAST(t0.c82 AS TEXT)))) ORDER BY ((CAST(t0.c18 AS BLOB)) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((t0.c0)OR(vt0.c0)))AND(t0.c82)))OR(CASE WHEN t0.c58 THEN t0.c18 END)) WHERE ('b~r!/j+龷') ORDER BY (+ ('g.')) ASC, (((~ (vt0.c1)))IS NOT((((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c18)))))  NULLS LAST, (LIKELY(t0.c30) IN ());
SELECT SUM(count) FROM (SELECT (('b~r!/j+龷') IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((t0.c0)OR(vt0.c0)))AND(t0.c82)))OR(CASE WHEN t0.c58 THEN t0.c18 END)) ORDER BY (+ ('g.')) ASC, (((~ (vt0.c1)))IS NOT((((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c18)))))  NULLS LAST, (LIKELY(t0.c30) IN ()));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((t0.c0)OR(vt0.c0)))AND(t0.c82)))OR(CASE WHEN t0.c58 THEN t0.c18 END)) WHERE ('b~r!/j+龷') ORDER BY (+ ('g.')) ASC, (((~ (vt0.c1)))IS NOT((((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c18)))))  NULLS LAST, (LIKELY(t0.c30) IN ());
SELECT SUM(count) FROM (SELECT (('b~r!/j+龷') IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((t0.c0)OR(vt0.c0)))AND(t0.c82)))OR(CASE WHEN t0.c58 THEN t0.c18 END)) ORDER BY (+ ('g.')) ASC, (((~ (vt0.c1)))IS NOT((((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c18)))))  NULLS LAST, (LIKELY(t0.c30) IN ()));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((t0.c0)OR(vt0.c0)))AND(t0.c82)))OR(CASE WHEN t0.c58 THEN t0.c18 END)) WHERE ('b~r!/j+龷') ORDER BY (+ ('g.')) ASC, (((~ (vt0.c1)))IS NOT((((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c18)))))  NULLS LAST, (LIKELY(t0.c30) IN ());
SELECT ALL * FROM t0 WHERE (((((((0.9240255309673664)OR(t0.c30)))OR(t0.c61))) BETWEEN (x'b1ad') AND (((t0.c0)%(0Xffffffffe7c0c752)))));
SELECT SUM(count) FROM (SELECT ((((((((0.9240255309673664)OR(t0.c30)))OR(t0.c61))) BETWEEN (x'b1ad') AND (((t0.c0)%(0xffffffffe7c0c752))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((0.9240255309673664)OR(t0.c30)))OR(t0.c61))) BETWEEN (x'b1ad') AND (((t0.c0)%(0Xffffffffe7c0c752)))));
SELECT SUM(count) FROM (SELECT ((((((((0.9240255309673664)OR(t0.c30)))OR(t0.c61))) BETWEEN (x'b1ad') AND (((t0.c0)%(0xffffffffe7c0c752))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((0.9240255309673664)OR(t0.c30)))OR(t0.c61))) BETWEEN (x'b1ad') AND (((t0.c0)%(0Xffffffffe7c0c752)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON x'88e7' WHERE ((+ (CASE WHEN t0.c82 THEN t0.c61 WHEN vt0.c1 THEN x'' WHEN t0.c30 THEN t0.c58 WHEN vt0.c0 THEN t0.c82 WHEN NULL THEN t0.c82 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN t0.c82 THEN t0.c61 WHEN vt0.c1 THEN x'' WHEN t0.c30 THEN t0.c58 WHEN vt0.c0 THEN t0.c82 WHEN NULL THEN t0.c82 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON x'88e7');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON x'88e7' WHERE ((+ (CASE WHEN t0.c82 THEN t0.c61 WHEN vt0.c1 THEN x'' WHEN t0.c30 THEN t0.c58 WHEN vt0.c0 THEN t0.c82 WHEN NULL THEN t0.c82 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN t0.c82 THEN t0.c61 WHEN vt0.c1 THEN x'' WHEN t0.c30 THEN t0.c58 WHEN vt0.c0 THEN t0.c82 WHEN NULL THEN t0.c82 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON x'88e7');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON x'88e7' WHERE ((+ (CASE WHEN t0.c82 THEN t0.c61 WHEN vt0.c1 THEN x'' WHEN t0.c30 THEN t0.c58 WHEN vt0.c0 THEN t0.c82 WHEN NULL THEN t0.c82 ELSE vt0.c0 END)));
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))LIKE(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS NUMERIC))LIKE(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))LIKE(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS NUMERIC))LIKE(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))LIKE(((t0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))) AND ('-877395409'))) ORDER BY CAST(CASE WHEN NULL THEN vt0.c0 END AS REAL)  NULLS LAST, 1e500 ASC;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))) AND ('-877395409'))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN NULL THEN vt0.c0 END AS REAL)  NULLS LAST, 1e500 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))) AND ('-877395409'))) ORDER BY CAST(CASE WHEN NULL THEN vt0.c0 END AS REAL)  NULLS LAST, 1e500 ASC;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))) AND ('-877395409'))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN NULL THEN vt0.c0 END AS REAL)  NULLS LAST, 1e500 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c1, vt0.c1, vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))) AND ('-877395409'))) ORDER BY CAST(CASE WHEN NULL THEN vt0.c0 END AS REAL)  NULLS LAST, 1e500 ASC;
SELECT ALL * FROM t0 WHERE ((((((t0.c23)) BETWEEN ((t0.c82)) AND ((t0.c0))))GLOB(0Xffffffffb6d7e73c))) ORDER BY COALESCE(((t0.c61)&(t0.c18)), 0.2763682072412518) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c23)) BETWEEN ((t0.c82)) AND ((t0.c0))))GLOB(0xffffffffb6d7e73c))) IS TRUE)  as count FROM t0 ORDER BY COALESCE(((t0.c61)&(t0.c18)), 0.2763682072412518) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c23)) BETWEEN ((t0.c82)) AND ((t0.c0))))GLOB(0Xffffffffb6d7e73c))) ORDER BY COALESCE(((t0.c61)&(t0.c18)), 0.2763682072412518) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c23)) BETWEEN ((t0.c82)) AND ((t0.c0))))GLOB(0xffffffffb6d7e73c))) IS TRUE)  as count FROM t0 ORDER BY COALESCE(((t0.c61)&(t0.c18)), 0.2763682072412518) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c23)) BETWEEN ((t0.c82)) AND ((t0.c0))))GLOB(0Xffffffffb6d7e73c))) ORDER BY COALESCE(((t0.c61)&(t0.c18)), 0.2763682072412518) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c18 IN ()))AND((- (t0.c23)))))AND((t0.c23 IN (t0.c30)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c18 IN ()))AND((- (t0.c23)))))AND((t0.c23 IN (t0.c30))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c18 IN ()))AND((- (t0.c23)))))AND((t0.c23 IN (t0.c30)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c18 IN ()))AND((- (t0.c23)))))AND((t0.c23 IN (t0.c30))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c18 IN ()))AND((- (t0.c23)))))AND((t0.c23 IN (t0.c30)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))))) ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))))) ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))))) ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c1)&(vt0.c1)))AND(json_insert(vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))))AND(GLOB(vt0.c0, vt0.c0))))AND((vt0.c1 IN ()))))AND(HEX(x''))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)&(vt0.c1)))AND(json_insert(vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))))AND(GLOB(vt0.c0, vt0.c0))))AND((vt0.c1 IN ()))))AND(HEX(x'')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c1)&(vt0.c1)))AND(json_insert(vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))))AND(GLOB(vt0.c0, vt0.c0))))AND((vt0.c1 IN ()))))AND(HEX(x''))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)&(vt0.c1)))AND(json_insert(vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))))AND(GLOB(vt0.c0, vt0.c0))))AND((vt0.c1 IN ()))))AND(HEX(x'')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c1)&(vt0.c1)))AND(json_insert(vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))))AND(GLOB(vt0.c0, vt0.c0))))AND((vt0.c1 IN ()))))AND(HEX(x''))));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c61, vt0.c1, t0.c58)) AND ((t0.c58, t0.c82, t0.c30))) THEN (vt0.c1 IN (t0.c82)) WHEN ((t0.c82)-(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c58)) WHEN ((t0.c23)GLOB(vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE t0.c82 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c61, vt0.c1, t0.c58)) AND ((t0.c58, t0.c82, t0.c30))) THEN (vt0.c1 IN (t0.c82)) WHEN ((t0.c82)-(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c58)) WHEN ((t0.c23)GLOB(vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE t0.c82 END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c61, vt0.c1, t0.c58)) AND ((t0.c58, t0.c82, t0.c30))) THEN (vt0.c1 IN (t0.c82)) WHEN ((t0.c82)-(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c58)) WHEN ((t0.c23)GLOB(vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE t0.c82 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c61, vt0.c1, t0.c58)) AND ((t0.c58, t0.c82, t0.c30))) THEN (vt0.c1 IN (t0.c82)) WHEN ((t0.c82)-(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c58)) WHEN ((t0.c23)GLOB(vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE t0.c82 END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c61, vt0.c1, t0.c58)) AND ((t0.c58, t0.c82, t0.c30))) THEN (vt0.c1 IN (t0.c82)) WHEN ((t0.c82)-(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c58)) WHEN ((t0.c23)GLOB(vt0.c1)) THEN ((vt0.c1) NOTNULL) ELSE t0.c82 END);
SELECT * FROM t0, vt0 WHERE (UNLIKELY(((((t0.c23)AND(vt0.c0)))AND(t0.c30))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((t0.c23)AND(vt0.c0)))AND(t0.c30)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (UNLIKELY(((((t0.c23)AND(vt0.c0)))AND(t0.c30))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((t0.c23)AND(vt0.c0)))AND(t0.c30)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (UNLIKELY(((((t0.c23)AND(vt0.c0)))AND(t0.c30))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c0, t0.c18, vt0.c1)) BETWEEN ((CAST(t0.c82 AS TEXT), ((t0.c0)>(t0.c58)), t0.c30 COLLATE RTRIM)) AND ((((t0.c0)IS(t0.c0)), ((vt0.c0)GLOB(t0.c82)), ((t0.c58)LIKE(t0.c30))))) WHERE ('836181445') ORDER BY CAST(0.589058850573042 AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('836181445') IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c0, t0.c18, vt0.c1)) BETWEEN ((CAST(t0.c82 AS TEXT), ((t0.c0)>(t0.c58)), t0.c30 COLLATE RTRIM)) AND ((((t0.c0)IS(t0.c0)), ((vt0.c0)GLOB(t0.c82)), ((t0.c58)LIKE(t0.c30))))) ORDER BY CAST(0.589058850573042 AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c0, t0.c18, vt0.c1)) BETWEEN ((CAST(t0.c82 AS TEXT), ((t0.c0)>(t0.c58)), t0.c30 COLLATE RTRIM)) AND ((((t0.c0)IS(t0.c0)), ((vt0.c0)GLOB(t0.c82)), ((t0.c58)LIKE(t0.c30))))) WHERE ('836181445') ORDER BY CAST(0.589058850573042 AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('836181445') IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c0, t0.c18, vt0.c1)) BETWEEN ((CAST(t0.c82 AS TEXT), ((t0.c0)>(t0.c58)), t0.c30 COLLATE RTRIM)) AND ((((t0.c0)IS(t0.c0)), ((vt0.c0)GLOB(t0.c82)), ((t0.c58)LIKE(t0.c30))))) ORDER BY CAST(0.589058850573042 AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c0, t0.c18, vt0.c1)) BETWEEN ((CAST(t0.c82 AS TEXT), ((t0.c0)>(t0.c58)), t0.c30 COLLATE RTRIM)) AND ((((t0.c0)IS(t0.c0)), ((vt0.c0)GLOB(t0.c82)), ((t0.c58)LIKE(t0.c30))))) WHERE ('836181445') ORDER BY CAST(0.589058850573042 AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c61)AND(t0.c61)))AND(t0.c61)) IN ())) ORDER BY (((t0.c0) BETWEEN (t0.c58) AND (t0.c58)) IN ());
SELECT SUM(count) FROM (SELECT (((((((t0.c61)AND(t0.c61)))AND(t0.c61)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0) BETWEEN (t0.c58) AND (t0.c58)) IN ()));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c61)AND(t0.c61)))AND(t0.c61)) IN ())) ORDER BY (((t0.c0) BETWEEN (t0.c58) AND (t0.c58)) IN ());
SELECT SUM(count) FROM (SELECT (((((((t0.c61)AND(t0.c61)))AND(t0.c61)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0) BETWEEN (t0.c58) AND (t0.c58)) IN ()));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c61)AND(t0.c61)))AND(t0.c61)) IN ())) ORDER BY (((t0.c0) BETWEEN (t0.c58) AND (t0.c58)) IN ());
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c58 THEN t0.c18 WHEN t0.c18 THEN t0.c61 WHEN t0.c61 THEN t0.c61 END THEN 0.3249062465375995 ELSE ((t0.c23)IS NOT(t0.c0)) END) ORDER BY (((((t0.c18)) NOT BETWEEN ((t0.c61)) AND ((t0.c61))))OR(CASE t0.c18  WHEN t0.c0 THEN -1006445334 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c58 THEN t0.c18 WHEN t0.c18 THEN t0.c61 WHEN t0.c61 THEN t0.c61 END THEN 0.3249062465375995 ELSE ((t0.c23)IS NOT(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c18)) NOT BETWEEN ((t0.c61)) AND ((t0.c61))))OR(CASE t0.c18  WHEN t0.c0 THEN -1006445334 END)) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c58 THEN t0.c18 WHEN t0.c18 THEN t0.c61 WHEN t0.c61 THEN t0.c61 END THEN 0.3249062465375995 ELSE ((t0.c23)IS NOT(t0.c0)) END) ORDER BY (((((t0.c18)) NOT BETWEEN ((t0.c61)) AND ((t0.c61))))OR(CASE t0.c18  WHEN t0.c0 THEN -1006445334 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c58 THEN t0.c18 WHEN t0.c18 THEN t0.c61 WHEN t0.c61 THEN t0.c61 END THEN 0.3249062465375995 ELSE ((t0.c23)IS NOT(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c18)) NOT BETWEEN ((t0.c61)) AND ((t0.c61))))OR(CASE t0.c18  WHEN t0.c0 THEN -1006445334 END)) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c58 THEN t0.c18 WHEN t0.c18 THEN t0.c61 WHEN t0.c61 THEN t0.c61 END THEN 0.3249062465375995 ELSE ((t0.c23)IS NOT(t0.c0)) END) ORDER BY (((((t0.c18)) NOT BETWEEN ((t0.c61)) AND ((t0.c61))))OR(CASE t0.c18  WHEN t0.c0 THEN -1006445334 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))GLOB(((vt0.c0)%(vt0.c1))))) ORDER BY CAST(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))GLOB(((vt0.c0)%(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))GLOB(((vt0.c0)%(vt0.c1))))) ORDER BY CAST(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))GLOB(((vt0.c0)%(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))GLOB(((vt0.c0)%(vt0.c1))))) ORDER BY CAST(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))AND(((vt0.c1)GLOB(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))AND(((vt0.c1)GLOB(NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))AND(((vt0.c1)GLOB(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))AND(((vt0.c1)GLOB(NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))AND(((vt0.c1)GLOB(NULL)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (NULL) ORDER BY ((t0.c82 COLLATE BINARY) NOT BETWEEN ((NOT (t0.c0))) AND ((vt0.c0 IN ())))  NULLS LAST, ((0.26266921534862275) NOT BETWEEN (((((((((((((t0.c30)OR(t0.c0)))AND(t0.c18)))AND(NULL)))AND(t0.c23)))OR(t0.c0)))AND(t0.c0))) AND (((t0.c23)>=(t0.c58))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((t0.c82 COLLATE BINARY) NOT BETWEEN ((NOT (t0.c0))) AND ((vt0.c0 IN ())))  NULLS LAST, ((0.26266921534862275) NOT BETWEEN (((((((((((((t0.c30)OR(t0.c0)))AND(t0.c18)))AND(NULL)))AND(t0.c23)))OR(t0.c0)))AND(t0.c0))) AND (((t0.c23)>=(t0.c58))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (NULL) ORDER BY ((t0.c82 COLLATE BINARY) NOT BETWEEN ((NOT (t0.c0))) AND ((vt0.c0 IN ())))  NULLS LAST, ((0.26266921534862275) NOT BETWEEN (((((((((((((t0.c30)OR(t0.c0)))AND(t0.c18)))AND(NULL)))AND(t0.c23)))OR(t0.c0)))AND(t0.c0))) AND (((t0.c23)>=(t0.c58))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((t0.c82 COLLATE BINARY) NOT BETWEEN ((NOT (t0.c0))) AND ((vt0.c0 IN ())))  NULLS LAST, ((0.26266921534862275) NOT BETWEEN (((((((((((((t0.c30)OR(t0.c0)))AND(t0.c18)))AND(NULL)))AND(t0.c23)))OR(t0.c0)))AND(t0.c0))) AND (((t0.c23)>=(t0.c58))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (NULL) ORDER BY ((t0.c82 COLLATE BINARY) NOT BETWEEN ((NOT (t0.c0))) AND ((vt0.c0 IN ())))  NULLS LAST, ((0.26266921534862275) NOT BETWEEN (((((((((((((t0.c30)OR(t0.c0)))AND(t0.c18)))AND(NULL)))AND(t0.c23)))OR(t0.c0)))AND(t0.c0))) AND (((t0.c23)>=(t0.c58))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) AND ((vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) AND ((vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) AND ((vt0.c1))));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((~ (t0.c61)));
SELECT SUM(count) FROM (SELECT (((~ (t0.c61))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((~ (t0.c61)));
SELECT SUM(count) FROM (SELECT (((~ (t0.c61))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((~ (t0.c61)));
SELECT ALL * FROM vt0 WHERE (((0Xffffffffc60acc5d) NOT BETWEEN (vt0.c0) AND ((((vt0.c1))<((-166515777))))));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffc60acc5d) NOT BETWEEN (vt0.c0) AND ((((vt0.c1))<((-166515777)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0Xffffffffc60acc5d) NOT BETWEEN (vt0.c0) AND ((((vt0.c1))<((-166515777))))));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffc60acc5d) NOT BETWEEN (vt0.c0) AND ((((vt0.c1))<((-166515777)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0Xffffffffc60acc5d) NOT BETWEEN (vt0.c0) AND ((((vt0.c1))<((-166515777))))));
SELECT * FROM t0, vt0 WHERE (((((((((((vt0.c0) NOTNULL))OR(JULIANDAY(t0.c61, t0.c61, t0.c58))))AND(t0.c23 COLLATE NOCASE)))OR((t0.c82 IN ()))))OR(UPPER(t0.c23)))) ORDER BY (((t0.c82)) NOT BETWEEN ((((((x'')OR(t0.c23)))AND(t0.c30)))) AND ((((t0.c23) IS FALSE))))  NULLS LAST, (((('631151326') NOTNULL))<=(CAST(t0.c58 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOTNULL))OR(JULIANDAY(t0.c61, t0.c61, t0.c58))))AND(t0.c23 COLLATE NOCASE)))OR((t0.c82 IN ()))))OR(UPPER(t0.c23)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c82)) NOT BETWEEN ((((((x'')OR(t0.c23)))AND(t0.c30)))) AND ((((t0.c23) IS FALSE))))  NULLS LAST, (((('631151326') NOTNULL))<=(CAST(t0.c58 AS BLOB)))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((((((((vt0.c0) NOTNULL))OR(JULIANDAY(t0.c61, t0.c61, t0.c58))))AND(t0.c23 COLLATE NOCASE)))OR((t0.c82 IN ()))))OR(UPPER(t0.c23)))) ORDER BY (((t0.c82)) NOT BETWEEN ((((((x'')OR(t0.c23)))AND(t0.c30)))) AND ((((t0.c23) IS FALSE))))  NULLS LAST, (((('631151326') NOTNULL))<=(CAST(t0.c58 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOTNULL))OR(JULIANDAY(t0.c61, t0.c61, t0.c58))))AND(t0.c23 COLLATE NOCASE)))OR((t0.c82 IN ()))))OR(UPPER(t0.c23)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c82)) NOT BETWEEN ((((((x'')OR(t0.c23)))AND(t0.c30)))) AND ((((t0.c23) IS FALSE))))  NULLS LAST, (((('631151326') NOTNULL))<=(CAST(t0.c58 AS BLOB)))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((((((((vt0.c0) NOTNULL))OR(JULIANDAY(t0.c61, t0.c61, t0.c58))))AND(t0.c23 COLLATE NOCASE)))OR((t0.c82 IN ()))))OR(UPPER(t0.c23)))) ORDER BY (((t0.c82)) NOT BETWEEN ((((((x'')OR(t0.c23)))AND(t0.c30)))) AND ((((t0.c23) IS FALSE))))  NULLS LAST, (((('631151326') NOTNULL))<=(CAST(t0.c58 AS BLOB)))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (x'96bc');
SELECT SUM(count) FROM (SELECT ALL ((x'96bc') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (x'96bc');
SELECT SUM(count) FROM (SELECT ALL ((x'96bc') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (x'96bc');
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON t0.c61 WHERE ((- (t0.c30 COLLATE BINARY))) ORDER BY ((((t0.c30)&(t0.c61)))IS NOT(((((t0.c18)OR(t0.c0)))AND(t0.c61)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c30 COLLATE BINARY))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c61 ORDER BY ((((t0.c30)&(t0.c61)))IS NOT(((((t0.c18)OR(t0.c0)))AND(t0.c61)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON t0.c61 WHERE ((- (t0.c30 COLLATE BINARY))) ORDER BY ((((t0.c30)&(t0.c61)))IS NOT(((((t0.c18)OR(t0.c0)))AND(t0.c61)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c30 COLLATE BINARY))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c61 ORDER BY ((((t0.c30)&(t0.c61)))IS NOT(((((t0.c18)OR(t0.c0)))AND(t0.c61)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON t0.c61 WHERE ((- (t0.c30 COLLATE BINARY))) ORDER BY ((((t0.c30)&(t0.c61)))IS NOT(((((t0.c18)OR(t0.c0)))AND(t0.c61)))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (NULL) ORDER BY (((+ (t0.c18))) NOT BETWEEN (t0.c58) AND (((t0.c82)IS(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c18))) NOT BETWEEN (t0.c58) AND (((t0.c82)IS(t0.c0)))) ASC);
SELECT * FROM t0 WHERE (NULL) ORDER BY (((+ (t0.c18))) NOT BETWEEN (t0.c58) AND (((t0.c82)IS(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c18))) NOT BETWEEN (t0.c58) AND (((t0.c82)IS(t0.c0)))) ASC);
SELECT * FROM t0 WHERE (NULL) ORDER BY (((+ (t0.c18))) NOT BETWEEN (t0.c58) AND (((t0.c82)IS(t0.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c82 AS INTEGER))=(((((((((((((t0.c61)OR(t0.c82)))AND(t0.c58)))OR(t0.c58)))AND(t0.c61)))AND(t0.c18)))OR(t0.c82))))) ORDER BY HEX(((1143648714) NOT BETWEEN (t0.c18) AND (t0.c82)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c82 AS INTEGER))==(((((((((((((t0.c61)OR(t0.c82)))AND(t0.c58)))OR(t0.c58)))AND(t0.c61)))AND(t0.c18)))OR(t0.c82))))) IS TRUE)  as count FROM t0 ORDER BY HEX(((1143648714) NOT BETWEEN (t0.c18) AND (t0.c82)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c82 AS INTEGER))=(((((((((((((t0.c61)OR(t0.c82)))AND(t0.c58)))OR(t0.c58)))AND(t0.c61)))AND(t0.c18)))OR(t0.c82))))) ORDER BY HEX(((1143648714) NOT BETWEEN (t0.c18) AND (t0.c82)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c82 AS INTEGER))==(((((((((((((t0.c61)OR(t0.c82)))AND(t0.c58)))OR(t0.c58)))AND(t0.c61)))AND(t0.c18)))OR(t0.c82))))) IS TRUE)  as count FROM t0 ORDER BY HEX(((1143648714) NOT BETWEEN (t0.c18) AND (t0.c82)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c82 AS INTEGER))=(((((((((((((t0.c61)OR(t0.c82)))AND(t0.c58)))OR(t0.c58)))AND(t0.c61)))AND(t0.c18)))OR(t0.c82))))) ORDER BY HEX(((1143648714) NOT BETWEEN (t0.c18) AND (t0.c82)))  NULLS LAST;
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((t0.c61) BETWEEN (t0.c18) AND (t0.c58)))) AND (((((t0.c30))>((t0.c18)))))) WHERE (CASE CAST(t0.c82 AS REAL)  WHEN ((((t0.c18)AND(t0.c18)))OR(t0.c18)) THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c82 AS REAL)  WHEN ((((t0.c18)AND(t0.c18)))OR(t0.c18)) THEN '' END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((t0.c61) BETWEEN (t0.c18) AND (t0.c58)))) AND (((((t0.c30))>((t0.c18)))))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((t0.c61) BETWEEN (t0.c18) AND (t0.c58)))) AND (((((t0.c30))>((t0.c18)))))) WHERE (CASE CAST(t0.c82 AS REAL)  WHEN ((((t0.c18)AND(t0.c18)))OR(t0.c18)) THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c82 AS REAL)  WHEN ((((t0.c18)AND(t0.c18)))OR(t0.c18)) THEN '' END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((t0.c61) BETWEEN (t0.c18) AND (t0.c58)))) AND (((((t0.c30))>((t0.c18)))))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((((t0.c61) BETWEEN (t0.c18) AND (t0.c58)))) AND (((((t0.c30))>((t0.c18)))))) WHERE (CASE CAST(t0.c82 AS REAL)  WHEN ((((t0.c18)AND(t0.c18)))OR(t0.c18)) THEN '' END);
SELECT * FROM vt0, t0 WHERE ((NOT (CASE x''  WHEN vt0.c0 THEN t0.c82 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE x''  WHEN vt0.c0 THEN t0.c82 END))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((NOT (CASE x''  WHEN vt0.c0 THEN t0.c82 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE x''  WHEN vt0.c0 THEN t0.c82 END))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((NOT (CASE x''  WHEN vt0.c0 THEN t0.c82 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (NOT (t0.c82)) THEN CAST(NULL AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (t0.c82)) THEN CAST(NULL AS TEXT) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (NOT (t0.c82)) THEN CAST(NULL AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (t0.c82)) THEN CAST(NULL AS TEXT) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (NOT (t0.c82)) THEN CAST(NULL AS TEXT) END);
SELECT * FROM t0 WHERE ((CAST(t0.c82 AS REAL) IN ())) ORDER BY ((((((t0.c0) NOT NULL))OR(((t0.c18) IS TRUE))))OR(CASE WHEN t0.c58 THEN t0.c82 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c82 AS REAL) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0) NOT NULL))OR(((t0.c18) IS TRUE))))OR(CASE WHEN t0.c58 THEN t0.c82 END)) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((CAST(t0.c82 AS REAL) IN ())) ORDER BY ((((((t0.c0) NOT NULL))OR(((t0.c18) IS TRUE))))OR(CASE WHEN t0.c58 THEN t0.c82 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c82 AS REAL) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0) NOT NULL))OR(((t0.c18) IS TRUE))))OR(CASE WHEN t0.c58 THEN t0.c82 END)) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((CAST(t0.c82 AS REAL) IN ())) ORDER BY ((((((t0.c0) NOT NULL))OR(((t0.c18) IS TRUE))))OR(CASE WHEN t0.c58 THEN t0.c82 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))GLOB(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c1)))GLOB(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))GLOB(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c1)))GLOB(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))GLOB(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c30)AND(0.08538439073903425)))OR(t0.c58)))/((vt0.c1 IN (t0.c61))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c23 THEN t0.c0 WHEN t0.c23 THEN t0.c18 WHEN t0.c61 THEN x'82d8' END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c30)AND(0.08538439073903425)))OR(t0.c58)))/((vt0.c1 IN (t0.c61))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c23 THEN t0.c0 WHEN t0.c23 THEN t0.c18 WHEN t0.c61 THEN x'82d8' END AS INTEGER));
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c30)AND(0.08538439073903425)))OR(t0.c58)))/((vt0.c1 IN (t0.c61))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c23 THEN t0.c0 WHEN t0.c23 THEN t0.c18 WHEN t0.c61 THEN x'82d8' END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c30)AND(0.08538439073903425)))OR(t0.c58)))/((vt0.c1 IN (t0.c61))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c23 THEN t0.c0 WHEN t0.c23 THEN t0.c18 WHEN t0.c61 THEN x'82d8' END AS INTEGER));
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c30)AND(0.08538439073903425)))OR(t0.c58)))/((vt0.c1 IN (t0.c61))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c23 THEN t0.c0 WHEN t0.c23 THEN t0.c18 WHEN t0.c61 THEN x'82d8' END AS INTEGER);
SELECT * FROM t0 WHERE (((CASE t0.c58  WHEN t0.c18 THEN t0.c30 ELSE t0.c18 END) NOT BETWEEN (((NULL) NOT NULL)) AND (t0.c82 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c58  WHEN t0.c18 THEN t0.c30 ELSE t0.c18 END) NOT BETWEEN (((NULL) NOT NULL)) AND (t0.c82 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE t0.c58  WHEN t0.c18 THEN t0.c30 ELSE t0.c18 END) NOT BETWEEN (((NULL) NOT NULL)) AND (t0.c82 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c58  WHEN t0.c18 THEN t0.c30 ELSE t0.c18 END) NOT BETWEEN (((NULL) NOT NULL)) AND (t0.c82 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE t0.c58  WHEN t0.c18 THEN t0.c30 ELSE t0.c18 END) NOT BETWEEN (((NULL) NOT NULL)) AND (t0.c82 COLLATE NOCASE)));
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1 COLLATE NOCASE) ISNULL));
SELECT * FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c82)%(t0.c18))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c82)%(t0.c18))) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c82)%(t0.c18))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c82)%(t0.c18))) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c82)%(t0.c18))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((vt0.c0) IS TRUE)) ISNULL)) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((vt0.c0) IS TRUE)) ISNULL)) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((vt0.c0) IS TRUE)) ISNULL)) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((t0.c30)AND(vt0.c1)))OR(t0.c23)))OR(vt0.c0)))OR(vt0.c0)))OR((((t0.c58, NULL, vt0.c1))<((t0.c58, t0.c61, t0.c18))))))AND(((t0.c82)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c30)AND(vt0.c1)))OR(t0.c23)))OR(vt0.c0)))OR(vt0.c0)))OR((((t0.c58, NULL, vt0.c1))<((t0.c58, t0.c61, t0.c18))))))AND(((t0.c82)>>(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((t0.c30)AND(vt0.c1)))OR(t0.c23)))OR(vt0.c0)))OR(vt0.c0)))OR((((t0.c58, NULL, vt0.c1))<((t0.c58, t0.c61, t0.c18))))))AND(((t0.c82)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c30)AND(vt0.c1)))OR(t0.c23)))OR(vt0.c0)))OR(vt0.c0)))OR((((t0.c58, NULL, vt0.c1))<((t0.c58, t0.c61, t0.c18))))))AND(((t0.c82)>>(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((t0.c30)AND(vt0.c1)))OR(t0.c23)))OR(vt0.c0)))OR(vt0.c0)))OR((((t0.c58, NULL, vt0.c1))<((t0.c58, t0.c61, t0.c18))))))AND(((t0.c82)>>(vt0.c1)))));
SELECT ALL * FROM t0 WHERE (t0.c61);
SELECT SUM(count) FROM (SELECT ((t0.c61) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c61);
SELECT SUM(count) FROM (SELECT ((t0.c61) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c61);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)=(0.9111435874131685)) AS TEXT)) ORDER BY ((((vt0.c0) NOT NULL))IS((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)==(0.9111435874131685)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))IS((vt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)=(0.9111435874131685)) AS TEXT)) ORDER BY ((((vt0.c0) NOT NULL))IS((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)==(0.9111435874131685)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))IS((vt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)=(0.9111435874131685)) AS TEXT)) ORDER BY ((((vt0.c0) NOT NULL))IS((vt0.c0 IN ()))) DESC;
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (ABS(DISTINCT ('w--ZW' IN ())));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ('w--ZW' IN ()))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (ABS(DISTINCT ('w--ZW' IN ())));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ('w--ZW' IN ()))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (ABS(DISTINCT ('w--ZW' IN ())));
SELECT COUNT(*) FROM vt0 WHERE ((((((~ (vt0.c1)))AND(((((((((vt0.c1)AND(vt0.c1)))OR(x'2b33')))OR(vt0.c1)))AND(vt0.c1)))))OR((- (vt0.c0))))) ORDER BY INSTR((+ (vt0.c0)), TYPEOF(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (vt0.c1)))AND(((((((((vt0.c1)AND(vt0.c1)))OR(x'2b33')))OR(vt0.c1)))AND(vt0.c1)))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY INSTR((+ (vt0.c0)), TYPEOF(vt0.c1)));
SELECT COUNT(*) FROM vt0 WHERE ((((((~ (vt0.c1)))AND(((((((((vt0.c1)AND(vt0.c1)))OR(x'2b33')))OR(vt0.c1)))AND(vt0.c1)))))OR((- (vt0.c0))))) ORDER BY INSTR((+ (vt0.c0)), TYPEOF(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (vt0.c1)))AND(((((((((vt0.c1)AND(vt0.c1)))OR(x'2b33')))OR(vt0.c1)))AND(vt0.c1)))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY INSTR((+ (vt0.c0)), TYPEOF(vt0.c1)));
SELECT COUNT(*) FROM vt0 WHERE ((((((~ (vt0.c1)))AND(((((((((vt0.c1)AND(vt0.c1)))OR(x'2b33')))OR(vt0.c1)))AND(vt0.c1)))))OR((- (vt0.c0))))) ORDER BY INSTR((+ (vt0.c0)), TYPEOF(vt0.c1));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN (- (t0.c23)) WHEN ((t0.c23)>=(vt0.c1)) THEN (((t0.c30))>((t0.c23))) WHEN ((t0.c61)<(t0.c18)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c0 AS BLOB) THEN (- (t0.c23)) WHEN ((t0.c23)>=(vt0.c1)) THEN (((t0.c30))>((t0.c23))) WHEN ((t0.c61)<(t0.c18)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN (- (t0.c23)) WHEN ((t0.c23)>=(vt0.c1)) THEN (((t0.c30))>((t0.c23))) WHEN ((t0.c61)<(t0.c18)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c0 AS BLOB) THEN (- (t0.c23)) WHEN ((t0.c23)>=(vt0.c1)) THEN (((t0.c30))>((t0.c23))) WHEN ((t0.c61)<(t0.c18)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN (- (t0.c23)) WHEN ((t0.c23)>=(vt0.c1)) THEN (((t0.c30))>((t0.c23))) WHEN ((t0.c61)<(t0.c18)) THEN (vt0.c0 IN ()) END);
SELECT * FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN (NOT (vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((((((((1463238797)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND('92478255')) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (((vt0.c1, vt0.c1, 0.32395347567171606))<=((0.34937435803414774, 'r4z', vt0.c1))) END) ORDER BY (((vt0.c1)) NOT BETWEEN ((0.2867122500139023)) AND ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN (NOT (vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((((((((1463238797)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND('92478255')) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (((vt0.c1, vt0.c1, 0.32395347567171606))<=((0.34937435803414774, 'r4z', vt0.c1))) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((0.2867122500139023)) AND ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN (NOT (vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((((((((1463238797)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND('92478255')) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (((vt0.c1, vt0.c1, 0.32395347567171606))<=((0.34937435803414774, 'r4z', vt0.c1))) END) ORDER BY (((vt0.c1)) NOT BETWEEN ((0.2867122500139023)) AND ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN (NOT (vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((((((((1463238797)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND('92478255')) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (((vt0.c1, vt0.c1, 0.32395347567171606))<=((0.34937435803414774, 'r4z', vt0.c1))) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((0.2867122500139023)) AND ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN (NOT (vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((((((((1463238797)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND('92478255')) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (((vt0.c1, vt0.c1, 0.32395347567171606))<=((0.34937435803414774, 'r4z', vt0.c1))) END) ORDER BY (((vt0.c1)) NOT BETWEEN ((0.2867122500139023)) AND ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ASC;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c61) ISNULL)))==((CAST(NULL AS TEXT)))) WHERE ((CASE t0.c23  WHEN t0.c61 THEN t0.c18 END IN ())) ORDER BY (((t0.c0) NOT NULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c23  WHEN t0.c61 THEN t0.c18 END IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c61) ISNULL)))==((CAST(NULL AS TEXT)))) ORDER BY (((t0.c0) NOT NULL) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c61) ISNULL)))==((CAST(NULL AS TEXT)))) WHERE ((CASE t0.c23  WHEN t0.c61 THEN t0.c18 END IN ())) ORDER BY (((t0.c0) NOT NULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c23  WHEN t0.c61 THEN t0.c18 END IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c61) ISNULL)))==((CAST(NULL AS TEXT)))) ORDER BY (((t0.c0) NOT NULL) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c61) ISNULL)))==((CAST(NULL AS TEXT)))) WHERE ((CASE t0.c23  WHEN t0.c61 THEN t0.c18 END IN ())) ORDER BY (((t0.c0) NOT NULL) IN ())  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(-3.07901408E8 AS NUMERIC) COLLATE RTRIM) ORDER BY ((t0.c0)IS(((t0.c61)>(t0.c58)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(-3.07901408E8 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)IS(((t0.c61)>(t0.c58)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(-3.07901408E8 AS NUMERIC) COLLATE RTRIM) ORDER BY ((t0.c0)IS(((t0.c61)>(t0.c58)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(-3.07901408E8 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)IS(((t0.c61)>(t0.c58)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(-3.07901408E8 AS NUMERIC) COLLATE RTRIM) ORDER BY ((t0.c0)IS(((t0.c61)>(t0.c58)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c82, t0.c61, t0.c58)) BETWEEN ((t0.c61, t0.c30, t0.c82)) AND ((t0.c58, t0.c61, t0.c82))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c82, t0.c61, t0.c58)) BETWEEN ((t0.c61, t0.c30, t0.c82)) AND ((t0.c58, t0.c61, t0.c82))) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c82, t0.c61, t0.c58)) BETWEEN ((t0.c61, t0.c30, t0.c82)) AND ((t0.c58, t0.c61, t0.c82))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c82, t0.c61, t0.c58)) BETWEEN ((t0.c61, t0.c30, t0.c82)) AND ((t0.c58, t0.c61, t0.c82))) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c82, t0.c61, t0.c58)) BETWEEN ((t0.c61, t0.c30, t0.c82)) AND ((t0.c58, t0.c61, t0.c82))) AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c61 THEN ((t0.c23) NOT NULL) ELSE t0.c23 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c61 THEN ((t0.c23) NOT NULL) ELSE t0.c23 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c61 THEN ((t0.c23) NOT NULL) ELSE t0.c23 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c61 THEN ((t0.c23) NOT NULL) ELSE t0.c23 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c61 THEN ((t0.c23) NOT NULL) ELSE t0.c23 END);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c0)>>(t0.c30)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0)>>(t0.c30))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c0)>>(t0.c30)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0)>>(t0.c30))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c0)>>(t0.c30)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>((vt0.c0))))<(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>((vt0.c0))))<(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>((vt0.c0))))<(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>((vt0.c0))))<(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>((vt0.c0))))<(vt0.c1 COLLATE BINARY)));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT t0.c82, 0.9378752204376432) THEN load_extension(t0.c30) ELSE (t0.c23 IN ()) END) ORDER BY ((((((((((t0.c0) IS FALSE))OR((((t0.c61, vt0.c1, t0.c30))<=(('z,e[1E', vt0.c1, t0.c58))))))OR(((t0.c61) IS TRUE))))AND((((('574742354')OR(t0.c0)))AND(t0.c30)))))AND(((t0.c30) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(DISTINCT t0.c82, 0.9378752204376432) THEN load_extension(t0.c30) ELSE (t0.c23 IN ()) END) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 ORDER BY ((((((((((t0.c0) IS FALSE))OR((((t0.c61, vt0.c1, t0.c30))<=(('z,e[1E', vt0.c1, t0.c58))))))OR(((t0.c61) IS TRUE))))AND((((('574742354')OR(t0.c0)))AND(t0.c30)))))AND(((t0.c30) IS FALSE))));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT t0.c82, 0.9378752204376432) THEN load_extension(t0.c30) ELSE (t0.c23 IN ()) END) ORDER BY ((((((((((t0.c0) IS FALSE))OR((((t0.c61, vt0.c1, t0.c30))<=(('z,e[1E', vt0.c1, t0.c58))))))OR(((t0.c61) IS TRUE))))AND((((('574742354')OR(t0.c0)))AND(t0.c30)))))AND(((t0.c30) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(DISTINCT t0.c82, 0.9378752204376432) THEN load_extension(t0.c30) ELSE (t0.c23 IN ()) END) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 ORDER BY ((((((((((t0.c0) IS FALSE))OR((((t0.c61, vt0.c1, t0.c30))<=(('z,e[1E', vt0.c1, t0.c58))))))OR(((t0.c61) IS TRUE))))AND((((('574742354')OR(t0.c0)))AND(t0.c30)))))AND(((t0.c30) IS FALSE))));
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT t0.c82, 0.9378752204376432) THEN load_extension(t0.c30) ELSE (t0.c23 IN ()) END) ORDER BY ((((((((((t0.c0) IS FALSE))OR((((t0.c61, vt0.c1, t0.c30))<=(('z,e[1E', vt0.c1, t0.c58))))))OR(((t0.c61) IS TRUE))))AND((((('574742354')OR(t0.c0)))AND(t0.c30)))))AND(((t0.c30) IS FALSE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME('', NULL, CAST(vt0.c1 AS NUMERIC))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((~ (vt0.c0))) AND ((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1)))))  NULLS FIRST, CASE vt0.c0  WHEN NULL THEN vt0.c1 END COLLATE BINARY ASC, ((((LIKE(vt0.c1, vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TIME('', NULL, CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((~ (vt0.c0))) AND ((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1)))))  NULLS FIRST, CASE vt0.c0  WHEN NULL THEN vt0.c1 END COLLATE BINARY ASC, ((((LIKE(vt0.c1, vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME('', NULL, CAST(vt0.c1 AS NUMERIC))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((~ (vt0.c0))) AND ((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1)))))  NULLS FIRST, CASE vt0.c0  WHEN NULL THEN vt0.c1 END COLLATE BINARY ASC, ((((LIKE(vt0.c1, vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TIME('', NULL, CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((~ (vt0.c0))) AND ((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1)))))  NULLS FIRST, CASE vt0.c0  WHEN NULL THEN vt0.c1 END COLLATE BINARY ASC, ((((LIKE(vt0.c1, vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME('', NULL, CAST(vt0.c1 AS NUMERIC))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((~ (vt0.c0))) AND ((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1)))))  NULLS FIRST, CASE vt0.c0  WHEN NULL THEN vt0.c1 END COLLATE BINARY ASC, ((((LIKE(vt0.c1, vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((vt0.c0)>=(vt0.c1)) AS REAL) ASC  NULLS LAST, (('Ge1*') NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END) AND (x'8cc0')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>=(vt0.c1)) AS REAL) ASC  NULLS LAST, (('Ge1*') NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END) AND (x'8cc0')) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((vt0.c0)>=(vt0.c1)) AS REAL) ASC  NULLS LAST, (('Ge1*') NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END) AND (x'8cc0')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>=(vt0.c1)) AS REAL) ASC  NULLS LAST, (('Ge1*') NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END) AND (x'8cc0')) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((vt0.c0)>=(vt0.c1)) AS REAL) ASC  NULLS LAST, (('Ge1*') NOT BETWEEN (CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END) AND (x'8cc0')) DESC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY CAST(GLOB(t0.c0, t0.c23) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(GLOB(t0.c0, t0.c23) AS NUMERIC)  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY CAST(GLOB(t0.c0, t0.c23) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(GLOB(t0.c0, t0.c23) AS NUMERIC)  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY CAST(GLOB(t0.c0, t0.c23) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CASE t0.c61  WHEN t0.c82 THEN t0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c61  WHEN t0.c82 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c61  WHEN t0.c82 THEN t0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c61  WHEN t0.c82 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c61  WHEN t0.c82 THEN t0.c0 END) NOT NULL));
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE (((CASE t0.c82  WHEN vt0.c0 THEN t0.c82 END) ISNULL)) ORDER BY ((((vt0.c0)*(t0.c82))) NOT BETWEEN (((t0.c58) BETWEEN (t0.c0) AND (t0.c61))) AND (t0.c82 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c82  WHEN vt0.c0 THEN t0.c82 END) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)*(t0.c82))) NOT BETWEEN (((t0.c58) BETWEEN (t0.c0) AND (t0.c61))) AND (t0.c82 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE (((CASE t0.c82  WHEN vt0.c0 THEN t0.c82 END) ISNULL)) ORDER BY ((((vt0.c0)*(t0.c82))) NOT BETWEEN (((t0.c58) BETWEEN (t0.c0) AND (t0.c61))) AND (t0.c82 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c82  WHEN vt0.c0 THEN t0.c82 END) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)*(t0.c82))) NOT BETWEEN (((t0.c58) BETWEEN (t0.c0) AND (t0.c61))) AND (t0.c82 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE (((CASE t0.c82  WHEN vt0.c0 THEN t0.c82 END) ISNULL)) ORDER BY ((((vt0.c0)*(t0.c82))) NOT BETWEEN (((t0.c58) BETWEEN (t0.c0) AND (t0.c61))) AND (t0.c82 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (vt0.c1 IN ()) COLLATE RTRIM WHERE (CAST(COALESCE(vt0.c1, t0.c58) AS REAL)) ORDER BY vt0.c0, ((((vt0.c1)>>(t0.c30)))%(((((t0.c0)OR(vt0.c0)))AND(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(vt0.c1, t0.c58) AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (vt0.c1 IN ()) COLLATE RTRIM ORDER BY vt0.c0, ((((vt0.c1)>>(t0.c30)))%(((((t0.c0)OR(vt0.c0)))AND(NULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (vt0.c1 IN ()) COLLATE RTRIM WHERE (CAST(COALESCE(vt0.c1, t0.c58) AS REAL)) ORDER BY vt0.c0, ((((vt0.c1)>>(t0.c30)))%(((((t0.c0)OR(vt0.c0)))AND(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(vt0.c1, t0.c58) AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (vt0.c1 IN ()) COLLATE RTRIM ORDER BY vt0.c0, ((((vt0.c1)>>(t0.c30)))%(((((t0.c0)OR(vt0.c0)))AND(NULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (vt0.c1 IN ()) COLLATE RTRIM WHERE (CAST(COALESCE(vt0.c1, t0.c58) AS REAL)) ORDER BY vt0.c0, ((((vt0.c1)>>(t0.c30)))%(((((t0.c0)OR(vt0.c0)))AND(NULL)))) ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (((((t0.c61) NOTNULL)) NOT BETWEEN ((t0.c82 IN ())) AND (t0.c82)));
SELECT SUM(count) FROM (SELECT ((((((t0.c61) NOTNULL)) NOT BETWEEN ((t0.c82 IN ())) AND (t0.c82))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c61) NOTNULL)) NOT BETWEEN ((t0.c82 IN ())) AND (t0.c82)));
SELECT SUM(count) FROM (SELECT ((((((t0.c61) NOTNULL)) NOT BETWEEN ((t0.c82 IN ())) AND (t0.c82))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c61) NOTNULL)) NOT BETWEEN ((t0.c82 IN ())) AND (t0.c82)));
SELECT COUNT(*) FROM t0 WHERE ((NULL IN ())) ORDER BY ((((t0.c23)/(t0.c30)))>>(CASE t0.c58  WHEN t0.c58 THEN t0.c82 WHEN t0.c23 THEN t0.c30 WHEN t0.c23 THEN t0.c61 ELSE t0.c23 END));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c23)/(t0.c30)))>>(CASE t0.c58  WHEN t0.c58 THEN t0.c82 WHEN t0.c23 THEN t0.c30 WHEN t0.c23 THEN t0.c61 ELSE t0.c23 END)));
SELECT COUNT(*) FROM t0 WHERE ((NULL IN ())) ORDER BY ((((t0.c23)/(t0.c30)))>>(CASE t0.c58  WHEN t0.c58 THEN t0.c82 WHEN t0.c23 THEN t0.c30 WHEN t0.c23 THEN t0.c61 ELSE t0.c23 END));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c23)/(t0.c30)))>>(CASE t0.c58  WHEN t0.c58 THEN t0.c82 WHEN t0.c23 THEN t0.c30 WHEN t0.c23 THEN t0.c61 ELSE t0.c23 END)));
SELECT COUNT(*) FROM t0 WHERE ((NULL IN ())) ORDER BY ((((t0.c23)/(t0.c30)))>>(CASE t0.c58  WHEN t0.c58 THEN t0.c82 WHEN t0.c23 THEN t0.c30 WHEN t0.c23 THEN t0.c61 ELSE t0.c23 END));
SELECT * FROM t0 WHERE ((((((((t0.c18)) NOT BETWEEN ((t0.c82)) AND ((t0.c61))))AND(((NULL) NOT NULL))))OR(t0.c82))) ORDER BY CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c23 THEN t0.c30 WHEN t0.c82 THEN t0.c30 ELSE t0.c82 END COLLATE NOCASE ASC  NULLS FIRST, (t0.c58 COLLATE BINARY IN ())  NULLS LAST, (+ (t0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((((((t0.c18)) NOT BETWEEN ((t0.c82)) AND ((t0.c61))))AND(((NULL) NOT NULL))))OR(t0.c82))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c23 THEN t0.c30 WHEN t0.c82 THEN t0.c30 ELSE t0.c82 END COLLATE NOCASE ASC  NULLS FIRST, (t0.c58 COLLATE BINARY IN ())  NULLS LAST, (+ (t0.c0)) COLLATE NOCASE ASC);
SELECT * FROM t0 WHERE ((((((((t0.c18)) NOT BETWEEN ((t0.c82)) AND ((t0.c61))))AND(((NULL) NOT NULL))))OR(t0.c82))) ORDER BY CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c23 THEN t0.c30 WHEN t0.c82 THEN t0.c30 ELSE t0.c82 END COLLATE NOCASE ASC  NULLS FIRST, (t0.c58 COLLATE BINARY IN ())  NULLS LAST, (+ (t0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((((((t0.c18)) NOT BETWEEN ((t0.c82)) AND ((t0.c61))))AND(((NULL) NOT NULL))))OR(t0.c82))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c23 THEN t0.c30 WHEN t0.c82 THEN t0.c30 ELSE t0.c82 END COLLATE NOCASE ASC  NULLS FIRST, (t0.c58 COLLATE BINARY IN ())  NULLS LAST, (+ (t0.c0)) COLLATE NOCASE ASC);
SELECT * FROM t0 WHERE ((((((((t0.c18)) NOT BETWEEN ((t0.c82)) AND ((t0.c61))))AND(((NULL) NOT NULL))))OR(t0.c82))) ORDER BY CASE WHEN t0.c30 THEN t0.c58 WHEN t0.c23 THEN t0.c30 WHEN t0.c82 THEN t0.c30 ELSE t0.c82 END COLLATE NOCASE ASC  NULLS FIRST, (t0.c58 COLLATE BINARY IN ())  NULLS LAST, (+ (t0.c0)) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (SQLITE_COMPILEOPTION_GET(CAST(vt0.c0 AS REAL))) ORDER BY ((LIKE(vt0.c0, vt0.c1, '>'))IS(x'6e2c'));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKE(vt0.c0, vt0.c1, '>'))IS(x'6e2c')));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (SQLITE_COMPILEOPTION_GET(CAST(vt0.c0 AS REAL))) ORDER BY ((LIKE(vt0.c0, vt0.c1, '>'))IS(x'6e2c'));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKE(vt0.c0, vt0.c1, '>'))IS(x'6e2c')));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (SQLITE_COMPILEOPTION_GET(CAST(vt0.c0 AS REAL))) ORDER BY ((LIKE(vt0.c0, vt0.c1, '>'))IS(x'6e2c'));
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c18  WHEN t0.c23 THEN t0.c61 WHEN t0.c58 THEN t0.c30 WHEN x'' THEN t0.c0 END) NOT BETWEEN (((((((((t0.c0)OR(t0.c61)))AND(t0.c82)))OR(t0.c30)))AND(t0.c82))) AND (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c18  WHEN t0.c23 THEN t0.c61 WHEN t0.c58 THEN t0.c30 WHEN x'' THEN t0.c0 END) NOT BETWEEN (((((((((t0.c0)OR(t0.c61)))AND(t0.c82)))OR(t0.c30)))AND(t0.c82))) AND (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c18  WHEN t0.c23 THEN t0.c61 WHEN t0.c58 THEN t0.c30 WHEN x'' THEN t0.c0 END) NOT BETWEEN (((((((((t0.c0)OR(t0.c61)))AND(t0.c82)))OR(t0.c30)))AND(t0.c82))) AND (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c18  WHEN t0.c23 THEN t0.c61 WHEN t0.c58 THEN t0.c30 WHEN x'' THEN t0.c0 END) NOT BETWEEN (((((((((t0.c0)OR(t0.c61)))AND(t0.c82)))OR(t0.c30)))AND(t0.c82))) AND (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c18  WHEN t0.c23 THEN t0.c61 WHEN t0.c58 THEN t0.c30 WHEN x'' THEN t0.c0 END) NOT BETWEEN (((((((((t0.c0)OR(t0.c61)))AND(t0.c82)))OR(t0.c30)))AND(t0.c82))) AND (((t0.c0) NOTNULL))));
SELECT ALL * FROM vt0, t0 WHERE (NULLIF(DISTINCT t0.c61, (t0.c58 IN (t0.c30, t0.c18)))) ORDER BY (('-277192301')==(0.19895063467059648)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT t0.c61, (t0.c58 IN (t0.c30, t0.c18)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (('-277192301')=(0.19895063467059648)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (NULLIF(DISTINCT t0.c61, (t0.c58 IN (t0.c30, t0.c18)))) ORDER BY (('-277192301')==(0.19895063467059648)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT t0.c61, (t0.c58 IN (t0.c30, t0.c18)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (('-277192301')=(0.19895063467059648)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (NULLIF(DISTINCT t0.c61, (t0.c58 IN (t0.c30, t0.c18)))) ORDER BY (('-277192301')==(0.19895063467059648)) DESC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (CASE WHEN CASE WHEN t0.c30 THEN t0.c30 END THEN ((((t0.c82)OR(vt0.c1)))OR(t0.c23)) ELSE CAST(t0.c58 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c30 THEN t0.c30 END THEN ((((t0.c82)OR(vt0.c1)))OR(t0.c23)) ELSE CAST(t0.c58 AS TEXT) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN CASE WHEN t0.c30 THEN t0.c30 END THEN ((((t0.c82)OR(vt0.c1)))OR(t0.c23)) ELSE CAST(t0.c58 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c30 THEN t0.c30 END THEN ((((t0.c82)OR(vt0.c1)))OR(t0.c23)) ELSE CAST(t0.c58 AS TEXT) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN CASE WHEN t0.c30 THEN t0.c30 END THEN ((((t0.c82)OR(vt0.c1)))OR(t0.c23)) ELSE CAST(t0.c58 AS TEXT) END);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c58) ORDER BY CAST(((0.5209416344385577)=(t0.c61)) AS TEXT), CASE WHEN 'O쥒' COLLATE NOCASE THEN (((t0.c58)) NOT BETWEEN ((t0.c82)) AND ((t0.c61))) ELSE ((t0.c18)==(t0.c23)) END DESC  NULLS LAST, (((t0.c58) NOT NULL) IN (LIKELIHOOD(t0.c23, 0.4612491712245391))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c58) IS TRUE)  as count FROM t0 ORDER BY CAST(((0.5209416344385577)=(t0.c61)) AS TEXT), CASE WHEN 'O쥒' COLLATE NOCASE THEN (((t0.c58)) NOT BETWEEN ((t0.c82)) AND ((t0.c61))) ELSE ((t0.c18)=(t0.c23)) END DESC  NULLS LAST, (((t0.c58) NOT NULL) IN (LIKELIHOOD(t0.c23, 0.4612491712245391))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c58) ORDER BY CAST(((0.5209416344385577)=(t0.c61)) AS TEXT), CASE WHEN 'O쥒' COLLATE NOCASE THEN (((t0.c58)) NOT BETWEEN ((t0.c82)) AND ((t0.c61))) ELSE ((t0.c18)==(t0.c23)) END DESC  NULLS LAST, (((t0.c58) NOT NULL) IN (LIKELIHOOD(t0.c23, 0.4612491712245391))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c58) IS TRUE)  as count FROM t0 ORDER BY CAST(((0.5209416344385577)=(t0.c61)) AS TEXT), CASE WHEN 'O쥒' COLLATE NOCASE THEN (((t0.c58)) NOT BETWEEN ((t0.c82)) AND ((t0.c61))) ELSE ((t0.c18)=(t0.c23)) END DESC  NULLS LAST, (((t0.c58) NOT NULL) IN (LIKELIHOOD(t0.c23, 0.4612491712245391))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c58) ORDER BY CAST(((0.5209416344385577)=(t0.c61)) AS TEXT), CASE WHEN 'O쥒' COLLATE NOCASE THEN (((t0.c58)) NOT BETWEEN ((t0.c82)) AND ((t0.c61))) ELSE ((t0.c18)==(t0.c23)) END DESC  NULLS LAST, (((t0.c58) NOT NULL) IN (LIKELIHOOD(t0.c23, 0.4612491712245391))) ASC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (((vt0.c1) NOT BETWEEN (NULL COLLATE RTRIM) AND ((- (t0.c18))))) ORDER BY t0.c82 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (NULL COLLATE RTRIM) AND ((- (t0.c18))))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c82 DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((vt0.c1) NOT BETWEEN (NULL COLLATE RTRIM) AND ((- (t0.c18))))) ORDER BY t0.c82 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (NULL COLLATE RTRIM) AND ((- (t0.c18))))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c82 DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((vt0.c1) NOT BETWEEN (NULL COLLATE RTRIM) AND ((- (t0.c18))))) ORDER BY t0.c82 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((json_patch(t0.c0, t0.c23)) NOTNULL)) ORDER BY CASE ((t0.c0)>(t0.c18))  WHEN ((t0.c30)LIKE(t0.c23)) THEN ((t0.c82)%(t0.c18)) WHEN (((t0.c82))!=((t0.c18))) THEN ((t0.c82) IS FALSE) WHEN ((t0.c23)IS(t0.c30)) THEN ((t0.c61) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(t0.c0, t0.c23)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0)>(t0.c18))  WHEN ((t0.c30)LIKE(t0.c23)) THEN ((t0.c82)%(t0.c18)) WHEN (((t0.c82))<>((t0.c18))) THEN ((t0.c82) IS FALSE) WHEN ((t0.c23)IS(t0.c30)) THEN ((t0.c61) IS TRUE) END ASC);
SELECT COUNT(*) FROM t0 WHERE (((json_patch(t0.c0, t0.c23)) NOTNULL)) ORDER BY CASE ((t0.c0)>(t0.c18))  WHEN ((t0.c30)LIKE(t0.c23)) THEN ((t0.c82)%(t0.c18)) WHEN (((t0.c82))!=((t0.c18))) THEN ((t0.c82) IS FALSE) WHEN ((t0.c23)IS(t0.c30)) THEN ((t0.c61) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(t0.c0, t0.c23)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0)>(t0.c18))  WHEN ((t0.c30)LIKE(t0.c23)) THEN ((t0.c82)%(t0.c18)) WHEN (((t0.c82))<>((t0.c18))) THEN ((t0.c82) IS FALSE) WHEN ((t0.c23)IS(t0.c30)) THEN ((t0.c61) IS TRUE) END ASC);
SELECT COUNT(*) FROM t0 WHERE (((json_patch(t0.c0, t0.c23)) NOTNULL)) ORDER BY CASE ((t0.c0)>(t0.c18))  WHEN ((t0.c30)LIKE(t0.c23)) THEN ((t0.c82)%(t0.c18)) WHEN (((t0.c82))!=((t0.c18))) THEN ((t0.c82) IS FALSE) WHEN ((t0.c23)IS(t0.c30)) THEN ((t0.c61) IS TRUE) END ASC;
SELECT ALL * FROM vt0 WHERE (0x4258f001) ORDER BY NULL  NULLS FIRST, (((NOT (vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((0x4258f001) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST, (((NOT (vt0.c0))) IS FALSE));
SELECT ALL * FROM vt0 WHERE (0x4258f001) ORDER BY NULL  NULLS FIRST, (((NOT (vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((0x4258f001) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST, (((NOT (vt0.c0))) IS FALSE));
SELECT ALL * FROM vt0 WHERE (0x4258f001) ORDER BY NULL  NULLS FIRST, (((NOT (vt0.c0))) IS FALSE);
SELECT ALL * FROM t0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c30);
SELECT ALL * FROM vt0, t0 WHERE (HEX(((t0.c30) NOT BETWEEN (t0.c82) AND (t0.c30))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((t0.c30) NOT BETWEEN (t0.c82) AND (t0.c30)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (HEX(((t0.c30) NOT BETWEEN (t0.c82) AND (t0.c30))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((t0.c30) NOT BETWEEN (t0.c82) AND (t0.c30)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (HEX(((t0.c30) NOT BETWEEN (t0.c82) AND (t0.c30))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(NULL)))||(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(NULL)))||(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(NULL)))||(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(NULL)))||(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(NULL)))||(((vt0.c1) IS TRUE))));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((t0.c61)GLOB(t0.c82)) THEN (((vt0.c0, t0.c82, t0.c18))>((t0.c61, t0.c23, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c61)GLOB(t0.c82)) THEN (((vt0.c0, t0.c82, t0.c18))>((t0.c61, t0.c23, vt0.c0))) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((t0.c61)GLOB(t0.c82)) THEN (((vt0.c0, t0.c82, t0.c18))>((t0.c61, t0.c23, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c61)GLOB(t0.c82)) THEN (((vt0.c0, t0.c82, t0.c18))>((t0.c61, t0.c23, vt0.c0))) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((t0.c61)GLOB(t0.c82)) THEN (((vt0.c0, t0.c82, t0.c18))>((t0.c61, t0.c23, vt0.c0))) END);
SELECT * FROM t0, vt0 WHERE ((~ (((t0.c18) NOTNULL)))) ORDER BY t0.c18 ASC;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c18) NOTNULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c18 ASC);
SELECT * FROM t0, vt0 WHERE ((~ (((t0.c18) NOTNULL)))) ORDER BY t0.c18 ASC;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c18) NOTNULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c18 ASC);
SELECT * FROM t0, vt0 WHERE ((~ (((t0.c18) NOTNULL)))) ORDER BY t0.c18 ASC;
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)-(t0.c82)))LIKE(CASE WHEN NULL THEN 0Xba0e986 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(t0.c82)))LIKE(CASE WHEN NULL THEN 0Xba0e986 END))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)-(t0.c82)))LIKE(CASE WHEN NULL THEN 0Xba0e986 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(t0.c82)))LIKE(CASE WHEN NULL THEN 0Xba0e986 END))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)-(t0.c82)))LIKE(CASE WHEN NULL THEN 0Xba0e986 END)));
SELECT * FROM t0, vt0 WHERE ('RY풋');
SELECT SUM(count) FROM (SELECT (('RY풋') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('RY풋');
SELECT SUM(count) FROM (SELECT (('RY풋') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('RY풋');
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c18) NOT BETWEEN (x'') AND (t0.c58))) IS TRUE)) ORDER BY '-1648939742';
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c18) NOT BETWEEN (x'') AND (t0.c58))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY '-1648939742');
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c18) NOT BETWEEN (x'') AND (t0.c58))) IS TRUE)) ORDER BY '-1648939742';
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c18) NOT BETWEEN (x'') AND (t0.c58))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY '-1648939742');
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c18) NOT BETWEEN (x'') AND (t0.c58))) IS TRUE)) ORDER BY '-1648939742';
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((((t0.c0)) BETWEEN ((t0.c61)) AND ((t0.c82))))AND(0.9347344055556324)))AND(((((t0.c18)AND(t0.c0)))AND(t0.c23)))))AND(t0.c82)))AND(json_extract(t0.c61, t0.c23)))) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0)) BETWEEN ((t0.c61)) AND ((t0.c82))))AND(0.9347344055556324)))AND(((((t0.c18)AND(t0.c0)))AND(t0.c23)))))AND(t0.c82)))AND(json_extract(t0.c61, t0.c23)))) IS TRUE)  as count FROM t0 ORDER BY SQLITE_VERSION() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((((t0.c0)) BETWEEN ((t0.c61)) AND ((t0.c82))))AND(0.9347344055556324)))AND(((((t0.c18)AND(t0.c0)))AND(t0.c23)))))AND(t0.c82)))AND(json_extract(t0.c61, t0.c23)))) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0)) BETWEEN ((t0.c61)) AND ((t0.c82))))AND(0.9347344055556324)))AND(((((t0.c18)AND(t0.c0)))AND(t0.c23)))))AND(t0.c82)))AND(json_extract(t0.c61, t0.c23)))) IS TRUE)  as count FROM t0 ORDER BY SQLITE_VERSION() ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((t0.c30 IN ())) ORDER BY (((t0.c58)) BETWEEN ((((t0.c23)IS(t0.c23)))) AND ((((((((((t0.c30)AND(t0.c58)))OR(t0.c23)))OR('-1191560008')))AND(t0.c82))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c30 IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c58)) BETWEEN ((((t0.c23)IS(t0.c23)))) AND ((((((((((t0.c30)AND(t0.c58)))OR(t0.c23)))OR('-1191560008')))AND(t0.c82))))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((t0.c30 IN ())) ORDER BY (((t0.c58)) BETWEEN ((((t0.c23)IS(t0.c23)))) AND ((((((((((t0.c30)AND(t0.c58)))OR(t0.c23)))OR('-1191560008')))AND(t0.c82))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c30 IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c58)) BETWEEN ((((t0.c23)IS(t0.c23)))) AND ((((((((((t0.c30)AND(t0.c58)))OR(t0.c23)))OR('-1191560008')))AND(t0.c82))))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((t0.c30 IN ())) ORDER BY (((t0.c58)) BETWEEN ((((t0.c23)IS(t0.c23)))) AND ((((((((((t0.c30)AND(t0.c58)))OR(t0.c23)))OR('-1191560008')))AND(t0.c82))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((((t0.c23))=((t0.c58))) IN ())) ORDER BY ((CAST(t0.c18 AS NUMERIC))OR(((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c82))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c23))==((t0.c58))) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((CAST(t0.c18 AS NUMERIC))OR(((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c82)))));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((((t0.c23))=((t0.c58))) IN ())) ORDER BY ((CAST(t0.c18 AS NUMERIC))OR(((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c82))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c23))==((t0.c58))) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((CAST(t0.c18 AS NUMERIC))OR(((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c82)))));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((((t0.c23))=((t0.c58))) IN ())) ORDER BY ((CAST(t0.c18 AS NUMERIC))OR(((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c82))));
SELECT * FROM t0, vt0 NOT INDEXED WHERE (t0.c58);
SELECT SUM(count) FROM (SELECT ((t0.c58) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 NOT INDEXED WHERE (t0.c58);
SELECT SUM(count) FROM (SELECT ((t0.c58) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 NOT INDEXED WHERE (t0.c58);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c58)AND(t0.c82))) BETWEEN (((t0.c58) BETWEEN (t0.c0) AND (t0.c30))) AND (t0.c82 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c58)AND(t0.c82))) BETWEEN (((t0.c58) BETWEEN (t0.c0) AND (t0.c30))) AND (t0.c82 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c58)AND(t0.c82))) BETWEEN (((t0.c58) BETWEEN (t0.c0) AND (t0.c30))) AND (t0.c82 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c58)AND(t0.c82))) BETWEEN (((t0.c58) BETWEEN (t0.c0) AND (t0.c30))) AND (t0.c82 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c58)AND(t0.c82))) BETWEEN (((t0.c58) BETWEEN (t0.c0) AND (t0.c30))) AND (t0.c82 COLLATE NOCASE)));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c18)GLOB(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c18)GLOB(NULL)) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c18)GLOB(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c18)GLOB(NULL)) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c18)GLOB(NULL)) IN ()));
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c23))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c23))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c23))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c23))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c23))) IS TRUE));
SELECT ALL * FROM vt0, t0 WHERE (((('-155273904')LIKE(vt0.c1)) IN ())) ORDER BY (t0.c18 IN ()) COLLATE RTRIM ASC, ((LTRIM(t0.c23, t0.c0))*((((vt0.c0, t0.c23, t0.c82)) NOT BETWEEN ((t0.c23, t0.c82, vt0.c0)) AND ((t0.c58, vt0.c1, vt0.c1))))) DESC, LIKELY(DISTINCT CASE WHEN t0.c23 THEN t0.c61 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('-155273904')LIKE(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c18 IN ()) COLLATE RTRIM ASC, ((LTRIM(t0.c23, t0.c0))*((((vt0.c0, t0.c23, t0.c82)) NOT BETWEEN ((t0.c23, t0.c82, vt0.c0)) AND ((t0.c58, vt0.c1, vt0.c1))))) DESC, LIKELY(DISTINCT CASE WHEN t0.c23 THEN t0.c61 END) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((('-155273904')LIKE(vt0.c1)) IN ())) ORDER BY (t0.c18 IN ()) COLLATE RTRIM ASC, ((LTRIM(t0.c23, t0.c0))*((((vt0.c0, t0.c23, t0.c82)) NOT BETWEEN ((t0.c23, t0.c82, vt0.c0)) AND ((t0.c58, vt0.c1, vt0.c1))))) DESC, LIKELY(DISTINCT CASE WHEN t0.c23 THEN t0.c61 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('-155273904')LIKE(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c18 IN ()) COLLATE RTRIM ASC, ((LTRIM(t0.c23, t0.c0))*((((vt0.c0, t0.c23, t0.c82)) NOT BETWEEN ((t0.c23, t0.c82, vt0.c0)) AND ((t0.c58, vt0.c1, vt0.c1))))) DESC, LIKELY(DISTINCT CASE WHEN t0.c23 THEN t0.c61 END) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((('-155273904')LIKE(vt0.c1)) IN ())) ORDER BY (t0.c18 IN ()) COLLATE RTRIM ASC, ((LTRIM(t0.c23, t0.c0))*((((vt0.c0, t0.c23, t0.c82)) NOT BETWEEN ((t0.c23, t0.c82, vt0.c0)) AND ((t0.c58, vt0.c1, vt0.c1))))) DESC, LIKELY(DISTINCT CASE WHEN t0.c23 THEN t0.c61 END) DESC;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((t0.c82 COLLATE RTRIM)==(vt0.c0))) ORDER BY CASE WHEN ((t0.c58)&(t0.c18)) THEN ((((((((t0.c30)OR(vt0.c1)))OR(x'')))AND(t0.c23)))OR(0.4687359348894965)) WHEN json_quote(t0.c18) THEN t0.c18 WHEN x'' THEN NULL ELSE ((((t0.c23)AND(t0.c82)))OR('VⒽalG9v')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c82 COLLATE RTRIM)=(vt0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY CASE WHEN ((t0.c58)&(t0.c18)) THEN ((((((((t0.c30)OR(vt0.c1)))OR(x'')))AND(t0.c23)))OR(0.4687359348894965)) WHEN json_quote(t0.c18) THEN t0.c18 WHEN x'' THEN NULL ELSE ((((t0.c23)AND(t0.c82)))OR('VⒽalG9v')) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((t0.c82 COLLATE RTRIM)==(vt0.c0))) ORDER BY CASE WHEN ((t0.c58)&(t0.c18)) THEN ((((((((t0.c30)OR(vt0.c1)))OR(x'')))AND(t0.c23)))OR(0.4687359348894965)) WHEN json_quote(t0.c18) THEN t0.c18 WHEN x'' THEN NULL ELSE ((((t0.c23)AND(t0.c82)))OR('VⒽalG9v')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c82 COLLATE RTRIM)=(vt0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY CASE WHEN ((t0.c58)&(t0.c18)) THEN ((((((((t0.c30)OR(vt0.c1)))OR(x'')))AND(t0.c23)))OR(0.4687359348894965)) WHEN json_quote(t0.c18) THEN t0.c18 WHEN x'' THEN NULL ELSE ((((t0.c23)AND(t0.c82)))OR('VⒽalG9v')) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((t0.c82 COLLATE RTRIM)==(vt0.c0))) ORDER BY CASE WHEN ((t0.c58)&(t0.c18)) THEN ((((((((t0.c30)OR(vt0.c1)))OR(x'')))AND(t0.c23)))OR(0.4687359348894965)) WHEN json_quote(t0.c18) THEN t0.c18 WHEN x'' THEN NULL ELSE ((((t0.c23)AND(t0.c82)))OR('VⒽalG9v')) END  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c82)>=(((((t0.c61)OR(t0.c0)))AND(t0.c82)))) WHERE ((((((t0.c30))>=((t0.c0))))>>(((((t0.c18)OR(t0.c61)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c30))>=((t0.c0))))>>(((((t0.c18)OR(t0.c61)))AND(vt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c82)>=(((((t0.c61)OR(t0.c0)))AND(t0.c82)))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c82)>=(((((t0.c61)OR(t0.c0)))AND(t0.c82)))) WHERE ((((((t0.c30))>=((t0.c0))))>>(((((t0.c18)OR(t0.c61)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c30))>=((t0.c0))))>>(((((t0.c18)OR(t0.c61)))AND(vt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c82)>=(((((t0.c61)OR(t0.c0)))AND(t0.c82)))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c82)>=(((((t0.c61)OR(t0.c0)))AND(t0.c82)))) WHERE ((((((t0.c30))>=((t0.c0))))>>(((((t0.c18)OR(t0.c61)))AND(vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (json_array_length(HEX(DISTINCT t0.c0))) ORDER BY ((((((t0.c30)OR(t0.c61)))OR(t0.c30)))==((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(HEX(DISTINCT t0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c30)OR(t0.c61)))OR(t0.c30)))=((NOT (vt0.c1)))));
SELECT ALL * FROM vt0, t0 WHERE (json_array_length(HEX(DISTINCT t0.c0))) ORDER BY ((((((t0.c30)OR(t0.c61)))OR(t0.c30)))==((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(HEX(DISTINCT t0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c30)OR(t0.c61)))OR(t0.c30)))=((NOT (vt0.c1)))));
SELECT ALL * FROM vt0, t0 WHERE (json_array_length(HEX(DISTINCT t0.c0))) ORDER BY ((((((t0.c30)OR(t0.c61)))OR(t0.c30)))==((NOT (vt0.c1))));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.995773386380404) THEN t0.c0 ELSE ((((t0.c23)OR(t0.c82)))OR(t0.c58)) END) ORDER BY HEX((((t0.c0, t0.c30, t0.c23))>=((t0.c30, t0.c30, t0.c58))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.995773386380404) THEN t0.c0 ELSE ((((t0.c23)OR(t0.c82)))OR(t0.c58)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY HEX((((t0.c0, t0.c30, t0.c23))>=((t0.c30, t0.c30, t0.c58))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.995773386380404) THEN t0.c0 ELSE ((((t0.c23)OR(t0.c82)))OR(t0.c58)) END) ORDER BY HEX((((t0.c0, t0.c30, t0.c23))>=((t0.c30, t0.c30, t0.c58))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.995773386380404) THEN t0.c0 ELSE ((((t0.c23)OR(t0.c82)))OR(t0.c58)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY HEX((((t0.c0, t0.c30, t0.c23))>=((t0.c30, t0.c30, t0.c58))))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.995773386380404) THEN t0.c0 ELSE ((((t0.c23)OR(t0.c82)))OR(t0.c58)) END) ORDER BY HEX((((t0.c0, t0.c30, t0.c23))>=((t0.c30, t0.c30, t0.c58))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) ORDER BY (((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0xffffffffbbcf62b8, vt0.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0Xffffffffbbcf62b8, vt0.c0)))) NOT NULL) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) ORDER BY (((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0xffffffffbbcf62b8, vt0.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0Xffffffffbbcf62b8, vt0.c0)))) NOT NULL) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) ORDER BY (((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0xffffffffbbcf62b8, vt0.c0)))) NOT NULL) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (0.6789060925401815) ORDER BY CASE WHEN x'' COLLATE BINARY THEN t0.c61 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6789060925401815) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN x'' COLLATE BINARY THEN t0.c61 END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (0.6789060925401815) ORDER BY CASE WHEN x'' COLLATE BINARY THEN t0.c61 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6789060925401815) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN x'' COLLATE BINARY THEN t0.c61 END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (0.6789060925401815) ORDER BY CASE WHEN x'' COLLATE BINARY THEN t0.c61 END DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((((((((((t0.c30)AND(t0.c23)))OR(t0.c82)))AND(t0.c61)))AND(-1.768399281E9)))OR(x'')))AND(((0.7695610959013989) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c30)AND(t0.c23)))OR(t0.c82)))AND(t0.c61)))AND(-1.768399281E9)))OR(x'')))AND(((0.7695610959013989) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((t0.c30)AND(t0.c23)))OR(t0.c82)))AND(t0.c61)))AND(-1.768399281E9)))OR(x'')))AND(((0.7695610959013989) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c30)AND(t0.c23)))OR(t0.c82)))AND(t0.c61)))AND(-1.768399281E9)))OR(x'')))AND(((0.7695610959013989) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((t0.c30)AND(t0.c23)))OR(t0.c82)))AND(t0.c61)))AND(-1.768399281E9)))OR(x'')))AND(((0.7695610959013989) IS TRUE))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((- (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((- (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((- (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((- (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((- (vt0.c1))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((json_patch(t0.c23, vt0.c1))OR(((0Xffffffffbd4e1877) NOTNULL))))AND(((t0.c0)IS NOT(t0.c0)))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((json_patch(t0.c23, vt0.c1))OR(((0Xffffffffbd4e1877) NOTNULL))))AND(((t0.c0)IS NOT(t0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((json_patch(t0.c23, vt0.c1))OR(((0Xffffffffbd4e1877) NOTNULL))))AND(((t0.c0)IS NOT(t0.c0)))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((json_patch(t0.c23, vt0.c1))OR(((0Xffffffffbd4e1877) NOTNULL))))AND(((t0.c0)IS NOT(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN (t0.c61) AND (t0.c82)))IS NOT(CAST(0Xffffffffc402dcea AS BLOB)))) ORDER BY ((((t0.c82) ISNULL))>=(CAST(t0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (t0.c61) AND (t0.c82)))IS NOT(CAST(0xffffffffc402dcea AS BLOB)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c82) ISNULL))>=(CAST(t0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN (t0.c61) AND (t0.c82)))IS NOT(CAST(0Xffffffffc402dcea AS BLOB)))) ORDER BY ((((t0.c82) ISNULL))>=(CAST(t0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (t0.c61) AND (t0.c82)))IS NOT(CAST(0xffffffffc402dcea AS BLOB)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c82) ISNULL))>=(CAST(t0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN (t0.c61) AND (t0.c82)))IS NOT(CAST(0Xffffffffc402dcea AS BLOB)))) ORDER BY ((((t0.c82) ISNULL))>=(CAST(t0.c0 AS INTEGER)));
SELECT * FROM vt0, t0 WHERE (CASE ABS(t0.c61)  WHEN 'q.' THEN ((((((((t0.c58)AND(t0.c58)))AND(t0.c82)))AND(t0.c58)))OR(t0.c61)) ELSE TRIM(DISTINCT t0.c58, t0.c18) END) ORDER BY 0.5197032389000888 COLLATE RTRIM  NULLS LAST, CAST(CAST(vt0.c1 AS REAL) AS REAL) ASC, (((((~ (vt0.c1)))OR(0.20555593481628454)))AND(t0.c82 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ABS(t0.c61)  WHEN 'q.' THEN ((((((((t0.c58)AND(t0.c58)))AND(t0.c82)))AND(t0.c58)))OR(t0.c61)) ELSE TRIM(DISTINCT t0.c58, t0.c18) END) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.5197032389000888 COLLATE RTRIM  NULLS LAST, CAST(CAST(vt0.c1 AS REAL) AS REAL) ASC, (((((~ (vt0.c1)))OR(0.20555593481628454)))AND(t0.c82 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CASE ABS(t0.c61)  WHEN 'q.' THEN ((((((((t0.c58)AND(t0.c58)))AND(t0.c82)))AND(t0.c58)))OR(t0.c61)) ELSE TRIM(DISTINCT t0.c58, t0.c18) END) ORDER BY 0.5197032389000888 COLLATE RTRIM  NULLS LAST, CAST(CAST(vt0.c1 AS REAL) AS REAL) ASC, (((((~ (vt0.c1)))OR(0.20555593481628454)))AND(t0.c82 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ABS(t0.c61)  WHEN 'q.' THEN ((((((((t0.c58)AND(t0.c58)))AND(t0.c82)))AND(t0.c58)))OR(t0.c61)) ELSE TRIM(DISTINCT t0.c58, t0.c18) END) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.5197032389000888 COLLATE RTRIM  NULLS LAST, CAST(CAST(vt0.c1 AS REAL) AS REAL) ASC, (((((~ (vt0.c1)))OR(0.20555593481628454)))AND(t0.c82 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CASE ABS(t0.c61)  WHEN 'q.' THEN ((((((((t0.c58)AND(t0.c58)))AND(t0.c82)))AND(t0.c58)))OR(t0.c61)) ELSE TRIM(DISTINCT t0.c58, t0.c18) END) ORDER BY 0.5197032389000888 COLLATE RTRIM  NULLS LAST, CAST(CAST(vt0.c1 AS REAL) AS REAL) ASC, (((((~ (vt0.c1)))OR(0.20555593481628454)))AND(t0.c82 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)<<(t0.c18)))AND(((((vt0.c1)OR(t0.c23)))AND(t0.c0)))))OR(('' IN ()))) WHERE (CASE WHEN vt0.c1 THEN ((t0.c82)IS NOT(t0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c61 THEN t0.c0 WHEN vt0.c0 THEN t0.c30 WHEN t0.c58 THEN t0.c0 ELSE '붹' END WHEN (NULL IN ()) THEN t0.c30 COLLATE RTRIM ELSE LAST_INSERT_ROWID() END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN ((t0.c82)IS NOT(t0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c61 THEN t0.c0 WHEN vt0.c0 THEN t0.c30 WHEN t0.c58 THEN t0.c0 ELSE '붹' END WHEN (NULL IN ()) THEN t0.c30 COLLATE RTRIM ELSE LAST_INSERT_ROWID() END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)<<(t0.c18)))AND(((((vt0.c1)OR(t0.c23)))AND(t0.c0)))))OR(('' IN ()))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)<<(t0.c18)))AND(((((vt0.c1)OR(t0.c23)))AND(t0.c0)))))OR(('' IN ()))) WHERE (CASE WHEN vt0.c1 THEN ((t0.c82)IS NOT(t0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c61 THEN t0.c0 WHEN vt0.c0 THEN t0.c30 WHEN t0.c58 THEN t0.c0 ELSE '붹' END WHEN (NULL IN ()) THEN t0.c30 COLLATE RTRIM ELSE LAST_INSERT_ROWID() END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN ((t0.c82)IS NOT(t0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c61 THEN t0.c0 WHEN vt0.c0 THEN t0.c30 WHEN t0.c58 THEN t0.c0 ELSE '붹' END WHEN (NULL IN ()) THEN t0.c30 COLLATE RTRIM ELSE LAST_INSERT_ROWID() END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)<<(t0.c18)))AND(((((vt0.c1)OR(t0.c23)))AND(t0.c0)))))OR(('' IN ()))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1)<<(t0.c18)))AND(((((vt0.c1)OR(t0.c23)))AND(t0.c0)))))OR(('' IN ()))) WHERE (CASE WHEN vt0.c1 THEN ((t0.c82)IS NOT(t0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN t0.c61 THEN t0.c0 WHEN vt0.c0 THEN t0.c30 WHEN t0.c58 THEN t0.c0 ELSE '붹' END WHEN (NULL IN ()) THEN t0.c30 COLLATE RTRIM ELSE LAST_INSERT_ROWID() END);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON '817981097' WHERE ((((((t0.c30)OR(t0.c61)))AND(t0.c61)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c30)OR(t0.c61)))AND(t0.c61)) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON '817981097');
SELECT ALL * FROM t0 CROSS JOIN vt0 ON '817981097' WHERE ((((((t0.c30)OR(t0.c61)))AND(t0.c61)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c30)OR(t0.c61)))AND(t0.c61)) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON '817981097');
SELECT ALL * FROM t0 CROSS JOIN vt0 ON '817981097' WHERE ((((((t0.c30)OR(t0.c61)))AND(t0.c61)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0)))>=(CAST(t0.c61 AS INTEGER)))) ORDER BY (((((((((t0.c82)AND(t0.c61)))AND(t0.c58)))OR(t0.c23)))AND(t0.c82)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))>=(CAST(t0.c61 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c82)AND(t0.c61)))AND(t0.c58)))OR(t0.c23)))AND(t0.c82)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0)))>=(CAST(t0.c61 AS INTEGER)))) ORDER BY (((((((((t0.c82)AND(t0.c61)))AND(t0.c58)))OR(t0.c23)))AND(t0.c82)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))>=(CAST(t0.c61 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c82)AND(t0.c61)))AND(t0.c58)))OR(t0.c23)))AND(t0.c82)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0)))>=(CAST(t0.c61 AS INTEGER)))) ORDER BY (((((((((t0.c82)AND(t0.c61)))AND(t0.c58)))OR(t0.c23)))AND(t0.c82)) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (ABS(CAST(t0.c82 AS TEXT))) ORDER BY (((+ (vt0.c1))) ISNULL), (((- (vt0.c1))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(t0.c82 AS TEXT))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((+ (vt0.c1))) ISNULL), (((- (vt0.c1))) NOTNULL) DESC);
SELECT ALL * FROM vt0, t0 WHERE (ABS(CAST(t0.c82 AS TEXT))) ORDER BY (((+ (vt0.c1))) ISNULL), (((- (vt0.c1))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(t0.c82 AS TEXT))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((+ (vt0.c1))) ISNULL), (((- (vt0.c1))) NOTNULL) DESC);
SELECT ALL * FROM vt0, t0 WHERE (ABS(CAST(t0.c82 AS TEXT))) ORDER BY (((+ (vt0.c1))) ISNULL), (((- (vt0.c1))) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c58)||(t0.c58)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c58)||(t0.c58)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c58)||(t0.c58)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c58)||(t0.c58)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c58)||(t0.c58)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c18) BETWEEN (t0.c61) AND (t0.c18)))+((t0.c0 IN (t0.c61, t0.c61)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c18) BETWEEN (t0.c61) AND (t0.c18)))+((t0.c0 IN (t0.c61, t0.c61))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c18) BETWEEN (t0.c61) AND (t0.c18)))+((t0.c0 IN (t0.c61, t0.c61)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c18) BETWEEN (t0.c61) AND (t0.c18)))+((t0.c0 IN (t0.c61, t0.c61))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c18) BETWEEN (t0.c61) AND (t0.c18)))+((t0.c0 IN (t0.c61, t0.c61)))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c58)) AND ((t0.c58))))GLOB(((t0.c30)<<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c58)) AND ((t0.c58))))GLOB(((t0.c30)<<(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c58)) AND ((t0.c58))))GLOB(((t0.c30)<<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c58)) AND ((t0.c58))))GLOB(((t0.c30)<<(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c58)) AND ((t0.c58))))GLOB(((t0.c30)<<(t0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c61) NOT BETWEEN (t0.c61) AND (NULL))) NOT BETWEEN (((((t0.c82)OR(t0.c18)))AND(t0.c30))) AND (((((((((t0.c0)AND(t0.c61)))OR(t0.c30)))AND(t0.c58)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c61) NOT BETWEEN (t0.c61) AND (NULL))) NOT BETWEEN (((((t0.c82)OR(t0.c18)))AND(t0.c30))) AND (((((((((t0.c0)AND(t0.c61)))OR(t0.c30)))AND(t0.c58)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c61) NOT BETWEEN (t0.c61) AND (NULL))) NOT BETWEEN (((((t0.c82)OR(t0.c18)))AND(t0.c30))) AND (((((((((t0.c0)AND(t0.c61)))OR(t0.c30)))AND(t0.c58)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c61) NOT BETWEEN (t0.c61) AND (NULL))) NOT BETWEEN (((((t0.c82)OR(t0.c18)))AND(t0.c30))) AND (((((((((t0.c0)AND(t0.c61)))OR(t0.c30)))AND(t0.c58)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c61) NOT BETWEEN (t0.c61) AND (NULL))) NOT BETWEEN (((((t0.c82)OR(t0.c18)))AND(t0.c30))) AND (((((((((t0.c0)AND(t0.c61)))OR(t0.c30)))AND(t0.c58)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (IFNULL(DISTINCT t0.c0, 0Xffffffff87ec707e)) ORDER BY ((((NULL) BETWEEN (t0.c0) AND (vt0.c1)))%(t0.c18))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT t0.c0, 0Xffffffff87ec707e)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((NULL) BETWEEN (t0.c0) AND (vt0.c1)))%(t0.c18))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (IFNULL(DISTINCT t0.c0, 0Xffffffff87ec707e)) ORDER BY ((((NULL) BETWEEN (t0.c0) AND (vt0.c1)))%(t0.c18))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT t0.c0, 0Xffffffff87ec707e)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((NULL) BETWEEN (t0.c0) AND (vt0.c1)))%(t0.c18))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (IFNULL(DISTINCT t0.c0, 0Xffffffff87ec707e)) ORDER BY ((((NULL) BETWEEN (t0.c0) AND (vt0.c1)))%(t0.c18))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((- (vt0.c1)))) AND ((x''))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((- (vt0.c1)))) AND ((x'')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((- (vt0.c1)))) AND ((x''))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((- (vt0.c1)))) AND ((x'')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((- (vt0.c1)))) AND ((x''))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))|(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))|(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))|(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))|(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))|(((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE HEX(t0.c30)  WHEN (- (t0.c23)) THEN x'' WHEN vt0.c0 COLLATE RTRIM THEN ('jnh.	(*' IN ()) WHEN (((('')AND(x'f0a22ae3')))AND(t0.c18)) THEN (((t0.c82))<((t0.c58))) WHEN ((t0.c18)AND(t0.c23)) THEN 'WU' WHEN t0.c23 COLLATE BINARY THEN (t0.c30 IN ()) END WHERE (((((vt0.c0) ISNULL))<=((- ('1026025699'))))) ORDER BY ((CASE WHEN vt0.c1 THEN t0.c0 ELSE t0.c23 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))<=((- ('1026025699'))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE HEX(t0.c30)  WHEN (- (t0.c23)) THEN x'' WHEN vt0.c0 COLLATE RTRIM THEN ('jnh.	(*' IN ()) WHEN (((('')AND(x'f0a22ae3')))AND(t0.c18)) THEN (((t0.c82))<((t0.c58))) WHEN ((t0.c18)AND(t0.c23)) THEN 'WU' WHEN t0.c23 COLLATE BINARY THEN (t0.c30 IN ()) END ORDER BY ((CASE WHEN vt0.c1 THEN t0.c0 ELSE t0.c23 END) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE HEX(t0.c30)  WHEN (- (t0.c23)) THEN x'' WHEN vt0.c0 COLLATE RTRIM THEN ('jnh.	(*' IN ()) WHEN (((('')AND(x'f0a22ae3')))AND(t0.c18)) THEN (((t0.c82))<((t0.c58))) WHEN ((t0.c18)AND(t0.c23)) THEN 'WU' WHEN t0.c23 COLLATE BINARY THEN (t0.c30 IN ()) END WHERE (((((vt0.c0) ISNULL))<=((- ('1026025699'))))) ORDER BY ((CASE WHEN vt0.c1 THEN t0.c0 ELSE t0.c23 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))<=((- ('1026025699'))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE HEX(t0.c30)  WHEN (- (t0.c23)) THEN x'' WHEN vt0.c0 COLLATE RTRIM THEN ('jnh.	(*' IN ()) WHEN (((('')AND(x'f0a22ae3')))AND(t0.c18)) THEN (((t0.c82))<((t0.c58))) WHEN ((t0.c18)AND(t0.c23)) THEN 'WU' WHEN t0.c23 COLLATE BINARY THEN (t0.c30 IN ()) END ORDER BY ((CASE WHEN vt0.c1 THEN t0.c0 ELSE t0.c23 END) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE HEX(t0.c30)  WHEN (- (t0.c23)) THEN x'' WHEN vt0.c0 COLLATE RTRIM THEN ('jnh.	(*' IN ()) WHEN (((('')AND(x'f0a22ae3')))AND(t0.c18)) THEN (((t0.c82))<((t0.c58))) WHEN ((t0.c18)AND(t0.c23)) THEN 'WU' WHEN t0.c23 COLLATE BINARY THEN (t0.c30 IN ()) END WHERE (((((vt0.c0) ISNULL))<=((- ('1026025699'))))) ORDER BY ((CASE WHEN vt0.c1 THEN t0.c0 ELSE t0.c23 END) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c82 IN (t0.c18, t0.c61)) IN ()) WHERE (vt0.c0) ORDER BY CASE WHEN ((0x131252db) NOT NULL) THEN RTRIM(t0.c18) ELSE ((vt0.c0)*(t0.c23)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c82 IN (t0.c18, t0.c61)) IN ()) ORDER BY CASE WHEN ((0X131252db) NOT NULL) THEN RTRIM(t0.c18) ELSE ((vt0.c0)*(t0.c23)) END ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c82 IN (t0.c18, t0.c61)) IN ()) WHERE (vt0.c0) ORDER BY CASE WHEN ((0x131252db) NOT NULL) THEN RTRIM(t0.c18) ELSE ((vt0.c0)*(t0.c23)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c82 IN (t0.c18, t0.c61)) IN ()) ORDER BY CASE WHEN ((0X131252db) NOT NULL) THEN RTRIM(t0.c18) ELSE ((vt0.c0)*(t0.c23)) END ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c82 IN (t0.c18, t0.c61)) IN ()) WHERE (vt0.c0) ORDER BY CASE WHEN ((0x131252db) NOT NULL) THEN RTRIM(t0.c18) ELSE ((vt0.c0)*(t0.c23)) END ASC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)>>(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>>(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)>>(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>>(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)>>(vt0.c0)) COLLATE RTRIM);
SELECT * FROM t0, vt0 WHERE (((((((t0.c30)OR(t0.c0)))AND(t0.c23)))/(NULL))) ORDER BY (((+ (t0.c18))) NOT BETWEEN (((t0.c18) BETWEEN (t0.c58) AND ('1629727238'))) AND (t0.c18)), ((((((((t0.c18 COLLATE NOCASE)AND(t0.c0 COLLATE BINARY)))OR(((t0.c23)LIKE(t0.c82)))))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(t0.c18 COLLATE RTRIM)) ASC, ((((NULL) IS TRUE)) NOT BETWEEN ((t0.c61 IN (vt0.c0))) AND (CAST(t0.c23 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c30)OR(t0.c0)))AND(t0.c23)))/(NULL))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((+ (t0.c18))) NOT BETWEEN (((t0.c18) BETWEEN (t0.c58) AND ('1629727238'))) AND (t0.c18)), ((((((((t0.c18 COLLATE NOCASE)AND(t0.c0 COLLATE BINARY)))OR(((t0.c23)LIKE(t0.c82)))))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(t0.c18 COLLATE RTRIM)) ASC, ((((NULL) IS TRUE)) NOT BETWEEN ((t0.c61 IN (vt0.c0))) AND (CAST(t0.c23 AS BLOB))) DESC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((((((t0.c30)OR(t0.c0)))AND(t0.c23)))/(NULL))) ORDER BY (((+ (t0.c18))) NOT BETWEEN (((t0.c18) BETWEEN (t0.c58) AND ('1629727238'))) AND (t0.c18)), ((((((((t0.c18 COLLATE NOCASE)AND(t0.c0 COLLATE BINARY)))OR(((t0.c23)LIKE(t0.c82)))))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(t0.c18 COLLATE RTRIM)) ASC, ((((NULL) IS TRUE)) NOT BETWEEN ((t0.c61 IN (vt0.c0))) AND (CAST(t0.c23 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c30)OR(t0.c0)))AND(t0.c23)))/(NULL))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((+ (t0.c18))) NOT BETWEEN (((t0.c18) BETWEEN (t0.c58) AND ('1629727238'))) AND (t0.c18)), ((((((((t0.c18 COLLATE NOCASE)AND(t0.c0 COLLATE BINARY)))OR(((t0.c23)LIKE(t0.c82)))))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(t0.c18 COLLATE RTRIM)) ASC, ((((NULL) IS TRUE)) NOT BETWEEN ((t0.c61 IN (vt0.c0))) AND (CAST(t0.c23 AS BLOB))) DESC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((((((t0.c30)OR(t0.c0)))AND(t0.c23)))/(NULL))) ORDER BY (((+ (t0.c18))) NOT BETWEEN (((t0.c18) BETWEEN (t0.c58) AND ('1629727238'))) AND (t0.c18)), ((((((((t0.c18 COLLATE NOCASE)AND(t0.c0 COLLATE BINARY)))OR(((t0.c23)LIKE(t0.c82)))))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(t0.c18 COLLATE RTRIM)) ASC, ((((NULL) IS TRUE)) NOT BETWEEN ((t0.c61 IN (vt0.c0))) AND (CAST(t0.c23 AS BLOB))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (TOTAL_CHANGES()) ORDER BY ((t0.c61 COLLATE NOCASE) BETWEEN (t0.c58 COLLATE BINARY) AND ((NOT (t0.c18))))  NULLS LAST, (t0.c61 IN ()) COLLATE NOCASE  NULLS LAST, (((((t0.c18))<((t0.c58)))) NOT BETWEEN (0.15223349771392902 COLLATE RTRIM) AND ('x'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0 ORDER BY ((t0.c61 COLLATE NOCASE) BETWEEN (t0.c58 COLLATE BINARY) AND ((NOT (t0.c18))))  NULLS LAST, (t0.c61 IN ()) COLLATE NOCASE  NULLS LAST, (((((t0.c18))<((t0.c58)))) NOT BETWEEN (0.15223349771392902 COLLATE RTRIM) AND ('x'))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (TOTAL_CHANGES()) ORDER BY ((t0.c61 COLLATE NOCASE) BETWEEN (t0.c58 COLLATE BINARY) AND ((NOT (t0.c18))))  NULLS LAST, (t0.c61 IN ()) COLLATE NOCASE  NULLS LAST, (((((t0.c18))<((t0.c58)))) NOT BETWEEN (0.15223349771392902 COLLATE RTRIM) AND ('x'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0 ORDER BY ((t0.c61 COLLATE NOCASE) BETWEEN (t0.c58 COLLATE BINARY) AND ((NOT (t0.c18))))  NULLS LAST, (t0.c61 IN ()) COLLATE NOCASE  NULLS LAST, (((((t0.c18))<((t0.c58)))) NOT BETWEEN (0.15223349771392902 COLLATE RTRIM) AND ('x'))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (TOTAL_CHANGES()) ORDER BY ((t0.c61 COLLATE NOCASE) BETWEEN (t0.c58 COLLATE BINARY) AND ((NOT (t0.c18))))  NULLS LAST, (t0.c61 IN ()) COLLATE NOCASE  NULLS LAST, (((((t0.c18))<((t0.c58)))) NOT BETWEEN (0.15223349771392902 COLLATE RTRIM) AND ('x'))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE t0.c30  WHEN t0.c30 THEN t0.c0 WHEN t0.c61 THEN t0.c18 WHEN t0.c82 THEN t0.c30 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c30  WHEN t0.c30 THEN t0.c0 WHEN t0.c61 THEN t0.c18 WHEN t0.c82 THEN t0.c30 END AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE t0.c30  WHEN t0.c30 THEN t0.c0 WHEN t0.c61 THEN t0.c18 WHEN t0.c82 THEN t0.c30 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c30  WHEN t0.c30 THEN t0.c0 WHEN t0.c61 THEN t0.c18 WHEN t0.c82 THEN t0.c30 END AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE t0.c30  WHEN t0.c30 THEN t0.c0 WHEN t0.c61 THEN t0.c18 WHEN t0.c82 THEN t0.c30 END AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))GLOB(vt0.c1))) ORDER BY CAST((- (vt0.c1)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))GLOB(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c1)) AS BLOB) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))GLOB(vt0.c1))) ORDER BY CAST((- (vt0.c1)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))GLOB(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c1)) AS BLOB) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))GLOB(vt0.c1))) ORDER BY CAST((- (vt0.c1)) AS BLOB) DESC;
SELECT * FROM t0 WHERE (((((((((((t0.c61)OR(t0.c61)))AND(t0.c58)))OR(t0.c58)))AND(t0.c23)))<<(((t0.c58) NOT BETWEEN (t0.c30) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c61)OR(t0.c61)))AND(t0.c58)))OR(t0.c58)))AND(t0.c23)))<<(((t0.c58) NOT BETWEEN (t0.c30) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c61)OR(t0.c61)))AND(t0.c58)))OR(t0.c58)))AND(t0.c23)))<<(((t0.c58) NOT BETWEEN (t0.c30) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c61)OR(t0.c61)))AND(t0.c58)))OR(t0.c58)))AND(t0.c23)))<<(((t0.c58) NOT BETWEEN (t0.c30) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c61)OR(t0.c61)))AND(t0.c58)))OR(t0.c58)))AND(t0.c23)))<<(((t0.c58) NOT BETWEEN (t0.c30) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c1) ORDER BY 0.5804314658096748;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.5804314658096748);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c1) ORDER BY 0.5804314658096748;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.5804314658096748);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c1) ORDER BY 0.5804314658096748;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c82)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c82)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c82)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c82)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c82)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY);
SELECT * FROM vt0 CROSS JOIN t0 ON (((((vt0.c0, t0.c58, t0.c30))>=((vt0.c1, t0.c18, vt0.c0)))) BETWEEN ((t0.c82 IN ())) AND (CAST(t0.c23 AS NUMERIC))) WHERE (((t0.c58) NOT BETWEEN ((((t0.c61, t0.c0, t0.c18))<>((vt0.c0, -1.875118766E9, t0.c0)))) AND (t0.c23 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((t0.c58) NOT BETWEEN ((((t0.c61, t0.c0, t0.c18))!=((vt0.c0, -1.875118766E9, t0.c0)))) AND (t0.c23 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((vt0.c0, t0.c58, t0.c30))>=((vt0.c1, t0.c18, vt0.c0)))) BETWEEN ((t0.c82 IN ())) AND (CAST(t0.c23 AS NUMERIC))));
SELECT * FROM vt0 CROSS JOIN t0 ON (((((vt0.c0, t0.c58, t0.c30))>=((vt0.c1, t0.c18, vt0.c0)))) BETWEEN ((t0.c82 IN ())) AND (CAST(t0.c23 AS NUMERIC))) WHERE (((t0.c58) NOT BETWEEN ((((t0.c61, t0.c0, t0.c18))<>((vt0.c0, -1.875118766E9, t0.c0)))) AND (t0.c23 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((t0.c58) NOT BETWEEN ((((t0.c61, t0.c0, t0.c18))!=((vt0.c0, -1.875118766E9, t0.c0)))) AND (t0.c23 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((vt0.c0, t0.c58, t0.c30))>=((vt0.c1, t0.c18, vt0.c0)))) BETWEEN ((t0.c82 IN ())) AND (CAST(t0.c23 AS NUMERIC))));
SELECT * FROM vt0 CROSS JOIN t0 ON (((((vt0.c0, t0.c58, t0.c30))>=((vt0.c1, t0.c18, vt0.c0)))) BETWEEN ((t0.c82 IN ())) AND (CAST(t0.c23 AS NUMERIC))) WHERE (((t0.c58) NOT BETWEEN ((((t0.c61, t0.c0, t0.c18))<>((vt0.c0, -1.875118766E9, t0.c0)))) AND (t0.c23 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (CASE CAST(0.6265341808460941 AS NUMERIC)  WHEN ((vt0.c0) ISNULL) THEN IFNULL(vt0.c1, vt0.c1) ELSE (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(0.6265341808460941 AS NUMERIC)  WHEN ((vt0.c0) ISNULL) THEN IFNULL(vt0.c1, vt0.c1) ELSE (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE CAST(0.6265341808460941 AS NUMERIC)  WHEN ((vt0.c0) ISNULL) THEN IFNULL(vt0.c1, vt0.c1) ELSE (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(0.6265341808460941 AS NUMERIC)  WHEN ((vt0.c0) ISNULL) THEN IFNULL(vt0.c1, vt0.c1) ELSE (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE CAST(0.6265341808460941 AS NUMERIC)  WHEN ((vt0.c0) ISNULL) THEN IFNULL(vt0.c1, vt0.c1) ELSE (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((((((((vt0.c0)OR(t0.c23)))OR(t0.c58)))OR(t0.c61)))OR(t0.c18)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(t0.c23)))OR(t0.c58)))OR(t0.c61)))OR(t0.c18)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((((((((vt0.c0)OR(t0.c23)))OR(t0.c58)))OR(t0.c61)))OR(t0.c18)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(t0.c23)))OR(t0.c58)))OR(t0.c61)))OR(t0.c18)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((((((((vt0.c0)OR(t0.c23)))OR(t0.c58)))OR(t0.c61)))OR(t0.c18)) AS TEXT));
SELECT COUNT(*) FROM t0, vt0 WHERE (((LIKELIHOOD(DISTINCT t0.c30, 0.9855442840103797)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT t0.c30, 0.9855442840103797)) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((LIKELIHOOD(DISTINCT t0.c30, 0.9855442840103797)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT t0.c30, 0.9855442840103797)) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((LIKELIHOOD(DISTINCT t0.c30, 0.9855442840103797)) NOTNULL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (NOT (CAST(t0.c30 AS NUMERIC))) WHERE (TOTAL_CHANGES()) ORDER BY t0.c58, ((t0.c23)AND(vt0.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (NOT (CAST(t0.c30 AS NUMERIC))) ORDER BY t0.c58, ((t0.c23)AND(vt0.c1)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (NOT (CAST(t0.c30 AS NUMERIC))) WHERE (TOTAL_CHANGES()) ORDER BY t0.c58, ((t0.c23)AND(vt0.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (NOT (CAST(t0.c30 AS NUMERIC))) ORDER BY t0.c58, ((t0.c23)AND(vt0.c1)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (NOT (CAST(t0.c30 AS NUMERIC))) WHERE (TOTAL_CHANGES()) ORDER BY t0.c58, ((t0.c23)AND(vt0.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((((vt0.c1) BETWEEN (t0.c61) AND (t0.c18)))||(json_type(t0.c30))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (t0.c61) AND (t0.c18)))||(json_type(t0.c30)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((vt0.c1) BETWEEN (t0.c61) AND (t0.c18)))||(json_type(t0.c30))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (t0.c61) AND (t0.c18)))||(json_type(t0.c30)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((vt0.c1) BETWEEN (t0.c61) AND (t0.c18)))||(json_type(t0.c30))));
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((t0.c23)) AND (('64149883'))))%(CASE WHEN t0.c18 THEN vt0.c0 WHEN t0.c30 THEN t0.c18 WHEN t0.c23 THEN t0.c30 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((t0.c23)) AND (('64149883'))))%(CASE WHEN t0.c18 THEN vt0.c0 WHEN t0.c30 THEN t0.c18 WHEN t0.c23 THEN t0.c30 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((t0.c23)) AND (('64149883'))))%(CASE WHEN t0.c18 THEN vt0.c0 WHEN t0.c30 THEN t0.c18 WHEN t0.c23 THEN t0.c30 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((t0.c23)) AND (('64149883'))))%(CASE WHEN t0.c18 THEN vt0.c0 WHEN t0.c30 THEN t0.c18 WHEN t0.c23 THEN t0.c30 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((t0.c23)) AND (('64149883'))))%(CASE WHEN t0.c18 THEN vt0.c0 WHEN t0.c30 THEN t0.c18 WHEN t0.c23 THEN t0.c30 END)));
SELECT COUNT(*) FROM t0 WHERE (((t0.c23 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c23 IN ()) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c23 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c23 IN ()) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c23 IN ()) IN ()));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((((((((CASE WHEN t0.c18 THEN t0.c18 ELSE t0.c23 END)OR(((t0.c30) IS TRUE))))AND(0.3910367345681204)))OR((((0.6600126339070518)) BETWEEN ((t0.c30)) AND ((t0.c82))))))OR(((t0.c23)>>(t0.c82))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t0.c18 THEN t0.c18 ELSE t0.c23 END)OR(((t0.c30) IS TRUE))))AND(0.3910367345681204)))OR((((0.6600126339070518)) BETWEEN ((t0.c30)) AND ((t0.c82))))))OR(((t0.c23)>>(t0.c82))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((((((((CASE WHEN t0.c18 THEN t0.c18 ELSE t0.c23 END)OR(((t0.c30) IS TRUE))))AND(0.3910367345681204)))OR((((0.6600126339070518)) BETWEEN ((t0.c30)) AND ((t0.c82))))))OR(((t0.c23)>>(t0.c82))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t0.c18 THEN t0.c18 ELSE t0.c23 END)OR(((t0.c30) IS TRUE))))AND(0.3910367345681204)))OR((((0.6600126339070518)) BETWEEN ((t0.c30)) AND ((t0.c82))))))OR(((t0.c23)>>(t0.c82))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((((((((CASE WHEN t0.c18 THEN t0.c18 ELSE t0.c23 END)OR(((t0.c30) IS TRUE))))AND(0.3910367345681204)))OR((((0.6600126339070518)) BETWEEN ((t0.c30)) AND ((t0.c82))))))OR(((t0.c23)>>(t0.c82))))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c30)OR(t0.c0)))AND(vt0.c1)))OR(t0.c18)))AND(t0.c30))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c30)OR(t0.c0)))AND(vt0.c1)))OR(t0.c18)))AND(t0.c30))) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c30)OR(t0.c0)))AND(vt0.c1)))OR(t0.c18)))AND(t0.c30))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c30)OR(t0.c0)))AND(vt0.c1)))OR(t0.c18)))AND(t0.c30))) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c30)OR(t0.c0)))AND(vt0.c1)))OR(t0.c18)))AND(t0.c30))) ISNULL));
SELECT * FROM vt0 WHERE (LIKE(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE BINARY, '-'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE BINARY, '-')) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKE(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE BINARY, '-'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE BINARY, '-')) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKE(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)), vt0.c0 COLLATE BINARY, '-'));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)<=(t0.c0)))<<(((((t0.c18)AND(t0.c82)))OR(t0.c58))))) ORDER BY ((CAST(t0.c58 AS INTEGER))IS(((t0.c82) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(t0.c0)))<<(((((t0.c18)AND(t0.c82)))OR(t0.c58))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c58 AS INTEGER))IS(((t0.c82) IS FALSE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)<=(t0.c0)))<<(((((t0.c18)AND(t0.c82)))OR(t0.c58))))) ORDER BY ((CAST(t0.c58 AS INTEGER))IS(((t0.c82) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(t0.c0)))<<(((((t0.c18)AND(t0.c82)))OR(t0.c58))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c58 AS INTEGER))IS(((t0.c82) IS FALSE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)<=(t0.c0)))<<(((((t0.c18)AND(t0.c82)))OR(t0.c58))))) ORDER BY ((CAST(t0.c58 AS INTEGER))IS(((t0.c82) IS FALSE))) ASC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE ((t0.c23 COLLATE BINARY IN (SQLITE_COMPILEOPTION_GET(t0.c58), UNLIKELY(-1.127833962E9)))) ORDER BY ((0.19695021219430797) BETWEEN (0x61cc4218) AND (((((t0.c61)AND(t0.c30)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((t0.c23 COLLATE BINARY IN (SQLITE_COMPILEOPTION_GET(t0.c58), UNLIKELY(-1.127833962E9)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((0.19695021219430797) BETWEEN (0x61cc4218) AND (((((t0.c61)AND(t0.c30)))OR(vt0.c0)))));
SELECT * FROM t0, vt0 WHERE ((t0.c23 COLLATE BINARY IN (SQLITE_COMPILEOPTION_GET(t0.c58), UNLIKELY(-1.127833962E9)))) ORDER BY ((0.19695021219430797) BETWEEN (0x61cc4218) AND (((((t0.c61)AND(t0.c30)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((t0.c23 COLLATE BINARY IN (SQLITE_COMPILEOPTION_GET(t0.c58), UNLIKELY(-1.127833962E9)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((0.19695021219430797) BETWEEN (0x61cc4218) AND (((((t0.c61)AND(t0.c30)))OR(vt0.c0)))));
SELECT * FROM t0, vt0 WHERE ((t0.c23 COLLATE BINARY IN (SQLITE_COMPILEOPTION_GET(t0.c58), UNLIKELY(-1.127833962E9)))) ORDER BY ((0.19695021219430797) BETWEEN (0x61cc4218) AND (((((t0.c61)AND(t0.c30)))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS REAL));
SELECT * FROM vt0, t0 WHERE (((((((((((((t0.c61)OR(t0.c18)))AND(vt0.c0)))AND(CAST(t0.c82 AS REAL))))AND(CAST(NULL AS INTEGER))))AND((((t0.c30))>((t0.c82))))))OR((vt0.c0 IN ())))) ORDER BY (((~ (NULL)))*(((t0.c23) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c61)OR(t0.c18)))AND(vt0.c0)))AND(CAST(t0.c82 AS REAL))))AND(CAST(NULL AS INTEGER))))AND((((t0.c30))>((t0.c82))))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((~ (NULL)))*(((t0.c23) ISNULL))));
SELECT * FROM vt0, t0 WHERE (((((((((((((t0.c61)OR(t0.c18)))AND(vt0.c0)))AND(CAST(t0.c82 AS REAL))))AND(CAST(NULL AS INTEGER))))AND((((t0.c30))>((t0.c82))))))OR((vt0.c0 IN ())))) ORDER BY (((~ (NULL)))*(((t0.c23) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c61)OR(t0.c18)))AND(vt0.c0)))AND(CAST(t0.c82 AS REAL))))AND(CAST(NULL AS INTEGER))))AND((((t0.c30))>((t0.c82))))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((~ (NULL)))*(((t0.c23) ISNULL))));
SELECT * FROM vt0, t0 WHERE (((((((((((((t0.c61)OR(t0.c18)))AND(vt0.c0)))AND(CAST(t0.c82 AS REAL))))AND(CAST(NULL AS INTEGER))))AND((((t0.c30))>((t0.c82))))))OR((vt0.c0 IN ())))) ORDER BY (((~ (NULL)))*(((t0.c23) ISNULL)));
SELECT * FROM t0, vt0 WHERE (CAST(((t0.c58) BETWEEN (vt0.c1) AND (t0.c18)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c58) BETWEEN (vt0.c1) AND (t0.c18)) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(((t0.c58) BETWEEN (vt0.c1) AND (t0.c18)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c58) BETWEEN (vt0.c1) AND (t0.c18)) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(((t0.c58) BETWEEN (vt0.c1) AND (t0.c18)) AS REAL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c82 IN ())))=((((((t0.c23)AND(t0.c58)))AND(t0.c58)))))) ORDER BY (((t0.c58 IN (t0.c18)))>=(((t0.c58)IS NOT(t0.c30)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c82 IN ())))=((((((t0.c23)AND(t0.c58)))AND(t0.c58)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c58 IN (t0.c18)))>=(((t0.c58)IS NOT(t0.c30)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c82 IN ())))=((((((t0.c23)AND(t0.c58)))AND(t0.c58)))))) ORDER BY (((t0.c58 IN (t0.c18)))>=(((t0.c58)IS NOT(t0.c30)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c82 IN ())))=((((((t0.c23)AND(t0.c58)))AND(t0.c58)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c58 IN (t0.c18)))>=(((t0.c58)IS NOT(t0.c30)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c82 IN ())))=((((((t0.c23)AND(t0.c58)))AND(t0.c58)))))) ORDER BY (((t0.c58 IN (t0.c18)))>=(((t0.c58)IS NOT(t0.c30)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c58 AS INTEGER))*(CAST(t0.c18 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c58 AS INTEGER))*(CAST(t0.c18 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c58 AS INTEGER))*(CAST(t0.c18 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c58 AS INTEGER))*(CAST(t0.c18 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c58 AS INTEGER))*(CAST(t0.c18 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN (((vt0.c1) IS TRUE))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((+ (vt0.c1)))|(((((t0.c30)AND(vt0.c0)))AND(t0.c61)))) WHERE (((((CASE x'72aa'  WHEN t0.c61 THEN '-2040512276' WHEN vt0.c1 THEN t0.c61 WHEN t0.c30 THEN t0.c58 ELSE 0xffffffffbb117882 END)AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE t0.c0  WHEN t0.c30 THEN t0.c82 ELSE t0.c30 END))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE x'72aa'  WHEN t0.c61 THEN '-2040512276' WHEN vt0.c1 THEN t0.c61 WHEN t0.c30 THEN t0.c58 ELSE 0xffffffffbb117882 END)AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE t0.c0  WHEN t0.c30 THEN t0.c82 ELSE t0.c30 END))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((+ (vt0.c1)))|(((((t0.c30)AND(vt0.c0)))AND(t0.c61)))) ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((+ (vt0.c1)))|(((((t0.c30)AND(vt0.c0)))AND(t0.c61)))) WHERE (((((CASE x'72aa'  WHEN t0.c61 THEN '-2040512276' WHEN vt0.c1 THEN t0.c61 WHEN t0.c30 THEN t0.c58 ELSE 0xffffffffbb117882 END)AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE t0.c0  WHEN t0.c30 THEN t0.c82 ELSE t0.c30 END))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE x'72aa'  WHEN t0.c61 THEN '-2040512276' WHEN vt0.c1 THEN t0.c61 WHEN t0.c30 THEN t0.c58 ELSE 0xffffffffbb117882 END)AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE t0.c0  WHEN t0.c30 THEN t0.c82 ELSE t0.c30 END))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((+ (vt0.c1)))|(((((t0.c30)AND(vt0.c0)))AND(t0.c61)))) ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((+ (vt0.c1)))|(((((t0.c30)AND(vt0.c0)))AND(t0.c61)))) WHERE (((((CASE x'72aa'  WHEN t0.c61 THEN '-2040512276' WHEN vt0.c1 THEN t0.c61 WHEN t0.c30 THEN t0.c58 ELSE 0xffffffffbb117882 END)AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE t0.c0  WHEN t0.c30 THEN t0.c82 ELSE t0.c30 END))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)||(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)||(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)||(vt0.c0)) IN ()));
SELECT * FROM t0 WHERE (((CAST(t0.c18 AS REAL)) IS FALSE)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c18 AS REAL)) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY x''  NULLS FIRST);
SELECT * FROM t0 WHERE (((CAST(t0.c18 AS REAL)) IS FALSE)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c18 AS REAL)) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY x''  NULLS FIRST);
SELECT * FROM t0 WHERE (((CAST(t0.c18 AS REAL)) IS FALSE)) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT ((((t0.c61)AND(t0.c23)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((((t0.c61)AND(t0.c23)))OR(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT ((((t0.c61)AND(t0.c23)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((((t0.c61)AND(t0.c23)))OR(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT ((((t0.c61)AND(t0.c23)))OR(t0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((CAST(t0.c18 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c18 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((CAST(t0.c18 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c18 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((CAST(t0.c18 AS BLOB) IN ()));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (- (t0.c82)) WHERE (((((((((t0.c30 COLLATE RTRIM)AND(((((((((t0.c58)OR(t0.c58)))AND(t0.c18)))OR(t0.c18)))OR(0.7988840199862876)))))AND(CAST(t0.c61 AS REAL))))OR(CASE t0.c30  WHEN vt0.c0 THEN '\r' WHEN t0.c0 THEN t0.c0 WHEN t0.c58 THEN t0.c30 ELSE t0.c30 END)))AND(NULL))) ORDER BY t0.c30 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c30 COLLATE RTRIM)AND(((((((((t0.c58)OR(t0.c58)))AND(t0.c18)))OR(t0.c18)))OR(0.7988840199862876)))))AND(CAST(t0.c61 AS REAL))))OR(CASE t0.c30  WHEN vt0.c0 THEN '\r' WHEN t0.c0 THEN t0.c0 WHEN t0.c58 THEN t0.c30 ELSE t0.c30 END)))AND(NULL))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (- (t0.c82)) ORDER BY t0.c30 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (- (t0.c82)) WHERE (((((((((t0.c30 COLLATE RTRIM)AND(((((((((t0.c58)OR(t0.c58)))AND(t0.c18)))OR(t0.c18)))OR(0.7988840199862876)))))AND(CAST(t0.c61 AS REAL))))OR(CASE t0.c30  WHEN vt0.c0 THEN '\r' WHEN t0.c0 THEN t0.c0 WHEN t0.c58 THEN t0.c30 ELSE t0.c30 END)))AND(NULL))) ORDER BY t0.c30 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c30 COLLATE RTRIM)AND(((((((((t0.c58)OR(t0.c58)))AND(t0.c18)))OR(t0.c18)))OR(0.7988840199862876)))))AND(CAST(t0.c61 AS REAL))))OR(CASE t0.c30  WHEN vt0.c0 THEN '\r' WHEN t0.c0 THEN t0.c0 WHEN t0.c58 THEN t0.c30 ELSE t0.c30 END)))AND(NULL))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (- (t0.c82)) ORDER BY t0.c30 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (- (t0.c82)) WHERE (((((((((t0.c30 COLLATE RTRIM)AND(((((((((t0.c58)OR(t0.c58)))AND(t0.c18)))OR(t0.c18)))OR(0.7988840199862876)))))AND(CAST(t0.c61 AS REAL))))OR(CASE t0.c30  WHEN vt0.c0 THEN '\r' WHEN t0.c0 THEN t0.c0 WHEN t0.c58 THEN t0.c30 ELSE t0.c30 END)))AND(NULL))) ORDER BY t0.c30 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), COALESCE(vt0.c0, vt0.c1, vt0.c0, vt0.c0), CASE WHEN vt0.c1 THEN vt0.c0 END)) AND (((((vt0.c0))<=((vt0.c0))), CAST('-1170608752' AS TEXT), (+ ('\K蓂0!Jh]㗓')))))) ORDER BY ((CAST(vt0.c0 AS REAL))%((~ (vt0.c1)))) ASC  NULLS LAST, x'' DESC  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))-(IFNULL(vt0.c0, vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), COALESCE(vt0.c0, vt0.c1, vt0.c0, vt0.c0), CASE WHEN vt0.c1 THEN vt0.c0 END)) AND (((((vt0.c0))<=((vt0.c0))), CAST('-1170608752' AS TEXT), (+ ('\K蓂0!Jh]㗓')))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))%((~ (vt0.c1)))) ASC  NULLS LAST, x'' DESC  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))-(IFNULL(vt0.c0, vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), COALESCE(vt0.c0, vt0.c1, vt0.c0, vt0.c0), CASE WHEN vt0.c1 THEN vt0.c0 END)) AND (((((vt0.c0))<=((vt0.c0))), CAST('-1170608752' AS TEXT), (+ ('\K蓂0!Jh]㗓')))))) ORDER BY ((CAST(vt0.c0 AS REAL))%((~ (vt0.c1)))) ASC  NULLS LAST, x'' DESC  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))-(IFNULL(vt0.c0, vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), COALESCE(vt0.c0, vt0.c1, vt0.c0, vt0.c0), CASE WHEN vt0.c1 THEN vt0.c0 END)) AND (((((vt0.c0))<=((vt0.c0))), CAST('-1170608752' AS TEXT), (+ ('\K蓂0!Jh]㗓')))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))%((~ (vt0.c1)))) ASC  NULLS LAST, x'' DESC  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))-(IFNULL(vt0.c0, vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), COALESCE(vt0.c0, vt0.c1, vt0.c0, vt0.c0), CASE WHEN vt0.c1 THEN vt0.c0 END)) AND (((((vt0.c0))<=((vt0.c0))), CAST('-1170608752' AS TEXT), (+ ('\K蓂0!Jh]㗓')))))) ORDER BY ((CAST(vt0.c0 AS REAL))%((~ (vt0.c1)))) ASC  NULLS LAST, x'' DESC  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))-(IFNULL(vt0.c0, vt0.c0))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((CAST(t0.c58 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c58 AS TEXT) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((CAST(t0.c58 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c58 AS TEXT) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((CAST(t0.c58 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1))))<>(((vt0.c0) BETWEEN (0.502406875731783) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1))))!=(((vt0.c0) BETWEEN (0.502406875731783) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1))))<>(((vt0.c0) BETWEEN (0.502406875731783) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1))))!=(((vt0.c0) BETWEEN (0.502406875731783) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1))))<>(((vt0.c0) BETWEEN (0.502406875731783) AND (vt0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c82)GLOB(t0.c82))) BETWEEN (CASE WHEN t0.c0 THEN '?/Gz+G' ELSE t0.c58 END) AND (CAST(t0.c30 AS INTEGER))) WHERE (CAST((((t0.c61, t0.c58, 0X4cad79cc))<=((t0.c82, vt0.c0, t0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c61, t0.c58, 0x4cad79cc))<=((t0.c82, vt0.c0, t0.c0))) AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c82)GLOB(t0.c82))) BETWEEN (CASE WHEN t0.c0 THEN '?/Gz+G' ELSE t0.c58 END) AND (CAST(t0.c30 AS INTEGER))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c82)GLOB(t0.c82))) BETWEEN (CASE WHEN t0.c0 THEN '?/Gz+G' ELSE t0.c58 END) AND (CAST(t0.c30 AS INTEGER))) WHERE (CAST((((t0.c61, t0.c58, 0X4cad79cc))<=((t0.c82, vt0.c0, t0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c61, t0.c58, 0x4cad79cc))<=((t0.c82, vt0.c0, t0.c0))) AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c82)GLOB(t0.c82))) BETWEEN (CASE WHEN t0.c0 THEN '?/Gz+G' ELSE t0.c58 END) AND (CAST(t0.c30 AS INTEGER))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c82)GLOB(t0.c82))) BETWEEN (CASE WHEN t0.c0 THEN '?/Gz+G' ELSE t0.c58 END) AND (CAST(t0.c30 AS INTEGER))) WHERE (CAST((((t0.c61, t0.c58, 0X4cad79cc))<=((t0.c82, vt0.c0, t0.c0))) AS TEXT));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c18)>(t0.c58)) IN ())) ORDER BY ((t0.c23)>((t0.c61 IN ())))  NULLS FIRST, (((t0.c61 IN ()))OR(CAST(t0.c0 AS TEXT)))  NULLS LAST, ((vt0.c0)==((((t0.c30)) NOT BETWEEN ((t0.c61)) AND ((t0.c23))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c18)>(t0.c58)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c23)>((t0.c61 IN ())))  NULLS FIRST, (((t0.c61 IN ()))OR(CAST(t0.c0 AS TEXT)))  NULLS LAST, ((vt0.c0)=((((t0.c30)) NOT BETWEEN ((t0.c61)) AND ((t0.c23))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c18)>(t0.c58)) IN ())) ORDER BY ((t0.c23)>((t0.c61 IN ())))  NULLS FIRST, (((t0.c61 IN ()))OR(CAST(t0.c0 AS TEXT)))  NULLS LAST, ((vt0.c0)==((((t0.c30)) NOT BETWEEN ((t0.c61)) AND ((t0.c23))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c18)>(t0.c58)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c23)>((t0.c61 IN ())))  NULLS FIRST, (((t0.c61 IN ()))OR(CAST(t0.c0 AS TEXT)))  NULLS LAST, ((vt0.c0)=((((t0.c30)) NOT BETWEEN ((t0.c61)) AND ((t0.c23))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c18)>(t0.c58)) IN ())) ORDER BY ((t0.c23)>((t0.c61 IN ())))  NULLS FIRST, (((t0.c61 IN ()))OR(CAST(t0.c0 AS TEXT)))  NULLS LAST, ((vt0.c0)==((((t0.c30)) NOT BETWEEN ((t0.c61)) AND ((t0.c23))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS BLOB) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS BLOB) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS REAL));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c30) NOT NULL))OR((('-1893205067') NOT BETWEEN (t0.c61) AND (NULL)))))OR(''))) ORDER BY CASE t0.c61  WHEN t0.c58 THEN t0.c82 WHEN t0.c18 THEN t0.c82 WHEN vt0.c0 THEN t0.c0 ELSE t0.c30 END COLLATE NOCASE ASC, CASE vt0.c0  WHEN CASE WHEN t0.c82 THEN t0.c61 END THEN CASE WHEN t0.c82 THEN t0.c30 ELSE t0.c82 END ELSE (((t0.c61))=((t0.c58))) END DESC, CASE WHEN (((t0.c82))<=((t0.c58))) THEN ((vt0.c0)==(t0.c18)) ELSE ((t0.c23) IS FALSE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c30) NOT NULL))OR((('-1893205067') NOT BETWEEN (t0.c61) AND (NULL)))))OR(''))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE t0.c61  WHEN t0.c58 THEN t0.c82 WHEN t0.c18 THEN t0.c82 WHEN vt0.c0 THEN t0.c0 ELSE t0.c30 END COLLATE NOCASE ASC, CASE vt0.c0  WHEN CASE WHEN t0.c82 THEN t0.c61 END THEN CASE WHEN t0.c82 THEN t0.c30 ELSE t0.c82 END ELSE (((t0.c61))=((t0.c58))) END DESC, CASE WHEN (((t0.c82))<=((t0.c58))) THEN ((vt0.c0)=(t0.c18)) ELSE ((t0.c23) IS FALSE) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c30) NOT NULL))OR((('-1893205067') NOT BETWEEN (t0.c61) AND (NULL)))))OR(''))) ORDER BY CASE t0.c61  WHEN t0.c58 THEN t0.c82 WHEN t0.c18 THEN t0.c82 WHEN vt0.c0 THEN t0.c0 ELSE t0.c30 END COLLATE NOCASE ASC, CASE vt0.c0  WHEN CASE WHEN t0.c82 THEN t0.c61 END THEN CASE WHEN t0.c82 THEN t0.c30 ELSE t0.c82 END ELSE (((t0.c61))=((t0.c58))) END DESC, CASE WHEN (((t0.c82))<=((t0.c58))) THEN ((vt0.c0)==(t0.c18)) ELSE ((t0.c23) IS FALSE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c30) NOT NULL))OR((('-1893205067') NOT BETWEEN (t0.c61) AND (NULL)))))OR(''))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE t0.c61  WHEN t0.c58 THEN t0.c82 WHEN t0.c18 THEN t0.c82 WHEN vt0.c0 THEN t0.c0 ELSE t0.c30 END COLLATE NOCASE ASC, CASE vt0.c0  WHEN CASE WHEN t0.c82 THEN t0.c61 END THEN CASE WHEN t0.c82 THEN t0.c30 ELSE t0.c82 END ELSE (((t0.c61))=((t0.c58))) END DESC, CASE WHEN (((t0.c82))<=((t0.c58))) THEN ((vt0.c0)=(t0.c18)) ELSE ((t0.c23) IS FALSE) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c30) NOT NULL))OR((('-1893205067') NOT BETWEEN (t0.c61) AND (NULL)))))OR(''))) ORDER BY CASE t0.c61  WHEN t0.c58 THEN t0.c82 WHEN t0.c18 THEN t0.c82 WHEN vt0.c0 THEN t0.c0 ELSE t0.c30 END COLLATE NOCASE ASC, CASE vt0.c0  WHEN CASE WHEN t0.c82 THEN t0.c61 END THEN CASE WHEN t0.c82 THEN t0.c30 ELSE t0.c82 END ELSE (((t0.c61))=((t0.c58))) END DESC, CASE WHEN (((t0.c82))<=((t0.c58))) THEN ((vt0.c0)==(t0.c18)) ELSE ((t0.c23) IS FALSE) END DESC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (CAST(t0.c18 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c18 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(t0.c18 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c18 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(t0.c18 COLLATE NOCASE AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE COLLATE RTRIM) ORDER BY json_quote(((vt0.c1) BETWEEN (vt0.c1) AND (x'e8a261f8')))  NULLS FIRST, LIKE(IFNULL(DISTINCT vt0.c0, vt0.c1), ((vt0.c0) NOTNULL), '丛')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY json_quote(((vt0.c1) BETWEEN (vt0.c1) AND (x'e8a261f8')))  NULLS FIRST, LIKE(IFNULL(DISTINCT vt0.c0, vt0.c1), ((vt0.c0) NOTNULL), '丛')  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE COLLATE RTRIM) ORDER BY json_quote(((vt0.c1) BETWEEN (vt0.c1) AND (x'e8a261f8')))  NULLS FIRST, LIKE(IFNULL(DISTINCT vt0.c0, vt0.c1), ((vt0.c0) NOTNULL), '丛')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY json_quote(((vt0.c1) BETWEEN (vt0.c1) AND (x'e8a261f8')))  NULLS FIRST, LIKE(IFNULL(DISTINCT vt0.c0, vt0.c1), ((vt0.c0) NOTNULL), '丛')  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE COLLATE RTRIM) ORDER BY json_quote(((vt0.c1) BETWEEN (vt0.c1) AND (x'e8a261f8')))  NULLS FIRST, LIKE(IFNULL(DISTINCT vt0.c0, vt0.c1), ((vt0.c0) NOTNULL), '丛')  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((((t0.c30, vt0.c1, t0.c58)) BETWEEN (((vt0.c0 IN ()), (NOT (t0.c82)), ((NULL) BETWEEN (t0.c23) AND (t0.c0)))) AND ((((t0.c18) IS TRUE), 6.83615601E8, ((t0.c58) IS FALSE))))) ORDER BY x'3963fa59'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c30, vt0.c1, t0.c58)) BETWEEN (((vt0.c0 IN ()), (NOT (t0.c82)), ((NULL) BETWEEN (t0.c23) AND (t0.c0)))) AND ((((t0.c18) IS TRUE), 6.83615601E8, ((t0.c58) IS FALSE))))) IS TRUE)  as count FROM vt0, t0 ORDER BY x'3963fa59'  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((t0.c30, vt0.c1, t0.c58)) BETWEEN (((vt0.c0 IN ()), (NOT (t0.c82)), ((NULL) BETWEEN (t0.c23) AND (t0.c0)))) AND ((((t0.c18) IS TRUE), 6.83615601E8, ((t0.c58) IS FALSE))))) ORDER BY x'3963fa59'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c30, vt0.c1, t0.c58)) BETWEEN (((vt0.c0 IN ()), (NOT (t0.c82)), ((NULL) BETWEEN (t0.c23) AND (t0.c0)))) AND ((((t0.c18) IS TRUE), 6.83615601E8, ((t0.c58) IS FALSE))))) IS TRUE)  as count FROM vt0, t0 ORDER BY x'3963fa59'  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((t0.c30, vt0.c1, t0.c58)) BETWEEN (((vt0.c0 IN ()), (NOT (t0.c82)), ((NULL) BETWEEN (t0.c23) AND (t0.c0)))) AND ((((t0.c18) IS TRUE), 6.83615601E8, ((t0.c58) IS FALSE))))) ORDER BY x'3963fa59'  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((''))<((IFNULL(t0.c23, t0.c18)))));
SELECT SUM(count) FROM (SELECT (((((''))<((IFNULL(t0.c23, t0.c18))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((''))<((IFNULL(t0.c23, t0.c18)))));
SELECT SUM(count) FROM (SELECT (((((''))<((IFNULL(t0.c23, t0.c18))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((''))<((IFNULL(t0.c23, t0.c18)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((LOWER(t0.c30))AND(((((((((t0.c23)AND(t0.c58)))OR(t0.c0)))AND(t0.c18)))AND(t0.c30)))))AND(TRIM(DISTINCT vt0.c1, t0.c82))))AND(NULL)))AND(((((((((0.36619766787492514)AND(vt0.c0)))AND(t0.c82)))AND(0.5668845726643245)))OR(t0.c61)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LOWER(t0.c30))AND(((((((((t0.c23)AND(t0.c58)))OR(t0.c0)))AND(t0.c18)))AND(t0.c30)))))AND(TRIM(DISTINCT vt0.c1, t0.c82))))AND(NULL)))AND(((((((((0.36619766787492514)AND(vt0.c0)))AND(t0.c82)))AND(0.5668845726643245)))OR(t0.c61))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((LOWER(t0.c30))AND(((((((((t0.c23)AND(t0.c58)))OR(t0.c0)))AND(t0.c18)))AND(t0.c30)))))AND(TRIM(DISTINCT vt0.c1, t0.c82))))AND(NULL)))AND(((((((((0.36619766787492514)AND(vt0.c0)))AND(t0.c82)))AND(0.5668845726643245)))OR(t0.c61)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LOWER(t0.c30))AND(((((((((t0.c23)AND(t0.c58)))OR(t0.c0)))AND(t0.c18)))AND(t0.c30)))))AND(TRIM(DISTINCT vt0.c1, t0.c82))))AND(NULL)))AND(((((((((0.36619766787492514)AND(vt0.c0)))AND(t0.c82)))AND(0.5668845726643245)))OR(t0.c61))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((LOWER(t0.c30))AND(((((((((t0.c23)AND(t0.c58)))OR(t0.c0)))AND(t0.c18)))AND(t0.c30)))))AND(TRIM(DISTINCT vt0.c1, t0.c82))))AND(NULL)))AND(((((((((0.36619766787492514)AND(vt0.c0)))AND(t0.c82)))AND(0.5668845726643245)))OR(t0.c61)))));
SELECT COUNT(*) FROM t0 NOT INDEXED NATURAL JOIN vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NOT INDEXED NATURAL JOIN vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NOT INDEXED NATURAL JOIN vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0, t0 WHERE ('㰒8') ORDER BY CASE CAST(t0.c30 AS REAL)  WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c30) IS TRUE) WHEN (t0.c82 IN (NULL, t0.c82)) THEN 'G<' WHEN ((((t0.c30)AND(t0.c0)))OR(t0.c0)) THEN ((((vt0.c1)AND(t0.c82)))AND(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (('㰒8') IS TRUE)  as count FROM vt0, t0 ORDER BY CASE CAST(t0.c30 AS REAL)  WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c30) IS TRUE) WHEN (t0.c82 IN (NULL, t0.c82)) THEN 'G<' WHEN ((((t0.c30)AND(t0.c0)))OR(t0.c0)) THEN ((((vt0.c1)AND(t0.c82)))AND(vt0.c1)) END DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ('㰒8') ORDER BY CASE CAST(t0.c30 AS REAL)  WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c30) IS TRUE) WHEN (t0.c82 IN (NULL, t0.c82)) THEN 'G<' WHEN ((((t0.c30)AND(t0.c0)))OR(t0.c0)) THEN ((((vt0.c1)AND(t0.c82)))AND(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (('㰒8') IS TRUE)  as count FROM vt0, t0 ORDER BY CASE CAST(t0.c30 AS REAL)  WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c30) IS TRUE) WHEN (t0.c82 IN (NULL, t0.c82)) THEN 'G<' WHEN ((((t0.c30)AND(t0.c0)))OR(t0.c0)) THEN ((((vt0.c1)AND(t0.c82)))AND(vt0.c1)) END DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ('㰒8') ORDER BY CASE CAST(t0.c30 AS REAL)  WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c30) IS TRUE) WHEN (t0.c82 IN (NULL, t0.c82)) THEN 'G<' WHEN ((((t0.c30)AND(t0.c0)))OR(t0.c0)) THEN ((((vt0.c1)AND(t0.c82)))AND(vt0.c1)) END DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c58)GLOB(t0.c23)))!=(t0.c82)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c58)GLOB(t0.c23)))<>(t0.c82))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c58)GLOB(t0.c23)))!=(t0.c82)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c58)GLOB(t0.c23)))<>(t0.c82))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c58)GLOB(t0.c23)))!=(t0.c82)));
SELECT COUNT(*) FROM vt0 WHERE (0.3287767470047691);
SELECT SUM(count) FROM (SELECT ALL ((0.3287767470047691) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.3287767470047691);
SELECT SUM(count) FROM (SELECT ALL ((0.3287767470047691) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.3287767470047691);
SELECT COUNT(*) FROM vt0, t0 WHERE ((- (t0.c58 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c58 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((- (t0.c58 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c58 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((- (t0.c58 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i64 WHERE ('-664052101') ORDER BY '237230871', (NOT (json_type(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-664052101') IS TRUE)  as count FROM t0 INDEXED BY i64 ORDER BY '237230871', (NOT (json_type(t0.c0))) ASC);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i64 WHERE ('-664052101') ORDER BY '237230871', (NOT (json_type(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-664052101') IS TRUE)  as count FROM t0 INDEXED BY i64 ORDER BY '237230871', (NOT (json_type(t0.c0))) ASC);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i64 WHERE ('-664052101') ORDER BY '237230871', (NOT (json_type(t0.c0))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c18 COLLATE BINARY) BETWEEN ('') AND (CASE t0.c82  WHEN t0.c58 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((t0.c18 COLLATE BINARY) BETWEEN ('') AND (CASE t0.c82  WHEN t0.c58 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c18 COLLATE BINARY) BETWEEN ('') AND (CASE t0.c82  WHEN t0.c58 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((t0.c18 COLLATE BINARY) BETWEEN ('') AND (CASE t0.c82  WHEN t0.c58 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c18 COLLATE BINARY) BETWEEN ('') AND (CASE t0.c82  WHEN t0.c58 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY ABS(((t0.c58)-(NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ABS(((t0.c58)-(NULL))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY ABS(((t0.c58)-(NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ABS(((t0.c58)-(NULL))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY ABS(((t0.c58)-(NULL))) ASC;
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (~ ((~ (t0.c61)))) WHERE ((((t0.c18 IN ()))<((((t0.c58, vt0.c1, t0.c23)) BETWEEN ((t0.c61, t0.c30, vt0.c1)) AND ((t0.c0, t0.c23, vt0.c1)))))) ORDER BY CAST((~ (t0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c18 IN ()))<((((t0.c58, vt0.c1, t0.c23)) BETWEEN ((t0.c61, t0.c30, vt0.c1)) AND ((t0.c0, t0.c23, vt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (~ ((~ (t0.c61)))) ORDER BY CAST((~ (t0.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (~ ((~ (t0.c61)))) WHERE ((((t0.c18 IN ()))<((((t0.c58, vt0.c1, t0.c23)) BETWEEN ((t0.c61, t0.c30, vt0.c1)) AND ((t0.c0, t0.c23, vt0.c1)))))) ORDER BY CAST((~ (t0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c18 IN ()))<((((t0.c58, vt0.c1, t0.c23)) BETWEEN ((t0.c61, t0.c30, vt0.c1)) AND ((t0.c0, t0.c23, vt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (~ ((~ (t0.c61)))) ORDER BY CAST((~ (t0.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (~ ((~ (t0.c61)))) WHERE ((((t0.c18 IN ()))<((((t0.c58, vt0.c1, t0.c23)) BETWEEN ((t0.c61, t0.c30, vt0.c1)) AND ((t0.c0, t0.c23, vt0.c1)))))) ORDER BY CAST((~ (t0.c0)) AS REAL)  NULLS FIRST;
SELECT * FROM t0 WHERE (((CASE t0.c82  WHEN t0.c58 THEN t0.c58 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c82  WHEN t0.c58 THEN t0.c58 END) ISNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE t0.c82  WHEN t0.c58 THEN t0.c58 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c82  WHEN t0.c58 THEN t0.c58 END) ISNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE t0.c82  WHEN t0.c58 THEN t0.c58 END) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((- (vt0.c1)) IN ())) ORDER BY ((((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS REAL))), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS REAL))), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c1) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((- (vt0.c1)) IN ())) ORDER BY ((((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS REAL))), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS REAL))), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c1) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((- (vt0.c1)) IN ())) ORDER BY ((((vt0.c1)AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS REAL))), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND(((vt0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE WHEN CAST(t0.c61 AS TEXT) THEN 0.36413741802055544 WHEN t0.c18 THEN ((t0.c23)>(t0.c23)) WHEN TYPEOF(DISTINCT x'') THEN ((t0.c18) IS TRUE) WHEN t0.c61 THEN 0.4294541601041143 WHEN ((t0.c82)%(t0.c23)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c61 AS TEXT) THEN 0.36413741802055544 WHEN t0.c18 THEN ((t0.c23)>(t0.c23)) WHEN TYPEOF(DISTINCT x'') THEN ((t0.c18) IS TRUE) WHEN t0.c61 THEN 0.4294541601041143 WHEN ((t0.c82)%(t0.c23)) THEN NULL END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN CAST(t0.c61 AS TEXT) THEN 0.36413741802055544 WHEN t0.c18 THEN ((t0.c23)>(t0.c23)) WHEN TYPEOF(DISTINCT x'') THEN ((t0.c18) IS TRUE) WHEN t0.c61 THEN 0.4294541601041143 WHEN ((t0.c82)%(t0.c23)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c61 AS TEXT) THEN 0.36413741802055544 WHEN t0.c18 THEN ((t0.c23)>(t0.c23)) WHEN TYPEOF(DISTINCT x'') THEN ((t0.c18) IS TRUE) WHEN t0.c61 THEN 0.4294541601041143 WHEN ((t0.c82)%(t0.c23)) THEN NULL END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN CAST(t0.c61 AS TEXT) THEN 0.36413741802055544 WHEN t0.c18 THEN ((t0.c23)>(t0.c23)) WHEN TYPEOF(DISTINCT x'') THEN ((t0.c18) IS TRUE) WHEN t0.c61 THEN 0.4294541601041143 WHEN ((t0.c82)%(t0.c23)) THEN NULL END);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c23) ISNULL))&(((t0.c82) BETWEEN (t0.c23) AND (t0.c23))))) ORDER BY ((UNLIKELY(t0.c61))<>('-222061124'));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c23) ISNULL))&(((t0.c82) BETWEEN (t0.c23) AND (t0.c23))))) IS TRUE)  as count FROM t0 ORDER BY ((UNLIKELY(t0.c61))<>('-222061124')));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c23) ISNULL))&(((t0.c82) BETWEEN (t0.c23) AND (t0.c23))))) ORDER BY ((UNLIKELY(t0.c61))<>('-222061124'));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c23) ISNULL))&(((t0.c82) BETWEEN (t0.c23) AND (t0.c23))))) IS TRUE)  as count FROM t0 ORDER BY ((UNLIKELY(t0.c61))<>('-222061124')));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c23) ISNULL))&(((t0.c82) BETWEEN (t0.c23) AND (t0.c23))))) ORDER BY ((UNLIKELY(t0.c61))<>('-222061124'));
SELECT COUNT(*) FROM t0 WHERE (t0.c23);
SELECT SUM(count) FROM (SELECT ((t0.c23) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c23);
SELECT SUM(count) FROM (SELECT ((t0.c23) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c23);
SELECT * FROM t0, vt0 WHERE (((((((t0.c61) NOTNULL))AND(CASE 0.6681235671802803  WHEN t0.c30 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c18 THEN t0.c0 ELSE vt0.c1 END)))AND(ABS(DISTINCT t0.c82))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c61) NOTNULL))AND(CASE 0.6681235671802803  WHEN t0.c30 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c18 THEN t0.c0 ELSE vt0.c1 END)))AND(ABS(DISTINCT t0.c82)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((t0.c61) NOTNULL))AND(CASE 0.6681235671802803  WHEN t0.c30 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c18 THEN t0.c0 ELSE vt0.c1 END)))AND(ABS(DISTINCT t0.c82))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c61) NOTNULL))AND(CASE 0.6681235671802803  WHEN t0.c30 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c18 THEN t0.c0 ELSE vt0.c1 END)))AND(ABS(DISTINCT t0.c82)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((t0.c61) NOTNULL))AND(CASE 0.6681235671802803  WHEN t0.c30 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c18 THEN t0.c0 ELSE vt0.c1 END)))AND(ABS(DISTINCT t0.c82))));
SELECT * FROM t0, vt0 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((NOT (NULL)));
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c58)AND('-1006445334')))AND(t0.c82)))IS(TYPEOF(DISTINCT 'C4'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c58)AND('-1006445334')))AND(t0.c82)))IS(TYPEOF(DISTINCT 'C4')))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c58)AND('-1006445334')))AND(t0.c82)))IS(TYPEOF(DISTINCT 'C4'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c58)AND('-1006445334')))AND(t0.c82)))IS(TYPEOF(DISTINCT 'C4')))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c58)AND('-1006445334')))AND(t0.c82)))IS(TYPEOF(DISTINCT 'C4'))));
SELECT * FROM vt0 WHERE (CASE WHEN ((0.5184826469707096)&(vt0.c1)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY vt0.c1  NULLS LAST, (((((((vt0.c0))>((vt0.c0))))OR(vt0.c1 COLLATE BINARY)))OR(NULL)), ((((vt0.c0)||(vt0.c0)))>>(((vt0.c1)LIKE(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.5184826469707096)&(vt0.c1)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST, (((((((vt0.c0))>((vt0.c0))))OR(vt0.c1 COLLATE BINARY)))OR(NULL)), ((((vt0.c0)||(vt0.c0)))>>(((vt0.c1)LIKE(vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ((0.5184826469707096)&(vt0.c1)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY vt0.c1  NULLS LAST, (((((((vt0.c0))>((vt0.c0))))OR(vt0.c1 COLLATE BINARY)))OR(NULL)), ((((vt0.c0)||(vt0.c0)))>>(((vt0.c1)LIKE(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.5184826469707096)&(vt0.c1)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST, (((((((vt0.c0))>((vt0.c0))))OR(vt0.c1 COLLATE BINARY)))OR(NULL)), ((((vt0.c0)||(vt0.c0)))>>(((vt0.c1)LIKE(vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ((0.5184826469707096)&(vt0.c1)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY vt0.c1  NULLS LAST, (((((((vt0.c0))>((vt0.c0))))OR(vt0.c1 COLLATE BINARY)))OR(NULL)), ((((vt0.c0)||(vt0.c0)))>>(((vt0.c1)LIKE(vt0.c1)))) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS FIRST, vt0.c0;
SELECT ALL * FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c1, vt0.c0))OR((((vt0.c0))<((vt0.c1)))))) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT vt0.c1, vt0.c0))OR((((vt0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c1, vt0.c0))OR((((vt0.c0))<((vt0.c1)))))) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT vt0.c1, vt0.c0))OR((((vt0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c1, vt0.c0))OR((((vt0.c0))<((vt0.c1)))))) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (NULL COLLATE BINARY) ORDER BY (+ (((t0.c82) NOT BETWEEN (t0.c61) AND (t0.c58))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (((t0.c82) NOT BETWEEN (t0.c61) AND (t0.c58))))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (NULL COLLATE BINARY) ORDER BY (+ (((t0.c82) NOT BETWEEN (t0.c61) AND (t0.c58))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (((t0.c82) NOT BETWEEN (t0.c61) AND (t0.c58))))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (NULL COLLATE BINARY) ORDER BY (+ (((t0.c82) NOT BETWEEN (t0.c61) AND (t0.c58))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)AND(((vt0.c1)<(NULL)))))OR(CAST(vt0.c1 AS BLOB))))AND(CASE vt0.c1  WHEN x'' THEN NULL END)))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND ((vt0.c0 IN ())))  NULLS FIRST, CASE WHEN (+ (vt0.c0)) THEN '0.3287767470047691' WHEN (vt0.c1 IN ()) THEN (vt0.c1 IN ()) WHEN (NOT (vt0.c1)) THEN ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) ELSE (+ (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)AND(((vt0.c1)<(NULL)))))OR(CAST(vt0.c1 AS BLOB))))AND(CASE vt0.c1  WHEN x'' THEN NULL END)))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND ((vt0.c0 IN ())))  NULLS FIRST, CASE WHEN (+ (vt0.c0)) THEN '0.3287767470047691' WHEN (vt0.c1 IN ()) THEN (vt0.c1 IN ()) WHEN (NOT (vt0.c1)) THEN ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) ELSE (+ (vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)AND(((vt0.c1)<(NULL)))))OR(CAST(vt0.c1 AS BLOB))))AND(CASE vt0.c1  WHEN x'' THEN NULL END)))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND ((vt0.c0 IN ())))  NULLS FIRST, CASE WHEN (+ (vt0.c0)) THEN '0.3287767470047691' WHEN (vt0.c1 IN ()) THEN (vt0.c1 IN ()) WHEN (NOT (vt0.c1)) THEN ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) ELSE (+ (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)AND(((vt0.c1)<(NULL)))))OR(CAST(vt0.c1 AS BLOB))))AND(CASE vt0.c1  WHEN x'' THEN NULL END)))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND ((vt0.c0 IN ())))  NULLS FIRST, CASE WHEN (+ (vt0.c0)) THEN '0.3287767470047691' WHEN (vt0.c1 IN ()) THEN (vt0.c1 IN ()) WHEN (NOT (vt0.c1)) THEN ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) ELSE (+ (vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)AND(((vt0.c1)<(NULL)))))OR(CAST(vt0.c1 AS BLOB))))AND(CASE vt0.c1  WHEN x'' THEN NULL END)))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND ((vt0.c0 IN ())))  NULLS FIRST, CASE WHEN (+ (vt0.c0)) THEN '0.3287767470047691' WHEN (vt0.c1 IN ()) THEN (vt0.c1 IN ()) WHEN (NOT (vt0.c1)) THEN ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) ELSE (+ (vt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c1))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) ORDER BY CAST((vt0.c1 IN ()) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt0.c1))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN ()) AS INTEGER) ASC);
SELECT ALL * FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c1))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) ORDER BY CAST((vt0.c1 IN ()) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt0.c1))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN ()) AS INTEGER) ASC);
SELECT ALL * FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c1))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) ORDER BY CAST((vt0.c1 IN ()) AS INTEGER) ASC;
